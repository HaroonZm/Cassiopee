================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

# On modélise chaque forceur comme un nœud qui peut soulever son voisin de gauche ou de droite selon les conditions.
# Le but est de former des piles en respectant les contraintes, et minimiser le nombre de piles (personnes au sol).

# Approche :
# - On modélise le problème comme un graphe où chaque forceur peut potentiellement soulever un ou plusieurs autres adjacents.
# - On cherche à "empiler" les forceurs au maximum, pour minimiser les racines des piles.
# - Utiliser une méthode de programmation dynamique basée sur la position dans la liste et les possibilités d'empilement d'un segment.
# - Ici, la condition empêche un forceur de soulever deux voisins simultanément, donc chaque pile est une chaîne simple.
# - On peut modéliser ça comme un problème de regroupement en sous-chaînes où chaque sous-chaîne est formée de forceurs empilés.
# - On va utiliser un DP où dp[i] = nombre minimal de piles pour couvrir les forceurs de i à N-1.
# - Pour chaque position i, on teste de faire une pile allant de i à j (j>=i), en vérifiant si l'empilement est valide.
# - La validation consiste à vérifier que chaque forceur peut soulever le suivant dans la pile.
# - Le poids total empilé doit respecter les capacités de levage.

# Implémentation détaillée ci-dessous :

N = int(sys.stdin.readline())
# capacities[i]: capacité max de levage du i-ème forceur
# weights[i]: poids du i-ème forceur
capacities = []
weights = []
for _ in range(N):
    c, w = map(int, sys.stdin.readline().split())
    capacities.append(c)
    weights.append(w)

# Pré-calcul des préfixes de poids pour obtenir rapidement le poids total d'un segment
prefix_weights = [0] * (N+1)
for i in range(N):
    prefix_weights[i+1] = prefix_weights[i] + weights[i]

# Fonction qui vérifie si l'on peut former une pile continue de forceurs de i à j (inclus)
# dans l'ordre i au sol, i+1 au-dessus, ..., j tout en haut.
def can_stack(i, j):
    # Pour valider qu'un empilement est possible, il faut que pour chaque forceur du bas
    # jusqu'à l'avant-dernier (du rang i à j-1), il puisse soulever la personne au-dessus.

    # En pile, le forceur i soulève i+1, i+1 soulève i+2, etc.
    # Le poids total à soulever par le forceur à la position k est le poids de tous les forceurs au-dessus (k+1 à j).
    # On doit vérifier: capacities[k] >= poids total de forceurs k+1 à j

    for k in range(i, j):
        # poids à soulever par k = somme poids indices (k+1) ... j
        total_weight = prefix_weights[j+1] - prefix_weights[k+1]
        if total_weight > capacities[k]:
            return False
    return True

# DP : dp[i] = nombre minimal de piles pour couvrir forceurs à partir de i
dp = [float('inf')] * (N+1)
dp[N] = 0  # aucun forceur à empiler après N-1

for i in range(N-1, -1, -1):
    # On essaie toutes les piles possibles qui commencent en i
    for j in range(i, N):
        if can_stack(i, j):
            # Si on peut empiler forceurs de i à j en une pile,
            # alors on ajoute 1 pile pour ce segment + dp[j+1]
            dp[i] = min(dp[i], 1 + dp[j+1])
        else:
            # Impossible d'empiler plus haut, arrêtons d'étendre la pile
            break

# dp[0] est la réponse : minimale des piles pour toute la rangée
print(dp[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' On' (ID: 2160)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.27507224678993225
    2. 'def' → logprob: -1.5250722169876099
    3. 'd' → logprob: -4.52507209777832
    4. ' recursion' → logprob: -5.65007209777832
    5. 'Rec' → logprob: -6.52507209777832
    6. 'de' → logprob: -6.90007209777832
    7. ' stack' → logprob: -7.02507209777832
    8. ' sys' → logprob: -7.15007209777832
    9. 'import' → logprob: -7.40007209777832
    10. ' d' → logprob: -7.65007209777832

Token 15: ' mod' (ID: 1812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0219984482973814
    2. 'line' → logprob: -3.896998405456543
    3. 'ly' → logprob: -7.271998405456543
    4. 'eline' → logprob: -7.896998405456543
    5. 'el' → logprob: -8.521998405456543
    6. 'es' → logprob: -10.646998405456543
    7. 'the' → logprob: -10.646998405456543
    8. 'l' → logprob: -11.146998405456543
    9. 'ce' → logprob: -11.146998405456543
    10. 'eil' → logprob: -11.146998405456543

Token 16: 'él' (ID: 6778)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6424153447151184
    2. '=' → logprob: -0.8924153447151184
    3. '\' → logprob: -4.267415523529053
    4. '_' → logprob: -4.517415523529053
    5. 'ular' → logprob: -4.517415523529053
    6. 'u' → logprob: -4.892415523529053
    7. 'ule' → logprob: -5.142415523529053
    8. ' ' → logprob: -5.267415523529053
    9. 'ulus' → logprob: -5.767415523529053
    10. ':' → logprob: -6.642415523529053

Token 17: 'ise' (ID: 1096)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5425411462783813
    2. 'è' → logprob: -1.5425411462783813
    3. 'e' → logprob: -1.9175411462783813
    4. 'èle' → logprob: -3.917541027069092
    5. '```' → logprob: -4.792541027069092
    6. 'es' → logprob: -5.042541027069092
    7. 'a' → logprob: -5.292541027069092
    8. 'él' → logprob: -5.917541027069092
    9. 'isation' → logprob: -6.042541027069092
    10. '\' → logprob: -6.542541027069092

Token 18: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9351121187210083
    2. ' la' → logprob: -1.0601121187210083
    3. ' ' → logprob: -2.1851119995117188
    4. ' un' → logprob: -2.9351119995117188
    5. ' les' → logprob: -3.9351119995117188
    6. ' le' → logprob: -4.185111999511719
    7. ' une' → logprob: -4.310111999511719
    8. ' ' → logprob: -4.560111999511719
    9. '_' → logprob: -5.185111999511719
    10. 'l' → logprob: -5.560111999511719

Token 19: ' force' (ID: 9578)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.44121503829956055
    2. ' noe' → logprob: -2.1912150382995605
    3. ' grap' → logprob: -2.6912150382995605
    4. 'gr' → logprob: -2.8162150382995605
    5. ' arbre' → logprob: -3.5662150382995605
    6. '```' → logprob: -4.8162150382995605
    7. 'fonction' → logprob: -5.0662150382995605
    8. ' somm' → logprob: -5.1912150382995605
    9. ' problème' → logprob: -5.3162150382995605
    10. ' ' → logprob: -5.3162150382995605

Token 20: 'ur' (ID: 330)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5773805975914001
    2. ',' → logprob: -2.827380657196045
    3. ':' → logprob: -2.827380657196045
    4. '\' → logprob: -2.827380657196045
    5. '```' → logprob: -3.202380657196045
    6. ' comme' → logprob: -3.702380657196045
    7. '.' → logprob: -3.827380657196045
    8. ' ' → logprob: -3.952380657196045
    9. ' :' → logprob: -4.077380657196045
    10. 'comme' → logprob: -4.077380657196045

Token 21: ' comme' (ID: 7971)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.250596523284912
    2. ',' → logprob: -1.375596523284912
    3. '.' → logprob: -1.750596523284912
    4. '#' → logprob: -1.875596523284912
    5. 's' → logprob: -3.625596523284912
    6. '\' → logprob: -3.750596523284912
    7. ''s' → logprob: -3.875596523284912
    8. ' :' → logprob: -4.375596523284912
    9. '```' → logprob: -4.875596523284912
    10. 'class' → logprob: -5.375596523284912

Token 22: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.31297600269317627
    2. 'une' → logprob: -1.9379760026931763
    3. ' un' → logprob: -2.1879758834838867
    4. ' a' → logprob: -5.312975883483887
    5. 'un' → logprob: -5.437975883483887
    6. 'a' → logprob: -5.812975883483887
    7. ' des' → logprob: -9.062975883483887
    8. ''une' → logprob: -9.687975883483887
    9. ' an' → logprob: -10.312975883483887
    10. '```' → logprob: -10.687975883483887

Token 23: ' n' (ID: 297)
  Prédit: ' grap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -1.4483569860458374
    2. ' noe' → logprob: -1.6983569860458374
    3. ' n' → logprob: -1.8233569860458374
    4. 'fonction' → logprob: -2.573357105255127
    5. 'n' → logprob: -2.698357105255127
    6. ' sommet' → logprob: -2.823357105255127
    7. ' entier' → logprob: -3.323357105255127
    8. ' fonction' → logprob: -4.010857105255127
    9. 'ent' → logprob: -4.073357105255127
    10. 's' → logprob: -4.573357105255127

Token 24: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.005763353314250708
    2. 'o' → logprob: -5.380763530731201
    3. 'oe' → logprob: -8.380763053894043
    4. '\' → logprob: -8.630763053894043
    5. '```' → logprob: -8.630763053894043
    6. '#' → logprob: -9.380763053894043
    7. '-' → logprob: -9.880763053894043
    8. '_' → logprob: -10.130763053894043
    9. ''œ' → logprob: -10.130763053894043
    10. 'e' → logprob: -10.505763053894043

Token 25: 'ud' (ID: 527)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3971342146396637
    2. 'ud' → logprob: -1.3971341848373413
    3. 'u' → logprob: -3.022134304046631
    4. 'œ' → logprob: -4.147134304046631
    5. '```' → logprob: -5.772134304046631
    6. 't' → logprob: -6.272134304046631
    7. '\' → logprob: -6.397134304046631
    8. '' → logprob: -6.522134304046631
    9. '#' → logprob: -6.897134304046631
    10. 'e' → logprob: -7.397134304046631

Token 26: ' qui' (ID: 2780)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.478468120098114
    2. '.' → logprob: -1.4784681797027588
    3. ' de' → logprob: -2.353468179702759
    4. 's' → logprob: -3.978468179702759
    5. ' ,' → logprob: -4.97846794128418
    6. ' dans' → logprob: -5.35346794128418
    7. ' du' → logprob: -5.60346794128418
    8. ' class' → logprob: -6.10346794128418
    9. 'class' → logprob: -6.10346794128418
    10. ':' → logprob: -6.35346794128418

Token 27: ' peut' (ID: 9216)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6809863448143005
    2. ' a' → logprob: -1.1809864044189453
    3. ' possède' → logprob: -2.6809864044189453
    4. 's' → logprob: -3.9309864044189453
    5. ' peut' → logprob: -4.430986404418945
    6. 'poss' → logprob: -4.930986404418945
    7. 'n' → logprob: -5.055986404418945
    8. ' doit' → logprob: -5.180986404418945
    9. ' n' → logprob: -5.430986404418945
    10. ' pourra' → logprob: -5.430986404418945

Token 28: ' sou' (ID: 4069)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -1.0803788900375366
    2. ' for' → logprob: -2.080379009246826
    3. ' pousser' → logprob: -2.330379009246826
    4. ' être' → logprob: -2.705379009246826
    5. 'forcer' → logprob: -2.830379009246826
    6. ' avoir' → logprob: -3.205379009246826
    7. 'for' → logprob: -3.330379009246826
    8. ' se' → logprob: -3.955379009246826
    9. 'import' → logprob: -4.205379009246826
    10. ' appliquer' → logprob: -4.205379009246826

Token 29: 'lever' (ID: 43558)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.1837502270936966
    2. 'tenir' → logprob: -2.3087501525878906
    3. 't' → logprob: -3.4337501525878906
    4. 'mis' → logprob: -4.683750152587891
    5. 'hait' → logprob: -5.433750152587891
    6. 'm' → logprob: -5.808750152587891
    7. 'ple' → logprob: -6.058750152587891
    8. 'hai' → logprob: -6.058750152587891
    9. 'ff' → logprob: -6.183750152587891
    10. 'lever' → logprob: -6.683750152587891

Token 30: ' son' (ID: 2391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8137712478637695
    2. '_' → logprob: -1.9387712478637695
    3. ' un' → logprob: -1.9387712478637695
    4. 'le' → logprob: -2.3137712478637695
    5. ' une' → logprob: -2.6887712478637695
    6. 'une' → logprob: -2.8137712478637695
    7. ',' → logprob: -2.9387712478637695
    8. '.' → logprob: -3.0637712478637695
    9. 'un' → logprob: -3.0637712478637695
    10. 'son' → logprob: -3.8137712478637695

Token 31: ' voisin' (ID: 145411)
  Prédit: ' voisin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -0.5638214349746704
    2. '```' → logprob: -1.8138214349746704
    3. 'vo' → logprob: -2.813821315765381
    4. ' propre' → logprob: -2.813821315765381
    5. ' poids' → logprob: -3.313821315765381
    6. ' bras' → logprob: -3.438821315765381
    7. ' enfant' → logprob: -4.563821315765381
    8. ' ```' → logprob: -4.813821315765381
    9. 'po' → logprob: -5.626321315765381
    10. 'parent' → logprob: -5.688821315765381

Token 32: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1178310215473175
    2. ',' → logprob: -2.742830991744995
    3. '(s' → logprob: -3.867830991744995
    4. '.' → logprob: -4.117831230163574
    5. '```' → logprob: -6.242831230163574
    6. '(' → logprob: -6.617831230163574
    7. ''s' → logprob: -6.742831230163574
    8. ' de' → logprob: -7.242831230163574
    9. ' gauche' → logprob: -7.742831230163574
    10. '[' → logprob: -7.992831230163574

Token 33: ' gauche' (ID: 58367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.570827841758728
    2. ' ' → logprob: -1.820827841758728
    3. ' l' → logprob: -2.0708279609680176
    4. '```' → logprob: -2.5708279609680176
    5. ' force' → logprob: -2.6958279609680176
    6. ' droite' → logprob: -2.8208279609680176
    7. ' gauche' → logprob: -2.8208279609680176
    8. ' code' → logprob: -3.4458279609680176
    9. 's' → logprob: -3.5708279609680176
    10. 'd' → logprob: -4.070827960968018

Token 34: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4659152925014496
    2. '.' → logprob: -1.215915322303772
    3. 's' → logprob: -3.3409152030944824
    4. ')' → logprob: -3.9659152030944824
    5. ' ou' → logprob: -5.215915203094482
    6. ' ,' → logprob: -5.715915203094482
    7. '(s' → logprob: -5.965915203094482
    8. ' ' → logprob: -6.715915203094482
    9. ' (' → logprob: -6.715915203094482
    10. ''s' → logprob: -6.965915203094482

Token 35: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.4416508674621582
    2. ' droite' → logprob: -1.5666508674621582
    3. ' son' → logprob: -1.8166508674621582
    4. 'de' → logprob: -2.066650867462158
    5. 'dro' → logprob: -2.691650867462158
    6. '#' → logprob: -2.691650867462158
    7. 'son' → logprob: -3.316650867462158
    8. '```' → logprob: -3.316650867462158
    9. ' ' → logprob: -3.691650867462158
    10. ' droit' → logprob: -4.191650867462158

Token 36: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.08074866980314255
    2. 'dro' → logprob: -2.7057485580444336
    3. '```' → logprob: -5.080748558044434
    4. ' droit' → logprob: -6.955748558044434
    5. ' ' → logprob: -7.205748558044434
    6. ' sa' → logprob: -7.330748558044434
    7. ' dro' → logprob: -7.705748558044434
    8. ' son' → logprob: -7.830748558044434
    9. '-dro' → logprob: -8.205748558044434
    10. ' la' → logprob: -8.830748558044434

Token 37: ' selon' (ID: 27571)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6009072661399841
    2. '.' → logprob: -0.8509072661399841
    3. '```' → logprob: -4.350907325744629
    4. ' ,' → logprob: -5.225907325744629
    5. ',
' → logprob: -6.475907325744629
    6. '\n' → logprob: -6.975907325744629
    7. '\' → logprob: -7.600907325744629
    8. 's' → logprob: -7.725907325744629
    9. ' .' → logprob: -7.725907325744629
    10. '#' → logprob: -7.725907325744629

Token 38: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5891523957252502
    2. ' la' → logprob: -1.7141523361206055
    3. ' ' → logprob: -2.0891523361206055
    4. 'l' → logprob: -3.4641523361206055
    5. ' son' → logprob: -3.8391523361206055
    6. ' sa' → logprob: -4.0891523361206055
    7. 'certain' → logprob: -4.5891523361206055
    8. '<|end|>' → logprob: -4.5891523361206055
    9. ' leur' → logprob: -4.9641523361206055
    10. ' certaines' → logprob: -5.3391523361206055

Token 39: ' conditions' (ID: 6409)
  Prédit: ' contraintes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.8752551674842834
    2. ' règles' → logprob: -1.5002551078796387
    3. ' conditions' → logprob: -2.3752551078796387
    4. ' critères' → logprob: -3.5002551078796387
    5. '```' → logprob: -3.7502551078796387
    6. 'conditions' → logprob: -4.187755107879639
    7. ' besoins' → logprob: -4.375255107879639
    8. ' cas' → logprob: -4.437755107879639
    9. '#' → logprob: -4.625255107879639
    10. ' poids' → logprob: -4.812755107879639

Token 40: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.493770718574524
    2. '```' → logprob: -1.493770718574524
    3. '\n' → logprob: -1.993770718574524
    4. 'def' → logprob: -1.993770718574524
    5. '\' → logprob: -2.1187705993652344
    6. ',' → logprob: -2.7437705993652344
    7. '#' → logprob: -3.6187705993652344
    8. ':' → logprob: -3.8687705993652344
    9. 'import' → logprob: -3.8687705993652344
    10. '
' → logprob: -5.368770599365234

Token 41: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1607278287410736
    2. '
' → logprob: -2.1607277393341064
    3. '

' → logprob: -4.5357279777526855
    4. '```' → logprob: -4.7857279777526855
    5. '\' → logprob: -5.7857279777526855
    6. 'class' → logprob: -5.9107279777526855
    7. 'import' → logprob: -6.4107279777526855
    8. '.' → logprob: -6.5357279777526855
    9. '
' → logprob: -6.5357279777526855
    10. '\n' → logprob: -6.7857279777526855

Token 42: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.051489174365997314
    2. 'class' → logprob: -4.426489353179932
    3. '#' → logprob: -4.926489353179932
    4. ' def' → logprob: -5.051489353179932
    5. ' 
' → logprob: -5.176489353179932
    6. 'import' → logprob: -5.301489353179932
    7. '```' → logprob: -5.801489353179932
    8. '
' → logprob: -5.926489353179932
    9. ' 

' → logprob: -6.426489353179932
    10. '\' → logprob: -6.676489353179932

Token 43: ' but' (ID: 889)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5613219141960144
    2. ' ' → logprob: -1.6863219738006592
    3. ' #' → logprob: -3.186321973800659
    4. ' n' → logprob: -3.686321973800659
    5. ' def' → logprob: -4.06132173538208
    6. 'n' → logprob: -4.31132173538208
    7. ' problème' → logprob: -4.43632173538208
    8. ' voisin' → logprob: -4.56132173538208
    9. ' graph' → logprob: -4.68632173538208
    10. ' déplacement' → logprob: -4.68632173538208

Token 44: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.20262573659420013
    2. ' ' → logprob: -1.9526257514953613
    3. ':' → logprob: -4.577625751495361
    4. ' ' → logprob: -4.827625751495361
    5. ' is' → logprob: -4.952625751495361
    6. ' étant' → logprob: -5.452625751495361
    7. ' de' → logprob: -6.202625751495361
    8. 'est' → logprob: -6.452625751495361
    9. '=' → logprob: -6.452625751495361
    10. ' =' → logprob: -6.577625751495361

Token 45: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4914616644382477
    2. 'd' → logprob: -1.8664616346359253
    3. ' d' → logprob: -1.9914616346359253
    4. 'de' → logprob: -2.366461753845215
    5. ' ' → logprob: -6.366461753845215
    6. ' ' → logprob: -7.866461753845215
    7. '_de' → logprob: -7.991461753845215
    8. '_d' → logprob: -8.491461753845215
    9. '#' → logprob: -8.866461753845215
    10. ' que' → logprob: -9.741461753845215

Token 46: ' former' (ID: 9254)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.4289923906326294
    2. 'sou' → logprob: -1.8039923906326294
    3. 'sim' → logprob: -2.42899227142334
    4. 'lever' → logprob: -2.67899227142334
    5. 'min' → logprob: -2.80399227142334
    6. 'faire' → logprob: -3.05399227142334
    7. ' trouver' → logprob: -3.17899227142334
    8. 'max' → logprob: -3.42899227142334
    9. 's' → logprob: -3.42899227142334
    10. 'p' → logprob: -3.92899227142334

Token 47: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.21579797565937042
    2. ' un' → logprob: -2.3407979011535645
    3. 'une' → logprob: -2.4657979011535645
    4. ' des' → logprob: -5.5907979011535645
    5. ' la' → logprob: -5.9657979011535645
    6. 'un' → logprob: -6.0907979011535645
    7. ' ' → logprob: -6.4657979011535645
    8. 'des' → logprob: -7.5907979011535645
    9. ' l' → logprob: -8.090798377990723
    10. ' ' → logprob: -8.215798377990723

Token 48: ' piles' (ID: 90498)
  Prédit: ' groupes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -0.6350637078285217
    2. ' chaînes' → logprob: -1.010063648223877
    3. ' group' → logprob: -3.385063648223877
    4. ' équipes' → logprob: -5.260063648223877
    5. ' "' → logprob: -5.260063648223877
    6. ' p' → logprob: -5.385063648223877
    7. 'group' → logprob: -5.760063648223877
    8. '_' → logprob: -5.822563648223877
    9. ' chain' → logprob: -5.885063648223877
    10. 'chain' → logprob: -5.947563648223877

Token 49: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4576903283596039
    2. ',' → logprob: -2.2076902389526367
    3. '
' → logprob: -2.3326902389526367
    4. '.' → logprob: -3.0826902389526367
    5. 'import' → logprob: -3.3326902389526367
    6. '<|end|>' → logprob: -4.457690238952637
    7. '_' → logprob: -4.957690238952637
    8. ' de' → logprob: -4.957690238952637
    9. '```' → logprob: -5.082690238952637
    10. 's' → logprob: -5.082690238952637

Token 50: ' respect' (ID: 5618)
  Prédit: ' emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' emp' → logprob: -0.6266859173774719
    2. ' hauteur' → logprob: -1.5016858577728271
    3. ' respect' → logprob: -3.126685857772827
    4. '```' → logprob: -3.876685857772827
    5. ' utilisant' → logprob: -4.126686096191406
    6. 's' → logprob: -4.251686096191406
    7. ' ' → logprob: -4.251686096191406
    8. ' fonction' → logprob: -4.376686096191406
    9. ' s' → logprob: -4.501686096191406
    10. ' les' → logprob: -5.001686096191406

Token 51: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.001765501219779253
    2. 'ect' → logprob: -6.626765727996826
    3. '#' → logprob: -8.876765251159668
    4. '```' → logprob: -9.001765251159668
    5. 'tant' → logprob: -9.751765251159668
    6. 'er' → logprob: -10.001765251159668
    7. 'ent' → logprob: -10.376765251159668
    8. 'e' → logprob: -11.751765251159668
    9. 'ection' → logprob: -11.876765251159668
    10. 'uant' → logprob: -13.001765251159668

Token 52: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3727187216281891
    2. ' la' → logprob: -1.7477186918258667
    3. ' l' → logprob: -2.2477188110351562
    4. 'les' → logprob: -4.997718811035156
    5. ' leurs' → logprob: -4.997718811035156
    6. ' le' → logprob: -5.122718811035156
    7. ' des' → logprob: -5.997718811035156
    8. ' leur' → logprob: -5.997718811035156
    9. ' ' → logprob: -6.247718811035156
    10. ' ' → logprob: -6.747718811035156

Token 53: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.7933266162872314
    2. ' règles' → logprob: -1.0433266162872314
    3. ' conditions' → logprob: -1.9183266162872314
    4. 'conditions' → logprob: -4.543326377868652
    5. ' cons' → logprob: -5.293326377868652
    6. ' ' → logprob: -5.293326377868652
    7. ' critères' → logprob: -5.418326377868652
    8. 'r' → logprob: -5.980826377868652
    9. ' constraints' → logprob: -6.480826377868652
    10. '_' → logprob: -6.543326377868652

Token 54: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1863957643508911
    2. '```' → logprob: -1.6863957643508911
    3. '
' → logprob: -1.9363957643508911
    4. '#' → logprob: -2.0613956451416016
    5. '.' → logprob: -2.5613956451416016
    6. 'import' → logprob: -2.9363956451416016
    7. ':' → logprob: -3.3113956451416016
    8. ',' → logprob: -3.4363956451416016
    9. '

' → logprob: -4.686395645141602
    10. '\' → logprob: -5.311395645141602

Token 55: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34649088978767395
    2. 'def' → logprob: -2.4714908599853516
    3. '#' → logprob: -3.3464908599853516
    4. ' afin' → logprob: -3.9714908599853516
    5. ' and' → logprob: -4.096490859985352
    6. ' en' → logprob: -4.096490859985352
    7. '.' → logprob: -4.221490859985352
    8. ' et' → logprob: -4.346490859985352
    9. ',' → logprob: -4.346490859985352
    10. ' def' → logprob: -4.721490859985352

Token 56: ' minim' (ID: 23874)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1185311079025269
    2. ' non' → logprob: -2.3685312271118164
    3. ' ensuite' → logprob: -2.6185312271118164
    4. ' on' → logprob: -2.8685312271118164
    5. ' continuer' → logprob: -3.1185312271118164
    6. ' #' → logprob: -3.1185312271118164
    7. ' ainsi' → logprob: -3.2435312271118164
    8. 'def' → logprob: -3.2435312271118164
    9. ' en' → logprob: -3.2435312271118164
    10. ' d' → logprob: -3.6185312271118164

Token 57: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.11694200336933136
    2. 's' → logprob: -2.3669419288635254
    3. 'm' → logprob: -5.116941928863525
    4. '#' → logprob: -5.116941928863525
    5. 'um' → logprob: -6.366941928863525
    6. '```' → logprob: -7.116941928863525
    7. 'mum' → logprob: -7.116941928863525
    8. 'se' → logprob: -8.241942405700684
    9. 'iser' → logprob: -8.491942405700684
    10. 'def' → logprob: -8.741942405700684

Token 58: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8542829751968384
    2. ' la' → logprob: -1.3542829751968384
    3. 'l' → logprob: -2.354282855987549
    4. ' le' → logprob: -2.604282855987549
    5. 'la' → logprob: -2.729282855987549
    6. ' l' → logprob: -2.854282855987549
    7. ' ' → logprob: -4.604282855987549
    8. 'leur' → logprob: -4.854282855987549
    9. '_le' → logprob: -6.354282855987549
    10. ' ' → logprob: -6.479282855987549

Token 59: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.4756397306919098
    2. 'nombre' → logprob: -0.9756397008895874
    3. ' ' → logprob: -7.600639820098877
    4. '_nombre' → logprob: -8.350639343261719
    5. ' nombres' → logprob: -8.725639343261719
    6. ' ' → logprob: -9.475639343261719
    7. '```' → logprob: -9.475639343261719
    8. 'nb' → logprob: -9.725639343261719
    9. 's' → logprob: -9.725639343261719
    10. ' nb' → logprob: -9.975639343261719

Token 60: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6895692348480225
    2. ' d' → logprob: -0.8145692348480225
    3. '_' → logprob: -3.9395692348480225
    4. ' ' → logprob: -3.9395692348480225
    5. 'd' → logprob: -5.439569473266602
    6. ' ' → logprob: -5.814569473266602
    7. '_de' → logprob: -6.064569473266602
    8. 'de' → logprob: -6.314569473266602
    9. ' total' → logprob: -6.564569473266602
    10. '_d' → logprob: -6.814569473266602

Token 61: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.794990062713623
    2. ' piles' → logprob: -0.794990062713623
    3. ' p' → logprob: -3.919990062713623
    4. ' ' → logprob: -4.044990062713623
    5. 'pile' → logprob: -4.044990062713623
    6. ' ' → logprob: -4.794990062713623
    7. 's' → logprob: -5.169990062713623
    8. 'pil' → logprob: -5.544990062713623
    9. ' pili' → logprob: -5.857490062713623
    10. ' pile' → logprob: -6.044990062713623

Token 62: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8404293060302734
    2. 'def' → logprob: -0.9654293060302734
    3. '

' → logprob: -2.5904293060302734
    4. '```' → logprob: -2.9654293060302734
    5. '\' → logprob: -3.4654293060302734
    6. 'import' → logprob: -4.590429306030273
    7. '#' → logprob: -4.715429306030273
    8. '' → logprob: -5.090429306030273
    9. '\n' → logprob: -6.340429306030273
    10. '
' → logprob: -6.965429306030273

Token 63: 'person' (ID: 14118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02104453183710575
    2. ').' → logprob: -3.8960444927215576
    3. ' )' → logprob: -8.521044731140137
    4. '.' → logprob: -9.021044731140137
    5. '.)' → logprob: -9.646044731140137
    6. 'p' → logprob: -10.646044731140137
    7. ' ' → logprob: -11.021044731140137
    8. ')n' → logprob: -11.521044731140137
    9. 'pour' → logprob: -11.771044731140137
    10. ',' → logprob: -11.771044731140137

Token 64: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.0278385728597641
    2. 'n' → logprob: -3.6528384685516357
    3. 'ne' → logprob: -7.402838706970215
    4. 'nelles' → logprob: -8.402838706970215
    5. '```' → logprob: -8.527838706970215
    6. 'nel' → logprob: -9.277838706970215
    7. 'nels' → logprob: -9.527838706970215
    8. 'es' → logprob: -9.777838706970215
    9. 's' → logprob: -9.902838706970215
    10. '#' → logprob: -10.152838706970215

Token 65: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021571071818470955
    2. ' )' → logprob: -4.021571159362793
    3. ').' → logprob: -6.521571159362793
    4. ' ' → logprob: -7.646571159362793
    5. 'import' → logprob: -8.021571159362793
    6. 's' → logprob: -8.396571159362793
    7. '_' → logprob: -9.021571159362793
    8. '_needed' → logprob: -9.021571159362793
    9. ',' → logprob: -9.271571159362793
    10. ' nécessaires' → logprob: -9.646571159362793

Token 66: ' sol' (ID: 1887)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.27459558844566345
    2. 'dess' → logprob: -2.1495954990386963
    3. '-dessus' → logprob: -3.8995954990386963
    4. '```' → logprob: -4.024595737457275
    5. 'sol' → logprob: -4.399595737457275
    6. ' sommet' → logprob: -5.024595737457275
    7. 'minimum' → logprob: -5.149595737457275
    8. 'pl' → logprob: -5.274595737457275
    9. 'bas' → logprob: -5.274595737457275
    10. 'd' → logprob: -5.399595737457275

Token 67: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044544681441038847
    2. 's' → logprob: -8.625445365905762
    3. ' )' → logprob: -9.375445365905762
    4. ')
' → logprob: -9.500445365905762
    5. ').' → logprob: -10.500445365905762
    6. 'e' → logprob: -11.125445365905762
    7. '.' → logprob: -11.875445365905762
    8. '(' → logprob: -12.375445365905762
    9. '```' → logprob: -12.500445365905762
    10. '_' → logprob: -12.625445365905762

Token 68: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14256145060062408
    2. '
' → logprob: -2.642561435699463
    3. '#' → logprob: -3.642561435699463
    4. '```' → logprob: -4.267561435699463
    5. ':' → logprob: -4.767561435699463
    6. '\' → logprob: -6.017561435699463
    7. 'import' → logprob: -6.017561435699463
    8. 'd' → logprob: -6.142561435699463
    9. '

' → logprob: -6.767561435699463
    10. ')' → logprob: -6.892561435699463

Token 69: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005640312563627958
    2. 'from' → logprob: -5.505640506744385
    3. 'import' → logprob: -7.630640506744385
    4. ' def' → logprob: -7.630640506744385
    5. 'class' → logprob: -8.505640029907227
    6. '#' → logprob: -9.005640029907227
    7. 'n' → logprob: -9.255640029907227
    8. 'd' → logprob: -10.130640029907227
    9. ' from' → logprob: -10.130640029907227
    10. '```' → logprob: -10.380640029907227

Token 70: 'che' (ID: 926)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04618872329592705
    2. 'xim' → logprob: -4.421188831329346
    3. 'che' → logprob: -4.671188831329346
    4. '#' → logprob: -5.046188831329346
    5. 'xi' → logprob: -5.546188831329346
    6. 'xima' → logprob: -5.546188831329346
    7. 'ach' → logprob: -5.921188831329346
    8. 'ch' → logprob: -6.046188831329346
    9. 'ches' → logprob: -6.421188831329346
    10. '```' → logprob: -7.421188831329346

Token 71: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8442077040672302
    2. 'def' → logprob: -1.094207763671875
    3. ' =' → logprob: -2.469207763671875
    4. 'dfs' → logprob: -2.969207763671875
    5. ' :' → logprob: -3.094207763671875
    6. 'dp' → logprob: -4.219207763671875
    7. '=' → logprob: -4.969207763671875
    8. 'd' → logprob: -5.344207763671875
    9. ' ' → logprob: -5.469207763671875
    10. '#' → logprob: -5.719207763671875

Token 72: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.035431869328022
    2. 'dp' → logprob: -3.6604318618774414
    3. ' def' → logprob: -5.660431861877441
    4. 'from' → logprob: -5.910431861877441
    5. 'dfs' → logprob: -6.160431861877441
    6. '#' → logprob: -7.910431861877441
    7. ' dp' → logprob: -8.910431861877441
    8. 'memo' → logprob: -9.785431861877441
    9. ' dfs' → logprob: -9.910431861877441
    10. 'import' → logprob: -9.910431861877441

Token 73: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17325624823570251
    2. 'dp' → logprob: -2.6732561588287354
    3. ' def' → logprob: -2.9232561588287354
    4. 'dfs' → logprob: -4.4232563972473145
    5. 'from' → logprob: -5.0482563972473145
    6. 'd' → logprob: -5.1732563972473145
    7. '#' → logprob: -5.1732563972473145
    8. ' dp' → logprob: -5.9232563972473145
    9. ' dfs' → logprob: -6.6732563972473145
    10. ' from' → logprob: -7.1732563972473145

Token 74: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1819082498550415
    2. 'On' → logprob: -1.6819082498550415
    3. 'Util' → logprob: -2.181908130645752
    4. 'from' → logprob: -2.431908130645752
    5. ' utiliser' → logprob: -3.181908130645752
    6. 'dp' → logprob: -3.306908130645752
    7. 'import' → logprob: -3.306908130645752
    8. ' Util' → logprob: -3.556908130645752
    9. 'dfs' → logprob: -3.681908130645752
    10. '#' → logprob: -4.056908130645752

Token 75: ' mod' (ID: 1812)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.9322819113731384
    2. 'def' → logprob: -1.1822819709777832
    3. ' utilise' → logprob: -3.057281970977783
    4. ' a' → logprob: -4.057281970977783
    5. ' veut' → logprob: -4.057281970977783
    6. ' peut' → logprob: -4.182281970977783
    7. ' définit' → logprob: -4.557281970977783
    8. 'n' → logprob: -4.557281970977783
    9. 'dp' → logprob: -4.557281970977783
    10. 'va' → logprob: -4.682281970977783

Token 76: 'él' (ID: 6778)
  Prédit: 'odel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odel' → logprob: -0.26881155371665955
    2. 'od' → logprob: -1.643811583518982
    3. 'odule' → logprob: -3.8938114643096924
    4. 'él' → logprob: -4.5188117027282715
    5. 'é' → logprob: -5.0188117027282715
    6. 'èle' → logprob: -6.6438117027282715
    7. 'ont' → logprob: -7.8938117027282715
    8. 'or' → logprob: -7.8938117027282715
    9. 'ar' → logprob: -8.143811225891113
    10. 'ode' → logprob: -8.268811225891113

Token 77: 'ise' (ID: 1096)
  Prédit: 'èle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èle' → logprob: -0.07984799891710281
    2. 'ise' → logprob: -3.329848051071167
    3. 'ule' → logprob: -3.954848051071167
    4. 'ère' → logprob: -4.704847812652588
    5. 'è' → logprob: -5.204847812652588
    6. 'é' → logprob: -5.704847812652588
    7. 'èse' → logprob: -6.454847812652588
    8. 'ège' → logprob: -7.204847812652588
    9. 'le' → logprob: -7.329847812652588
    10. 'ève' → logprob: -7.829847812652588

Token 78: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.041935402899980545
    2. ' le' → logprob: -4.291935443878174
    3. ' les' → logprob: -4.666935443878174
    4. 'les' → logprob: -4.791935443878174
    5. ' la' → logprob: -5.916935443878174
    6. 'le' → logprob: -6.041935443878174
    7. ' un' → logprob: -6.791935443878174
    8. ' l' → logprob: -7.041935443878174
    9. 'une' → logprob: -7.291935443878174
    10. ' une' → logprob: -7.791935443878174

Token 79: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.20590399205684662
    2. 'pro' → logprob: -2.955904006958008
    3. 'gr' → logprob: -3.080904006958008
    4. ' grap' → logprob: -3.955904006958008
    5. ' graph' → logprob: -4.205904006958008
    6. 'proble' → logprob: -4.580904006958008
    7. 'graph' → logprob: -4.705904006958008
    8. ' probl' → logprob: -4.830904006958008
    9. 's' → logprob: -5.205904006958008
    10. ' probleme' → logprob: -5.955904006958008

Token 80: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.525604248046875
    2. ' en' → logprob: -1.400604248046875
    3. 'comme' → logprob: -3.025604248046875
    4. ' ' → logprob: -3.150604248046875
    5. ' par' → logprob: -3.400604248046875
    6. 'en' → logprob: -4.150604248046875
    7. ' avec' → logprob: -5.275604248046875
    8. 'par' → logprob: -5.775604248046875
    9. ' ' → logprob: -6.275604248046875
    10. ' sous' → logprob: -6.275604248046875

Token 81: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.13012510538101196
    2. 'un' → logprob: -2.505125045776367
    3. 'une' → logprob: -3.880125045776367
    4. ' une' → logprob: -4.005125045776367
    5. ' du' → logprob: -8.255125045776367
    6. ' ' → logprob: -8.630125045776367
    7. ' de' → logprob: -8.755125045776367
    8. ' ' → logprob: -8.755125045776367
    9. 'l' → logprob: -8.880125045776367
    10. 'de' → logprob: -9.130125045776367

Token 82: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.30105987191200256
    2. ' graph' → logprob: -2.0510599613189697
    3. 'gr' → logprob: -2.6760599613189697
    4. 'graph' → logprob: -3.3010599613189697
    5. ' problème' → logprob: -4.051059722900391
    6. 'pro' → logprob: -6.301059722900391
    7. ' chain' → logprob: -7.051059722900391
    8. ' arbre' → logprob: -7.051059722900391
    9. '"' → logprob: -7.301059722900391
    10. '```' → logprob: -7.801059722900391

Token 83: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.23357175290584564
    2. 'he' → logprob: -1.6085717678070068
    3. 'aphe' → logprob: -5.858571529388428
    4. 'hé' → logprob: -6.608571529388428
    5. ' ' → logprob: -6.983571529388428
    6. '#' → logprob: -7.733571529388428
    7. 'heme' → logprob: -7.733571529388428
    8. 'һ' → logprob: -8.108572006225586
    9. 'phe' → logprob: -8.483572006225586
    10. '\xca' → logprob: -8.608572006225586

Token 84: ' où' (ID: 15113)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6000485420227051
    2. ',' → logprob: -1.725048542022705
    3. ' dirig' → logprob: -2.225048542022705
    4. 'direct' → logprob: -3.600048542022705
    5. ' directed' → logprob: -3.600048542022705
    6. '-directed' → logprob: -3.850048542022705
    7. 'import' → logprob: -3.975048542022705
    8. '#' → logprob: -4.350048542022705
    9. 'orient' → logprob: -4.475048542022705
    10. ' où' → logprob: -4.975048542022705

Token 85: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.12345457077026367
    2. 'cha' → logprob: -3.1234545707702637
    3. 'les' → logprob: -3.3734545707702637
    4. ' les' → logprob: -3.7484545707702637
    5. 'une' → logprob: -6.123454570770264
    6. 'l' → logprob: -6.123454570770264
    7. 'ch' → logprob: -6.873454570770264
    8. ' cha' → logprob: -6.998454570770264
    9. 'des' → logprob: -7.248454570770264
    10. 'Chaque' → logprob: -7.248454570770264

Token 86: ' force' (ID: 9578)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.683214545249939
    2. 'n' → logprob: -1.433214545249939
    3. ' sommet' → logprob: -2.3082146644592285
    4. ' noe' → logprob: -3.1832146644592285
    5. ' node' → logprob: -3.4332146644592285
    6. 'person' → logprob: -3.5582146644592285
    7. '```' → logprob: -4.4332146644592285
    8. ' personne' → logprob: -4.8082146644592285
    9. 'node' → logprob: -4.9332146644592285
    10. ' force' → logprob: -6.2457146644592285

Token 87: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.2666674852371216
    2. 'u' → logprob: -1.5166674852371216
    3. 'r' → logprob: -5.516667366027832
    4. ' ' → logprob: -6.266667366027832
    5. ')' → logprob: -6.391667366027832
    6. '```' → logprob: -6.891667366027832
    7. 'n' → logprob: -7.391667366027832
    8. '   ' → logprob: -7.641667366027832
    9. 's' → logprob: -7.954167366027832
    10. 'f' → logprob: -8.079167366027832

Token 88: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.5778822302818298
    2. ' est' → logprob: -1.0778822898864746
    3. ' a' → logprob: -2.9528822898864746
    4. 'pe' → logprob: -4.202882289886475
    5. 'est' → logprob: -5.077882289886475
    6. 'a' → logprob: -5.452882289886475
    7. ' ' → logprob: -5.452882289886475
    8. ' représente' → logprob: -5.577882289886475
    9. ' n' → logprob: -6.077882289886475
    10. ' peux' → logprob: -6.202882289886475

Token 89: ' potent' (ID: 35668)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.41208064556121826
    2. ' sou' → logprob: -1.6620806455612183
    3. 'lever' → logprob: -2.912080764770508
    4. 's' → logprob: -3.537080764770508
    5. ' lever' → logprob: -3.662080764770508
    6. 'forcer' → logprob: -4.787080764770508
    7. ' pousser' → logprob: -4.787080764770508
    8. ' soul' → logprob: -6.037080764770508
    9. 'être' → logprob: -6.287080764770508
    10. ' soit' → logprob: -6.412080764770508

Token 90: 'iellement' (ID: 70958)
  Prédit: 'iellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iellement' → logprob: -0.001768947229720652
    2. '```' → logprob: -7.626769065856934
    3. 'ially' → logprob: -8.251769065856934
    4. 'ial' → logprob: -8.626769065856934
    5. 'ier' → logprob: -8.626769065856934
    6. 'uellement' → logprob: -9.001769065856934
    7. 'ielle' → logprob: -9.126769065856934
    8. 'iel' → logprob: -9.626769065856934
    9. 'iels' → logprob: -9.626769065856934
    10. 'er' → logprob: -9.876769065856934

Token 91: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.31187906861305237
    2. ' sou' → logprob: -1.56187903881073
    3. 's' → logprob: -3.8118791580200195
    4. 'lever' → logprob: -4.3118791580200195
    5. ' pousser' → logprob: -4.8118791580200195
    6. 'forcer' → logprob: -5.4368791580200195
    7. ' soul' → logprob: -5.8118791580200195
    8. ' relever' → logprob: -6.5618791580200195
    9. ' lever' → logprob: -6.8118791580200195
    10. 'prendre' → logprob: -7.6868791580200195

Token 92: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.26708394289016724
    2. 'l' → logprob: -1.5170838832855225
    3. '#' → logprob: -5.767084121704102
    4. 'lé' → logprob: -6.142084121704102
    5. 'p' → logprob: -6.767084121704102
    6. '_l' → logprob: -6.892084121704102
    7. 'lí' → logprob: -7.142084121704102
    8. '' → logprob: -7.642084121704102
    9. 'le' → logprob: -7.642084121704102
    10. '|' → logprob: -7.642084121704102

Token 93: ' un' (ID: 537)
  Prédit: ' son'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' son' → logprob: -0.44858452677726746
    2. 'son' → logprob: -1.0735845565795898
    3. ' ses' → logprob: -4.32358455657959
    4. 'le' → logprob: -7.07358455657959
    5. 'leur' → logprob: -7.07358455657959
    6. '<|end|>' → logprob: -7.32358455657959
    7. 'l' → logprob: -7.44858455657959
    8. ' celui' → logprob: -7.69858455657959
    9. 'adj' → logprob: -7.82358455657959
    10. '```' → logprob: -7.94858455657959

Token 94: ' ou' (ID: 2031)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.2484443485736847
    2. ' voisin' → logprob: -1.9984443187713623
    3. 'aut' → logprob: -3.2484443187713623
    4. ' autre' → logprob: -3.8734443187713623
    5. 'adj' → logprob: -4.748444557189941
    6. ' ' → logprob: -5.748444557189941
    7. '```' → logprob: -6.248444557189941
    8. ' vo' → logprob: -6.623444557189941
    9. 'force' → logprob: -6.748444557189941
    10. ' adjacent' → logprob: -6.873444557189941

Token 95: ' plusieurs' (ID: 20875)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.15593920648097992
    2. ' plusieurs' → logprob: -2.5309391021728516
    3. ' plus' → logprob: -3.4059391021728516
    4. '+' → logprob: -4.530939102172852
    5. 'd' → logprob: -6.280939102172852
    6. '```' → logprob: -6.405939102172852
    7. '#' → logprob: -6.530939102172852
    8. 'ses' → logprob: -6.530939102172852
    9. 'son' → logprob: -6.530939102172852
    10. 'de' → logprob: -6.655939102172852

Token 96: ' autres' (ID: 18701)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.20291313529014587
    2. 'vo' → logprob: -1.8279131650924683
    3. ' force' → logprob: -5.577913284301758
    4. 's' → logprob: -5.827913284301758
    5. ' voisin' → logprob: -5.827913284301758
    6. ' forces' → logprob: -6.202913284301758
    7. 'forces' → logprob: -6.452913284301758
    8. ' vo' → logprob: -6.452913284301758
    9. ' autres' → logprob: -6.827913284301758
    10. 'force' → logprob: -6.827913284301758

Token 97: ' adj' (ID: 20251)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6037805080413818
    2. 'force' → logprob: -1.6037805080413818
    3. 'nodes' → logprob: -2.228780508041382
    4. '(force' → logprob: -2.353780508041382
    5. ' nodes' → logprob: -2.853780508041382
    6. ' force' → logprob: -2.853780508041382
    7. '<|end|>' → logprob: -2.978780508041382
    8. ' voisins' → logprob: -2.978780508041382
    9. '.' → logprob: -3.353780508041382
    10. '```' → logprob: -4.103780746459961

Token 98: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.7454022169113159
    2. 'ac' → logprob: -1.245402216911316
    3. 'oints' → logprob: -1.495402216911316
    4. 'acency' → logprob: -4.4954023361206055
    5. 'a' → logprob: -6.3704023361206055
    6. '```' → logprob: -8.245402336120605
    7. 'oint' → logprob: -8.745402336120605
    8. 'acement' → logprob: -10.495402336120605
    9. ' ac' → logprob: -10.870402336120605
    10. '	ac' → logprob: -11.120402336120605

Token 99: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.0022378049325197935
    2. 'ent' → logprob: -6.127237796783447
    3. 'entes' → logprob: -10.002238273620605
    4. 't' → logprob: -12.502238273620605
    5. '#' → logprob: -13.377238273620605
    6. 'ente' → logprob: -14.377238273620605
    7. 'nts' → logprob: -14.627238273620605
    8. 'e' → logprob: -15.002238273620605
    9. '```' → logprob: -15.877238273620605
    10. 's' → logprob: -16.25223731994629

Token 100: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2734356224536896
    2. ',' → logprob: -1.7734355926513672
    3. 'import' → logprob: -3.273435592651367
    4. '#' → logprob: -4.898435592651367
    5. '```' → logprob: -5.023435592651367
    6. ')' → logprob: -5.648435592651367
    7. 's' → logprob: -6.273435592651367
    8. ' ,' → logprob: -6.398435592651367
    9. ',
' → logprob: -6.648435592651367
    10. ' ' → logprob: -6.773435592651367

Token 101: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0566054582595825
    2. 'def' → logprob: -1.4316054582595825
    3. '\' → logprob: -2.056605339050293
    4. '```' → logprob: -2.181605339050293
    5. '
' → logprob: -2.681605339050293
    6. '#' → logprob: -3.431605339050293
    7. '\n' → logprob: -3.806605339050293
    8. '.' → logprob: -4.806605339050293
    9. '' → logprob: -4.931605339050293
    10. '_' → logprob: -5.181605339050293

Token 102: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0873827189207077
    2. 'import' → logprob: -2.9623827934265137
    3. '
' → logprob: -4.212382793426514
    4. 'from' → logprob: -4.837382793426514
    5. '```' → logprob: -5.587382793426514
    6. '#' → logprob: -5.962382793426514
    7. '\' → logprob: -7.337382793426514
    8. ' 
' → logprob: -7.462382793426514
    9. '

' → logprob: -8.087382316589355
    10. ' def' → logprob: -8.587382316589355

Token 103: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.149087905883789
    2. 'def' → logprob: -1.649087905883789
    3. 'On' → logprob: -1.774087905883789
    4. '#' → logprob: -2.149087905883789
    5. 'import' → logprob: -2.274087905883789
    6. ' from' → logprob: -3.274087905883789
    7. ' On' → logprob: -3.524087905883789
    8. ' def' → logprob: -4.774087905883789
    9. ' import' → logprob: -4.899087905883789
    10. ' on' → logprob: -5.774087905883789

Token 104: ' cherche' (ID: 52345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2144795060157776
    2. ' ajoute' → logprob: -3.839479446411133
    3. 'from' → logprob: -3.964479446411133
    4. ' va' → logprob: -3.964479446411133
    5. ' utilise' → logprob: -3.964479446411133
    6. ' construit' → logprob: -4.464479446411133
    7. ' cherche' → logprob: -4.589479446411133
    8. ' continue' → logprob: -4.589479446411133
    9. 'cherche' → logprob: -5.089479446411133
    10. ' crée' → logprob: -5.089479446411133

Token 105: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06467496603727341
    2. 'à' → logprob: -3.0646748542785645
    3. ' un' → logprob: -5.3146748542785645
    4. ' ' → logprob: -6.1896748542785645
    5. ' le' → logprob: -6.6896748542785645
    6. ' a' → logprob: -6.9396748542785645
    7. ' une' → logprob: -7.0646748542785645
    8. ' la' → logprob: -7.1896748542785645
    9. 'un' → logprob: -7.1896748542785645
    10. 'le' → logprob: -7.6896748542785645

Token 106: ' "' (ID: 392)
  Prédit: ' minim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minim' → logprob: -0.8984730243682861
    2. 'min' → logprob: -1.6484730243682861
    3. ' couvrir' → logprob: -2.523473024368286
    4. ' trouver' → logprob: -2.773473024368286
    5. ' construire' → logprob: -2.898473024368286
    6. ' color' → logprob: -3.148473024368286
    7. 'color' → logprob: -3.648473024368286
    8. 'max' → logprob: -3.648473024368286
    9. 'tr' → logprob: -3.898473024368286
    10. 'dfs' → logprob: -4.648472785949707

Token 107: 'emp' (ID: 7175)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.7936130166053772
    2. 'min' → logprob: -2.0436129570007324
    3. 'placer' → logprob: -2.1686129570007324
    4. 'max' → logprob: -2.7936129570007324
    5. 'faire' → logprob: -2.7936129570007324
    6. 'dfs' → logprob: -2.9186129570007324
    7. 'color' → logprob: -4.293612957000732
    8. 'part' → logprob: -5.168612957000732
    9. 'former' → logprob: -5.168612957000732
    10. 'cou' → logprob: -5.293612957000732

Token 108: 'iler' (ID: 6067)
  Prédit: 'iler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iler' → logprob: -0.005219651851803064
    2. 'ile' → logprob: -5.755219459533691
    3. '#' → logprob: -7.505219459533691
    4. '

' → logprob: -8.880219459533691
    5. '|' → logprob: -9.005219459533691
    6. 'i' → logprob: -9.130219459533691
    7. '\' → logprob: -9.130219459533691
    8. '[' → logprob: -9.255219459533691
    9. '(' → logprob: -9.505219459533691
    10. '
' → logprob: -9.755219459533691

Token 109: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007605443242937326
    2. 'les' → logprob: -5.75760555267334
    3. ' les' → logprob: -6.75760555267334
    4. 's' → logprob: -7.38260555267334
    5. 'des' → logprob: -7.50760555267334
    6. 'le' → logprob: -7.75760555267334
    7. ' des' → logprob: -7.75760555267334
    8. 'er' → logprob: -8.25760555267334
    9. ' "' → logprob: -8.88260555267334
    10. 'r' → logprob: -9.13260555267334

Token 110: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3261815309524536
    2. ' les' → logprob: -1.7011815309524536
    3. 'des' → logprob: -4.076181411743164
    4. 'le' → logprob: -4.826181411743164
    5. ' chaque' → logprob: -4.826181411743164
    6. ' des' → logprob: -5.076181411743164
    7. 'def' → logprob: -5.201181411743164
    8. '#' → logprob: -5.576181411743164
    9. 'ces' → logprob: -5.576181411743164
    10. '-les' → logprob: -5.576181411743164

Token 111: ' force' (ID: 9578)
  Prédit: ' force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -1.0993701219558716
    2. 'force' → logprob: -1.5993701219558716
    3. ' personnes' → logprob: -1.8493701219558716
    4. ' nodes' → logprob: -2.474370002746582
    5. ' n' → logprob: -2.599370002746582
    6. 'n' → logprob: -3.599370002746582
    7. 'person' → logprob: -3.849370002746582
    8. 'forces' → logprob: -4.099370002746582
    9. ' forces' → logprob: -4.599370002746582
    10. 'p' → logprob: -4.724370002746582

Token 112: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.1340193748474121
    2. 'urs' → logprob: -2.134019374847412
    3. 'u' → logprob: -5.259019374847412
    4. 'urons' → logprob: -8.25901985168457
    5. '   ' → logprob: -8.38401985168457
    6. 'reurs' → logprob: -8.50901985168457
    7. 'eurs' → logprob: -9.00901985168457
    8. '	' → logprob: -9.13401985168457
    9. '```' → logprob: -9.13401985168457
    10. 'urers' → logprob: -9.25901985168457

Token 113: ' au' (ID: 2791)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.226401448249817
    2. '.' → logprob: -1.476401448249817
    3. ',' → logprob: -1.726401448249817
    4. '#' → logprob: -2.8514013290405273
    5. ' ' → logprob: -2.8514013290405273
    6. 's' → logprob: -2.9764013290405273
    7. ' afin' → logprob: -3.8514013290405273
    8. 'sur' → logprob: -4.351401329040527
    9. ' sur' → logprob: -4.601401329040527
    10. 'def' → logprob: -4.726401329040527

Token 114: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.4880214035511017
    2. 'moins' → logprob: -1.7380213737487793
    3. 'plus' → logprob: -2.6130213737487793
    4. 'max' → logprob: -2.6130213737487793
    5. 'minimum' → logprob: -3.3630213737487793
    6. 'dess' → logprob: -4.238021373748779
    7. 'mo' → logprob: -5.738021373748779
    8. 'sol' → logprob: -6.113021373748779
    9. 'som' → logprob: -6.113021373748779
    10. ' maximum' → logprob: -6.488021373748779

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0963560342788696
    2. '.' → logprob: -1.2213560342788696
    3. 'import' → logprob: -1.9713560342788696
    4. '\n' → logprob: -2.34635591506958
    5. 's' → logprob: -3.59635591506958
    6. '\' → logprob: -3.72135591506958
    7. ',
' → logprob: -4.47135591506958
    8. '_' → logprob: -4.72135591506958
    9. 'def' → logprob: -4.97135591506958
    10. ')' → logprob: -4.97135591506958

Token 116: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7315305471420288
    2. ' ce' → logprob: -1.2315305471420288
    3. 'ce' → logprob: -2.2315306663513184
    4. 'et' → logprob: -4.356530666351318
    5. ' afin' → logprob: -4.356530666351318
    6. ' rédu' → logprob: -4.356530666351318
    7. ' donc' → logprob: -4.606530666351318
    8. ' en' → logprob: -4.606530666351318
    9. 'afin' → logprob: -4.606530666351318
    10. ' et' → logprob: -4.856530666351318

Token 117: ' minim' (ID: 23874)
  Prédit: ' minim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minim' → logprob: -0.7671912908554077
    2. 'min' → logprob: -0.8921912908554077
    3. ' réduire' → logprob: -2.1421914100646973
    4. ' min' → logprob: -6.142191410064697
    5. ' dimin' → logprob: -6.142191410064697
    6. ' obtenir' → logprob: -6.517191410064697
    7. ' ainsi' → logprob: -7.892191410064697
    8. ' minimize' → logprob: -7.892191410064697
    9. ' limiter' → logprob: -8.017190933227539
    10. ' avoir' → logprob: -8.267190933227539

Token 118: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.14595510065555573
    2. 'ser' → logprob: -2.0209550857543945
    3. '#' → logprob: -6.6459550857543945
    4. 'er' → logprob: -7.1459550857543945
    5. 'user' → logprob: -7.6459550857543945
    6. 'al' → logprob: -8.270955085754395
    7. '```' → logprob: -9.145955085754395
    8. 'is' → logprob: -9.395955085754395
    9. 'aiser' → logprob: -10.020955085754395
    10. '=' → logprob: -10.270955085754395

Token 119: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04957333579659462
    2. 'le' → logprob: -3.6745734214782715
    3. ' la' → logprob: -4.1745734214782715
    4. ' ' → logprob: -6.1745734214782715
    5. ' les' → logprob: -6.2995734214782715
    6. ' ' → logprob: -6.6745734214782715
    7. ' l' → logprob: -6.9245734214782715
    8. ' the' → logprob: -7.9245734214782715
    9. 'leur' → logprob: -8.174572944641113
    10. ' nombre' → logprob: -8.799572944641113

Token 120: ' rac' (ID: 12334)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5424707531929016
    2. 'p' → logprob: -1.0424706935882568
    3. ' nombre' → logprob: -3.667470693588257
    4. ' piles' → logprob: -4.667470932006836
    5. 'person' → logprob: -5.167470932006836
    6. '```' → logprob: -5.417470932006836
    7. ' nombres' → logprob: -5.667470932006836
    8. 'nb' → logprob: -6.167470932006836
    9. ' p' → logprob: -6.292470932006836
    10. 's' → logprob: -6.542470932006836

Token 121: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.003792946692556143
    2. 'ine' → logprob: -6.503792762756348
    3. '#' → logprob: -7.753792762756348
    4. '1' → logprob: -8.378792762756348
    5. 'i' → logprob: -8.378792762756348
    6. '

' → logprob: -8.503792762756348
    7. '   ' → logprob: -9.003792762756348
    8. '```' → logprob: -9.003792762756348
    9. '``' → logprob: -9.003792762756348
    10. '_' → logprob: -9.253792762756348

Token 122: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8167145252227783
    2. 'import' → logprob: -1.3167145252227783
    3. '\n' → logprob: -2.3167145252227783
    4. '\' → logprob: -2.6917145252227783
    5. ',' → logprob: -3.5667145252227783
    6. '
' → logprob: -3.6917145252227783
    7. ',
' → logprob: -4.066714286804199
    8. ':' → logprob: -4.316714286804199
    9. '```' → logprob: -4.941714286804199
    10. '

' → logprob: -5.316714286804199

Token 123: ' piles' (ID: 90498)
  Prédit: ' arbres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -1.0170700550079346
    2. ' piles' → logprob: -1.6420700550079346
    3. ' la' → logprob: -2.3920700550079346
    4. 'l' → logprob: -2.5170700550079346
    5. ' l' → logprob: -2.6420700550079346
    6. ' graph' → logprob: -2.8920700550079346
    7. ' grap' → logprob: -3.5170700550079346
    8. 'p' → logprob: -3.6420700550079346
    9. 'la' → logprob: -4.3920698165893555
    10. 'gr' → logprob: -4.6420698165893555

Token 124: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1645398139953613
    2. ',' → logprob: -1.7895398139953613
    3. 'import' → logprob: -2.1645398139953613
    4. 'def' → logprob: -2.1645398139953613
    5. '\n' → logprob: -2.2895398139953613
    6. ':' → logprob: -2.7895398139953613
    7. ')' → logprob: -3.5395398139953613
    8. '#' → logprob: -3.9145398139953613
    9. '\' → logprob: -3.9145398139953613
    10. ',
' → logprob: -4.039539813995361

Token 125: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12770459055900574
    2. '
' → logprob: -2.377704620361328
    3. 'import' → logprob: -4.502704620361328
    4. '\' → logprob: -5.502704620361328
    5. '

' → logprob: -5.627704620361328
    6. '\n' → logprob: -5.877704620361328
    7. 'n' → logprob: -6.002704620361328
    8. '```' → logprob: -6.627704620361328
    9. 'from' → logprob: -7.127704620361328
    10. '#' → logprob: -9.002704620361328

Token 126: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029676660895347595
    2. 'import' → logprob: -4.27967643737793
    3. '
' → logprob: -4.65467643737793
    4. '\' → logprob: -6.40467643737793
    5. 'from' → logprob: -6.40467643737793
    6. 'n' → logprob: -7.65467643737793
    7. '```' → logprob: -7.77967643737793
    8. '\n' → logprob: -7.90467643737793
    9. 'dp' → logprob: -8.15467643737793
    10. ' 
' → logprob: -8.27967643737793

Token 127: ' Util' (ID: 13564)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5228617787361145
    2. 'from' → logprob: -1.0228617191314697
    3. 'import' → logprob: -4.147861957550049
    4. ' from' → logprob: -4.272861957550049
    5. ' def' → logprob: -4.772861957550049
    6. 'dp' → logprob: -5.147861957550049
    7. '#' → logprob: -6.647861957550049
    8. 'On' → logprob: -7.022861957550049
    9. ' import' → logprob: -7.397861957550049
    10. 'sys' → logprob: -8.39786148071289

Token 128: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.30532053112983704
    2. 'isateur' → logprob: -2.6803205013275146
    3. 'import' → logprob: -2.8053205013275146
    4. 'er' → logprob: -3.1803205013275146
    5. 'isez' → logprob: -3.3053205013275146
    6. '```' → logprob: -4.430320739746094
    7. 'isation' → logprob: -5.180320739746094
    8. 'isant' → logprob: -5.180320739746094
    9. 'def' → logprob: -5.305320739746094
    10. 'es' → logprob: -5.430320739746094

Token 129: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8417487740516663
    2. ' une' → logprob: -0.8417487740516663
    3. ' la' → logprob: -2.8417487144470215
    4. ' sys' → logprob: -3.0917487144470215
    5. 'une' → logprob: -4.4667487144470215
    6. ' functools' → logprob: -5.4667487144470215
    7. 'un' → logprob: -5.7167487144470215
    8. ' l' → logprob: -5.7167487144470215
    9. 'l' → logprob: -5.9667487144470215
    10. 'la' → logprob: -6.2167487144470215

Token 130: ' méthode' (ID: 71490)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.118867039680481
    2. 'programm' → logprob: -1.743867039680481
    3. ' programmation' → logprob: -2.1188669204711914
    4. 'dp' → logprob: -3.1188669204711914
    5. ' dfs' → logprob: -3.2438669204711914
    6. ' approche' → logprob: -3.6188669204711914
    7. 'fonction' → logprob: -3.9938669204711914
    8. 'program' → logprob: -3.9938669204711914
    9. 'import' → logprob: -4.118866920471191
    10. ' dynamique' → logprob: -4.118866920471191

Token 131: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.178553581237793
    2. ' dfs' → logprob: -1.178553581237793
    3. ' dynamique' → logprob: -1.678553581237793
    4. 'dfs' → logprob: -2.053553581237793
    5. ' DFS' → logprob: -3.928553581237793
    6. 'dp' → logprob: -4.428553581237793
    7. 'de' → logprob: -4.678553581237793
    8. 'def' → logprob: -5.678553581237793
    9. ' dp' → logprob: -5.678553581237793
    10. '_dp' → logprob: -5.928553581237793

Token 132: ' programmation' (ID: 166376)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.8927224278450012
    2. ' programmation' → logprob: -1.0177223682403564
    3. 'dfs' → logprob: -2.0177223682403564
    4. 'dp' → logprob: -3.5177223682403564
    5. ' DFS' → logprob: -4.2677226066589355
    6. 'programm' → logprob: -4.2677226066589355
    7. 'program' → logprob: -5.0177226066589355
    8. '```' → logprob: -5.2677226066589355
    9. ' dp' → logprob: -5.7677226066589355
    10. ' program' → logprob: -5.8927226066589355

Token 133: ' dynamique' (ID: 98708)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6911357641220093
    2. ' dynamique' → logprob: -1.8161357641220093
    3. '_dynamic' → logprob: -2.066135883331299
    4. ' dynamic' → logprob: -2.316135883331299
    5. '_dp' → logprob: -2.941135883331299
    6. ' _' → logprob: -4.316135883331299
    7. ' dp' → logprob: -4.316135883331299
    8. 'dp' → logprob: -4.441135883331299
    9. 'dynamic' → logprob: -5.941135883331299
    10. 'import' → logprob: -5.941135883331299

Token 134: ' basée' (ID: 153941)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34741607308387756
    2. '\' → logprob: -2.0974161624908447
    3. '
' → logprob: -2.4724161624908447
    4. '\n' → logprob: -3.2224161624908447
    5. 'import' → logprob: -3.8474161624908447
    6. ':' → logprob: -4.722415924072266
    7. '

' → logprob: -4.972415924072266
    8. '```' → logprob: -6.222415924072266
    9. 'n' → logprob: -6.597415924072266
    10. '(' → logprob: -6.847415924072266

Token 135: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.3911745250225067
    2. 'sur' → logprob: -1.141174554824829
    3. '_sur' → logprob: -5.51617431640625
    4. 'import' → logprob: -9.39117431640625
    5. '-sur' → logprob: -10.39117431640625
    6. 'def' → logprob: -10.51617431640625
    7. 'Sur' → logprob: -10.64117431640625
    8. '#' → logprob: -10.89117431640625
    9. 'e' → logprob: -11.76617431640625
    10. 'dfs' → logprob: -11.89117431640625

Token 136: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17086665332317352
    2. ' dfs' → logprob: -2.5458667278289795
    3. 'dfs' → logprob: -3.5458667278289795
    4. 'la' → logprob: -3.9208667278289795
    5. 'l' → logprob: -4.9208664894104
    6. ' DFS' → logprob: -5.5458664894104
    7. ' une' → logprob: -6.1708664894104
    8. ' memo' → logprob: -6.1708664894104
    9. 'dp' → logprob: -6.2958664894104
    10. ' l' → logprob: -6.4208664894104

Token 137: ' position' (ID: 4010)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.8521792888641357
    2. 'dfs' → logprob: -1.7271792888641357
    3. ' profondeur' → logprob: -2.1021792888641357
    4. ' taille' → logprob: -3.4771792888641357
    5. 'ha' → logprob: -3.4771792888641357
    6. 'memo' → logprob: -3.6021792888641357
    7. ' hauteur' → logprob: -3.8521792888641357
    8. ' longueur' → logprob: -3.8521792888641357
    9. 'top' → logprob: -3.8521792888641357
    10. 'long' → logprob: -3.8521792888641357

Token 138: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0338834524154663
    2. '_' → logprob: -1.6588834524154663
    3. 'import' → logprob: -1.7838834524154663
    4. 'def' → logprob: -1.9088834524154663
    5. 's' → logprob: -3.033883571624756
    6. ' ' → logprob: -3.158883571624756
    7. ':' → logprob: -5.158883571624756
    8. '(' → logprob: -5.283883571624756
    9. ' import' → logprob: -5.283883571624756
    10. 'n' → logprob: -5.533883571624756

Token 139: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5582367777824402
    2. ' la' → logprob: -0.9332367777824402
    3. 'l' → logprob: -3.933236837387085
    4. 'le' → logprob: -4.683236598968506
    5. ' l' → logprob: -6.183236598968506
    6. ' le' → logprob: -6.308236598968506
    7. 'the' → logprob: -7.308236598968506
    8. ' the' → logprob: -7.933236598968506
    9. 'une' → logprob: -8.558237075805664
    10. ' une' → logprob: -9.683237075805664

Token 140: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.08928415924310684
    2. 'chaine' → logprob: -2.9642841815948486
    3. 'ligne' → logprob: -4.0892839431762695
    4. 'pile' → logprob: -5.3392839431762695
    5. ' liste' → logprob: -5.5892839431762695
    6. 'list' → logprob: -6.0892839431762695
    7. 'sequence' → logprob: -6.3392839431762695
    8. 'file' → logprob: -6.4642839431762695
    9. 'string' → logprob: -7.0892839431762695
    10. ' chaîne' → logprob: -7.4642839431762695

Token 141: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13884131610393524
    2. 'import' → logprob: -2.888841390609741
    3. '
' → logprob: -3.513841390609741
    4. '\' → logprob: -4.388841152191162
    5. '

' → logprob: -4.888841152191162
    6. '\n' → logprob: -5.388841152191162
    7. ',' → logprob: -5.513841152191162
    8. ':' → logprob: -5.513841152191162
    9. '```' → logprob: -5.513841152191162
    10. 'n' → logprob: -6.388841152191162

Token 142: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9444543123245239
    2. 'la' → logprob: -1.819454312324524
    3. 'le' → logprob: -2.1944541931152344
    4. 'l' → logprob: -2.1944541931152344
    5. 'les' → logprob: -2.6944541931152344
    6. '#' → logprob: -2.6944541931152344
    7. ' les' → logprob: -3.5694541931152344
    8. 'len' → logprob: -3.9444541931152344
    9. ' l' → logprob: -4.069454193115234
    10. ' le' → logprob: -4.444454193115234

Token 143: ' possibilités' (ID: 119756)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.8672449588775635
    2. 'indices' → logprob: -2.2422449588775635
    3. ' indices' → logprob: -2.7422449588775635
    4. 'ét' → logprob: -3.3672449588775635
    5. 'positions' → logprob: -3.3672449588775635
    6. 'forces' → logprob: -3.4922449588775635
    7. 'capac' → logprob: -3.4922449588775635
    8. 'actions' → logprob: -3.6172449588775635
    9. 's' → logprob: -3.9922449588775635
    10. 'ha' → logprob: -4.117244720458984

Token 144: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24983052909374237
    2. 'import' → logprob: -2.124830484390259
    3. 'def' → logprob: -3.124830484390259
    4. ',' → logprob: -3.499830484390259
    5. '#' → logprob: -5.124830722808838
    6. 'n' → logprob: -5.374830722808838
    7. '```' → logprob: -5.999830722808838
    8. '.' → logprob: -6.249830722808838
    9. 'de' → logprob: -6.499830722808838
    10. 's' → logprob: -6.999830722808838

Token 145: ''emp' (ID: 140539)
  Prédit: ''emp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''emp' → logprob: -0.8160319328308105
    2. 'sou' → logprob: -2.3160319328308105
    3. 's' → logprob: -2.5660319328308105
    4. 'lev' → logprob: -2.5660319328308105
    5. ' lev' → logprob: -2.6910319328308105
    6. ' emp' → logprob: -2.9410319328308105
    7. 'e' → logprob: -3.9410319328308105
    8. 'placement' → logprob: -4.0660319328308105
    9. 'lever' → logprob: -4.1910319328308105
    10. '_stack' → logprob: -4.3160319328308105

Token 146: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.27232858538627625
    2. 'iler' → logprob: -1.8973286151885986
    3. 'il' → logprob: -3.0223286151885986
    4. 'ilage' → logprob: -4.0223283767700195
    5. '#' → logprob: -5.1473283767700195
    6. 'i' → logprob: -6.0223283767700195
    7. '{"' → logprob: -6.7098283767700195
    8. '**' → logprob: -7.2098283767700195
    9. '```' → logprob: -7.3973283767700195
    10. '   ' → logprob: -7.5848283767700195

Token 147: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.37129855155944824
    2. 'r' → logprob: -1.9962985515594482
    3. 'cement' → logprob: -3.4962985515594482
    4. 'er' → logprob: -3.6212985515594482
    5. 'acement' → logprob: -3.7462985515594482
    6. 'lement' → logprob: -3.8712985515594482
    7. 't' → logprob: -4.371298789978027
    8. 'tage' → logprob: -4.496298789978027
    9. 'ement' → logprob: -4.746298789978027
    10. 'mentation' → logprob: -5.246298789978027

Token 148: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37327513098716736
    2. ':' → logprob: -1.4982751607894897
    3. ':
' → logprob: -3.8732750415802
    4. '\' → logprob: -3.8732750415802
    5. 'import' → logprob: -3.9982750415802
    6. '
' → logprob: -4.248275279998779
    7. '\n' → logprob: -5.123275279998779
    8. 'n' → logprob: -6.123275279998779
    9. '```' → logprob: -6.123275279998779
    10. '(n' → logprob: -7.623275279998779

Token 149: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4632214307785034
    2. 'es' → logprob: -1.9632214307785034
    3. ' la' → logprob: -3.338221549987793
    4. ''un' → logprob: -3.463221549987793
    5. ''' → logprob: -3.713221549987793
    6. ' les' → logprob: -4.088221549987793
    7. ' le' → logprob: -4.713221549987793
    8. 'u' → logprob: -4.713221549987793
    9. ' ' → logprob: -4.838221549987793
    10. ' des' → logprob: -4.838221549987793

Token 150: ' segment' (ID: 14806)
  Prédit: ' force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' force' → logprob: -1.3392363786697388
    2. '```' → logprob: -2.214236259460449
    3. 'e' → logprob: -2.589236259460449
    4. ' personnage' → logprob: -2.839236259460449
    5. 'élé' → logprob: -3.214236259460449
    6. 'force' → logprob: -3.339236259460449
    7. ' joueur' → logprob: -3.589236259460449
    8. ' espace' → logprob: -3.589236259460449
    9. ' sommet' → logprob: -3.714236259460449
    10. ' i' → logprob: -3.839236259460449

Token 151: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6039672493934631
    2. ':' → logprob: -1.2289671897888184
    3. 'import' → logprob: -2.6039671897888184
    4. '
' → logprob: -3.8539671897888184
    5. ':
' → logprob: -4.353967189788818
    6. '\' → logprob: -4.353967189788818
    7. ',' → logprob: -4.728967189788818
    8. '```' → logprob: -4.728967189788818
    9. '\n' → logprob: -5.478967189788818
    10. '

' → logprob: -5.853967189788818

Token 152: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19171477854251862
    2. ':' → logprob: -2.1917147636413574
    3. '
' → logprob: -3.3167147636413574
    4. 'import' → logprob: -4.566714763641357
    5. 'n' → logprob: -5.566714763641357
    6. '\' → logprob: -5.691714763641357
    7. ':
' → logprob: -6.316714763641357
    8. ' 
' → logprob: -6.441714763641357
    9. '[' → logprob: -7.316714763641357
    10. '#' → logprob: -7.316714763641357

Token 153: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09237698465585709
    2. '
' → logprob: -3.217376947402954
    3. ':' → logprob: -3.967376947402954
    4. 'n' → logprob: -4.342377185821533
    5. '\' → logprob: -5.092377185821533
    6. 'import' → logprob: -5.342377185821533
    7. ' 
' → logprob: -6.217377185821533
    8. '\n' → logprob: -6.592377185821533
    9. 'from' → logprob: -8.342376708984375
    10. '```' → logprob: -8.342376708984375

Token 154: ' Ici' (ID: 145754)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7055396437644958
    2. 'from' → logprob: -0.7055396437644958
    3. 'import' → logprob: -4.580539703369141
    4. '#' → logprob: -7.205539703369141
    5. 'dp' → logprob: -7.205539703369141
    6. ' from' → logprob: -7.955539703369141
    7. ' def' → logprob: -8.70553970336914
    8. ' import' → logprob: -11.08053970336914
    9. 'n' → logprob: -11.70553970336914
    10. '```' → logprob: -11.70553970336914

Token 155: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6690365076065063
    2. ',' → logprob: -0.9190365076065063
    3. 'def' → logprob: -2.919036388397217
    4. 'import' → logprob: -4.169036388397217
    5. ' :' → logprob: -4.669036388397217
    6. '#' → logprob: -5.669036388397217
    7. ' ' → logprob: -6.544036388397217
    8. ' ,' → logprob: -6.919036388397217
    9. ' =' → logprob: -7.169036388397217
    10. '.' → logprob: -7.419036388397217

Token 156: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.045916423201560974
    2. 'def' → logprob: -4.295916557312012
    3. ' n' → logprob: -4.795916557312012
    4. ' def' → logprob: -5.045916557312012
    5. 'on' → logprob: -5.795916557312012
    6. ' la' → logprob: -5.795916557312012
    7. ' nous' → logprob: -6.295916557312012
    8. ' ' → logprob: -6.670916557312012
    9. ' c' → logprob: -6.795916557312012
    10. 'n' → logprob: -6.920916557312012

Token 157: ' condition' (ID: 7060)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8849280476570129
    2. ' code' → logprob: -1.8849279880523682
    3. '#' → logprob: -2.509927988052368
    4. 'import' → logprob: -2.634927988052368
    5. 'from' → logprob: -2.759927988052368
    6. 'code' → logprob: -3.384927988052368
    7. ' sys' → logprob: -3.509927988052368
    8. 'n' → logprob: -3.884927988052368
    9. 'sys' → logprob: -3.884927988052368
    10. 'dp' → logprob: -4.009928226470947

Token 158: ' emp' (ID: 4927)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4042743146419525
    2. ' d' → logprob: -1.404274344444275
    3. 'de' → logprob: -3.6542742252349854
    4. ' est' → logprob: -4.1542744636535645
    5. 's' → logprob: -4.6542744636535645
    6. ' ' → logprob: -4.7792744636535645
    7. 'd' → logprob: -4.7792744636535645
    8. ':' → logprob: -5.7792744636535645
    9. ' =' → logprob: -5.7792744636535645
    10. ' s' → logprob: -5.9042744636535645

Token 159: 'êche' (ID: 63993)
  Prédit: 'iler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iler' → logprob: -0.3413602113723755
    2. 'ile' → logprob: -1.3413602113723755
    3. '#' → logprob: -5.216360092163086
    4. 'il' → logprob: -5.341360092163086
    5. 'êcher' → logprob: -5.841360092163086
    6. '   ' → logprob: -6.341360092163086
    7. 'ilé' → logprob: -6.341360092163086
    8. 'i' → logprob: -6.341360092163086
    9. '```' → logprob: -6.716360092163086
    10. 'êche' → logprob: -7.278860092163086

Token 160: ' un' (ID: 537)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1514092683792114
    2. 'd' → logprob: -1.4014092683792114
    3. ' de' → logprob: -1.6514092683792114
    4. 'de' → logprob: -2.401409149169922
    5. ' l' → logprob: -3.151409149169922
    6. ' la' → logprob: -3.776409149169922
    7. 'l' → logprob: -4.276409149169922
    8. ' les' → logprob: -4.401409149169922
    9. 'le' → logprob: -4.651409149169922
    10. 'les' → logprob: -4.776409149169922

Token 161: ' force' (ID: 9578)
  Prédit: ' emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' emp' → logprob: -1.990556240081787
    2. 's' → logprob: -2.365556240081787
    3. ' force' → logprob: -2.490556240081787
    4. 'élé' → logprob: -2.490556240081787
    5. 'force' → logprob: -2.615556240081787
    6. 'n' → logprob: -2.865556240081787
    7. ' n' → logprob: -3.115556240081787
    8. 'pile' → logprob: -3.303056240081787
    9. 'e' → logprob: -3.740556240081787
    10. 'emp' → logprob: -3.740556240081787

Token 162: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.031115012243390083
    2. 'u' → logprob: -4.4061150550842285
    3. 'ce' → logprob: -5.1561150550842285
    4. '   ' → logprob: -5.9061150550842285
    5. '#' → logprob: -7.0311150550842285
    6. ' ' → logprob: -7.1561150550842285
    7. 'reur' → logprob: -7.2811150550842285
    8. 'teur' → logprob: -7.5936150550842285
    9. '  ' → logprob: -7.6561150550842285
    10. 'ç' → logprob: -7.7811150550842285

Token 163: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.29650500416755676
    2. ' d' → logprob: -1.9215049743652344
    3. 'de' → logprob: -3.0465049743652344
    4. 'd' → logprob: -3.6715049743652344
    5. '#' → logprob: -5.046504974365234
    6. '_' → logprob: -5.546504974365234
    7. ' ' → logprob: -5.546504974365234
    8. ' n' → logprob: -5.796504974365234
    9. ' à' → logprob: -6.171504974365234
    10. ' qui' → logprob: -6.359004974365234

Token 164: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.11627112329006195
    2. 's' → logprob: -2.4912710189819336
    3. ' sou' → logprob: -4.491271018981934
    4. 'se' → logprob: -4.866271018981934
    5. 'lever' → logprob: -5.991271018981934
    6. ' se' → logprob: -6.241271018981934
    7. 'forcer' → logprob: -7.616271018981934
    8. ' soul' → logprob: -7.741271018981934
    9. 'être' → logprob: -7.866271018981934
    10. ' lever' → logprob: -8.303771018981934

Token 165: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.12053149193525314
    2. 'p' → logprob: -2.2455315589904785
    3. 'l' → logprob: -5.9955315589904785
    4. '```' → logprob: -6.8705315589904785
    5. 'pp' → logprob: -7.2455315589904785
    6. '#' → logprob: -7.3705315589904785
    7. 'mettre' → logprob: -7.6205315589904785
    8. 'porter' → logprob: -8.37053108215332
    9. 'ff' → logprob: -8.37053108215332
    10. 'per' → logprob: -8.99553108215332

Token 166: ' deux' (ID: 10301)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6572733521461487
    2. 'son' → logprob: -1.657273292541504
    3. ' un' → logprob: -2.782273292541504
    4. 'plus' → logprob: -3.032273292541504
    5. ' son' → logprob: -3.407273292541504
    6. 'le' → logprob: -3.657273292541504
    7. 'de' → logprob: -4.032273292541504
    8. ' quelqu' → logprob: -4.157273292541504
    9. ' deux' → logprob: -4.282273292541504
    10. 'une' → logprob: -4.407273292541504

Token 167: ' voisins' (ID: 166720)
  Prédit: ' force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -1.4466437101364136
    2. 'force' → logprob: -1.4466437101364136
    3. ' personnes' → logprob: -2.071643829345703
    4. ' voisins' → logprob: -2.446643829345703
    5. 'forces' → logprob: -2.946643829345703
    6. ' forces' → logprob: -2.946643829345703
    7. 'adj' → logprob: -3.321643829345703
    8. 'fois' → logprob: -3.321643829345703
    9. 'person' → logprob: -3.821643829345703
    10. ' fois' → logprob: -4.071643829345703

Token 168: ' simult' (ID: 27260)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1048706769943237
    2. 'def' → logprob: -1.2298706769943237
    3. 'import' → logprob: -2.6048707962036133
    4. '\' → logprob: -2.7298707962036133
    5. ',' → logprob: -2.8548707962036133
    6. '\n' → logprob: -3.1048707962036133
    7. '#' → logprob: -3.4798707962036133
    8. ':' → logprob: -3.8548707962036133
    9. ' 
' → logprob: -4.104870796203613
    10. ' ' → logprob: -4.354870796203613

Token 169: 'anément' (ID: 193192)
  Prédit: 'anément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anément' → logprob: -0.03450049087405205
    2. 'an' → logprob: -3.5345005989074707
    3. 'ultan' → logprob: -6.659500598907471
    4. 'lt' → logprob: -7.034500598907471
    5. 'à' → logprob: -7.409500598907471
    6. '```' → logprob: -7.534500598907471
    7. 'l' → logprob: -8.034500122070312
    8. 'a' → logprob: -8.409500122070312
    9. 'lut' → logprob: -8.909500122070312
    10. 'ané' → logprob: -9.159500122070312

Token 170: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.792696475982666
    2. 'def' → logprob: -1.042696475982666
    3. 'import' → logprob: -2.542696475982666
    4. '

' → logprob: -2.917696475982666
    5. ':' → logprob: -4.042696475982666
    6. '\n' → logprob: -4.292696475982666
    7. ',' → logprob: -5.042696475982666
    8. '\' → logprob: -5.167696475982666
    9. '#' → logprob: -5.167696475982666
    10. '```' → logprob: -5.542696475982666

Token 171: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4078644514083862
    2. ',' → logprob: -1.4078644514083862
    3. '.' → logprob: -1.5328644514083862
    4. ':' → logprob: -2.407864570617676
    5. ' ' → logprob: -2.657864570617676
    6. ')' → logprob: -2.907864570617676
    7. ' 
' → logprob: -3.782864570617676
    8. 'def' → logprob: -4.282864570617676
    9. '
' → logprob: -4.532864570617676
    10. '\n' → logprob: -4.532864570617676

Token 172: ' chaque' (ID: 21194)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5748388767242432
    2. ' on' → logprob: -1.6998388767242432
    3. 'il' → logprob: -2.199838876724243
    4. '#' → logprob: -2.824838876724243
    5. ' il' → logprob: -3.949838876724243
    6. 'le' → logprob: -4.324838638305664
    7. 'une' → logprob: -4.449838638305664
    8. 'for' → logprob: -4.949838638305664
    9. 'l' → logprob: -5.449838638305664
    10. ' ' → logprob: -5.574838638305664

Token 173: ' pile' (ID: 39732)
  Prédit: ' force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' force' → logprob: -0.45850419998168945
    2. 'force' → logprob: -1.7085041999816895
    3. ' voisin' → logprob: -2.9585041999816895
    4. ' ' → logprob: -4.3335041999816895
    5. 'forcer' → logprob: -4.3335041999816895
    6. ' adjacent' → logprob: -4.8335041999816895
    7. ' ' → logprob: -4.9585041999816895
    8. ')' → logprob: -5.0835041999816895
    9. ' )' → logprob: -5.2085041999816895
    10. '\n' → logprob: -5.3335041999816895

Token 174: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.2494933605194092
    2. ' continue' → logprob: -1.9994933605194092
    3. ' se' → logprob: -2.249493360519409
    4. ' ' → logprob: -2.624493360519409
    5. ' doit' → logprob: -2.749493360519409
    6. ' peut' → logprob: -3.374493360519409
    7. ' s' → logprob: -3.499493360519409
    8. '#' → logprob: -3.499493360519409
    9. ' a' → logprob: -3.499493360519409
    10. '_' → logprob: -3.624493360519409

Token 175: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5973533987998962
    2. ' une' → logprob: -0.8473533987998962
    3. 'lin' → logprob: -5.222353458404541
    4. 'un' → logprob: -5.847353458404541
    5. 'chain' → logprob: -5.972353458404541
    6. ' lin' → logprob: -6.347353458404541
    7. 'strict' → logprob: -6.972353458404541
    8. 'comme' → logprob: -6.972353458404541
    9. 'au' → logprob: -7.097353458404541
    10. 'en' → logprob: -7.222353458404541

Token 176: ' chaîne' (ID: 89288)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.7591870427131653
    2. 'chaine' → logprob: -1.0091869831085205
    3. ' chaîne' → logprob: -2.0091869831085205
    4. ' chaine' → logprob: -4.3841872215271
    5. 'che' → logprob: -4.8841872215271
    6. 'chain' → logprob: -5.0091872215271
    7. ' cha' → logprob: -6.5091872215271
    8. 'simple' → logprob: -6.7591872215271
    9. 'ar' → logprob: -7.1341872215271
    10. ' chemin' → logprob: -7.6341872215271

Token 177: ' simple' (ID: 4705)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1332746744155884
    2. 'def' → logprob: -1.2582746744155884
    3. 'import' → logprob: -1.8832746744155884
    4. '\n' → logprob: -1.8832746744155884
    5. '

' → logprob: -3.508274555206299
    6. '\' → logprob: -4.008274555206299
    7. ':' → logprob: -4.383274555206299
    8. ',' → logprob: -4.758274555206299
    9. '#' → logprob: -5.508274555206299
    10. '.' → logprob: -6.008274555206299

Token 178: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23243317008018494
    2. '
' → logprob: -2.2324330806732178
    3. 'import' → logprob: -3.3574330806732178
    4. '\' → logprob: -3.8574330806732178
    5. ':' → logprob: -3.9824330806732178
    6. '\n' → logprob: -4.357433319091797
    7. '

' → logprob: -5.607433319091797
    8. '```' → logprob: -5.982433319091797
    9. ':
' → logprob: -6.857433319091797
    10. '#' → logprob: -6.982433319091797

Token 179: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8688631057739258
    2. '
' → logprob: -1.1188631057739258
    3. 'def' → logprob: -2.118863105773926
    4. '\' → logprob: -2.743863105773926
    5. '\n' → logprob: -3.618863105773926
    6. 'import' → logprob: -4.618863105773926
    7. ':
' → logprob: -4.743863105773926
    8. '[' → logprob: -4.993863105773926
    9. ',' → logprob: -5.993863105773926
    10. 'newline' → logprob: -6.118863105773926

Token 180: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09167437255382538
    2. '
' → logprob: -2.716674327850342
    3. '\' → logprob: -4.091674327850342
    4. '\n' → logprob: -6.091674327850342
    5. 'import' → logprob: -7.091674327850342
    6. 'n' → logprob: -7.466674327850342
    7. ':' → logprob: -7.966674327850342
    8. ' 
' → logprob: -8.0916748046875
    9. '```' → logprob: -9.3416748046875
    10. '' → logprob: -9.8416748046875

Token 181: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009769308380782604
    2. 'from' → logprob: -4.884769439697266
    3. 'import' → logprob: -6.509769439697266
    4. ' def' → logprob: -7.509769439697266
    5. 'n' → logprob: -10.009769439697266
    6. ' from' → logprob: -10.634769439697266
    7. '#' → logprob: -10.759769439697266
    8. 'class' → logprob: -11.509769439697266
    9. 'dp' → logprob: -11.634769439697266
    10. ' import' → logprob: -11.884769439697266

Token 182: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2420419156551361
    2. ' continue' → logprob: -2.242041826248169
    3. 'import' → logprob: -3.617041826248169
    4. 'continue' → logprob: -3.867041826248169
    5. ' utilise' → logprob: -3.992041826248169
    6. ' va' → logprob: -4.617042064666748
    7. 'from' → logprob: -4.867042064666748
    8. ' peut' → logprob: -4.992042064666748
    9. 'dp' → logprob: -5.492042064666748
    10. ' import' → logprob: -6.492042064666748

Token 183: ' mod' (ID: 1812)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8659732937812805
    2. ' utiliser' → logprob: -0.9909732937812805
    3. ' continuer' → logprob: -2.9909732341766357
    4. 'penser' → logprob: -3.4909732341766357
    5. 'contin' → logprob: -3.4909732341766357
    6. 'dé' → logprob: -3.8659732341766357
    7. 'impl' → logprob: -4.615973472595215
    8. '#' → logprob: -4.865973472595215
    9. 'faire' → logprob: -4.990973472595215
    10. ' définir' → logprob: -5.115973472595215

Token 184: 'él' (ID: 6778)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.0380218029022217
    2. 'èle' → logprob: -1.2880218029022217
    3. 'el' → logprob: -2.0380218029022217
    4. 'ule' → logprob: -2.9130218029022217
    5. 'e' → logprob: -3.1630218029022217
    6. 'è' → logprob: -3.4130218029022217
    7. 'él' → logprob: -3.4130218029022217
    8. 'er' → logprob: -3.9130218029022217
    9. 'ifier' → logprob: -4.038022041320801
    10. 'èles' → logprob: -4.788022041320801

Token 185: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.2039477825164795
    2. 'ise' → logprob: -1.7039477825164795
    3. 'ize' → logprob: -6.703948020935059
    4. 'izer' → logprob: -8.078948020935059
    5. 'isé' → logprob: -8.078948020935059
    6. 'isez' → logprob: -8.578948020935059
    7. 'is' → logprob: -8.703948020935059
    8. 'er' → logprob: -9.453948020935059
    9. 'é' → logprob: -9.703948020935059
    10. 'è' → logprob: -9.953948020935059

Token 186: ' ça' (ID: 13590)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7118306159973145
    2. ' le' → logprob: -1.5868306159973145
    3. ' l' → logprob: -1.9618306159973145
    4. ' une' → logprob: -2.7118306159973145
    5. ' un' → logprob: -3.5868306159973145
    6. 'le' → logprob: -3.9618306159973145
    7. ' ' → logprob: -4.0868306159973145
    8. 'def' → logprob: -4.9618306159973145
    9. '_' → logprob: -5.0868306159973145
    10. ' les' → logprob: -5.7118306159973145

Token 187: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.06788893043994904
    2. ' par' → logprob: -3.3178889751434326
    3. 'comme' → logprob: -4.0678887367248535
    4. ' ' → logprob: -5.0678887367248535
    5. ' en' → logprob: -7.0678887367248535
    6. ' sous' → logprob: -7.3178887367248535
    7. 'par' → logprob: -7.5678887367248535
    8. ' avec' → logprob: -7.5678887367248535
    9. ' as' → logprob: -7.6928887367248535
    10. ',' → logprob: -7.8178887367248535

Token 188: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.28721189498901367
    2. ' un' → logprob: -1.5372118949890137
    3. 'une' → logprob: -3.5372118949890137
    4. ' une' → logprob: -5.287211894989014
    5. 'le' → logprob: -9.287212371826172
    6. 'pro' → logprob: -9.412212371826172
    7. 'la' → logprob: -9.662212371826172
    8. 'du' → logprob: -9.787212371826172
    9. 'dp' → logprob: -9.912212371826172
    10. ' le' → logprob: -10.787212371826172

Token 189: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -1.0029969215393066
    2. ' grap' → logprob: -1.2529969215393066
    3. ' chain' → logprob: -2.3779969215393066
    4. 'pro' → logprob: -2.6279969215393066
    5. 'gr' → logprob: -3.6279969215393066
    6. 'chaine' → logprob: -3.7529969215393066
    7. ' chemin' → logprob: -3.8779969215393066
    8. 'che' → logprob: -4.002996921539307
    9. ' graph' → logprob: -4.127996921539307
    10. ' arbre' → logprob: -4.127996921539307

Token 190: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21057990193367004
    2. 'de' → logprob: -1.8355798721313477
    3. 'd' → logprob: -4.210579872131348
    4. ' d' → logprob: -4.210579872131348
    5. ' à' → logprob: -9.335579872131348
    6. 'à' → logprob: -9.335579872131348
    7. '_de' → logprob: -9.335579872131348
    8. '#' → logprob: -9.335579872131348
    9. ' classique' → logprob: -9.710579872131348
    10. '_' → logprob: -10.335579872131348

Token 191: ' regroup' (ID: 118203)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.6246800422668457
    2. 'cou' → logprob: -1.7496800422668457
    3. 'partition' → logprob: -2.2496800422668457
    4. ' chaîne' → logprob: -2.3746800422668457
    5. ' plus' → logprob: -2.6246800422668457
    6. 'cha' → logprob: -2.8746800422668457
    7. ' segmentation' → logprob: -3.1246800422668457
    8. ' chaînes' → logprob: -3.2496800422668457
    9. ' partition' → logprob: -3.6246800422668457
    10. 'chain' → logprob: -3.6246800422668457

Token 192: 'ement' (ID: 962)
  Prédit: 'lement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.024660315364599228
    2. 'le' → logprob: -4.899660110473633
    3. 'ement' → logprob: -4.899660110473633
    4. 'roup' → logprob: -5.649660110473633
    5. 'ément' → logprob: -7.149660110473633
    6. 'rou' → logprob: -7.149660110473633
    7. 'ment' → logprob: -7.399660110473633
    8. 'lements' → logprob: -7.399660110473633
    9. 'rement' → logprob: -7.774660110473633
    10. 'mentation' → logprob: -7.899660110473633

Token 193: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7356140613555908
    2. ' ' → logprob: -2.235614061355591
    3. '_' → logprob: -2.485614061355591
    4. 'import' → logprob: -2.610614061355591
    5. ' en' → logprob: -2.860614061355591
    6. '\n' → logprob: -2.985614061355591
    7. '.' → logprob: -3.735614061355591
    8. ':' → logprob: -4.235613822937012
    9. '<|end|>' → logprob: -4.360613822937012
    10. 's' → logprob: -4.485613822937012

Token 194: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.8325886726379395
    2. 'segments' → logprob: -1.4575886726379395
    3. 'cha' → logprob: -1.8325886726379395
    4. ' segments' → logprob: -2.2075886726379395
    5. 'chain' → logprob: -3.3325886726379395
    6. 'chains' → logprob: -4.7075886726379395
    7. 'chaine' → logprob: -4.9575886726379395
    8. 'segment' → logprob: -6.2075886726379395
    9. ' chaîne' → logprob: -6.4575886726379395
    10. ' cha' → logprob: -6.7075886726379395

Token 195: '-cha' (ID: 163177)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7612605094909668
    2. 'chains' → logprob: -2.011260509490967
    3. 'chain' → logprob: -2.386260509490967
    4. '-' → logprob: -2.511260509490967
    5. 'sé' → logprob: -2.636260509490967
    6. 'ense' → logprob: -3.261260509490967
    7. 'list' → logprob: -3.761260509490967
    8. 's' → logprob: -4.511260509490967
    9. 'ar' → logprob: -4.636260509490967
    10. 'structures' → logprob: -4.761260509490967

Token 196: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.031611423939466476
    2. 'îne' → logprob: -3.906611442565918
    3. 'î' → logprob: -4.656611442565918
    4. 'ines' → logprob: -7.531611442565918
    5. 'ine' → logprob: -8.031611442565918
    6. '\' → logprob: -8.906611442565918
    7. 'în' → logprob: -9.156611442565918
    8. '```' → logprob: -9.531611442565918
    9. 'Î' → logprob: -10.156611442565918
    10. '�' → logprob: -10.531611442565918

Token 197: ' où' (ID: 15113)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18045908212661743
    2. '

' → logprob: -2.4304590225219727
    3. '\n' → logprob: -3.4304590225219727
    4. 'import' → logprob: -4.680459022521973
    5. '\' → logprob: -4.805459022521973
    6. ' 
' → logprob: -5.180459022521973
    7. 'def' → logprob: -5.430459022521973
    8. '
 
' → logprob: -5.430459022521973
    9. '' → logprob: -6.055459022521973
    10. ' 

' → logprob: -6.180459022521973

Token 198: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1572883278131485
    2. 'cha' → logprob: -2.9072883129119873
    3. 'les' → logprob: -3.9072883129119873
    4. 'le' → logprob: -4.282288551330566
    5. ' on' → logprob: -4.407288551330566
    6. 'la' → logprob: -4.907288551330566
    7. ' les' → logprob: -5.032288551330566
    8. 'on' → logprob: -5.157288551330566
    9. ' la' → logprob: -5.157288551330566
    10. 'l' → logprob: -5.532288551330566

Token 199: ' sous' (ID: 14487)
  Prédit: ' force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -1.0094408988952637
    2. 'force' → logprob: -1.8844408988952637
    3. ' sous' → logprob: -2.3844408988952637
    4. ' segment' → logprob: -2.5094408988952637
    5. 's' → logprob: -2.7594408988952637
    6. 'chaine' → logprob: -3.2594408988952637
    7. ' ' → logprob: -3.2594408988952637
    8. ' personne' → logprob: -3.3844408988952637
    9. 'person' → logprob: -3.8844408988952637
    10. 'segment' → logprob: -4.259440898895264

Token 200: '-cha' (ID: 163177)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2687201499938965
    2. '_' → logprob: -1.5187201499938965
    3. 'chaine' → logprob: -5.2687201499938965
    4. '_-' → logprob: -6.3937201499938965
    5. ' -' → logprob: -6.5187201499938965
    6. '-token' → logprob: -6.7687201499938965
    7. '_c' → logprob: -6.8937201499938965
    8. '\' → logprob: -7.5187201499938965
    9. '_token' → logprob: -7.6437201499938965
    10. '_m' → logprob: -7.7687201499938965

Token 201: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.04409538209438324
    2. 'ine' → logprob: -3.669095277786255
    3. 'î' → logprob: -4.794095516204834
    4. 'ne' → logprob: -5.544095516204834
    5. 'în' → logprob: -6.044095516204834
    6. 'ïne' → logprob: -6.919095516204834
    7. 'înes' → logprob: -7.169095516204834
    8. 'îner' → logprob: -8.669095039367676
    9. 'Î' → logprob: -8.794095039367676
    10. '\' → logprob: -9.169095039367676

Token 202: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.44747617840766907
    2. ' se' → logprob: -2.1974761486053467
    3. ' peut' → logprob: -2.8224761486053467
    4. 's' → logprob: -3.4474761486053467
    5. ' représente' → logprob: -3.5724761486053467
    6. ' s' → logprob: -3.8224761486053467
    7. ' continue' → logprob: -4.072476387023926
    8. 'est' → logprob: -4.197476387023926
    9. ' correspond' → logprob: -4.447476387023926
    10. '#' → logprob: -4.697476387023926

Token 203: ' form' (ID: 1625)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.6771283745765686
    2. ' valid' → logprob: -1.4271283149719238
    3. 'compatible' → logprob: -2.427128314971924
    4. ' valide' → logprob: -2.427128314971924
    5. ' compatible' → logprob: -4.177128314971924
    6. ' une' → logprob: -4.552128314971924
    7. ' un' → logprob: -4.802128314971924
    8. 'un' → logprob: -5.052128314971924
    9. 'val' → logprob: -5.302128314971924
    10. ' soit' → logprob: -5.302128314971924

Token 204: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.003003373509272933
    2. 'é' → logprob: -5.8780035972595215
    3. '```' → logprob: -9.753003120422363
    4. 'ed' → logprob: -10.003003120422363
    5. 'ee' → logprob: -10.378003120422363
    6. '#' → logprob: -10.878003120422363
    7. 'ées' → logprob: -11.128003120422363
    8. 'lée' → logprob: -12.253003120422363
    9. 'e' → logprob: -12.503003120422363
    10. '[' → logprob: -12.503003120422363

Token 205: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14309996366500854
    2. ' de' → logprob: -2.5181000232696533
    3. 'd' → logprob: -3.7681000232696533
    4. 'de' → logprob: -4.018099784851074
    5. ' par' → logprob: -5.268099784851074
    6. ',' → logprob: -6.768099784851074
    7. ' ' → logprob: -6.893099784851074
    8. '_' → logprob: -7.018099784851074
    9. 'e' → logprob: -7.393099784851074
    10. '_d' → logprob: -7.518099784851074

Token 206: ' force' (ID: 9578)
  Prédit: 'force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'force' → logprob: -1.6816807985305786
    2. 'length' → logprob: -1.9316807985305786
    3. ' ' → logprob: -2.806680679321289
    4. ' personnes' → logprob: -2.931680679321289
    5. 'person' → logprob: -3.181680679321289
    6. 'un' → logprob: -3.181680679321289
    7. ' force' → logprob: -3.681680679321289
    8. ' des' → logprob: -3.806680679321289
    9. 'adj' → logprob: -3.806680679321289
    10. 'forces' → logprob: -3.806680679321289

Token 207: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.16404907405376434
    2. 'ur' → logprob: -1.9140490293502808
    3. 'u' → logprob: -6.16404914855957
    4. 's' → logprob: -7.66404914855957
    5. '_' → logprob: -8.78904914855957
    6. 'eurs' → logprob: -8.78904914855957
    7. ' ' → logprob: -8.91404914855957
    8. '__' → logprob: -9.03904914855957
    9. '#' → logprob: -9.03904914855957
    10. '```' → logprob: -9.28904914855957

Token 208: ' emp' (ID: 4927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2467208206653595
    2. ' ,' → logprob: -2.621720790863037
    3. '[' → logprob: -3.121720790863037
    4. '_' → logprob: -3.746720790863037
    5. 's' → logprob: -3.746720790863037
    6. ')' → logprob: -4.871720790863037
    7. '[i' → logprob: -4.871720790863037
    8. ' ' → logprob: -5.121720790863037
    9. 'import' → logprob: -5.121720790863037
    10. '<|end|>' → logprob: -5.621720790863037

Token 209: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.161451518535614
    2. '#' → logprob: -3.286451578140259
    3. 'i' → logprob: -3.786451578140259
    4. 'iler' → logprob: -4.41145133972168
    5. '\' → logprob: -5.28645133972168
    6. 'î' → logprob: -5.28645133972168
    7. 'ilé' → logprob: -5.41145133972168
    8. '_' → logprob: -5.47395133972168
    9. '**' → logprob: -5.97395133972168
    10. '   ' → logprob: -5.97395133972168

Token 210: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02939622849225998
    2. 'é' → logprob: -4.154396057128906
    3. 'er' → logprob: -5.279396057128906
    4. 's' → logprob: -6.404396057128906
    5. 'p' → logprob: -6.904396057128906
    6. 'ant' → logprob: -7.279396057128906
    7. '   ' → logprob: -7.404396057128906
    8. 'e' → logprob: -7.779396057128906
    9. 'age' → logprob: -7.779396057128906
    10. 'ées' → logprob: -7.904396057128906

Token 211: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0770145654678345
    2. ',' → logprob: -1.3270145654678345
    3. 'def' → logprob: -1.5770145654678345
    4. ',
' → logprob: -2.452014446258545
    5. '.' → logprob: -3.827014446258545
    6. 's' → logprob: -3.952014446258545
    7. ')' → logprob: -4.702014446258545
    8. '
' → logprob: -4.952014446258545
    9. '```' → logprob: -5.202014446258545
    10. '#' → logprob: -5.452014446258545

Token 212: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48969489336013794
    2. '
' → logprob: -0.9896948933601379
    3. '

' → logprob: -5.114695072174072
    4. 'import' → logprob: -5.864695072174072
    5. '```' → logprob: -6.364695072174072
    6. '\' → logprob: -6.489695072174072
    7. '\n' → logprob: -6.739695072174072
    8. '
' → logprob: -7.114695072174072
    9. ' 
' → logprob: -8.239694595336914
    10. 'n' → logprob: -8.489694595336914

Token 213: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3251880705356598
    2. '
' → logprob: -1.3251880407333374
    3. 'n' → logprob: -5.575188159942627
    4. '

' → logprob: -5.950188159942627
    5. '\' → logprob: -6.075188159942627
    6. '\n' → logprob: -7.075188159942627
    7. ' 
' → logprob: -7.075188159942627
    8. 'import' → logprob: -7.325188159942627
    9. '
' → logprob: -9.075187683105469
    10. '
 
' → logprob: -9.200187683105469

Token 214: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03686242923140526
    2. 'from' → logprob: -3.786862373352051
    3. 'import' → logprob: -4.786862373352051
    4. 'n' → logprob: -5.661862373352051
    5. ' def' → logprob: -6.911862373352051
    6. '#' → logprob: -8.03686237335205
    7. ' from' → logprob: -9.16186237335205
    8. ' n' → logprob: -9.53686237335205
    9. 'dp' → logprob: -9.66186237335205
    10. 'input' → logprob: -10.16186237335205

Token 215: ' va' (ID: 3423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2077479362487793
    2. ' continue' → logprob: -2.7077479362487793
    3. ' def' → logprob: -2.8327479362487793
    4. 'import' → logprob: -4.832747936248779
    5. 'continue' → logprob: -4.957747936248779
    6. ' peut' → logprob: -4.957747936248779
    7. 'from' → logprob: -5.582747936248779
    8. ' n' → logprob: -5.582747936248779
    9. ' import' → logprob: -5.707747936248779
    10. 'contin' → logprob: -5.707747936248779

Token 216: ' utiliser' (ID: 43227)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.7881105542182922
    2. 'def' → logprob: -1.6631104946136475
    3. 'contin' → logprob: -2.5381104946136475
    4. ' utiliser' → logprob: -2.6631104946136475
    5. ' essayer' → logprob: -3.5381104946136475
    6. ' définir' → logprob: -3.5381104946136475
    7. 'util' → logprob: -3.7881104946136475
    8. 'impl' → logprob: -3.9131104946136475
    9. ' coder' → logprob: -4.038110733032227
    10. 'dé' → logprob: -4.663110733032227

Token 217: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.35243895649909973
    2. 'une' → logprob: -1.3524389266967773
    3. ' la' → logprob: -3.6024389266967773
    4. 'la' → logprob: -5.102438926696777
    5. ' du' → logprob: -6.977438926696777
    6. 'l' → logprob: -6.977438926696777
    7. 'du' → logprob: -7.227438926696777
    8. ' un' → logprob: -7.477438926696777
    9. 'dp' → logprob: -7.602438926696777
    10. 'de' → logprob: -7.727438926696777

Token 218: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4512936472892761
    2. ' tableau' → logprob: -2.326293706893921
    3. 'table' → logprob: -2.701293706893921
    4. 'alg' → logprob: -3.701293706893921
    5. 'dfs' → logprob: -3.826293706893921
    6. 'd' → logprob: -4.201293468475342
    7. 'import' → logprob: -4.451293468475342
    8. ' dp' → logprob: -4.451293468475342
    9. 'def' → logprob: -4.451293468475342
    10. 'e' → logprob: -4.576293468475342

Token 219: ' où' (ID: 15113)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1567397564649582
    2. '[' → logprob: -2.7817397117614746
    3. ' ' → logprob: -3.0317397117614746
    4. ',' → logprob: -5.281739711761475
    5. '
' → logprob: -5.406739711761475
    6. ' =' → logprob: -5.781739711761475
    7. '[
' → logprob: -5.781739711761475
    8. ':' → logprob: -5.906739711761475
    9. '(' → logprob: -5.906739711761475
    10. ' 
' → logprob: -6.281739711761475

Token 220: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6657088994979858
    2. ' dp' → logprob: -0.9157088994979858
    3. ' i' → logprob: -2.9157090187072754
    4. 'i' → logprob: -4.415709018707275
    5. ' on' → logprob: -4.790709018707275
    6. ' la' → logprob: -5.790709018707275
    7. ' chaque' → logprob: -5.915709018707275
    8. ' n' → logprob: -6.415709018707275
    9. ' ' → logprob: -7.540709018707275
    10. ' l' → logprob: -7.540709018707275

Token 221: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016316460445523262
    2. '[i' → logprob: -4.8913164138793945
    3. '=' → logprob: -5.1413164138793945
    4. '[' → logprob: -6.1413164138793945
    5. ' ' → logprob: -9.016316413879395
    6. '=[' → logprob: -9.141316413879395
    7. '[u' → logprob: -10.016316413879395
    8. ']' → logprob: -10.266316413879395
    9. '[n' → logprob: -10.266316413879395
    10. '[pos' → logprob: -10.391316413879395

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003362954594194889
    2. ']=' → logprob: -7.003363132476807
    3. ' ]' → logprob: -7.128363132476807
    4. '[i' → logprob: -7.253363132476807
    5. '][' → logprob: -7.878363132476807
    6. '+' → logprob: -8.378362655639648
    7. '[' → logprob: -9.378362655639648
    8. ']+' → logprob: -9.878362655639648
    9. ']+=' → logprob: -10.628362655639648
    10. ' ' → logprob: -10.878362655639648

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02637450024485588
    2. '=' → logprob: -3.651374578475952
    3. '[' → logprob: -10.276374816894531
    4. ' ' → logprob: -11.026374816894531
    5. ' +=' → logprob: -11.651374816894531
    6. ',' → logprob: -12.401374816894531
    7. ' ' → logprob: -12.901374816894531
    8. ']' → logprob: -13.276374816894531
    9. '[i' → logprob: -13.901374816894531
    10. ')' → logprob: -14.026374816894531

Token 224: ' nombre' (ID: 9733)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8149250745773315
    2. 'dp' → logprob: -2.189925193786621
    3. ' float' → logprob: -2.939925193786621
    4. 'min' → logprob: -2.939925193786621
    5. 'float' → logprob: -3.064925193786621
    6. ' dp' → logprob: -3.189925193786621
    7. 'inf' → logprob: -3.314925193786621
    8. ' nombre' → logprob: -3.439925193786621
    9. ' minimal' → logprob: -3.439925193786621
    10. ' min' → logprob: -3.564925193786621

Token 225: ' minimal' (ID: 19957)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1034572124481201
    2. ' de' → logprob: -1.3534572124481201
    3. 'de' → logprob: -2.85345721244812
    4. '_' → logprob: -2.97845721244812
    5. 'def' → logprob: -3.10345721244812
    6. '   ' → logprob: -3.72845721244812
    7. '_dp' → logprob: -3.72845721244812
    8. '_de' → logprob: -3.85345721244812
    9. 'dp' → logprob: -4.103457450866699
    10. '[' → logprob: -4.103457450866699

Token 226: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0008094310760498
    2. ' ' → logprob: -1.7508094310760498
    3. '_' → logprob: -2.25080943107605
    4. ' =' → logprob: -2.50080943107605
    5. '[i' → logprob: -2.87580943107605
    6. '_p' → logprob: -3.00080943107605
    7. '_de' → logprob: -3.25080943107605
    8. 'de' → logprob: -3.75080943107605
    9. '   ' → logprob: -4.500809669494629
    10. ' à' → logprob: -4.625809669494629

Token 227: ' piles' (ID: 90498)
  Prédit: ' piles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piles' → logprob: -0.2320532649755478
    2. 'p' → logprob: -1.607053279876709
    3. ' p' → logprob: -6.107053279876709
    4. ' ' → logprob: -7.232053279876709
    5. ' ' → logprob: -7.357053279876709
    6. 'pile' → logprob: -7.482053279876709
    7. '_p' → logprob: -8.35705280303955
    8. ' pile' → logprob: -8.54455280303955
    9. ' chaînes' → logprob: -8.60705280303955
    10. ' groupes' → logprob: -8.91955280303955

Token 228: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8082353472709656
    2. '[i' → logprob: -0.9332353472709656
    3. '=' → logprob: -3.4332354068756104
    4. '[' → logprob: -4.058235168457031
    5. ' ' → logprob: -4.058235168457031
    6. ']' → logprob: -4.433235168457031
    7. 'dp' → logprob: -4.558235168457031
    8. ')' → logprob: -4.558235168457031
    9. 'import' → logprob: -4.558235168457031
    10. ',' → logprob: -4.808235168457031

Token 229: ' couvrir' (ID: 197187)
  Prédit: ' couvrir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.058043528348207474
    2. ' i' → logprob: -2.9330434799194336
    3. 'i' → logprob: -6.683043479919434
    4. ' la' → logprob: -7.308043479919434
    5. ' couvr' → logprob: -7.808043479919434
    6. ' ' → logprob: -8.933043479919434
    7. ' continuer' → logprob: -9.058043479919434
    8. ' ' → logprob: -9.433043479919434
    9. ' traiter' → logprob: -9.558043479919434
    10. ' les' → logprob: -9.933043479919434

Token 230: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4640554189682007
    2. ' la' → logprob: -1.4640554189682007
    3. ' jusqu' → logprob: -2.5890555381774902
    4. 'i' → logprob: -4.33905553817749
    5. ' les' → logprob: -4.33905553817749
    6. '[i' → logprob: -4.46405553817749
    7. '[' → logprob: -4.71405553817749
    8. ' le' → logprob: -5.58905553817749
    9. ' l' → logprob: -5.83905553817749
    10. ' ' → logprob: -6.33905553817749

Token 231: ' force' (ID: 9578)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2526428699493408
    2. 'i' → logprob: -2.002642869949341
    3. ' positions' → logprob: -3.502642869949341
    4. ' indices' → logprob: -3.752642869949341
    5. 'positions' → logprob: -4.752642631530762
    6. '[i' → logprob: -5.502642631530762
    7. ' force' → logprob: -5.752642631530762
    8. ' ' → logprob: -5.877642631530762
    9. 'indices' → logprob: -6.002642631530762
    10. '[' → logprob: -6.252642631530762

Token 232: 'urs' (ID: 1628)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4209428131580353
    2. 'urs' → logprob: -1.420942783355713
    3. 'ur' → logprob: -2.795942783355713
    4. '[' → logprob: -3.420942783355713
    5. '[]' → logprob: -5.670942783355713
    6. ']' → logprob: -6.420942783355713
    7. 'eurs' → logprob: -7.420942783355713
    8. '   ' → logprob: -7.545942783355713
    9. ' ' → logprob: -7.920942783355713
    10. 'u' → logprob: -8.045943260192871

Token 233: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018629323691129684
    2. '[' → logprob: -5.018629550933838
    3. '.' → logprob: -5.893629550933838
    4. ']' → logprob: -6.643629550933838
    5. ',' → logprob: -7.143629550933838
    6. 'from' → logprob: -7.268629550933838
    7. '```' → logprob: -7.268629550933838
    8. ' à' → logprob: -7.393629550933838
    9. ' jusqu' → logprob: -7.393629550933838
    10. 'dp' → logprob: -7.518629550933838

Token 234: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.786279559135437
    2. ' i' → logprob: -1.411279559135437
    3. ' ' → logprob: -1.536279559135437
    4. 'i' → logprob: -2.5362796783447266
    5. ' la' → logprob: -5.536279678344727
    6. '[' → logprob: -7.411279678344727
    7. ' l' → logprob: -7.536279678344727
    8. 'l' → logprob: -7.911279678344727
    9. 'la' → logprob: -8.286279678344727
    10. '[i' → logprob: -8.786279678344727

Token 235: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4354828894138336
    2. ' à' → logprob: -1.1854828596115112
    3. ']' → logprob: -4.185482978820801
    4. 'à' → logprob: -4.435482978820801
    5. ' +' → logprob: -4.810482978820801
    6. ':' → logprob: -6.060482978820801
    7. ' ' → logprob: -6.685482978820801
    8. ')' → logprob: -6.935482978820801
    9. ' jusqu' → logprob: -7.310482978820801
    10. ' ]' → logprob: -7.560482978820801

Token 236: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6461556553840637
    2. 'n' → logprob: -1.021155595779419
    3. 'len' → logprob: -2.646155595779419
    4. ' len' → logprob: -3.396155595779419
    5. 'i' → logprob: -5.271155834197998
    6. ' i' → logprob: -6.021155834197998
    7. 'N' → logprob: -6.271155834197998
    8. ' N' → logprob: -6.396155834197998
    9. ' ' → logprob: -9.64615535736084
    10. ' la' → logprob: -9.89615535736084

Token 237: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7922885417938232
    2. '[i' → logprob: -0.9172885417938232
    3. '[' → logprob: -2.0422885417938232
    4. '[
' → logprob: -5.167288780212402
    5. '
' → logprob: -5.917288780212402
    6. 'def' → logprob: -6.417288780212402
    7. '#' → logprob: -6.917288780212402
    8. 'dp' → logprob: -6.917288780212402
    9. '=' → logprob: -7.167288780212402
    10. ')' → logprob: -7.292288780212402

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2828185558319092
    2. 'i' → logprob: -1.7828185558319092
    3. ')' → logprob: -2.907818555831909
    4. ' ' → logprob: -4.032818794250488
    5. ' i' → logprob: -6.282818794250488
    6. ' )' → logprob: -7.782818794250488
    7. 'len' → logprob: -7.782818794250488
    8. '[i' → logprob: -7.782818794250488
    9. 'idx' → logprob: -7.782818794250488
    10. 'n' → logprob: -7.907818794250488

Token 239: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0313667058944702
    2. '[' → logprob: -1.2813667058944702
    3. '[
' → logprob: -2.2813668251037598
    4. '[i' → logprob: -2.6563668251037598
    5. ' =' → logprob: -3.6563668251037598
    6. ':' → logprob: -3.6563668251037598
    7. ',' → logprob: -3.7813668251037598
    8. '\' → logprob: -4.03136682510376
    9. '\n' → logprob: -4.53136682510376
    10. ']' → logprob: -4.53136682510376

Token 240: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11036528646945953
    2. '\' → logprob: -3.860365390777588
    3. '\n' → logprob: -3.860365390777588
    4. 'dp' → logprob: -4.235365390777588
    5. ':' → logprob: -4.360365390777588
    6. 'def' → logprob: -4.860365390777588
    7. '[' → logprob: -5.110365390777588
    8. ' 
' → logprob: -5.110365390777588
    9. '[
' → logprob: -5.735365390777588
    10. ':
' → logprob: -5.735365390777588

Token 241: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5689618587493896
    2. 'dp' → logprob: -0.9439618587493896
    3. 'def' → logprob: -4.318962097167969
    4. '\' → logprob: -4.318962097167969
    5. '\n' → logprob: -4.318962097167969
    6. ' 
' → logprob: -6.693962097167969
    7. '

' → logprob: -7.068962097167969
    8. 'n' → logprob: -7.193962097167969
    9. '  
' → logprob: -7.943962097167969
    10. '
' → logprob: -8.193962097167969

Token 242: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06433498114347458
    2. 'dp' → logprob: -3.6893348693847656
    3. 'import' → logprob: -4.314334869384766
    4. 'N' → logprob: -4.439334869384766
    5. 'from' → logprob: -5.189334869384766
    6. ' def' → logprob: -5.814334869384766
    7. ' N' → logprob: -5.939334869384766
    8. 'n' → logprob: -8.314334869384766
    9. '#' → logprob: -8.314334869384766
    10. '```' → logprob: -8.939334869384766

Token 243: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06264229863882065
    2. 'i' → logprob: -2.8126423358917236
    3. ' j' → logprob: -7.6876420974731445
    4. ' ' → logprob: -9.937642097473145
    5. ' ' → logprob: -10.187642097473145
    6. 'j' → logprob: -10.187642097473145
    7. ' _' → logprob: -10.937642097473145
    8. '_' → logprob: -11.062642097473145
    9. ' force' → logprob: -11.187642097473145
    10. ' next' → logprob: -11.187642097473145

Token 244: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030125673860311508
    2. 'i' → logprob: -4.530125617980957
    3. ' position' → logprob: -4.905125617980957
    4. ' j' → logprob: -5.155125617980957
    5. ' ' → logprob: -5.655125617980957
    6. ' possible' → logprob: -7.655125617980957
    7. ' pos' → logprob: -7.780125617980957
    8. 'position' → logprob: -8.280125617980957
    9. ' ' → logprob: -8.655125617980957
    10. ' _' → logprob: -8.905125617980957

Token 245: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5209133625030518
    2. '[' → logprob: -1.6459133625030518
    3. '[i' → logprob: -1.6459133625030518
    4. ' i' → logprob: -1.7709133625030518
    5. ' in' → logprob: -2.3959133625030518
    6. 'i' → logprob: -3.0209133625030518
    7. ' ' → logprob: -3.2709133625030518
    8. ' ,' → logprob: -4.145913124084473
    9. ' [' → logprob: -5.520913124084473
    10. 'in' → logprob: -5.520913124084473

Token 246: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5558120012283325
    2. ',' → logprob: -1.6808120012283325
    3. '+' → logprob: -2.180811882019043
    4. ' :' → logprob: -2.430811882019043
    5. '[' → logprob: -4.680811882019043
    6. '[i' → logprob: -4.805811882019043
    7. ' ' → logprob: -5.430811882019043
    8. ' ,' → logprob: -5.555811882019043
    9. ':
' → logprob: -6.055811882019043
    10. ']' → logprob: -6.430811882019043

Token 247: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5936529636383057
    2. ' ' → logprob: -1.2186529636383057
    3. ' for' → logprob: -2.4686529636383057
    4. ' on' → logprob: -3.2186529636383057
    5. 'for' → logprob: -4.843652725219727
    6. ' j' → logprob: -4.968652725219727
    7. ')' → logprob: -6.593652725219727
    8. '  ' → logprob: -6.843652725219727
    9. ' )' → logprob: -7.218652725219727
    10. ' #' → logprob: -7.218652725219727

Token 248: ' teste' (ID: 62670)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5603548884391785
    2. ' ' → logprob: -1.6853549480438232
    3. '[' → logprob: -2.0603549480438232
    4. '=' → logprob: -2.9353549480438232
    5. 'for' → logprob: -3.9353549480438232
    6. ' for' → logprob: -5.060354709625244
    7. ' can' → logprob: -5.185354709625244
    8. ':' → logprob: -5.560354709625244
    9. '.' → logprob: -5.560354709625244
    10. ' in' → logprob: -5.685354709625244

Token 249: ' de' (ID: 334)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.038382839411497116
    2. 'j' → logprob: -4.0383830070495605
    3. ' ' → logprob: -4.6633830070495605
    4. ' les' → logprob: -5.5383830070495605
    5. ' des' → logprob: -6.4133830070495605
    6. '  ' → logprob: -6.9133830070495605
    7. ' for' → logprob: -7.0383830070495605
    8. ' de' → logprob: -7.5383830070495605
    9. 'for' → logprob: -7.9133830070495605
    10. ' ' → logprob: -8.038382530212402

Token 250: ' faire' (ID: 8119)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7388225197792053
    2. ' range' → logprob: -1.8638224601745605
    3. ' j' → logprob: -2.2388224601745605
    4. ' choisir' → logprob: -2.3638224601745605
    5. ' ' → logprob: -3.3638224601745605
    6. 'range' → logprob: -3.6138224601745605
    7. 'i' → logprob: -3.6138224601745605
    8. ' for' → logprob: -4.3638224601745605
    9. ' continuer' → logprob: -4.4888224601745605
    10. 'r' → logprob: -4.9888224601745605

Token 251: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.24246688187122345
    2. ' j' → logprob: -2.367466926574707
    3. ' i' → logprob: -2.992466926574707
    4. 'un' → logprob: -3.242466926574707
    5. ' une' → logprob: -4.617466926574707
    6. ' ' → logprob: -5.117466926574707
    7. 'j' → logprob: -5.492466926574707
    8. 'i' → logprob: -6.242466926574707
    9. ' des' → logprob: -6.242466926574707
    10. 'une' → logprob: -6.742466926574707

Token 252: ' pile' (ID: 39732)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0064479112625122
    2. 'for' → logprob: -1.2564479112625122
    3. 'pile' → logprob: -1.8814479112625122
    4. ' range' → logprob: -3.5064477920532227
    5. 'force' → logprob: -3.6314477920532227
    6. ' for' → logprob: -3.6314477920532227
    7. 'forcer' → logprob: -4.506447792053223
    8. ' ' → logprob: -4.631447792053223
    9. ')' → logprob: -4.756447792053223
    10. ' force' → logprob: -4.881447792053223

Token 253: ' allant' (ID: 122150)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.41782936453819275
    2. ' i' → logprob: -2.2928292751312256
    3. 'i' → logprob: -2.9178292751312256
    4. 'de' → logprob: -3.2928292751312256
    5. ' de' → logprob: -3.7928292751312256
    6. '   ' → logprob: -4.417829513549805
    7. ' ' → logprob: -4.542829513549805
    8. ',' → logprob: -4.667829513549805
    9. 'from' → logprob: -4.667829513549805
    10. '[j' → logprob: -4.667829513549805

Token 254: ' de' (ID: 334)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.5945057272911072
    2. 'de' → logprob: -1.594505786895752
    3. ' de' → logprob: -1.719505786895752
    4. ' jusqu' → logprob: -2.969505786895752
    5. 'from' → logprob: -4.969505786895752
    6. 'j' → logprob: -5.094505786895752
    7. ' jusque' → logprob: -7.469505786895752
    8. ' from' → logprob: -7.844505786895752
    9. ' j' → logprob: -8.094505310058594
    10. ' ' → logprob: -8.719505310058594

Token 255: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5232837796211243
    2. 'i' → logprob: -0.8982837796211243
    3. ' ' → logprob: -9.273283958435059
    4. ' ' → logprob: -10.398283958435059
    5. '```' → logprob: -11.273283958435059
    6. '[i' → logprob: -12.023283958435059
    7. '`' → logprob: -12.398283958435059
    8. 'j' → logprob: -13.273283958435059
    9. '_i' → logprob: -13.523283958435059
    10. ' `' → logprob: -13.648283958435059

Token 256: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2565902769565582
    2. ' ' → logprob: -1.8815902471542358
    3. ' jusqu' → logprob: -3.1315903663635254
    4. 'à' → logprob: -3.7565903663635254
    5. ' i' → logprob: -6.131590366363525
    6. 'i' → logprob: -6.631590366363525
    7. ' to' → logprob: -7.006590366363525
    8. '```' → logprob: -7.256590366363525
    9. ' jusque' → logprob: -7.631590366363525
    10. 'jus' → logprob: -8.381589889526367

Token 257: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5330480337142944
    2. 'j' → logprob: -1.4080480337142944
    3. ' i' → logprob: -2.033048152923584
    4. ' j' → logprob: -3.283048152923584
    5. ' ' → logprob: -9.783047676086426
    6. ' ' → logprob: -10.158047676086426
    7. '   ' → logprob: -12.533047676086426
    8. '	i' → logprob: -12.908047676086426
    9. '```' → logprob: -13.158047676086426
    10. '  ' → logprob: -13.283047676086426

Token 258: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35772308707237244
    2. ',' → logprob: -2.6077229976654053
    3. ':' → logprob: -2.9827229976654053
    4. ' +' → logprob: -2.9827229976654053
    5. ' ' → logprob: -3.2327229976654053
    6. 'for' → logprob: -3.6077229976654053
    7. ' for' → logprob: -4.107723236083984
    8. '[i' → logprob: -4.732723236083984
    9. ')' → logprob: -4.982723236083984
    10. ' :' → logprob: -5.107723236083984

Token 259: 'j' (ID: 73)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05936198681592941
    2. ' )' → logprob: -3.4343619346618652
    3. 'j' → logprob: -4.934361934661865
    4. '+' → logprob: -4.934361934661865
    5. '):' → logprob: -5.059361934661865
    6. ' ' → logprob: -6.559361934661865
    7. '=' → logprob: -7.684361934661865
    8. ' j' → logprob: -7.809361934661865
    9. ' ):' → logprob: -8.059362411499023
    10. ' +' → logprob: -8.184362411499023

Token 260: '>=' (ID: 20974)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04025128111243248
    2. ' +' → logprob: -3.2902512550354004
    3. ')' → logprob: -7.4152512550354
    4. '=' → logprob: -7.5402512550354
    5. 'import' → logprob: -8.790251731872559
    6. ' ' → logprob: -9.040251731872559
    7. ' =' → logprob: -9.540251731872559
    8. '+)' → logprob: -9.790251731872559
    9. '+
' → logprob: -9.790251731872559
    10. '>' → logprob: -9.915251731872559

Token 261: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804344683885574
    2. ' i' → logprob: -3.28804349899292
    3. ' ' → logprob: -13.413043022155762
    4. '_i' → logprob: -15.913043022155762
    5. ' ' → logprob: -16.288043975830078
    6. ')' → logprob: -16.538043975830078
    7. '	i' → logprob: -16.788043975830078
    8. '   ' → logprob: -16.788043975830078
    9. '
' → logprob: -16.913043975830078
    10. '  ' → logprob: -17.663043975830078

Token 262: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16098430752754211
    2. '+' → logprob: -2.0359842777252197
    3. ' +' → logprob: -5.160984516143799
    4. '),' → logprob: -5.160984516143799
    5. ' )' → logprob: -5.410984516143799
    6. '):' → logprob: -6.410984516143799
    7. ',' → logprob: -9.03598403930664
    8. ')+' → logprob: -9.28598403930664
    9. ' ),' → logprob: -9.41098403930664
    10. ')
' → logprob: -9.41098403930664

Token 263: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023597868159413338
    2. ')' → logprob: -5.148597717285156
    3. ' )' → logprob: -5.523597717285156
    4. ' 
' → logprob: -5.773597717285156
    5. ' ' → logprob: -6.773597717285156
    6. ' =' → logprob: -7.023597717285156
    7. '    ' → logprob: -7.023597717285156
    8. ',' → logprob: -7.273597717285156
    9. ' and' → logprob: -7.398597717285156
    10. '#' → logprob: -7.523597717285156

Token 264: ' vér' (ID: 42524)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5727428197860718
    2. 'range' → logprob: -1.8227428197860718
    3. ' essay' → logprob: -2.4477429389953613
    4. ' test' → logprob: -3.4477429389953613
    5. 'for' → logprob: -3.8227429389953613
    6. '```' → logprob: -3.8227429389953613
    7. 'test' → logprob: -3.9477429389953613
    8. ' ajout' → logprob: -4.447742938995361
    9. 'j' → logprob: -4.822742938995361
    10. ' chois' → logprob: -4.947742938995361

Token 265: 'ifiant' (ID: 91447)
  Prédit: 'ifiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiant' → logprob: -0.0015684263780713081
    2. 'if' → logprob: -6.50156831741333
    3. '```' → logprob: -11.126568794250488
    4. 'fi' → logprob: -11.376568794250488
    5. 'i' → logprob: -12.001568794250488
    6. 'ification' → logprob: -12.126568794250488
    7. 'f' → logprob: -13.126568794250488
    8. 'ifi' → logprob: -13.376568794250488
    9. 'asant' → logprob: -13.501568794250488
    10. 'ifier' → logprob: -13.501568794250488

Token 266: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.37297406792640686
    2. ' if' → logprob: -1.9979740381240845
    3. ' la' → logprob: -2.872974157333374
    4. ' que' → logprob: -2.872974157333374
    5. ' l' → logprob: -3.372974157333374
    6. ' les' → logprob: -4.997973918914795
    7. 'if' → logprob: -5.372973918914795
    8. 'si' → logprob: -5.622973918914795
    9. ' ' → logprob: -5.747973918914795
    10. ' s' → logprob: -6.247973918914795

Token 267: ' l' (ID: 305)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7341132760047913
    2. ' la' → logprob: -0.9841132760047913
    3. ' les' → logprob: -3.3591132164001465
    4. 'j' → logprob: -3.7341132164001465
    5. ' i' → logprob: -4.2341132164001465
    6. ' all' → logprob: -4.4841132164001465
    7. ' force' → logprob: -4.4841132164001465
    8. ' on' → logprob: -4.6091132164001465
    9. ' ' → logprob: -4.8591132164001465
    10. ' le' → logprob: -5.2341132164001465

Token 268: ''emp' (ID: 140539)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.028316693380475044
    2. ' ' → logprob: -4.778316497802734
    3. ' '' → logprob: -5.028316497802734
    4. 'j' → logprob: -5.403316497802734
    5. ' ' → logprob: -6.653316497802734
    6. ''' → logprob: -6.778316497802734
    7. ' i' → logprob: -6.903316497802734
    8. ' )' → logprob: -7.778316497802734
    9. 'e' → logprob: -7.903316497802734
    10. '_' → logprob: -8.278316497802734

Token 269: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.24508273601531982
    2. 'il' → logprob: -2.2450828552246094
    3. 'i' → logprob: -3.1200828552246094
    4. 'iler' → logprob: -3.2450828552246094
    5. '[i' → logprob: -4.745082855224609
    6. '   ' → logprob: -5.370082855224609
    7. 'ilé' → logprob: -5.870082855224609
    8. ' i' → logprob: -6.495082855224609
    9. 'ilage' → logprob: -7.120082855224609
    10. '  ' → logprob: -7.120082855224609

Token 270: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.012250741943717003
    2. 'r' → logprob: -4.637250900268555
    3. 'm' → logprob: -7.262250900268555
    4. 'ments' → logprob: -7.387250900268555
    5. 'mentation' → logprob: -8.137250900268555
    6. '   ' → logprob: -8.887250900268555
    7. 'rement' → logprob: -9.137250900268555
    8. ' ' → logprob: -9.262250900268555
    9. 'cement' → logprob: -9.387250900268555
    10. 'nement' → logprob: -9.512250900268555

Token 271: ' est' (ID: 893)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.47180595993995667
    2. ' ' → logprob: -2.096806049346924
    3. ' est' → logprob: -2.471806049346924
    4. 'possible' → logprob: -3.221806049346924
    5. '_possible' → logprob: -3.596806049346924
    6. ' i' → logprob: -3.971806049346924
    7. ' ' → logprob: -4.346806049346924
    8. '_' → logprob: -4.346806049346924
    9. '[i' → logprob: -4.471806049346924
    10. ' j' → logprob: -4.846806049346924

Token 272: ' valide' (ID: 137323)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.40923285484313965
    2. ' possible' → logprob: -1.7842328548431396
    3. ' valide' → logprob: -2.4092328548431396
    4. 'valid' → logprob: -3.2842328548431396
    5. 'val' → logprob: -3.6592328548431396
    6. ' valid' → logprob: -4.784233093261719
    7. ' val' → logprob: -5.909233093261719
    8. '```' → logprob: -6.284233093261719
    9. ' valable' → logprob: -7.034233093261719
    10. '_possible' → logprob: -8.034233093261719

Token 273: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.718290388584137
    2. ':' → logprob: -1.4682903289794922
    3. ')' → logprob: -2.718290328979492
    4. '.' → logprob: -2.718290328979492
    5. ' ' → logprob: -3.093290328979492
    6. '[' → logprob: -4.218290328979492
    7. ',
' → logprob: -4.218290328979492
    8. '[i' → logprob: -4.343290328979492
    9. 'import' → logprob: -4.968290328979492
    10. '   ' → logprob: -5.218290328979492

Token 274: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664874792099
    2. '
' → logprob: -1.3914874792099
    3. 'def' → logprob: -1.7664874792099
    4. '_' → logprob: -2.7664875984191895
    5. ':' → logprob: -3.0164875984191895
    6. ' ' → logprob: -3.1414875984191895
    7. '\' → logprob: -3.5164875984191895
    8. ' 
' → logprob: -3.5164875984191895
    9. '[
' → logprob: -4.0164875984191895
    10. ' =' → logprob: -4.2664875984191895

Token 275: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8932972550392151
    2. 'def' → logprob: -1.3932971954345703
    3. '[' → logprob: -1.8932971954345703
    4. ' 
' → logprob: -2.5182971954345703
    5. '\' → logprob: -3.3932971954345703
    6. ' ' → logprob: -3.7682971954345703
    7. ':' → logprob: -4.26829719543457
    8. '[
' → logprob: -4.64329719543457
    9. '\n' → logprob: -4.89329719543457
    10. '_' → logprob: -5.01829719543457

Token 276: ' La' (ID: 3038)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5501434803009033
    2. 'for' → logprob: -1.1751434803009033
    3. '#' → logprob: -2.9251434803009033
    4. ' for' → logprob: -3.5501434803009033
    5. ' def' → logprob: -4.800143241882324
    6. 'import' → logprob: -5.175143241882324
    7. ' ' → logprob: -5.300143241882324
    8. ' ' → logprob: -5.800143241882324
    9. 'from' → logprob: -6.050143241882324
    10. 'dp' → logprob: -6.050143241882324

Token 277: ' validation' (ID: 19618)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.3513976335525513
    2. ' ' → logprob: -1.6013976335525513
    3. ' for' → logprob: -1.8513976335525513
    4. ' next' → logprob: -2.1013975143432617
    5. 'n' → logprob: -2.8513975143432617
    6. ' code' → logprob: -3.3513975143432617
    7. ' ' → logprob: -3.6013975143432617
    8. 'def' → logprob: -3.7263975143432617
    9. 'for' → logprob: -3.9763975143432617
    10. ' #' → logprob: -4.476397514343262

Token 278: ' consiste' (ID: 46504)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.730250895023346
    2. ' de' → logprob: -1.2302508354187012
    3. ' se' → logprob: -2.980250835418701
    4. ' ' → logprob: -3.230250835418701
    5. ' du' → logprob: -3.480250835418701
    6. ' s' → logprob: -3.605250835418701
    7. ' ' → logprob: -3.855250835418701
    8. 'de' → logprob: -4.980250835418701
    9. '_' → logprob: -5.105250835418701
    10. ' d' → logprob: -5.230250835418701

Token 279: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.02920151688158512
    2. ' ' → logprob: -4.029201507568359
    3. '_' → logprob: -5.154201507568359
    4. 'à' → logprob: -5.529201507568359
    5. ' ' → logprob: -7.529201507568359
    6. ' =' → logprob: -9.02920150756836
    7. ')' → logprob: -9.27920150756836
    8. ' a' → logprob: -9.27920150756836
    9. ' )' → logprob: -9.27920150756836
    10. '=' → logprob: -10.02920150756836

Token 280: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.02137540467083454
    2. 'v' → logprob: -4.6463751792907715
    3. ' tester' → logprob: -5.6463751792907715
    4. ' verifier' → logprob: -6.3963751792907715
    5. 'ver' → logprob: -6.8963751792907715
    6. 'tester' → logprob: -7.6463751792907715
    7. ' ' → logprob: -7.7713751792907715
    8. ' pouvoir' → logprob: -8.02137565612793
    9. 'contin' → logprob: -8.02137565612793
    10. ' vér' → logprob: -8.02137565612793

Token 281: ' que' (ID: 661)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.24152222275733948
    2. ' if' → logprob: -1.741522192955017
    3. ' que' → logprob: -4.616522312164307
    4. 'if' → logprob: -4.866522312164307
    5. 'si' → logprob: -4.866522312164307
    6. ' la' → logprob: -4.991522312164307
    7. ' l' → logprob: -5.741522312164307
    8. ' ' → logprob: -6.366522312164307
    9. ' ' → logprob: -7.241522312164307
    10. 'que' → logprob: -7.491522312164307

Token 282: ' chaque' (ID: 21194)
  Prédit: ' force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' force' → logprob: -1.283409595489502
    2. ' j' → logprob: -1.658409595489502
    3. ' la' → logprob: -1.783409595489502
    4. 'j' → logprob: -2.408409595489502
    5. ' les' → logprob: -3.033409595489502
    6. ' for' → logprob: -3.533409595489502
    7. ' i' → logprob: -3.783409595489502
    8. 'for' → logprob: -3.783409595489502
    9. ' le' → logprob: -3.908409595489502
    10. 'force' → logprob: -4.033409595489502

Token 283: ' force' (ID: 9578)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.20523419976234436
    2. 'j' → logprob: -2.3302342891693115
    3. ' force' → logprob: -3.7052342891693115
    4. ' espace' → logprob: -4.330234050750732
    5. 'force' → logprob: -4.705234050750732
    6. ' ' → logprob: -4.955234050750732
    7. ' adjacent' → logprob: -5.580234050750732
    8. '```' → logprob: -5.705234050750732
    9. ' i' → logprob: -6.080234050750732
    10. 'adj' → logprob: -6.080234050750732

Token 284: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.25400570034980774
    2. '[i' → logprob: -2.0040056705474854
    3. ' ' → logprob: -3.7540056705474854
    4. 'er' → logprob: -4.1290059089660645
    5. '   ' → logprob: -4.1290059089660645
    6. 'urs' → logprob: -5.1290059089660645
    7. '[' → logprob: -5.1290059089660645
    8. '_' → logprob: -5.8790059089660645
    9. ')' → logprob: -6.0040059089660645
    10. 'u' → logprob: -6.2540059089660645

Token 285: ' peut' (ID: 9216)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2703961730003357
    2. ' i' → logprob: -1.7703962326049805
    3. ' de' → logprob: -4.7703962326049805
    4. ' ' → logprob: -4.8953962326049805
    5. 'sou' → logprob: -4.8953962326049805
    6. '[' → logprob: -5.0203962326049805
    7. ' n' → logprob: -5.2703962326049805
    8. ' j' → logprob: -5.5203962326049805
    9. '[j' → logprob: -5.6453962326049805
    10. ' emp' → logprob: -5.8953962326049805

Token 286: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.23784703016281128
    2. ' sou' → logprob: -1.737847089767456
    3. 's' → logprob: -3.862847089767456
    4. ' ' → logprob: -5.612846851348877
    5. 'lever' → logprob: -5.862846851348877
    6. ' soul' → logprob: -6.362846851348877
    7. ' ' → logprob: -6.737846851348877
    8. 'emp' → logprob: -7.237846851348877
    9. 'être' → logprob: -7.487846851348877
    10. ' être' → logprob: -7.737846851348877

Token 287: 'lever' (ID: 43558)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16455359756946564
    2. 'pp' → logprob: -2.664553642272949
    3. 'lever' → logprob: -3.789553642272949
    4. 'r' → logprob: -3.914553642272949
    5. 'ff' → logprob: -4.039553642272949
    6. 'pper' → logprob: -4.664553642272949
    7. 'per' → logprob: -5.289553642272949
    8. 'porter' → logprob: -6.664553642272949
    9. '```' → logprob: -7.289553642272949
    10. 'pir' → logprob: -7.414553642272949

Token 288: ' le' (ID: 505)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.5883653163909912
    2. ' force' → logprob: -1.5883653163909912
    3. ' son' → logprob: -1.7133653163909912
    4. ' le' → logprob: -1.7133653163909912
    5. ' ' → logprob: -2.463365316390991
    6. ' i' → logprob: -3.463365316390991
    7. 'son' → logprob: -3.963365316390991
    8. 'le' → logprob: -4.08836555480957
    9. ' celui' → logprob: -4.08836555480957
    10. ' la' → logprob: -4.71336555480957

Token 289: ' suivant' (ID: 68705)
  Prédit: ' suivant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.5502394437789917
    2. 'force' → logprob: -1.5502394437789917
    3. ' force' → logprob: -2.8002395629882812
    4. 'su' → logprob: -2.9252395629882812
    5. 'j' → logprob: -3.6752395629882812
    6. ' j' → logprob: -4.175239562988281
    7. 'vo' → logprob: -4.800239562988281
    8. '```' → logprob: -4.800239562988281
    9. ' voisin' → logprob: -4.925239562988281
    10. 'next' → logprob: -5.300239562988281

Token 290: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.088624358177185
    2. '.' → logprob: -1.838624358177185
    3. '[i' → logprob: -2.4636244773864746
    4. ',' → logprob: -2.5886244773864746
    5. '
' → logprob: -2.5886244773864746
    6. ',
' → logprob: -2.8386244773864746
    7. ':' → logprob: -2.9636244773864746
    8. 'dp' → logprob: -3.8386244773864746
    9. '.
' → logprob: -4.088624477386475
    10. ':
' → logprob: -4.338624477386475

Token 291: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0766996219754219
    2. 'la' → logprob: -2.701699733734131
    3. ' ' → logprob: -6.576699733734131
    4. ' le' → logprob: -7.076699733734131
    5. ' une' → logprob: -7.201699733734131
    6. ' sa' → logprob: -7.451699733734131
    7. 'le' → logprob: -7.576699733734131
    8. 'l' → logprob: -7.951699733734131
    9. ' ' → logprob: -8.076699256896973
    10. ' range' → logprob: -8.076699256896973

Token 292: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -1.023094654083252
    2. 'chaine' → logprob: -1.148094654083252
    3. 'range' → logprob: -2.148094654083252
    4. ' range' → logprob: -3.023094654083252
    5. ' pile' → logprob: -3.023094654083252
    6. '1' → logprob: -3.648094654083252
    7. ' chaine' → logprob: -3.773094654083252
    8. ' chaîne' → logprob: -4.148094654083252
    9. ' ' → logprob: -4.273094654083252
    10. 'chain' → logprob: -5.273094654083252

Token 293: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4496248960494995
    2. '
' → logprob: -2.074625015258789
    3. ':' → logprob: -2.824625015258789
    4. 'dp' → logprob: -2.949625015258789
    5. '.' → logprob: -3.699625015258789
    6. ':
' → logprob: -3.949625015258789
    7. '\' → logprob: -4.199625015258789
    8. ',
' → logprob: -4.449625015258789
    9. ',' → logprob: -4.449625015258789
    10. '[i' → logprob: -4.949625015258789

Token 294: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4553513526916504
    2. 'def' → logprob: -2.5803513526916504
    3. ':' → logprob: -2.7053513526916504
    4. '[
' → logprob: -2.8303513526916504
    5. ' ' → logprob: -3.8303513526916504
    6. '.' → logprob: -3.8303513526916504
    7. ',' → logprob: -3.8303513526916504
    8. '_' → logprob: -3.9553513526916504
    9. '\' → logprob: -4.08035135269165
    10. '
' → logprob: -4.58035135269165

Token 295: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1355886459350586
    2. '\' → logprob: -1.6355886459350586
    3. ' 
' → logprob: -1.7605886459350586
    4. '_' → logprob: -2.7605886459350586
    5. '
' → logprob: -2.7605886459350586
    6. ' ' → logprob: -3.1355886459350586
    7. 'def' → logprob: -3.1355886459350586
    8. '\n' → logprob: -3.3855886459350586
    9. 'dp' → logprob: -3.7605886459350586
    10. 'd' → logprob: -4.885588645935059

Token 296: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005295307841151953
    2. 'dp' → logprob: -5.380295276641846
    3. '#' → logprob: -8.630295753479004
    4. 'import' → logprob: -8.755295753479004
    5. 'from' → logprob: -8.880295753479004
    6. 'for' → logprob: -9.255295753479004
    7. ' def' → logprob: -9.880295753479004
    8. '
' → logprob: -10.755295753479004
    9. 'N' → logprob: -11.505295753479004
    10. ' 
' → logprob: -12.130295753479004

Token 297: ' poids' (ID: 56058)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5670232772827148
    2. ' for' → logprob: -1.5670232772827148
    3. ' next' → logprob: -2.192023277282715
    4. 'for' → logprob: -3.067023277282715
    5. ' def' → logprob: -3.942023277282715
    6. 'def' → logprob: -4.317023277282715
    7. ' ' → logprob: -5.317023277282715
    8. ' ' → logprob: -5.442023277282715
    9. ' i' → logprob: -5.817023277282715
    10. 'i' → logprob: -6.567023277282715

Token 298: ' total' (ID: 3609)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8191846609115601
    2. '_' → logprob: -2.3191847801208496
    3. 's' → logprob: -2.4441847801208496
    4. '[i' → logprob: -2.9441847801208496
    5. '_des' → logprob: -3.1941847801208496
    6. '[' → logprob: -3.3191847801208496
    7. ' de' → logprob: -3.5691847801208496
    8. '_max' → logprob: -3.5691847801208496
    9. ' =' → logprob: -3.6941847801208496
    10. ' ' → logprob: -3.8191847801208496

Token 299: ' emp' (ID: 4927)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.4020447731018066
    2. '_' → logprob: -1.5270447731018066
    3. ' des' → logprob: -1.9020447731018066
    4. ' )' → logprob: -2.4020447731018066
    5. ' ' → logprob: -2.6520447731018066
    6. ')' → logprob: -2.9020447731018066
    7. ' de' → logprob: -3.5270447731018066
    8. 'total' → logprob: -3.7770447731018066
    9. ' =' → logprob: -3.7770447731018066
    10. '<|end|>' → logprob: -4.777044773101807

Token 300: 'ilé' (ID: 156760)
  Prédit: 'ilé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilé' → logprob: -0.0070084016770124435
    2. 'il' → logprob: -5.2570085525512695
    3. 'ile' → logprob: -6.8820085525512695
    4. 'êche' → logprob: -8.63200855255127
    5. 'al' → logprob: -9.25700855255127
    6. '**' → logprob: -9.38200855255127
    7. 'ê' → logprob: -9.75700855255127
    8. 'iler' → logprob: -10.38200855255127
    9. ' ' → logprob: -10.63200855255127
    10. 'elé' → logprob: -10.75700855255127

Token 301: ' doit' (ID: 21822)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0133469104766846
    2. ' =' → logprob: -1.1383469104766846
    3. ' <=' → logprob: -3.0133469104766846
    4. ' +=' → logprob: -3.1383469104766846
    5. ' +' → logprob: -3.2633469104766846
    6. ' ' → logprob: -3.3883469104766846
    7. '_total' → logprob: -3.3883469104766846
    8. '=' → logprob: -4.1383466720581055
    9. '+' → logprob: -4.2633466720581055
    10. ' est' → logprob: -4.3883466720581055

Token 302: ' respecter' (ID: 107203)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2515915632247925
    2. ' être' → logprob: -2.126591682434082
    3. '<=' → logprob: -2.751591682434082
    4. ' ' → logprob: -4.626591682434082
    5. ' ' → logprob: -5.376591682434082
    6. ' ≤' → logprob: -5.501591682434082
    7. ' rester' → logprob: -5.751591682434082
    8. 'être' → logprob: -5.751591682434082
    9. ' <' → logprob: -6.126591682434082
    10. '_' → logprob: -6.376591682434082

Token 303: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6876180171966553
    2. ' les' → logprob: -0.9376180171966553
    3. 'les' → logprob: -3.4376180171966553
    4. '<=' → logprob: -3.4376180171966553
    5. ' <=' → logprob: -3.8126180171966553
    6. 'le' → logprob: -5.062618255615234
    7. ' le' → logprob: -5.187618255615234
    8. 'la' → logprob: -6.187618255615234
    9. ' l' → logprob: -6.437618255615234
    10. ' ' → logprob: -7.687618255615234

Token 304: ' capacités' (ID: 120315)
  Prédit: ' contraintes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.9720448851585388
    2. ' constraints' → logprob: -1.5970449447631836
    3. ' <=' → logprob: -1.7220449447631836
    4. 'constraints' → logprob: -2.8470449447631836
    5. '<=' → logprob: -2.9720449447631836
    6. ' limites' → logprob: -3.8470449447631836
    7. ' force' → logprob: -4.097044944763184
    8. ' ' → logprob: -4.222044944763184
    9. ' ≤' → logprob: -4.222044944763184
    10. ' poids' → logprob: -4.472044944763184

Token 305: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6131588816642761
    2. ']' → logprob: -1.613158941268921
    3. ')' → logprob: -2.363158941268921
    4. 'def' → logprob: -3.238158941268921
    5. '
' → logprob: -3.363158941268921
    6. '[' → logprob: -3.613158941268921
    7. '[
' → logprob: -4.363158702850342
    8. ',' → logprob: -4.613158702850342
    9. '\' → logprob: -4.988158702850342
    10. '_' → logprob: -5.238158702850342

Token 306: ' lev' (ID: 12114)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.9090805649757385
    2. ' chacun' → logprob: -2.1590805053710938
    3. 'cha' → logprob: -2.5340805053710938
    4. ' chaque' → logprob: -2.7840805053710938
    5. 's' → logprob: -2.9090805053710938
    6. 'charge' → logprob: -3.0340805053710938
    7. 'lev' → logprob: -3.1590805053710938
    8. ' lev' → logprob: -3.5340805053710938
    9. 'la' → logprob: -3.6590805053710938
    10. 'port' → logprob: -3.7840805053710938

Token 307: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.041309453547000885
    2. 'age' → logprob: -3.541309356689453
    3. 'ée' → logprob: -4.916309356689453
    4. 'é' → logprob: -6.541309356689453
    5. 'és' → logprob: -7.291309356689453
    6. 'ér' → logprob: -7.791309356689453
    7. 'e' → logprob: -8.166309356689453
    8. 'ers' → logprob: -8.291309356689453
    9. 'el' → logprob: -8.916309356689453
    10. 'tage' → logprob: -9.041309356689453

Token 308: '.

' (ID: 364)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1860193014144897
    2. ']' → logprob: -1.5610193014144897
    3. ')' → logprob: -1.9360193014144897
    4. '[' → logprob: -2.1860194206237793
    5. ',' → logprob: -2.3110194206237793
    6. '.' → logprob: -3.5610194206237793
    7. '
' → logprob: -3.6860194206237793
    8. 'def' → logprob: -4.061019420623779
    9. ',
' → logprob: -4.811019420623779
    10. '[
' → logprob: -4.936019420623779

Token 309: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1708863377571106
    2. '
' → logprob: -2.295886278152466
    3. ':' → logprob: -3.420886278152466
    4. 'dp' → logprob: -4.795886516571045
    5. '[' → logprob: -5.295886516571045
    6. '\' → logprob: -5.920886516571045
    7. ':
' → logprob: -6.045886516571045
    8. ' 
' → logprob: -7.170886516571045
    9. '

' → logprob: -7.670886516571045
    10. ',' → logprob: -7.670886516571045

Token 310: ' Impl' (ID: 144563)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008646531496196985
    2. 'from' → logprob: -7.250864505767822
    3. 'N' → logprob: -9.62586498260498
    4. 'import' → logprob: -10.50086498260498
    5. 'dp' → logprob: -10.50086498260498
    6. ' def' → logprob: -10.87586498260498
    7. 'n' → logprob: -11.62586498260498
    8. '
' → logprob: -13.12586498260498
    9. '#' → logprob: -14.12586498260498
    10. 'class' → logprob: -14.37586498260498

Token 311: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.3875376284122467
    2. 'ement' → logprob: -1.7625375986099243
    3. 'def' → logprob: -2.012537717819214
    4. 'entation' → logprob: -5.387537479400635
    5. 'mentation' → logprob: -5.887537479400635
    6. 'icit' → logprob: -6.262537479400635
    7. 'ements' → logprob: -6.637537479400635
    8. 'é' → logprob: -6.762537479400635
    9. 'import' → logprob: -7.262537479400635
    10. 'ort' → logprob: -7.637537479400635

Token 312: 'ation' (ID: 387)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6654031276702881
    2. 'ation' → logprob: -1.790403127670288
    3. 'er' → logprob: -1.915403127670288
    4. 'entation' → logprob: -2.415403127670288
    5. 'ent' → logprob: -2.665403127670288
    6. 'ment' → logprob: -4.915403366088867
    7. 'mentation' → logprob: -6.040403366088867
    8. ' def' → logprob: -7.165403366088867
    9. 'ement' → logprob: -7.415403366088867
    10. 'ate' → logprob: -7.915403366088867

Token 313: ' déta' (ID: 99673)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17380231618881226
    2. '
' → logprob: -2.548802375793457
    3. ':' → logprob: -2.673802375793457
    4. ' def' → logprob: -6.048802375793457
    5. ':
' → logprob: -6.173802375793457
    6. '

' → logprob: -6.923802375793457
    7. '\' → logprob: -6.923802375793457
    8. '[' → logprob: -6.923802375793457
    9. ' 
' → logprob: -7.048802375793457
    10. ' :' → logprob: -7.173802375793457

Token 314: 'illée' (ID: 102272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6215307712554932
    2. ' =' → logprob: -1.1215307712554932
    3. '_' → logprob: -2.746530771255493
    4. ' def' → logprob: -3.496530771255493
    5. ':' → logprob: -4.621530532836914
    6. ' _' → logprob: -5.371530532836914
    7. 'ation' → logprob: -5.371530532836914
    8. ' ' → logprob: -5.496530532836914
    9. 'import' → logprob: -5.496530532836914
    10. ' ' → logprob: -5.996530532836914

Token 315: ' ci' (ID: 7405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028782200068235397
    2. ':' → logprob: -3.7787821292877197
    3. '
' → logprob: -6.028782367706299
    4. ':
' → logprob: -6.903782367706299
    5. ' def' → logprob: -7.403782367706299
    6. 'import' → logprob: -7.528782367706299
    7. ':def' → logprob: -7.903782367706299
    8. ' :' → logprob: -9.15378189086914
    9. '```' → logprob: -9.27878189086914
    10. 'n' → logprob: -9.52878189086914

Token 316: '-dessous' (ID: 76632)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40175971388816833
    2. ' :' → logprob: -1.6517597436904907
    3. ' =' → logprob: -3.276759624481201
    4. 'def' → logprob: -3.401759624481201
    5. '=' → logprob: -3.526759624481201
    6. '\n' → logprob: -4.901759624481201
    7. ' ' → logprob: -5.151759624481201
    8. '#' → logprob: -5.526759624481201
    9. '\' → logprob: -5.526759624481201
    10. '_' → logprob: -5.776759624481201

Token 317: ' :

' (ID: 11287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4446239173412323
    2. '
' → logprob: -1.4446239471435547
    3. ':' → logprob: -2.4446239471435547
    4. ':
' → logprob: -4.569623947143555
    5. 'import' → logprob: -4.944623947143555
    6. '

' → logprob: -5.319623947143555
    7. '[' → logprob: -6.444623947143555
    8. '\' → logprob: -6.694623947143555
    9. '
' → logprob: -6.944623947143555
    10. 'n' → logprob: -7.194623947143555

Token 318: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00034821697045117617
    2. 'N' → logprob: -8.625348091125488
    3. 'n' → logprob: -8.875348091125488
    4. ' def' → logprob: -10.875348091125488
    5. 'import' → logprob: -12.125348091125488
    6. 'from' → logprob: -13.000348091125488
    7. 'ndef' → logprob: -14.625348091125488
    8. 'class' → logprob: -15.000348091125488
    9. 'dp' → logprob: -15.250348091125488
    10. ' N' → logprob: -15.500348091125488

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07435507327318192
    2. '=' → logprob: -3.074355125427246
    3. ',' → logprob: -3.699355125427246
    4. '=int' → logprob: -7.324355125427246
    5. ',N' → logprob: -11.324355125427246
    6. '=input' → logprob: -11.449355125427246
    7. ' ,' → logprob: -12.074355125427246
    8. ' =
' → logprob: -12.949355125427246
    9. ',n' → logprob: -13.199355125427246
    10. ' ' → logprob: -13.699355125427246

Token 320: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018151935189962387
    2. ' int' → logprob: -4.018151760101318
    3. '0' → logprob: -13.893152236938477
    4. ' ' → logprob: -14.518152236938477
    5. '[int' → logprob: -15.268152236938477
    6. 'len' → logprob: -16.393152236938477
    7. '(int' → logprob: -16.893152236938477
    8. '<int' → logprob: -16.893152236938477
    9. '=int' → logprob: -17.018152236938477
    10. '10' → logprob: -17.018152236938477

Token 321: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00019102399528492242
    2. '(sys' → logprob: -8.875190734863281
    3. '(' → logprob: -10.625190734863281
    4. 'input' → logprob: -10.625190734863281
    5. '()' → logprob: -13.750190734863281
    6. '=input' → logprob: -14.125190734863281
    7. ' (' → logprob: -15.000190734863281
    8. ' input' → logprob: -15.375190734863281
    9. '('' → logprob: -16.37519073486328
    10. '(stdin' → logprob: -17.75019073486328

Token 322: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03904571011662483
    2. '.readline' → logprob: -3.414045810699463
    3. '.argv' → logprob: -5.664045810699463
    4. '.' → logprob: -6.289045810699463
    5. '.stdout' → logprob: -10.789045333862305
    6. '.next' → logprob: -11.664045333862305
    7. '.)' → logprob: -12.164045333862305
    8. ' .' → logprob: -12.414045333862305
    9. '.randint' → logprob: -12.539045333862305
    10. '(stdin' → logprob: -12.539045333862305

Token 323: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.128163257315464e-07
    2. '.read' → logprob: -16.25
    3. ' readline' → logprob: -17.0
    4. '.' → logprob: -17.125
    5. 'read' → logprob: -17.125
    6. ')' → logprob: -19.125
    7. '().' → logprob: -19.5
    8. '.readlines' → logprob: -20.0
    9. '```' → logprob: -20.25
    10. ').' → logprob: -20.375

Token 324: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009799322579056025
    2. '().' → logprob: -7.000979900360107
    3. '()' → logprob: -10.000980377197266
    4. '())
' → logprob: -10.750980377197266
    5. ' ())' → logprob: -14.000980377197266
    6. ')' → logprob: -14.875980377197266
    7. '())

' → logprob: -15.500980377197266
    8. '(' → logprob: -16.375980377197266
    9. '())
' → logprob: -16.500980377197266
    10. '()
' → logprob: -16.875980377197266

Token 325: '#' (ID: 2)
  Prédit: 'forces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forces' → logprob: -0.5266008377075195
    2. 'weights' → logprob: -1.2766008377075195
    3. 'force' → logprob: -3.0266008377075195
    4. 'capac' → logprob: -3.6516008377075195
    5. 'powers' → logprob: -4.1516008377075195
    6. 'w' → logprob: -5.2766008377075195
    7. 'F' → logprob: -5.5266008377075195
    8. 'power' → logprob: -5.6516008377075195
    9. 'p' → logprob: -5.7766008377075195
    10. 'P' → logprob: -5.7766008377075195

Token 326: ' capacities' (ID: 86881)
  Prédit: 'forces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forces' → logprob: -0.3411758244037628
    2. 'weights' → logprob: -1.9661757946014404
    3. 'force' → logprob: -3.0911757946014404
    4. 'strength' → logprob: -3.7161757946014404
    5. 'capac' → logprob: -3.8411757946014404
    6. 'w' → logprob: -4.5911760330200195
    7. 'powers' → logprob: -4.8411760330200195
    8. 'F' → logprob: -4.8411760330200195
    9. 'p' → logprob: -5.2161760330200195
    10. 'W' → logprob: -5.2161760330200195

Token 327: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03851177915930748
    2. '=' → logprob: -3.2885117530822754
    3. ',' → logprob: -7.788511753082275
    4. ' ,' → logprob: -11.038512229919434
    5. '=[]' → logprob: -11.663512229919434
    6. '_cap' → logprob: -12.413512229919434
    7. 's' → logprob: -12.788512229919434
    8. 'capac' → logprob: -12.788512229919434
    9. '[]' → logprob: -13.038512229919434
    10. '_' → logprob: -13.163512229919434

Token 328: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007063442841172218
    2. ' ]' → logprob: -5.257063388824463
    3. '],' → logprob: -7.007063388824463
    4. ')' → logprob: -7.882063388824463
    5. ']=' → logprob: -8.507063865661621
    6. '])' → logprob: -8.757063865661621
    7. ',' → logprob: -9.132063865661621
    8. ' ],' → logprob: -10.882063865661621
    9. ' ])' → logprob: -11.132063865661621
    10. ' )' → logprob: -11.382063865661621

Token 329: ' capacité' (ID: 62575)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7067458033561707
    2. 'list' → logprob: -0.7067458033561707
    3. 'int' → logprob: -5.456745624542236
    4. '=list' → logprob: -5.706745624542236
    5. ' =' → logprob: -6.206745624542236
    6. '=' → logprob: -6.831745624542236
    7. '[int' → logprob: -6.956745624542236
    8. ' capacities' → logprob: -7.706745624542236
    9. ' int' → logprob: -7.956745624542236
    10. '=int' → logprob: -8.081746101379395

Token 330: ' max' (ID: 2999)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19572554528713226
    2. '=' → logprob: -3.320725440979004
    3. '_' → logprob: -3.320725440979004
    4. 'de' → logprob: -3.445725440979004
    5. '_de' → logprob: -3.820725440979004
    6. '[i' → logprob: -4.070725440979004
    7. ' de' → logprob: -4.320725440979004
    8. 's' → logprob: -5.070725440979004
    9. ',' → logprob: -5.195725440979004
    10. '_s' → logprob: -6.195725440979004

Token 331: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9856240153312683
    2. '_de' → logprob: -1.485624074935913
    3. '_' → logprob: -1.610624074935913
    4. ' de' → logprob: -2.485624074935913
    5. 'de' → logprob: -2.610624074935913
    6. '_s' → logprob: -4.485623836517334
    7. ',' → logprob: -5.110623836517334
    8. 's' → logprob: -5.360623836517334
    9. '=' → logprob: -5.360623836517334
    10. '[i' → logprob: -6.110623836517334

Token 332: ' lev' (ID: 12114)
  Prédit: 'lev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lev' → logprob: -0.0340118333697319
    2. ' lev' → logprob: -3.6590118408203125
    3. 'lever' → logprob: -6.2840118408203125
    4. 'charge' → logprob: -6.4090118408203125
    5. 'sou' → logprob: -6.9090118408203125
    6. 'port' → logprob: -7.0340118408203125
    7. ' soul' → logprob: -7.0340118408203125
    8. 'levant' → logprob: -8.034011840820312
    9. 's' → logprob: -8.034011840820312
    10. 'lé' → logprob: -8.909011840820312

Token 333: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.041514184325933456
    2. 'er' → logprob: -3.5415141582489014
    3. 'ée' → logprob: -4.6665143966674805
    4. 'ement' → logprob: -7.5415143966674805
    5. 'a' → logprob: -8.16651439666748
    6. 'tage' → logprob: -8.54151439666748
    7. 'ier' → logprob: -8.54151439666748
    8. 'rage' → logprob: -8.91651439666748
    9. 'ent' → logprob: -9.29151439666748
    10. 'é' → logprob: -9.41651439666748

Token 334: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10552170872688293
    2. ',' → logprob: -2.7305216789245605
    3. '=' → logprob: -4.3555216789245605
    4. '[i' → logprob: -4.8555216789245605
    5. 's' → logprob: -5.3555216789245605
    6. ' ,' → logprob: -5.7305216789245605
    7. ' de' → logprob: -6.6055216789245605
    8. 'de' → logprob: -7.1055216789245605
    9. 'des' → logprob: -7.3555216789245605
    10. '[' → logprob: -7.4805216789245605

Token 335: ' i' (ID: 575)
  Prédit: 'force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'force' → logprob: -0.5493706464767456
    2. ' force' → logprob: -1.5493706464767456
    3. 'i' → logprob: -1.7993706464767456
    4. ' i' → logprob: -4.174370765686035
    5. '[i' → logprob: -4.174370765686035
    6. ')' → logprob: -5.174370765686035
    7. ')i' → logprob: -7.049370765686035
    8. '```' → logprob: -7.361870765686035
    9. ' ' → logprob: -7.486870765686035
    10. ']' → logprob: -7.611870765686035

Token 336: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006900074891746044
    2. '+' → logprob: -6.131900310516357
    3. ']+' → logprob: -6.381900310516357
    4. ' ]' → logprob: -6.506900310516357
    5. ']=' → logprob: -7.131900310516357
    6. '][' → logprob: -8.0068998336792
    7. 's' → logprob: -10.3818998336792
    8. ']
' → logprob: -10.6318998336792
    9. 'nd' → logprob: -10.8818998336792
    10. '][]' → logprob: -10.8818998336792

Token 337: 'ème' (ID: 9767)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20776721835136414
    2. 'i' → logprob: -1.9577672481536865
    3. '1' → logprob: -4.582767009735107
    4. ' i' → logprob: -4.582767009735107
    5. ']int' → logprob: -5.332767009735107
    6. ' ]' → logprob: -5.457767009735107
    7. 's' → logprob: -5.457767009735107
    8. 'th' → logprob: -5.957767009735107
    9. ']+' → logprob: -6.707767009735107
    10. ')' → logprob: -6.832767009735107

Token 338: ' force' (ID: 9578)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4372329115867615
    2. 'force' → logprob: -1.5622329711914062
    3. ' )' → logprob: -3.0622329711914062
    4. ']' → logprob: -3.5622329711914062
    5. ' force' → logprob: -3.5622329711914062
    6. 'person' → logprob: -4.687232971191406
    7. '])' → logprob: -5.062232971191406
    8. ' ]' → logprob: -5.562232971191406
    9. '```' → logprob: -5.812232971191406
    10. 'i' → logprob: -6.187232971191406

Token 339: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.030257990583777428
    2. 'urs' → logprob: -3.5302579402923584
    3. 'user' → logprob: -8.780258178710938
    4. 'u' → logprob: -9.905258178710938
    5. 'r' → logprob: -10.030258178710938
    6. 'urer' → logprob: -10.155258178710938
    7. 's' → logprob: -11.030258178710938
    8. 'er' → logprob: -11.280258178710938
    9. 'uer' → logprob: -11.342758178710938
    10. ')' → logprob: -11.530258178710938

Token 340: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12840266525745392
    2. '=' → logprob: -2.3784027099609375
    3. 'capac' → logprob: -4.0034027099609375
    4. ',' → logprob: -5.0034027099609375
    5. ' capacities' → logprob: -7.2534027099609375
    6. ' ,' → logprob: -7.3784027099609375
    7. 'cap' → logprob: -7.7534027099609375
    8. ')' → logprob: -8.503402709960938
    9. '
' → logprob: -9.003402709960938
    10. 'capacity' → logprob: -9.128402709960938

Token 341: '#' (ID: 2)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.01828315481543541
    2. ' capacities' → logprob: -4.018283367156982
    3. 'cap' → logprob: -9.143282890319824
    4. 'capacity' → logprob: -11.393282890319824
    5. ' =' → logprob: -11.768282890319824
    6. ' capac' → logprob: -12.518282890319824
    7. '(cap' → logprob: -14.268282890319824
    8. '=' → logprob: -14.268282890319824
    9. '_cap' → logprob: -15.018282890319824
    10. 'caps' → logprob: -15.143282890319824

Token 342: ' weights' (ID: 28460)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.00045545989996753633
    2. 'weights' → logprob: -8.125455856323242
    3. ' capacities' → logprob: -9.250455856323242
    4. 'cap' → logprob: -10.000455856323242
    5. 'capacity' → logprob: -11.750455856323242
    6. 'forces' → logprob: -12.250455856323242
    7. 'powers' → logprob: -13.500455856323242
    8. 'caps' → logprob: -14.000455856323242
    9. '```' → logprob: -14.125455856323242
    10. 'loads' → logprob: -15.000455856323242

Token 343: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04925167188048363
    2. '=' → logprob: -3.0492515563964844
    3. '[i' → logprob: -7.424251556396484
    4. '[' → logprob: -11.049251556396484
    5. ',' → logprob: -11.174251556396484
    6. ' =[' → logprob: -11.549251556396484
    7. '=[' → logprob: -11.799251556396484
    8. '=[]' → logprob: -11.924251556396484
    9. ' ' → logprob: -12.549251556396484
    10. '[]' → logprob: -12.674251556396484

Token 344: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.468279752880335e-05
    2. ']=' → logprob: -10.125064849853516
    3. ' ]' → logprob: -10.625064849853516
    4. '],' → logprob: -15.875064849853516
    5. ')' → logprob: -16.000064849853516
    6. '=' → logprob: -17.250064849853516
    7. ' ' → logprob: -17.375064849853516
    8. '])' → logprob: -17.625064849853516
    9. '']' → logprob: -18.125064849853516
    10. ']:' → logprob: -18.250064849853516

Token 345: ' poids' (ID: 56058)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.36510801315307617
    2. 'list' → logprob: -1.2401080131530762
    3. 'int' → logprob: -4.240108013153076
    4. ' int' → logprob: -6.490108013153076
    5. '[int' → logprob: -8.115108489990234
    6. '=list' → logprob: -9.115108489990234
    7. ' [' → logprob: -10.115108489990234
    8. '[' → logprob: -10.365108489990234
    9. '=int' → logprob: -10.490108489990234
    10. ' =' → logprob: -10.490108489990234

Token 346: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023458249866962433
    2. '=' → logprob: -3.773458242416382
    3. '[i' → logprob: -9.023458480834961
    4. '[]' → logprob: -9.773458480834961
    5. '=[]' → logprob: -11.648458480834961
    6. ' ' → logprob: -12.398458480834961
    7. 's' → logprob: -12.648458480834961
    8. ' ' → logprob: -12.648458480834961
    9. '[]=' → logprob: -12.648458480834961
    10. '[' → logprob: -12.773458480834961

Token 347: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011647765524685383
    2. 'sys' → logprob: -4.886647701263428
    3. ' i' → logprob: -5.761647701263428
    4. 'force' → logprob: -8.261648178100586
    5. ' sys' → logprob: -8.636648178100586
    6. '[i' → logprob: -9.136648178100586
    7. '(i' → logprob: -9.636648178100586
    8. '=sys' → logprob: -10.136648178100586
    9. 'input' → logprob: -10.386648178100586
    10. 'person' → logprob: -10.886648178100586

Token 348: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9253934621810913
    2. '=' → logprob: -1.3003934621810913
    3. ' =' → logprob: -2.175393581390381
    4. '=i' → logprob: -2.675393581390381
    5. 'ème' → logprob: -2.925393581390381
    6. '_' → logprob: -3.425393581390381
    7. '[i' → logprob: -4.050393581390381
    8. '_i' → logprob: -4.925393581390381
    9. '(i' → logprob: -5.550393581390381
    10. 'i' → logprob: -5.550393581390381

Token 349: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.6933895945549011
    2. 'i' → logprob: -0.8183895945549011
    3. ' i' → logprob: -3.693389654159546
    4. '-' → logprob: -4.568389415740967
    5. 'ième' → logprob: -4.943389415740967
    6. 'é' → logprob: -5.068389415740967
    7. '-i' → logprob: -5.443389415740967
    8. ' ' → logprob: -6.443389415740967
    9. 'èm' → logprob: -7.568389415740967
    10. 'ié' → logprob: -7.818389415740967

Token 350: ' force' (ID: 9578)
  Prédit: 'force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'force' → logprob: -0.47964394092559814
    2. ' force' → logprob: -0.9796439409255981
    3. '(force' → logprob: -5.604643821716309
    4. 'person' → logprob: -7.104643821716309
    5. 'forcer' → logprob: -7.854643821716309
    6. '_force' → logprob: -8.479643821716309
    7. 'for' → logprob: -9.604643821716309
    8. 'weight' → logprob: -9.729643821716309
    9. ' person' → logprob: -10.354643821716309
    10. ' for' → logprob: -10.479643821716309

Token 351: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -1.8670179997570813e-05
    2. 'er' → logprob: -11.500019073486328
    3. 'reur' → logprob: -12.875019073486328
    4. 'uer' → logprob: -14.000019073486328
    5. 'user' → logprob: -14.250019073486328
    6. 'u' → logprob: -14.500019073486328
    7. 'eur' → logprob: -14.500019073486328
    8. 'urer' → logprob: -14.625019073486328
    9. 'urs' → logprob: -14.625019073486328
    10. '#' → logprob: -14.750019073486328

Token 352: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327604651451111
    2. '=' → logprob: -0.7577604651451111
    3. ',' → logprob: -9.632760047912598
    4. '=[]' → logprob: -10.507760047912598
    5. '=[]
' → logprob: -10.757760047912598
    6. '=sys' → logprob: -10.882760047912598
    7. 'weights' → logprob: -11.132760047912598
    8. '=[' → logprob: -11.882760047912598
    9. '[' → logprob: -13.757760047912598
    10. '=list' → logprob: -14.382760047912598

Token 353: 'capac' (ID: 179636)
  Prédit: 'capac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capac' → logprob: -7.481510692741722e-05
    2. ' capacities' → logprob: -10.00007438659668
    3. 'weights' → logprob: -10.50007438659668
    4. 'cap' → logprob: -13.50007438659668
    5. 'capacity' → logprob: -14.87507438659668
    6. 'caps' → logprob: -18.25007438659668
    7. '
' → logprob: -18.37507438659668
    8. '```' → logprob: -19.00007438659668
    9. '(cap' → logprob: -19.37507438659668
    10. ' capac' → logprob: -20.25007438659668

Token 354: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -1.1472419600977446e-06
    2. 's' → logprob: -14.875000953674316
    3. 'ac' → logprob: -15.375000953674316
    4. 'it' → logprob: -15.500000953674316
    5. 'es' → logprob: -16.000001907348633
    6. 'ITIES' → logprob: -16.500001907348633
    7. '   ' → logprob: -17.375001907348633
    8. 'ites' → logprob: -17.625001907348633
    9. 'al' → logprob: -18.250001907348633
    10. 'i' → logprob: -18.375001907348633

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4794643223285675
    2. ' =' → logprob: -0.9794642925262451
    3. ',' → logprob: -5.229464530944824
    4. '=[]' → logprob: -11.979464530944824
    5. '=[' → logprob: -12.229464530944824
    6. ' ,' → logprob: -13.479464530944824
    7. '[' → logprob: -13.979464530944824
    8. ' =[' → logprob: -14.479464530944824
    9. '=[]
' → logprob: -14.729464530944824
    10. '=sys' → logprob: -14.854464530944824

Token 356: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.050003767013549805
    2. '[list' → logprob: -3.05000376701355
    3. '[' → logprob: -6.800004005432129
    4. '[]' → logprob: -8.550004005432129
    5. ' list' → logprob: -9.300004005432129
    6. '[int' → logprob: -11.425004005432129
    7. '[List' → logprob: -13.800004005432129
    8. ' [' → logprob: -13.925004005432129
    9. '[m' → logprob: -13.925004005432129
    10. '[i' → logprob: -14.050004005432129

Token 357: 'weights' (ID: 29630)
  Prédit: 'weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.002298347419127822
    2. 'for' → logprob: -6.127298355102539
    3. ' weights' → logprob: -9.127298355102539
    4. ' for' → logprob: -12.627298355102539
    5. 'weight' → logprob: -14.627298355102539
    6. '(weights' → logprob: -15.502298355102539
    7. '.weights' → logprob: -15.752298355102539
    8. 'weig' → logprob: -15.752298355102539
    9. 'import' → logprob: -16.25229835510254
    10. '_weights' → logprob: -16.37729835510254

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328436732292175
    2. ' =' → logprob: -1.3132843971252441
    3. '.append' → logprob: -11.063283920288086
    4. '=[]' → logprob: -12.063283920288086
    5. '.' → logprob: -14.938283920288086
    6. '.=' → logprob: -15.313283920288086
    7. '＝' → logprob: -15.313283920288086
    8. '=[]
' → logprob: -16.438283920288086
    9. ' +=' → logprob: -17.188283920288086
    10. '+=' → logprob: -17.188283920288086

Token 359: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2370210438966751
    2. '[int' → logprob: -2.237020969390869
    3. '[list' → logprob: -2.737020969390869
    4. 'list' → logprob: -3.737020969390869
    5. '[' → logprob: -4.237020969390869
    6. ' []' → logprob: -7.737020969390869
    7. '[i' → logprob: -8.112021446228027
    8. ' list' → logprob: -9.362021446228027
    9. '[]
' → logprob: -9.487021446228027
    10. '[len' → logprob: -9.987021446228027

Token 360: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.848420551046729e-05
    2. ' for' → logprob: -9.7500581741333
    3. '
' → logprob: -16.500059127807617
    4. '	for' → logprob: -18.000059127807617
    5. '<|end|>' → logprob: -18.625059127807617
    6. '```' → logprob: -19.500059127807617
    7. 'n' → logprob: -20.875059127807617
    8. 'import' → logprob: -21.125059127807617
    9. 'tokens' → logprob: -21.250059127807617
    10. 'For' → logprob: -21.500059127807617

Token 361: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.827200897736475e-05
    2. ' _' → logprob: -9.500078201293945
    3. '_i' → logprob: -12.625078201293945
    4. '_in' → logprob: -17.875078201293945
    5. 'i' → logprob: -18.125078201293945
    6. '_range' → logprob: -18.250078201293945
    7. '_=' → logprob: -18.875078201293945
    8. '_line' → logprob: -19.250078201293945
    9. '_

' → logprob: -19.500078201293945
    10. '_
' → logprob: -20.125078201293945

Token 362: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5762107372283936
    2. ' in' → logprob: -0.8262107372283936
    3. 'range' → logprob: -8.326210975646973
    4. '_' → logprob: -11.451210975646973
    5. 'i' → logprob: -11.576210975646973
    6. ' ' → logprob: -12.576210975646973
    7. 'import' → logprob: -13.326210975646973
    8. 'sys' → logprob: -14.201210975646973
    9. '	in' → logprob: -15.076210975646973
    10. ' _' → logprob: -15.076210975646973

Token 363: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.723352049040841e-06
    2. ' range' → logprob: -12.375004768371582
    3. 'sys' → logprob: -14.500004768371582
    4. '(range' → logprob: -17.375003814697266
    5. 'input' → logprob: -18.125003814697266
    6. 'r' → logprob: -18.750003814697266
    7. 'in' → logprob: -19.125003814697266
    8. '```' → logprob: -19.125003814697266
    9. '	range' → logprob: -19.250003814697266
    10. 'rang' → logprob: -19.250003814697266

Token 364: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.023265164345502853
    2. 'N' → logprob: -3.7732651233673096
    3. '(' → logprob: -10.89826488494873
    4. '(int' → logprob: -14.64826488494873
    5. ' N' → logprob: -15.14826488494873
    6. 'range' → logprob: -15.14826488494873
    7. '	N' → logprob: -16.023265838623047
    8. '(n' → logprob: -17.148265838623047
    9. ' (' → logprob: -17.148265838623047
    10. ')' → logprob: -17.773265838623047

Token 365: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07045772671699524
    2. '):' → logprob: -2.695457696914673
    3. '):
' → logprob: -7.695457935333252
    4. ')' → logprob: -10.570457458496094
    5. ' ):
' → logprob: -10.695457458496094
    6. ':' → logprob: -11.945457458496094
    7. '():
' → logprob: -12.320457458496094
    8. ':
' → logprob: -12.820457458496094
    9. ' ):' → logprob: -12.820457458496094
    10. '):

' → logprob: -15.070457458496094

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6924213767051697
    2. ' w' → logprob: -1.0674214363098145
    3. 'w' → logprob: -2.1924214363098145
    4. 'capac' → logprob: -3.5674214363098145
    5. ' capacities' → logprob: -5.5674214363098145
    6. ' capacity' → logprob: -5.5674214363098145
    7. 'cap' → logprob: -6.0674214363098145
    8. 'capacity' → logprob: -6.3174214363098145
    9. ' c' → logprob: -6.9424214363098145
    10. 'c' → logprob: -6.9424214363098145

Token 367: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.12714354693889618
    2. 'w' → logprob: -2.252143621444702
    3. 'cap' → logprob: -4.377143383026123
    4. 'capacity' → logprob: -7.002143383026123
    5. 'a' → logprob: -7.877143383026123
    6. ' c' → logprob: -9.127143859863281
    7. 'x' → logprob: -9.627143859863281
    8. 'C' → logprob: -9.752143859863281
    9. ' w' → logprob: -10.377143859863281
    10. 'p' → logprob: -10.627143859863281

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3390450179576874
    2. ' =' → logprob: -1.4640450477600098
    3. '=' → logprob: -3.2140450477600098
    4. 'ap' → logprob: -4.21404504776001
    5. '=int' → logprob: -7.08904504776001
    6. ',int' → logprob: -8.839044570922852
    7. ',c' → logprob: -9.214044570922852
    8. ' ,' → logprob: -9.839044570922852
    9. ',p' → logprob: -10.089044570922852
    10. ',w' → logprob: -10.214044570922852

Token 369: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.012542379088699818
    2. ' w' → logprob: -4.637542247772217
    3. 'p' → logprob: -5.887542247772217
    4. ' p' → logprob: -11.762542724609375
    5. 'm' → logprob: -15.387542724609375
    6. ' ' → logprob: -15.762542724609375
    7. 'pw' → logprob: -16.262542724609375
    8. 'a' → logprob: -16.387542724609375
    9. '```' → logprob: -16.512542724609375
    10. 'v' → logprob: -16.512542724609375

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=sys' → logprob: -15.639163970947266
    4. '＝' → logprob: -18.389163970947266
    5. '=line' → logprob: -20.139163970947266
    6. '=input' → logprob: -20.264163970947266
    7. '=int' → logprob: -20.514163970947266
    8. '   ' → logprob: -20.764163970947266
    9. ')' → logprob: -21.139163970947266
    10. ' ' → logprob: -21.264163970947266

Token 371: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.8624639324116288e-06
    2. ' map' → logprob: -13.250001907348633
    3. 'list' → logprob: -19.000001907348633
    4. '(map' → logprob: -19.875001907348633
    5. '	map' → logprob: -20.500001907348633
    6. 'tuple' → logprob: -20.750001907348633
    7. '.map' → logprob: -22.750001907348633
    8. '_map' → logprob: -23.625001907348633
    9. '   ' → logprob: -24.125001907348633
    10. 'm' → logprob: -24.375001907348633

Token 372: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.704273118884885e-07
    2. 'int' → logprob: -14.500000953674316
    3. '(' → logprob: -15.875000953674316
    4. '=int' → logprob: -18.0
    5. '[int' → logprob: -18.75
    6. ',int' → logprob: -19.0
    7. '<int' → logprob: -19.25
    8. ' int' → logprob: -20.125
    9. '(str' → logprob: -20.125
    10. ' (' → logprob: -21.5

Token 373: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.2141035944223404
    2. 'sys' → logprob: -1.9641035795211792
    3. ',' → logprob: -2.9641036987304688
    4. '=sys' → logprob: -7.214103698730469
    5. ' sys' → logprob: -9.839103698730469
    6. '	sys' → logprob: -10.714103698730469
    7. ')' → logprob: -11.214103698730469
    8. ' ,' → logprob: -11.714103698730469
    9. '
' → logprob: -12.339103698730469
    10. '(' → logprob: -12.839103698730469

Token 374: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.842555426876061e-06
    2. ' sys' → logprob: -12.250004768371582
    3. '(sys' → logprob: -20.0000057220459
    4. '=sys' → logprob: -21.5000057220459
    5. 'input' → logprob: -21.6250057220459
    6. '	sys' → logprob: -22.0000057220459
    7. '   ' → logprob: -23.7500057220459
    8. 'Sys' → logprob: -24.2500057220459
    9. '.sys' → logprob: -24.6250057220459
    10. 'system' → logprob: -25.0000057220459

Token 375: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013131031300872564
    2. 'stdin' → logprob: -9.000131607055664
    3. 'sys' → logprob: -13.000131607055664
    4. '.readline' → logprob: -13.000131607055664
    5. 'in' → logprob: -13.625131607055664
    6. 'd' → logprob: -14.375131607055664
    7. '.stdout' → logprob: -14.500131607055664
    8. '(stdin' → logprob: -15.000131607055664
    9. '.argv' → logprob: -15.750131607055664
    10. 's' → logprob: -15.875131607055664

Token 376: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.093505099765025e-05
    2. '.stdin' → logprob: -11.750020980834961
    3. 'sys' → logprob: -12.125020980834961
    4. '().' → logprob: -12.250020980834961
    5. '(sys' → logprob: -13.500020980834961
    6. '=sys' → logprob: -13.625020980834961
    7. '.' → logprob: -15.875020980834961
    8. '(stdin' → logprob: -16.87502098083496
    9. '.read' → logprob: -17.50002098083496
    10. 'stdin' → logprob: -17.50002098083496

Token 377: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.625000953674316
    3. '.readline' → logprob: -17.125
    4. ' ().' → logprob: -18.75
    5. '(' → logprob: -18.875
    6. '()
' → logprob: -19.375
    7. '.strip' → logprob: -19.75
    8. '())' → logprob: -20.625
    9. '.split' → logprob: -20.75
    10. '().
' → logprob: -21.5

Token 378: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005542247672565281
    2. 'strip' → logprob: -7.500554084777832
    3. 'rstrip' → logprob: -13.750554084777832
    4. ' split' → logprob: -15.875554084777832
    5. '(split' → logprob: -18.12555503845215
    6. 'read' → logprob: -18.37555503845215
    7. 'spl' → logprob: -19.87555503845215
    8. ' strip' → logprob: -21.50055503845215
    9. '.split' → logprob: -21.50055503845215
    10. '_split' → logprob: -22.62555503845215

Token 379: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011754617094993591
    2. ')' → logprob: -4.511754512786865
    3. '()' → logprob: -7.761754512786865
    4. '())
' → logprob: -8.261754989624023
    5. '(' → logprob: -10.886754989624023
    6. '()))' → logprob: -14.011754989624023
    7. ')
' → logprob: -14.261754989624023
    8. ' ())' → logprob: -14.386754989624023
    9. '())
' → logprob: -14.511754989624023
    10. '))' → logprob: -15.011754989624023

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11290121078491211
    2. 'capac' → logprob: -2.237901210784912
    3. ' capacities' → logprob: -9.86290168762207
    4. '   ' → logprob: -11.98790168762207
    5. 'cap' → logprob: -12.23790168762207
    6. '
' → logprob: -12.61290168762207
    7. '    
' → logprob: -12.86290168762207
    8. ' capac' → logprob: -13.11290168762207
    9. '-cap' → logprob: -13.23790168762207
    10. '(cap' → logprob: -13.61290168762207

Token 381: ' capacities' (ID: 86881)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.00013536323967855424
    2. '   ' → logprob: -9.75013542175293
    3. ' capacities' → logprob: -10.12513542175293
    4. 'cap' → logprob: -10.25013542175293
    5. ' capac' → logprob: -13.87513542175293
    6. 'capacity' → logprob: -15.00013542175293
    7. '-cap' → logprob: -15.25013542175293
    8. ' ' → logprob: -17.00013542175293
    9. 'caps' → logprob: -17.62513542175293
    10. '
' → logprob: -19.00013542175293

Token 382: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.60414821645827e-06
    2. '.ap' → logprob: -13.000004768371582
    3. '.' → logprob: -13.625004768371582
    4. '.app' → logprob: -13.875004768371582
    5. ' .' → logprob: -16.000003814697266
    6. ').' → logprob: -17.875003814697266
    7. '].' → logprob: -19.625003814697266
    8. '.Append' → logprob: -19.750003814697266
    9. '.extend' → logprob: -19.875003814697266
    10. '.APP' → logprob: -20.250003814697266

Token 383: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -16.25
    3. '(' → logprob: -16.75
    4. ')c' → logprob: -19.625
    5. '	c' → logprob: -21.625
    6. '(w' → logprob: -22.125
    7. '(
' → logprob: -23.0
    8. '(C' → logprob: -23.125
    9. ',c' → logprob: -23.375
    10. ' c' → logprob: -23.5

Token 384: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12693661451339722
    2. ')' → logprob: -2.126936674118042
    3. ')
' → logprob: -12.501936912536621
    4. ' )
' → logprob: -12.876936912536621
    5. '   ' → logprob: -13.251936912536621
    6. '),' → logprob: -16.001935958862305
    7. ' )' → logprob: -16.126935958862305
    8. ')

' → logprob: -16.626935958862305
    9. ' weights' → logprob: -17.001935958862305
    10. 'w' → logprob: -17.251935958862305

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.822646693966817e-06
    2. 'weights' → logprob: -11.875007629394531
    3. '  ' → logprob: -14.875007629394531
    4. ' weights' → logprob: -15.250007629394531
    5. ' ' → logprob: -16.00000762939453
    6. '<|end|>' → logprob: -16.87500762939453
    7. '    ' → logprob: -17.50000762939453
    8. ',' → logprob: -18.00000762939453
    9. '   ' → logprob: -18.12500762939453
    10. '       ' → logprob: -18.50000762939453

Token 386: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' (adapté à ' weights') → logprob: -1.0206720617134124e-05
    2. ' weights' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.250009536743164
    4. 'weight' → logprob: -19.000009536743164
    5. 'weig' → logprob: -20.375009536743164
    6. 'w' → logprob: -21.875009536743164
    7. '.weights' → logprob: -22.000009536743164
    8. '_weights' → logprob: -22.625009536743164
    9. '(weights' → logprob: -22.625009536743164
    10. '       ' → logprob: -22.875009536743164

Token 387: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7848862373502925e-05
    2. '.' → logprob: -10.500027656555176
    3. '.app' → logprob: -16.250028610229492
    4. 'append' → logprob: -16.375028610229492
    5. ' .' → logprob: -18.000028610229492
    6. '.ap' → logprob: -18.750028610229492
    7. '.Append' → logprob: -19.375028610229492
    8. '.push' → logprob: -19.750028610229492
    9. ').' → logprob: -20.000028610229492
    10. '.extend' → logprob: -20.125028610229492

Token 388: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0015052208909764886
    2. 'w' → logprob: -6.501505374908447
    3. '(' → logprob: -12.876504898071289
    4. ' (' → logprob: -15.376504898071289
    5. ' w' → logprob: -16.00150489807129
    6. '	w' → logprob: -17.62650489807129
    7. '(
' → logprob: -18.00150489807129
    8. '=w' → logprob: -20.12650489807129
    9. ',w' → logprob: -20.37650489807129
    10. '(int' → logprob: -20.37650489807129

Token 389: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -13.750001907348633
    4. '))' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '),' → logprob: -18.000001907348633
    7. '}' → logprob: -18.750001907348633
    8. ')

' → logprob: -18.750001907348633
    9. '#' → logprob: -19.000001907348633
    10. ')}' → logprob: -19.375001907348633

Token 390: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001367380958981812
    2. 'prefix' → logprob: -7.376367568969727
    3. 'INF' → logprob: -7.751367568969727
    4. 'total' → logprob: -9.126367568969727
    5. '#' → logprob: -9.251367568969727
    6. 'import' → logprob: -9.876367568969727
    7. '
' → logprob: -10.751367568969727
    8. 'max' → logprob: -11.126367568969727
    9. 'stack' → logprob: -12.501367568969727
    10. 'MAX' → logprob: -13.001367568969727

Token 391: ' Pré' (ID: 86400)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003164295107126236
    2. 'prefix' → logprob: -6.378164291381836
    3. '#' → logprob: -7.753164291381836
    4. 'INF' → logprob: -7.753164291381836
    5. 'total' → logprob: -8.378164291381836
    6. 'import' → logprob: -8.628164291381836
    7. 'acc' → logprob: -9.503164291381836
    8. 'from' → logprob: -9.753164291381836
    9. 'suffix' → logprob: -11.253164291381836
    10. 'max' → logprob: -11.253164291381836

Token 392: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.07569165527820587
    2. 'sum' → logprob: -2.7006916999816895
    3. 's' → logprob: -5.5756916999816895
    4. 'fixed' → logprob: -6.9506916999816895
    5. '#' → logprob: -8.075691223144531
    6. 'f' → logprob: -8.200691223144531
    7. 'c' → logprob: -9.325691223144531
    8. 'suffix' → logprob: -9.450691223144531
    9. '_sum' → logprob: -10.325691223144531
    10. 'computed' → logprob: -10.325691223144531

Token 393: 'cul' (ID: 2885)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5022952556610107
    2. 'culation' → logprob: -1.7522952556610107
    3. 'cul' → logprob: -2.2522952556610107
    4. 'c' → logprob: -3.0022952556610107
    5. 's' → logprob: -3.6272952556610107
    6. 'm' → logprob: -4.62729549407959
    7. 'cum' → logprob: -5.12729549407959
    8. 'fix' → logprob: -5.50229549407959
    9. 'cule' → logprob: -5.62729549407959
    10. 'culated' → logprob: -6.00229549407959

Token 394: ' des' (ID: 731)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.2666586637496948
    2. 'sum' → logprob: -1.5166586637496948
    3. 'prefix' → logprob: -1.6416586637496948
    4. ' prefix' → logprob: -2.6416587829589844
    5. ' total' → logprob: -3.0166587829589844
    6. ' cumulative' → logprob: -3.0166587829589844
    7. ' cum' → logprob: -3.2666587829589844
    8. 'cum' → logprob: -3.3916587829589844
    9. 'acc' → logprob: -3.8916587829589844
    10. 's' → logprob: -3.8916587829589844

Token 395: ' pré' (ID: 9424)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.13517512381076813
    2. 's' → logprob: -3.0101752281188965
    3. 'suffix' → logprob: -3.5101752281188965
    4. 'pref' → logprob: -4.1351752281188965
    5. 'pré' → logprob: -4.7601752281188965
    6. 'acc' → logprob: -5.1351752281188965
    7. ' prefix' → logprob: -5.3851752281188965
    8. 'po' → logprob: -5.7601752281188965
    9. 'cum' → logprob: -6.2601752281188965
    10. 'c' → logprob: -6.3851752281188965

Token 396: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.32378089427948
    2. 's' → logprob: -1.44878089427948
    3. 'sum' → logprob: -3.4487810134887695
    4. 'som' → logprob: -4.6987810134887695
    5. 'suffix' → logprob: -7.3237810134887695
    6. 'fixed' → logprob: -10.57378101348877
    7. '_s' → logprob: -10.57378101348877
    8. 'f' → logprob: -10.94878101348877
    9. 'summ' → logprob: -11.07378101348877
    10. 'c' → logprob: -11.32378101348877

Token 397: 'es' (ID: 268)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5178319811820984
    2. 'ums' → logprob: -1.0178320407867432
    3. 's' → logprob: -3.892832040786743
    4. 'um' → logprob: -4.767831802368164
    5. '_sum' → logprob: -5.142831802368164
    6. 'fix' → logprob: -5.892831802368164
    7. ' sums' → logprob: -6.142831802368164
    8. '_s' → logprob: -6.892831802368164
    9. 'som' → logprob: -7.392831802368164
    10. 'ixes' → logprob: -7.767831802368164

Token 398: ' de' (ID: 334)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.018548937514424324
    2. 'weight' → logprob: -4.518548965454102
    3. 'sum' → logprob: -6.143548965454102
    4. 'weights' → logprob: -6.518548965454102
    5. 'psum' → logprob: -6.643548965454102
    6. ' prefix' → logprob: -7.018548965454102
    7. 'po' → logprob: -7.393548965454102
    8. 'total' → logprob: -8.018548965454102
    9. 'cum' → logprob: -8.143548965454102
    10. 's' → logprob: -8.518548965454102

Token 399: ' poids' (ID: 56058)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.48566633462905884
    2. 'po' → logprob: -0.9856663346290588
    3. ' poids' → logprob: -4.985666275024414
    4. 's' → logprob: -5.985666275024414
    5. ' weights' → logprob: -6.985666275024414
    6. 'weight' → logprob: -7.235666275024414
    7. 'pes' → logprob: -9.110666275024414
    8. 'w' → logprob: -9.360666275024414
    9. 'sum' → logprob: -9.860666275024414
    10. 'weig' → logprob: -9.985666275024414

Token 400: ' pour' (ID: 1930)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0013945228420197964
    2. 'weight' → logprob: -7.001394748687744
    3. 'pre' → logprob: -9.126394271850586
    4. 'psum' → logprob: -9.126394271850586
    5. ' prefix' → logprob: -9.626394271850586
    6. 'weights' → logprob: -9.751394271850586
    7. 'total' → logprob: -10.251394271850586
    8. 'po' → logprob: -10.376394271850586
    9. 'pref' → logprob: -10.751394271850586
    10. '
' → logprob: -10.751394271850586

Token 401: ' obtenir' (ID: 54423)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11774830520153046
    2. ' i' → logprob: -2.492748260498047
    3. 'acc' → logprob: -4.367748260498047
    4. 'prefix' → logprob: -4.867748260498047
    5. 'sum' → logprob: -7.242748260498047
    6. 'range' → logprob: -7.367748260498047
    7. '[i' → logprob: -7.367748260498047
    8. ' prefix' → logprob: -7.617748260498047
    9. 's' → logprob: -7.742748260498047
    10. ' j' → logprob: -7.742748260498047

Token 402: ' rapidement' (ID: 43157)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.056678056716919
    2. 'la' → logprob: -1.181678056716919
    3. 'les' → logprob: -2.056678056716919
    4. ' les' → logprob: -3.056678056716919
    5. 's' → logprob: -3.181678056716919
    6. ' cumulative' → logprob: -3.306678056716919
    7. ' une' → logprob: -4.43167781829834
    8. 'l' → logprob: -4.55667781829834
    9. 'c' → logprob: -4.55667781829834
    10. 'total' → logprob: -4.68167781829834

Token 403: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.633163571357727
    2. 'les' → logprob: -1.008163571357727
    3. ' la' → logprob: -3.0081634521484375
    4. 's' → logprob: -3.5081634521484375
    5. 'le' → logprob: -4.3831634521484375
    6. ' les' → logprob: -4.6331634521484375
    7. 'sum' → logprob: -7.3831634521484375
    8. 'des' → logprob: -8.133163452148438
    9. ' le' → logprob: -8.258163452148438
    10. 'l' → logprob: -8.258163452148438

Token 404: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.05114671587944031
    2. ' poids' → logprob: -3.5511467456817627
    3. 's' → logprob: -4.051146507263184
    4. 'c' → logprob: -6.801146507263184
    5. 'total' → logprob: -6.801146507263184
    6. 'som' → logprob: -7.301146507263184
    7. 'sum' → logprob: -7.551146507263184
    8. 'weight' → logprob: -9.426146507263184
    9. ' total' → logprob: -10.176146507263184
    10. 'prefix' → logprob: -10.551146507263184

Token 405: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2638106346130371
    2. 's' → logprob: -2.263810634613037
    3. 'prefix' → logprob: -3.138810634613037
    4. '_total' → logprob: -3.763810634613037
    5. 'acc' → logprob: -4.138810634613037
    6. 'cum' → logprob: -4.513810634613037
    7. '_prefix' → logprob: -4.888810634613037
    8. ' total' → logprob: -5.263810634613037
    9. 'tot' → logprob: -5.763810634613037
    10. ' cum' → logprob: -5.763810634613037

Token 406: ' d' (ID: 272)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.002771712839603424
    2. 'total' → logprob: -7.252771854400635
    3. 'psum' → logprob: -7.377771854400635
    4. ' prefix' → logprob: -7.627771854400635
    5. 'weight' → logprob: -8.002771377563477
    6. 's' → logprob: -8.627771377563477
    7. '_prefix' → logprob: -8.627771377563477
    8. 'sum' → logprob: -9.627771377563477
    9. 'weights' → logprob: -9.752771377563477
    10. 'pre' → logprob: -10.252771377563477

Token 407: ''un' (ID: 9788)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0147782564163208
    2. ' la' → logprob: -1.2647782564163208
    3. ' weights' → logprob: -1.8897782564163208
    4. 'une' → logprob: -2.6397781372070312
    5. 'weights' → logprob: -2.6397781372070312
    6. ' un' → logprob: -4.639778137207031
    7. 'la' → logprob: -4.764778137207031
    8. 's' → logprob: -4.889778137207031
    9. ' segments' → logprob: -5.389778137207031
    10. ''une' → logprob: -5.389778137207031

Token 408: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.010334267280995846
    2. ' segment' → logprob: -4.635334491729736
    3. 'interval' → logprob: -8.510334014892578
    4. 's' → logprob: -8.635334014892578
    5. 'pile' → logprob: -8.635334014892578
    6. 'seg' → logprob: -12.260334014892578
    7. 'sub' → logprob: -12.635334014892578
    8. '```' → logprob: -12.760334014892578
    9. ' interval' → logprob: -13.010334014892578
    10. 'p' → logprob: -13.510334014892578

Token 409: '
' (ID: 198)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0004973902832716703
    2. 'weight' → logprob: -7.750497341156006
    3. 'pre' → logprob: -10.500497817993164
    4. 'weights' → logprob: -11.125497817993164
    5. 'psum' → logprob: -11.750497817993164
    6. ' prefix' → logprob: -11.875497817993164
    7. 'pref' → logprob: -12.250497817993164
    8. 'po' → logprob: -12.750497817993164
    9. '_prefix' → logprob: -14.250497817993164
    10. 'pw' → logprob: -14.750497817993164

Token 410: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0001239196863025427
    2. 'weight' → logprob: -9.500123977661133
    3. 'pre' → logprob: -10.500123977661133
    4. ' prefix' → logprob: -11.250123977661133
    5. 'pref' → logprob: -12.000123977661133
    6. 'psum' → logprob: -13.500123977661133
    7. 'weights' → logprob: -14.500123977661133
    8. 'po' → logprob: -15.375123977661133
    9. 'pw' → logprob: -15.625123977661133
    10. '_prefix' → logprob: -17.375123977661133

Token 411: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.0046033840626478195
    2. '_sum' → logprob: -6.004603385925293
    3. '_weight' → logprob: -7.004603385925293
    4. '_s' → logprob: -7.254603385925293
    5. '_' → logprob: -8.504603385925293
    6. 's' → logprob: -8.754603385925293
    7. '_po' → logprob: -9.504603385925293
    8. '_p' → logprob: -9.629603385925293
    9. '_w' → logprob: -12.129603385925293
    10. '_prefix' → logprob: -13.629603385925293

Token 412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47417235374450684
    2. '=' → logprob: -0.9741723537445068
    3. '=[' → logprob: -9.599172592163086
    4. '[' → logprob: -11.099172592163086
    5. ' =[' → logprob: -11.474172592163086
    6. '=[]' → logprob: -13.849172592163086
    7. '_=' → logprob: -15.224172592163086
    8. '_' → logprob: -15.224172592163086
    9. 's' → logprob: -15.349172592163086
    10. '＝' → logprob: -16.099172592163086

Token 413: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020389800192788243
    2. ' [' → logprob: -8.500204086303711
    3. '[w' → logprob: -15.000204086303711
    4. '[len' → logprob: -17.37520408630371
    5. '[p' → logprob: -17.75020408630371
    6. '0' → logprob: -18.87520408630371
    7. '[int' → logprob: -19.12520408630371
    8. '[start' → logprob: -20.00020408630371
    9. '[n' → logprob: -20.00020408630371
    10. '[length' → logprob: -20.00020408630371

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '۰' → logprob: -22.0
    4. '
' → logprob: -23.25
    5. 'weights' → logprob: -23.625
    6. '00' → logprob: -23.75
    7. '０' → logprob: -24.125
    8. '   ' → logprob: -24.125
    9. '[' → logprob: -24.25
    10. '{' → logprob: -24.75

Token 415: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3133212924003601
    2. ']
' → logprob: -1.3133213520050049
    3. ']
' → logprob: -10.813321113586426
    4. ' ]
' → logprob: -11.313321113586426
    5. ']+' → logprob: -11.688321113586426
    6. ' ]' → logprob: -11.813321113586426
    7. ']

' → logprob: -12.563321113586426
    8. '0' → logprob: -12.563321113586426
    9. '
' → logprob: -13.438321113586426
    10. ')' → logprob: -14.188321113586426

Token 416: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6028858423233032
    2. '+' → logprob: -1.2278858423233032
    3. 'for' → logprob: -1.9778858423233032
    4. '*' → logprob: -4.852885723114014
    5. '[' → logprob: -4.977885723114014
    6. '0' → logprob: -6.727885723114014
    7. ' for' → logprob: -6.852885723114014
    8. '<|end|>' → logprob: -7.227885723114014
    9. ']' → logprob: -7.477885723114014
    10. ' +' → logprob: -7.602885723114014

Token 417: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.8074162653647363e-05
    2. ' (' → logprob: -11.375018119812012
    3. '(n' → logprob: -12.875018119812012
    4. '(' → logprob: -13.125018119812012
    5. '(len' → logprob: -13.750018119812012
    6. '
' → logprob: -14.250018119812012
    7. '((' → logprob: -16.250017166137695
    8. '   ' → logprob: -17.250017166137695
    9. '(NS' → logprob: -17.250017166137695
    10. '(NUM' → logprob: -17.875017166137695

Token 418: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. ' N' → logprob: -17.125
    3. '(N' → logprob: -17.875
    4. 'len' → logprob: -20.375
    5. '
' → logprob: -21.0
    6. '   ' → logprob: -23.75
    7. '[N' → logprob: -23.75
    8. '	N' → logprob: -23.875
    9. ' ' → logprob: -24.0
    10. 'n' → logprob: -24.75

Token 419: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014358828775584698
    2. ' +' → logprob: -8.875144004821777
    3. '+
' → logprob: -12.500144004821777
    4. '1' → logprob: -18.37514305114746
    5. '
' → logprob: -18.87514305114746
    6. '＋' → logprob: -19.37514305114746
    7. ' +
' → logprob: -19.50014305114746
    8. '```' → logprob: -20.25014305114746
    9. '+n' → logprob: -20.75014305114746
    10. '+)' → logprob: -21.00014305114746

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '
' → logprob: -18.875
    4. '１' → logprob: -19.875
    5. '2' → logprob: -20.25
    6. '```' → logprob: -20.25
    7. '   ' → logprob: -21.0
    8. '

' → logprob: -21.625
    9. '``' → logprob: -22.1875
    10. '۱' → logprob: -22.3125

Token 421: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07889749854803085
    2. ')' → logprob: -2.578897476196289
    3. ')
' → logprob: -12.078897476196289
    4. ' )
' → logprob: -13.953897476196289
    5. ')

' → logprob: -14.078897476196289
    6. ']
' → logprob: -15.453897476196289
    7. '
' → logprob: -16.45389747619629
    8. ']' → logprob: -16.70389747619629
    9. ')`
' → logprob: -16.82889747619629
    10. ' )' → logprob: -17.32889747619629

Token 422: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.547789674485102e-05
    2. ' for' → logprob: -10.250035285949707
    3. '
' → logprob: -17.500036239624023
    4. 'prefix' → logprob: -20.250036239624023
    5. '	for' → logprob: -21.125036239624023
    6. '```' → logprob: -22.000036239624023
    7. 'i' → logprob: -22.375036239624023
    8. 'f' → logprob: -23.500036239624023
    9. '   ' → logprob: -23.625036239624023
    10. ' 
' → logprob: -24.000036239624023

Token 423: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47407710552215576
    2. ' i' → logprob: -0.9740771055221558
    3. '	i' → logprob: -16.099077224731445
    4. '_i' → logprob: -17.224077224731445
    5. ' ' → logprob: -18.474077224731445
    6. '_' → logprob: -19.724077224731445
    7. 'I' → logprob: -20.974077224731445
    8. '(i' → logprob: -21.474077224731445
    9. '   ' → logprob: -21.599077224731445
    10. ' _' → logprob: -21.724077224731445

Token 424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16037045419216156
    2. 'in' → logprob: -1.9103704690933228
    3. '+' → logprob: -9.535370826721191
    4. '1' → logprob: -9.660370826721191
    5. 'range' → logprob: -13.035370826721191
    6. ' ' → logprob: -13.410370826721191
    7. 'i' → logprob: -13.535370826721191
    8. '   ' → logprob: -13.660370826721191
    9. '	in' → logprob: -14.035370826721191
    10. '```' → logprob: -14.285370826721191

Token 425: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -20.250553131103516
    4. '	range' → logprob: -20.750553131103516
    5. ' ' → logprob: -21.000553131103516
    6. '   ' → logprob: -22.250553131103516
    7. 'in' → logprob: -23.000553131103516
    8. '  ' → logprob: -23.000553131103516
    9. '
' → logprob: -23.000553131103516
    10. '```' → logprob: -23.625553131103516

Token 426: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08001396059989929
    2. '(' → logprob: -2.5800139904022217
    3. 'N' → logprob: -6.830013751983643
    4. '1' → logprob: -10.0800142288208
    5. ' N' → logprob: -15.7050142288208
    6. ' ' → logprob: -15.7050142288208
    7. '	N' → logprob: -15.9550142288208
    8. '(
' → logprob: -16.580013275146484
    9. ' (' → logprob: -16.705013275146484
    10. '   ' → logprob: -16.705013275146484

Token 427: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0030966661870479584
    2. ' +' → logprob: -6.628096580505371
    3. '):
' → logprob: -6.753096580505371
    4. '):' → logprob: -7.628096580505371
    5. '1' → logprob: -9.253096580505371
    6. '   ' → logprob: -11.378096580505371
    7. ' ' → logprob: -12.628096580505371
    8. '+
' → logprob: -13.753096580505371
    9. '
' → logprob: -14.128096580505371
    10. ')' → logprob: -14.128096580505371

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3145633935928345
    2. ' prefix' → logprob: -1.3145633935928345
    3. 'prefix' → logprob: -6.814563274383545
    4. '(prefix' → logprob: -8.689563751220703
    5. '	p' → logprob: -10.814563751220703
    6. '   ' → logprob: -11.939563751220703
    7. '_prefix' → logprob: -12.564563751220703
    8. '.prefix' → logprob: -13.439563751220703
    9. '-prefix' → logprob: -13.814563751220703
    10. ' prefixes' → logprob: -14.314563751220703

Token 429: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.0006278486107476056
    2. ' prefix' → logprob: -7.5006279945373535
    3. '   ' → logprob: -9.500627517700195
    4. '_prefix' → logprob: -18.500627517700195
    5. ' ' → logprob: -19.000627517700195
    6. '(prefix' → logprob: -19.000627517700195
    7. '```' → logprob: -19.125627517700195
    8. '.prefix' → logprob: -19.750627517700195
    9. 'refix' → logprob: -21.000627517700195
    10. '  ' → logprob: -21.250627517700195

Token 430: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -2.5776860184123507e-06
    2. 'weights' → logprob: -12.87500286102295
    3. 'Weights' → logprob: -18.625001907348633
    4. '_' → logprob: -19.125001907348633
    5. ' weights' → logprob: -19.750001907348633
    6. '_weight' → logprob: -19.750001907348633
    7. '```' → logprob: -20.125001907348633
    8. '_we' → logprob: -20.875001907348633
    9. '+' → logprob: -21.000001907348633
    10. '(weights' → logprob: -22.375001907348633

Token 431: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012453730218112469
    2. '=' → logprob: -4.512453556060791
    3. '[' → logprob: -7.012453556060791
    4. ' =' → logprob: -7.762453556060791
    5. '+=' → logprob: -10.26245403289795
    6. ' [' → logprob: -10.88745403289795
    7. '=i' → logprob: -11.26245403289795
    8. ' +=' → logprob: -13.13745403289795
    9. '+' → logprob: -13.26245403289795
    10. ']' → logprob: -13.38745403289795

Token 432: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005530327325686812
    2. ' +' → logprob: -7.500553131103516
    3. '+
' → logprob: -17.125553131103516
    4. '1' → logprob: -18.125553131103516
    5. '＋' → logprob: -18.375553131103516
    6. ']' → logprob: -19.250553131103516
    7. '+=' → logprob: -19.875553131103516
    8. '
' → logprob: -19.875553131103516
    9. '+]' → logprob: -20.125553131103516
    10. '=' → logprob: -20.375553131103516

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. ' ' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.12501049041748
    4. 'i' → logprob: -16.312509536743164
    5. '+' → logprob: -17.125009536743164
    6. '```' → logprob: -17.125009536743164
    7. '  ' → logprob: -18.125009536743164
    8. ')' → logprob: -18.250009536743164
    9. '１' → logprob: -18.312509536743164
    10. ',' → logprob: -18.375009536743164

Token 434: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2563469707965851
    2. '=' → logprob: -1.5063469409942627
    3. ']=' → logprob: -6.006347179412842
    4. ' =' → logprob: -6.756347179412842
    5. ')' → logprob: -7.381347179412842
    6. ' ]' → logprob: -9.381346702575684
    7. ']+=' → logprob: -9.881346702575684
    8. '+=' → logprob: -11.506346702575684
    9. ')=' → logprob: -11.506346702575684
    10. ' +=' → logprob: -13.381346702575684

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8074162653647363e-05
    2. '+=' → logprob: -11.500018119812012
    3. ' =' → logprob: -11.750018119812012
    4. ' +=' → logprob: -18.250017166137695
    5. '.=' → logprob: -18.375017166137695
    6. '=p' → logprob: -18.750017166137695
    7. '=

' → logprob: -19.625017166137695
    8. '=int' → logprob: -20.750017166137695
    9. '＝' → logprob: -21.125017166137695
    10. '=
' → logprob: -21.750017166137695

Token 436: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00033546582562848926
    2. ' prefix' → logprob: -8.000335693359375
    3. '(prefix' → logprob: -19.250335693359375
    4. 'pref' → logprob: -21.500335693359375
    5. '_prefix' → logprob: -23.375335693359375
    6. '   ' → logprob: -24.750335693359375
    7. '.prefix' → logprob: -24.750335693359375
    8. ' ' → logprob: -25.375335693359375
    9. 'refix' → logprob: -25.500335693359375
    10. 'Prefix' → logprob: -25.625335693359375

Token 437: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -4.246537173457909e-06
    2. 'weights' → logprob: -12.375003814697266
    3. '_' → logprob: -18.375003814697266
    4. ' weights' → logprob: -18.500003814697266
    5. 'Weights' → logprob: -18.500003814697266
    6. '_weight' → logprob: -19.125003814697266
    7. '+' → logprob: -19.250003814697266
    8. 's' → logprob: -19.750003814697266
    9. '_we' → logprob: -20.125003814697266
    10. 'a' → logprob: -20.500003814697266

Token 438: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. ' [' → logprob: -17.75
    4. 'i' → logprob: -18.625
    5. '[I' → logprob: -18.875
    6. '```' → logprob: -19.875
    7. '[N' → logprob: -20.625
    8. '
' → logprob: -21.25
    9. ' i' → logprob: -21.375
    10. ' ' → logprob: -21.5

Token 439: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17647475004196167
    2. ']+' → logprob: -2.0514748096466064
    3. '+' → logprob: -3.4264748096466064
    4. ' +' → logprob: -7.301474571228027
    5. ' ]' → logprob: -10.676474571228027
    6. ')' → logprob: -10.926474571228027
    7. ')+' → logprob: -11.551474571228027
    8. '[' → logprob: -12.676474571228027
    9. ']+=' → logprob: -13.301474571228027
    10. '+]' → logprob: -13.301474571228027

Token 440: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029750484973192215
    2. ' +' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.40475082397461
    4. '+
' → logprob: -18.52975082397461
    5. '+xml' → logprob: -19.02975082397461
    6. '＋' → logprob: -19.52975082397461
    7. '+[' → logprob: -19.90475082397461
    8. '[' → logprob: -20.02975082397461
    9. '+w' → logprob: -20.15475082397461
    10. ' ' → logprob: -20.27975082397461

Token 441: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -7.941850526549388e-06
    2. ' weights' → logprob: -11.750007629394531
    3. 'weight' → logprob: -20.25000762939453
    4. '(weights' → logprob: -22.25000762939453
    5. '.weights' → logprob: -23.75000762939453
    6. '   ' → logprob: -24.25000762939453
    7. 'weig' → logprob: -25.12500762939453
    8. 'values' → logprob: -25.62500762939453
    9. 'Weights' → logprob: -25.62500762939453
    10. 'words' → logprob: -25.75000762939453

Token 442: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004938178462907672
    2. '[' → logprob: -7.625494003295898
    3. '```' → logprob: -13.000494003295898
    4. '\[' → logprob: -13.875494003295898
    5. '[]' → logprob: -15.000494003295898
    6. '[
' → logprob: -15.000494003295898
    7. 'i' → logprob: -15.125494003295898
    8. '[:]' → logprob: -15.125494003295898
    9. '.' → logprob: -15.500494003295898
    10. '[I' → logprob: -15.625494003295898

Token 443: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ']' → logprob: -13.500003814697266
    3. ' )' → logprob: -13.625003814697266
    4. '<|end|>' → logprob: -14.750003814697266
    5. ')
' → logprob: -14.875003814697266
    6. '}' → logprob: -16.250003814697266
    7. '),' → logprob: -17.000003814697266
    8. '）' → logprob: -17.500003814697266
    9. '))' → logprob: -17.500003814697266
    10. ')

' → logprob: -18.000003814697266

Token 444: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002108118060277775
    2. '
' → logprob: -8.500210762023926
    3. 'import' → logprob: -12.000210762023926
    4. 'INF' → logprob: -14.125210762023926
    5. ' dp' → logprob: -15.625210762023926
    6. '```' → logprob: -16.125211715698242
    7. 'DP' → logprob: -17.625211715698242
    8. '

' → logprob: -17.750211715698242
    9. '	dp' → logprob: -18.125211715698242
    10. ')' → logprob: -18.375211715698242

Token 445: ' Fonction' (ID: 189149)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.960946772480384e-05
    2. 'import' → logprob: -9.250099182128906
    3. 'from' → logprob: -13.125099182128906
    4. 'INF' → logprob: -13.750099182128906
    5. 'def' → logprob: -15.500099182128906
    6. '#' → logprob: -15.625099182128906
    7. '
' → logprob: -17.750099182128906
    8. ' dp' → logprob: -18.750099182128906
    9. 'MAX' → logprob: -18.875099182128906
    10. 'DP' → logprob: -20.375099182128906

Token 446: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009786547161638737
    2. ' def' → logprob: -4.634786605834961
    3. 'de' → logprob: -11.634786605834961
    4. ' valid' → logprob: -12.134786605834961
    5. ' de' → logprob: -12.384786605834961
    6. ')' → logprob: -13.009786605834961
    7. ' can' → logprob: -13.009786605834961
    8. ' is' → logprob: -13.009786605834961
    9. 'can' → logprob: -13.759786605834961
    10. '(' → logprob: -13.884786605834961

Token 447: ' vér' (ID: 42524)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16757765412330627
    2. ' vér' → logprob: -1.9175776243209839
    3. 'pe' → logprob: -6.542577743530273
    4. 'v' → logprob: -7.042577743530273
    5. ' valide' → logprob: -7.042577743530273
    6. ' peut' → logprob: -7.167577743530273
    7. ' def' → logprob: -7.292577743530273
    8. 'valid' → logprob: -7.792577743530273
    9. 'can' → logprob: -8.167577743530273
    10. 's' → logprob: -8.417577743530273

Token 448: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.003218587953597307
    2. 'if' → logprob: -5.878218650817871
    3. '```' → logprob: -8.753218650817871
    4. '#' → logprob: -9.753218650817871
    5. 'rif' → logprob: -10.253218650817871
    6. 'f' → logprob: -11.128218650817871
    7. '

' → logprob: -11.128218650817871
    8. '
' → logprob: -11.253218650817871
    9. 'ify' → logprob: -11.253218650817871
    10. 'ife' → logprob: -11.378218650817871

Token 449: ' si' (ID: 1784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00031067515374161303
    2. ' def' → logprob: -8.750310897827148
    3. 'if' → logprob: -9.125310897827148
    4. ' if' → logprob: -10.875310897827148
    5. 'si' → logprob: -12.000310897827148
    6. ' si' → logprob: -12.250310897827148
    7. ' la' → logprob: -12.500310897827148
    8. '(' → logprob: -13.000310897827148
    9. '(i' → logprob: -13.375310897827148
    10. ')' → logprob: -14.000310897827148

Token 450: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1296281814575195
    2. 'la' → logprob: -1.1296281814575195
    3. ' la' → logprob: -2.2546281814575195
    4. 'on' → logprob: -3.1296281814575195
    5. ' on' → logprob: -3.1296281814575195
    6. 'une' → logprob: -3.2546281814575195
    7. 'pile' → logprob: -3.2546281814575195
    8. ' une' → logprob: -3.5046281814575195
    9. ' pile' → logprob: -4.7546281814575195
    10. 'segment' → logprob: -4.7546281814575195

Token 451: ''on' (ID: 25812)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7207359671592712
    2. 'def' → logprob: -0.9707359671592712
    3. 'segment' → logprob: -2.345736026763916
    4. ' def' → logprob: -3.845736026763916
    5. 'a' → logprob: -4.720736026763916
    6. ' pile' → logprob: -6.220736026763916
    7. ' j' → logprob: -6.970736026763916
    8. '(segment' → logprob: -7.595736026763916
    9. ''on' → logprob: -7.720736026763916
    10. ''ensemble' → logprob: -7.720736026763916

Token 452: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7762215733528137
    2. ' peut' → logprob: -0.7762215733528137
    3. 'def' → logprob: -2.776221513748169
    4. ' peux' → logprob: -4.526221752166748
    5. 'can' → logprob: -5.526221752166748
    6. 'p' → logprob: -7.151221752166748
    7. ' can' → logprob: -7.276221752166748
    8. '#' → logprob: -8.77622127532959
    9. 's' → logprob: -8.90122127532959
    10. ' pe' → logprob: -9.52622127532959

Token 453: ' former' (ID: 9254)
  Prédit: ' emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' emp' → logprob: -0.24963411688804626
    2. 'emp' → logprob: -1.6246341466903687
    3. ' stack' → logprob: -4.499634265899658
    4. 'sou' → logprob: -5.374634265899658
    5. 'stack' → logprob: -5.749634265899658
    6. 'former' → logprob: -6.124634265899658
    7. ' form' → logprob: -7.374634265899658
    8. ' construire' → logprob: -7.749634265899658
    9. ' sou' → logprob: -7.749634265899658
    10. ' former' → logprob: -8.4996337890625

Token 454: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.23839662969112396
    2. ' une' → logprob: -2.363396644592285
    3. 'pile' → logprob: -3.113396644592285
    4. 'a' → logprob: -3.488396644592285
    5. 'def' → logprob: -3.488396644592285
    6. 'la' → logprob: -4.863396644592285
    7. '```' → logprob: -6.863396644592285
    8. 'un' → logprob: -6.863396644592285
    9. ' la' → logprob: -7.238396644592285
    10. 'stack' → logprob: -7.363396644592285

Token 455: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.010113608092069626
    2. ' pile' → logprob: -4.885113716125488
    3. 'p' → logprob: -7.135113716125488
    4. 'chaine' → logprob: -7.135113716125488
    5. 'stack' → logprob: -7.510113716125488
    6. ' chaîne' → logprob: -8.510113716125488
    7. 'chain' → logprob: -9.885113716125488
    8. 'cha' → logprob: -10.385113716125488
    9. ' chaine' → logprob: -10.885113716125488
    10. '```' → logprob: -11.260113716125488

Token 456: ' continue' (ID: 4901)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009187271818518639
    2. '(i' → logprob: -4.8841872215271
    3. 'from' → logprob: -6.8841872215271
    4. '(j' → logprob: -8.634187698364258
    5. 'de' → logprob: -9.384187698364258
    6. '(stack' → logprob: -9.759187698364258
    7. ' def' → logprob: -10.009187698364258
    8. '(start' → logprob: -10.009187698364258
    9. '(p' → logprob: -10.509187698364258
    10. '(' → logprob: -10.759187698364258

Token 457: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0568808875977993
    2. '(i' → logprob: -2.9318809509277344
    3. 'from' → logprob: -6.681880950927734
    4. ' def' → logprob: -8.056880950927734
    5. '(' → logprob: -9.056880950927734
    6. ' (' → logprob: -9.431880950927734
    7. '(j' → logprob: -9.556880950927734
    8. '(start' → logprob: -9.681880950927734
    9. 'de' → logprob: -10.056880950927734
    10. '(from' → logprob: -10.931880950927734

Token 458: ' force' (ID: 9578)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015022405423223972
    2. ' i' → logprob: -4.765022277832031
    3. 'force' → logprob: -5.390022277832031
    4. ' force' → logprob: -7.765022277832031
    5. 'l' → logprob: -8.515022277832031
    6. 'indices' → logprob: -8.515022277832031
    7. 'forces' → logprob: -8.890022277832031
    8. '```' → logprob: -9.140022277832031
    9. 'pile' → logprob: -9.265022277832031
    10. 'range' → logprob: -9.640022277832031

Token 459: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.37302151322364807
    2. 'ur' → logprob: -1.2480214834213257
    3. 'i' → logprob: -4.873021602630615
    4. ' i' → logprob: -5.373021602630615
    5. 'eurs' → logprob: -6.248021602630615
    6. 'u' → logprob: -6.498021602630615
    7. 'def' → logprob: -6.748021602630615
    8. 'r' → logprob: -7.123021602630615
    9. 'reurs' → logprob: -7.248021602630615
    10. '(i' → logprob: -7.373021602630615

Token 460: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01522459089756012
    2. '(i' → logprob: -4.765224456787109
    3. 'from' → logprob: -5.140224456787109
    4. ' def' → logprob: -8.01522445678711
    5. '(start' → logprob: -8.76522445678711
    6. '(from' → logprob: -9.01522445678711
    7. ' from' → logprob: -10.26522445678711
    8. ' (' → logprob: -10.76522445678711
    9. 'de' → logprob: -11.01522445678711
    10. '(' → logprob: -11.51522445678711

Token 461: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0070234378799796104
    2. ' i' → logprob: -5.007023334503174
    3. 'start' → logprob: -8.632023811340332
    4. 'l' → logprob: -9.382023811340332
    5. ' start' → logprob: -11.507023811340332
    6. 'dé' → logprob: -11.632023811340332
    7. '```' → logprob: -12.757023811340332
    8. 'a' → logprob: -12.882023811340332
    9. 'index' → logprob: -13.007023811340332
    10. '[i' → logprob: -13.257023811340332

Token 462: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.20374399423599243
    2. 'à' → logprob: -1.7037439346313477
    3. ',' → logprob: -6.703743934631348
    4. 'a' → logprob: -8.703743934631348
    5. 'À' → logprob: -8.828743934631348
    6. ' jusqu' → logprob: -9.078743934631348
    7. 'i' → logprob: -9.078743934631348
    8. '’à' → logprob: -9.328743934631348
    9. ' i' → logprob: -9.703743934631348
    10. ''à' → logprob: -9.828743934631348

Token 463: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018150413408875465
    2. ' j' → logprob: -4.018150329589844
    3. ',j' → logprob: -14.893150329589844
    4. '	j' → logprob: -15.893150329589844
    5. '   ' → logprob: -17.143150329589844
    6. '$j' → logprob: -17.268150329589844
    7. ' ' → logprob: -17.643150329589844
    8. '[j' → logprob: -17.768150329589844
    9. '_j' → logprob: -17.768150329589844
    10. ' ' → logprob: -17.893150329589844

Token 464: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003918271977454424
    2. '(i' → logprob: -8.375391960144043
    3. ' def' → logprob: -9.500391960144043
    4. '
' → logprob: -10.625391960144043
    5. '(' → logprob: -11.000391960144043
    6. '(def' → logprob: -11.000391960144043
    7. ':' → logprob: -11.250391960144043
    8. '(
' → logprob: -12.375391960144043
    9. ' (' → logprob: -12.500391960144043
    10. ':def' → logprob: -12.875391960144043

Token 465: 'in' (ID: 258)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8607336282730103
    2. 'j' → logprob: -0.8607336282730103
    3. 'def' → logprob: -2.7357335090637207
    4. ')' → logprob: -3.7357335090637207
    5. ' i' → logprob: -3.7357335090637207
    6. ' j' → logprob: -3.9857335090637207
    7. '):' → logprob: -4.860733509063721
    8. ',' → logprob: -4.985733509063721
    9. ' def' → logprob: -5.110733509063721
    10. 'inclusive' → logprob: -7.485733509063721

Token 466: 'clus' (ID: 4085)
  Prédit: 'clusive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusive' → logprob: -0.07178014516830444
    2. 'cl' → logprob: -3.446780204772949
    3. 'clus' → logprob: -3.446780204772949
    4. 'cluded' → logprob: -6.446780204772949
    5. 'range' → logprob: -6.821780204772949
    6. 'def' → logprob: -7.821780204772949
    7. 't' → logprob: -7.821780204772949
    8. '+' → logprob: -7.946780204772949
    9. ')' → logprob: -8.07178020477295
    10. 'dex' → logprob: -8.32178020477295

Token 467: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18630853295326233
    2. '):' → logprob: -1.81130850315094
    3. 'i' → logprob: -6.06130838394165
    4. '):
' → logprob: -6.43630838394165
    5. ',' → logprob: -6.56130838394165
    6. 'j' → logprob: -7.31130838394165
    7. 'def' → logprob: -9.186308860778809
    8. '(i' → logprob: -9.436308860778809
    9. ' i' → logprob: -9.686308860778809
    10. '):

' → logprob: -9.811308860778809

Token 468: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.749814019713085e-06
    2. ' def' → logprob: -12.000006675720215
    3. '
' → logprob: -14.750006675720215
    4. ':def' → logprob: -16.50000762939453
    5. 'de' → logprob: -17.50000762939453
    6. '_def' → logprob: -18.87500762939453
    7. ' 
' → logprob: -19.37500762939453
    8. 'ndef' → logprob: -20.12500762939453
    9. '(def' → logprob: -20.50000762939453
    10. '```' → logprob: -20.62500762939453

Token 469: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.000001907348633
    3. '
' → logprob: -16.750001907348633
    4. '```' → logprob: -22.750001907348633
    5. '	def' → logprob: -23.125001907348633
    6. 'from' → logprob: -23.375001907348633
    7. 'for' → logprob: -23.500001907348633
    8. ':def' → logprob: -23.750001907348633
    9. 'de' → logprob: -23.875001907348633
    10. 'import' → logprob: -24.125001907348633

Token 470: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10567937046289444
    2. 'la' → logprob: -2.6056792736053467
    3. 'range' → logprob: -4.230679512023926
    4. 'i' → logprob: -5.980679512023926
    5. 'lambda' → logprob: -6.230679512023926
    6. 'j' → logprob: -6.605679512023926
    7. 'le' → logprob: -6.855679512023926
    8. 'the' → logprob: -6.980679512023926
    9. ' la' → logprob: -7.105679512023926
    10. 'une' → logprob: -7.230679512023926

Token 471: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.518771231174469
    2. 'def' → logprob: -1.1437711715698242
    3. ' range' → logprob: -3.018771171569824
    4. 'a' → logprob: -4.518771171569824
    5. 'e' → logprob: -5.268771171569824
    6. 'j' → logprob: -5.268771171569824
    7. '```' → logprob: -5.518771171569824
    8. 'ambda' → logprob: -6.018771171569824
    9. 'i' → logprob: -6.393771171569824
    10. 'en' → logprob: -6.643771171569824

Token 472: ' i' (ID: 575)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013572866097092628
    2. ' def' → logprob: -4.388572692871094
    3. '(i' → logprob: -8.513572692871094
    4. ' i' → logprob: -8.638572692871094
    5. ':' → logprob: -8.888572692871094
    6. ' (' → logprob: -9.263572692871094
    7. '
' → logprob: -9.263572692871094
    8. ')' → logprob: -9.888572692871094
    9. 'de' → logprob: -10.388572692871094
    10. 'i' → logprob: -10.513572692871094

Token 473: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43218478560447693
    2. ',j' → logprob: -1.1821848154067993
    3. '+' → logprob: -3.5571846961975098
    4. ' à' → logprob: -5.55718469619751
    5. ' ,' → logprob: -5.93218469619751
    6. '+j' → logprob: -5.93218469619751
    7. ';j' → logprob: -7.30718469619751
    8. ' +' → logprob: -7.30718469619751
    9. ':j' → logprob: -7.30718469619751
    10. 'j' → logprob: -7.43218469619751

Token 474: ' sol' (ID: 1887)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00019507692195475101
    2. 'i' → logprob: -9.375195503234863
    3. ' j' → logprob: -10.000195503234863
    4. '```' → logprob: -10.375195503234863
    5. '   ' → logprob: -11.250195503234863
    6. '
' → logprob: -12.875195503234863
    7. '	j' → logprob: -13.125195503234863
    8. 'à' → logprob: -13.250195503234863
    9. '+' → logprob: -13.500195503234863
    10. ' ' → logprob: -13.500195503234863

Token 475: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008322591311298311
    2. ':' → logprob: -7.7508320808410645
    3. ' def' → logprob: -8.125832557678223
    4. ')' → logprob: -10.000832557678223
    5. ':def' → logprob: -11.000832557678223
    6. ',' → logprob: -11.125832557678223
    7. '```' → logprob: -11.875832557678223
    8. '(i' → logprob: -12.125832557678223
    9. '
' → logprob: -12.375832557678223
    10. '):' → logprob: -13.375832557678223

Token 476: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5139327049255371
    2. ' j' → logprob: -1.888932704925537
    3. 'i' → logprob: -2.013932704925537
    4. ' i' → logprob: -2.263932704925537
    5. '   ' → logprob: -5.513932704925537
    6. 'def' → logprob: -5.888932704925537
    7. ' à' → logprob: -7.263932704925537
    8. '
' → logprob: -7.388932704925537
    9. '    ' → logprob: -7.388932704925537
    10. ' ' → logprob: -7.513932704925537

Token 477: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007120734080672264
    2. ' +' → logprob: -5.382120609283447
    3. '+j' → logprob: -6.132120609283447
    4. ' à' → logprob: -10.132121086120605
    5. 'to' → logprob: -10.507121086120605
    6. '...' → logprob: -10.819621086120605
    7. '+
' → logprob: -10.819621086120605
    8. '
' → logprob: -10.944621086120605
    9. '```' → logprob: -11.069621086120605
    10. 's' → logprob: -11.257121086120605

Token 478: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5785021185874939
    2. '1' → logprob: -0.8285021185874939
    3. ' +' → logprob: -6.328502178192139
    4. 'j' → logprob: -8.57850170135498
    5. '```' → logprob: -8.57850170135498
    6. '+j' → logprob: -8.70350170135498
    7. '
' → logprob: -10.07850170135498
    8. ' ' → logprob: -10.20350170135498
    9. 'plus' → logprob: -10.20350170135498
    10. 's' → logprob: -10.82850170135498

Token 479: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08464758098125458
    2. ' jusqu' → logprob: -3.4596476554870605
    3. ',j' → logprob: -3.8346476554870605
    4. '+' → logprob: -4.7096476554870605
    5. ' à' → logprob: -4.9596476554870605
    6. ' ,' → logprob: -5.2096476554870605
    7. ')' → logprob: -6.2096476554870605
    8. ' au' → logprob: -7.3346476554870605
    9. ',i' → logprob: -7.3346476554870605
    10. ',...' → logprob: -7.7096476554870605

Token 480: '-dessus' (ID: 74812)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2191963940858841
    2. 'i' → logprob: -2.219196319580078
    3. 'sol' → logprob: -2.719196319580078
    4. 'bas' → logprob: -5.219196319580078
    5. '-dessus' → logprob: -5.344196319580078
    6. '```' → logprob: -5.844196319580078
    7. ' dessus' → logprob: -6.219196319580078
    8. '+' → logprob: -6.344196319580078
    9. 'som' → logprob: -6.719196319580078
    10. ' sommet' → logprob: -7.094196319580078

Token 481: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.779520092299208e-05
    2. '
' → logprob: -10.125078201293945
    3. ' def' → logprob: -10.875078201293945
    4. ':' → logprob: -11.250078201293945
    5. ':def' → logprob: -12.750078201293945
    6. ':
' → logprob: -13.000078201293945
    7. '```' → logprob: -15.625078201293945
    8. '(def' → logprob: -16.625078201293945
    9. '(' → logprob: -17.375078201293945
    10. '_def' → logprob: -17.625078201293945

Token 482: ' ...,' (ID: 126708)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6387642621994019
    2. 'i' → logprob: -0.8887642621994019
    3. '#' → logprob: -3.5137643814086914
    4. ' i' → logprob: -4.513764381408691
    5. 'et' → logprob: -4.888764381408691
    6. '...' → logprob: -6.138764381408691
    7. '```' → logprob: -6.263764381408691
    8. ' j' → logprob: -6.388764381408691
    9. '   ' → logprob: -6.638764381408691
    10. ' #' → logprob: -6.638764381408691

Token 483: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003705300623551011
    2. ' j' → logprob: -5.8787055015563965
    3. 'i' → logprob: -8.003705024719238
    4. '...' → logprob: -8.503705024719238
    5. '```' → logprob: -8.753705024719238
    6. '   ' → logprob: -9.628705024719238
    7. '#' → logprob: -10.503705024719238
    8. '
' → logprob: -10.753705024719238
    9. ',' → logprob: -11.128705024719238
    10. '	j' → logprob: -11.253705024719238

Token 484: ' tout' (ID: 5501)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00031985383247956634
    2. '
' → logprob: -8.500319480895996
    3. ':
' → logprob: -10.500319480895996
    4. ':' → logprob: -10.500319480895996
    5. ')' → logprob: -11.000319480895996
    6. '):
' → logprob: -11.375319480895996
    7. ' def' → logprob: -11.375319480895996
    8. ')
' → logprob: -11.500319480895996
    9. ':def' → logprob: -13.125319480895996
    10. '):' → logprob: -13.250319480895996

Token 485: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.002739850664511323
    2. 'au' → logprob: -6.127739906311035
    3. ' en' → logprob: -8.127739906311035
    4. 'à' → logprob: -8.502739906311035
    5. '#' → logprob: -11.627739906311035
    6. 'd' → logprob: -11.752739906311035
    7. '```' → logprob: -11.752739906311035
    8. 'le' → logprob: -12.127739906311035
    9. 'i' → logprob: -12.252739906311035
    10. 'tout' → logprob: -12.377739906311035

Token 486: ' haut' (ID: 28223)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.09235860407352448
    2. 's' → logprob: -3.3423585891723633
    3. 'ass' → logprob: -3.8423585891723633
    4. 'bas' → logprob: -3.9673585891723633
    5. 'res' → logprob: -5.342358589172363
    6. 'i' → logprob: -6.592358589172363
    7. 'v' → logprob: -6.717358589172363
    8. 'maint' → logprob: -6.967358589172363
    9. '```' → logprob: -7.217358589172363
    10. 'ét' → logprob: -8.217358589172363

Token 487: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.975612187583465e-05
    2. '
' → logprob: -10.500029563903809
    3. ' def' → logprob: -13.875029563903809
    4. ':def' → logprob: -15.250029563903809
    5. ')' → logprob: -15.750029563903809
    6. ')
' → logprob: -15.750029563903809
    7. ':
' → logprob: -15.750029563903809
    8. ':' → logprob: -16.000030517578125
    9. '(
' → logprob: -17.000030517578125
    10. 'de' → logprob: -17.125030517578125

Token 488: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. '
' → logprob: -12.000006675720215
    3. ' def' → logprob: -15.875006675720215
    4. '```' → logprob: -18.7500057220459
    5. 'valid' → logprob: -19.5000057220459
    6. '  
' → logprob: -19.8750057220459
    7. ':def' → logprob: -20.1250057220459
    8. 'de' → logprob: -20.1250057220459
    9. '
' → logprob: -20.3750057220459
    10. '	def' → logprob: -20.5000057220459

Token 489: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0018916261615231633
    2. 'is' → logprob: -7.126891613006592
    3. 'pe' → logprob: -7.376891613006592
    4. ' can' → logprob: -8.00189208984375
    5. 'valid' → logprob: -9.75189208984375
    6. 'est' → logprob: -10.50189208984375
    7. 'possible' → logprob: -11.00189208984375
    8. 'pile' → logprob: -11.37689208984375
    9. 'check' → logprob: -13.25189208984375
    10. 'stack' → logprob: -13.37689208984375

Token 490: '_stack' (ID: 35650)
  Prédit: '_form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -0.07315444201231003
    2. '_stack' → logprob: -2.6981544494628906
    3. '_build' → logprob: -6.073154449462891
    4. '_' → logprob: -8.07315444946289
    5. '_make' → logprob: -8.07315444946289
    6. '_create' → logprob: -9.94815444946289
    7. '_continue' → logprob: -10.07315444946289
    8. '_construct' → logprob: -10.44815444946289
    9. '_put' → logprob: -10.82315444946289
    10. '_raise' → logprob: -10.82315444946289

Token 491: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -15.250000953674316
    4. '(start' → logprob: -17.375001907348633
    5. '[i' → logprob: -19.500001907348633
    6. '(s' → logprob: -20.250001907348633
    7. '(a' → logprob: -20.500001907348633
    8. '(
' → logprob: -21.250001907348633
    9. '(from' → logprob: -21.500001907348633
    10. 'i' → logprob: -21.875001907348633

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011108653619885445
    2. ',j' → logprob: -4.511108875274658
    3. ' ,' → logprob: -9.7611083984375
    4. ',
' → logprob: -13.2611083984375
    5. ',int' → logprob: -14.8861083984375
    6. ',i' → logprob: -14.8861083984375
    7. ',k' → logprob: -15.5111083984375
    8. ',n' → logprob: -15.8861083984375
    9. ',p' → logprob: -16.6361083984375
    10. ',b' → logprob: -16.7611083984375

Token 493: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.4987974029500037e-05
    2. ' j' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.750024795532227
    4. '	j' → logprob: -16.625024795532227
    5. '
' → logprob: -17.250024795532227
    6. ',j' → logprob: -17.250024795532227
    7. '    ' → logprob: -18.250024795532227
    8. ',' → logprob: -18.250024795532227
    9. '```' → logprob: -18.375024795532227
    10. ' ' → logprob: -18.375024795532227

Token 494: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012178556062281132
    2. '):
' → logprob: -6.751217842102051
    3. ')' → logprob: -10.12621784210205
    4. ':' → logprob: -12.62621784210205
    5. ' ):' → logprob: -13.00121784210205
    6. '):
' → logprob: -13.75121784210205
    7. ',' → logprob: -14.12621784210205
    8. '   ' → logprob: -16.126218795776367
    9. '):

' → logprob: -16.376218795776367
    10. ')：' → logprob: -16.876218795776367

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009265808388590813
    2. ' total' → logprob: -5.009265899658203
    3. 'total' → logprob: -6.634265899658203
    4. ' for' → logprob: -8.009265899658203
    5. ' current' → logprob: -8.384265899658203
    6. ' if' → logprob: -8.509265899658203
    7. 'for' → logprob: -8.634265899658203
    8. 'current' → logprob: -9.259265899658203
    9. '   ' → logprob: -10.009265899658203
    10. 'if' → logprob: -10.509265899658203

Token 496: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07119860500097275
    2. 'for' → logprob: -3.5711987018585205
    3. '   ' → logprob: -4.071198463439941
    4. 'current' → logprob: -4.446198463439941
    5. ' total' → logprob: -4.946198463439941
    6. 'stack' → logprob: -6.196198463439941
    7. 'curr' → logprob: -7.321198463439941
    8. 'if' → logprob: -7.696198463439941
    9. 'acc' → logprob: -8.071198463439941
    10. 'load' → logprob: -8.196198463439941

Token 497: ' Pour' (ID: 13931)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08249301463365555
    2. 'current' → logprob: -3.3324930667877197
    3. 'for' → logprob: -3.5824930667877197
    4. 'acc' → logprob: -5.332492828369141
    5. 'curr' → logprob: -5.832492828369141
    6. 'stack' → logprob: -5.957492828369141
    7. 'if' → logprob: -6.707492828369141
    8. 'weight' → logprob: -7.082492828369141
    9. ' total' → logprob: -7.207492828369141
    10. 'load' → logprob: -7.332492828369141

Token 498: ' val' (ID: 1459)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008405959815718234
    2. 'pos' → logprob: -7.625840663909912
    3. 'x' → logprob: -9.000840187072754
    4. 'idx' → logprob: -9.125840187072754
    5. 'i' → logprob: -9.750840187072754
    6. 'p' → logprob: -11.000840187072754
    7. ' k' → logprob: -11.125840187072754
    8. 'index' → logprob: -11.375840187072754
    9. 'stack' → logprob: -12.250840187072754
    10. 'force' → logprob: -13.000840187072754

Token 499: 'ider' (ID: 1970)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0030283331871032715
    2. 'i' → logprob: -6.253028392791748
    3. 'range' → logprob: -8.62802791595459
    4. 'eur' → logprob: -8.75302791595459
    5. 'ider' → logprob: -8.87802791595459
    6. 'ide' → logprob: -9.12802791595459
    7. 'def' → logprob: -9.37802791595459
    8. 'er' → logprob: -9.62802791595459
    9. 'd' → logprob: -9.62802791595459
    10. 'if' → logprob: -10.00302791595459

Token 500: ' qu' (ID: 474)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.3416697978973389
    2. 'for' → logprob: -1.7166697978973389
    3. ' for' → logprob: -1.8416697978973389
    4. ' total' → logprob: -1.9666697978973389
    5. '   ' → logprob: -2.216669797897339
    6. ' k' → logprob: -3.591669797897339
    7. 'k' → logprob: -3.841669797897339
    8. 'current' → logprob: -4.091670036315918
    9. 'i' → logprob: -4.466670036315918
    10. ' i' → logprob: -4.466670036315918

Token 501: ''un' (ID: 9788)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9066195487976074
    2. ' k' → logprob: -1.0316195487976074
    3. 'i' → logprob: -2.1566195487976074
    4. 'k' → logprob: -2.1566195487976074
    5. ' j' → logprob: -5.906619548797607
    6. ' for' → logprob: -6.531619548797607
    7. ' ' → logprob: -7.156619548797607
    8. 'x' → logprob: -7.406619548797607
    9. 'j' → logprob: -8.281620025634766
    10. 's' → logprob: -8.406620025634766

Token 502: ' emp' (ID: 4927)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3145403265953064
    2. ' force' → logprob: -2.564540386199951
    3. ' k' → logprob: -2.564540386199951
    4. 'force' → logprob: -2.814540386199951
    5. 'i' → logprob: -3.689540386199951
    6. ' for' → logprob: -4.689540386199951
    7. ' i' → logprob: -4.939540386199951
    8. 'for' → logprob: -5.314540386199951
    9. 'forcer' → logprob: -6.939540386199951
    10. 'stack' → logprob: -7.064540386199951

Token 503: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.3050672709941864
    2. '   ' → logprob: -2.180067300796509
    3. 'i' → logprob: -2.680067300796509
    4. 'il' → logprob: -2.930067300796509
    5. ' ' → logprob: -5.05506706237793
    6. 'iler' → logprob: -5.18006706237793
    7. '  ' → logprob: -5.80506706237793
    8. ' i' → logprob: -6.30506706237793
    9. '_' → logprob: -6.43006706237793
    10. ')' → logprob: -6.93006706237793

Token 504: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0023487689904868603
    2. 'nt' → logprob: -6.627348899841309
    3. 'ments' → logprob: -8.377348899841309
    4. 'm' → logprob: -8.627348899841309
    5. 'i' → logprob: -8.752348899841309
    6. 'ent' → logprob: -9.127348899841309
    7. 'mnt' → logprob: -10.127348899841309
    8. '   ' → logprob: -10.252348899841309
    9. 't' → logprob: -10.377348899841309
    10. 'r' → logprob: -10.502348899841309

Token 505: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.044621229171753
    2. ',' → logprob: -1.419621229171753
    3. ' est' → logprob: -2.044621229171753
    4. '=' → logprob: -2.794621229171753
    5. ' ' → logprob: -3.044621229171753
    6. ' =' → logprob: -3.919621229171753
    7. ' soit' → logprob: -4.169621467590332
    8. ' ,' → logprob: -4.294621467590332
    9. ' i' → logprob: -4.544621467590332
    10. ' de' → logprob: -4.544621467590332

Token 506: ' possible' (ID: 4149)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.1632682085037231
    2. ' True' → logprob: -1.1632682085037231
    3. 'possible' → logprob: -1.2882682085037231
    4. 'True' → logprob: -2.7882680892944336
    5. ' possible' → logprob: -4.288268089294434
    6. ' valide' → logprob: -4.413268089294434
    7. 'val' → logprob: -4.913268089294434
    8. ' valid' → logprob: -5.788268089294434
    9. 'correct' → logprob: -7.413268089294434
    10. 'v' → logprob: -8.538268089294434

Token 507: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033620685338974
    2. ' total' → logprob: -4.533620834350586
    3. ' for' → logprob: -4.658620834350586
    4. 'total' → logprob: -4.908620834350586
    5. 'for' → logprob: -5.783620834350586
    6. 'current' → logprob: -7.533620834350586
    7. ' current' → logprob: -7.658620834350586
    8. '
' → logprob: -8.283620834350586
    9. ' if' → logprob: -8.408620834350586
    10. ',' → logprob: -8.408620834350586

Token 508: ' il' (ID: 1793)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6215819716453552
    2. 'for' → logprob: -1.62158203125
    3. '   ' → logprob: -2.12158203125
    4. ' total' → logprob: -3.12158203125
    5. 'current' → logprob: -3.12158203125
    6. ' for' → logprob: -3.74658203125
    7. 'acc' → logprob: -4.12158203125
    8. ' current' → logprob: -5.49658203125
    9. 'cum' → logprob: -5.87158203125
    10. 'curr' → logprob: -5.99658203125

Token 509: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.25895988941192627
    2. ' must' → logprob: -2.1339597702026367
    3. ' doit' → logprob: -3.5089597702026367
    4. ' for' → logprob: -3.8839597702026367
    5. 'for' → logprob: -3.8839597702026367
    6. 'must' → logprob: -5.008959770202637
    7. ' faudra' → logprob: -5.008959770202637
    8. 'f' → logprob: -5.258959770202637
    9. '   ' → logprob: -5.633959770202637
    10. ' should' → logprob: -5.758959770202637

Token 510: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06282512843608856
    2. '   ' → logprob: -3.6878252029418945
    3. 'all' → logprob: -4.3128252029418945
    4. ' for' → logprob: -4.3128252029418945
    5. 'j' → logprob: -5.8128252029418945
    6. 'i' → logprob: -6.3128252029418945
    7. ' all' → logprob: -6.9378252029418945
    8. 'que' → logprob: -7.6878252029418945
    9. 's' → logprob: -8.062825202941895
    10. ' i' → logprob: -8.187825202941895

Token 511: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47941353917121887
    2. 'all' → logprob: -1.7294135093688965
    3. 'prefix' → logprob: -1.9794135093688965
    4. 'total' → logprob: -3.2294135093688965
    5. 'sum' → logprob: -4.6044135093688965
    6. 'j' → logprob: -5.9794135093688965
    7. ' all' → logprob: -6.2294135093688965
    8. ' for' → logprob: -6.3544135093688965
    9. 'current' → logprob: -6.3544135093688965
    10. ' prefix' → logprob: -6.8544135093688965

Token 512: ' chaque' (ID: 21194)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00022439735766965896
    2. ' k' → logprob: -8.875224113464355
    3. 'x' → logprob: -9.875224113464355
    4. 'all' → logprob: -11.875224113464355
    5. 't' → logprob: -12.125224113464355
    6. 'p' → logprob: -12.375224113464355
    7. 'i' → logprob: -12.375224113464355
    8. 'pos' → logprob: -12.625224113464355
    9. 'idx' → logprob: -13.250224113464355
    10. 'd' → logprob: -13.750224113464355

Token 513: ' force' (ID: 9578)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.8670179997570813e-05
    2. ' k' → logprob: -11.125019073486328
    3. 'force' → logprob: -13.625019073486328
    4. '```' → logprob: -13.875019073486328
    5. 'x' → logprob: -14.250019073486328
    6. '
' → logprob: -15.000019073486328
    7. '   ' → logprob: -15.125019073486328
    8. 'pos' → logprob: -15.625019073486328
    9. 'p' → logprob: -16.125019073486328
    10. ' ' → logprob: -16.875019073486328

Token 514: 'ur' (ID: 330)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28669270873069763
    2. 'ur' → logprob: -2.5366926193237305
    3. 'for' → logprob: -2.9116926193237305
    4. 'er' → logprob: -2.9116926193237305
    5. '   ' → logprob: -3.5366926193237305
    6. 'k' → logprob: -4.5366926193237305
    7. 'forcer' → logprob: -4.9116926193237305
    8. 'urer' → logprob: -5.9116926193237305
    9. ' for' → logprob: -6.4116926193237305
    10. ' k' → logprob: -6.7866926193237305

Token 515: ' du' (ID: 1462)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5922093391418457
    2. 'k' → logprob: -1.4672093391418457
    3. ' k' → logprob: -1.5922093391418457
    4. 'in' → logprob: -5.217209339141846
    5. ',' → logprob: -6.217209339141846
    6. ' i' → logprob: -6.342209339141846
    7. '   ' → logprob: -6.842209339141846
    8. ' between' → logprob: -7.342209339141846
    9. 'i' → logprob: -7.967209339141846
    10. 'from' → logprob: -8.842208862304688

Token 516: ' bas' (ID: 3222)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6595155596733093
    2. 'range' → logprob: -0.9095155596733093
    3. 'k' → logprob: -2.659515619277954
    4. 'segment' → logprob: -6.034515380859375
    5. 'rang' → logprob: -6.159515380859375
    6. ' range' → logprob: -6.409515380859375
    7. ' i' → logprob: -7.284515380859375
    8. 'for' → logprob: -7.284515380859375
    9. 'r' → logprob: -8.159515380859375
    10. '```' → logprob: -8.159515380859375

Token 517: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3179209232330322
    2. '   ' → logprob: -1.8179209232330322
    3. ',' → logprob: -2.1929209232330322
    4. '+i' → logprob: -2.1929209232330322
    5. ' +' → logprob: -2.6929209232330322
    6. 'e' → logprob: -2.8179209232330322
    7. ' i' → logprob: -3.3179209232330322
    8. ' ,' → logprob: -3.3179209232330322
    9. 'i' → logprob: -3.4429209232330322
    10. ' à' → logprob: -3.8179209232330322

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8192189335823059
    2. ',' → logprob: -1.1942188739776611
    3. ' i' → logprob: -2.819218873977661
    4. ' in' → logprob: -2.819218873977661
    5. ' ,' → logprob: -3.069218873977661
    6. ' à' → logprob: -4.06921911239624
    7. ' ' → logprob: -4.56921911239624
    8. '+' → logprob: -4.69421911239624
    9. '(i' → logprob: -4.69421911239624
    10. ')' → logprob: -5.44421911239624

Token 519: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1375387907028198
    2. ',' → logprob: -1.2625387907028198
    3. 'à' → logprob: -1.8875387907028198
    4. ' à' → logprob: -2.5125389099121094
    5. ',i' → logprob: -2.7625389099121094
    6. '(i' → logprob: -4.137538909912109
    7. ' i' → logprob: -4.387538909912109
    8. 'def' → logprob: -4.387538909912109
    9. 'range' → logprob: -4.887538909912109
    10. '[i' → logprob: -5.137538909912109

Token 520: ' jusqu' (ID: 21961)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2457330822944641
    2. 'range' → logprob: -2.6207330226898193
    3. ' i' → logprob: -2.7457330226898193
    4. 'k' → logprob: -3.1207330226898193
    5. ' range' → logprob: -4.245733261108398
    6. 'for' → logprob: -4.745733261108398
    7. ' for' → logprob: -5.495733261108398
    8. ' in' → logprob: -6.495733261108398
    9. ' k' → logprob: -6.870733261108398
    10. 'in' → logprob: -7.245733261108398

Token 521: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.27094581723213196
    2. ''au' → logprob: -2.2709457874298096
    3. '   ' → logprob: -3.2709457874298096
    4. 'au' → logprob: -3.8959457874298096
    5. '’à' → logprob: -4.145946025848389
    6. 'à' → logprob: -4.270946025848389
    7. ' à' → logprob: -4.395946025848389
    8. 'i' → logprob: -4.770946025848389
    9. '’au' → logprob: -5.520946025848389
    10. 'a' → logprob: -5.645946025848389

Token 522: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007032568100839853
    2. ' j' → logprob: -7.87570333480835
    3. 'la' → logprob: -8.750702857971191
    4. ' ' → logprob: -9.875702857971191
    5. 'le' → logprob: -10.500702857971191
    6. 'l' → logprob: -10.625702857971191
    7. ' la' → logprob: -11.250702857971191
    8. '   ' → logprob: -11.625702857971191
    9. ' ' → logprob: -11.875702857971191
    10. 'à' → logprob: -12.250702857971191

Token 523: ''avant' (ID: 161711)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004920631647109985
    2. ' j' → logprob: -5.754920482635498
    3. ',j' → logprob: -8.129920959472656
    4. 'i' → logprob: -8.504920959472656
    5. '(j' → logprob: -8.504920959472656
    6. '_j' → logprob: -8.629920959472656
    7. '   ' → logprob: -9.004920959472656
    8. '[j' → logprob: -9.004920959472656
    9. '	j' → logprob: -9.129920959472656
    10. ':j' → logprob: -9.254920959472656

Token 524: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.03831792250275612
    2. 'der' → logprob: -3.538317918777466
    3. '-' → logprob: -4.788318157196045
    4. '```' → logprob: -9.538317680358887
    5. ' dernier' → logprob: -10.163317680358887
    6. 'Dern' → logprob: -10.538317680358887
    7. '_der' → logprob: -10.913317680358887
    8. ' dernière' → logprob: -11.288317680358887
    9. 'avant' → logprob: -11.788317680358887
    10. ' ' → logprob: -12.038317680358887

Token 525: 'dern' (ID: 19098)
  Prédit: 'dern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.030243881046772003
    2. 'der' → logprob: -3.5302438735961914
    3. 'pen' → logprob: -8.405243873596191
    4. 'j' → logprob: -8.905243873596191
    5. '```' → logprob: -9.780243873596191
    6. '-' → logprob: -10.155243873596191
    7. 'prem' → logprob: -11.405243873596191
    8. 'Dern' → logprob: -12.280243873596191
    9. 'pos' → logprob: -12.405243873596191
    10. 'last' → logprob: -12.655243873596191

Token 526: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.01395556703209877
    2. 'ière' → logprob: -4.513955593109131
    3. 'i' → logprob: -6.638955593109131
    4. 'der' → logprob: -6.763955593109131
    5. 'iere' → logprob: -8.763955116271973
    6. '```' → logprob: -9.763955116271973
    7. 'nier' → logprob: -10.013955116271973
    8. 'er' → logprob: -10.263955116271973
    9. 'dern' → logprob: -10.638955116271973
    10. '-' → logprob: -10.763955116271973

Token 527: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4224053621292114
    2. ',' → logprob: -1.5474053621292114
    3. ':' → logprob: -1.9224053621292114
    4. ' i' → logprob: -2.547405242919922
    5. 'for' → logprob: -2.672405242919922
    6. ' (' → logprob: -3.172405242919922
    7. 'i' → logprob: -3.172405242919922
    8. '(force' → logprob: -3.922405242919922
    9. ' ,' → logprob: -4.047405242919922
    10. '   ' → logprob: -4.047405242919922

Token 528: 'du' (ID: 698)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.29660096764564514
    2. ' j' → logprob: -1.9216009378433228
    3. ',' → logprob: -3.1716010570526123
    4. 'i' → logprob: -3.6716010570526123
    5. ' i' → logprob: -4.421600818634033
    6. '   ' → logprob: -5.171600818634033
    7. ')' → logprob: -5.421600818634033
    8. '),' → logprob: -5.546600818634033
    9. ' ,' → logprob: -5.671600818634033
    10. '):
' → logprob: -5.921600818634033

Token 529: ' rang' (ID: 32287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01331564225256443
    2. 'j' → logprob: -5.263315677642822
    3. 'bas' → logprob: -5.263315677642822
    4. ' i' → logprob: -7.388315677642822
    5. '```' → logprob: -7.513315677642822
    6. 'bottom' → logprob: -7.638315677642822
    7. 'def' → logprob: -8.888315200805664
    8. ')' → logprob: -9.138315200805664
    9. 'stack' → logprob: -9.388315200805664
    10. '   ' → logprob: -9.513315200805664

Token 530: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17495785653591156
    2. ' i' → logprob: -2.174957752227783
    3. ')' → logprob: -3.674957752227783
    4. 'j' → logprob: -5.174957752227783
    5. '   ' → logprob: -5.924957752227783
    6. ' ' → logprob: -6.299957752227783
    7. '),' → logprob: -6.799957752227783
    8. '
' → logprob: -7.299957752227783
    9. ',' → logprob: -7.424957752227783
    10. 'def' → logprob: -7.424957752227783

Token 531: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3183440566062927
    2. ' à' → logprob: -1.9433441162109375
    3. ',j' → logprob: -3.4433441162109375
    4. ';j' → logprob: -4.0683441162109375
    5. '),' → logprob: -4.3183441162109375
    6. ' ,' → logprob: -4.4433441162109375
    7. ';' → logprob: -4.8183441162109375
    8. 'à' → logprob: -5.0683441162109375
    9. '
' → logprob: -5.0683441162109375
    10. ')' → logprob: -5.1933441162109375

Token 532: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007790116942487657
    2. ' j' → logprob: -7.250779151916504
    3. '   ' → logprob: -9.875779151916504
    4. '
' → logprob: -11.625779151916504
    5. ' ' → logprob: -12.250779151916504
    6. '```' → logprob: -13.625779151916504
    7. '[j' → logprob: -14.500779151916504
    8. '	j' → logprob: -15.000779151916504
    9. '(j' → logprob: -15.250779151916504
    10. ' ' → logprob: -15.375779151916504

Token 533: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14743056893348694
    2. '):
' → logprob: -2.772430658340454
    3. '+' → logprob: -2.897430658340454
    4. '   ' → logprob: -4.897430419921875
    5. '+j' → logprob: -6.022430419921875
    6. ':' → logprob: -6.272430419921875
    7. ' ' → logprob: -6.522430419921875
    8. ' +' → logprob: -6.522430419921875
    9. 'j' → logprob: -7.022430419921875
    10. '
' → logprob: -7.522430419921875

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. '```' → logprob: -12.000015258789062
    3. ' ' → logprob: -12.750015258789062
    4. '   ' → logprob: -12.750015258789062
    5. ')' → logprob: -13.375015258789062
    6. '
' → logprob: -14.875015258789062
    7. 'j' → logprob: -15.250015258789062
    8. '...' → logprob: -15.875015258789062
    9. ' ' → logprob: -15.875015258789062
    10. 'i' → logprob: -16.000015258789062

Token 535: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42237529158592224
    2. '):
' → logprob: -1.1723753213882446
    3. '   ' → logprob: -3.672375202178955
    4. ')' → logprob: -5.047375202178955
    5. '),' → logprob: -6.422375202178955
    6. ':' → logprob: -7.672375202178955
    7. ' ):' → logprob: -8.672375679016113
    8. '+' → logprob: -8.797375679016113
    9. '):
' → logprob: -8.922375679016113
    10. ',' → logprob: -9.047375679016113

Token 536: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06865351647138596
    2. ' for' → logprob: -3.3186535835266113
    3. '       ' → logprob: -4.568653583526611
    4. ' total' → logprob: -4.818653583526611
    5. ' if' → logprob: -5.193653583526611
    6. 'for' → logprob: -6.193653583526611
    7. '    ' → logprob: -7.068653583526611
    8. '   ' → logprob: -7.068653583526611
    9. ' ' → logprob: -7.193653583526611
    10. ' weight' → logprob: -8.443653106689453

Token 537: ' puisse' (ID: 77890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42394784092903137
    2. 's' → logprob: -2.048947811126709
    3. ' puisse' → logprob: -2.298947811126709
    4. ' faut' → logprob: -3.798947811126709
    5. ')' → logprob: -4.548947811126709
    6. ' n' → logprob: -4.673947811126709
    7. ' y' → logprob: -4.798947811126709
    8. 'n' → logprob: -5.298947811126709
    9. 'y' → logprob: -5.423947811126709
    10. ' can' → logprob: -5.423947811126709

Token 538: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.0792674794793129
    2. 's' → logprob: -3.3292675018310547
    3. ' sou' → logprob: -3.7042675018310547
    4. 'lever' → logprob: -4.829267501831055
    5. ' soul' → logprob: -5.829267501831055
    6. 'support' → logprob: -6.454267501831055
    7. '   ' → logprob: -6.704267501831055
    8. ' ' → logprob: -7.704267501831055
    9. '```' → logprob: -8.079267501831055
    10. ' support' → logprob: -8.829267501831055

Token 539: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -4.203409844194539e-05
    2. 'le' → logprob: -11.125041961669922
    3. 'l' → logprob: -11.625041961669922
    4. 'mettre' → logprob: -12.375041961669922
    5. ' lever' → logprob: -13.125041961669922
    6. '```' → logprob: -13.250041961669922
    7. '#' → logprob: -13.375041961669922
    8. 'lev' → logprob: -13.375041961669922
    9. 'p' → logprob: -13.625041961669922
    10. 'Lever' → logprob: -14.125041961669922

Token 540: ' la' (ID: 557)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.48271408677101135
    2. 'prefix' → logprob: -1.232714056968689
    3. 'the' → logprob: -3.7327141761779785
    4. ' weights' → logprob: -4.2327141761779785
    5. ' prefix' → logprob: -4.3577141761779785
    6. '(weights' → logprob: -4.6077141761779785
    7. '(prefix' → logprob: -4.9827141761779785
    8. '   ' → logprob: -5.1077141761779785
    9. 'j' → logprob: -5.2327141761779785
    10. ' the' → logprob: -5.8577141761779785

Token 541: ' personne' (ID: 26304)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.46540120244026184
    2. 'prefix' → logprob: -1.4654011726379395
    3. 'weight' → logprob: -3.2154011726379395
    4. ' weights' → logprob: -3.3404011726379395
    5. 'sum' → logprob: -3.9654011726379395
    6. ' prefix' → logprob: -4.2154011726379395
    7. 'po' → logprob: -4.8404011726379395
    8. ' sum' → logprob: -5.2154011726379395
    9. ' poids' → logprob: -5.2154011726379395
    10. 'total' → logprob: -5.8404011726379395

Token 542: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22055809199810028
    2. ' suivante' → logprob: -2.2205581665039062
    3. '[i' → logprob: -3.2205581665039062
    4. 'su' → logprob: -4.845558166503906
    5. ' i' → logprob: -4.845558166503906
    6. 'i' → logprob: -4.970558166503906
    7. 's' → logprob: -5.095558166503906
    8. '[j' → logprob: -5.970558166503906
    9. ' juste' → logprob: -6.095558166503906
    10. '```' → logprob: -6.345558166503906

Token 543: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.23920010030269623
    2. 'i' → logprob: -1.9892001152038574
    3. '-dessus' → logprob: -2.8642001152038574
    4. '```' → logprob: -5.239200115203857
    5. 'su' → logprob: -5.489200115203857
    6. 'j' → logprob: -5.989200115203857
    7. ' dessus' → logprob: -5.989200115203857
    8. 'som' → logprob: -7.239200115203857
    9. 'rang' → logprob: -7.239200115203857
    10. 'd' → logprob: -7.864200115203857

Token 544: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002708465326577425
    2. ':' → logprob: -6.627708435058594
    3. ' for' → logprob: -7.502708435058594
    4. ')' → logprob: -8.752708435058594
    5. 'for' → logprob: -9.002708435058594
    6. ',' → logprob: -9.127708435058594
    7. ' :' → logprob: -9.877708435058594
    8. '       ' → logprob: -9.877708435058594
    9. '    ' → logprob: -10.127708435058594
    10. '  ' → logprob: -10.252708435058594

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029119811952114105
    2. ' for' → logprob: -6.0029120445251465
    3. 'for' → logprob: -7.7529120445251465
    4. '   ' → logprob: -12.752911567687988
    5. '```' → logprob: -14.127911567687988
    6. '    
' → logprob: -14.377911567687988
    7. 'def' → logprob: -14.627911567687988
    8. '
' → logprob: -14.752911567687988
    9. '	for' → logprob: -15.502911567687988
    10. ' i' → logprob: -16.002912521362305

Token 546: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20272217690944672
    2. '   ' → logprob: -2.2027220726013184
    3. 'total' → logprob: -3.0777220726013184
    4. ' for' → logprob: -3.7027220726013184
    5. 'current' → logprob: -7.077722072601318
    6. ' total' → logprob: -7.077722072601318
    7. 'stack' → logprob: -8.952722549438477
    8. 'acc' → logprob: -9.452722549438477
    9. 'weight' → logprob: -9.577722549438477
    10. 'c' → logprob: -9.952722549438477

Token 547: ' En' (ID: 2130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5425118207931519
    2. 'total' → logprob: -0.9175118207931519
    3. 'current' → logprob: -4.417511940002441
    4. 'acc' → logprob: -6.292511940002441
    5. 'curr' → logprob: -6.792511940002441
    6. 'stack' → logprob: -7.167511940002441
    7. '   ' → logprob: -7.542511940002441
    8. ' for' → logprob: -7.667511940002441
    9. 'weight' → logprob: -7.667511940002441
    10. 'c' → logprob: -7.667511940002441

Token 548: ' pile' (ID: 39732)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.334003746509552
    2. 'range' → logprob: -1.3340036869049072
    3. ' range' → logprob: -5.459003925323486
    4. ' for' → logprob: -5.459003925323486
    5. 'def' → logprob: -5.709003925323486
    6. '#' → logprob: -6.209003925323486
    7. 'python' → logprob: -6.834003925323486
    8. 'code' → logprob: -7.084003925323486
    9. '```' → logprob: -7.084003925323486
    10. 'i' → logprob: -8.209003448486328

Token 549: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3319372832775116
    2. 'for' → logprob: -1.706937313079834
    3. ' for' → logprob: -3.456937313079834
    4. ' =' → logprob: -4.331937313079834
    5. 'total' → logprob: -4.456937313079834
    6. 'def' → logprob: -4.831937313079834
    7. 't' → logprob: -5.581937313079834
    8. ':' → logprob: -5.956937313079834
    9. ' i' → logprob: -6.081937313079834
    10. '=' → logprob: -6.081937313079834

Token 550: ' le' (ID: 505)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9038509130477905
    2. 'for' → logprob: -1.0288509130477905
    3. 'current' → logprob: -2.27885103225708
    4. 'acc' → logprob: -3.15385103225708
    5. '   ' → logprob: -4.27885103225708
    6. '#' → logprob: -4.65385103225708
    7. ' for' → logprob: -4.77885103225708
    8. 'c' → logprob: -4.77885103225708
    9. 'po' → logprob: -5.15385103225708
    10. 'cum' → logprob: -5.15385103225708

Token 551: ' force' (ID: 9578)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07394609600305557
    2. 'total' → logprob: -3.448945999145508
    3. 'po' → logprob: -4.698945999145508
    4. 'base' → logprob: -5.073945999145508
    5. '#' → logprob: -5.323945999145508
    6. 'bottom' → logprob: -5.323945999145508
    7. 'current' → logprob: -5.573945999145508
    8. ' for' → logprob: -5.698945999145508
    9. 'bas' → logprob: -5.698945999145508
    10. 'weight' → logprob: -7.073945999145508

Token 552: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.044127658009529114
    2. 'urs' → logprob: -3.5441277027130127
    3. 'er' → logprob: -5.544127464294434
    4. 'r' → logprob: -6.294127464294434
    5. '   ' → logprob: -6.544127464294434
    6. 'stack' → logprob: -6.669127464294434
    7. 'for' → logprob: -6.919127464294434
    8. 'def' → logprob: -7.544127464294434
    9. 'urer' → logprob: -7.544127464294434
    10. 'reur' → logprob: -7.794127464294434

Token 553: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.120381474494934
    2. 'po' → logprob: -2.2453813552856445
    3. 'total' → logprob: -2.4953813552856445
    4. '[i' → logprob: -2.6203813552856445
    5. 'i' → logprob: -2.8703813552856445
    6. '_total' → logprob: -3.2453813552856445
    7. ' at' → logprob: -3.6203813552856445
    8. 'est' → logprob: -3.9953813552856445
    9. '   ' → logprob: -4.1203813552856445
    10. 'au' → logprob: -4.1203813552856445

Token 554: ' soul' (ID: 16741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1126477718353271
    2. 's' → logprob: -2.362647771835327
    3. 'for' → logprob: -2.362647771835327
    4. '+' → logprob: -2.612647771835327
    5. ' doit' → logprob: -2.862647771835327
    6. ' must' → logprob: -3.487647771835327
    7. 'def' → logprob: -3.737647771835327
    8. ' peut' → logprob: -3.862647771835327
    9. ',' → logprob: -3.862647771835327
    10. 'po' → logprob: -3.987647771835327

Token 555: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.0006952775875106454
    2. 'è' → logprob: -7.50069522857666
    3. '`' → logprob: -10.37569522857666
    4. 'èv' → logprob: -10.37569522857666
    5. '#' → logprob: -10.75069522857666
    6. 'e' → logprob: -11.37569522857666
    7. 'ev' → logprob: -11.50069522857666
    8. 've' → logprob: -11.62569522857666
    9. '\' → logprob: -12.37569522857666
    10. 'eve' → logprob: -12.75069522857666

Token 556: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2784784138202667
    2. ' i' → logprob: -1.9034783840179443
    3. 'the' → logprob: -2.9034783840179443
    4. 'weights' → logprob: -4.528478622436523
    5. '   ' → logprob: -5.153478622436523
    6. ' the' → logprob: -5.403478622436523
    7. ' la' → logprob: -6.278478622436523
    8. 'j' → logprob: -6.278478622436523
    9. '```' → logprob: -6.653478622436523
    10. 'le' → logprob: -6.653478622436523

Token 557: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008702147752046585
    2. ' +' → logprob: -4.758702278137207
    3. '   ' → logprob: -9.883702278137207
    4. '+i' → logprob: -11.508702278137207
    5. '```' → logprob: -12.508702278137207
    6. '+j' → logprob: -12.758702278137207
    7. '[' → logprob: -12.883702278137207
    8. ' plus' → logprob: -13.133702278137207
    9. 'plus' → logprob: -13.258702278137207
    10. '[i' → logprob: -13.508702278137207

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015836587408557534
    2. ' ' → logprob: -9.000158309936523
    3. '```' → logprob: -10.500158309936523
    4. '<|end|>' → logprob: -12.625158309936523
    5. ' ' → logprob: -14.125158309936523
    6. '   ' → logprob: -14.625158309936523
    7. '`' → logprob: -14.750158309936523
    8. ')' → logprob: -14.750158309936523
    9. '[' → logprob: -15.000158309936523
    10. ',' → logprob: -15.000158309936523

Token 559: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16126811504364014
    2. 'for' → logprob: -2.7862682342529297
    3. ':' → logprob: -3.2862682342529297
    4. ' for' → logprob: -3.7862682342529297
    5. '+' → logprob: -4.66126823425293
    6. ' if' → logprob: -5.78626823425293
    7. ',' → logprob: -5.78626823425293
    8. ' +' → logprob: -5.78626823425293
    9. 'if' → logprob: -6.16126823425293
    10. ' and' → logprob: -6.28626823425293

Token 560: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13499775528907776
    2. ' i' → logprob: -3.009997844696045
    3. 'for' → logprob: -3.509997844696045
    4. 'i' → logprob: -4.009997844696045
    5. ' for' → logprob: -4.384997844696045
    6. ' if' → logprob: -5.884997844696045
    7. 'et' → logprob: -6.134997844696045
    8. 'j' → logprob: -6.259997844696045
    9. 'if' → logprob: -6.384997844696045
    10. ' and' → logprob: -6.634997844696045

Token 561: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006218739785254002
    2. ' +' → logprob: -5.256218910217285
    3. 's' → logprob: -8.631218910217285
    4. '   ' → logprob: -8.881218910217285
    5. '+i' → logprob: -9.256218910217285
    6. '+j' → logprob: -9.256218910217285
    7. '+
' → logprob: -9.506218910217285
    8. 'i' → logprob: -9.881218910217285
    9. ' ' → logprob: -10.193718910217285
    10. '```' → logprob: -10.381218910217285

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031270162435248494
    2. '+' → logprob: -8.500312805175781
    3. ' ' → logprob: -10.000312805175781
    4. 'j' → logprob: -10.375312805175781
    5. 'i' → logprob: -12.125312805175781
    6. '2' → logprob: -12.375312805175781
    7. '```' → logprob: -12.625312805175781
    8. 's' → logprob: -13.000312805175781
    9. 'plus' → logprob: -13.125312805175781
    10. '<|end|>' → logprob: -13.125312805175781

Token 563: ' soul' (ID: 16741)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7376206517219543
    2. '<|end|>' → logprob: -1.7376205921173096
    3. '```' → logprob: -2.8626205921173096
    4. ',' → logprob: -3.1126205921173096
    5. '   ' → logprob: -3.1126205921173096
    6. 'def' → logprob: -3.1126205921173096
    7. ' +' → logprob: -3.6126205921173096
    8. 's' → logprob: -3.9876205921173096
    9. 'for' → logprob: -4.112620830535889
    10. '...' → logprob: -4.362620830535889

Token 564: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.0011635536793619394
    2. 've' → logprob: -7.126163482666016
    3. 'l' → logprob: -9.251163482666016
    4. '#' → logprob: -9.751163482666016
    5. 'e' → logprob: -9.876163482666016
    6. 'eve' → logprob: -10.626163482666016
    7. 'èves' → logprob: -11.251163482666016
    8. '`' → logprob: -11.251163482666016
    9. 'verte' → logprob: -11.376163482666016
    10. '�' → logprob: -11.376163482666016

Token 565: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06665556877851486
    2. ' i' → logprob: -2.8166556358337402
    3. 'j' → logprob: -5.44165563583374
    4. ' j' → logprob: -8.691655158996582
    5. '   ' → logprob: -9.566655158996582
    6. '```' → logprob: -10.816655158996582
    7. ' ' → logprob: -11.066655158996582
    8. '+' → logprob: -11.441655158996582
    9. ' ' → logprob: -11.566655158996582
    10. '{i' → logprob: -11.566655158996582

Token 566: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002929680049419403
    2. ' +' → logprob: -5.8779296875
    3. '+i' → logprob: -10.5029296875
    4. '2' → logprob: -10.6279296875
    5. '+j' → logprob: -11.3779296875
    6. 'i' → logprob: -11.7529296875
    7. '1' → logprob: -12.0029296875
    8. '   ' → logprob: -12.2529296875
    9. '+k' → logprob: -12.3154296875
    10. 's' → logprob: -12.5029296875

Token 567: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1799081563949585
    2. '1' → logprob: -1.8049081563949585
    3. ' ' → logprob: -9.55490779876709
    4. '```' → logprob: -9.80490779876709
    5. '<|end|>' → logprob: -10.92990779876709
    6. 'i' → logprob: -12.05490779876709
    7. '+' → logprob: -12.92990779876709
    8. '   ' → logprob: -13.24240779876709
    9. '<|end|>' → logprob: -13.80490779876709
    10. '0' → logprob: -14.05490779876709

Token 568: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06299080699682236
    2. ',' → logprob: -3.06299090385437
    3. 'for' → logprob: -5.562990665435791
    4. ':' → logprob: -5.562990665435791
    5. ' for' → logprob: -5.812990665435791
    6. 'def' → logprob: -7.062990665435791
    7. ')' → logprob: -7.062990665435791
    8. ' ,' → logprob: -7.687990665435791
    9. '.' → logprob: -7.937990665435791
    10. '):' → logprob: -8.81299114227295

Token 569: ' etc' (ID: 5178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2828088998794556
    2. ' i' → logprob: -1.2828088998794556
    3. 'i' → logprob: -1.5328088998794556
    4. '...' → logprob: -2.032808780670166
    5. '#' → logprob: -3.157808780670166
    6. 'et' → logprob: -3.782808780670166
    7. ',' → logprob: -5.282808780670166
    8. 'and' → logprob: -5.282808780670166
    9. ' et' → logprob: -5.657808780670166
    10. ' #' → logprob: -5.782808780670166

Token 570: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00300777330994606
    2. 'for' → logprob: -6.378007888793945
    3. ' for' → logprob: -7.003007888793945
    4. '
' → logprob: -8.128007888793945
    5. ',' → logprob: -10.253007888793945
    6. 'def' → logprob: -11.128007888793945
    7. '    
' → logprob: -12.003007888793945
    8. ':' → logprob: -12.128007888793945
    9. '.' → logprob: -12.315507888793945
    10. 'total' → logprob: -12.315507888793945

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005274191964417696
    2. ' for' → logprob: -5.755274295806885
    3. 'for' → logprob: -6.255274295806885
    4. '
' → logprob: -9.130273818969727
    5. ' total' → logprob: -11.380273818969727
    6. 'total' → logprob: -11.505273818969727
    7. '   ' → logprob: -11.755273818969727
    8. '    
' → logprob: -11.755273818969727
    9. 'current' → logprob: -12.005273818969727
    10. '```' → logprob: -12.630273818969727

Token 572: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5988203883171082
    2. '   ' → logprob: -1.473820447921753
    3. 'total' → logprob: -1.723820447921753
    4. ' for' → logprob: -3.598820447921753
    5. ' total' → logprob: -5.098820209503174
    6. 'current' → logprob: -5.098820209503174
    7. 'weight' → logprob: -7.348820209503174
    8. 'stack' → logprob: -7.598820209503174
    9. 'required' → logprob: -8.098820686340332
    10. 'def' → logprob: -8.098820686340332

Token 573: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13140690326690674
    2. 'total' → logprob: -2.256406784057617
    3. '   ' → logprob: -4.631406784057617
    4. 'current' → logprob: -5.631406784057617
    5. ' for' → logprob: -6.381406784057617
    6. 'acc' → logprob: -7.006406784057617
    7. 'stack' → logprob: -7.756406784057617
    8. 'curr' → logprob: -7.756406784057617
    9. 'cum' → logprob: -7.881406784057617
    10. 'c' → logprob: -8.131406784057617

Token 574: ' poids' (ID: 56058)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08169323951005936
    2. ' for' → logprob: -3.081693172454834
    3. 'total' → logprob: -3.706693172454834
    4. 'current' → logprob: -5.831693172454834
    5. ' total' → logprob: -6.581693172454834
    6. 'weight' → logprob: -7.081693172454834
    7. '   ' → logprob: -7.331693172454834
    8. 'curr' → logprob: -7.456693172454834
    9. '```' → logprob: -8.456693649291992
    10. 'po' → logprob: -8.456693649291992

Token 575: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6574020981788635
    2. '_total' → logprob: -1.0324020385742188
    3. '[i' → logprob: -3.4074020385742188
    4. '_' → logprob: -3.6574020385742188
    5. 'tot' → logprob: -4.782402038574219
    6. 'à' → logprob: -4.782402038574219
    7. '=' → logprob: -5.157402038574219
    8. ' =' → logprob: -5.407402038574219
    9. '_des' → logprob: -5.407402038574219
    10. 'des' → logprob: -5.657402038574219

Token 576: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9967919588088989
    2. '_s' → logprob: -1.246791958808899
    3. 'emp' → logprob: -2.7467918395996094
    4. ' =' → logprob: -3.3717918395996094
    5. 'total' → logprob: -3.6217918395996094
    6. 'au' → logprob: -3.7467918395996094
    7. 'acc' → logprob: -4.121791839599609
    8. '_acc' → logprob: -4.371791839599609
    9. '_c' → logprob: -4.496791839599609
    10. '_' → logprob: -4.496791839599609

Token 577: ' sou' (ID: 4069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46747177839279175
    2. 'sou' → logprob: -1.0924718379974365
    3. 'porter' → logprob: -3.8424718379974365
    4. 'emp' → logprob: -5.217471599578857
    5. 'i' → logprob: -5.342471599578857
    6. 'lever' → logprob: -5.842471599578857
    7. 'l' → logprob: -7.467471599578857
    8. 'lev' → logprob: -7.592471599578857
    9. '[i' → logprob: -7.967471599578857
    10. 'charger' → logprob: -8.092472076416016

Token 578: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -5.538490950129926e-05
    2. '#' → logprob: -11.250055313110352
    3. 'le' → logprob: -11.875055313110352
    4. 'l' → logprob: -11.875055313110352
    5. 'p' → logprob: -12.250055313110352
    6. '```' → logprob: -12.250055313110352
    7. ' lever' → logprob: -12.875055313110352
    8. 'mettre' → logprob: -13.000055313110352
    9. '`' → logprob: -13.875055313110352
    10. 'lev' → logprob: -14.000055313110352

Token 579: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5822558999061584
    2. '=' → logprob: -0.8322558999061584
    3. 'à' → logprob: -7.332255840301514
    4. 'between' → logprob: -7.457255840301514
    5. 'entre' → logprob: -7.582255840301514
    6. 'au' → logprob: -7.707255840301514
    7. '_between' → logprob: -7.832255840301514
    8. '   ' → logprob: -8.207256317138672
    9. 'est' → logprob: -8.332256317138672
    10. 'for' → logprob: -8.457256317138672

Token 580: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.6065939664840698
    2. 'k' → logprob: -1.8565939664840698
    3. 'range' → logprob: -1.8565939664840698
    4. 'force' → logprob: -2.1065940856933594
    5. 'le' → logprob: -2.2315940856933594
    6. 'la' → logprob: -2.2315940856933594
    7. 'ch' → logprob: -3.7315940856933594
    8. 'position' → logprob: -3.8565940856933594
    9. 'each' → logprob: -4.231594085693359
    10. 'l' → logprob: -4.731594085693359

Token 581: ' force' (ID: 9578)
  Prédit: 'force'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'force' → logprob: -0.1372821033000946
    2. 'i' → logprob: -2.637282133102417
    3. 'k' → logprob: -3.887282133102417
    4. 'current' → logprob: -4.387281894683838
    5. '```' → logprob: -5.012281894683838
    6. 'range' → logprob: -5.887281894683838
    7. 'next' → logprob: -6.137281894683838
    8. 's' → logprob: -6.512281894683838
    9. 'person' → logprob: -6.887281894683838
    10. '[i' → logprob: -6.887281894683838

Token 582: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.038962479680776596
    2. 'urs' → logprob: -3.2889623641967773
    3. 'or' → logprob: -7.913962364196777
    4. 'r' → logprob: -8.538962364196777
    5. '[i' → logprob: -9.163962364196777
    6. 'ors' → logprob: -9.163962364196777
    7. 'stack' → logprob: -10.788962364196777
    8. 'rs' → logprob: -10.913962364196777
    9. 'er' → logprob: -11.163962364196777
    10. 'our' → logprob: -11.538962364196777

Token 583: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27325505018234253
    2. '[i' → logprob: -1.7732551097869873
    3. ' i' → logprob: -3.1482551097869873
    4. '(i' → logprob: -5.398254871368408
    5. '[' → logprob: -5.773254871368408
    6. 'at' → logprob: -5.898254871368408
    7. 's' → logprob: -5.898254871368408
    8. '`' → logprob: -6.023254871368408
    9. '   ' → logprob: -6.648254871368408
    10. 'k' → logprob: -7.398254871368408

Token 584: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03483728691935539
    2. 'range' → logprob: -4.659837245941162
    3. 'j' → logprob: -4.909837245941162
    4. ' i' → logprob: -5.159837245941162
    5. '[i' → logprob: -5.659837245941162
    6. '```' → logprob: -6.534837245941162
    7. '`' → logprob: -6.659837245941162
    8. 'l' → logprob: -7.534837245941162
    9. 'position' → logprob: -7.659837245941162
    10. ' range' → logprob: -7.784837245941162

Token 585: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0651894807815552
    2. 'k' → logprob: -1.3151894807815552
    3. 'rang' → logprob: -1.8151894807815552
    4. 'for' → logprob: -2.9401893615722656
    5. 'range' → logprob: -3.0651893615722656
    6. 'ligne' → logprob: -3.1901893615722656
    7. 'position' → logprob: -3.9401893615722656
    8. 'current' → logprob: -4.190189361572266
    9. '```' → logprob: -4.440189361572266
    10. 'line' → logprob: -5.440189361572266

Token 586: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21110135316848755
    2. 'i' → logprob: -1.7111012935638428
    3. 'j' → logprob: -5.336101531982422
    4. ' k' → logprob: -7.211101531982422
    5. 'pos' → logprob: -7.586101531982422
    6. 'idx' → logprob: -7.711101531982422
    7. '```' → logprob: -7.836101531982422
    8. 'x' → logprob: -7.961101531982422
    9. 'p' → logprob: -8.086101531982422
    10. '`' → logprob: -8.211101531982422

Token 587: ' est' (ID: 893)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.406727135181427
    2. '=' → logprob: -2.1567270755767822
    3. 'k' → logprob: -2.2817270755767822
    4. ' =' → logprob: -3.4067270755767822
    5. ' est' → logprob: -3.6567270755767822
    6. 'est' → logprob: -4.781727313995361
    7. ' k' → logprob: -5.031727313995361
    8. ' +' → logprob: -5.156727313995361
    9. '=k' → logprob: -5.281727313995361
    10. ' doit' → logprob: -5.281727313995361

Token 588: ' le' (ID: 505)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5794364809989929
    2. ' prefix' → logprob: -0.8294364809989929
    3. '   ' → logprob: -6.454436302185059
    4. ' k' → logprob: -7.454436302185059
    5. '(prefix' → logprob: -7.579436302185059
    6. 'k' → logprob: -8.079436302185059
    7. '```' → logprob: -9.329436302185059
    8. '
' → logprob: -9.454436302185059
    9. ' weights' → logprob: -9.704436302185059
    10. ' j' → logprob: -9.704436302185059

Token 589: ' poids' (ID: 56058)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.015091557055711746
    2. ' prefix' → logprob: -4.265091419219971
    3. 'weights' → logprob: -7.390091419219971
    4. '```' → logprob: -9.265091896057129
    5. 'k' → logprob: -9.765091896057129
    6. '   ' → logprob: -9.890091896057129
    7. ' weights' → logprob: -10.390091896057129
    8. '``' → logprob: -11.515091896057129
    9. '(prefix' → logprob: -11.515091896057129
    10. ' k' → logprob: -11.765091896057129

Token 590: ' de' (ID: 334)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9637212157249451
    2. '[k' → logprob: -0.9637212157249451
    3. ' k' → logprob: -2.46372127532959
    4. 'prefix' → logprob: -3.21372127532959
    5. ' de' → logprob: -3.58872127532959
    6. ' prefix' → logprob: -3.71372127532959
    7. '[' → logprob: -4.71372127532959
    8. '   ' → logprob: -4.83872127532959
    9. 'de' → logprob: -4.96372127532959
    10. ' des' → logprob: -4.96372127532959

Token 591: ' tous' (ID: 10688)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.07459219545125961
    2. 'k' → logprob: -3.324592113494873
    3. 'sum' → logprob: -3.574592113494873
    4. ' prefix' → logprob: -5.574592113494873
    5. 'range' → logprob: -6.824592113494873
    6. '```' → logprob: -7.574592113494873
    7. 'suffix' → logprob: -7.699592113494873
    8. ' k' → logprob: -7.699592113494873
    9. '(prefix' → logprob: -8.574592590332031
    10. 'for' → logprob: -8.699592590332031

Token 592: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2807919383049011
    2. '[k' → logprob: -1.780791997909546
    3. ' k' → logprob: -3.530791997909546
    4. 'force' → logprob: -4.655791759490967
    5. 'range' → logprob: -4.655791759490967
    6. '   ' → logprob: -5.030791759490967
    7. '[' → logprob: -5.780791759490967
    8. '(k' → logprob: -6.030791759490967
    9. 'tokens' → logprob: -6.405791759490967
    10. 'forces' → logprob: -6.405791759490967

Token 593: ' force' (ID: 9578)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06755304336547852
    2. 'force' → logprob: -2.8175530433654785
    3. '[k' → logprob: -6.8175530433654785
    4. 'forces' → logprob: -6.8175530433654785
    5. ' k' → logprob: -7.0675530433654785
    6. '```' → logprob: -7.4425530433654785
    7. 'for' → logprob: -7.8175530433654785
    8. 'range' → logprob: -8.31755256652832
    9. 'weights' → logprob: -8.94255256652832
    10. ' force' → logprob: -9.44255256652832

Token 594: 'urs' (ID: 1628)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.11620521545410156
    2. '[' → logprob: -3.7412052154541016
    3. 'ers' → logprob: -3.7412052154541016
    4. '   ' → logprob: -4.241205215454102
    5. 's' → logprob: -4.366205215454102
    6. 'for' → logprob: -4.866205215454102
    7. 'er' → logprob: -5.241205215454102
    8. 'eurs' → logprob: -5.491205215454102
    9. 'k' → logprob: -6.241205215454102
    10. 'ors' → logprob: -6.366205215454102

Token 595: ' au' (ID: 2791)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2428399622440338
    2. '[k' → logprob: -1.6178399324417114
    3. ' k' → logprob: -5.617839813232422
    4. '```' → logprob: -6.242839813232422
    5. 'from' → logprob: -6.492839813232422
    6. '(k' → logprob: -6.742839813232422
    7. 'dans' → logprob: -6.742839813232422
    8. 'de' → logprob: -7.242839813232422
    9. 'sur' → logprob: -7.492839813232422
    10. '   ' → logprob: -7.617839813232422

Token 596: '-dessus' (ID: 74812)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008658452425152063
    2. '```' → logprob: -8.375865936279297
    3. ' k' → logprob: -8.500865936279297
    4. '-dessus' → logprob: -9.000865936279297
    5. '[k' → logprob: -9.375865936279297
    6. 'token' → logprob: -9.625865936279297
    7. '+' → logprob: -9.875865936279297
    8. '(k' → logprob: -11.000865936279297
    9. 'su' → logprob: -11.375865936279297
    10. 'dess' → logprob: -11.625865936279297

Token 597: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9847955107688904
    2. '+' → logprob: -1.7347955703735352
    3. ' +' → logprob: -2.234795570373535
    4. '[k' → logprob: -2.234795570373535
    5. ',' → logprob: -2.359795570373535
    6. '(k' → logprob: -3.234795570373535
    7. 'de' → logprob: -3.734795570373535
    8. ' k' → logprob: -4.109795570373535
    9. ' de' → logprob: -4.234795570373535
    10. '[' → logprob: -4.484795570373535

Token 598: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0018387987511232495
    2. ' k' → logprob: -7.251838684082031
    3. ')' → logprob: -7.626838684082031
    4. '(k' → logprob: -8.501838684082031
    5. '[k' → logprob: -9.251838684082031
    6. ',' → logprob: -9.501838684082031
    7. '   ' → logprob: -9.501838684082031
    8. '
' → logprob: -10.376838684082031
    9. ' (' → logprob: -10.501838684082031
    10. '```' → logprob: -10.876838684082031

Token 599: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011734402505680919
    2. ' +' → logprob: -6.876173496246338
    3. 'k' → logprob: -9.12617301940918
    4. '+k' → logprob: -10.87617301940918
    5. ']+' → logprob: -12.50117301940918
    6. ')+' → logprob: -13.12617301940918
    7. '+
' → logprob: -13.62617301940918
    8. '   ' → logprob: -14.00117301940918
    9. 'plus' → logprob: -14.12617301940918
    10. '```' → logprob: -14.25117301940918

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010965227847918868
    2. '+' → logprob: -7.251096725463867
    3. '```' → logprob: -8.001096725463867
    4. 'k' → logprob: -11.376096725463867
    5. ' ' → logprob: -11.376096725463867
    6. '
' → logprob: -11.501096725463867
    7. '``' → logprob: -12.126096725463867
    8. 'j' → logprob: -12.626096725463867
    9. ' +' → logprob: -13.001096725463867
    10. '   ' → logprob: -13.376096725463867

Token 601: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1561490297317505
    2. ',j' → logprob: -2.281148910522461
    3. 'k' → logprob: -2.406148910522461
    4. '
' → logprob: -2.406148910522461
    5. ',' → logprob: -2.656148910522461
    6. '+' → logprob: -2.781148910522461
    7. ' jusqu' → logprob: -2.906148910522461
    8. '   ' → logprob: -3.281148910522461
    9. 'j' → logprob: -3.531148910522461
    10. ')+' → logprob: -3.906148910522461

Token 602: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00014084660506341606
    2. ' j' → logprob: -8.875141143798828
    3. '
' → logprob: -15.375141143798828
    4. '	j' → logprob: -15.750141143798828
    5. '   ' → logprob: -15.750141143798828
    6. 'k' → logprob: -16.000141143798828
    7. '```' → logprob: -16.250141143798828
    8. ',j' → logprob: -17.000141143798828
    9. ':j' → logprob: -17.125141143798828
    10. '$j' → logprob: -17.500141143798828

Token 603: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020447051152586937
    2. '+' → logprob: -4.895447254180908
    3. ')
' → logprob: -5.645447254180908
    4. '   ' → logprob: -5.895447254180908
    5. ')+' → logprob: -5.895447254180908
    6. ' )' → logprob: -6.270447254180908
    7. ' +' → logprob: -7.395447254180908
    8. '[' → logprob: -8.14544677734375
    9. ').' → logprob: -8.39544677734375
    10. '),' → logprob: -9.27044677734375

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00081487005809322
    2. 'for' → logprob: -7.500814914703369
    3. ' for' → logprob: -8.375814437866211
    4. '
' → logprob: -10.750814437866211
    5. '```' → logprob: -12.750814437866211
    6. 'def' → logprob: -13.125814437866211
    7. '   ' → logprob: -13.250814437866211
    8. 'total' → logprob: -13.750814437866211
    9. '    
' → logprob: -14.000814437866211
    10. ' total' → logprob: -15.125814437866211

Token 605: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021846717223525047
    2. 'for' → logprob: -3.8968467712402344
    3. ' for' → logprob: -6.646846771240234
    4. '```' → logprob: -13.396846771240234
    5. '   ' → logprob: -13.771846771240234
    6. '
' → logprob: -14.271846771240234
    7. 'def' → logprob: -14.396846771240234
    8. '  ' → logprob: -14.896846771240234
    9. ' ' → logprob: -15.146846771240234
    10. '       ' → logprob: -15.396846771240234

Token 606: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3007515072822571
    2. 'for' → logprob: -1.5507514476776123
    3. ' for' → logprob: -3.0507514476776123
    4. 'def' → logprob: -9.050751686096191
    5. 'total' → logprob: -9.800751686096191
    6. ' k' → logprob: -10.675751686096191
    7. '
' → logprob: -10.675751686096191
    8. 'return' → logprob: -10.675751686096191
    9. 'k' → logprob: -10.800751686096191
    10. '   ' → logprob: -11.175751686096191

Token 607: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6768883466720581
    2. '   ' → logprob: -0.8018883466720581
    3. ' for' → logprob: -3.6768884658813477
    4. 'do' → logprob: -4.551888465881348
    5. 'def' → logprob: -6.051888465881348
    6. 'range' → logprob: -6.301888465881348
    7. 'continue' → logprob: -6.926888465881348
    8. 'must' → logprob: -7.551888465881348
    9. 'return' → logprob: -8.176888465881348
    10. ' doit' → logprob: -8.551888465881348

Token 608: ' vérifier' (ID: 93671)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.47960808873176575
    2. '   ' → logprob: -1.7296080589294434
    3. 'for' → logprob: -2.2296080589294434
    4. ' vérifier' → logprob: -2.7296080589294434
    5. 'ver' → logprob: -4.729608058929443
    6. 'forcer' → logprob: -5.354608058929443
    7. '       ' → logprob: -5.729608058929443
    8. 'contin' → logprob: -5.729608058929443
    9. ' for' → logprob: -5.854608058929443
    10. ' ' → logprob: -6.729608058929443

Token 609: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15949660539627075
    2. 'for' → logprob: -2.159496545791626
    3. ' que' → logprob: -4.784496784210205
    4. ' for' → logprob: -4.784496784210205
    5. ' if' → logprob: -5.784496784210205
    6. 'if' → logprob: -5.909496784210205
    7. ' k' → logprob: -6.409496784210205
    8. '       ' → logprob: -6.409496784210205
    9. 'que' → logprob: -6.534496784210205
    10. 'k' → logprob: -6.659496784210205

Token 610: ' capacities' (ID: 86881)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.881371021270752
    2. ' capacities' → logprob: -1.381371021270752
    3. 'for' → logprob: -1.881371021270752
    4. '   ' → logprob: -2.131371021270752
    5. ' for' → logprob: -3.381371021270752
    6. 'prefix' → logprob: -4.256371021270752
    7. ' prefix' → logprob: -5.381371021270752
    8. 'if' → logprob: -6.256371021270752
    9. 'k' → logprob: -6.506371021270752
    10. ' capac' → logprob: -6.631371021270752

Token 611: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00016825977945700288
    2. '[' → logprob: -8.750167846679688
    3. 'k' → logprob: -12.625167846679688
    4. '[i' → logprob: -13.000167846679688
    5. ' [' → logprob: -13.625167846679688
    6. '```' → logprob: -14.000167846679688
    7. '(k' → logprob: -14.750167846679688
    8. '[j' → logprob: -15.250167846679688
    9. '\[' → logprob: -15.500167846679688
    10. ')' → logprob: -15.625167846679688

Token 612: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4328468441963196
    2. '[k' → logprob: -1.0578467845916748
    3. ']>=' → logprob: -5.932847023010254
    4. '[' → logprob: -7.557847023010254
    5. '   ' → logprob: -7.807847023010254
    6. 'k' → logprob: -8.932847023010254
    7. '>=' → logprob: -9.557847023010254
    8. ' ]' → logprob: -9.557847023010254
    9. ']>' → logprob: -9.932847023010254
    10. '']' → logprob: -10.057847023010254

Token 613: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.013007741421461105
    2. ' >=' → logprob: -4.388007640838623
    3. ']>=' → logprob: -9.013008117675781
    4. '>' → logprob: -9.138008117675781
    5. '   ' → logprob: -9.388008117675781
    6. '≥' → logprob: -9.763008117675781
    7. '[k' → logprob: -9.888008117675781
    8. '[' → logprob: -10.513008117675781
    9. ')>=' → logprob: -11.263008117675781
    10. 'k' → logprob: -12.013008117675781

Token 614: ' poids' (ID: 56058)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0018393946811556816
    2. ' prefix' → logprob: -6.3768391609191895
    3. '(prefix' → logprob: -9.001839637756348
    4. '   ' → logprob: -11.376839637756348
    5. 'suffix' → logprob: -14.876839637756348
    6. 'sum' → logprob: -15.001839637756348
    7. ' (' → logprob: -15.126839637756348
    8. '```' → logprob: -15.251839637756348
    9. ' ' → logprob: -15.376839637756348
    10. '       ' → logprob: -16.00183868408203

Token 615: ' total' (ID: 3609)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.3236823081970215
    2. 'total' → logprob: -1.4486823081970215
    3. '[k' → logprob: -1.9486823081970215
    4. 'prefix' → logprob: -2.3236823081970215
    5. 'des' → logprob: -3.3236823081970215
    6. ' total' → logprob: -3.4486823081970215
    7. '   ' → logprob: -3.5736823081970215
    8. ' prefix' → logprob: -4.0736823081970215
    9. 's' → logprob: -4.1986823081970215
    10. 'tot' → logprob: -4.3236823081970215

Token 616: ' de' (ID: 334)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5528857111930847
    2. '(k' → logprob: -1.6778857707977295
    3. '_des' → logprob: -2.6778857707977295
    4. 'des' → logprob: -2.8028857707977295
    5. '_' → logprob: -3.8028857707977295
    6. '_k' → logprob: -3.9278857707977295
    7. '_total' → logprob: -4.67788553237915
    8. '   ' → logprob: -4.80288553237915
    9. ' des' → logprob: -4.92788553237915
    10. 'k' → logprob: -5.17788553237915

Token 617: ' force' (ID: 9578)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.029539523646235466
    2. 'weights' → logprob: -4.029539585113525
    3. ' prefix' → logprob: -4.654539585113525
    4. '(prefix' → logprob: -6.779539585113525
    5. ' weights' → logprob: -7.904539585113525
    6. '(weights' → logprob: -8.654539108276367
    7. 'weight' → logprob: -10.279539108276367
    8. '```' → logprob: -10.404539108276367
    9. 'suffix' → logprob: -11.029539108276367
    10. 'range' → logprob: -11.154539108276367

Token 618: 'urs' (ID: 1628)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7596389651298523
    2. 'prefix' → logprob: -2.009639024734497
    3. '(prefix' → logprob: -2.009639024734497
    4. '_total' → logprob: -3.134639024734497
    5. '(k' → logprob: -3.259639024734497
    6. ' ' → logprob: -3.259639024734497
    7. '_prefix' → logprob: -3.759639024734497
    8. ' prefix' → logprob: -3.759639024734497
    9. ' à' → logprob: -4.509638786315918
    10. '_weights' → logprob: -4.634638786315918

Token 619: ' k' (ID: 372)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.003614801215007901
    2. '[' → logprob: -7.378614902496338
    3. '(k' → logprob: -7.378614902496338
    4. 'k' → logprob: -7.378614902496338
    5. 'au' → logprob: -7.878614902496338
    6. '[j' → logprob: -7.878614902496338
    7. '[i' → logprob: -8.37861442565918
    8. 'sur' → logprob: -8.75361442565918
    9. ' k' → logprob: -9.75361442565918
    10. '[ind' → logprob: -10.00361442565918

Token 620: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007482991088181734
    2. 'k' → logprob: -6.007483005523682
    3. '[k' → logprob: -6.132483005523682
    4. 's' → logprob: -7.257483005523682
    5. '+k' → logprob: -7.507483005523682
    6. '[' → logprob: -8.007482528686523
    7. '```' → logprob: -8.257482528686523
    8. 'au' → logprob: -8.632482528686523
    9. '[j' → logprob: -8.632482528686523
    10. ' +' → logprob: -8.882482528686523

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028148628771305084
    2. '+' → logprob: -5.877814769744873
    3. '```' → logprob: -12.002815246582031
    4. ' +' → logprob: -13.377815246582031
    5. 'plus' → logprob: -14.252815246582031
    6. '
' → logprob: -14.502815246582031
    7. ' ' → logprob: -15.002815246582031
    8. ']+' → logprob: -15.252815246582031
    9. '{' → logprob: -15.877815246582031
    10. '   ' → logprob: -16.25281524658203

Token 622: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5573501586914062
    2. '[j' → logprob: -1.8073501586914062
    3. '   ' → logprob: -3.0573501586914062
    4. 'k' → logprob: -3.4323501586914062
    5. ':j' → logprob: -3.4323501586914062
    6. ']' → logprob: -3.8073501586914062
    7. ' +' → logprob: -4.182350158691406
    8. '][' → logprob: -4.307350158691406
    9. '(j' → logprob: -4.807350158691406
    10. '
' → logprob: -4.807350158691406

Token 623: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001288332510739565
    2. ' j' → logprob: -6.876288414001465
    3. '(j' → logprob: -8.626288414001465
    4. '[j' → logprob: -9.751288414001465
    5. ' (' → logprob: -12.501288414001465
    6. '   ' → logprob: -12.876288414001465
    7. '```' → logprob: -13.251288414001465
    8. 'prefix' → logprob: -13.376288414001465
    9. ' ' → logprob: -13.626288414001465
    10. ',j' → logprob: -13.751288414001465

Token 624: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002917095785960555
    2. ':' → logprob: -6.877917289733887
    3. '.' → logprob: -7.627917289733887
    4. 'for' → logprob: -8.002917289733887
    5. '
' → logprob: -8.252917289733887
    6. ' for' → logprob: -8.252917289733887
    7. '    
' → logprob: -8.877917289733887
    8. '\n' → logprob: -9.377917289733887
    9. 'def' → logprob: -9.502917289733887
    10. ':
' → logprob: -10.002917289733887

Token 625: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003103175258729607
    2. ' for' → logprob: -8.625309944152832
    3. 'for' → logprob: -9.000309944152832
    4. 'def' → logprob: -12.875309944152832
    5. '
' → logprob: -13.125309944152832
    6. '	for' → logprob: -13.875309944152832
    7. '   ' → logprob: -13.875309944152832
    8. '    
' → logprob: -15.125309944152832
    9. ')' → logprob: -15.875309944152832
    10. '       ' → logprob: -16.00031089782715

Token 626: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4752829968929291
    2. '   ' → logprob: -0.9752830266952515
    3. ' for' → logprob: -6.725283145904541
    4. '
' → logprob: -12.600282669067383
    5. '```' → logprob: -14.600282669067383
    6. '	for' → logprob: -14.850282669067383
    7. 'def' → logprob: -15.225282669067383
    8. '   ' → logprob: -15.600282669067383
    9. 'total' → logprob: -16.600282669067383
    10. '  ' → logprob: -16.600282669067383

Token 627: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06196802109479904
    2. ' k' → logprob: -2.8119680881500244
    3. '	k' → logprob: -15.311967849731445
    4. ' ' → logprob: -16.311967849731445
    5. ' ' → logprob: -16.811967849731445
    6. '   ' → logprob: -17.561967849731445
    7. '_k' → logprob: -18.561967849731445
    8. '(k' → logprob: -19.186967849731445
    9. '```' → logprob: -19.811967849731445
    10. '  ' → logprob: -19.936967849731445

Token 628: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023270051926374435
    2. 'in' → logprob: -3.7732701301574707
    3. '	in' → logprob: -11.773269653320312
    4. 'range' → logprob: -12.523269653320312
    5. ',' → logprob: -13.148269653320312
    6. '=' → logprob: -13.148269653320312
    7. ' ' → logprob: -13.523269653320312
    8. 'from' → logprob: -13.648269653320312
    9. ')' → logprob: -13.773269653320312
    10. '   ' → logprob: -13.773269653320312

Token 629: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011992781655862927
    2. ' range' → logprob: -6.751199245452881
    3. 'i' → logprob: -11.251199722290039
    4. '(range' → logprob: -11.376199722290039
    5. '   ' → logprob: -12.751199722290039
    6. ' ' → logprob: -14.126199722290039
    7. 'rang' → logprob: -15.001199722290039
    8. '	range' → logprob: -15.501199722290039
    9. '(i' → logprob: -16.00119972229004
    10. ')' → logprob: -16.37619972229004

Token 630: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.5716304410016164e-05
    2. 'i' → logprob: -10.500035285949707
    3. '(' → logprob: -12.250035285949707
    4. '   ' → logprob: -13.625035285949707
    5. ' (' → logprob: -14.375035285949707
    6. ',i' → logprob: -14.625035285949707
    7. ' i' → logprob: -15.000035285949707
    8. ')' → logprob: -15.375035285949707
    9. ',' → logprob: -15.500035285949707
    10. '(k' → logprob: -16.375036239624023

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005821787286549807
    2. ' ,' → logprob: -5.630821704864502
    3. ',j' → logprob: -6.130821704864502
    4. '+' → logprob: -10.88082218170166
    5. ',i' → logprob: -11.63082218170166
    6. '   ' → logprob: -11.88082218170166
    7. ',k' → logprob: -12.13082218170166
    8. 'j' → logprob: -13.25582218170166
    9. ' +' → logprob: -14.13082218170166
    10. ' ' → logprob: -14.63082218170166

Token 632: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.0484450437361374e-05
    2. ' j' → logprob: -10.125040054321289
    3. '	j' → logprob: -15.500040054321289
    4. '   ' → logprob: -16.00004005432129
    5. '$j' → logprob: -17.37504005432129
    6. ',j' → logprob: -17.62504005432129
    7. '[j' → logprob: -17.75004005432129
    8. ':j' → logprob: -18.50004005432129
    9. ' ' → logprob: -19.37504005432129
    10. '(j' → logprob: -19.62504005432129

Token 633: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4176400303840637
    2. '+' → logprob: -1.542639970779419
    3. '):
' → logprob: -2.167639970779419
    4. ' +' → logprob: -4.542640209197998
    5. '   ' → logprob: -6.417640209197998
    6. ' ):' → logprob: -8.41763973236084
    7. ')' → logprob: -8.79263973236084
    8. ':' → logprob: -9.29263973236084
    9. '       ' → logprob: -9.79263973236084
    10. '):

' → logprob: -10.04263973236084

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040362097206525505
    2. 'if' → logprob: -8.50040340423584
    3. ' if' → logprob: -8.87540340423584
    4. 'total' → logprob: -10.50040340423584
    5. '   ' → logprob: -11.00040340423584
    6. ' total' → logprob: -12.00040340423584
    7. '```' → logprob: -12.50040340423584
    8. 'weight' → logprob: -12.87540340423584
    9. '        
' → logprob: -14.50040340423584
    10. '    ' → logprob: -15.00040340423584

Token 635: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0037390298675745726
    2. 'total' → logprob: -6.128738880157471
    3. ' if' → logprob: -6.753738880157471
    4. '       ' → logprob: -8.753739356994629
    5. 'prefix' → logprob: -9.378739356994629
    6. '   ' → logprob: -9.753739356994629
    7. 'weight' → logprob: -10.503739356994629
    8. 'required' → logprob: -10.628739356994629
    9. '           ' → logprob: -11.253739356994629
    10. 'weights' → logprob: -11.503739356994629

Token 636: ' poids' (ID: 56058)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.4260548949241638
    2. 'if' → logprob: -1.9260549545288086
    3. 'total' → logprob: -1.9260549545288086
    4. 'load' → logprob: -3.5510549545288086
    5. 'required' → logprob: -4.176054954528809
    6. 'po' → logprob: -5.676054954528809
    7. 'lift' → logprob: -5.801054954528809
    8. 'needed' → logprob: -5.801054954528809
    9. 'to' → logprob: -7.301054954528809
    10. 'wt' → logprob: -8.926054954528809

Token 637: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19294114410877228
    2. ' =' → logprob: -2.442941188812256
    3. '_ab' → logprob: -3.192941188812256
    4. '_to' → logprob: -4.192941188812256
    5. 'total' → logprob: -5.067941188812256
    6. 'to' → logprob: -5.067941188812256
    7. '_total' → logprob: -5.442941188812256
    8. 'above' → logprob: -5.942941188812256
    9. 'à' → logprob: -6.317941188812256
    10. 'sup' → logprob: -6.567941188812256

Token 638: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.16136306524276733
    2. 's' → logprob: -2.036363124847412
    3. 'prefix' → logprob: -4.036363124847412
    4. 'porter' → logprob: -7.661363124847412
    5. 'suffix' → logprob: -9.536362648010254
    6. 'port' → logprob: -10.036362648010254
    7. 'som' → logprob: -10.411362648010254
    8. 'cum' → logprob: -10.536362648010254
    9. 'stack' → logprob: -10.661362648010254
    10. 'prendre' → logprob: -10.911362648010254

Token 639: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.020637886598706245
    2. 'prefix' → logprob: -4.3956379890441895
    3. 'p' → logprob: -6.1456379890441895
    4. 'mettre' → logprob: -7.3956379890441895
    5. 'ff' → logprob: -7.7706379890441895
    6. 'lev' → logprob: -7.8956379890441895
    7. 'ler' → logprob: -8.145637512207031
    8. ' lever' → logprob: -8.145637512207031
    9. 'ffer' → logprob: -8.395637512207031
    10. 'mer' → logprob: -8.645637512207031

Token 640: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16231133043766022
    2. ' =' → logprob: -1.912311315536499
    3. '   ' → logprob: -7.037311553955078
    4. 'prefix' → logprob: -7.287311553955078
    5. '(prefix' → logprob: -7.912311553955078
    6. ' prefix' → logprob: -10.037311553955078
    7. 'total' → logprob: -10.162311553955078
    8. '       ' → logprob: -11.162311553955078
    9. '=p' → logprob: -11.662311553955078
    10. ' total' → logprob: -12.287311553955078

Token 641: ' k' (ID: 372)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5936755537986755
    2. 'capac' → logprob: -0.8436755537986755
    3. 'k' → logprob: -4.59367561340332
    4. ' prefix' → logprob: -5.96867561340332
    5. ' capacities' → logprob: -6.46867561340332
    6. 'capacity' → logprob: -6.59367561340332
    7. '(prefix' → logprob: -7.84367561340332
    8. 'cap' → logprob: -8.21867561340332
    9. ' k' → logprob: -8.71867561340332
    10. '   ' → logprob: -8.71867561340332

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13735909759998322
    2. ' =' → logprob: -2.137359142303467
    3. 'prefix' → logprob: -4.762359142303467
    4. 'total' → logprob: -7.262359142303467
    5. ' prefix' → logprob: -7.387359142303467
    6. '   ' → logprob: -8.137358665466309
    7. ' total' → logprob: -9.012358665466309
    8. '(prefix' → logprob: -10.512358665466309
    9. '=sum' → logprob: -12.012358665466309
    10. '=
' → logprob: -12.137358665466309

Token 643: ' somme' (ID: 64484)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -9.65101717156358e-05
    2. ' prefix' → logprob: -9.250096321105957
    3. '(prefix' → logprob: -15.000096321105957
    4. '   ' → logprob: -16.250097274780273
    5. '           ' → logprob: -19.250097274780273
    6. '```' → logprob: -19.375097274780273
    7. '       ' → logprob: -19.500097274780273
    8. '
' → logprob: -20.375097274780273
    9. '_prefix' → logprob: -20.500097274780273
    10. 'suffix' → logprob: -20.875097274780273

Token 644: ' poids' (ID: 56058)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.5632666349411011
    2. 'prefix' → logprob: -0.9382666349411011
    3. '(weights' → logprob: -3.4382667541503906
    4. 'weights' → logprob: -5.188266754150391
    5. ' prefix' → logprob: -7.563266754150391
    6. ' (' → logprob: -8.31326675415039
    7. '_weights' → logprob: -8.56326675415039
    8. '=' → logprob: -8.81326675415039
    9. '(' → logprob: -8.81326675415039
    10. '   ' → logprob: -9.43826675415039

Token 645: ' indices' (ID: 30378)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4906874895095825
    2. '(prefix' → logprob: -0.9906874895095825
    3. '=' → logprob: -4.365687370300293
    4. ' prefix' → logprob: -7.115687370300293
    5. ' =' → logprob: -7.115687370300293
    6. '(weights' → logprob: -7.240687370300293
    7. 'weights' → logprob: -7.740687370300293
    8. ' (' → logprob: -8.490687370300293
    9. 'refix' → logprob: -8.865687370300293
    10. '(k' → logprob: -9.490687370300293

Token 646: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2882639765739441
    2. '[k' → logprob: -1.7882640361785889
    3. '(k' → logprob: -2.538264036178589
    4. 'range' → logprob: -6.66326379776001
    5. '=k' → logprob: -6.78826379776001
    6. '=' → logprob: -7.16326379776001
    7. ' k' → logprob: -7.66326379776001
    8. '{k' → logprob: -8.913264274597168
    9. ' =' → logprob: -9.788264274597168
    10. ' (' → logprob: -9.913264274597168

Token 647: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00010187433508690447
    2. '(k' → logprob: -9.250102043151855
    3. ' k' → logprob: -13.250102043151855
    4. ')' → logprob: -13.625102043151855
    5. '[k' → logprob: -13.750102043151855
    6. '   ' → logprob: -13.875102043151855
    7. '{k' → logprob: -15.125102043151855
    8. 'range' → logprob: -16.25010108947754
    9. '       ' → logprob: -16.25010108947754
    10. ' (' → logprob: -16.37510108947754

Token 648: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00170684396289289
    2. ' +' → logprob: -7.126707077026367
    3. 'k' → logprob: -7.376707077026367
    4. '[' → logprob: -9.501707077026367
    5. '[k' → logprob: -10.251707077026367
    6. ')' → logprob: -10.376707077026367
    7. '+k' → logprob: -10.751707077026367
    8. ')+' → logprob: -11.001707077026367
    9. '+
' → logprob: -11.251707077026367
    10. ']+' → logprob: -11.376707077026367

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006355931982398033
    2. '+' → logprob: -7.375635623931885
    3. 'k' → logprob: -12.875635147094727
    4. 'j' → logprob: -13.000635147094727
    5. '
' → logprob: -13.625635147094727
    6. ' ' → logprob: -13.750635147094727
    7. ' +' → logprob: -14.375635147094727
    8. '```' → logprob: -14.375635147094727
    9. '   ' → logprob: -15.125635147094727
    10. ')' → logprob: -16.625635147094727

Token 650: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5275123119354248
    2. '[j' → logprob: -1.4025123119354248
    3. ',' → logprob: -2.527512311935425
    4. 'j' → logprob: -3.652512311935425
    5. ',j' → logprob: -3.652512311935425
    6. ' +' → logprob: -4.652512550354004
    7. ')' → logprob: -5.402512550354004
    8. '   ' → logprob: -5.527512550354004
    9. '(j' → logprob: -5.777512550354004
    10. ':j' → logprob: -6.027512550354004

Token 651: ' ...' (ID: 2550)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.864185631275177
    2. '+' → logprob: -1.2391855716705322
    3. ',j' → logprob: -2.1141855716705322
    4. '[j' → logprob: -2.2391855716705322
    5. '(j' → logprob: -4.239185810089111
    6. ':j' → logprob: -4.239185810089111
    7. 'j' → logprob: -5.114185810089111
    8. ' ,' → logprob: -5.489185810089111
    9. '```' → logprob: -5.739185810089111
    10. 'to' → logprob: -5.989185810089111

Token 652: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1106635183095932
    2. '(j' → logprob: -2.485663414001465
    3. ' (' → logprob: -4.610663414001465
    4. ' j' → logprob: -5.235663414001465
    5. '[j' → logprob: -5.485663414001465
    6. '   ' → logprob: -7.735663414001465
    7. '+' → logprob: -8.360663414001465
    8. 'k' → logprob: -8.485663414001465
    9. ',' → logprob: -8.485663414001465
    10. '(k' → logprob: -8.610663414001465

Token 653: '
' (ID: 198)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2087228000164032
    2. ' prefix' → logprob: -2.8337228298187256
    3. '(prefix' → logprob: -3.0837228298187256
    4. '=' → logprob: -3.4587228298187256
    5. ' =' → logprob: -3.9587228298187256
    6. '[p' → logprob: -4.7087225914001465
    7. '   ' → logprob: -4.8337225914001465
    8. '[' → logprob: -5.4587225914001465
    9. '```' → logprob: -5.8337225914001465
    10. ',' → logprob: -6.0837225914001465

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07473158091306686
    2. ' =' → logprob: -3.0747315883636475
    3. '=' → logprob: -4.199731349945068
    4. 'total' → logprob: -5.574731349945068
    5. ' total' → logprob: -6.199731349945068
    6. 'prefix' → logprob: -6.699731349945068
    7. '(prefix' → logprob: -7.824731349945068
    8. '```' → logprob: -7.824731349945068
    9. '   ' → logprob: -8.074731826782227
    10. ',' → logprob: -8.199731826782227

Token 655: ' total' (ID: 3609)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5483171343803406
    2. 'total' (adapté à ' total') → logprob: -1.0483171939849854
    3. 'if' → logprob: -3.7983171939849854
    4. ' total' → logprob: -3.7983171939849854
    5. ' prefix' → logprob: -4.923316955566406
    6. 'required' → logprob: -5.298316955566406
    7. '   ' → logprob: -5.548316955566406
    8. 'weight' → logprob: -5.548316955566406
    9. ' if' → logprob: -6.298316955566406
    10. '       ' → logprob: -7.048316955566406

Token 656: '_weight' (ID: 34711)
  Prédit: '_weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.004125653766095638
    2. '_weight' → logprob: -6.129125595092773
    3. '_p' → logprob: -7.254125595092773
    4. ' =' → logprob: -7.629125595092773
    5. '=' → logprob: -8.129125595092773
    6. '_po' → logprob: -8.879125595092773
    7. 'weights' → logprob: -9.629125595092773
    8. '_' → logprob: -9.754125595092773
    9. 'weight' → logprob: -10.129125595092773
    10. 'po' → logprob: -10.129125595092773

Token 657: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061977993696928024
    2. ' =' → logprob: -2.8119781017303467
    3. 'prefix' → logprob: -12.686978340148926
    4. '(prefix' → logprob: -12.811978340148926
    5. '=k' → logprob: -13.686978340148926
    6. '   ' → logprob: -13.936978340148926
    7. ' ' → logprob: -15.311978340148926
    8. '＝' → logprob: -15.436978340148926
    9. 's' → logprob: -15.436978340148926
    10. '=
' → logprob: -15.561978340148926

Token 658: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0011718906462192535
    2. ' prefix' → logprob: -6.751172065734863
    3. '   ' → logprob: -13.501172065734863
    4. '(prefix' → logprob: -15.126172065734863
    5. ' ' → logprob: -19.376171112060547
    6. '       ' → logprob: -20.126171112060547
    7. '           ' → logprob: -20.376171112060547
    8. 'pref' → logprob: -20.626171112060547
    9. '  ' → logprob: -20.876171112060547
    10. 'PREFIX' → logprob: -21.001171112060547

Token 659: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -2.4868770196917467e-05
    2. 'weights' → logprob: -10.625024795532227
    3. 'prefix' → logprob: -15.250024795532227
    4. '_weight' → logprob: -16.125024795532227
    5. ' weights' → logprob: -16.875024795532227
    6. 'Weights' → logprob: -17.250024795532227
    7. '_prefix' → logprob: -17.625024795532227
    8. '_' → logprob: -18.000024795532227
    9. 'weight' → logprob: -18.500024795532227
    10. '   ' → logprob: -19.375024795532227

Token 660: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.16039685904979706
    2. '[k' → logprob: -1.9103968143463135
    3. 'j' → logprob: -9.285396575927734
    4. 'k' → logprob: -9.785396575927734
    5. '[' → logprob: -11.035396575927734
    6. ' [' → logprob: -12.535396575927734
    7. '[i' → logprob: -13.910396575927734
    8. '   ' → logprob: -14.410396575927734
    9. '[min' → logprob: -14.410396575927734
    10. '[
' → logprob: -15.285396575927734

Token 661: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04044764116406441
    2. ']' → logprob: -3.79044771194458
    3. ' +' → logprob: -4.41544771194458
    4. '[' → logprob: -5.91544771194458
    5. ' -' → logprob: -7.04044771194458
    6. ')' → logprob: -7.16544771194458
    7. '   ' → logprob: -8.540447235107422
    8. '-' → logprob: -8.790447235107422
    9. '    ' → logprob: -9.915447235107422
    10. ']-' → logprob: -9.915447235107422

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '+' → logprob: -12.750004768371582
    3. ' ' → logprob: -14.000004768371582
    4. ']' → logprob: -15.500004768371582
    5. ')' → logprob: -16.125003814697266
    6. ' +' → logprob: -17.125003814697266
    7. ' -' → logprob: -17.500003814697266
    8. '0' → logprob: -17.875003814697266
    9. '```' → logprob: -17.875003814697266
    10. '
' → logprob: -18.625003814697266

Token 663: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5078312754631042
    2. '[k' → logprob: -1.382831335067749
    3. '[' → logprob: -2.632831335067749
    4. ')' → logprob: -3.382831335067749
    5. '-' → logprob: -3.882831335067749
    6. ' -' → logprob: -4.38283109664917
    7. ']-' → logprob: -5.13283109664917
    8. '[j' → logprob: -7.38283109664917
    9. ')-' → logprob: -8.382831573486328
    10. '[-' → logprob: -8.507831573486328

Token 664: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193631649017334
    2. '-' → logprob: -1.5019363164901733
    3. '-k' → logprob: -13.126935958862305
    4. '-p' → logprob: -13.501935958862305
    5. ' ' → logprob: -14.126935958862305
    6. '   ' → logprob: -14.251935958862305
    7. '       ' → logprob: -15.001935958862305
    8. '-prefix' → logprob: -15.001935958862305
    9. '```' → logprob: -15.126935958862305
    10. '-total' → logprob: -15.501935958862305

Token 665: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00015860427811276168
    2. ' prefix' → logprob: -8.750158309936523
    3. '(prefix' → logprob: -15.750158309936523
    4. '   ' → logprob: -17.625158309936523
    5. ' ' → logprob: -19.500158309936523
    6. '
' → logprob: -20.750158309936523
    7. '  ' → logprob: -21.000158309936523
    8. '_prefix' → logprob: -21.125158309936523
    9. 'refix' → logprob: -22.000158309936523
    10. '.prefix' → logprob: -22.125158309936523

Token 666: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.00028851060778833926
    2. 'weights' → logprob: -8.750288963317871
    3. 'prefix' → logprob: -9.000288963317871
    4. '_prefix' → logprob: -12.250288963317871
    5. 'Weights' → logprob: -13.875288963317871
    6. '_tokens' → logprob: -15.375288963317871
    7. '```' → logprob: -16.375288009643555
    8. 'weight' → logprob: -16.375288009643555
    9. 'w' → logprob: -16.750288009643555
    10. ' weights' → logprob: -16.875288009643555

Token 667: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00023512568441219628
    2. 'k' → logprob: -8.625235557556152
    3. '(k' → logprob: -10.000235557556152
    4. '{k' → logprob: -11.625235557556152
    5. '[' → logprob: -15.125235557556152
    6. ' [' → logprob: -15.500235557556152
    7. '[
' → logprob: -15.500235557556152
    8. '[(' → logprob: -15.750235557556152
    9. '
' → logprob: -16.125234603881836
    10. '   ' → logprob: -16.375234603881836

Token 668: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14811758697032928
    2. '1' → logprob: -2.0231175422668457
    3. 'k' → logprob: -5.648117542266846
    4. '+k' → logprob: -6.898117542266846
    5. ' +' → logprob: -7.898117542266846
    6. '```' → logprob: -8.898118019104004
    7. '{k' → logprob: -9.148118019104004
    8. '(k' → logprob: -9.273118019104004
    9. '[' → logprob: -9.648118019104004
    10. '[k' → logprob: -10.023118019104004

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.75000286102295
    3. '+' → logprob: -14.62500286102295
    4. '```' → logprob: -14.62500286102295
    5. '2' → logprob: -15.00000286102295
    6. '   ' → logprob: -16.000001907348633
    7. '`' → logprob: -17.000001907348633
    8. '۱' → logprob: -18.437501907348633
    9. '{' → logprob: -18.562501907348633
    10. '``' → logprob: -18.875001907348633

Token 670: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0048295301385223866
    2. ')
' → logprob: -5.879829406738281
    3. '       ' → logprob: -6.379829406738281
    4. '   ' → logprob: -8.379829406738281
    5. '<|end|>' → logprob: -10.129829406738281
    6. ']' → logprob: -10.754829406738281
    7. ' )' → logprob: -11.629829406738281
    8. ')
' → logprob: -11.879829406738281
    9. '```' → logprob: -12.754829406738281
    10. '')' → logprob: -12.754829406738281

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033730578143149614
    2. ' if' → logprob: -6.253373146057129
    3. 'if' → logprob: -6.628373146057129
    4. '   ' → logprob: -9.378373146057129
    5. '<|end|>' → logprob: -11.003373146057129
    6. '```' → logprob: -11.253373146057129
    7. '	if' → logprob: -13.253373146057129
    8. ')' → logprob: -13.628373146057129
    9. '        
' → logprob: -14.128373146057129
    10. ',' → logprob: -14.253373146057129

Token 672: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.050696372985839844
    2. '       ' → logprob: -3.05069637298584
    3. ' if' → logprob: -6.17569637298584
    4. '   ' → logprob: -10.80069637298584
    5. '```' → logprob: -12.67569637298584
    6. '	if' → logprob: -13.05069637298584
    7. 'If' → logprob: -14.42569637298584
    8. '           ' → logprob: -14.80069637298584
    9. '	' → logprob: -14.80069637298584
    10. ' ' → logprob: -16.925697326660156

Token 673: ' total' (ID: 3609)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.0017217113636434078
    2. ' capacities' → logprob: -6.3767218589782715
    3. 'cap' → logprob: -11.126721382141113
    4. 'capacity' → logprob: -12.751721382141113
    5. ' capac' → logprob: -13.751721382141113
    6. '   ' → logprob: -14.376721382141113
    7. '           ' → logprob: -16.25172233581543
    8. '(cap' → logprob: -16.37672233581543
    9. 'total' → logprob: -17.37672233581543
    10. 'caps' → logprob: -17.75172233581543

Token 674: '_weight' (ID: 34711)
  Prédit: '_weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.11395962536334991
    2. 'weights' → logprob: -2.738959550857544
    3. 's' → logprob: -3.613959550857544
    4. 'capac' → logprob: -4.238959789276123
    5. '_weight' → logprob: -7.988959789276123
    6. 'cap' → logprob: -8.113959312438965
    7. '_caps' → logprob: -8.363959312438965
    8. '_cap' → logprob: -8.488959312438965
    9. '[k' → logprob: -8.988959312438965
    10. 'caps' → logprob: -8.988959312438965

Token 675: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.038043100386857986
    2. '>' → logprob: -3.2880430221557617
    3. ' ' → logprob: -14.288043022155762
    4. ' ' → logprob: -14.913043022155762
    5. ' >
' → logprob: -16.288043975830078
    6. ')' → logprob: -16.413043975830078
    7. '">' → logprob: -16.538043975830078
    8. ' >
' → logprob: -16.663043975830078
    9. '   ' → logprob: -16.663043975830078
    10. ')>' → logprob: -17.163043975830078

Token 676: ' capacities' (ID: 86881)
  Prédit: 'capac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capac' → logprob: -0.016077538952231407
    2. ' capacities' → logprob: -4.141077518463135
    3. 'cap' → logprob: -10.516077995300293
    4. ' capac' → logprob: -11.391077995300293
    5. 'capacity' → logprob: -12.516077995300293
    6. '   ' → logprob: -14.516077995300293
    7. '(cap' → logprob: -15.891077995300293
    8. 'caps' → logprob: -16.141077041625977
    9. ' ' → logprob: -16.141077041625977
    10. ' ' → logprob: -16.641077041625977

Token 677: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.75
    4. 'k' → logprob: -16.75
    5. ')' → logprob: -17.375
    6. '[j' → logprob: -17.625
    7. '[c' → logprob: -17.75
    8. ']' → logprob: -18.0
    9. '   ' → logprob: -18.5
    10. '[m' → logprob: -18.5

Token 678: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.12562768161296844
    2. '):' → logprob: -2.7506277561187744
    3. '[k' → logprob: -3.3756277561187744
    4. ']):' → logprob: -4.625627517700195
    5. ']:
' → logprob: -5.000627517700195
    6. '):
' → logprob: -6.500627517700195
    7. ']' → logprob: -7.750627517700195
    8. ']):
' → logprob: -8.000627517700195
    9. '       ' → logprob: -8.375627517700195
    10. '[' → logprob: -8.375627517700195

Token 679: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13742142915725708
    2. '       ' → logprob: -2.3874213695526123
    3. ' return' → logprob: -3.5124213695526123
    4. 'return' → logprob: -5.012421607971191
    5. '               ' → logprob: -10.387421607971191
    6. '	return' → logprob: -12.262421607971191
    7. '```' → logprob: -12.762421607971191
    8. ':return' → logprob: -12.887421607971191
    9. '	       ' → logprob: -13.137421607971191
    10. '		' → logprob: -13.262421607971191

Token 680: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0053733219392597675
    2. '           ' → logprob: -5.255373477935791
    3. ' return' → logprob: -9.505373001098633
    4. '       ' → logprob: -9.755373001098633
    5. '               ' → logprob: -12.130373001098633
    6. '   ' → logprob: -13.880373001098633
    7. '	return' → logprob: -14.255373001098633
    8. ':return' → logprob: -17.380373001098633
    9. '```' → logprob: -18.005373001098633
    10. '{return' → logprob: -18.755373001098633

Token 681: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.1472419600977446e-06
    2. ' False' → logprob: -13.750000953674316
    3. 'false' → logprob: -22.375001907348633
    4. '(False' → logprob: -23.125001907348633
    5. '=False' → logprob: -25.750001907348633
    6. '_false' → logprob: -26.000001907348633
    7. 'True' → logprob: -26.125001907348633
    8. '   ' → logprob: -27.000001907348633
    9. 'FALSE' → logprob: -27.000001907348633
    10. 'F' → logprob: -27.000001907348633

Token 682: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010747690976131707
    2. ' return' → logprob: -9.625107765197754
    3. 'return' → logprob: -10.875107765197754
    4. '	return' → logprob: -11.250107765197754
    5. '
' → logprob: -12.125107765197754
    6. '    
' → logprob: -13.250107765197754
    7. '       ' → logprob: -13.625107765197754
    8. '   ' → logprob: -14.375107765197754
    9. ':return' → logprob: -16.250106811523438
    10. ')' → logprob: -16.500106811523438

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007379923947155476
    2. 'return' → logprob: -5.00738000869751
    3. ' return' → logprob: -7.38238000869751
    4. '	return' → logprob: -10.132379531860352
    5. '   ' → logprob: -14.007379531860352
    6. '       ' → logprob: -14.882379531860352
    7. '
' → logprob: -15.007379531860352
    8. ':return' → logprob: -15.757379531860352
    9. '```' → logprob: -15.882379531860352
    10. 'Return' → logprob: -16.13237953186035

Token 684: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1039312556385994
    2. '   ' → logprob: -2.353931188583374
    3. ' return' → logprob: -5.603931427001953
    4. '	return' → logprob: -10.478931427001953
    5. ' ' → logprob: -13.228931427001953
    6. '```' → logprob: -13.853931427001953
    7. 'eturn' → logprob: -13.978931427001953
    8. 'True' → logprob: -14.728931427001953
    9. '{return' → logprob: -14.728931427001953
    10. ':return' → logprob: -14.853931427001953

Token 685: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '(True' → logprob: -19.875158309936523
    4. 'true' → logprob: -22.625158309936523
    5. '=True' → logprob: -23.375158309936523
    6. ' ' → logprob: -24.625158309936523
    7. '_true' → logprob: -24.750158309936523
    8. 'False' → logprob: -24.750158309936523
    9. '
' → logprob: -25.375158309936523
    10. 'TRUE' → logprob: -25.875158309936523

Token 686: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.895480277715251e-06
    2. 'import' → logprob: -12.125008583068848
    3. 'from' → logprob: -12.625008583068848
    4. ')' → logprob: -16.125009536743164
    5. '_dp' → logprob: -17.625009536743164
    6. 'DP' → logprob: -17.875009536743164
    7. '#' → logprob: -18.125009536743164
    8. ' dp' → logprob: -18.375009536743164
    9. '```' → logprob: -18.375009536743164
    10. 'def' → logprob: -18.500009536743164

Token 687: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.75
    3. 'import' → logprob: -17.75
    4. ' dp' → logprob: -18.625
    5. '_dp' → logprob: -18.625
    6. '	dp' → logprob: -20.0
    7. '(dp' → logprob: -20.0
    8. 'from' → logprob: -20.125
    9. '
' → logprob: -20.5
    10. '#' → logprob: -20.625

Token 688: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.2842308680992573e-05
    2. 'import' → logprob: -10.750022888183594
    3. 'from' → logprob: -13.750022888183594
    4. 'INF' → logprob: -15.250022888183594
    5. '#' → logprob: -17.875022888183594
    6. ' dp' → logprob: -21.375022888183594
    7. 'DP' → logprob: -22.500022888183594
    8. 'memo' → logprob: -23.125022888183594
    9. 'MAX' → logprob: -23.250022888183594
    10. 'def' → logprob: -23.250022888183594

Token 689: ' :' (ID: 712)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.5776860184123507e-06
    2. 'import' → logprob: -13.12500286102295
    3. ' dp' → logprob: -15.12500286102295
    4. '
' → logprob: -16.125001907348633
    5. 'INF' → logprob: -16.750001907348633
    6. 'from' → logprob: -17.375001907348633
    7. ' =' → logprob: -17.750001907348633
    8. '_dp' → logprob: -18.250001907348633
    9. '=' → logprob: -19.000001907348633
    10. 'DP' → logprob: -19.125001907348633

Token 690: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00016110755677800626
    2. 'import' → logprob: -8.750161170959473
    3. ' dp' → logprob: -13.250161170959473
    4. 'from' → logprob: -14.000161170959473
    5. 'INF' → logprob: -17.250160217285156
    6. ' import' → logprob: -20.125160217285156
    7. '	dp' → logprob: -20.375160217285156
    8. '
' → logprob: -20.875160217285156
    9. ' from' → logprob: -22.125160217285156
    10. '```' → logprob: -22.500160217285156

Token 691: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994109600782394
    2. '=' → logprob: -2.6949410438537598
    3. '=[' → logprob: -12.944941520690918
    4. '[' → logprob: -13.694941520690918
    5. ']' → logprob: -14.444941520690918
    6. ' =[' → logprob: -15.194941520690918
    7. ')' → logprob: -15.444941520690918
    8. ' ' → logprob: -16.9449405670166
    9. '＝' → logprob: -17.0699405670166
    10. 's' → logprob: -17.0699405670166

Token 692: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00044675805838778615
    2. '=' → logprob: -8.750446319580078
    3. '[i' → logprob: -9.375446319580078
    4. ' ]' → logprob: -9.375446319580078
    5. ' =' → logprob: -9.750446319580078
    6. ']=' → logprob: -9.750446319580078
    7. '[' → logprob: -14.375446319580078
    8. ']
' → logprob: -14.625446319580078
    9. '   ' → logprob: -15.250446319580078
    10. 'i' → logprob: -15.500446319580078

Token 693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022513806819916
    2. ' =' → logprob: -1.9102251529693604
    3. '=[' → logprob: -14.035224914550781
    4. '[' → logprob: -16.41022491455078
    5. ',' → logprob: -17.03522491455078
    6. ']' → logprob: -17.28522491455078
    7. '=
' → logprob: -17.66022491455078
    8. ' =[' → logprob: -17.91022491455078
    9. '=[]' → logprob: -18.66022491455078
    10. '#' → logprob: -18.66022491455078

Token 694: ' nombre' (ID: 9733)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.36080265045166016
    2. 'float' → logprob: -1.3608026504516602
    3. 'min' → logprob: -3.23580265045166
    4. '0' → logprob: -5.48580265045166
    5. ' N' → logprob: -7.36080265045166
    6. 'minimal' → logprob: -7.48580265045166
    7. 'minimum' → logprob: -7.61080265045166
    8. 'inf' → logprob: -7.73580265045166
    9. ' float' → logprob: -7.86080265045166
    10. 'sys' → logprob: -8.86080265045166

Token 695: ' minimal' (ID: 19957)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23829762637615204
    2. ' =' → logprob: -2.613297700881958
    3. '_min' → logprob: -2.613297700881958
    4. ' de' → logprob: -4.238297462463379
    5. ' minimale' → logprob: -4.738297462463379
    6. 'min' → logprob: -4.863297462463379
    7. '[' → logprob: -5.113297462463379
    8. ' minimal' → logprob: -5.113297462463379
    9. 'de' → logprob: -5.488297462463379
    10. '_' → logprob: -5.988297462463379

Token 696: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33609557151794434
    2. '=' → logprob: -1.4610955715179443
    3. ' de' → logprob: -3.2110955715179443
    4. 'de' → logprob: -4.961095809936523
    5. '[' → logprob: -6.086095809936523
    6. '[i' → logprob: -6.836095809936523
    7. 'dp' → logprob: -7.461095809936523
    8. '_p' → logprob: -7.711095809936523
    9. '_de' → logprob: -7.836095809936523
    10. ']' → logprob: -7.961095809936523

Token 697: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005685218493454158
    2. ' piles' → logprob: -7.625568389892578
    3. 'pile' → logprob: -9.625568389892578
    4. ' p' → logprob: -11.875568389892578
    5. 'pi' → logprob: -13.000568389892578
    6. 'pil' → logprob: -13.625568389892578
    7. 'pies' → logprob: -13.750568389892578
    8. '```' → logprob: -14.250568389892578
    9. 'plies' → logprob: -15.000568389892578
    10. 'pis' → logprob: -15.000568389892578

Token 698: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197351589798927
    2. ' =' → logprob: -2.8119735717773438
    3. '=[' → logprob: -12.811973571777344
    4. ']' → logprob: -13.936973571777344
    5. '[' → logprob: -14.311973571777344
    6. '
' → logprob: -14.436973571777344
    7. '=
' → logprob: -14.811973571777344
    8. 'dp' → logprob: -15.311973571777344
    9. '#' → logprob: -15.936973571777344
    10. '```' → logprob: -16.061973571777344

Token 699: ' couvrir' (ID: 197187)
  Prédit: ' couvrir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.39536821842193604
    2. 'i' → logprob: -1.145368218421936
    3. ' i' → logprob: -5.1453680992126465
    4. 'cover' → logprob: -6.6453680992126465
    5. 'cou' → logprob: -8.520368576049805
    6. '[i' → logprob: -8.645368576049805
    7. 'N' → logprob: -8.770368576049805
    8. ' couvr' → logprob: -8.895368576049805
    9. 'coverage' → logprob: -9.145368576049805
    10. 'c' → logprob: -9.270368576049805

Token 700: ' force' (ID: 9578)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15300244092941284
    2. ' i' → logprob: -2.0280025005340576
    3. 'N' → logprob: -5.2780022621154785
    4. ' N' → logprob: -6.0280022621154785
    5. '[i' → logprob: -6.9030022621154785
    6. 'range' → logprob: -7.1530022621154785
    7. ' range' → logprob: -8.028002738952637
    8. '   ' → logprob: -8.653002738952637
    9. 'le' → logprob: -9.278002738952637
    10. ' la' → logprob: -9.403002738952637

Token 701: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0723833218216896
    2. 'ur' → logprob: -2.947383403778076
    3. '[i' → logprob: -4.822383403778076
    4. 'rs' → logprob: -5.447383403778076
    5. 'r' → logprob: -5.697383403778076
    6. 'ors' → logprob: -7.572383403778076
    7. '[' → logprob: -7.697383403778076
    8. 'or' → logprob: -9.322382926940918
    9. '[]' → logprob: -9.322382926940918
    10. 'eurs' → logprob: -9.322382926940918

Token 702: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.022442322224378586
    2. ' =' → logprob: -3.89744234085083
    3. 'from' → logprob: -7.27244234085083
    4. 'i' → logprob: -8.147441864013672
    5. '=' → logprob: -8.397441864013672
    6. '[N' → logprob: -8.397441864013672
    7. 'de' → logprob: -9.272441864013672
    8. '(i' → logprob: -9.647441864013672
    9. ' i' → logprob: -9.647441864013672
    10. '```' → logprob: -10.147441864013672

Token 703: ' partir' (ID: 12100)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0025417746510356665
    2. ' i' → logprob: -6.502541542053223
    3. '[i' → logprob: -7.502541542053223
    4. 'part' → logprob: -8.377541542053223
    5. ' partir' → logprob: -8.627541542053223
    6. 'range' → logprob: -9.627541542053223
    7. ' range' → logprob: -13.377541542053223
    8. 'index' → logprob: -13.377541542053223
    9. '```' → logprob: -13.377541542053223
    10. 'indice' → logprob: -13.502541542053223

Token 704: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00950437132269144
    2. ' i' → logprob: -5.009504318237305
    3. '[i' → logprob: -6.009504318237305
    4. 'de' → logprob: -8.509504318237305
    5. '(i' → logprob: -9.884504318237305
    6. '   ' → logprob: -10.759504318237305
    7. ' de' → logprob: -10.884504318237305
    8. 'à' → logprob: -11.259504318237305
    9. 'index' → logprob: -13.134504318237305
    10. ' ' → logprob: -13.134504318237305

Token 705: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011709370883181691
    2. ' i' → logprob: -6.751171112060547
    3. '```' → logprob: -14.876171112060547
    4. '[i' → logprob: -15.251171112060547
    5. '`' → logprob: -16.751171112060547
    6. '	i' → logprob: -18.376171112060547
    7. '
' → logprob: -18.501171112060547
    8. '   ' → logprob: -18.751171112060547
    9. 'index' → logprob: -18.751171112060547
    10. ' ' → logprob: -19.126171112060547

Token 706: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935247778892517
    2. ' =' → logprob: -0.6935247778892517
    3. 'dp' → logprob: -7.9435248374938965
    4. '=
' → logprob: -10.943524360656738
    5. '
' → logprob: -12.818524360656738
    6. ' dp' → logprob: -14.318524360656738
    7. ']' → logprob: -15.068524360656738
    8. ' =
' → logprob: -15.068524360656738
    9. '_dp' → logprob: -15.443524360656738
    10. '(dp' → logprob: -15.693524360656738

Token 707: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9361264946837764e-07
    2. ' dp' → logprob: -17.0
    3. '
' → logprob: -17.25
    4. '```' → logprob: -17.5
    5. 'import' → logprob: -19.0
    6. '_dp' → logprob: -20.75
    7. '`' → logprob: -21.125
    8. '	dp' → logprob: -21.125
    9. 'from' → logprob: -21.875
    10. ' =' → logprob: -22.125

Token 708: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47753316164016724
    2. ' =' → logprob: -0.9775331616401672
    3. '[i' → logprob: -6.477533340454102
    4. '[' → logprob: -6.602533340454102
    5. '=[' → logprob: -7.602533340454102
    6. ' =[' → logprob: -10.477533340454102
    7. '```' → logprob: -11.852533340454102
    8. '   ' → logprob: -12.727533340454102
    9. '[:]' → logprob: -12.852533340454102
    10. ')' → logprob: -13.102533340454102

Token 709: ' [' (ID: 723)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.06292050331830978
    2. '[' → logprob: -2.812920570373535
    3. '[n' → logprob: -7.937920570373535
    4. '[int' → logprob: -8.062920570373535
    5. ' [' → logprob: -8.562920570373535
    6. '[i' → logprob: -10.062920570373535
    7. '[num' → logprob: -10.812920570373535
    8. '[j' → logprob: -12.062920570373535
    9. '[len' → logprob: -12.562920570373535
    10. '[min' → logprob: -12.562920570373535

Token 710: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02504894696176052
    2. 'float' → logprob: -3.7750489711761475
    3. 'N' → logprob: -6.400048732757568
    4. '10' → logprob: -8.900049209594727
    5. 'None' → logprob: -12.900049209594727
    6. ' float' → logprob: -14.150049209594727
    7. '100' → logprob: -15.025049209594727
    8. 'int' → logprob: -15.650049209594727
    9. 'sys' → logprob: -16.650049209594727
    10. ' ' → logprob: -17.025049209594727

Token 711: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.013099518604576588
    2. ''in' → logprob: -4.388099670410156
    3. ''' → logprob: -7.513099670410156
    4. ''s' → logprob: -11.388099670410156
    5. ''ex' → logprob: -11.638099670410156
    6. ''inc' → logprob: -13.138099670410156
    7. 'inf' → logprob: -13.388099670410156
    8. ''x' → logprob: -13.513099670410156
    9. ''op' → logprob: -13.763099670410156
    10. ''i' → logprob: -13.888099670410156

Token 712: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.16990353167057037
    2. ''in' → logprob: -1.9199035167694092
    3. ''' → logprob: -4.669903755187988
    4. ''s' → logprob: -8.544903755187988
    5. ''ex' → logprob: -10.919903755187988
    6. 'in' → logprob: -12.169903755187988
    7. ''end' → logprob: -12.294903755187988
    8. ''i' → logprob: -12.419903755187988
    9. ''ap' → logprob: -12.419903755187988
    10. ''inc' → logprob: -12.919903755187988

Token 713: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.3189126253128052
    2. ')]' → logprob: -1.3189126253128052
    3. ']' → logprob: -5.193912506103516
    4. '']' → logprob: -10.068912506103516
    5. ')' → logprob: -10.568912506103516
    6. '')' → logprob: -11.568912506103516
    7. '")]' → logprob: -12.693912506103516
    8. ''' → logprob: -14.318912506103516
    9. '('' → logprob: -14.443912506103516
    10. '']]' → logprob: -14.568912506103516

Token 714: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34762173891067505
    2. 'for' → logprob: -1.8476216793060303
    3. ']*(' → logprob: -2.5976216793060303
    4. ' for' → logprob: -2.8476216793060303
    5. ']*' → logprob: -6.097621917724609
    6. '*(' → logprob: -7.222621917724609
    7. ']+' → logprob: -8.34762191772461
    8. '*' → logprob: -8.34762191772461
    9. '
' → logprob: -9.59762191772461
    10. ')' → logprob: -10.72262191772461

Token 715: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.173704271830502e-06
    2. ' (' → logprob: -12.75000286102295
    3. '(' → logprob: -15.87500286102295
    4. '((' → logprob: -16.750003814697266
    5. '(n' → logprob: -16.875003814697266
    6. 'N' → logprob: -17.000003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '
' → logprob: -19.375003814697266
    9. '(len' → logprob: -20.000003814697266
    10. '(NS' → logprob: -20.000003814697266

Token 716: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.088346359931165e-07
    2. '(N' → logprob: -14.250000953674316
    3. ' N' → logprob: -15.750000953674316
    4. '
' → logprob: -21.125
    5. '   ' → logprob: -22.125
    6. 'n' → logprob: -22.25
    7. '(' → logprob: -22.625
    8. '	N' → logprob: -22.75
    9. '[N' → logprob: -22.75
    10. ',N' → logprob: -23.5

Token 717: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00021105022460687906
    2. ' +' → logprob: -8.500210762023926
    3. '+
' → logprob: -11.875210762023926
    4. '
' → logprob: -15.000210762023926
    5. '1' → logprob: -16.125211715698242
    6. '```' → logprob: -16.875211715698242
    7. ')' → logprob: -18.375211715698242
    8. ' +
' → logprob: -18.625211715698242
    9. '＋' → logprob: -19.750211715698242
    10. '[' → logprob: -20.125211715698242

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '
' → logprob: -19.5
    5. '+' → logprob: -19.625
    6. '   ' → logprob: -19.75
    7. '0' → logprob: -19.875
    8. '１' → logprob: -20.0
    9. '{' → logprob: -20.125
    10. '```' → logprob: -20.375

Token 719: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38701945543289185
    2. ')
' → logprob: -1.137019395828247
    3. ')
' → logprob: -8.887019157409668
    4. ']' → logprob: -11.887019157409668
    5. ']
' → logprob: -13.637019157409668
    6. '])' → logprob: -14.387019157409668
    7. ')`
' → logprob: -14.512019157409668
    8. ')]' → logprob: -14.762019157409668
    9. ')

' → logprob: -15.012019157409668
    10. '])
' → logprob: -15.762019157409668

Token 720: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.320199877838604e-07
    2. ' dp' → logprob: -15.25
    3. '```' → logprob: -16.625
    4. '	dp' → logprob: -17.75
    5. '_dp' → logprob: -18.75
    6. '(dp' → logprob: -19.375
    7. '
' → logprob: -20.875
    8. 'DP' → logprob: -22.25
    9. 'Dp' → logprob: -22.5
    10. '.dp' → logprob: -22.5

Token 721: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -2.7014437364414334e-05
    2. '[-' → logprob: -10.62502670288086
    3. '[' → logprob: -12.87502670288086
    4. 'N' → logprob: -16.75002670288086
    5. '=N' → logprob: -17.50002670288086
    6. '[len' → logprob: -17.62502670288086
    7. ' [' → logprob: -17.75002670288086
    8. ' =' → logprob: -18.37502670288086
    9. '[n' → logprob: -18.75002670288086
    10. '```' → logprob: -18.75002670288086

Token 722: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002243035240098834
    2. '=' → logprob: -6.5022430419921875
    3. ']=' → logprob: -7.2522430419921875
    4. ')' → logprob: -10.502243041992188
    5. ' ]' → logprob: -12.877243041992188
    6. ' =' → logprob: -13.877243041992188
    7. ')=' → logprob: -14.752243041992188
    8. '[' → logprob: -16.252243041992188
    9. '']' → logprob: -16.502243041992188
    10. ')]' → logprob: -16.877243041992188

Token 723: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '＝' → logprob: -17.393150329589844
    4. '=True' → logprob: -18.268150329589844
    5. '.=' → logprob: -18.893150329589844
    6. '=
' → logprob: -19.018150329589844
    7. '=}' → logprob: -19.143150329589844
    8. '<|end|>' → logprob: -19.643150329589844
    9. ')=' → logprob: -20.268150329589844
    10. '_=' → logprob: -20.268150329589844

Token 724: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '۰' → logprob: -24.0
    4. '   ' → logprob: -25.25
    5. '00' → logprob: -25.25
    6. '000' → logprob: -26.0
    7. '０' → logprob: -27.0
    8. ' ' → logprob: -27.25
    9. '```' → logprob: -27.875
    10. '	' → logprob: -28.125

Token 725: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '۰' → logprob: -23.0
    4. '   ' → logprob: -24.625
    5. '00' → logprob: -25.125
    6. '000' → logprob: -25.625
    7. '０' → logprob: -25.875
    8. '	' → logprob: -26.375
    9. '```' → logprob: -26.75
    10. ' ' → logprob: -26.875

Token 726: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.250000953674316
    3. '
' → logprob: -20.5
    4. '	for' → logprob: -22.0
    5. 'def' → logprob: -22.125
    6. '```' → logprob: -23.0
    7. 'For' → logprob: -23.25
    8. '#' → logprob: -24.375
    9. 'from' → logprob: -24.875
    10. '    
' → logprob: -25.25

Token 727: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.5
    3. '	for' → logprob: -21.75
    4. '
' → logprob: -22.625
    5. '```' → logprob: -22.625
    6. 'def' → logprob: -23.875
    7. ')' → logprob: -24.125
    8. 'For' → logprob: -24.125
    9. 'from' → logprob: -26.125
    10. '    
' → logprob: -26.125

Token 728: ' aucun' (ID: 41678)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0052597299218177795
    2. ' for' → logprob: -5.2552595138549805
    3. '
' → logprob: -11.63025951385498
    4. '```' → logprob: -11.75525951385498
    5. '#' → logprob: -12.13025951385498
    6. '0' → logprob: -13.63025951385498
    7. 'dp' → logprob: -14.00525951385498
    8. ')' → logprob: -14.25525951385498
    9. '`' → logprob: -15.13025951385498
    10. 'from' → logprob: -15.63025951385498

Token 729: ' force' (ID: 9578)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.10755583643913269
    2. 'force' → logprob: -2.732555866241455
    3. 'person' → logprob: -3.982555866241455
    4. 'p' → logprob: -4.857555866241455
    5. 'for' → logprob: -5.107555866241455
    6. 'forcer' → logprob: -6.732555866241455
    7. 'emp' → logprob: -7.482555866241455
    8. 'stack' → logprob: -7.732555866241455
    9. ' pile' → logprob: -8.107555389404297
    10. 'à' → logprob: -8.107555389404297

Token 730: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0003645442193374038
    2. 'sur' → logprob: -9.125364303588867
    3. 'urs' → logprob: -9.125364303588867
    4. 'leur' → logprob: -10.000364303588867
    5. 'for' → logprob: -10.375364303588867
    6. 'de' → logprob: -11.375364303588867
    7. 'forcer' → logprob: -11.625364303588867
    8. ' à' → logprob: -11.750364303588867
    9. 'reur' → logprob: -11.875364303588867
    10. 'au' → logprob: -12.250364303588867

Token 731: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9651823043823242
    2. ' à' → logprob: -1.2151823043823242
    3. 'dp' → logprob: -2.090182304382324
    4. 'for' → logprob: -2.215182304382324
    5. ' at' → logprob: -4.340182304382324
    6. ')' → logprob: -4.590182304382324
    7. 'n' → logprob: -4.840182304382324
    8. 'possible' → logprob: -4.840182304382324
    9. ' to' → logprob: -4.965182304382324
    10. 'to' → logprob: -5.215182304382324

Token 732: ' emp' (ID: 4927)
  Prédit: 'emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'emp' → logprob: -0.010669654235243797
    2. 'placer' → logprob: -5.385669708251953
    3. 'sol' → logprob: -5.885669708251953
    4. 'poser' → logprob: -7.760669708251953
    5. 'cou' → logprob: -7.885669708251953
    6. 'sou' → logprob: -8.135669708251953
    7. 'pl' → logprob: -8.260669708251953
    8. 'trait' → logprob: -8.385669708251953
    9. 'mettre' → logprob: -8.635669708251953
    10. 'plier' → logprob: -8.635669708251953

Token 733: 'iler' (ID: 6067)
  Prédit: 'iler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iler' → logprob: -0.001152005628682673
    2. 'ile' → logprob: -8.251152038574219
    3. 'il' → logprob: -8.501152038574219
    4. 'ilé' → logprob: -8.626152038574219
    5. 'i' → logprob: -8.876152038574219
    6. '#' → logprob: -9.376152038574219
    7. 'l' → logprob: -10.001152038574219
    8. '

' → logprob: -11.001152038574219
    9. '   ' → logprob: -11.126152038574219
    10. '1' → logprob: -11.126152038574219

Token 734: ' après' (ID: 16460)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.250001907348633
    3. '```' → logprob: -19.500001907348633
    4. '
' → logprob: -19.750001907348633
    5. '	for' → logprob: -21.250001907348633
    6. 'i' → logprob: -21.750001907348633
    7. ')' → logprob: -22.125001907348633
    8. 'For' → logprob: -22.375001907348633
    9. '``' → logprob: -23.750001907348633
    10. '#' → logprob: -23.750001907348633

Token 735: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1008713702030946e-06
    2. ' for' → logprob: -13.500001907348633
    3. '
' → logprob: -14.375001907348633
    4. '```' → logprob: -17.750001907348633
    5. ')' → logprob: -18.875001907348633
    6. 'i' → logprob: -20.375001907348633
    7. '#' → logprob: -20.750001907348633
    8. 'from' → logprob: -20.750001907348633
    9. '
' → logprob: -20.875001907348633
    10. 'N' → logprob: -21.500001907348633

Token 736: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036940164864063263
    2. '
' → logprob: -6.1286940574646
    3. ' for' → logprob: -6.5036940574646
    4. ')' → logprob: -12.628693580627441
    5. '  
' → logprob: -13.628693580627441
    6. '```' → logprob: -13.628693580627441
    7. '<|end|>' → logprob: -14.003693580627441
    8. '\n' → logprob: -14.128693580627441
    9. 'i' → logprob: -14.378693580627441
    10. '
' → logprob: -14.378693580627441

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04337514936923981
    2. 'N' → logprob: -3.168375253677368
    3. '```' → logprob: -8.918375015258789
    4. 'for' → logprob: -9.293375015258789
    5. ')' → logprob: -10.043375015258789
    6. ' N' → logprob: -11.168375015258789
    7. ' ' → logprob: -11.293375015258789
    8. 'def' → logprob: -11.543375015258789
    9. '[N' → logprob: -11.918375015258789
    10. '`' → logprob: -11.918375015258789

Token 738: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.5577775128767826e-06
    2. ' for' → logprob: -12.125005722045898
    3. '
' → logprob: -18.5000057220459
    4. '```' → logprob: -18.6250057220459
    5. ')' → logprob: -20.0000057220459
    6. 'i' → logprob: -20.3750057220459
    7. '	for' → logprob: -21.0000057220459
    8. '#' → logprob: -22.7500057220459
    9. 'For' → logprob: -22.8750057220459
    10. '  
' → logprob: -23.1250057220459

Token 739: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.696889623621246e-06
    2. ' for' → logprob: -12.87500286102295
    3. '
' → logprob: -17.125001907348633
    4. '```' → logprob: -17.750001907348633
    5. ')' → logprob: -20.125001907348633
    6. 'range' → logprob: -20.625001907348633
    7. '	for' → logprob: -20.875001907348633
    8. '0' → logprob: -20.875001907348633
    9. 'def' → logprob: -21.250001907348633
    10. 'from' → logprob: -21.625001907348633

Token 740: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014138251543045
    2. ' i' → logprob: -1.701413869857788
    3. '	i' → logprob: -14.826414108276367
    4. ' ' → logprob: -16.076414108276367
    5. '   ' → logprob: -17.201414108276367
    6. ' ' → logprob: -17.326414108276367
    7. '(i' → logprob: -18.576414108276367
    8. '```' → logprob: -18.576414108276367
    9. '_i' → logprob: -19.201414108276367
    10. 'I' → logprob: -19.576414108276367

Token 741: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08894525468349457
    2. 'in' → logprob: -2.463945150375366
    3. '	in' → logprob: -13.213945388793945
    4. ' ' → logprob: -13.463945388793945
    5. 'In' → logprob: -14.463945388793945
    6. '   ' → logprob: -14.838945388793945
    7. '_in' → logprob: -15.338945388793945
    8. 'import' → logprob: -15.588945388793945
    9. '```' → logprob: -15.588945388793945
    10. ',' → logprob: -15.838945388793945

Token 742: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. 're' → logprob: -15.62692928314209
    4. 'in' → logprob: -17.751928329467773
    5. '(range' → logprob: -18.501928329467773
    6. 'N' → logprob: -18.501928329467773
    7. '	range' → logprob: -19.001928329467773
    8. ' ' → logprob: -19.626928329467773
    9. 'reverse' → logprob: -20.001928329467773
    10. '```' → logprob: -20.126928329467773

Token 743: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5759864449501038
    2. '(N' → logprob: -0.8259864449501038
    3. ' N' → logprob: -10.700986862182617
    4. '(' → logprob: -11.200986862182617
    5. '   ' → logprob: -12.075986862182617
    6. ',' → logprob: -13.450986862182617
    7. '	N' → logprob: -13.700986862182617
    8. ',N' → logprob: -14.325986862182617
    9. ')' → logprob: -15.075986862182617
    10. '```' → logprob: -15.200986862182617

Token 744: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01229147333651781
    2. ',N' → logprob: -4.762291431427002
    3. ' ,' → logprob: -5.637291431427002
    4. 'N' → logprob: -9.88729190826416
    5. '   ' → logprob: -10.76229190826416
    6. '):
' → logprob: -11.01229190826416
    7. '-' → logprob: -11.88729190826416
    8. '):' → logprob: -12.51229190826416
    9. ',
' → logprob: -13.01229190826416
    10. ' -' → logprob: -13.51229190826416

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '-' → logprob: -15.625001907348633
    4. '2' → logprob: -16.250001907348633
    5. ',' → logprob: -16.875001907348633
    6. ' -' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '```' → logprob: -18.250001907348633
    9. '
' → logprob: -18.500001907348633
    10. '  ' → logprob: -20.500001907348633

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.550411151489243e-05
    2. ' ,' → logprob: -10.125055313110352
    3. ',-' → logprob: -11.125055313110352
    4. '-' → logprob: -15.375055313110352
    5. ',
' → logprob: -16.12505531311035
    6. ' -' → logprob: -16.75005531311035
    7. ' ,-' → logprob: -16.75005531311035
    8. '+' → logprob: -18.37505531311035
    9. '-,' → logprob: -18.62505531311035
    10. ',

' → logprob: -19.25005531311035

Token 747: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.15310683415737e-05
    2. ' -' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.75002098083496
    4. '
' → logprob: -20.62502098083496
    5. '	' → logprob: -20.75002098083496
    6. ' ' → logprob: -21.00002098083496
    7. '-i' → logprob: -21.62502098083496
    8. '−' → logprob: -21.87502098083496
    9. '```' → logprob: -22.00002098083496
    10. 'i' → logprob: -22.37502098083496

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ' -' → logprob: -17.875
    4. '   ' → logprob: -18.0
    5. '-' → logprob: -18.125
    6. '```' → logprob: -18.5
    7. '
' → logprob: -20.0
    8. '2' → logprob: -20.625
    9. '１' → logprob: -20.75
    10. ',' → logprob: -21.0

Token 749: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16429631412029266
    2. ',' → logprob: -1.914296269416809
    3. ' -' → logprob: -5.5392961502075195
    4. ',-' → logprob: -9.41429615020752
    5. ' ,' → logprob: -10.16429615020752
    6. '```' → logprob: -11.91429615020752
    7. '   ' → logprob: -12.91429615020752
    8. '):
' → logprob: -13.78929615020752
    9. '-,' → logprob: -14.03929615020752
    10. ',
' → logprob: -14.03929615020752

Token 750: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.627176768844947e-05
    2. ' -' → logprob: -9.250096321105957
    3. '```' → logprob: -17.37509536743164
    4. '   ' → logprob: -17.50009536743164
    5. ' ' → logprob: -18.25009536743164
    6. ')' → logprob: -19.00009536743164
    7. '):
' → logprob: -19.62509536743164
    8. '
' → logprob: -19.62509536743164
    9. '−' → logprob: -20.37509536743164
    10. '-i' → logprob: -20.62509536743164

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -17.5
    4. '   ' → logprob: -19.0
    5. '```' → logprob: -20.375
    6. '

' → logprob: -20.75
    7. ')' → logprob: -21.375
    8. '  ' → logprob: -21.5625
    9. '１' → logprob: -21.6875
    10. '2' → logprob: -21.875

Token 752: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022320270538330078
    2. '):
' → logprob: -3.89732027053833
    3. ':' → logprob: -6.39732027053833
    4. ',' → logprob: -10.022319793701172
    5. '-' → logprob: -10.147319793701172
    6. '):
' → logprob: -11.522319793701172
    7. ' ):' → logprob: -12.397319793701172
    8. ')' → logprob: -12.522319793701172
    9. ' :' → logprob: -12.647319793701172
    10. '}:' → logprob: -13.522319793701172

Token 753: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32846683263778687
    2. ' for' → logprob: -1.3284668922424316
    3. 'for' → logprob: -4.203466892242432
    4. ' j' → logprob: -9.328466415405273
    5. '```' → logprob: -10.828466415405273
    6. 'j' → logprob: -11.328466415405273
    7. '    
' → logprob: -11.578466415405273
    8. '	for' → logprob: -11.828466415405273
    9. ' ' → logprob: -11.953466415405273
    10. '  ' → logprob: -14.578466415405273

Token 754: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20581570267677307
    2. 'j' → logprob: -1.9558156728744507
    3. ' for' → logprob: -3.7058157920837402
    4. '   ' → logprob: -3.9558157920837402
    5. ' j' → logprob: -7.08081579208374
    6. ' ' → logprob: -13.705815315246582
    7. '```' → logprob: -13.705815315246582
    8. '    
' → logprob: -14.705815315246582
    9. '_j' → logprob: -15.205815315246582
    10. '	j' → logprob: -15.455815315246582

Token 755: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011764987371861935
    2. 'j' → logprob: -4.511765003204346
    3. ' for' → logprob: -7.261765003204346
    4. '   ' → logprob: -11.261764526367188
    5. ' j' → logprob: -13.011764526367188
    6. '	for' → logprob: -18.511764526367188
    7. '    
' → logprob: -18.511764526367188
    8. ' ' → logprob: -19.136764526367188
    9. '_j' → logprob: -20.011764526367188
    10. '```' → logprob: -20.011764526367188

Token 756: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22772449254989624
    2. ' for' → logprob: -1.602724552154541
    3. '   ' → logprob: -6.852724552154541
    4. 'j' → logprob: -7.102724552154541
    5. ' j' → logprob: -7.977724552154541
    6. '=' → logprob: -9.852724075317383
    7. ' =' → logprob: -10.977724075317383
    8. ' ' → logprob: -12.477724075317383
    9. ' in' → logprob: -12.977724075317383
    10. '	for' → logprob: -12.977724075317383

Token 757: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38621291518211365
    2. 'ye' → logprob: -1.636212944984436
    3. 'ie' → logprob: -2.1362128257751465
    4. 'yer' → logprob: -5.5112128257751465
    5. 'aye' → logprob: -6.1362128257751465
    6. 'uie' → logprob: -6.8862128257751465
    7. 'yez' → logprob: -9.636213302612305
    8. 'eye' → logprob: -10.261213302612305
    9. 'yage' → logprob: -10.386213302612305
    10. 'iye' → logprob: -10.386213302612305

Token 758: ' toutes' (ID: 17502)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4259524941444397
    2. ' j' → logprob: -1.175952434539795
    3. 'for' → logprob: -3.675952434539795
    4. ' for' → logprob: -5.050952434539795
    5. '   ' → logprob: -5.050952434539795
    6. '    ' → logprob: -9.425952911376953
    7. '	j' → logprob: -9.800952911376953
    8. '       ' → logprob: -11.175952911376953
    9. ':j' → logprob: -11.675952911376953
    10. '_j' → logprob: -11.800952911376953

Token 759: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00997953861951828
    2. ' j' → logprob: -4.634979724884033
    3. '   ' → logprob: -8.759979248046875
    4. 'possible' → logprob: -10.634979248046875
    5. ' ' → logprob: -11.134979248046875
    6. ' possible' → logprob: -11.759979248046875
    7. 'for' → logprob: -12.009979248046875
    8. '	j' → logprob: -12.634979248046875
    9. '(j' → logprob: -13.134979248046875
    10. '  ' → logprob: -13.884979248046875

Token 760: ' piles' (ID: 90498)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.370294846012257e-05
    2. ' j' → logprob: -10.250043869018555
    3. 'range' → logprob: -12.750043869018555
    4. '   ' → logprob: -13.000043869018555
    5. ' ' → logprob: -14.000043869018555
    6. '```' → logprob: -14.375043869018555
    7. '  ' → logprob: -15.250043869018555
    8. 'possible' → logprob: -15.250043869018555
    9. '	j' → logprob: -15.375043869018555
    10. 'ranges' → logprob: -15.500043869018555

Token 761: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7785512208938599
    2. 'for' → logprob: -1.7785512208938599
    3. ' for' → logprob: -2.0285511016845703
    4. 'j' → logprob: -2.1535511016845703
    5. ' j' → logprob: -2.5285511016845703
    6. '(j' → logprob: -3.5285511016845703
    7. 'from' → logprob: -5.02855110168457
    8. '[j' → logprob: -5.27855110168457
    9. ' possible' → logprob: -7.02855110168457
    10. ' from' → logprob: -7.27855110168457

Token 762: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5186030268669128
    2. 'for' → logprob: -1.0186030864715576
    3. ' j' → logprob: -4.2686028480529785
    4. '   ' → logprob: -4.3936028480529785
    5. '(j' → logprob: -4.5186028480529785
    6. ' in' → logprob: -5.3936028480529785
    7. 'j' → logprob: -7.0186028480529785
    8. 'in' → logprob: -8.393603324890137
    9. '	for' → logprob: -9.018603324890137
    10. ' (' → logprob: -9.643603324890137

Token 763: ' commencent' (ID: 184941)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.7118452787399292
    2. 'pe' → logprob: -1.0868452787399292
    3. 'comm' → logprob: -2.9618453979492188
    4. 'pour' → logprob: -3.4618453979492188
    5. 'for' → logprob: -4.086845397949219
    6. ' commencent' → logprob: -4.586845397949219
    7. '   ' → logprob: -4.711845397949219
    8. 'p' → logprob: -4.836845397949219
    9. 'v' → logprob: -4.836845397949219
    10. ' peuvent' → logprob: -5.336845397949219

Token 764: ' en' (ID: 469)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5316787958145142
    2. 'at' → logprob: -2.6566786766052246
    3. 'en' → logprob: -2.7816786766052246
    4. 'i' → logprob: -3.0316786766052246
    5. ' à' → logprob: -3.0316786766052246
    6. 'par' → logprob: -3.5316786766052246
    7. '(i' → logprob: -3.5316786766052246
    8. ' at' → logprob: -3.6566786766052246
    9. '=i' → logprob: -3.6566786766052246
    10. '=' → logprob: -3.6566786766052246

Token 765: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017066054278984666
    2. ' i' → logprob: -6.376706600189209
    3. '   ' → logprob: -12.876707077026367
    4. '[i' → logprob: -13.626707077026367
    5. ' ' → logprob: -15.626707077026367
    6. '```' → logprob: -15.751707077026367
    7. '	i' → logprob: -16.001707077026367
    8. 'range' → logprob: -16.126707077026367
    9. '
' → logprob: -16.501707077026367
    10. '`' → logprob: -17.001707077026367

Token 766: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07236324995756149
    2. 'for' → logprob: -3.3223631381988525
    3. '   ' → logprob: -3.5723631381988525
    4. ':' → logprob: -5.447363376617432
    5. ' j' → logprob: -7.322363376617432
    6. '	for' → logprob: -7.572363376617432
    7. ':
' → logprob: -10.447362899780273
    8. ':j' → logprob: -10.822362899780273
    9. ' ' → logprob: -10.947362899780273
    10. ',' → logprob: -10.947362899780273

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00617703702300787
    2. ' for' → logprob: -5.381176948547363
    3. '	for' → logprob: -7.006176948547363
    4. 'for' → logprob: -7.631176948547363
    5. '	j' → logprob: -9.631176948547363
    6. ' j' → logprob: -9.756176948547363
    7. '   ' → logprob: -10.506176948547363
    8. '    
' → logprob: -12.256176948547363
    9. 'j' → logprob: -13.006176948547363
    10. '    ' → logprob: -13.256176948547363

Token 768: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038233350962400436
    2. 'j' → logprob: -3.2882332801818848
    3. ' for' → logprob: -8.663233757019043
    4. '   ' → logprob: -10.913233757019043
    5. ' j' → logprob: -14.038233757019043
    6. '```' → logprob: -17.038232803344727
    7. '    
' → logprob: -17.538232803344727
    8. ' ' → logprob: -17.913232803344727
    9. '	for' → logprob: -18.163232803344727
    10. '
' → logprob: -18.913232803344727

Token 769: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004307884373702109
    2. ' j' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.750431060791016
    4. '	j' → logprob: -17.625431060791016
    5. '$j' → logprob: -19.250431060791016
    6. ' ' → logprob: -20.000431060791016
    7. '[j' → logprob: -21.000431060791016
    8. '_j' → logprob: -21.250431060791016
    9. '```' → logprob: -21.250431060791016
    10. 'end' → logprob: -21.375431060791016

Token 770: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04875621199607849
    2. 'in' → logprob: -3.0487561225891113
    3. ' i' → logprob: -9.29875659942627
    4. 'i' → logprob: -10.29875659942627
    5. 'range' → logprob: -10.79875659942627
    6. '=i' → logprob: -11.29875659942627
    7. ' range' → logprob: -13.04875659942627
    8. ')' → logprob: -13.17375659942627
    9. 'In' → logprob: -14.04875659942627
    10. '=' → logprob: -14.04875659942627

Token 771: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014229090884327888
    2. ' range' → logprob: -4.5142292976379395
    3. 'i' → logprob: -5.7642292976379395
    4. ' i' → logprob: -10.514228820800781
    5. '(i' → logprob: -11.889228820800781
    6. '(range' → logprob: -12.889228820800781
    7. '[i' → logprob: -14.014228820800781
    8. 'in' → logprob: -14.764228820800781
    9. '   ' → logprob: -14.889228820800781
    10. ' in' → logprob: -16.63922882080078

Token 772: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000912774819880724
    2. 'i' → logprob: -7.000912666320801
    3. ' i' → logprob: -13.8759126663208
    4. '[i' → logprob: -16.250913619995117
    5. ',i' → logprob: -17.000913619995117
    6. '(' → logprob: -17.500913619995117
    7. ' (' → logprob: -17.750913619995117
    8. '=i' → logprob: -17.750913619995117
    9. '{i' → logprob: -18.500913619995117
    10. ')i' → logprob: -18.750913619995117

Token 773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020146444439888
    2. ' ,' → logprob: -6.877014636993408
    3. ',i' → logprob: -7.002014636993408
    4. ',N' → logprob: -10.377015113830566
    5. ',j' → logprob: -10.877015113830566
    6. 'i' → logprob: -11.127015113830566
    7. 'j' → logprob: -13.002015113830566
    8. '(i' → logprob: -13.502015113830566
    9. ',
' → logprob: -14.627015113830566
    10. '[i' → logprob: -14.752015113830566

Token 774: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.935296834039036e-06
    2. ' N' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.125003814697266
    4. '	N' → logprob: -20.250003814697266
    5. ' ' → logprob: -20.875003814697266
    6. '
' → logprob: -21.500003814697266
    7. '<N' → logprob: -22.250003814697266
    8. '```' → logprob: -22.625003814697266
    9. ')' → logprob: -23.000003814697266
    10. ',N' → logprob: -23.375003814697266

Token 775: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012323861941695213
    2. '):' → logprob: -5.13732385635376
    3. ' +' → logprob: -5.26232385635376
    4. '):
' → logprob: -6.76232385635376
    5. ')' → logprob: -11.512324333190918
    6. '+i' → logprob: -11.512324333190918
    7. '   ' → logprob: -12.012324333190918
    8. ')+' → logprob: -12.512324333190918
    9. '+j' → logprob: -13.512324333190918
    10. '+
' → logprob: -13.762324333190918

Token 776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009675342589616776
    2. ' if' → logprob: -4.7596755027771
    3. 'if' → logprob: -6.8846755027771
    4. '   ' → logprob: -11.009675025939941
    5. '```' → logprob: -11.384675025939941
    6. '<|end|>' → logprob: -13.134675025939941
    7. '	if' → logprob: -13.509675025939941
    8. ',' → logprob: -13.634675025939941
    9. '           ' → logprob: -14.259675025939941
    10. '	   ' → logprob: -14.509675025939941

Token 777: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23960205912590027
    2. '       ' → logprob: -2.2396020889282227
    3. ' if' → logprob: -2.2396020889282227
    4. '   ' → logprob: -10.364602088928223
    5. '           ' → logprob: -11.114602088928223
    6. '	if' → logprob: -11.739602088928223
    7. 'If' → logprob: -13.864602088928223
    8. ' ' → logprob: -14.364602088928223
    9. '```' → logprob: -14.989602088928223
    10. '        
' → logprob: -15.364602088928223

Token 778: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.04858805239200592
    2. ' can' → logprob: -3.0485880374908447
    3. '	can' → logprob: -14.923587799072266
    4. '(can' → logprob: -15.173587799072266
    5. '   ' → logprob: -16.673587799072266
    6. '_can' → logprob: -17.798587799072266
    7. '.can' → logprob: -17.798587799072266
    8. ' not' → logprob: -18.298587799072266
    9. ' ' → logprob: -19.173587799072266
    10. 'not' → logprob: -19.798587799072266

Token 779: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -3.128163257315464e-07
    2. 'stack' → logprob: -15.375
    3. '_can' → logprob: -17.375
    4. '_STACK' → logprob: -17.625
    5. '_' → logprob: -18.0
    6. 'can' → logprob: -18.875
    7. '_st' → logprob: -19.625
    8. 'Stack' → logprob: -20.125
    9. ' stack' → logprob: -20.25
    10. '\' → logprob: -20.25

Token 780: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -16.875
    4. '(
' → logprob: -19.625
    5. ')' → logprob: -22.0
    6. ' ' → logprob: -22.75
    7. '(ii' → logprob: -22.875
    8. '(I' → logprob: -23.0
    9. '
' → logprob: -23.75
    10. '(j' → logprob: -23.75

Token 781: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002210681326687336
    2. ',j' → logprob: -6.12721061706543
    3. ' ,' → logprob: -10.62721061706543
    4. ',
' → logprob: -13.75221061706543
    5. 'j' → logprob: -15.87721061706543
    6. '，' → logprob: -17.50221061706543
    7. '   ' → logprob: -17.50221061706543
    8. '       ' → logprob: -19.12721061706543
    9. '```' → logprob: -19.25221061706543
    10. ')' → logprob: -19.87721061706543

Token 782: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.981667537620524e-06
    2. ' j' → logprob: -13.250001907348633
    3. '	j' → logprob: -16.625001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '[j' → logprob: -18.500001907348633
    6. '```' → logprob: -19.000001907348633
    7. ':j' → logprob: -19.250001907348633
    8. '
' → logprob: -19.750001907348633
    9. ',j' → logprob: -19.875001907348633
    10. '$j' → logprob: -20.000001907348633

Token 783: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06198729947209358
    2. '):
' → logprob: -2.8119874000549316
    3. ':' → logprob: -11.311986923217773
    4. '):
' → logprob: -12.561986923217773
    5. ')' → logprob: -12.811986923217773
    6. ' ):' → logprob: -14.686986923217773
    7. '):

' → logprob: -15.186986923217773
    8. '   ' → logprob: -15.311986923217773
    9. '       ' → logprob: -15.936986923217773
    10. ':
' → logprob: -17.311986923217773

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0439307764172554
    2. ' dp' → logprob: -4.168931007385254
    3. 'dp' → logprob: -4.293931007385254
    4. '       ' → logprob: -4.418931007385254
    5. ' ' → logprob: -7.293931007385254
    6. '	       ' → logprob: -7.668931007385254
    7. '```' → logprob: -8.168931007385254
    8. '   ' → logprob: -8.918931007385254
    9. '	dp' → logprob: -9.293931007385254
    10. '		' → logprob: -10.293931007385254

Token 785: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10027115046977997
    2. ' dp' → logprob: -2.350271224975586
    3. '               ' → logprob: -10.725271224975586
    4. '           ' → logprob: -10.975271224975586
    5. '	dp' → logprob: -11.100271224975586
    6. '   ' → logprob: -11.600271224975586
    7. ' ' → logprob: -14.975271224975586
    8. ' ' → logprob: -15.100271224975586
    9. '_dp' → logprob: -15.475271224975586
    10. '(dp' → logprob: -15.600271224975586

Token 786: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00011093381908722222
    2. ' dp' → logprob: -9.250110626220703
    3. '           ' → logprob: -11.375110626220703
    4. '   ' → logprob: -13.500110626220703
    5. '               ' → logprob: -13.625110626220703
    6. '	dp' → logprob: -14.500110626220703
    7. 'if' → logprob: -15.250110626220703
    8. '_dp' → logprob: -18.875110626220703
    9. '(dp' → logprob: -19.250110626220703
    10. '.dp' → logprob: -19.375110626220703

Token 787: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1610209345817566
    2. ' dp' → logprob: -1.9110209941864014
    3. '   ' → logprob: -8.16102123260498
    4. ' j' → logprob: -8.53602123260498
    5. 'j' → logprob: -8.78602123260498
    6. '(dp' → logprob: -9.53602123260498
    7. '	dp' → logprob: -10.03602123260498
    8. '           ' → logprob: -10.91102123260498
    9. ' ' → logprob: -11.28602123260498
    10. ' ' → logprob: -13.16102123260498

Token 788: ' peut' (ID: 9216)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.609631896018982
    2. '           ' → logprob: -2.1096320152282715
    3. ' peut' → logprob: -2.6096320152282715
    4. 's' → logprob: -2.7346320152282715
    5. ' a' → logprob: -2.8596320152282715
    6. ' can' → logprob: -3.2346320152282715
    7. ' continues' → logprob: -3.4846320152282715
    8. '+' → logprob: -3.4846320152282715
    9. ' j' → logprob: -3.6096320152282715
    10. ' ' → logprob: -3.7346320152282715

Token 789: ' emp' (ID: 4927)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1715131402015686
    2. ' dp' → logprob: -2.421513080596924
    3. '   ' → logprob: -3.171513080596924
    4. '           ' → logprob: -4.921513080596924
    5. 'former' → logprob: -5.046513080596924
    6. 'mettre' → logprob: -6.046513080596924
    7. 'emp' → logprob: -6.171513080596924
    8. ' emp' → logprob: -6.921513080596924
    9. 'faire' → logprob: -6.921513080596924
    10. '	dp' → logprob: -7.046513080596924

Token 790: 'iler' (ID: 6067)
  Prédit: 'iler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iler' → logprob: -0.0014196380507200956
    2. 'ile' → logprob: -6.626419544219971
    3. '   ' → logprob: -10.376420021057129
    4. 'i' → logprob: -11.626420021057129
    5. 'il' → logprob: -12.376420021057129
    6. '_' → logprob: -12.376420021057129
    7. '#' → logprob: -12.501420021057129
    8. '|' → logprob: -12.626420021057129
    9. 'ILER' → logprob: -12.751420021057129
    10. '\' → logprob: -13.001420021057129

Token 791: ' force' (ID: 9578)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10155991464853287
    2. ' dp' → logprob: -2.47655987739563
    3. '           ' → logprob: -5.351560115814209
    4. '               ' → logprob: -5.476560115814209
    5. '   ' → logprob: -5.976560115814209
    6. '	dp' → logprob: -7.476560115814209
    7. '(dp' → logprob: -8.60155963897705
    8. ',' → logprob: -8.97655963897705
    9. '.dp' → logprob: -10.47655963897705
    10. '                   ' → logprob: -10.60155963897705

Token 792: 'urs' (ID: 1628)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.350975900888443
    2. '[i' → logprob: -1.8509758710861206
    3. 'ers' → logprob: -2.72597599029541
    4. 'urs' → logprob: -3.22597599029541
    5. '_stack' → logprob: -4.97597599029541
    6. '   ' → logprob: -5.10097599029541
    7. 'eurs' → logprob: -5.10097599029541
    8. 's' → logprob: -5.72597599029541
    9. 'er' → logprob: -5.72597599029541
    10. ' i' → logprob: -6.35097599029541

Token 793: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6516236066818237
    2. '[i' → logprob: -1.6516236066818237
    3. '(j' → logprob: -2.2766237258911133
    4. '[j' → logprob: -2.2766237258911133
    5. 'i' → logprob: -3.2766237258911133
    6. 'j' → logprob: -3.5266237258911133
    7. '   ' → logprob: -4.901623725891113
    8. ',' → logprob: -6.401623725891113
    9. ')' → logprob: -6.526623725891113
    10. 'from' → logprob: -6.526623725891113

Token 794: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004307884373702109
    2. ' i' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.000431060791016
    4. '	i' → logprob: -18.250431060791016
    5. '[i' → logprob: -18.375431060791016
    6. ' ' → logprob: -18.500431060791016
    7. '```' → logprob: -18.875431060791016
    8. '
' → logprob: -19.000431060791016
    9. ' ' → logprob: -19.375431060791016
    10. 'j' → logprob: -19.500431060791016

Token 795: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.019179819151759148
    2. 'à' → logprob: -4.519179821014404
    3. ' jusqu' → logprob: -5.644179821014404
    4. ' ' → logprob: -6.644179821014404
    5. '   ' → logprob: -6.894179821014404
    6. ' au' → logprob: -7.144179821014404
    7. ',' → logprob: -7.394179821014404
    8. ' jusque' → logprob: -8.644179344177246
    9. 'jus' → logprob: -9.144179344177246
    10. ' to' → logprob: -9.269179344177246

Token 796: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010349531657993793
    2. ' j' → logprob: -6.876034736633301
    3. ' ' → logprob: -14.2510347366333
    4. '   ' → logprob: -14.3760347366333
    5. '	j' → logprob: -14.3760347366333
    6. '
' → logprob: -16.251035690307617
    7. '[j' → logprob: -16.501035690307617
    8. '```' → logprob: -17.001035690307617
    9. '    ' → logprob: -17.126035690307617
    10. '       ' → logprob: -17.251035690307617

Token 797: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5603948831558228
    2. ',' → logprob: -1.4353948831558228
    3. '               ' → logprob: -1.6853948831558228
    4. ':' → logprob: -5.810394763946533
    5. ' ,' → logprob: -7.685394763946533
    6. ':
' → logprob: -7.685394763946533
    7. ' =' → logprob: -8.060395240783691
    8. ' dp' → logprob: -8.310395240783691
    9. ' and' → logprob: -8.560395240783691
    10. 'dp' → logprob: -8.935395240783691

Token 798: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.003936629742383957
    2. 'un' → logprob: -6.378936767578125
    3. 'se' → logprob: -6.628936767578125
    4. '```' → logprob: -8.003936767578125
    5. ' une' → logprob: -8.128936767578125
    6. '1' → logprob: -9.253936767578125
    7. 'one' → logprob: -9.628936767578125
    8. 'pile' → logprob: -10.628936767578125
    9. '``' → logprob: -10.878936767578125
    10. ''une' → logprob: -11.003936767578125

Token 799: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.06296170502901077
    2. ' seule' → logprob: -3.1879618167877197
    3. ' pile' → logprob: -4.437961578369141
    4. 'se' → logprob: -5.312961578369141
    5. 'p' → logprob: -6.437961578369141
    6. ' ' → logprob: -7.312961578369141
    7. ' ' → logprob: -8.56296157836914
    8. '   ' → logprob: -8.81296157836914
    9. '```' → logprob: -9.06296157836914
    10. ' seul' → logprob: -9.31296157836914

Token 800: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7776778340339661
    2. ',' → logprob: -1.1526777744293213
    3. '           ' → logprob: -2.0276777744293213
    4. '               ' → logprob: -2.6526777744293213
    5. ':
' → logprob: -4.1526780128479
    6. '   ' → logprob: -5.4026780128479
    7. ' dp' → logprob: -7.7776780128479
    8. ':
' → logprob: -7.9026780128479
    9. 'dp' → logprob: -8.152677536010742
    10. ' :' → logprob: -8.152677536010742

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7970391511917114
    2. ' dp' → logprob: -1.2970391511917114
    3. '               ' → logprob: -1.9220391511917114
    4. 'dp' → logprob: -2.047039031982422
    5. ' ' → logprob: -8.172039031982422
    6. '	dp' → logprob: -8.672039031982422
    7. '		' → logprob: -10.797039031982422
    8. '	       ' → logprob: -11.047039031982422
    9. '                   ' → logprob: -11.172039031982422
    10. '(dp' → logprob: -11.297039031982422

Token 802: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1463020145893097
    2. ' dp' → logprob: -2.0213019847869873
    3. '           ' → logprob: -5.896302223205566
    4. '               ' → logprob: -8.021302223205566
    5. '   ' → logprob: -8.146302223205566
    6. '	dp' → logprob: -8.396302223205566
    7. ' ' → logprob: -11.771302223205566
    8. ' ' → logprob: -12.146302223205566
    9. '(dp' → logprob: -12.771302223205566
    10. '.dp' → logprob: -13.021302223205566

Token 803: ' alors' (ID: 17971)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006778373382985592
    2. ' dp' → logprob: -5.006778240203857
    3. '           ' → logprob: -10.131778717041016
    4. '	dp' → logprob: -11.631778717041016
    5. '               ' → logprob: -11.881778717041016
    6. '   ' → logprob: -11.881778717041016
    7. ' ' → logprob: -15.381778717041016
    8. ' ' → logprob: -16.256778717041016
    9. 'if' → logprob: -16.756778717041016
    10. '.dp' → logprob: -16.881778717041016

Token 804: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03408936783671379
    2. ' dp' → logprob: -3.4090893268585205
    3. '           ' → logprob: -8.659089088439941
    4. '               ' → logprob: -8.909089088439941
    5. '	dp' → logprob: -9.534089088439941
    6. '   ' → logprob: -9.784089088439941
    7. ' ' → logprob: -13.284089088439941
    8. ' ' → logprob: -13.909089088439941
    9. '(dp' → logprob: -13.909089088439941
    10. '_dp' → logprob: -14.159089088439941

Token 805: ' ajoute' (ID: 91611)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010453128488734365
    2. ' dp' → logprob: -6.876045227050781
    3. '	dp' → logprob: -12.251045227050781
    4. '   ' → logprob: -12.501045227050781
    5. 'pe' → logprob: -13.876045227050781
    6. '           ' → logprob: -14.001045227050781
    7. ' peut' → logprob: -14.501045227050781
    8. '       ' → logprob: -15.001045227050781
    9. '(dp' → logprob: -15.001045227050781
    10. '.dp' → logprob: -15.251045227050781

Token 806: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10109338164329529
    2. ' ' → logprob: -3.226093292236328
    3. ' dp' → logprob: -3.226093292236328
    4. 'dp' → logprob: -4.226093292236328
    5. '   ' → logprob: -7.226093292236328
    6. ' +' → logprob: -7.351093292236328
    7. '           ' → logprob: -8.101093292236328
    8. '+' → logprob: -9.101093292236328
    9. '(dp' → logprob: -9.476093292236328
    10. '```' → logprob: -10.101093292236328

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3924330174922943
    2. 'dp' → logprob: -1.1424330472946167
    3. ' dp' → logprob: -5.517433166503906
    4. ' ' → logprob: -6.892433166503906
    5. '   ' → logprob: -8.267433166503906
    6. '(dp' → logprob: -9.142433166503906
    7. '+' → logprob: -9.767433166503906
    8. ' +' → logprob: -10.392433166503906
    9. '	dp' → logprob: -11.517433166503906
    10. '
' → logprob: -11.642433166503906

Token 808: ' pile' (ID: 39732)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519764304161072
    2. '+' → logprob: -1.501976490020752
    3. '           ' → logprob: -10.126976013183594
    4. '               ' → logprob: -12.876976013183594
    5. ' plus' → logprob: -13.001976013183594
    6. ' ' → logprob: -14.626976013183594
    7. '            ' → logprob: -14.876976013183594
    8. '   ' → logprob: -15.126976013183594
    9. ' ' → logprob: -15.251976013183594
    10. '                   ' → logprob: -15.626976013183594

Token 809: ' pour' (ID: 1930)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24540728330612183
    2. '           ' → logprob: -1.9954073429107666
    3. '+' → logprob: -3.4954073429107666
    4. ' dp' → logprob: -4.2454071044921875
    5. ',' → logprob: -4.3704071044921875
    6. ' à' → logprob: -4.6204071044921875
    7. '               ' → logprob: -5.2454071044921875
    8. 'dp' → logprob: -6.2454071044921875
    9. ' and' → logprob: -6.6204071044921875
    10. ' plus' → logprob: -6.6204071044921875

Token 810: ' ce' (ID: 2357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11588580906391144
    2. ' dp' → logprob: -2.7408857345581055
    3. 'le' → logprob: -3.8658857345581055
    4. 'la' → logprob: -4.9908857345581055
    5. 'j' → logprob: -5.1158857345581055
    6. ' j' → logprob: -5.7408857345581055
    7. ' le' → logprob: -5.7408857345581055
    8. ' la' → logprob: -6.2408857345581055
    9. ' couvrir' → logprob: -6.6158857345581055
    10. '   ' → logprob: -7.9908857345581055

Token 811: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.05477609485387802
    2. ' segment' → logprob: -3.054776191711426
    3. 'bloc' → logprob: -6.304776191711426
    4. 'interval' → logprob: -6.429776191711426
    5. ' bloc' → logprob: -7.679776191711426
    6. 'range' → logprob: -7.804776191711426
    7. 'segments' → logprob: -8.304776191711426
    8. 'seg' → logprob: -8.679776191711426
    9. ' morceau' → logprob: -8.679776191711426
    10. '```' → logprob: -8.929776191711426

Token 812: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01909351535141468
    2. '+' → logprob: -4.0190935134887695
    3. '   ' → logprob: -8.39409351348877
    4. '           ' → logprob: -8.64409351348877
    5. ' plus' → logprob: -8.76909351348877
    6. ' and' → logprob: -8.89409351348877
    7. ',' → logprob: -8.89409351348877
    8. '               ' → logprob: -10.89409351348877
    9. ' ' → logprob: -11.01909351348877
    10. '       ' → logprob: -11.26909351348877

Token 813: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.38687223196029663
    2. 'dp' → logprob: -1.1368722915649414
    3. '	dp' → logprob: -14.261872291564941
    4. ' ' → logprob: -14.886872291564941
    5. '(dp' → logprob: -15.761872291564941
    6. '_dp' → logprob: -17.261871337890625
    7. ' ' → logprob: -18.011871337890625
    8. '
' → logprob: -18.761871337890625
    9. '.dp' → logprob: -18.886871337890625
    10. '   ' → logprob: -19.636871337890625

Token 814: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.750000953674316
    3. '```' → logprob: -14.875000953674316
    4. 'j' → logprob: -15.000000953674316
    5. '[
' → logprob: -17.250001907348633
    6. '`' → logprob: -17.625001907348633
    7. '[js' → logprob: -17.875001907348633
    8. ' [' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '\[' → logprob: -18.250001907348633

Token 815: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004886920796707273
    2. ' +' → logprob: -7.625488758087158
    3. '+j' → logprob: -15.25048828125
    4. '[' → logprob: -15.87548828125
    5. ']' → logprob: -16.50048828125
    6. '+
' → logprob: -16.87548828125
    7. ']+' → logprob: -16.87548828125
    8. '[j' → logprob: -17.12548828125
    9. '＋' → logprob: -17.87548828125
    10. '```' → logprob: -17.87548828125

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.125001907348633
    3. '```' → logprob: -14.500001907348633
    4. '
' → logprob: -15.250001907348633
    5. '+' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ']' → logprob: -17.625001907348633
    8. '`' → logprob: -17.750001907348633
    9. '

' → logprob: -19.375001907348633
    10. '``' → logprob: -19.687501907348633

Token 817: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31614261865615845
    2. '])' → logprob: -1.3161425590515137
    3. ')' → logprob: -6.066142559051514
    4. '[j' → logprob: -7.941142559051514
    5. '[i' → logprob: -9.941143035888672
    6. '])
' → logprob: -10.191143035888672
    7. '   ' → logprob: -10.441143035888672
    8. ' ]' → logprob: -10.941143035888672
    9. '[' → logprob: -11.066143035888672
    10. ' ])' → logprob: -11.566143035888672

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020139472326263785
    2. '               ' → logprob: -9.875201225280762
    3. 'dp' → logprob: -10.125201225280762
    4. ' =' → logprob: -10.500201225280762
    5. ',' → logprob: -10.750201225280762
    6. '		' → logprob: -11.000201225280762
    7. '       ' → logprob: -11.250201225280762
    8. ' dp' → logprob: -11.500201225280762
    9. '   ' → logprob: -12.125201225280762
    10. '	       ' → logprob: -12.375201225280762

Token 819: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0012097570579499006
    2. ' dp' → logprob: -6.751209735870361
    3. '           ' → logprob: -10.62621021270752
    4. '               ' → logprob: -11.50121021270752
    5. '	dp' → logprob: -13.00121021270752
    6. '   ' → logprob: -13.25121021270752
    7. 'if' → logprob: -14.00121021270752
    8. '(dp' → logprob: -16.251209259033203
    9. '_dp' → logprob: -16.751209259033203
    10. ' ' → logprob: -16.751209259033203

Token 820: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[j' → logprob: -13.37500286102295
    3. '[' → logprob: -13.87500286102295
    4. '\[' → logprob: -16.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. '[I' → logprob: -17.500001907348633
    7. 'i' → logprob: -18.375001907348633
    8. ' [' → logprob: -19.125001907348633
    9. '[
' → logprob: -19.500001907348633
    10. '[u' → logprob: -20.625001907348633

Token 821: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26263460516929626
    2. '=' → logprob: -1.7626346349716187
    3. ' =' → logprob: -3.262634515762329
    4. ']=' → logprob: -3.887634515762329
    5. ' ]' → logprob: -8.13763427734375
    6. '[' → logprob: -8.51263427734375
    7. '[i' → logprob: -9.88763427734375
    8. '[j' → logprob: -10.63763427734375
    9. ')' → logprob: -10.76263427734375
    10. ')=' → logprob: -12.38763427734375

Token 822: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.674858301877975e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=min' → logprob: -14.500096321105957
    4. '=
' → logprob: -18.875097274780273
    5. '＝' → logprob: -18.875097274780273
    6. '.=' → logprob: -19.875097274780273
    7. '=max' → logprob: -20.375097274780273
    8. '=

' → logprob: -20.500097274780273
    9. '=}' → logprob: -20.750097274780273
    10. '=Math' → logprob: -21.000097274780273

Token 823: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.941850526549388e-06
    2. ' min' → logprob: -11.750007629394531
    3. '	min' → logprob: -20.12500762939453
    4. '   ' → logprob: -21.37500762939453
    5. 'max' → logprob: -22.12500762939453
    6. '=min' → logprob: -23.75000762939453
    7. '(min' → logprob: -24.50000762939453
    8. '.min' → logprob: -24.50000762939453
    9. '```' → logprob: -24.75000762939453
    10. '[min' → logprob: -24.87500762939453

Token 824: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. '(
' → logprob: -16.625158309936523
    4. 'dp' → logprob: -17.625158309936523
    5. '(dt' → logprob: -18.875158309936523
    6. ' (' → logprob: -19.500158309936523
    7. '	dp' → logprob: -19.750158309936523
    8. '(d' → logprob: -20.250158309936523
    9. ' dp' → logprob: -20.375158309936523
    10. '(df' → logprob: -20.500158309936523

Token 825: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.815280696377158e-05
    2. '[' → logprob: -9.500078201293945
    3. '(i' → logprob: -13.750078201293945
    4. ' [' → logprob: -14.125078201293945
    5. '[j' → logprob: -14.125078201293945
    6. '[
' → logprob: -15.375078201293945
    7. '(dp' → logprob: -16.000078201293945
    8. 'dp' → logprob: -16.125078201293945
    9. '```' → logprob: -16.875078201293945
    10. '   ' → logprob: -17.125078201293945

Token 826: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.09252380579710007
    2. '[i' → logprob: -2.4675238132476807
    3. ',' → logprob: -6.342523574829102
    4. '+' → logprob: -6.842523574829102
    5. ']+' → logprob: -7.967523574829102
    6. ']' → logprob: -8.092523574829102
    7. '[j' → logprob: -11.092523574829102
    8. ' +' → logprob: -11.217523574829102
    9. ',i' → logprob: -11.342523574829102
    10. ' ],' → logprob: -11.592523574829102

Token 827: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3200889825820923
    2. '1' → logprob: -1.3200889825820923
    3. ' dp' → logprob: -5.070088863372803
    4. ' ' → logprob: -7.695088863372803
    5. '   ' → logprob: -9.820089340209961
    6. '	dp' → logprob: -12.070089340209961
    7. '(dp' → logprob: -13.070089340209961
    8. '           ' → logprob: -14.070089340209961
    9. '  ' → logprob: -14.195089340209961
    10. ' ' → logprob: -14.195089340209961

Token 828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01817581057548523
    2. 'dp' → logprob: -4.0181756019592285
    3. ' ' → logprob: -10.768176078796387
    4. ' dp' → logprob: -12.643176078796387
    5. '   ' → logprob: -13.643176078796387
    6. '(dp' → logprob: -15.643176078796387
    7. '	dp' → logprob: -16.39317512512207
    8. '  ' → logprob: -16.89317512512207
    9. ' ' → logprob: -18.01817512512207
    10. '_dp' → logprob: -18.14317512512207

Token 829: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687145709991455
    2. '+' → logprob: -1.1368714570999146
    3. '   ' → logprob: -15.261871337890625
    4. ' ' → logprob: -16.261871337890625
    5. ' ' → logprob: -16.761871337890625
    6. 'dp' → logprob: -18.011871337890625
    7. '  ' → logprob: -18.011871337890625
    8. '+
' → logprob: -18.761871337890625
    9. '    ' → logprob: -19.136871337890625
    10. '       ' → logprob: -19.261871337890625

Token 830: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001234428636962548
    2. ' dp' → logprob: -9.000123023986816
    3. '	dp' → logprob: -21.375123977661133
    4. '(dp' → logprob: -22.750123977661133
    5. '_dp' → logprob: -23.375123977661133
    6. '.dp' → logprob: -25.750123977661133
    7. 'DP' → logprob: -26.250123977661133
    8. 'dj' → logprob: -26.500123977661133
    9. 'df' → logprob: -26.875123977661133
    10. 'd' → logprob: -27.000123977661133

Token 831: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. '(j' → logprob: -15.000000953674316
    3. 'j' → logprob: -16.0
    4. '[
' → logprob: -18.375
    5. '[(' → logprob: -19.375
    6. '[' → logprob: -19.5
    7. ' [' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. ')[' → logprob: -21.625
    10. '	j' → logprob: -21.625

Token 832: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005448113661259413
    2. '[' → logprob: -8.250544548034668
    3. ' +' → logprob: -8.875544548034668
    4. '[j' → logprob: -9.000544548034668
    5. ']+' → logprob: -12.250544548034668
    6. '[i' → logprob: -12.375544548034668
    7. ']' → logprob: -12.625544548034668
    8. '1' → logprob: -13.000544548034668
    9. '[
' → logprob: -13.500544548034668
    10. '+j' → logprob: -13.500544548034668

Token 833: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -18.0
    4. '2' → logprob: -19.5
    5. '+' → logprob: -19.75
    6. '   ' → logprob: -20.625
    7. '
' → logprob: -21.375
    8. ']' → logprob: -21.5
    9. '`' → logprob: -21.5
    10. '``' → logprob: -22.0625

Token 834: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0619908832013607
    2. ')' → logprob: -2.811990976333618
    3. '))' → logprob: -11.436990737915039
    4. '])
' → logprob: -12.561990737915039
    5. ')
' → logprob: -13.061990737915039
    6. ']' → logprob: -13.061990737915039
    7. ' ])' → logprob: -13.561990737915039
    8. ' )' → logprob: -13.936990737915039
    9. ')]' → logprob: -13.936990737915039
    10. ')])' → logprob: -14.061990737915039

Token 835: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. '
' → logprob: -13.750001907348633
    3. ' print' → logprob: -14.250001907348633
    4. '```' → logprob: -16.875001907348633
    5. '#print' → logprob: -18.750001907348633
    6. '  
' → logprob: -19.875001907348633
    7. ')' → logprob: -20.125001907348633
    8. '#' → logprob: -20.250001907348633
    9. '(print' → logprob: -20.250001907348633
    10. '-print' → logprob: -21.375001907348633

Token 836: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05725526809692383
    2. ' else' → logprob: -2.932255268096924
    3. '<|end|>' → logprob: -6.557255268096924
    4. '   ' → logprob: -7.557255268096924
    5. '	else' → logprob: -8.432254791259766
    6. 'print' → logprob: -9.932254791259766
    7. '<|end|>' → logprob: -10.307254791259766
    8. '```' → logprob: -10.432254791259766
    9. 'elif' → logprob: -10.682254791259766
    10. '    ' → logprob: -11.057254791259766

Token 837: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010749688372015953
    2. 'break' → logprob: -7.00107479095459
    3. ' break' → logprob: -9.25107479095459
    4. '		' → logprob: -11.00107479095459
    5. '	break' → logprob: -11.00107479095459
    6. '	       ' → logprob: -11.25107479095459
    7. '               ' → logprob: -11.62607479095459
    8. '```' → logprob: -12.75107479095459
    9. '       ' → logprob: -13.37607479095459
    10. '          ' → logprob: -13.62607479095459

Token 838: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3139115571975708
    2. 'break' → logprob: -1.3139115571975708
    3. ' break' → logprob: -7.938911437988281
    4. '	break' → logprob: -8.813911437988281
    5. '   ' → logprob: -9.688911437988281
    6. '       ' → logprob: -10.438911437988281
    7. '```' → logprob: -11.188911437988281
    8. '		' → logprob: -11.688911437988281
    9. '               ' → logprob: -11.813911437988281
    10. '#' → logprob: -11.813911437988281

Token 839: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.011143906973302364
    2. '           ' → logprob: -4.511143684387207
    3. '   ' → logprob: -10.386143684387207
    4. ' break' → logprob: -10.511143684387207
    5. '       ' → logprob: -10.636143684387207
    6. '#' (adapté à ' #') → logprob: -11.511143684387207
    7. '	break' → logprob: -12.511143684387207
    8. '               ' → logprob: -15.636143684387207
    9. 'pass' → logprob: -17.261144638061523
    10. 'breaking' → logprob: -17.261144638061523

Token 840: ' Impossible' (ID: 136939)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.011060323566198349
    2. '#' → logprob: -4.5110602378845215
    3. ' break' → logprob: -12.26106071472168
    4. '   ' → logprob: -12.63606071472168
    5. '           ' → logprob: -13.01106071472168
    6. 'pass' → logprob: -13.38606071472168
    7. '       ' → logprob: -15.26106071472168
    8. 'continue' → logprob: -15.51106071472168
    9. ' #' → logprob: -16.51106071472168
    10. '	break' → logprob: -16.51106071472168

Token 841: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013632125919684768
    2. '       ' → logprob: -8.251362800598145
    3. '	       ' → logprob: -8.376362800598145
    4. '		' → logprob: -8.501362800598145
    5. '   ' → logprob: -8.751362800598145
    6. 'break' → logprob: -8.876362800598145
    7. '	break' → logprob: -9.251362800598145
    8. ' break' → logprob: -9.376362800598145
    9. '               ' → logprob: -9.501362800598145
    10. '          ' → logprob: -10.626362800598145

Token 842: ''emp' (ID: 140539)
  Prédit: ''emp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''emp' → logprob: -0.07322312891483307
    2. 'emp' → logprob: -3.448223114013672
    3. ''aller' → logprob: -4.573223114013672
    4. 'former' → logprob: -4.948223114013672
    5. 'form' → logprob: -5.073223114013672
    6. '’emp' → logprob: -5.448223114013672
    7. 'e' → logprob: -5.948223114013672
    8. 'contin' → logprob: -6.073223114013672
    9. 'orm' → logprob: -6.698223114013672
    10. ' emp' → logprob: -7.323223114013672

Token 843: 'iler' (ID: 6067)
  Prédit: 'iler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iler' → logprob: -0.005612100008875132
    2. 'ile' → logprob: -5.255611896514893
    3. 'il' → logprob: -8.75561237335205
    4. 'p' → logprob: -9.00561237335205
    5. 'ilan' → logprob: -11.63061237335205
    6. 'ilar' → logprob: -11.63061237335205
    7. 'iller' → logprob: -11.75561237335205
    8. 'emp' → logprob: -12.25561237335205
    9. '#' → logprob: -12.38061237335205
    10. 'ilier' → logprob: -12.38061237335205

Token 844: ' plus' (ID: 2932)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5405912399291992
    2. 'break' → logprob: -1.0405912399291992
    3. ' break' → logprob: -2.790591239929199
    4. '       ' → logprob: -6.790591239929199
    5. '	break' → logprob: -6.915591239929199
    6. '   ' → logprob: -7.415591239929199
    7. '_break' → logprob: -8.9155912399292
    8. '               ' → logprob: -9.9155912399292
    9. '.break' → logprob: -11.4155912399292
    10. '#' → logprob: -11.4155912399292

Token 845: ' haut' (ID: 28223)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17909355461597443
    2. '       ' → logprob: -2.054093599319458
    3. 'à' → logprob: -3.804093599319458
    4. '          ' → logprob: -6.054093360900879
    5. 'auc' → logprob: -6.054093360900879
    6. '   ' → logprob: -6.179093360900879
    7. 'au' → logprob: -6.179093360900879
    8. '               ' → logprob: -7.554093360900879
    9. 'loin' → logprob: -7.554093360900879
    10. ',' → logprob: -7.554093360900879

Token 846: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046045915223658085
    2. 'break' → logprob: -8.000460624694824
    3. ' break' → logprob: -9.625460624694824
    4. '		' → logprob: -10.375460624694824
    5. '	break' → logprob: -11.500460624694824
    6. '	       ' → logprob: -12.125460624694824
    7. '       ' → logprob: -12.250460624694824
    8. '   ' → logprob: -12.500460624694824
    9. '          ' → logprob: -13.500460624694824
    10. '               ' → logprob: -13.750460624694824

Token 847: ' arr' (ID: 1724)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10931843519210815
    2. 'break' → logprob: -2.359318494796753
    3. ' break' → logprob: -4.734318256378174
    4. '	break' → logprob: -8.734318733215332
    5. '		' → logprob: -9.734318733215332
    6. '               ' → logprob: -10.859318733215332
    7. '   ' → logprob: -11.109318733215332
    8. '	       ' → logprob: -11.109318733215332
    9. '_break' → logprob: -12.359318733215332
    10. '       ' → logprob: -12.734318733215332

Token 848: 'ê' (ID: 1172)
  Prédit: 'êter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êter' → logprob: -0.16222132742404938
    2. 'êt' → logprob: -1.9122213125228882
    3. 'ê' → logprob: -6.912221431732178
    4. 'ête' → logprob: -7.287221431732178
    5. 'êts' → logprob: -9.03722095489502
    6. 'et' → logprob: -9.28722095489502
    7. 'iver' → logprob: -10.41222095489502
    8. 'éter' → logprob: -10.66222095489502
    9. '               ' → logprob: -11.16222095489502
    10. 'êtes' → logprob: -11.91222095489502

Token 849: 'tons' (ID: 45023)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.09559590369462967
    2. 't' → logprob: -2.5955958366394043
    3. 'ton' → logprob: -4.595595836639404
    4. 'tons' → logprob: -5.470595836639404
    5. 'te' → logprob: -6.720595836639404
    6. 'tez' → logprob: -7.970595836639404
    7. 'tter' → logprob: -8.345596313476562
    8. 'êter' → logprob: -8.970596313476562
    9. 'té' → logprob: -9.845596313476562
    10. '   ' → logprob: -9.970596313476562

Token 850: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014308293350040913
    2. 'break' → logprob: -4.264308452606201
    3. '       ' → logprob: -9.639307975769043
    4. '               ' → logprob: -10.639307975769043
    5. '		' → logprob: -11.139307975769043
    6. ' break' → logprob: -11.264307975769043
    7. 'le' → logprob: -12.139307975769043
    8. '_break' → logprob: -12.264307975769043
    9. '	break' → logprob: -12.514307975769043
    10. 'br' → logprob: -12.889307975769043

Token 851: ''ét' (ID: 23771)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02509753592312336
    2. 'break' → logprob: -4.525097370147705
    3. 'reak' → logprob: -5.275097370147705
    4. 're' → logprob: -6.275097370147705
    5. 'breaker' → logprob: -6.275097370147705
    6. 'eux' → logprob: -6.525097370147705
    7. 'br' → logprob: -7.025097370147705
    8. 'u' → logprob: -7.525097370147705
    9. 'er' → logprob: -7.650097370147705
    10. 'urer' → logprob: -8.150097846984863

Token 852: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.25564393401145935
    2. 're' → logprob: -1.5056439638137817
    3. 'tre' → logprob: -6.755643844604492
    4. 'êter' → logprob: -7.005643844604492
    5. 'etre' → logprob: -7.755643844604492
    6. 'être' → logprob: -8.630643844604492
    7. 'er' → logprob: -8.880643844604492
    8. '#' → logprob: -9.005643844604492
    9. 'êt' → logprob: -9.255643844604492
    10. 'te' → logprob: -9.380643844604492

Token 853: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0064374222420156
    2. 'break' → logprob: -5.256437301635742
    3. '       ' → logprob: -8.006437301635742
    4. 'j' → logprob: -8.131437301635742
    5. '               ' → logprob: -8.381437301635742
    6. 'le' → logprob: -9.131437301635742
    7. ' break' → logprob: -9.506437301635742
    8. ' le' → logprob: -10.381437301635742
    9. '		' → logprob: -10.756437301635742
    10. '   ' → logprob: -10.756437301635742

Token 854: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.007861185818910599
    2. 'j' → logprob: -5.257861137390137
    3. 'for' → logprob: -6.882861137390137
    4. ' pile' → logprob: -7.257861137390137
    5. 'range' → logprob: -7.382861137390137
    6. 'bou' → logprob: -9.257861137390137
    7. '```' → logprob: -9.882861137390137
    8. 'p' → logprob: -10.382861137390137
    9. 'stack' → logprob: -10.632861137390137
    10. ' for' → logprob: -11.632861137390137

Token 855: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.780830830801278e-05
    2. '		' → logprob: -10.12508773803711
    3. 'break' → logprob: -10.75008773803711
    4. ' break' → logprob: -11.00008773803711
    5. '	       ' → logprob: -12.87508773803711
    6. '	break' → logprob: -13.00008773803711
    7. '               ' → logprob: -13.37508773803711
    8. '       ' → logprob: -13.37508773803711
    9. '   ' → logprob: -14.00008773803711
    10. '          ' → logprob: -15.12508773803711

Token 856: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3663626305060461e-05
    2. 'break' → logprob: -12.25001335144043
    3. '		' → logprob: -12.37501335144043
    4. '       ' → logprob: -13.25001335144043
    5. ' break' → logprob: -13.25001335144043
    6. '               ' → logprob: -14.50001335144043
    7. '   ' → logprob: -15.87501335144043
    8. '	       ' → logprob: -16.12501335144043
    9. '          ' → logprob: -16.50001335144043
    10. '	break' → logprob: -16.62501335144043

Token 857: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.011174321174621582
    2. '           ' → logprob: -4.511174201965332
    3. ' break' → logprob: -9.261174201965332
    4. '	break' → logprob: -10.511174201965332
    5. '		' → logprob: -13.136174201965332
    6. '       ' → logprob: -13.511174201965332
    7. '_break' → logprob: -15.011174201965332
    8. '	       ' → logprob: -15.761174201965332
    9. '   ' → logprob: -16.01117515563965
    10. '               ' → logprob: -16.01117515563965

Token 858: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -13.25000286102295
    3. '
' → logprob: -14.25000286102295
    4. ' print' → logprob: -15.25000286102295
    5. '#print' → logprob: -17.625001907348633
    6. '#' → logprob: -17.625001907348633
    7. '  
' → logprob: -17.875001907348633
    8. '    
' → logprob: -18.750001907348633
    9. '``' → logprob: -19.000001907348633
    10. ')' → logprob: -19.000001907348633

Token 859: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. ' print' → logprob: -17.75
    4. '
' → logprob: -17.75
    5. '#print' → logprob: -21.625
    6. '#' → logprob: -22.875
    7. '``' → logprob: -23.625
    8. '  
' → logprob: -23.75
    9. 'for' → logprob: -24.375
    10. 'sys' → logprob: -24.75

Token 860: ' dp' (ID: 21546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.5
    3. '```' → logprob: -22.875
    4. '#print' → logprob: -24.625
    5. '#' → logprob: -24.875
    6. '
' → logprob: -25.75
    7. 'sys' → logprob: -26.125
    8. 'import' → logprob: -26.375
    9. 'result' → logprob: -26.375
    10. 'Print' → logprob: -28.125

Token 861: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.432518421206623e-05
    2. '[N' → logprob: -10.1250638961792
    3. 'print' → logprob: -10.8750638961792
    4. '```' → logprob: -13.1250638961792
    5. '[-' → logprob: -14.3750638961792
    6. ')' → logprob: -15.0000638961792
    7. '#' → logprob: -15.1250638961792
    8. '[i' → logprob: -15.1250638961792
    9. ' [' → logprob: -15.2500638961792
    10. '0' → logprob: -15.2500638961792

Token 862: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -18.0
    3. ' ' → logprob: -19.375
    4. '０' → logprob: -21.125
    5. '```' → logprob: -21.25
    6. '
' → logprob: -21.375
    7. '۰' → logprob: -21.875
    8. '   ' → logprob: -23.5
    9. '00' → logprob: -23.625
    10. '000' → logprob: -24.5

Token 863: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4687371253967285
    2. ')' → logprob: -1.0937371253967285
    3. '[' → logprob: -3.4687371253967285
    4. ']' → logprob: -5.0937371253967285
    5. ')])' → logprob: -6.8437371253967285
    6. ' ])' → logprob: -8.34373664855957
    7. 'print' → logprob: -8.84373664855957
    8. ''])' → logprob: -9.09373664855957
    9. '#' → logprob: -9.46873664855957
    10. ' )' → logprob: -9.59373664855957

Token 864: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12860584259033203
    2. '<|end|>' → logprob: -2.128605842590332
    3. ')' → logprob: -7.753605842590332
    4. ' print' → logprob: -7.878605842590332
    5. '#' → logprob: -8.253605842590332
    6. '#print' → logprob: -9.003605842590332
    7. ' ' → logprob: -9.128605842590332
    8. '[' → logprob: -9.253605842590332
    9. '```' → logprob: -9.378605842590332
    10. '<|end|>' → logprob: -9.503605842590332

Token 865: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.35023194551467896
    2. ' le' → logprob: -1.7252318859100342
    3. 'la' → logprob: -2.225231885910034
    4. ' la' → logprob: -5.100232124328613
    5. 'print' → logprob: -6.225232124328613
    6. 'len' → logprob: -7.725232124328613
    7. 'min' → logprob: -7.725232124328613
    8. 'l' → logprob: -9.600232124328613
    9. 'the' → logprob: -9.725232124328613
    10. 'au' → logprob: -10.100232124328613

Token 866: ' réponse' (ID: 50332)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.4299013912677765
    2. 'print' → logprob: -1.679901361465454
    3. 'ré' → logprob: -2.304901361465454
    4. 'minimum' → logprob: -3.804901361465454
    5. 'rés' → logprob: -3.929901361465454
    6. 'minimal' → logprob: -4.929901599884033
    7. 'result' → logprob: -5.179901599884033
    8. 'solution' → logprob: -5.804901599884033
    9. 'min' → logprob: -6.554901599884033
    10. ' nombre' → logprob: -6.679901599884033

Token 867: ' :' (ID: 712)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. ' print' → logprob: -16.25
    4. '
' → logprob: -18.0
    5. '``' → logprob: -20.25
    6. '#print' → logprob: -21.375
    7. '(print' → logprob: -22.0
    8. '.print' → logprob: -22.5
    9. '-print' → logprob: -22.625
    10. 'prin' → logprob: -23.125

Token 868: ' minimale' (ID: 143217)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '```' → logprob: -23.25
    4. '
' → logprob: -26.75
    5. 'import' → logprob: -27.25
    6. '#print' → logprob: -29.0
    7. 'printf' → logprob: -29.375
    8. '-print' → logprob: -29.75
    9. 'Print' → logprob: -30.125
    10. '``' → logprob: -30.5

Token 869: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -14.000001907348633
    3. '
' → logprob: -15.000001907348633
    4. '()
' → logprob: -15.250001907348633
    5. '(print' → logprob: -15.250001907348633
    6. '```' → logprob: -15.875001907348633
    7. 'import' → logprob: -16.500001907348633
    8. '(' → logprob: -17.125001907348633
    9. ')
' → logprob: -18.625001907348633
    10. '.print' → logprob: -18.875001907348633

Token 870: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002997120900545269
    2. ' piles' → logprob: -8.500299453735352
    3. 'pile' → logprob: -9.750299453735352
    4. 'nombre' → logprob: -11.500299453735352
    5. 'pil' → logprob: -12.125299453735352
    6. 'tas' → logprob: -12.250299453735352
    7. 'm' → logprob: -12.625299453735352
    8. 'pi' → logprob: -13.250299453735352
    9. '   ' → logprob: -13.625299453735352
    10. 'pl' → logprob: -13.750299453735352

Token 871: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. '
' → logprob: -18.75
    4. '```' → logprob: -19.25
    5. 'import' → logprob: -22.5
    6. '#print' → logprob: -22.625
    7. '-print' → logprob: -23.875
    8. '``' → logprob: -25.25
    9. '(print' → logprob: -25.375
    10. '.print' → logprob: -25.5

Token 872: ' toute' (ID: 16825)
  Prédit: 'emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'emp' → logprob: -0.4057803750038147
    2. 'c' → logprob: -1.90578031539917
    3. 't' → logprob: -2.65578031539917
    4. 'tout' → logprob: -2.65578031539917
    5. 'rec' → logprob: -3.90578031539917
    6. ' couvrir' → logprob: -4.65578031539917
    7. 'cou' → logprob: -5.03078031539917
    8. 'ent' → logprob: -6.40578031539917
    9. 'mettre' → logprob: -6.78078031539917
    10. 'sou' → logprob: -7.40578031539917

Token 873: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.09286531060934067
    2. ' la' → logprob: -2.967865228652954
    3. 'les' → logprob: -3.342865228652954
    4. ' les' → logprob: -7.467865467071533
    5. 'l' → logprob: -7.592865467071533
    6. 'le' → logprob: -8.217864990234375
    7. '#' → logprob: -8.592864990234375
    8. 'pile' → logprob: -9.842864990234375
    9. 'une' → logprob: -10.092864990234375
    10. 'liste' → logprob: -10.217864990234375

Token 874: ' rang' (ID: 32287)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.20514942705631256
    2. 'file' → logprob: -2.0801494121551514
    3. 'population' → logprob: -3.7051494121551514
    4. 'pile' → logprob: -4.4551496505737305
    5. 'collection' → logprob: -5.4551496505737305
    6. 'range' → logprob: -5.4551496505737305
    7. 'rang' → logprob: -5.4551496505737305
    8. 'list' → logprob: -5.5801496505737305
    9. 'ligne' → logprob: -5.5801496505737305
    10. 'sé' → logprob: -6.8301496505737305

Token 875: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -8.537868779967539e-06
    2. 'é' → logprob: -12.375008583068848
    3. 'née' → logprob: -13.000008583068848
    4. 'ee' → logprob: -14.000008583068848
    5. 'e' → logprob: -14.125008583068848
    6. 'lée' → logprob: -15.750008583068848
    7. 'è' → logprob: -16.37500762939453
    8. 'rée' → logprob: -17.62500762939453
    9. 'ées' → logprob: -17.62500762939453
    10. 'ement' → logprob: -18.50000762939453

Token 876: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '
' → logprob: -18.625
    4. '```' → logprob: -19.75
    5. '#print' → logprob: -22.125
    6. '.print' → logprob: -22.5
    7. '-print' → logprob: -22.5
    8. '(print' → logprob: -23.75
    9. '_print' → logprob: -24.125
    10. 'import' → logprob: -24.375

Token 877: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.000000953674316
    3. ' print' → logprob: -15.250000953674316
    4. '
' → logprob: -19.25
    5. 'import' → logprob: -19.75
    6. '``' → logprob: -21.625
    7. '#print' → logprob: -22.375
    8. 'pr' → logprob: -22.625
    9. 'for' → logprob: -22.75
    10. '  
' → logprob: -23.625

Token 878: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.0087516784551553e-05
    2. 'dp' → logprob: -12.00001049041748
    3. '(' → logprob: -12.50001049041748
    4. ' (' → logprob: -16.500009536743164
    5. ' dp' → logprob: -17.500009536743164
    6. '(df' → logprob: -18.750009536743164
    7. '(int' → logprob: -19.000009536743164
    8. '	dp' → logprob: -19.250009536743164
    9. '(dc' → logprob: -19.875009536743164
    10. '(dx' → logprob: -20.000009536743164

Token 879: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.438573680294212e-06
    2. '0' → logprob: -12.125005722045898
    3. '\[' → logprob: -18.5000057220459
    4. '```' → logprob: -19.7500057220459
    5. '[
' → logprob: -19.8750057220459
    6. '
' → logprob: -22.7500057220459
    7. ' [' → logprob: -22.8750057220459
    8. '][' → logprob: -23.3750057220459
    9. ')[' → logprob: -23.6250057220459
    10. '1' → logprob: -23.6250057220459

Token 880: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.375
    3. '０' → logprob: -23.375
    4. '۰' → logprob: -23.5
    5. '[' → logprob: -24.25
    6. '```' → logprob: -24.25
    7. ' ' → logprob: -26.625
    8. '٠' → logprob: -27.0
    9. '   ' → logprob: -27.375
    10. '০' → logprob: -27.375

Token 881: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.68153518543113e-05
    2. '])' → logprob: -9.875057220458984
    3. '})' → logprob: -12.375057220458984
    4. '))' → logprob: -14.250057220458984
    5. '())' → logprob: -15.875057220458984
    6. '）' → logprob: -16.625057220458984
    7. ')`' → logprob: -16.625057220458984
    8. ' )' → logprob: -17.250057220458984
    9. '`)' → logprob: -18.125057220458984
    10. ')}' → logprob: -18.625057220458984


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 879
Tokens correctement prédits (1ère position, stricte): 257
Tokens correctement prédits (1ère position, avec adaptation): 269
Tokens correctement prédits (top 10): 548
Précision stricte (1ère position): 29.24%
Précision adaptée (1ère position): 30.60%
Précision (top 10): 62.34%
================================================================================
