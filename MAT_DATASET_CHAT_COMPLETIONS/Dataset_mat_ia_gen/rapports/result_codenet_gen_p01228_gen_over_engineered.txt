================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Optional, Tuple
import sys

class HexMusicSymbol:
    """
    Représente un symbole musical sous forme hexadécimale à deux caractères,
    correspondant à une combinaison binaire des 8 sons possibles.
    """
    __slots__ = ('value',)

    VALID_HEX_CHARS = '0123456789ABCDEF'

    def __init__(self, hex_str: str):
        if len(hex_str) != 2:
            raise ValueError(f"HexMusicSymbol requires 2 chars, got '{hex_str}'")
        if any(c not in self.VALID_HEX_CHARS for c in hex_str):
            raise ValueError(f"Invalid hex chars in '{hex_str}'")
        self.value = int(hex_str, 16)

    @classmethod
    def from_int(cls, value: int) -> 'HexMusicSymbol':
        if not (0 <= value <= 0xFF):
            raise ValueError(f"Value {value} out of byte range")
        hex_str = f"{value:02X}"
        return cls(hex_str)

    def __int__(self) -> int:
        return self.value

    def __str__(self) -> str:
        return f"{self.value:02X}"

    def is_old_product_valid(self) -> bool:
        """
        Vérifie si le symbole correspond à un son jouable par l'ancien produit,
        c’est-à-dire aucun son (00) ou exactement un seul bit à 1.
        """
        # uniquement les combinaisons possibles par un ancien produit
        old_valid_values = {
            0x00, 0x01, 0x02, 0x04, 0x08,
            0x10, 0x20, 0x40, 0x80
        }
        return self.value in old_valid_values

class RhythmPattern:
    """
    Une séquence de HexMusicSymbol représentant un pattern rythmique.
    """
    def __init__(self, symbols: List[HexMusicSymbol]):
        self.symbols = symbols

    @classmethod
    def from_string(cls, pattern_str: str) -> 'RhythmPattern':
        if len(pattern_str) % 2 != 0:
            raise ValueError("Pattern string length must be even")
        symbols = []
        for i in range(0, len(pattern_str), 2):
            sym = HexMusicSymbol(pattern_str[i:i+2].upper())
            symbols.append(sym)
        return cls(symbols)

    def length(self) -> int:
        return len(self.symbols)

    def __str__(self) -> str:
        return ''.join(str(sym) for sym in self.symbols)

    def validate_old_product(self) -> bool:
        """
        Valide si tous les symboles de ce pattern conviennent aux anciennes machines.
        """
        return all(sym.is_old_product_valid() for sym in self.symbols)

    def is_silent(self) -> bool:
        """
        Vérifie si ce pattern joue toujours '00' (silence)
        """
        return all(int(sym) == 0 for sym in self.symbols)

class RhythmPatternMerger:
    """
    Fusionne plusieurs rythmes d’anciennes machines en un seul pattern
    pour une machine nouvelle capacité (jusqu'à 8 sons simultanés).
    """

    def __init__(self, old_patterns: List[RhythmPattern]):
        self.old_patterns = old_patterns

    def lcm(self, a: int, b: int) -> int:
        import math
        return a * b // math.gcd(a, b)

    def full_lcm(self, numbers: List[int]) -> int:
        from functools import reduce
        import math
        return reduce(lambda x, y: x * y // math.gcd(x, y), numbers, 1)

    def expand_pattern(self, pattern: RhythmPattern, length: int) -> List[int]:
        """
        Étend ou rééchantillonne le pattern à une longueur donnée (plus grande).
        Le pattern initial est supposé être un cycle répétitif sur la mesure.
        """
        original_len = pattern.length()
        factor = length // original_len
        # Pour les vieux patterns, on peut répéter simplement chaque symbole factor fois
        expanded = []
        for sym in pattern.symbols:
            expanded.extend([int(sym)] * factor)
        return expanded

    def merge(self) -> Optional[str]:
        """
        Fusionne tous les anciens patterns selon l’énoncé.
        Retourne la chaîne hexadécimale fusionnée ou None si trop volumineux.
        """
        lengths = [p.length() for p in self.old_patterns]
        l = self.full_lcm(lengths)

        # Étendre tous les patterns à la longueur l
        expanded_patterns = [self.expand_pattern(p, l) for p in self.old_patterns]

        # Fusionner les sons par position temporelle : bitwise OR
        merged_pattern = []
        for i in range(l):
            combined = 0
            for pat_sounds in expanded_patterns:
                combined |= pat_sounds[i]
            merged_pattern.append(combined)

        # Simplifier la représentation en cherchant le motif minimal cyclique
        # pour produire la sortie la plus courte possible
        minimal_pattern = self.minimal_cyclic_pattern(merged_pattern)

        if len(minimal_pattern) * 2 > 2048:
            return None

        # Construction de la chaîne hexadécimale majuscule
        result = ''.join(f"{val:02X}" for val in minimal_pattern)
        return result

    def minimal_cyclic_pattern(self, pattern: List[int]) -> List[int]:
        """
        Trouver le motif cyclique minimal qui, répété, forme pattern.
        Recherche du plus petit k divisant len(pattern) tel que pattern est k répétitions du motif.
        """
        n = len(pattern)
        for sublen in range(1, n + 1):
            if n % sublen != 0:
                continue
            motif = pattern[:sublen]
            if motif * (n // sublen) == pattern:
                return motif
        return pattern  # fallback

class InputReader:
    """
    Flux de lecture avancé depuis stdin, pour modularité et tests potentielles.
    """

    def __init__(self):
        self.lines = sys.stdin.read().splitlines()
        self.pos = 0

    def read_int(self) -> int:
        if self.pos >= len(self.lines):
            raise EOFError("No more input lines")
        val = int(self.lines[self.pos])
        self.pos += 1
        return val

    def read_pattern(self) -> RhythmPattern:
        if self.pos >= len(self.lines):
            raise EOFError("No more input lines")
        line = self.lines[self.pos].strip()
        self.pos += 1
        return RhythmPattern.from_string(line)

def main():
    ir = InputReader()
    dataset_count = ir.read_int()
    outputs = []

    for _ in range(dataset_count):
        N = ir.read_int()
        old_patterns = []
        for _ in range(N):
            pattern = ir.read_pattern()
            if not pattern.validate_old_product():
                # Étant donné que l'énoncé garantit la validité, ceci est une sécurité
                raise ValueError("Invalid old product pattern detected")
            old_patterns.append(pattern)

        merger = RhythmPatternMerger(old_patterns)
        merged = merger.merge()
        if merged is None:
            outputs.append("Too complex.")
        else:
            outputs.append(merged)

    print('\n'.join(outputs))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3551808297634125
    2. 'List' → logprob: -1.7301808595657349
    3. 'Any' → logprob: -2.4801807403564453
    4. ' Any' → logprob: -3.3551807403564453
    5. ' Optional' → logprob: -6.730180740356445
    6. 'Optional' → logprob: -7.105180740356445
    7. ' Union' → logprob: -7.855180740356445
    8. 'Union' → logprob: -8.355180740356445
    9. 'Iterable' → logprob: -8.605180740356445
    10. ' Generator' → logprob: -9.230180740356445

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.28215864300727844
    2. 'def' → logprob: -1.782158613204956
    3. '
' → logprob: -3.782158613204956
    4. '\n' → logprob: -4.157158851623535
    5. '<|end|>' → logprob: -4.907158851623535
    6. '\' → logprob: -4.907158851623535
    7. '[' → logprob: -5.532158851623535
    8. 'import' → logprob: -5.907158851623535
    9. '`' → logprob: -6.157158851623535
    10. '  
' → logprob: -6.282158851623535

Token 5: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.4607965052127838
    2. 'Optional' → logprob: -1.0857964754104614
    3. 'Dict' → logprob: -4.210796356201172
    4. ' Dict' → logprob: -4.460796356201172
    5. 'Tuple' → logprob: -5.710796356201172
    6. ' Tuple' → logprob: -7.335796356201172
    7. ' Union' → logprob: -7.335796356201172
    8. 'Union' → logprob: -8.585796356201172
    9. 'Any' → logprob: -8.960796356201172
    10. ' Any' → logprob: -9.835796356201172

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6904412508010864
    2. '```' → logprob: -1.1904412508010864
    3. '[' → logprob: -2.690441131591797
    4. ',' → logprob: -3.065441131591797
    5. '\' → logprob: -3.690441131591797
    6. '\n' → logprob: -3.940441131591797
    7. 'import' → logprob: -4.565441131591797
    8. '`' → logprob: -5.065441131591797
    9. 'class' → logprob: -5.815441131591797
    10. '
' → logprob: -5.940441131591797

Token 7: ' Tuple' (ID: 50841)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.17486217617988586
    2. 'Tuple' → logprob: -3.0498621463775635
    3. ' Dict' → logprob: -3.1748621463775635
    4. 'Union' → logprob: -3.2998621463775635
    5. ' Union' → logprob: -3.7998621463775635
    6. 'Any' → logprob: -5.924862384796143
    7. 'Literal' → logprob: -6.049862384796143
    8. ' Tuple' → logprob: -6.549862384796143
    9. 'Iterable' → logprob: -6.924862384796143
    10. 'Typed' → logprob: -7.299862384796143

Token 8: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6152735948562622
    2. '```' → logprob: -1.2402735948562622
    3. '[' → logprob: -2.9902734756469727
    4. ',' → logprob: -3.1152734756469727
    5. ':' → logprob: -4.240273475646973
    6. '\' → logprob: -4.240273475646973
    7. 'import' → logprob: -4.365273475646973
    8. '\n' → logprob: -4.615273475646973
    9. '`' → logprob: -5.115273475646973
    10. '(' → logprob: -5.115273475646973

Token 9: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21927009522914886
    2. ',' → logprob: -2.7192699909210205
    3. '```' → logprob: -2.8442699909210205
    4. 'import' → logprob: -3.3442699909210205
    5. '\n' → logprob: -4.4692702293396
    6. 'class' → logprob: -4.7192702293396
    7. '\' → logprob: -5.2192702293396
    8. '`' → logprob: -5.8442702293396
    9. '[' → logprob: -5.9692702293396
    10. ':' → logprob: -6.9692702293396

Token 10: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.02969297766685486
    2. ' sys' → logprob: -4.279693126678467
    3. ' typing' → logprob: -5.154693126678467
    4. ' numpy' → logprob: -5.404693126678467
    5. ' re' → logprob: -5.654693126678467
    6. ' pandas' → logprob: -7.029693126678467
    7. 'os' → logprob: -8.529692649841309
    8. ' math' → logprob: -8.654692649841309
    9. ' json' → logprob: -9.154692649841309
    10. ' requests' → logprob: -9.779692649841309

Token 11: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22255335748195648
    2. '\n' → logprob: -2.347553253173828
    3. 'import' → logprob: -3.472553253173828
    4. '

' → logprob: -3.722553253173828
    5. '<|end|>' → logprob: -3.722553253173828
    6. '```' → logprob: -4.597553253173828
    7. ',' → logprob: -5.722553253173828
    8. '\' → logprob: -5.972553253173828
    9. '<|end|>' → logprob: -5.972553253173828
    10. '.' → logprob: -6.347553253173828

Token 12: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18258704245090485
    2. '```' → logprob: -2.807587146759033
    3. '\n' → logprob: -3.932587146759033
    4. 'import' → logprob: -3.932587146759033
    5. '\' → logprob: -4.057587146759033
    6. '.' → logprob: -4.307587146759033
    7. '`' → logprob: -4.807587146759033
    8. '
' → logprob: -4.807587146759033
    9. 'd' → logprob: -5.307587146759033
    10. '#' → logprob: -6.057587146759033

Token 13: ' Hex' (ID: 56318)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3558669090270996
    2. ' My' → logprob: -1.6058669090270996
    3. ' System' → logprob: -4.1058669090271
    4. ' Data' → logprob: -4.1058669090271
    5. ' Space' → logprob: -4.3558669090271
    6. ' User' → logprob: -4.6058669090271
    7. ' Parser' → logprob: -4.6058669090271
    8. ' Processor' → logprob: -5.4808669090271
    9. ' Calculator' → logprob: -5.6058669090271
    10. ' Vector' → logprob: -6.1058669090271

Token 14: 'Music' (ID: 28138)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26226574182510376
    2. 'adecimal' → logprob: -2.637265682220459
    3. 'a' → logprob: -2.762265682220459
    4. 'Converter' → logprob: -3.137265682220459
    5. 'agon' → logprob: -3.637265682220459
    6. 'Coder' → logprob: -5.387265682220459
    7. '):' → logprob: -5.512265682220459
    8. 'Formatter' → logprob: -5.512265682220459
    9. 'agonal' → logprob: -6.137265682220459
    10. 'String' → logprob: -6.387265682220459

Token 15: 'Symbol' (ID: 17416)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044308312237262726
    2. '(' → logprob: -3.1693084239959717
    3. '():' → logprob: -7.669308185577393
    4. 'Parser' → logprob: -8.54430866241455
    5. '):' → logprob: -8.79430866241455
    6. ':
' → logprob: -9.79430866241455
    7. '```' → logprob: -10.29430866241455
    8. 'Generator' → logprob: -10.66930866241455
    9. ':**' → logprob: -10.91930866241455
    10. ' :' → logprob: -10.91930866241455

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052974349819123745
    2. '(' → logprob: -5.255297660827637
    3. ' :' → logprob: -10.505297660827637
    4. '():' → logprob: -11.255297660827637
    5. '(:' → logprob: -11.880297660827637
    6. '):' → logprob: -12.505297660827637
    7. ':
' → logprob: -12.755297660827637
    8. '```' → logprob: -13.380297660827637
    9. ':def' → logprob: -14.005297660827637
    10. '(Exception' → logprob: -14.130297660827637

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027638327330350876
    2. ':' → logprob: -4.1526384353637695
    3. ' ' → logprob: -5.4026384353637695
    4. '    ' → logprob: -6.0276384353637695
    5. '<|end|>' → logprob: -6.4026384353637695
    6. '(' → logprob: -7.1526384353637695
    7. '    
' → logprob: -7.6526384353637695
    8. '  ' → logprob: -7.9026384353637695
    9. ' def' → logprob: -7.9026384353637695
    10. ' :' → logprob: -8.15263843536377

Token 18: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11959913372993469
    2. ' def' → logprob: -2.7445991039276123
    3. 'def' → logprob: -3.1195991039276123
    4. ':' → logprob: -6.619599342346191
    5. 'class' → logprob: -6.619599342346191
    6. '    ' → logprob: -7.369599342346191
    7. ' pass' → logprob: -8.119599342346191
    8. '```' → logprob: -8.369599342346191
    9. '(' → logprob: -9.244599342346191
    10. '_' → logprob: -9.869599342346191

Token 19: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.09093471616506577
    2. ' """' → logprob: -2.7159347534179688
    3. '```' → logprob: -5.590934753417969
    4. '*' → logprob: -5.715934753417969
    5. '"' → logprob: -6.090934753417969
    6. ' """
' → logprob: -6.715934753417969
    7. '\"' → logprob: -6.840934753417969
    8. 'class' → logprob: -6.840934753417969
    9. '"""
' → logprob: -6.965934753417969
    10. '""' → logprob: -7.215934753417969

Token 20: ' Re' (ID: 907)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.690922737121582
    2. 'A' → logprob: -1.565922737121582
    3. '"""' → logprob: -1.565922737121582
    4. ' Represents' → logprob: -3.815922737121582
    5. ' A' → logprob: -4.190922737121582
    6. ' """' → logprob: -4.315922737121582
    7. 'Hex' → logprob: -5.690922737121582
    8. 'Class' → logprob: -5.940922737121582
    9. '#' → logprob: -6.315922737121582
    10. 'H' → logprob: -6.440922737121582

Token 21: 'prés' (ID: 61592)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0077866665087640285
    2. 'presentation' → logprob: -5.382786750793457
    3. 'pr' → logprob: -6.382786750793457
    4. 'present' → logprob: -7.507786750793457
    5. 'pres' → logprob: -7.882786750793457
    6. 'resents' → logprob: -8.382786750793457
    7. 'f' → logprob: -9.257786750793457
    8. 'fers' → logprob: -9.882786750793457
    9. 'pre' → logprob: -10.132786750793457
    10. 's' → logprob: -10.757786750793457

Token 22: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.05124400556087494
    2. 'é' → logprob: -3.551244020462036
    3. 's' → logprob: -5.051243782043457
    4. 'és' → logprob: -5.426243782043457
    5. 'e' → logprob: -6.426243782043457
    6. 'én' → logprob: -6.426243782043457
    7. 'ént' → logprob: -6.426243782043457
    8. 'ète' → logprob: -6.676243782043457
    9. 'ents' → logprob: -6.676243782043457
    10. 'è' → logprob: -7.676243782043457

Token 23: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04116668552160263
    2. ' une' → logprob: -3.4161667823791504
    3. 'un' → logprob: -5.66616678237915
    4. ' a' → logprob: -6.16616678237915
    5. 'une' → logprob: -6.66616678237915
    6. ' ' → logprob: -8.666166305541992
    7. 'a' → logprob: -8.791166305541992
    8. ' le' → logprob: -9.291166305541992
    9. ' l' → logprob: -9.666166305541992
    10. ' la' → logprob: -10.041166305541992

Token 24: ' symbole' (ID: 152507)
  Prédit: ' symbole'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbole' → logprob: -0.054010529071092606
    2. 'sym' → logprob: -3.5540106296539307
    3. 'symbol' → logprob: -5.804010391235352
    4. ' sym' → logprob: -5.804010391235352
    5. 'élé' → logprob: -5.929010391235352
    6. ' symbol' → logprob: -6.054010391235352
    7. '   ' → logprob: -6.054010391235352
    8. ' caractère' → logprob: -6.179010391235352
    9. 'e' → logprob: -6.741510391235352
    10. ' morceau' → logprob: -7.116510391235352

Token 25: ' musical' (ID: 17163)
  Prédit: ' musical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' musical' → logprob: -0.5997469425201416
    2. ' de' → logprob: -1.5997469425201416
    3. ' musicale' → logprob: -1.7247469425201416
    4. '   ' → logprob: -4.4747467041015625
    5. ' ' → logprob: -4.5997467041015625
    6. ' music' → logprob: -4.5997467041015625
    7. ' hex' → logprob: -4.8497467041015625
    8. '    ' → logprob: -5.2247467041015625
    9. '<|end|>' → logprob: -5.2247467041015625
    10. 'mus' → logprob: -5.5997467041015625

Token 26: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6388027667999268
    2. ' de' → logprob: -1.8888027667999268
    3. '"""' → logprob: -1.8888027667999268
    4. '.' → logprob: -2.2638027667999268
    5. ' """' → logprob: -2.8888027667999268
    6. ')' → logprob: -2.8888027667999268
    7. ',' → logprob: -3.2638027667999268
    8. ' en' → logprob: -3.5138027667999268
    9. ' ' → logprob: -3.7638027667999268
    10. ' d' → logprob: -3.8888027667999268

Token 27: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.029341131448745728
    2. 'forme' → logprob: -4.029341220855713
    3. ' la' → logprob: -5.654341220855713
    4. 'la' → logprob: -5.779341220855713
    5. 'form' → logprob: -6.904341220855713
    6. '```' → logprob: -7.154341220855713
    7. '   ' → logprob: -7.404341220855713
    8. ' form' → logprob: -7.654341220855713
    9. '-form' → logprob: -8.279340744018555
    10. ' format' → logprob: -8.404340744018555

Token 28: ' hex' (ID: 26157)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16556613147258759
    2. ' hex' → logprob: -2.0405662059783936
    3. '   ' → logprob: -4.7905659675598145
    4. ' de' → logprob: -5.1655659675598145
    5. 'd' → logprob: -5.4155659675598145
    6. 'hex' → logprob: -6.0405659675598145
    7. ' hexadecimal' → logprob: -6.9155659675598145
    8. 'de' → logprob: -8.165566444396973
    9. '    ' → logprob: -8.665566444396973
    10. ' ' → logprob: -9.290566444396973

Token 29: 'ad' (ID: 324)
  Prédit: 'ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.4366323947906494
    2. 'a' → logprob: -1.0616323947906494
    3. 'adecimal' → logprob: -4.93663215637207
    4. '```' → logprob: -7.93663215637207
    5. '   ' → logprob: -9.81163215637207
    6. 'agé' → logprob: -10.06163215637207
    7. 'adec' → logprob: -10.68663215637207
    8. ' ad' → logprob: -10.93663215637207
    9. 'ád' → logprob: -11.06163215637207
    10. ' ' → logprob: -11.18663215637207

Token 30: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.018538517877459526
    2. 'é' → logprob: -4.393538475036621
    3. 'a' → logprob: -5.893538475036621
    4. '```' → logprob: -6.268538475036621
    5. 'ec' → logprob: -7.643538475036621
    6. 'c' → logprob: -9.143538475036621
    7. 'éci' → logprob: -9.268538475036621
    8. 'adecimal' → logprob: -9.393538475036621
    9. 'ad' → logprob: -9.518538475036621
    10. '   ' → logprob: -10.018538475036621

Token 31: 'im' (ID: 321)
  Prédit: 'imal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.08840306848287582
    2. 'im' → logprob: -2.7134029865264893
    3. 'adecimal' → logprob: -4.963403224945068
    4. '```' → logprob: -5.213403224945068
    5. 'a' → logprob: -5.588403224945068
    6. 'al' → logprob: -7.838403224945068
    7. 'ad' → logprob: -8.08840274810791
    8. '"""' → logprob: -8.46340274810791
    9. 'imali' → logprob: -8.58840274810791
    10. 'ima' → logprob: -9.21340274810791

Token 32: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.5764968395233154
    2. 'al' → logprob: -0.8264968395233154
    3. '   ' → logprob: -8.701497077941895
    4. 'a' → logprob: -9.576497077941895
    5. '```' → logprob: -9.826497077941895
    6. '#' → logprob: -10.076497077941895
    7. 'alité' → logprob: -11.451497077941895
    8. '\' → logprob: -11.451497077941895
    9. ' ale' → logprob: -11.576497077941895
    10. 'à' → logprob: -11.826497077941895

Token 33: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3547416627407074
    2. '"""' → logprob: -1.6047416925430298
    3. '   ' → logprob: -2.7297415733337402
    4. ':' → logprob: -4.85474157333374
    5. '"""
' → logprob: -5.60474157333374
    6. '."""' → logprob: -5.60474157333374
    7. ' :' → logprob: -5.72974157333374
    8. '*' → logprob: -6.22974157333374
    9. ')' → logprob: -6.35474157333374
    10. '\n' → logprob: -6.47974157333374

Token 34: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8867113590240479
    2. 'l' → logprob: -2.136711359024048
    3. ' partir' → logprob: -2.261711359024048
    4. ' l' → logprob: -2.636711359024048
    5. ' une' → logprob: -2.886711359024048
    6. ' un' → logprob: -3.136711359024048
    7. 'une' → logprob: -3.261711359024048
    8. '   ' → logprob: -3.261711359024048
    9. 'u' → logprob: -3.511711359024048
    10. 'un' → logprob: -3.761711359024048

Token 35: ' caractères' (ID: 183106)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.0862919092178345
    2. ' caractères' → logprob: -1.0862919092178345
    3. 'car' → logprob: -1.7112919092178345
    4. ' chiffres' → logprob: -2.461291790008545
    5. ' car' → logprob: -4.711291790008545
    6. 'chars' → logprob: -4.836291790008545
    7. ' hex' → logprob: -4.836291790008545
    8. ' oct' → logprob: -5.086291790008545
    9. ' caracteres' → logprob: -5.211291790008545
    10. ' digits' → logprob: -5.336291790008545

Token 36: ',
' (ID: 412)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.054387565702199936
    2. '.' → logprob: -3.4293875694274902
    3. '   ' → logprob: -4.30438756942749
    4. '"' → logprob: -5.55438756942749
    5. ')' → logprob: -6.55438756942749
    6. '"""
' → logprob: -8.054387092590332
    7. ' """' → logprob: -8.304387092590332
    8. '*' → logprob: -8.679387092590332
    9. '."""' → logprob: -8.679387092590332
    10. ',' → logprob: -8.804387092590332

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044419609010219574
    2. ' ' → logprob: -4.544419765472412
    3. ' en' → logprob: -5.044419765472412
    4. '    ' → logprob: -5.169419765472412
    5. ' avec' → logprob: -5.294419765472412
    6. ' et' → logprob: -6.044419765472412
    7. ' un' → logprob: -6.169419765472412
    8. 's' → logprob: -6.294419765472412
    9. '  ' → logprob: -6.919419765472412
    10. ' une' → logprob: -7.044419765472412

Token 38: ' correspondant' (ID: 146058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06537725776433945
    2. ' avec' → logprob: -4.315377235412598
    3. ' un' → logprob: -4.940377235412598
    4. ' une' → logprob: -5.190377235412598
    5. ' en' → logprob: -5.315377235412598
    6. ' cod' → logprob: -5.940377235412598
    7. ' et' → logprob: -6.065377235412598
    8. ' chaque' → logprob: -6.190377235412598
    9. ' ' → logprob: -6.440377235412598
    10. '    ' → logprob: -6.690377235412598

Token 39: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.021049197763204575
    2. ' au' → logprob: -4.5210490226745605
    3. ' aux' → logprob: -5.2710490226745605
    4. ' to' → logprob: -6.0210490226745605
    5. 'à' → logprob: -6.3960490226745605
    6. 'au' → logprob: -8.521049499511719
    7. ''à' → logprob: -8.896049499511719
    8. 's' → logprob: -9.021049499511719
    9. ' a' → logprob: -9.646049499511719
    10. 'aux' → logprob: -10.021049499511719

Token 40: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8328158259391785
    2. ' une' → logprob: -0.9578158259391785
    3. ' la' → logprob: -2.3328158855438232
    4. ' ' → logprob: -3.3328158855438232
    5. ' l' → logprob: -3.5828158855438232
    6. 'une' → logprob: -4.582815647125244
    7. 'un' → logprob: -5.457815647125244
    8. 'la' → logprob: -6.207815647125244
    9. 'l' → logprob: -6.457815647125244
    10. ' ' → logprob: -7.082815647125244

Token 41: ' combinaison' (ID: 165933)
  Prédit: ' note'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' note' → logprob: -0.35874423384666443
    2. 'note' → logprob: -1.3587442636489868
    3. '   ' → logprob: -4.733744144439697
    4. ' valeur' → logprob: -5.108744144439697
    5. 'notation' → logprob: -5.358744144439697
    6. 'Note' → logprob: -5.858744144439697
    7. ' notation' → logprob: -6.108744144439697
    8. ' hauteur' → logprob: -6.233744144439697
    9. 'val' → logprob: -6.483744144439697
    10. ' ' → logprob: -6.858744144439697

Token 42: ' b' (ID: 287)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17094451189041138
    2. ' d' → logprob: -2.6709444522857666
    3. 'de' → logprob: -3.0459444522857666
    4. ' hex' → logprob: -3.9209444522857666
    5. ' des' → logprob: -4.295944690704346
    6. ' possible' → logprob: -6.420944690704346
    7. ' unique' → logprob: -6.920944690704346
    8. ' of' → logprob: -7.045944690704346
    9. 'd' → logprob: -7.045944690704346
    10. 'hex' → logprob: -7.295944690704346

Token 43: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.5153399705886841
    2. ''' → logprob: -2.0153398513793945
    3. 'in' → logprob: -2.3903398513793945
    4. 'y' → logprob: -2.7653398513793945
    5. 'i' → logprob: -3.0153398513793945
    6. 'ina' → logprob: -4.1403398513793945
    7. ''i' → logprob: -4.1403398513793945
    8. '\x' → logprob: -5.1403398513793945
    9. '"' → logprob: -5.2653398513793945
    10. '```' → logprob: -5.5153398513793945

Token 44: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3862655758857727
    2. ' sur' → logprob: -2.386265516281128
    3. 'de' → logprob: -3.011265516281128
    4. ' des' → logprob: -3.261265516281128
    5. ' à' → logprob: -3.511265516281128
    6. '.' → logprob: -3.636265516281128
    7. ' ' → logprob: -3.761265516281128
    8. '   ' → logprob: -3.886265516281128
    9. ' unique' → logprob: -4.011265754699707
    10. ',' → logprob: -5.511265754699707

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2578225135803223
    2. ' notes' → logprob: -2.0078225135803223
    3. 'notes' → logprob: -2.6328225135803223
    4. ' différents' → logprob: -3.0078225135803223
    5. ' différentes' → logprob: -3.0078225135803223
    6. ' paramètres' → logprob: -3.0078225135803223
    7. ' bits' → logprob: -3.3828225135803223
    8. 'élé' → logprob: -3.5078225135803223
    9. ' caractéristiques' → logprob: -3.5078225135803223
    10. ' éléments' → logprob: -3.7578225135803223

Token 46: '8' (ID: 23)
  Prédit: 'notes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'notes' → logprob: -0.9845157265663147
    2. 'élé' → logprob: -1.85951566696167
    3. 'car' → logprob: -2.10951566696167
    4. 'bits' → logprob: -2.23451566696167
    5. 'at' → logprob: -2.73451566696167
    6. 'symbol' → logprob: -3.35951566696167
    7. 'val' → logprob: -3.73451566696167
    8. ' ' → logprob: -4.23451566696167
    9. 'diff' → logprob: -4.35951566696167
    10. 'de' → logprob: -4.73451566696167

Token 47: ' sons' (ID: 35937)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.5464651584625244
    2. 'bits' → logprob: -1.1714651584625244
    3. ' ' → logprob: -3.7964651584625244
    4. ' flags' → logprob: -3.9214651584625244
    5. 'flags' → logprob: -4.171464920043945
    6. ' états' → logprob: -4.671464920043945
    7. 'poss' → logprob: -4.921464920043945
    8. ' notes' → logprob: -5.171464920043945
    9. 'bit' → logprob: -5.546464920043945
    10. 'car' → logprob: -5.921464920043945

Token 48: ' possibles' (ID: 97753)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43520015478134155
    2. ' possibles' → logprob: -1.5602002143859863
    3. 's' → logprob: -2.6852002143859863
    4. ',' → logprob: -4.810200214385986
    5. ' possible' → logprob: -4.935200214385986
    6. ' disponibles' → logprob: -4.935200214385986
    7. '"""' → logprob: -5.060200214385986
    8. ' du' → logprob: -5.060200214385986
    9. ' ' → logprob: -5.060200214385986
    10. ' de' → logprob: -5.310200214385986

Token 49: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030282512307167053
    2. '   ' → logprob: -4.405282497406006
    3. ',' → logprob: -5.155282497406006
    4. '.
' → logprob: -6.030282497406006
    5. 's' → logprob: -6.405282497406006
    6. '"""' → logprob: -6.530282497406006
    7. ':' → logprob: -6.780282497406006
    8. '\n' → logprob: -7.280282497406006
    9. '"' → logprob: -7.405282497406006
    10. ' (' → logprob: -7.905282497406006

Token 50: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6556805968284607
    2. '   ' → logprob: -0.7806805968284607
    3. '"' → logprob: -4.6556806564331055
    4. '"""
' → logprob: -5.0306806564331055
    5. '```' → logprob: -6.2806806564331055
    6. ' """' → logprob: -6.6556806564331055
    7. ' """
' → logprob: -7.1556806564331055
    8. ')' → logprob: -7.4056806564331055
    9. '""' → logprob: -7.5306806564331055
    10. '`' → logprob: -7.7806806564331055

Token 51: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.05947241559624672
    2. '   ' → logprob: -3.0594723224639893
    3. '"""
' (adapté à ' """
') → logprob: -5.309472560882568
    4. ' """' → logprob: -5.934472560882568
    5. ' """
' → logprob: -7.434472560882568
    6. '
' → logprob: -7.434472560882568
    7. '```' → logprob: -7.559472560882568
    8. '"' → logprob: -7.559472560882568
    9. '\n' → logprob: -7.809472560882568
    10. '""' → logprob: -8.18447208404541

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3394237160682678
    2. '
' → logprob: -2.089423656463623
    3. '    
' → logprob: -2.214423656463623
    4. '\n' → logprob: -3.714423656463623
    5. ' 
' → logprob: -4.089423656463623
    6. '     
' → logprob: -5.589423656463623
    7. '\' → logprob: -5.839423656463623
    8. '   
' → logprob: -6.214423656463623
    9. '```' → logprob: -6.464423656463623
    10. 'def' → logprob: -7.339423656463623

Token 53: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20269618928432465
    2. ' 
' → logprob: -2.5776960849761963
    3. 'def' → logprob: -3.3276960849761963
    4. '    
' → logprob: -3.4526960849761963
    5. ' def' → logprob: -3.8276960849761963
    6. '\' → logprob: -5.702696323394775
    7. '    ' → logprob: -5.702696323394775
    8. ' ' → logprob: -6.077696323394775
    9. '\n' → logprob: -6.202696323394775
    10. '     
' → logprob: -6.327696323394775

Token 54: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.08696447312831879
    2. 'init' → logprob: -2.5869643688201904
    3. 'code' → logprob: -6.2119646072387695
    4. 'def' → logprob: -6.3369646072387695
    5. 'hex' → logprob: -6.8369646072387695
    6. 'value' → logprob: -6.9619646072387695
    7. '_slots' → logprob: -7.3369646072387695
    8. '_code' → logprob: -8.33696460723877
    9. 'val' → logprob: -8.46196460723877
    10. '_init' → logprob: -8.96196460723877

Token 55: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00021188464597798884
    2. '=' → logprob: -9.125211715698242
    3. '__[' → logprob: -9.750211715698242
    4. '=['' → logprob: -10.875211715698242
    5. '__["' → logprob: -11.375211715698242
    6. '___' → logprob: -11.875211715698242
    7. ' =' → logprob: -13.250211715698242
    8. '__.__' → logprob: -13.750211715698242
    9. '__:' → logprob: -14.125211715698242
    10. '__('' → logprob: -14.500211715698242

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2653248608112335
    2. '=' → logprob: -1.6403248310089111
    3. '__' → logprob: -3.265324831008911
    4. '=['' → logprob: -7.14032506942749
    5. '[' → logprob: -9.640324592590332
    6. '['' → logprob: -10.765324592590332
    7. ' =[' → logprob: -10.890324592590332
    8. '=["' → logprob: -11.015324592590332
    9. '__[' → logprob: -12.265324592590332
    10. ' ['' → logprob: -12.390324592590332

Token 57: ' ('' (ID: 9906)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43963107466697693
    2. '('_' → logprob: -2.6896309852600098
    3. '('__' → logprob: -2.6896309852600098
    4. ''_' → logprob: -2.9396309852600098
    5. '"' → logprob: -3.0646309852600098
    6. '['' → logprob: -3.3146309852600098
    7. '("__' → logprob: -3.8146309852600098
    8. '"_' → logprob: -3.9396309852600098
    9. ''s' → logprob: -4.68963098526001
    10. '("_' → logprob: -4.81463098526001

Token 58: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.517808198928833
    2. '_value' → logprob: -1.642808198928833
    3. '_hex' → logprob: -2.017808198928833
    4. 'hex' → logprob: -3.767808198928833
    5. 'symbol' → logprob: -4.142807960510254
    6. '_symbol' → logprob: -4.392807960510254
    7. '_code' → logprob: -4.392807960510254
    8. 'code' → logprob: -5.642807960510254
    9. '_bytes' → logprob: -5.767807960510254
    10. '_data' → logprob: -6.267807960510254

Token 59: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2519691288471222
    2. '')' → logprob: -1.5019690990447998
    3. ''' → logprob: -10.501969337463379
    4. '')

' → logprob: -12.251969337463379
    5. ':' → logprob: -12.876969337463379
    6. '')
' → logprob: -13.376969337463379
    7. 's' → logprob: -14.001969337463379
    8. '','' → logprob: -14.126969337463379
    9. '_' → logprob: -14.251969337463379
    10. '']' → logprob: -15.126969337463379

Token 60: ')

' (ID: 1029)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6746411919593811
    2. ' '_' → logprob: -1.4246411323547363
    3. ''' → logprob: -1.6746411323547363
    4. ''_' → logprob: -3.7996411323547363
    5. ')' → logprob: -4.674641132354736
    6. ' '__' → logprob: -4.924641132354736
    7. ' '_'' → logprob: -5.299641132354736
    8. ''s' → logprob: -5.299641132354736
    9. ''value' → logprob: -5.549641132354736
    10. ''t' → logprob: -6.424641132354736

Token 61: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5430632829666138
    2. '   ' → logprob: -0.9180632829666138
    3. '    
' → logprob: -4.543063163757324
    4. 'def' → logprob: -5.043063163757324
    5. ' def' → logprob: -6.418063163757324
    6. ':' → logprob: -8.043063163757324
    7. '\n' → logprob: -8.543063163757324
    8. ' 
' → logprob: -9.168063163757324
    9. '

' → logprob: -9.543063163757324
    10. '  
' → logprob: -9.668063163757324

Token 62: ' VALID' (ID: 96830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014468335546553135
    2. ' def' → logprob: -4.264468193054199
    3. '   ' → logprob: -8.2644681930542
    4. 'value' → logprob: -10.0144681930542
    5. ' value' → logprob: -13.3894681930542
    6. '__' → logprob: -14.8894681930542
    7. '    
' → logprob: -15.6394681930542
    8. ' ' → logprob: -15.8894681930542
    9. '_def' → logprob: -16.264469146728516
    10. '	def' → logprob: -16.389469146728516

Token 63: '_HE' (ID: 16695)
  Prédit: '_CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.2732796370983124
    2. '_VALUES' → logprob: -1.5232796669006348
    3. '_' → logprob: -4.773279666900635
    4. '_CHAR' → logprob: -5.023279666900635
    5. '_CHO' → logprob: -6.273279666900635
    6. '_BYTES' → logprob: -6.523279666900635
    7. '_HE' → logprob: -6.773279666900635
    8. '_SYMBOL' → logprob: -7.898279666900635
    9. '_CODES' → logprob: -8.273279190063477
    10. '_VALUE' → logprob: -8.648279190063477

Token 64: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0009063414763659239
    2. 'XD' → logprob: -7.375906467437744
    3. 'XA' → logprob: -9.125905990600586
    4. 'AD' → logprob: -9.500905990600586
    5. 'XS' → logprob: -9.625905990600586
    6. 'XL' → logprob: -11.750905990600586
    7. 'XP' → logprob: -12.125905990600586
    8. 'LP' → logprob: -12.625905990600586
    9. 'L' → logprob: -12.875905990600586
    10. ' X' → logprob: -13.500905990600586

Token 65: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.12441567331552505
    2. '_DIG' → logprob: -2.249415636062622
    3. '_VALUES' → logprob: -4.999415874481201
    4. '_CHAR' → logprob: -6.624415874481201
    5. '_CHO' → logprob: -6.999415874481201
    6. '_CODES' → logprob: -6.999415874481201
    7. 'CH' → logprob: -7.874415874481201
    8. '_SYMBOL' → logprob: -8.374415397644043
    9. ' =' → logprob: -8.374415397644043
    10. '=' → logprob: -8.874415397644043

Token 66: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.03419836610555649
    2. 'AR' → logprob: -3.40919828414917
    3. 'O' → logprob: -8.534198760986328
    4. 'E' → logprob: -9.659198760986328
    5. 'ARSE' → logprob: -9.784198760986328
    6. 'S' → logprob: -10.159198760986328
    7. 'ars' → logprob: -10.784198760986328
    8. 'RS' → logprob: -10.909198760986328
    9. 'A' → logprob: -11.034198760986328
    10. '"' → logprob: -11.034198760986328

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029919879510998726
    2. '=' → logprob: -3.5299198627471924
    3. ':' → logprob: -8.779919624328613
    4. ' :' → logprob: -11.279919624328613
    5. '   ' → logprob: -13.904919624328613
    6. ' ' → logprob: -14.279919624328613
    7. ' ="' → logprob: -15.029919624328613
    8. ' ='' → logprob: -15.654919624328613
    9. '='' → logprob: -15.654919624328613
    10. ')' → logprob: -15.779919624328613

Token 68: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6421071290969849
    2. ''' → logprob: -1.3921071290969849
    3. '"' → logprob: -2.0171070098876953
    4. ' "' → logprob: -2.5171070098876953
    5. ' set' → logprob: -5.142107009887695
    6. 'fro' → logprob: -5.892107009887695
    7. 'set' → logprob: -7.017107009887695
    8. ' {'' → logprob: -7.017107009887695
    9. ''f' → logprob: -8.017107009887695
    10. ' fro' → logprob: -8.267107009887695

Token 69: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -2.3676733690081164e-05
    2. ''' → logprob: -11.12502384185791
    3. '"' → logprob: -11.87502384185791
    4. '123' → logprob: -13.75002384185791
    5. 'ABC' → logprob: -15.12502384185791
    6. 'abcdef' → logprob: -15.25002384185791
    7. '89' → logprob: -15.75002384185791
    8. '0' → logprob: -16.250022888183594
    9. '01' → logprob: -16.875022888183594
    10. '001' → logprob: -18.250022888183594

Token 70: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -1.9361264946837764e-07
    2. '3' → logprob: -16.75
    3. '012' → logprob: -17.25
    4. '346' → logprob: -17.25
    5. '789' → logprob: -18.125
    6. '34' → logprob: -19.25
    7. '356' → logprob: -19.875
    8. '348' → logprob: -20.5
    9. '349' → logprob: -20.625
    10. '456' → logprob: -20.625

Token 71: '678' (ID: 30833)
  Prédit: '678'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '678' → logprob: -1.2352385965641588e-05
    2. '67' → logprob: -12.125012397766113
    3. '679' → logprob: -12.625012397766113
    4. '789' → logprob: -12.625012397766113
    5. '689' → logprob: -16.125011444091797
    6. '6' → logprob: -16.750011444091797
    7. '687' → logprob: -17.750011444091797
    8. 'abcdef' → logprob: -18.125011444091797
    9. 'ABC' → logprob: -19.250011444091797
    10. '89' → logprob: -19.250011444091797

Token 72: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0005482682608999312
    2. '678' → logprob: -7.625548362731934
    3. '789' → logprob: -10.125548362731934
    4. 'f' → logprob: -11.750548362731934
    5. '679' → logprob: -11.750548362731934
    6. '79' → logprob: -13.000548362731934
    7. 'abcdef' → logprob: -14.000548362731934
    8. '89' → logprob: -14.250548362731934
    9. '69' → logprob: -15.000548362731934
    10. '689' → logprob: -16.625547409057617

Token 73: 'ABC' (ID: 44197)
  Prédit: 'abcdef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdef' → logprob: -0.20141655206680298
    2. 'ABC' → logprob: -1.7014164924621582
    3. '89' → logprob: -13.076416969299316
    4. '012' → logprob: -14.826416969299316
    5. 'a' → logprob: -15.326416969299316
    6. 'abc' → logprob: -15.701416969299316
    7. 'Ab' → logprob: -16.701416015625
    8. '9' → logprob: -16.826416015625
    9. '789' → logprob: -16.826416015625
    10. 'ABCDE' → logprob: -16.826416015625

Token 74: 'DEF' (ID: 36563)
  Prédit: 'DEF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEF' → logprob: -6.704273118884885e-07
    2. ' DEF' → logprob: -14.875000953674316
    3. 'D' → logprob: -15.625000953674316
    4. 'DE' → logprob: -16.75
    5. 'FED' → logprob: -17.25
    6. 'EDF' → logprob: -18.375
    7. 'def' → logprob: -18.875
    8. 'DF' → logprob: -18.875
    9. '_DEF' → logprob: -19.25
    10. 'ABC' → logprob: -19.75

Token 75: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00014919086243025959
    2. '012' → logprob: -9.75014877319336
    3. '')' → logprob: -10.25014877319336
    4. ''
' → logprob: -10.87514877319336
    5. ''

' → logprob: -11.50014877319336
    6. 'abcdef' → logprob: -12.00014877319336
    7. ''"' → logprob: -12.12514877319336
    8. '"'' → logprob: -12.25014877319336
    9. ''''' → logprob: -12.50014877319336
    10. 'ABC' → logprob: -13.00014877319336

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2620036005973816
    2. '
' → logprob: -1.7620036602020264
    3. 'def' → logprob: -3.2620036602020264
    4. '    
' → logprob: -4.137003421783447
    5. '<|end|>' → logprob: -6.637003421783447
    6. ' def' → logprob: -7.137003421783447
    7. ' 
' → logprob: -7.387003421783447
    8. ' ' → logprob: -8.387003898620605
    9. '  
' → logprob: -8.387003898620605
    10. '<|end|>' → logprob: -8.637003898620605

Token 77: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07998259365558624
    2. ' def' → logprob: -2.5799825191497803
    3. '   ' → logprob: -7.454982757568359
    4. 'value' → logprob: -7.704982757568359
    5. ' value' → logprob: -9.70498275756836
    6. ' ' → logprob: -14.32998275756836
    7. '    
' → logprob: -14.45498275756836
    8. ' 
' → logprob: -15.70498275756836
    9. '	def' → logprob: -15.82998275756836
    10. '@' → logprob: -15.95498275756836

Token 78: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -9.245724504580721e-05
    2. '__' → logprob: -10.375092506408691
    3. ' ' → logprob: -10.500092506408691
    4. ' _' → logprob: -11.125092506408691
    5. ' init' → logprob: -12.000092506408691
    6. ' ' → logprob: -12.375092506408691
    7. ' def' → logprob: -12.500092506408691
    8. '_init' → logprob: -13.000092506408691
    9. '_' → logprob: -13.875092506408691
    10. ' validate' → logprob: -14.375092506408691

Token 79: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0325924449716695e-05
    2. 'slots' → logprob: -11.62501049041748
    3. 'eq' → logprob: -14.62501049041748
    4. 'new' → logprob: -14.75001049041748
    5. ' init' → logprob: -15.50001049041748
    6. '_init' → logprob: -16.625009536743164
    7. 'slot' → logprob: -18.625009536743164
    8. '   ' → logprob: -18.875009536743164
    9. 'repr' → logprob: -18.875009536743164
    10. 'name' → logprob: -19.000009536743164

Token 80: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.048965662717819214
    2. '__' → logprob: -3.0489656925201416
    3. '__(
' → logprob: -8.048965454101562
    4. '__((' → logprob: -10.048965454101562
    5. '__('' → logprob: -11.923965454101562
    6. '__(*' → logprob: -12.173965454101562
    7. '___' → logprob: -13.923965454101562
    8. '(' → logprob: -14.173965454101562
    9. '__("' → logprob: -14.423965454101562
    10. '(self' → logprob: -14.548965454101562

Token 81: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00034595211036503315
    2. ' self' → logprob: -8.000346183776855
    3. 'value' → logprob: -11.500346183776855
    4. '
' → logprob: -15.625346183776855
    5. ' ' → logprob: -17.62534523010254
    6. '(self' → logprob: -17.75034523010254
    7. ' value' → logprob: -17.75034523010254
    8. '   ' → logprob: -17.87534523010254
    9. ')' → logprob: -19.00034523010254
    10. '	self' → logprob: -19.50034523010254

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016308369114995003
    2. ' ,' → logprob: -4.141308307647705
    3. 'value' → logprob: -9.016308784484863
    4. ',value' → logprob: -9.516308784484863
    5. 'self' → logprob: -9.641308784484863
    6. ' value' → logprob: -12.016308784484863
    7. '_value' → logprob: -12.516308784484863
    8. ')' → logprob: -13.516308784484863
    9. '):' → logprob: -14.391308784484863
    10. '_,' → logprob: -14.516308784484863

Token 83: ' hex' (ID: 26157)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6964371800422668
    2. 'value' → logprob: -0.6964371800422668
    3. 'self' → logprob: -6.071437358856201
    4. ' self' → logprob: -6.946437358856201
    5. ' hex' → logprob: -12.071436882019043
    6. 'hex' → logprob: -12.696436882019043
    7. '   ' → logprob: -13.821436882019043
    8. 'code' → logprob: -14.571436882019043
    9. ' ' → logprob: -14.696436882019043
    10. 'val' → logprob: -14.696436882019043

Token 84: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.525766909122467
    2. ':' → logprob: -1.5257668495178223
    3. '_value' → logprob: -2.7757668495178223
    4. 'str' → logprob: -3.0257668495178223
    5. '_string' → logprob: -3.0257668495178223
    6. ':str' → logprob: -4.525766849517822
    7. ')' → logprob: -5.150766849517822
    8. '):' → logprob: -5.650766849517822
    9. '_char' → logprob: -5.900766849517822
    10. 'string' → logprob: -5.900766849517822

Token 85: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010573413455858827
    2. '):' → logprob: -7.001057147979736
    3. ':str' → logprob: -8.876057624816895
    4. ' :' → logprob: -12.126057624816895
    5. ')' → logprob: -14.626057624816895
    6. ' ):' → logprob: -16.001056671142578
    7. '_:' → logprob: -17.876056671142578
    8. '):
' → logprob: -18.001056671142578
    9. '():' → logprob: -18.001056671142578
    10. '}:' → logprob: -18.501056671142578

Token 86: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.20151838660240173
    2. ' str' → logprob: -1.7015184164047241
    3. ')' → logprob: -9.326518058776855
    4. '[str' → logprob: -12.451518058776855
    5. ':str' → logprob: -12.576518058776855
    6. ' ' → logprob: -12.826518058776855
    7. ' Optional' → logprob: -13.326518058776855
    8. 'Optional' → logprob: -13.326518058776855
    9. '   ' → logprob: -14.326518058776855
    10. 's' → logprob: -14.451518058776855

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01841365359723568
    2. ')' → logprob: -4.018413543701172
    3. ' ):' → logprob: -9.143413543701172
    4. ':' → logprob: -9.268413543701172
    5. '):
' → logprob: -9.768413543701172
    6. '   ' → logprob: -12.893413543701172
    7. ' )' → logprob: -13.518413543701172
    8. '):
' → logprob: -15.393413543701172
    9. ')->' → logprob: -15.393413543701172
    10. ' ' → logprob: -15.643413543701172

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013524403038900346
    2. '   ' → logprob: -10.37513542175293
    3. ' if' → logprob: -10.87513542175293
    4. '    ' → logprob: -11.00013542175293
    5. ' ' → logprob: -11.12513542175293
    6. '      ' → logprob: -11.12513542175293
    7. ')' → logprob: -11.37513542175293
    8. '        ' → logprob: -11.87513542175293
    9. ':' → logprob: -12.75013542175293
    10. 'if' → logprob: -12.87513542175293

Token 89: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1780073195695877
    2. ' if' → logprob: -1.9280073642730713
    3. ' hex' → logprob: -4.553007125854492
    4. 'if' (adapté à ' if') → logprob: -5.303007125854492
    5. ' assert' → logprob: -6.803007125854492
    6. '        ' → logprob: -8.053007125854492
    7. 'assert' → logprob: -8.303007125854492
    8. 'hex' → logprob: -9.053007125854492
    9. ' self' → logprob: -9.178007125854492
    10. 'self' → logprob: -10.178007125854492

Token 90: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.014691432937979698
    2. ' not' → logprob: -4.264691352844238
    3. ' hex' → logprob: -7.764691352844238
    4. 'len' → logprob: -9.264691352844238
    5. ' ' → logprob: -12.389691352844238
    6. '(len' → logprob: -13.389691352844238
    7. 'not' → logprob: -13.389691352844238
    8. '	len' → logprob: -14.389691352844238
    9. 'hex' → logprob: -15.139691352844238
    10. ' any' → logprob: -15.639691352844238

Token 91: '(hex' (ID: 99522)
  Prédit: '(hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hex' → logprob: -2.248469718324486e-05
    2. '(' → logprob: -10.875022888183594
    3. 'hex' → logprob: -12.625022888183594
    4. ' (' → logprob: -16.500022888183594
    5. ' hex' → logprob: -16.750022888183594
    6. '(h' → logprob: -19.625022888183594
    7. '(hist' → logprob: -19.625022888183594
    8. '_hex' → logprob: -19.875022888183594
    9. '(heap' → logprob: -20.125022888183594
    10. '.hex' → logprob: -20.125022888183594

Token 92: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.9385402993066236e-05
    2. '_' → logprob: -10.875019073486328
    3. ')' → logprob: -15.500019073486328
    4. '_)' → logprob: -16.250019073486328
    5. '_s' → logprob: -16.375019073486328
    6. '_STR' → logprob: -17.000019073486328
    7. 'str' → logprob: -17.625019073486328
    8. '_st' → logprob: -18.000019073486328
    9. ' _' → logprob: -18.375019073486328
    10. '```' → logprob: -18.750019073486328

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11799237877130508
    2. ' !=' → logprob: -2.367992401123047
    3. ' )' → logprob: -4.367992401123047
    4. '!=' → logprob: -5.992992401123047
    5. ')!=' → logprob: -6.242992401123047
    6. ' not' → logprob: -7.742992401123047
    7. 'not' → logprob: -10.367992401123047
    8. ' ' → logprob: -10.492992401123047
    9. ' ==' → logprob: -12.367992401123047
    10. '<|end|>' → logprob: -13.242992401123047

Token 94: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.03746235370635986
    2. '!=' → logprob: -3.5374622344970703
    3. ' not' → logprob: -5.03746223449707
    4. 'not' → logprob: -7.28746223449707
    5. ')' → logprob: -7.91246223449707
    6. ' ' → logprob: -9.28746223449707
    7. ')!=' → logprob: -10.53746223449707
    8. ' )' → logprob: -11.28746223449707
    9. '()!=' → logprob: -12.66246223449707
    10. ' ==' → logprob: -13.28746223449707

Token 95: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1602245420217514
    2. '2' → logprob: -1.9102245569229126
    3. ' ' → logprob: -15.285224914550781
    4. '1' → logprob: -17.03522491455078
    5. '```' → logprob: -17.16022491455078
    6. ' two' → logprob: -18.78522491455078
    7. '16' → logprob: -18.97272491455078
    8. '6' → logprob: -19.03522491455078
    9. '3' → logprob: -19.16022491455078
    10. '  ' → logprob: -19.28522491455078

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '```' → logprob: -16.062658309936523
    4. '   ' → logprob: -16.250158309936523
    5. '1' → logprob: -16.812658309936523
    6. '۲' → logprob: -17.437658309936523
    7. '  ' → logprob: -17.937658309936523
    8. '２' → logprob: -18.062658309936523
    9. '           ' → logprob: -18.312658309936523
    10. '=' → logprob: -18.437658309936523

Token 97: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0023343784268945456
    2. 'or' → logprob: -6.8773345947265625
    3. '<|end|>' → logprob: -7.6273345947265625
    4. ' and' → logprob: -7.8773345947265625
    5. ':' → logprob: -7.8773345947265625
    6. 'and' → logprob: -10.252334594726562
    7. ' ' → logprob: -11.627334594726562
    8. ')' → logprob: -12.127334594726562
    9. '<|end|>' → logprob: -13.127334594726562
    10. '	or' → logprob: -13.627334594726562

Token 98: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1853087842464447
    2. ' or' → logprob: -1.935308814048767
    3. ' raise' → logprob: -4.185308933258057
    4. ' and' → logprob: -5.185308933258057
    5. 'raise' → logprob: -6.310308933258057
    6. '            ' → logprob: -6.935308933258057
    7. '          ' → logprob: -8.310308456420898
    8. ',' → logprob: -9.185308456420898
    9. ':' → logprob: -9.310308456420898
    10. ' ' → logprob: -9.310308456420898

Token 99: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.03854229673743248
    2. 'raise' (adapté à ' raise') → logprob: -3.2885422706604004
    3. '           ' → logprob: -8.163542747497559
    4. '            ' → logprob: -8.913542747497559
    5. '	raise' → logprob: -11.038542747497559
    6. '
' → logprob: -11.163542747497559
    7. '               ' → logprob: -11.288542747497559
    8. '                ' → logprob: -11.788542747497559
    9. ' 
' → logprob: -11.913542747497559
    10. '_raise' → logprob: -12.038542747497559

Token 100: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.001170460251159966
    2. 'Value' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.37617015838623
    4. ' Val' → logprob: -17.251171112060547
    5. '	Value' → logprob: -18.501171112060547
    6. ' value' → logprob: -18.876171112060547
    7. '_value' → logprob: -19.501171112060547
    8. 'value' → logprob: -20.126171112060547
    9. '_Value' → logprob: -20.126171112060547
    10. 'Val' → logprob: -20.876171112060547

Token 101: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0002615742268972099
    2. 'rror' → logprob: -8.250261306762695
    3. 'r' → logprob: -16.000261306762695
    4. 'SError' → logprob: -16.375261306762695
    5. 'error' → logprob: -17.000261306762695
    6. 'LError' → logprob: -17.250261306762695
    7. 'ror' → logprob: -17.500261306762695
    8. 'n' → logprob: -17.750261306762695
    9. 'f' → logprob: -17.750261306762695
    10. 'Value' → logprob: -18.250261306762695

Token 102: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006827684701420367
    2. '(' → logprob: -7.500682830810547
    3. '('' → logprob: -9.000682830810547
    4. '(f' → logprob: -12.000682830810547
    5. '(
' → logprob: -15.750682830810547
    6. '("'' → logprob: -16.000682830810547
    7. '(

' → logprob: -19.500682830810547
    8. '(",' → logprob: -19.500682830810547
    9. '("")' → logprob: -20.625682830810547
    10. '(":' → logprob: -20.750682830810547

Token 103: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002605029381811619
    2. '("' → logprob: -6.127604961395264
    3. ''' → logprob: -8.002605438232422
    4. '"The' → logprob: -10.252605438232422
    5. '"In' → logprob: -10.377605438232422
    6. ' "' → logprob: -12.752605438232422
    7. '('' → logprob: -12.877605438232422
    8. '"La' → logprob: -13.002605438232422
    9. '"L' → logprob: -13.127605438232422
    10. '"A' → logprob: -13.627605438232422

Token 104: 'Hex' (ID: 26992)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22985385358333588
    2. 'Hex' → logprob: -1.979853868484497
    3. ''' → logprob: -3.479853868484497
    4. 'hex' → logprob: -3.729853868484497
    5. 'Invalid' → logprob: -4.854853630065918
    6. ' hex' → logprob: -6.354853630065918
    7. 'Le' → logprob: -7.229853630065918
    8. '"H' → logprob: -7.354853630065918
    9. '"La' → logprob: -7.854853630065918
    10. 'La' → logprob: -8.229853630065918

Token 105: 'Music' (ID: 28138)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.003695443505421281
    2. 'Music' → logprob: -5.628695487976074
    3. 'str' → logprob: -10.128695487976074
    4. '_' → logprob: -11.253695487976074
    5. '_s' → logprob: -11.253695487976074
    6. '_music' → logprob: -11.253695487976074
    7. 'Str' → logprob: -11.878695487976074
    8. 'Mus' → logprob: -13.128695487976074
    9. ' Music' → logprob: -13.628695487976074
    10. 'String' → logprob: -14.253695487976074

Token 106: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -2.117345684382599e-05
    2. 'Sym' → logprob: -11.500020980834961
    3. 'Str' → logprob: -12.250020980834961
    4. 'String' → logprob: -13.250020980834961
    5. ' Symbol' → logprob: -14.125020980834961
    6. 'symbol' → logprob: -14.125020980834961
    7. 'S' → logprob: -14.250020980834961
    8. 'Symbols' → logprob: -14.500020980834961
    9. '_symbol' → logprob: -14.875020980834961
    10. 'ymbol' → logprob: -14.875020980834961

Token 107: ' requires' (ID: 10860)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4804207980632782
    2. ' string' → logprob: -2.2304208278656006
    3. ' value' → logprob: -2.6054208278656006
    4. ' hex' → logprob: -2.6054208278656006
    5. ' doit' → logprob: -2.8554208278656006
    6. ' must' → logprob: -3.6054208278656006
    7. 'value' → logprob: -4.3554205894470215
    8. 'string' → logprob: -4.8554205894470215
    9. ' requires' → logprob: -5.2304205894470215
    10. 'hex' → logprob: -5.3554205894470215

Token 108: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3406427800655365
    2. 'a' → logprob: -1.5906428098678589
    3. ' exactly' → logprob: -3.0906426906585693
    4. ' ' → logprob: -3.7156426906585693
    5. '2' → logprob: -4.715642929077148
    6. 'exact' → logprob: -5.465642929077148
    7. ' two' → logprob: -6.465642929077148
    8. ' exactement' → logprob: -9.340642929077148
    9. ' deux' → logprob: -9.590642929077148
    10. ' une' → logprob: -9.590642929077148

Token 109: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6017404198646545
    2. '2' → logprob: -0.9767404198646545
    3. 'exact' → logprob: -2.7267403602600098
    4. ' exactly' → logprob: -5.35174036026001
    5. 'hex' → logprob: -5.97674036026001
    6. ' a' → logprob: -6.47674036026001
    7. ' ' → logprob: -7.35174036026001
    8. 'two' → logprob: -7.47674036026001
    9. ''' → logprob: -10.476740837097168
    10. '"' → logprob: -10.851740837097168

Token 110: ' chars' (ID: 47991)
  Prédit: ' characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.02183050848543644
    2. ' hex' → logprob: -4.1468305587768555
    3. 'characters' → logprob: -5.3968305587768555
    4. ' hexadecimal' → logprob: -7.5218305587768555
    5. 'hex' → logprob: -8.021830558776855
    6. '-character' → logprob: -8.396830558776855
    7. ' chars' → logprob: -9.896830558776855
    8. ' caracteres' → logprob: -10.021830558776855
    9. 'chars' → logprob: -10.146830558776855
    10. ' ' → logprob: -12.521830558776855

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.459759384393692
    2. '")' → logprob: -1.0847593545913696
    3. ' for' → logprob: -3.834759473800659
    4. ' but' → logprob: -5.45975923538208
    5. 'hex' → logprob: -6.33475923538208
    6. ' hex' → logprob: -7.08475923538208
    7. ':' → logprob: -7.58475923538208
    8. 'for' → logprob: -7.83475923538208
    9. '")
' → logprob: -8.209759712219238
    10. '"' → logprob: -9.209759712219238

Token 112: ' got' (ID: 3508)
  Prédit: ' got'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' got' → logprob: -0.05051595717668533
    2. 'got' → logprob: -3.05051589012146
    3. ' but' → logprob: -6.550516128540039
    4. ' received' → logprob: -7.800516128540039
    5. 'received' → logprob: -10.550516128540039
    6. ' not' → logprob: -10.550516128540039
    7. 'but' → logprob: -11.050516128540039
    8. ' found' → logprob: -11.425516128540039
    9. ' ' → logprob: -13.300516128540039
    10. 'Got' → logprob: -13.300516128540039

Token 113: ' '{' (ID: 24918)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.21649867296218872
    2. ' '{' → logprob: -1.716498613357544
    3. '{' → logprob: -4.341498851776123
    4. ''{' → logprob: -6.341498851776123
    5. ' ' → logprob: -9.466498374938965
    6. ' '' → logprob: -10.091498374938965
    7. ':' → logprob: -10.966498374938965
    8. ' len' → logprob: -10.966498374938965
    9. ''' → logprob: -10.966498374938965
    10. '"{' → logprob: -11.716498374938965

Token 114: 'hex' (ID: 22803)
  Prédit: 'hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hex' → logprob: -3.79811754100956e-05
    2. ' hex' → logprob: -10.250038146972656
    3. '{' → logprob: -13.000038146972656
    4. '(hex' → logprob: -15.125038146972656
    5. '.hex' → logprob: -17.250038146972656
    6. '```' → logprob: -19.250038146972656
    7. 'len' → logprob: -19.500038146972656
    8. '
' → logprob: -20.000038146972656
    9. '_hex' → logprob: -20.250038146972656
    10. 'he' → logprob: -21.125038146972656

Token 115: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0002141458389814943
    2. 'str' → logprob: -8.625214576721191
    3. 'Str' → logprob: -10.500214576721191
    4. '_' → logprob: -13.125214576721191
    5. '_s' → logprob: -13.625214576721191
    6. '_STR' → logprob: -14.250214576721191
    7. ')' → logprob: -14.375214576721191
    8. '[str' → logprob: -15.250214576721191
    9. '_Str' → logprob: -15.250214576721191
    10. '{' → logprob: -15.375214576721191

Token 116: '}'' (ID: 24321)
  Prédit: '}''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.43214544653892517
    2. ''' → logprob: -1.1821454763412476
    3. '')"' → logprob: -4.182145595550537
    4. '')' → logprob: -4.307145595550537
    5. ')'' → logprob: -4.432145595550537
    6. '}')' → logprob: -6.307145595550537
    7. ''"' → logprob: -7.557145595550537
    8. ''")
' → logprob: -7.682145595550537
    9. ']'' → logprob: -8.432145118713379
    10. '}' → logprob: -8.557145118713379

Token 117: '")
' (ID: 1896)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.5662533044815063
    2. '')")
' → logprob: -1.4412533044815063
    3. '')' → logprob: -2.316253185272217
    4. ''")
' → logprob: -3.191253185272217
    5. ')")' → logprob: -3.816253185272217
    6. '")' → logprob: -4.191253185272217
    7. '")
' → logprob: -4.441253185272217
    8. '')"' → logprob: -6.066253185272217
    9. ''' → logprob: -6.316253185272217
    10. '')
' → logprob: -6.441253185272217

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.874882430769503e-05
    2. ' if' → logprob: -10.375079154968262
    3. '<|end|>' → logprob: -11.000079154968262
    4. '        
' → logprob: -11.625079154968262
    5. '
' → logprob: -11.875079154968262
    6. '      ' → logprob: -12.250079154968262
    7. '   ' → logprob: -13.125079154968262
    8. ',' → logprob: -13.500079154968262
    9. ' for' → logprob: -13.750079154968262
    10. 'if' → logprob: -14.000079154968262

Token 119: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029395880177617073
    2. ' if' → logprob: -3.904395818710327
    3. ' for' → logprob: -5.279396057128906
    4. 'if' (adapté à ' if') → logprob: -6.279396057128906
    5. 'for' → logprob: -6.904396057128906
    6. ' hex' → logprob: -7.654396057128906
    7. 'hex' → logprob: -9.654396057128906
    8. '        
' → logprob: -9.779396057128906
    9. ' s' → logprob: -10.029396057128906
    10. ')' → logprob: -10.529396057128906

Token 120: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.4139650762081146
    2. ' not' → logprob: -1.163965106010437
    3. 'any' → logprob: -4.038965225219727
    4. ' hex' → logprob: -4.913965225219727
    5. 'not' → logprob: -6.538965225219727
    6. 'hex' → logprob: -8.038965225219727
    7. ' all' → logprob: -14.413965225219727
    8. ' ' → logprob: -14.913965225219727
    9. '(any' → logprob: -14.913965225219727
    10. '任何' → logprob: -15.851465225219727

Token 121: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005359567701816559
    2. '(ch' → logprob: -5.255359649658203
    3. '(char' → logprob: -9.005359649658203
    4. '(' → logprob: -13.005359649658203
    5. '((' → logprob: -15.005359649658203
    6. '(h' → logprob: -15.505359649658203
    7. 'c' → logprob: -15.505359649658203
    8. '(
' → logprob: -16.755359649658203
    9. '(hex' → logprob: -17.005359649658203
    10. 'ch' → logprob: -17.380359649658203

Token 122: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0014480947284027934
    2. 'not' → logprob: -7.251448154449463
    3. '.upper' → logprob: -7.251448154449463
    4. ' for' → logprob: -10.501447677612305
    5. ' ' → logprob: -14.626447677612305
    6. '.not' → logprob: -15.751447677612305
    7. '	not' → logprob: -16.001447677612305
    8. ')' → logprob: -16.126447677612305
    9. 'n' → logprob: -16.751447677612305
    10. '.lower' → logprob: -16.751447677612305

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13692693412303925
    2. ' for' → logprob: -2.7619268894195557
    3. 'in' → logprob: -3.2619268894195557
    4. 'self' → logprob: -3.8869268894195557
    5. 'for' → logprob: -5.511927127838135
    6. ' self' → logprob: -6.511927127838135
    7. ' ' → logprob: -8.511926651000977
    8. 'Hex' → logprob: -9.136926651000977
    9. 'import' → logprob: -10.761926651000977
    10. 's' → logprob: -11.136926651000977

Token 124: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005854012910276651
    2. ' self' → logprob: -5.38085412979126
    3. 'Hex' → logprob: -6.75585412979126
    4. ' Hex' → logprob: -10.130853652954102
    5. '
' → logprob: -11.255853652954102
    6. '   ' → logprob: -12.505853652954102
    7. '(self' → logprob: -12.755853652954102
    8. ' ' → logprob: -13.130853652954102
    9. 'hex' → logprob: -13.880853652954102
    10. 'Self' → logprob: -13.880853652954102

Token 125: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.001026735408231616
    2. 'VALID' → logprob: -7.251026630401611
    3. '.' → logprob: -8.12602710723877
    4. '.__' → logprob: -11.25102710723877
    5. '.INVALID' → logprob: -12.62602710723877
    6. ' .' → logprob: -13.37602710723877
    7. '._' → logprob: -14.25102710723877
    8. '.VALUE' → logprob: -14.62602710723877
    9. '
' → logprob: -15.12602710723877
    10. 'V' → logprob: -15.25102710723877

Token 126: 'AL' (ID: 1483)
  Prédit: 'AL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AL' → logprob: -1.3856492842023727e-06
    2. 'VALID' → logprob: -14.000000953674316
    3. 'alid' → logprob: -14.625000953674316
    4. 'Al' → logprob: -17.250001907348633
    5. 'АЛ' → logprob: -17.625001907348633
    6. ' AL' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. 'A' → logprob: -19.625001907348633
    9. 'ALUE' → logprob: -19.625001907348633
    10. '_VALID' → logprob: -19.750001907348633

Token 127: 'ID' (ID: 1240)
  Prédit: 'ID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ID' → logprob: -1.981667537620524e-06
    2. 'AL' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.250001907348633
    4. 'id' → logprob: -17.000001907348633
    5. 'AD' → logprob: -17.875001907348633
    6. '_ID' → logprob: -18.125001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'ИД' → logprob: -19.250001907348633
    9. '  ' → logprob: -19.375001907348633
    10. '	ID' → logprob: -19.375001907348633

Token 128: '_HE' (ID: 16695)
  Prédit: '_HE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_HE' → logprob: -7.941850526549388e-06
    2. 'HEX' → logprob: -12.125007629394531
    3. '_hex' → logprob: -13.750007629394531
    4. '_H' → logprob: -14.250007629394531
    5. 'Hex' → logprob: -14.750007629394531
    6. 'HE' → logprob: -16.62500762939453
    7. '```' → logprob: -17.37500762939453
    8. '_' → logprob: -17.75000762939453
    9. '   ' → logprob: -17.75000762939453
    10. '.Hex' → logprob: -17.75000762939453

Token 129: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005892414133995771
    2. 'EX' → logprob: -5.380892276763916
    3. 'CH' → logprob: -8.005892753601074
    4. 'HEX' → logprob: -8.130892753601074
    5. '_CH' → logprob: -8.505892753601074
    6. '_CHAR' → logprob: -9.005892753601074
    7. 'C' → logprob: -9.505892753601074
    8. '_chars' → logprob: -10.130892753601074
    9. 'ex' → logprob: -10.630892753601074
    10. 'x' → logprob: -10.755892753601074

Token 130: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -6.134509021649137e-05
    2. '_HE' → logprob: -9.75006103515625
    3. '_CHAR' → logprob: -13.50006103515625
    4. 'CH' → logprob: -14.37506103515625
    5. '_C' → logprob: -15.12506103515625
    6. '_' → logprob: -15.62506103515625
    7. '_H' → logprob: -15.75006103515625
    8. ' CH' → logprob: -16.12506103515625
    9. ' _' → logprob: -16.25006103515625
    10. '   ' → logprob: -17.00006103515625

Token 131: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.00015681622608099133
    2. 'S' → logprob: -8.87515640258789
    3. 'ars' → logprob: -12.00015640258789
    4. 'AR' → logprob: -12.62515640258789
    5. 'RS' → logprob: -13.00015640258789
    6. '   ' → logprob: -13.25015640258789
    7. '```' → logprob: -14.25015640258789
    8. '
' → logprob: -14.37515640258789
    9. '_' → logprob: -15.12515640258789
    10. '

' → logprob: -15.25015640258789

Token 132: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0623091422021389
    2. 'for' → logprob: -2.8123090267181396
    3. ')' → logprob: -8.687309265136719
    4. ' ' → logprob: -8.812309265136719
    5. ' or' → logprob: -12.312309265136719
    6. '.upper' → logprob: -12.562309265136719
    7. ' c' → logprob: -12.687309265136719
    8. ' )' → logprob: -13.187309265136719
    9. 'c' → logprob: -13.187309265136719
    10. '    ' → logprob: -13.812309265136719

Token 133: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.030082061886787415
    2. 'c' → logprob: -3.5300819873809814
    3. ' hex' → logprob: -8.155081748962402
    4. 'hex' → logprob: -10.530081748962402
    5. '	c' → logprob: -11.655081748962402
    6. ')c' → logprob: -12.405081748962402
    7. '_c' → logprob: -13.655081748962402
    8. ' ' → logprob: -13.905081748962402
    9. '(c' → logprob: -14.280081748962402
    10. 'Hex' → logprob: -15.155081748962402

Token 134: ' in' (ID: 306)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5973613858222961
    2. 'c' → logprob: -0.8473613858222961
    3. ' in' → logprob: -3.9723613262176514
    4. 'in' → logprob: -6.4723615646362305
    5. ' ' → logprob: -7.4723615646362305
    6. '  ' → logprob: -9.84736156463623
    7. '	c' → logprob: -9.97236156463623
    8. '_c' → logprob: -10.34736156463623
    9. 's' → logprob: -10.84736156463623
    10. '_' → logprob: -11.22236156463623

Token 135: ' hex' (ID: 26157)
  Prédit: 'hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hex' → logprob: -0.020581595599651337
    2. ' hex' → logprob: -3.8955814838409424
    3. '   ' → logprob: -11.145581245422363
    4. '(hex' → logprob: -11.270581245422363
    5. 'c' → logprob: -11.895581245422363
    6. ' ' → logprob: -13.395581245422363
    7. ')' → logprob: -13.645581245422363
    8. '.hex' → logprob: -14.520581245422363
    9. '  ' → logprob: -14.645581245422363
    10. '
' → logprob: -14.895581245422363

Token 136: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.988221684878226e-06
    2. '_STR' → logprob: -12.875006675720215
    3. 'str' → logprob: -13.375006675720215
    4. ')' → logprob: -14.625006675720215
    5. 'Str' → logprob: -14.625006675720215
    6. '   ' → logprob: -14.875006675720215
    7. '_chars' → logprob: -14.875006675720215
    8. '```' → logprob: -15.500006675720215
    9. '
' → logprob: -15.625006675720215
    10. '-str' → logprob: -16.62500762939453

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01770816370844841
    2. '.upper' → logprob: -4.1427083015441895
    3. '):
' → logprob: -6.8927083015441895
    4. ' ):' → logprob: -7.3927083015441895
    5. ')' → logprob: -11.392707824707031
    6. 'upper' → logprob: -11.642707824707031
    7. ':' → logprob: -12.267707824707031
    8. 'uppercase' → logprob: -12.642707824707031
    9. '_upper' → logprob: -12.767707824707031
    10. ' ):
' → logprob: -13.142707824707031

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0104127312079072
    2. '               ' → logprob: -5.135412693023682
    3. '            ' → logprob: -5.885412693023682
    4. '          ' → logprob: -7.885412693023682
    5. ' raise' → logprob: -8.01041316986084
    6. ':
' → logprob: -9.01041316986084
    7. '            
' → logprob: -9.01041316986084
    8. '              ' → logprob: -9.26041316986084
    9. '             ' → logprob: -9.51041316986084
    10. '
' → logprob: -9.63541316986084

Token 139: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0019799028523266315
    2. 'raise' (adapté à ' raise') → logprob: -6.251979827880859
    3. '           ' → logprob: -10.75197982788086
    4. '	raise' → logprob: -10.75197982788086
    5. '            ' → logprob: -12.12697982788086
    6. '_raise' → logprob: -13.75197982788086
    7. 'Raise' → logprob: -14.00197982788086
    8. ' Value' → logprob: -14.87697982788086
    9. '               ' → logprob: -15.50197982788086
    10. '.raise' → logprob: -15.75197982788086

Token 140: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.57594233751297
    2. 'Value' → logprob: -0.82594233751297
    3. '_value' → logprob: -13.700942039489746
    4. '_Value' → logprob: -14.325942039489746
    5. '	Value' → logprob: -14.325942039489746
    6. ' ' → logprob: -14.700942039489746
    7. '```' → logprob: -16.700942993164062
    8. '.Value' → logprob: -16.950942993164062
    9. '<Value' → logprob: -16.950942993164062
    10. ' value' → logprob: -17.325942993164062

Token 141: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00014168102643452585
    2. 'rror' → logprob: -8.875142097473145
    3. 'Value' → logprob: -13.375142097473145
    4. 'alue' → logprob: -16.125141143798828
    5. 'ation' → logprob: -17.875141143798828
    6. 'LError' → logprob: -18.375141143798828
    7. 'Output' → logprob: -18.625141143798828
    8. ' Error' → logprob: -18.625141143798828
    9. 'SError' → logprob: -18.750141143798828
    10. '	Error' → logprob: -18.750141143798828

Token 142: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.07911241054534912
    2. '("' → logprob: -2.5791125297546387
    3. '(' → logprob: -8.45411205291748
    4. '('' → logprob: -11.70411205291748
    5. '("'' → logprob: -14.07911205291748
    6. '(F' → logprob: -15.32911205291748
    7. '(
' → logprob: -15.82911205291748
    8. 'f' → logprob: -15.82911205291748
    9. '()' → logprob: -18.454113006591797
    10. '"' → logprob: -18.704113006591797

Token 143: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09478072822093964
    2. ' f' → logprob: -2.844780683517456
    3. '"' → logprob: -3.469780683517456
    4. 'Invalid' → logprob: -7.219780921936035
    5. '(f' → logprob: -8.844780921936035
    6. 'c' → logprob: -9.719780921936035
    7. ' "' → logprob: -9.844780921936035
    8. 'Hex' → logprob: -9.969780921936035
    9. ' Invalid' → logprob: -10.719780921936035
    10. 'hex' → logprob: -11.344780921936035

Token 144: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.18001489341259003
    2. 'f' → logprob: -2.9300148487091064
    3. 'Hex' → logprob: -3.0550148487091064
    4. '"' → logprob: -3.1800148487091064
    5. 'hex' → logprob: -4.8050150871276855
    6. ' f' → logprob: -5.4300150871276855
    7. ' Invalid' → logprob: -5.5550150871276855
    8. 'c' → logprob: -5.6800150871276855
    9. ' hex' → logprob: -7.0550150871276855
    10. 'invalid' → logprob: -8.055014610290527

Token 145: ' hex' (ID: 26157)
  Prédit: ' hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hex' → logprob: -0.38046228885650635
    2. ' character' → logprob: -2.005462169647217
    3. 'hex' → logprob: -2.255462169647217
    4. ' c' → logprob: -3.505462169647217
    5. 'c' → logprob: -4.005462169647217
    6. 'character' → logprob: -4.630462169647217
    7. 'char' → logprob: -4.755462169647217
    8. ' char' → logprob: -5.255462169647217
    9. ' hexadecimal' → logprob: -6.005462169647217
    10. ' characters' → logprob: -7.005462169647217

Token 146: ' chars' (ID: 47991)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.7648877501487732
    2. ' character' → logprob: -1.264887809753418
    3. 'char' → logprob: -2.264887809753418
    4. ' char' → logprob: -2.389887809753418
    5. '_char' → logprob: -3.514887809753418
    6. 'character' → logprob: -4.639887809753418
    7. 'str' → logprob: -4.889887809753418
    8. ' characters' → logprob: -6.639887809753418
    9. ' str' → logprob: -7.014887809753418
    10. ' string' → logprob: -7.014887809753418

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007898329757153988
    2. 'in' → logprob: -5.007898330688477
    3. '(c' → logprob: -7.132898330688477
    4. 'c' → logprob: -9.257898330688477
    5. ' c' → logprob: -9.257898330688477
    6. ':' → logprob: -9.507898330688477
    7. ' for' → logprob: -10.132898330688477
    8. '(s' → logprob: -10.257898330688477
    9. 'for' → logprob: -12.007898330688477
    10. ' ' → logprob: -12.132898330688477

Token 148: ' '{' (ID: 24918)
  Prédit: ' hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hex' → logprob: -0.038046542555093765
    2. 'hex' → logprob: -3.2880465984344482
    3. '(hex' → logprob: -12.788046836853027
    4. ' ' → logprob: -14.413046836853027
    5. '.hex' → logprob: -14.538046836853027
    6. '_hex' → logprob: -15.038046836853027
    7. '```' → logprob: -15.600546836853027
    8. ' hexadecimal' → logprob: -15.725546836853027
    9. 'Hex' → logprob: -16.28804588317871
    10. ' code' → logprob: -16.41304588317871

Token 149: 'hex' (ID: 22803)
  Prédit: 'hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hex' → logprob: -0.11282975226640701
    2. ' hex' → logprob: -2.2378296852111816
    3. '{' → logprob: -13.11283016204834
    4. '(hex' → logprob: -13.23783016204834
    5. '.hex' → logprob: -13.73783016204834
    6. '_hex' → logprob: -13.73783016204834
    7. 'str' → logprob: -14.73783016204834
    8. 'c' → logprob: -15.61283016204834
    9. '
' → logprob: -15.73783016204834
    10. '```' → logprob: -15.86283016204834

Token 150: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00016396844875998795
    2. 'str' → logprob: -8.750164031982422
    3. 'Str' → logprob: -13.750164031982422
    4. ')' → logprob: -13.750164031982422
    5. 'c' → logprob: -14.750164031982422
    6. 'hex' → logprob: -14.750164031982422
    7. '```' → logprob: -15.250164031982422
    8. '_c' → logprob: -15.375164031982422
    9. '_STR' → logprob: -15.500164031982422
    10. '_' → logprob: -15.750164031982422

Token 151: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25948697328567505
    2. '')' → logprob: -1.8844869136810303
    3. '')"' → logprob: -2.6344869136810303
    4. ''"' → logprob: -6.509487152099609
    5. '}'' → logprob: -7.259487152099609
    6. '')")
' → logprob: -7.384487152099609
    7. ''")
' → logprob: -7.384487152099609
    8. ''}' → logprob: -7.634487152099609
    9. '}')' → logprob: -8.13448715209961
    10. ' '' → logprob: -8.25948715209961

Token 152: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.7256413698196411
    2. '")' → logprob: -1.1006413698196411
    3. ')")
' → logprob: -2.3506412506103516
    4. '       ' → logprob: -3.2256412506103516
    5. ''")
' → logprob: -4.100641250610352
    6. ')' → logprob: -4.975641250610352
    7. '')' → logprob: -5.225641250610352
    8. '.")
' → logprob: -5.850641250610352
    9. ')")' → logprob: -5.850641250610352
    10. '')
' → logprob: -5.975641250610352

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024075270630419254
    2. '
' → logprob: -7.252407550811768
    3. 'self' → logprob: -7.627407550811768
    4. '        
' → logprob: -7.627407550811768
    5. '   ' → logprob: -8.00240707397461
    6. ' self' → logprob: -9.25240707397461
    7. '    
' → logprob: -9.37740707397461
    8. ')' → logprob: -10.25240707397461
    9. '  
' → logprob: -10.25240707397461
    10. ',' → logprob: -11.12740707397461

Token 154: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1441752016544342
    2. 'self' (adapté à ' self') → logprob: -2.0191752910614014
    3. ' self' → logprob: -6.519175052642822
    4. '        
' → logprob: -11.76917552947998
    5. 'hex' → logprob: -12.39417552947998
    6. '   ' → logprob: -12.64417552947998
    7. 'c' → logprob: -13.89417552947998
    8. '      ' → logprob: -13.89417552947998
    9. ' hex' → logprob: -13.89417552947998
    10. 's' → logprob: -14.01917552947998

Token 155: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00020818933262489736
    2. '.' → logprob: -8.625207901000977
    3. ' .' → logprob: -10.500207901000977
    4. 'value' → logprob: -14.125207901000977
    5. '.token' → logprob: -15.750207901000977
    6. ' value' → logprob: -17.125207901000977
    7. '.Value' → logprob: -18.000207901000977
    8. '.val' → logprob: -18.000207901000977
    9. ' ' → logprob: -18.500207901000977
    10. '.py' → logprob: -18.625207901000977

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '=int' → logprob: -16.751928329467773
    4. 's' → logprob: -17.626928329467773
    5. ' ' → logprob: -18.126928329467773
    6. '=

' → logprob: -18.751928329467773
    7. '＝' → logprob: -19.001928329467773
    8. '=str' → logprob: -19.126928329467773
    9. ':' → logprob: -19.376928329467773
    10. '=
' → logprob: -19.626928329467773

Token 157: ' int' (ID: 677)
  Prédit: 'hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hex' → logprob: -0.25208085775375366
    2. ' hex' → logprob: -1.5020809173583984
    3. 'int' → logprob: -9.127080917358398
    4. ' int' → logprob: -10.502080917358398
    5. ' ' → logprob: -12.002080917358398
    6. '(hex' → logprob: -12.377080917358398
    7. '   ' → logprob: -13.127080917358398
    8. '.hex' → logprob: -13.752080917358398
    9. '  ' → logprob: -15.127080917358398
    10. ' ' → logprob: -15.814580917358398

Token 158: '(hex' (ID: 99522)
  Prédit: '(hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hex' → logprob: -8.947715832618997e-05
    2. '(' → logprob: -9.375089645385742
    3. 'hex' → logprob: -12.500089645385742
    4. ' (' → logprob: -15.125089645385742
    5. '(f' → logprob: -15.750089645385742
    6. ' hex' → logprob: -15.750089645385742
    7. '.hex' → logprob: -16.375089645385742
    8. '(
' → logprob: -16.750089645385742
    9. '('' → logprob: -17.250089645385742
    10. '```' → logprob: -18.000089645385742

Token 159: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00023500648967456073
    2. 'str' → logprob: -8.375234603881836
    3. 'Str' → logprob: -12.500234603881836
    4. '_STR' → logprob: -15.250234603881836
    5. '-str' → logprob: -15.875234603881836
    6. ')' → logprob: -16.875234603881836
    7. 'f' → logprob: -17.000234603881836
    8. 'string' → logprob: -17.375234603881836
    9. '_' → logprob: -17.750234603881836
    10. '2' → logprob: -17.750234603881836

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ' ,' → logprob: -10.875027656555176
    3. '16' → logprob: -11.750027656555176
    4. '2' → logprob: -15.000027656555176
    5. ')' → logprob: -15.875027656555176
    6. '   ' → logprob: -16.25002670288086
    7. '.upper' → logprob: -17.25002670288086
    8. '```' → logprob: -17.62502670288086
    9. 'upper' → logprob: -18.25002670288086
    10. '[' → logprob: -18.31252670288086

Token 161: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'base' → logprob: -15.500006675720215
    4. '   ' → logprob: -17.0000057220459
    5. '```' → logprob: -17.8750057220459
    6. ')' → logprob: -18.1250057220459
    7. 'hex' → logprob: -18.5000057220459
    8. ' base' → logprob: -19.3750057220459
    9. '１６' → logprob: -19.5000057220459
    10. '
' → logprob: -19.7500057220459

Token 162: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. 'base' → logprob: -17.25
    4. 'hex' → logprob: -19.25
    5. ')' → logprob: -20.5
    6. '```' → logprob: -20.75
    7. '   ' → logprob: -20.75
    8. '
' → logprob: -21.375
    9. '１６' → logprob: -21.5
    10. '=' → logprob: -22.125

Token 163: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -15.500000953674316
    4. ')}' → logprob: -17.500001907348633
    5. '),' → logprob: -18.625001907348633
    6. ')return' → logprob: -18.750001907348633
    7. '))' → logprob: -18.875001907348633
    8. '}' → logprob: -19.250001907348633
    9. ')

' → logprob: -19.500001907348633
    10. ')`' → logprob: -19.625001907348633

Token 164: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1930452436208725
    2. ' def' → logprob: -2.443045139312744
    3. '   ' → logprob: -3.443045139312744
    4. ' ' → logprob: -3.693045139312744
    5. '<|end|>' → logprob: -4.193045139312744
    6. ')' → logprob: -4.443045139312744
    7. '@property' → logprob: -6.068045139312744
    8. '    
' → logprob: -7.943045139312744
    9. '@' (adapté à ' @') → logprob: -8.068045616149902
    10. '  ' → logprob: -8.193045616149902

Token 166: 'classmethod' (ID: 64680)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -4.906711546937004e-05
    2. 'staticmethod' → logprob: -10.500048637390137
    3. 'classmethod' → logprob: -10.750048637390137
    4. ' property' → logprob: -16.625049591064453
    5. 'Property' → logprob: -19.375049591064453
    6. '@property' → logprob: -20.000049591064453
    7. 'proper' → logprob: -20.250049591064453
    8. 'pro' → logprob: -20.875049591064453
    9. 'properties' → logprob: -20.875049591064453
    10. '_property' → logprob: -21.250049591064453

Token 167: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028509505093097687
    2. ' def' → logprob: -4.278509616851807
    3. '
' → logprob: -4.903509616851807
    4. '   ' → logprob: -5.028509616851807
    5. '<|end|>' → logprob: -9.153509140014648
    6. '(' → logprob: -10.278509140014648
    7. 'from' → logprob: -10.778509140014648
    8. ' ' → logprob: -10.778509140014648
    9. '    
' → logprob: -10.903509140014648
    10. '	def' → logprob: -10.903509140014648

Token 168: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036092204973101616
    2. ' def' → logprob: -5.6286091804504395
    3. '
' → logprob: -12.503609657287598
    4. '   ' → logprob: -12.503609657287598
    5. '	def' → logprob: -14.503609657287598
    6. 'de' → logprob: -15.128609657287598
    7. '(' → logprob: -15.628609657287598
    8. '_def' → logprob: -15.753609657287598
    9. '(def' → logprob: -16.00360870361328
    10. ':def' → logprob: -16.25360870361328

Token 169: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003849133790936321
    2. 'from' → logprob: -8.000385284423828
    3. ' def' → logprob: -10.000385284423828
    4. '
' → logprob: -12.625385284423828
    5. '   ' → logprob: -14.250385284423828
    6. ' ' → logprob: -16.750385284423828
    7. 'From' → logprob: -17.375385284423828
    8. ' from' → logprob: -17.625385284423828
    9. 'de' → logprob: -18.250385284423828
    10. 'classmethod' → logprob: -18.500385284423828

Token 170: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21159376204013824
    2. ' from' → logprob: -1.711593747138977
    3. ' def' → logprob: -5.0865936279296875
    4. 'def' → logprob: -5.5865936279296875
    5. 'decode' → logprob: -9.586593627929688
    6. ' decode' → logprob: -9.711593627929688
    7. 'to' → logprob: -10.461593627929688
    8. ' to' → logprob: -11.461593627929688
    9. ' is' → logprob: -12.086593627929688
    10. ' parse' → logprob: -12.461593627929688

Token 171: '_int' (ID: 12285)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.2295057475566864
    2. '_string' → logprob: -1.8545057773590088
    3. '_str' → logprob: -3.604505777359009
    4. '_hex' → logprob: -4.10450553894043
    5. '_int' → logprob: -6.35450553894043
    6. '_value' → logprob: -6.60450553894043
    7. '_byte' → logprob: -7.10450553894043
    8. '_binary' → logprob: -7.97950553894043
    9. '_bits' → logprob: -8.72950553894043
    10. '_tuple' → logprob: -9.10450553894043

Token 172: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.7491250875755213e-05
    2. 'cls' → logprob: -10.625027656555176
    3. ' cls' → logprob: -13.250027656555176
    4. '(' → logprob: -13.750027656555176
    5. '(
' → logprob: -16.00002670288086
    6. '   ' → logprob: -16.25002670288086
    7. '_cls' → logprob: -17.12502670288086
    8. '(cl' → logprob: -17.87502670288086
    9. '(clazz' → logprob: -18.37502670288086
    10. ' (' → logprob: -18.50002670288086

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029394289012998343
    2. '(cls' → logprob: -6.002939224243164
    3. ' ,' → logprob: -7.752939224243164
    4. ' (' → logprob: -11.127939224243164
    5. ' cls' → logprob: -12.377939224243164
    6. '   ' → logprob: -12.627939224243164
    7. '(' → logprob: -12.627939224243164
    8. 'cls' → logprob: -13.002939224243164
    9. ')(' → logprob: -13.127939224243164
    10. ')' → logprob: -13.627939224243164

Token 174: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4432627260684967
    2. ' value' → logprob: -1.0682626962661743
    3. ' cls' → logprob: -4.568262577056885
    4. 'cls' → logprob: -5.818262577056885
    5. 'val' → logprob: -7.818262577056885
    6. ' val' → logprob: -8.443263053894043
    7. '   ' → logprob: -8.568263053894043
    8. 'v' → logprob: -8.818263053894043
    9. ' ' → logprob: -10.193263053894043
    10. 'int' → logprob: -10.318263053894043

Token 175: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008388153510168195
    2. '):' → logprob: -7.125838756561279
    3. ')' → logprob: -10.625839233398438
    4. ':int' → logprob: -12.750839233398438
    5. '(cls' → logprob: -13.125839233398438
    6. '):
' → logprob: -13.250839233398438
    7. ',' → logprob: -13.375839233398438
    8. ' :' → logprob: -14.125839233398438
    9. '   ' → logprob: -14.750839233398438
    10. 'cls' → logprob: -15.000839233398438

Token 176: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6932845115661621
    2. ' int' → logprob: -0.6932845115661621
    3. ' ' → logprob: -9.69328498840332
    4. ')' → logprob: -9.81828498840332
    5. '   ' → logprob: -11.56828498840332
    6. ' cls' → logprob: -12.19328498840332
    7. 'cls' → logprob: -13.44328498840332
    8. '  ' → logprob: -13.56828498840332
    9. ':int' → logprob: -13.69328498840332
    10. '[int' → logprob: -14.56828498840332

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693284273147583
    2. '):' → logprob: -0.693284273147583
    3. ' ):' → logprob: -9.693284034729004
    4. '):
' → logprob: -9.943284034729004
    5. ' )' → logprob: -10.818284034729004
    6. ':' → logprob: -12.193284034729004
    7. '   ' → logprob: -13.568284034729004
    8. ')->' → logprob: -14.943284034729004
    9. '       ' → logprob: -15.193284034729004
    10. '):
' → logprob: -15.818284034729004

Token 178: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11385899037122726
    2. '):' → logprob: -2.488858938217163
    3. ')' → logprob: -3.738858938217163
    4. ' ->' → logprob: -7.863859176635742
    5. '):
' → logprob: -8.863859176635742
    6. ')->' → logprob: -9.613859176635742
    7. '   ' → logprob: -9.613859176635742
    8. '->' → logprob: -9.738859176635742
    9. ' :' → logprob: -9.988859176635742
    10. '       ' → logprob: -10.363859176635742

Token 179: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3265385329723358
    2. '"' → logprob: -1.8265385627746582
    3. ' '' → logprob: -2.326538562774658
    4. ' "' → logprob: -4.326538562774658
    5. 'Optional' → logprob: -5.326538562774658
    6. ''t' → logprob: -7.701538562774658
    7. ''T' → logprob: -7.826538562774658
    8. ' ' → logprob: -8.7015380859375
    9. ''H' → logprob: -8.7015380859375
    10. ' Optional' → logprob: -8.8265380859375

Token 180: 'Hex' (ID: 26992)
  Prédit: 'Hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hex' → logprob: -1.1472419600977446e-06
    2. ' Hex' → logprob: -13.750000953674316
    3. '_hex' → logprob: -18.500001907348633
    4. 'H' → logprob: -18.625001907348633
    5. 'hex' → logprob: -18.875001907348633
    6. '.Hex' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.750001907348633
    8. 'Hx' → logprob: -19.875001907348633
    9. '```' → logprob: -20.000001907348633
    10. 'HBox' → logprob: -20.125001907348633

Token 181: 'Music' (ID: 28138)
  Prédit: 'Music'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Music' → logprob: -3.8889261304575484e-06
    2. 'Mus' → logprob: -13.000003814697266
    3. 'M' → logprob: -14.125003814697266
    4. 'usic' → logprob: -15.000003814697266
    5. ' Music' → logprob: -16.375003814697266
    6. '_music' → logprob: -16.375003814697266
    7. 'music' → logprob: -16.750003814697266
    8. 'Hex' → logprob: -17.375003814697266
    9. '```' → logprob: -17.375003814697266
    10. 'Mu' → logprob: -18.000003814697266

Token 182: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -0.003633327316492796
    2. 'Music' → logprob: -5.628633499145508
    3. 'Sound' → logprob: -10.753633499145508
    4. 'Song' → logprob: -12.128633499145508
    5. '_symbol' → logprob: -13.503633499145508
    6. 'Sym' → logprob: -13.753633499145508
    7. 'symbol' → logprob: -13.878633499145508
    8. ' Symbol' → logprob: -14.503633499145508
    9. 'Symbols' → logprob: -14.628633499145508
    10. 'S' → logprob: -15.253633499145508

Token 183: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.700455367565155
    2. ''):' → logprob: -0.950455367565155
    3. '):' → logprob: -2.2004554271698
    4. ''):
' → logprob: -5.700455188751221
    5. ''' → logprob: -6.575455188751221
    6. ':' → logprob: -7.200455188751221
    7. '')' → logprob: -8.575455665588379
    8. ')' → logprob: -8.950455665588379
    9. '':
' → logprob: -8.950455665588379
    10. '):
' → logprob: -9.200455665588379

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005392124294303358
    2. '<|end|>' → logprob: -8.50053882598877
    3. ' if' → logprob: -9.75053882598877
    4. ' return' → logprob: -9.75053882598877
    5. '   ' → logprob: -10.12553882598877
    6. ',' → logprob: -10.25053882598877
    7. '    ' → logprob: -10.50053882598877
    8. ':' → logprob: -10.75053882598877
    9. ')' → logprob: -10.87553882598877
    10. '        
' → logprob: -11.37553882598877

Token 185: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18632258474826813
    2. ' if' → logprob: -2.3113226890563965
    3. 'if' (adapté à ' if') → logprob: -2.9363226890563965
    4. 'return' → logprob: -4.6863226890563965
    5. ' return' → logprob: -4.9363226890563965
    6. ' hex' → logprob: -7.1863226890563965
    7. 'hex' → logprob: -7.4363226890563965
    8. 'assert' → logprob: -11.561322212219238
    9. '      ' → logprob: -11.686322212219238
    10. '   ' → logprob: -11.686322212219238

Token 186: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.030052343383431435
    2. 'not' → logprob: -4.280052185058594
    3. ' value' → logprob: -4.405052185058594
    4. 'value' → logprob: -5.655052185058594
    5. ' ' → logprob: -10.280052185058594
    6. '0' → logprob: -11.655052185058594
    7. '   ' → logprob: -12.780052185058594
    8. '  ' → logprob: -14.717552185058594
    9. '	not' → logprob: -14.842552185058594
    10. '```' → logprob: -15.405052185058594

Token 187: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6120648980140686
    2. ' (' → logprob: -0.8620648980140686
    3. ' ' → logprob: -3.862064838409424
    4. '0' → logprob: -4.237064838409424
    5. ' isinstance' → logprob: -12.237065315246582
    6. '1' → logprob: -13.987065315246582
    7. '  ' → logprob: -15.487065315246582
    8. '   ' → logprob: -16.487064361572266
    9. '(cls' → logprob: -16.487064361572266
    10. ' ' → logprob: -16.987064361572266

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009130131802521646
    2. ' ' → logprob: -7.000913143157959
    3. '(' → logprob: -14.0009126663208
    4. '   ' → logprob: -15.2509126663208
    5. '1' → logprob: -15.7509126663208
    6. ' (' → logprob: -16.625913619995117
    7. '  ' → logprob: -16.750913619995117
    8. '16' → logprob: -17.563413619995117
    9. ')' → logprob: -17.750913619995117
    10. '
' → logprob: -17.875913619995117

Token 189: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4748198688030243
    2. ' <=' → logprob: -0.9748198986053467
    3. 'x' → logprob: -7.224819660186768
    4. '0' → logprob: -11.849820137023926
    5. ' ' → logprob: -12.474820137023926
    6. '...' → logprob: -13.474820137023926
    7. ')<=' → logprob: -13.849820137023926
    8. '<|end|>' → logprob: -15.849820137023926
    9. ']<=' → logprob: -15.974820137023926
    10. '```' → logprob: -15.974820137023926

Token 190: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.001170225441455841
    2. ' value' → logprob: -6.7511701583862305
    3. '	value' → logprob: -18.126171112060547
    4. ')value' → logprob: -18.126171112060547
    5. ' ' → logprob: -18.251171112060547
    6. '
' → logprob: -18.501171112060547
    7. 'alue' → logprob: -18.501171112060547
    8. 'values' → logprob: -19.126171112060547
    9. '$value' → logprob: -19.501171112060547
    10. '(value' → logprob: -19.626171112060547

Token 191: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4750503599643707
    2. '<=' → logprob: -0.9750503301620483
    3. '<' → logprob: -7.225050449371338
    4. ' <' → logprob: -8.35004997253418
    5. ' and' → logprob: -13.22504997253418
    6. 'and' → logprob: -13.22504997253418
    7. '[' → logprob: -13.47504997253418
    8. ' ' → logprob: -13.60004997253418
    9. '<int' → logprob: -14.85004997253418
    10. ' ≤' → logprob: -15.22504997253418

Token 192: ' ' (ID: 220)
  Prédit: '255'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.5998244881629944
    2. ' ' → logprob: -1.2248244285583496
    3. '0' → logprob: -1.8498244285583496
    4. '15' → logprob: -11.349824905395508
    5. '31' → logprob: -12.974824905395508
    6. '  ' → logprob: -13.474824905395508
    7. '   ' → logprob: -14.224824905395508
    8. '127' → logprob: -14.724824905395508
    9. '25' → logprob: -15.724824905395508
    10. '63' → logprob: -15.974824905395508

Token 193: '0' (ID: 15)
  Prédit: '255'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.005356837064027786
    2. '0' → logprob: -5.255356788635254
    3. ' ' → logprob: -9.005356788635254
    4. '15' → logprob: -16.00535774230957
    5. '   ' → logprob: -16.88035774230957
    6. '127' → logprob: -17.88035774230957
    7. '  ' → logprob: -18.00535774230957
    8. '31' → logprob: -18.25535774230957
    9. 'FF' → logprob: -18.50535774230957
    10. 'int' → logprob: -19.13035774230957

Token 194: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1517960956552997e-05
    2. 'xff' → logprob: -11.500011444091797
    3. '255' → logprob: -13.625011444091797
    4. 'FF' → logprob: -16.125011444091797
    5. 'X' → logprob: -17.625011444091797
    6. ')' → logprob: -17.750011444091797
    7. '0' → logprob: -18.750011444091797
    8. '```' → logprob: -18.750011444091797
    9. 'F' → logprob: -19.125011444091797
    10. 'b' → logprob: -19.250011444091797

Token 195: 'FF' (ID: 3254)
  Prédit: 'FF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FF' → logprob: -2.935296834039036e-06
    2. 'ff' → logprob: -12.75000286102295
    3. 'FFFF' → logprob: -18.625003814697266
    4. ' FF' → logprob: -19.625003814697266
    5. 'FE' → logprob: -19.750003814697266
    6. '3' → logprob: -20.750003814697266
    7. '```' → logprob: -21.375003814697266
    8. '
' → logprob: -21.875003814697266
    9. '7' → logprob: -22.250003814697266
    10. '   ' → logprob: -22.875003814697266

Token 196: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20295022428035736
    2. '):' → logprob: -1.7029502391815186
    3. ' ):
' → logprob: -6.8279500007629395
    4. ' ):' → logprob: -8.327950477600098
    5. ')' → logprob: -8.577950477600098
    6. '):
' → logprob: -10.952950477600098
    7. '):

' → logprob: -13.202950477600098
    8. ':' → logprob: -13.827950477600098
    9. ' )' → logprob: -14.077950477600098
    10. '       ' → logprob: -14.452950477600098

Token 197: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19395247101783752
    2. '           ' → logprob: -2.3189525604248047
    3. '):' → logprob: -3.1939525604248047
    4. ':' → logprob: -4.068952560424805
    5. '        ' → logprob: -4.443952560424805
    6. '):
' → logprob: -6.193952560424805
    7. ')' → logprob: -6.818952560424805
    8. ' raise' → logprob: -6.818952560424805
    9. ' ):' → logprob: -7.068952560424805
    10. ',' → logprob: -8.193952560424805

Token 198: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.31459471583366394
    2. ' raise' → logprob: -1.3145947456359863
    3. '           ' → logprob: -6.689594745635986
    4. '	raise' → logprob: -9.439594268798828
    5. '_raise' → logprob: -12.689594268798828
    6. 'Raise' → logprob: -12.814594268798828
    7. '            ' → logprob: -13.314594268798828
    8. '            
' → logprob: -15.439594268798828
    9. '               ' → logprob: -15.689594268798828
    10. '```' → logprob: -15.814594268798828

Token 199: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00861456897109747
    2. ' Value' → logprob: -4.758614540100098
    3. 'value' → logprob: -16.508615493774414
    4. '_value' → logprob: -17.008615493774414
    5. '	Value' → logprob: -17.758615493774414
    6. '_Value' → logprob: -18.133615493774414
    7. ' ' → logprob: -18.508615493774414
    8. 'Val' → logprob: -19.008615493774414
    9. '```' → logprob: -19.008615493774414
    10. ' value' → logprob: -19.258615493774414

Token 200: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.848420551046729e-05
    2. 'Value' → logprob: -9.7500581741333
    3. 'rror' → logprob: -16.500059127807617
    4. ' Error' → logprob: -16.750059127807617
    5. ' Value' → logprob: -18.500059127807617
    6. 'Warning' → logprob: -19.875059127807617
    7. '```' → logprob: -20.000059127807617
    8. 'alue' → logprob: -20.250059127807617
    9. 'Input' → logprob: -20.625059127807617
    10. 'error' → logprob: -21.500059127807617

Token 201: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.048638686537742615
    2. '(f' → logprob: -3.0486385822296143
    3. '(' → logprob: -9.923638343811035
    4. '('' → logprob: -13.173638343811035
    5. ' f' → logprob: -15.923638343811035
    6. '("'' → logprob: -16.29863929748535
    7. '(
' → logprob: -16.92363929748535
    8. ' ("' → logprob: -17.17363929748535
    9. 'f' → logprob: -17.29863929748535
    10. '       ' → logprob: -18.17363929748535

Token 202: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.56926429271698
    2. 'Value' → logprob: -1.56926429271698
    3. '"value' → logprob: -1.69426429271698
    4. ''' → logprob: -4.4442644119262695
    5. ''value' → logprob: -4.4442644119262695
    6. 'value' → logprob: -4.5692644119262695
    7. ' Value' → logprob: -5.8192644119262695
    8. ' value' → logprob: -6.1942644119262695
    9. 'Integer' → logprob: -6.9442644119262695
    10. ' "' → logprob: -7.3192644119262695

Token 203: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.22907760739326477
    2. '"' → logprob: -1.9790775775909424
    3. 'value' → logprob: -3.6040775775909424
    4. '"value' → logprob: -3.7290775775909424
    5. ''' → logprob: -4.9790778160095215
    6. 'Integer' → logprob: -5.6040778160095215
    7. ''value' → logprob: -5.6040778160095215
    8. 'Hex' → logprob: -8.229077339172363
    9. 'f' → logprob: -8.479077339172363
    10. ' value' → logprob: -8.979077339172363

Token 204: ' {' (ID: 354)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.009498230181634426
    2. ' out' → logprob: -5.509498119354248
    3. 'must' → logprob: -6.009498119354248
    4. ' not' → logprob: -6.884498119354248
    5. ' >' → logprob: -7.259498119354248
    6. ' ' → logprob: -7.259498119354248
    7. ' should' → logprob: -8.384498596191406
    8. '>' → logprob: -9.134498596191406
    9. ' >=' → logprob: -9.884498596191406
    10. '<|end|>' → logprob: -10.259498596191406

Token 205: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.04883614555001259
    2. ' value' → logprob: -3.0488362312316895
    3. '}' → logprob: -8.923835754394531
    4. 'alue' → logprob: -9.548835754394531
    5. ')' → logprob: -11.548835754394531
    6. ' ' → logprob: -12.423835754394531
    7. ' must' → logprob: -12.548835754394531
    8. ')value' → logprob: -12.673835754394531
    9. ''value' → logprob: -13.048835754394531
    10. '{' → logprob: -13.048835754394531

Token 206: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -2.129266067640856e-05
    2. ' }' → logprob: -10.875020980834961
    3. '!' → logprob: -13.375020980834961
    4. ')' → logprob: -15.750020980834961
    5. 'must' → logprob: -15.875020980834961
    6. ':' → logprob: -16.00002098083496
    7. ' must' → logprob: -16.00002098083496
    8. '```' → logprob: -16.00002098083496
    9. ' out' → logprob: -16.25002098083496
    10. '=}' → logprob: -17.37502098083496

Token 207: ' out' (ID: 842)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2576044797897339
    2. ' must' → logprob: -1.8826044797897339
    3. ' out' → logprob: -2.6326045989990234
    4. ' not' → logprob: -6.757604598999023
    5. 'must' → logprob: -6.882604598999023
    6. ' too' → logprob: -8.257604598999023
    7. ' }' → logprob: -9.007604598999023
    8. ')' → logprob: -9.132604598999023
    9. '"' → logprob: -9.382604598999023
    10. ' outside' → logprob: -9.632604598999023

Token 208: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.01407676562666893
    2. 'of' → logprob: -4.3890767097473145
    3. '<|end|>' → logprob: -7.1390767097473145
    4. '_of' → logprob: -8.514077186584473
    5. ' ' → logprob: -8.764077186584473
    6. '  ' → logprob: -8.889077186584473
    7. 'range' → logprob: -9.014077186584473
    8. ' range' → logprob: -10.014077186584473
    9. '0' → logprob: -10.889077186584473
    10. '   ' → logprob: -11.014077186584473

Token 209: ' byte' (ID: 9239)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05498248338699341
    2. ' range' → logprob: -2.9299824237823486
    3. 'byte' → logprob: -9.92998218536377
    4. 'bounds' → logprob: -10.80498218536377
    5. ' ' → logprob: -11.42998218536377
    6. '0' → logprob: -12.55498218536377
    7. ' byte' → logprob: -12.80498218536377
    8. 'rang' → logprob: -13.17998218536377
    9. 'bound' → logprob: -13.30498218536377
    10. ' bounds' → logprob: -13.55498218536377

Token 210: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12701524794101715
    2. 'range' → logprob: -2.1270153522491455
    3. '_range' → logprob: -9.752015113830566
    4. '-range' → logprob: -10.752015113830566
    5. ' ' → logprob: -12.877015113830566
    6. '范围' → logprob: -13.377015113830566
    7. ')' → logprob: -13.752015113830566
    8. '   ' → logprob: -14.752015113830566
    9. 'Range' → logprob: -14.877015113830566
    10. '	range' → logprob: -15.252015113830566

Token 211: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.026877928525209427
    2. ')' → logprob: -4.2768778800964355
    3. ')")' → logprob: -5.0268778800964355
    4. '")
' → logprob: -5.4018778800964355
    5. ')")
' → logprob: -7.4018778800964355
    6. '0' → logprob: -7.7768778800964355
    7. ':' → logprob: -9.651878356933594
    8. '.")' → logprob: -9.651878356933594
    9. ' ")' → logprob: -9.776878356933594
    10. ' )' → logprob: -9.776878356933594

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00216441391967237
    2. 'return' → logprob: -7.127164363861084
    3. ' return' → logprob: -7.752164363861084
    4. ')' → logprob: -8.002164840698242
    5. '        
' → logprob: -8.502164840698242
    6. ':' → logprob: -9.502164840698242
    7. '
' → logprob: -9.627164840698242
    8. '   ' → logprob: -10.252164840698242
    9. '):
' → logprob: -10.377164840698242
    10. ':return' → logprob: -10.502164840698242

Token 213: ' hex' (ID: 26157)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4949255883693695
    2. '       ' → logprob: -1.369925618171692
    3. ' return' → logprob: -1.994925618171692
    4. 'hex' (adapté à ' hex') → logprob: -8.994925498962402
    5. ' hex' → logprob: -9.369925498962402
    6. '
' → logprob: -11.994925498962402
    7. '	return' → logprob: -12.869925498962402
    8. '        
' → logprob: -12.869925498962402
    9. '   ' → logprob: -13.369925498962402
    10. '      ' → logprob: -13.369925498962402

Token 214: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.436450636712834e-05
    2. 'str' → logprob: -10.125094413757324
    3. '_repr' → logprob: -10.875094413757324
    4. '_string' → logprob: -11.000094413757324
    5. '_value' → logprob: -11.750094413757324
    6. '_val' → logprob: -13.000094413757324
    7. '_chars' → logprob: -13.000094413757324
    8. '_code' → logprob: -13.250094413757324
    9. 'Str' → logprob: -13.500094413757324
    10. '_' → logprob: -13.625094413757324

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868725001811981
    2. ' =' → logprob: -1.1368725299835205
    3. ')' → logprob: -14.386872291564941
    4. ' ' → logprob: -14.761872291564941
    5. 's' → logprob: -15.511872291564941
    6. '=
' → logprob: -17.136873245239258
    7. '   ' → logprob: -17.261873245239258
    8. ',' → logprob: -17.636873245239258
    9. ':' → logprob: -17.761873245239258
    10. '  ' → logprob: -18.011873245239258

Token 216: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04367108643054962
    2. 'format' → logprob: -3.543671131134033
    3. ' f' → logprob: -4.293671131134033
    4. ' format' → logprob: -9.043670654296875
    5. ''{' → logprob: -10.668670654296875
    6. '"{' → logprob: -10.918670654296875
    7. 'hex' → logprob: -11.793670654296875
    8. '{' → logprob: -14.293670654296875
    9. '	f' → logprob: -14.418670654296875
    10. '(f' → logprob: -14.668670654296875

Token 217: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.018577605485916138
    2. ''{' → logprob: -4.018577575683594
    3. '{' → logprob: -7.768577575683594
    4. 'f' → logprob: -13.018577575683594
    5. 'value' → logprob: -13.393577575683594
    6. '"' → logprob: -14.893577575683594
    7. '("{' → logprob: -15.893577575683594
    8. ' f' → logprob: -16.143577575683594
    9. 'format' → logprob: -16.143577575683594
    10. ' "{' → logprob: -16.643577575683594

Token 218: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -6.392202976712724e-06
    2. ' value' → logprob: -12.000006675720215
    3. ' ' → logprob: -17.3750057220459
    4. '   ' → logprob: -17.7500057220459
    5. 'alue' → logprob: -18.2500057220459
    6. 'val' → logprob: -18.6250057220459
    7. '0' → logprob: -18.7500057220459
    8. '  ' → logprob: -18.7500057220459
    9. '"value' → logprob: -18.7500057220459
    10. '
' → logprob: -18.8750057220459

Token 219: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.7697225252486533e-06
    2. '02' → logprob: -12.500003814697266
    3. ':X' → logprob: -17.375003814697266
    4. '2' → logprob: -17.750003814697266
    5. '0' → logprob: -18.750003814697266
    6. ' :' → logprob: -18.875003814697266
    7. '```' → logprob: -18.875003814697266
    8. '01' → logprob: -19.625003814697266
    9. '[' → logprob: -19.875003814697266
    10. ' ' → logprob: -20.375003814697266

Token 220: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: 0.0
    2. ' ' → logprob: -22.125
    3. '>' → logprob: -25.625
    4. '0' → logprob: -26.0
    5. '```' → logprob: -26.375
    6. 'X' → logprob: -26.5
    7. '}' → logprob: -27.5
    8. '`' → logprob: -27.625
    9. '002' → logprob: -27.625
    10. '"' → logprob: -27.75

Token 221: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: 0.0
    2. 'x' → logprob: -17.0
    3. ' X' → logprob: -17.25
    4. '02' → logprob: -17.875
    5. '```' → logprob: -20.25
    6. '}' → logprob: -20.25
    7. 'uppercase' → logprob: -20.625
    8. '

' → logprob: -21.0
    9. '"' → logprob: -21.375
    10. '0' → logprob: -21.625

Token 222: '}"
' (ID: 26189)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -2.6656825866666622e-05
    2. '}' → logprob: -11.00002670288086
    3. ' }' → logprob: -12.25002670288086
    4. '}"
' → logprob: -12.87502670288086
    5. '"' → logprob: -14.25002670288086
    6. '}")' → logprob: -14.37502670288086
    7. '"}' → logprob: -14.75002670288086
    8. ')"' → logprob: -14.75002670288086
    9. '}".' → logprob: -15.00002670288086
    10. '}"

' → logprob: -16.37502670288086

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007407767116092145
    2. 'return' → logprob: -7.500741004943848
    3. ' return' → logprob: -8.625741004943848
    4. '
' → logprob: -12.750741004943848
    5. ')' → logprob: -13.250741004943848
    6. '   ' → logprob: -14.000741004943848
    7. '	' → logprob: -14.250741004943848
    8. ',' → logprob: -14.250741004943848
    9. '	return' → logprob: -15.125741004943848
    10. '<|end|>' → logprob: -15.125741004943848

Token 224: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006730883847922087
    2. '       ' → logprob: -5.256731033325195
    3. ' return' → logprob: -6.506731033325195
    4. '
' → logprob: -13.756731033325195
    5. '	return' → logprob: -13.756731033325195
    6. ':return' → logprob: -15.881731033325195
    7. '   ' → logprob: -16.256731033325195
    8. ')return' → logprob: -16.256731033325195
    9. '{return' → logprob: -16.506731033325195
    10. '	' → logprob: -18.006731033325195

Token 225: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.16022412478923798
    2. ' cls' → logprob: -1.9102240800857544
    3. '(cls' → logprob: -19.03522491455078
    4. 'cl' → logprob: -22.03522491455078
    5. 'Hex' → logprob: -22.28522491455078
    6. '.cls' → logprob: -22.66022491455078
    7. '   ' → logprob: -22.78522491455078
    8. 'Cls' → logprob: -23.03522491455078
    9. ' Hex' → logprob: -23.16022491455078
    10. 'classmethod' → logprob: -23.28522491455078

Token 226: '(hex' (ID: 99522)
  Prédit: '(hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hex' → logprob: -2.141186450899113e-05
    2. 'hex' → logprob: -11.000020980834961
    3. '(cls' → logprob: -12.625020980834961
    4. '(' → logprob: -13.875020980834961
    5. '(
' → logprob: -15.500020980834961
    6. '(h' → logprob: -16.00002098083496
    7. ' hex' → logprob: -17.75002098083496
    8. '(hist' → logprob: -18.75002098083496
    9. '((' → logprob: -19.00002098083496
    10. '(hash' → logprob: -19.12502098083496

Token 227: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.000836312014143914
    2. 'str' → logprob: -7.125836372375488
    3. 'Str' → logprob: -10.375836372375488
    4. ')' → logprob: -15.625836372375488
    5. '_STR' → logprob: -16.000835418701172
    6. '-str' → logprob: -16.250835418701172
    7. '	str' → logprob: -16.875835418701172
    8. '_hex' → logprob: -16.875835418701172
    9. '   ' → logprob: -17.750835418701172
    10. 'hex' → logprob: -17.875835418701172

Token 228: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -14.875
    3. ' )' → logprob: -17.25
    4. '   ' → logprob: -18.25
    5. ')return' → logprob: -18.625
    6. '),' → logprob: -18.875
    7. ')}' → logprob: -19.0
    8. ')`' → logprob: -19.375
    9. ')#' → logprob: -19.375
    10. '<|end|>' → logprob: -19.625

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22512902319431305
    2. '<|end|>' → logprob: -2.3501291275024414
    3. '    
' → logprob: -3.2251291275024414
    4. 'def' → logprob: -3.6001291275024414
    5. '  
' → logprob: -4.600129127502441
    6. ' 
' → logprob: -4.725129127502441
    7. ' ' → logprob: -5.100129127502441
    8. '
' → logprob: -5.475129127502441
    9. '   
' → logprob: -6.225129127502441
    10. '<|end|>' → logprob: -6.350129127502441

Token 230: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006018387619405985
    2. '   ' → logprob: -5.381018161773682
    3. ' def' → logprob: -6.631018161773682
    4. '@property' → logprob: -10.00601863861084
    5. '@' → logprob: -10.63101863861084
    6. ')' → logprob: -12.63101863861084
    7. '    
' → logprob: -13.13101863861084
    8. ' ' → logprob: -13.63101863861084
    9. '```' → logprob: -14.38101863861084
    10. '	def' → logprob: -15.13101863861084

Token 231: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10558348149061203
    2. '__' → logprob: -2.605583429336548
    3. ' to' → logprob: -4.230583667755127
    4. 'to' → logprob: -4.480583667755127
    5. '_to' → logprob: -8.230583190917969
    6. ' def' → logprob: -10.105583190917969
    7. ' is' → logprob: -10.355583190917969
    8. ' ' → logprob: -10.605583190917969
    9. ' hex' → logprob: -11.230583190917969
    10. ' as' → logprob: -11.230583190917969

Token 232: 'int' (ID: 491)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.004950054455548525
    2. 'str' → logprob: -6.004950046539307
    3. 'repr' → logprob: -6.004950046539307
    4. 'int' → logprob: -12.754950523376465
    5. 'init' → logprob: -13.254950523376465
    6. 'lt' → logprob: -16.75494956970215
    7. 'hash' → logprob: -17.25494956970215
    8. ' eq' → logprob: -17.75494956970215
    9. 'hex' → logprob: -18.50494956970215
    10. '_eq' → logprob: -20.00494956970215

Token 233: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16104936599731445
    2. '__' → logprob: -1.9110493659973145
    3. '__(
' → logprob: -7.1610493659973145
    4. '__((' → logprob: -10.661048889160156
    5. '__('' → logprob: -11.536048889160156
    6. '(self' → logprob: -11.911048889160156
    7. '__(*' → logprob: -13.161048889160156
    8. '__("' → logprob: -13.161048889160156
    9. '_' → logprob: -13.411048889160156
    10. '(' → logprob: -13.661048889160156

Token 234: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7835754988482222e-05
    2. ')' → logprob: -11.000018119812012
    3. ' self' → logprob: -14.375018119812012
    4. '
' → logprob: -15.000018119812012
    5. ' ' → logprob: -16.875017166137695
    6. ')(' → logprob: -17.250017166137695
    7. '	self' → logprob: -17.375017166137695
    8. '(self' → logprob: -17.500017166137695
    9. '   ' → logprob: -17.625017166137695
    10. ')
' → logprob: -17.750017166137695

Token 235: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29010865092277527
    2. ')' → logprob: -1.5401086807250977
    3. '):' → logprob: -3.9151086807250977
    4. '):
' → logprob: -4.415108680725098
    5. '(self' → logprob: -5.915108680725098
    6. ')(' → logprob: -6.165108680725098
    7. '__(' → logprob: -8.790108680725098
    8. '__' → logprob: -9.040108680725098
    9. ')__' → logprob: -9.415108680725098
    10. '   ' → logprob: -9.790108680725098

Token 236: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000643095700070262
    2. '(' → logprob: -7.875643253326416
    3. 'self' → logprob: -8.250642776489258
    4. 'return' → logprob: -14.875642776489258
    5. '(s' → logprob: -14.875642776489258
    6. ' (' → logprob: -15.000642776489258
    7. '(
' → logprob: -15.250642776489258
    8. '()' → logprob: -15.500642776489258
    9. 's' → logprob: -15.750642776489258
    10. '   ' → logprob: -16.125642776489258

Token 237: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00017112065688706934
    2. ' int' → logprob: -9.250170707702637
    3. 'self' → logprob: -9.500170707702637
    4. ' ' → logprob: -16.875171661376953
    5. 'return' → logprob: -17.625171661376953
    6. ' self' → logprob: -18.250171661376953
    7. '   ' → logprob: -18.375171661376953
    8. '(int' → logprob: -19.625171661376953
    9. 'None' → logprob: -20.125171661376953
    10. '  ' → logprob: -20.500171661376953

Token 238: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014479381963610649
    2. '(' → logprob: -4.264479160308838
    3. 'self' → logprob: -8.139479637145996
    4. '(
' → logprob: -11.514479637145996
    5. '   ' → logprob: -12.639479637145996
    6. '(s' → logprob: -12.764479637145996
    7. ':' → logprob: -12.764479637145996
    8. ' (' → logprob: -13.389479637145996
    9. '       ' → logprob: -13.639479637145996
    10. '(Self' → logprob: -14.264479637145996

Token 239: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004357129335403442
    2. ' return' → logprob: -6.25435733795166
    3. '       ' → logprob: -6.25435733795166
    4. 'self' → logprob: -7.62935733795166
    5. '
' → logprob: -11.37935733795166
    6. '   ' → logprob: -13.25435733795166
    7. ':return' → logprob: -13.25435733795166
    8. '{return' → logprob: -13.37935733795166
    9. '	return' → logprob: -14.75435733795166
    10. '(self' → logprob: -15.00435733795166

Token 240: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007621064782142639
    2. '       ' → logprob: -5.0076212882995605
    3. ' return' → logprob: -7.0076212882995605
    4. '	return' → logprob: -15.882620811462402
    5. 'self' → logprob: -16.13262176513672
    6. '{return' → logprob: -16.50762176513672
    7. ':return' → logprob: -17.38262176513672
    8. 'eturn' → logprob: -18.25762176513672
    9. '
' → logprob: -18.25762176513672
    10. '   ' → logprob: -18.75762176513672

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002613358374219388
    2. ' self' → logprob: -8.250261306762695
    3. 'int' → logprob: -21.750261306762695
    4. '	self' → logprob: -22.875261306762695
    5. '(self' → logprob: -23.250261306762695
    6. '   ' → logprob: -24.375261306762695
    7. '       ' → logprob: -24.375261306762695
    8. ' ' → logprob: -24.875261306762695
    9. '
' → logprob: -26.375261306762695
    10. '[self' → logprob: -27.125261306762695

Token 242: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0015068859793245792
    2. '.' → logprob: -6.501506805419922
    3. 'value' → logprob: -12.876506805419922
    4. ' .' → logprob: -13.126506805419922
    5. '.
' → logprob: -17.751506805419922
    6. '.val' → logprob: -17.751506805419922
    7. ' value' → logprob: -17.876506805419922
    8. ').' → logprob: -18.251506805419922
    9. '.v' → logprob: -19.501506805419922
    10. ')' → logprob: -19.626506805419922

Token 243: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36136314272880554
    2. '<|end|>' → logprob: -1.736363172531128
    3. '   ' → logprob: -2.361363172531128
    4. '    
' → logprob: -4.736362934112549
    5. '<|end|>' → logprob: -4.861362934112549
    6. '

' → logprob: -5.111362934112549
    7. 'def' → logprob: -5.236362934112549
    8. '  
' → logprob: -6.986362934112549
    9. ' 
' → logprob: -7.361362934112549
    10. '```' → logprob: -7.361362934112549

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6885184645652771
    2. 'def' → logprob: -1.0635185241699219
    3. '
' → logprob: -2.813518524169922
    4. ' def' → logprob: -3.188518524169922
    5. ' ' → logprob: -3.438518524169922
    6. '@property' → logprob: -5.063518524169922
    7. '@' → logprob: -6.188518524169922
    8. ')' → logprob: -6.438518524169922
    9. '\n' → logprob: -6.563518524169922
    10. ':' → logprob: -7.063518524169922

Token 245: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00023977462842594832
    2. ' def' → logprob: -8.375239372253418
    3. '   ' → logprob: -11.875239372253418
    4. '@' → logprob: -13.875239372253418
    5. '@property' → logprob: -14.125239372253418
    6. ' ' → logprob: -15.500239372253418
    7. ')' → logprob: -16.500240325927734
    8. '	def' → logprob: -16.625240325927734
    9. ':' → logprob: -16.750240325927734
    10. ':def' → logprob: -16.750240325927734

Token 246: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02982386015355587
    2. '__' → logprob: -3.7798237800598145
    3. 'to' → logprob: -5.6548237800598145
    4. ' to' → logprob: -6.5298237800598145
    5. ' ' → logprob: -7.1548237800598145
    6. ' def' → logprob: -7.7798237800598145
    7. 'def' → logprob: -8.154824256896973
    8. ' tostring' → logprob: -11.029824256896973
    9. ' ' → logprob: -11.279824256896973
    10. 'str' → logprob: -11.279824256896973

Token 247: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.3690783381462097
    2. 'str' → logprob: -1.8690783977508545
    3. 'repr' → logprob: -1.8690783977508545
    4. 'hex' → logprob: -10.619078636169434
    5. 'xor' → logprob: -10.619078636169434
    6. 'and' → logprob: -10.869078636169434
    7. 'hash' → logprob: -11.119078636169434
    8. 'bool' → logprob: -11.619078636169434
    9. 'index' → logprob: -12.869078636169434
    10. 'bytes' → logprob: -14.119078636169434

Token 248: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011159711517393589
    2. '__' → logprob: -4.511159896850586
    3. '__('' → logprob: -9.761159896850586
    4. '__(
' → logprob: -10.011159896850586
    5. '(self' → logprob: -12.136159896850586
    6. '__("' → logprob: -12.761159896850586
    7. '__((' → logprob: -14.136159896850586
    8. '__(*' → logprob: -15.886159896850586
    9. '__.__' → logprob: -16.511159896850586
    10. '___' → logprob: -16.636159896850586

Token 249: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.106736039626412e-05
    2. ')' → logprob: -10.500031471252441
    3. '(self' → logprob: -12.750031471252441
    4. ' self' → logprob: -15.500031471252441
    5. ')(' → logprob: -16.375030517578125
    6. ')
' → logprob: -16.500030517578125
    7. 'Self' → logprob: -17.125030517578125
    8. '
' → logprob: -17.375030517578125
    9. '_self' → logprob: -17.375030517578125
    10. 's' → logprob: -17.875030517578125

Token 250: ')' (ID: 8)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18350794911384583
    2. '__)' → logprob: -1.9335079193115234
    3. ')' → logprob: -4.183507919311523
    4. ')__' → logprob: -5.433507919311523
    5. '):' → logprob: -5.933507919311523
    6. '__:' → logprob: -7.808507919311523
    7. '):
' → logprob: -8.933507919311523
    8. 'self' → logprob: -9.933507919311523
    9. '__).' → logprob: -10.308507919311523
    10. '__)
' → logprob: -10.433507919311523

Token 251: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3537929654121399
    2. '__(' → logprob: -1.2287929058074951
    3. '__' → logprob: -5.478793144226074
    4. '(' → logprob: -7.228793144226074
    5. 'self' → logprob: -8.478793144226074
    6. '__(
' → logprob: -8.853793144226074
    7. '__('' → logprob: -10.478793144226074
    8. '__("' → logprob: -11.103793144226074
    9. '(f' → logprob: -11.478793144226074
    10. '__:' → logprob: -12.478793144226074

Token 252: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0004306692280806601
    2. ' str' → logprob: -7.750430583953857
    3. '[str' → logprob: -20.375431060791016
    4. '(str' → logprob: -20.500431060791016
    5. '   ' → logprob: -21.500431060791016
    6. '	str' → logprob: -21.625431060791016
    7. ' ' → logprob: -21.625431060791016
    8. 'hex' → logprob: -21.750431060791016
    9. 'st' → logprob: -22.625431060791016
    10. 'string' → logprob: -23.125431060791016

Token 253: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01021190732717514
    2. '(' → logprob: -5.135211944580078
    3. 'self' → logprob: -5.760211944580078
    4. ':' → logprob: -6.885211944580078
    5. '       ' → logprob: -10.510211944580078
    6. '(
' → logprob: -10.510211944580078
    7. '   ' → logprob: -11.260211944580078
    8. ':
' → logprob: -11.510211944580078
    9. 'return' → logprob: -11.635211944580078
    10. ' self' → logprob: -13.135211944580078

Token 254: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0873425155878067
    2. '       ' → logprob: -2.5873425006866455
    3. ' return' → logprob: -4.962342739105225
    4. 'f' → logprob: -6.587342739105225
    5. ' f' → logprob: -10.712342262268066
    6. '{return' → logprob: -11.212342262268066
    7. ':return' → logprob: -13.337342262268066
    8. '	return' → logprob: -13.462342262268066
    9. '   ' → logprob: -13.587342262268066
    10. '{' → logprob: -14.212342262268066

Token 255: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015540247550234199
    2. 'f' → logprob: -6.501554012298584
    3. ' return' → logprob: -10.001554489135742
    4. '       ' → logprob: -12.001554489135742
    5. ' f' → logprob: -15.751554489135742
    6. '   ' → logprob: -18.126554489135742
    7. '```' → logprob: -18.751554489135742
    8. '	return' → logprob: -19.501554489135742
    9. '{return' → logprob: -19.626554489135742
    10. 'format' → logprob: -20.126554489135742

Token 256: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00033546582562848926
    2. ' f' → logprob: -8.000335693359375
    3. 'format' → logprob: -17.750335693359375
    4. 'self' → logprob: -18.625335693359375
    5. '{' → logprob: -19.125335693359375
    6. 'hex' → logprob: -20.125335693359375
    7. '(f' → logprob: -21.375335693359375
    8. '	f' → logprob: -21.750335693359375
    9. '"{' → logprob: -22.750335693359375
    10. ' self' → logprob: -23.250335693359375

Token 257: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0057237595319747925
    2. 'f' → logprob: -5.25572395324707
    3. '{' → logprob: -7.75572395324707
    4. ''{' → logprob: -10.00572395324707
    5. ' f' → logprob: -11.13072395324707
    6. '"' → logprob: -13.63072395324707
    7. '(f' → logprob: -15.00572395324707
    8. 'hex' → logprob: -16.25572395324707
    9. 'Hex' → logprob: -17.00572395324707
    10. '0' → logprob: -17.25572395324707

Token 258: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.088346359931165e-07
    2. 'int' → logprob: -14.125000953674316
    3. 'hex' → logprob: -16.75
    4. ' self' → logprob: -16.75
    5. '(self' → logprob: -17.375
    6. '0' → logprob: -18.625
    7. 'value' → logprob: -19.0
    8. 'f' → logprob: -19.375
    9. ':self' → logprob: -19.75
    10. '{' → logprob: -19.875

Token 259: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00043257648940198123
    2. 'value' → logprob: -7.75043249130249
    3. '"value' → logprob: -14.500432968139648
    4. '(value' → logprob: -15.125432968139648
    5. 'Hex' → logprob: -15.125432968139648
    6. ':value' → logprob: -15.500432968139648
    7. 'int' → logprob: -15.625432968139648
    8. '{' → logprob: -16.00043296813965
    9. ':' → logprob: -16.25043296813965
    10. ''value' → logprob: -16.75043296813965

Token 260: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5048530030981055e-06
    2. '02' → logprob: -13.500001907348633
    3. '```' → logprob: -17.875001907348633
    4. ':X' → logprob: -19.750001907348633
    5. '04' → logprob: -20.125001907348633
    6. '03' → logprob: -20.500001907348633
    7. '01' → logprob: -20.500001907348633
    8. '2' → logprob: -20.500001907348633
    9. '}' → logprob: -21.000001907348633
    10. '06' → logprob: -21.000001907348633

Token 261: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: 0.0
    2. ' ' → logprob: -22.625
    3. '```' → logprob: -24.75
    4. '>' → logprob: -25.875
    5. 'X' → logprob: -26.375
    6. '}' → logprob: -26.625
    7. '`' → logprob: -27.375
    8. '"' → logprob: -27.5
    9. '' → logprob: -28.125
    10. '0' → logprob: -28.25

Token 262: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: 0.0
    2. ' X' → logprob: -16.75
    3. '}' → logprob: -19.25
    4. 'x' → logprob: -19.625
    5. '```' → logprob: -21.125
    6. '02' → logprob: -21.875
    7. '>X' → logprob: -22.375
    8. '
' → logprob: -22.375
    9. '	X' → logprob: -22.625
    10. '.X' → logprob: -23.0

Token 263: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -3.6789137084269896e-05
    2. '"' → logprob: -10.25003719329834
    3. '}"
' → logprob: -14.25003719329834
    4. '"}' → logprob: -15.37503719329834
    5. '}' → logprob: -15.50003719329834
    6. ')"' → logprob: -16.125036239624023
    7. '}".' → logprob: -17.625036239624023
    8. '```' → logprob: -17.750036239624023
    9. '}"

' → logprob: -18.250036239624023
    10. '}}"' → logprob: -18.250036239624023

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42303213477134705
    2. '<|end|>' → logprob: -1.6730321645736694
    3. 'def' → logprob: -2.92303204536438
    4. '
' → logprob: -3.04803204536438
    5. '<|end|>' → logprob: -4.673032283782959
    6. ' def' → logprob: -4.923032283782959
    7. '    
' → logprob: -4.923032283782959
    8. '#' → logprob: -5.173032283782959
    9. ':' → logprob: -5.298032283782959
    10. '```' → logprob: -5.298032283782959

Token 265: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3010628819465637
    2. '   ' → logprob: -1.426062822341919
    3. ' def' → logprob: -4.051063060760498
    4. '
' → logprob: -7.301063060760498
    5. '    
' → logprob: -7.676063060760498
    6. ' ' → logprob: -8.55106258392334
    7. '    ' → logprob: -8.67606258392334
    8. '@property' → logprob: -8.92606258392334
    9. '#' → logprob: -9.17606258392334
    10. '@' → logprob: -9.42606258392334

Token 266: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4809923768043518
    2. ' def' → logprob: -1.355992317199707
    3. ' bit' → logprob: -3.355992317199707
    4. 'bit' → logprob: -3.355992317199707
    5. 'b' → logprob: -4.480992317199707
    6. '_bit' → logprob: -4.730992317199707
    7. ' ' → logprob: -5.355992317199707
    8. 'repr' → logprob: -5.355992317199707
    9. '_repr' → logprob: -5.730992317199707
    10. ' &' → logprob: -5.730992317199707

Token 267: '_old' (ID: 49426)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.37254205346107483
    2. '_active' → logprob: -1.6225420236587524
    3. '_play' → logprob: -3.247542142868042
    4. '_sound' → logprob: -3.497542142868042
    5. '_s' → logprob: -3.622542142868042
    6. '_pressed' → logprob: -5.372541904449463
    7. '_bit' → logprob: -5.872541904449463
    8. '_on' → logprob: -5.872541904449463
    9. '_empty' → logprob: -5.997541904449463
    10. '_note' → logprob: -6.247541904449463

Token 268: '_product' (ID: 21247)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25783324241638184
    2. '_symbol' → logprob: -3.007833242416382
    3. '_version' → logprob: -3.007833242416382
    4. '_' → logprob: -3.132833242416382
    5. '_note' → logprob: -3.132833242416382
    6. '_old' → logprob: -4.882833480834961
    7. '_sound' → logprob: -5.132833480834961
    8. '_style' → logprob: -5.257833480834961
    9. '(self' → logprob: -5.507833480834961
    10. '_format' → logprob: -5.882833480834961

Token 269: '_valid' (ID: 23321)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2570408284664154
    2. '(' → logprob: -1.6320408582687378
    3. '()' → logprob: -3.8820407390594482
    4. 'ion' → logprob: -4.757040977478027
    5. 'ive' → logprob: -8.007040977478027
    6. '_' → logprob: -8.382040977478027
    7. 'or' → logprob: -8.507040977478027
    8. 's' → logprob: -8.632040977478027
    9. 'ed' → logprob: -8.632040977478027
    10. '(s' → logprob: -9.007040977478027

Token 270: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07105404138565063
    2. '(' → logprob: -2.696053981781006
    3. 'self' → logprob: -7.571053981781006
    4. ' (' → logprob: -8.446054458618164
    5. '(
' → logprob: -8.571054458618164
    6. '()' → logprob: -9.946054458618164
    7. '   ' → logprob: -10.321054458618164
    8. '_' → logprob: -10.321054458618164
    9. ' ' → logprob: -10.321054458618164
    10. 's' → logprob: -11.821054458618164

Token 271: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014009176753461361
    2. ')' → logprob: -5.26400899887085
    3. 'self' → logprob: -5.76400899887085
    4. '(' → logprob: -6.63900899887085
    5. ')(' → logprob: -6.88900899887085
    6. '   ' → logprob: -7.51400899887085
    7. ' (' → logprob: -7.63900899887085
    8. '_product' → logprob: -7.88900899887085
    9. '):
' → logprob: -8.014009475708008
    10. '):' → logprob: -8.014009475708008

Token 272: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017923278734087944
    2. '(' → logprob: -4.517923355102539
    3. 'self' → logprob: -5.142923355102539
    4. '(
' → logprob: -7.267923355102539
    5. '   ' → logprob: -8.892923355102539
    6. ' (' → logprob: -10.017923355102539
    7. ':' → logprob: -10.767923355102539
    8. '       ' → logprob: -10.767923355102539
    9. ' self' → logprob: -10.892923355102539
    10. '_' → logprob: -11.267923355102539

Token 273: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.16026780009269714
    2. ' bool' → logprob: -1.9102678298950195
    3. ' ' → logprob: -11.03526782989502
    4. 'int' → logprob: -11.78526782989502
    5. 'None' → logprob: -11.91026782989502
    6. ' None' → logprob: -12.66026782989502
    7. 'True' → logprob: -13.03526782989502
    8. ' True' → logprob: -13.53526782989502
    9. '(bool' → logprob: -13.53526782989502
    10. 'False' → logprob: -14.03526782989502

Token 274: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2851227819919586
    2. ':' → logprob: -1.5351227521896362
    3. '(' → logprob: -3.660122871398926
    4. '       ' → logprob: -5.910122871398926
    5. 'self' → logprob: -6.410122871398926
    6. '(
' → logprob: -6.785122871398926
    7. ':
' → logprob: -6.910122871398926
    8. '   ' → logprob: -8.410122871398926
    9. ':self' → logprob: -10.035122871398926
    10. ',' → logprob: -10.285122871398926

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015969875967130065
    2. ' return' → logprob: -6.751596927642822
    3. 'return' → logprob: -8.50159740447998
    4. '   ' → logprob: -8.75159740447998
    5. '
' → logprob: -10.62659740447998
    6. '#' → logprob: -11.00159740447998
    7. '	return' → logprob: -12.25159740447998
    8. '```' → logprob: -13.12659740447998
    9. '      ' → logprob: -13.37659740447998
    10. ')' → logprob: -13.37659740447998

Token 276: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.721135139465332
    2. '       ' → logprob: -0.846135139465332
    3. '#' → logprob: -2.596135139465332
    4. ' return' → logprob: -5.596135139465332
    5. '0' → logprob: -6.721135139465332
    6. 'bits' → logprob: -6.971135139465332
    7. '           ' → logprob: -7.471135139465332
    8. 'int' → logprob: -7.721135139465332
    9. 'for' → logprob: -7.721135139465332
    10. 'value' → logprob: -7.971135139465332

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0168641097843647
    2. 'return' → logprob: -4.76686429977417
    3. ' return' → logprob: -5.64186429977417
    4. '#' → logprob: -5.64186429977417
    5. '   ' → logprob: -7.01686429977417
    6. '"""' → logprob: -10.266863822937012
    7. ' #' → logprob: -10.516863822937012
    8. '           ' → logprob: -11.141863822937012
    9. 'value' → logprob: -11.266863822937012
    10. '    ' → logprob: -11.266863822937012

Token 278: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2507163286209106
    2. 'return' → logprob: -1.5007163286209106
    3. '       ' → logprob: -1.8757163286209106
    4. 'mask' → logprob: -2.375716209411621
    5. 'bits' → logprob: -2.625716209411621
    6. 'allowed' → logprob: -3.375716209411621
    7. 'valid' → logprob: -4.000716209411621
    8. 'count' → logprob: -4.000716209411621
    9. '"""' → logprob: -4.375716209411621
    10. '   ' → logprob: -4.750716209411621

Token 279: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.03469071909785271
    2. 'ifiez' → logprob: -4.784690856933594
    3. 'ifié' → logprob: -5.534690856933594
    4. '   ' → logprob: -5.534690856933594
    5. 'return' → logprob: -5.909690856933594
    6. 'ificate' → logprob: -6.034690856933594
    7. 'ifier' → logprob: -6.284690856933594
    8. 'def' → logprob: -6.659690856933594
    9. 'ifies' → logprob: -6.784690856933594
    10. '       ' → logprob: -6.784690856933594

Token 280: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47800973057746887
    2. 'self' → logprob: -1.6030097007751465
    3. ' self' → logprob: -2.8530097007751465
    4. ' if' → logprob: -2.9780097007751465
    5. '(self' → logprob: -3.3530097007751465
    6. '   ' → logprob: -3.4780097007751465
    7. 'if' → logprob: -5.7280097007751465
    8. 'return' → logprob: -8.228010177612305
    9. ' return' → logprob: -8.603010177612305
    10. '0' → logprob: -9.103010177612305

Token 281: ' le' (ID: 505)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3721964955329895
    2. '(self' → logprob: -1.3721964359283447
    3. ' self' → logprob: -3.6221964359283447
    4. '0' → logprob: -4.497196674346924
    5. '(' → logprob: -5.122196674346924
    6. ' (' → logprob: -5.247196674346924
    7. 'bin' → logprob: -5.622196674346924
    8. '1' → logprob: -6.622196674346924
    9. ' ' → logprob: -6.747196674346924
    10. 'int' → logprob: -7.872196674346924

Token 282: ' symbole' (ID: 152507)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07740574330091476
    2. '(self' → logprob: -2.9524056911468506
    3. 'int' → logprob: -4.32740592956543
    4. '0' → logprob: -5.82740592956543
    5. ' self' → logprob: -6.45240592956543
    6. 'value' → logprob: -6.82740592956543
    7. '(' → logprob: -6.95240592956543
    8. 'bin' → logprob: -7.20240592956543
    9. ' (' → logprob: -7.95240592956543
    10. '1' → logprob: -8.32740592956543

Token 283: ' correspond' (ID: 11095)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.07136256247758865
    2. ' a' → logprob: -3.8213624954223633
    3. ' is' → logprob: -4.446362495422363
    4. ' n' → logprob: -4.821362495422363
    5. 'est' → logprob: -5.321362495422363
    6. 'self' → logprob: -5.696362495422363
    7. ' self' → logprob: -5.946362495422363
    8. ' ne' → logprob: -6.071362495422363
    9. '   ' → logprob: -6.446362495422363
    10. ' &' → logprob: -6.571362495422363

Token 284: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07542196661233902
    2. '   ' → logprob: -3.0754220485687256
    3. '       ' → logprob: -4.4504218101501465
    4. 'à' → logprob: -4.8254218101501465
    5. ' aux' → logprob: -5.8254218101501465
    6. ' to' → logprob: -6.0754218101501465
    7. '    ' → logprob: -8.700422286987305
    8. ')' → logprob: -8.700422286987305
    9. ' au' → logprob: -8.700422286987305
    10. ''à' → logprob: -8.825422286987305

Token 285: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41118425130844116
    2. ' ' → logprob: -2.286184310913086
    3. ' (' → logprob: -2.911184310913086
    4. '1' → logprob: -2.911184310913086
    5. '(' → logprob: -3.286184310913086
    6. ' any' → logprob: -4.036184310913086
    7. 'int' → logprob: -4.661184310913086
    8. 'any' → logprob: -4.786184310913086
    9. ' not' → logprob: -4.911184310913086
    10. 'self' → logprob: -5.036184310913086

Token 286: ' son' (ID: 2391)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'produ' → logprob: -1.0023113489151
    2. 'code' → logprob: -1.8773113489151
    3. ' produit' → logprob: -2.3773112297058105
    4. 'son' → logprob: -2.5023112297058105
    5. 'ancien' → logprob: -2.7523112297058105
    6. ' code' → logprob: -2.8773112297058105
    7. 'bit' → logprob: -4.1273112297058105
    8. 'sym' → logprob: -4.2523112297058105
    9. 'pattern' → logprob: -4.2523112297058105
    10. 'nombre' → logprob: -4.5023112297058105

Token 287: ' jou' (ID: 10865)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.36742880940437317
    2. ' valide' → logprob: -2.117428779602051
    3. '_' → logprob: -3.492428779602051
    4. ' val' → logprob: -4.117428779602051
    5. '   ' → logprob: -4.117428779602051
    6. ' unique' → logprob: -4.367428779602051
    7. ' actif' → logprob: -4.617428779602051
    8. ' activ' → logprob: -4.742428779602051
    9. ' all' → logprob: -4.867428779602051
    10. ' complet' → logprob: -4.867428779602051

Token 288: 'able' (ID: 562)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0003790760529227555
    2. 'able' → logprob: -8.000378608703613
    3. 'er' → logprob: -10.875378608703613
    4. 'e' → logprob: -10.875378608703613
    5. 'ée' → logprob: -12.375378608703613
    6. 'É' → logprob: -14.500378608703613
    7. 'ant' → logprob: -14.875378608703613
    8. 'a' → logprob: -15.625378608703613
    9. '```' → logprob: -15.750378608703613
    10. 'és' → logprob: -16.00037956237793

Token 289: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9897083044052124
    2. '   ' → logprob: -1.3647083044052124
    3. ' (' → logprob: -2.364708423614502
    4. ',' → logprob: -2.614708423614502
    5. ' sur' → logprob: -3.364708423614502
    6. ' valid' → logprob: -3.864708423614502
    7. '       ' → logprob: -3.989708423614502
    8. '(' → logprob: -4.239708423614502
    9. ' dans' → logprob: -4.239708423614502
    10. ' avec' → logprob: -4.489708423614502

Token 290: ' l' (ID: 305)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.4782201051712036
    2. ' any' → logprob: -1.7282201051712036
    3. 'def' → logprob: -1.8532201051712036
    4. ' au' → logprob: -1.8532201051712036
    5. 'au' → logprob: -2.853219985961914
    6. 'l' → logprob: -3.728219985961914
    7. 'un' → logprob: -3.853219985961914
    8. 'Hex' → logprob: -4.103219985961914
    9. ' un' → logprob: -4.228219985961914
    10. ' la' → logprob: -4.353219985961914

Token 291: ''ancien' (ID: 170667)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.995926022529602
    2. ''ancien' → logprob: -0.995926022529602
    3. ''utilisateur' → logprob: -1.495926022529602
    4. 'e' → logprob: -4.4959259033203125
    5. ''' → logprob: -4.9959259033203125
    6. ''ensemble' → logprob: -5.1209259033203125
    7. ''un' → logprob: -5.3709259033203125
    8. 'es' → logprob: -5.9959259033203125
    9. ''app' → logprob: -6.9959259033203125
    10. ''une' → logprob: -7.2459259033203125

Token 292: ' produit' (ID: 29429)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.4504650831222534
    2. ' code' → logprob: -2.075465202331543
    3. ' système' → logprob: -2.200465202331543
    4. ' produit' → logprob: -2.825465202331543
    5. 'product' → logprob: -3.325465202331543
    6. ' system' → logprob: -4.075465202331543
    7. ' process' → logprob: -6.450465202331543
    8. 'code' → logprob: -7.075465202331543
    9. ' method' → logprob: -7.075465202331543
    10. ' algorithm' → logprob: -7.325465202331543

Token 293: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47891801595687866
    2. '.' → logprob: -1.2289180755615234
    3. '       ' → logprob: -2.8539180755615234
    4. ',' → logprob: -4.228918075561523
    5. ' (' → logprob: -4.728918075561523
    6. ':' → logprob: -5.978918075561523
    7. 's' → logprob: -6.603918075561523
    8. '    ' → logprob: -8.103918075561523
    9. '.
' → logprob: -8.353918075561523
    10. '(' → logprob: -8.478918075561523

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029856672044843435
    2. '   ' → logprob: -5.87798547744751
    3. '    ' → logprob: -9.252985954284668
    4. '        ' → logprob: -10.877985954284668
    5. ' ' → logprob: -11.127985954284668
    6. '      ' → logprob: -11.252985954284668
    7. '           ' → logprob: -11.502985954284668
    8. '     ' → logprob: -12.002985954284668
    9. ' return' → logprob: -12.627985954284668
    10. ')' → logprob: -12.627985954284668

Token 295: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08936186879873276
    2. 'return' → logprob: -2.5893619060516357
    3. '   ' → logprob: -5.339361667633057
    4. ' return' → logprob: -5.589361667633057
    5. '#' → logprob: -7.214361667633057
    6. '        
' → logprob: -8.339362144470215
    7. '           ' → logprob: -8.589362144470215
    8. '
' → logprob: -9.464362144470215
    9. ' ' → logprob: -9.464362144470215
    10. 'self' → logprob: -9.839362144470215

Token 296: '’est' (ID: 6838)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.740251362323761
    2. '   ' → logprob: -0.865251362323761
    3. ' return' → logprob: -2.865251302719116
    4. 'return' → logprob: -3.990251302719116
    5. 'eturn' → logprob: -5.615251541137695
    6. ''est' → logprob: -5.865251541137695
    7. '      ' → logprob: -5.990251541137695
    8. '=' → logprob: -6.490251541137695
    9. 'ont' → logprob: -6.490251541137695
    10. '```' → logprob: -6.615251541137695

Token 297: '-à' (ID: 56297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3573930263519287
    2. ' True' → logprob: -1.9823930263519287
    3. ' self' → logprob: -2.8573930263519287
    4. '   ' → logprob: -3.2323930263519287
    5. 'not' → logprob: -4.107393264770508
    6. ' à' → logprob: -4.482393264770508
    7. 'True' → logprob: -5.107393264770508
    8. 'self' → logprob: -5.107393264770508
    9. ' return' → logprob: -5.232393264770508
    10. 'à' → logprob: -5.357393264770508

Token 298: '-dire' (ID: 76064)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06090785562992096
    2. 'n' → logprob: -4.81090784072876
    3. '```' → logprob: -4.93590784072876
    4. 'à' → logprob: -5.06090784072876
    5. 'tout' → logprob: -5.06090784072876
    6. '   ' → logprob: -5.56090784072876
    7. 'u' → logprob: -5.81090784072876
    8. '``' → logprob: -6.06090784072876
    9. 'd' → logprob: -6.06090784072876
    10. 'ut' → logprob: -6.18590784072876

Token 299: ' aucun' (ID: 41678)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1804870367050171
    2. ' self' → logprob: -2.1804871559143066
    3. '(self' → logprob: -3.4304871559143066
    4. '0' → logprob: -4.555487155914307
    5. ' (' → logprob: -5.805487155914307
    6. '   ' → logprob: -6.680487155914307
    7. 'bool' → logprob: -6.805487155914307
    8. 'int' → logprob: -6.930487155914307
    9. ' any' → logprob: -7.430487155914307
    10. '(' → logprob: -7.555487155914307

Token 300: ' son' (ID: 2391)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.29207560420036316
    2. 'bit' → logprob: -1.7920756340026855
    3. ' bits' → logprob: -3.6670756340026855
    4. ' de' → logprob: -4.0420756340026855
    5. 'bits' → logprob: -4.1670756340026855
    6. '(bit' → logprob: -5.2920756340026855
    7. 'de' → logprob: -5.9170756340026855
    8. ' des' → logprob: -5.9170756340026855
    9. '0' → logprob: -6.0420756340026855
    10. 'b' → logprob: -6.1670756340026855

Token 301: ' (' (ID: 350)
  Prédit: ' activ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' activ' → logprob: -1.323000431060791
    2. 'n' → logprob: -2.073000431060791
    3. 'activ' → logprob: -2.198000431060791
    4. 'ne' → logprob: -2.948000431060791
    5. 'jou' → logprob: -2.948000431060791
    6. ' joué' → logprob: -2.948000431060791
    7. 'all' → logprob: -3.073000431060791
    8. 'act' → logprob: -3.198000431060791
    9. ' n' → logprob: -3.198000431060791
    10. ' actif' → logprob: -3.823000431060791

Token 302: '00' (ID: 504)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12285159528255463
    2. ' self' → logprob: -2.747851610183716
    3. ')' → logprob: -3.247851610183716
    4. 'int' → logprob: -4.497851371765137
    5. '0' → logprob: -8.247851371765137
    6. ' )' → logprob: -8.247851371765137
    7. ' int' → logprob: -8.622851371765137
    8. 'return' → logprob: -8.622851371765137
    9. '(self' → logprob: -8.997851371765137
    10. '
' → logprob: -9.122851371765137

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04021039977669716
    2. '")' → logprob: -4.415210247039795
    3. ' or' → logprob: -4.415210247039795
    4. '),' → logprob: -4.790210247039795
    5. '00' → logprob: -5.915210247039795
    6. 'x' → logprob: -6.165210247039795
    7. ' )' → logprob: -8.165210723876953
    8. ',' → logprob: -8.415210723876953
    9. '')' → logprob: -8.540210723876953
    10. '   ' → logprob: -8.915210723876953

Token 304: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2639007568359375
    2. ' ou' → logprob: -2.1389007568359375
    3. ',' → logprob: -2.3889007568359375
    4. '   ' → logprob: -4.6389007568359375
    5. '       ' → logprob: -5.7639007568359375
    6. 'or' → logprob: -5.8889007568359375
    7. ' ' → logprob: -6.5139007568359375
    8. '0' → logprob: -7.3889007568359375
    9. '  ' → logprob: -7.6389007568359375
    10. '000' → logprob: -7.7639007568359375

Token 305: ' exactement' (ID: 108701)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2638282775878906
    2. '0' → logprob: -2.0138282775878906
    3. 'all' → logprob: -2.0138282775878906
    4. 'une' → logprob: -2.2638282775878906
    5. 'un' → logprob: -2.3888282775878906
    6. ' une' → logprob: -3.2638282775878906
    7. ' all' → logprob: -3.7638282775878906
    8. 'auc' → logprob: -3.7638282775878906
    9. ' ' → logprob: -3.8888282775878906
    10. 'not' → logprob: -4.013828277587891

Token 306: ' un' (ID: 537)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.6451202034950256
    2. 'one' → logprob: -1.0201201438903809
    3. '1' → logprob: -2.520120143890381
    4. ' un' → logprob: -4.270120143890381
    5. 'un' → logprob: -4.270120143890381
    6. ' une' → logprob: -6.145120143890381
    7. ' ' → logprob: -6.395120143890381
    8. 'une' → logprob: -6.520120143890381
    9. '0' → logprob: -8.145120620727539
    10. ' deux' → logprob: -8.270120620727539

Token 307: ' seul' (ID: 33041)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6865417957305908
    2. ' bit' → logprob: -0.8115417957305908
    3. 'son' → logprob: -3.936541795730591
    4. '1' → logprob: -4.561541557312012
    5. ' son' → logprob: -5.311541557312012
    6. 'bits' → logprob: -5.811541557312012
    7. ' seul' → logprob: -5.936541557312012
    8. ' ' → logprob: -6.186541557312012
    9. 'b' → logprob: -7.124041557312012
    10. '   ' → logprob: -7.186541557312012

Token 308: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.399692177772522
    2. ' bit' → logprob: -1.149692177772522
    3. 'son' → logprob: -5.024692058563232
    4. '1' → logprob: -5.649692058563232
    5. ' son' → logprob: -6.774692058563232
    6. ' ' → logprob: -8.02469253540039
    7. 'bits' → logprob: -8.27469253540039
    8. 'b' → logprob: -9.02469253540039
    9. '   ' → logprob: -9.52469253540039
    10. '```' → logprob: -9.52469253540039

Token 309: ' à' (ID: 1221)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.04250428453087807
    2. ' est' → logprob: -4.41750431060791
    3. 'set' → logprob: -4.66750431060791
    4. ' à' → logprob: -4.66750431060791
    5. '1' → logprob: -5.16750431060791
    6. ' is' → logprob: -7.16750431060791
    7. '   ' → logprob: -7.16750431060791
    8. '```' → logprob: -7.16750431060791
    9. ' de' → logprob: -7.29250431060791
    10. ' ' → logprob: -7.41750431060791

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014396385522559285
    2. 'un' → logprob: -6.626439571380615
    3. '```' → logprob: -9.376440048217773
    4. 'True' → logprob: -12.001440048217773
    5. '`' → logprob: -12.251440048217773
    6. '0' → logprob: -12.376440048217773
    7. ''un' → logprob: -12.376440048217773
    8. 'l' → logprob: -12.751440048217773
    9. 'one' → logprob: -13.001440048217773
    10. ' ' → logprob: -14.126440048217773

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023584060836583376
    2. 'un' → logprob: -6.127358436584473
    3. '```' → logprob: -9.127358436584473
    4. 'one' → logprob: -10.752358436584473
    5. '0' → logprob: -11.127358436584473
    6. 'True' → logprob: -11.252358436584473
    7. ''un' → logprob: -12.627358436584473
    8. '`' → logprob: -12.752358436584473
    9. 'l' → logprob: -13.502358436584473
    10. 'u' → logprob: -13.752358436584473

Token 312: '.
' (ID: 558)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0928013324737549
    2. '   ' → logprob: -1.8428013324737549
    3. ' or' → logprob: -1.9678013324737549
    4. '       ' → logprob: -2.217801332473755
    5. ')' → logprob: -2.842801332473755
    6. ' in' → logprob: -2.967801332473755
    7. ' return' → logprob: -3.217801332473755
    8. ' and' → logprob: -4.217801094055176
    9. ' ==' → logprob: -4.592801094055176
    10. '.' → logprob: -4.717801094055176

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021006562747061253
    2. '   ' → logprob: -6.502100467681885
    3. ')' → logprob: -7.877100467681885
    4. '    ' → logprob: -9.252100944519043
    5. '        ' → logprob: -10.627100944519043
    6. '        
' → logprob: -10.627100944519043
    7. '
' → logprob: -10.877100944519043
    8. ' 
' → logprob: -11.752100944519043
    9. '"""' → logprob: -11.752100944519043
    10. '```' → logprob: -12.127100944519043

Token 314: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014441191218793392
    2. '
' → logprob: -4.514441013336182
    3. '   ' → logprob: -6.514441013336182
    4. 'return' → logprob: -7.139441013336182
    5. ' return' → logprob: -8.01444149017334
    6. ')' → logprob: -8.76444149017334
    7. '"""
' (adapté à ' """
') → logprob: -9.51444149017334
    8. '"""' → logprob: -9.51444149017334
    9. ')
' → logprob: -9.63944149017334
    10. '```' → logprob: -9.63944149017334

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047988566802814603
    2. 'return' → logprob: -8.500479698181152
    3. '   ' → logprob: -9.125479698181152
    4. '
' → logprob: -9.750479698181152
    5. ' return' → logprob: -10.000479698181152
    6. '```' → logprob: -11.875479698181152
    7. '0' → logprob: -12.000479698181152
    8. '      ' → logprob: -12.125479698181152
    9. '           ' → logprob: -12.250479698181152
    10. '        
' → logprob: -12.500479698181152

Token 316: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1789731979370117
    2. 'return' → logprob: -1.1789731979370117
    3. 'count' → logprob: -2.3039731979370117
    4. '       ' → logprob: -2.5539731979370117
    5. 'val' → logprob: -2.5539731979370117
    6. 'bits' → logprob: -2.5539731979370117
    7. 'v' → logprob: -4.178973197937012
    8. '   ' → logprob: -4.303973197937012
    9. 'value' → logprob: -5.678973197937012
    10. 'bit' → logprob: -5.803973197937012

Token 317: ' uniquement' (ID: 65527)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.540875256061554
    2. ' if' → logprob: -1.6658751964569092
    3. '       ' → logprob: -2.290875196456909
    4. 'count' → logprob: -3.290875196456909
    5. 'val' → logprob: -3.665875196456909
    6. 'return' → logprob: -3.665875196456909
    7. 'value' → logprob: -4.790875434875488
    8. 'bits' → logprob: -5.165875434875488
    9. '   ' → logprob: -5.540875434875488
    10. ' return' → logprob: -5.540875434875488

Token 318: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33942320942878723
    2. 'self' → logprob: -1.9644231796264648
    3. ' return' → logprob: -2.714423179626465
    4. 'if' → logprob: -3.839423179626465
    5. 'bits' → logprob: -4.589423179626465
    6. 'def' → logprob: -4.839423179626465
    7. 'b' → logprob: -4.839423179626465
    8. 'int' → logprob: -5.089423179626465
    9. ' if' → logprob: -5.464423179626465
    10. '       ' → logprob: -5.839423179626465

Token 319: ' comb' (ID: 4134)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bits' → logprob: -1.2828621864318848
    2. '0' → logprob: -1.4078621864318848
    3. 'bits' → logprob: -1.4078621864318848
    4. 'val' → logprob: -3.0328621864318848
    5. 'self' → logprob: -3.4078621864318848
    6. 'values' → logprob: -3.7828621864318848
    7. 'int' → logprob: -3.9078621864318848
    8. 'value' → logprob: -4.032862186431885
    9. 'def' → logprob: -4.532862186431885
    10. ' valeurs' → logprob: -4.657862186431885

Token 320: 'inais' (ID: 42744)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.8853856325149536
    2. 'int' → logprob: -1.1353856325149536
    3. 'inations' → logprob: -2.635385513305664
    4. 'self' → logprob: -3.135385513305664
    5. '0' → logprob: -3.510385513305664
    6. '(self' → logprob: -3.635385513305664
    7. '1' → logprob: -4.010385513305664
    8. '001' → logprob: -4.135385513305664
    9. '(' → logprob: -4.510385513305664
    10. 'inais' → logprob: -4.885385513305664

Token 321: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.009573452174663544
    2. 'sons' → logprob: -4.759573459625244
    3. 's' → logprob: -7.509573459625244
    4. 'on' → logprob: -8.134572982788086
    5. 'son' → logprob: -10.009572982788086
    6. '0' → logprob: -10.884572982788086
    7. 't' → logprob: -12.134572982788086
    8. 'ions' → logprob: -12.134572982788086
    9. '00' → logprob: -12.259572982788086
    10. '01' → logprob: -12.634572982788086

Token 322: ' possibles' (ID: 97753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5793641209602356
    2. '0' → logprob: -2.204364061355591
    3. '=' → logprob: -2.454364061355591
    4. 'self' → logprob: -3.329364061355591
    5. 'with' → logprob: -3.329364061355591
    6. 'if' → logprob: -3.579364061355591
    7. ' where' → logprob: -4.07936429977417
    8. '   ' → logprob: -4.20436429977417
    9. 'int' → logprob: -4.32936429977417
    10. ' with' → logprob: -4.32936429977417

Token 323: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4429989755153656
    2. ' if' → logprob: -1.317999005317688
    3. 'if' → logprob: -4.317998886108398
    4. 'return' → logprob: -4.442998886108398
    5. ' =' → logprob: -4.567998886108398
    6. '0' → logprob: -4.692998886108398
    7. ' return' → logprob: -4.817998886108398
    8. '   ' → logprob: -5.317998886108398
    9. '=' → logprob: -5.442998886108398
    10. ' ' → logprob: -5.567998886108398

Token 324: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5315622687339783
    2. 'self' → logprob: -1.781562328338623
    3. 'old' → logprob: -2.406562328338623
    4. 'ancien' → logprob: -3.281562328338623
    5. 'def' → logprob: -3.406562328338623
    6. ' l' → logprob: -3.406562328338623
    7. '#' → logprob: -4.781562328338623
    8. 'le' → logprob: -5.031562328338623
    9. 'ancienne' → logprob: -5.656562328338623
    10. 'the' → logprob: -5.656562328338623

Token 325: ' ancien' (ID: 81732)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -1.47452974319458
    2. 'bit' → logprob: -1.72452974319458
    3. '1' → logprob: -2.22452974319458
    4. 'b' → logprob: -2.59952974319458
    5. 'byte' → logprob: -2.59952974319458
    6. 'son' → logprob: -2.84952974319458
    7. 'def' → logprob: -2.97452974319458
    8. '#' → logprob: -3.59952974319458
    9. 'self' → logprob: -3.59952974319458
    10. '   ' → logprob: -3.84952974319458

Token 326: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.4644351899623871
    2. ' product' → logprob: -1.9644352197647095
    3. 'product' → logprob: -2.33943510055542
    4. ' return' → logprob: -3.46443510055542
    5. 'return' → logprob: -4.08943510055542
    6. '   ' → logprob: -4.08943510055542
    7. 'def' → logprob: -4.21443510055542
    8. 'prod' → logprob: -4.83943510055542
    9. 'produ' → logprob: -4.96443510055542
    10. ' def' → logprob: -5.33943510055542

Token 327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04942164570093155
    2. ' if' → logprob: -4.424421787261963
    3. '   ' → logprob: -4.799421787261963
    4. ' (' → logprob: -5.049421787261963
    5. 'if' → logprob: -5.049421787261963
    6. ' =' → logprob: -5.799421787261963
    7. '
' → logprob: -5.799421787261963
    8. 'return' → logprob: -5.924421787261963
    9. ':' → logprob: -6.174421787261963
    10. ',' → logprob: -6.799421787261963

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005060837138444185
    2. 'mask' → logprob: -6.50506067276001
    3. ' if' → logprob: -7.00506067276001
    4. 'if' → logprob: -7.50506067276001
    5. 'int' → logprob: -7.88006067276001
    6. '   ' → logprob: -7.88006067276001
    7. '
' → logprob: -8.255061149597168
    8. ' =' → logprob: -9.005061149597168
    9. ',' → logprob: -9.255061149597168
    10. ':' → logprob: -9.380061149597168

Token 329: ' old' (ID: 2890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4655703604221344
    2. 'return' → logprob: -2.0905704498291016
    3. 'if' → logprob: -2.8405704498291016
    4. ' if' → logprob: -2.8405704498291016
    5. ' return' → logprob: -3.2155704498291016
    6. 'count' → logprob: -3.5905704498291016
    7. 'mask' → logprob: -4.215570449829102
    8. 'val' → logprob: -4.840570449829102
    9. 'n' → logprob: -4.840570449829102
    10. 'bits' → logprob: -5.215570449829102

Token 330: '_valid' (ID: 23321)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.2651981115341187
    2. ' =' → logprob: -1.6401981115341187
    3. '_val' → logprob: -1.6401981115341187
    4. '_product' → logprob: -2.390198230743408
    5. '=' → logprob: -3.015198230743408
    6. '_prod' → logprob: -3.390198230743408
    7. '_bits' → logprob: -3.640198230743408
    8. '_products' → logprob: -3.765198230743408
    9. '_mask' → logprob: -4.140198230743408
    10. 'prod' → logprob: -4.640198230743408

Token 331: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.13954663276672363
    2. ' =' → logprob: -2.5145466327667236
    3. '_bits' → logprob: -3.7645466327667236
    4. '_vals' → logprob: -4.1395463943481445
    5. '_masks' → logprob: -5.6395463943481445
    6. '_mask' → logprob: -6.5145463943481445
    7. '_com' → logprob: -6.7645463943481445
    8. '=' → logprob: -7.2645463943481445
    9. '_codes' → logprob: -7.5145463943481445
    10. '_s' → logprob: -7.5145463943481445

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02633560076355934
    2. '=' → logprob: -3.6513357162475586
    3. '   ' → logprob: -11.151335716247559
    4. ':' → logprob: -11.401335716247559
    5. ' ' → logprob: -12.026335716247559
    6. ' =[' → logprob: -13.901335716247559
    7. ')' → logprob: -14.276335716247559
    8. '=[' → logprob: -14.276335716247559
    9. 's' → logprob: -14.651335716247559
    10. '  ' → logprob: -14.901335716247559

Token 333: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.02971450239419937
    2. '[' → logprob: -3.904714584350586
    3. ' {' → logprob: -4.904714584350586
    4. '{
' → logprob: -6.779714584350586
    5. '(' → logprob: -8.904714584350586
    6. ' [' → logprob: -8.904714584350586
    7. 'set' → logprob: -9.029714584350586
    8. '[
' → logprob: -9.404714584350586
    9. '{'' → logprob: -10.654714584350586
    10. ' ' → logprob: -10.904714584350586

Token 334: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013536872575059533
    2. ' ' → logprob: -7.001353740692139
    3. '           ' → logprob: -8.50135326385498
    4. '   ' → logprob: -9.25135326385498
    5. 'int' → logprob: -9.75135326385498
    6. '               ' → logprob: -10.12635326385498
    7. '       ' → logprob: -11.12635326385498
    8. 'Hex' → logprob: -12.00135326385498
    9. '  ' → logprob: -12.50135326385498
    10. '                   ' → logprob: -12.75135326385498

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000631543982308358
    2. 'int' → logprob: -8.125631332397461
    3. ' ' → logprob: -8.375631332397461
    4. '1' → logprob: -10.500631332397461
    5. ''' → logprob: -10.750631332397461
    6. 'Hex' → logprob: -11.250631332397461
    7. '   ' → logprob: -11.500631332397461
    8. '"' → logprob: -11.625631332397461
    9. '00' → logprob: -11.750631332397461
    10. 'hex' → logprob: -11.875631332397461

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007151735480874777
    2. ' ' → logprob: -7.500715255737305
    3. 'int' → logprob: -10.000715255737305
    4. '   ' → logprob: -10.250715255737305
    5. ''' → logprob: -10.750715255737305
    6. '"' → logprob: -11.375715255737305
    7. 'Hex' → logprob: -11.375715255737305
    8. '1' → logprob: -12.000715255737305
    9. '       ' → logprob: -12.125715255737305
    10. '           ' → logprob: -12.250715255737305

Token 337: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01296350359916687
    2. ',' → logprob: -4.38796329498291
    3. ',
' → logprob: -7.88796329498291
    4. '0' → logprob: -10.38796329498291
    5. 'b' → logprob: -10.88796329498291
    6. '}' → logprob: -11.01296329498291
    7. '00' → logprob: -11.51296329498291
    8. ',

' → logprob: -14.26296329498291
    9. '000' → logprob: -14.63796329498291
    10. '},' → logprob: -15.63796329498291

Token 338: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.04859157279133797
    2. '0' → logprob: -3.0485916137695312
    3. '01' → logprob: -13.548591613769531
    4. '1' → logprob: -14.298591613769531
    5. ' ' → logprob: -14.923591613769531
    6. '000' → logprob: -15.173591613769531
    7. '```' → logprob: -15.298591613769531
    8. '80' → logprob: -15.611091613769531
    9. 'FF' → logprob: -15.798591613769531
    10. 'x' → logprob: -16.17359161376953

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003965962678194046
    2. ',
' → logprob: -5.628965854644775
    3. '}' → logprob: -8.503966331481934
    4. ' ,' → logprob: -9.128966331481934
    5. '0' → logprob: -10.253966331481934
    6. 'x' → logprob: -12.253966331481934
    7. '   ' → logprob: -12.878966331481934
    8. ',
' → logprob: -12.878966331481934
    9. '       ' → logprob: -13.378966331481934
    10. '1' → logprob: -13.378966331481934

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007637646631337702
    2. ' ' → logprob: -7.250763893127441
    3. '1' → logprob: -9.875763893127441
    4. '   ' → logprob: -13.625763893127441
    5. '  ' → logprob: -14.875763893127441
    6. '    ' → logprob: -15.250763893127441
    7. '       ' → logprob: -15.875763893127441
    8. '           ' → logprob: -16.188262939453125
    9. '        ' → logprob: -16.813262939453125
    10. '
' → logprob: -17.188262939453125

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.3596853831550106e-05
    2. '1' → logprob: -10.500053405761719
    3. ' ' → logprob: -10.750053405761719
    4. '
' → logprob: -13.000053405761719
    5. '   ' → logprob: -14.125053405761719
    6. '*' → logprob: -14.375053405761719
    7. '}' → logprob: -15.750053405761719
    8. '  ' → logprob: -15.750053405761719
    9. '#' → logprob: -16.31255340576172
    10. '       ' → logprob: -16.56255340576172

Token 342: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18427741527557373
    2. ',' → logprob: -1.8092774152755737
    3. '}' → logprob: -6.184277534484863
    4. '1' → logprob: -6.434277534484863
    5. '0' → logprob: -7.309277534484863
    6. '7' → logprob: -9.934277534484863
    7. '3' → logprob: -11.059277534484863
    8. '01' → logprob: -11.059277534484863
    9. '},' → logprob: -11.184277534484863
    10. ',
' → logprob: -11.184277534484863

Token 343: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.014608729630708694
    2. '1' → logprob: -4.264608860015869
    3. '10' → logprob: -9.264608383178711
    4. '08' → logprob: -9.389608383178711
    5. '80' → logprob: -9.389608383178711
    6. '11' → logprob: -9.639608383178711
    7. '0' → logprob: -10.264608383178711
    8. '81' → logprob: -10.264608383178711
    9. 'FF' → logprob: -11.639608383178711
    10. '03' → logprob: -11.889608383178711

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009303949191235006
    2. ',
' → logprob: -7.125930309295654
    3. ' ,' → logprob: -9.125930786132812
    4. '}' → logprob: -12.125930786132812
    5. '   ' → logprob: -12.375930786132812
    6. '0' → logprob: -12.625930786132812
    7. ' ' → logprob: -13.500930786132812
    8. ',
' → logprob: -14.375930786132812
    9. '       ' → logprob: -14.375930786132812
    10. ' ,
' → logprob: -14.875930786132812

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005997289903461933
    2. ' ' → logprob: -5.130997180938721
    3. '           ' → logprob: -9.630997657775879
    4. '   ' → logprob: -14.380997657775879
    5. '       ' → logprob: -14.505997657775879
    6. '            ' → logprob: -14.505997657775879
    7. '               ' → logprob: -14.755997657775879
    8. '  ' → logprob: -15.380997657775879
    9. '    ' → logprob: -15.818497657775879
    10. '2' → logprob: -16.005996704101562

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004904801025986671
    2. ' ' → logprob: -7.625490665435791
    3. '2' → logprob: -14.125490188598633
    4. '   ' → logprob: -14.250490188598633
    5. '       ' → logprob: -15.250490188598633
    6. '  ' → logprob: -15.937990188598633
    7. '	' → logprob: -16.062990188598633
    8. '02' → logprob: -16.187990188598633
    9. '           ' → logprob: -16.375490188598633
    10. '    ' → logprob: -16.812990188598633

Token 347: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07539752870798111
    2. '0' → logprob: -3.075397491455078
    3. '02' → logprob: -4.075397491455078
    4. ',' → logprob: -4.700397491455078
    5. '2' → logprob: -8.200397491455078
    6. ' ' → logprob: -10.075397491455078
    7. '}' → logprob: -11.325397491455078
    8. '<<' → logprob: -11.450397491455078
    9. '   ' → logprob: -12.075397491455078
    10. ',
' → logprob: -12.075397491455078

Token 348: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -4.3822154111694545e-05
    2. '2' → logprob: -10.125043869018555
    3. '80' → logprob: -13.625043869018555
    4. '01' → logprob: -14.500043869018555
    5. '04' → logprob: -14.875043869018555
    6. '0' → logprob: -15.125043869018555
    7. '10' → logprob: -15.125043869018555
    8. '```' → logprob: -15.500043869018555
    9. '1' → logprob: -15.750043869018555
    10. '08' → logprob: -15.875043869018555

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004023097571916878
    2. ',
' → logprob: -8.000402450561523
    3. ' ,' → logprob: -9.750402450561523
    4. '0' → logprob: -12.125402450561523
    5. '   ' → logprob: -13.875402450561523
    6. '}' → logprob: -14.250402450561523
    7. ' ' → logprob: -14.500402450561523
    8. ',
' → logprob: -14.875402450561523
    9. ',

' → logprob: -16.000402450561523
    10. ' ,
' → logprob: -16.500402450561523

Token 350: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004621661268174648
    2. ' ' → logprob: -5.379621505737305
    3. '           ' → logprob: -13.629621505737305
    4. '   ' → logprob: -16.004621505737305
    5. '       ' → logprob: -16.754621505737305
    6. '  ' → logprob: -19.254621505737305
    7. '    ' → logprob: -19.629621505737305
    8. '               ' → logprob: -19.629621505737305
    9. '            ' → logprob: -20.004621505737305
    10. ' ' → logprob: -20.129621505737305

Token 351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019030878320336342
    2. ' ' → logprob: -8.625190734863281
    3. '04' → logprob: -12.125190734863281
    4. '4' → logprob: -12.250190734863281
    5. '   ' → logprob: -15.500190734863281
    6. '  ' → logprob: -16.06269073486328
    7. '```' → logprob: -17.62519073486328
    8. '' → logprob: -17.81269073486328
    9. '    ' → logprob: -18.31269073486328
    10. '۰' → logprob: -18.81269073486328

Token 352: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13090254366397858
    2. '4' → logprob: -2.7559025287628174
    3. '0' → logprob: -3.2559025287628174
    4. '04' → logprob: -4.0059027671813965
    5. ' ' → logprob: -7.3809027671813965
    6. '004' → logprob: -7.5059027671813965
    7. 'X' → logprob: -8.130902290344238
    8. ',' → logprob: -8.380902290344238
    9. '' → logprob: -8.630902290344238
    10. 'C' → logprob: -8.755902290344238

Token 353: '04' (ID: 3000)
  Prédit: '04'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '04' → logprob: -0.000156577822053805
    2. '08' → logprob: -9.25015640258789
    3. '4' → logprob: -9.87515640258789
    4. ' ' → logprob: -12.93765640258789
    5. '```' → logprob: -14.12515640258789
    6. '80' → logprob: -14.25015640258789
    7. '
' → logprob: -14.43765640258789
    8. '040' → logprob: -14.50015640258789
    9. '10' → logprob: -14.81265640258789
    10. '0' → logprob: -14.81265640258789

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007518553175032139
    2. ',
' → logprob: -7.250751972198486
    3. ' ,' → logprob: -10.375751495361328
    4. '   ' → logprob: -12.375751495361328
    5. '0' → logprob: -12.875751495361328
    6. ',
' → logprob: -13.125751495361328
    7. ',

' → logprob: -14.500751495361328
    8. '}' → logprob: -14.875751495361328
    9. ' ' → logprob: -15.000751495361328
    10. '       ' → logprob: -15.375751495361328

Token 355: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003607317106798291
    2. ' ' → logprob: -5.628607273101807
    3. '           ' → logprob: -11.878607749938965
    4. '   ' → logprob: -16.00360679626465
    5. '       ' → logprob: -16.25360679626465
    6. '               ' → logprob: -17.50360679626465
    7. '  ' → logprob: -18.00360679626465
    8. ' ' → logprob: -18.50360679626465
    9. '            ' → logprob: -18.87860679626465
    10. '    ' → logprob: -19.25360679626465

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.000139236450195
    4. '  ' → logprob: -17.500139236450195
    5. '       ' → logprob: -17.500139236450195
    6. '           ' → logprob: -18.312639236450195
    7. '8' → logprob: -18.437639236450195
    8. '...' → logprob: -18.812639236450195
    9. '    ' → logprob: -19.500139236450195
    10. '۰' → logprob: -19.500139236450195

Token 357: 'x' (ID: 87)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.061458759009838104
    2. 'x' → logprob: -2.9364588260650635
    3. '008' → logprob: -5.436458587646484
    4. '0' → logprob: -6.811458587646484
    5. '08' → logprob: -7.561458587646484
    6. ',' → logprob: -7.686458587646484
    7. ',
' → logprob: -11.186458587646484
    8. '_' → logprob: -11.186458587646484
    9. '```' → logprob: -11.311458587646484
    10. '{' → logprob: -11.936458587646484

Token 358: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.0010380487656220794
    2. '8' → logprob: -6.876038074493408
    3. '008' → logprob: -13.12603759765625
    4. '080' → logprob: -13.75103759765625
    5. ' ' → logprob: -14.68853759765625
    6. '0' → logprob: -14.87603759765625
    7. '
' → logprob: -15.12603759765625
    8. '80' → logprob: -15.68853759765625
    9. '```' → logprob: -15.81353759765625
    10. '{
' → logprob: -16.43853759765625

Token 359: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006479830481112003
    2. ',
' → logprob: -7.375648021697998
    3. ' ,' → logprob: -11.62564754486084
    4. '   ' → logprob: -11.87564754486084
    5. '0' → logprob: -13.12564754486084
    6. ',
' → logprob: -13.50064754486084
    7. '}' → logprob: -14.50064754486084
    8. '       ' → logprob: -14.62564754486084
    9. ',

' → logprob: -15.12564754486084
    10. ' ' → logprob: -15.25064754486084

Token 360: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034334040246903896
    2. ' ' → logprob: -5.8784332275390625
    3. '           ' → logprob: -7.3784332275390625
    4. '               ' → logprob: -13.378433227539062
    5. '   ' → logprob: -13.878433227539062
    6. '       ' → logprob: -13.878433227539062
    7. '            ' → logprob: -16.253433227539062
    8. '          ' → logprob: -16.628433227539062
    9. '  ' → logprob: -16.753433227539062
    10. ' ' → logprob: -17.253433227539062

Token 361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.685467764735222e-05
    2. ' ' → logprob: -9.375086784362793
    3. '           ' → logprob: -13.250086784362793
    4. '   ' → logprob: -16.75008773803711
    5. '               ' → logprob: -17.62508773803711
    6. '       ' → logprob: -17.62508773803711
    7. '  ' → logprob: -18.50008773803711
    8. '          ' → logprob: -20.06258773803711
    9. '```' → logprob: -20.18758773803711
    10. '                   ' → logprob: -20.31258773803711

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001246348983841017
    2. ' ' → logprob: -9.12512493133545
    3. '           ' → logprob: -11.12512493133545
    4. '   ' → logprob: -14.50012493133545
    5. '       ' → logprob: -15.37512493133545
    6. '               ' → logprob: -16.875123977661133
    7. '            ' → logprob: -17.500123977661133
    8. '  ' → logprob: -17.750123977661133
    9. '          ' → logprob: -18.375123977661133
    10. '    ' → logprob: -18.375123977661133

Token 363: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009536213474348187
    2. '0' → logprob: -7.000953674316406
    3. ',' → logprob: -10.125953674316406
    4. '10' → logprob: -13.625953674316406
    5. ' ' → logprob: -15.125953674316406
    6. ',
' → logprob: -15.500953674316406
    7. ' x' → logprob: -15.500953674316406
    8. '   ' → logprob: -16.250953674316406
    9. '1' → logprob: -16.750953674316406
    10. ' ,' → logprob: -17.000953674316406

Token 364: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.11996734328568e-05
    2. '010' → logprob: -10.250041007995605
    3. '0' → logprob: -13.375041007995605
    4. '01' → logprob: -13.500041007995605
    5. '1' → logprob: -14.125041007995605
    6. '```' → logprob: -14.687541007995605
    7. '001' → logprob: -15.437541007995605
    8. '00' → logprob: -15.500041007995605
    9. '16' → logprob: -15.562541007995605
    10. '	' → logprob: -16.125041961669922

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015374773647636175
    2. ',
' → logprob: -6.501537322998047
    3. ' ,' → logprob: -10.626537322998047
    4. '   ' → logprob: -12.626537322998047
    5. ',
' → logprob: -13.126537322998047
    6. '0' → logprob: -13.126537322998047
    7. '}' → logprob: -13.626537322998047
    8. ',

' → logprob: -13.751537322998047
    9. ' ' → logprob: -15.251537322998047
    10. '           ' → logprob: -15.376537322998047

Token 366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0160659272223711
    2. ' ' → logprob: -4.141066074371338
    3. '           ' → logprob: -10.39106559753418
    4. '   ' → logprob: -15.01606559753418
    5. '16' → logprob: -15.64106559753418
    6. '       ' → logprob: -16.14106559753418
    7. '               ' → logprob: -16.14106559753418
    8. '  ' → logprob: -16.64106559753418
    9. '          ' → logprob: -17.51606559753418
    10. '20' → logprob: -17.64106559753418

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.000001907348633
    4. '           ' → logprob: -19.625001907348633
    5. '20' → logprob: -20.187501907348633
    6. '       ' → logprob: -20.250001907348633
    7. '۰' → logprob: -20.562501907348633
    8. '```' → logprob: -20.812501907348633
    9. '{' → logprob: -20.875001907348633
    10. '16' → logprob: -21.000001907348633

Token 368: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25869691371917725
    2. 'x' → logprob: -2.133697032928467
    3. '20' → logprob: -2.508697032928467
    4. '6' → logprob: -4.258697032928467
    5. ' ' → logprob: -5.758697032928467
    6. ',' → logprob: -6.008697032928467
    7. '   ' → logprob: -6.133697032928467
    8. '1' → logprob: -6.758697032928467
    9. '=' → logprob: -7.258697032928467
    10. '       ' → logprob: -7.883697032928467

Token 369: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -2.2127087504486553e-05
    2. '020' → logprob: -11.125021934509277
    3. '00' → logprob: -12.875021934509277
    4. '01' → logprob: -13.500021934509277
    5. '```' → logprob: -13.750021934509277
    6. '0' → logprob: -15.500021934509277
    7. '80' → logprob: -15.500021934509277
    8. '40' → logprob: -15.812521934509277
    9. '16' → logprob: -15.937521934509277
    10. '1' → logprob: -15.937521934509277

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027206414961256087
    2. ' ,' → logprob: -9.000271797180176
    3. ',
' → logprob: -9.250271797180176
    4. '0' → logprob: -10.000271797180176
    5. '           ' → logprob: -12.625271797180176
    6. '   ' → logprob: -13.625271797180176
    7. ' ' → logprob: -14.000271797180176
    8. '       ' → logprob: -14.375271797180176
    9. '6' → logprob: -15.250271797180176
    10. ',
' → logprob: -15.750271797180176

Token 371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011718906462192535
    2. ' ' → logprob: -6.751172065734863
    3. '           ' → logprob: -13.376172065734863
    4. '  ' → logprob: -17.001171112060547
    5. '   ' → logprob: -17.001171112060547
    6. '       ' → logprob: -17.876171112060547
    7. '          ' → logprob: -18.626171112060547
    8. '               ' → logprob: -19.126171112060547
    9. '            ' → logprob: -19.251171112060547
    10. '         ' → logprob: -19.501171112060547

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '40' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.375000953674316
    4. '  ' → logprob: -19.375001907348633
    5. '```' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '040' → logprob: -20.562501907348633
    8. '۰' → logprob: -20.812501907348633
    9. '`' → logprob: -20.875001907348633
    10. '{' → logprob: -20.937501907348633

Token 373: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1711377054452896
    2. 'x' → logprob: -2.421137809753418
    3. '40' → logprob: -2.796137809753418
    4. '040' → logprob: -5.046137809753418
    5. '4' → logprob: -7.421137809753418
    6. ',' → logprob: -8.171137809753418
    7. ' ' → logprob: -9.921137809753418
    8. '=' → logprob: -11.296137809753418
    9. '   ' → logprob: -12.171137809753418
    10. '.' → logprob: -12.546137809753418

Token 374: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -3.464347173576243e-05
    2. '00' → logprob: -11.25003433227539
    3. '040' → logprob: -11.37503433227539
    4. '0' → logprob: -11.62503433227539
    5. '80' → logprob: -14.62503433227539
    6. '04' → logprob: -14.87503433227539
    7. '4' → logprob: -16.00003433227539
    8. '{' → logprob: -17.00003433227539
    9. ' ' → logprob: -17.00003433227539
    10. '```' → logprob: -17.12503433227539

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002063661115244031
    2. ',
' → logprob: -6.252063751220703
    3. '}' → logprob: -10.002063751220703
    4. ' ,' → logprob: -10.252063751220703
    5. '0' → logprob: -10.627063751220703
    6. '           ' → logprob: -10.752063751220703
    7. '       ' → logprob: -12.877063751220703
    8. '   ' → logprob: -13.127063751220703
    9. ',
' → logprob: -13.877063751220703
    10. ',

' → logprob: -13.877063751220703

Token 376: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '           ' → logprob: -16.377805709838867
    4. '   ' → logprob: -17.002805709838867
    5. '  ' → logprob: -17.877805709838867
    6. '8' → logprob: -18.127805709838867
    7. '80' → logprob: -18.502805709838867
    8. '       ' → logprob: -19.002805709838867
    9. '```' → logprob: -19.252805709838867
    10. '               ' → logprob: -19.565305709838867

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005950132850557566
    2. '80' → logprob: -5.130949974060059
    3. ' ' → logprob: -10.755949974060059
    4. '080' → logprob: -16.130950927734375
    5. '```' → logprob: -17.380950927734375
    6. '   ' → logprob: -17.380950927734375
    7. '  ' → logprob: -17.505950927734375
    8. '8' → logprob: -18.755950927734375
    9. '800' → logprob: -18.880950927734375
    10. '
' → logprob: -19.380950927734375

Token 378: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36050179600715637
    2. '0' → logprob: -1.735501766204834
    3. '}' → logprob: -2.110501766204834
    4. ',' → logprob: -6.235501766204834
    5. '80' → logprob: -6.235501766204834
    6. ')' → logprob: -7.485501766204834
    7. '8' → logprob: -7.610501766204834
    8. ' ' → logprob: -9.610502243041992
    9. ' }' → logprob: -10.360502243041992
    10. '   ' → logprob: -10.360502243041992

Token 379: '80' (ID: 2241)
  Prédit: '80'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: 0.0
    2. '00' → logprob: -17.125
    3. '8' → logprob: -17.625
    4. ' ' → logprob: -18.125
    5. '```' → logprob: -18.625
    6. '0' → logprob: -18.875
    7. '800' → logprob: -19.625
    8. '080' → logprob: -19.875
    9. '   ' → logprob: -20.5
    10. '{' → logprob: -20.5

Token 380: '
' (ID: 198)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.005408661440014839
    2. '       ' → logprob: -5.630408763885498
    3. '   ' → logprob: -6.630408763885498
    4. '}
' → logprob: -7.880408763885498
    5. ',' → logprob: -9.25540828704834
    6. ' }' → logprob: -11.50540828704834
    7. ')' → logprob: -13.13040828704834
    8. '}

' → logprob: -14.63040828704834
    9. ',
' → logprob: -14.88040828704834
    10. '}
' → logprob: -14.88040828704834

Token 381: '       ' (ID: 309)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.22203458845615387
    2. '       ' → logprob: -1.8470345735549927
    3. '   ' → logprob: -3.3470346927642822
    4. '}
' → logprob: -5.097034454345703
    5. ',' → logprob: -9.972034454345703
    6. ' }' → logprob: -10.847034454345703
    7. ')' → logprob: -10.847034454345703
    8. '}

' → logprob: -11.972034454345703
    9. ',
' → logprob: -12.097034454345703
    10. '}
' → logprob: -12.972034454345703

Token 382: ' }
' (ID: 606)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03472929075360298
    2. '}
' (adapté à ' }
') → logprob: -3.534729242324829
    3. '       ' → logprob: -5.534729480743408
    4. '   ' → logprob: -6.909729480743408
    5. ' }' → logprob: -11.78472900390625
    6. '}
' → logprob: -11.78472900390625
    7. ',' → logprob: -13.15972900390625
    8. ')' → logprob: -13.40972900390625
    9. ' }
' → logprob: -13.53472900390625
    10. '}

' → logprob: -14.40972900390625

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018407059833407402
    2. '
' → logprob: -6.876840591430664
    3. '   ' → logprob: -7.626840591430664
    4. 'return' → logprob: -8.251840591430664
    5. ' return' → logprob: -10.626840591430664
    6. '<|end|>' → logprob: -11.376840591430664
    7. '	return' → logprob: -12.376840591430664
    8. '        
' → logprob: -12.751840591430664
    9. '           ' → logprob: -13.001840591430664
    10. ':return' → logprob: -13.126840591430664

Token 384: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5764029622077942
    2. 'return' (adapté à ' return') → logprob: -0.8264029622077942
    3. ' return' → logprob: -7.7014031410217285
    4. '   ' → logprob: -12.45140266418457
    5. ')return' → logprob: -13.07640266418457
    6. ':return' → logprob: -13.20140266418457
    7. '	return' → logprob: -13.32640266418457
    8. '      ' → logprob: -14.57640266418457
    9. '{return' → logprob: -14.57640266418457
    10. '
' → logprob: -16.07640266418457

Token 385: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003361774142831564
    2. ' self' → logprob: -8.000336647033691
    3. 'int' → logprob: -14.375336647033691
    4. '(self' → logprob: -16.875335693359375
    5. '       ' → logprob: -17.500335693359375
    6. '   ' → logprob: -17.750335693359375
    7. '	self' → logprob: -18.750335693359375
    8. ' int' → logprob: -20.625335693359375
    9. '
' → logprob: -20.750335693359375
    10. '     ' → logprob: -21.750335693359375

Token 386: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -3.249780638725497e-05
    2. '.' → logprob: -11.000032424926758
    3. '.int' → logprob: -11.500032424926758
    4. 'value' → logprob: -12.500032424926758
    5. ' .' → logprob: -13.500032424926758
    6. '.val' → logprob: -15.375032424926758
    7. 'int' → logprob: -15.750032424926758
    8. '.is' → logprob: -16.375032424926758
    9. '.return' → logprob: -17.500032424926758
    10. '.Value' → logprob: -18.000032424926758

Token 387: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740816056728363
    2. 'in' → logprob: -0.9740816354751587
    3. ' ' → logprob: -13.349081993103027
    4. '	in' → logprob: -13.474081993103027
    5. 'In' → logprob: -14.599081993103027
    6. 'int' → logprob: -14.849081993103027
    7. ' ' → logprob: -15.849081993103027
    8. 'ins' → logprob: -16.09908103942871
    9. 'return' → logprob: -16.59908103942871
    10. ')' → logprob: -17.09908103942871

Token 388: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.023247109726071358
    2. ' old' → logprob: -3.773247003555298
    3. '	old' → logprob: -13.648246765136719
    4. '   ' → logprob: -15.148246765136719
    5. '.old' → logprob: -16.52324676513672
    6. '_old' → logprob: -16.64824676513672
    7. '       ' → logprob: -17.52324676513672
    8. ' ' → logprob: -17.64824676513672
    9. '(old' → logprob: -17.64824676513672
    10. 'self' → logprob: -18.27324676513672

Token 389: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -2.7729658540920354e-05
    2. 'valid' → logprob: -10.500027656555176
    3. 'Valid' → logprob: -16.375028610229492
    4. ' valid' → logprob: -18.625028610229492
    5. '	valid' → logprob: -19.250028610229492
    6. '_VALID' → logprob: -20.250028610229492
    7. '-valid' → logprob: -20.375028610229492
    8. '_old' → logprob: -20.375028610229492
    9. '_invalid' → logprob: -20.875028610229492
    10. 'VALID' → logprob: -21.000028610229492

Token 390: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00019531534053385258
    2. 'values' → logprob: -8.875195503234863
    3. '_valid' → logprob: -9.875195503234863
    4. 'valid' → logprob: -12.500195503234863
    5. '_' → logprob: -16.250194549560547
    6. ' values' → logprob: -17.000194549560547
    7. 'Values' → logprob: -17.125194549560547
    8. '_VALUES' → logprob: -17.375194549560547
    9. 'valu' → logprob: -17.875194549560547
    10. '_value' → logprob: -18.375194549560547

Token 391: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: ' Rhythm' (ID: 148652)
  Prédit: ' Hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Hex' → logprob: -0.3762652575969696
    2. 'Hex' → logprob: -1.251265287399292
    3. ' Music' → logprob: -5.501265048980713
    4. 'Music' → logprob: -5.626265048980713
    5. ' Midi' → logprob: -5.876265048980713
    6. 'Note' → logprob: -7.001265048980713
    7. 'Midi' → logprob: -7.063765048980713
    8. 'Tuple' → logprob: -7.126265048980713
    9. ' Song' → logprob: -7.376265048980713
    10. ' Melody' → logprob: -7.501265048980713

Token 394: 'Pattern' (ID: 16821)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6647663116455078
    2. 'Symbol' → logprob: -1.1647663116455078
    3. 'Pattern' → logprob: -1.9147663116455078
    4. 'Sequence' → logprob: -4.539766311645508
    5. 'Generator' → logprob: -6.039766311645508
    6. 'Parser' → logprob: -6.289766311645508
    7. 'Analyzer' → logprob: -6.539766311645508
    8. 'Sound' → logprob: -7.289766311645508
    9. 'Segment' → logprob: -7.414766311645508
    10. 'Builder' → logprob: -7.539766311645508

Token 395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001544737839139998
    2. ':
' → logprob: -6.501544952392578
    3. '(' → logprob: -10.376544952392578
    4. '(List' → logprob: -12.501544952392578
    5. ':def' → logprob: -13.501544952392578
    6. ' :' → logprob: -13.626544952392578
    7. ':

' → logprob: -13.876544952392578
    8. ':list' → logprob: -14.376544952392578
    9. 'def' → logprob: -14.626544952392578
    10. '(object' → logprob: -14.751544952392578

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016766376211307943
    2. 'class' → logprob: -9.875167846679688
    3. '
' → logprob: -10.125167846679688
    4. 'def' → logprob: -10.250167846679688
    5. ':' → logprob: -11.125167846679688
    6. '    
' → logprob: -11.625167846679688
    7. ':
' → logprob: -12.875167846679688
    8. ' def' → logprob: -13.250167846679688
    9. '  ' → logprob: -13.625167846679688
    10. '):
' → logprob: -13.750167846679688

Token 397: ' """
' (ID: 7037)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5297518372535706
    2. '   ' → logprob: -1.0297517776489258
    3. 'def' → logprob: -3.154751777648926
    4. 'class' → logprob: -4.904751777648926
    5. ' __' → logprob: -6.279751777648926
    6. ' ' → logprob: -7.029751777648926
    7. ' def' → logprob: -8.404751777648926
    8. 'slots' → logprob: -8.529751777648926
    9. 'from' → logprob: -8.904751777648926
    10. '___' → logprob: -8.904751777648926

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18956716358661652
    2. '__' → logprob: -1.8145672082901
    3. 'slots' → logprob: -4.8145670890808105
    4. ' ' → logprob: -7.5645670890808105
    5. 'def' → logprob: -7.8145670890808105
    6. '
' → logprob: -8.689567565917969
    7. '"""
' → logprob: -9.064567565917969
    8. '  ' → logprob: -9.064567565917969
    9. ' __' → logprob: -9.189567565917969
    10. '_slots' → logprob: -9.314567565917969

Token 399: ' Une' (ID: 19758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9578896164894104
    2. '__' → logprob: -1.2078895568847656
    3. 'def' → logprob: -1.8328895568847656
    4. 'class' → logprob: -2.2078895568847656
    5. 'Rep' → logprob: -4.207889556884766
    6. 'from' → logprob: -4.332889556884766
    7. '"""
' → logprob: -5.082889556884766
    8. 'repr' → logprob: -5.832889556884766
    9. '"""' → logprob: -5.957889556884766
    10. 'slots' → logprob: -6.582889556884766

Token 400: ' sé' (ID: 7462)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.031123565509915352
    2. 'sequence' → logprob: -5.031123638153076
    3. 'pattern' → logprob: -5.531123638153076
    4. ':' → logprob: -5.531123638153076
    5. '   ' → logprob: -5.656123638153076
    6. 'List' → logprob: -6.156123638153076
    7. ' class' → logprob: -6.156123638153076
    8. 'classe' → logprob: -6.781123638153076
    9. ' sequence' → logprob: -6.906123638153076
    10. 'suite' → logprob: -7.281123638153076

Token 401: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.4294600784778595
    2. 'rie' → logprob: -1.054460048675537
    3. '   ' → logprob: -8.304460525512695
    4. '
' → logprob: -8.929460525512695
    5. 'q' → logprob: -9.679460525512695
    6. 'QUENCE' → logprob: -9.929460525512695
    7. 'ries' → logprob: -9.929460525512695
    8. 'qu' → logprob: -10.054460525512695
    9. 'ri' → logprob: -10.179460525512695
    10. 'que' → logprob: -10.679460525512695

Token 402: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1102464199066162
    2. '   ' → logprob: -1.7352464199066162
    3. ' de' → logprob: -1.7352464199066162
    4. '[' → logprob: -2.735246419906616
    5. ' of' → logprob: -2.860246419906616
    6. 'of' → logprob: -2.985246419906616
    7. ' des' → logprob: -3.235246419906616
    8. 'de' → logprob: -3.485246419906616
    9. ':
' → logprob: -4.110246658325195
    10. '[List' → logprob: -4.235246658325195

Token 403: ' Hex' (ID: 56318)
  Prédit: 'Hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hex' → logprob: -0.01120343804359436
    2. ' Hex' → logprob: -4.511203289031982
    3. ''' → logprob: -10.01120376586914
    4. ' ' → logprob: -10.63620376586914
    5. '   ' → logprob: -11.76120376586914
    6. 'int' → logprob: -11.88620376586914
    7. ''H' → logprob: -12.01120376586914
    8. 'symbols' → logprob: -12.13620376586914
    9. '8' → logprob: -12.38620376586914
    10. 'List' → logprob: -12.51120376586914

Token 404: 'Music' (ID: 28138)
  Prédit: 'Music'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Music' → logprob: -8.65707261255011e-06
    2. 'Mus' → logprob: -12.375008583068848
    3. 'usic' → logprob: -14.125008583068848
    4. ' Music' → logprob: -14.625008583068848
    5. '_music' → logprob: -15.000008583068848
    6. 'a' → logprob: -15.375008583068848
    7. ' ' → logprob: -15.500008583068848
    8. '.' → logprob: -15.500008583068848
    9. '[]' → logprob: -15.625008583068848
    10. 'string' → logprob: -15.625008583068848

Token 405: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -0.001333932508714497
    2. 'Symbols' → logprob: -6.626333713531494
    3. 'Sym' → logprob: -12.501334190368652
    4. ' Symbol' → logprob: -13.876334190368652
    5. '_symbol' → logprob: -14.251334190368652
    6. 'symbol' → logprob: -14.751334190368652
    7. '_SYMBOL' → logprob: -15.001334190368652
    8. ' symbols' → logprob: -15.251334190368652
    9. 'Sound' → logprob: -15.751334190368652
    10. 'Token' → logprob: -15.751334190368652

Token 406: ' représentant' (ID: 136122)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03865194320678711
    2. ' s' → logprob: -4.288651943206787
    3. ',' → logprob: -4.413651943206787
    4. ']' → logprob: -5.913651943206787
    5. ' objects' → logprob: -6.163651943206787
    6. '.' → logprob: -6.663651943206787
    7. ' représentant' → logprob: -6.663651943206787
    8. ' ' → logprob: -6.788651943206787
    9. ' instances' → logprob: -7.788651943206787
    10. ' objets' → logprob: -7.913651943206787

Token 407: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.0694953203201294
    2. ' un' → logprob: -1.0694953203201294
    3. 'une' → logprob: -1.6944953203201294
    4. 'le' → logprob: -3.44449520111084
    5. ' des' → logprob: -3.56949520111084
    6. ' une' → logprob: -3.69449520111084
    7. 'des' → logprob: -3.94449520111084
    8. ' le' → logprob: -4.81949520111084
    9. 'la' → logprob: -4.81949520111084
    10. 'les' → logprob: -5.44449520111084

Token 408: ' pattern' (ID: 8302)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.8467828631401062
    2. 'pattern' → logprob: -1.096782922744751
    3. ' rythme' → logprob: -2.096782922744751
    4. ' motif' → logprob: -2.846782922744751
    5. 'mot' → logprob: -3.596782922744751
    6. ' pattern' → logprob: -4.346782684326172
    7. 'pat' → logprob: -5.471782684326172
    8. ' rhyth' → logprob: -5.471782684326172
    9. ' morceau' → logprob: -6.721782684326172
    10. 'm' → logprob: -6.721782684326172

Token 409: ' r' (ID: 428)
  Prédit: 'mus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mus' → logprob: -0.674313485622406
    2. ' musical' → logprob: -0.924313485622406
    3. ' de' → logprob: -3.049313545227051
    4. ' musicale' → logprob: -3.549313545227051
    5. 'de' → logprob: -5.549313545227051
    6. '   ' → logprob: -5.674313545227051
    7. 'music' → logprob: -6.424313545227051
    8. ' ryth' → logprob: -6.674313545227051
    9. ' r' → logprob: -6.799313545227051
    10. 'ry' → logprob: -6.924313545227051

Token 410: 'ythm' (ID: 38243)
  Prédit: 'ythm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ythm' → logprob: -0.6447181105613708
    2. 'yth' → logprob: -0.8947181105613708
    3. 'hythm' → logprob: -2.7697181701660156
    4. 'ép' → logprob: -6.394718170166016
    5. 'y' → logprob: -6.769718170166016
    6. 'h' → logprob: -7.769718170166016
    7. 'hy' → logprob: -8.269718170166016
    8. 'yt' → logprob: -9.144718170166016
    9. 'ith' → logprob: -9.894718170166016
    10. 'ep' → logprob: -10.144718170166016

Token 411: 'ique' (ID: 2222)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12780572474002838
    2. 'ique' → logprob: -2.127805709838867
    3. 'que' → logprob: -7.502805709838867
    4. 'me' → logprob: -9.877805709838867
    5. '   ' → logprob: -10.252805709838867
    6. '```' → logprob: -10.377805709838867
    7. 'iquement' → logprob: -10.877805709838867
    8. 'ic' → logprob: -10.877805709838867
    9. 'es' → logprob: -11.002805709838867
    10. 'h' → logprob: -11.002805709838867

Token 412: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4165387451648712
    2. '   ' → logprob: -1.7915387153625488
    3. '.
' → logprob: -2.791538715362549
    4. ':
' → logprob: -3.041538715362549
    5. ':' → logprob: -3.791538715362549
    6. ',' → logprob: -4.291538715362549
    7. '
' → logprob: -5.041538715362549
    8. ' de' → logprob: -6.041538715362549
    9. ' ' → logprob: -6.166538715362549
    10. ' .' → logprob: -6.416538715362549

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0818832740187645
    2. '
' → logprob: -2.581883192062378
    3. ')' → logprob: -6.081883430480957
    4. 'class' → logprob: -7.956883430480957
    5. '    
' → logprob: -8.581883430480957
    6. '<|end|>' → logprob: -10.081883430480957
    7. ')
' → logprob: -10.456883430480957
    8. '"""' → logprob: -10.956883430480957
    9. ' ' → logprob: -11.331883430480957
    10. '```' → logprob: -11.331883430480957

Token 414: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09467565268278122
    2. '
' → logprob: -2.5946755409240723
    3. 'class' → logprob: -4.469675540924072
    4. ')' → logprob: -6.219675540924072
    5. 'def' → logprob: -7.344675540924072
    6. '    
' → logprob: -7.594675540924072
    7. '```' → logprob: -7.969675540924072
    8. 'from' → logprob: -8.96967601776123
    9. '"""' → logprob: -9.34467601776123
    10. ')
' → logprob: -9.46967601776123

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009309909655712545
    2. 'def' → logprob: -7.0009307861328125
    3. 'class' → logprob: -11.375930786132812
    4. ' def' → logprob: -12.375930786132812
    5. '__' → logprob: -12.875930786132812
    6. '   ' → logprob: -14.625930786132812
    7. '	def' → logprob: -15.500930786132812
    8. '    ' → logprob: -16.375930786132812
    9. '   ' → logprob: -16.375930786132812
    10. '  ' → logprob: -16.500930786132812

Token 416: ' def' (ID: 1056)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20218339562416077
    2. 'def' (adapté à ' def') → logprob: -1.7021833658218384
    3. ' def' → logprob: -8.202183723449707
    4. '   ' → logprob: -8.577183723449707
    5. 'slots' → logprob: -8.827183723449707
    6. ' __' → logprob: -9.077183723449707
    7. '_slots' → logprob: -11.202183723449707
    8. 'class' → logprob: -11.702183723449707
    9. '___' → logprob: -12.202183723449707
    10. 'MAX' → logprob: -12.452183723449707

Token 417: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5821303129196167
    2. '__' → logprob: -1.0821303129196167
    3. 'slots' → logprob: -2.4571304321289062
    4. ' __' → logprob: -4.582130432128906
    5. 'classmethod' → logprob: -6.457130432128906
    6. '_slots' → logprob: -6.582130432128906
    7. '```' → logprob: -7.082130432128906
    8. 'def' → logprob: -7.082130432128906
    9. '_init' → logprob: -7.207130432128906
    10. 'staticmethod' → logprob: -8.457130432128906

Token 418: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.25205832719802856
    2. 'slots' → logprob: -1.5020582675933838
    3. 'slot' → logprob: -9.877058029174805
    4. '_slots' → logprob: -10.002058029174805
    5. 'sl' → logprob: -11.752058029174805
    6. 'str' → logprob: -11.877058029174805
    7. '_init' → logprob: -12.002058029174805
    8. 'class' → logprob: -13.002058029174805
    9. 'lines' → logprob: -13.127058029174805
    10. ' slots' → logprob: -13.752058029174805

Token 419: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.022934453561902046
    2. '__(' → logprob: -4.272934436798096
    3. ' (' → logprob: -4.897934436798096
    4. 'self' → logprob: -8.022934913635254
    5. '   ' → logprob: -8.147934913635254
    6. '       ' → logprob: -8.147934913635254
    7. '(' → logprob: -8.272934913635254
    8. '
' → logprob: -9.522934913635254
    9. '__(
' → logprob: -11.522934913635254
    10. ',' → logprob: -12.147934913635254

Token 420: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.2994620242971e-06
    2. ' self' → logprob: -11.875008583068848
    3. '       ' → logprob: -13.750008583068848
    4. '
' → logprob: -16.62500762939453
    5. '   ' → logprob: -16.87500762939453
    6. '(self' → logprob: -17.75000762939453
    7. ')' → logprob: -17.87500762939453
    8. '	self' → logprob: -19.37500762939453
    9. '[' → logprob: -19.75000762939453
    10. ' ' → logprob: -20.25000762939453

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05524658411741257
    2. 'self' → logprob: -2.930246591567993
    3. '(self' → logprob: -8.930246353149414
    4. '       ' → logprob: -9.305246353149414
    5. ' ,' → logprob: -9.680246353149414
    6. '   ' → logprob: -10.555246353149414
    7. ',self' → logprob: -10.680246353149414
    8. 'def' → logprob: -11.805246353149414
    9. '__,' → logprob: -12.180246353149414
    10. '
' → logprob: -12.430246353149414

Token 422: ' symbols' (ID: 29502)
  Prédit: 'symbols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' → logprob: -0.004004672635346651
    2. 'pattern' → logprob: -6.25400447845459
    3. ' symbols' → logprob: -6.87900447845459
    4. 'patterns' → logprob: -7.00400447845459
    5. 'sequence' → logprob: -9.50400447845459
    6. 'self' → logprob: -10.87900447845459
    7. 'sy' → logprob: -11.50400447845459
    8. 'symbol' → logprob: -12.00400447845459
    9. ' pattern' → logprob: -12.37900447845459
    10. 'notes' → logprob: -12.37900447845459

Token 423: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.128163257315464e-07
    2. ' :' → logprob: -15.625
    3. '   ' → logprob: -17.125
    4. '_:' → logprob: -17.5
    5. '       ' → logprob: -18.125
    6. '):' → logprob: -18.25
    7. '```' → logprob: -18.25
    8. '           ' → logprob: -19.75
    9. '}:' → logprob: -20.25
    10. 'self' → logprob: -20.625

Token 424: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.003611355321481824
    2. ' List' → logprob: -5.7536115646362305
    3. 'Optional' → logprob: -7.7536115646362305
    4. ' Optional' → logprob: -12.50361156463623
    5. 'list' → logprob: -15.12861156463623
    6. '   ' → logprob: -15.62861156463623
    7. '       ' → logprob: -16.003610610961914
    8. '[List' → logprob: -16.128610610961914
    9. '           ' → logprob: -18.378610610961914
    10. '	List' → logprob: -18.503610610961914

Token 425: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9266199160483666e-05
    2. '['' → logprob: -10.875019073486328
    3. 'Hex' → logprob: -16.125019073486328
    4. ']' → logprob: -16.750019073486328
    5. ')' → logprob: -16.875019073486328
    6. '```' → logprob: -17.375019073486328
    7. '[int' → logprob: -17.750019073486328
    8. '   ' → logprob: -17.750019073486328
    9. ''' → logprob: -17.875019073486328
    10. '[str' → logprob: -17.875019073486328

Token 426: 'Hex' (ID: 26992)
  Prédit: 'Hex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hex' → logprob: -1.7432603272027336e-06
    2. ' Hex' → logprob: -13.500001907348633
    3. 'Optional' → logprob: -15.125001907348633
    4. '[' → logprob: -18.625001907348633
    5. 'hex' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.125001907348633
    7. ' ' → logprob: -19.250001907348633
    8. '_hex' → logprob: -20.000001907348633
    9. '       ' → logprob: -20.375001907348633
    10. ')' → logprob: -21.000001907348633

Token 427: 'Music' (ID: 28138)
  Prédit: 'Music'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Music' → logprob: -3.128163257315464e-07
    2. 'Mus' → logprob: -16.125
    3. ' Music' → logprob: -17.0
    4. 'usic' → logprob: -17.25
    5. '[' → logprob: -17.5
    6. ']' → logprob: -17.5
    7. '_music' → logprob: -17.875
    8. '```' → logprob: -17.875
    9. ')' → logprob: -18.125
    10. 'M' → logprob: -18.375

Token 428: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -2.935296834039036e-06
    2. 'ymbol' → logprob: -14.00000286102295
    3. ' Symbol' → logprob: -14.25000286102295
    4. 'symbol' → logprob: -14.37500286102295
    5. '_symbol' → logprob: -15.00000286102295
    6. 'Symbols' → logprob: -15.12500286102295
    7. 'Sym' → logprob: -16.500003814697266
    8. '_SYMBOL' → logprob: -16.500003814697266
    9. ' symbol' → logprob: -16.875003814697266
    10. '-symbol' → logprob: -18.250003814697266

Token 429: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.06253346055746078
    2. ']):
' → logprob: -3.187533378601074
    3. '])' → logprob: -4.562533378601074
    4. ']' → logprob: -4.937533378601074
    5. '):' → logprob: -6.687533378601074
    6. ')' → logprob: -7.812533378601074
    7. ']:' → logprob: -10.187533378601074
    8. '):
' → logprob: -10.937533378601074
    9. ']=' → logprob: -11.812533378601074
    10. ':' → logprob: -12.312533378601074

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005729287513531744
    2. 'self' → logprob: -7.50057315826416
    3. ' self' → logprob: -11.12557315826416
    4. ':' → logprob: -13.12557315826416
    5. '   ' → logprob: -13.37557315826416
    6. '	' → logprob: -14.37557315826416
    7. '	self' → logprob: -15.25057315826416
    8. ',' → logprob: -16.125572204589844
    9. '    ' → logprob: -16.125572204589844
    10. '      ' → logprob: -16.250572204589844

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17776575684547424
    2. '       ' → logprob: -1.9277657270431519
    3. ' self' → logprob: -4.052765846252441
    4. '	self' → logprob: -12.177765846252441
    5. '   ' → logprob: -12.302765846252441
    6. 'if' → logprob: -13.052765846252441
    7. ' ' → logprob: -14.177765846252441
    8. ' if' → logprob: -14.802765846252441
    9. '(self' → logprob: -14.927765846252441
    10. '[self' → logprob: -15.427765846252441

Token 432: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.0006800267728976905
    2. 'symbols' → logprob: -7.750679969787598
    3. '.' → logprob: -8.500679969787598
    4. '.sym' → logprob: -10.500679969787598
    5. ' .' → logprob: -11.750679969787598
    6. '_symbols' → logprob: -12.750679969787598
    7. ' symbols' → logprob: -13.000679969787598
    8. 'Symbols' → logprob: -13.250679969787598
    9. '.s' → logprob: -13.500679969787598
    10. '.tokens' → logprob: -14.000679969787598

Token 433: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.3795937522663735e-05
    2. '   ' → logprob: -11.62502384185791
    3. '=' → logprob: -12.37502384185791
    4. ' s' → logprob: -13.00002384185791
    5. 'symbols' → logprob: -13.50002384185791
    6. ' =' → logprob: -13.75002384185791
    7. 'es' → logprob: -13.87502384185791
    8. '_list' → logprob: -14.25002384185791
    9. '       ' → logprob: -14.25002384185791
    10. 'S' → logprob: -14.25002384185791

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519305646419525
    2. '=' → logprob: -1.501930594444275
    3. ':' → logprob: -14.126930236816406
    4. ' ' → logprob: -14.501930236816406
    5. '   ' → logprob: -16.001930236816406
    6. '  ' → logprob: -16.751930236816406
    7. '=[]' → logprob: -17.751930236816406
    8. ')' → logprob: -17.876930236816406
    9. ' ' → logprob: -17.876930236816406
    10. '[:]' → logprob: -18.376930236816406

Token 435: ' symbols' (ID: 29502)
  Prédit: 'symbols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' → logprob: -0.0006299942615441978
    2. ' symbols' → logprob: -7.375629901885986
    3. 'symbol' → logprob: -13.000630378723145
    4. 'list' → logprob: -14.250630378723145
    5. '[' → logprob: -15.875630378723145
    6. 'sym' → logprob: -16.000629425048828
    7. '   ' → logprob: -16.125629425048828
    8. '[]' → logprob: -16.500629425048828
    9. '[s' → logprob: -16.875629425048828
    10. 'Symbols' → logprob: -17.500629425048828

Token 436: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8308990597724915
    2. '

' → logprob: -1.3308990001678467
    3. '<|end|>' → logprob: -1.7058990001678467
    4. '   ' → logprob: -2.2058990001678467
    5. '<|end|>' → logprob: -5.205899238586426
    6. 'def' → logprob: -6.455899238586426
    7. '    
' → logprob: -7.330899238586426
    8. '
    
' → logprob: -9.205899238586426
    9. ' def' → logprob: -9.330899238586426
    10. '       ' → logprob: -9.580899238586426

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3698080778121948
    2. 'def' → logprob: -1.8698080778121948
    3. '
' → logprob: -1.9948080778121948
    4. '<|end|>' → logprob: -4.744808197021484
    5. '    
' → logprob: -5.119808197021484
    6. ' def' → logprob: -6.119808197021484
    7. '

' → logprob: -6.744808197021484
    8. ' ' → logprob: -8.494808197021484
    9. '<|end|>' → logprob: -8.494808197021484
    10. '  
' → logprob: -9.494808197021484

Token 438: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.113290095934644e-05
    2. '@property' → logprob: -9.750081062316895
    3. ' def' → logprob: -10.750081062316895
    4. '   ' → logprob: -13.750081062316895
    5. '@' (adapté à ' @') → logprob: -16.00008201599121
    6. '
' → logprob: -16.75008201599121
    7. '```' → logprob: -18.62508201599121
    8. 'class' → logprob: -18.87508201599121
    9. '    
' → logprob: -19.00008201599121
    10. '	def' → logprob: -19.00008201599121

Token 439: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.06378341466188431
    2. 'property' → logprob: -2.8137834072113037
    3. 'staticmethod' → logprob: -6.313783645629883
    4. 'str' → logprob: -13.188783645629883
    5. 'class' → logprob: -13.938783645629883
    6. '@property' → logprob: -15.938783645629883
    7. ' property' → logprob: -17.063783645629883
    8. 'len' → logprob: -17.813783645629883
    9. 'from' → logprob: -18.563783645629883
    10. 'Property' → logprob: -18.688783645629883

Token 440: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032562583219259977
    2. '   ' → logprob: -6.128256320953369
    3. 'from' → logprob: -7.503256320953369
    4. ' def' → logprob: -8.003255844116211
    5. '
' → logprob: -8.628255844116211
    6. '	def' → logprob: -13.503255844116211
    7. '(def' → logprob: -13.753255844116211
    8. '  ' → logprob: -14.378255844116211
    9. '```' → logprob: -14.378255844116211
    10. 'classmethod' → logprob: -15.003255844116211

Token 441: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006886058254167438
    2. ' def' → logprob: -7.875688552856445
    3. 'from' → logprob: -8.750688552856445
    4. '
' → logprob: -9.375688552856445
    5. '   ' → logprob: -9.875688552856445
    6. '	def' → logprob: -11.750688552856445
    7. 'classmethod' → logprob: -13.125688552856445
    8. '(def' → logprob: -13.250688552856445
    9. '    
' → logprob: -14.875688552856445
    10. '```' → logprob: -14.875688552856445

Token 442: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0488472618162632
    2. 'from' → logprob: -3.048847198486328
    3. '
' → logprob: -8.298847198486328
    4. 'classmethod' → logprob: -11.673847198486328
    5. ' def' → logprob: -13.173847198486328
    6. 'staticmethod' → logprob: -15.673847198486328
    7. 'From' → logprob: -15.798847198486328
    8. '    
' → logprob: -16.173847198486328
    9. ' from' → logprob: -16.798847198486328
    10. '   ' → logprob: -17.048847198486328

Token 443: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0034288892056792974
    2. 'def' → logprob: -6.253428936004639
    3. ' from' → logprob: -6.503428936004639
    4. ' def' → logprob: -14.87842845916748
    5. 'parse' → logprob: -16.003429412841797
    6. 'import' → logprob: -16.253429412841797
    7. '
' → logprob: -16.378429412841797
    8. 'From' → logprob: -16.628429412841797
    9. '.from' → logprob: -17.128429412841797
    10. 'classmethod' → logprob: -17.378429412841797

Token 444: '_string' (ID: 8609)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.163013219833374
    2. '_str' → logprob: -1.163013219833374
    3. 'str' → logprob: -1.538013219833374
    4. '_hex' → logprob: -2.413013219833374
    5. 'hex' → logprob: -3.038013219833374
    6. '_strings' → logprob: -3.913013219833374
    7. '_bytes' → logprob: -7.538013458251953
    8. '_tokens' → logprob: -7.788013458251953
    9. 'string' → logprob: -7.913013458251953
    10. 'List' → logprob: -8.163013458251953

Token 445: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -5.9153885558771435e-06
    2. 'cls' → logprob: -12.125005722045898
    3. ' cls' → logprob: -15.875005722045898
    4. '(' → logprob: -16.2500057220459
    5. '(
' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.2500057220459
    7. '```' → logprob: -17.3750057220459
    8. ' (' → logprob: -18.5000057220459
    9. 'def' → logprob: -19.0000057220459
    10. '_cls' → logprob: -19.3750057220459

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06999501585960388
    2. '(cls' → logprob: -2.6949949264526367
    3. ' (' → logprob: -10.569994926452637
    4. 'cls' → logprob: -11.194994926452637
    5. '   ' → logprob: -12.069994926452637
    6. ' ,' → logprob: -12.444994926452637
    7. ')' → logprob: -13.319994926452637
    8. ')(' → logprob: -13.569994926452637
    9. 'def' → logprob: -13.819994926452637
    10. '```' → logprob: -13.819994926452637

Token 447: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.06409630179405212
    2. 's' → logprob: -3.439096212387085
    3. 'cls' → logprob: -3.689096212387085
    4. 'hex' → logprob: -6.439096450805664
    5. 'rh' → logprob: -6.814096450805664
    6. 'string' → logprob: -7.064096450805664
    7. ' pattern' → logprob: -7.064096450805664
    8. ' rhythm' → logprob: -8.189096450805664
    9. 'symbol' → logprob: -9.189096450805664
    10. ' s' → logprob: -9.314096450805664

Token 448: '_str' (ID: 6182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48357266187667847
    2. '(cls' → logprob: -1.3585727214813232
    3. 'cls' → logprob: -2.8585727214813232
    4. '       ' → logprob: -3.2335727214813232
    5. ',' → logprob: -4.358572483062744
    6. '   ' → logprob: -4.733572483062744
    7. ')' → logprob: -5.733572483062744
    8. '```' → logprob: -6.858572483062744
    9. ' cls' → logprob: -7.483572483062744
    10. '):' → logprob: -7.483572483062744

Token 449: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008123142644762993
    2. '(cls' → logprob: -5.25812292098999
    3. 'cls' → logprob: -6.00812292098999
    4. ',' → logprob: -8.133123397827148
    5. ' cls' → logprob: -9.508123397827148
    6. '   ' → logprob: -10.633123397827148
    7. '       ' → logprob: -11.008123397827148
    8. ' :' → logprob: -11.633123397827148
    9. 'class' → logprob: -13.008123397827148
    10. ' ' → logprob: -13.008123397827148

Token 450: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3503064215183258
    2. ' str' → logprob: -1.2253063917160034
    3. 'cls' → logprob: -6.600306510925293
    4. ' cls' → logprob: -8.225306510925293
    5. ')' → logprob: -9.100306510925293
    6. 's' → logprob: -9.975306510925293
    7. '   ' → logprob: -10.600306510925293
    8. '[str' → logprob: -11.350306510925293
    9. ' ' → logprob: -11.850306510925293
    10. ' s' → logprob: -11.975306510925293

Token 451: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. '):' → logprob: -11.125017166137695
    3. '):
' → logprob: -13.625017166137695
    4. '   ' → logprob: -14.250017166137695
    5. ' )' → logprob: -15.125017166137695
    6. '       ' → logprob: -15.875017166137695
    7. '`)' → logprob: -16.875017166137695
    8. ')->' → logprob: -17.000017166137695
    9. '')' → logprob: -17.375017166137695
    10. '")' → logprob: -17.375017166137695

Token 452: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5986000299453735
    2. '->' → logprob: -1.4736000299453735
    3. ' ->' → logprob: -1.7236000299453735
    4. ')' → logprob: -3.473599910736084
    5. '       ' → logprob: -5.098599910736084
    6. ')->' → logprob: -5.723599910736084
    7. ':
' → logprob: -6.473599910736084
    8. '   ' → logprob: -7.723599910736084
    9. ',' → logprob: -9.223600387573242
    10. '):' → logprob: -9.348600387573242

Token 453: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03788276016712189
    2. ' '' → logprob: -3.9128828048706055
    3. 'List' → logprob: -5.1628828048706055
    4. 'Optional' → logprob: -5.2878828048706055
    5. ''r' → logprob: -5.9128828048706055
    6. ''T' → logprob: -7.0378828048706055
    7. ''class' → logprob: -7.1628828048706055
    8. 'cls' → logprob: -7.2878828048706055
    9. ''Re' → logprob: -8.162882804870605
    10. ''S' → logprob: -8.537882804870605

Token 454: 'Rh' (ID: 83050)
  Prédit: 'Rh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rh' → logprob: -1.6286106983898208e-05
    2. 'cls' → logprob: -11.375016212463379
    3. 'Hex' → logprob: -12.625016212463379
    4. ' Rhythm' → logprob: -13.625016212463379
    5. 'Harmony' → logprob: -16.750017166137695
    6. 'List' → logprob: -16.875017166137695
    7. '```' → logprob: -17.500017166137695
    8. 'RH' → logprob: -17.625017166137695
    9. '   ' → logprob: -17.875017166137695
    10. '
' → logprob: -18.125017166137695

Token 455: 'ythm' (ID: 38243)
  Prédit: 'ythm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ythm' → logprob: -7.584239938296378e-06
    2. 'hythm' → logprob: -11.875007629394531
    3. 'y' → logprob: -15.250007629394531
    4. 'yth' → logprob: -15.500007629394531
    5. '```' → logprob: -18.00000762939453
    6. 'yt' → logprob: -18.00000762939453
    7. 'Y' → logprob: -18.12500762939453
    8. 'th' → logprob: -18.37500762939453
    9. '`' → logprob: -18.37500762939453
    10. '``' → logprob: -18.50000762939453

Token 456: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -2.816093228830141e-06
    2. 'Pat' → logprob: -13.00000286102295
    3. 'P' → logprob: -15.50000286102295
    4. 'attern' → logprob: -16.000001907348633
    5. 'pattern' → logprob: -17.000001907348633
    6. 'Pa' → logprob: -17.000001907348633
    7. 'Patterns' → logprob: -17.125001907348633
    8. ' Pattern' → logprob: -18.125001907348633
    9. '_PATTERN' → logprob: -18.125001907348633
    10. '_pattern' → logprob: -18.500001907348633

Token 457: '':
' (ID: 7669)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.7803958654403687
    2. '):
' → logprob: -1.4053958654403687
    3. '):' → logprob: -1.9053958654403687
    4. '':' → logprob: -2.905395984649658
    5. ''):' → logprob: -3.030395984649658
    6. '':
' → logprob: -3.405395984649658
    7. ')' → logprob: -5.030395984649658
    8. '')' → logprob: -6.530395984649658
    9. ''):
' → logprob: -6.780395984649658
    10. ':' → logprob: -7.280395984649658

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007955700275488198
    2. 'tokens' → logprob: -8.000795364379883
    3. 'symbols' → logprob: -8.250795364379883
    4. ' tokens' → logprob: -8.875795364379883
    5. ' symbols' → logprob: -9.875795364379883
    6. 'symbol' → logprob: -13.875795364379883
    7. ' lines' → logprob: -13.875795364379883
    8. '   ' → logprob: -14.250795364379883
    9. 'segments' → logprob: -14.250795364379883
    10. 'sym' → logprob: -14.500795364379883

Token 459: ' if' (ID: 538)
  Prédit: 'symbols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' → logprob: -0.006569483783096075
    2. '       ' → logprob: -5.6315693855285645
    3. ' symbols' → logprob: -6.0065693855285645
    4. 'tokens' → logprob: -7.8815693855285645
    5. 'parts' → logprob: -9.756569862365723
    6. 'symbol' → logprob: -10.881569862365723
    7. 'sym' → logprob: -11.506569862365723
    8. 'sy' → logprob: -11.756569862365723
    9. 'chars' → logprob: -12.006569862365723
    10. 'if' (adapté à ' if') → logprob: -12.006569862365723

Token 460: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47410619258880615
    2. ' len' → logprob: -0.9741061925888062
    3. '(len' → logprob: -10.974105834960938
    4. ' not' → logprob: -12.224105834960938
    5. 'not' → logprob: -12.974105834960938
    6. '       ' → logprob: -12.974105834960938
    7. '   ' → logprob: -13.599105834960938
    8. 'pattern' → logprob: -14.099105834960938
    9. ' ' → logprob: -15.474105834960938
    10. '	len' → logprob: -16.474105834960938

Token 461: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.0019291093340143561
    2. 'pattern' → logprob: -6.25192928314209
    3. ' pattern' → logprob: -15.00192928314209
    4. '(' → logprob: -15.50192928314209
    5. '%' → logprob: -18.001928329467773
    6. ' (' → logprob: -18.751928329467773
    7. '.pattern' → logprob: -18.751928329467773
    8. 'attern' → logprob: -19.001928329467773
    9. '_pattern' → logprob: -19.126928329467773
    10. '   ' → logprob: -19.251928329467773

Token 462: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.003048177808523178
    2. 'pattern' → logprob: -6.378047943115234
    3. '(pattern' → logprob: -7.378047943115234
    4. 'str' → logprob: -7.753047943115234
    5. ')' → logprob: -8.253047943115234
    6. '%' → logprob: -11.628047943115234
    7. ' pattern' → logprob: -11.628047943115234
    8. 'Str' → logprob: -12.753047943115234
    9. ')%' → logprob: -12.753047943115234
    10. '   ' → logprob: -13.253047943115234

Token 463: ')' (ID: 8)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14931271970272064
    2. ' %' → logprob: -2.024312734603882
    3. ')' → logprob: -5.024312496185303
    4. ')%' → logprob: -10.524312973022461
    5. '%)' → logprob: -12.899312973022461
    6. ' ' → logprob: -12.899312973022461
    7. ' ' → logprob: -13.149312973022461
    8. ' )' → logprob: -13.524312973022461
    9. '   ' → logprob: -13.649312973022461
    10. '```' → logprob: -13.774312973022461

Token 464: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31327205896377563
    2. '%' → logprob: -1.3132719993591309
    3. ' ' → logprob: -11.688272476196289
    4. ' ' → logprob: -13.438272476196289
    5. '```' → logprob: -15.938272476196289
    6. '   ' → logprob: -16.31327247619629
    7. '()' → logprob: -16.93827247619629
    8. ')' → logprob: -17.06327247619629
    9. '%s' → logprob: -17.06327247619629
    10. '%B' → logprob: -17.43827247619629

Token 465: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -17.000085830688477
    4. '۲' → logprob: -17.500085830688477
    5. '   ' → logprob: -18.062585830688477
    6. '==' → logprob: -18.125085830688477
    7. '=' → logprob: -18.312585830688477
    8. '{' → logprob: -18.875085830688477
    9. '>' → logprob: -19.000085830688477
    10. 'def' → logprob: -19.062585830688477

Token 466: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۲' → logprob: -17.25006675720215
    4. '   ' → logprob: -17.87506675720215
    5. '```' → logprob: -18.43756675720215
    6. '२' → logprob: -19.37506675720215
    7. '{' → logprob: -19.37506675720215
    8. '  ' → logprob: -19.56256675720215
    9. '
' → logprob: -19.68756675720215
    10. '২' → logprob: -19.81256675720215

Token 467: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10044357180595398
    2. ' !=' → logprob: -2.3504436016082764
    3. ')!=' → logprob: -8.475443840026855
    4. '()!=' → logprob: -11.225443840026855
    5. '   ' → logprob: -11.975443840026855
    6. '!==' → logprob: -12.975443840026855
    7. '```' → logprob: -13.475443840026855
    8. '!="' → logprob: -13.850443840026855
    9. ']!=' → logprob: -13.975443840026855
    10. ':' → logprob: -13.975443840026855

Token 468: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01605301909148693
    2. ' ' → logprob: -4.141053199768066
    3. '1' → logprob: -10.891053199768066
    4. '   ' → logprob: -16.89105224609375
    5. '=' → logprob: -17.51605224609375
    6. '
' → logprob: -17.64105224609375
    7. ')' → logprob: -18.01605224609375
    8. '۰' → logprob: -18.57855224609375
    9. '  ' → logprob: -19.01605224609375
    10. '```' → logprob: -19.20355224609375

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -16.625085830688477
    4. '   ' → logprob: -17.750085830688477
    5. '
' → logprob: -19.000085830688477
    6. '=' → logprob: -20.375085830688477
    7. '  ' → logprob: -20.500085830688477
    8. ':' → logprob: -21.750085830688477
    9. '```' → logprob: -22.000085830688477
    10. '==' → logprob: -22.375085830688477

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22987620532512665
    2. ':
' → logprob: -1.604876160621643
    3. '           ' → logprob: -5.4798760414123535
    4. ' or' → logprob: -8.979876518249512
    5. '       ' → logprob: -9.229876518249512
    6. ',' → logprob: -10.979876518249512
    7. ' :' → logprob: -11.854876518249512
    8. ' and' → logprob: -12.104876518249512
    9. 'raise' → logprob: -12.354876518249512
    10. ' :
' → logprob: -12.479876518249512

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014573395310435444
    2. 'raise' → logprob: -9.50014591217041
    3. ' raise' → logprob: -9.75014591217041
    4. '       ' → logprob: -12.25014591217041
    5. '          ' → logprob: -13.00014591217041
    6. '   ' → logprob: -13.12514591217041
    7. '            ' → logprob: -13.75014591217041
    8. '
' → logprob: -14.00014591217041
    9. '        ' → logprob: -14.87514591217041
    10. '            
' → logprob: -15.25014591217041

Token 472: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.003195535857230425
    2. '           ' → logprob: -6.003195762634277
    3. ' raise' → logprob: -7.253195762634277
    4. '               ' → logprob: -11.753195762634277
    5. '	raise' → logprob: -13.378195762634277
    6. 'Raise' → logprob: -14.503195762634277
    7. '            ' → logprob: -14.628195762634277
    8. '   ' → logprob: -15.003195762634277
    9. '```' → logprob: -15.003195762634277
    10. '       ' → logprob: -15.128195762634277

Token 473: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.5048530030981055e-06
    2. ' Value' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.875001907348633
    4. 'Length' → logprob: -19.375001907348633
    5. ' ' → logprob: -19.500001907348633
    6. 'value' → logprob: -20.000001907348633
    7. '	Value' → logprob: -20.000001907348633
    8. '```' → logprob: -20.000001907348633
    9. 'Syntax' → logprob: -20.625001907348633
    10. '_value' → logprob: -21.125001907348633

Token 474: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00016921341011766344
    2. 'Value' → logprob: -8.875168800354004
    3. 'rror' → logprob: -10.500168800354004
    4. 'alue' → logprob: -13.375168800354004
    5. 'error' → logprob: -17.00016975402832
    6. '```' → logprob: -17.50016975402832
    7. 'LError' → logprob: -17.62516975402832
    8. 'Length' → logprob: -17.75016975402832
    9. '       ' → logprob: -17.87516975402832
    10. 'SError' → logprob: -18.00016975402832

Token 475: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0067208209075033665
    2. '(f' → logprob: -5.006721019744873
    3. '(' → logprob: -12.131720542907715
    4. '("'' → logprob: -17.13172149658203
    5. '('' → logprob: -17.25672149658203
    6. '(
' → logprob: -17.63172149658203
    7. '       ' → logprob: -19.63172149658203
    8. '("(' → logprob: -19.88172149658203
    9. '           ' → logprob: -20.63172149658203
    10. 'f' → logprob: -20.75672149658203

Token 476: 'Pattern' (ID: 16821)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.6491378545761108
    2. '"' → logprob: -0.7741378545761108
    3. 'Pattern' → logprob: -4.1491379737854
    4. ' pattern' → logprob: -8.399137496948242
    5. 'f' → logprob: -8.774137496948242
    6. 'Invalid' → logprob: -9.399137496948242
    7. 'Input' → logprob: -10.024137496948242
    8. ''' → logprob: -10.274137496948242
    9. '"In' → logprob: -10.649137496948242
    10. '"The' → logprob: -11.399137496948242

Token 477: ' string' (ID: 1621)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9172629117965698
    2. '_str' → logprob: -1.4172629117965698
    3. ' string' → logprob: -1.5422629117965698
    4. 'string' → logprob: -2.0422630310058594
    5. ' must' → logprob: -5.542263031005859
    6. ' strings' → logprob: -5.667263031005859
    7. ' str' → logprob: -5.792263031005859
    8. ' length' → logprob: -6.667263031005859
    9. '   ' → logprob: -6.792263031005859
    10. 'length' → logprob: -7.542263031005859

Token 478: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.3216053247451782
    2. ' must' → logprob: -1.4466053247451782
    3. 'length' → logprob: -3.9466052055358887
    4. ' doit' → logprob: -4.071605205535889
    5. 'must' → logprob: -6.571605205535889
    6. 'len' → logprob: -7.446605205535889
    7. ' should' → logprob: -7.571605205535889
    8. ' has' → logprob: -8.321605682373047
    9. ' does' → logprob: -8.821605682373047
    10. ' longueur' → logprob: -9.071605682373047

Token 479: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.002427621278911829
    2. ' doit' → logprob: -6.377427577972412
    3. 'must' → logprob: -7.252427577972412
    4. ' should' → logprob: -11.25242805480957
    5. ' debe' → logprob: -13.25242805480957
    6. ' not' → logprob: -14.62742805480957
    7. '%' → logprob: -15.00242805480957
    8. ' ' → logprob: -15.37742805480957
    9. ' is' → logprob: -16.00242805480957
    10. ' deve' → logprob: -16.25242805480957

Token 480: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0007528089336119592
    2. 'be' → logprob: -7.250752925872803
    3. '%' → logprob: -10.500752449035645
    4. ' ' → logprob: -11.625752449035645
    5. '	be' → logprob: -13.125752449035645
    6. '<|end|>' → logprob: -13.625752449035645
    7. ' %' → logprob: -14.250752449035645
    8. 'mod' → logprob: -14.375752449035645
    9. ')' → logprob: -14.375752449035645
    10. 'div' → logprob: -15.000752449035645

Token 481: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.12716569006443024
    2. ' even' → logprob: -2.1271657943725586
    3. ' ' → logprob: -9.252165794372559
    4. ' divisible' → logprob: -9.877165794372559
    5. 'an' → logprob: -10.377165794372559
    6. ' an' → logprob: -11.502165794372559
    7. '2' → logprob: -11.502165794372559
    8. 'evenodd' → logprob: -11.752165794372559
    9. ' a' → logprob: -12.002165794372559
    10. 'div' → logprob: -12.127165794372559

Token 482: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.001695176586508751
    2. '")' → logprob: -6.501695156097412
    3. '.")
' → logprob: -9.50169563293457
    4. ')")
' → logprob: -9.50169563293457
    5. '")
' → logprob: -11.37669563293457
    6. '       ' → logprob: -11.50169563293457
    7. ' for' → logprob: -11.87669563293457
    8. ' ")
' → logprob: -12.00169563293457
    9. ' to' → logprob: -12.37669563293457
    10. ')' → logprob: -13.62669563293457

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1160349458805285e-05
    2. '
' → logprob: -12.000011444091797
    3. '   ' → logprob: -13.375011444091797
    4. 'tokens' → logprob: -13.625011444091797
    5. '        
' → logprob: -14.375011444091797
    6. ' tokens' → logprob: -14.875011444091797
    7. 'return' → logprob: -15.250011444091797
    8. 'token' → logprob: -15.500011444091797
    9. '           ' → logprob: -15.750011444091797
    10. '	' → logprob: -15.875011444091797

Token 484: ' symbols' (ID: 29502)
  Prédit: 'symbols'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' (adapté à ' symbols') → logprob: -0.014399359934031963
    2. '       ' → logprob: -4.264399528503418
    3. ' symbols' → logprob: -8.889399528503418
    4. 'tokens' → logprob: -9.389399528503418
    5. 'return' → logprob: -12.139399528503418
    6. 'sy' → logprob: -12.514399528503418
    7. 'sym' → logprob: -13.514399528503418
    8. 'symbol' → logprob: -13.639399528503418
    9. '   ' → logprob: -13.764399528503418
    10. 'parts' → logprob: -14.514399528503418

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193798542022705
    2. '=' → logprob: -1.501937985420227
    3. '=[]' → logprob: -12.251937866210938
    4. '=[' → logprob: -13.001937866210938
    5. '.append' → logprob: -13.751937866210938
    6. '=[]
' → logprob: -15.001937866210938
    7. ' =[' → logprob: -16.001937866210938
    8. '   ' → logprob: -16.251937866210938
    9. ':' → logprob: -16.376937866210938
    10. '	' → logprob: -16.876937866210938

Token 486: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001933277933858335
    2. '[
' → logprob: -6.2519330978393555
    3. '   ' → logprob: -13.376933097839355
    4. ' [' → logprob: -13.751933097839355
    5. '       ' → logprob: -14.001933097839355
    6. '[self' → logprob: -15.001933097839355
    7. '[]
' → logprob: -15.251933097839355
    8. '[class' → logprob: -15.751933097839355
    9. '[int' → logprob: -15.876933097839355
    10. '           ' → logprob: -16.001934051513672

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06673653423786163
    2. 'for' → logprob: -3.3167364597320557
    3. ' for' → logprob: -3.5667364597320557
    4. '   ' → logprob: -10.941736221313477
    5. '
' → logprob: -11.816736221313477
    6. ' ' → logprob: -11.941736221313477
    7. '	' → logprob: -12.566736221313477
    8. '           ' → logprob: -13.816736221313477
    9. '	for' → logprob: -13.816736221313477
    10. ' ' → logprob: -13.941736221313477

Token 488: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.791440293658525e-05
    2. '       ' → logprob: -9.500078201293945
    3. ' for' → logprob: -12.750078201293945
    4. '           ' → logprob: -17.250078201293945
    5. '   ' → logprob: -17.375078201293945
    6. 'i' → logprob: -18.250078201293945
    7. '	for' → logprob: -19.250078201293945
    8. '
' → logprob: -19.500078201293945
    9. '               ' → logprob: -20.250078201293945
    10. '        ' → logprob: -21.250078201293945

Token 489: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.250000953674316
    3. 'idx' → logprob: -19.25
    4. '	i' → logprob: -21.375
    5. '   ' → logprob: -22.125
    6. 'index' → logprob: -22.5
    7. '_i' → logprob: -23.875
    8. 'pos' → logprob: -24.375
    9. '```' → logprob: -25.75
    10. ' ' → logprob: -26.25

Token 490: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023248855024576187
    2. 'in' → logprob: -3.7732489109039307
    3. ' ' → logprob: -13.148248672485352
    4. 'i' → logprob: -15.148248672485352
    5. '   ' → logprob: -15.648248672485352
    6. '	in' → logprob: -15.648248672485352
    7. '
' → logprob: -15.773248672485352
    8. 'In' → logprob: -15.898248672485352
    9. '_in' → logprob: -16.14824867248535
    10. 'import' → logprob: -16.14824867248535

Token 491: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.750036239624023
    4. ' ' → logprob: -19.375036239624023
    5. '	range' → logprob: -21.500036239624023
    6. 'pattern' → logprob: -21.625036239624023
    7. '  ' → logprob: -22.000036239624023
    8. '
' → logprob: -22.500036239624023
    9. '(range' → logprob: -23.125036239624023
    10. '    ' → logprob: -23.250036239624023

Token 492: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00864376686513424
    2. '0' → logprob: -4.758643627166748
    3. ' ' → logprob: -10.758644104003906
    4. ' (' → logprob: -12.758644104003906
    5. '(len' → logprob: -12.883644104003906
    6. '   ' → logprob: -13.633644104003906
    7. 'len' → logprob: -14.008644104003906
    8. '(
' → logprob: -14.758644104003906
    9. '       ' → logprob: -17.633644104003906
    10. ' len' → logprob: -17.758644104003906

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.000009536743164
    4. 'len' → logprob: -17.000009536743164
    5. '       ' → logprob: -19.125009536743164
    6. '           ' → logprob: -20.000009536743164
    7. '۰' → logprob: -20.000009536743164
    8. '    ' → logprob: -20.125009536743164
    9. '```' → logprob: -20.125009536743164
    10. '  ' → logprob: -20.625009536743164

Token 494: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5458592772483826
    2. '0' → logprob: -0.9208592772483826
    3. ' len' → logprob: -4.670859336853027
    4. ',' → logprob: -5.170859336853027
    5. 'len' → logprob: -5.795859336853027
    6. '2' → logprob: -6.420859336853027
    7. '   ' → logprob: -7.045859336853027
    8. '       ' → logprob: -7.045859336853027
    9. ' ,' → logprob: -7.795859336853027
    10. ',len' → logprob: -8.045859336853027

Token 495: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005530327325686812
    2. ' len' → logprob: -7.500553131103516
    3. '       ' → logprob: -19.625553131103516
    4. '(len' → logprob: -20.250553131103516
    5. '	len' → logprob: -20.375553131103516
    6. ',len' → logprob: -21.750553131103516
    7. '   ' → logprob: -22.250553131103516
    8. '           ' → logprob: -22.375553131103516
    9. '```' → logprob: -23.250553131103516
    10. '[len' → logprob: -23.250553131103516

Token 496: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.0007157695363275707
    2. 'pattern' → logprob: -7.250715732574463
    3. '(' → logprob: -12.125716209411621
    4. ' pattern' → logprob: -15.750716209411621
    5. '(
' → logprob: -16.500715255737305
    6. ' (' → logprob: -17.375715255737305
    7. '_pattern' → logprob: -17.625715255737305
    8. '```' → logprob: -17.875715255737305
    9. ')' → logprob: -18.375715255737305
    10. '.pattern' → logprob: -18.875715255737305

Token 497: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.8624639324116288e-06
    2. 'str' → logprob: -13.250001907348633
    3. ')' → logprob: -17.000001907348633
    4. 'Str' → logprob: -17.750001907348633
    5. '```' → logprob: -18.375001907348633
    6. '_STR' → logprob: -18.500001907348633
    7. '-str' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.750001907348633
    9. '_string' → logprob: -19.875001907348633
    10. '	str' → logprob: -20.375001907348633

Token 498: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.967624019831419e-05
    2. ' ,' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.250060081481934
    4. '),' → logprob: -14.875060081481934
    5. ',i' → logprob: -15.750060081481934
    6. ' ' → logprob: -15.875060081481934
    7. '(),' → logprob: -17.125059127807617
    8. '       ' → logprob: -18.375059127807617
    9. '```' → logprob: -18.375059127807617
    10. '  ' → logprob: -18.750059127807617

Token 499: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -20.625051498413086
    4. '   ' → logprob: -20.750051498413086
    5. '۲' → logprob: -21.250051498413086
    6. '２' → logprob: -21.875051498413086
    7. '  ' → logprob: -23.000051498413086
    8. '٢' → logprob: -23.625051498413086
    9. ' ' → logprob: -23.875051498413086
    10. '
' → logprob: -24.500051498413086

Token 500: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.62502098083496
    4. '۲' → logprob: -19.62502098083496
    5. '```' → logprob: -20.12502098083496
    6. '２' → logprob: -20.75002098083496
    7. '  ' → logprob: -21.00002098083496
    8. ')' → logprob: -21.25002098083496
    9. '٢' → logprob: -22.12502098083496
    10. ' ' → logprob: -22.31252098083496

Token 501: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01832798309624195
    2. '):' → logprob: -4.0183281898498535
    3. '):
' → logprob: -9.143327713012695
    4. ')' → logprob: -10.518327713012695
    5. '       ' → logprob: -11.018327713012695
    6. '   ' → logprob: -11.268327713012695
    7. ':' → logprob: -11.768327713012695
    8. ':
' → logprob: -12.518327713012695
    9. ',' → logprob: -12.893327713012695
    10. ' ):
' → logprob: -14.768327713012695

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029922015964984894
    2. 'hex' → logprob: -6.002992153167725
    3. ' hex' → logprob: -7.877992153167725
    4. 'symbols' → logprob: -9.877992630004883
    5. 'symbol' → logprob: -10.127992630004883
    6. 'tokens' → logprob: -11.877992630004883
    7. 'token' → logprob: -11.877992630004883
    8. '_hex' → logprob: -12.127992630004883
    9. ' symbols' → logprob: -12.252992630004883
    10. 'sym' → logprob: -12.627992630004883

Token 503: ' sym' (ID: 5357)
  Prédit: 'symbols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' → logprob: -0.2795715630054474
    2. 'symbol' → logprob: -1.654571533203125
    3. 'hex' → logprob: -3.279571533203125
    4. 'sym' (adapté à ' sym') → logprob: -4.404571533203125
    5. '           ' → logprob: -6.404571533203125
    6. ' symbols' → logprob: -7.404571533203125
    7. 's' → logprob: -8.904571533203125
    8. 'token' → logprob: -9.154571533203125
    9. 'sy' → logprob: -9.529571533203125
    10. ' hex' → logprob: -9.654571533203125

Token 504: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8480992317199707
    2. 'bol' → logprob: -0.8480992317199707
    3. '=' → logprob: -2.3480992317199707
    4. 'b' → logprob: -3.2230992317199707
    5. 'bole' → logprob: -5.348099231719971
    6. 'ols' → logprob: -6.473099231719971
    7. '   ' → logprob: -8.223098754882812
    8. '=s' → logprob: -8.723098754882812
    9. 'ptoms' → logprob: -8.723098754882812
    10. 'bo' → logprob: -8.848098754882812

Token 505: ' Hex' (ID: 56318)
  Prédit: 'Hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hex' → logprob: -0.0017368246335536242
    2. 'cls' → logprob: -6.501736640930176
    3. ' Hex' → logprob: -8.376736640930176
    4. ' cls' → logprob: -12.501736640930176
    5. '   ' → logprob: -15.001736640930176
    6. 'Cls' → logprob: -15.626736640930176
    7. 'hex' → logprob: -17.126737594604492
    8. '       ' → logprob: -18.126737594604492
    9. 'cl' → logprob: -18.501737594604492
    10. ' ' → logprob: -18.501737594604492

Token 506: 'Music' (ID: 28138)
  Prédit: 'Music'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Music' → logprob: -6.988221684878226e-06
    2. 'Mus' → logprob: -12.000006675720215
    3. 'M' → logprob: -14.875006675720215
    4. '           ' → logprob: -16.50000762939453
    5. '_music' → logprob: -16.50000762939453
    6. '```' → logprob: -16.87500762939453
    7. ' Music' → logprob: -17.00000762939453
    8. 'music' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.50000762939453
    10. '_M' → logprob: -17.62500762939453

Token 507: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -0.0001427538663847372
    2. 'Music' → logprob: -9.750143051147461
    3. '_symbol' → logprob: -10.625143051147461
    4. 'symbol' → logprob: -10.750143051147461
    5. 'ymbol' → logprob: -11.000143051147461
    6. 'String' → logprob: -11.750143051147461
    7. 'Symbols' → logprob: -12.125143051147461
    8. 'str' → logprob: -12.625143051147461
    9. '           ' → logprob: -13.750143051147461
    10. 'Sound' → logprob: -14.125143051147461

Token 508: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -4.394135612528771e-05
    2. 'pattern' → logprob: -10.625043869018555
    3. '(' → logprob: -11.000043869018555
    4. '.from' → logprob: -13.250043869018555
    5. 'from' → logprob: -13.750043869018555
    6. '.pattern' → logprob: -16.750043869018555
    7. '(
' → logprob: -17.500043869018555
    8. ' pattern' → logprob: -18.500043869018555
    9. '(symbol' → logprob: -18.500043869018555
    10. ' (' → logprob: -19.250043869018555

Token 509: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.253090865968261e-06
    2. 'str' → logprob: -11.625009536743164
    3. 'Str' → logprob: -15.375009536743164
    4. ')' → logprob: -17.875009536743164
    5. '[str' → logprob: -18.125009536743164
    6. '   ' → logprob: -18.625009536743164
    7. '       ' → logprob: -19.125009536743164
    8. '[' → logprob: -19.750009536743164
    9. '```' → logprob: -19.750009536743164
    10. '$str' → logprob: -19.875009536743164

Token 510: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. '[
' → logprob: -16.5
    4. 'i' → logprob: -16.875
    5. '   ' → logprob: -18.375
    6. ' [' → logprob: -18.5
    7. ')[' → logprob: -19.75
    8. '```' → logprob: -20.625
    9. '(i' → logprob: -20.75
    10. ' ' → logprob: -21.25

Token 511: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.00014048899174667895
    2. 'i' → logprob: -9.000140190124512
    3. ':' → logprob: -11.625140190124512
    4. '(i' → logprob: -12.750140190124512
    5. ' :' → logprob: -13.250140190124512
    6. '[i' → logprob: -13.875140190124512
    7. '   ' → logprob: -14.250140190124512
    8. ' i' → logprob: -14.500140190124512
    9. ',i' → logprob: -15.125140190124512
    10. '{i' → logprob: -15.125140190124512

Token 512: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004123280756175518
    2. '2' → logprob: -5.504123210906982
    3. ' +' → logprob: -10.12912368774414
    4. 'i' → logprob: -13.50412368774414
    5. ' ' → logprob: -13.50412368774414
    6. '   ' → logprob: -13.62912368774414
    7. '+i' → logprob: -13.87912368774414
    8. ':i' → logprob: -16.37912368774414
    9. ' i' → logprob: -17.00412368774414
    10. '```' → logprob: -17.62912368774414

Token 513: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.00000762939453
    4. '```' → logprob: -18.37500762939453
    5. '"' → logprob: -19.25000762939453
    6. '02' → logprob: -20.12500762939453
    7. '２' → logprob: -20.12500762939453
    8. ']' → logprob: -20.12500762939453
    9. '  ' → logprob: -20.25000762939453
    10. ''' → logprob: -20.31250762939453

Token 514: '].' (ID: 1651)
  Prédit: '])
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.122282013297081
    2. ')
' → logprob: -2.622282028198242
    3. '])' → logprob: -3.247282028198242
    4. ')' → logprob: -5.872282028198242
    5. ']' → logprob: -8.247282028198242
    6. '       ' → logprob: -8.497282028198242
    7. '           ' → logprob: -9.247282028198242
    8. '])
' → logprob: -9.372282028198242
    9. ']
' → logprob: -9.372282028198242
    10. ')
' → logprob: -10.872282028198242

Token 515: 'upper' (ID: 26119)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.030278582125902176
    2. 'upper' → logprob: -3.5302786827087402
    3. ')' → logprob: -8.030278205871582
    4. 'str' → logprob: -8.780278205871582
    5. 'replace' → logprob: -11.530278205871582
    6. 'rstrip' → logprob: -11.530278205871582
    7. ' upper' → logprob: -11.655278205871582
    8. ' ' → logprob: -12.030278205871582
    9. '__' → logprob: -12.155278205871582
    10. 'decode' → logprob: -13.155278205871582

Token 516: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.048052143305540085
    2. ')' → logprob: -3.2980520725250244
    3. '())
' → logprob: -4.7980523109436035
    4. '()' → logprob: -6.4230523109436035
    5. ')
' → logprob: -9.798051834106445
    6. '())
' → logprob: -11.298051834106445
    7. '])' → logprob: -11.423051834106445
    8. '()]' → logprob: -12.798051834106445
    9. ' ())' → logprob: -12.798051834106445
    10. '()
' → logprob: -12.923051834106445

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.2855416066013277e-05
    2. ')' → logprob: -11.500032424926758
    3. '
' → logprob: -11.500032424926758
    4. 'symbols' → logprob: -12.000032424926758
    5. ',' → logprob: -12.750032424926758
    6. ')
' → logprob: -14.500032424926758
    7. '            
' → logprob: -14.625032424926758
    8. '       ' → logprob: -14.625032424926758
    9. ' symbols' → logprob: -14.750032424926758
    10. '          ' → logprob: -14.875032424926758

Token 518: ' symbols' (ID: 29502)
  Prédit: 'symbols'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' (adapté à ' symbols') → logprob: -0.0006812188657931983
    2. '           ' → logprob: -7.375681400299072
    3. ' symbols' → logprob: -9.875680923461914
    4. 'sym' → logprob: -13.125680923461914
    5. 'tokens' → logprob: -14.375680923461914
    6. '_symbols' → logprob: -15.500680923461914
    7. '       ' → logprob: -15.625680923461914
    8. 'symbol' → logprob: -16.375680923461914
    9. '               ' → logprob: -16.625680923461914
    10. '.symbol' → logprob: -17.250680923461914

Token 519: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011726059019565582
    2. '.' → logprob: -6.7511725425720215
    3. '.add' → logprob: -14.50117301940918
    4. '.app' → logprob: -14.75117301940918
    5. '.ap' → logprob: -15.00117301940918
    6. ').' → logprob: -15.37617301940918
    7. '.Append' → logprob: -15.50117301940918
    8. '.push' → logprob: -15.50117301940918
    9. '.extend' → logprob: -15.50117301940918
    10. '.setdefault' → logprob: -16.25117301940918

Token 520: '(sym' (ID: 143899)
  Prédit: '(sym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sym' → logprob: -6.2729995988775045e-06
    2. 'sym' → logprob: -12.000006675720215
    3. '(' → logprob: -18.0000057220459
    4. ' sym' → logprob: -20.0000057220459
    5. '(symbol' → logprob: -20.5000057220459
    6. '(
' → logprob: -21.7500057220459
    7. '(s' → logprob: -22.2500057220459
    8. '(sim' → logprob: -22.2500057220459
    9. '_sym' → logprob: -23.6250057220459
    10. '(sys' → logprob: -24.3750057220459

Token 521: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2565528452396393
    2. ')
' → logprob: -1.506552815437317
    3. '       ' → logprob: -5.381552696228027
    4. ')return' → logprob: -11.881552696228027
    5. ')
' → logprob: -12.756552696228027
    6. '
' → logprob: -14.006552696228027
    7. ')

' → logprob: -14.256552696228027
    8. ')`
' → logprob: -15.006552696228027
    9. ')\
' → logprob: -15.881552696228027
    10. '),' → logprob: -15.881552696228027

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032933284528553486
    2. 'return' → logprob: -5.878293514251709
    3. ' return' → logprob: -7.628293514251709
    4. '
' → logprob: -14.50329303741455
    5. '	return' → logprob: -14.62829303741455
    6. '	' → logprob: -14.87829303741455
    7. '   ' → logprob: -15.37829303741455
    8. '      ' → logprob: -16.253293991088867
    9. '```' → logprob: -16.378293991088867
    10. ')return' → logprob: -16.753293991088867

Token 523: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005436639301478863
    2. '       ' → logprob: -5.255436420440674
    3. ' return' → logprob: -8.505436897277832
    4. '	return' → logprob: -15.755436897277832
    5. ')return' → logprob: -16.255435943603516
    6. '
' → logprob: -16.755435943603516
    7. '   ' → logprob: -17.005435943603516
    8. '```' → logprob: -17.130435943603516
    9. ':return' → logprob: -17.630435943603516
    10. 'eturn' → logprob: -18.130435943603516

Token 524: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.000553151941858232
    2. ' cls' → logprob: -7.500553131103516
    3. 'Rh' → logprob: -16.625553131103516
    4. '(cls' → logprob: -17.375553131103516
    5. 'cl' → logprob: -19.000553131103516
    6. 'classmethod' → logprob: -19.000553131103516
    7. 'rh' → logprob: -19.625553131103516
    8. '   ' → logprob: -21.000553131103516
    9. '_cls' → logprob: -21.250553131103516
    10. 'Cls' → logprob: -21.375553131103516

Token 525: '(symbol' (ID: 81393)
  Prédit: '(symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(symbol' → logprob: -0.0013844015775248408
    2. 'symbols' → logprob: -7.126384258270264
    3. '(pattern' → logprob: -7.501384258270264
    4. '(Symbol' → logprob: -11.126384735107422
    5. '(sym' → logprob: -12.876384735107422
    6. '(' → logprob: -13.251384735107422
    7. '(tuple' → logprob: -13.376384735107422
    8. '(R' → logprob: -13.626384735107422
    9. ' symbols' → logprob: -13.876384735107422
    10. '(
' → logprob: -13.876384735107422

Token 526: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.792751032160595e-05
    2. 'symbols' → logprob: -9.50008773803711
    3. 'sym' → logprob: -12.00008773803711
    4. ')' → logprob: -12.87508773803711
    5. '_symbols' → logprob: -13.25008773803711
    6. ')s' → logprob: -14.00008773803711
    7. 'str' → logprob: -14.37508773803711
    8. 'ss' → logprob: -15.62508773803711
    9. ' symbols' → logprob: -16.00008773803711
    10. 'Symbols' → logprob: -16.50008773803711

Token 527: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '<|end|>' → logprob: -13.25000286102295
    3. ')return' → logprob: -14.62500286102295
    4. ')
' → logprob: -14.62500286102295
    5. '       ' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.500001907348633
    7. ' )' → logprob: -17.875001907348633
    8. '}' → logprob: -18.125001907348633
    9. '<|end|>' → logprob: -18.125001907348633
    10. '),' → logprob: -18.375001907348633

Token 528: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5777564644813538
    2. '   ' → logprob: -0.8277564644813538
    3. ' def' → logprob: -6.827756404876709
    4. '
' → logprob: -8.452756881713867
    5. '```' → logprob: -8.452756881713867
    6. '    
' → logprob: -9.452756881713867
    7. '@' → logprob: -9.952756881713867
    8. '(' → logprob: -10.077756881713867
    9. '@property' → logprob: -10.702756881713867
    10. ' ' → logprob: -10.952756881713867

Token 529: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.259079363080673e-05
    2. ' def' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.000012397766113
    4. '@property' → logprob: -16.00001335144043
    5. '@' → logprob: -17.37501335144043
    6. '	def' → logprob: -18.25001335144043
    7. 'class' → logprob: -19.25001335144043
    8. '```' → logprob: -19.50001335144043
    9. ' ' → logprob: -19.75001335144043
    10. 'de' → logprob: -19.87501335144043

Token 530: ' length' (ID: 5517)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00969470851123333
    2. 'to' → logprob: -4.884694576263428
    3. 'def' → logprob: -6.509694576263428
    4. 'length' → logprob: -8.384695053100586
    5. 'get' → logprob: -9.134695053100586
    6. ' __' → logprob: -9.509695053100586
    7. 'append' → logprob: -9.634695053100586
    8. 'is' → logprob: -10.384695053100586
    9. 'validate' → logprob: -10.509695053100586
    10. 'len' → logprob: -10.884695053100586

Token 531: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006328551680780947
    2. '(' → logprob: -7.3756327629089355
    3. 'self' → logprob: -13.125633239746094
    4. '()' → logprob: -13.250633239746094
    5. '(
' → logprob: -13.250633239746094
    6. '   ' → logprob: -15.875633239746094
    7. ')' → logprob: -16.000633239746094
    8. ' (' → logprob: -16.375633239746094
    9. '@property' → logprob: -16.375633239746094
    10. 'def' → logprob: -16.625633239746094

Token 532: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.910643762443215e-05
    2. '):' → logprob: -10.000079154968262
    3. 'self' → logprob: -11.375079154968262
    4. ')->' → logprob: -12.000079154968262
    5. '(self' → logprob: -12.125079154968262
    6. '):
' → logprob: -12.500079154968262
    7. '   ' → logprob: -12.750079154968262
    8. '()' → logprob: -13.250079154968262
    9. ' )' → logprob: -14.750079154968262
    10. ')return' → logprob: -14.875079154968262

Token 533: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024739265791140497
    2. 'self' → logprob: -8.50024700164795
    3. '->' → logprob: -10.37524700164795
    4. '(' → logprob: -11.62524700164795
    5. ')' → logprob: -13.62524700164795
    6. 'def' → logprob: -14.25024700164795
    7. ' ->' → logprob: -14.37524700164795
    8. '   ' → logprob: -14.50024700164795
    9. '       ' → logprob: -14.75024700164795
    10. '()' → logprob: -16.250247955322266

Token 534: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003178306156769395
    2. ' int' → logprob: -5.753178119659424
    3. ')' → logprob: -14.503178596496582
    4. '   ' → logprob: -17.378177642822266
    5. '(int' → logprob: -18.253177642822266
    6. '[int' → logprob: -19.003177642822266
    7. ' ' → logprob: -20.503177642822266
    8. 'len' → logprob: -20.628177642822266
    9. ':int' → logprob: -20.878177642822266
    10. '	int' → logprob: -21.128177642822266

Token 535: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03079730086028576
    2. '->' → logprob: -3.780797243118286
    3. 'self' → logprob: -5.155797481536865
    4. ' ->' → logprob: -7.530797481536865
    5. ')' → logprob: -7.780797481536865
    6. ':' → logprob: -8.030797004699707
    7. '(' → logprob: -8.030797004699707
    8. '   ' → logprob: -9.780797004699707
    9. '       ' → logprob: -9.905797004699707
    10. '(
' → logprob: -10.905797004699707

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008068625815212727
    2. 'return' → logprob: -5.008068561553955
    3. ' return' → logprob: -6.758068561553955
    4. ':' → logprob: -8.883069038391113
    5. ':return' → logprob: -10.258069038391113
    6. '   ' → logprob: -11.383069038391113
    7. ':
' → logprob: -13.258069038391113
    8. '	return' → logprob: -13.633069038391113
    9. '```' → logprob: -14.758069038391113
    10. '0' → logprob: -15.008069038391113

Token 537: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.147740689106286e-05
    2. ' return' → logprob: -9.75007152557373
    3. '       ' → logprob: -11.25007152557373
    4. '   ' → logprob: -16.125070571899414
    5. 'len' → logprob: -18.625070571899414
    6. '	return' → logprob: -19.125070571899414
    7. '```' → logprob: -21.375070571899414
    8. '
' → logprob: -21.750070571899414
    9. ':return' → logprob: -22.500070571899414
    10. '{return' → logprob: -22.625070571899414

Token 538: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005233763717114925
    2. ' len' → logprob: -5.2552337646484375
    3. '	len' → logprob: -20.255233764648438
    4. '(len' → logprob: -20.380233764648438
    5. '=len' → logprob: -23.380233764648438
    6. '   ' → logprob: -23.505233764648438
    7. '       ' → logprob: -23.630233764648438
    8. '[len' → logprob: -24.130233764648438
    9. ' ' → logprob: -25.755233764648438
    10. 'Len' → logprob: -26.130233764648438

Token 539: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. 'self' → logprob: -16.875
    4. ' (' → logprob: -21.625
    5. '[self' → logprob: -22.25
    6. '```' → logprob: -22.25
    7. '(Self' → logprob: -23.25
    8. '(
' → logprob: -23.25
    9. '(this' → logprob: -23.375
    10. '	self' → logprob: -23.5

Token 540: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -8.65707261255011e-06
    2. 'symbols' → logprob: -12.000008583068848
    3. '.sym' → logprob: -13.750008583068848
    4. ' .' → logprob: -14.250008583068848
    5. '.' → logprob: -14.500008583068848
    6. '.s' → logprob: -16.375009536743164
    7. '.tokens' → logprob: -16.875009536743164
    8. ').' → logprob: -16.875009536743164
    9. '.sy' → logprob: -17.250009536743164
    10. '(symbol' → logprob: -17.625009536743164

Token 541: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00026264708139933646
    2. '.symbol' → logprob: -8.750262260437012
    3. 'symbols' → logprob: -9.375262260437012
    4. '.s' → logprob: -11.250262260437012
    5. ')s' → logprob: -12.500262260437012
    6. ')' → logprob: -13.250262260437012
    7. '_symbols' → logprob: -16.000263214111328
    8. ').' → logprob: -16.375263214111328
    9. '.sym' → logprob: -16.500263214111328
    10. 'ols' → logprob: -16.500263214111328

Token 542: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '<|end|>' → logprob: -13.000005722045898
    3. ')
' → logprob: -13.250005722045898
    4. '   ' → logprob: -14.375005722045898
    5. '())' → logprob: -15.625005722045898
    6. ')return' → logprob: -15.750005722045898
    7. '()' → logprob: -15.875005722045898
    8. ' )' → logprob: -16.0000057220459
    9. '<|end|>' → logprob: -17.3750057220459
    10. '}' → logprob: -17.5000057220459

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022514695301651955
    2. 'def' → logprob: -4.147514820098877
    3. '
' → logprob: -5.647514820098877
    4. '```' → logprob: -6.272514820098877
    5. '    
' → logprob: -8.147514343261719
    6. ' def' → logprob: -8.147514343261719
    7. '<|end|>' → logprob: -8.897514343261719
    8. '(' → logprob: -9.397514343261719
    9. ' ' → logprob: -10.272514343261719
    10. '[' → logprob: -10.522514343261719

Token 544: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.749814019713085e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.500006675720215
    4. '	def' → logprob: -17.12500762939453
    5. '```' → logprob: -19.87500762939453
    6. '[' → logprob: -20.12500762939453
    7. '    
' → logprob: -20.62500762939453
    8. '[]' → logprob: -20.75000762939453
    9. '@' → logprob: -21.25000762939453
    10. ' ' → logprob: -21.50000762939453

Token 545: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08090853691101074
    2. ' __' → logprob: -3.3309085369110107
    3. 'get' → logprob: -3.7059085369110107
    4. 'to' → logprob: -4.20590877532959
    5. ' get' → logprob: -6.70590877532959
    6. 'is' → logprob: -7.70590877532959
    7. 'symbols' → logprob: -8.33090877532959
    8. 'symbol' → logprob: -8.58090877532959
    9. 'def' → logprob: -9.33090877532959
    10. ' to' → logprob: -9.58090877532959

Token 546: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0009480224689468741
    2. 'len' → logprob: -7.250947952270508
    3. 'repr' → logprob: -8.750947952270508
    4. 'iter' → logprob: -9.750947952270508
    5. 'getitem' → logprob: -10.750947952270508
    6. 'eq' → logprob: -16.500947952270508
    7. ' str' → logprob: -17.875947952270508
    8. 'Str' → logprob: -20.375947952270508
    9. 'init' → logprob: -20.500947952270508
    10. 'contains' → logprob: -21.375947952270508

Token 547: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -4.3822154111694545e-05
    2. '(self' → logprob: -11.000043869018555
    3. '__(
' → logprob: -11.000043869018555
    4. '__' → logprob: -11.500043869018555
    5. '__('' → logprob: -16.500043869018555
    6. '_(' → logprob: -17.000043869018555
    7. '```' → logprob: -17.125043869018555
    8. '(' → logprob: -18.125043869018555
    9. '__("' → logprob: -18.125043869018555
    10. 'self' → logprob: -19.500043869018555

Token 548: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0280383548888494e-06
    2. ' self' → logprob: -14.375000953674316
    3. ')' → logprob: -14.875000953674316
    4. '(self' → logprob: -19.250001907348633
    5. '
' → logprob: -20.375001907348633
    6. ')(' → logprob: -21.375001907348633
    7. 's' → logprob: -21.625001907348633
    8. ')
' → logprob: -21.750001907348633
    9. '	self' → logprob: -22.125001907348633
    10. 'Self' → logprob: -22.250001907348633

Token 549: ')' (ID: 8)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2974810302257538
    2. 'self' → logprob: -1.5474810600280762
    3. '__' → logprob: -3.422481060028076
    4. ')(' → logprob: -5.047481060028076
    5. '(self' → logprob: -5.672481060028076
    6. ')' → logprob: -6.922481060028076
    7. '__)' → logprob: -7.922481060028076
    8. ')__' → logprob: -8.297480583190918
    9. ')(__' → logprob: -8.797480583190918
    10. '):
' → logprob: -9.422480583190918

Token 550: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002261854097014293
    2. '(' → logprob: -8.500226020812988
    3. '()' → logprob: -10.750226020812988
    4. 'self' → logprob: -14.250226020812988
    5. ' (' → logprob: -15.625226020812988
    6. '(s' → logprob: -15.875226020812988
    7. '(
' → logprob: -16.000226974487305
    8. '(se' → logprob: -17.375226974487305
    9. '```' → logprob: -17.500226974487305
    10. '(sel' → logprob: -18.000226974487305

Token 551: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6931476593017578
    2. ' str' → logprob: -0.6931476593017578
    3. 'return' → logprob: -15.068147659301758
    4. ' ' → logprob: -16.318147659301758
    5. '   ' → logprob: -16.943147659301758
    6. ' return' → logprob: -17.818147659301758
    7. '	str' → logprob: -18.068147659301758
    8. 'string' → logprob: -18.193147659301758
    9. '(str' → logprob: -18.193147659301758
    10. '[str' → logprob: -18.318147659301758

Token 552: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006633530138060451
    2. 'self' → logprob: -7.6256632804870605
    3. '(' → logprob: -9.500663757324219
    4. '       ' → logprob: -10.000663757324219
    5. '(
' → logprob: -10.250663757324219
    6. '   ' → logprob: -11.875663757324219
    7. ':
' → logprob: -12.125663757324219
    8. ':' → logprob: -12.375663757324219
    9. 'return' → logprob: -14.125663757324219
    10. ':self' → logprob: -14.500663757324219

Token 553: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13443830609321594
    2. '       ' → logprob: -2.5094382762908936
    3. ' return' → logprob: -3.1344382762908936
    4. '   ' → logprob: -7.634438514709473
    5. '"' → logprob: -8.009438514709473
    6. '	return' → logprob: -9.884438514709473
    7. '```' → logprob: -10.259438514709473
    8. '''.' → logprob: -10.759438514709473
    9. '
' → logprob: -11.759438514709473
    10. ''' → logprob: -12.509438514709473

Token 554: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03697318211197853
    2. '''.' → logprob: -3.786973237991333
    3. '"' → logprob: -4.786972999572754
    4. ' return' → logprob: -5.286972999572754
    5. ' "".' → logprob: -9.286972999572754
    6. '   ' → logprob: -9.286972999572754
    7. ' ''.' → logprob: -10.411972999572754
    8. '""' → logprob: -10.911972999572754
    9. '	return' → logprob: -13.036972999572754
    10. '       ' → logprob: -13.786972999572754

Token 555: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12724998593330383
    2. '''.' → logprob: -2.1272499561309814
    3. ' ''.' → logprob: -8.377249717712402
    4. ' "".' → logprob: -9.377249717712402
    5. ''' → logprob: -12.627249717712402
    6. '""' → logprob: -12.877249717712402
    7. '''' → logprob: -13.877249717712402
    8. ' ' → logprob: -15.377249717712402
    9. '   ' → logprob: -15.752249717712402
    10. '"",' → logprob: -16.37725067138672

Token 556: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -8.840432565193623e-05
    2. '''.' → logprob: -9.750088691711426
    3. '.join' → logprob: -10.500088691711426
    4. ''.' → logprob: -13.625088691711426
    5. '.' → logprob: -13.750088691711426
    6. ' join' → logprob: -15.625088691711426
    7. '```' → logprob: -17.12508773803711
    8. '".' → logprob: -17.12508773803711
    9. 'str' → logprob: -17.37508773803711
    10. 'jo' → logprob: -18.12508773803711

Token 557: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00020973898062948138
    2. 'str' → logprob: -8.50020980834961
    3. '[str' → logprob: -12.00020980834961
    4. '(' → logprob: -16.12520980834961
    5. '([' → logprob: -17.87520980834961
    6. ' str' → logprob: -18.75020980834961
    7. '	str' → logprob: -19.00020980834961
    8. '=str' → logprob: -19.50020980834961
    9. ':str' → logprob: -20.37520980834961
    10. '(map' → logprob: -20.62520980834961

Token 558: '(sym' (ID: 143899)
  Prédit: '(sym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sym' → logprob: -0.07904765009880066
    2. '(s' → logprob: -2.579047679901123
    3. '(symbol' → logprob: -9.079047203063965
    4. 'sym' → logprob: -10.079047203063965
    5. 's' → logprob: -13.329047203063965
    6. ' sym' → logprob: -15.329047203063965
    7. 'symbol' → logprob: -17.57904815673828
    8. '.sym' → logprob: -18.57904815673828
    9. '[s' → logprob: -19.07904815673828
    10. '(x' → logprob: -19.45404815673828

Token 559: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. 'sym' → logprob: -11.750009536743164
    3. 'm' → logprob: -14.250009536743164
    4. '(sym' → logprob: -15.125009536743164
    5. ')s' → logprob: -16.125009536743164
    6. ')
' → logprob: -16.875009536743164
    7. ' sym' → logprob: -16.875009536743164
    8. ' )' → logprob: -17.250009536743164
    9. 's' → logprob: -17.750009536743164
    10. 'for' → logprob: -18.250009536743164

Token 560: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4123809039592743
    2. 'for' → logprob: -1.4123809337615967
    3. ')' → logprob: -2.4123809337615967
    4. 'sym' → logprob: -6.037380695343018
    5. ' sym' → logprob: -6.787380695343018
    6. '(sym' → logprob: -6.912380695343018
    7. '()' → logprob: -8.412381172180176
    8. '   ' → logprob: -11.537381172180176
    9. '.sym' → logprob: -12.537381172180176
    10. 'symbol' → logprob: -12.537381172180176

Token 561: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.07889385521411896
    2. ' sym' → logprob: -2.5788938999176025
    3. 's' → logprob: -12.828893661499023
    4. '(sym' → logprob: -14.078893661499023
    5. ' s' → logprob: -15.203893661499023
    6. 'self' → logprob: -15.828893661499023
    7. '.sym' → logprob: -16.328893661499023
    8. ' ' → logprob: -17.703893661499023
    9. '_sym' → logprob: -17.828893661499023
    10. '	s' → logprob: -17.828893661499023

Token 562: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01920332945883274
    2. ' in' → logprob: -4.019203186035156
    3. 'sym' → logprob: -6.894203186035156
    4. 's' → logprob: -11.144203186035156
    5. ' sym' → logprob: -11.144203186035156
    6. 'ins' → logprob: -13.519203186035156
    7. ' ' → logprob: -13.644203186035156
    8. 'inx' → logprob: -13.644203186035156
    9. ')' → logprob: -14.019203186035156
    10. '.sym' → logprob: -14.144203186035156

Token 563: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5954712075181305e-05
    2. ' self' → logprob: -10.250036239624023
    3. 'sym' → logprob: -14.750036239624023
    4. '(self' → logprob: -17.125036239624023
    5. '	self' → logprob: -19.000036239624023
    6. '   ' → logprob: -19.125036239624023
    7. '[self' → logprob: -19.875036239624023
    8. '
' → logprob: -20.000036239624023
    9. '=self' → logprob: -20.000036239624023
    10. ')' → logprob: -20.875036239624023

Token 564: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.0004951290902681649
    2. '.sym' → logprob: -8.000494956970215
    3. 'symbols' → logprob: -8.750494956970215
    4. 'Symbols' → logprob: -15.375494956970215
    5. '.sy' → logprob: -15.500494956970215
    6. 'sym' → logprob: -15.625494956970215
    7. '_symbols' → logprob: -15.750494956970215
    8. '.' → logprob: -15.750494956970215
    9. 'symbol' → logprob: -16.37549591064453
    10. '.s' → logprob: -16.37549591064453

Token 565: 's' (ID: 82)
  Prédit: 'ols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ols' → logprob: -0.0006763351848348975
    2. ')' → logprob: -8.250676155090332
    3. 'bol' → logprob: -9.000676155090332
    4. 's' → logprob: -9.000676155090332
    5. 'ol' → logprob: -9.125676155090332
    6. ')
' → logprob: -11.250676155090332
    7. 'symbols' → logprob: -11.375676155090332
    8. ').' → logprob: -11.625676155090332
    9. '   ' → logprob: -12.250676155090332
    10. '```' → logprob: -12.500676155090332

Token 566: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '())' → logprob: -14.000000953674316
    3. ')
' → logprob: -16.000001907348633
    4. ' )' → logprob: -17.000001907348633
    5. '))' → logprob: -18.000001907348633
    6. ')return' → logprob: -18.000001907348633
    7. ')}' → logprob: -18.250001907348633
    8. '()' → logprob: -19.000001907348633
    9. ')`' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.375001907348633

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053905706852674484
    2. '
' → logprob: -3.303905725479126
    3. '<|end|>' → logprob: -4.428905487060547
    4. '```' → logprob: -6.678905487060547
    5. 'class' → logprob: -7.303905487060547
    6. '<|end|>' → logprob: -7.428905487060547
    7. '    
' → logprob: -7.428905487060547
    8. 'def' → logprob: -8.178905487060547
    9. '

' → logprob: -9.553905487060547
    10. ' ' → logprob: -9.928905487060547

Token 568: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001887591351987794
    2. '   ' → logprob: -8.875188827514648
    3. ' def' → logprob: -10.000188827514648
    4. '
' → logprob: -12.875188827514648
    5. 'class' → logprob: -14.625188827514648
    6. '	def' → logprob: -15.375188827514648
    7. '```' → logprob: -16.25018882751465
    8. '@' → logprob: -16.37518882751465
    9. '    
' → logprob: -17.75018882751465
    10. '@property' → logprob: -18.50018882751465

Token 569: ' validate' (ID: 14986)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.902959942817688
    2. ' def' → logprob: -1.027959942817688
    3. 'is' → logprob: -2.2779598236083984
    4. 'validate' → logprob: -2.4029598236083984
    5. ' validate' → logprob: -4.152959823608398
    6. ' is' → logprob: -4.277959823608398
    7. 'contains' → logprob: -5.027959823608398
    8. 'get' → logprob: -6.527959823608398
    9. 'all' → logprob: -6.777959823608398
    10. ' contains' → logprob: -7.027959823608398

Token 570: '_old' (ID: 49426)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03440478816628456
    2. '_old' → logprob: -3.409404754638672
    3. '_(' → logprob: -8.034404754638672
    4. '(' → logprob: -8.159404754638672
    5. '_' → logprob: -9.409404754638672
    6. '_for' → logprob: -10.909404754638672
    7. ' (' → logprob: -11.284404754638672
    8. '_self' → logprob: -11.409404754638672
    9. 'self' → logprob: -11.909404754638672
    10. '(
' → logprob: -12.409404754638672

Token 571: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -3.9888433093437925e-05
    2. '_products' → logprob: -11.375040054321289
    3. '_' → logprob: -11.625040054321289
    4. 'product' → logprob: -12.500040054321289
    5. 'Product' → logprob: -12.875040054321289
    6. '_prod' → logprob: -12.875040054321289
    7. '(self' → logprob: -13.250040054321289
    8. '_version' → logprob: -13.375040054321289
    9. '_pro' → logprob: -13.875040054321289
    10. '```' → logprob: -14.000040054321289

Token 572: '(self' (ID: 2402)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.02821483090519905
    2. '(self' → logprob: -3.778214931488037
    3. '()' → logprob: -6.278214931488037
    4. '(' → logprob: -6.653214931488037
    5. '_' → logprob: -7.028214931488037
    6. '```' → logprob: -8.028214454650879
    7. '(_' → logprob: -8.278214454650879
    8. '_validation' → logprob: -9.028214454650879
    9. ')_' → logprob: -10.528214454650879
    10. '_(' → logprob: -10.903214454650879

Token 573: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09208966791629791
    2. 'self' → logprob: -2.7170896530151367
    3. '(self' → logprob: -3.8420896530151367
    4. '):
' → logprob: -8.342089653015137
    5. '):' → logprob: -8.967089653015137
    6. '   ' → logprob: -9.967089653015137
    7. '       ' → logprob: -11.217089653015137
    8. ' self' → logprob: -11.717089653015137
    9. ',' → logprob: -11.967089653015137
    10. ')(' → logprob: -12.592089653015137

Token 574: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005171707598492503
    2. 'self' → logprob: -8.000516891479492
    3. '(' → logprob: -8.750516891479492
    4. '->' → logprob: -12.250516891479492
    5. '   ' → logprob: -12.500516891479492
    6. ':' → logprob: -12.625516891479492
    7. '       ' → logprob: -13.000516891479492
    8. ' (' → logprob: -13.250516891479492
    9. ')' → logprob: -13.250516891479492
    10. ' self' → logprob: -13.375516891479492

Token 575: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.1592082381248474
    2. 'List' → logprob: -2.284208297729492
    3. 'Tuple' → logprob: -3.409208297729492
    4. ' bool' → logprob: -5.409208297729492
    5. 'Optional' → logprob: -5.534208297729492
    6. 'None' → logprob: -6.159208297729492
    7. '(bool' → logprob: -7.534208297729492
    8. ' Tuple' → logprob: -7.659208297729492
    9. ' List' → logprob: -7.784208297729492
    10. ' Optional' → logprob: -9.534208297729492

Token 576: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000215457082958892
    2. '(' → logprob: -9.250215530395508
    3. '       ' → logprob: -9.375215530395508
    4. '   ' → logprob: -10.750215530395508
    5. 'self' → logprob: -12.000215530395508
    6. '(
' → logprob: -12.250215530395508
    7. ' (' → logprob: -14.500215530395508
    8. ' self' → logprob: -14.875215530395508
    9. ':' → logprob: -15.000215530395508
    10. '	self' → logprob: -15.500215530395508

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.9153885558771435e-06
    2. ':' → logprob: -12.875005722045898
    3. '
' → logprob: -14.125005722045898
    4. '   ' → logprob: -14.250005722045898
    5. ' return' → logprob: -14.750005722045898
    6. '```' → logprob: -14.750005722045898
    7. 'return' → logprob: -15.125005722045898
    8. '      ' → logprob: -15.875005722045898
    9. '           ' → logprob: -16.6250057220459
    10. '	' → logprob: -16.7500057220459

Token 578: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2223469316959381
    2. 'return' → logprob: -1.7223469018936157
    3. 'for' → logprob: -3.9723470211029053
    4. ' return' → logprob: -6.972346782684326
    5. 'all' → logprob: -7.347346782684326
    6. ' for' → logprob: -8.222347259521484
    7. '   ' → logprob: -10.597347259521484
    8. '```' → logprob: -12.472347259521484
    9. ' all' → logprob: -12.597347259521484
    10. 'result' → logprob: -13.472347259521484

Token 579: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2998051345348358
    2. 'all' → logprob: -2.049805164337158
    3. '       ' → logprob: -2.299805164337158
    4. 'for' → logprob: -3.549805164337158
    5. ' return' → logprob: -6.924805164337158
    6. ' all' → logprob: -9.0498046875
    7. ' for' → logprob: -10.1748046875
    8. 'result' → logprob: -10.2998046875
    9. '   ' → logprob: -10.4248046875
    10. '#' → logprob: -10.5498046875

Token 580: ' Val' (ID: 5164)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5774197578430176
    2. 'for' → logprob: -0.8274197578430176
    3. '       ' → logprob: -6.702419757843018
    4. ' return' → logprob: -9.07741928100586
    5. ' for' → logprob: -9.32741928100586
    6. '"""' → logprob: -10.32741928100586
    7. '   ' → logprob: -12.32741928100586
    8. '
' → logprob: -12.57741928100586
    9. 'if' → logprob: -13.07741928100586
    10. '"""
' → logprob: -13.32741928100586

Token 581: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.10023082792758942
    2. 'id' → logprob: -2.3502309322357178
    3. 'idee' → logprob: -10.975231170654297
    4. 'ider' → logprob: -12.975231170654297
    5. 'i' → logprob: -13.225231170654297
    6. 'ides' → logprob: -13.850231170654297
    7. 'idez' → logprob: -14.850231170654297
    8. 'date' → logprob: -14.975231170654297
    9. 'idé' → logprob: -15.100231170654297
    10. 'ue' → logprob: -15.225231170654297

Token 582: ' si' (ID: 1784)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9585095047950745
    2. '       ' → logprob: -1.5835094451904297
    3. 'return' → logprob: -1.8335094451904297
    4. ' all' → logprob: -2.2085094451904297
    5. 'self' → logprob: -2.7085094451904297
    6. ' return' → logprob: -3.4585094451904297
    7. 'for' → logprob: -3.8335094451904297
    8. '   ' → logprob: -4.33350944519043
    9. ' self' → logprob: -6.08350944519043
    10. ' for' → logprob: -6.08350944519043

Token 583: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0024769625160843134
    2. ' all' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.127476692199707
    4. ' ' → logprob: -15.377476692199707
    5. 'a' → logprob: -15.752476692199707
    6. 't' → logprob: -16.252477645874023
    7. 'al' → logprob: -16.752477645874023
    8. '	all' → logprob: -16.752477645874023
    9. '       ' → logprob: -17.877477645874023
    10. '  ' → logprob: -18.127477645874023

Token 584: ' les' (ID: 1341)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.3691014349460602
    2. '(sym' → logprob: -1.3691014051437378
    3. ' sym' → logprob: -2.9941015243530273
    4. '(s' → logprob: -6.369101524353027
    5. 'self' → logprob: -6.869101524353027
    6. '(self' → logprob: -7.494101524353027
    7. 'symbol' → logprob: -7.869101524353027
    8. '(' → logprob: -8.119101524353027
    9. '(symbol' → logprob: -8.869101524353027
    10. 's' → logprob: -10.244101524353027

Token 585: ' symbol' (ID: 10038)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.011315420269966125
    2. 'symbol' → logprob: -4.51131534576416
    3. 's' → logprob: -9.13631534576416
    4. 'symbols' → logprob: -9.88631534576416
    5. 'self' → logprob: -9.88631534576416
    6. ' sym' → logprob: -10.01131534576416
    7. '(sym' → logprob: -12.63631534576416
    8. '   ' → logprob: -13.38631534576416
    9. ' symbole' → logprob: -13.38631534576416
    10. '       ' → logprob: -13.76131534576416

Token 586: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.008865930140018463
    2. 's' → logprob: -4.758865833282471
    3. '   ' → logprob: -8.758866310119629
    4. '       ' → logprob: -10.383866310119629
    5. 'e' → logprob: -10.883866310119629
    6. 'symbols' → logprob: -11.508866310119629
    7. 'oles' → logprob: -11.633866310119629
    8. 'ès' → logprob: -12.758866310119629
    9. 'res' → logprob: -12.883866310119629
    10. 'sym' → logprob: -13.008866310119629

Token 587: ' de' (ID: 334)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.9942026138305664
    2. ' sym' → logprob: -1.7442026138305664
    3. 's' → logprob: -2.2442026138305664
    4. '       ' → logprob: -2.4942026138305664
    5. 'dans' → logprob: -2.6192026138305664
    6. 'self' → logprob: -2.8692026138305664
    7. ' sont' → logprob: -3.7442026138305664
    8. '(sym' → logprob: -3.9942026138305664
    9. '   ' → logprob: -4.119202613830566
    10. 'return' → logprob: -4.119202613830566

Token 588: ' ce' (ID: 2357)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005262265913188457
    2. ' self' → logprob: -7.625526428222656
    3. 'la' → logprob: -10.625526428222656
    4. ' la' → logprob: -11.500526428222656
    5. '(self' → logprob: -13.500526428222656
    6. '       ' → logprob: -14.125526428222656
    7. 'the' → logprob: -14.625526428222656
    8. 'sel' → logprob: -15.000526428222656
    9. 'l' → logprob: -15.125526428222656
    10. '   ' → logprob: -16.000526428222656

Token 589: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5147712230682373
    2. 'Rh' → logprob: -1.5147712230682373
    3. ' pattern' → logprob: -1.7647712230682373
    4. 'self' → logprob: -5.764771461486816
    5. ' rhythm' → logprob: -6.389771461486816
    6. ' Rhythm' → logprob: -6.389771461486816
    7. ' rythme' → logprob: -6.514771461486816
    8. 'sym' → logprob: -7.514771461486816
    9. ' rhyth' → logprob: -7.639771461486816
    10. 'rh' → logprob: -8.514771461486816

Token 590: ' conv' (ID: 6535)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0242996215820312
    2. ' sont' → logprob: -1.1492996215820312
    3. 's' → logprob: -2.1492996215820312
    4. '   ' → logprob: -2.5242996215820312
    5. ' ont' → logprob: -3.0242996215820312
    6. 'ont' → logprob: -3.5242996215820312
    7. ' respect' → logprob: -4.399299621582031
    8. '.' → logprob: -4.524299621582031
    9. ' passent' → logprob: -5.274299621582031
    10. ' pass' → logprob: -5.524299621582031

Token 591: 'iennent' (ID: 53290)
  Prédit: 'iennent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iennent' → logprob: -8.220573363360018e-05
    2. 'ennent' → logprob: -9.750082015991211
    3. '```' → logprob: -11.750082015991211
    4. 'ient' → logprob: -12.000082015991211
    5. 'aient' → logprob: -12.625082015991211
    6. '`' → logprob: -14.250082015991211
    7. 'ien' → logprob: -14.250082015991211
    8. '
' → logprob: -14.375082015991211
    9. 'iennes' → logprob: -14.375082015991211
    10. 'en' → logprob: -15.000082015991211

Token 592: ' aux' (ID: 5850)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2435097098350525
    2. '   ' → logprob: -1.9935097694396973
    3. ' à' → logprob: -3.1185097694396973
    4. ' for' → logprob: -3.4935097694396973
    5. ' pour' → logprob: -6.243509769439697
    6. 'for' → logprob: -6.743509769439697
    7. 'à' → logprob: -6.993509769439697
    8. ' to' → logprob: -7.368509769439697
    9. '```' → logprob: -9.243509292602539
    10. '    ' → logprob: -9.368509292602539

Token 593: ' anciennes' (ID: 176001)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.22877979278564453
    2. 'self' → logprob: -2.4787797927856445
    3. ' old' → logprob: -3.2287797927856445
    4. 'sym' → logprob: -3.9787797927856445
    5. 'ancien' → logprob: -4.2287797927856445
    6. 'product' → logprob: -4.2287797927856445
    7. 'all' → logprob: -4.8537797927856445
    8. 'ancienne' → logprob: -5.6037797927856445
    9. ' sym' → logprob: -5.7287797927856445
    10. 'anc' → logprob: -5.8537797927856445

Token 594: ' machines' (ID: 14656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4708789587020874
    2. '_product' → logprob: -1.4708789587020874
    3. 'product' → logprob: -1.4708789587020874
    4. ' product' → logprob: -1.5958789587020874
    5. '       ' → logprob: -3.220879077911377
    6. ' for' → logprob: -3.845879077911377
    7. ' sym' → logprob: -5.220879077911377
    8. ' produit' → logprob: -5.345879077911377
    9. 'produ' → logprob: -5.470879077911377
    10. 'for' → logprob: -5.595879077911377

Token 595: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29518529772758484
    2. '   ' → logprob: -1.5451853275299072
    3. '.' → logprob: -3.2951853275299072
    4. ' for' → logprob: -6.670185089111328
    5. ',' → logprob: -6.795185089111328
    6. ' (' → logprob: -7.420185089111328
    7. '    ' → logprob: -7.670185089111328
    8. ' de' → logprob: -8.045185089111328
    9. ' return' → logprob: -8.295185089111328
    10. ' pour' → logprob: -8.545185089111328

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001091162208467722
    2. '
' → logprob: -7.126091003417969
    3. '   ' → logprob: -8.626091003417969
    4. ':' → logprob: -10.501091003417969
    5. '```' → logprob: -11.001091003417969
    6. '        
' → logprob: -11.126091003417969
    7. ')' → logprob: -11.751091003417969
    8. '	' → logprob: -12.001091003417969
    9. '' → logprob: -12.376091003417969
    10. '    ' → logprob: -12.876091003417969

Token 597: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006793289911001921
    2. '
' → logprob: -5.00679349899292
    3. '   ' → logprob: -10.506793022155762
    4. '        
' → logprob: -11.506793022155762
    5. '```' → logprob: -11.631793022155762
    6. 'return' → logprob: -11.756793022155762
    7. '\n' → logprob: -12.631793022155762
    8. ' for' → logprob: -12.756793022155762
    9. ' return' → logprob: -12.756793022155762
    10. 'for' → logprob: -13.381793022155762

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001057698973454535
    2. 'return' → logprob: -7.3760576248168945
    3. 'for' → logprob: -8.126057624816895
    4. ' for' → logprob: -9.126057624816895
    5. ' return' → logprob: -11.251057624816895
    6. '   ' → logprob: -11.876057624816895
    7. '
' → logprob: -12.501057624816895
    8. 'result' → logprob: -13.876057624816895
    9. '```' → logprob: -14.126057624816895
    10. '           ' → logprob: -15.126057624816895

Token 599: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023830119520425797
    2. '       ' → logprob: -3.7738301753997803
    3. 'for' → logprob: -8.02383041381836
    4. ' return' → logprob: -8.27383041381836
    5. '   ' → logprob: -14.14883041381836
    6. 'all' → logprob: -14.89883041381836
    7. '
' → logprob: -15.39883041381836
    8. ' for' → logprob: -15.64883041381836
    9. '	return' → logprob: -15.64883041381836
    10. '```' → logprob: -16.39883041381836

Token 600: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.005234121344983578
    2. ' all' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.005233764648438
    4. '	all' → logprob: -17.130233764648438
    5. 'a' → logprob: -18.505233764648438
    6. ' ' → logprob: -19.005233764648438
    7. '       ' → logprob: -19.380233764648438
    8. 'al' → logprob: -19.505233764648438
    9. 'All' → logprob: -19.880233764648438
    10. '_all' → logprob: -20.005233764648438

Token 601: '(sym' (ID: 143899)
  Prédit: '(sym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sym' → logprob: -9.491498531133402e-06
    2. '(s' → logprob: -12.625009536743164
    3. '(symbol' → logprob: -12.625009536743164
    4. 'sym' → logprob: -12.875009536743164
    5. ' sym' → logprob: -15.500009536743164
    6. '(' → logprob: -18.250009536743164
    7. '.sym' → logprob: -19.125009536743164
    8. '(sys' → logprob: -19.875009536743164
    9. '(sim' → logprob: -20.250009536743164
    10. '((' → logprob: -20.750009536743164

Token 602: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0002631238894537091
    2. '.' → logprob: -8.250263214111328
    3. 'is' → logprob: -14.125263214111328
    4. ' .' → logprob: -14.500263214111328
    5. '.sym' → logprob: -15.750263214111328
    6. ').' → logprob: -16.375263214111328
    7. '().' → logprob: -16.875263214111328
    8. '   ' → logprob: -17.125263214111328
    9. '.isnan' → logprob: -17.250263214111328
    10. '.s' → logprob: -17.500263214111328

Token 603: '_old' (ID: 49426)
  Prédit: '_old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_old' → logprob: -1.981667537620524e-06
    2. ')_' → logprob: -13.750001907348633
    3. ''_' → logprob: -15.125001907348633
    4. '```' → logprob: -15.750001907348633
    5. 'old' → logprob: -16.000001907348633
    6. '"_' → logprob: -16.875001907348633
    7. '._' → logprob: -17.125001907348633
    8. ' _' → logprob: -17.500001907348633
    9. '_valid' → logprob: -17.875001907348633
    10. ']_' → logprob: -17.875001907348633

Token 604: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.0
    3. '_prod' → logprob: -16.125
    4. '_pro' → logprob: -17.375
    5. 'Product' → logprob: -17.5
    6. '_products' → logprob: -17.75
    7. ' _' → logprob: -18.125
    8. 'product' → logprob: -18.375
    9. ')_' → logprob: -18.375
    10. '_old' → logprob: -18.75

Token 605: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.0683535037969705e-05
    2. 'valid' → logprob: -11.50001049041748
    3. '_' → logprob: -15.00001049041748
    4. '_val' → logprob: -16.250011444091797
    5. '(valid' → logprob: -17.875011444091797
    6. ' _' → logprob: -18.000011444091797
    7. 'Valid' → logprob: -18.125011444091797
    8. 's' → logprob: -18.625011444091797
    9. '	valid' → logprob: -18.875011444091797
    10. ' valid' → logprob: -19.000011444091797

Token 606: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004092528019100428
    2. '())' → logprob: -5.504092693328857
    3. 'for' → logprob: -11.8790922164917
    4. ')' → logprob: -12.0040922164917
    5. '()
' → logprob: -15.0040922164917
    6. ' for' → logprob: -15.8790922164917
    7. ' ()' → logprob: -16.004093170166016
    8. '())
' → logprob: -16.129093170166016
    9. '(' → logprob: -16.379093170166016
    10. '()`' → logprob: -17.004093170166016

Token 607: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030445104464888573
    2. ' for' → logprob: -3.655445098876953
    3. 'for' → logprob: -5.655445098876953
    4. ')' → logprob: -7.405445098876953
    5. '())' → logprob: -10.655445098876953
    6. '   ' → logprob: -13.030445098876953
    7. '       ' → logprob: -13.030445098876953
    8. ' ()' → logprob: -13.780445098876953
    9. '           ' → logprob: -14.905445098876953
    10. ' )' → logprob: -15.905445098876953

Token 608: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.16056489944458008
    2. ' sym' → logprob: -1.91056489944458
    3. 'self' → logprob: -8.035564422607422
    4. ' self' → logprob: -11.035564422607422
    5. 's' → logprob: -15.160564422607422
    6. '(sym' → logprob: -15.785564422607422
    7. ' s' → logprob: -16.160564422607422
    8. ' ' → logprob: -16.410564422607422
    9. '.sym' → logprob: -16.785564422607422
    10. '_sym' → logprob: -17.410564422607422

Token 609: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.19373731315135956
    2. ' in' → logprob: -1.818737268447876
    3. 'sym' → logprob: -4.318737506866455
    4. 'self' → logprob: -8.443737030029297
    5. ' sym' → logprob: -8.443737030029297
    6. 's' → logprob: -9.818737030029297
    7. '.sym' → logprob: -10.318737030029297
    8. '(sym' → logprob: -11.193737030029297
    9. '_sym' → logprob: -11.318737030029297
    10. '.' → logprob: -11.318737030029297

Token 610: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006277294596657157
    2. ' self' → logprob: -7.375627517700195
    3. 'sym' → logprob: -13.750627517700195
    4. '(self' → logprob: -16.375627517700195
    5. '	self' → logprob: -18.250627517700195
    6. '
' → logprob: -18.375627517700195
    7. ')' → logprob: -18.625627517700195
    8. 's' → logprob: -19.125627517700195
    9. '[self' → logprob: -19.250627517700195
    10. '=self' → logprob: -19.625627517700195

Token 611: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.0022496995516121387
    2. 'symbols' → logprob: -6.502249717712402
    3. '.sym' → logprob: -7.252249717712402
    4. 'sym' → logprob: -10.377249717712402
    5. '.sy' → logprob: -12.877249717712402
    6. 'symbol' → logprob: -13.627249717712402
    7. 'ymbol' → logprob: -14.252249717712402
    8. 's' → logprob: -14.252249717712402
    9. '.' → logprob: -14.377249717712402
    10. 'Symbols' → logprob: -14.502249717712402

Token 612: 's' (ID: 82)
  Prédit: 'ols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ols' → logprob: -0.018343903124332428
    2. 's' → logprob: -4.143343925476074
    3. ')' → logprob: -7.143343925476074
    4. 'ol' → logprob: -7.393343925476074
    5. 'bol' → logprob: -7.768343925476074
    6. '.symbol' → logprob: -8.268343925476074
    7. '.' → logprob: -10.018343925476074
    8. '   ' → logprob: -10.518343925476074
    9. 'symbols' → logprob: -10.768343925476074
    10. ').' → logprob: -10.893343925476074

Token 613: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. '       ' → logprob: -12.125007629394531
    3. '   ' → logprob: -14.250007629394531
    4. ')
' → logprob: -14.375007629394531
    5. ' )' → logprob: -15.375007629394531
    6. '))' → logprob: -16.37500762939453
    7. ')}' → logprob: -16.62500762939453
    8. '())' → logprob: -16.87500762939453
    9. ')return' → logprob: -17.75000762939453
    10. '}' → logprob: -17.87500762939453

Token 614: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2868172526359558
    2. '<|end|>' → logprob: -1.4118173122406006
    3. '<|end|>' → logprob: -5.5368170738220215
    4. '#' → logprob: -7.5368170738220215
    5. 'class' → logprob: -7.9118170738220215
    6. '
' → logprob: -8.03681755065918
    7. ' def' → logprob: -8.53681755065918
    8. '```' → logprob: -8.91181755065918
    9. '[' → logprob: -9.78681755065918
    10. ')' → logprob: -10.53681755065918

Token 615: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024345189332962036
    2. '   ' → logprob: -3.8993451595306396
    3. ' def' → logprob: -6.524345397949219
    4. 'class' → logprob: -6.524345397949219
    5. '
' → logprob: -7.649345397949219
    6. '<|end|>' → logprob: -9.024345397949219
    7. '	def' → logprob: -9.399345397949219
    8. '@' → logprob: -9.649345397949219
    9. '```' → logprob: -10.774345397949219
    10. '@property' → logprob: -11.024345397949219

Token 616: ' is' (ID: 382)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.430899739265442
    2. 'append' → logprob: -1.555899739265442
    3. 'copy' → logprob: -1.680899739265442
    4. '__' → logprob: -2.5558996200561523
    5. 'to' → logprob: -2.9308996200561523
    6. 'count' → logprob: -3.3058996200561523
    7. 'validate' → logprob: -3.3058996200561523
    8. 'transpose' → logprob: -3.6808996200561523
    9. 'def' → logprob: -3.8058996200561523
    10. 'contains' → logprob: -4.055899620056152

Token 617: '_s' (ID: 1278)
  Prédit: '_empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.09875793755054474
    2. '_complete' → logprob: -3.5987579822540283
    3. '_valid' → logprob: -3.9737579822540283
    4. '_' → logprob: -4.598757743835449
    5. '_cont' → logprob: -4.598757743835449
    6. '_equal' → logprob: -4.848757743835449
    7. '_full' → logprob: -5.473757743835449
    8. '_old' → logprob: -6.098757743835449
    9. '_pal' → logprob: -6.223757743835449
    10. '_new' → logprob: -6.348757743835449

Token 618: 'ilent' (ID: 127840)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6597974896430969
    2. 'tr' → logprob: -2.159797430038452
    3. 'upported' → logprob: -2.784797430038452
    4. 'table' → logprob: -2.909797430038452
    5. 'hort' → logprob: -2.909797430038452
    6. 'up' → logprob: -3.034797430038452
    7. 'im' → logprob: -3.409797430038452
    8. 'ub' → logprob: -3.784797430038452
    9. 'ame' → logprob: -3.784797430038452
    10. 'uper' → logprob: -4.284797668457031

Token 619: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015772266313433647
    2. '_at' → logprob: -4.265772342681885
    3. '(' → logprob: -7.515772342681885
    4. '()' → logprob: -8.015771865844727
    5. 'self' → logprob: -8.265771865844727
    6. '_symbol' → logprob: -8.765771865844727
    7. 'def' → logprob: -9.015771865844727
    8. '   ' → logprob: -10.265771865844727
    9. '_pattern' → logprob: -10.265771865844727
    10. '_next' → logprob: -10.890771865844727

Token 620: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03447089344263077
    2. 'self' → logprob: -3.659470796585083
    3. '(self' → logprob: -4.909471035003662
    4. '):' → logprob: -7.534471035003662
    5. ')_' → logprob: -9.284470558166504
    6. '   ' → logprob: -9.784470558166504
    7. '):
' → logprob: -10.784470558166504
    8. ' self' → logprob: -11.409470558166504
    9. '       ' → logprob: -11.534470558166504
    10. ')__' → logprob: -12.284470558166504

Token 621: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007364890188910067
    2. 'self' → logprob: -7.250736713409424
    3. '(' → logprob: -11.500736236572266
    4. '   ' → logprob: -12.500736236572266
    5. ')' → logprob: -12.625736236572266
    6. 'def' → logprob: -12.875736236572266
    7. ' self' → logprob: -13.125736236572266
    8. '       ' → logprob: -13.125736236572266
    9. '()' → logprob: -14.125736236572266
    10. ' (' → logprob: -14.250736236572266

Token 622: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.061970602720975876
    2. ' bool' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.686970710754395
    4. 'True' → logprob: -14.311970710754395
    5. ')' → logprob: -14.811970710754395
    6. '	bool' → logprob: -15.436970710754395
    7. '(bool' → logprob: -15.936970710754395
    8. ' ' → logprob: -16.436969757080078
    9. 'self' → logprob: -16.436969757080078
    10. '       ' → logprob: -16.561969757080078

Token 623: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003931384126190096
    2. 'self' → logprob: -8.25039291381836
    3. '       ' → logprob: -9.25039291381836
    4. '(' → logprob: -10.87539291381836
    5. '   ' → logprob: -11.37539291381836
    6. ':' → logprob: -13.00039291381836
    7. '->' → logprob: -13.50039291381836
    8. ' self' → logprob: -14.75039291381836
    9. '(
' → logprob: -15.00039291381836
    10. ')' → logprob: -15.00039291381836

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017588367918506265
    2. 'return' → logprob: -6.501759052276611
    3. ' return' → logprob: -8.376758575439453
    4. 'self' → logprob: -11.626758575439453
    5. ')' → logprob: -12.501758575439453
    6. '
' → logprob: -12.626758575439453
    7. '()' → logprob: -13.251758575439453
    8. ':' → logprob: -13.251758575439453
    9. '   ' → logprob: -13.876758575439453
    10. ' self' → logprob: -14.126758575439453

Token 625: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10680565983057022
    2. '       ' → logprob: -2.3568055629730225
    3. ' return' → logprob: -5.106805801391602
    4. 'for' → logprob: -7.606805801391602
    5. ' for' → logprob: -11.231805801391602
    6. '   ' → logprob: -12.606805801391602
    7. '
' → logprob: -12.856805801391602
    8. 'def' → logprob: -13.106805801391602
    9. 'self' → logprob: -13.981805801391602
    10. '	return' → logprob: -14.356805801391602

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13041435182094574
    2. 'return' → logprob: -2.1304142475128174
    3. ' return' → logprob: -5.7554144859313965
    4. 'def' → logprob: -8.880414009094238
    5. 'for' → logprob: -9.380414009094238
    6. '   ' → logprob: -9.630414009094238
    7. '
' → logprob: -11.755414009094238
    8. ' for' → logprob: -11.755414009094238
    9. 'self' → logprob: -12.380414009094238
    10. 'all' → logprob: -13.005414009094238

Token 627: ' Vér' (ID: 159169)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0063232360407710075
    2. '       ' → logprob: -5.506323337554932
    3. ' return' → logprob: -6.506323337554932
    4. 'for' → logprob: -7.256323337554932
    5. '   ' → logprob: -10.381322860717773
    6. 'def' → logprob: -12.006322860717773
    7. '"""' → logprob: -13.006322860717773
    8. '
' → logprob: -13.131322860717773
    9. ' for' → logprob: -14.006322860717773
    10. 'Return' → logprob: -15.631322860717773

Token 628: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.12786206603050232
    2. 'ifies' → logprob: -2.877861976623535
    3. '       ' → logprob: -3.252861976623535
    4. 'if' → logprob: -4.252861976623535
    5. 'ify' → logprob: -5.252861976623535
    6. 'ifiez' → logprob: -6.002861976623535
    7. 'def' → logprob: -6.752861976623535
    8. 'f' → logprob: -7.377861976623535
    9. 's' → logprob: -8.002861976623535
    10. 'ifier' → logprob: -8.377861976623535

Token 629: ' si' (ID: 1784)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0385061576962471
    2. ' self' → logprob: -4.163506031036377
    3. '       ' → logprob: -4.663506031036377
    4. 'if' → logprob: -5.038506031036377
    5. '   ' → logprob: -5.663506031036377
    6. ' if' → logprob: -6.413506031036377
    7. 'all' → logprob: -7.538506031036377
    8. ' all' → logprob: -8.038506507873535
    9. '(self' → logprob: -8.538506507873535
    10. 'return' → logprob: -9.913506507873535

Token 630: ' ce' (ID: 2357)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.008618354797363281
    2. ' all' → logprob: -4.758618354797363
    3. 'self' → logprob: -12.758618354797363
    4. '   ' → logprob: -14.883618354797363
    5. 'a' → logprob: -15.758618354797363
    6. 'not' → logprob: -16.258617401123047
    7. '	all' → logprob: -16.383617401123047
    8. '
' → logprob: -16.633617401123047
    9. ' ' → logprob: -16.758617401123047
    10. 'len' → logprob: -17.383617401123047

Token 631: ' pattern' (ID: 8302)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.12696684896945953
    2. 'all' → logprob: -2.126966953277588
    3. 'self' → logprob: -10.87696647644043
    4. 'len' → logprob: -11.62696647644043
    5. ' self' → logprob: -12.87696647644043
    6. '   ' → logprob: -12.87696647644043
    7. ' len' → logprob: -13.25196647644043
    8. 't' → logprob: -13.50196647644043
    9. 'def' → logprob: -14.12696647644043
    10. '       ' → logprob: -14.12696647644043

Token 632: ' joue' (ID: 74342)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4363219141960144
    2. 'est' → logprob: -1.0613219738006592
    3. '   ' → logprob: -5.81132173538208
    4. ' is' → logprob: -6.31132173538208
    5. '.est' → logprob: -6.93632173538208
    6. ' ne' → logprob: -7.06132173538208
    7. 'ne' → logprob: -8.561322212219238
    8. 'n' → logprob: -8.686322212219238
    9. 'is' → logprob: -8.936322212219238
    10. ' n' → logprob: -9.686322212219238

Token 633: ' toujours' (ID: 16867)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7085936069488525
    2. 'all' → logprob: -0.8335936069488525
    3. ' only' → logprob: -3.5835936069488525
    4. ' uniquement' → logprob: -4.208593368530273
    5. 'only' → logprob: -4.833593368530273
    6. 't' → logprob: -4.958593368530273
    7. ' tous' → logprob: -5.208593368530273
    8. '   ' → logprob: -5.833593368530273
    9. ' toutes' → logprob: -6.833593368530273
    10. ' seulement' → logprob: -6.833593368530273

Token 634: ' '' (ID: 461)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.13138914108276367
    2. ' all' → logprob: -2.1313891410827637
    3. 'only' → logprob: -7.131389141082764
    4. 'True' → logprob: -7.381389141082764
    5. ' only' → logprob: -7.506389141082764
    6. 'False' → logprob: -7.631389141082764
    7. ' True' → logprob: -8.006389617919922
    8. 't' → logprob: -8.131389617919922
    9. 'sym' → logprob: -8.881389617919922
    10. 'self' → logprob: -9.131389617919922

Token 635: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.4154013395309448
    2. 'False' → logprob: -1.7904013395309448
    3. '000' → logprob: -2.5404014587402344
    4. '0' → logprob: -2.9154014587402344
    5. ' ' → logprob: -4.040401458740234
    6. 'all' → logprob: -4.665401458740234
    7. ' False' → logprob: -5.790401458740234
    8. '```' → logprob: -5.915401458740234
    9. 'True' → logprob: -6.415401458740234
    10. ' all' → logprob: -7.165401458740234

Token 636: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0230972021818161
    2. '')' → logprob: -4.523097038269043
    3. '00' → logprob: -4.523097038269043
    4. ''.' → logprob: -7.273097038269043
    5. '000' → logprob: -9.648097038269043
    6. '0' → logprob: -9.898097038269043
    7. '"' → logprob: -10.273097038269043
    8. ''''' → logprob: -10.398097038269043
    9. ' ' → logprob: -10.898097038269043
    10. ''
' → logprob: -11.023097038269043

Token 637: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8081650733947754
    2. '       ' → logprob: -1.3081650733947754
    3. '()' → logprob: -2.4331650733947754
    4. ' or' → logprob: -3.0581650733947754
    5. 'for' → logprob: -3.3081650733947754
    6. ',' → logprob: -3.8081650733947754
    7. ' sym' → logprob: -4.058165073394775
    8. '   ' → logprob: -4.183165073394775
    9. ' and' → logprob: -4.308165073394775
    10. '(self' → logprob: -5.058165073394775

Token 638: 'sil' (ID: 46135)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.29153522849082947
    2. ' all' → logprob: -1.6665352582931519
    3. 'sym' → logprob: -2.9165351390838623
    4. ' sym' → logprob: -4.666535377502441
    5. ')' → logprob: -8.291535377502441
    6. '       ' → logprob: -9.666535377502441
    7. 'return' → logprob: -10.541535377502441
    8. '   ' → logprob: -10.666535377502441
    9. 'lambda' → logprob: -11.041535377502441
    10. '           ' → logprob: -11.541535377502441

Token 639: 'ence' (ID: 1082)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0077981408685445786
    2. 'enc' → logprob: -5.507798194885254
    3. 'ence' → logprob: -5.632798194885254
    4. 'e' → logprob: -9.257798194885254
    5. 'en' → logprob: -10.757798194885254
    6. 'enç' → logprob: -12.257798194885254
    7. 'ente' → logprob: -12.882798194885254
    8. 'ents' → logprob: -12.882798194885254
    9. 'ently' → logprob: -13.382798194885254
    10. 'enced' → logprob: -13.757798194885254

Token 640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06841107457876205
    2. '()' → logprob: -3.693411111831665
    3. ')
' → logprob: -4.443410873413086
    4. '       ' → logprob: -4.568410873413086
    5. '')' → logprob: -4.568410873413086
    6. '   ' → logprob: -5.693410873413086
    7. '())' → logprob: -6.443410873413086
    8. ').' → logprob: -6.568410873413086
    9. ''' → logprob: -7.818410873413086
    10. '):
' → logprob: -8.318410873413086

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11359428614377975
    2. '   ' → logprob: -3.1135942935943604
    3. ')' → logprob: -3.2385942935943604
    4. '()' → logprob: -4.238594055175781
    5. '(self' → logprob: -4.988594055175781
    6. '():' → logprob: -7.238594055175781
    7. '):
' → logprob: -7.863594055175781
    8. ':' → logprob: -7.863594055175781
    9. '):' → logprob: -8.363594055175781
    10. '())' → logprob: -8.488594055175781

Token 642: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09714388102293015
    2. '   ' → logprob: -2.9721438884735107
    3. ')' → logprob: -3.9721438884735107
    4. ':' → logprob: -4.222143650054932
    5. '()' → logprob: -6.222143650054932
    6. '():' → logprob: -6.222143650054932
    7. '):' → logprob: -6.722143650054932
    8. '):
' → logprob: -6.972143650054932
    9. ':
' → logprob: -6.972143650054932
    10. '():
' → logprob: -7.847143650054932

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0065504093654453754
    2. 'return' → logprob: -5.131550312042236
    3. ' return' → logprob: -7.756550312042236
    4. ' for' → logprob: -9.381550788879395
    5. 'for' → logprob: -9.631550788879395
    6. '   ' → logprob: -10.131550788879395
    7. '
' → logprob: -13.881550788879395
    8. '```' → logprob: -14.381550788879395
    9. 'if' → logprob: -14.756550788879395
    10. 'self' → logprob: -14.881550788879395

Token 644: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00022201328829396516
    2. '       ' → logprob: -8.750222206115723
    3. ' return' → logprob: -9.750222206115723
    4. 'for' → logprob: -12.250222206115723
    5. '   ' → logprob: -14.750222206115723
    6. '	return' → logprob: -20.000221252441406
    7. 'def' → logprob: -20.000221252441406
    8. '```' → logprob: -21.875221252441406
    9. '
' → logprob: -22.000221252441406
    10. ' for' → logprob: -22.000221252441406

Token 645: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0031806828919798136
    2. ' all' → logprob: -5.753180503845215
    3. 'self' → logprob: -13.253180503845215
    4. '   ' → logprob: -14.253180503845215
    5. 'len' → logprob: -15.253180503845215
    6. '	all' → logprob: -15.253180503845215
    7. '       ' → logprob: -17.00318145751953
    8. '(all' → logprob: -17.62818145751953
    9. 'All' → logprob: -18.00318145751953
    10. ' ' → logprob: -18.12818145751953

Token 646: '(int' (ID: 2742)
  Prédit: '(sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sym' → logprob: -0.06506454199552536
    2. 'sym' → logprob: -2.8150644302368164
    3. '(str' → logprob: -5.815064430236816
    4. 'str' → logprob: -9.440064430236816
    5. '(int' → logprob: -11.065064430236816
    6. 'int' → logprob: -11.815064430236816
    7. ' sym' → logprob: -12.440064430236816
    8. '(' → logprob: -13.190064430236816
    9. '(s' → logprob: -13.940064430236816
    10. '(symbol' → logprob: -15.815064430236816

Token 647: '(sym' (ID: 143899)
  Prédit: '(sym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sym' → logprob: -0.00026848804554902017
    2. 'sym' → logprob: -8.250268936157227
    3. '(s' → logprob: -11.875268936157227
    4. '(symbol' → logprob: -16.500268936157227
    5. ' sym' → logprob: -16.750268936157227
    6. '(str' → logprob: -16.750268936157227
    7. '(' → logprob: -17.375268936157227
    8. 's' → logprob: -18.125268936157227
    9. '(
' → logprob: -18.875268936157227
    10. ')s' → logprob: -19.000268936157227

Token 648: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08246821165084839
    2. '()' → logprob: -2.957468271255493
    3. ')==' → logprob: -4.082468032836914
    4. '(sym' → logprob: -4.957468032836914
    5. '==' → logprob: -6.582468032836914
    6. '()==' → logprob: -6.957468032836914
    7. '())' → logprob: -7.582468032836914
    8. 'sym' → logprob: -7.832468032836914
    9. '(s' → logprob: -9.832468032836914
    10. ' ==' → logprob: -12.207468032836914

Token 649: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06588755548000336
    2. ' ==' → logprob: -2.815887451171875
    3. '()==' → logprob: -6.190887451171875
    4. '()' → logprob: -6.315887451171875
    5. ')==' → logprob: -10.690887451171875
    6. ')' → logprob: -10.690887451171875
    7. '=' → logprob: -12.065887451171875
    8. ']==' → logprob: -13.565887451171875
    9. '           ' → logprob: -13.815887451171875
    10. '==
' → logprob: -14.315887451171875

Token 650: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.50001049041748
    4. '00' → logprob: -16.875009536743164
    5. '       ' → logprob: -18.375009536743164
    6. '  ' → logprob: -18.500009536743164
    7. '           ' → logprob: -18.875009536743164
    8. ' ' → logprob: -19.000009536743164
    9. '```' → logprob: -19.125009536743164
    10. '    ' → logprob: -19.937509536743164

Token 651: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '00' → logprob: -19.000001907348633
    5. '  ' → logprob: -20.875001907348633
    6. '       ' → logprob: -21.250001907348633
    7. '```' → logprob: -21.500001907348633
    8. '    ' → logprob: -22.000001907348633
    9. '۰' → logprob: -22.312501907348633
    10. '
' → logprob: -22.312501907348633

Token 652: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13084502518177032
    2. 'for' → logprob: -2.130845069885254
    3. ')' → logprob: -5.630845069885254
    4. '       ' → logprob: -8.255845069885254
    5. '           ' → logprob: -10.130845069885254
    6. '	for' → logprob: -11.630845069885254
    7. '   ' → logprob: -11.880845069885254
    8. '        ' → logprob: -13.005845069885254
    9. '               ' → logprob: -13.505845069885254
    10. ' )' → logprob: -13.880845069885254

Token 653: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.005308704450726509
    2. ' sym' → logprob: -5.255308628082275
    3. 'self' → logprob: -9.505309104919434
    4. ' self' → logprob: -15.255309104919434
    5. '(sym' → logprob: -16.380308151245117
    6. '.sym' → logprob: -17.130308151245117
    7. '   ' → logprob: -17.880308151245117
    8. 's' → logprob: -18.005308151245117
    9. '

' → logprob: -18.005308151245117
    10. '
' → logprob: -18.130308151245117

Token 654: ' in' (ID: 306)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.07623613625764847
    2. ' sym' → logprob: -2.7012362480163574
    3. ' in' → logprob: -5.201236248016357
    4. 'in' → logprob: -7.201236248016357
    5. '(sym' → logprob: -11.2012357711792
    6. '.sym' → logprob: -12.3262357711792
    7. 's' → logprob: -12.3262357711792
    8. '_sym' → logprob: -14.2012357711792
    9. ' ' → logprob: -14.8262357711792
    10. 'self' → logprob: -15.0762357711792

Token 655: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024758970830589533
    2. ' self' → logprob: -6.002475738525391
    3. 'sym' → logprob: -15.75247573852539
    4. '	self' → logprob: -17.25247573852539
    5. '(self' → logprob: -18.75247573852539
    6. ' sym' → logprob: -19.37747573852539
    7. '
' → logprob: -19.87747573852539
    8. '=self' → logprob: -20.62747573852539
    9. '   ' → logprob: -21.00247573852539
    10. '[self' → logprob: -21.12747573852539

Token 656: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.18261286616325378
    2. 'symbols' → logprob: -1.9326128959655762
    3. '.sym' → logprob: -4.057612895965576
    4. 'sym' → logprob: -5.932612895965576
    5. 'self' → logprob: -6.432612895965576
    6. '_symbols' → logprob: -8.182612419128418
    7. 'symbol' → logprob: -8.682612419128418
    8. 'Symbols' → logprob: -9.557612419128418
    9. '.sy' → logprob: -10.307612419128418
    10. ' symbols' → logprob: -11.307612419128418

Token 657: 's' (ID: 82)
  Prédit: 'ols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ols' → logprob: -0.024333788082003593
    2. 's' → logprob: -3.8993337154388428
    3. 'ol' → logprob: -5.649333953857422
    4. ')' → logprob: -8.524333953857422
    5. 'bol' → logprob: -10.649333953857422
    6. 'als' → logprob: -11.524333953857422
    7. '   ' → logprob: -12.524333953857422
    8. 'ls' → logprob: -12.649333953857422
    9. ')
' → logprob: -13.024333953857422
    10. 'ors' → logprob: -13.149333953857422

Token 658: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.375006675720215
    3. '())' → logprob: -14.125006675720215
    4. '       ' → logprob: -14.250006675720215
    5. ' )' → logprob: -15.375006675720215
    6. ')return' → logprob: -15.875006675720215
    7. '   ' → logprob: -16.5000057220459
    8. '))' → logprob: -16.8750057220459
    9. ')}' → logprob: -17.2500057220459
    10. ')

' → logprob: -17.5000057220459

Token 659: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7188679575920105
    2. '
' → logprob: -0.8438679575920105
    3. '   ' → logprob: -2.7188680171966553
    4. '<|end|>' → logprob: -4.468867778778076
    5. ' def' → logprob: -6.593867778778076
    6. '\n' → logprob: -7.218867778778076
    7. '[' → logprob: -7.218867778778076
    8. '```' → logprob: -7.468867778778076
    9. '<|end|>' → logprob: -7.968867778778076
    10. '

' → logprob: -8.093868255615234

Token 660: ' Rhythm' (ID: 148652)
  Prédit: ' Rhythm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rhythm' → logprob: -1.4907138347625732
    2. 'Rh' → logprob: -1.7407138347625732
    3. 'Tuple' → logprob: -1.9907138347625732
    4. 'Hex' → logprob: -2.6157138347625732
    5. ' Melody' → logprob: -2.7407138347625732
    6. 'Pattern' → logprob: -3.2407138347625732
    7. ' Tuple' → logprob: -3.2407138347625732
    8. 'Optional' → logprob: -3.3657138347625732
    9. 'Music' → logprob: -3.3657138347625732
    10. ' Hex' → logprob: -3.6157138347625732

Token 661: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -0.07951918989419937
    2. 'Sequence' → logprob: -2.954519271850586
    3. 'Composer' → logprob: -5.954519271850586
    4. 'Generator' → logprob: -6.204519271850586
    5. 'Analyzer' → logprob: -6.204519271850586
    6. 'Validator' → logprob: -6.579519271850586
    7. 'Converter' → logprob: -6.829519271850586
    8. 'Extractor' → logprob: -6.954519271850586
    9. 'Segment' → logprob: -7.079519271850586
    10. 'Composition' → logprob: -7.204519271850586

Token 662: 'Mer' (ID: 18280)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8818101286888123
    2. 'Builder' → logprob: -1.881810188293457
    3. 'Iterator' → logprob: -2.256810188293457
    4. 'Encoder' → logprob: -3.381810188293457
    5. 'Generator' → logprob: -3.506810188293457
    6. ':
' → logprob: -3.506810188293457
    7. 'Sequence' → logprob: -3.506810188293457
    8. 'Editor' → logprob: -3.756810188293457
    9. 'Analyzer' → logprob: -4.506810188293457
    10. 'Converter' → logprob: -4.506810188293457

Token 663: 'ger' (ID: 1281)
  Prédit: 'ger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ger' → logprob: -3.762356209335849e-05
    2. 'ge' → logprob: -10.37503719329834
    3. 'g' → logprob: -12.37503719329834
    4. 'ging' → logprob: -13.62503719329834
    5. 'er' → logprob: -15.50003719329834
    6. 'ges' → logprob: -15.62503719329834
    7. 'ged' → logprob: -16.250038146972656
    8. 'get' → logprob: -16.500038146972656
    9. 'gr' → logprob: -16.875038146972656
    10. '``' → logprob: -17.000038146972656

Token 664: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005029928870499134
    2. ':
' → logprob: -7.625503063201904
    3. ' :' → logprob: -11.875502586364746
    4. ':def' → logprob: -12.125502586364746
    5. ':

' → logprob: -14.125502586364746
    6. '():' → logprob: -14.500502586364746
    7. '(' → logprob: -15.000502586364746
    8. '(object' → logprob: -15.500502586364746
    9. '):' → logprob: -15.500502586364746
    10. ':**' → logprob: -16.000503540039062

Token 665: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049724090844392776
    2. ':
' → logprob: -3.1747241020202637
    3. '   ' → logprob: -5.049724102020264
    4. ' :' → logprob: -9.424723625183105
    5. 'def' → logprob: -10.174723625183105
    6. '<|end|>' → logprob: -10.174723625183105
    7. ':def' → logprob: -10.299723625183105
    8. ' def' → logprob: -10.549723625183105
    9. ' :
' → logprob: -10.924723625183105
    10. '
' → logprob: -11.049723625183105

Token 666: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5865447521209717
    2. 'def' → logprob: -1.4615447521209717
    3. ' def' → logprob: -1.5865447521209717
    4. '@' → logprob: -5.211544990539551
    5. 'class' → logprob: -7.086544990539551
    6. ' @' → logprob: -7.086544990539551
    7. '"""
' (adapté à ' """
') → logprob: -10.58654499053955
    8. ' """
' → logprob: -10.71154499053955
    9. '"""' → logprob: -10.96154499053955
    10. '	def' → logprob: -11.08654499053955

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035834377631545067
    2. 'def' → logprob: -6.5035834312438965
    3. 'class' → logprob: -6.7535834312438965
    4. ' def' → logprob: -7.3785834312438965
    5. '"""
' → logprob: -8.753583908081055
    6. '"""' → logprob: -9.503583908081055
    7. ' """
' → logprob: -10.628583908081055
    8. '"' → logprob: -11.503583908081055
    9. '    ' → logprob: -11.753583908081055
    10. ' """' → logprob: -13.253583908081055

Token 668: ' Fusion' (ID: 70618)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.355381041765213
    2. 'class' → logprob: -1.4803810119628906
    3. ' def' → logprob: -3.3553810119628906
    4. 'def' → logprob: -3.3553810119628906
    5. ' """
' → logprob: -7.355381011962891
    6. '    ' → logprob: -7.480381011962891
    7. ' class' → logprob: -8.23038101196289
    8. ' """' → logprob: -8.98038101196289
    9. ' ' → logprob: -10.60538101196289
    10. '  ' → logprob: -10.85538101196289

Token 669: 'ne' (ID: 611)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8145803809165955
    2. ' des' → logprob: -1.4395804405212402
    3. '   ' → logprob: -1.9395804405212402
    4. 'class' → logprob: -2.5645804405212402
    5. ' of' → logprob: -3.3145804405212402
    6. ' :' → logprob: -3.6895804405212402
    7. ' de' → logprob: -4.43958044052124
    8. ' class' → logprob: -5.68958044052124
    9. 'def' → logprob: -5.81458044052124
    10. '  ' → logprob: -5.81458044052124

Token 670: ' plusieurs' (ID: 20875)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8085870146751404
    2. ':' → logprob: -1.1835870742797852
    3. ' deux' → logprob: -2.433587074279785
    4. ' des' → logprob: -2.933587074279785
    5. 'des' → logprob: -3.183587074279785
    6. ' plusieurs' → logprob: -3.433587074279785
    7. 'plus' → logprob: -4.558587074279785
    8. ':
' → logprob: -4.808587074279785
    9. ' two' → logprob: -5.433587074279785
    10. 'two' → logprob: -5.558587074279785

Token 671: ' ryth' (ID: 84861)
  Prédit: 'Rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rh' → logprob: -0.04988378286361694
    2. ' Rhythm' → logprob: -3.7998838424682617
    3. 'patterns' → logprob: -3.9248838424682617
    4. ' rhythm' → logprob: -5.674883842468262
    5. ' rhythms' → logprob: -7.299883842468262
    6. 'pattern' → logprob: -7.674883842468262
    7. 'class' → logprob: -7.924883842468262
    8. ' patterns' → logprob: -8.049883842468262
    9. ' rhyth' → logprob: -8.174883842468262
    10. 'rh' → logprob: -8.174883842468262

Token 672: 'mes' (ID: 4613)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.1181310415267944
    2. 'hm' → logprob: -1.2431310415267944
    3. 'm' → logprob: -1.7431310415267944
    4. 'miques' → logprob: -1.7431310415267944
    5. 'mes' → logprob: -3.868131160736084
    6. 'ms' → logprob: -4.993131160736084
    7. 'mic' → logprob: -5.493131160736084
    8. 'hme' → logprob: -6.243131160736084
    9. 'me' → logprob: -8.743130683898926
    10. '
' → logprob: -8.868130683898926

Token 673: ' d' (ID: 272)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07292085140943527
    2. ' pour' → logprob: -4.072920799255371
    3. '   ' → logprob: -4.322920799255371
    4. 'en' → logprob: -5.322920799255371
    5. ' et' → logprob: -5.822920799255371
    6. ',' → logprob: -5.822920799255371
    7. '.' → logprob: -5.947920799255371
    8. ' ryth' → logprob: -5.947920799255371
    9. ' dans' → logprob: -6.072920799255371
    10. ' entre' → logprob: -6.072920799255371

Token 674: '’' (ID: 438)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.584449291229248
    2. 'ef' → logprob: -1.459449291229248
    3. 'ans' → logprob: -2.834449291229248
    4. 'es' → logprob: -3.834449291229248
    5. 'iff' → logprob: -4.084449291229248
    6. ''entrée' → logprob: -4.334449291229248
    7. 'Rh' → logprob: -4.459449291229248
    8. 'u' → logprob: -4.834449291229248
    9. 'é' → logprob: -4.834449291229248
    10. 'ifferent' → logprob: -4.959449291229248

Token 675: 'anc' (ID: 1054)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -1.909846305847168
    2. 'Rh' → logprob: -2.284846305847168
    3. 'e' → logprob: -2.409846305847168
    4. 'éc' → logprob: -3.034846305847168
    5. ''entrée' → logprob: -3.034846305847168
    6. 'ans' → logprob: -3.159846305847168
    7. 'une' → logprob: -3.159846305847168
    8. 'é' → logprob: -3.159846305847168
    9. 'inputs' → logprob: -3.284846305847168
    10. 'instances' → logprob: -3.409846305847168

Token 676: 'iennes' (ID: 48639)
  Prédit: 'ienne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ienne' → logprob: -0.1483529657125473
    2. 'iennes' → logprob: -2.273352861404419
    3. 'ien' → logprob: -4.398353099822998
    4. 'e' → logprob: -4.773353099822998
    5. 'i' → logprob: -5.523353099822998
    6. 'er' → logprob: -5.773353099822998
    7. 'ière' → logprob: -6.523353099822998
    8. ''' → logprob: -7.023353099822998
    9. ' ancienne' → logprob: -7.023353099822998
    10. 'ience' → logprob: -7.648353099822998

Token 677: ' machines' (ID: 14656)
  Prédit: 'machines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'machines' → logprob: -0.07646067440509796
    2. ' générations' → logprob: -4.201460838317871
    3. 'produ' → logprob: -4.701460838317871
    4. ' machines' → logprob: -4.826460838317871
    5. 'gener' → logprob: -4.826460838317871
    6. 'versions' → logprob: -5.201460838317871
    7. 'g' → logprob: -5.326460838317871
    8. 'class' → logprob: -5.451460838317871
    9. 'product' → logprob: -5.826460838317871
    10. 'products' → logprob: -6.326460838317871

Token 678: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.25410398840904236
    2. ' pour' → logprob: -2.129103899002075
    3. 'en' → logprob: -2.879103899002075
    4. '   ' → logprob: -4.004104137420654
    5. ',' → logprob: -5.129104137420654
    6. '.' → logprob: -5.379104137420654
    7. 'pour' → logprob: -5.379104137420654
    8. ' afin' → logprob: -6.129104137420654
    9. ' dans' → logprob: -6.129104137420654
    10. ' et' → logprob: -6.379104137420654

Token 679: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.14381641149520874
    2. 'une' → logprob: -2.1438164710998535
    3. ' un' → logprob: -4.5188164710998535
    4. ' une' → logprob: -6.0188164710998535
    5. '```' → logprob: -6.5188164710998535
    6. ''un' → logprob: -7.3938164710998535
    7. ' one' → logprob: -8.143815994262695
    8. '``' → logprob: -8.143815994262695
    9. 'one' → logprob: -8.393815994262695
    10. 'class' → logprob: -9.143815994262695

Token 680: ' seul' (ID: 33041)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.915317714214325
    2. ' seul' → logprob: -1.2903177738189697
    3. 'se' → logprob: -1.9153177738189697
    4. 'unique' → logprob: -3.2903177738189697
    5. ' nouveau' → logprob: -3.7903177738189697
    6. 'Rh' → logprob: -3.7903177738189697
    7. ' pattern' → logprob: -3.9153177738189697
    8. ' unique' → logprob: -4.040317535400391
    9. ' rythme' → logprob: -4.415317535400391
    10. ' rhythm' → logprob: -4.540317535400391

Token 681: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.876605749130249
    2. 'pattern' → logprob: -1.251605749130249
    3. ' rhythm' → logprob: -2.626605749130249
    4. 'class' → logprob: -2.626605749130249
    5. ':' → logprob: -2.751605749130249
    6. ' rythme' → logprob: -3.751605749130249
    7. ' rhyth' → logprob: -4.001605987548828
    8. ' ryth' → logprob: -4.626605987548828
    9. '   ' → logprob: -4.751605987548828
    10. ' class' → logprob: -5.001605987548828

Token 682: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18829970061779022
    2. ':
' → logprob: -2.0632996559143066
    3. '   ' → logprob: -3.5632996559143066
    4. '.' → logprob: -4.688299655914307
    5. 'class' → logprob: -6.188299655914307
    6. ',' → logprob: -6.438299655914307
    7. ' :' → logprob: -7.188299655914307
    8. '```' → logprob: -7.688299655914307
    9. 'compatible' → logprob: -8.313300132751465
    10. ' capable' → logprob: -8.313300132751465

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6145302057266235
    2. ':' → logprob: -0.9895302057266235
    3. ':
' → logprob: -2.739530086517334
    4. '.' → logprob: -4.114530086517334
    5. ',' → logprob: -5.614530086517334
    6. '):' → logprob: -7.239530086517334
    7. '```' → logprob: -7.989530086517334
    8. '):
' → logprob: -8.114530563354492
    9. ')' → logprob: -8.239530563354492
    10. ' :' → logprob: -8.364530563354492

Token 684: ' pour' (ID: 1930)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6653993129730225
    2. ':' → logprob: -0.7903993129730225
    3. '):
' → logprob: -4.540399551391602
    4. '   ' → logprob: -4.540399551391602
    5. '):' → logprob: -4.665399551391602
    6. '.' → logprob: -7.665399551391602
    7. ')' → logprob: -8.290399551391602
    8. 'def' → logprob: -8.540399551391602
    9. '```' → logprob: -8.540399551391602
    10. ',' → logprob: -9.040399551391602

Token 685: ' une' (ID: 2463)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1193950176239014
    2. ' usage' → logprob: -2.2443950176239014
    3. 'modern' → logprob: -2.3693950176239014
    4. ' l' → logprob: -2.9943950176239014
    5. 'la' → logprob: -3.1193950176239014
    6. 'usage' → logprob: -3.2443950176239014
    7. 'les' → logprob: -3.3693950176239014
    8. 'le' → logprob: -3.3693950176239014
    9. 'util' → logprob: -3.4943950176239014
    10. 'class' → logprob: -3.7443950176239014

Token 686: ' machine' (ID: 7342)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.3882920742034912
    2. 'usage' → logprob: -1.5132920742034912
    3. ' nouvelle' → logprob: -2.513292074203491
    4. 'nou' → logprob: -2.888292074203491
    5. ' utilisation' → logprob: -3.263292074203491
    6. 'application' → logprob: -3.263292074203491
    7. 'ancienne' → logprob: -3.638292074203491
    8. ' usage' → logprob: -3.888292074203491
    9. 'class' → logprob: -4.01329231262207
    10. 'modern' → logprob: -4.13829231262207

Token 687: ' nouvelle' (ID: 24562)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2927067279815674
    2. 'plus' → logprob: -2.0427067279815674
    3. 'c' → logprob: -2.2927067279815674
    4. ' cible' → logprob: -2.4177067279815674
    5. ' plus' → logprob: -2.5427067279815674
    6. ' nouvelle' → logprob: -3.0427067279815674
    7. ' moderne' → logprob: -3.0427067279815674
    8. 'd' → logprob: -3.6677067279815674
    9. 'nou' → logprob: -3.7927067279815674
    10. ' ' → logprob: -3.7927067279815674

Token 688: ' capacité' (ID: 62575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4598650634288788
    2. '.' → logprob: -1.8348650932312012
    3. ',' → logprob: -3.209865093231201
    4. '.
' → logprob: -3.209865093231201
    5. '(
' → logprob: -3.459865093231201
    6. ')' → logprob: -4.084865093231201
    7. ' (' → logprob: -4.334865093231201
    8. ',
' → logprob: -4.834865093231201
    9. 'g' → logprob: -5.084865093231201
    10. ' machine' → logprob: -5.209865093231201

Token 689: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8414796590805054
    2. '.' → logprob: -1.2164796590805054
    3. ':
' → logprob: -1.9664796590805054
    4. '.
' → logprob: -3.091479778289795
    5. ':' → logprob: -3.466479778289795
    6. ',' → logprob: -4.591479778289795
    7. 's' → logprob: -4.591479778289795
    8. 'class' → logprob: -4.841479778289795
    9. '(s' → logprob: -5.466479778289795
    10. '(' → logprob: -5.716479778289795

Token 690: 'jus' (ID: 56271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.202388048171997
    2. ').' → logprob: -2.577388048171997
    3. '"""
' → logprob: -2.702388048171997
    4. 'multi' → logprob: -2.702388048171997
    5. ')
' → logprob: -2.827388048171997
    6. 'class' → logprob: -2.952388048171997
    7. ').
' → logprob: -3.327388048171997
    8. 'mult' → logprob: -3.702388048171997
    9. ' multi' → logprob: -3.827388048171997
    10. 'la' → logprob: -3.827388048171997

Token 691: 'qu' (ID: 351)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.025143921375274658
    2. 'te' → logprob: -4.275144100189209
    3. 'e' → logprob: -5.900144100189209
    4. 'ette' → logprob: -6.525144100189209
    5. 'té' → logprob: -7.025144100189209
    6. 'ete' → logprob: -7.650144100189209
    7. 'et' → logprob: -7.650144100189209
    8. 'ect' → logprob: -7.775144100189209
    9. 'tes' → logprob: -7.900144100189209
    10. 'tion' → logprob: -8.02514362335205

Token 692: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.02309616096317768
    2. 'à' → logprob: -3.8980960845947266
    3. '   ' → logprob: -6.773096084594727
    4. '’à' → logprob: -6.898096084594727
    5. 'a' → logprob: -8.898096084594727
    6. '=' → logprob: -9.398096084594727
    7. '```' → logprob: -9.773096084594727
    8. ''a' → logprob: -10.148096084594727
    9. ''' → logprob: -10.648096084594727
    10. ' à' → logprob: -11.023096084594727

Token 693: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.07008303701877594
    2. '0' → logprob: -3.9450831413269043
    3. '16' → logprob: -3.9450831413269043
    4. '4' → logprob: -4.195083141326904
    5. '256' → logprob: -5.570083141326904
    6. '3' → logprob: -6.195083141326904
    7. '255' → logprob: -6.445083141326904
    8. '9' → logprob: -6.945083141326904
    9. '32' → logprob: -7.195083141326904
    10. '2' → logprob: -7.320083141326904

Token 694: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.6142725944519043
    2. '0' → logprob: -0.9892725944519043
    3. '255' → logprob: -3.1142725944519043
    4. '256' → logprob: -4.614272594451904
    5. '4' → logprob: -4.739272594451904
    6. '16' → logprob: -4.739272594451904
    7. '3' → logprob: -4.864272594451904
    8. ' ' → logprob: -5.864272594451904
    9. '2' → logprob: -6.989272594451904
    10. '
' → logprob: -7.739272594451904

Token 695: ' sons' (ID: 35937)
  Prédit: ' sons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sons' → logprob: -0.8873588442802429
    2. 'bits' → logprob: -2.3873589038848877
    3. 'p' → logprob: -2.7623589038848877
    4. ' voix' → logprob: -2.7623589038848877
    5. 'sons' → logprob: -2.8873589038848877
    6. ' bits' → logprob: -3.0123589038848877
    7. 'vo' → logprob: -3.5123589038848877
    8. ')' → logprob: -3.5123589038848877
    9. ' pistes' → logprob: -3.6373589038848877
    10. 'voices' → logprob: -3.8873589038848877

Token 696: ' simult' (ID: 27260)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04330825433135033
    2. ')
' → logprob: -3.6683082580566406
    3. ').' → logprob: -4.418308258056641
    4. ',' → logprob: -6.793308258056641
    5. '8' → logprob: -6.918308258056641
    6. '):' → logprob: -7.293308258056641
    7. '):
' → logprob: -7.418308258056641
    8. '   ' → logprob: -8.16830825805664
    9. '')' → logprob: -8.54330825805664
    10. ').
' → logprob: -8.66830825805664

Token 697: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.8634810447692871
    2. 'és' → logprob: -1.238481044769287
    3. 'é' → logprob: -2.613481044769287
    4. 'ané' → logprob: -2.738481044769287
    5. 'anes' → logprob: -3.738481044769287
    6. 'anément' → logprob: -3.863481044769287
    7. 'ains' → logprob: -4.238481044769287
    8. 'ée' → logprob: -4.488481044769287
    9. 'ées' → logprob: -4.488481044769287
    10. '```' → logprob: -4.613481044769287

Token 698: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3919820189476013
    2. 'és' → logprob: -1.891982078552246
    3. 'e' → logprob: -2.391982078552246
    4. 'es' → logprob: -3.141982078552246
    5. 'ité' → logprob: -4.391982078552246
    6. ')' → logprob: -4.641982078552246
    7. 'ités' → logprob: -4.891982078552246
    8. 'ée' → logprob: -5.891982078552246
    9. 'ément' → logprob: -5.891982078552246
    10. 'ity' → logprob: -6.766982078552246

Token 699: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5628352761268616
    2. '):' → logprob: -1.5628352165222168
    3. '):
' → logprob: -2.312835216522217
    4. ').' → logprob: -2.312835216522217
    5. '   ' → logprob: -4.187835216522217
    6. ',' → logprob: -5.812835216522217
    7. ')
' → logprob: -6.062835216522217
    8. '.' → logprob: -6.937835216522217
    9. ').
' → logprob: -7.687835216522217
    10. '):
' → logprob: -8.937835693359375

Token 700: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003386956872418523
    2. '
' → logprob: -6.003386974334717
    3. 'def' → logprob: -7.628386974334717
    4. '    
' → logprob: -8.753386497497559
    5. '```' → logprob: -9.253386497497559
    6. ' def' → logprob: -9.878386497497559
    7. ':' → logprob: -10.003386497497559
    8. 'class' → logprob: -10.378386497497559
    9. '(' → logprob: -12.128386497497559
    10. ')' → logprob: -12.128386497497559

Token 701: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011135781183838844
    2. 'def' → logprob: -4.886135578155518
    3. ' def' → logprob: -6.636135578155518
    4. '
' → logprob: -6.636135578155518
    5. ':' → logprob: -7.261135578155518
    6. ':
' → logprob: -10.136136054992676
    7. '```' → logprob: -10.261136054992676
    8. '    
' → logprob: -10.636136054992676
    9. '	def' → logprob: -10.761136054992676
    10. ')' → logprob: -10.761136054992676

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13632526993751526
    2. 'def' → logprob: -2.6363253593444824
    3. ' def' → logprob: -2.8863253593444824
    4. 'class' → logprob: -11.511324882507324
    5. 'IND' → logprob: -12.011324882507324
    6. '	def' → logprob: -12.261324882507324
    7. '    ' → logprob: -12.761324882507324
    8. '@' → logprob: -12.886324882507324
    9. ' indentation' → logprob: -13.261324882507324
    10. '    
' → logprob: -13.636324882507324

Token 703: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.125900998711586
    2. 'def' (adapté à ' def') → logprob: -2.625900983810425
    3. ' @' → logprob: -3.750900983810425
    4. '   ' → logprob: -4.375901222229004
    5. ' def' → logprob: -4.625901222229004
    6. 'VALID' → logprob: -10.125901222229004
    7. '@s' → logprob: -12.750901222229004
    8. 'MAX' → logprob: -12.875901222229004
    9. ' ' → logprob: -13.250901222229004
    10. 'class' → logprob: -14.000901222229004

Token 704: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.13952288031578064
    2. 'def' → logprob: -2.6395227909088135
    3. ' def' → logprob: -3.1395227909088135
    4. ' __' → logprob: -4.514523029327393
    5. 'init' → logprob: -6.014523029327393
    6. 'classmethod' → logprob: -6.639523029327393
    7. '__' → logprob: -7.764523029327393
    8. ' static' → logprob: -8.264522552490234
    9. 'static' → logprob: -9.639522552490234
    10. ' init' → logprob: -10.389522552490234

Token 705: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001025895617203787
    2. 'class' → logprob: -9.875102996826172
    3. 'slots' → logprob: -10.750102996826172
    4. 'classmethod' → logprob: -11.250102996826172
    5. 'staticmethod' → logprob: -12.250102996826172
    6. 'code' → logprob: -12.375102996826172
    7. '_init' → logprob: -13.375102996826172
    8. 'int' → logprob: -13.625102996826172
    9. ' init' → logprob: -13.875102996826172
    10. 'slot' → logprob: -14.625102996826172

Token 706: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0412190817296505
    2. '__(' → logprob: -3.5412189960479736
    3. ' (' → logprob: -4.791219234466553
    4. '(' → logprob: -6.666219234466553
    5. '   ' → logprob: -7.541219234466553
    6. '
' → logprob: -7.666219234466553
    7. '(
' → logprob: -8.416218757629395
    8. 'self' → logprob: -8.666218757629395
    9. '__(
' → logprob: -8.791218757629395
    10. ' ' → logprob: -9.291218757629395

Token 707: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6405310816480778e-05
    2. ' self' → logprob: -11.125016212463379
    3. '
' → logprob: -14.250016212463379
    4. '       ' → logprob: -14.750016212463379
    5. '   ' → logprob: -14.875016212463379
    6. ')' → logprob: -15.875016212463379
    7. ' ' → logprob: -18.125017166137695
    8. '0' → logprob: -18.750017166137695
    9. '	self' → logprob: -18.875017166137695
    10. 'se' → logprob: -19.125017166137695

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029930641874670982
    2. 'self' → logprob: -3.529930591583252
    3. '       ' → logprob: -9.27993106842041
    4. '   ' → logprob: -10.65493106842041
    5. ',
' → logprob: -10.90493106842041
    6. ' self' → logprob: -11.15493106842041
    7. '
' → logprob: -11.52993106842041
    8. ' ,' → logprob: -12.02993106842041
    9. ',self' → logprob: -12.02993106842041
    10. '(self' → logprob: -12.77993106842041

Token 709: ' old' (ID: 2890)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.1347576528787613
    2. 'self' → logprob: -2.2597577571868896
    3. 'old' → logprob: -4.1347575187683105
    4. 'rh' → logprob: -5.3847575187683105
    5. ' patterns' → logprob: -7.7597575187683105
    6. 'pattern' → logprob: -8.384757995605469
    7. ' self' → logprob: -10.134757995605469
    8. 'existing' → logprob: -10.134757995605469
    9. 'inputs' → logprob: -10.259757995605469
    10. 'input' → logprob: -10.384757995605469

Token 710: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.0014335629530251026
    2. '_products' → logprob: -7.126433372497559
    3. 'patterns' → logprob: -8.251433372497559
    4. '_symbols' → logprob: -9.251433372497559
    5. '_pattern' → logprob: -9.501433372497559
    6. '_product' → logprob: -10.251433372497559
    7. '_pat' → logprob: -10.376433372497559
    8. 'Patterns' → logprob: -11.376433372497559
    9. ')' → logprob: -11.501433372497559
    10. ':' → logprob: -11.626433372497559

Token 711: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.240481914370321e-05
    2. '):' → logprob: -10.000052452087402
    3. '):
' → logprob: -12.875052452087402
    4. ' :' → logprob: -13.125052452087402
    5. '   ' → logprob: -13.875052452087402
    6. ')' → logprob: -14.500052452087402
    7. '_:' → logprob: -14.750052452087402
    8. '       ' → logprob: -15.750052452087402
    9. '}:' → logprob: -16.125051498413086
    10. '```' → logprob: -16.125051498413086

Token 712: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0009137284359894693
    2. ' List' → logprob: -7.000913619995117
    3. '   ' → logprob: -14.375913619995117
    4. 'list' → logprob: -14.500913619995117
    5. '[List' → logprob: -14.500913619995117
    6. '       ' → logprob: -15.500913619995117
    7. ' ' → logprob: -15.750913619995117
    8. 'Optional' → logprob: -16.500913619995117
    9. '	List' → logprob: -16.625913619995117
    10. ')' → logprob: -18.000913619995117

Token 713: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1637164789135568e-05
    2. '[List' → logprob: -12.500011444091797
    3. '[int' → logprob: -13.000011444091797
    4. 'Rh' → logprob: -13.125011444091797
    5. '[str' → logprob: -13.375011444091797
    6. '[
' → logprob: -14.375011444091797
    7. '['' → logprob: -14.500011444091797
    8. ']' → logprob: -15.000011444091797
    9. ')' → logprob: -15.250011444091797
    10. '```' → logprob: -16.125011444091797

Token 714: 'Rh' (ID: 83050)
  Prédit: 'Rh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rh' → logprob: -2.339278580620885e-06
    2. 'Optional' → logprob: -13.750001907348633
    3. 'Hex' → logprob: -14.000001907348633
    4. ' Rhythm' → logprob: -15.000001907348633
    5. 'Tuple' → logprob: -17.250001907348633
    6. '   ' → logprob: -17.750001907348633
    7. ' Rh' → logprob: -18.000001907348633
    8. '[' → logprob: -18.125001907348633
    9. ''' → logprob: -18.375001907348633
    10. 'List' → logprob: -18.625001907348633

Token 715: 'ythm' (ID: 38243)
  Prédit: 'ythm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ythm' → logprob: -1.7432603272027336e-06
    2. 'yth' → logprob: -13.375001907348633
    3. 'y' → logprob: -16.125001907348633
    4. 'yt' → logprob: -17.000001907348633
    5. 'hythm' → logprob: -18.500001907348633
    6. 'Y' → logprob: -19.875001907348633
    7. '```' → logprob: -20.375001907348633
    8. ' y' → logprob: -21.375001907348633
    9. '``' → logprob: -21.500001907348633
    10. 'th' → logprob: -21.625001907348633

Token 716: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -1.7432603272027336e-06
    2. 'pattern' → logprob: -14.250001907348633
    3. 'Patterns' → logprob: -15.000001907348633
    4. 'Pat' → logprob: -15.125001907348633
    5. 'attern' → logprob: -15.500001907348633
    6. 'Music' → logprob: -16.625001907348633
    7. ' Pattern' → logprob: -17.500001907348633
    8. '_pattern' → logprob: -17.875001907348633
    9. '_PATTERN' → logprob: -18.625001907348633
    10. 'P' → logprob: -18.750001907348633

Token 717: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.4471087157726288
    2. ']):
' → logprob: -1.0721087455749512
    3. '])' → logprob: -4.447108745574951
    4. ']' → logprob: -5.572108745574951
    5. ')' → logprob: -6.822108745574951
    6. '):' → logprob: -7.322108745574951
    7. '       ' → logprob: -8.072108268737793
    8. '   ' → logprob: -8.197108268737793
    9. '):
' → logprob: -8.572108268737793
    10. '[' → logprob: -9.447108268737793

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044795009307563305
    2. 'self' → logprob: -8.000448226928711
    3. ' self' → logprob: -9.500448226928711
    4. ':' → logprob: -11.125448226928711
    5. '   ' → logprob: -11.750448226928711
    6. ',' → logprob: -12.125448226928711
    7. ')' → logprob: -12.875448226928711
    8. '):
' → logprob: -13.125448226928711
    9. '):' → logprob: -13.750448226928711
    10. '      ' → logprob: -14.250448226928711

Token 719: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1024489626288414
    2. '       ' → logprob: -2.3524489402770996
    3. ' self' → logprob: -6.1024489402771
    4. '   ' → logprob: -13.477449417114258
    5. '	self' → logprob: -14.102449417114258
    6. '(self' → logprob: -16.477449417114258
    7. ' ' → logprob: -16.977449417114258
    8. '[self' → logprob: -17.102449417114258
    9. '           ' → logprob: -17.477449417114258
    10. '#' → logprob: -17.852449417114258

Token 720: '.old' (ID: 81843)
  Prédit: '.old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.old' → logprob: -9.567575034452602e-05
    2. '.' → logprob: -9.75009536743164
    3. ' .' → logprob: -10.50009536743164
    4. 'old' → logprob: -11.87509536743164
    5. '	old' → logprob: -13.25009536743164
    6. '.previous' → logprob: -15.75009536743164
    7. '.original' → logprob: -15.75009536743164
    8. '   ' → logprob: -15.75009536743164
    9. '._' → logprob: -16.25009536743164
    10. '_old' → logprob: -16.25009536743164

Token 721: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -1.4498052223643754e-05
    2. 'patterns' → logprob: -11.750014305114746
    3. '_pattern' → logprob: -12.750014305114746
    4. '       ' → logprob: -13.625014305114746
    5. '   ' → logprob: -14.250014305114746
    6. '_pat' → logprob: -14.375014305114746
    7. '_p' → logprob: -15.250014305114746
    8. 'Patterns' → logprob: -15.500014305114746
    9. '._' → logprob: -15.875014305114746
    10. 's' → logprob: -16.125015258789062

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326353549957275
    2. ' =' → logprob: -1.3132635354995728
    3. '   ' → logprob: -14.063263893127441
    4. '       ' → logprob: -15.063263893127441
    5. ':' → logprob: -15.188263893127441
    6. ' ' → logprob: -15.438263893127441
    7. '        ' → logprob: -16.563262939453125
    8. ')' → logprob: -16.813262939453125
    9. '    ' → logprob: -16.813262939453125
    10. '=self' → logprob: -16.938262939453125

Token 723: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.0019287518225610256
    2. ' old' → logprob: -6.251928806304932
    3. '	old' → logprob: -15.751928329467773
    4. '[' → logprob: -17.626928329467773
    5. '   ' → logprob: -17.751928329467773
    6. 'older' → logprob: -18.001928329467773
    7. '(old' → logprob: -18.251928329467773
    8. '.old' → logprob: -18.626928329467773
    9. '_old' → logprob: -18.751928329467773
    10. '       ' → logprob: -18.876928329467773

Token 724: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -2.0339031834737398e-05
    2. 'patterns' → logprob: -10.875020027160645
    3. 'Patterns' → logprob: -14.000020027160645
    4. '_' → logprob: -15.375020027160645
    5. '_pattern' → logprob: -16.37502098083496
    6. '_p' → logprob: -16.37502098083496
    7. '_pat' → logprob: -16.62502098083496
    8. ' patterns' → logprob: -17.25002098083496
    9. '```' → logprob: -17.87502098083496
    10. 'attern' → logprob: -18.00002098083496

Token 725: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.553638219833374
    2. '
' → logprob: -1.303638219833374
    3. 'def' → logprob: -2.803638219833374
    4. '<|end|>' → logprob: -2.928638219833374
    5. '    
' → logprob: -3.928638219833374
    6. '

' → logprob: -4.428638458251953
    7. '<|end|>' → logprob: -5.178638458251953
    8. '        
' → logprob: -7.303638458251953
    9. '  
' → logprob: -7.553638458251953
    10. ' def' → logprob: -8.178638458251953

Token 726: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12927080690860748
    2. 'def' → logprob: -2.3792707920074463
    3. '
' → logprob: -3.6292707920074463
    4. '    
' → logprob: -6.504271030426025
    5. '

' → logprob: -8.254270553588867
    6. ' def' → logprob: -8.254270553588867
    7. '        
' → logprob: -9.754270553588867
    8. '<|end|>' → logprob: -12.004270553588867
    9. '       ' → logprob: -12.379270553588867
    10. ')' → logprob: -12.379270553588867

Token 727: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001596771035110578
    2. ' def' → logprob: -8.75015926361084
    3. '   ' → logprob: -13.75015926361084
    4. '
' → logprob: -17.125160217285156
    5. 'de' → logprob: -18.625160217285156
    6. '	def' → logprob: -18.875160217285156
    7. 'class' → logprob: -19.375160217285156
    8. ' ' → logprob: -19.875160217285156
    9. ')' → logprob: -20.125160217285156
    10. 'from' → logprob: -21.250160217285156

Token 728: ' l' (ID: 305)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.0025623380206525326
    2. ' merge' → logprob: -6.002562522888184
    3. 'def' → logprob: -9.502562522888184
    4. 'combine' → logprob: -12.377562522888184
    5. 'mer' → logprob: -12.877562522888184
    6. 'validate' → logprob: -13.377562522888184
    7. 'merged' → logprob: -13.627562522888184
    8. 'can' → logprob: -13.877562522888184
    9. 'get' → logprob: -15.252562522888184
    10. '   ' → logprob: -15.502562522888184

Token 729: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6612520217895508
    2. 'eft' → logprob: -1.6612520217895508
    3. 'ist' → logprob: -1.9112520217895508
    4. 'ength' → logprob: -2.161252021789551
    5. 'e' → logprob: -4.536252021789551
    6. 'ink' → logprob: -4.911252021789551
    7. 'ine' → logprob: -6.536252021789551
    8. 'ast' → logprob: -6.536252021789551
    9. 'earn' → logprob: -6.536252021789551
    10. 'eg' → logprob: -6.536252021789551

Token 730: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002652348019182682
    2. '(' → logprob: -6.002652168273926
    3. '<|end|>' → logprob: -9.502652168273926
    4. 'self' → logprob: -10.502652168273926
    5. '(
' → logprob: -11.127652168273926
    6. ' (' → logprob: -11.127652168273926
    7. '_(' → logprob: -11.502652168273926
    8. '_length' → logprob: -12.127652168273926
    9. '(a' → logprob: -12.627652168273926
    10. '   ' → logprob: -12.627652168273926

Token 731: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012179485522210598
    2. '(' → logprob: -4.637179374694824
    3. ')' → logprob: -7.512179374694824
    4. '<|end|>' → logprob: -7.512179374694824
    5. ')(' → logprob: -7.637179374694824
    6. 'self' → logprob: -7.887179374694824
    7. '(
' → logprob: -8.137179374694824
    8. ' (' → logprob: -10.137179374694824
    9. ')(
' → logprob: -10.512179374694824
    10. 'def' → logprob: -10.762179374694824

Token 732: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04950437322258949
    2. 'a' → logprob: -3.049504280090332
    3. ' self' → logprob: -7.174504280090332
    4. ')' → logprob: -9.924504280090332
    5. '   ' → logprob: -10.049504280090332
    6. '       ' → logprob: -10.799504280090332
    7. 'x' → logprob: -11.424504280090332
    8. ' a' → logprob: -11.549504280090332
    9. '	self' → logprob: -12.299504280090332
    10. '[self' → logprob: -12.424504280090332

Token 733: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00893374439328909
    2. ',b' → logprob: -4.8839335441589355
    3. ' ,' → logprob: -7.0089335441589355
    4. ':' → logprob: -8.133934020996094
    5. 'b' → logprob: -10.258934020996094
    6. '=' → logprob: -10.758934020996094
    7. ',a' → logprob: -11.133934020996094
    8. ':int' → logprob: -11.133934020996094
    9. '   ' → logprob: -11.383934020996094
    10. ',
' → logprob: -11.633934020996094

Token 734: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004219909198582172
    2. ' int' → logprob: -6.004220008850098
    3. 'b' → logprob: -6.504220008850098
    4. ' b' → logprob: -9.004220008850098
    5. ',' → logprob: -10.254220008850098
    6. ' ' → logprob: -10.504220008850098
    7. '<|end|>' → logprob: -10.879220008850098
    8. ':int' → logprob: -11.379220008850098
    9. ',int' → logprob: -11.504220008850098
    10. ')' → logprob: -12.129220008850098

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016945181414484978
    2. ',b' → logprob: -9.12516975402832
    3. ' ,' → logprob: -9.75016975402832
    4. ',
' → logprob: -14.12516975402832
    5. 'b' → logprob: -14.37516975402832
    6. ')' → logprob: -14.87516975402832
    7. ',int' → logprob: -15.25016975402832
    8. ',a' → logprob: -15.87516975402832
    9. ',

' → logprob: -17.12516975402832
    10. '‌,' → logprob: -17.50016975402832

Token 736: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061969030648469925
    2. ' b' → logprob: -2.811969041824341
    3. '   ' → logprob: -14.061968803405762
    4. ' ' → logprob: -15.311968803405762
    5. '    ' → logprob: -15.686968803405762
    6. '	b' → logprob: -16.061969757080078
    7. ')b' → logprob: -16.936969757080078
    8. ')' → logprob: -17.186969757080078
    9. '  ' → logprob: -17.311969757080078
    10. ' ' → logprob: -17.811969757080078

Token 737: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11975185573101044
    2. '):' → logprob: -2.2447519302368164
    3. ':' → logprob: -5.744751930236816
    4. ' )' → logprob: -6.369751930236816
    5. ',' → logprob: -7.244751930236816
    6. '):
' → logprob: -7.369751930236816
    7. ' ):' → logprob: -7.869751930236816
    8. '   ' → logprob: -8.869751930236816
    9. ')->' → logprob: -10.744751930236816
    10. '<|end|>' → logprob: -10.994751930236816

Token 738: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01419324241578579
    2. ' int' → logprob: -4.264193058013916
    3. ')' → logprob: -10.514193534851074
    4. ':int' → logprob: -13.264193534851074
    5. ' ' → logprob: -15.014193534851074
    6. ' )' → logprob: -15.764193534851074
    7. '[int' → logprob: -16.139192581176758
    8. '	int' → logprob: -16.389192581176758
    9. '=int' → logprob: -16.389192581176758
    10. ']int' → logprob: -16.389192581176758

Token 739: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012797261297237128
    2. ' )' → logprob: -9.000127792358398
    3. '):' → logprob: -12.625127792358398
    4. ')->' → logprob: -14.500127792358398
    5. '   ' → logprob: -15.500127792358398
    6. ':' → logprob: -15.500127792358398
    7. ',' → logprob: -16.0001277923584
    8. '):
' → logprob: -16.1251277923584
    9. '`)' → logprob: -18.0001277923584
    10. '),' → logprob: -18.1251277923584

Token 740: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005569627974182367
    2. ' ->' → logprob: -8.250556945800781
    3. '->' → logprob: -8.250556945800781
    4. ')' → logprob: -10.875556945800781
    5. ')->' → logprob: -12.375556945800781
    6. '):' → logprob: -12.500556945800781
    7. ' :' → logprob: -12.625556945800781
    8. '=' → logprob: -13.375556945800781
    9. ':int' → logprob: -13.750556945800781
    10. '>' → logprob: -14.625556945800781

Token 741: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038043782114982605
    2. ' int' → logprob: -3.288043737411499
    3. '(int' → logprob: -13.413043975830078
    4. '[int' → logprob: -14.788043975830078
    5. 'a' → logprob: -15.788043975830078
    6. ':int' → logprob: -16.038043975830078
    7. ' (' → logprob: -16.913043975830078
    8. '<int' → logprob: -17.288043975830078
    9. '	int' → logprob: -17.413043975830078
    10. '=int' → logprob: -17.663043975830078

Token 742: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005220544408075511
    2. ':
' → logprob: -7.875522136688232
    3. '       ' → logprob: -9.500521659851074
    4. '):' → logprob: -10.625521659851074
    5. ',' → logprob: -11.125521659851074
    6. '<|end|>' → logprob: -11.375521659851074
    7. ':return' → logprob: -12.250521659851074
    8. '   ' → logprob: -12.875521659851074
    9. ')' → logprob: -13.250521659851074
    10. '):
' → logprob: -13.500521659851074

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004975094925612211
    2. ' return' → logprob: -9.125497817993164
    3. '    ' → logprob: -9.500497817993164
    4. '   ' → logprob: -9.750497817993164
    5. '      ' → logprob: -10.375497817993164
    6. '        ' → logprob: -10.625497817993164
    7. '1' → logprob: -10.875497817993164
    8. ',' → logprob: -10.875497817993164
    9. 'a' → logprob: -11.125497817993164
    10. '_' → logprob: -11.125497817993164

Token 744: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6746809482574463
    2. 'import' (adapté à ' import') → logprob: -1.1746809482574463
    3. 'return' → logprob: -1.7996809482574463
    4. ' return' → logprob: -5.049680709838867
    5. 'from' → logprob: -5.674680709838867
    6. 'if' → logprob: -5.799680709838867
    7. 'while' → logprob: -5.924680709838867
    8. ' import' → logprob: -8.174680709838867
    9. '   ' → logprob: -8.174680709838867
    10. ' from' → logprob: -9.549680709838867

Token 745: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0005530327325686812
    2. ' math' → logprob: -7.500553131103516
    3. '(math' → logprob: -21.500553131103516
    4. '_math' → logprob: -21.500553131103516
    5. '.math' → logprob: -22.125553131103516
    6. 'cmath' → logprob: -22.625553131103516
    7. 'Math' → logprob: -24.500553131103516
    8. 'mat' → logprob: -25.250553131103516
    9. 'sys' → logprob: -25.625553131103516
    10. 'm' → logprob: -26.125553131103516

Token 746: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3375055193901062
    2. '
' → logprob: -1.337505578994751
    3. '        
' → logprob: -4.962505340576172
    4. 'return' → logprob: -5.337505340576172
    5. ',' → logprob: -5.462505340576172
    6. ',
' → logprob: -6.462505340576172
    7. ' return' → logprob: -6.837505340576172
    8. '<|end|>' → logprob: -7.087505340576172
    9. ')' → logprob: -7.212505340576172
    10. '   ' → logprob: -7.587505340576172

Token 747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16120439767837524
    2. 'return' → logprob: -2.2862043380737305
    3. ' return' → logprob: -3.4112043380737305
    4. '<|end|>' → logprob: -5.1612043380737305
    5. '   ' → logprob: -5.7862043380737305
    6. '        
' → logprob: -6.4112043380737305
    7. ',' → logprob: -6.6612043380737305
    8. ')' → logprob: -7.6612043380737305
    9. '	return' → logprob: -7.9112043380737305
    10. ' ' → logprob: -9.03620433807373

Token 748: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08513621240854263
    2. '       ' → logprob: -2.5851361751556396
    3. ' return' → logprob: -5.085136413574219
    4. '	return' → logprob: -10.585136413574219
    5. '
' → logprob: -12.210136413574219
    6. '   ' → logprob: -12.835136413574219
    7. '	' → logprob: -13.210136413574219
    8. '        
' → logprob: -13.710136413574219
    9. '{return' → logprob: -14.335136413574219
    10. 'eturn' → logprob: -14.835136413574219

Token 749: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04109335318207741
    2. ' a' → logprob: -3.541093349456787
    3. ' abs' → logprob: -5.291093349456787
    4. 'abs' → logprob: -5.416093349456787
    5. ' (' → logprob: -7.416093349456787
    6. '(a' → logprob: -7.416093349456787
    7. 'math' → logprob: -7.666093349456787
    8. ' math' → logprob: -9.416093826293945
    9. '(abs' → logprob: -10.416093826293945
    10. '(math' → logprob: -12.041093826293945

Token 750: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16137585043907166
    2. '*' → logprob: -1.911375880241394
    3. '*b' → logprob: -6.911375999450684
    4. '*a' → logprob: -9.536375999450684
    5. '*l' → logprob: -9.661375999450684
    6. '*object' → logprob: -11.411375999450684
    7. '*m' → logprob: -13.661375999450684
    8. ' ' → logprob: -14.286375999450684
    9. '*g' → logprob: -14.536375999450684
    10. '*num' → logprob: -14.536375999450684

Token 751: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002146226615877822
    2. ' b' → logprob: -8.500214576721191
    3. '(b' → logprob: -11.500214576721191
    4. ' (' → logprob: -13.875214576721191
    5. '(' → logprob: -17.625215530395508
    6. '   ' → logprob: -19.000215530395508
    7. '	b' → logprob: -19.125215530395508
    8. '  ' → logprob: -19.625215530395508
    9. ' ' → logprob: -20.250215530395508
    10. '_b' → logprob: -21.000215530395508

Token 752: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5759432911872864
    2. '//' → logprob: -0.8259432911872864
    3. '       ' → logprob: -13.450942993164062
    4. ' ' → logprob: -14.450942993164062
    5. ' ' → logprob: -14.450942993164062
    6. '   ' → logprob: -14.575942993164062
    7. '#' → logprob: -15.450942993164062
    8. '/' → logprob: -16.200942993164062
    9. ')' → logprob: -16.200942993164062
    10. '```' → logprob: -16.325942993164062

Token 753: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -4.5491004129871726e-05
    2. ' math' → logprob: -10.000045776367188
    3. '(math' → logprob: -19.625045776367188
    4. 'Math' → logprob: -22.625045776367188
    5. 'import' → logprob: -23.375045776367188
    6. '.math' → logprob: -23.875045776367188
    7. '
' → logprob: -25.500045776367188
    8. '_math' → logprob: -25.625045776367188
    9. 'max' → logprob: -26.250045776367188
    10. '   ' → logprob: -26.625045776367188

Token 754: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -1.6047699318733066e-05
    2. 'g' → logprob: -11.875016212463379
    3. '.' → logprob: -12.500016212463379
    4. '.math' → logprob: -13.750016212463379
    5. ' .' → logprob: -14.125016212463379
    6. ' gcd' → logprob: -14.625016212463379
    7. '#g' → logprob: -15.000016212463379
    8. '.com' → logprob: -15.375016212463379
    9. '.prod' → logprob: -15.500016212463379
    10. '.floor' → logprob: -15.500016212463379

Token 755: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.7954958821064793e-05
    2. 'math' → logprob: -12.125018119812012
    3. 'c' → logprob: -12.250018119812012
    4. 'cm' → logprob: -12.375018119812012
    5. 'cf' → logprob: -12.750018119812012
    6. 'cdn' → logprob: -15.750018119812012
    7. 'cmath' → logprob: -16.250017166137695
    8. 'CD' → logprob: -16.375017166137695
    9. 'reat' → logprob: -17.250017166137695
    10. 'e' → logprob: -17.250017166137695

Token 756: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.676981345459353e-06
    2. 'a' → logprob: -12.375005722045898
    3. '(' → logprob: -13.625005722045898
    4. '(
' → logprob: -15.750005722045898
    5. '(b' → logprob: -17.6250057220459
    6. ' (' → logprob: -17.6250057220459
    7. ' a' → logprob: -18.7500057220459
    8. 'b' → logprob: -20.0000057220459
    9. ' ' → logprob: -20.7500057220459
    10. '(abs' → logprob: -20.8750057220459

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007988685742020607
    2. ',b' → logprob: -5.007988452911377
    3. 'b' → logprob: -7.382988452911377
    4. 'a' → logprob: -7.632988452911377
    5. ' ,' → logprob: -9.757988929748535
    6. '(a' → logprob: -10.007988929748535
    7. ',a' → logprob: -10.007988929748535
    8. '(b' → logprob: -11.757988929748535
    9. ')' → logprob: -12.257988929748535
    10. ' a' → logprob: -13.257988929748535

Token 758: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2260364294052124
    2. 'a' → logprob: -1.6010364294052124
    3. ' b' → logprob: -7.726036548614502
    4. ' a' → logprob: -8.726036071777344
    5. '   ' → logprob: -12.101036071777344
    6. ' ' → logprob: -12.851036071777344
    7. ')' → logprob: -13.101036071777344
    8. '(a' → logprob: -13.663536071777344
    9. ')b' → logprob: -13.851036071777344
    10. '```' → logprob: -13.976036071777344

Token 759: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.52788148727268e-05
    2. ',' → logprob: -10.250064849853516
    3. 'a' → logprob: -11.625064849853516
    4. '   ' → logprob: -11.875064849853516
    5. ')a' → logprob: -12.750064849853516
    6. ' )' → logprob: -13.125064849853516
    7. 'b' → logprob: -13.375064849853516
    8. '2' → logprob: -13.750064849853516
    9. ')
' → logprob: -14.000064849853516
    10. '}' → logprob: -14.250064849853516

Token 760: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036477796733379364
    2. 'def' → logprob: -3.41147780418396
    3. '    
' → logprob: -6.411477565765381
    4. ' def' → logprob: -8.411478042602539
    5. '<|end|>' → logprob: -8.411478042602539
    6. '  
' → logprob: -8.536478042602539
    7. ' ' → logprob: -8.661478042602539
    8. '
' → logprob: -8.911478042602539
    9. '  ' → logprob: -9.286478042602539
    10. '```' → logprob: -9.786478042602539

Token 761: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010534585453569889
    2. ' def' → logprob: -4.760534763336182
    3. '   ' → logprob: -6.260534763336182
    4. '	def' → logprob: -12.260534286499023
    5. ' ' → logprob: -13.635534286499023
    6. '
' → logprob: -14.135534286499023
    7. '    
' → logprob: -14.760534286499023
    8. ')' → logprob: -15.260534286499023
    9. '  ' → logprob: -15.510534286499023
    10. ':def' → logprob: -16.385534286499023

Token 762: ' full' (ID: 3149)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.09285586327314377
    2. 'merged' → logprob: -2.717855930328369
    3. 'compute' → logprob: -4.842855930328369
    4. 'get' → logprob: -4.842855930328369
    5. ' merge' → logprob: -6.592855930328369
    6. ' merged' → logprob: -6.592855930328369
    7. 'calculate' → logprob: -6.592855930328369
    8. 'l' → logprob: -6.967855930328369
    9. '_merge' → logprob: -7.467855930328369
    10. 'combined' → logprob: -7.592855930328369

Token 763: '_l' (ID: 1478)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.04437731206417084
    2. '_pattern' → logprob: -3.169377326965332
    3. '_cycle' → logprob: -7.544377326965332
    4. '_merge' → logprob: -8.044377326965332
    5. 'length' → logprob: -9.169377326965332
    6. '_' → logprob: -9.294377326965332
    7. '_sequence' → logprob: -10.044377326965332
    8. '_l' → logprob: -10.294377326965332
    9. '_lengths' → logprob: -10.419377326965332
    10. '_period' → logprob: -10.794377326965332

Token 764: 'cm' (ID: 7871)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ength' → logprob: -0.04327103868126869
    2. 'cm' → logprob: -3.793271064758301
    3. 'en' → logprob: -4.043271064758301
    4. 'eng' → logprob: -6.168271064758301
    5. 'enth' → logprob: -9.1682710647583
    6. 'e' → logprob: -10.5432710647583
    7. 'engt' → logprob: -10.9182710647583
    8. 'oop' → logprob: -11.2932710647583
    9. 'length' → logprob: -11.7932710647583
    10. '   ' → logprob: -12.1682710647583

Token 765: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9981420336989686e-05
    2. '(' → logprob: -11.000020027160645
    3. ' (' → logprob: -13.500020027160645
    4. 'self' → logprob: -13.625020027160645
    5. '(
' → logprob: -14.875020027160645
    6. '   ' → logprob: -16.625019073486328
    7. '<|end|>' → logprob: -16.625019073486328
    8. '=self' → logprob: -17.250019073486328
    9. '[self' → logprob: -17.750019073486328
    10. ' ' → logprob: -18.125019073486328

Token 766: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007669560611248016
    2. '(' → logprob: -5.257669448852539
    3. ' (' → logprob: -6.507669448852539
    4. '(len' → logprob: -7.132669448852539
    5. ')(' → logprob: -10.257669448852539
    6. '_(' → logprob: -10.257669448852539
    7. ')' → logprob: -11.007669448852539
    8. '__(' → logprob: -11.257669448852539
    9. '(
' → logprob: -11.382669448852539
    10. '](' → logprob: -11.882669448852539

Token 767: ' numbers' (ID: 8663)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15970787405967712
    2. 'numbers' → logprob: -3.03470778465271
    3. ' self' → logprob: -3.15970778465271
    4. 'length' → logprob: -3.78470778465271
    5. ' numbers' → logprob: -4.409708023071289
    6. ' lengths' → logprob: -4.659708023071289
    7. 'values' → logprob: -4.784708023071289
    8. ' values' → logprob: -6.659708023071289
    9. '   ' → logprob: -6.659708023071289
    10. 'n' → logprob: -7.409708023071289

Token 768: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7896318435668945
    2. ')' → logprob: -1.2896318435668945
    3. ':' → logprob: -1.5396318435668945
    4. '):' → logprob: -3.5396318435668945
    5. 'self' → logprob: -4.7896318435668945
    6. '):
' → logprob: -5.5396318435668945
    7. ' self' → logprob: -5.5396318435668945
    8. '   ' → logprob: -5.6646318435668945
    9. '       ' → logprob: -5.6646318435668945
    10. '=self' → logprob: -7.2896318435668945

Token 769: ' List' (ID: 2655)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31817513704299927
    2. 'List' → logprob: -1.3181750774383545
    3. ' self' → logprob: -5.943175315856934
    4. ')' → logprob: -6.943175315856934
    5. ' List' → logprob: -7.443175315856934
    6. 'list' → logprob: -7.818175315856934
    7. '(self' → logprob: -8.318175315856934
    8. '_list' → logprob: -10.068175315856934
    9. ' list' → logprob: -11.568175315856934
    10. '   ' → logprob: -11.818175315856934

Token 770: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.034279465675354004
    2. ')' → logprob: -3.4092793464660645
    3. '])' → logprob: -7.7842793464660645
    4. '[' → logprob: -9.284279823303223
    5. ':' → logprob: -10.534279823303223
    6. 'int' → logprob: -10.909279823303223
    7. '<int' → logprob: -11.034279823303223
    8. '(int' → logprob: -11.159279823303223
    9. ']' → logprob: -11.659279823303223
    10. '   ' → logprob: -11.659279823303223

Token 771: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38703036308288574
    2. '])' → logprob: -1.1370303630828857
    3. ' ])' → logprob: -9.762030601501465
    4. ' )' → logprob: -9.887030601501465
    5. ''])' → logprob: -10.512030601501465
    6. '[int' → logprob: -11.387030601501465
    7. '`)' → logprob: -12.262030601501465
    8. '   ' → logprob: -13.387030601501465
    9. '）' → logprob: -13.887030601501465
    10. '>)' → logprob: -13.887030601501465

Token 772: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.8336591124534607
    2. ' ->' → logprob: -1.2086591720581055
    3. ':' → logprob: -1.3336591720581055
    4. ')' → logprob: -6.3336591720581055
    5. '   ' → logprob: -6.4586591720581055
    6. '>' → logprob: -10.833659172058105
    7. '       ' → logprob: -10.958659172058105
    8. ':
' → logprob: -11.083659172058105
    9. ')->' → logprob: -11.708659172058105
    10. '  ' → logprob: -12.083659172058105

Token 773: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009157438762485981
    2. ' int' → logprob: -7.00091552734375
    3. '[int' → logprob: -13.00091552734375
    4. 'Optional' → logprob: -13.62591552734375
    5. '(int' → logprob: -14.37591552734375
    6. '   ' → logprob: -15.87591552734375
    7. ':int' → logprob: -17.62591552734375
    8. '	int' → logprob: -17.62591552734375
    9. ' ' → logprob: -17.87591552734375
    10. '<int' → logprob: -18.50091552734375

Token 774: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02221381664276123
    2. ':
' → logprob: -3.897213935852051
    3. '->' → logprob: -7.147213935852051
    4. '       ' → logprob: -7.772213935852051
    5. ' ->' → logprob: -8.52221393585205
    6. ')' → logprob: -8.77221393585205
    7. '   ' → logprob: -9.89721393585205
    8. ':
' → logprob: -10.89721393585205
    9. ':return' → logprob: -11.39721393585205
    10. ' :' → logprob: -12.14721393585205

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.661626634420827e-05
    2. '   ' → logprob: -10.125086784362793
    3. 'result' → logprob: -10.750086784362793
    4. 'n' → logprob: -11.500086784362793
    5. '      ' → logprob: -12.750086784362793
    6. 'import' → logprob: -13.000086784362793
    7. '```' → logprob: -13.250086784362793
    8. '    ' → logprob: -13.625086784362793
    9. ' result' → logprob: -14.375086784362793
    10. 'if' → logprob: -14.375086784362793

Token 776: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29483500123023987
    2. 'result' → logprob: -1.7948349714279175
    3. 'from' (adapté à ' from') → logprob: -2.544835090637207
    4. 'import' → logprob: -4.919835090637207
    5. 'res' → logprob: -6.669835090637207
    6. 'if' → logprob: -7.169835090637207
    7. ' result' → logprob: -7.794835090637207
    8. '   ' → logprob: -8.169835090637207
    9. 'r' → logprob: -8.794835090637207
    10. ' from' → logprob: -8.794835090637207

Token 777: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.015318740159273148
    2. 'math' → logprob: -4.265318870544434
    3. ' functools' → logprob: -6.765318870544434
    4. ' math' → logprob: -14.015318870544434
    5. 'fra' → logprob: -14.140318870544434
    6. 'import' → logprob: -17.015317916870117
    7. ' ' → logprob: -17.890317916870117
    8. '.math' → logprob: -18.265317916870117
    9. 'cmath' → logprob: -18.390317916870117
    10. 'reduce' → logprob: -19.265317916870117

Token 778: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6327106952667236
    2. ' import' → logprob: -0.7577106952667236
    3. '	import' → logprob: -9.257710456848145
    4. '_import' → logprob: -11.632710456848145
    5. ' ' → logprob: -13.507710456848145
    6. '<|end|>' → logprob: -13.632710456848145
    7. ' ' → logprob: -14.007710456848145
    8. 'reduce' → logprob: -14.757710456848145
    9. '   ' → logprob: -14.882710456848145
    10. '.import' → logprob: -15.007710456848145

Token 779: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -2.5822400857578032e-05
    2. ' reduce' → logprob: -10.750025749206543
    3. '.reduce' → logprob: -12.625025749206543
    4. 'import' → logprob: -14.250025749206543
    5. '_reduce' → logprob: -15.625025749206543
    6. 'redu' → logprob: -15.750025749206543
    7. '   ' → logprob: -17.00002670288086
    8. '```' → logprob: -18.37502670288086
    9. ' ' → logprob: -19.12502670288086
    10. '
' → logprob: -19.25002670288086

Token 780: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017076361924409866
    2. '
' → logprob: -4.39207649230957
    3. ',' → logprob: -6.14207649230957
    4. 'return' → logprob: -6.64207649230957
    5. '        
' → logprob: -7.89207649230957
    6. ' return' → logprob: -8.64207649230957
    7. '
' → logprob: -8.89207649230957
    8. ':' → logprob: -9.26707649230957
    9. '[' → logprob: -10.01707649230957
    10. '<|end|>' → logprob: -10.26707649230957

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00971667468547821
    2. 'return' → logprob: -4.759716510772705
    3. ' return' → logprob: -7.134716510772705
    4. '
' → logprob: -8.509716987609863
    5. '        
' → logprob: -9.759716987609863
    6. '	' → logprob: -10.634716987609863
    7. '	return' → logprob: -12.134716987609863
    8. '		
' → logprob: -12.884716987609863
    9. 'import' → logprob: -13.259716987609863
    10. ',' → logprob: -13.384716987609863

Token 782: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5768360495567322
    2. 'return' → logprob: -0.8268360495567322
    3. ' return' → logprob: -7.076836109161377
    4. '   ' → logprob: -10.576835632324219
    5. '	return' → logprob: -11.576835632324219
    6. '	' → logprob: -12.326835632324219
    7. 'import' (adapté à ' import') → logprob: -12.576835632324219
    8. 'def' → logprob: -12.951835632324219
    9. '
' → logprob: -13.201835632324219
    10. '```' → logprob: -13.326835632324219

Token 783: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.01815064437687397
    2. ' math' → logprob: -4.018150806427002
    3. 'operator' → logprob: -14.768150329589844
    4. '_math' → logprob: -15.893150329589844
    5. 'fun' → logprob: -16.268150329589844
    6. 'Math' → logprob: -16.393150329589844
    7. ' functools' → logprob: -16.768150329589844
    8. 'cmath' → logprob: -18.018150329589844
    9. '(math' → logprob: -18.143150329589844
    10. '.math' → logprob: -19.143150329589844

Token 784: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033146000932902098
    2. '
' → logprob: -5.87831449508667
    3. 'return' → logprob: -8.128314971923828
    4. '        
' → logprob: -8.753314971923828
    5. ' return' → logprob: -10.628314971923828
    6. ',' → logprob: -12.128314971923828
    7. '	' → logprob: -12.253314971923828
    8. '<|end|>' → logprob: -12.253314971923828
    9. ':' → logprob: -12.628314971923828
    10. '   ' → logprob: -13.378314971923828

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005892522749491036
    2. 'return' → logprob: -7.750589370727539
    3. '
' → logprob: -8.875589370727539
    4. ' return' → logprob: -11.500589370727539
    5. '   ' → logprob: -11.875589370727539
    6. '	' → logprob: -14.375589370727539
    7. '        
' → logprob: -14.625589370727539
    8. '	return' → logprob: -15.875589370727539
    9. ',' → logprob: -16.12558937072754
    10. '           ' → logprob: -16.50058937072754

Token 786: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31355413794517517
    2. '       ' → logprob: -1.3135541677474976
    3. ' return' → logprob: -8.563553810119629
    4. '   ' → logprob: -9.313553810119629
    5. '	return' → logprob: -12.313553810119629
    6. '        
' → logprob: -13.063553810119629
    7. '
' → logprob: -13.438553810119629
    8. 'result' → logprob: -13.938553810119629
    9. 'def' → logprob: -14.063553810119629
    10. '	' → logprob: -14.813553810119629

Token 787: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.03365030884742737
    2. ' reduce' → logprob: -3.4086503982543945
    3. '   ' → logprob: -12.908650398254395
    4. ' ' → logprob: -14.408650398254395
    5. '.reduce' → logprob: -14.908650398254395
    6. ' ' → logprob: -15.408650398254395
    7. '    ' → logprob: -15.783650398254395
    8. '1' → logprob: -15.783650398254395
    9. 'redu' → logprob: -15.783650398254395
    10. '_reduce' → logprob: -16.158649444580078

Token 788: '(lambda' (ID: 43341)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5814895629882812
    2. '(lambda' → logprob: -0.8314895629882812
    3. '(' → logprob: -5.206489562988281
    4. '(
' → logprob: -10.831489562988281
    5. '(math' → logprob: -11.581489562988281
    6. '(operator' → logprob: -11.706489562988281
    7. ' (' → logprob: -11.831489562988281
    8. '(l' → logprob: -12.456489562988281
    9. '((' → logprob: -12.956489562988281
    10. 'lambda' → logprob: -13.831489562988281

Token 789: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.017438873648643494
    2. 'a' → logprob: -4.267438888549805
    3. ' x' → logprob: -5.767438888549805
    4. 'lambda' → logprob: -9.017438888549805
    5. ' a' → logprob: -10.892438888549805
    6. ' lambda' → logprob: -14.017438888549805
    7. '   ' → logprob: -14.767438888549805
    8. 'acc' → logprob: -14.892438888549805
    9. ' ' → logprob: -15.142438888549805
    10. 'self' → logprob: -15.267438888549805

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.946405094116926e-05
    2. ',x' → logprob: -10.000079154968262
    3. ' ,' → logprob: -11.625079154968262
    4. ',y' → logprob: -11.625079154968262
    5. ',b' → logprob: -12.375079154968262
    6. ',
' → logprob: -12.625079154968262
    7. ',l' → logprob: -13.125079154968262
    8. '_,' → logprob: -13.250079154968262
    9. 's' → logprob: -14.125079154968262
    10. ',m' → logprob: -14.125079154968262

Token 791: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019295861711725593
    2. ' y' → logprob: -6.251929759979248
    3. '   ' → logprob: -15.37692928314209
    4. 'math' → logprob: -15.62692928314209
    5. '	y' → logprob: -15.75192928314209
    6. 'lambda' → logprob: -15.75192928314209
    7. '  ' → logprob: -16.001930236816406
    8. ' ' → logprob: -16.626930236816406
    9. '    ' → logprob: -16.876930236816406
    10. ',y' → logprob: -17.751930236816406

Token 792: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011827271664515138
    2. ' :' → logprob: -6.751182556152344
    3. ':x' → logprob: -11.876182556152344
    4. ',' → logprob: -12.376182556152344
    5. '=' → logprob: -14.376182556152344
    6. 'x' → logprob: -15.501182556152344
    7. ':
' → logprob: -15.876182556152344
    8. '   ' → logprob: -16.501182556152344
    9. ',x' → logprob: -17.001182556152344
    10. ':int' → logprob: -17.126182556152344

Token 793: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1511048525571823
    2. 'self' → logprob: -2.0261049270629883
    3. '(x' → logprob: -4.901104927062988
    4. ' x' → logprob: -7.776104927062988
    5. '(self' → logprob: -7.901104927062988
    6. ' self' → logprob: -8.901104927062988
    7. ' (' → logprob: -10.901104927062988
    8. '(' → logprob: -12.276104927062988
    9. 'math' → logprob: -12.276104927062988
    10. '((' → logprob: -15.026104927062988

Token 794: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07286598533391953
    2. '*' → logprob: -3.4478659629821777
    3. '*y' → logprob: -3.6978659629821777
    4. '*l' → logprob: -4.947865962982178
    5. 'y' → logprob: -5.322865962982178
    6. 'l' → logprob: -7.072865962982178
    7. ' y' → logprob: -8.447866439819336
    8. '*x' → logprob: -8.697866439819336
    9. ' l' → logprob: -9.447866439819336
    10. ' ' → logprob: -9.572866439819336

Token 795: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000297685619443655
    2. ' y' → logprob: -8.125297546386719
    3. '(y' → logprob: -13.875297546386719
    4. '//' → logprob: -14.250297546386719
    5. ' (' → logprob: -17.87529754638672
    6. '```' → logprob: -18.00029754638672
    7. 'math' → logprob: -18.25029754638672
    8. '	y' → logprob: -18.37529754638672
    9. '   ' → logprob: -18.62529754638672
    10. '#' → logprob: -18.62529754638672

Token 796: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.04858941584825516
    2. '//' → logprob: -3.0485894680023193
    3. ' ' → logprob: -14.048589706420898
    4. 'import' → logprob: -14.923589706420898
    5. ' ' → logprob: -15.048589706420898
    6. ',' → logprob: -15.798589706420898
    7. '   ' → logprob: -16.2985897064209
    8. ' /' → logprob: -16.6735897064209
    9. 'if' → logprob: -16.9235897064209
    10. ' if' → logprob: -17.4235897064209

Token 797: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00020568605395965278
    2. ' math' → logprob: -8.500205993652344
    3. 'sys' → logprob: -13.125205993652344
    4. '(math' → logprob: -15.875205993652344
    5. 'Math' → logprob: -18.750205993652344
    6. 'import' → logprob: -19.125205993652344
    7. 'm' → logprob: -19.625205993652344
    8. '.math' → logprob: -19.875205993652344
    9. 'g' → logprob: -20.375205993652344
    10. '   ' → logprob: -20.375205993652344

Token 798: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -2.546478935983032e-05
    2. 'g' → logprob: -10.625025749206543
    3. ' gcd' → logprob: -15.125025749206543
    4. '.' → logprob: -15.250025749206543
    5. '[g' → logprob: -16.125024795532227
    6. '#g' → logprob: -16.250024795532227
    7. ',g' → logprob: -16.875024795532227
    8. 'import' → logprob: -17.000024795532227
    9. '=g' → logprob: -17.125024795532227
    10. '.math' → logprob: -17.250024795532227

Token 799: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -3.130576806142926e-05
    2. 'cf' → logprob: -11.750031471252441
    3. 'c' → logprob: -12.250031471252441
    4. 'math' → logprob: -12.500031471252441
    5. 'cdf' → logprob: -12.875031471252441
    6. 'cmath' → logprob: -13.250031471252441
    7. 'CD' → logprob: -13.375031471252441
    8. 'cdn' → logprob: -13.625031471252441
    9. 'cb' → logprob: -13.875031471252441
    10. '   ' → logprob: -14.125031471252441

Token 800: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004185482859611511
    2. 'x' → logprob: -5.504185676574707
    3. '(' → logprob: -10.004185676574707
    4. ' x' → logprob: -10.379185676574707
    5. ' (' → logprob: -11.004185676574707
    6. ',' → logprob: -12.379185676574707
    7. ')' → logprob: -12.754185676574707
    8. ',x' → logprob: -12.754185676574707
    9. '[x' → logprob: -13.504185676574707
    10. '   ' → logprob: -14.629185676574707

Token 801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017102958634495735
    2. ',y' → logprob: -4.39210319519043
    3. 'y' → logprob: -6.26710319519043
    4. 'x' → logprob: -6.51710319519043
    5. ' ,' → logprob: -7.76710319519043
    6. ' y' → logprob: -7.89210319519043
    7. ',x' → logprob: -8.76710319519043
    8. '(x' → logprob: -9.01710319519043
    9. ' x' → logprob: -10.01710319519043
    10. ')' → logprob: -10.76710319519043

Token 802: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.452426608419046e-05
    2. ' x' → logprob: -10.37503433227539
    3. 'y' → logprob: -12.87503433227539
    4. '(x' → logprob: -14.75003433227539
    5. '[x' → logprob: -15.62503433227539
    6. '{x' → logprob: -17.75003433227539
    7. '   ' → logprob: -18.87503433227539
    8. '	x' → logprob: -19.00003433227539
    9. ')x' → logprob: -19.00003433227539
    10. ' ' → logprob: -19.25003433227539

Token 803: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07649754732847214
    2. '),' → logprob: -2.7014975547790527
    3. ' ,' → logprob: -5.826497554779053
    4. ',x' → logprob: -5.826497554779053
    5. ')' → logprob: -8.201497077941895
    6. ',y' → logprob: -8.826497077941895
    7. ' ),' → logprob: -8.951497077941895
    8. '(x' → logprob: -9.951497077941895
    9. ',
' → logprob: -11.576497077941895
    10. 'x' → logprob: -11.826497077941895

Token 804: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.3133605122566223
    2. ' numbers' → logprob: -1.3133604526519775
    3. '(numbers' → logprob: -9.938360214233398
    4. '       ' → logprob: -10.313360214233398
    5. '        ' → logprob: -11.813360214233398
    6. '           ' → logprob: -12.938360214233398
    7. '_numbers' → logprob: -13.438360214233398
    8. '    ' → logprob: -13.563360214233398
    9. '            ' → logprob: -13.938360214233398
    10. '   ' → logprob: -13.938360214233398

Token 805: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20180340111255646
    2. ',' → logprob: -1.70180344581604
    3. ' )' → logprob: -8.326803207397461
    4. ' ,' → logprob: -9.576803207397461
    5. '   ' → logprob: -10.076803207397461
    6. '       ' → logprob: -11.701803207397461
    7. ')
' → logprob: -11.826803207397461
    8. ')}' → logprob: -12.701803207397461
    9. '))' → logprob: -12.951803207397461
    10. '),' → logprob: -13.326803207397461

Token 806: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.375021934509277
    4. '  ' → logprob: -17.625022888183594
    5. '       ' → logprob: -18.000022888183594
    6. '    ' → logprob: -18.500022888183594
    7. ')' → logprob: -19.125022888183594
    8. '     ' → logprob: -19.375022888183594
    9. '           ' → logprob: -19.875022888183594
    10. '۱' → logprob: -20.187522888183594

Token 807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '       ' → logprob: -19.125001907348633
    5. '  ' → logprob: -19.125001907348633
    6. '           ' → logprob: -19.375001907348633
    7. 'a' → logprob: -19.562501907348633
    8. ')' → logprob: -19.812501907348633
    9. '`' → logprob: -19.875001907348633
    10. '    ' → logprob: -20.125001907348633

Token 808: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.32392441527918e-05
    2. '<|end|>' → logprob: -10.500053405761719
    3. '   ' → logprob: -10.875053405761719
    4. ')
' → logprob: -12.500053405761719
    5. '       ' → logprob: -14.000053405761719
    6. ')return' → logprob: -14.125053405761719
    7. ' )' → logprob: -14.750053405761719
    8. ')

' → logprob: -15.125053405761719
    9. '<|end|>' → logprob: -15.125053405761719
    10. ' ' → logprob: -16.62505340576172

Token 809: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3232066333293915
    2. '   ' → logprob: -1.9482066631317139
    3. 'def' → logprob: -2.073206663131714
    4. '<|end|>' → logprob: -5.823206424713135
    5. '    
' → logprob: -5.948206424713135
    6. ' def' → logprob: -6.948206424713135
    7. '<|end|>' → logprob: -7.698206424713135
    8. '

' → logprob: -8.198206901550293
    9. '```' → logprob: -8.198206901550293
    10. '  
' → logprob: -8.948206901550293

Token 810: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007555469055660069
    2. '   ' → logprob: -7.250755310058594
    3. ' def' → logprob: -10.000755310058594
    4. '
' → logprob: -15.375755310058594
    5. '	def' → logprob: -16.625755310058594
    6. '    
' → logprob: -19.625755310058594
    7. '```' → logprob: -19.750755310058594
    8. ' ' → logprob: -20.000755310058594
    9. '  ' → logprob: -20.000755310058594
    10. '

' → logprob: -22.375755310058594

Token 811: ' expand' (ID: 10791)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.0007247024914249778
    2. ' merge' → logprob: -7.375724792480469
    3. 'merged' → logprob: -10.250724792480469
    4. 'combine' → logprob: -10.250724792480469
    5. 'get' → logprob: -11.375724792480469
    6. 'generate' → logprob: -11.500724792480469
    7. '_merge' → logprob: -13.000724792480469
    8. 'compute' → logprob: -13.750724792480469
    9. ' merged' → logprob: -14.750724792480469
    10. 'mer' → logprob: -14.875724792480469

Token 812: '_pattern' (ID: 50002)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07687900960445404
    2. '_pattern' → logprob: -2.8268790245056152
    3. '_patterns' → logprob: -4.701879024505615
    4. '(' → logprob: -5.576879024505615
    5. 'self' → logprob: -7.451879024505615
    6. '_symbol' → logprob: -8.201878547668457
    7. '(
' → logprob: -8.701878547668457
    8. '_sequence' → logprob: -8.701878547668457
    9. '_symbols' → logprob: -8.701878547668457
    10. '_' → logprob: -8.951878547668457

Token 813: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.75001049041748
    3. '(
' → logprob: -13.75001049041748
    4. 'self' → logprob: -14.50001049041748
    5. ' (' → logprob: -14.75001049041748
    6. '   ' → logprob: -15.62501049041748
    7. '(s' → logprob: -17.750009536743164
    8. '       ' → logprob: -18.125009536743164
    9. '(cls' → logprob: -19.375009536743164
    10. '=self' → logprob: -19.375009536743164

Token 814: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008324974915012717
    2. '(' → logprob: -7.500832557678223
    3. 'self' → logprob: -9.250832557678223
    4. ',' → logprob: -9.875832557678223
    5. ' (' → logprob: -10.250832557678223
    6. '_length' → logprob: -10.625832557678223
    7. ')' → logprob: -10.875832557678223
    8. 'def' → logprob: -11.500832557678223
    9. '(
' → logprob: -11.500832557678223
    10. '_size' → logprob: -12.250832557678223

Token 815: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.08947785943746567
    2. 'self' → logprob: -2.589477777481079
    3. ' pattern' → logprob: -4.714478015899658
    4. ' self' → logprob: -6.589478015899658
    5. '   ' → logprob: -9.4644775390625
    6. '       ' → logprob: -9.8394775390625
    7. 'pat' → logprob: -9.9644775390625
    8. 'old' → logprob: -12.4644775390625
    9. ')' → logprob: -12.5894775390625
    10. ' ' → logprob: -13.7144775390625

Token 816: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.37166205048561096
    2. ',' → logprob: -1.2466620206832886
    3. ':' → logprob: -4.246662139892578
    4. 'self' → logprob: -5.496662139892578
    5. '       ' → logprob: -6.246662139892578
    6. ')' → logprob: -6.871662139892578
    7. '   ' → logprob: -7.496662139892578
    8. '):
' → logprob: -8.121662139892578
    9. ' self' → logprob: -8.246662139892578
    10. '):' → logprob: -8.496662139892578

Token 817: ' Rhythm' (ID: 148652)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14082661271095276
    2. 'Rh' → logprob: -2.39082670211792
    3. ' self' → logprob: -3.64082670211792
    4. ' Rhythm' → logprob: -4.76582670211792
    5. 'Pattern' → logprob: -6.51582670211792
    6. 'pattern' → logprob: -6.51582670211792
    7. '   ' → logprob: -7.76582670211792
    8. '       ' → logprob: -8.140826225280762
    9. ')' → logprob: -8.140826225280762
    10. ' ' → logprob: -8.390826225280762

Token 818: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -0.8850665092468262
    2. '       ' → logprob: -1.1350665092468262
    3. ')' → logprob: -2.135066509246826
    4. '   ' → logprob: -2.385066509246826
    5. ',' → logprob: -4.885066509246826
    6. '):
' → logprob: -5.135066509246826
    7. '.length' → logprob: -5.385066509246826
    8. '):' → logprob: -5.385066509246826
    9. '.' → logprob: -5.635066509246826
    10. '_pattern' → logprob: -5.885066509246826

Token 819: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.037835580878891e-05
    2. 'self' → logprob: -10.25005054473877
    3. ' ,' → logprob: -11.37505054473877
    4. '       ' → logprob: -13.50005054473877
    5. ')' → logprob: -13.62505054473877
    6. ',self' → logprob: -14.87505054473877
    7. ',
' → logprob: -15.37505054473877
    8. '   ' → logprob: -15.75005054473877
    9. ' self' → logprob: -16.375049591064453
    10. '(self' → logprob: -16.625049591064453

Token 820: ' length' (ID: 5517)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.39031216502189636
    2. 'length' → logprob: -1.3903121948242188
    3. ' target' → logprob: -3.1403121948242188
    4. 'desired' → logprob: -4.390312194824219
    5. 'new' → logprob: -4.515312194824219
    6. ' length' → logprob: -5.140312194824219
    7. ' desired' → logprob: -6.890312194824219
    8. ' new' → logprob: -8.015312194824219
    9. 'full' → logprob: -9.015312194824219
    10. 'times' → logprob: -10.015312194824219

Token 821: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.848420551046729e-05
    2. '):' → logprob: -10.7500581741333
    3. ')' → logprob: -10.8750581741333
    4. ':int' → logprob: -11.0000581741333
    5. '   ' → logprob: -14.1250581741333
    6. 'int' → logprob: -14.8750581741333
    7. '_:' → logprob: -16.500059127807617
    8. '       ' → logprob: -17.250059127807617
    9. '):
' → logprob: -17.500059127807617
    10. '=' → logprob: -17.625059127807617

Token 822: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.117345684382599e-05
    2. ' int' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.125020980834961
    4. ')' → logprob: -16.75002098083496
    5. '       ' → logprob: -17.37502098083496
    6. '	int' → logprob: -18.12502098083496
    7. '[int' → logprob: -18.12502098083496
    8. ' ' → logprob: -18.25002098083496
    9. ':int' → logprob: -18.37502098083496
    10. '  ' → logprob: -18.37502098083496

Token 823: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. '   ' → logprob: -11.625017166137695
    3. '):' → logprob: -12.375017166137695
    4. ' )' → logprob: -13.125017166137695
    5. ':' → logprob: -14.000017166137695
    6. '       ' → logprob: -15.000017166137695
    7. ')->' → logprob: -15.375017166137695
    8. '):
' → logprob: -15.375017166137695
    9. ',)' → logprob: -16.500017166137695
    10. '')' → logprob: -16.750017166137695

Token 824: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04837624356150627
    2. '->' → logprob: -3.2983763217926025
    3. ' ->' → logprob: -5.048376083374023
    4. ':
' → logprob: -5.923376083374023
    5. ')' → logprob: -6.923376083374023
    6. '   ' → logprob: -9.173376083374023
    7. '       ' → logprob: -9.673376083374023
    8. ')->' → logprob: -11.423376083374023
    9. ':
' → logprob: -11.423376083374023
    10. '>' → logprob: -12.423376083374023

Token 825: ' List' (ID: 2655)
  Prédit: 'Rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rh' → logprob: -0.10766942799091339
    2. 'List' → logprob: -2.3576693534851074
    3. ''' → logprob: -5.107669353485107
    4. 'Pattern' → logprob: -7.857669353485107
    5. 'None' → logprob: -8.607669830322266
    6. '   ' → logprob: -8.982669830322266
    7. 'Pat' → logprob: -8.982669830322266
    8. 'Hex' → logprob: -9.357669830322266
    9. 'list' → logprob: -9.357669830322266
    10. ''s' → logprob: -9.607669830322266

Token 826: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25207623839378357
    2. '[int' → logprob: -1.502076268196106
    3. 'int' → logprob: -9.002076148986816
    4. '[Int' → logprob: -11.377076148986816
    5. '[
' → logprob: -11.752076148986816
    6. '(int' → logprob: -13.877076148986816
    7. '   ' → logprob: -14.627076148986816
    8. 'Hex' → logprob: -14.752076148986816
    9. '[(' → logprob: -14.877076148986816
    10. '[str' → logprob: -15.002076148986816

Token 827: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5663912296295166
    2. '):
' → logprob: -1.3163912296295166
    3. ':' → logprob: -2.5663912296295166
    4. '):' → logprob: -3.0663912296295166
    5. ')' → logprob: -3.9413912296295166
    6. '   ' → logprob: -4.4413909912109375
    7. ':
' → logprob: -5.0663909912109375
    8. '       ' → logprob: -6.5663909912109375
    9. '):
' → logprob: -6.8163909912109375
    10. ']' → logprob: -8.566390991210938

Token 828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010733000235632062
    2. '[' → logprob: -7.126073360443115
    3. '   ' → logprob: -9.126072883605957
    4. '[]' → logprob: -10.376072883605957
    5. ' [' → logprob: -10.626072883605957
    6. 'tokens' → logprob: -11.626072883605957
    7. '[
' → logprob: -11.751072883605957
    8. '      ' → logprob: -11.876072883605957
    9. ' tokens' → logprob: -11.876072883605957
    10. '        
' → logprob: -12.001072883605957

Token 829: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12691015005111694
    2. 'result' → logprob: -2.2519102096557617
    3. 'expanded' → logprob: -5.876910209655762
    4. 'repeat' → logprob: -6.251910209655762
    5. 'times' → logprob: -6.376910209655762
    6. 'pattern' → logprob: -6.376910209655762
    7. 'tokens' → logprob: -7.001910209655762
    8. 'return' → logprob: -7.001910209655762
    9. 'values' → logprob: -7.126910209655762
    10. 're' → logprob: -7.126910209655762

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0290526133030653
    2. 'result' → logprob: -3.654052495956421
    3. 'ints' → logprob: -7.529052734375
    4. 'expanded' → logprob: -7.529052734375
    5. 'int' → logprob: -7.779052734375
    6. ' result' → logprob: -8.529052734375
    7. 'pattern' → logprob: -8.654052734375
    8. 'tokens' → logprob: -8.779052734375
    9. '[' → logprob: -9.154052734375
    10. '   ' → logprob: -9.404052734375

Token 831: ' Ét' (ID: 54156)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2610090374946594
    2. 'result' → logprob: -1.8860089778900146
    3. 'expanded' → logprob: -3.0110089778900146
    4. 'return' → logprob: -4.261009216308594
    5. 'symbols' → logprob: -5.886009216308594
    6. 'tokens' → logprob: -6.636009216308594
    7. 'times' → logprob: -6.761009216308594
    8. 'values' → logprob: -6.761009216308594
    9. ' expanded' → logprob: -7.011009216308594
    10. 'repeat' → logprob: -7.011009216308594

Token 832: 'end' (ID: 419)
  Prédit: 'endre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.27507269382476807
    2. 'end' → logprob: -2.4000725746154785
    3. 'ends' → logprob: -2.5250725746154785
    4. '       ' → logprob: -3.4000725746154785
    5. 'endue' → logprob: -3.4000725746154785
    6. 'ape' → logprob: -7.0250725746154785
    7. '   ' → logprob: -7.7750725746154785
    8. 'ab' → logprob: -7.7750725746154785
    9. 'endu' → logprob: -7.9000725746154785
    10. 'def' → logprob: -8.650073051452637

Token 833: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19136397540569305
    2. 'result' → logprob: -3.441364049911499
    3. '[' → logprob: -3.566364049911499
    4. 'int' → logprob: -3.691364049911499
    5. 'ints' → logprob: -4.19136381149292
    6. 'sym' → logprob: -4.56636381149292
    7. ' [' → logprob: -4.81636381149292
    8. 'symbols' → logprob: -4.94136381149292
    9. 'pattern' → logprob: -5.06636381149292
    10. 'expanded' → logprob: -5.56636381149292

Token 834: ' ré' (ID: 3146)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -1.3282086849212646
    2. ' rép' → logprob: -1.3282086849212646
    3. 'rep' → logprob: -1.4532086849212646
    4. 'repeat' → logprob: -2.7032086849212646
    5. 'repr' → logprob: -2.9532086849212646
    6. 'ré' → logprob: -3.3282086849212646
    7. ' pattern' → logprob: -4.453208923339844
    8. ' multipl' → logprob: -4.828208923339844
    9. ' repeat' → logprob: -4.828208923339844
    10. 'expand' → logprob: -4.953208923339844

Token 835: 'é' (ID: 377)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23443803191184998
    2. 'pé' → logprob: -1.6094380617141724
    3. 'pe' → logprob: -6.359437942504883
    4. 'part' → logprob: -6.484437942504883
    5. 'plique' → logprob: -6.484437942504883
    6. 'é' → logprob: -7.234437942504883
    7. 'ét' → logprob: -7.484437942504883
    8. 'interp' → logprob: -7.734437942504883
    9. 'pet' → logprob: -7.984437942504883
    10. 'ép' → logprob: -8.109437942504883

Token 836: 'chant' (ID: 15311)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3074905276298523
    2. 'part' → logprob: -2.557490587234497
    3. 't' → logprob: -3.182490587234497
    4. 'pe' → logprob: -3.557490587234497
    5. 'pé' → logprob: -4.432490348815918
    6. 'c' → logprob: -4.807490348815918
    7. '```' → logprob: -4.932490348815918
    8. '   ' → logprob: -4.932490348815918
    9. '
' → logprob: -5.182490348815918
    10. 'pit' → logprob: -5.307490348815918

Token 837: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -1.3546652793884277
    2. 'tion' → logprob: -1.4796652793884277
    3. 'illon' → logprob: -1.4796652793884277
    4. 'e' → logprob: -1.6046652793884277
    5. 'illons' → logprob: -4.104665279388428
    6. 't' → logprob: -4.729665279388428
    7. '
' → logprob: -5.229665279388428
    8. 'rone' → logprob: -5.354665279388428
    9. 'ron' → logprob: -5.479665279388428
    10. 'ch' → logprob: -5.729665279388428

Token 838: 'onne' (ID: 25335)
  Prédit: 'onne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.17261546850204468
    2. 'onn' → logprob: -2.1726155281066895
    3. 'on' → logprob: -4.5476155281066895
    4. 'onnes' → logprob: -4.5476155281066895
    5. 'onné' → logprob: -5.5476155281066895
    6. 'e' → logprob: -6.0476155281066895
    7. 'onneur' → logprob: -6.2351155281066895
    8. 'onna' → logprob: -6.4851155281066895
    9. 'onnée' → logprob: -6.6726155281066895
    10. 'onner' → logprob: -7.4851155281066895

Token 839: ' le' (ID: 505)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.03155598044395447
    2. ' pattern' → logprob: -4.031556129455566
    3. '(pattern' → logprob: -4.906556129455566
    4. '       ' → logprob: -5.281556129455566
    5. '[' → logprob: -8.156556129455566
    6. 'pat' → logprob: -8.281556129455566
    7. 'sym' → logprob: -8.656556129455566
    8. 'the' → logprob: -10.906556129455566
    9. '(
' → logprob: -11.156556129455566
    10. 'symbol' → logprob: -11.406556129455566

Token 840: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.053773198276758194
    2. '[' → logprob: -3.0537731647491455
    3. '[int' → logprob: -6.053773403167725
    4. ' [' → logprob: -7.303773403167725
    5. ' pattern' → logprob: -7.428773403167725
    6. '[
' → logprob: -7.553773403167725
    7. 'int' → logprob: -8.053772926330566
    8. 'symbol' → logprob: -8.553772926330566
    9. 'sym' → logprob: -8.678772926330566
    10. '       ' → logprob: -9.803772926330566

Token 841: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4274147748947144
    2. ' to' → logprob: -1.8024147748947144
    3. 'symbols' → logprob: -1.8024147748947144
    4. '_symbols' → logprob: -2.677414894104004
    5. ' sym' → logprob: -2.802414894104004
    6. ' symbols' → logprob: -2.802414894104004
    7. 'sym' → logprob: -3.052414894104004
    8. ' à' → logprob: -3.427414894104004
    9. ' pour' → logprob: -3.552414894104004
    10. ',' → logprob: -3.802414894104004

Token 842: ' une' (ID: 2463)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.017819294705986977
    2. '[length' → logprob: -4.142819404602051
    3. ' length' → logprob: -6.517819404602051
    4. '[' → logprob: -8.39281940460205
    5. '(length' → logprob: -10.14281940460205
    6. ' [' → logprob: -11.39281940460205
    7. 'l' → logprob: -11.76781940460205
    8. 'une' → logprob: -12.76781940460205
    9. 'la' → logprob: -12.89281940460205
    10. '[size' → logprob: -13.26781940460205

Token 843: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.011518256738781929
    2. 'multip' → logprob: -5.511518478393555
    3. 'given' → logprob: -5.761518478393555
    4. 'fixed' → logprob: -7.011518478393555
    5. ' length' → logprob: -7.011518478393555
    6. 'list' → logprob: -7.636518478393555
    7. 'multiple' → logprob: -7.761518478393555
    8. '[length' → logprob: -8.136518478393555
    9. 'size' → logprob: -8.386518478393555
    10. 'specified' → logprob: -8.886518478393555

Token 844: ' donnée' (ID: 130126)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.40473055839538574
    2. ' length' → logprob: -1.1547305583953857
    3. ' donnée' → logprob: -5.154730796813965
    4. '(length' → logprob: -5.404730796813965
    5. '   ' → logprob: -5.404730796813965
    6. '       ' → logprob: -7.029730796813965
    7. ' donné' → logprob: -7.529730796813965
    8. ' ég' → logprob: -8.404730796813965
    9. 'exact' → logprob: -8.529730796813965
    10. '[length' → logprob: -8.654730796813965

Token 845: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7626522183418274
    2. ' en' → logprob: -1.3876521587371826
    3. ',' → logprob: -1.5126521587371826
    4. ' pour' → logprob: -3.7626521587371826
    5. '
' → logprob: -4.512652397155762
    6. '.' → logprob: -4.887652397155762
    7. ':' → logprob: -5.512652397155762
    8. ' (' → logprob: -6.012652397155762
    9. '.
' → logprob: -6.137652397155762
    10. ':
' → logprob: -6.387652397155762

Token 846: 'plus' (ID: 11601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31058087944984436
    2. ' )' → logprob: -1.685580849647522
    3. 'length' → logprob: -3.6855809688568115
    4. ' length' → logprob: -4.060580730438232
    5. '       ' → logprob: -4.185580730438232
    6. '):' → logprob: -5.685580730438232
    7. '):
' → logprob: -5.685580730438232
    8. '),' → logprob: -5.685580730438232
    9. ')
' → logprob: -6.060580730438232
    10. ' en' → logprob: -6.185580730438232

Token 847: ' grande' (ID: 10094)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2805345356464386
    2. ')' → logprob: -1.9055345058441162
    3. ' long' → logprob: -3.030534505844116
    4. 'long' → logprob: -3.655534505844116
    5. ' =' → logprob: -5.530534744262695
    6. 'ieurs' → logprob: -6.155534744262695
    7. '1' → logprob: -6.405534744262695
    8. ' longue' → logprob: -6.530534744262695
    9. '```' → logprob: -6.780534744262695
    10. ' than' → logprob: -7.030534744262695

Token 848: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09206835925579071
    2. '       ' → logprob: -3.0920684337615967
    3. '):' → logprob: -4.217068195343018
    4. ').' → logprob: -4.842068195343018
    5. '),' → logprob: -4.967068195343018
    6. ',' → logprob: -5.342068195343018
    7. '):
' → logprob: -6.092068195343018
    8. ' )' → logprob: -6.217068195343018
    9. '   ' → logprob: -6.342068195343018
    10. ')
' → logprob: -7.217068195343018

Token 849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034297199454158545
    2. '   ' → logprob: -8.875343322753906
    3. '        
' → logprob: -9.875343322753906
    4. '
' → logprob: -10.125343322753906
    5. '```' → logprob: -11.375343322753906
    6. '[' → logprob: -11.625343322753906
    7. '"""' → logprob: -11.875343322753906
    8. 'result' → logprob: -12.000343322753906
    9. ')' → logprob: -12.000343322753906
    10. ' tokens' → logprob: -12.125343322753906

Token 850: ' Le' (ID: 2018)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01808508299291134
    2. 'result' → logprob: -4.51808500289917
    3. '
' → logprob: -5.89308500289917
    4. 'step' → logprob: -7.26808500289917
    5. ' result' → logprob: -7.64308500289917
    6. 'values' → logprob: -8.018085479736328
    7. '"""' → logprob: -8.143085479736328
    8. 'expanded' → logprob: -8.143085479736328
    9. 'tokens' → logprob: -8.518085479736328
    10. 'symbols' → logprob: -8.643085479736328

Token 851: ' pattern' (ID: 8302)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3307468593120575
    2. '       ' → logprob: -3.08074688911438
    3. 'base' → logprob: -3.20574688911438
    4. 'pattern' → logprob: -3.58074688911438
    5. 'symbol' → logprob: -3.83074688911438
    6. 'symbols' → logprob: -3.95574688911438
    7. 'source' → logprob: -4.080746650695801
    8. 'step' → logprob: -4.080746650695801
    9. 'current' → logprob: -4.330746650695801
    10. 'res' → logprob: -4.580746650695801

Token 852: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.418221116065979
    2. '_symbols' → logprob: -1.418221116065979
    3. 'symbols' → logprob: -1.543221116065979
    4. '_length' → logprob: -2.2932209968566895
    5. 'est' → logprob: -2.6682209968566895
    6. '_len' → logprob: -3.7932209968566895
    7. ' =' → logprob: -4.0432209968566895
    8. 'length' → logprob: -4.2932209968566895
    9. '=' → logprob: -4.2932209968566895
    10. 'len' → logprob: -4.4182209968566895

Token 853: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.37210947275161743
    2. '       ' → logprob: -2.1221094131469727
    3. ' est' → logprob: -2.7471094131469727
    4. 's' → logprob: -3.4971094131469727
    5. 'is' → logprob: -3.6221094131469727
    6. ' is' → logprob: -4.622109413146973
    7. 'symbols' → logprob: -4.622109413146973
    8. 'n' → logprob: -5.372109413146973
    9. '_symbols' → logprob: -5.372109413146973
    10. '_length' → logprob: -5.497109413146973

Token 854: ' suppos' (ID: 167611)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.6811856627464294
    2. '[' → logprob: -1.4311857223510742
    3. '       ' → logprob: -2.431185722351074
    4. 'expanded' → logprob: -3.556185722351074
    5. ' [' → logprob: -3.681185722351074
    6. 'len' → logprob: -3.806185722351074
    7. ' pattern' → logprob: -4.056185722351074
    8. 'int' → logprob: -4.181185722351074
    9. ' expanded' → logprob: -5.056185722351074
    10. '[]' → logprob: -5.556185722351074

Token 855: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00894402340054512
    2. 'ée' → logprob: -4.883944034576416
    3. 'onné' → logprob: -8.633943557739258
    4. 'ué' → logprob: -8.883943557739258
    5. 'ément' → logprob: -9.008943557739258
    6. '   ' → logprob: -9.008943557739258
    7. 'és' → logprob: -9.008943557739258
    8. 'ées' → logprob: -9.383943557739258
    9. 'éré' → logprob: -9.383943557739258
    10. 'u' → logprob: -9.508943557739258

Token 856: ' être' (ID: 9104)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2794269323349
    2. 'être' → logprob: -1.6544269323349
    3. 'cycl' → logprob: -2.2794270515441895
    4. 'd' → logprob: -2.2794270515441895
    5. '   ' → logprob: -2.9044270515441895
    6. ' cycl' → logprob: -3.4044270515441895
    7. 'avoir' → logprob: -3.4044270515441895
    8. 'ré' → logprob: -3.7794270515441895
    9. ' être' → logprob: -3.7794270515441895
    10. 'rep' → logprob: -4.0294270515441895

Token 857: ' un' (ID: 537)
  Prédit: 'cycl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycl' → logprob: -0.4211079180240631
    2. 'ré' → logprob: -1.6711078882217407
    3. 'c' → logprob: -3.2961080074310303
    4. 'une' → logprob: -3.6711080074310303
    5. 'un' → logprob: -3.9211080074310303
    6. 'p' → logprob: -4.046107769012451
    7. 'loop' → logprob: -4.671107769012451
    8. 'repeat' → logprob: -4.921107769012451
    9. 're' → logprob: -5.171107769012451
    10. 'multip' → logprob: -5.421107769012451

Token 858: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -1.2225582599639893
    2. 'multiple' → logprob: -1.4725582599639893
    3. 'div' → logprob: -2.0975582599639893
    4. 'mot' → logprob: -2.3475582599639893
    5. 'pattern' → logprob: -2.7225582599639893
    6. 'p' → logprob: -3.3475582599639893
    7. 'repeat' → logprob: -3.4725582599639893
    8. 'fact' → logprob: -3.5975582599639893
    9. 'loop' → logprob: -3.8475582599639893
    10. 'ré' → logprob: -4.34755802154541

Token 859: ' répét' (ID: 156936)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25202053785324097
    2. '.' → logprob: -2.3770205974578857
    3. ',' → logprob: -2.5020205974578857
    4. '   ' → logprob: -4.502020359039307
    5. ':' → logprob: -5.002020359039307
    6. ' complet' → logprob: -5.252020359039307
    7. '...' → logprob: -5.752020359039307
    8. 'de' → logprob: -6.002020359039307
    9. ',
' → logprob: -6.002020359039307
    10. ' de' → logprob: -6.127020359039307

Token 860: 'itif' (ID: 94904)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.001775499782525003
    2. 'itif' → logprob: -6.50177526473999
    3. 'ée' → logprob: -8.626775741577148
    4. 'e' → logprob: -10.001775741577148
    5. 'ee' → logprob: -11.626775741577148
    6. 'able' → logprob: -12.001775741577148
    7. 'u' → logprob: -12.001775741577148
    8. 'ed' → logprob: -12.126775741577148
    9. '```' → logprob: -12.626775741577148
    10. 'ition' → logprob: -12.751775741577148

Token 861: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2664131820201874
    2. '.' → logprob: -1.8914132118225098
    3. ',' → logprob: -2.8914132118225098
    4. ')' → logprob: -5.01641321182251
    5. '   ' → logprob: -5.26641321182251
    6. ').' → logprob: -5.64141321182251
    7. '.
' → logprob: -6.14141321182251
    8. ',
' → logprob: -6.76641321182251
    9. '):
' → logprob: -6.76641321182251
    10. '),' → logprob: -7.01641321182251

Token 862: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.010712807066738605
    2. ' length' → logprob: -5.885712623596191
    3. ' la' → logprob: -6.385712623596191
    4. 'range' → logprob: -6.510712623596191
    5. 'la' → logprob: -6.510712623596191
    6. '       ' → logprob: -7.135712623596191
    7. 'self' → logprob: -7.385712623596191
    8. 'le' → logprob: -7.635712623596191
    9. 'pattern' → logprob: -7.760712623596191
    10. 'len' → logprob: -8.635712623596191

Token 863: ' mesure' (ID: 38098)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0266952496021986
    2. 'long' → logprob: -4.901695251464844
    3. 'pattern' → logprob: -5.026695251464844
    4. ' length' → logprob: -5.151695251464844
    5. 'original' → logprob: -6.026695251464844
    6. '```' → logprob: -7.026695251464844
    7. 'symbol' → logprob: -7.526695251464844
    8. 'quel' → logprob: -8.026695251464844
    9. 'base' → logprob: -8.151695251464844
    10. '   ' → logprob: -8.276695251464844

Token 864: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20952369272708893
    2. '.' → logprob: -1.7095236778259277
    3. ',' → logprob: -5.084523677825928
    4. ':' → logprob: -7.209523677825928
    5. '.
' → logprob: -8.459524154663086
    6. '   ' → logprob: -8.709524154663086
    7. ' (' → logprob: -9.084524154663086
    8. '```' → logprob: -9.209524154663086
    9. ').' → logprob: -9.459524154663086
    10. '...' → logprob: -9.584524154663086

Token 865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044616893865168095
    2. '
' → logprob: -7.004461765289307
    3. '```' → logprob: -7.004461765289307
    4. ')' → logprob: -7.129461765289307
    5. 'tokens' → logprob: -7.254461765289307
    6. '        
' → logprob: -8.379461288452148
    7. ',' → logprob: -8.629461288452148
    8. 'result' → logprob: -8.754461288452148
    9. 'return' → logprob: -9.129461288452148
    10. '   ' → logprob: -9.629461288452148

Token 866: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045040179044008255
    2. 'result' → logprob: -3.5450401306152344
    3. 'expanded' → logprob: -4.795040130615234
    4. 'symbols' → logprob: -6.045040130615234
    5. 'tokens' → logprob: -6.795040130615234
    6. '
' → logprob: -7.170040130615234
    7. 'symbol' → logprob: -7.545040130615234
    8. ')' → logprob: -8.420040130615234
    9. '        
' → logprob: -8.670040130615234
    10. 'values' → logprob: -8.920040130615234

Token 867: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003131728619337082
    2. 'result' → logprob: -6.253131866455078
    3. 'expanded' → logprob: -7.003131866455078
    4. 'values' → logprob: -9.503131866455078
    5. ' expanded' → logprob: -10.253131866455078
    6. 'res' → logprob: -10.753131866455078
    7. 'repeat' → logprob: -11.003131866455078
    8. 're' → logprob: -11.003131866455078
    9. 'extended' → logprob: -11.253131866455078
    10. 'pattern' → logprob: -11.628131866455078

Token 868: ' original' (ID: 4756)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1054365634918213
    2. 'result' → logprob: -1.1054365634918213
    3. 'expanded' → logprob: -1.2304365634918213
    4. 'base' → logprob: -4.605436325073242
    5. 'return' → logprob: -4.980436325073242
    6. 'step' → logprob: -5.105436325073242
    7. 're' → logprob: -5.230436325073242
    8. ' expanded' → logprob: -5.480436325073242
    9. 'repeat' → logprob: -5.605436325073242
    10. 'original' (adapté à ' original') → logprob: -6.605436325073242

Token 869: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.30777299404144287
    2. '_symbols' → logprob: -1.4327729940414429
    3. ' =' → logprob: -4.182773113250732
    4. 'symbols' → logprob: -5.432773113250732
    5. 'length' → logprob: -6.057773113250732
    6. '_len' → logprob: -6.682773113250732
    7. '       ' → logprob: -6.932773113250732
    8. '_values' → logprob: -7.807773113250732
    9. '   ' → logprob: -7.807773113250732
    10. '=' → logprob: -7.807773113250732

Token 870: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031430661678314
    2. '=' → logprob: -1.9103143215179443
    3. '       ' → logprob: -9.410314559936523
    4. '   ' → logprob: -12.410314559936523
    5. '=len' → logprob: -14.285314559936523
    6. 'th' → logprob: -14.535314559936523
    7. '        ' → logprob: -15.035314559936523
    8. ')' → logprob: -15.160314559936523
    9. '    ' → logprob: -15.285314559936523
    10. ':' → logprob: -15.535314559936523

Token 871: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.004580480512231588
    2. ' pattern' → logprob: -5.504580497741699
    3. 'len' → logprob: -7.629580497741699
    4. ' len' → logprob: -11.1295804977417
    5. 'pat' → logprob: -14.6295804977417
    6. '   ' → logprob: -14.6295804977417
    7. '(pattern' → logprob: -14.8795804977417
    8. '       ' → logprob: -16.379579544067383
    9. ' ' → logprob: -17.379579544067383
    10. '```' → logprob: -17.754579544067383

Token 872: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -7.107425062713446e-06
    2. '.' → logprob: -12.375006675720215
    3. 'length' → logprob: -13.500006675720215
    4. ':length' → logprob: -14.625006675720215
    5. '.symbol' → logprob: -15.500006675720215
    6. ' .' → logprob: -15.500006675720215
    7. '   ' → logprob: -16.00000762939453
    8. ').' → logprob: -16.25000762939453
    9. '(length' → logprob: -16.25000762939453
    10. '.LENGTH' → logprob: -16.75000762939453

Token 873: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20478767156600952
    2. '
' → logprob: -1.7047877311706543
    3. 'tokens' → logprob: -6.454787731170654
    4. '        
' → logprob: -7.454787731170654
    5. '<|end|>' → logprob: -8.454787254333496
    6. '=' → logprob: -8.579787254333496
    7. '
' → logprob: -8.954787254333496
    8. ',' → logprob: -9.204787254333496
    9. ')' → logprob: -9.579787254333496
    10. '<|end|>' → logprob: -9.704787254333496

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018313704058527946
    2. 'expanded' → logprob: -4.393313884735107
    3. ' expanded' → logprob: -6.143313884735107
    4. 'result' → logprob: -6.643313884735107
    5. '
' → logprob: -7.268313884735107
    6. 'if' → logprob: -7.768313884735107
    7. 'tokens' → logprob: -8.14331340789795
    8. ' if' → logprob: -8.14331340789795
    9. '        
' → logprob: -8.51831340789795
    10. 'extended' → logprob: -9.76831340789795

Token 875: ' factor' (ID: 12332)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -0.1639219969511032
    2. 'result' → logprob: -2.913922071456909
    3. '       ' → logprob: -3.163922071456909
    4. 'return' → logprob: -3.663922071456909
    5. 're' → logprob: -5.16392183303833
    6. 'repeat' → logprob: -5.41392183303833
    7. 'if' → logprob: -5.53892183303833
    8. 'mult' → logprob: -5.53892183303833
    9. 'factor' (adapté à ' factor') → logprob: -5.91392183303833
    10. 'base' → logprob: -6.16392183303833

Token 876: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38696083426475525
    2. '=' → logprob: -1.1369608640670776
    3. 's' → logprob: -10.136960983276367
    4. '   ' → logprob: -10.511960983276367
    5. '       ' → logprob: -12.011960983276367
    6. '    ' → logprob: -12.011960983276367
    7. '_' → logprob: -12.386960983276367
    8. '	' → logprob: -13.886960983276367
    9. '        ' → logprob: -13.886960983276367
    10. ',' → logprob: -14.011960983276367

Token 877: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.4740820825099945
    2. 'length' → logprob: -0.9740821123123169
    3. '(length' → logprob: -12.599081993103027
    4. '   ' → logprob: -14.099081993103027
    5. ' ' → logprob: -14.849081993103027
    6. '	length' → logprob: -15.474081993103027
    7. ' (' → logprob: -15.599081993103027
    8. ' lenght' → logprob: -16.224082946777344
    9. 'int' → logprob: -17.224082946777344
    10. '[length' → logprob: -17.724082946777344

Token 878: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.03366183862090111
    2. '//' → logprob: -3.4086618423461914
    3. ' ' → logprob: -11.908661842346191
    4. ' ' → logprob: -12.408661842346191
    5. '       ' → logprob: -12.783661842346191
    6. '           ' → logprob: -14.908661842346191
    7. '#' → logprob: -14.908661842346191
    8. '/' → logprob: -15.158661842346191
    9. '   ' → logprob: -15.158661842346191
    10. '=' → logprob: -15.158661842346191

Token 879: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -2.7610454708337784e-05
    2. ' original' → logprob: -10.500027656555176
    3. '(original' → logprob: -17.25002670288086
    4. '.original' → logprob: -21.00002670288086
    5. '   ' → logprob: -21.12502670288086
    6. 'origin' → logprob: -21.62502670288086
    7. '       ' → logprob: -21.62502670288086
    8. ' ' → logprob: -22.25002670288086
    9. 'orig' → logprob: -22.62502670288086
    10. '
' → logprob: -22.75002670288086

Token 880: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -9.088346359931165e-07
    2. 'len' → logprob: -14.000000953674316
    3. '_length' → logprob: -18.125
    4. 'Len' → logprob: -18.875
    5. 'length' → logprob: -19.125
    6. '_LEN' → logprob: -19.25
    7. '_val' → logprob: -19.875
    8. '_' → logprob: -20.5
    9. '_l' → logprob: -20.5
    10. '       ' → logprob: -20.75

Token 881: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07739360630512238
    2. '
' → logprob: -2.7023935317993164
    3. '        
' → logprob: -4.952393531799316
    4. '    
' → logprob: -9.452393531799316
    5. '
' → logprob: -10.577393531799316
    6. 'tokens' → logprob: -10.702393531799316
    7. '  
' → logprob: -10.827393531799316
    8. ' if' → logprob: -10.952393531799316
    9. ',' → logprob: -10.952393531799316
    10. '		
' → logprob: -11.202393531799316

Token 882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01373207475990057
    2. 'expanded' → logprob: -5.138731956481934
    3. 'return' → logprob: -5.513731956481934
    4. 'result' → logprob: -5.888731956481934
    5. 'extended' → logprob: -8.888731956481934
    6. 'res' → logprob: -8.888731956481934
    7. ' expanded' → logprob: -9.013731956481934
    8. 'repeat' → logprob: -9.013731956481934
    9. 'rep' → logprob: -9.513731956481934
    10. 're' → logprob: -9.638731956481934

Token 883: ' #' (ID: 1069)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -0.42353180050849915
    2. 'result' → logprob: -1.6735317707061768
    3. 'return' → logprob: -2.0485317707061768
    4. '       ' → logprob: -3.9235317707061768
    5. 'res' → logprob: -5.798532009124756
    6. ' expanded' → logprob: -5.923532009124756
    7. 'values' → logprob: -7.173532009124756
    8. 're' → logprob: -7.173532009124756
    9. 'extended' → logprob: -7.548532009124756
    10. ' return' → logprob: -7.923532009124756

Token 884: ' Pour' (ID: 13931)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -0.5326076745986938
    2. 'return' → logprob: -1.2826076745986938
    3. 'result' → logprob: -2.0326075553894043
    4. 'values' → logprob: -6.407607555389404
    5. 'res' → logprob: -7.532607555389404
    6. 'samples' → logprob: -7.782607555389404
    7. '       ' → logprob: -8.032608032226562
    8. 'assert' → logprob: -8.407608032226562
    9. 'notes' → logprob: -8.407608032226562
    10. ' expanded' → logprob: -8.532608032226562

Token 885: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.46588578820228577
    2. 'i' → logprob: -1.0908857583999634
    3. 'sym' → logprob: -4.590885639190674
    4. ' idx' → logprob: -4.715885639190674
    5. ' sym' → logprob: -5.340885639190674
    6. ' _' → logprob: -5.840885639190674
    7. ' factor' → logprob: -6.590885639190674
    8. '_' → logprob: -6.715885639190674
    9. ' rép' → logprob: -7.340885639190674
    10. 'idx' → logprob: -7.715885639190674

Token 886: ' vieux' (ID: 83754)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19398978352546692
    2. '_' → logprob: -2.4439897537231445
    3. '_repeat' → logprob: -4.3189897537231445
    4. '_i' → logprob: -4.5689897537231445
    5. '_part' → logprob: -5.1939897537231445
    6. 'sym' → logprob: -5.3189897537231445
    7. '_factor' → logprob: -5.3189897537231445
    8. '_index' → logprob: -5.6939897537231445
    9. '_re' → logprob: -5.6939897537231445
    10. '_f' → logprob: -5.6939897537231445

Token 887: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.28239694237709045
    2. 'pattern' → logprob: -2.0323970317840576
    3. 'symbols' → logprob: -3.1573970317840576
    4. ' patterns' → logprob: -3.2823970317840576
    5. 'symbol' → logprob: -4.9073967933654785
    6. ' symbols' → logprob: -5.4073967933654785
    7. ' pattern' → logprob: -5.6573967933654785
    8. '   ' → logprob: -5.7823967933654785
    9. 'for' → logprob: -6.2823967933654785
    10. 'sym' → logprob: -6.6573967933654785

Token 888: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.794545590877533
    2. ',' → logprob: -1.4195456504821777
    3. 'expanded' → logprob: -1.5445456504821777
    4. ' expanded' → logprob: -3.2945456504821777
    5. 'result' → logprob: -3.7945456504821777
    6. '
' → logprob: -4.294545650482178
    7. 'values' → logprob: -5.669545650482178
    8. ':' → logprob: -6.169545650482178
    9. 'extended' → logprob: -6.794545650482178
    10. ' ,' → logprob: -6.919545650482178

Token 889: ' on' (ID: 402)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -1.1442075967788696
    2. ' expanded' → logprob: -1.5192075967788696
    3. 'result' → logprob: -2.01920747756958
    4. '       ' → logprob: -2.39420747756958
    5. 'return' → logprob: -2.39420747756958
    6. ' return' → logprob: -2.64420747756958
    7. ' result' → logprob: -2.64420747756958
    8. 're' → logprob: -6.76920747756958
    9. 'res' → logprob: -7.01920747756958
    10. ' res' → logprob: -7.01920747756958

Token 890: ' peut' (ID: 9216)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0267701148986816
    2. 'return' → logprob: -1.4017701148986816
    3. 'ret' → logprob: -1.6517701148986816
    4. 'expand' → logprob: -2.6517701148986816
    5. 'expanded' → logprob: -4.151770114898682
    6. ' return' → logprob: -4.526770114898682
    7. 'ass' → logprob: -4.651770114898682
    8. ' assume' → logprob: -4.776770114898682
    9. 'do' → logprob: -5.151770114898682
    10. 'result' → logprob: -5.151770114898682

Token 891: ' rép' (ID: 64372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9764465093612671
    2. ' supp' → logprob: -1.601446509361267
    3. 'supp' → logprob: -1.851446509361267
    4. 'penser' → logprob: -2.9764466285705566
    5. 'faire' → logprob: -3.6014466285705566
    6. 'ass' → logprob: -3.8514466285705566
    7. 'return' → logprob: -4.226446628570557
    8. 'repr' → logprob: -4.226446628570557
    9. 'just' → logprob: -4.351446628570557
    10. 'ét' → logprob: -4.351446628570557

Token 892: 'éter' (ID: 73737)
  Prédit: 'eter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.5379832983016968
    2. 'e' → logprob: -1.5379832983016968
    3. 'éter' → logprob: -1.9129832983016968
    4. 'l' → logprob: -3.4129834175109863
    5. 'eteer' → logprob: -6.037983417510986
    6. 'é' → logprob: -6.162983417510986
    7. 'later' → logprob: -6.412983417510986
    8. '#' → logprob: -6.412983417510986
    9. 'et' → logprob: -6.662983417510986
    10. 'eat' → logprob: -6.787983417510986

Token 893: ' simplement' (ID: 45065)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.04654698446393013
    2. '[' → logprob: -3.7965469360351562
    3. '       ' → logprob: -4.171546936035156
    4. ' pattern' → logprob: -5.796546936035156
    5. '[int' → logprob: -6.796546936035156
    6. ' [' → logprob: -7.546546936035156
    7. '(pattern' → logprob: -7.671546936035156
    8. 'int' → logprob: -7.796546936035156
    9. 'sym' → logprob: -7.921546936035156
    10. 'original' → logprob: -8.421546936035156

Token 894: ' chaque' (ID: 21194)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.20846259593963623
    2. '       ' → logprob: -2.083462715148926
    3. 'sym' → logprob: -3.958462715148926
    4. '[' → logprob: -4.458462715148926
    5. ' pattern' → logprob: -4.583462715148926
    6. 'int' → logprob: -5.208462715148926
    7. 'original' → logprob: -5.583462715148926
    8. 'symbol' → logprob: -5.958462715148926
    9. 'for' → logprob: -6.083462715148926
    10. ' original' → logprob: -6.833462715148926

Token 895: ' symbole' (ID: 152507)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.2577410936355591
    2. 'symbol' → logprob: -1.882741093635559
    3. 'value' → logprob: -2.7577409744262695
    4. 'int' → logprob: -5.5077409744262695
    5. 'val' → logprob: -5.8827409744262695
    6. 'token' → logprob: -6.7577409744262695
    7. 'pattern' → logprob: -7.1327409744262695
    8. 'hex' → logprob: -8.00774097442627
    9. '   ' → logprob: -8.13274097442627
    10. ' sym' → logprob: -8.25774097442627

Token 896: ' factor' (ID: 12332)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22006173431873322
    2. 'value' → logprob: -2.345061779022217
    3. '[' → logprob: -3.470061779022217
    4. 'result' → logprob: -4.345061779022217
    5. 'for' → logprob: -4.720061779022217
    6. ' for' → logprob: -5.095061779022217
    7. 'int' → logprob: -5.095061779022217
    8. 'tokens' → logprob: -5.220061779022217
    9. '[value' → logprob: -5.345061779022217
    10. ',' → logprob: -5.595061779022217

Token 897: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.4854683578014374
    2. 'fois' → logprob: -1.2354683876037598
    3. ' times' → logprob: -2.8604683876037598
    4. 'times' → logprob: -4.11046838760376
    5. '       ' → logprob: -5.23546838760376
    6. '*' → logprob: -5.48546838760376
    7. '   ' → logprob: -6.23546838760376
    8. '```' → logprob: -6.48546838760376
    9. '_times' → logprob: -6.61046838760376
    10. ' *' → logprob: -7.11046838760376

Token 898: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006527907680720091
    2. ',' → logprob: -6.131527900695801
    3. 'result' → logprob: -6.131527900695801
    4. '
' → logprob: -7.631527900695801
    5. '[' → logprob: -8.0065279006958
    6. 'tokens' → logprob: -8.1315279006958
    7. '        
' → logprob: -8.7565279006958
    8. 'return' → logprob: -9.1315279006958
    9. ' for' → logprob: -9.6315279006958
    10. 'expanded' → logprob: -9.8815279006958

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06078615412116051
    2. 'result' → logprob: -3.560786247253418
    3. 'expanded' → logprob: -3.685786247253418
    4. ' expanded' → logprob: -5.685786247253418
    5. ',' → logprob: -7.310786247253418
    6. ' result' → logprob: -7.560786247253418
    7. 'tokens' → logprob: -8.060786247253418
    8. 'res' → logprob: -9.060786247253418
    9. 'return' → logprob: -9.685786247253418
    10. '        
' → logprob: -9.810786247253418

Token 900: ' expanded' (ID: 28044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8454774618148804
    2. 'expanded' (adapté à ' expanded') → logprob: -0.8454774618148804
    3. 'result' → logprob: -2.34547758102417
    4. 'return' → logprob: -3.22047758102417
    5. ' expanded' → logprob: -5.47047758102417
    6. 'extended' → logprob: -7.59547758102417
    7. ' result' → logprob: -8.095477104187012
    8. ' return' → logprob: -8.595477104187012
    9. 'res' → logprob: -8.845477104187012
    10. 'output' → logprob: -9.220477104187012

Token 901: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8379594087600708
    2. '_pattern' → logprob: -0.8379594087600708
    3. '=' → logprob: -2.5879592895507812
    4. '_list' → logprob: -3.0879592895507812
    5. '_symbols' → logprob: -5.212959289550781
    6. '_values' → logprob: -5.837959289550781
    7. '_sequence' → logprob: -6.212959289550781
    8. '   ' → logprob: -7.212959289550781
    9. '=[]' → logprob: -7.337959289550781
    10. 'pattern' → logprob: -7.587959289550781

Token 902: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7159162759780884
    2. '[]
' → logprob: -1.2159162759780884
    3. '[int' → logprob: -1.7159162759780884
    4. '[
' → logprob: -3.590916156768799
    5. '[]' → logprob: -5.340916156768799
    6. '[]

' → logprob: -6.840916156768799
    7. '[Int' → logprob: -7.840916156768799
    8. '   ' → logprob: -8.215916633605957
    9. '[str' → logprob: -8.965916633605957
    10. ' [' → logprob: -9.340916633605957

Token 903: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012055358849465847
    2. 'for' → logprob: -4.637055397033691
    3. ' for' → logprob: -6.137055397033691
    4. '	' → logprob: -9.137055397033691
    5. '	for' → logprob: -11.262055397033691
    6. '	   ' → logprob: -11.512055397033691
    7. '   ' → logprob: -12.887055397033691
    8. '           ' → logprob: -14.512055397033691
    9. '[' → logprob: -15.512055397033691
    10. ' ' → logprob: -15.512055397033691

Token 904: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0020248775836080313
    2. '       ' → logprob: -6.2520246505737305
    3. ' for' → logprob: -9.25202465057373
    4. '   ' → logprob: -15.75202465057373
    5. '	for' → logprob: -16.377025604248047
    6. '```' → logprob: -17.502025604248047
    7. ' ' → logprob: -18.752025604248047
    8. '           ' → logprob: -18.877025604248047
    9. '        
' → logprob: -19.377025604248047
    10. ' ' → logprob: -19.377025604248047

Token 905: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.003204450011253357
    2. ' sym' → logprob: -6.378204345703125
    3. 'symbol' → logprob: -6.753204345703125
    4. 'i' → logprob: -8.503204345703125
    5. '_sym' → logprob: -9.753204345703125
    6. '_' → logprob: -10.378204345703125
    7. '   ' → logprob: -11.503204345703125
    8. ' i' → logprob: -12.253204345703125
    9. 's' → logprob: -12.253204345703125
    10. '_i' → logprob: -12.878204345703125

Token 906: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -4.227250610711053e-05
    2. 'in' → logprob: -10.625041961669922
    3. ' ' → logprob: -11.625041961669922
    4. '   ' → logprob: -12.250041961669922
    5. '    ' → logprob: -14.000041961669922
    6. '  ' → logprob: -14.125041961669922
    7. '       ' → logprob: -14.625041961669922
    8. ' ' → logprob: -14.875041961669922
    9. '	in' → logprob: -15.375041961669922
    10. '        ' → logprob: -15.500041961669922

Token 907: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -1.1637164789135568e-05
    2. ' pattern' → logprob: -11.500011444091797
    3. '[' → logprob: -13.750011444091797
    4. '(pattern' → logprob: -15.625011444091797
    5. 'pat' → logprob: -16.500011444091797
    6. ' [' → logprob: -17.500011444091797
    7. ' ' → logprob: -17.750011444091797
    8. 'range' → logprob: -17.750011444091797
    9. '   ' → logprob: -18.000011444091797
    10. 'patterns' → logprob: -19.250011444091797

Token 908: '.symbol' (ID: 70386)
  Prédit: '.symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.08774988353252411
    2. '.value' → logprob: -3.33774995803833
    3. '.exp' → logprob: -4.58774995803833
    4. '.sym' → logprob: -4.71274995803833
    5. 'expanded' → logprob: -5.33774995803833
    6. '.' → logprob: -5.33774995803833
    7. '   ' → logprob: -5.46274995803833
    8. ':' → logprob: -5.46274995803833
    9. 'symbols' → logprob: -5.46274995803833
    10. '.expand' → logprob: -6.21274995803833

Token 909: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0325924449716695e-05
    2. '           ' → logprob: -12.75001049041748
    3. '   ' → logprob: -13.37501049041748
    4. 'ols' → logprob: -13.50001049041748
    5. 'als' → logprob: -13.62501049041748
    6. 'symbols' → logprob: -14.25001049041748
    7. '       ' → logprob: -14.50001049041748
    8. ' s' → logprob: -15.62501049041748
    9. ')' → logprob: -15.75001049041748
    10. '}s' → logprob: -16.125009536743164

Token 910: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07091813534498215
    2. ':
' → logprob: -3.070918083190918
    3. '           ' → logprob: -3.820918083190918
    4. ' for' → logprob: -10.570918083190918
    5. ':
' → logprob: -10.695918083190918
    6. ',' → logprob: -10.945918083190918
    7. '   ' → logprob: -11.445918083190918
    8. '	   ' → logprob: -11.570918083190918
    9. '	       ' → logprob: -11.570918083190918
    10. '       ' → logprob: -11.570918083190918

Token 911: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009791270829737186
    2. '	       ' → logprob: -5.134791374206543
    3. 'expanded' → logprob: -6.009791374206543
    4. ' expanded' → logprob: -7.009791374206543
    5. '    	   ' → logprob: -8.884791374206543
    6. '	           ' → logprob: -9.384791374206543
    7. 'Expanded' → logprob: -10.259791374206543
    8. ' for' → logprob: -10.259791374206543
    9. 'extended' → logprob: -10.634791374206543
    10. '		   ' → logprob: -10.634791374206543

Token 912: ' expanded' (ID: 28044)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' (adapté à ' expanded') → logprob: -0.0550483763217926
    2. ' expanded' → logprob: -3.0550484657287598
    3. '           ' → logprob: -5.05504846572876
    4. '               ' → logprob: -10.930047988891602
    5. 'extended' → logprob: -11.180047988891602
    6. ' for' → logprob: -11.180047988891602
    7. 'for' → logprob: -11.430047988891602
    8. 'int' → logprob: -12.555047988891602
    9. 'Expanded' → logprob: -14.055047988891602
    10. ' ' → logprob: -14.305047988891602

Token 913: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.000591278774663806
    2. ' +=' → logprob: -8.000591278076172
    3. '+' → logprob: -8.875591278076172
    4. '+=' → logprob: -9.625591278076172
    5. '.append' → logprob: -10.375591278076172
    6. '.' → logprob: -11.000591278076172
    7. '+.' → logprob: -13.625591278076172
    8. '+[' → logprob: -14.875591278076172
    9. '   ' → logprob: -15.250591278076172
    10. ' .' → logprob: -15.625591278076172

Token 914: '([' (ID: 5194)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0025437972508370876
    2. '([' → logprob: -6.252543926239014
    3. '[str' → logprob: -7.502543926239014
    4. '[Int' → logprob: -10.627543449401855
    5. '[' → logprob: -10.877543449401855
    6. ' [' → logprob: -10.877543449401855
    7. '[f' → logprob: -15.002543449401855
    8. '[token' → logprob: -15.252543449401855
    9. '(int' → logprob: -15.752543449401855
    10. '[self' → logprob: -16.127544403076172

Token 915: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.848420551046729e-05
    2. 'sym' → logprob: -9.8750581741333
    3. ' int' → logprob: -12.2500581741333
    4. '(int' → logprob: -14.5000581741333
    5. '   ' → logprob: -14.5000581741333
    6. '	int' → logprob: -15.0000581741333
    7. '[int' → logprob: -15.6250581741333
    8. '<int' → logprob: -16.125059127807617
    9. ' ' → logprob: -16.250059127807617
    10. '=int' → logprob: -16.375059127807617

Token 916: '(sym' (ID: 143899)
  Prédit: '(sym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sym' → logprob: -0.03810541331768036
    2. 'sym' → logprob: -3.2881054878234863
    3. ' sym' → logprob: -9.913105010986328
    4. '(' → logprob: -11.538105010986328
    5. ' (' → logprob: -13.038105010986328
    6. ')' → logprob: -14.413105010986328
    7. '(s' → logprob: -14.663105010986328
    8. '(
' → logprob: -15.038105010986328
    9. ')s' → logprob: -15.413105010986328
    10. '(symbol' → logprob: -15.663105010986328

Token 917: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.030983617529273033
    2. ')' → logprob: -4.1559834480285645
    3. '())' → logprob: -4.2809834480285645
    4. ' )' → logprob: -7.4059834480285645
    5. '()]' → logprob: -8.405983924865723
    6. ')])' → logprob: -9.780983924865723
    7. '()' → logprob: -9.905983924865723
    8. '),' → logprob: -10.905983924865723
    9. 'sym' → logprob: -11.405983924865723
    10. ')*' → logprob: -12.155983924865723

Token 918: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2389081716537476
    2. ' *' → logprob: -1.2389081716537476
    3. ')' → logprob: -1.6139081716537476
    4. '()' → logprob: -1.9889081716537476
    5. ']*' → logprob: -3.363908290863037
    6. '*' → logprob: -3.863908290863037
    7. '()*' → logprob: -4.863908290863037
    8. ')*' → logprob: -5.238908290863037
    9. ' ]' → logprob: -5.488908290863037
    10. '           ' → logprob: -5.613908290863037

Token 919: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.676292231422849e-05
    2. ' factor' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.625017166137695
    4. 'fact' → logprob: -20.000017166137695
    5. ' ' → logprob: -20.875017166137695
    6. '_factor' → logprob: -21.000017166137695
    7. '
' → logprob: -22.375017166137695
    8. '  ' → logprob: -22.375017166137695
    9. 'Factor' → logprob: -22.500017166137695
    10. '           ' → logprob: -22.625017166137695

Token 920: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030590701499022543
    2. ')
' → logprob: -8.250306129455566
    3. ')return' → logprob: -10.625306129455566
    4. '       ' → logprob: -10.875306129455566
    5. '<|end|>' → logprob: -14.500306129455566
    6. ' )' → logprob: -14.750306129455566
    7. '),' → logprob: -16.00030517578125
    8. ')
' → logprob: -16.50030517578125
    9. ')\
' → logprob: -16.87530517578125
    10. ')#' → logprob: -17.00030517578125

Token 921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002051885472610593
    2. '
' → logprob: -7.002051830291748
    3. 'return' → logprob: -7.377051830291748
    4. '	' → logprob: -8.002052307128906
    5. ' return' → logprob: -9.627052307128906
    6. '	return' → logprob: -10.002052307128906
    7. '<|end|>' → logprob: -11.002052307128906
    8. '   ' → logprob: -11.127052307128906
    9. '```' → logprob: -11.502052307128906
    10. '	   ' → logprob: -12.627052307128906

Token 922: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03293945640325546
    2. 'return' (adapté à ' return') → logprob: -3.5329394340515137
    3. '	' → logprob: -6.407939434051514
    4. '	return' → logprob: -7.032939434051514
    5. '   ' → logprob: -8.282939910888672
    6. ' return' → logprob: -8.532939910888672
    7. '
' → logprob: -8.782939910888672
    8. '```' → logprob: -11.407939910888672
    9. '	   ' → logprob: -11.532939910888672
    10. '        
' → logprob: -12.532939910888672

Token 923: ' expanded' (ID: 28044)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -5.836499985889532e-05
    2. ' expanded' → logprob: -9.7500581741333
    3. 'extended' → logprob: -18.250059127807617
    4. '   ' → logprob: -19.875059127807617
    5. 'expand' → logprob: -20.000059127807617
    6. 'exp' → logprob: -21.375059127807617
    7. '[' → logprob: -21.500059127807617
    8. 'Expanded' → logprob: -22.250059127807617
    9. '
' → logprob: -22.500059127807617
    10. '       ' → logprob: -22.500059127807617

Token 924: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 925: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1645471304655075
    2. '
' → logprob: -2.4145472049713135
    3. '<|end|>' → logprob: -3.1645472049713135
    4. 'def' → logprob: -4.039546966552734
    5. '    
' → logprob: -6.539546966552734
    6. '```' → logprob: -8.164546966552734
    7. '<|end|>' → logprob: -8.164546966552734
    8. ' def' → logprob: -8.539546966552734
    9. ')' → logprob: -10.039546966552734
    10. '

' → logprob: -10.164546966552734

Token 926: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.029272593557834625
    2. '   ' → logprob: -4.029272556304932
    3. '
' → logprob: -4.529272556304932
    4. ' def' → logprob: -8.27927303314209
    5. '    
' → logprob: -11.77927303314209
    6. '	def' → logprob: -12.15427303314209
    7. '

' → logprob: -12.40427303314209
    8. '  
' → logprob: -15.02927303314209
    9. '```' → logprob: -15.15427303314209
    10. '        
' → logprob: -15.27927303314209

Token 927: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.040888313204050064
    2. ' merge' → logprob: -3.2908883094787598
    3. 'combine' → logprob: -6.04088830947876
    4. 'can' → logprob: -8.665888786315918
    5. 'def' → logprob: -8.915888786315918
    6. '_merge' → logprob: -9.540888786315918
    7. ' combine' → logprob: -10.415888786315918
    8. ' can' → logprob: -11.665888786315918
    9. 'try' → logprob: -12.290888786315918
    10. 'get' → logprob: -12.415888786315918

Token 928: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04022597521543503
    2. '_patterns' → logprob: -3.2902259826660156
    3. '(' → logprob: -6.790225982666016
    4. '_pattern' → logprob: -8.165225982666016
    5. '_(' → logprob: -8.165225982666016
    6. '_' → logprob: -8.165225982666016
    7. '_old' → logprob: -8.915225982666016
    8. '(
' → logprob: -10.165225982666016
    9. '   ' → logprob: -11.540225982666016
    10. 'self' → logprob: -12.165225982666016

Token 929: ')' (ID: 8)
  Prédit: '_patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.60381019115448
    2. '(self' → logprob: -0.85381019115448
    3. '_old' → logprob: -4.7288103103637695
    4. '_' → logprob: -5.2288103103637695
    5. '_(' → logprob: -5.2288103103637695
    6. '_pattern' → logprob: -6.1038103103637695
    7. ')' → logprob: -6.6038103103637695
    8. ')_' → logprob: -6.9788103103637695
    9. '   ' → logprob: -7.2288103103637695
    10. 'self' → logprob: -7.6038103103637695

Token 930: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021234957966953516
    2. '(' → logprob: -6.2521233558654785
    3. '_pattern' → logprob: -10.002123832702637
    4. '_' → logprob: -10.002123832702637
    5. '_patterns' → logprob: -10.502123832702637
    6. '   ' → logprob: -10.627123832702637
    7. '(
' → logprob: -11.002123832702637
    8. '_(' → logprob: -11.002123832702637
    9. ' (' → logprob: -12.127123832702637
    10. '_old' → logprob: -12.502123832702637

Token 931: ' Optional' (ID: 19351)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.28159481287002563
    2. ' List' → logprob: -1.4065947532653809
    3. '[List' → logprob: -8.031595230102539
    4. '[' → logprob: -10.406595230102539
    5. 'list' → logprob: -10.531595230102539
    6. 'int' → logprob: -10.781595230102539
    7. '   ' → logprob: -10.781595230102539
    8. ' list' → logprob: -11.781595230102539
    9. 'Optional' → logprob: -13.281595230102539
    10. '[int' → logprob: -13.281595230102539

Token 932: '[str' (ID: 33439)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.007115995045751333
    2. '[' → logprob: -5.007115840911865
    3. '[R' → logprob: -8.257116317749023
    4. '[int' → logprob: -8.882116317749023
    5. '[str' → logprob: -13.882116317749023
    6. '[
' → logprob: -14.382116317749023
    7. 'Rh' → logprob: -15.382116317749023
    8. ' [' → logprob: -15.632116317749023
    9. '[list' → logprob: -15.757116317749023
    10. '[Int' → logprob: -16.757116317749023

Token 933: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4203818142414093
    2. '():
' → logprob: -1.545381784439087
    3. ']:' → logprob: -3.045381784439087
    4. '):
' → logprob: -3.545381784439087
    5. ':
' → logprob: -3.920381784439087
    6. '():' → logprob: -4.170382022857666
    7. ':' → logprob: -5.045382022857666
    8. '   ' → logprob: -5.045382022857666
    9. '       ' → logprob: -6.045382022857666
    10. '):' → logprob: -6.670382022857666

Token 934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015252856246661395
    2. '[' → logprob: -9.625152587890625
    3. '```' → logprob: -10.750152587890625
    4. '[]' → logprob: -11.625152587890625
    5. '(' → logprob: -11.875152587890625
    6. '#' → logprob: -11.875152587890625
    7. 'length' → logprob: -12.000152587890625
    8. '()' → logprob: -12.000152587890625
    9. '   ' → logprob: -12.000152587890625
    10. '
' → logprob: -12.375152587890625

Token 935: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.871772289276123
    2. '       ' → logprob: -1.121772289276123
    3. 'length' → logprob: -1.371772289276123
    4. 'pattern' → logprob: -6.371772289276123
    5. ' if' → logprob: -8.496772766113281
    6. 'patterns' → logprob: -8.621772766113281
    7. '#' → logprob: -8.871772766113281
    8. 'old' → logprob: -9.496772766113281
    9. ' lengths' → logprob: -10.496772766113281
    10. 'numbers' → logprob: -10.746772766113281

Token 936: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.320712685585022
    2. 'if' → logprob: -1.320712685585022
    3. 'length' → logprob: -5.320712566375732
    4. 'old' → logprob: -6.445712566375732
    5. 'pattern' → logprob: -7.820712566375732
    6. 'patterns' → logprob: -8.57071304321289
    7. '#' → logprob: -8.82071304321289
    8. ' if' → logprob: -9.57071304321289
    9. 'numbers' → logprob: -9.82071304321289
    10. '"""' → logprob: -10.57071304321289

Token 937: ' Fusion' (ID: 70618)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7546311020851135
    2. 'Calcul' → logprob: -1.1296310424804688
    3. '#' → logprob: -2.6296310424804688
    4. 'length' → logprob: -3.5046310424804688
    5. 'if' → logprob: -4.004631042480469
    6. 'Si' → logprob: -4.129631042480469
    7. 'old' → logprob: -4.504631042480469
    8. 'long' → logprob: -5.004631042480469
    9. 'Comb' → logprob: -5.004631042480469
    10. 'all' → logprob: -5.004631042480469

Token 938: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.33849865198135376
    2. ' des' → logprob: -2.463498592376709
    3. 'ner' → logprob: -2.713498592376709
    4. '       ' → logprob: -2.838498592376709
    5. 'des' → logprob: -3.213498592376709
    6. 'e' → logprob: -4.088498592376709
    7. '()' → logprob: -4.588498592376709
    8. ' complète' → logprob: -6.213498592376709
    9. 'de' → logprob: -6.338498592376709
    10. '(self' → logprob: -6.338498592376709

Token 939: ' tous' (ID: 10688)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3032419979572296
    2. '()' → logprob: -2.1782419681549072
    3. '(self' → logprob: -2.5532419681549072
    4. ' les' → logprob: -3.5532419681549072
    5. 'the' → logprob: -4.178242206573486
    6. ')' → logprob: -5.178242206573486
    7. 'self' → logprob: -5.553242206573486
    8. '```' → logprob: -6.178242206573486
    9. '"""' → logprob: -6.303242206573486
    10. ' the' → logprob: -6.303242206573486

Token 940: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.05782664194703102
    2. 'les' → logprob: -3.0578267574310303
    3. '       ' → logprob: -5.057826519012451
    4. '(self' → logprob: -6.057826519012451
    5. 'self' → logprob: -9.18282699584961
    6. '_' → logprob: -9.18282699584961
    7. '   ' → logprob: -9.55782699584961
    8. '    ' → logprob: -10.05782699584961
    9. '        ' → logprob: -10.80782699584961
    10. ' leurs' → logprob: -11.18282699584961

Token 941: ' anciens' (ID: 105125)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.08506417274475098
    2. 'old' → logprob: -2.585064172744751
    3. 'pattern' → logprob: -5.460063934326172
    4. 'self' → logprob: -6.585063934326172
    5. 'pat' → logprob: -8.710063934326172
    6. 'symbols' → logprob: -9.585063934326172
    7. ' patterns' → logprob: -9.710063934326172
    8. 'Rh' → logprob: -9.835063934326172
    9. 'anc' → logprob: -10.085063934326172
    10. 'rh' → logprob: -10.335063934326172

Token 942: ' patterns' (ID: 18587)
  Prédit: '_patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.17959202826023102
    2. 'patterns' → logprob: -1.9295920133590698
    3. ' patterns' → logprob: -4.054592132568359
    4. '_pattern' → logprob: -6.554592132568359
    5. 'pattern' → logprob: -8.67959213256836
    6. '_' → logprob: -8.80459213256836
    7. '_pat' → logprob: -10.30459213256836
    8. '_p' → logprob: -10.67959213256836
    9. ' pattern' → logprob: -11.92959213256836
    10. 'pat' → logprob: -12.05459213256836

Token 943: ' selon' (ID: 27571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7351906895637512
    2. ' en' → logprob: -0.7351906895637512
    3. 'en' → logprob: -3.3601906299591064
    4. ' pour' → logprob: -6.3601908683776855
    5. ',' → logprob: -6.6101908683776855
    6. ' et' → logprob: -6.7351908683776855
    7. 'pour' → logprob: -7.2351908683776855
    8. 'et' → logprob: -8.110190391540527
    9. ' into' → logprob: -8.485190391540527
    10. '   ' → logprob: -8.610190391540527

Token 944: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8325087428092957
    2. 'la' → logprob: -1.3325088024139404
    3. '       ' → logprob: -2.3325088024139404
    4. ' les' → logprob: -2.9575088024139404
    5. 'les' → logprob: -3.0825088024139404
    6. 'le' → logprob: -3.7075088024139404
    7. ' leurs' → logprob: -3.9575088024139404
    8. ' leur' → logprob: -4.082508563995361
    9. ' le' → logprob: -4.207508563995361
    10. 'l' → logprob: -4.582508563995361

Token 945: '’' (ID: 438)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04352797940373421
    2. 'e' → logprob: -3.4185280799865723
    3. ''' → logprob: -5.793528079986572
    4. 'es' → logprob: -6.293528079986572
    5. ''application' → logprob: -6.918528079986572
    6. ''ensemble' → logprob: -7.043528079986572
    7. 'og' → logprob: -7.418528079986572
    8. ''utilisateur' → logprob: -8.043527603149414
    9. ''ex' → logprob: -8.168527603149414
    10. ''idée' → logprob: -8.918527603149414

Token 946: 'én' (ID: 3289)
  Prédit: 'ancienne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ancienne' → logprob: -0.15706543624401093
    2. 'ensemble' → logprob: -3.2820653915405273
    3. 'ancien' → logprob: -3.6570653915405273
    4. 'anc' → logprob: -4.532065391540527
    5. 'a' → logprob: -4.657065391540527
    6. 'ex' → logprob: -4.907065391540527
    7. 'harm' → logprob: -5.032065391540527
    8. 'ét' → logprob: -5.657065391540527
    9. 'ordre' → logprob: -6.032065391540527
    10. 'éc' → logprob: -6.157065391540527

Token 947: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.04504415765404701
    2. 'onc' → logprob: -3.295044183731079
    3. 'um' → logprob: -5.7950439453125
    4. 'non' → logprob: -6.4200439453125
    5. 'on' → logprob: -6.7950439453125
    6. 'once' → logprob: -7.1700439453125
    7. 't' → logprob: -8.9200439453125
    8. 'oncer' → logprob: -9.7950439453125
    9. 'd' → logprob: -10.0450439453125
    10. 'nonce' → logprob: -10.2950439453125

Token 948: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04302145540714264
    2. ' en' → logprob: -4.4180216789245605
    3. ',' → logprob: -4.5430216789245605
    4. '.' → logprob: -5.5430216789245605
    5. ' pour' → logprob: -5.7930216789245605
    6. ' et' → logprob: -5.9180216789245605
    7. '
' → logprob: -6.0430216789245605
    8. ':
' → logprob: -6.1680216789245605
    9. ':' → logprob: -6.7930216789245605
    10. '.
' → logprob: -6.9180216789245605

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.2987729102605954e-05
    2. 'length' → logprob: -11.125042915344238
    3. '        
' → logprob: -11.625042915344238
    4. '#' → logprob: -11.875042915344238
    5. '"""' → logprob: -12.375042915344238
    6. '```' → logprob: -13.000042915344238
    7. '
' → logprob: -13.750042915344238
    8. 'if' → logprob: -14.750042915344238
    9. '           ' → logprob: -14.875042915344238
    10. ' length' → logprob: -15.000042915344238

Token 950: ' Retour' (ID: 146830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000377645599655807
    2. '```' → logprob: -8.875377655029297
    3. '"""' → logprob: -9.625377655029297
    4. 'length' → logprob: -9.750377655029297
    5. '        
' → logprob: -10.125377655029297
    6. '#' → logprob: -11.000377655029297
    7. ' length' → logprob: -11.500377655029297
    8. ' if' → logprob: -11.625377655029297
    9. '
' → logprob: -11.750377655029297
    10. ')' → logprob: -12.500377655029297

Token 951: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.002591946395114064
    2. 'n' → logprob: -6.502592086791992
    3. '       ' → logprob: -7.377592086791992
    4. 'ns' → logprob: -8.377592086791992
    5. 'nne' → logprob: -9.627592086791992
    6. 'None' → logprob: -9.752592086791992
    7. 'rne' → logprob: -10.627592086791992
    8. 'neur' → logprob: -10.752592086791992
    9. 'ner' → logprob: -10.877592086791992
    10. 'nes' → logprob: -11.627592086791992

Token 952: ' la' (ID: 557)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20146051049232483
    2. ' None' → logprob: -1.7014604806900024
    3. '''' → logprob: -10.701460838317871
    4. '(None' → logprob: -11.201460838317871
    5. '```' → logprob: -13.201460838317871
    6. '""' → logprob: -13.326460838317871
    7. ''' → logprob: -13.576460838317871
    8. '"' → logprob: -13.701460838317871
    9. 'une' → logprob: -14.201460838317871
    10. '=None' → logprob: -14.451460838317871

Token 953: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.347543329000473
    2. 'chaine' → logprob: -2.222543239593506
    3. 'string' → logprob: -2.597543239593506
    4. 'merged' → logprob: -3.347543239593506
    5. 'combined' → logprob: -3.597543239593506
    6. ' chaîne' → logprob: -4.097543239593506
    7. 'cha' → logprob: -4.847543239593506
    8. 'fusion' → logprob: -4.847543239593506
    9. 'hex' → logprob: -5.847543239593506
    10. 'final' → logprob: -6.472543239593506

Token 954: ' hex' (ID: 26157)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.4688963294029236
    2. ' des' → logprob: -1.8438963890075684
    3. 'represent' → logprob: -2.5938963890075684
    4. 'des' → logprob: -3.8438963890075684
    5. '       ' → logprob: -4.093896389007568
    6. ' représentant' → logprob: -4.093896389007568
    7. ' or' → logprob: -4.343896389007568
    8. 'de' → logprob: -4.343896389007568
    9. 'ou' → logprob: -4.718896389007568
    10. 'vide' → logprob: -5.218896389007568

Token 955: 'ad' (ID: 324)
  Prédit: 'adecimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adecimal' → logprob: -0.06470099836587906
    2. 'a' → logprob: -3.1897010803222656
    3. 'adec' → logprob: -4.689701080322266
    4. 'ad' → logprob: -5.314701080322266
    5. 'ade' → logprob: -5.689701080322266
    6. '```' → logprob: -6.064701080322266
    7. 'string' → logprob: -7.814701080322266
    8. 'adem' → logprob: -7.814701080322266
    9. '   ' → logprob: -8.439701080322266
    10. '_repr' → logprob: -8.939701080322266

Token 956: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.016141466796398163
    2. 'ec' → logprob: -4.266141414642334
    3. 'é' → logprob: -6.641141414642334
    4. '```' → logprob: -8.641141891479492
    5. 'ex' → logprob: -9.266141891479492
    6. 'c' → logprob: -9.641141891479492
    7. 'esc' → logprob: -9.641141891479492
    8. 'és' → logprob: -9.766141891479492
    9. 'éci' → logprob: -9.891141891479492
    10. '"""
' → logprob: -10.266141891479492

Token 957: 'im' (ID: 321)
  Prédit: 'imal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.007496951147913933
    2. 'adecimal' → logprob: -5.1324968338012695
    3. 'str' → logprob: -7.3824968338012695
    4. '```' → logprob: -7.8824968338012695
    5. 'string' → logprob: -8.88249683380127
    6. 'al' → logprob: -8.88249683380127
    7. 'im' → logprob: -9.50749683380127
    8. '"""' → logprob: -10.38249683380127
    9. ''''' → logprob: -10.75749683380127
    10. 'imals' → logprob: -10.88249683380127

Token 958: 'ale' (ID: 1167)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6931799650192261
    2. 'ale' → logprob: -0.6931799650192261
    3. 'alse' → logprob: -12.443180084228516
    4. '```' → logprob: -12.693180084228516
    5. 'ales' → logprob: -12.818180084228516
    6. 'able' → logprob: -13.068180084228516
    7. 'nale' → logprob: -13.193180084228516
    8. 'alable' → logprob: -13.318180084228516
    9. '   ' → logprob: -13.443180084228516
    10. 'ation' → logprob: -13.443180084228516

Token 959: ' fusion' (ID: 48115)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25553932785987854
    2. '()' → logprob: -2.1305394172668457
    3. 'represent' → logprob: -3.7555394172668457
    4. ' des' → logprob: -4.005539417266846
    5. '   ' → logprob: -4.505539417266846
    6. 'result' → logprob: -5.130539417266846
    7. ' ou' → logprob: -5.255539417266846
    8. ' or' → logprob: -5.255539417266846
    9. ' representing' → logprob: -5.505539417266846
    10. '"' → logprob: -5.630539417266846

Token 960: 'née' (ID: 86906)
  Prédit: 'érée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.13170401751995087
    2. 'ée' → logprob: -2.881704092025757
    3. 'al' → logprob: -4.006703853607178
    4. 'érale' → logprob: -4.256703853607178
    5. 'lée' → logprob: -4.756703853607178
    6. '"' → logprob: -5.131703853607178
    7. 'ale' → logprob: -5.256703853607178
    8. 'née' → logprob: -5.631703853607178
    9. '```' → logprob: -6.256703853607178
    10. 'urée' → logprob: -6.381703853607178

Token 961: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30110424757003784
    2. '()' → logprob: -2.4261043071746826
    3. '(self' → logprob: -2.4261043071746826
    4. '""' → logprob: -3.5511043071746826
    5. '"' → logprob: -3.6761043071746826
    6. '   ' → logprob: -5.4261040687561035
    7. '"""' → logprob: -5.6761040687561035
    8. '()
' → logprob: -6.0511040687561035
    9. '"""
' → logprob: -6.3011040687561035
    10. '(' → logprob: -6.3011040687561035

Token 962: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024775585625320673
    2. ' None' → logprob: -6.002477645874023
    3. '   ' → logprob: -14.502477645874023
    4. '       ' → logprob: -14.752477645874023
    5. '
' → logprob: -14.877477645874023
    6. '""' → logprob: -15.377477645874023
    7. 'none' → logprob: -16.002477645874023
    8. '''' → logprob: -16.252477645874023
    9. '(None' → logprob: -16.252477645874023
    10. '"' → logprob: -16.502477645874023

Token 963: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21648043394088745
    2. 'if' → logprob: -2.0914804935455322
    3. '       ' → logprob: -3.0914804935455322
    4. '()' → logprob: -3.8414804935455322
    5. ':' → logprob: -6.841480255126953
    6. '   ' → logprob: -7.216480255126953
    7. '():
' → logprob: -7.716480255126953
    8. '           ' → logprob: -8.091480255126953
    9. ':
' → logprob: -8.091480255126953
    10. '():' → logprob: -8.466480255126953

Token 964: ' trop' (ID: 14765)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2614811658859253
    2. ' not' → logprob: -1.3864811658859253
    3. 'not' → logprob: -1.5114811658859253
    4. ' any' → logprob: -2.761481285095215
    5. 'len' → logprob: -2.761481285095215
    6. ' self' → logprob: -2.886481285095215
    7. 'None' → logprob: -3.511481285095215
    8. 'any' → logprob: -3.761481285095215
    9. ' None' → logprob: -5.261481285095215
    10. '       ' → logprob: -6.011481285095215

Token 965: ' volum' (ID: 88619)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.230429545044899
    2. ' long' → logprob: -2.1054296493530273
    3. ' longue' → logprob: -3.1054296493530273
    4. ' complexe' → logprob: -4.855429649353027
    5. '_long' → logprob: -4.980429649353027
    6. ' grande' → logprob: -5.230429649353027
    7. 'large' → logprob: -5.355429649353027
    8. 'complex' → logprob: -5.355429649353027
    9. '_' → logprob: -5.730429649353027
    10. ' large' → logprob: -6.605429649353027

Token 966: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.029143964871764183
    2. 'e' → logprob: -3.654144048690796
    3. 'eux' → logprob: -6.029143810272217
    4. 'in' → logprob: -8.404144287109375
    5. 'inue' → logprob: -9.029144287109375
    6. 'ieux' → logprob: -10.779144287109375
    7. 'ne' → logprob: -10.904144287109375
    8. 'eine' → logprob: -11.904144287109375
    9. 'ene' → logprob: -12.404144287109375
    10. '```' → logprob: -12.529144287109375

Token 967: 'ux' (ID: 1778)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10172338038682938
    2. 'é' → logprob: -2.3517234325408936
    3. 'def' → logprob: -7.8517231941223145
    4. 'ée' → logprob: -8.351723670959473
    5. 'té' → logprob: -8.351723670959473
    6. '   ' → logprob: -9.351723670959473
    7. '.' → logprob: -9.601723670959473
    8. 'te' → logprob: -9.726723670959473
    9. 'ité' → logprob: -9.726723670959473
    10. 'ue' → logprob: -9.851723670959473

Token 968: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03988204151391983
    2. ' or' → logprob: -3.539881944656372
    3. ':' → logprob: -4.914882183074951
    4. '.' → logprob: -7.664882183074951
    5. '(' → logprob: -7.789882183074951
    6. '<|end|>' → logprob: -7.914882183074951
    7. ',' → logprob: -8.164881706237793
    8. '           ' → logprob: -8.789881706237793
    9. '<|end|>' → logprob: -8.789881706237793
    10. '```' → logprob: -9.039881706237793

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.660315895918757e-05
    2. '
' → logprob: -10.750076293945312
    3. '```' → logprob: -10.750076293945312
    4. 'length' → logprob: -11.000076293945312
    5. '        
' → logprob: -11.625076293945312
    6. '#' → logprob: -13.375076293945312
    7. '"""' → logprob: -13.625076293945312
    8. ' length' → logprob: -14.000076293945312
    9. '`' → logprob: -14.625076293945312
    10. '   ' → logprob: -15.000076293945312

Token 970: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007261820137500763
    2. 'length' → logprob: -5.507261753082275
    3. 'max' → logprob: -6.132261753082275
    4. 'pattern' → logprob: -8.007262229919434
    5. 'total' → logprob: -8.757262229919434
    6. 'all' → logprob: -8.882262229919434
    7. '#' → logprob: -9.007262229919434
    8. 'old' → logprob: -9.382262229919434
    9. 'patterns' → logprob: -9.882262229919434
    10. ' lengths' → logprob: -11.382262229919434

Token 971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025883622583933175
    2. 'length' → logprob: -8.500258445739746
    3. 'max' → logprob: -10.000258445739746
    4. 'pattern' → logprob: -13.250258445739746
    5. 'if' → logprob: -13.375258445739746
    6. 'import' → logprob: -13.375258445739746
    7. '```' → logprob: -14.000258445739746
    8. 'total' → logprob: -14.125258445739746
    9. 'numbers' → logprob: -14.750258445739746
    10. 'num' → logprob: -14.750258445739746

Token 972: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1928854137659073
    2. 'if' → logprob: -1.942885398864746
    3. 'old' → logprob: -3.567885398864746
    4. '       ' → logprob: -5.942885398864746
    5. 'pattern' → logprob: -7.067885398864746
    6. '#' → logprob: -8.067885398864746
    7. 'patterns' → logprob: -9.817885398864746
    8. 'all' → logprob: -10.817885398864746
    9. '   ' → logprob: -11.192885398864746
    10. ' lengths' → logprob: -11.817885398864746

Token 973: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126968115568161
    2. '=' → logprob: -2.1269681453704834
    3. '=[]' → logprob: -10.501968383789062
    4. ' =[' → logprob: -12.126968383789062
    5. '=[' → logprob: -12.376968383789062
    6. ':' → logprob: -13.376968383789062
    7. ',' → logprob: -15.376968383789062
    8. '＝' → logprob: -15.376968383789062
    9. '=[]
' → logprob: -15.501968383789062
    10. 's' → logprob: -16.001968383789062

Token 974: ' [' (ID: 723)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.3359144330024719
    2. '[self' → logprob: -1.8359143733978271
    3. '[' → logprob: -2.585914373397827
    4. ' [' → logprob: -4.085914611816406
    5. '[int' → logprob: -4.085914611816406
    6. '[p' → logprob: -5.085914611816406
    7. '[item' → logprob: -5.835914611816406
    8. '[obj' → logprob: -6.085914611816406
    9. '[str' → logprob: -6.710914611816406
    10. '[i' → logprob: -7.210914611816406

Token 975: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.21826522052288055
    2. 'pattern' → logprob: -1.718265175819397
    3. 'pat' → logprob: -4.093265056610107
    4. 'sym' → logprob: -11.593265533447266
    5. 'pt' → logprob: -11.843265533447266
    6. ' p' → logprob: -12.843265533447266
    7. 'len' → logprob: -13.093265533447266
    8. ' pattern' → logprob: -13.218265533447266
    9. 'pp' → logprob: -14.468265533447266
    10. ' pat' → logprob: -14.843265533447266

Token 976: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.750003814697266
    3. '().' → logprob: -14.000003814697266
    4. 'length' → logprob: -14.375003814697266
    5. '(length' → logprob: -14.875003814697266
    6. '.LENGTH' → logprob: -15.625003814697266
    7. '.l' → logprob: -15.625003814697266
    8. '.len' → logprob: -16.750003814697266
    9. ':length' → logprob: -16.875003814697266
    10. '.Length' → logprob: -17.250003814697266

Token 977: '()' (ID: 416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4260603189468384
    2. '()' → logprob: -1.4260603189468384
    3. 'for' → logprob: -2.301060199737549
    4. '()]' → logprob: -5.301060199737549
    5. ']' → logprob: -6.676060199737549
    6. '[' → logprob: -9.676060676574707
    7. '       ' → logprob: -9.801060676574707
    8. ')' → logprob: -10.176060676574707
    9. ']()' → logprob: -10.426060676574707
    10. '()]
' → logprob: -11.176060676574707

Token 978: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012853829190135002
    2. 'for' → logprob: -4.387853622436523
    3. '       ' → logprob: -8.262853622436523
    4. '()' → logprob: -9.762853622436523
    5. '        ' → logprob: -11.762853622436523
    6. ']' → logprob: -12.262853622436523
    7. '           ' → logprob: -12.512853622436523
    8. ')' → logprob: -12.762853622436523
    9. '[' → logprob: -13.137853622436523
    10. ' ' → logprob: -13.262853622436523

Token 979: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00025001514586620033
    2. ' p' → logprob: -8.375249862670898
    3. 'self' → logprob: -10.875249862670898
    4. ' self' → logprob: -15.000249862670898
    5. 'pattern' → logprob: -15.750249862670898
    6. '	p' → logprob: -16.2502498626709
    7. '
' → logprob: -18.0002498626709
    8. 'pat' → logprob: -18.2502498626709
    9. ')p' → logprob: -19.2502498626709
    10. '   ' → logprob: -19.5002498626709

Token 980: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7263351082801819
    2. ' in' → logprob: -0.7263351082801819
    3. ' p' → logprob: -3.851335048675537
    4. 'in' → logprob: -4.476335048675537
    5. '<|end|>' → logprob: -12.601335525512695
    6. 'pattern' → logprob: -12.726335525512695
    7. 'attern' → logprob: -12.976335525512695
    8. ' ' → logprob: -13.226335525512695
    9. 'pat' → logprob: -14.351335525512695
    10. 's' → logprob: -14.601335525512695

Token 981: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.180879816180095e-05
    2. ' self' → logprob: -9.875051498413086
    3. 'p' → logprob: -16.625051498413086
    4. '(self' → logprob: -16.750051498413086
    5. '
' → logprob: -18.250051498413086
    6. '	self' → logprob: -19.125051498413086
    7. '[self' → logprob: -19.375051498413086
    8. '=self' → logprob: -20.750051498413086
    9. '   ' → logprob: -21.250051498413086
    10. '       ' → logprob: -21.250051498413086

Token 982: '.old' (ID: 81843)
  Prédit: '.old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.old' → logprob: -0.0031791406217962503
    2. 'old' → logprob: -5.75317907333374
    3. '	old' → logprob: -14.378179550170898
    4. '.' → logprob: -15.128179550170898
    5. ' old' → logprob: -15.378179550170898
    6. ' .' → logprob: -16.0031795501709
    7. '_old' → logprob: -16.0031795501709
    8. '.user' → logprob: -17.2531795501709
    9. '.p' → logprob: -17.7531795501709
    10. '旧' → logprob: -17.8781795501709

Token 983: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -1.0564331205387134e-05
    2. 'patterns' → logprob: -11.50001049041748
    3. '_pattern' → logprob: -16.625011444091797
    4. 'Patterns' → logprob: -16.625011444091797
    5. 'p' → logprob: -16.750011444091797
    6. '_p' → logprob: -16.875011444091797
    7. '```' → logprob: -17.750011444091797
    8. 'attern' → logprob: -17.750011444091797
    9. ' patterns' → logprob: -19.000011444091797
    10. '
' → logprob: -19.375011444091797

Token 984: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009289789944887161
    2. ']
' → logprob: -4.884289741516113
    3. '       ' → logprob: -6.634289741516113
    4. ' ]' → logprob: -8.009289741516113
    5. ']
' → logprob: -11.384289741516113
    6. ' if' → logprob: -11.634289741516113
    7. ' ]
' → logprob: -12.384289741516113
    8. ']

' → logprob: -13.259289741516113
    9. ')' → logprob: -13.759289741516113
    10. '<|end|>' → logprob: -13.759289741516113

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008317633531987667
    2. '[' → logprob: -6.008317470550537
    3. ' l' → logprob: -6.508317470550537
    4. '
' → logprob: -7.008317470550537
    5. '        
' → logprob: -7.008317470550537
    6. '```' → logprob: -7.008317470550537
    7. '<|end|>' → logprob: -8.008317947387695
    8. ',' → logprob: -8.883317947387695
    9. '`' → logprob: -9.008317947387695
    10. ' 
' → logprob: -9.383317947387695

Token 986: ' l' (ID: 305)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.9397640228271484
    2. 'l' (adapté à ' l') → logprob: -1.1897640228271484
    3. 'total' → logprob: -1.6897640228271484
    4. 'if' → logprob: -2.8147640228271484
    5. '       ' → logprob: -3.1897640228271484
    6. ' full' → logprob: -5.314764022827148
    7. 'target' → logprob: -5.439764022827148
    8. 'pattern' → logprob: -5.939764022827148
    9. 'merged' → logprob: -6.189764022827148
    10. ' total' → logprob: -6.689764022827148

Token 987: ' =' (ID: 314)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.08870965242385864
    2. 'ength' → logprob: -2.963709592819214
    3. 'en' → logprob: -3.838709592819214
    4. ' =' → logprob: -5.338709831237793
    5. '=' → logprob: -5.963709831237793
    6. 'ong' → logprob: -6.088709831237793
    7. 'full' → logprob: -6.838709831237793
    8. 'eng' → logprob: -8.463709831237793
    9. '_full' → logprob: -8.963709831237793
    10. 'c' → logprob: -9.463709831237793

Token 988: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052342405542731285
    2. ' self' → logprob: -5.255234241485596
    3. '1' → logprob: -15.255233764648438
    4. '       ' → logprob: -15.380233764648438
    5. '(self' → logprob: -16.880233764648438
    6. ' ' → logprob: -18.380233764648438
    7. '[self' → logprob: -18.505233764648438
    8. '	self' → logprob: -18.630233764648438
    9. '=self' → logprob: -19.005233764648438
    10. '$self' → logprob: -19.005233764648438

Token 989: '.full' (ID: 43009)
  Prédit: '.full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.full' → logprob: -0.31357136368751526
    2. 'full' → logprob: -1.3135713338851929
    3. 'self' → logprob: -9.188570976257324
    4. ' full' → logprob: -9.313570976257324
    5. '	full' → logprob: -10.438570976257324
    6. 'l' → logprob: -10.563570976257324
    7. '.l' → logprob: -10.688570976257324
    8. '_full' → logprob: -11.063570976257324
    9. 'Full' → logprob: -12.688570976257324
    10. '.' → logprob: -12.938570976257324

Token 990: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.0280383548888494e-06
    2. 'l' → logprob: -13.875000953674316
    3. '\' → logprob: -18.750001907348633
    4. '_' → logprob: -19.375001907348633
    5. '
' → logprob: -19.750001907348633
    6. '```' → logprob: -19.750001907348633
    7. '_ll' → logprob: -20.000001907348633
    8. '_list' → logprob: -20.500001907348633
    9. 'm' → logprob: -20.625001907348633
    10. 's' → logprob: -20.625001907348633

Token 991: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -5.955703818472102e-05
    2. 'l' → logprob: -9.750059127807617
    3. 'm' → logprob: -14.250059127807617
    4. 'c' → logprob: -14.750059127807617
    5. 'cms' → logprob: -17.250059127807617
    6. 'CM' → logprob: -17.250059127807617
    7. ' cm' → logprob: -17.375059127807617
    8. 'с' → logprob: -18.125059127807617
    9. ' l' → logprob: -18.375059127807617
    10. 'cmp' → logprob: -18.500059127807617

Token 992: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -1.4498052223643754e-05
    2. '(' → logprob: -11.875014305114746
    3. 'length' → logprob: -12.125014305114746
    4. '(
' → logprob: -14.500014305114746
    5. '[length' → logprob: -14.500014305114746
    6. '(len' → logprob: -15.250014305114746
    7. '(numbers' → logprob: -15.375014305114746
    8. '(level' → logprob: -15.500014305114746
    9. ' (' → logprob: -15.625014305114746
    10. '([' → logprob: -16.125015258789062

Token 993: 's' (ID: 82)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0024344047997146845
    2. 'length' → logprob: -6.627434253692627
    3. 'ength' → logprob: -7.002434253692627
    4. 's' → logprob: -8.752434730529785
    5. '[length' → logprob: -11.127434730529785
    6. ',length' → logprob: -11.502434730529785
    7. '_lengths' → logprob: -11.752434730529785
    8. '(len' → logprob: -13.127434730529785
    9. '(numbers' → logprob: -13.627434730529785
    10. ')' → logprob: -13.877434730529785

Token 994: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008376232581213117
    2. ')
' → logprob: -7.375837802886963
    3. '       ' → logprob: -8.500837326049805
    4. ' )' → logprob: -12.375837326049805
    5. ')return' → logprob: -14.125837326049805
    6. '<|end|>' → logprob: -14.875837326049805
    7. ']' → logprob: -15.125837326049805
    8. '[' → logprob: -15.250837326049805
    9. ')#' → logprob: -15.375837326049805
    10. ')
' → logprob: -15.375837326049805

Token 995: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4987962543964386
    2. '
' → logprob: -1.2487962245941162
    3. '        
' → logprob: -2.748796224594116
    4. '```' → logprob: -3.373796224594116
    5. 'tokens' → logprob: -6.373796463012695
    6. 'if' → logprob: -6.498796463012695
    7. '#' → logprob: -6.748796463012695
    8. ' if' → logprob: -7.498796463012695
    9. '<|end|>' → logprob: -7.748796463012695
    10. '  
' → logprob: -8.248796463012695

Token 996: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011915893293917179
    2. 'expanded' → logprob: -5.011915683746338
    3. 'merged' → logprob: -5.886915683746338
    4. '#' (adapté à ' #') → logprob: -6.386915683746338
    5. 'combined' → logprob: -8.261916160583496
    6. 'max' → logprob: -8.886916160583496
    7. '       ' → logprob: -9.261916160583496
    8. 'all' → logprob: -9.761916160583496
    9. 'for' → logprob: -10.511916160583496
    10. 'bit' → logprob: -10.511916160583496

Token 997: ' Ét' (ID: 54156)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001730510382913053
    2. 'expanded' → logprob: -7.126730442047119
    3. 'merged' → logprob: -7.751730442047119
    4. '#' → logprob: -8.126730918884277
    5. 'combined' → logprob: -9.501730918884277
    6. 'max' → logprob: -10.251730918884277
    7. 'for' → logprob: -11.126730918884277
    8. 'MAX' → logprob: -11.376730918884277
    9. ' if' → logprob: -11.501730918884277
    10. 'all' → logprob: -11.501730918884277

Token 998: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.1242762878537178
    2. 'ape' → logprob: -2.4992763996124268
    3. 'end' → logprob: -3.7492763996124268
    4. 'endue' → logprob: -5.624276161193848
    5. 'apes' → logprob: -5.999276161193848
    6. 'ends' → logprob: -6.499276161193848
    7. 'endu' → logprob: -6.499276161193848
    8. 'endus' → logprob: -7.249276161193848
    9. 'ended' → logprob: -7.624276161193848
    10. '#' → logprob: -8.624276161193848

Token 999: ' tous' (ID: 10688)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -0.5430669188499451
    2. 'all' → logprob: -1.0430669784545898
    3. '       ' → logprob: -4.16806697845459
    4. ' all' → logprob: -4.29306697845459
    5. 'patterns' → logprob: -4.66806697845459
    6. ' expanded' → logprob: -4.79306697845459
    7. 'each' → logprob: -4.79306697845459
    8. ' les' → logprob: -5.66806697845459
    9. 'les' → logprob: -5.79306697845459
    10. 'old' → logprob: -6.29306697845459

Token 1000: ' les' (ID: 1341)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.4984661340713501
    2. 'les' → logprob: -0.9984661340713501
    3. '(p' → logprob: -4.4984660148620605
    4. ' les' → logprob: -5.6234660148620605
    5. 'pattern' → logprob: -5.8734660148620605
    6. 'old' → logprob: -6.2484660148620605
    7. ' patterns' → logprob: -6.8734660148620605
    8. '(pattern' → logprob: -6.9984660148620605
    9. 'p' → logprob: -7.1234660148620605
    10. 'pat' → logprob: -7.3734660148620605

Token 1001: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.018859464675188065
    2. 'expanded' → logprob: -4.268859386444092
    3. 'old' → logprob: -5.518859386444092
    4. 'pattern' → logprob: -7.643859386444092
    5. 'pat' → logprob: -9.01885986328125
    6. ' patterns' → logprob: -10.51885986328125
    7. 'p' → logprob: -10.64385986328125
    8. 'extended' → logprob: -11.51885986328125
    9. 'expand' → logprob: -12.14385986328125
    10. 'exp' → logprob: -13.01885986328125

Token 1002: ' à' (ID: 1221)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -0.5807963013648987
    2. '       ' → logprob: -0.8307963013648987
    3. ' expanded' → logprob: -5.705796241760254
    4. 'to' → logprob: -7.205796241760254
    5. 'extended' → logprob: -8.205796241760254
    6. 'exp' → logprob: -9.080796241760254
    7. ',' → logprob: -9.580796241760254
    8. 'Expanded' → logprob: -9.705796241760254
    9. 'expand' → logprob: -9.955796241760254
    10. ' to' → logprob: -10.205796241760254

Token 1003: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0017200425500050187
    2. ' l' → logprob: -6.376719951629639
    3. ' la' → logprob: -11.751720428466797
    4. 'length' → logprob: -11.751720428466797
    5. 'la' → logprob: -14.501720428466797
    6. 'the' → logprob: -15.501720428466797
    7. 'le' → logprob: -15.501720428466797
    8. '`' → logprob: -15.626720428466797
    9. '```' → logprob: -15.876720428466797
    10. ' the' → logprob: -16.251720428466797

Token 1004: ' longueur' (ID: 104613)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008539431728422642
    2. 'length' → logprob: -7.375854015350342
    3. 'long' → logprob: -8.500853538513184
    4. 'leng' → logprob: -11.875853538513184
    5. 'full' → logprob: -12.000853538513184
    6. 'len' → logprob: -12.625853538513184
    7. ' l' → logprob: -13.000853538513184
    8. 'large' → logprob: -13.875853538513184
    9. '
' → logprob: -14.250853538513184
    10. 'size' → logprob: -14.750853538513184

Token 1005: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009548653848469257
    2. ' l' → logprob: -5.384548664093018
    3. '       ' → logprob: -6.384548664093018
    4. ' complète' → logprob: -6.884548664093018
    5. '=l' → logprob: -7.009548664093018
    6. 'complete' → logprob: -8.13454818725586
    7. 'compl' → logprob: -8.25954818725586
    8. 'de' → logprob: -8.50954818725586
    9. 'd' → logprob: -8.88454818725586
    10. 'c' → logprob: -9.25954818725586

Token 1006: '
' (ID: 198)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -0.6066566109657288
    2. '       ' → logprob: -0.8566566109657288
    3. '
' → logprob: -3.981656551361084
    4. ' expanded' → logprob: -4.731656551361084
    5. '        
' → logprob: -6.981656551361084
    6. ',' → logprob: -7.106656551361084
    7. 'Expanded' → logprob: -8.106657028198242
    8. 'extended' → logprob: -8.231657028198242
    9. '-expanded' → logprob: -9.606657028198242
    10. '```' → logprob: -9.731657028198242

Token 1007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4401606321334839
    2. 'expanded' → logprob: -1.0651606321334839
    3. ' expanded' → logprob: -4.690160751342773
    4. '
' → logprob: -6.940160751342773
    5. 'extended' → logprob: -8.065160751342773
    6. 'Expanded' → logprob: -8.565160751342773
    7. ',' → logprob: -8.815160751342773
    8. 'for' → logprob: -9.190160751342773
    9. '        
' → logprob: -9.440160751342773
    10. 'patterns' → logprob: -9.815160751342773

Token 1008: ' expanded' (ID: 28044)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' (adapté à ' expanded') → logprob: -3.404745439183898e-05
    2. 'extended' → logprob: -11.25003433227539
    3. 'old' → logprob: -11.75003433227539
    4. '       ' → logprob: -12.37503433227539
    5. 'patterns' → logprob: -12.87503433227539
    6. ' expanded' → logprob: -13.12503433227539
    7. 'expand' → logprob: -13.50003433227539
    8. 'all' → logprob: -13.50003433227539
    9. 'exp' → logprob: -13.87503433227539
    10. '   ' → logprob: -15.12503433227539

Token 1009: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.1510154753923416
    2. 's' → logprob: -3.026015520095825
    3. '=' → logprob: -3.276015520095825
    4. ' =' → logprob: -3.401015520095825
    5. 'patterns' → logprob: -4.276015281677246
    6. '_lists' → logprob: -5.526015281677246
    7. '_symbols' → logprob: -6.776015281677246
    8. '_list' → logprob: -7.651015281677246
    9. '_exp' → logprob: -8.276015281677246
    10. '_sequences' → logprob: -8.776015281677246

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759577751159668
    2. ' =' → logprob: -0.8259577751159668
    3. ':' → logprob: -10.950958251953125
    4. '   ' → logprob: -15.325958251953125
    5. '=[]' → logprob: -15.450958251953125
    6. 's' → logprob: -15.575958251953125
    7. '=[]
' → logprob: -16.825958251953125
    8. '=[' → logprob: -17.075958251953125
    9. ' ' → logprob: -18.575958251953125
    10. '[' → logprob: -18.575958251953125

Token 1011: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017173513770103455
    2. '[
' → logprob: -4.7671732902526855
    3. '[self' → logprob: -5.0171732902526855
    4. '[]
' → logprob: -6.7671732902526855
    5. '[p' → logprob: -8.267173767089844
    6. ' [' → logprob: -9.017173767089844
    7. '[event' → logprob: -9.892173767089844
    8. '[result' → logprob: -10.267173767089844
    9. '[array' → logprob: -10.517173767089844
    10. '[e' → logprob: -10.517173767089844

Token 1012: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.6060808522743173e-05
    2. 'p' → logprob: -11.000025749206543
    3. 'pattern' → logprob: -12.375025749206543
    4. ' self' → logprob: -12.750025749206543
    5. 'pat' → logprob: -13.500025749206543
    6. '[self' → logprob: -14.250025749206543
    7. '[' → logprob: -15.875025749206543
    8. '(self' → logprob: -16.62502670288086
    9. '   ' → logprob: -17.62502670288086
    10. '       ' → logprob: -17.75002670288086

Token 1013: '.expand' (ID: 61449)
  Prédit: '.expand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expand' → logprob: -8.537868779967539e-06
    2. 'expand' → logprob: -12.500008583068848
    3. ' .' → logprob: -13.000008583068848
    4. '.' → logprob: -13.000008583068848
    5. '.extend' → logprob: -15.375008583068848
    6. '.exp' → logprob: -16.87500762939453
    7. ' expand' → logprob: -19.87500762939453
    8. '.merge' → logprob: -20.00000762939453
    9. '   ' → logprob: -20.37500762939453
    10. ').' → logprob: -20.50000762939453

Token 1014: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.015728266909718513
    2. 'pattern' → logprob: -4.64072847366333
    3. '(p' → logprob: -5.26572847366333
    4. 'Pattern' → logprob: -8.390727996826172
    5. '(pattern' → logprob: -8.640727996826172
    6. 'p' → logprob: -9.140727996826172
    7. '_p' → logprob: -9.765727996826172
    8. '_' → logprob: -10.140727996826172
    9. '_(' → logprob: -10.515727996826172
    10. '_pat' → logprob: -10.765727996826172

Token 1015: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03410768881440163
    2. '(pattern' → logprob: -3.4091076850891113
    3. 'pattern' → logprob: -8.40910816192627
    4. '(' → logprob: -8.53410816192627
    5. '(sym' → logprob: -11.40910816192627
    6. 'p' → logprob: -11.78410816192627
    7. ' (' → logprob: -11.90910816192627
    8. '(
' → logprob: -12.28410816192627
    9. '(old' → logprob: -12.90910816192627
    10. '(pp' → logprob: -13.40910816192627

Token 1016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006277294596657157
    2. ',p' → logprob: -7.500627517700195
    3. '(p' → logprob: -9.875627517700195
    4. ' ,' → logprob: -10.750627517700195
    5. 'p' → logprob: -14.125627517700195
    6. '           ' → logprob: -14.500627517700195
    7. '       ' → logprob: -15.625627517700195
    8. ')' → logprob: -16.125627517700195
    9. '[p' → logprob: -16.375627517700195
    10. ' p' → logprob: -16.500627517700195

Token 1017: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00033558503491804004
    2. ' l' → logprob: -8.000335693359375
    3. '```' → logprob: -16.875335693359375
    4. ')' → logprob: -17.125335693359375
    5. '           ' → logprob: -17.250335693359375
    6. '       ' → logprob: -17.750335693359375
    7. '	l' → logprob: -18.500335693359375
    8. '   ' → logprob: -19.375335693359375
    9. '
' → logprob: -19.750335693359375
    10. '        ' → logprob: -19.750335693359375

Token 1018: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.093505099765025e-05
    2. ')]' → logprob: -11.625020980834961
    3. '       ' → logprob: -12.000020980834961
    4. ' )' → logprob: -12.250020980834961
    5. ')
' → logprob: -14.000020980834961
    6. '))' → logprob: -16.75002098083496
    7. ']' → logprob: -16.87502098083496
    8. ')`' → logprob: -17.12502098083496
    9. '   ' → logprob: -17.25002098083496
    10. '        ' → logprob: -17.37502098083496

Token 1019: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.052341751754283905
    2. 'for' → logprob: -3.5523416996002197
    3. '       ' → logprob: -3.8023416996002197
    4. ')' → logprob: -12.42734146118164
    5. '        ' → logprob: -12.42734146118164
    6. ']' → logprob: -12.67734146118164
    7. '	for' → logprob: -13.05234146118164
    8. '           ' → logprob: -13.30234146118164
    9. '
' → logprob: -13.55234146118164
    10. '               ' → logprob: -13.92734146118164

Token 1020: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4855663721391466e-05
    2. ' p' → logprob: -11.500015258789062
    3. 'self' → logprob: -12.500015258789062
    4. 'pattern' → logprob: -14.250015258789062
    5. '
' → logprob: -15.750015258789062
    6. 'pat' → logprob: -16.500015258789062
    7. '	p' → logprob: -16.875015258789062
    8. '   ' → logprob: -17.125015258789062
    9. ' self' → logprob: -18.375015258789062
    10. ')p' → logprob: -18.500015258789062

Token 1021: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27542105317115784
    2. 'p' → logprob: -1.5254210233688354
    3. ' p' → logprob: -4.025421142578125
    4. 'in' → logprob: -5.775421142578125
    5. 'self' → logprob: -6.275421142578125
    6. ' self' → logprob: -8.900421142578125
    7. ',' → logprob: -10.150421142578125
    8. '<|end|>' → logprob: -10.400421142578125
    9. '(p' → logprob: -10.650421142578125
    10. ')' → logprob: -10.900421142578125

Token 1022: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020067949662916362
    2. ' self' → logprob: -8.625200271606445
    3. '
' → logprob: -11.375200271606445
    4. '       ' → logprob: -12.000200271606445
    5. '   ' → logprob: -14.000200271606445
    6. '           ' → logprob: -14.500200271606445
    7. '[self' → logprob: -14.500200271606445
    8. '(self' → logprob: -14.625200271606445
    9. ' ' → logprob: -15.750200271606445
    10. 'p' → logprob: -15.875200271606445

Token 1023: '.old' (ID: 81843)
  Prédit: '.old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.old' → logprob: -0.429189532995224
    2. 'old' → logprob: -1.0541895627975464
    3. '.full' → logprob: -8.554189682006836
    4. '	old' → logprob: -10.179189682006836
    5. 'range' → logprob: -10.304189682006836
    6. '.range' → logprob: -10.304189682006836
    7. '
' → logprob: -10.554189682006836
    8. '_old' → logprob: -10.804189682006836
    9. ']' → logprob: -11.304189682006836
    10. ' old' → logprob: -11.554189682006836

Token 1024: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.00017636561824474484
    2. 'patterns' → logprob: -9.375176429748535
    3. '_lengths' → logprob: -10.000176429748535
    4. '
' → logprob: -11.750176429748535
    5. 'Patterns' → logprob: -12.125176429748535
    6. '```' → logprob: -12.250176429748535
    7. '           ' → logprob: -12.250176429748535
    8. '       ' → logprob: -12.750176429748535
    9. 'len' → logprob: -13.125176429748535
    10. ')' → logprob: -13.250176429748535

Token 1025: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016283389180898666
    2. '       ' → logprob: -4.1412835121154785
    3. ' ]' → logprob: -8.76628303527832
    4. ')' → logprob: -10.26628303527832
    5. '<|end|>' → logprob: -10.64128303527832
    6. '
' → logprob: -11.76628303527832
    7. ')]' → logprob: -11.89128303527832
    8. ']
' → logprob: -12.51628303527832
    9. '<|end|>' → logprob: -13.01628303527832
    10. '   ' → logprob: -13.14128303527832

Token 1026: '       ' (ID: 309)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.40711709856987
    2. '       ' → logprob: -1.5321171283721924
    3. 'result' → logprob: -2.1571171283721924
    4. 'combined' → logprob: -6.657116889953613
    5. '```' → logprob: -8.032116889953613
    6. 'merge' → logprob: -8.282116889953613
    7. '#' → logprob: -8.532116889953613
    8. '
' → logprob: -8.907116889953613
    9. '        
' → logprob: -9.282116889953613
    10. 'for' → logprob: -9.407116889953613

Token 1027: ' #' (ID: 1069)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.047819774597883224
    2. 'result' → logprob: -3.1728198528289795
    3. 'combined' → logprob: -5.7978196144104
    4. 'max' → logprob: -7.0478196144104
    5. 'if' → logprob: -7.9228196144104
    6. '#' (adapté à ' #') → logprob: -8.422820091247559
    7. 'bit' → logprob: -9.547820091247559
    8. '   ' → logprob: -9.672820091247559
    9. '       ' → logprob: -10.047820091247559
    10. 'final' → logprob: -10.047820091247559

Token 1028: ' Fusion' (ID: 70618)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.06717580556869507
    2. 'result' → logprob: -2.81717586517334
    3. 'combined' → logprob: -5.31717586517334
    4. '#' → logprob: -9.56717586517334
    5. 'if' → logprob: -9.69217586517334
    6. '       ' → logprob: -9.69217586517334
    7. '   ' → logprob: -10.44217586517334
    8. 'bit' → logprob: -10.69217586517334
    9. 'final' → logprob: -11.69217586517334
    10. 'max' → logprob: -11.69217586517334

Token 1029: 'ner' (ID: 1247)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006855558138340712
    2. 'ed' → logprob: -6.381855487823486
    3. 'né' → logprob: -6.881855487823486
    4. 'ated' → logprob: -7.256855487823486
    5. 'nées' → logprob: -7.256855487823486
    6. 'n' → logprob: -7.381855487823486
    7. 'result' → logprob: -7.756855487823486
    8. 'nés' → logprob: -7.881855487823486
    9. 'merged' → logprob: -8.381855964660645
    10. '#' → logprob: -8.631855964660645

Token 1030: ' les' (ID: 1341)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.5319726467132568
    2. '       ' → logprob: -1.5319726467132568
    3. 'result' → logprob: -1.6569726467132568
    4. 'combined' → logprob: -5.281972885131836
    5. 'f' → logprob: -7.656972885131836
    6. 'fusion' → logprob: -9.906972885131836
    7. 'final' → logprob: -10.531972885131836
    8. '
' → logprob: -10.781972885131836
    9. ' merged' → logprob: -10.906972885131836
    10. '#' → logprob: -11.656972885131836

Token 1031: ' sons' (ID: 35937)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3862385153770447
    2. 'merged' → logprob: -1.6362385749816895
    3. 'for' → logprob: -3.2612385749816895
    4. 'combined' → logprob: -3.3862385749816895
    5. 'tokens' → logprob: -4.2612385749816895
    6. 'symbols' → logprob: -4.5112385749816895
    7. 'rés' → logprob: -5.1362385749816895
    8. 'results' → logprob: -6.0112385749816895
    9. 's' → logprob: -6.3862385749816895
    10. ' result' → logprob: -6.3862385749816895

Token 1032: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03015274368226528
    2. 'merged' → logprob: -3.9051527976989746
    3. 'result' → logprob: -5.155152797698975
    4. ':' → logprob: -6.905152797698975
    5. ' merged' → logprob: -7.155152797698975
    6. 'combined' → logprob: -7.655152797698975
    7. ',' → logprob: -7.905152797698975
    8. ' result' → logprob: -8.030152320861816
    9. ' =' → logprob: -8.530152320861816
    10. ' combined' → logprob: -8.905152320861816

Token 1033: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9332718253135681
    2. 'index' → logprob: -1.058271884918213
    3. 'position' → logprob: -1.933271884918213
    4. 'pos' → logprob: -3.558271884918213
    5. 't' → logprob: -4.308271884918213
    6. 'idx' → logprob: -4.433271884918213
    7. 'positions' → logprob: -4.433271884918213
    8. 'zip' → logprob: -5.058271884918213
    9. 'time' → logprob: -5.183271884918213
    10. '[' → logprob: -5.308271884918213

Token 1034: ' tempore' (ID: 112911)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04651831090450287
    2. 'merged' → logprob: -3.171518325805664
    3. 'result' → logprob: -5.796518325805664
    4. ' merged' → logprob: -8.796518325805664
    5. 'combined' → logprob: -9.171518325805664
    6. ',' → logprob: -9.421518325805664
    7. ':' → logprob: -10.796518325805664
    8. ' result' → logprob: -11.046518325805664
    9. 'final' → logprob: -11.171518325805664
    10. '```' → logprob: -11.546518325805664

Token 1035: 'lle' (ID: 22088)
  Prédit: 'nelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nelle' → logprob: -0.09522995352745056
    2. '       ' → logprob: -2.9702298641204834
    3. 'nel' → logprob: -4.7202301025390625
    4. '           ' → logprob: -5.0952301025390625
    5. 'ion' → logprob: -5.2202301025390625
    6. 'n' → logprob: -5.7202301025390625
    7. 'el' → logprob: -5.9702301025390625
    8. 'elle' → logprob: -5.9702301025390625
    9. 'position' → logprob: -5.9702301025390625
    10. 'né' → logprob: -6.5952301025390625

Token 1036: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.176903635263443
    2. 'merged' → logprob: -2.05190372467041
    3. 'result' → logprob: -3.42690372467041
    4. ' merged' → logprob: -7.80190372467041
    5. 'combined' → logprob: -8.67690372467041
    6. ' result' → logprob: -8.92690372467041
    7. ',' → logprob: -9.17690372467041
    8. '
' → logprob: -9.30190372467041
    9. 'final' → logprob: -10.17690372467041
    10. 'results' → logprob: -10.30190372467041

Token 1037: ' bit' (ID: 3546)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.05403321981430054
    2. 'result' → logprob: -3.1790332794189453
    3. '       ' → logprob: -4.679033279418945
    4. ' merged' → logprob: -6.679033279418945
    5. ' result' → logprob: -8.804033279418945
    6. '
' → logprob: -8.804033279418945
    7. 'combined' → logprob: -9.304033279418945
    8. 'for' → logprob: -11.429033279418945
    9. 'results' → logprob: -11.929033279418945
    10. '```' → logprob: -12.304033279418945

Token 1038: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.09062238037586212
    2. '|' → logprob: -2.8406224250793457
    3. '_or' → logprob: -4.965622425079346
    4. 's' → logprob: -5.715622425079346
    5. 'OR' → logprob: -5.840622425079346
    6. ' OR' → logprob: -6.215622425079346
    7. '   ' → logprob: -6.340622425079346
    8. '       ' → logprob: -6.340622425079346
    9. '=' → logprob: -6.715622425079346
    10. '           ' → logprob: -6.840622425079346

Token 1039: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.6133977174758911
    2. 'or' → logprob: -0.8633977174758911
    3. '_or' → logprob: -3.6133975982666016
    4. ' OR' → logprob: -4.988397598266602
    5. '|' → logprob: -6.238397598266602
    6. ' or' → logprob: -7.613397598266602
    7. '_OR' → logprob: -8.238397598266602
    8. ''or' → logprob: -9.238397598266602
    9. '-or' → logprob: -9.488397598266602
    10. 'ors' → logprob: -10.613397598266602

Token 1040: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012385442852973938
    2. 'result' → logprob: -5.512385368347168
    3. '
' → logprob: -6.262385368347168
    4. ',' → logprob: -6.387385368347168
    5. ' result' → logprob: -6.512385368347168
    6. ' =' → logprob: -7.137385368347168
    7. '=' → logprob: -7.387385368347168
    8. ':' → logprob: -7.762385368347168
    9. ' of' → logprob: -8.262385368347168
    10. 's' → logprob: -8.262385368347168

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007671024068258703
    2. 'merged' → logprob: -7.500767230987549
    3. 'result' → logprob: -8.50076675415039
    4. ' merged' → logprob: -12.12576675415039
    5. '
' → logprob: -13.25076675415039
    6. ' result' → logprob: -13.87576675415039
    7. 'combined' → logprob: -14.00076675415039
    8. '           ' → logprob: -14.62576675415039
    9. '        
' → logprob: -14.75076675415039
    10. '```' → logprob: -15.75076675415039

Token 1042: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' (adapté à ' merged') → logprob: -0.011220998130738735
    2. '       ' → logprob: -4.761220932006836
    3. 'result' → logprob: -6.136220932006836
    4. ' merged' → logprob: -7.886220932006836
    5. 'combined' → logprob: -10.136220932006836
    6. 'f' → logprob: -11.261220932006836
    7. ' result' → logprob: -11.761220932006836
    8. '
' → logprob: -13.886220932006836
    9. 'final' → logprob: -14.011220932006836
    10. '   ' → logprob: -14.886220932006836

Token 1043: '_pattern' (ID: 50002)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6301906108856201
    2. '_pattern' → logprob: -1.1301906108856201
    3. '_values' → logprob: -2.13019061088562
    4. '_result' → logprob: -4.755190849304199
    5. '_s' → logprob: -4.755190849304199
    6. '=' → logprob: -6.005190849304199
    7. '_sound' → logprob: -6.630190849304199
    8. '_patterns' → logprob: -6.880190849304199
    9. '_vals' → logprob: -7.130190849304199
    10. 's' → logprob: -7.255190849304199

Token 1044: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132726848125458
    2. ' =' → logprob: -1.3132727146148682
    3. '       ' → logprob: -12.313272476196289
    4. '=[]' → logprob: -12.938272476196289
    5. ':' → logprob: -13.438272476196289
    6. '   ' → logprob: -13.938272476196289
    7. '=[' → logprob: -13.938272476196289
    8. '=[]
' → logprob: -15.063272476196289
    9. 's' → logprob: -16.31327247619629
    10. ' ' → logprob: -16.56327247619629

Token 1045: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06235158443450928
    2. '[]' → logprob: -2.812351703643799
    3. '[]
' → logprob: -8.31235122680664
    4. '[int' → logprob: -9.31235122680664
    5. '[
' → logprob: -10.43735122680664
    6. ' [' → logprob: -12.31235122680664
    7. '[]

' → logprob: -13.18735122680664
    8. '[x' → logprob: -13.31235122680664
    9. '[len' → logprob: -14.06235122680664
    10. '[s' → logprob: -14.06235122680664

Token 1046: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.058945655822754
    2. ' for' → logprob: -1.058945655822754
    3. 'for' → logprob: -1.183945655822754
    4. '	for' → logprob: -9.183945655822754
    5. '[' → logprob: -9.433945655822754
    6. '           ' → logprob: -9.933945655822754
    7. '   ' → logprob: -11.058945655822754
    8. '	' → logprob: -12.058945655822754
    9. ',' → logprob: -12.558945655822754
    10. ' in' → logprob: -12.933945655822754

Token 1047: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00013357517309486866
    2. '       ' → logprob: -9.000133514404297
    3. ' for' → logprob: -11.500133514404297
    4. '	for' → logprob: -17.500133514404297
    5. '
' → logprob: -19.625133514404297
    6. '   ' → logprob: -20.625133514404297
    7. '           ' → logprob: -20.625133514404297
    8. '```' → logprob: -20.625133514404297
    9. ' ' → logprob: -21.500133514404297
    10. 'from' → logprob: -21.500133514404297

Token 1048: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03079267591238022
    2. 'pos' → logprob: -3.530792713165283
    3. 'idx' → logprob: -6.905792713165283
    4. 't' → logprob: -10.655792236328125
    5. ' i' → logprob: -12.030792236328125
    6. 'position' → logprob: -12.155792236328125
    7. 'index' → logprob: -13.280792236328125
    8. 'time' → logprob: -13.780792236328125
    9. 'positions' → logprob: -13.780792236328125
    10. ' pos' → logprob: -15.405792236328125

Token 1049: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10022759437561035
    2. 'in' → logprob: -2.3502275943756104
    3. ',' → logprob: -11.225227355957031
    4. ' ' → logprob: -13.225227355957031
    5. 'import' → logprob: -13.725227355957031
    6. '        ' → logprob: -14.100227355957031
    7. ')' → logprob: -14.350227355957031
    8. ' ,' → logprob: -14.725227355957031
    9. '_in' → logprob: -14.975227355957031
    10. '	in' → logprob: -15.225227355957031

Token 1050: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.451116051815916e-05
    2. ' range' → logprob: -10.625024795532227
    3. '0' → logprob: -17.250024795532227
    4. '   ' → logprob: -17.625024795532227
    5. ' ' → logprob: -17.875024795532227
    6. '
' → logprob: -18.375024795532227
    7. '  ' → logprob: -19.750024795532227
    8. '	range' → logprob: -19.875024795532227
    9. '```' → logprob: -20.500024795532227
    10. '(range' → logprob: -20.625024795532227

Token 1051: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3237035274505615
    2. 'l' → logprob: -1.3237035274505615
    3. ' l' → logprob: -5.073703765869141
    4. '(' → logprob: -5.573703765869141
    5. ' (' → logprob: -8.82370376586914
    6. '(len' → logprob: -8.94870376586914
    7. '(
' → logprob: -11.07370376586914
    8. 'len' → logprob: -11.44870376586914
    9. '0' → logprob: -11.44870376586914
    10. '	l' → logprob: -12.57370376586914

Token 1052: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35286447405815125
    2. '):
' → logprob: -1.6028645038604736
    3. ')' → logprob: -2.3528645038604736
    4. '       ' → logprob: -7.7278642654418945
    5. '):
' → logprob: -8.352864265441895
    6. '   ' → logprob: -9.102864265441895
    7. ':' → logprob: -10.102864265441895
    8. ' ):' → logprob: -10.727864265441895
    9. '           ' → logprob: -11.477864265441895
    10. ' )' → logprob: -11.602864265441895

Token 1053: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001251538866199553
    2. ' combined' → logprob: -7.751251697540283
    3. 'merged' → logprob: -7.876251697540283
    4. 'combined' → logprob: -8.751251220703125
    5. ' merged' → logprob: -9.751251220703125
    6. 'result' → logprob: -10.126251220703125
    7. 'bits' → logprob: -10.376251220703125
    8. 'value' → logprob: -10.376251220703125
    9. 'sum' → logprob: -10.376251220703125
    10. ' sum' → logprob: -11.501251220703125

Token 1054: ' combined' (ID: 15890)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.3011488914489746
    2. 'combined' (adapté à ' combined') → logprob: -1.9261488914489746
    3. 'value' → logprob: -2.6761488914489746
    4. 'val' → logprob: -3.8011488914489746
    5. '           ' → logprob: -4.926148891448975
    6. 'or' → logprob: -5.551148891448975
    7. 'pos' → logprob: -6.176148891448975
    8. 'merge' → logprob: -6.301148891448975
    9. 'bit' → logprob: -6.301148891448975
    10. ' merged' → logprob: -6.301148891448975

Token 1055: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4211379587650299
    2. '_value' → logprob: -1.6711379289627075
    3. ' =' → logprob: -1.9211379289627075
    4. '_val' → logprob: -5.421137809753418
    5. '_sound' → logprob: -5.421137809753418
    6. 'value' → logprob: -8.671137809753418
    7. '_byte' → logprob: -9.171137809753418
    8. 'sound' → logprob: -10.546137809753418
    9. 'val' → logprob: -11.296137809753418
    10. '_symbol' → logprob: -11.421137809753418

Token 1056: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -10.500028610229492
    3. '           ' → logprob: -14.375028610229492
    4. '   ' → logprob: -17.000028610229492
    5. 'expanded' → logprob: -18.125028610229492
    6. '               ' → logprob: -18.250028610229492
    7. '۰' → logprob: -18.812528610229492
    8. 'sum' → logprob: -19.000028610229492
    9. '         ' → logprob: -19.000028610229492
    10. '       ' → logprob: -19.250028610229492

Token 1057: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'expanded' → logprob: -17.25
    4. 'sum' → logprob: -17.75
    5. 'combined' → logprob: -18.875
    6. '000' → logprob: -19.375
    7. '   ' → logprob: -19.75
    8. '۰' → logprob: -20.375
    9. '  ' → logprob: -20.625
    10. '
' → logprob: -20.6875

Token 1058: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4029305577278137
    2. '
' → logprob: -1.152930498123169
    3. '<|end|>' → logprob: -4.527930736541748
    4. '            ' → logprob: -6.527930736541748
    5. 'for' → logprob: -7.402930736541748
    6. '
' → logprob: -7.402930736541748
    7. ' ' → logprob: -7.777930736541748
    8. ' 
' → logprob: -7.902930736541748
    9. ' for' → logprob: -8.02793025970459
    10. '  
' → logprob: -8.15293025970459

Token 1059: '           ' (ID: 352)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.8420044779777527
    2. ' |' → logprob: -1.3420045375823975
    3. '
' → logprob: -1.7170045375823975
    4. '<|end|>' → logprob: -3.0920045375823975
    5. '           ' → logprob: -3.2170045375823975
    6. ' ' → logprob: -4.342004299163818
    7. ' |=' → logprob: -4.342004299163818
    8. ' 
' → logprob: -5.467004299163818
    9. '            ' → logprob: -5.967004299163818
    10. ' |
' → logprob: -6.092004299163818

Token 1060: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008821024559438229
    2. ' for' → logprob: -4.7588210105896
    3. '           ' → logprob: -8.508821487426758
    4. '               ' → logprob: -12.508821487426758
    5. '	for' → logprob: -14.008821487426758
    6. '   ' → logprob: -17.133821487426758
    7. '		' → logprob: -17.508821487426758
    8. '                   ' → logprob: -17.633821487426758
    9. '            ' → logprob: -17.758821487426758
    10. '	       ' → logprob: -17.758821487426758

Token 1061: ' pat' (ID: 2506)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.06188354268670082
    2. 'pat' → logprob: -3.0618834495544434
    3. 'p' → logprob: -4.436883449554443
    4. 'ep' → logprob: -7.436883449554443
    5. 'expanded' → logprob: -7.936883449554443
    6. 'exp' → logprob: -8.311883926391602
    7. 'patterns' → logprob: -9.186883926391602
    8. 'old' → logprob: -9.811883926391602
    9. ' pattern' → logprob: -11.311883926391602
    10. ' pat' → logprob: -11.686883926391602

Token 1062: '_s' (ID: 1278)
  Prédit: 'tern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tern' → logprob: -0.0026200124993920326
    2. 't' → logprob: -6.502620220184326
    3. ' in' → logprob: -7.502620220184326
    4. '[i' → logprob: -8.502619743347168
    5. '[' → logprob: -8.877619743347168
    6. 'ern' → logprob: -9.502619743347168
    7. 'ter' → logprob: -10.127619743347168
    8. 'in' → logprob: -10.752619743347168
    9. 'TERN' → logprob: -10.877619743347168
    10. 'te' → logprob: -11.127619743347168

Token 1063: 'ounds' (ID: 4795)
  Prédit: 'ymbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ymbol' → logprob: -0.46614012122154236
    2. 'y' → logprob: -2.091140031814575
    3. 'ym' → logprob: -2.216140031814575
    4. 'eq' → logprob: -2.716140031814575
    5. 'e' → logprob: -2.966140031814575
    6. 't' → logprob: -5.466140270233154
    7. '[' → logprob: -6.091140270233154
    8. '=' → logprob: -6.591140270233154
    9. 'tr' → logprob: -6.716140270233154
    10. 'ty' → logprob: -6.716140270233154

Token 1064: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03407324478030205
    2. 'in' → logprob: -3.4090733528137207
    3. '[in' → logprob: -8.034072875976562
    4. '[' → logprob: -10.159072875976562
    5. '[i' → logprob: -10.534072875976562
    6. ' ' → logprob: -12.159072875976562
    7. 's' → logprob: -12.284072875976562
    8. '	in' → logprob: -12.409072875976562
    9. '   ' → logprob: -13.034072875976562
    10. '_in' → logprob: -13.034072875976562

Token 1065: ' expanded' (ID: 28044)
  Prédit: 'expanded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expanded' → logprob: -0.0004309076175559312
    2. ' expanded' → logprob: -7.750431060791016
    3. '           ' → logprob: -16.000431060791016
    4. 'extended' → logprob: -16.375431060791016
    5. 'expand' → logprob: -18.875431060791016
    6. '   ' → logprob: -19.000431060791016
    7. '       ' → logprob: -19.750431060791016
    8. '[' → logprob: -19.875431060791016
    9. 'updated' → logprob: -20.375431060791016
    10. '               ' → logprob: -20.500431060791016

Token 1066: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.004640999715775251
    2. 'patterns' → logprob: -5.379641056060791
    3. 'attern' → logprob: -12.129640579223633
    4. '
' → logprob: -12.254640579223633
    5. '[' → logprob: -12.629640579223633
    6. '_pattern' → logprob: -12.754640579223633
    7. 's' → logprob: -13.879640579223633
    8. '           ' → logprob: -14.254640579223633
    9. '```' → logprob: -15.379640579223633
    10. '[i' → logprob: -15.379640579223633

Token 1067: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21202385425567627
    2. ':' → logprob: -1.7120238542556763
    3. '               ' → logprob: -4.587023735046387
    4. '           ' → logprob: -8.587023735046387
    5. '[' → logprob: -9.837023735046387
    6. '):
' → logprob: -10.212023735046387
    7. '[i' → logprob: -10.337023735046387
    8. ':

' → logprob: -11.462023735046387
    9. '              ' → logprob: -11.837023735046387
    10. ' :
' → logprob: -11.837023735046387

Token 1068: '               ' (ID: 506)
  Prédit: ' combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combined' → logprob: -0.48035281896591187
    2. '               ' → logprob: -1.2303528785705566
    3. 'combined' → logprob: -2.7303528785705566
    4. '           ' → logprob: -3.7303528785705566
    5. '(com' → logprob: -10.855352401733398
    6. '[' → logprob: -11.855352401733398
    7. '                   ' → logprob: -11.980352401733398
    8. ' ' → logprob: -12.230352401733398
    9. '            ' → logprob: -12.355352401733398
    10. '```' → logprob: -12.480352401733398

Token 1069: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.3872637152671814
    2. ' combined' → logprob: -1.1372637748718262
    3. '               ' → logprob: -8.137263298034668
    4. '                   ' → logprob: -10.012263298034668
    5. '           ' → logprob: -10.387263298034668
    6. '            ' → logprob: -11.387263298034668
    7. '                ' → logprob: -12.387263298034668
    8. '```' → logprob: -12.387263298034668
    9. '_comb' → logprob: -14.137263298034668
    10. '                    ' → logprob: -14.637263298034668

Token 1070: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.011060554534196854
    2. ' |=' → logprob: -4.51106071472168
    3. '|=
' → logprob: -11.76106071472168
    4. '=' → logprob: -12.26106071472168
    5. ' |' → logprob: -16.63606071472168
    6. ' =' → logprob: -16.88606071472168
    7. '|`
' → logprob: -17.01106071472168
    8. '|
' → logprob: -17.26106071472168
    9. '```' → logprob: -17.51106071472168
    10. '│' → logprob: -17.63606071472168

Token 1071: ' pat' (ID: 2506)
  Prédit: 'pat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pat' → logprob: -2.15310683415737e-05
    2. ' pat' → logprob: -10.750021934509277
    3. 'Pat' → logprob: -21.00002098083496
    4. '_pat' → logprob: -22.00002098083496
    5. 'p' → logprob: -22.75002098083496
    6. 'pot' → logprob: -23.50002098083496
    7. ' ' → logprob: -23.87502098083496
    8. 'pit' → logprob: -23.87502098083496
    9. 'pet' → logprob: -24.37502098083496
    10. '   ' → logprob: -24.37502098083496

Token 1072: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00013405199570115656
    2. 'at' → logprob: -9.250134468078613
    3. 'attern' → logprob: -11.250134468078613
    4. 's' → logprob: -11.500134468078613
    5. 'pat' → logprob: -11.750134468078613
    6. '_patterns' → logprob: -13.125134468078613
    7. 'sounds' → logprob: -13.375134468078613
    8. 'att' → logprob: -14.750134468078613
    9. 't' → logprob: -14.750134468078613
    10. 'Sounds' → logprob: -15.000134468078613

Token 1073: 'ounds' (ID: 4795)
  Prédit: 'ounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounds' → logprob: -0.00038419815246015787
    2. 'onds' → logprob: -8.125384330749512
    3. '[' → logprob: -10.875384330749512
    4. '[i' → logprob: -11.250384330749512
    5. 'sounds' → logprob: -11.625384330749512
    6. 'o' → logprob: -11.750384330749512
    7. '_' → logprob: -12.125384330749512
    8. 'unds' → logprob: -12.250384330749512
    9. 'inds' → logprob: -12.625384330749512
    10. 'oud' → logprob: -12.750384330749512

Token 1074: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. '[
' → logprob: -14.750003814697266
    4. ' [' → logprob: -16.000003814697266
    5. '```' → logprob: -17.750003814697266
    6. 'i' → logprob: -18.125003814697266
    7. '[I' → logprob: -18.500003814697266
    8. '
' → logprob: -19.750003814697266
    9. '(i' → logprob: -19.875003814697266
    10. '\[' → logprob: -20.250003814697266

Token 1075: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05243666470050812
    2. '<|end|>' → logprob: -3.552436590194702
    3. ']
' → logprob: -4.302436828613281
    4. ')' → logprob: -5.552436828613281
    5. '           ' → logprob: -5.677436828613281
    6. '<|end|>' → logprob: -6.927436828613281
    7. '       ' → logprob: -9.177436828613281
    8. ' ]' → logprob: -9.427436828613281
    9. '']' → logprob: -9.552436828613281
    10. '
' → logprob: -9.802436828613281

Token 1076: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007183883571997285
    2. '
' → logprob: -7.500718593597412
    3. '       ' → logprob: -8.875718116760254
    4. '   ' → logprob: -12.250718116760254
    5. '          ' → logprob: -12.500718116760254
    6. '		' → logprob: -13.000718116760254
    7. ' 
' → logprob: -13.250718116760254
    8. '               ' → logprob: -13.500718116760254
    9. '         ' → logprob: -13.500718116760254
    10. '            
' → logprob: -13.625718116760254

Token 1077: ' merged' (ID: 49536)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00395539402961731
    2. 'if' → logprob: -6.253955364227295
    3. ' if' → logprob: -6.378955364227295
    4. '       ' → logprob: -9.003955841064453
    5. '   ' → logprob: -9.753955841064453
    6. 'merged' (adapté à ' merged') → logprob: -10.128955841064453
    7. '```' → logprob: -10.503955841064453
    8. ' ' → logprob: -10.503955841064453
    9. '#' → logprob: -10.878955841064453
    10. '
' → logprob: -12.003955841064453

Token 1078: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.002949889749288559
    2. '.append' → logprob: -5.8779497146606445
    3. '=' → logprob: -10.127949714660645
    4. 'pattern' → logprob: -10.252949714660645
    5. '_comb' → logprob: -11.002949714660645
    6. '_' → logprob: -11.127949714660645
    7. '_pat' → logprob: -11.252949714660645
    8. ' =' → logprob: -12.002949714660645
    9. 'append' → logprob: -12.377949714660645
    10. '_append' → logprob: -12.752949714660645

Token 1079: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007410150719806552
    2. '.' → logprob: -7.250741004943848
    3. 'append' → logprob: -10.500741004943848
    4. '.app' → logprob: -14.125741004943848
    5. '_append' → logprob: -14.250741004943848
    6. '.ap' → logprob: -14.375741004943848
    7. '.Append' → logprob: -14.750741004943848
    8. '.extend' → logprob: -15.000741004943848
    9. ' append' → logprob: -15.375741004943848
    10. 'Append' → logprob: -15.375741004943848

Token 1080: '(com' (ID: 27868)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combined' → logprob: -4.584861744660884e-05
    2. ' combined' → logprob: -10.000045776367188
    3. 'Hex' → logprob: -14.750045776367188
    4. ' Hex' → logprob: -18.875045776367188
    5. 'comb' → logprob: -21.375045776367188
    6. 'Combined' → logprob: -21.500045776367188
    7. 'merged' → logprob: -22.125045776367188
    8. '0' → logprob: -22.125045776367188
    9. 'int' → logprob: -22.375045776367188
    10. '
' → logprob: -22.625045776367188

Token 1081: 'bined' (ID: 172357)
  Prédit: 'ined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ined' → logprob: -0.31334537267684937
    2. 'bined' → logprob: -1.3133454322814941
    3. 'b' → logprob: -10.063344955444336
    4. 'ed' → logprob: -11.813344955444336
    5. 'combined' → logprob: -11.813344955444336
    6. '=' → logprob: -12.938344955444336
    7. 'oded' → logprob: -13.188344955444336
    8. 'erged' → logprob: -13.438344955444336
    9. 'ained' → logprob: -13.563344955444336
    10. '_comb' → logprob: -13.563344955444336

Token 1082: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02253766544163227
    2. '<|end|>' → logprob: -4.022537708282471
    3. '       ' → logprob: -6.022537708282471
    4. '
' → logprob: -6.647537708282471
    5. '<|end|>' → logprob: -7.897537708282471
    6. ')
' → logprob: -9.147537231445312
    7. ')return' → logprob: -10.397537231445312
    8. ']' → logprob: -10.522537231445312
    9. '           ' → logprob: -11.147537231445312
    10. '        
' → logprob: -11.147537231445312

Token 1083: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36255303025245667
    2. 'if' → logprob: -1.2375530004501343
    3. '
' → logprob: -4.987553119659424
    4. ' if' → logprob: -5.362553119659424
    5. '```' → logprob: -7.237553119659424
    6. 'for' → logprob: -7.362553119659424
    7. 'max' → logprob: -7.487553119659424
    8. '#' → logprob: -8.362552642822266
    9. 'return' → logprob: -9.237552642822266
    10. 'result' → logprob: -9.862552642822266

Token 1084: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.055940646678209305
    2. '#' (adapté à ' #') → logprob: -3.930940628051758
    3. 'max' → logprob: -3.930940628051758
    4. 'for' → logprob: -4.680940628051758
    5. '       ' → logprob: -5.180940628051758
    6. 'total' → logprob: -9.055940628051758
    7. 'MAX' → logprob: -10.055940628051758
    8. 'result' → logprob: -10.555940628051758
    9. 'overflow' → logprob: -11.180940628051758
    10. ' if' → logprob: -11.305940628051758

Token 1085: ' Simpl' (ID: 92258)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17721101641654968
    2. 'for' → logprob: -2.427211046218872
    3. 'max' → logprob: -3.052211046218872
    4. '#' → logprob: -3.677211046218872
    5. '       ' → logprob: -6.802210807800293
    6. 'total' → logprob: -9.177210807800293
    7. 'overflow' → logprob: -9.802210807800293
    8. 'If' → logprob: -9.927210807800293
    9. 'MAX' → logprob: -10.052210807800293
    10. ' if' → logprob: -10.177210807800293

Token 1086: 'ifier' (ID: 4550)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.37827983498573303
    2. 'if' → logprob: -1.5032798051834106
    3. 'ified' → logprob: -2.5032799243927
    4. '       ' → logprob: -5.878279685974121
    5. 'e' → logprob: -6.003279685974121
    6. 'ifié' → logprob: -6.253279685974121
    7. 'ifier' → logprob: -6.503279685974121
    8. 'ifie' → logprob: -6.628279685974121
    9. '   ' → logprob: -8.503279685974121
    10. 'ifiée' → logprob: -9.003279685974121

Token 1087: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31702205538749695
    2. '#' → logprob: -1.9420220851898193
    3. 'for' → logprob: -3.0670220851898193
    4. '       ' → logprob: -3.1920220851898193
    5. 'max' → logprob: -3.3170220851898193
    6. ' if' → logprob: -6.31702184677124
    7. 'merged' → logprob: -6.94202184677124
    8. 'total' → logprob: -8.192022323608398
    9. 'while' → logprob: -8.192022323608398
    10. ' for' → logprob: -8.567022323608398

Token 1088: ' représentation' (ID: 162614)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1836443692445755
    2. '#' → logprob: -1.808644413948059
    3. 'merged' → logprob: -6.1836442947387695
    4. 'max' → logprob: -7.4336442947387695
    5. 'for' → logprob: -8.43364429473877
    6. 'hex' → logprob: -8.68364429473877
    7. '       ' → logprob: -8.93364429473877
    8. ' if' → logprob: -9.05864429473877
    9. 'compressed' → logprob: -9.05864429473877
    10. 'unique' → logprob: -9.30864429473877

Token 1089: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038720063865184784
    2. 'if' → logprob: -4.03872013092041
    3. 'result' → logprob: -4.53872013092041
    4. '
' → logprob: -4.78872013092041
    5. 'merged' → logprob: -7.91372013092041
    6. '#' → logprob: -8.41372013092041
    7. 'final' → logprob: -8.66372013092041
    8. 'tokens' → logprob: -8.91372013092041
    9. 'max' → logprob: -9.78872013092041
    10. 'hex' → logprob: -9.91372013092041

Token 1090: ' cher' (ID: 17824)
  Prédit: 'hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hex' → logprob: -0.9769611358642578
    2. 'str' → logprob: -1.8519611358642578
    3. 'reg' → logprob: -2.351961135864258
    4. 'Hex' → logprob: -2.476961135864258
    5. '#' → logprob: -3.601961135864258
    6. 's' → logprob: -3.601961135864258
    7. 'v' → logprob: -3.726961135864258
    8. 'string' → logprob: -4.101961135864258
    9. 'tent' → logprob: -4.101961135864258
    10. 'try' → logprob: -4.226961135864258

Token 1091: 'chant' (ID: 15311)
  Prédit: 'cher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.04064808785915375
    2. 'chant' → logprob: -3.4156479835510254
    3. 'ch' → logprob: -5.290647983551025
    4. '   ' → logprob: -6.790647983551025
    5. 'ching' → logprob: -8.415648460388184
    6. 'che' → logprob: -9.165648460388184
    7. '[' → logprob: -9.165648460388184
    8. '#' → logprob: -9.540648460388184
    9. 'chent' → logprob: -9.540648460388184
    10. '(' → logprob: -9.790648460388184

Token 1092: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6390935182571411
    2. 'une' → logprob: -2.0140933990478516
    3. 'un' → logprob: -2.1390933990478516
    4. 'run' → logprob: -2.3890933990478516
    5. '   ' → logprob: -2.6390933990478516
    6. 'runs' → logprob: -2.7640933990478516
    7. 'les' → logprob: -3.0140933990478516
    8. 'la' → logprob: -3.0140933990478516
    9. 'le' → logprob: -3.1390933990478516
    10. '#' → logprob: -3.1390933990478516

Token 1093: ' motif' (ID: 72753)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.8834386467933655
    2. 'run' → logprob: -1.3834385871887207
    3. 'plus' → logprob: -1.8834385871887207
    4. 'pattern' → logprob: -2.7584385871887207
    5. 'possible' → logprob: -4.008438587188721
    6. 'max' → logprob: -4.383438587188721
    7. 'count' → logprob: -4.383438587188721
    8. 'r' → logprob: -5.133438587188721
    9. 'minimal' → logprob: -5.133438587188721
    10. 'compressed' → logprob: -5.258438587188721

Token 1094: ' minimal' (ID: 19957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37338852882385254
    2. '       ' → logprob: -1.6233885288238525
    3. 'repeat' → logprob: -3.1233885288238525
    4. 'length' → logprob: -4.123388290405273
    5. 'pattern' → logprob: -4.123388290405273
    6. 'min' → logprob: -5.123388290405273
    7. 'cycle' → logprob: -5.498388290405273
    8. 'size' → logprob: -5.498388290405273
    9. 'max' → logprob: -5.498388290405273
    10. '#' → logprob: -5.623388290405273

Token 1095: ' cycl' (ID: 27789)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06484971940517426
    2. '       ' → logprob: -3.064849615097046
    3. ' for' → logprob: -5.564849853515625
    4. 'min' → logprob: -6.064849853515625
    5. 'length' → logprob: -6.314849853515625
    6. 'pattern' → logprob: -6.564849853515625
    7. '
' → logprob: -6.564849853515625
    8. 'n' → logprob: -6.939849853515625
    9. '#' → logprob: -6.939849853515625
    10. 'size' → logprob: -7.314849853515625

Token 1096: 'ique' (ID: 2222)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1438450962305069
    2. 'ique' → logprob: -2.0188450813293457
    3. '```' → logprob: -8.143845558166504
    4. 'que' → logprob: -8.518845558166504
    5. 'ic' → logprob: -8.768845558166504
    6. '
' → logprob: -8.893845558166504
    7. 'eq' → logprob: -10.018845558166504
    8. 'er' → logprob: -10.268845558166504
    9. '``' → logprob: -10.268845558166504
    10. 'é' → logprob: -10.393845558166504

Token 1097: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01449195109307766
    2. '
' → logprob: -4.514492034912109
    3. 'for' → logprob: -6.889492034912109
    4. 'cycle' → logprob: -7.889492034912109
    5. '#' → logprob: -8.01449203491211
    6. ' for' → logprob: -8.26449203491211
    7. ',' → logprob: -8.26449203491211
    8. 'length' → logprob: -8.76449203491211
    9. 'def' → logprob: -8.76449203491211
    10. '(' → logprob: -8.88949203491211

Token 1098: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025288527831435204
    2. '
' → logprob: -3.7752885818481445
    3. 'for' → logprob: -6.9002885818481445
    4. 'def' → logprob: -7.2752885818481445
    5. '#' → logprob: -9.400288581848145
    6. ' for' → logprob: -9.525288581848145
    7. 'pattern' → logprob: -9.650288581848145
    8. '```' → logprob: -10.150288581848145
    9. '        
' → logprob: -10.525288581848145
    10. 'length' → logprob: -11.150288581848145

Token 1099: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9502759575843811
    2. 'for' → logprob: -0.9502759575843811
    3. ' for' → logprob: -2.8252758979797363
    4. '       ' → logprob: -2.9502758979797363
    5. 'pattern' → logprob: -3.4502758979797363
    6. 'min' → logprob: -3.9502758979797363
    7. '
' → logprob: -4.200275897979736
    8. ' minimal' → logprob: -4.450275897979736
    9. '#' (adapté à ' #') → logprob: -4.825275897979736
    10. 'cycle' → logprob: -5.075275897979736

Token 1100: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04121702164411545
    2. 'def' → logprob: -3.541217088699341
    3. '       ' → logprob: -4.791216850280762
    4. 'min' → logprob: -6.166216850280762
    5. 'max' → logprob: -8.166216850280762
    6. 'pattern' → logprob: -8.416216850280762
    7. 'minimal' → logprob: -8.666216850280762
    8. 'n' → logprob: -8.791216850280762
    9. ' for' → logprob: -9.416216850280762
    10. '#' → logprob: -9.666216850280762

Token 1101: ' produire' (ID: 107823)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.508940577507019
    2. 'i' → logprob: -1.383940577507019
    3. 'length' → logprob: -3.0089406967163086
    4. 'period' → logprob: -3.7589406967163086
    5. 'cycle' → logprob: -3.8839406967163086
    6. 'pattern' → logprob: -4.508940696716309
    7. 'n' → logprob: -4.758940696716309
    8. 'k' → logprob: -4.758940696716309
    9. 'm' → logprob: -5.008940696716309
    10. 'min' → logprob: -6.008940696716309

Token 1102: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8758070468902588
    2. 'size' → logprob: -1.2508070468902588
    3. 'length' → logprob: -2.500807046890259
    4. 'pattern' → logprob: -2.875807046890259
    5. 'cycle' → logprob: -3.750807046890259
    6. ' i' → logprob: -4.00080680847168
    7. ' size' → logprob: -4.25080680847168
    8. 'min' → logprob: -4.62580680847168
    9. ' cycle' → logprob: -4.62580680847168
    10. ' length' → logprob: -4.62580680847168

Token 1103: ' sortie' (ID: 52761)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8491206765174866
    2. 'pattern' → logprob: -1.3491206169128418
    3. 'i' → logprob: -2.349120616912842
    4. 'merged' → logprob: -3.349120616912842
    5. 'minimal' → logprob: -3.474120616912842
    6. 'n' → logprob: -3.974120616912842
    7. 'm' → logprob: -3.974120616912842
    8. 'def' → logprob: -4.599120616912842
    9. 'len' → logprob: -4.724120616912842
    10. 'for' → logprob: -4.849120616912842

Token 1104: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35300183296203613
    2. '       ' → logprob: -1.2280018329620361
    3. ' for' → logprob: -5.603001594543457
    4. '
' → logprob: -7.853001594543457
    5. 'def' → logprob: -8.603001594543457
    6. 'n' → logprob: -9.353001594543457
    7. 'min' → logprob: -9.728001594543457
    8. '#' → logprob: -9.978001594543457
    9. '   ' → logprob: -10.603001594543457
    10. 'pattern' → logprob: -10.853001594543457

Token 1105: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5459352135658264
    2. 'merged' → logprob: -1.6709351539611816
    3. 'ng' → logprob: -2.4209351539611816
    4. 'st' → logprob: -3.5459351539611816
    5. 'pattern' → logprob: -3.7959351539611816
    6. 'me' → logprob: -3.7959351539611816
    7. 'mé' → logprob: -4.795935153961182
    8. 'long' → logprob: -5.295935153961182
    9. 'né' → logprob: -5.670935153961182
    10. 'ength' → logprob: -5.920935153961182

Token 1106: ' courte' (ID: 130258)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.43399301171302795
    2. 'cour' → logprob: -1.1839929819107056
    3. ' courte' → logprob: -3.808993101119995
    4. 'court' → logprob: -4.683992862701416
    5. 'import' → logprob: -5.308992862701416
    6. '```' → logprob: -5.933992862701416
    7. 'long' → logprob: -6.433992862701416
    8. 'simple' → logprob: -6.933992862701416
    9. 'compact' → logprob: -7.058992862701416
    10. '
' → logprob: -7.433992862701416

Token 1107: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0350286103785038
    2. '
' → logprob: -3.5350286960601807
    3. 'for' → logprob: -5.410028457641602
    4. 'def' → logprob: -7.785028457641602
    5. '#' → logprob: -8.910028457641602
    6. ' for' → logprob: -9.035028457641602
    7. 'n' → logprob: -10.285028457641602
    8. ',' → logprob: -10.785028457641602
    9. 'length' → logprob: -11.035028457641602
    10. 'pattern' → logprob: -11.160028457641602

Token 1108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2972094714641571
    2. '
' → logprob: -1.4222095012664795
    3. 'for' → logprob: -4.2972092628479
    4. 'def' → logprob: -6.5472092628479
    5. ' for' → logprob: -7.5472092628479
    6. '#' → logprob: -9.172209739685059
    7. 'pattern' → logprob: -9.672209739685059
    8. 'n' → logprob: -9.797209739685059
    9. 'length' → logprob: -10.047209739685059
    10. '```' → logprob: -10.672209739685059

Token 1109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009568843059241772
    2. '
' → logprob: -5.259568691253662
    3. 'for' → logprob: -5.634568691253662
    4. 'n' → logprob: -8.38456916809082
    5. ' for' → logprob: -8.88456916809082
    6. 'pattern' → logprob: -9.00956916809082
    7. 'length' → logprob: -9.13456916809082
    8. 'def' → logprob: -9.50956916809082
    9. '```' → logprob: -10.50956916809082
    10. '   ' → logprob: -10.88456916809082

Token 1110: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0416841059923172
    2. 'for' → logprob: -3.291684150695801
    3. 'n' → logprob: -7.041684150695801
    4. 'def' → logprob: -7.166684150695801
    5. '
' → logprob: -7.291684150695801
    6. ' for' → logprob: -7.416684150695801
    7. 'pattern' → logprob: -7.916684150695801
    8. 'length' → logprob: -8.5416841506958
    9. '   ' → logprob: -10.2916841506958
    10. '```' → logprob: -10.5416841506958

Token 1111: '_pattern' (ID: 50002)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0464574359357357
    2. '_pattern' → logprob: -3.421457529067993
    3. '_len' → logprob: -4.921457290649414
    4. '_cycle' → logprob: -5.296457290649414
    5. '_period' → logprob: -9.046457290649414
    6. '_repeat' → logprob: -9.296457290649414
    7. ' =' → logprob: -10.171457290649414
    8. 'length' → logprob: -10.171457290649414
    9. '_size' → logprob: -10.296457290649414
    10. '=' → logprob: -10.296457290649414

Token 1112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2068590670824051
    2. '=' → logprob: -1.7068591117858887
    3. '=[]' → logprob: -5.956859111785889
    4. '_length' → logprob: -6.206859111785889
    5. '=[]
' → logprob: -8.45685863494873
    6. '_len' → logprob: -8.45685863494873
    7. ':' → logprob: -8.58185863494873
    8. '   ' → logprob: -10.20685863494873
    9. 'length' → logprob: -10.33185863494873
    10. ',' → logprob: -10.58185863494873

Token 1113: ' self' (ID: 1051)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.007584982551634312
    2. '[]' → logprob: -5.132585048675537
    3. '[]
' → logprob: -7.132585048675537
    4. '[' → logprob: -7.757585048675537
    5. 'None' → logprob: -8.007584571838379
    6. ' merged' → logprob: -9.882584571838379
    7. '[]

' → logprob: -10.757584571838379
    8. ' []' → logprob: -11.632584571838379
    9. '   ' → logprob: -12.132584571838379
    10. ' [' → logprob: -13.632584571838379

Token 1114: '.min' (ID: 8649)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.04298434779047966
    2. '.m' → logprob: -3.5429842472076416
    3. 'def' → logprob: -5.167984485626221
    4. '.merge' → logprob: -6.542984485626221
    5. '
' → logprob: -6.792984485626221
    6. 'merge' → logprob: -7.417984485626221
    7. ' merged' → logprob: -7.542984485626221
    8. '.' → logprob: -7.667984485626221
    9. 'minimal' → logprob: -7.792984485626221
    10. '_pattern' → logprob: -7.917984485626221

Token 1115: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -2.696889623621246e-06
    2. 'mal' → logprob: -13.25000286102295
    3. 'imum' → logprob: -14.37500286102295
    4. 'imize' → logprob: -15.62500286102295
    5. '_cycle' → logprob: -16.375001907348633
    6. 'inal' → logprob: -17.125001907348633
    7. 'ial' → logprob: -17.375001907348633
    8. 'imals' → logprob: -17.625001907348633
    9. 'IMAL' → logprob: -18.000001907348633
    10. '
' → logprob: -18.125001907348633

Token 1116: '_c' (ID: 1303)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.013023043051362038
    2. '_cycle' → logprob: -4.3880228996276855
    3. 'pattern' → logprob: -8.013023376464844
    4. 'Pattern' → logprob: -10.013023376464844
    5. '_period' → logprob: -10.513023376464844
    6. '_length' → logprob: -10.513023376464844
    7. 'cy' → logprob: -10.638023376464844
    8. '_c' → logprob: -11.388023376464844
    9. 'cycle' → logprob: -12.013023376464844
    10. '_string' → logprob: -12.513023376464844

Token 1117: 'yclic' (ID: 162141)
  Prédit: 'ycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -0.09107881784439087
    2. 'yclic' → logprob: -2.466078758239746
    3. 'ont' → logprob: -7.716078758239746
    4. '```' → logprob: -7.841078758239746
    5. 'ircular' → logprob: -8.466078758239746
    6. 'ircle' → logprob: -8.591078758239746
    7. '`' → logprob: -8.716078758239746
    8. '_' → logprob: -9.341078758239746
    9. 'om' → logprob: -9.341078758239746
    10. '{' → logprob: -9.716078758239746

Token 1118: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0793755054473877
    2. 'pattern' → logprob: -2.5793755054473877
    3. '_length' → logprob: -8.704375267028809
    4. 'substring' → logprob: -9.579375267028809
    5. '_sub' → logprob: -10.329375267028809
    6. '_repeat' → logprob: -10.454375267028809
    7. '(' → logprob: -10.704375267028809
    8. '_suffix' → logprob: -10.704375267028809
    9. 'repeat' → logprob: -10.829375267028809
    10. '(pattern' → logprob: -10.829375267028809

Token 1119: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016523292288184166
    2. '(
' → logprob: -6.751652240753174
    3. '[' → logprob: -8.001652717590332
    4. ' (' → logprob: -9.376652717590332
    5. '[
' → logprob: -11.001652717590332
    6. 'merged' → logprob: -11.001652717590332
    7. '(len' → logprob: -11.751652717590332
    8. '       ' → logprob: -12.251652717590332
    9. '([' → logprob: -12.501652717590332
    10. '[:' → logprob: -12.876652717590332

Token 1120: 'merged' (ID: 66277)
  Prédit: 'merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.0001495484757469967
    2. ' merged' → logprob: -9.500149726867676
    3. ')' → logprob: -10.375149726867676
    4. '(' → logprob: -10.625149726867676
    5. '[' → logprob: -11.625149726867676
    6. ')(' → logprob: -12.750149726867676
    7. '       ' → logprob: -12.750149726867676
    8. '   ' → logprob: -13.875149726867676
    9. '           ' → logprob: -14.250149726867676
    10. 'tuple' → logprob: -14.375149726867676

Token 1121: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00014489953173324466
    2. 'pattern' → logprob: -8.875144958496094
    3. ')' → logprob: -14.250144958496094
    4. '_' → logprob: -14.250144958496094
    5. 'merged' → logprob: -14.375144958496094
    6. ')_' → logprob: -14.500144958496094
    7. ' pattern' → logprob: -14.500144958496094
    8. 'attern' → logprob: -14.875144958496094
    9. '_pat' → logprob: -14.875144958496094
    10. 'Pattern' → logprob: -15.500144958496094

Token 1122: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6810318231582642
    2. '(' → logprob: -0.8060318231582642
    3. ')' → logprob: -3.8060317039489746
    4. '(
' → logprob: -4.806031703948975
    5. '([' → logprob: -5.306031703948975
    6. ')
' → logprob: -5.556031703948975
    7. ',' → logprob: -5.931031703948975
    8. '   ' → logprob: -6.806031703948975
    9. '([])
' → logprob: -7.306031703948975
    10. '([]' → logprob: -7.431031703948975

Token 1123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004288522992283106
    2. '
' → logprob: -5.754288673400879
    3. '```' → logprob: -7.129288673400879
    4. 'return' → logprob: -8.754288673400879
    5. '        
' → logprob: -9.879288673400879
    6. '   ' → logprob: -10.129288673400879
    7. '`
' → logprob: -11.004288673400879
    8. '`' → logprob: -11.504288673400879
    9. '           ' → logprob: -12.004288673400879
    10. '``' → logprob: -12.004288673400879

Token 1124: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3992719352245331
    2. 'if' (adapté à ' if') → logprob: -1.1492719650268555
    3. '       ' → logprob: -4.3992719650268555
    4. '#' → logprob: -10.899271965026855
    5. 'length' → logprob: -12.274271965026855
    6. '
' → logprob: -12.524271965026855
    7. ' if' → logprob: -12.524271965026855
    8. ' return' → logprob: -12.899271965026855
    9. '   ' → logprob: -13.024271965026855
    10. 'def' → logprob: -13.649271965026855

Token 1125: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0024989673402160406
    2. ' len' → logprob: -6.002499103546143
    3. 'minimal' → logprob: -10.752498626708984
    4. '   ' → logprob: -14.002498626708984
    5. '(len' → logprob: -14.377498626708984
    6. '	len' → logprob: -15.127498626708984
    7. ' minimal' → logprob: -16.252498626708984
    8. '       ' → logprob: -17.002498626708984
    9. ' ' → logprob: -17.377498626708984
    10. '  ' → logprob: -18.002498626708984

Token 1126: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.339278580620885e-06
    2. 'minimal' → logprob: -13.250001907348633
    3. 'min' → logprob: -14.625001907348633
    4. '=min' → logprob: -17.875001907348633
    5. '[min' → logprob: -18.500001907348633
    6. '(' → logprob: -19.250001907348633
    7. '	min' → logprob: -20.125001907348633
    8. '(max' → logprob: -20.375001907348633
    9. '_min' → logprob: -20.625001907348633
    10. ' (' → logprob: -20.875001907348633

Token 1127: 'imal' (ID: 3882)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.004140972159802914
    2. 'imal' → logprob: -5.504140853881836
    3. 'minimal' → logprob: -9.754140853881836
    4. 'min' → logprob: -13.254140853881836
    5. '(' → logprob: -13.504140853881836
    6. ' minimal' → logprob: -14.629140853881836
    7. '=min' → logprob: -15.504140853881836
    8. 'Minimal' → logprob: -16.004140853881836
    9. '_min' → logprob: -16.129140853881836
    10. 'al' → logprob: -16.254140853881836

Token 1128: '_pattern' (ID: 50002)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.13498307764530182
    2. '_pattern' → logprob: -2.2599830627441406
    3. 'minimal' → logprob: -4.134983062744141
    4. '_min' → logprob: -5.634983062744141
    5. 'imal' → logprob: -6.759983062744141
    6. 'min' → logprob: -7.009983062744141
    7. 'pattern' → logprob: -9.13498306274414
    8. '```' → logprob: -10.38498306274414
    9. '(' → logprob: -10.63498306274414
    10. '(_' → logprob: -10.88498306274414

Token 1129: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18894149363040924
    2. ' <=' → logprob: -2.188941478729248
    3. '>' → logprob: -2.938941478729248
    4. ')' → logprob: -5.813941478729248
    5. '<=' → logprob: -6.313941478729248
    6. ' ==' → logprob: -6.813941478729248
    7. ' <' → logprob: -7.438941478729248
    8. ' >=' → logprob: -8.688941955566406
    9. '==' → logprob: -8.688941955566406
    10. '()' → logprob: -8.938941955566406

Token 1130: ' *' (ID: 425)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07839909940958023
    2. '>' → logprob: -2.703399181365967
    3. ' <=' → logprob: -4.828399181365967
    4. '<=' → logprob: -8.078398704528809
    5. '()>' → logprob: -10.328398704528809
    6. ' ==' → logprob: -11.078398704528809
    7. ' >=' → logprob: -11.203398704528809
    8. '```' → logprob: -11.328398704528809
    9. '==' → logprob: -11.703398704528809
    10. '   ' → logprob: -11.953398704528809

Token 1131: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.170270353322849e-05
    2. ' ' → logprob: -9.750061988830566
    3. '3' → logprob: -13.625061988830566
    4. '   ' → logprob: -14.375061988830566
    5. '4' → logprob: -14.750061988830566
    6. '```' → logprob: -15.625061988830566
    7. '           ' → logprob: -15.750061988830566
    8. '5' → logprob: -16.37506103515625
    9. '1' → logprob: -16.50006103515625
    10. '  ' → logprob: -16.75006103515625

Token 1132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010270876373397186
    2. '3' → logprob: -10.000102996826172
    3. ' ' → logprob: -11.125102996826172
    4. 'len' → logprob: -11.500102996826172
    5. '1' → logprob: -11.750102996826172
    6. '4' → logprob: -12.250102996826172
    7. ''' → logprob: -12.500102996826172
    8. '5' → logprob: -12.500102996826172
    9. '```' → logprob: -12.750102996826172
    10. '(' → logprob: -13.125102996826172

Token 1133: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14365026354789734
    2. '>' → logprob: -2.0186502933502197
    3. ' <=' → logprob: -7.393650054931641
    4. '<=' → logprob: -8.14365005493164
    5. '>=' → logprob: -10.51865005493164
    6. ' >=' → logprob: -10.64365005493164
    7. ' ' → logprob: -12.14365005493164
    8. '   ' → logprob: -12.51865005493164
    9. ' >
' → logprob: -12.89365005493164
    10. '```' → logprob: -13.26865005493164

Token 1134: ' ' (ID: 220)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '256' → logprob: -1.252188801765442
    2. '64' → logprob: -1.752188801765442
    3. '128' → logprob: -2.2521886825561523
    4. '32' → logprob: -2.6271886825561523
    5. 'sys' → logprob: -2.6271886825561523
    6. '100' → logprob: -2.8771886825561523
    7. '102' → logprob: -2.8771886825561523
    8. '512' → logprob: -3.3771886825561523
    9. '48' → logprob: -3.5021886825561523
    10. '80' → logprob: -3.8771886825561523

Token 1135: '204' (ID: 14397)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.4905879497528076
    2. '128' → logprob: -2.1155879497528076
    3. 'sys' → logprob: -2.2405879497528076
    4. '102' → logprob: -2.8655879497528076
    5. '512' → logprob: -3.1155879497528076
    6. '64' → logprob: -4.115588188171387
    7. '409' → logprob: -4.490588188171387
    8. '255' → logprob: -4.615588188171387
    9. '100' → logprob: -4.990588188171387
    10. '204' → logprob: -5.865588188171387

Token 1136: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. '８' → logprob: -19.75
    3. '80' → logprob: -20.625
    4. ':' → logprob: -21.125
    5. '   ' → logprob: -21.5
    6. '۸' → logprob: -22.125
    7. '       ' → logprob: -22.125
    8. '```' → logprob: -22.5
    9. '0' → logprob: -22.625
    10. '7' → logprob: -23.375

Token 1137: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2301799058914185
    2. ':return' → logprob: -1.2301799058914185
    3. ':' → logprob: -1.3551799058914185
    4. '           ' → logprob: -1.8551799058914185
    5. 'return' → logprob: -8.105179786682129
    6. ' return' → logprob: -8.105179786682129
    7. '          ' → logprob: -8.480179786682129
    8. '       ' → logprob: -8.605179786682129
    9. ' or' → logprob: -10.355179786682129
    10. '               ' → logprob: -10.605179786682129

Token 1138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.641841820150148e-05
    2. 'return' → logprob: -11.12502670288086
    3. ':' → logprob: -12.62502670288086
    4. ':return' → logprob: -13.25002670288086
    5. '<|end|>' → logprob: -13.62502670288086
    6. '          ' → logprob: -14.00002670288086
    7. ' return' → logprob: -14.00002670288086
    8. '               ' → logprob: -14.12502670288086
    9. '<|end|>' → logprob: -14.75002670288086
    10. '```' → logprob: -14.75002670288086

Token 1139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10046782344579697
    2. '           ' → logprob: -2.3504679203033447
    3. ' return' → logprob: -8.350467681884766
    4. '               ' → logprob: -11.475467681884766
    5. '   ' → logprob: -12.475467681884766
    6. '```' → logprob: -12.850467681884766
    7. '{return' → logprob: -12.975467681884766
    8. '	return' → logprob: -13.475467681884766
    9. ':return' → logprob: -13.475467681884766
    10. '       ' → logprob: -13.600467681884766

Token 1140: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7610454708337784e-05
    2. ' None' → logprob: -10.500027656555176
    3. '(None' → logprob: -18.62502670288086
    4. '_None' → logprob: -18.87502670288086
    5. '=None' → logprob: -20.62502670288086
    6. ',None' → logprob: -21.12502670288086
    7. '```' → logprob: -21.87502670288086
    8. '
' → logprob: -22.12502670288086
    9. 'No' → logprob: -22.62502670288086
    10. '.None' → logprob: -22.87502670288086

Token 1141: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5236023664474487
    2. '
' → logprob: -0.8986023664474487
    3. '        
' → logprob: -8.398602485656738
    4. '
' → logprob: -8.773602485656738
    5. 'return' → logprob: -10.023602485656738
    6. '  
' → logprob: -11.148602485656738
    7. '

' → logprob: -11.398602485656738
    8. '    
' → logprob: -11.898602485656738
    9. '\
' → logprob: -12.148602485656738
    10. '```' → logprob: -13.148602485656738

Token 1142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.741137283621356e-05
    2. 'return' → logprob: -10.000057220458984
    3. '        
' → logprob: -12.625057220458984
    4. '
' → logprob: -12.875057220458984
    5. '   ' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '           ' → logprob: -14.125057220458984
    8. ' return' → logprob: -14.875057220458984
    9. '	' → logprob: -15.125057220458984
    10. 'result' → logprob: -16.125057220458984

Token 1143: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12906527519226074
    2. '       ' → logprob: -2.1290652751922607
    3. 'result' → logprob: -6.25406551361084
    4. 'hex' → logprob: -9.12906551361084
    5. ' return' → logprob: -9.62906551361084
    6. '
' → logprob: -10.87906551361084
    7. 'merged' → logprob: -11.37906551361084
    8. 'output' → logprob: -12.62906551361084
    9. '#' (adapté à ' #') → logprob: -13.25406551361084
    10. 'pattern' → logprob: -14.37906551361084

Token 1144: ' Construction' (ID: 31452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.033017318695783615
    2. 'hex' → logprob: -3.53301739692688
    3. '       ' → logprob: -6.033017158508301
    4. 'result' → logprob: -7.158017158508301
    5. 'merged' → logprob: -9.7830171585083
    6. '#' → logprob: -11.2830171585083
    7. ' return' → logprob: -11.9080171585083
    8. 'he' → logprob: -12.5330171585083
    9. 'joined' → logprob: -13.0330171585083
    10. ' hex' → logprob: -13.5330171585083

Token 1145: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1393325924873352
    2. 'result' → logprob: -3.1393325328826904
    3. 'return' → logprob: -3.5143325328826904
    4. 'of' → logprob: -3.7643325328826904
    5. ' of' → logprob: -4.3893327713012695
    6. '"' → logprob: -4.5143327713012695
    7. '```' → logprob: -6.1393327713012695
    8. '=' → logprob: -6.7643327713012695
    9. ' =' → logprob: -6.8893327713012695
    10. '_of' → logprob: -7.1393327713012695

Token 1146: ' la' (ID: 557)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0010259009432047606
    2. ' ''.' → logprob: -7.501025676727295
    3. '"' → logprob: -8.251026153564453
    4. ''' → logprob: -8.501026153564453
    5. '''' → logprob: -12.001026153564453
    6. 'f' → logprob: -14.001026153564453
    7. ''',' → logprob: -14.501026153564453
    8. ' "".' → logprob: -14.626026153564453
    9. '''
' → logprob: -15.751026153564453
    10. '   ' → logprob: -16.126026153564453

Token 1147: ' chaîne' (ID: 89288)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1699206382036209
    2. '''.' → logprob: -1.9199206829071045
    3. 'result' → logprob: -4.794920444488525
    4. ' return' → logprob: -7.294920444488525
    5. 'hex' → logprob: -8.419920921325684
    6. '"' → logprob: -8.544920921325684
    7. ' ''.' → logprob: -8.669920921325684
    8. 'str' → logprob: -9.919920921325684
    9. 'ret' → logprob: -10.919920921325684
    10. ''' → logprob: -11.544920921325684

Token 1148: ' hex' (ID: 26157)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5584898591041565
    2. 'result' → logprob: -1.4334897994995117
    3. 'return' → logprob: -1.6834897994995117
    4. ' return' → logprob: -6.933489799499512
    5. '''.' → logprob: -7.183489799499512
    6. 'output' → logprob: -7.808489799499512
    7. 'res' → logprob: -8.183489799499512
    8. 'minimal' → logprob: -8.183489799499512
    9. 'hex' → logprob: -8.433489799499512
    10. ' result' → logprob: -8.808489799499512

Token 1149: 'ad' (ID: 324)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -1.4312589168548584
    2. '       ' → logprob: -1.6812589168548584
    3. '_repr' → logprob: -2.0562589168548584
    4. 'adecimal' → logprob: -2.1812589168548584
    5. 'string' → logprob: -2.6812589168548584
    6. '_str' → logprob: -2.6812589168548584
    7. '```' → logprob: -2.8062589168548584
    8. '_string' → logprob: -3.0562589168548584
    9. '_rep' → logprob: -3.8062589168548584
    10. ' =' → logprob: -4.1812591552734375

Token 1150: 'éc' (ID: 5675)
  Prédit: 'ec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ec' → logprob: -0.1908005028963089
    2. 'minimal' → logprob: -2.190800428390503
    3. 'string' → logprob: -4.190800666809082
    4. 'imal' → logprob: -4.565800666809082
    5. '_str' → logprob: -5.190800666809082
    6. '_string' → logprob: -5.315800666809082
    7. 'adecimal' → logprob: -5.315800666809082
    8. 'val' → logprob: -5.440800666809082
    9. 'ecode' → logprob: -5.815800666809082
    10. 'str' → logprob: -5.940800666809082

Token 1151: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.13529476523399353
    2. 'éc' → logprob: -2.6352946758270264
    3. 'imal' → logprob: -3.6352946758270264
    4. 'é' → logprob: -3.8852946758270264
    5. '"' → logprob: -6.1352949142456055
    6. '```' → logprob: -6.2602949142456055
    7. 'ém' → logprob: -7.2602949142456055
    8. 'adecimal' → logprob: -7.6352949142456055
    9. 'ec' → logprob: -7.7602949142456055
    10. 'c' → logprob: -7.7602949142456055

Token 1152: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0001354824344161898
    2. 'al' → logprob: -9.00013542175293
    3. 'nale' → logprob: -12.00013542175293
    4. 'le' → logprob: -13.12513542175293
    5. 'str' → logprob: -14.50013542175293
    6. '   ' → logprob: -14.50013542175293
    7. 'hale' → logprob: -14.50013542175293
    8. '```' → logprob: -14.62513542175293
    9. 'але' → logprob: -15.12513542175293
    10. 'ales' → logprob: -15.37513542175293

Token 1153: ' maj' (ID: 15575)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43783387541770935
    2. '       ' → logprob: -1.4378339052200317
    3. '''.' → logprob: -2.312833786010742
    4. 'result' → logprob: -4.187833786010742
    5. ' return' → logprob: -6.937833786010742
    6. 'hex' → logprob: -7.062833786010742
    7. ' ''.' → logprob: -8.312833786010742
    8. '```' → logprob: -8.312833786010742
    9. '"' → logprob: -8.437833786010742
    10. 'output' → logprob: -9.312833786010742

Token 1154: 'usc' (ID: 30081)
  Prédit: 'imal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.019304480403661728
    2. '   ' → logprob: -5.019304275512695
    3. '''.' → logprob: -5.644304275512695
    4. 'inal' → logprob: -5.769304275512695
    5. '       ' → logprob: -6.519304275512695
    6. ' =' → logprob: -6.769304275512695
    7. '=' → logprob: -7.644304275512695
    8. 'in' → logprob: -7.894304275512695
    9. 'imized' → logprob: -8.019304275512695
    10. '```' → logprob: -8.019304275512695

Token 1155: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.5439799427986145
    2. 'e' → logprob: -1.4189798831939697
    3. 'ale' → logprob: -2.2939798831939697
    4. 'ine' → logprob: -4.418980121612549
    5. 'le' → logprob: -4.418980121612549
    6. 'def' → logprob: -4.668980121612549
    7. '   ' → logprob: -4.793980121612549
    8. 'ile' → logprob: -4.918980121612549
    9. 'ide' → logprob: -5.293980121612549
    10. 're' → logprob: -5.918980121612549

Token 1156: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1041681170463562
    2. '       ' → logprob: -2.729168176651001
    3. '''.' → logprob: -3.604168176651001
    4. 'result' → logprob: -5.479167938232422
    5. ' return' → logprob: -6.729167938232422
    6. '"' → logprob: -7.729167938232422
    7. 'hex' → logprob: -7.979167938232422
    8. ' ''.' → logprob: -9.354167938232422
    9. '```' → logprob: -9.354167938232422
    10. 'output' → logprob: -10.104167938232422

Token 1157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09502585977315903
    2. 'return' → logprob: -2.8450257778167725
    3. 'result' → logprob: -3.5950257778167725
    4. '''.' → logprob: -6.095026016235352
    5. ' return' → logprob: -6.845026016235352
    6. '"' → logprob: -6.845026016235352
    7. 'hex' → logprob: -8.845026016235352
    8. 'output' → logprob: -9.470026016235352
    9. '```' → logprob: -9.595026016235352
    10. ' result' → logprob: -9.595026016235352

Token 1158: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0009462343878112733
    2. '       ' → logprob: -7.250946044921875
    3. 'result' (adapté à ' result') → logprob: -8.750946044921875
    4. ' return' → logprob: -9.750946044921875
    5. '''.' → logprob: -10.875946044921875
    6. 'hex' → logprob: -14.875946044921875
    7. '```' → logprob: -15.750946044921875
    8. 'merged' → logprob: -16.375946044921875
    9. 'output' → logprob: -17.125946044921875
    10. '   ' → logprob: -17.250946044921875

Token 1159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47645047307014465
    2. '=' → logprob: -0.9764504432678223
    3. ' +=' → logprob: -6.476450443267822
    4. '+=' → logprob: -7.101450443267822
    5. '.=' → logprob: -13.47645092010498
    6. ' .=' → logprob: -13.72645092010498
    7. '.extend' → logprob: -13.85145092010498
    8. '+='' → logprob: -14.47645092010498
    9. '   ' → logprob: -14.60145092010498
    10. '.append' → logprob: -14.60145092010498

Token 1160: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.006945891305804253
    2. ' ''.' → logprob: -5.006946086883545
    3. '"' → logprob: -8.506945610046387
    4. ''' → logprob: -11.506945610046387
    5. '''' → logprob: -11.631945610046387
    6. ' "".' → logprob: -11.756945610046387
    7. '''
' → logprob: -14.381945610046387
    8. '   ' → logprob: -14.506945610046387
    9. ''',' → logprob: -15.006945610046387
    10. ' ' → logprob: -15.381945610046387

Token 1161: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.3319124011322856e-05
    2. '''.' → logprob: -10.750022888183594
    3. '```' → logprob: -13.500022888183594
    4. ' join' → logprob: -16.250022888183594
    5. '.' → logprob: -16.500022888183594
    6. '.join' → logprob: -16.500022888183594
    7. ''.' → logprob: -17.250022888183594
    8. '``' → logprob: -17.750022888183594
    9. 'jo' → logprob: -17.875022888183594
    10. 'j' → logprob: -18.000022888183594

Token 1162: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.097437315271236e-05
    2. '[f' → logprob: -10.00005054473877
    3. '(f' → logprob: -12.25005054473877
    4. ' f' → logprob: -15.37505054473877
    5. '{' → logprob: -15.50005054473877
    6. 'format' → logprob: -16.000051498413086
    7. 'hex' → logprob: -16.375051498413086
    8. 'Hex' → logprob: -16.750051498413086
    9. '[' → logprob: -17.250051498413086
    10. '"{' → logprob: -17.750051498413086

Token 1163: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.024200214073061943
    2. '{' → logprob: -3.774200201034546
    3. ''{' → logprob: -7.649200439453125
    4. 'f' → logprob: -7.649200439453125
    5. ' f' → logprob: -14.274200439453125
    6. '{x' → logprob: -15.149200439453125
    7. '(f' → logprob: -15.774200439453125
    8. '{:' → logprob: -15.899200439453125
    9. '{i' → logprob: -16.274200439453125
    10. '"' → logprob: -16.399200439453125

Token 1164: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5166690349578857
    2. 'value' → logprob: -1.2666690349578857
    3. 'byte' → logprob: -2.7666690349578857
    4. 'v' → logprob: -3.2666690349578857
    5. 'x' → logprob: -4.016669273376465
    6. 'sym' → logprob: -6.516669273376465
    7. 'b' → logprob: -7.266669273376465
    8. 'num' → logprob: -8.266669273376465
    9. 's' → logprob: -9.516669273376465
    10. 'c' → logprob: -9.641669273376465

Token 1165: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021057340200059116
    2. 'val' → logprob: -9.250210762023926
    3. ':X' → logprob: -9.875210762023926
    4. '02' → logprob: -10.375210762023926
    5. '{' → logprob: -12.000210762023926
    6. '[' → logprob: -12.375210762023926
    7. 'X' → logprob: -12.500210762023926
    8. '```' → logprob: -12.625210762023926
    9. '}' → logprob: -13.125210762023926
    10. '0' → logprob: -13.250210762023926

Token 1166: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: 0.0
    2. '"' → logprob: -17.625
    3. ''' → logprob: -18.125
    4. '}' → logprob: -20.375
    5. ' ' → logprob: -21.0
    6. '```' → logprob: -21.75
    7. '>' → logprob: -21.875
    8. '`' → logprob: -23.5
    9. '04' → logprob: -24.125
    10. '2' → logprob: -24.125

Token 1167: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: 0.0
    2. ' X' → logprob: -19.25
    3. '}' → logprob: -19.375
    4. '"' → logprob: -21.75
    5. 'x' → logprob: -22.625
    6. '>X' → logprob: -23.0
    7. '```' → logprob: -23.25
    8. '	X' → logprob: -24.25
    9. '
' → logprob: -24.375
    10. '}"' → logprob: -24.625

Token 1168: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -7.703443770878948e-06
    2. '"' → logprob: -12.000007629394531
    3. '}'' → logprob: -14.500007629394531
    4. '}' → logprob: -14.500007629394531
    5. '}"
' → logprob: -16.12500762939453
    6. '"}' → logprob: -16.12500762939453
    7. '```' → logprob: -16.75000762939453
    8. ' }' → logprob: -16.87500762939453
    9. ')"' → logprob: -17.25000762939453
    10. '}".' → logprob: -17.50000762939453

Token 1169: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03816795349121094
    2. 'for' → logprob: -3.288167953491211
    3. ')' → logprob: -9.038167953491211
    4. ' val' → logprob: -12.913167953491211
    5. '           ' → logprob: -13.288167953491211
    6. ' ' → logprob: -14.038167953491211
    7. '   ' → logprob: -14.038167953491211
    8. 'val' → logprob: -14.538167953491211
    9. '	for' → logprob: -15.038167953491211
    10. '```' → logprob: -15.163167953491211

Token 1170: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0011703446507453918
    2. ' val' → logprob: -6.7511701583862305
    3. '	val' → logprob: -16.001171112060547
    4. '_val' → logprob: -17.376171112060547
    5. '(val' → logprob: -18.751171112060547
    6. 'v' → logprob: -19.376171112060547
    7. 'Val' → logprob: -20.126171112060547
    8. 'value' → logprob: -21.126171112060547
    9. '.val' → logprob: -21.501171112060547
    10. '   ' → logprob: -21.751171112060547

Token 1171: ' in' (ID: 306)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5676370859146118
    2. 'in' → logprob: -1.0676370859146118
    3. ' in' → logprob: -2.4426369667053223
    4. ' val' → logprob: -6.192636966705322
    5. '_val' → logprob: -8.06763744354248
    6. ',val' → logprob: -10.81763744354248
    7. '	val' → logprob: -13.31763744354248
    8. '[val' → logprob: -13.44263744354248
    9. ' ' → logprob: -14.19263744354248
    10. '(val' → logprob: -14.19263744354248

Token 1172: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.22980494797229767
    2. 'val' → logprob: -1.6048049926757812
    3. ' minimal' → logprob: -5.729804992675781
    4. 'merged' → logprob: -7.354804992675781
    5. ' val' → logprob: -7.729804992675781
    6. 'min' → logprob: -10.104804992675781
    7. 'combined' → logprob: -11.479804992675781
    8. ' merged' → logprob: -13.979804992675781
    9. '	val' → logprob: -14.479804992675781
    10. '   ' → logprob: -14.854804992675781

Token 1173: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0015149809187278152
    2. 'pattern' → logprob: -6.501514911651611
    3. 'minimal' → logprob: -12.25151538848877
    4. 'Pattern' → logprob: -12.50151538848877
    5. 'val' → logprob: -13.50151538848877
    6. ' pattern' → logprob: -13.62651538848877
    7. '```' → logprob: -15.12651538848877
    8. '   ' → logprob: -15.50151538848877
    9. '
' → logprob: -15.75151538848877
    10. ')' → logprob: -15.75151538848877

Token 1174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002490641549229622
    2. ')
' → logprob: -6.002490520477295
    3. '       ' → logprob: -11.752490997314453
    4. ')
' → logprob: -12.252490997314453
    5. ')return' → logprob: -13.502490997314453
    6. ' )' → logprob: -14.877490997314453
    7. ')`' → logprob: -15.252490997314453
    8. ')

' → logprob: -15.752490997314453
    9. '   ' → logprob: -16.627490997314453
    10. ')`
' → logprob: -16.627490997314453

Token 1175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008735480718314648
    2. 'return' → logprob: -4.758735656738281
    3. '
' → logprob: -9.633735656738281
    4. '<|end|>' → logprob: -10.883735656738281
    5. ' return' → logprob: -11.008735656738281
    6. '        
' → logprob: -12.258735656738281
    7. ')' → logprob: -12.633735656738281
    8. ')return' → logprob: -13.508735656738281
    9. '   ' → logprob: -13.508735656738281
    10. ':return' → logprob: -13.633735656738281

Token 1176: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25221896171569824
    2. 'return' (adapté à ' return') → logprob: -1.5022189617156982
    3. '
' → logprob: -8.502219200134277
    4. ' return' → logprob: -9.502219200134277
    5. '   ' → logprob: -12.127219200134277
    6. '	return' → logprob: -13.252219200134277
    7. '        
' → logprob: -13.377219200134277
    8. '```' → logprob: -13.502219200134277
    9. '           ' → logprob: -14.752219200134277
    10. ':return' → logprob: -14.877219200134277

Token 1177: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -3.7697225252486533e-06
    2. ' result' → logprob: -12.500003814697266
    3. '(result' → logprob: -23.625003814697266
    4. 'return' → logprob: -23.875003814697266
    5. '	result' → logprob: -24.500003814697266
    6. 'res' → logprob: -25.500003814697266
    7. 'results' → logprob: -26.125003814697266
    8. '   ' → logprob: -26.375003814697266
    9. '$result' → logprob: -26.375003814697266
    10. '[result' → logprob: -27.375003814697266

Token 1178: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18237033486366272
    2. '   ' → logprob: -1.8073703050613403
    3. '    
' → logprob: -6.057370185852051
    4. 'def' → logprob: -8.80737018585205
    5. '

' → logprob: -10.55737018585205
    6. '```' → logprob: -10.80737018585205
    7. '
' → logprob: -10.93237018585205
    8. '        
' → logprob: -11.05737018585205
    9. '<|end|>' → logprob: -11.18237018585205
    10. ' 
' → logprob: -11.68237018585205

Token 1179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02021927200257778
    2. 'def' → logprob: -4.020219326019287
    3. '
' → logprob: -6.520219326019287
    4. '    
' → logprob: -7.645219326019287
    5. '```' → logprob: -10.395218849182129
    6. ' def' → logprob: -10.770218849182129
    7. '>' → logprob: -11.645218849182129
    8. '@' → logprob: -11.895218849182129
    9. '	def' → logprob: -12.145218849182129
    10. '_' → logprob: -12.520218849182129

Token 1180: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07931846380233765
    2. '   ' → logprob: -2.5793185234069824
    3. ' def' → logprob: -8.454318046569824
    4. '
' → logprob: -8.454318046569824
    5. '    
' → logprob: -13.829318046569824
    6. '	def' → logprob: -14.204318046569824
    7. '```' → logprob: -14.204318046569824
    8. '@' → logprob: -15.829318046569824
    9. '  ' → logprob: -16.82931900024414
    10. ' ' → logprob: -17.32931900024414

Token 1181: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.018165279179811478
    2. ' minimal' → logprob: -4.018165111541748
    3. 'find' → logprob: -11.393165588378906
    4. ' find' → logprob: -13.393165588378906
    5. 'min' → logprob: -13.518165588378906
    6. 'minimum' → logprob: -14.393165588378906
    7. '_find' → logprob: -15.018165588378906
    8. 'def' → logprob: -15.143165588378906
    9. '_min' → logprob: -16.393165588378906
    10. '
' → logprob: -17.518165588378906

Token 1182: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.896309739408025e-07
    2. 'cy' → logprob: -14.625000953674316
    3. '_pattern' → logprob: -16.125
    4. '_cycle' → logprob: -16.25
    5. '_' → logprob: -17.5
    6. '_cycles' → logprob: -18.125
    7. 'C' → logprob: -19.125
    8. ' _' → logprob: -19.25
    9. '   ' → logprob: -20.25
    10. '_patterns' → logprob: -20.5

Token 1183: 'yclic' (ID: 162141)
  Prédit: 'yclic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yclic' → logprob: -1.3544423381972592e-05
    2. 'ycl' → logprob: -12.37501335144043
    3. 'yc' → logprob: -12.75001335144043
    4. 'ycle' → logprob: -13.37501335144043
    5. '_c' → logprob: -13.50001335144043
    6. '_' → logprob: -13.62501335144043
    7. 'clic' → logprob: -14.12501335144043
    8. 'cy' → logprob: -14.75001335144043
    9. ' cyclic' → logprob: -15.37501335144043
    10. '```' → logprob: -15.75001335144043

Token 1184: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -2.5776860184123507e-06
    2. 'pattern' → logprob: -13.75000286102295
    3. '_patterns' → logprob: -14.37500286102295
    4. '_p' → logprob: -15.12500286102295
    5. '_' → logprob: -15.25000286102295
    6. '_pat' → logprob: -15.75000286102295
    7. '_length' → logprob: -17.375001907348633
    8. '_format' → logprob: -18.000001907348633
    9. '_period' → logprob: -18.125001907348633
    10. ' _' → logprob: -18.375001907348633

Token 1185: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.625000953674316
    3. 'self' → logprob: -15.625000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '(
' → logprob: -16.875
    6. ' (' → logprob: -17.375
    7. '       ' → logprob: -18.625
    8. 'def' → logprob: -19.0
    9. '
' → logprob: -19.75
    10. '=self' → logprob: -22.0

Token 1186: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.27099974633893e-05
    2. 'self' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.875012397766113
    4. '(' → logprob: -14.250012397766113
    5. '       ' → logprob: -14.250012397766113
    6. ' (' → logprob: -15.250012397766113
    7. 'def' → logprob: -17.00001335144043
    8. '(
' → logprob: -17.12501335144043
    9. '
' → logprob: -17.25001335144043
    10. '=self' → logprob: -18.12501335144043

Token 1187: ' pattern' (ID: 8302)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0403025858104229
    2. 'pattern' → logprob: -3.2903025150299072
    3. ' self' → logprob: -7.040302753448486
    4. '   ' → logprob: -8.040302276611328
    5. 'values' → logprob: -8.290302276611328
    6. 'arr' → logprob: -8.665302276611328
    7. 'sequence' → logprob: -8.665302276611328
    8. 'vals' → logprob: -8.790302276611328
    9. 'lst' → logprob: -9.290302276611328
    10. '       ' → logprob: -9.415302276611328

Token 1188: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0373095273971558
    2. '(self' → logprob: -1.1623095273971558
    3. '       ' → logprob: -1.4123095273971558
    4. 'self' → logprob: -2.5373096466064453
    5. ')' → logprob: -4.912309646606445
    6. '
' → logprob: -6.537309646606445
    7. ',' → logprob: -7.787309646606445
    8. '):
' → logprob: -7.912309646606445
    9. ')(' → logprob: -8.787309646606445
    10. '        
' → logprob: -9.287309646606445

Token 1189: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0012259430950507522
    2. 'self' → logprob: -6.75122594833374
    3. ' List' → logprob: -10.376225471496582
    4. ')' → logprob: -11.126225471496582
    5. 'list' → logprob: -11.876225471496582
    6. '   ' → logprob: -13.126225471496582
    7. '[List' → logprob: -14.626225471496582
    8. ' self' → logprob: -15.876225471496582
    9. '       ' → logprob: -16.5012264251709
    10. '_list' → logprob: -17.0012264251709

Token 1190: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.706686690449715e-05
    2. 'int' → logprob: -9.625066757202148
    3. ')' → logprob: -14.500066757202148
    4. '<int' → logprob: -15.125066757202148
    5. '   ' → logprob: -16.00006675720215
    6. '[Int' → logprob: -16.75006675720215
    7. '[' → logprob: -17.75006675720215
    8. '(int' → logprob: -18.00006675720215
    9. '=int' → logprob: -18.50006675720215
    10. ']int' → logprob: -18.62506675720215

Token 1191: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008652388118207455
    2. '])' → logprob: -4.758652210235596
    3. '   ' → logprob: -10.758652687072754
    4. ' )' → logprob: -11.258652687072754
    5. '       ' → logprob: -14.133652687072754
    6. '`)' → logprob: -14.258652687072754
    7. ']' → logprob: -14.383652687072754
    8. ' ])' → logprob: -14.758652687072754
    9. '）' → logprob: -15.008652687072754
    10. ')])' → logprob: -15.508652687072754

Token 1192: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.099920853972435
    2. '->' → logprob: -2.9749207496643066
    3. '       ' → logprob: -3.4749207496643066
    4. '   ' → logprob: -4.599920749664307
    5. 'self' → logprob: -6.599920749664307
    6. ' ->' → logprob: -6.849920749664307
    7. ')' → logprob: -8.724921226501465
    8. 'def' → logprob: -9.224921226501465
    9. '[self' → logprob: -9.599921226501465
    10. ')->' → logprob: -9.724921226501465

Token 1193: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.000747332873288542
    2. 'list' → logprob: -7.500747203826904
    3. 'pattern' → logprob: -8.750747680664062
    4. ' List' → logprob: -10.375747680664062
    5. '[List' → logprob: -13.000747680664062
    6. 'int' → logprob: -13.375747680664062
    7. 'Pattern' → logprob: -15.500747680664062
    8. '   ' → logprob: -15.500747680664062
    9. '_list' → logprob: -15.625747680664062
    10. '[int' → logprob: -16.000747680664062

Token 1194: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.125
    3. '[Int' → logprob: -19.125
    4. '<int' → logprob: -19.5
    5. '(int' → logprob: -20.125
    6. '[List' → logprob: -20.875
    7. '[' → logprob: -21.0
    8. '[
' → logprob: -21.875
    9. ':
' → logprob: -21.875
    10. ':int' → logprob: -22.5

Token 1195: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5543926358222961
    2. ':
' → logprob: -2.0543925762176514
    3. '   ' → logprob: -2.4293925762176514
    4. '       ' → logprob: -2.5543925762176514
    5. ']:
' → logprob: -3.0543925762176514
    6. ':' → logprob: -3.0543925762176514
    7. '):' → logprob: -3.5543925762176514
    8. ']:' → logprob: -5.3043928146362305
    9. '(self' → logprob: -6.8043928146362305
    10. '():
' → logprob: -7.1793928146362305

Token 1196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015384310390800238
    2. 'self' → logprob: -7.376538276672363
    3. '   ' → logprob: -7.501538276672363
    4. '[' → logprob: -8.751538276672363
    5. '(self' → logprob: -9.251538276672363
    6. '[
' → logprob: -9.626538276672363
    7. '
' → logprob: -12.126538276672363
    8. ' self' → logprob: -12.126538276672363
    9. '        
' → logprob: -12.376538276672363
    10. '[self' → logprob: -12.376538276672363

Token 1197: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001216901931911707
    2. 'n' → logprob: -7.001216888427734
    3. 'length' → logprob: -8.626216888427734
    4. 'for' → logprob: -9.876216888427734
    5. ' for' → logprob: -11.001216888427734
    6. ' n' → logprob: -11.126216888427734
    7. '   ' → logprob: -11.626216888427734
    8. 'def' → logprob: -11.876216888427734
    9. '
' → logprob: -12.126216888427734
    10. 'pattern' → logprob: -12.251216888427734

Token 1198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012130453251302242
    2. '   ' → logprob: -9.750121116638184
    3. 'self' → logprob: -10.250121116638184
    4. 'def' → logprob: -11.375121116638184
    5. 'pattern' → logprob: -12.250121116638184
    6. 'n' → logprob: -12.625121116638184
    7. ' for' → logprob: -13.000121116638184
    8. 'for' → logprob: -13.625121116638184
    9. 'length' → logprob: -14.000121116638184
    10. ' self' → logprob: -14.000121116638184

Token 1199: ' Trou' (ID: 58947)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019606223329901695
    2. '   ' → logprob: -4.519606113433838
    3. 'def' → logprob: -5.144606113433838
    4. 'for' → logprob: -6.519606113433838
    5. '
' → logprob: -7.394606113433838
    6. 'length' → logprob: -8.019606590270996
    7. 'pattern' → logprob: -9.269606590270996
    8. '"""
' → logprob: -10.269606590270996
    9. 'n' → logprob: -10.394606590270996
    10. 'For' → logprob: -10.769606590270996

Token 1200: 'ver' (ID: 445)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.26643437147140503
    2. 'vez' → logprob: -1.6414344310760498
    3. 'v' → logprob: -4.766434192657471
    4. '       ' → logprob: -4.766434192657471
    5. 'ves' → logprob: -4.891434192657471
    6. 'te' → logprob: -5.016434192657471
    7. 'tes' → logprob: -5.891434192657471
    8. '   ' → logprob: -6.891434192657471
    9. 'ver' → logprob: -7.016434192657471
    10. 'rne' → logprob: -7.016434192657471

Token 1201: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1920748949050903
    2. 'self' → logprob: -1.6920748949050903
    3. ' la' → logprob: -1.6920748949050903
    4. 'the' → logprob: -2.067074775695801
    5. 'len' → logprob: -2.317074775695801
    6. ' le' → logprob: -3.067074775695801
    7. 'pattern' → logprob: -4.067074775695801
    8. 'la' → logprob: -4.567074775695801
    9. ' the' → logprob: -4.942074775695801
    10. 'le' → logprob: -5.067074775695801

Token 1202: ' motif' (ID: 72753)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001737539772875607
    2. 'length' → logprob: -7.251737594604492
    3. 'pattern' → logprob: -7.751737594604492
    4. 'for' → logprob: -8.001737594604492
    5. ' n' → logprob: -9.626737594604492
    6. 'def' → logprob: -10.001737594604492
    7. 'next' → logprob: -10.501737594604492
    8. '       ' → logprob: -10.876737594604492
    9. 'pat' → logprob: -10.876737594604492
    10. 'len' → logprob: -11.376737594604492

Token 1203: ' cycl' (ID: 27789)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.5991242527961731
    2. '       ' → logprob: -1.2241241931915283
    3. 'minimal' → logprob: -2.4741241931915283
    4. ' le' → logprob: -3.5991241931915283
    5. '   ' → logprob: -4.599124431610107
    6. 'minimum' → logprob: -5.474124431610107
    7. 'pattern' → logprob: -5.599124431610107
    8. 'le' → logprob: -5.849124431610107
    9. ' complet' → logprob: -5.849124431610107
    10. 'def' → logprob: -6.099124431610107

Token 1204: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -6.813969957875088e-05
    2. 'e' → logprob: -10.750067710876465
    3. '[' → logprob: -12.125067710876465
    4. '
' → logprob: -12.375067710876465
    5. 'iquement' → logprob: -12.375067710876465
    6. 'iqu' → logprob: -12.625067710876465
    7. 'que' → logprob: -12.750067710876465
    8. 'iques' → logprob: -12.750067710876465
    9. '```' → logprob: -12.750067710876465
    10. 'lique' → logprob: -12.875067710876465

Token 1205: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.22069987654685974
    2. 'le' → logprob: -1.9706999063491821
    3. '       ' → logprob: -3.9706997871398926
    4. 'def' → logprob: -4.720699787139893
    5. ' minimal' → logprob: -5.095699787139893
    6. 'pattern' → logprob: -5.095699787139893
    7. 'de' → logprob: -5.220699787139893
    8. 'minimum' → logprob: -5.470699787139893
    9. 'self' → logprob: -6.220699787139893
    10. 'final' → logprob: -6.595699787139893

Token 1206: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11330864578485489
    2. '(self' → logprob: -2.3633086681365967
    3. 'self' → logprob: -4.613308429718018
    4. '   ' → logprob: -6.988308429718018
    5. ' self' → logprob: -7.113308429718018
    6. ',' → logprob: -7.738308429718018
    7. ' (' → logprob: -8.238308906555176
    8. '```' → logprob: -9.238308906555176
    9. 'pattern' → logprob: -9.488308906555176
    10. '(pattern' → logprob: -9.738308906555176

Token 1207: ',' (ID: 11)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.9783987402915955
    2. ' divides' → logprob: -1.6033987998962402
    3. ' pattern' → logprob: -1.7283987998962402
    4. ' repeats' → logprob: -2.2283987998962402
    5. 'div' → logprob: -2.9783987998962402
    6. 're' → logprob: -3.4783987998962402
    7. ' div' → logprob: -4.47839879989624
    8. 'constit' → logprob: -5.22839879989624
    9. 'rep' → logprob: -5.47839879989624
    10. ' compose' → logprob: -5.72839879989624

Token 1208: ' rép' (ID: 64372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0862687826156616
    2. 'pattern' → logprob: -1.4612687826156616
    3. ' pattern' → logprob: -1.4612687826156616
    4. ' rép' → logprob: -3.086268901824951
    5. ' if' → logprob: -3.211268901824951
    6. ' repeat' → logprob: -4.336268901824951
    7. 'repeat' → logprob: -4.586268901824951
    8. '        ' → logprob: -4.836268901824951
    9. 'if' → logprob: -4.961268901824951
    10. ' n' → logprob: -5.461268901824951

Token 1209: 'été' (ID: 16406)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.12533357739448547
    2. 'é' → logprob: -2.500333547592163
    3. '       ' → logprob: -4.125333786010742
    4. 'pattern' → logprob: -5.125333786010742
    5. 'e' → logprob: -6.000333786010742
    6. 'ete' → logprob: -6.250333786010742
    7. 'éter' → logprob: -6.500333786010742
    8. 'été' → logprob: -6.500333786010742
    9. 'ètes' → logprob: -6.500333786010742
    10. 'ête' → logprob: -7.500333786010742

Token 1210: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4151643514633179
    2. 'pattern' → logprob: -1.4151643514633179
    3. '(pattern' → logprob: -1.9151643514633179
    4. ',' → logprob: -2.0401644706726074
    5. 'len' → logprob: -2.1651644706726074
    6. '(len' → logprob: -3.7901644706726074
    7. '[]' → logprob: -3.7901644706726074
    8. 'sur' → logprob: -4.665164470672607
    9. 'correct' → logprob: -4.790164470672607
    10. ' correctement' → logprob: -5.665164470672607

Token 1211: ' forme' (ID: 27450)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4141508638858795
    2. ' re' → logprob: -1.4141508340835571
    3. ' reconstruct' → logprob: -3.2891509532928467
    4. ' reprodu' → logprob: -3.7891509532928467
    5. ' reconstru' → logprob: -4.539150714874268
    6. 'constit' → logprob: -4.789150714874268
    7. ' recre' → logprob: -4.789150714874268
    8. ' recr' → logprob: -5.914150714874268
    9. 'forme' → logprob: -6.289150714874268
    10. 'compose' → logprob: -7.289150714874268

Token 1212: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.13859310746192932
    2. 'le' → logprob: -2.5135931968688965
    3. ' pattern' → logprob: -3.6385931968688965
    4. ' le' → logprob: -3.8885931968688965
    5. 'la' → logprob: -7.2635931968688965
    6. ' la' → logprob: -7.7635931968688965
    7. 'the' → logprob: -8.013592720031738
    8. '       ' → logprob: -9.013592720031738
    9. 'pat' → logprob: -11.013592720031738
    10. 'len' → logprob: -11.013592720031738

Token 1213: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4275674521923065
    2. '(self' → logprob: -2.552567481994629
    3. ',' → logprob: -2.677567481994629
    4. '.' → logprob: -2.802567481994629
    5. '
' → logprob: -3.177567481994629
    6. '.
' → logprob: -3.927567481994629
    7. 'pattern' → logprob: -4.302567481994629
    8. ':
' → logprob: -4.677567481994629
    9. ' complet' → logprob: -4.927567481994629
    10. 'self' → logprob: -4.927567481994629

Token 1214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003355109365656972
    2. '   ' → logprob: -7.003355026245117
    3. '```' → logprob: -7.253355026245117
    4. '        
' → logprob: -7.878355026245117
    5. '\n' → logprob: -8.253355026245117
    6. ':' → logprob: -8.253355026245117
    7. ':
' → logprob: -9.003355026245117
    8. '):
' → logprob: -9.128355026245117
    9. '[' → logprob: -9.253355026245117
    10. ')' → logprob: -9.253355026245117

Token 1215: ' Recherche' (ID: 114815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001311544212512672
    2. '
' → logprob: -7.126311779022217
    3. '```' → logprob: -8.126311302185059
    4. ':' → logprob: -10.501311302185059
    5. 'n' → logprob: -10.626311302185059
    6. ')' → logprob: -10.626311302185059
    7. ',' → logprob: -10.876311302185059
    8. '):
' → logprob: -11.001311302185059
    9. '        
' → logprob: -11.126311302185059
    10. '{' → logprob: -11.376311302185059

Token 1216: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4054777920246124
    2. ' for' → logprob: -1.40547776222229
    3. '       ' → logprob: -2.53047776222229
    4. ' i' → logprob: -6.280478000640869
    5. 'i' → logprob: -7.155478000640869
    6. 'def' → logprob: -7.280478000640869
    7. '   ' → logprob: -7.405478000640869
    8. '(' → logprob: -7.530478000640869
    9. 'len' → logprob: -7.530478000640869
    10. 'self' → logprob: -7.655478000640869

Token 1217: ' plus' (ID: 2932)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8043999671936035
    2. 'n' → logprob: -0.9293999671936035
    3. 'length' → logprob: -3.1793999671936035
    4. 'possible' → logprob: -3.6793999671936035
    5. 'k' → logprob: -3.9293999671936035
    6. 'l' → logprob: -4.0543999671936035
    7. 'size' → logprob: -4.8043999671936035
    8. 'min' → logprob: -4.9293999671936035
    9. 'start' → logprob: -4.9293999671936035
    10. '1' → logprob: -5.1793999671936035

Token 1218: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.6552146077156067
    2. 'court' → logprob: -1.030214548110962
    3. '
' → logprob: -2.280214548110962
    4. 'cour' → logprob: -4.905214786529541
    5. '```' → logprob: -5.280214786529541
    6. 'short' → logprob: -5.905214786529541
    7. 'long' → logprob: -6.780214786529541
    8. 'prem' → logprob: -7.030214786529541
    9. 'small' → logprob: -7.405214786529541
    10. '   ' → logprob: -7.405214786529541

Token 1219: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5081049799919128
    2. 'prefix' → logprob: -1.6331050395965576
    3. 'period' → logprob: -2.6331050395965576
    4. 'k' → logprob: -3.0081050395965576
    5. 'pattern' → logprob: -3.5081050395965576
    6. 'n' → logprob: -4.2581048011779785
    7. 'cycle' → logprob: -4.3831048011779785
    8. 'div' → logprob: -5.1331048011779785
    9. ' i' → logprob: -5.2581048011779785
    10. 'suffix' → logprob: -5.7581048011779785

Token 1220: ' divis' (ID: 37826)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37231236696243286
    2. 'for' → logprob: -1.747312307357788
    3. 'k' → logprob: -3.497312307357788
    4. ' such' → logprob: -3.622312307357788
    5. 'possible' → logprob: -4.122312545776367
    6. ' possible' → logprob: -4.622312545776367
    7. ' in' → logprob: -4.872312545776367
    8. '=' → logprob: -5.747312545776367
    9. ' i' → logprob: -5.747312545776367
    10. 'def' → logprob: -5.872312545776367

Token 1221: 'ant' (ID: 493)
  Prédit: 'eur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.11495251953601837
    2. 'e' → logprob: -3.489952564239502
    3. 'len' → logprob: -3.614952564239502
    4. 'ible' → logprob: -4.239952564239502
    5. '   ' → logprob: -4.864952564239502
    6. 'iding' → logprob: -5.114952564239502
    7. '```' → logprob: -5.364952564239502
    8. 'isible' → logprob: -5.614952564239502
    9. 'id' → logprob: -5.739952564239502
    10. 'ing' → logprob: -6.364952564239502

Token 1222: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0008377424674108624
    2. '       ' → logprob: -8.000837326049805
    3. 'la' → logprob: -8.375837326049805
    4. '(len' → logprob: -8.750837326049805
    5. '
' → logprob: -10.625837326049805
    6. '[len' → logprob: -10.750837326049805
    7. 'le' → logprob: -11.000837326049805
    8. ' len' → logprob: -11.125837326049805
    9. 'length' → logprob: -11.500837326049805
    10. '=len' → logprob: -11.875837326049805

Token 1223: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.1005549356341362
    2. 'pattern' → logprob: -2.350554943084717
    3. '(' → logprob: -8.475554466247559
    4. ' pattern' → logprob: -9.850554466247559
    5. '(
' → logprob: -10.225554466247559
    6. '_pattern' → logprob: -10.600554466247559
    7. '
' → logprob: -11.850554466247559
    8. ' (' → logprob: -12.350554466247559
    9. '   ' → logprob: -12.475554466247559
    10. '```' → logprob: -12.725554466247559

Token 1224: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019474120810627937
    2. '):' → logprob: -5.269474029541016
    3. '):
' → logprob: -5.519474029541016
    4. '       ' → logprob: -6.144474029541016
    5. ',' → logprob: -6.394474029541016
    6. '),' → logprob: -6.769474029541016
    7. '```' → logprob: -7.144474029541016
    8. '
' → logprob: -7.394474029541016
    9. ')
' → logprob: -7.644474029541016
    10. '   ' → logprob: -7.644474029541016

Token 1225: ' tel' (ID: 10716)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4083455204963684
    2. '
' → logprob: -2.2833454608917236
    3. ',' → logprob: -2.5333454608917236
    4. ':
' → logprob: -3.0333454608917236
    5. ':' → logprob: -3.4083454608917236
    6. 'for' → logprob: -4.158345699310303
    7. '   ' → logprob: -4.283345699310303
    8. ' for' → logprob: -4.533345699310303
    9. ' et' → logprob: -5.283345699310303
    10. 'pattern' → logprob: -5.533345699310303

Token 1226: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0002655079588294029
    2. '       ' → logprob: -8.875265121459961
    3. 'that' → logprob: -9.750265121459961
    4. 'qu' → logprob: -10.625265121459961
    5. ' que' → logprob: -10.875265121459961
    6. '   ' → logprob: -12.250265121459961
    7. '```' → logprob: -12.250265121459961
    8. 'for' → logprob: -12.500265121459961
    9. 'len' → logprob: -13.500265121459961
    10. '           ' → logprob: -13.500265121459961

Token 1227: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.15777051448822021
    2. 'len' → logprob: -2.9077706336975098
    3. 'all' → logprob: -3.0327706336975098
    4. '       ' → logprob: -3.5327706336975098
    5. ' all' → logprob: -5.15777063369751
    6. ' pattern' → logprob: -5.53277063369751
    7. 'k' → logprob: -6.40777063369751
    8. '           ' → logprob: -7.15777063369751
    9. 'for' → logprob: -7.28277063369751
    10. '```' → logprob: -8.032770156860352

Token 1228: ' est' (ID: 893)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.0919266939163208
    2. '==' → logprob: -1.4669266939163208
    3. ' ==' → logprob: -1.7169266939163208
    4. '[i' → logprob: -1.9669266939163208
    5. '[k' → logprob: -3.4669265747070312
    6. '[:]' → logprob: -3.4669265747070312
    7. '*' → logprob: -3.7169265747070312
    8. '[' → logprob: -4.341926574707031
    9. '```' → logprob: -5.341926574707031
    10. ' *' → logprob: -5.591926574707031

Token 1229: ' k' (ID: 372)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.14681565761566162
    2. ' pattern' → logprob: -2.021815776824951
    3. '(pattern' → logprob: -5.771815776824951
    4. '       ' → logprob: -7.896815776824951
    5. 'k' → logprob: -8.896815299987793
    6. '   ' → logprob: -9.771815299987793
    7. 'equal' → logprob: -9.896815299987793
    8. '           ' → logprob: -10.396815299987793
    9. 'une' → logprob: -10.521815299987793
    10. '```' → logprob: -10.771815299987793

Token 1230: ' répét' (ID: 156936)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.49690037965774536
    2. ' *' → logprob: -1.3719003200531006
    3. '   ' → logprob: -2.6219003200531006
    4. '       ' → logprob: -3.8719003200531006
    5. '```' → logprob: -4.87190055847168
    6. ' répét' → logprob: -5.12190055847168
    7. ' repeated' → logprob: -5.74690055847168
    8. ' rép' → logprob: -5.87190055847168
    9. '[:' → logprob: -6.37190055847168
    10. 'repeat' → logprob: -6.62190055847168

Token 1231: 'itions' (ID: 5500)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.6962680220603943
    2. 'ée' → logprob: -0.6962680220603943
    3. 'ee' → logprob: -5.946268081665039
    4. 'e' → logprob: -8.321268081665039
    5. 'ed' → logprob: -8.946268081665039
    6. 'itif' → logprob: -9.946268081665039
    7. '
' → logprob: -10.946268081665039
    8. 'É' → logprob: -10.946268081665039
    9. '{' → logprob: -11.321268081665039
    10. 'ées' → logprob: -12.696268081665039

Token 1232: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.024442434310913
    2. ' of' → logprob: -1.399442434310913
    3. ' de' → logprob: -2.024442434310913
    4. 'pattern' → logprob: -2.149442434310913
    5. 'd' → logprob: -3.399442434310913
    6. '(pattern' → logprob: -3.774442434310913
    7. ' pattern' → logprob: -3.899442434310913
    8. '       ' → logprob: -3.899442434310913
    9. 'of' → logprob: -4.399442672729492
    10. '   ' → logprob: -4.649442672729492

Token 1233: ' motif' (ID: 72753)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.007729299832135439
    2. ' pattern' → logprob: -4.882729530334473
    3. '[' → logprob: -10.632729530334473
    4. '(pattern' → logprob: -10.757729530334473
    5. 'next' → logprob: -11.257729530334473
    6. 'pat' → logprob: -11.382729530334473
    7. ' motif' → logprob: -11.882729530334473
    8. 'len' → logprob: -11.882729530334473
    9. '```' → logprob: -12.132729530334473
    10. '
' → logprob: -12.382729530334473

Token 1234: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3438270092010498
    2. '.' → logprob: -1.4688270092010498
    3. ':' → logprob: -1.5938270092010498
    4. '       ' → logprob: -2.46882700920105
    5. '[:' → logprob: -2.96882700920105
    6. '[i' → logprob: -3.21882700920105
    7. '[]' → logprob: -4.218827247619629
    8. 'pattern' → logprob: -4.343827247619629
    9. '```' → logprob: -4.468827247619629
    10. '   ' → logprob: -4.468827247619629

Token 1235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007475529331713915
    2. '   ' → logprob: -5.88247537612915
    3. '[' → logprob: -6.50747537612915
    4. ':' → logprob: -7.00747537612915
    5. ')' → logprob: -7.75747537612915
    6. '\n' → logprob: -7.75747537612915
    7. '```' → logprob: -7.75747537612915
    8. '(' → logprob: -8.007475852966309
    9. '\' → logprob: -9.257475852966309
    10. '        
' → logprob: -9.632475852966309

Token 1236: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010601935908198357
    2. '```' → logprob: -5.760601997375488
    3. ':' → logprob: -6.260601997375488
    4. '   ' → logprob: -6.385601997375488
    5. ')' → logprob: -7.135601997375488
    6. '):
' → logprob: -7.260601997375488
    7. '(' → logprob: -7.760601997375488
    8. '):' → logprob: -8.135601997375488
    9. ':
' → logprob: -8.510601997375488
    10. '
' → logprob: -8.510601997375488

Token 1237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003242607053834945
    2. '```' → logprob: -8.125324249267578
    3. '   ' → logprob: -11.500324249267578
    4. '`' → logprob: -13.000324249267578
    5. ',' → logprob: -13.125324249267578
    6. 'n' → logprob: -13.250324249267578
    7. '​' → logprob: -13.500324249267578
    8. '           ' → logprob: -13.625324249267578
    9. '[' → logprob: -13.625324249267578
    10. '
' → logprob: -13.750324249267578

Token 1238: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.001818216871470213
    2. '       ' → logprob: -6.5018181800842285
    3. 'length' → logprob: -8.251818656921387
    4. ' n' → logprob: -10.126818656921387
    5. 'pattern' → logprob: -11.251818656921387
    6. '```' → logprob: -14.626818656921387
    7. '_n' → logprob: -15.126818656921387
    8. 'size' → logprob: -15.251818656921387
    9. '	n' → logprob: -15.751818656921387
    10. 'pat' → logprob: -15.751818656921387

Token 1239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762789845466614
    2. ' =' → logprob: -0.8262789845466614
    3. '=len' → logprob: -8.076278686523438
    4. '=n' → logprob: -10.701278686523438
    5. '=int' → logprob: -12.451278686523438
    6. 'n' → logprob: -13.826278686523438
    7. '       ' → logprob: -14.826278686523438
    8. ')' → logprob: -15.326278686523438
    9. '=size' → logprob: -16.076278686523438
    10. '=k' → logprob: -16.826278686523438

Token 1240: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004078639671206474
    2. ' len' → logprob: -5.5040788650512695
    3. '(len' → logprob: -16.379077911376953
    4. '       ' → logprob: -16.879077911376953
    5. '[len' → logprob: -16.879077911376953
    6. '=len' → logprob: -17.254077911376953
    7. '	len' → logprob: -18.754077911376953
    8. 'n' → logprob: -20.379077911376953
    9. '   ' → logprob: -20.879077911376953
    10. 'pattern' → logprob: -21.629077911376953

Token 1241: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.038044821470975876
    2. 'pattern' → logprob: -3.2880449295043945
    3. ' pattern' → logprob: -13.913044929504395
    4. '(' → logprob: -14.163044929504395
    5. '(
' → logprob: -14.163044929504395
    6. '_pattern' → logprob: -14.788044929504395
    7. ' (' → logprob: -15.163044929504395
    8. '```' → logprob: -15.913044929504395
    9. 'pat' → logprob: -16.163043975830078
    10. 'Pattern' → logprob: -16.788043975830078

Token 1242: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3765263259410858
    2. ')' → logprob: -1.3765263557434082
    3. '       ' → logprob: -3.001526355743408
    4. '):
' → logprob: -4.501526355743408
    5. '):' → logprob: -8.12652587890625
    6. '   ' → logprob: -9.62652587890625
    7. ')
' → logprob: -10.25152587890625
    8. '[' → logprob: -10.87652587890625
    9. '
' → logprob: -11.37652587890625
    10. ')n' → logprob: -11.50152587890625

Token 1243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017466964200139046
    2. ' for' → logprob: -6.501746654510498
    3. 'for' → logprob: -8.751747131347656
    4. '   ' → logprob: -9.626747131347656
    5. '	for' → logprob: -11.626747131347656
    6. '	' → logprob: -12.126747131347656
    7. '```' → logprob: -12.876747131347656
    8. '	   ' → logprob: -13.626747131347656
    9. '
' → logprob: -14.751747131347656
    10. '           ' → logprob: -15.001747131347656

Token 1244: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012035090912831947
    2. ' for' → logprob: -9.500120162963867
    3. '       ' → logprob: -10.000120162963867
    4. '```' → logprob: -17.500120162963867
    5. '	for' → logprob: -17.875120162963867
    6. '   ' → logprob: -19.125120162963867
    7. '
' → logprob: -20.000120162963867
    8. 'from' → logprob: -20.375120162963867
    9. '_for' → logprob: -21.250120162963867
    10. 'For' → logprob: -21.500120162963867

Token 1245: ' sub' (ID: 1543)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.73446003627032e-05
    2. ' k' → logprob: -9.500097274780273
    3. 'i' → logprob: -12.000097274780273
    4. 'length' → logprob: -12.125097274780273
    5. 'size' → logprob: -12.125097274780273
    6. '       ' → logprob: -13.750097274780273
    7. 'cycle' → logprob: -13.875097274780273
    8. 'candidate' → logprob: -14.000097274780273
    9. 'period' → logprob: -14.125097274780273
    10. 'l' → logprob: -14.125097274780273

Token 1246: 'len' (ID: 3303)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8888317942619324
    2. '_len' → logprob: -0.8888317942619324
    3. 'len' → logprob: -2.013831853866577
    4. ' in' → logprob: -3.888831853866577
    5. '_length' → logprob: -4.263831615447998
    6. 'size' → logprob: -6.013831615447998
    7. '_l' → logprob: -6.263831615447998
    8. 'n' → logprob: -6.388831615447998
    9. 'pattern' → logprob: -6.513831615447998
    10. 'k' → logprob: -7.388831615447998

Token 1247: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132709264755249
    2. ' in' → logprob: -1.313270926475525
    3. '	in' → logprob: -12.938270568847656
    4. 'i' → logprob: -13.063270568847656
    5. 's' → logprob: -13.688270568847656
    6. '_in' → logprob: -14.188270568847656
    7. ' ' → logprob: -14.313270568847656
    8. 'n' → logprob: -14.438270568847656
    9. ' ' → logprob: -14.813270568847656
    10. 'k' → logprob: -15.563270568847656

Token 1248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006595384911634028
    2. ' range' → logprob: -7.500659465789795
    3. '1' → logprob: -10.000659942626953
    4. '[' → logprob: -10.000659942626953
    5. '(range' → logprob: -11.125659942626953
    6. '(' → logprob: -14.875659942626953
    7. '   ' → logprob: -15.000659942626953
    8. '	range' → logprob: -15.750659942626953
    9. '
' → logprob: -16.500659942626953
    10. ' ' → logprob: -17.000659942626953

Token 1249: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -13.125004768371582
    3. '       ' → logprob: -13.625004768371582
    4. ' ' → logprob: -13.750004768371582
    5. '   ' → logprob: -15.125004768371582
    6. ',' → logprob: -18.250003814697266
    7. '           ' → logprob: -19.125003814697266
    8. '...' → logprob: -19.375003814697266
    9. '[' → logprob: -19.625003814697266
    10. ' (' → logprob: -19.875003814697266

Token 1250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.375003814697266
    4. '[' → logprob: -17.750003814697266
    5. '(' → logprob: -17.750003814697266
    6. '       ' → logprob: -18.000003814697266
    7. '１' → logprob: -18.437503814697266
    8. ',' → logprob: -18.500003814697266
    9. '...' → logprob: -18.937503814697266
    10. '۱' → logprob: -19.125003814697266

Token 1251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005301704630255699
    2. ',n' → logprob: -5.255301475524902
    3. 'n' → logprob: -10.755301475524902
    4. ' ,' → logprob: -10.880301475524902
    5. ',len' → logprob: -11.255301475524902
    6. '       ' → logprob: -11.880301475524902
    7. ',
' → logprob: -13.130301475524902
    8. ',length' → logprob: -13.255301475524902
    9. ',s' → logprob: -14.005301475524902
    10. '   ' → logprob: -14.005301475524902

Token 1252: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.13388703338569e-06
    2. ' n' → logprob: -11.875009536743164
    3. '(n' → logprob: -13.125009536743164
    4. '   ' → logprob: -16.375009536743164
    5. '(' → logprob: -17.625009536743164
    6. '	n' → logprob: -17.750009536743164
    7. '```' → logprob: -19.125009536743164
    8. ')' → logprob: -19.125009536743164
    9. ')n' → logprob: -19.250009536743164
    10. ' (' → logprob: -19.375009536743164

Token 1253: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005237548612058163
    2. ' +' → logprob: -5.255237579345703
    3. '):
' → logprob: -13.005237579345703
    4. '+n' → logprob: -14.505237579345703
    5. '   ' → logprob: -14.880237579345703
    6. '):' → logprob: -15.255237579345703
    7. '//' → logprob: -15.880237579345703
    8. '+
' → logprob: -16.005237579345703
    9. '＋' → logprob: -17.255237579345703
    10. '
' → logprob: -17.255237579345703

Token 1254: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -19.500001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '۱' → logprob: -20.875001907348633
    6. ' ' → logprob: -21.000001907348633
    7. '１' → logprob: -21.250001907348633
    8. '+' → logprob: -21.625001907348633
    9. '```' → logprob: -21.625001907348633
    10. ')' → logprob: -22.125001907348633

Token 1255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '
' → logprob: -17.5000057220459
    4. '2' → logprob: -18.2500057220459
    5. '0' → logprob: -18.2500057220459
    6. '   ' → logprob: -18.5000057220459
    7. ')' → logprob: -19.1250057220459
    8. ' ' → logprob: -19.5000057220459
    9. '+' → logprob: -19.6250057220459
    10. '=' → logprob: -20.0625057220459

Token 1256: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8524053692817688
    2. ':
' → logprob: -1.227405309677124
    3. '):
' → logprob: -1.352405309677124
    4. '       ' → logprob: -4.852405548095703
    5. '):' → logprob: -4.852405548095703
    6. ',' → logprob: -5.852405548095703
    7. '           ' → logprob: -5.977405548095703
    8. '():
' → logprob: -8.477405548095703
    9. '[' → logprob: -9.227405548095703
    10. '   ' → logprob: -9.352405548095703

Token 1257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006971586495637894
    2. '       ' → logprob: -5.75697135925293
    3. ':' → logprob: -6.38197135925293
    4. '   ' → logprob: -6.88197135925293
    5. ' if' → logprob: -7.38197135925293
    6. '[' → logprob: -9.63197135925293
    7. 'if' → logprob: -9.63197135925293
    8. ':
' → logprob: -9.75697135925293
    9. '<|end|>' → logprob: -9.75697135925293
    10. '		' → logprob: -10.25697135925293

Token 1258: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1532203108072281
    2. '           ' → logprob: -2.1532204151153564
    3. ' if' → logprob: -3.6532204151153564
    4. '               ' → logprob: -10.778220176696777
    5. '   ' → logprob: -11.153220176696777
    6. '	       ' → logprob: -13.403220176696777
    7. '	if' → logprob: -13.528220176696777
    8. ' ' → logprob: -14.153220176696777
    9. 'If' → logprob: -14.278220176696777
    10. '		' → logprob: -14.528220176696777

Token 1259: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004319804720580578
    2. ' n' → logprob: -7.750432014465332
    3. '           ' → logprob: -14.375432014465332
    4. '(n' → logprob: -14.500432014465332
    5. '	n' → logprob: -16.000431060791016
    6. '   ' → logprob: -16.875431060791016
    7. '               ' → logprob: -18.250431060791016
    8. '_n' → logprob: -18.250431060791016
    9. ' ' → logprob: -18.250431060791016
    10. ' ' → logprob: -18.625431060791016

Token 1260: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16028372943401337
    2. ' %' → logprob: -1.9102836847305298
    3. '%i' → logprob: -10.410284042358398
    4. '%s' → logprob: -10.910284042358398
    5. '%n' → logprob: -12.535284042358398
    6. '%d' → logprob: -13.035284042358398
    7. '%e' → logprob: -13.285284042358398
    8. '%x' → logprob: -13.285284042358398
    9. '%c' → logprob: -14.160284042358398
    10. ' ' → logprob: -15.285284042358398

Token 1261: ' sub' (ID: 1543)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.3915141355246305e-05
    2. 'sub' → logprob: -10.87502384185791
    3. '   ' → logprob: -13.12502384185791
    4. ' sub' → logprob: -13.12502384185791
    5. ' ' → logprob: -15.37502384185791
    6. '     ' → logprob: -15.62502384185791
    7. '       ' → logprob: -15.75002384185791
    8. '0' → logprob: -16.250024795532227
    9. '(s' → logprob: -16.375024795532227
    10. '```' → logprob: -17.187524795532227

Token 1262: 'len' (ID: 3303)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31400054693222046
    2. 'len' → logprob: -1.3140006065368652
    3. '   ' → logprob: -8.189000129699707
    4. 'l' → logprob: -9.814000129699707
    5. '     ' → logprob: -9.814000129699707
    6. 'n' → logprob: -9.814000129699707
    7. '       ' → logprob: -10.064000129699707
    8. '(len' → logprob: -10.564000129699707
    9. '[len' → logprob: -10.689000129699707
    10. '      ' → logprob: -11.064000129699707

Token 1263: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07447391748428345
    2. ' ==' → logprob: -2.9494738578796387
    3. '!=' → logprob: -4.199473857879639
    4. ' !=' → logprob: -5.449473857879639
    5. '=' → logprob: -9.949474334716797
    6. '==
' → logprob: -10.824474334716797
    7. ')==' → logprob: -11.324474334716797
    8. ':' → logprob: -12.574474334716797
    9. '===' → logprob: -12.949474334716797
    10. '```' → logprob: -12.949474334716797

Token 1264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -20.625001907348633
    4. '   ' → logprob: -22.125001907348633
    5. '<|end|>' → logprob: -22.125001907348633
    6. ' ' → logprob: -22.500001907348633
    7. '=' → logprob: -22.500001907348633
    8. '  ' → logprob: -22.875001907348633
    9. '```' → logprob: -23.000001907348633
    10. '
' → logprob: -23.125001907348633

Token 1265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -20.625
    4. 's' → logprob: -21.125
    5. '=' → logprob: -21.375
    6. '
' → logprob: -21.875
    7. '  ' → logprob: -21.875
    8. '   ' → logprob: -22.375
    9. ' ' → logprob: -22.5
    10. '٠' → logprob: -23.375

Token 1266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12689419090747833
    2. ':
' → logprob: -2.501894235610962
    3. '               ' → logprob: -3.501894235610962
    4. '           ' → logprob: -5.126893997192383
    5. ' and' → logprob: -7.001893997192383
    6. '                       ' → logprob: -9.626893997192383
    7. 'and' → logprob: -10.001893997192383
    8. '       ' → logprob: -10.626893997192383
    9. ':return' → logprob: -11.001893997192383
    10. '<|end|>' → logprob: -11.251893997192383

Token 1267: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42954006791114807
    2. '               ' → logprob: -1.0545400381088257
    3. ' if' → logprob: -8.304539680480957
    4. '                       ' → logprob: -9.054539680480957
    5. '       ' → logprob: -9.554539680480957
    6. '<|end|>' → logprob: -9.554539680480957
    7. ' and' → logprob: -9.679539680480957
    8. '   ' → logprob: -10.054539680480957
    9. ':' → logprob: -10.304539680480957
    10. '                   ' → logprob: -10.804539680480957

Token 1268: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12447357922792435
    2. 'continue' (adapté à ' continue') → logprob: -2.2494735717773438
    3. '               ' → logprob: -4.624473571777344
    4. '           ' → logprob: -6.374473571777344
    5. ' continues' → logprob: -10.749473571777344
    6. '	continue' → logprob: -11.499473571777344
    7. 'contin' → logprob: -11.499473571777344
    8. ' ' → logprob: -12.249473571777344
    9. '_continue' → logprob: -12.374473571777344
    10. '                   ' → logprob: -12.374473571777344

Token 1269: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006942813750356436
    2. ':' → logprob: -5.3819427490234375
    3. '               ' → logprob: -6.6319427490234375
    4. '       ' → logprob: -8.006942749023438
    5. ' if' → logprob: -8.131942749023438
    6. '<|end|>' → logprob: -9.506942749023438
    7. ':
' → logprob: -9.631942749023438
    8. '          ' → logprob: -10.506942749023438
    9. '   ' → logprob: -10.631942749023438
    10. '            ' → logprob: -10.756942749023438

Token 1270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002989968634210527
    2. '       ' → logprob: -8.875299453735352
    3. '   ' → logprob: -9.875299453735352
    4. '	       ' → logprob: -10.125299453735352
    5. ' if' → logprob: -10.875299453735352
    6. '               ' → logprob: -11.000299453735352
    7. '		' → logprob: -11.750299453735352
    8. '	   ' → logprob: -11.875299453735352
    9. ' ' → logprob: -12.125299453735352
    10. '<|end|>' → logprob: -13.250299453735352

Token 1271: ' motif' (ID: 72753)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01207655854523182
    2. 'if' → logprob: -4.762076377868652
    3. '   ' → logprob: -6.637076377868652
    4. '       ' → logprob: -6.887076377868652
    5. ' if' → logprob: -7.387076377868652
    6. 'pattern' → logprob: -8.887076377868652
    7. 'for' → logprob: -9.262076377868652
    8. 'valid' → logprob: -9.262076377868652
    9. 'match' → logprob: -9.887076377868652
    10. '               ' → logprob: -10.012076377868652

Token 1272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868767023086548
    2. ' =' → logprob: -1.1368767023086548
    3. '           ' → logprob: -12.636877059936523
    4. '       ' → logprob: -13.886877059936523
    5. 's' → logprob: -14.886877059936523
    6. ':' → logprob: -15.511877059936523
    7. '        ' → logprob: -15.761877059936523
    8. '   ' → logprob: -16.011877059936523
    9. '=[' → logprob: -16.386877059936523
    10. '＝' → logprob: -16.386877059936523

Token 1273: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0015023599844425917
    2. ' pattern' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.251502990722656
    4. '[' → logprob: -18.376502990722656
    5. '(pattern' → logprob: -18.876502990722656
    6. '       ' → logprob: -19.376502990722656
    7. '           ' → logprob: -19.876502990722656
    8. '
' → logprob: -20.626502990722656
    9. 'Pattern' → logprob: -20.876502990722656
    10. '```' → logprob: -21.376502990722656

Token 1274: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0887693241238594
    2. '[' → logprob: -2.8387694358825684
    3. '=' → logprob: -4.213769435882568
    4. ' =' → logprob: -4.838769435882568
    5. '==' → logprob: -6.213769435882568
    6. '[:]' → logprob: -6.963769435882568
    7. ' ==' → logprob: -7.588769435882568
    8. '<|end|>' → logprob: -9.33876895904541
    9. '[
' → logprob: -10.08876895904541
    10. '       ' → logprob: -10.21376895904541

Token 1275: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.45848218582978e-06
    2. '(s' → logprob: -14.37500286102295
    3. '   ' → logprob: -14.37500286102295
    4. '{s' → logprob: -15.75000286102295
    5. '{' → logprob: -16.000001907348633
    6. '
' → logprob: -16.375001907348633
    7. '```' → logprob: -16.375001907348633
    8. '`s' → logprob: -16.562501907348633
    9. '%s' → logprob: -16.562501907348633
    10. '       ' → logprob: -16.625001907348633

Token 1276: 'ubl' (ID: 2949)
  Prédit: 'ubl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubl' → logprob: -0.0037363029550760984
    2. 'ub' → logprob: -5.62873649597168
    3. 'ublin' → logprob: -9.12873649597168
    4. 'uble' → logprob: -12.00373649597168
    5. 'ulen' → logprob: -12.37873649597168
    6. 'ublic' → logprob: -12.75373649597168
    7. 'ubs' → logprob: -12.75373649597168
    8. '
' → logprob: -13.12873649597168
    9. 'уб' → logprob: -13.37873649597168
    10. 'u' → logprob: -13.37873649597168

Token 1277: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.5276693105697632
    2. 'len' → logprob: -1.0276693105697632
    3. 'ubl' → logprob: -3.2776694297790527
    4. 'elen' → logprob: -4.527669429779053
    5. 'e' → logprob: -6.902669429779053
    6. 's' → logprob: -7.902669429779053
    7. 'eln' → logprob: -8.152668952941895
    8. '   ' → logprob: -8.277668952941895
    9. 'upl' → logprob: -8.402668952941895
    10. '=len' → logprob: -8.527668952941895

Token 1278: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.05359119176864624
    2. ']' → logprob: -3.303591251373291
    3. '           ' → logprob: -4.178591251373291
    4. ']
' → logprob: -9.178590774536133
    5. '       ' → logprob: -12.803590774536133
    6. ']

' → logprob: -13.553590774536133
    7. ']:
' → logprob: -14.803590774536133
    8. '               ' → logprob: -14.928590774536133
    9. ' ]
' → logprob: -15.178590774536133
    10. ':]
' → logprob: -15.178590774536133

Token 1279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.896309739408025e-07
    2. '       ' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '               ' → logprob: -17.0
    5. '          ' → logprob: -17.375
    6. '<|end|>' → logprob: -17.75
    7. '		' → logprob: -18.5
    8. '                   ' → logprob: -18.75
    9. 'if' → logprob: -18.875
    10. '	       ' → logprob: -19.25

Token 1280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023264696821570396
    2. '           ' → logprob: -3.7732646465301514
    3. ' if' → logprob: -10.89826488494873
    4. '   ' → logprob: -14.64826488494873
    5. '               ' → logprob: -15.64826488494873
    6. '       ' → logprob: -16.023263931274414
    7. 'valid' → logprob: -17.773263931274414
    8. 'for' → logprob: -18.523263931274414
    9. 'all' → logprob: -19.148263931274414
    10. 'If' → logprob: -19.523263931274414

Token 1281: ' motif' (ID: 72753)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.9014801383018494
    2. ' all' → logprob: -1.1514801979064941
    3. ' pattern' → logprob: -1.9014801979064941
    4. 'all' → logprob: -2.151480197906494
    5. ' motif' → logprob: -4.776480197906494
    6. 'mot' → logprob: -5.651480197906494
    7. '   ' → logprob: -8.901479721069336
    8. 'pat' → logprob: -10.526479721069336
    9. '       ' → logprob: -10.526479721069336
    10. '(pattern' → logprob: -10.651479721069336

Token 1282: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4293244481086731
    2. '*' → logprob: -1.0543243885040283
    3. '==' → logprob: -8.17932415008545
    4. ' ==' → logprob: -8.92932415008545
    5. '*n' → logprob: -9.80432415008545
    6. 's' → logprob: -10.05432415008545
    7. '*(' → logprob: -10.17932415008545
    8. '*s' → logprob: -10.67932415008545
    9. '   ' → logprob: -11.55432415008545
    10. '       ' → logprob: -11.67932415008545

Token 1283: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001214237418025732
    2. ' (' → logprob: -9.250121116638184
    3. '(' → logprob: -10.875121116638184
    4. '   ' → logprob: -13.250121116638184
    5. '(int' → logprob: -13.250121116638184
    6. '(num' → logprob: -14.000121116638184
    7. '((' → logprob: -15.375121116638184
    8. '       ' → logprob: -15.500121116638184
    9. '(number' → logprob: -15.750121116638184
    10. '(nd' → logprob: -16.0001220703125

Token 1284: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07890113443136215
    2. '(n' → logprob: -2.5789010524749756
    3. ' n' → logprob: -12.453901290893555
    4. '(' → logprob: -12.828901290893555
    5. ' (' → logprob: -12.828901290893555
    6. '   ' → logprob: -14.703901290893555
    7. '_n' → logprob: -14.953901290893555
    8. '[n' → logprob: -15.453901290893555
    9. '```' → logprob: -15.453901290893555
    10. '	n' → logprob: -15.578901290893555

Token 1285: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.01633581519126892
    2. ' //' → logprob: -4.141335964202881
    3. '==' → logprob: -8.766335487365723
    4. '#' → logprob: -9.641335487365723
    5. 's' → logprob: -11.391335487365723
    6. '           ' → logprob: -12.016335487365723
    7. '   ' → logprob: -12.141335487365723
    8. '//=' → logprob: -12.391335487365723
    9. '```' → logprob: -12.391335487365723
    10. '       ' → logprob: -12.516335487365723

Token 1286: ' sub' (ID: 1543)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.214019307051785e-05
    2. '(s' → logprob: -10.625032424926758
    3. ' sub' → logprob: -12.000032424926758
    4. 'n' → logprob: -14.500032424926758
    5. 'sub' → logprob: -14.875032424926758
    6. '(' → logprob: -15.625032424926758
    7. '	s' → logprob: -16.000032424926758
    8. '   ' → logprob: -16.125032424926758
    9. ' s' → logprob: -17.000032424926758
    10. '
' → logprob: -17.000032424926758

Token 1287: 'len' (ID: 3303)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002141101285815239
    2. 'len' → logprob: -6.627140998840332
    3. '(' → logprob: -8.502140998840332
    4. '(s' → logprob: -8.877140998840332
    5. 'ulen' → logprob: -9.377140998840332
    6. '(len' → logprob: -9.502140998840332
    7. '   ' → logprob: -9.627140998840332
    8. '...' → logprob: -10.439640998840332
    9. 'l' → logprob: -10.689640998840332
    10. 'n' → logprob: -10.877140998840332

Token 1288: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.580716609954834
    2. '==' → logprob: -0.830716609954834
    3. ')' → logprob: -5.705716609954834
    4. ')==' → logprob: -6.580716609954834
    5. '           ' → logprob: -11.705717086791992
    6. '        ' → logprob: -11.830717086791992
    7. '          ' → logprob: -11.955717086791992
    8. ']==' → logprob: -12.080717086791992
    9. '            ' → logprob: -12.455717086791992
    10. '==
' → logprob: -12.455717086791992

Token 1289: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12693944573402405
    2. ' ==' → logprob: -2.126939535140991
    3. '==
' → logprob: -11.75193977355957
    4. '=' → logprob: -13.75193977355957
    5. ')==' → logprob: -14.00193977355957
    6. '```' → logprob: -14.62693977355957
    7. ']==' → logprob: -14.87693977355957
    8. '===' → logprob: -15.75193977355957
    9. '[:]' → logprob: -15.75193977355957
    10. '()==' → logprob: -16.00193977355957

Token 1290: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0007099286303855479
    2. ' pattern' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.875709533691406
    4. 'pat' → logprob: -19.500709533691406
    5. '(pattern' → logprob: -19.875709533691406
    6. ' ' → logprob: -20.125709533691406
    7. 'patterns' → logprob: -22.000709533691406
    8. '
' → logprob: -22.125709533691406
    9. '  ' → logprob: -22.500709533691406
    10. '           ' → logprob: -22.625709533691406

Token 1291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12988582253456116
    2. ':
' → logprob: -2.1298859119415283
    3. '               ' → logprob: -6.129885673522949
    4. ':return' → logprob: -7.254885673522949
    5. '           ' → logprob: -9.87988567352295
    6. '):
' → logprob: -12.00488567352295
    7. '):' → logprob: -12.62988567352295
    8. '.' → logprob: -13.12988567352295
    9. ':
' → logprob: -13.50488567352295
    10. '<|end|>' → logprob: -14.12988567352295

Token 1292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.782141569303349e-05
    2. ':' → logprob: -10.62509822845459
    3. '           ' → logprob: -10.87509822845459
    4. ':return' → logprob: -11.00009822845459
    5. ' return' → logprob: -11.62509822845459
    6. '                   ' → logprob: -11.75009822845459
    7. 'return' → logprob: -11.75009822845459
    8. '                       ' → logprob: -12.25009822845459
    9. '                               ' → logprob: -13.25009822845459
    10. '              ' → logprob: -13.25009822845459

Token 1293: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3144167959690094
    2. '               ' → logprob: -1.314416766166687
    3. ' return' → logprob: -6.814416885375977
    4. '           ' → logprob: -10.439416885375977
    5. '                   ' → logprob: -11.439416885375977
    6. '	return' → logprob: -11.564416885375977
    7. '{return' → logprob: -12.564416885375977
    8. '   ' → logprob: -13.564416885375977
    9. ':return' → logprob: -14.564416885375977
    10. '       ' → logprob: -14.814416885375977

Token 1294: ' motif' (ID: 72753)
  Prédit: 'mot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mot' → logprob: -0.0019644396379590034
    2. ' motif' → logprob: -6.251964569091797
    3. 'pattern' → logprob: -10.251964569091797
    4. 'motiv' → logprob: -14.751964569091797
    5. ' pattern' → logprob: -16.626964569091797
    6. ' mot' → logprob: -17.001964569091797
    7. 'pat' → logprob: -17.626964569091797
    8. 'mo' → logprob: -18.501964569091797
    9. 'Mot' → logprob: -20.126964569091797
    10. ' motifs' → logprob: -20.376964569091797

Token 1295: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1296: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1297: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1298: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0009114635176956654
    2. ' pattern' → logprob: -7.000911235809326
    3. 'pat' → logprob: -18.875911712646484
    4. '(pattern' → logprob: -21.250911712646484
    5. 'patterns' → logprob: -23.000911712646484
    6. '.pattern' → logprob: -23.500911712646484
    7. '[]' → logprob: -23.750911712646484
    8. 'Pattern' → logprob: -23.875911712646484
    9. '[' → logprob: -24.000911712646484
    10. 'list' → logprob: -24.500911712646484

Token 1299: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1300: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1301: ' fallback' (ID: 66264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1302: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1303: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1304: ' Input' (ID: 10090)
  Prédit: ' Rhythm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rhythm' → logprob: -0.8748272657394409
    2. 'Rh' → logprob: -0.9998272657394409
    3. 'Hex' → logprob: -2.9998273849487305
    4. ' Hex' → logprob: -3.1248273849487305
    5. ' Pattern' → logprob: -3.4998273849487305
    6. 'Pattern' → logprob: -3.6248273849487305
    7. 'Old' → logprob: -4.6248273849487305
    8. ' Music' → logprob: -4.8748273849487305
    9. 'New' → logprob: -5.2498273849487305
    10. 'Music' → logprob: -5.3748273849487305

Token 1305: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.6866772174835205
    2. 'Handler' → logprob: -1.3116772174835205
    3. 'Parser' → logprob: -1.6866772174835205
    4. 'Processor' → logprob: -3.5616772174835205
    5. 'Line' → logprob: -5.936676979064941
    6. 'Validator' → logprob: -6.061676979064941
    7. 'Provider' → logprob: -6.186676979064941
    8. 'Buffer' → logprob: -6.686676979064941
    9. 'Manager' → logprob: -6.686676979064941
    10. 'Data' → logprob: -6.936676979064941

Token 1306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013406005455181003
    2. ':
' → logprob: -6.626340389251709
    3. '<|end|>' → logprob: -12.876340866088867
    4. '(' → logprob: -13.001340866088867
    5. '```' → logprob: -13.126340866088867
    6. ':

' → logprob: -13.126340866088867
    7. '():' → logprob: -13.501340866088867
    8. '(object' → logprob: -13.626340866088867
    9. ':def' → logprob: -13.876340866088867
    10. '):' → logprob: -14.501340866088867

Token 1307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007944972603581846
    2. 'class' → logprob: -7.250794410705566
    3. '```' → logprob: -9.875794410705566
    4. 'import' → logprob: -10.750794410705566
    5. '<|end|>' → logprob: -12.375794410705566
    6. '    
' → logprob: -13.375794410705566
    7. 'def' → logprob: -14.125794410705566
    8. '...' → logprob: -14.250794410705566
    9. ':' → logprob: -14.250794410705566
    10. ' class' → logprob: -14.875794410705566

Token 1308: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021449731662869453
    2. 'class' → logprob: -3.8964498043060303
    3. 'def' → logprob: -7.521449565887451
    4. '
' → logprob: -8.89645004272461
    5. 'import' → logprob: -9.39645004272461
    6. '```' → logprob: -9.64645004272461
    7. '    
' → logprob: -10.52145004272461
    8. ':' → logprob: -10.89645004272461
    9. ' class' → logprob: -11.52145004272461
    10. ' def' → logprob: -11.89645004272461

Token 1309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6939732432365417
    2. 'class' → logprob: -0.6939732432365417
    3. 'def' → logprob: -7.568973064422607
    4. ':' → logprob: -9.318973541259766
    5. '```' → logprob: -9.818973541259766
    6. ' class' → logprob: -10.318973541259766
    7. 'import' → logprob: -10.568973541259766
    8. 'classmethod' → logprob: -10.818973541259766
    9. '<|end|>' → logprob: -11.068973541259766
    10. ')' → logprob: -11.318973541259766

Token 1310: ' Flux' (ID: 111568)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4841521382331848
    2. 'def' → logprob: -0.9841521382331848
    3. '   ' → logprob: -5.484152317047119
    4. '
' → logprob: -5.484152317047119
    5. 'import' → logprob: -7.609152317047119
    6. '"""
' → logprob: -7.859152317047119
    7. 'staticmethod' → logprob: -8.234151840209961
    8. ' def' → logprob: -8.484151840209961
    9. '```' → logprob: -8.484151840209961
    10. 'classmethod' → logprob: -9.734151840209961

Token 1311: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6343948841094971
    2. '   ' → logprob: -1.134394884109497
    3. 'def' → logprob: -2.134394884109497
    4. ':
' → logprob: -4.134394645690918
    5. 'class' → logprob: -4.509394645690918
    6. ' def' → logprob: -7.259394645690918
    7. '  ' → logprob: -7.759394645690918
    8. '.readline' → logprob: -8.134394645690918
    9. '():' → logprob: -8.759394645690918
    10. ' class' → logprob: -8.759394645690918

Token 1312: ' lecture' (ID: 31993)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.7876882553100586
    2. 'sys' → logprob: -1.6626882553100586
    3. 'input' → logprob: -1.9126882553100586
    4. 'def' → logprob: -2.6626882553100586
    5. 'stdin' → logprob: -3.0376882553100586
    6. 'entrée' → logprob: -3.2876882553100586
    7. 'lect' → logprob: -4.537688255310059
    8. 'code' → logprob: -4.662688255310059
    9. 'texte' → logprob: -5.287688255310059
    10. 'l' → logprob: -5.662688255310059

Token 1313: ' avanc' (ID: 87985)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4079873561859131
    2. ':' → logprob: -1.157987356185913
    3. '   ' → logprob: -4.032987594604492
    4. ' :
' → logprob: -7.157987594604492
    5. '):
' → logprob: -7.532987594604492
    6. ' :' → logprob: -7.532987594604492
    7. '():
' → logprob: -8.157987594604492
    8. '
' → logprob: -8.532987594604492
    9. '(' → logprob: -8.657987594604492
    10. '  ' → logprob: -9.657987594604492

Token 1314: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8772031664848328
    2. 'class' → logprob: -1.0022032260894775
    3. '(
' → logprob: -2.8772032260894775
    4. 'def' → logprob: -2.8772032260894775
    5. ' (
' → logprob: -3.7522032260894775
    6. ':' → logprob: -3.8772032260894775
    7. 'e' → logprob: -5.002202987670898
    8. 'ée' → logprob: -5.002202987670898
    9. '  ' → logprob: -5.252202987670898
    10. ' ' → logprob: -5.252202987670898

Token 1315: ' depuis' (ID: 16277)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8140409588813782
    2. ':
' → logprob: -0.8140409588813782
    3. 'class' → logprob: -2.5640408992767334
    4. '   ' → logprob: -3.5640408992767334
    5. '{
' → logprob: -6.5640411376953125
    6. ' :' → logprob: -6.9390411376953125
    7. '
' → logprob: -7.1890411376953125
    8. '(' → logprob: -7.1890411376953125
    9. ' :
' → logprob: -7.1890411376953125
    10. '```' → logprob: -7.1890411376953125

Token 1316: ' stdin' (ID: 75143)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.000574836041778326
    2. 'stdin' → logprob: -7.625575065612793
    3. ' sys' → logprob: -9.875575065612793
    4. '(sys' → logprob: -12.000575065612793
    5. '```' → logprob: -12.250575065612793
    6. 'io' → logprob: -12.250575065612793
    7. '=sys' → logprob: -12.375575065612793
    8. 'def' → logprob: -12.875575065612793
    9. '
' → logprob: -12.875575065612793
    10. 'input' → logprob: -13.375575065612793

Token 1317: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38901251554489136
    2. ':' → logprob: -1.7640125751495361
    3. ':
' → logprob: -2.014012575149536
    4. '
' → logprob: -4.639012336730957
    5. ' :' → logprob: -5.889012336730957
    6. ' :
' → logprob: -6.139012336730957
    7. '{
' → logprob: -7.139012336730957
    8. ',' → logprob: -7.264012336730957
    9. '{' → logprob: -8.639012336730957
    10. '.' → logprob: -8.889012336730957

Token 1318: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09750749170780182
    2. ' permettant' → logprob: -3.8475074768066406
    3. 'avec' → logprob: -4.472507476806641
    4. ' capable' → logprob: -4.597507476806641
    5. 'adapt' → logprob: -4.597507476806641
    6. 'buffer' → logprob: -4.847507476806641
    7. 'dé' → logprob: -5.722507476806641
    8. ' avec' → logprob: -5.972507476806641
    9. 'compatible' → logprob: -6.222507476806641
    10. ' conçu' → logprob: -6.347507476806641

Token 1319: ' modular' (ID: 61198)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2585505545139313
    2. 'l' → logprob: -2.5085506439208984
    3. 'f' → logprob: -3.6335506439208984
    4. 'le' → logprob: -3.7585506439208984
    5. 'une' → logprob: -4.383550643920898
    6. 'gestion' → logprob: -5.133550643920898
    7. ' la' → logprob: -5.258550643920898
    8. 'lecture' → logprob: -5.258550643920898
    9. 'trait' → logprob: -5.383550643920898
    10. 'an' → logprob: -5.383550643920898

Token 1320: 'ité' (ID: 3761)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.716999351978302
    2. 'ité' → logprob: -0.966999351978302
    3. 'ity' → logprob: -2.5919992923736572
    4. 'e' → logprob: -3.3419992923736572
    5. 'iser' → logprob: -5.341999530792236
    6. 'class' → logprob: -6.091999530792236
    7. 'import' → logprob: -6.216999530792236
    8. 'input' → logprob: -6.216999530792236
    9. 'iter' → logprob: -6.341999530792236
    10. 'er' → logprob: -6.466999530792236

Token 1321: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25650644302368164
    2. '.' → logprob: -2.3815064430236816
    3. ':' → logprob: -2.7565064430236816
    4. ',' → logprob: -4.006506443023682
    5. ' et' → logprob: -4.006506443023682
    6. ' and' → logprob: -4.506506443023682
    7. 'et' → logprob: -4.631506443023682
    8. 'class' → logprob: -5.381506443023682
    9. '<|end|>' → logprob: -6.006506443023682
    10. 'and' → logprob: -6.631506443023682

Token 1322: ' tests' (ID: 10742)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -1.538196325302124
    2. 'fac' → logprob: -1.538196325302124
    3. 'ext' → logprob: -1.663196325302124
    4. 'flex' → logprob: -1.788196325302124
    5. 'tests' → logprob: -2.413196325302124
    6. 'ré' → logprob: -3.038196325302124
    7. 'gestion' → logprob: -3.538196325302124
    8. 'compat' → logprob: -4.913196563720703
    9. 'commod' → logprob: -5.413196563720703
    10. 'buffer' → logprob: -5.663196563720703

Token 1323: ' potenti' (ID: 98175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11219774186611176
    2. ':' → logprob: -2.8621976375579834
    3. ':
' → logprob: -3.6121976375579834
    4. '
' → logprob: -4.1121978759765625
    5. '.' → logprob: -5.7371978759765625
    6. 'class' → logprob: -7.6121978759765625
    7. '<|end|>' → logprob: -7.9871978759765625
    8. '```' → logprob: -8.112197875976562
    9. '.
' → logprob: -8.737197875976562
    10. '):
' → logprob: -8.737197875976562

Token 1324: 'elles' (ID: 8500)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05815465748310089
    2. 'té' → logprob: -3.058154582977295
    3. 'és' → logprob: -5.183154582977295
    4. 'ty' → logprob: -6.183154582977295
    5. 'e' → logprob: -7.558154582977295
    6. 'te' → logprob: -7.808154582977295
    7. 'ties' → logprob: -7.933154582977295
    8. 'ité' → logprob: -9.183155059814453
    9. '#' → logprob: -9.183155059814453
    10. '```' → logprob: -9.808155059814453

Token 1325: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9062623381614685
    2. ':' → logprob: -1.0312623977661133
    3. '.' → logprob: -1.7812623977661133
    4. '.
' → logprob: -3.7812623977661133
    5. '   ' → logprob: -4.031262397766113
    6. ',' → logprob: -4.906262397766113
    7. '
' → logprob: -5.281262397766113
    8. ':

' → logprob: -5.906262397766113
    9. '<|end|>' → logprob: -6.156262397766113
    10. 'class' → logprob: -6.281262397766113

Token 1326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8003342747688293
    2. '
' → logprob: -1.1753342151641846
    3. 'class' → logprob: -1.5503342151641846
    4. '```' → logprob: -3.5503342151641846
    5. '    
' → logprob: -7.425334453582764
    6. '"""
' → logprob: -9.050333976745605
    7. '"""' → logprob: -9.050333976745605
    8. ' class' → logprob: -9.050333976745605
    9. '``' → logprob: -9.675333976745605
    10. ' 
' → logprob: -10.300333976745605

Token 1327: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09861505031585693
    2. '   ' → logprob: -2.5986151695251465
    3. 'class' → logprob: -4.0986151695251465
    4. '    
' → logprob: -6.0986151695251465
    5. '```' → logprob: -7.9736151695251465
    6. ' 
' → logprob: -9.223614692687988
    7. '"""' → logprob: -9.598614692687988
    8. '"""
' → logprob: -9.598614692687988
    9. '

' → logprob: -10.598614692687988
    10. '<|end|>' → logprob: -11.223614692687988

Token 1328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053129736334085464
    2. 'def' → logprob: -5.255312919616699
    3. ' def' → logprob: -9.8803129196167
    4. '	def' → logprob: -10.8803129196167
    5. 'class' → logprob: -12.8803129196167
    6. '    
' → logprob: -13.0053129196167
    7. '
' → logprob: -13.2553129196167
    8. '```' → logprob: -13.6303129196167
    9. 'indent' → logprob: -15.0053129196167
    10. '   ' → logprob: -15.2553129196167

Token 1329: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008274241350591183
    2. ' def' → logprob: -5.008274078369141
    3. '   ' → logprob: -6.508274078369141
    4. '
' → logprob: -10.63327407836914
    5. 'class' → logprob: -11.00827407836914
    6. '```' → logprob: -11.13327407836914
    7. '	def' → logprob: -11.75827407836914
    8. '__' → logprob: -13.00827407836914
    9. 'de' → logprob: -15.00827407836914
    10. 'import' → logprob: -15.00827407836914

Token 1330: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010615982115268707
    2. ' __' → logprob: -4.885615825653076
    3. 'def' → logprob: -6.510615825653076
    4. 'read' → logprob: -7.385615825653076
    5. 'init' → logprob: -8.010616302490234
    6. '_next' → logprob: -8.260616302490234
    7. 'next' → logprob: -9.135616302490234
    8. '___' → logprob: -9.510616302490234
    9. ' def' → logprob: -9.885616302490234
    10. '_read' → logprob: -10.260616302490234

Token 1331: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.704065213445574e-05
    2. 'next' → logprob: -10.000046730041504
    3. 'iter' → logprob: -13.375046730041504
    4. ' init' → logprob: -16.87504768371582
    5. 'call' → logprob: -18.25004768371582
    6. 'def' → logprob: -19.87504768371582
    7. '_init' → logprob: -19.87504768371582
    8. 'stdin' → logprob: -20.12504768371582
    9. 'ini' → logprob: -20.37504768371582
    10. 'initi' → logprob: -20.50004768371582

Token 1332: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02633594535291195
    2. '__(' → logprob: -3.6513359546661377
    3. '__(
' → logprob: -11.026335716247559
    4. ' (' → logprob: -11.776335716247559
    5. '(' → logprob: -12.151335716247559
    6. 'self' → logprob: -13.776335716247559
    7. '   ' → logprob: -13.901335716247559
    8. '_(' → logprob: -14.151335716247559
    9. '(sys' → logprob: -14.276335716247559
    10. ')(' → logprob: -14.401335716247559

Token 1333: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.320199877838604e-07
    2. ' self' → logprob: -15.625
    3. ')' → logprob: -16.125
    4. '       ' → logprob: -17.5
    5. '):
' → logprob: -17.5
    6. '   ' → logprob: -18.25
    7. '
' → logprob: -20.125
    8. '	self' → logprob: -20.75
    9. '0' → logprob: -21.125
    10. '):' → logprob: -21.25

Token 1334: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.618619441986084
    2. '(self' → logprob: -1.493619441986084
    3. 'self' → logprob: -1.493619441986084
    4. ',self' → logprob: -4.993619441986084
    5. '):
' → logprob: -5.618619441986084
    6. ')(' → logprob: -7.243619441986084
    7. '):' → logprob: -7.743619441986084
    8. ')' → logprob: -8.618619918823242
    9. '
' → logprob: -8.868619918823242
    10. ' (' → logprob: -9.118619918823242

Token 1335: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007425647345371544
    2. ' self' → logprob: -8.37574291229248
    3. '   ' → logprob: -8.50074291229248
    4. 'sys' → logprob: -8.62574291229248
    5. '       ' → logprob: -9.25074291229248
    6. '(self' → logprob: -10.62574291229248
    7. '	self' → logprob: -13.00074291229248
    8. '0' → logprob: -13.37574291229248
    9. 'import' → logprob: -13.87574291229248
    10. ' ' → logprob: -14.37574291229248

Token 1336: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013527349568903446
    2. 'import' → logprob: -4.8885273933410645
    3. '       ' → logprob: -5.5135273933410645
    4. ' self' → logprob: -6.6385273933410645
    5. '
' → logprob: -7.6385273933410645
    6. 'pass' → logprob: -9.638526916503906
    7. '   ' → logprob: -11.638526916503906
    8. '        
' → logprob: -13.388526916503906
    9. '	self' → logprob: -13.388526916503906
    10. 'sys' → logprob: -13.638526916503906

Token 1337: '.lines' (ID: 96601)
  Prédit: '.buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.1691894382238388
    2. '._' → logprob: -2.544189453125
    3. 'buffer' → logprob: -3.419189453125
    4. '.stdin' → logprob: -4.044189453125
    5. '_buffer' → logprob: -4.669189453125
    6. '.lines' → logprob: -4.669189453125
    7. '.input' → logprob: -5.544189453125
    8. 'input' → logprob: -7.169189453125
    9. '.readline' → logprob: -7.669189453125
    10. '.buf' → logprob: -7.919189453125

Token 1338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05537506192922592
    2. ' =' → logprob: -2.930375099182129
    3. '=[]' → logprob: -8.430375099182129
    4. '   ' → logprob: -8.555375099182129
    5. 'import' → logprob: -10.430375099182129
    6. '=[]
' → logprob: -10.555375099182129
    7. '=sys' → logprob: -11.430375099182129
    8. ':' → logprob: -12.555375099182129
    9. '       ' → logprob: -12.680375099182129
    10. '<|end|>' → logprob: -12.930375099182129

Token 1339: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3140006363391876
    2. '[]' → logprob: -1.3140006065368652
    3. '[]
' → logprob: -8.064001083374023
    4. 'iter' → logprob: -8.189001083374023
    5. ' []' → logprob: -10.064001083374023
    6. '(sys' → logprob: -10.439001083374023
    7. ' sys' → logprob: -11.314001083374023
    8. '[' → logprob: -11.314001083374023
    9. '[]}' → logprob: -11.314001083374023
    10. '[],' → logprob: -11.564001083374023

Token 1340: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.016616291366518e-05
    2. 'stdin' → logprob: -10.000070571899414
    3. '.stdout' → logprob: -11.375070571899414
    4. '.modules' → logprob: -11.625070571899414
    5. '.' → logprob: -13.500070571899414
    6. '.__' → logprob: -14.250070571899414
    7. '.argv' → logprob: -14.625070571899414
    8. '(stdin' → logprob: -14.625070571899414
    9. '._' → logprob: -15.250070571899414
    10. '.stderr' → logprob: -15.250070571899414

Token 1341: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5765902400016785
    2. '.readlines' → logprob: -0.8265902400016785
    3. 'buffer' → logprob: -8.576590538024902
    4. '.read' → logprob: -9.076590538024902
    5. 'read' → logprob: -9.201590538024902
    6. '   ' → logprob: -9.326590538024902
    7. 'lines' → logprob: -10.451590538024902
    8. '.buffer' → logprob: -10.576590538024902
    9. '_lines' → logprob: -10.576590538024902
    10. '_buffer' → logprob: -11.076590538024902

Token 1342: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0020528354216367006
    2. '()' → logprob: -6.3770527839660645
    3. 'lines' → logprob: -8.002053260803223
    4. '()
' → logprob: -11.377053260803223
    5. '_lines' → logprob: -13.252053260803223
    6. 'ines' → logprob: -13.877053260803223
    7. '(' → logprob: -14.377053260803223
    8. '()).' → logprob: -15.127053260803223
    9. '()

' → logprob: -15.627053260803223
    10. 'split' → logprob: -15.752053260803223

Token 1343: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032766987569630146
    2. 'strip' → logprob: -5.753276824951172
    3. 'decode' → logprob: -9.253276824951172
    4. 'read' → logprob: -13.503276824951172
    5. 'rstrip' → logprob: -13.503276824951172
    6. 'lines' → logprob: -15.253276824951172
    7. ' split' → logprob: -16.503276824951172
    8. '(split' → logprob: -17.128276824951172
    9. 'replace' → logprob: -17.878276824951172
    10. '_split' → logprob: -18.503276824951172

Token 1344: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.001508674118667841
    2. '('\' → logprob: -6.501508712768555
    3. '()' → logprob: -12.001508712768555
    4. '()\' → logprob: -16.626508712768555
    5. '("\' → logprob: -16.751508712768555
    6. ''\' → logprob: -18.876508712768555
    7. 'line' → logprob: -19.626508712768555
    8. '()
' → logprob: -19.751508712768555
    9. 'Lines' → logprob: -20.751508712768555
    10. 'LINES' → logprob: -20.876508712768555

Token 1345: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5482048392295837
    2. '       ' → logprob: -1.0482048988342285
    3. '<|end|>' → logprob: -2.7982048988342285
    4. '
' → logprob: -5.1732048988342285
    5. 'def' → logprob: -6.1732048988342285
    6. 'self' → logprob: -7.4232048988342285
    7. '<|end|>' → logprob: -7.5482048988342285
    8. '()' → logprob: -7.5482048988342285
    9. ')' → logprob: -8.29820442199707
    10. '    
' → logprob: -8.29820442199707

Token 1346: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020616866648197174
    2. 'self' → logprob: -4.7706170082092285
    3. '       ' → logprob: -5.0206170082092285
    4. 'def' → logprob: -5.2706170082092285
    5. ' self' → logprob: -9.77061653137207
    6. ' def' → logprob: -9.89561653137207
    7. '
' → logprob: -10.39561653137207
    8. '	self' → logprob: -10.89561653137207
    9. '	def' → logprob: -11.77061653137207
    10. '<|end|>' → logprob: -11.77061653137207

Token 1347: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04374160245060921
    2. '       ' → logprob: -3.1687417030334473
    3. ' self' → logprob: -7.543741703033447
    4. '   ' → logprob: -8.918741226196289
    5. '	self' → logprob: -9.793741226196289
    6. '
' → logprob: -11.793741226196289
    7. 'def' → logprob: -12.043741226196289
    8. '	' → logprob: -12.543741226196289
    9. '0' → logprob: -13.168741226196289
    10. 'import' → logprob: -13.668741226196289

Token 1348: '.pos' (ID: 25321)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.12955120205879211
    2. 'index' → logprob: -2.8795511722564697
    3. '.current' → logprob: -3.5045511722564697
    4. '_index' → logprob: -4.504551410675049
    5. '.pos' → logprob: -4.754551410675049
    6. '.position' → logprob: -5.129551410675049
    7. '._' → logprob: -5.379551410675049
    8. '.idx' → logprob: -6.129551410675049
    9. '.pointer' → logprob: -7.129551410675049
    10. 'pos' → logprob: -7.504551410675049

Token 1349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326690316200256
    2. '=' → logprob: -0.7576690316200256
    3. '   ' → logprob: -10.632669448852539
    4. '<|end|>' → logprob: -11.507669448852539
    5. ' ' → logprob: -11.757669448852539
    6. ' +=' → logprob: -12.007669448852539
    7. '       ' → logprob: -12.507669448852539
    8. '+=' → logprob: -12.632669448852539
    9. '	' → logprob: -12.882669448852539
    10. 'import' → logprob: -13.257669448852539

Token 1350: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -20.875
    4. '   ' → logprob: -21.125
    5. '=' → logprob: -21.25
    6. '1' → logprob: -22.75
    7. '[' → logprob: -23.125
    8. '
' → logprob: -23.25
    9. '  ' → logprob: -23.375
    10. '000' → logprob: -23.5

Token 1351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۰' → logprob: -23.25
    4. '```' → logprob: -23.5
    5. '=' → logprob: -24.0
    6. '   ' → logprob: -24.5
    7. '000' → logprob: -24.625
    8. '00' → logprob: -25.625
    9. '[' → logprob: -26.375
    10. ' ' → logprob: -26.625

Token 1352: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1361154466867447
    2. '
' → logprob: -2.636115550994873
    3. '    
' → logprob: -3.886115550994873
    4. '<|end|>' → logprob: -3.886115550994873
    5. 'def' → logprob: -4.636115550994873
    6. ' def' → logprob: -5.761115550994873
    7. '<|end|>' → logprob: -7.011115550994873
    8. '        
' → logprob: -8.511115074157715
    9. '

' → logprob: -8.761115074157715
    10. '```' → logprob: -9.136115074157715

Token 1353: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18493275344371796
    2. '   ' → logprob: -1.8099327087402344
    3. ' def' → logprob: -5.309932708740234
    4. '    
' → logprob: -9.684932708740234
    5. '	def' → logprob: -9.809932708740234
    6. '```' → logprob: -9.934932708740234
    7. ')' → logprob: -10.684932708740234
    8. '
' → logprob: -10.934932708740234
    9. '<|end|>' → logprob: -11.809932708740234
    10. ':' → logprob: -12.434932708740234

Token 1354: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0031260251998901367
    2. ' def' → logprob: -6.25312614440918
    3. '   ' → logprob: -6.75312614440918
    4. '	def' → logprob: -11.25312614440918
    5. '
' → logprob: -11.37812614440918
    6. '```' → logprob: -12.75312614440918
    7. '    
' → logprob: -14.00312614440918
    8. ':def' → logprob: -14.50312614440918
    9. 'Def' → logprob: -15.37812614440918
    10. ':' → logprob: -16.12812614440918

Token 1355: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.023566193878650665
    2. 'has' → logprob: -3.773566246032715
    3. 'next' → logprob: -8.523566246032715
    4. ' readline' → logprob: -9.773566246032715
    5. 'peek' → logprob: -10.148566246032715
    6. 'getline' → logprob: -11.273566246032715
    7. 'get' → logprob: -11.398566246032715
    8. ' has' → logprob: -14.023566246032715
    9. 'have' → logprob: -14.398566246032715
    10. '.readline' → logprob: -15.648566246032715

Token 1356: '_int' (ID: 12285)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5759835243225098
    2. '_line' → logprob: -0.8259835243225098
    3. 'Line' → logprob: -10.575983047485352
    4. ' line' → logprob: -12.575983047485352
    5. 'lin' → logprob: -12.700983047485352
    6. '_LINE' → logprob: -12.950983047485352
    7. 'ln' → logprob: -13.450983047485352
    8. '_token' → logprob: -13.450983047485352
    9. '_next' → logprob: -13.700983047485352
    10. '_lineno' → logprob: -13.950983047485352

Token 1357: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03819664195179939
    2. '()' → logprob: -3.288196563720703
    3. '(' → logprob: -8.913196563720703
    4. '():' → logprob: -11.538196563720703
    5. '()
' → logprob: -12.663196563720703
    6. '():
' → logprob: -13.163196563720703
    7. '()(' → logprob: -13.913196563720703
    8. '(
' → logprob: -14.038196563720703
    9. ' ()' → logprob: -14.163196563720703
    10. 'self' → logprob: -14.288196563720703

Token 1358: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09421119093894958
    2. ')' → logprob: -2.4692111015319824
    3. 'self' → logprob: -5.594211101531982
    4. '()' → logprob: -7.594211101531982
    5. ')(' → logprob: -7.969211101531982
    6. '):
' → logprob: -8.21921157836914
    7. '   ' → logprob: -8.59421157836914
    8. '())' → logprob: -9.84421157836914
    9. '):' → logprob: -9.96921157836914
    10. 'def' → logprob: -10.59421157836914

Token 1359: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.034592388459714e-06
    2. 'self' → logprob: -12.375005722045898
    3. '(' → logprob: -13.750005722045898
    4. 'def' → logprob: -15.625005722045898
    5. '   ' → logprob: -16.0000057220459
    6. '(
' → logprob: -16.3750057220459
    7. '       ' → logprob: -16.3750057220459
    8. '(s' → logprob: -17.1250057220459
    9. '()' → logprob: -17.2500057220459
    10. '():
' → logprob: -17.6250057220459

Token 1360: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000340111117111519
    2. ' int' → logprob: -8.000340461730957
    3. '(int' → logprob: -12.875340461730957
    4. '[int' → logprob: -14.000340461730957
    5. 'Optional' → logprob: -14.250340461730957
    6. 'self' → logprob: -15.375340461730957
    7. '
' → logprob: -15.875340461730957
    8. ':int' → logprob: -16.75033950805664
    9. '=int' → logprob: -16.87533950805664
    10. '<int' → logprob: -17.25033950805664

Token 1361: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1268961876630783
    2. '()' → logprob: -3.1268961429595947
    3. '():
' → logprob: -3.2518961429595947
    4. '():' → logprob: -3.3768961429595947
    5. 'self' → logprob: -6.751896381378174
    6. '(' → logprob: -7.001896381378174
    7. '()
' → logprob: -8.626895904541016
    8. '       ' → logprob: -9.126895904541016
    9. '(
' → logprob: -9.876895904541016
    10. '   ' → logprob: -10.376895904541016

Token 1362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05498507618904114
    2. 'return' → logprob: -3.3049850463867188
    3. 'self' → logprob: -5.054985046386719
    4. '()
' → logprob: -5.929985046386719
    5. '```' → logprob: -6.179985046386719
    6. '
' → logprob: -6.304985046386719
    7. 'line' → logprob: -6.554985046386719
    8. '()' → logprob: -7.179985046386719
    9. '        
' → logprob: -7.679985046386719
    10. ' line' → logprob: -8.304985046386719

Token 1363: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.490808367729187
    2. 'return' → logprob: -0.990808367729187
    3. 'value' → logprob: -4.490808486938477
    4. 'val' → logprob: -5.865808486938477
    5. 'token' → logprob: -7.240808486938477
    6. '       ' → logprob: -7.615808486938477
    7. 'while' → logprob: -7.615808486938477
    8. 'self' → logprob: -8.115808486938477
    9. 'int' → logprob: -8.365808486938477
    10. ' line' → logprob: -9.115808486938477

Token 1364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015024791937321424
    2. ' self' → logprob: -6.501502513885498
    3. '	self' → logprob: -16.876502990722656
    4. '   ' → logprob: -17.376502990722656
    5. '
' → logprob: -18.126502990722656
    6. '(self' → logprob: -19.126502990722656
    7. ' ' → logprob: -20.126502990722656
    8. '_self' → logprob: -20.501502990722656
    9. '  ' → logprob: -20.751502990722656
    10. 'not' → logprob: -21.001502990722656

Token 1365: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00071695790393278
    2. 'pos' → logprob: -7.2507171630859375
    3. '.' → logprob: -13.000717163085938
    4. '>=' → logprob: -13.375717163085938
    5. '_pos' → logprob: -14.125717163085938
    6. ' >=' → logprob: -14.375717163085938
    7. '	pos' → logprob: -14.625717163085938
    8. 'self' → logprob: -14.625717163085938
    9. ' pos' → logprob: -14.875717163085938
    10. ' .' → logprob: -15.250717163085938

Token 1366: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.633637547492981
    2. ' >=' → logprob: -0.758637547492981
    3. '<' → logprob: -7.883637428283691
    4. ' <' → logprob: -8.008637428283691
    5. '<len' → logprob: -9.008637428283691
    6. '   ' → logprob: -10.258637428283691
    7. '+=' → logprob: -10.383637428283691
    8. ' +=' → logprob: -10.758637428283691
    9. ']>=' → logprob: -10.758637428283691
    10. '==' → logprob: -10.883637428283691

Token 1367: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.128163257315464e-07
    2. ' len' → logprob: -15.5
    3. 'self' → logprob: -19.5
    4. '(len' → logprob: -21.375
    5. '	len' → logprob: -21.375
    6. '
' → logprob: -22.25
    7. '=len' → logprob: -22.625
    8. '   ' → logprob: -23.125
    9. '[len' → logprob: -23.75
    10. '<len' → logprob: -24.0

Token 1368: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024775585625320673
    2. 'self' → logprob: -6.002477645874023
    3. ' self' → logprob: -14.252477645874023
    4. '
' → logprob: -14.377477645874023
    5. '(' → logprob: -15.127477645874023
    6. '[self' → logprob: -16.127477645874023
    7. '=self' → logprob: -16.502477645874023
    8. '	self' → logprob: -16.752477645874023
    9. '(
' → logprob: -17.002477645874023
    10. 's' → logprob: -17.377477645874023

Token 1369: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0005891331238672137
    2. 'self' → logprob: -7.875589370727539
    3. 'lines' → logprob: -8.500589370727539
    4. '(lines' → logprob: -12.500589370727539
    5. '	lines' → logprob: -14.000589370727539
    6. '.self' → logprob: -14.125589370727539
    7. ' lines' → logprob: -16.37558937072754
    8. 'Lines' → logprob: -16.87558937072754
    9. '_lines' → logprob: -17.00058937072754
    10. '.layers' → logprob: -17.62558937072754

Token 1370: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10598360747098923
    2. ':' → logprob: -2.4809834957122803
    3. '       ' → logprob: -4.855983734130859
    4. '):
' → logprob: -5.480983734130859
    5. '           ' → logprob: -5.855983734130859
    6. ':return' → logprob: -7.355983734130859
    7. ' or' → logprob: -7.605983734130859
    8. '):' → logprob: -7.855983734130859
    9. ')' → logprob: -8.98098373413086
    10. '[' → logprob: -9.23098373413086

Token 1371: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11932472884654999
    2. '           ' → logprob: -3.1193246841430664
    3. 'return' → logprob: -3.1193246841430664
    4. 'line' → logprob: -4.369324684143066
    5. ' line' → logprob: -5.244324684143066
    6. 'raise' → logprob: -5.619324684143066
    7. ' return' → logprob: -6.744324684143066
    8. 'self' → logprob: -7.744324684143066
    9. ' raise' → logprob: -8.244324684143066
    10. '```' → logprob: -8.869324684143066

Token 1372: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0012038042768836021
    2. ' raise' → logprob: -7.126204013824463
    3. '           ' → logprob: -8.251203536987305
    4. 'return' → logprob: -9.126203536987305
    5. '
' → logprob: -11.751203536987305
    6. '       ' → logprob: -12.251203536987305
    7. '	raise' → logprob: -12.251203536987305
    8. '```' → logprob: -12.376203536987305
    9. 'int' → logprob: -12.751203536987305
    10. 'Raise' → logprob: -13.251203536987305

Token 1373: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.03141563758254051
    2. 'Index' → logprob: -4.0314154624938965
    3. 'Stop' → logprob: -4.5314154624938965
    4. 'Value' → logprob: -6.2814154624938965
    5. ' EOF' → logprob: -7.5314154624938965
    6. 'Runtime' → logprob: -12.531415939331055
    7. 'Exception' → logprob: -14.031415939331055
    8. ' Stop' → logprob: -14.406415939331055
    9. ' Index' → logprob: -14.531415939331055
    10. '
' → logprob: -15.281415939331055

Token 1374: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -18.875
    3. '
' → logprob: -21.0
    4. 'SError' → logprob: -21.125
    5. ' Error' → logprob: -21.25
    6. 'Erro' → logprob: -21.625
    7. '	Error' → logprob: -21.75
    8. 'error' → logprob: -22.0
    9. '_ERROR' → logprob: -22.125
    10. 'ERROR' → logprob: -22.25

Token 1375: '("' (ID: 568)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2258201688528061
    2. '
' → logprob: -2.1008200645446777
    3. '()
' → logprob: -2.6008200645446777
    4. '()' → logprob: -5.600820064544678
    5. '        
' → logprob: -7.225820064544678
    6. '("\' → logprob: -8.350820541381836
    7. '("' → logprob: -8.350820541381836
    8. '(' → logprob: -8.975820541381836
    9. '(
' → logprob: -9.350820541381836
    10. '('\' → logprob: -9.475820541381836

Token 1376: 'No' (ID: 3160)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.17498727142810822
    2. 'Input' → logprob: -2.924987316131592
    3. 'input' → logprob: -3.299987316131592
    4. 'No' → logprob: -3.924987316131592
    5. 'Unexpected' → logprob: -4.049987316131592
    6. 'EOF' → logprob: -4.424987316131592
    7. '")' → logprob: -4.549987316131592
    8. '"' → logprob: -5.049987316131592
    9. '("' → logprob: -6.924987316131592
    10. '')
' → logprob: -7.674987316131592

Token 1377: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.10045995563268661
    2. 'more' → logprob: -2.3504600524902344
    3. '_more' → logprob: -9.850460052490234
    4. 'More' → logprob: -9.975460052490234
    5. 'lines' → logprob: -10.100460052490234
    6. ' lines' → logprob: -10.225460052490234
    7. '
' → logprob: -10.475460052490234
    8. 'next' → logprob: -11.350460052490234
    9. 'input' → logprob: -11.600460052490234
    10. ' next' → logprob: -11.600460052490234

Token 1378: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.055923063308000565
    2. 'lines' → logprob: -3.1809229850769043
    3. 'input' → logprob: -5.180922985076904
    4. ' input' → logprob: -5.805922985076904
    5. 'self' → logprob: -6.430922985076904
    6. 'tokens' → logprob: -7.305922985076904
    7. ' data' → logprob: -7.930922985076904
    8. 'data' → logprob: -8.055923461914062
    9. ' tokens' → logprob: -8.180923461914062
    10. '(lines' → logprob: -8.555923461914062

Token 1379: ' lines' (ID: 8698)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.0007497096667066216
    2. '")' → logprob: -7.625749588012695
    3. ' lines' → logprob: -8.375749588012695
    4. '   ' → logprob: -11.875749588012695
    5. '()' → logprob: -12.125749588012695
    6. '       ' → logprob: -12.625749588012695
    7. ')
' → logprob: -12.875749588012695
    8. '')
' → logprob: -13.000749588012695
    9. ')")
' → logprob: -13.000749588012695
    10. '.")
' → logprob: -13.250749588012695

Token 1380: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2782251834869385
    2. ')
' → logprob: -1.7782251834869385
    3. '")
' → logprob: -3.2782251834869385
    4. ')' → logprob: -3.6532251834869385
    5. '")' → logprob: -4.903224945068359
    6. '
' → logprob: -6.528224945068359
    7. ' )
' → logprob: -7.778224945068359
    8. '   ' → logprob: -8.15322494506836
    9. '')
' → logprob: -8.40322494506836
    10. '()
' → logprob: -8.90322494506836

Token 1381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014041600516065955
    2. '        
' → logprob: -7.626404285430908
    3. '```' → logprob: -8.62640380859375
    4. '
' → logprob: -8.75140380859375
    5. '   ' → logprob: -8.87640380859375
    6. 'token' → logprob: -9.50140380859375
    7. 'tokens' → logprob: -9.62640380859375
    8. '    
' → logprob: -9.75140380859375
    9. 'newline' → logprob: -9.87640380859375
    10. '<|end|>' → logprob: -10.12640380859375

Token 1382: ' val' (ID: 1459)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0017377781914547086
    2. ' line' → logprob: -7.001737594604492
    3. '       ' → logprob: -7.251737594604492
    4. 'value' → logprob: -9.501737594604492
    5. 'token' → logprob: -10.376737594604492
    6. 'val' (adapté à ' val') → logprob: -11.751737594604492
    7. '```' → logprob: -13.876737594604492
    8. 'result' → logprob: -14.251737594604492
    9. '	line' → logprob: -14.251737594604492
    10. 'num' → logprob: -15.376737594604492

Token 1383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31342700123786926
    2. ' =' → logprob: -1.3134269714355469
    3. '=int' → logprob: -9.188426971435547
    4. '   ' → logprob: -10.813426971435547
    5. '       ' → logprob: -11.188426971435547
    6. '=
' → logprob: -11.313426971435547
    7. '=line' → logprob: -12.188426971435547
    8. '_line' → logprob: -12.938426971435547
    9. '=self' → logprob: -13.188426971435547
    10. ' =
' → logprob: -13.688426971435547

Token 1384: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0206720617134124e-05
    2. ' int' → logprob: -11.50001049041748
    3. '	int' → logprob: -17.875009536743164
    4. '       ' → logprob: -18.625009536743164
    5. '(int' → logprob: -18.750009536743164
    6. 'ints' → logprob: -20.625009536743164
    7. '<int' → logprob: -20.625009536743164
    8. '[int' → logprob: -20.625009536743164
    9. '=int' → logprob: -20.750009536743164
    10. '```' → logprob: -21.625009536743164

Token 1385: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.704273118884885e-07
    2. 'self' → logprob: -14.750000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(
' → logprob: -19.5
    5. '[self' → logprob: -20.75
    6. ' self' → logprob: -21.625
    7. '=self' → logprob: -21.875
    8. '((' → logprob: -22.5
    9. '	self' → logprob: -23.125
    10. ':self' → logprob: -23.25

Token 1386: '.lines' (ID: 96601)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007989751175045967
    2. 'self' → logprob: -4.882989883422852
    3. '[self' → logprob: -8.632989883422852
    4. '.lines' → logprob: -9.007989883422852
    5. '(lines' → logprob: -10.007989883422852
    6. 'lines' → logprob: -11.257989883422852
    7. ' self' → logprob: -11.757989883422852
    8. ')' → logprob: -12.257989883422852
    9. '(' → logprob: -13.007989883422852
    10. '.self' → logprob: -13.507989883422852

Token 1387: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.1008713702030946e-06
    2. 'self' → logprob: -13.250001907348633
    3. '[' → logprob: -15.875001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '(self' → logprob: -17.500001907348633
    6. ' self' → logprob: -18.500001907348633
    7. '
' → logprob: -18.625001907348633
    8. '	self' → logprob: -19.750001907348633
    9. ' [' → logprob: -20.000001907348633
    10. '       ' → logprob: -20.125001907348633

Token 1388: '.pos' (ID: 25321)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.38698631525039673
    2. 'self' → logprob: -1.136986255645752
    3. 'pos' → logprob: -9.76198673248291
    4. ' self' → logprob: -10.13698673248291
    5. '[pos' → logprob: -12.13698673248291
    6. '	self' → logprob: -12.13698673248291
    7. '_pos' → logprob: -13.13698673248291
    8. '.pos' → logprob: -13.26198673248291
    9. ':self' → logprob: -13.76198673248291
    10. '   ' → logprob: -14.13698673248291

Token 1389: '])
' (ID: 5169)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.6561924815177917
    2. '.strip' → logprob: -1.1561925411224365
    3. ')' → logprob: -2.0311925411224365
    4. ')
' → logprob: -3.7811925411224365
    5. 'self' → logprob: -4.531192302703857
    6. '[' → logprob: -7.531192302703857
    7. '.pop' → logprob: -8.031192779541016
    8. '.rstrip' → logprob: -8.031192779541016
    9. 'strip' → logprob: -9.531192779541016
    10. '().' → logprob: -9.656192779541016

Token 1390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02819918654859066
    2. 'self' → logprob: -3.6531991958618164
    3. '
' → logprob: -6.528199195861816
    4. '\n' → logprob: -8.778199195861816
    5. '```' → logprob: -9.403199195861816
    6. '\' → logprob: -9.778199195861816
    7. '(self' → logprob: -10.528199195861816
    8. '[self' → logprob: -10.653199195861816
    9. ' self' → logprob: -10.778199195861816
    10. '        
' → logprob: -11.153199195861816

Token 1391: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006812931038439274
    2. '       ' → logprob: -5.006813049316406
    3. ' self' → logprob: -9.256813049316406
    4. '
' → logprob: -14.006813049316406
    5. '	self' → logprob: -14.506813049316406
    6. '```' → logprob: -14.881813049316406
    7. '   ' → logprob: -15.006813049316406
    8. '(self' → logprob: -16.506813049316406
    9. '        
' → logprob: -17.131813049316406
    10. '\' → logprob: -17.131813049316406

Token 1392: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.4745864272117615
    2. 'pos' → logprob: -0.9745864272117615
    3. ' pos' → logprob: -7.849586486816406
    4. '_pos' → logprob: -9.474586486816406
    5. 'self' → logprob: -10.599586486816406
    6. '	pos' → logprob: -11.849586486816406
    7. '
' → logprob: -12.599586486816406
    8. '       ' → logprob: -12.849586486816406
    9. ',pos' → logprob: -13.599586486816406
    10. '.' → logprob: -13.974586486816406

Token 1393: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01815708540380001
    2. ' +=' → logprob: -4.018157005310059
    3. '   ' → logprob: -12.268157005310059
    4. ']+=' → logprob: -13.768157005310059
    5. '=' → logprob: -14.393157005310059
    6. '       ' → logprob: -14.643157005310059
    7. '    ' → logprob: -15.518157005310059
    8. '```' → logprob: -16.018157958984375
    9. '        ' → logprob: -17.018157958984375
    10. '	' → logprob: -17.268157958984375

Token 1394: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '
' → logprob: -22.625
    4. '```' → logprob: -22.75
    5. '+' → logprob: -24.875
    6. '１' → logprob: -25.25
    7. '   ' → logprob: -25.25
    8. '۱' → logprob: -26.25
    9. '১' → logprob: -27.375
    10. '`' → logprob: -27.5

Token 1395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -21.125
    3. '```' → logprob: -24.875
    4. '۱' → logprob: -25.5
    5. '１' → logprob: -25.5
    6. '१' → logprob: -26.375
    7. '১' → logprob: -26.5
    8. '   ' → logprob: -26.625
    9. '
' → logprob: -27.625
    10. '١' → logprob: -28.0

Token 1396: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026782765984535217
    2. 'return' → logprob: -3.651782751083374
    3. ' return' → logprob: -8.276782989501953
    4. '   ' → logprob: -9.276782989501953
    5. '	' → logprob: -9.901782989501953
    6. '	return' → logprob: -10.901782989501953
    7. '
' → logprob: -11.026782989501953
    8. '<|end|>' → logprob: -11.026782989501953
    9. '```' → logprob: -11.901782989501953
    10. '        
' → logprob: -12.151782989501953

Token 1397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08031047880649567
    2. 'return' → logprob: -2.580310583114624
    3. ' return' → logprob: -6.830310344696045
    4. '   ' → logprob: -8.455310821533203
    5. '
' → logprob: -10.205310821533203
    6. '	return' → logprob: -10.580310821533203
    7. '<|end|>' → logprob: -10.580310821533203
    8. '```' → logprob: -11.455310821533203
    9. '{return' → logprob: -11.955310821533203
    10. '        
' → logprob: -12.580310821533203

Token 1398: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024415455758571625
    2. '       ' → logprob: -3.7744154930114746
    3. ' return' → logprob: -6.774415493011475
    4. '	return' → logprob: -11.149415016174316
    5. '   ' → logprob: -11.524415016174316
    6. '```' → logprob: -14.524415016174316
    7. '{return' → logprob: -14.649415016174316
    8. '	' → logprob: -15.274415016174316
    9. ':return' → logprob: -15.774415016174316
    10. ' ' → logprob: -15.899415016174316

Token 1399: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.547789674485102e-05
    2. ' val' → logprob: -10.250035285949707
    3. '	val' → logprob: -22.875036239624023
    4. '(val' → logprob: -24.500036239624023
    5. '_val' → logprob: -25.375036239624023
    6. '[val' → logprob: -25.875036239624023
    7. 'v' → logprob: -26.500036239624023
    8. 'Val' → logprob: -27.000036239624023
    9. 'value' → logprob: -27.250036239624023
    10. ',val' → logprob: -27.625036239624023

Token 1400: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1401: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5513409376144409
    2. '```' → logprob: -0.9263409376144409
    3. '   ' → logprob: -3.8013410568237305
    4. '    
' → logprob: -5.8013410568237305
    5. '``' → logprob: -6.5513410568237305
    6. '
' → logprob: -7.8013410568237305
    7. ' def' → logprob: -8.42634105682373
    8. '<|end|>' → logprob: -8.80134105682373
    9. '	def' → logprob: -9.67634105682373
    10. '        
' → logprob: -10.05134105682373

Token 1402: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0020271388348191977
    2. '   ' → logprob: -6.5020270347595215
    3. '
' → logprob: -7.6270270347595215
    4. ' def' → logprob: -10.87702751159668
    5. '    
' → logprob: -11.12702751159668
    6. '```' → logprob: -12.75202751159668
    7. '	def' → logprob: -14.75202751159668
    8. '        
' → logprob: -15.00202751159668
    9. '  
' → logprob: -16.75202751159668
    10. '

' → logprob: -17.00202751159668

Token 1403: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.8624639324116288e-06
    2. 'peek' → logprob: -13.250001907348633
    3. ' read' → logprob: -18.625001907348633
    4. 'has' → logprob: -19.250001907348633
    5. '	read' → logprob: -19.375001907348633
    6. '_read' → logprob: -20.000001907348633
    7. '.read' → logprob: -20.375001907348633
    8. '
' → logprob: -20.625001907348633
    9. 'next' → logprob: -20.750001907348633
    10. 'def' → logprob: -21.000001907348633

Token 1404: '_pattern' (ID: 50002)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0017292065313085914
    2. '_str' → logprob: -6.7517290115356445
    3. 'line' → logprob: -7.5017290115356445
    4. '_string' → logprob: -12.626729011535645
    5. 'str' → logprob: -13.126729011535645
    6. 'Line' → logprob: -14.626729011535645
    7. '_lines' → logprob: -15.126729011535645
    8. '_list' → logprob: -15.876729011535645
    9. '_token' → logprob: -16.00172996520996
    10. '_lin' → logprob: -16.62672996520996

Token 1405: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.842555426876061e-06
    2. 'self' → logprob: -12.875004768371582
    3. 'def' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.625004768371582
    5. '(' → logprob: -15.000004768371582
    6. ' (' → logprob: -15.250004768371582
    7. '()' → logprob: -16.8750057220459
    8. '       ' → logprob: -16.8750057220459
    9. 'string' → logprob: -16.8750057220459
    10. '_str' → logprob: -17.5000057220459

Token 1406: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010657497681677341
    2. ')' → logprob: -4.63565731048584
    3. 'self' → logprob: -7.13565731048584
    4. '   ' → logprob: -9.51065731048584
    5. '       ' → logprob: -11.13565731048584
    6. ' (' → logprob: -13.13565731048584
    7. ')(' → logprob: -13.26065731048584
    8. ' self' → logprob: -13.38565731048584
    9. ',' → logprob: -13.51065731048584
    10. '[self' → logprob: -13.51065731048584

Token 1407: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.319370302458992e-06
    2. 'self' → logprob: -13.500005722045898
    3. '(' → logprob: -13.750005722045898
    4. ')' → logprob: -14.125005722045898
    5. '()' → logprob: -14.375005722045898
    6. '       ' → logprob: -14.625005722045898
    7. 'def' → logprob: -15.375005722045898
    8. '->' → logprob: -15.375005722045898
    9. '   ' → logprob: -15.875005722045898
    10. 's' → logprob: -16.5000057220459

Token 1408: ' Rhythm' (ID: 148652)
  Prédit: 'Rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rh' → logprob: -0.07037962973117828
    2. 'str' → logprob: -2.6953797340393066
    3. 'Str' → logprob: -7.945379734039307
    4. ' Rhythm' → logprob: -10.570379257202148
    5. ' str' → logprob: -11.070379257202148
    6. 'Hex' → logprob: -11.320379257202148
    7. ''' → logprob: -11.570379257202148
    8. 'Optional' → logprob: -11.820379257202148
    9. 'Tuple' → logprob: -11.945379257202148
    10. 'rh' → logprob: -13.195379257202148

Token 1409: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -6.704273118884885e-07
    2. 'pattern' → logprob: -14.375000953674316
    3. '_pattern' → logprob: -18.875
    4. ' Pattern' → logprob: -19.25
    5. '_PATTERN' → logprob: -19.375
    6. 'Patterns' → logprob: -19.5
    7. 'attern' → logprob: -19.75
    8. 'Pat' → logprob: -20.125
    9. 'P' → logprob: -20.25
    10. '   ' → logprob: -20.375

Token 1410: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005141015630215406
    2. '       ' → logprob: -5.630140781402588
    3. '   ' → logprob: -8.005141258239746
    4. '():
' → logprob: -8.255141258239746
    5. ')' → logprob: -8.630141258239746
    6. 'self' → logprob: -8.755141258239746
    7. '()' → logprob: -8.755141258239746
    8. '(' → logprob: -9.130141258239746
    9. 'def' → logprob: -9.130141258239746
    10. ':
' → logprob: -9.630141258239746

Token 1411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010974247008562088
    2. 'line' → logprob: -4.635974407196045
    3. 'pattern' → logprob: -6.885974407196045
    4. 'text' → logprob: -9.760973930358887
    5. ' line' → logprob: -9.760973930358887
    6. '```' → logprob: -9.885973930358887
    7. 'def' → logprob: -11.260973930358887
    8. '	line' → logprob: -12.510973930358887
    9. 'raw' → logprob: -13.010973930358887
    10. 'string' → logprob: -13.385973930358887

Token 1412: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16840925812721252
    2. 'pattern' → logprob: -1.9184092283248901
    3. 'pat' → logprob: -5.66840934753418
    4. 'hex' → logprob: -6.04340934753418
    5. 's' → logprob: -6.91840934753418
    6. '       ' → logprob: -7.16840934753418
    7. 'if' (adapté à ' if') → logprob: -8.29340934753418
    8. 'raw' → logprob: -8.29340934753418
    9. 'p' → logprob: -10.41840934753418
    10. 'token' → logprob: -11.16840934753418

Token 1413: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.644463479053229e-05
    2. ' self' → logprob: -10.000046730041504
    3. '       ' → logprob: -14.375046730041504
    4. '   ' → logprob: -15.500046730041504
    5. '(self' → logprob: -15.625046730041504
    6. '	self' → logprob: -17.375045776367188
    7. '           ' → logprob: -18.375045776367188
    8. '
' → logprob: -18.750045776367188
    9. 'len' → logprob: -19.125045776367188
    10. '[self' → logprob: -19.625045776367188

Token 1414: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00012451570364646614
    2. 'pos' → logprob: -9.00012493133545
    3. '	pos' → logprob: -14.62512493133545
    4. '   ' → logprob: -15.12512493133545
    5. '_pos' → logprob: -16.250123977661133
    6. '.' → logprob: -16.375123977661133
    7. ' .' → logprob: -16.500123977661133
    8. '       ' → logprob: -17.000123977661133
    9. '.p' → logprob: -17.625123977661133
    10. ' pos' → logprob: -17.750123977661133

Token 1415: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.17980200052261353
    2. ' >=' → logprob: -1.8048019409179688
    3. '   ' → logprob: -10.179801940917969
    4. ']>=' → logprob: -12.054801940917969
    5. '       ' → logprob: -12.179801940917969
    6. ')>=' → logprob: -12.929801940917969
    7. '	' → logprob: -13.679801940917969
    8. '>' → logprob: -14.179801940917969
    9. '```' → logprob: -14.179801940917969
    10. '+=' → logprob: -14.554801940917969

Token 1416: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.836499985889532e-05
    2. ' len' → logprob: -9.7500581741333
    3. '(len' → logprob: -16.875059127807617
    4. '       ' → logprob: -18.875059127807617
    5. '[len' → logprob: -20.000059127807617
    6. '	len' → logprob: -20.125059127807617
    7. '=len' → logprob: -20.250059127807617
    8. '<len' → logprob: -20.500059127807617
    9. ',len' → logprob: -21.375059127807617
    10. '           ' → logprob: -21.500059127807617

Token 1417: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6200637817382812
    2. 'self' → logprob: -0.8700637817382812
    3. 'len' → logprob: -3.6200637817382812
    4. '(len' → logprob: -4.120063781738281
    5. '       ' → logprob: -8.995063781738281
    6. '           ' → logprob: -12.620063781738281
    7. ' len' → logprob: -12.745063781738281
    8. ' self' → logprob: -12.870063781738281
    9. '   ' → logprob: -12.995063781738281
    10. '(' → logprob: -13.745063781738281

Token 1418: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0021735779009759426
    2. 'lines' → logprob: -6.25217342376709
    3. 'self' → logprob: -8.50217342376709
    4. '(lines' → logprob: -10.12717342376709
    5. '	lines' → logprob: -13.62717342376709
    6. '_lines' → logprob: -15.12717342376709
    7. ' lines' → logprob: -15.87717342376709
    8. '(self' → logprob: -16.127174377441406
    9. '.self' → logprob: -16.377174377441406
    10. '.readlines' → logprob: -16.877174377441406

Token 1419: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12204506248235703
    2. ':' → logprob: -2.6220450401306152
    3. '       ' → logprob: -3.2470450401306152
    4. '):
' → logprob: -6.372045040130615
    5. '():
' → logprob: -7.122045040130615
    6. '           ' → logprob: -8.122045516967773
    7. '```' → logprob: -8.247045516967773
    8. '+' → logprob: -10.122045516967773
    9. ' :
' → logprob: -10.372045516967773
    10. '):' → logprob: -10.372045516967773

Token 1420: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001019948162138462
    2. 'line' → logprob: -7.7510199546813965
    3. ' line' → logprob: -7.8760199546813965
    4. '           ' → logprob: -9.751019477844238
    5. 'val' → logprob: -10.126019477844238
    6. 'value' → logprob: -10.501019477844238
    7. 'pattern' → logprob: -10.751019477844238
    8. '```' → logprob: -11.126019477844238
    9. 'text' → logprob: -11.251019477844238
    10. '	line' → logprob: -12.001019477844238

Token 1421: ' raise' (ID: 9338)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.05030898377299309
    2. 'raise' (adapté à ' raise') → logprob: -3.0503089427948
    3. 'pattern' → logprob: -6.925309181213379
    4. ' raise' → logprob: -8.050309181213379
    5. ' line' → logprob: -8.550309181213379
    6. 'text' → logprob: -9.300309181213379
    7. 's' → logprob: -9.425309181213379
    8. '           ' → logprob: -10.675309181213379
    9. '       ' → logprob: -11.675309181213379
    10. 'val' → logprob: -12.425309181213379

Token 1422: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.00034237600630149245
    2. 'Value' → logprob: -8.00034236907959
    3. ' EOF' → logprob: -12.00034236907959
    4. 'Index' → logprob: -14.37534236907959
    5. 'Stop' → logprob: -16.875343322753906
    6. 'Runtime' → logprob: -17.625343322753906
    7. 'EO' → logprob: -17.750343322753906
    8. '
' → logprob: -20.500343322753906
    9. ' Value' → logprob: -20.750343322753906
    10. 'End' → logprob: -21.625343322753906

Token 1423: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.704273118884885e-07
    2. 'rror' → logprob: -14.375000953674316
    3. ' Error' → logprob: -20.25
    4. '(Error' → logprob: -20.25
    5. 'error' → logprob: -20.5
    6. '_error' → logprob: -21.25
    7. 'Warning' → logprob: -21.25
    8. 'LError' → logprob: -21.5
    9. '	Error' → logprob: -21.5
    10. '("' → logprob: -21.625

Token 1424: '("' (ID: 568)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5522984862327576
    2. '("")
' → logprob: -1.9272985458374023
    3. '       ' → logprob: -2.1772985458374023
    4. '("' → logprob: -2.4272985458374023
    5. '(self' → logprob: -3.6772985458374023
    6. '()' → logprob: -3.8022985458374023
    7. '("")' → logprob: -4.427298545837402
    8. '(' → logprob: -4.677298545837402
    9. '("\' → logprob: -6.177298545837402
    10. '(f' → logprob: -6.302298545837402

Token 1425: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8335342407226562
    2. '")' → logprob: -1.5835342407226562
    3. 'self' → logprob: -1.7085342407226562
    4. '""' → logprob: -1.9585342407226562
    5. 'Value' → logprob: -3.9585342407226562
    6. 'raise' → logprob: -4.583534240722656
    7. '''' → logprob: -6.333534240722656
    8. '")
' → logprob: -6.333534240722656
    9. '"""' → logprob: -6.708534240722656
    10. '">' → logprob: -7.708534240722656

Token 1426: ' more' (ID: 945)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4002898037433624
    2. ' more' → logprob: -1.40028977394104
    3. ' self' → logprob: -3.27528977394104
    4. 'more' → logprob: -3.52528977394104
    5. ' lines' → logprob: -4.900290012359619
    6. 'lines' → logprob: -5.525290012359619
    7. '
' → logprob: -6.525290012359619
    8. '   ' → logprob: -6.650290012359619
    9. '       ' → logprob: -7.275290012359619
    10. 'More' → logprob: -7.775290012359619

Token 1427: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.637708842754364
    2. 'lines' → logprob: -1.0127089023590088
    3. ' lines' → logprob: -3.262708902359009
    4. 'line' → logprob: -3.512708902359009
    5. 'input' → logprob: -3.637708902359009
    6. ' self' → logprob: -5.51270866394043
    7. 'code' → logprob: -6.01270866394043
    8. 'text' → logprob: -6.63770866394043
    9. ' code' → logprob: -6.76270866394043
    10. ' input' → logprob: -7.13770866394043

Token 1428: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.19428272545337677
    2. ' lines' → logprob: -2.1942827701568604
    3. '_lines' → logprob: -2.9442827701568604
    4. 'Lines' → logprob: -5.194282531738281
    5. '   ' → logprob: -6.069282531738281
    6. '       ' → logprob: -6.944282531738281
    7. '(lines' → logprob: -7.319282531738281
    8. '	lines' → logprob: -7.319282531738281
    9. ')
' → logprob: -7.444282531738281
    10. '")
' → logprob: -7.569282531738281

Token 1429: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016873201820999384
    2. ')
' → logprob: -7.376687526702881
    3. '")
' → logprob: -7.626687526702881
    4. ')' → logprob: -8.251687049865723
    5. '")' → logprob: -8.876687049865723
    6. '
' → logprob: -9.876687049865723
    7. '   ' → logprob: -10.626687049865723
    8. '<|end|>' → logprob: -10.626687049865723
    9. '):
' → logprob: -11.251687049865723
    10. '```' → logprob: -11.876687049865723

Token 1430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028851060778833926
    2. 'pattern' → logprob: -8.750288963317871
    3. 'line' → logprob: -9.875288963317871
    4. '```' → logprob: -10.125288963317871
    5. 'text' → logprob: -11.500288963317871
    6. ' line' → logprob: -11.875288963317871
    7. 'token' → logprob: -12.375288963317871
    8. '   ' → logprob: -12.500288963317871
    9. 'code' → logprob: -13.000288963317871
    10. 'value' → logprob: -13.375288963317871

Token 1431: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.05135896056890488
    2. 'pattern' → logprob: -3.051358938217163
    3. '       ' → logprob: -6.051359176635742
    4. 'pat' → logprob: -8.426359176635742
    5. 'hex' → logprob: -9.801359176635742
    6. ' line' → logprob: -10.176359176635742
    7. 'raw' → logprob: -10.176359176635742
    8. 'text' → logprob: -10.176359176635742
    9. 's' → logprob: -10.801359176635742
    10. 'str' → logprob: -14.551359176635742

Token 1432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04442599043250084
    2. '=' → logprob: -3.6694259643554688
    3. '       ' → logprob: -4.044425964355469
    4. '=line' → logprob: -8.794425964355469
    5. '_line' → logprob: -9.169425964355469
    6. '        ' → logprob: -9.919425964355469
    7. '	' → logprob: -10.044425964355469
    8. '_str' → logprob: -10.919425964355469
    9. '   ' → logprob: -11.294425964355469
    10. '	       ' → logprob: -11.669425964355469

Token 1433: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048170737922192
    2. ' self' → logprob: -4.511048316955566
    3. '       ' → logprob: -14.886048316955566
    4. '(self' → logprob: -18.13604736328125
    5. '	self' → logprob: -18.76104736328125
    6. 'str' → logprob: -19.51104736328125
    7. '
' → logprob: -20.38604736328125
    8. ' ' → logprob: -20.88604736328125
    9. 'sys' → logprob: -21.26104736328125
    10. '[self' → logprob: -21.51104736328125

Token 1434: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00013500562636181712
    2. 'lines' → logprob: -9.00013542175293
    3. '(lines' → logprob: -12.87513542175293
    4. ' .' → logprob: -13.25013542175293
    5. 'self' → logprob: -13.25013542175293
    6. '	lines' → logprob: -13.37513542175293
    7. '.' → logprob: -13.87513542175293
    8. '   ' → logprob: -14.00013542175293
    9. '```' → logprob: -14.75013542175293
    10. ' lines' → logprob: -15.00013542175293

Token 1435: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.5451681974809617e-05
    2. 'self' → logprob: -11.125015258789062
    3. '[' → logprob: -15.125015258789062
    4. ' self' → logprob: -15.375015258789062
    5. '       ' → logprob: -17.250015258789062
    6. '	self' → logprob: -17.500015258789062
    7. '=self' → logprob: -17.625015258789062
    8. '(self' → logprob: -18.250015258789062
    9. ' [' → logprob: -18.625015258789062
    10. '[
' → logprob: -18.750015258789062

Token 1436: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5763102769851685
    2. '.pos' → logprob: -0.8263102769851685
    3. 'self' → logprob: -7.951310157775879
    4. '_pos' → logprob: -11.826310157775879
    5. '[pos' → logprob: -12.451310157775879
    6. '	pos' → logprob: -12.951310157775879
    7. '[self' → logprob: -13.076310157775879
    8. ' pos' → logprob: -13.701310157775879
    9. 'Pos' → logprob: -13.951310157775879
    10. '-pos' → logprob: -16.201311111450195

Token 1437: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6204835772514343
    2. '       ' → logprob: -0.8704835772514343
    3. '
' → logprob: -3.620483636856079
    4. '.rstrip' → logprob: -5.2454833984375
    5. ')
' → logprob: -6.3704833984375
    6. ').' → logprob: -6.4954833984375
    7. '].' → logprob: -6.6204833984375
    8. '           ' → logprob: -6.8704833984375
    9. '.readline' → logprob: -6.9954833984375
    10. '[self' → logprob: -7.3704833984375

Token 1438: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.4140441635390744e-05
    2. 'rstrip' → logprob: -11.250014305114746
    3. '
' → logprob: -14.375014305114746
    4. '_strip' → logprob: -15.375014305114746
    5. ' strip' → logprob: -16.00001335144043
    6. 'self' → logprob: -16.75001335144043
    7. '.strip' → logprob: -17.12501335144043
    8. 'pos' → logprob: -18.25001335144043
    9. 'split' → logprob: -18.62501335144043
    10. '__' → logprob: -19.00001335144043

Token 1439: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8009802103042603
    2. '()
' → logprob: -1.3009802103042603
    3. '()' → logprob: -1.4259802103042603
    4. 'self' → logprob: -4.050980091094971
    5. '<|end|>' → logprob: -4.550980091094971
    6. '<|end|>' → logprob: -5.925980091094971
    7. '
' → logprob: -6.800980091094971
    8. '[' → logprob: -6.800980091094971
    9. '[self' → logprob: -6.925980091094971
    10. '(self' → logprob: -7.050980091094971

Token 1440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06198180466890335
    2. 'self' → logprob: -2.8119819164276123
    3. ' self' → logprob: -11.561982154846191
    4. '```' → logprob: -12.936982154846191
    5. '   ' → logprob: -14.061982154846191
    6. '	self' → logprob: -14.811982154846191
    7. '(self' → logprob: -15.311982154846191
    8. '
' → logprob: -15.686982154846191
    9. 'if' → logprob: -16.311981201171875
    10. '[self' → logprob: -16.436981201171875

Token 1441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00015908108616713434
    2. '       ' → logprob: -8.75015926361084
    3. ' self' → logprob: -14.62515926361084
    4. 'if' → logprob: -16.375158309936523
    5. '   ' → logprob: -18.625158309936523
    6. '	self' → logprob: -19.125158309936523
    7. 's' → logprob: -20.375158309936523
    8. '```' → logprob: -21.125158309936523
    9. '(self' → logprob: -21.750158309936523
    10. '
' → logprob: -21.875158309936523

Token 1442: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0019301822176203132
    2. 'pos' → logprob: -6.251930236816406
    3. '_pos' → logprob: -13.876930236816406
    4. '	pos' → logprob: -15.251930236816406
    5. ' pos' → logprob: -15.751930236816406
    6. '.' → logprob: -15.876930236816406
    7. '[pos' → logprob: -16.751930236816406
    8. '.val' → logprob: -18.251930236816406
    9. ' .' → logprob: -18.751930236816406
    10. '
' → logprob: -18.751930236816406

Token 1443: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006481022574007511
    2. ' +=' → logprob: -7.375648021697998
    3. '       ' → logprob: -11.000648498535156
    4. ']+=' → logprob: -12.875648498535156
    5. '=' → logprob: -13.875648498535156
    6. '           ' → logprob: -14.125648498535156
    7. '
' → logprob: -15.750648498535156
    8. '   ' → logprob: -15.875648498535156
    9. '```' → logprob: -16.125648498535156
    10. '+' → logprob: -16.500648498535156

Token 1444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '
' → logprob: -20.625
    4. '```' → logprob: -21.25
    5. '   ' → logprob: -21.5
    6. '0' → logprob: -23.25
    7. '           ' → logprob: -23.625
    8. '       ' → logprob: -23.75
    9. '+' → logprob: -23.875
    10. '１' → logprob: -24.25

Token 1445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -20.625
    4. '
' → logprob: -21.0
    5. '   ' → logprob: -22.375
    6. '１' → logprob: -22.625
    7. '۱' → logprob: -22.875
    8. '0' → logprob: -23.25
    9. '2' → logprob: -23.9375
    10. '-' → logprob: -24.0

Token 1446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01109415665268898
    2. 'return' → logprob: -4.511094093322754
    3. ' return' → logprob: -10.011094093322754
    4. '   ' → logprob: -14.261094093322754
    5. '
' → logprob: -15.261094093322754
    6. '```' → logprob: -16.26109504699707
    7. '	return' → logprob: -16.38609504699707
    8. '           ' → logprob: -16.51109504699707
    9. '	' → logprob: -16.76109504699707
    10. '      ' → logprob: -17.13609504699707

Token 1447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10028915852308273
    2. 'return' → logprob: -2.3502891063690186
    3. ' return' → logprob: -9.475289344787598
    4. '```' → logprob: -12.600289344787598
    5. '   ' → logprob: -14.100289344787598
    6. 'sym' → logprob: -14.350289344787598
    7. '
' → logprob: -15.350289344787598
    8. '	return' → logprob: -15.600289344787598
    9. '           ' → logprob: -15.725289344787598
    10. 'pattern' → logprob: -15.850289344787598

Token 1448: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.7697225252486533e-06
    2. '       ' → logprob: -12.500003814697266
    3. ' return' → logprob: -16.750003814697266
    4. 'pattern' → logprob: -17.500003814697266
    5. '
' → logprob: -22.125003814697266
    6. 'if' → logprob: -23.125003814697266
    7. '	return' → logprob: -23.375003814697266
    8. 'try' → logprob: -23.500003814697266
    9. '   ' → logprob: -23.625003814697266
    10. '```' → logprob: -24.125003814697266

Token 1449: ' Rhythm' (ID: 148652)
  Prédit: 'Rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rh' → logprob: -1.9361264946837764e-07
    2. ' Rhythm' → logprob: -16.5
    3. ' Rh' → logprob: -18.0
    4. 'RH' → logprob: -21.0
    5. 'Ry' → logprob: -23.75
    6. 'R' → logprob: -23.75
    7. '   ' → logprob: -24.0
    8. 'rh' → logprob: -25.125
    9. '       ' → logprob: -25.25
    10. 'Harmony' → logprob: -26.5

Token 1450: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -4.320199877838604e-07
    2. 'pattern' → logprob: -14.875
    3. 'Patterns' → logprob: -17.875
    4. 'P' → logprob: -18.25
    5. '_PATTERN' → logprob: -18.625
    6. 'Pat' → logprob: -18.875
    7. '   ' → logprob: -19.0
    8. 'Symbol' → logprob: -19.625
    9. '_pattern' → logprob: -20.25
    10. 'attern' → logprob: -20.375

Token 1451: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.01109261903911829
    2. 'from' → logprob: -4.511092662811279
    3. '.' → logprob: -10.136092185974121
    4. 'From' → logprob: -12.761092185974121
    5. ' .' → logprob: -14.261092185974121
    6. '#from' → logprob: -14.636092185974121
    7. ' from' → logprob: -14.886092185974121
    8. '_from' → logprob: -15.386092185974121
    9. '   ' → logprob: -15.386092185974121
    10. '.From' → logprob: -15.886092185974121

Token 1452: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0031998122576624155
    2. 'string' → logprob: -5.753199577331543
    3. 'String' → logprob: -10.753199577331543
    4. 'str' → logprob: -15.753199577331543
    5. ' string' → logprob: -15.753199577331543
    6. '_STRING' → logprob: -15.878199577331543
    7. 'tring' → logprob: -16.25320053100586
    8. '_str' → logprob: -16.25320053100586
    9. 's' → logprob: -16.75320053100586
    10. '_String' → logprob: -17.00320053100586

Token 1453: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.088346359931165e-07
    2. 'line' → logprob: -14.500000953674316
    3. '[line' → logprob: -15.375000953674316
    4. '#line' → logprob: -15.750000953674316
    5. '(' → logprob: -18.0
    6. '=line' → logprob: -18.0
    7. '(
' → logprob: -18.375
    8. '(Line' → logprob: -18.625
    9. ',line' → logprob: -18.875
    10. '(lines' → logprob: -19.125

Token 1454: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.302704761968926e-05
    2. '       ' → logprob: -9.875073432922363
    3. ')
' → logprob: -11.875073432922363
    4. '<|end|>' → logprob: -12.000073432922363
    5. '   ' → logprob: -12.375073432922363
    6. ' )' → logprob: -13.875073432922363
    7. '())' → logprob: -14.125073432922363
    8. '()' → logprob: -14.375073432922363
    9. '")' → logprob: -14.500073432922363
    10. '')' → logprob: -14.750073432922363

Token 1455: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005594087298959494
    2. 'class' → logprob: -5.255594253540039
    3. '```' → logprob: -8.380594253540039
    4. 'if' → logprob: -9.005594253540039
    5. '#' → logprob: -12.880594253540039
    6. 'import' → logprob: -13.005594253540039
    7. '   ' → logprob: -13.505594253540039
    8. '
' → logprob: -13.755594253540039
    9. 'from' → logprob: -14.630594253540039
    10. ' def' → logprob: -15.630594253540039

Token 1456: ' main' (ID: 2758)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8369619250297546
    2. 'def' → logprob: -1.2119619846343994
    3. ' main' → logprob: -1.3369619846343994
    4. 'main' → logprob: -5.08696174621582
    5. '
' → logprob: -7.58696174621582
    6. ' ' → logprob: -11.21196174621582
    7. '_main' → logprob: -12.46196174621582
    8. '```' → logprob: -12.71196174621582
    9. ' __' → logprob: -12.83696174621582
    10. ' define' → logprob: -12.96196174621582

Token 1457: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002261854097014293
    2. '():
' → logprob: -8.500226020812988
    3. '()' → logprob: -11.125226020812988
    4. ' ():' → logprob: -12.250226020812988
    5. '(' → logprob: -13.625226020812988
    6. 'def' → logprob: -14.125226020812988
    7. ':' → logprob: -14.625226020812988
    8. '()>' → logprob: -15.875226020812988
    9. '():
' → logprob: -16.125226974487305
    10. '()">' → logprob: -16.125226974487305

Token 1458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019948746194131672
    2. 'n' → logprob: -9.000199317932129
    3. '   ' → logprob: -10.625199317932129
    4. 'input' → logprob: -10.750199317932129
    5. '```' → logprob: -11.375199317932129
    6. ' n' → logprob: -11.500199317932129
    7. '	n' → logprob: -12.500199317932129
    8. 'num' → logprob: -13.375199317932129
    9. ' input' → logprob: -14.250199317932129
    10. 'import' → logprob: -14.375199317932129

Token 1459: ' ir' (ID: 3288)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22865648567676544
    2. '   ' → logprob: -1.853656530380249
    3. 'num' → logprob: -3.353656530380249
    4. ' n' → logprob: -4.47865629196167
    5. 'nb' → logprob: -7.22865629196167
    6. ' num' → logprob: -8.353656768798828
    7. 'input' → logprob: -8.728656768798828
    8. 'import' → logprob: -9.353656768798828
    9. 'N' → logprob: -9.603656768798828
    10. '	n' → logprob: -9.978656768798828

Token 1460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06232336163520813
    2. '=' → logprob: -2.8123233318328857
    3. '   ' → logprob: -8.812323570251465
    4. '_reader' → logprob: -9.187323570251465
    5. '()' → logprob: -9.562323570251465
    6. ' ' → logprob: -11.312323570251465
    7. '  ' → logprob: -12.937323570251465
    8. '()
' → logprob: -13.187323570251465
    9. '_' → logprob: -13.312323570251465
    10. '_ir' → logprob: -13.312323570251465

Token 1461: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -9.615255839889869e-05
    2. ' Input' → logprob: -9.250096321105957
    3. '	Input' → logprob: -18.62509536743164
    4. '_input' → logprob: -19.75009536743164
    5. 'input' → logprob: -19.87509536743164
    6. '<Input' → logprob: -20.37509536743164
    7. '\Input' → logprob: -21.12509536743164
    8. '_Input' → logprob: -21.50009536743164
    9. ' input' → logprob: -21.75009536743164
    10. '.Input' → logprob: -22.62509536743164

Token 1462: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -3.7697225252486533e-06
    2. '_reader' → logprob: -13.375003814697266
    3. '   ' → logprob: -14.625003814697266
    4. '.Reader' → logprob: -14.625003814697266
    5. 'reader' → logprob: -14.750003814697266
    6. ' =' → logprob: -14.750003814697266
    7. ' Reader' → logprob: -15.125003814697266
    8. '```' → logprob: -17.000003814697266
    9. '  ' → logprob: -17.250003814697266
    10. ')' → logprob: -17.375003814697266

Token 1463: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019022206543013453
    2. 'n' → logprob: -6.626902103424072
    3. '
' → logprob: -8.37690258026123
    4. '    
' → logprob: -8.75190258026123
    5. 'num' → logprob: -9.25190258026123
    6. '```' → logprob: -9.62690258026123
    7. 'old' → logprob: -11.75190258026123
    8. '	n' → logprob: -11.75190258026123
    9. ' n' → logprob: -12.75190258026123
    10. '	num' → logprob: -14.00190258026123

Token 1464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10259795933961868
    2. 'n' → logprob: -2.352597951889038
    3. 'try' → logprob: -6.727598190307617
    4. 'num' → logprob: -6.852598190307617
    5. ' n' → logprob: -10.352598190307617
    6. '```' → logprob: -10.352598190307617
    7. 't' → logprob: -10.727598190307617
    8. 'nb' → logprob: -10.852598190307617
    9. 'N' → logprob: -11.477598190307617
    10. '   ' → logprob: -11.977598190307617

Token 1465: ' dataset' (ID: 20830)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09480826556682587
    2. '   ' → logprob: -3.094808340072632
    3. 'num' → logprob: -3.969808340072632
    4. 'N' → logprob: -4.469808101654053
    5. 'try' → logprob: -4.594808101654053
    6. 'nb' → logprob: -6.219808101654053
    7. 't' → logprob: -6.344808101654053
    8. 'T' → logprob: -7.969808101654053
    9. 'old' → logprob: -7.969808101654053
    10. 'count' → logprob: -8.594808578491211

Token 1466: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0133684566244483
    2. 's' → logprob: -4.763368606567383
    3. '_index' → logprob: -6.263368606567383
    4. '_idx' → logprob: -6.888368606567383
    5. '_' → logprob: -7.638368606567383
    6. '_num' → logprob: -7.888368606567383
    7. 'count' → logprob: -8.138368606567383
    8. '_id' → logprob: -8.513368606567383
    9. '_n' → logprob: -8.638368606567383
    10. ' =' → logprob: -9.138368606567383

Token 1467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693912923336029
    2. ' =' → logprob: -0.693912923336029
    3. '   ' → logprob: -7.193912982940674
    4. '    ' → logprob: -12.068912506103516
    5. '=int' → logprob: -12.193912506103516
    6. '	' → logprob: -13.943912506103516
    7. ' ' → logprob: -14.318912506103516
    8. '       ' → logprob: -14.318912506103516
    9. ' ' → logprob: -15.318912506103516
    10. '  ' → logprob: -15.443912506103516

Token 1468: ' ir' (ID: 3288)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.24630877375602722
    2. 'int' → logprob: -1.8713088035583496
    3. ' ir' → logprob: -2.8713088035583496
    4. ' int' → logprob: -4.87130880355835
    5. '   ' → logprob: -10.121308326721191
    6. 'irc' → logprob: -11.121308326721191
    7. 'irr' → logprob: -11.121308326721191
    8. 'ird' → logprob: -11.871308326721191
    9. 'irt' → logprob: -12.121308326721191
    10. 'irm' → logprob: -12.496308326721191

Token 1469: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0002919638354796916
    2. '.' → logprob: -8.25029182434082
    3. 'read' → logprob: -10.50029182434082
    4. ' .' → logprob: -13.37529182434082
    5. '.readline' → logprob: -13.75029182434082
    6. '_read' → logprob: -15.75029182434082
    7. ' read' → logprob: -15.75029182434082
    8. '	read' → logprob: -17.12529182434082
    9. '.pos' → logprob: -18.12529182434082
    10. '   ' → logprob: -18.25029182434082

Token 1470: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.007582016754895449
    2. '_' → logprob: -5.132582187652588
    3. '()' → logprob: -7.507582187652588
    4. 'int' → logprob: -7.632582187652588
    5. '_line' → logprob: -7.632582187652588
    6. ' _' → logprob: -10.00758171081543
    7. '_integer' → logprob: -10.63258171081543
    8. '(' → logprob: -10.88258171081543
    9. '_uint' → logprob: -11.88258171081543
    10. 'Int' → logprob: -12.00758171081543

Token 1471: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038527094875462353
    2. '()
' → logprob: -8.000385284423828
    3. '   ' → logprob: -10.375385284423828
    4. '(' → logprob: -12.375385284423828
    5. ' ()' → logprob: -12.625385284423828
    6. '())' → logprob: -12.625385284423828
    7. '()\' → logprob: -13.125385284423828
    8. '();' → logprob: -13.750385284423828
    9. ')' → logprob: -14.500385284423828
    10. '#' → logprob: -14.625385284423828

Token 1472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20163767039775848
    2. 'for' → logprob: -1.701637625694275
    3. ' for' → logprob: -8.701637268066406
    4. '    
' → logprob: -10.576637268066406
    5. '	for' → logprob: -10.951637268066406
    6. '```' → logprob: -11.576637268066406
    7. '
' → logprob: -12.451637268066406
    8. 'while' → logprob: -14.201637268066406
    9. '   ' → logprob: -15.201637268066406
    10. '<|end|>' → logprob: -15.451637268066406

Token 1473: ' outputs' (ID: 32725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004125299863517284
    2. '   ' → logprob: -5.504125118255615
    3. ' for' → logprob: -10.004125595092773
    4. '```' → logprob: -14.129125595092773
    5. '	for' → logprob: -14.254125595092773
    6. '
' → logprob: -15.379125595092773
    7. 'while' → logprob: -16.379125595092773
    8. '    
' → logprob: -17.004125595092773
    9. '``' → logprob: -19.379125595092773
    10. '  ' → logprob: -19.629125595092773

Token 1474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602736860513687
    2. ' =' → logprob: -1.9102736711502075
    3. '=[]' → logprob: -10.160273551940918
    4. ':' → logprob: -11.535273551940918
    5. '=[]
' → logprob: -13.910273551940918
    6. '[]' → logprob: -16.660274505615234
    7. '   ' → logprob: -17.035274505615234
    8. '＝' → logprob: -17.160274505615234
    9. '_' → logprob: -17.410274505615234
    10. ' ' → logprob: -17.785274505615234

Token 1475: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.913265239447355e-05
    2. '[]
' → logprob: -9.250099182128906
    3. ' []' → logprob: -12.875099182128906
    4. '[]

' → logprob: -14.875099182128906
    5. '[' → logprob: -16.000099182128906
    6. '[]"' → logprob: -17.125099182128906
    7. '[])' → logprob: -17.750099182128906
    8. '[]}' → logprob: -18.500099182128906
    9. '   ' → logprob: -19.750099182128906
    10. '[],' → logprob: -20.125099182128906

Token 1476: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06925325095653534
    2. '   ' → logprob: -2.8192532062530518
    3. ' for' → logprob: -5.319253444671631
    4. '```' → logprob: -6.444253444671631
    5. '
' → logprob: -7.444253444671631
    6. '	for' → logprob: -8.819252967834473
    7. '    
' → logprob: -10.194252967834473
    8. '``' → logprob: -13.444252967834473
    9. '  
' → logprob: -15.319252967834473
    10. '_for' → logprob: -15.569252967834473

Token 1477: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' for' → logprob: -16.000001907348633
    4. '```' → logprob: -20.125001907348633
    5. 'try' → logprob: -20.750001907348633
    6. 'while' → logprob: -21.000001907348633
    7. '
' → logprob: -21.500001907348633
    8. '	for' → logprob: -21.625001907348633
    9. '    
' → logprob: -24.875001907348633
    10. 'For' → logprob: -25.000001907348633

Token 1478: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006305903079919517
    2. '_dataset' → logprob: -7.5006303787231445
    3. ' _' → logprob: -9.500630378723145
    4. 'dataset' → logprob: -13.750630378723145
    5. '_ds' → logprob: -14.000630378723145
    6. '_d' → logprob: -15.000630378723145
    7. '_data' → logprob: -15.125630378723145
    8. ' dataset' → logprob: -15.500630378723145
    9. '_i' → logprob: -16.50063133239746
    10. '_
' → logprob: -18.37563133239746

Token 1479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.313274085521698
    2. 'in' → logprob: -1.3132741451263428
    3. 'i' → logprob: -11.938274383544922
    4. ' ' → logprob: -12.938274383544922
    5. ' _' → logprob: -14.313274383544922
    6. '_' → logprob: -14.438274383544922
    7. '	in' → logprob: -14.688274383544922
    8. 'import' → logprob: -14.938274383544922
    9. 'range' → logprob: -15.063274383544922
    10. '   ' → logprob: -15.563274383544922

Token 1480: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0921942703134846e-05
    2. ' range' → logprob: -11.62501049041748
    3. 'dataset' → logprob: -13.25001049041748
    4. 'ir' → logprob: -15.87501049041748
    5. '_' → logprob: -18.000011444091797
    6. 'in' → logprob: -19.875011444091797
    7. '(range' → logprob: -20.125011444091797
    8. '	range' → logprob: -20.375011444091797
    9. 'r' → logprob: -20.625011444091797
    10. ' ' → logprob: -20.875011444091797

Token 1481: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -0.16509486734867096
    2. '(' → logprob: -2.1650948524475098
    3. ' (' → logprob: -3.6650948524475098
    4. 'dataset' → logprob: -4.79009485244751
    5. ' dataset' → logprob: -5.91509485244751
    6. '   ' → logprob: -7.79009485244751
    7. '(range' → logprob: -9.040095329284668
    8. '(
' → logprob: -9.540095329284668
    9. '(n' → logprob: -9.790095329284668
    10. '(len' → logprob: -9.915095329284668

Token 1482: '_count' (ID: 7536)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8840731382369995
    2. '(' → logprob: -1.3840731382369995
    3. '(count' → logprob: -2.134073257446289
    4. '   ' → logprob: -2.259073257446289
    5. '():
' → logprob: -3.634073257446289
    6. '_count' → logprob: -3.884073257446289
    7. '):' → logprob: -4.134073257446289
    8. '(dataset' → logprob: -4.759073257446289
    9. '(n' → logprob: -4.884073257446289
    10. '(len' → logprob: -5.384073257446289

Token 1483: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2680489420890808
    2. '   ' → logprob: -2.3930490016937256
    3. ':
' → logprob: -2.7680490016937256
    4. '):
' → logprob: -2.7680490016937256
    5. '):' → logprob: -4.2680487632751465
    6. '       ' → logprob: -5.7680487632751465
    7. ',' → logprob: -7.7680487632751465
    8. '():
' → logprob: -8.143049240112305
    9. '<|end|>' → logprob: -9.268049240112305
    10. ')' → logprob: -9.518049240112305

Token 1484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.289473822107539e-05
    2. '```' → logprob: -10.625062942504883
    3. '   ' → logprob: -11.000062942504883
    4. '	   ' → logprob: -12.125062942504883
    5. 'n' → logprob: -12.250062942504883
    6. '        
' → logprob: -13.125062942504883
    7. 'input' → logprob: -13.875062942504883
    8. '<|end|>' → logprob: -14.125062942504883
    9. '	' → logprob: -14.375062942504883
    10. '      ' → logprob: -14.750062942504883

Token 1485: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9064948558807373
    2. 'old' → logprob: -1.1564948558807373
    3. 'num' → logprob: -2.0314948558807373
    4. 'pattern' → logprob: -2.2814948558807373
    5. '       ' → logprob: -3.9064948558807373
    6. 'patterns' → logprob: -4.781495094299316
    7. 'k' → logprob: -4.906495094299316
    8. 'N' (adapté à ' N') → logprob: -5.906495094299316
    9. 'nb' → logprob: -6.531495094299316
    10. ' old' → logprob: -6.656495094299316

Token 1486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11384177207946777
    2. '=' → logprob: -2.2388417720794678
    3. '       ' → logprob: -7.363842010498047
    4. '    ' → logprob: -8.988842010498047
    5. '        ' → logprob: -9.363842010498047
    6. '   ' → logprob: -9.613842010498047
    7. ' ' → logprob: -10.238842010498047
    8. '	' → logprob: -10.363842010498047
    9. '=int' → logprob: -11.863842010498047
    10. '    	' → logprob: -12.488842010498047

Token 1487: ' ir' (ID: 3288)
  Prédit: ' ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ir' → logprob: -0.575950562953949
    2. 'ir' → logprob: -0.825950562953949
    3. 'int' → logprob: -12.325950622558594
    4. '(ir' → logprob: -13.200950622558594
    5. 'irt' → logprob: -13.825950622558594
    6. '_ir' → logprob: -13.950950622558594
    7. ' int' → logprob: -14.075950622558594
    8. 'irc' → logprob: -14.575950622558594
    9. '.ir' → logprob: -14.950950622558594
    10. '   ' → logprob: -15.200950622558594

Token 1488: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0024963486939668655
    2. '.' → logprob: -6.002496242523193
    3. ' .' → logprob: -11.002496719360352
    4. '   ' → logprob: -13.127496719360352
    5. '.readline' → logprob: -13.377496719360352
    6. 'read' → logprob: -14.627496719360352
    7. '.readlines' → logprob: -18.25249671936035
    8. '	read' → logprob: -18.37749671936035
    9. '  ' → logprob: -18.62749671936035
    10. ' read' → logprob: -19.00249671936035

Token 1489: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00038991993642412126
    2. 'int' → logprob: -8.62539005279541
    3. 'Int' → logprob: -9.37539005279541
    4. '()' → logprob: -9.50039005279541
    5. '_' → logprob: -10.00039005279541
    6. '()
' → logprob: -14.00039005279541
    7. '_INT' → logprob: -14.12539005279541
    8. ' _' → logprob: -14.25039005279541
    9. '_line' → logprob: -14.25039005279541
    10. '   ' → logprob: -14.75039005279541

Token 1490: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006085565313696861
    2. '<|end|>' → logprob: -5.256085395812988
    3. '
' → logprob: -7.881085395812988
    4. '        
' → logprob: -8.256085395812988
    5. '<|end|>' → logprob: -9.381085395812988
    6. '	' → logprob: -10.006085395812988
    7. '		
' → logprob: -10.381085395812988
    8. ',' → logprob: -11.381085395812988
    9. ')' → logprob: -12.381085395812988
    10. '   ' → logprob: -12.506085395812988

Token 1491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02308439277112484
    2. 'patterns' → logprob: -4.2730841636657715
    3. 'pattern' → logprob: -4.7730841636657715
    4. ' patterns' → logprob: -9.64808464050293
    5. '   ' → logprob: -9.77308464050293
    6. '        
' → logprob: -10.14808464050293
    7. 'for' → logprob: -10.39808464050293
    8. ' pattern' → logprob: -10.39808464050293
    9. 'symbols' → logprob: -10.39808464050293
    10. '<|end|>' → logprob: -10.52308464050293

Token 1492: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' (adapté à ' old') → logprob: -0.3493238687515259
    2. 'patterns' → logprob: -1.2243238687515259
    3. '       ' → logprob: -7.224323749542236
    4. 'pattern' → logprob: -9.474324226379395
    5. 'olds' → logprob: -10.599324226379395
    6. ' old' → logprob: -11.099324226379395
    7. '   ' → logprob: -12.474324226379395
    8. 'pat' → logprob: -12.599324226379395
    9. '	old' → logprob: -12.599324226379395
    10. 'all' → logprob: -12.849324226379395

Token 1493: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.0013215499930083752
    2. 'patterns' → logprob: -6.751321315765381
    3. '_pattern' → logprob: -9.751321792602539
    4. '```' → logprob: -10.251321792602539
    5. '
' → logprob: -11.376321792602539
    6. '_pat' → logprob: -11.626321792602539
    7. '_symbols' → logprob: -12.376321792602539
    8. '_p' → logprob: -12.626321792602539
    9. 'Patterns' → logprob: -12.876321792602539
    10. '=' → logprob: -12.876321792602539

Token 1494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760018825531006
    2. ' =' → logprob: -0.8260018825531006
    3. ':' → logprob: -10.07600212097168
    4. '=[]' → logprob: -11.57600212097168
    5. '=[]
' → logprob: -12.32600212097168
    6. '   ' → logprob: -12.32600212097168
    7. '       ' → logprob: -13.20100212097168
    8. '    ' → logprob: -16.20100212097168
    9. ' :' → logprob: -17.20100212097168
    10. '=[]
' → logprob: -17.32600212097168

Token 1495: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18244650959968567
    2. '[]
' → logprob: -2.1824464797973633
    3. '[]' → logprob: -2.9324464797973633
    4. '[new' → logprob: -9.432446479797363
    5. '[
' → logprob: -9.557446479797363
    6. '[N' → logprob: -9.682446479797363
    7. '[n' → logprob: -9.682446479797363
    8. '[]

' → logprob: -9.682446479797363
    9. ' [' → logprob: -9.807446479797363
    10. '[next' → logprob: -10.182446479797363

Token 1496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012348759919404984
    2. 'for' → logprob: -7.126235008239746
    3. ' for' → logprob: -8.376235008239746
    4. '<|end|>' → logprob: -8.751235008239746
    5. '	' → logprob: -11.126235008239746
    6. '        
' → logprob: -12.001235008239746
    7. '   ' → logprob: -12.001235008239746
    8. '	for' → logprob: -12.251235008239746
    9. '	   ' → logprob: -12.876235008239746
    10. '<|end|>' → logprob: -13.501235008239746

Token 1497: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0032530506141483784
    2. '       ' → logprob: -5.753252983093262
    3. ' for' → logprob: -9.503252983093262
    4. '	for' → logprob: -14.628252983093262
    5. '   ' → logprob: -15.378252983093262
    6. '           ' → logprob: -17.878253936767578
    7. '
' → logprob: -18.378253936767578
    8. '        
' → logprob: -18.378253936767578
    9. '```' → logprob: -19.378253936767578
    10. '	' → logprob: -19.628253936767578

Token 1498: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10399506241083145
    2. '__' → logprob: -2.3539950847625732
    3. '_i' → logprob: -5.728994846343994
    4. ' _' → logprob: -8.103995323181152
    5. '___' → logprob: -8.728995323181152
    6. ' __' → logprob: -10.478995323181152
    7. 'i' → logprob: -11.103995323181152
    8. '_j' → logprob: -11.478995323181152
    9. '_N' → logprob: -12.103995323181152
    10. '```' → logprob: -13.603995323181152

Token 1499: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0472109280526638
    2. ' in' → logprob: -3.797210931777954
    3. 'in' → logprob: -3.922210931777954
    4. 'range' → logprob: -5.672210693359375
    5. ' range' → logprob: -7.922210693359375
    6. ' _' → logprob: -10.047210693359375
    7. '_range' → logprob: -11.297210693359375
    8. ' ' → logprob: -11.547210693359375
    9. '__' → logprob: -12.297210693359375
    10. '0' → logprob: -12.422210693359375

Token 1500: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.386147626675665e-05
    2. '_' → logprob: -9.750073432922363
    3. ' range' → logprob: -11.125073432922363
    4. '_range' → logprob: -14.375073432922363
    5. '	range' → logprob: -17.25007438659668
    6. '
' → logprob: -17.87507438659668
    7. 'rang' → logprob: -18.00007438659668
    8. '0' → logprob: -18.00007438659668
    9. '(range' → logprob: -18.25007438659668
    10. 'in' → logprob: -19.00007438659668

Token 1501: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015990104293450713
    2. 'range' → logprob: -6.751598834991455
    3. '(N' → logprob: -8.376599311828613
    4. ' N' → logprob: -9.126599311828613
    5. ' range' → logprob: -9.751599311828613
    6. '_N' → logprob: -11.376599311828613
    7. '0' → logprob: -11.751599311828613
    8. '   ' → logprob: -11.876599311828613
    9. 'in' → logprob: -13.501599311828613
    10. '       ' → logprob: -13.751599311828613

Token 1502: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0456281900405884
    2. ':' → logprob: -1.5456281900405884
    3. '       ' → logprob: -1.5456281900405884
    4. ':
' → logprob: -1.9206281900405884
    5. '):' → logprob: -3.045628070831299
    6. '           ' → logprob: -4.170628070831299
    7. '():
' → logprob: -4.920628070831299
    8. '   ' → logprob: -6.420628070831299
    9. '<|end|>' → logprob: -6.670628070831299
    10. ')' → logprob: -7.045628070831299

Token 1503: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013685869053006172
    2. 'pattern' → logprob: -4.388685703277588
    3. 'pat' → logprob: -7.513685703277588
    4. 'line' → logprob: -7.888685703277588
    5. 'old' → logprob: -9.388686180114746
    6. '```' → logprob: -10.013686180114746
    7. ' line' → logprob: -10.388686180114746
    8. ' pattern' → logprob: -10.388686180114746
    9. 'p' → logprob: -10.513686180114746
    10. '   ' → logprob: -11.013686180114746

Token 1504: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -0.26264241337776184
    2. 'pat' → logprob: -2.0126423835754395
    3. 'old' → logprob: -2.6376423835754395
    4. 'p' → logprob: -3.8876423835754395
    5. '           ' → logprob: -5.2626423835754395
    6. 'line' → logprob: -9.512642860412598
    7. ' pattern' → logprob: -10.637642860412598
    8. '               ' → logprob: -11.262642860412598
    9. ' old' → logprob: -11.512642860412598
    10. 'pt' → logprob: -12.012642860412598

Token 1505: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46834370493888855
    2. '=' → logprob: -1.218343734741211
    3. '_str' → logprob: -2.718343734741211
    4. 'str' → logprob: -4.718343734741211
    5. '_line' → logprob: -6.218343734741211
    6. 's' → logprob: -7.093343734741211
    7. '=line' → logprob: -8.843343734741211
    8. '_string' → logprob: -8.968343734741211
    9. '_old' → logprob: -9.968343734741211
    10. '       ' → logprob: -10.468343734741211

Token 1506: ' ir' (ID: 3288)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0002614550176076591
    2. ' ir' → logprob: -8.250261306762695
    3. '(ir' → logprob: -16.375261306762695
    4. 'irr' → logprob: -18.000261306762695
    5. '_ir' → logprob: -18.750261306762695
    6. 'irl' → logprob: -19.000261306762695
    7. '   ' → logprob: -19.375261306762695
    8. '.ir' → logprob: -19.750261306762695
    9. 'Ir' → logprob: -20.500261306762695
    10. 'irc' → logprob: -20.625261306762695

Token 1507: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.006717386189848185
    2. 'read' → logprob: -5.006717205047607
    3. '.' → logprob: -13.381717681884766
    4. ' read' → logprob: -15.256717681884766
    5. '.readline' → logprob: -16.131717681884766
    6. '   ' → logprob: -16.506717681884766
    7. ' .' → logprob: -16.881717681884766
    8. '	read' → logprob: -17.506717681884766
    9. '_read' → logprob: -17.881717681884766
    10. '       ' → logprob: -18.756717681884766

Token 1508: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0004941754741594195
    2. 'pattern' → logprob: -7.625494003295898
    3. '_string' → logprob: -12.375494003295898
    4. 'Pattern' → logprob: -13.750494003295898
    5. '_' → logprob: -15.750494003295898
    6. '_str' → logprob: -15.875494003295898
    7. 'int' → logprob: -16.1254940032959
    8. '_int' → logprob: -16.5004940032959
    9. '(pattern' → logprob: -17.2504940032959
    10. '
' → logprob: -17.3754940032959

Token 1509: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.097437315271236e-05
    2. '
' → logprob: -11.00005054473877
    3. '()
' → logprob: -12.00005054473877
    4. '(old' → logprob: -12.00005054473877
    5. '()' → logprob: -12.62505054473877
    6. '       ' → logprob: -12.62505054473877
    7. '               ' → logprob: -13.00005054473877
    8. 'old' → logprob: -13.12505054473877
    9. '<|end|>' → logprob: -13.25005054473877
    10. '            
' → logprob: -13.75005054473877

Token 1510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004452083958312869
    2. 'old' → logprob: -7.875445365905762
    3. '       ' → logprob: -10.000445365905762
    4. '   ' → logprob: -12.375445365905762
    5. '```' → logprob: -12.500445365905762
    6. '		' → logprob: -12.875445365905762
    7. '               ' → logprob: -13.000445365905762
    8. '	       ' → logprob: -13.375445365905762
    9. '	old' → logprob: -13.625445365905762
    10. '(old' → logprob: -13.750445365905762

Token 1511: ' if' (ID: 538)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.0006869370117783546
    2. '           ' → logprob: -7.375687122344971
    3. 'if' (adapté à ' if') → logprob: -10.250686645507812
    4. ' old' → logprob: -10.625686645507812
    5. '#' → logprob: -15.625686645507812
    6. '	old' → logprob: -15.625686645507812
    7. '       ' → logprob: -15.750686645507812
    8. '   ' → logprob: -16.500686645507812
    9. '               ' → logprob: -17.000686645507812
    10. '(old' → logprob: -17.250686645507812

Token 1512: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0011075903894379735
    2. ' not' → logprob: -7.001107692718506
    3. 'pattern' → logprob: -8.751107215881348
    4. 'len' → logprob: -11.751107215881348
    5. '(not' → logprob: -11.876107215881348
    6. '           ' → logprob: -12.001107215881348
    7. 'any' → logprob: -12.501107215881348
    8. '   ' → logprob: -12.501107215881348
    9. '
' → logprob: -12.876107215881348
    10. '       ' → logprob: -13.376107215881348

Token 1513: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -8.721228368813172e-05
    2. ' pattern' → logprob: -9.375086784362793
    3. 'all' → logprob: -13.000086784362793
    4. '(pattern' → logprob: -16.12508773803711
    5. 'pat' → logprob: -17.87508773803711
    6. 'old' → logprob: -18.12508773803711
    7. '
' → logprob: -18.62508773803711
    8. ' all' → logprob: -19.00008773803711
    9. '   ' → logprob: -19.12508773803711
    10. 'attern' → logprob: -19.50008773803711

Token 1514: '.validate' (ID: 31577)
  Prédit: '.validate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.validate' → logprob: -7.874882430769503e-05
    2. '.is' → logprob: -9.625079154968262
    3. '.' → logprob: -11.500079154968262
    4. 'validate' → logprob: -13.125079154968262
    5. '   ' → logprob: -16.500078201293945
    6. '.
' → logprob: -16.750078201293945
    7. ' .' → logprob: -16.750078201293945
    8. '.has' → logprob: -17.125078201293945
    9. '.Validate' → logprob: -17.125078201293945
    10. '
' → logprob: -17.250078201293945

Token 1515: '_old' (ID: 49426)
  Prédit: '_old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_old' → logprob: -1.3856492842023727e-06
    2. 'old' → logprob: -13.625000953674316
    3. '(old' → logprob: -16.875001907348633
    4. '```' → logprob: -17.875001907348633
    5. 'Old' → logprob: -18.250001907348633
    6. '()' → logprob: -18.500001907348633
    7. 's' → logprob: -18.500001907348633
    8. '(_' → logprob: -19.250001907348633
    9. '_all' → logprob: -19.250001907348633
    10. '	old' → logprob: -20.625001907348633

Token 1516: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -6.349075556499884e-05
    2. '_pattern' → logprob: -9.7500638961792
    3. 'product' → logprob: -13.1250638961792
    4. '
' → logprob: -14.2500638961792
    5. 'Product' → logprob: -14.2500638961792
    6. '_products' → logprob: -14.7500638961792
    7. '_patterns' → logprob: -15.2500638961792
    8. '           ' → logprob: -15.3750638961792
    9. '   ' → logprob: -15.5000638961792
    10. ' _' → logprob: -16.375062942504883

Token 1517: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03807638958096504
    2. '():
' → logprob: -3.288076400756836
    3. '()' → logprob: -10.413076400756836
    4. '():
' → logprob: -12.788076400756836
    5. '()):
' → logprob: -14.288076400756836
    6. ':' → logprob: -14.663076400756836
    7. '       ' → logprob: -15.538076400756836
    8. '           ' → logprob: -15.538076400756836
    9. ' ():' → logprob: -15.538076400756836
    10. '():

' → logprob: -15.663076400756836

Token 1518: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005306334351189435
    2. '           ' → logprob: -7.62553071975708
    3. ' continue' → logprob: -11.250530242919922
    4. 'continue' → logprob: -11.375530242919922
    5. 'raise' → logprob: -12.000530242919922
    6. ' raise' → logprob: -12.000530242919922
    7. '                   ' → logprob: -13.375530242919922
    8. '```' → logprob: -13.375530242919922
    9. '              ' → logprob: -14.375530242919922
    10. '	           ' → logprob: -15.250530242919922

Token 1519: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6886252164840698
    2. 'raise' → logprob: -0.9386252164840698
    3. 'print' → logprob: -2.8136253356933594
    4. '               ' → logprob: -3.3136253356933594
    5. ' raise' → logprob: -5.188625335693359
    6. 'sys' → logprob: -6.063625335693359
    7. 'continue' → logprob: -6.813625335693359
    8. ' print' → logprob: -7.438625335693359
    9. '```' → logprob: -8.68862533569336
    10. '           ' → logprob: -8.93862533569336

Token 1520: ' É' (ID: 10055)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008906331844627857
    2. 'sys' → logprob: -5.258906364440918
    3. 'outputs' → logprob: -6.508906364440918
    4. 'raise' → logprob: -7.258906364440918
    5. 'continue' → logprob: -7.258906364440918
    6. '               ' → logprob: -7.508906364440918
    7. '           ' → logprob: -9.383906364440918
    8. ' print' → logprob: -9.883906364440918
    9. 'return' → logprob: -10.258906364440918
    10. '```' → logprob: -10.383906364440918

Token 1521: 'tant' (ID: 26712)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.9657862186431885
    2. '           ' → logprob: -1.0907862186431885
    3. 'rror' → logprob: -2.2157862186431885
    4. 'x' → logprob: -2.3407862186431885
    5. '       ' → logprob: -3.3407862186431885
    6. '#' → logprob: -3.7157862186431885
    7. ' raise' → logprob: -5.965785980224609
    8. '	raise' → logprob: -6.215785980224609
    9. 'lever' → logprob: -6.340785980224609
    10. 'm' → logprob: -6.340785980224609

Token 1522: ' donné' (ID: 52079)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0681841373443604
    2. '           ' → logprob: -1.4431841373443604
    3. '               ' → logprob: -3.1931841373443604
    4. '                  ' → logprob: -3.3181841373443604
    5. '          ' → logprob: -3.3181841373443604
    6. '   ' → logprob: -3.4431841373443604
    7. 'not' → logprob: -3.5681841373443604
    8. 'pas' → logprob: -3.5681841373443604
    9. '```' → logprob: -3.5681841373443604
    10. 'raise' → logprob: -3.9431841373443604

Token 1523: ' que' (ID: 661)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021526850759983063
    2. ' que' → logprob: -5.39652681350708
    3. '           ' → logprob: -5.52152681350708
    4. 'that' → logprob: -6.27152681350708
    5. '                   ' → logprob: -6.27152681350708
    6. '```' → logprob: -6.52152681350708
    7. '                ' → logprob: -6.64652681350708
    8. ' that' → logprob: -6.77152681350708
    9. 'raise' → logprob: -6.89652681350708
    10. 'que' → logprob: -7.27152681350708

Token 1524: ' l' (ID: 305)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3282553255558014
    2. 'print' → logprob: -2.7032554149627686
    3. 'False' → logprob: -2.7032554149627686
    4. ' True' → logprob: -2.7032554149627686
    5. 'not' → logprob: -3.2032554149627686
    6. 'sys' → logprob: -4.7032551765441895
    7. 'outputs' → logprob: -4.7032551765441895
    8. 'raise' → logprob: -4.8282551765441895
    9. '
' → logprob: -5.8282551765441895
    10. 'continue' → logprob: -6.2032551765441895

Token 1525: ''' (ID: 6)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.18862740695476532
    2. 'len' → logprob: -2.8136274814605713
    3. ' not' → logprob: -3.1886274814605713
    4. 'True' → logprob: -3.8136274814605713
    5. 'pattern' → logprob: -3.9386274814605713
    6. '           ' → logprob: -4.688627243041992
    7. 'False' → logprob: -5.438627243041992
    8. 'N' → logprob: -5.938627243041992
    9. '               ' → logprob: -6.063627243041992
    10. '#' → logprob: -6.188627243041992

Token 1526: 'én' (ID: 3289)
  Prédit: 'ancien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancien' → logprob: -0.3575781285762787
    2. 'ancienne' → logprob: -2.2325780391693115
    3. ''ancien' → logprob: -2.4825780391693115
    4. 'anc' → logprob: -3.6075780391693115
    5. ''' → logprob: -4.232578277587891
    6. 'instruction' → logprob: -4.482578277587891
    7. 'én' → logprob: -4.607578277587891
    8. 'anci' → logprob: -4.982578277587891
    9. ''utilisateur' → logprob: -4.982578277587891
    10. 'on' → logprob: -5.607578277587891

Token 1527: 'oncé' (ID: 59071)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.32328200340271
    2. '   ' → logprob: -2.07328200340271
    3. 'ève' → logprob: -2.07328200340271
    4. '```' → logprob: -2.32328200340271
    5. 'orme' → logprob: -2.94828200340271
    6. 'except' → logprob: -3.19828200340271
    7. '           ' → logprob: -3.69828200340271
    8. 'ément' → logprob: -3.82328200340271
    9. 'um' → logprob: -3.82328200340271
    10. 'oncé' → logprob: -4.073282241821289

Token 1528: ' garantit' (ID: 182078)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1749584674835205
    2. 'est' → logprob: -1.9249584674835205
    3. 'n' → logprob: -2.0499584674835205
    4. '           ' → logprob: -2.7999584674835205
    5. 'continue' → logprob: -2.7999584674835205
    6. 'ne' → logprob: -3.0499584674835205
    7. '#' → logprob: -3.4249584674835205
    8. ' ne' → logprob: -3.5499584674835205
    9. ' n' → logprob: -3.6749584674835205
    10. ' continue' → logprob: -3.9249584674835205

Token 1529: ' la' (ID: 557)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8781090974807739
    2. 'que' → logprob: -1.128109097480774
    3. ' que' → logprob: -2.0031089782714844
    4. 'l' → logprob: -4.003108978271484
    5. 'le' → logprob: -4.003108978271484
    6. 'qu' → logprob: -4.378108978271484
    7. '                   ' → logprob: -4.753108978271484
    8. 'la' → logprob: -4.878108978271484
    9. ' qu' → logprob: -5.128108978271484
    10. 'pas' → logprob: -5.128108978271484

Token 1530: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.04660535603761673
    2. 'contin' → logprob: -3.671605348587036
    3. 'val' → logprob: -5.546605587005615
    4. 'suite' → logprob: -5.671605587005615
    5. 'prés' → logprob: -6.546605587005615
    6. 'validation' → logprob: -6.921605587005615
    7. 'cor' → logprob: -7.046605587005615
    8. 'compat' → logprob: -7.046605587005615
    9. ' valid' → logprob: -7.171605587005615
    10. 'poss' → logprob: -7.671605587005615

Token 1531: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.03817770257592201
    2. 'é' → logprob: -4.038177490234375
    3. 'té' → logprob: -4.288177490234375
    4. 'ation' → logprob: -6.413177490234375
    5. 'alité' → logprob: -6.413177490234375
    6. 'ite' → logprob: -6.663177490234375
    7. 'ity' → logprob: -8.413177490234375
    8. 'it' → logprob: -8.538177490234375
    9. 'tion' → logprob: -8.913177490234375
    10. '#' → logprob: -9.038177490234375

Token 1532: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07622841000556946
    2. '                   ' → logprob: -3.076228380203247
    3. ',' → logprob: -3.701228380203247
    4. 'du' → logprob: -7.451228618621826
    5. 'continue' → logprob: -7.826228618621826
    6. '           ' → logprob: -8.076228141784668
    7. 'de' → logprob: -8.201228141784668
    8. ' du' → logprob: -8.576228141784668
    9. 'des' → logprob: -8.701228141784668
    10. ',
' → logprob: -8.701228141784668

Token 1533: ' ceci' (ID: 98542)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5052339434623718
    2. 'print' → logprob: -1.5052340030670166
    3. '                   ' → logprob: -1.8802340030670166
    4. 'raise' → logprob: -4.2552337646484375
    5. 'sys' → logprob: -5.6302337646484375
    6. 'continue' → logprob: -6.2552337646484375
    7. ' raise' → logprob: -7.0052337646484375
    8. ' print' → logprob: -7.3802337646484375
    9. 'import' → logprob: -8.255233764648438
    10. '           ' → logprob: -8.880233764648438

Token 1534: ' est' (ID: 893)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3108851909637451
    2. 'raise' → logprob: -2.060885190963745
    3. '                   ' → logprob: -2.185885190963745
    4. 'sys' → logprob: -5.185885429382324
    5. 'return' → logprob: -5.310885429382324
    6. 'continue' → logprob: -6.185885429382324
    7. '
' → logprob: -6.310885429382324
    8. 'is' → logprob: -6.560885429382324
    9. 'import' → logprob: -6.560885429382324
    10. ' raise' → logprob: -6.560885429382324

Token 1535: ' une' (ID: 2463)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9019449353218079
    2. 'raise' → logprob: -1.151944875717163
    3. 'pass' → logprob: -2.401944875717163
    4. '                   ' → logprob: -2.901944875717163
    5. 'continue' → logprob: -2.901944875717163
    6. '```' → logprob: -3.151944875717163
    7. 'im' → logprob: -4.276945114135742
    8. 'rare' → logprob: -5.901945114135742
    9. 'assert' → logprob: -6.026945114135742
    10. '           ' → logprob: -6.026945114135742

Token 1536: ' sécurité' (ID: 32375)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.10816372185945511
    2. 'return' → logprob: -2.358163833618164
    3. 'continue' → logprob: -6.233163833618164
    4. ' raise' → logprob: -6.233163833618164
    5. 'pass' → logprob: -6.858163833618164
    6. '#' → logprob: -7.233163833618164
    7. 'sys' → logprob: -7.483163833618164
    8. 'Value' → logprob: -7.608163833618164
    9. 'print' → logprob: -7.733163833618164
    10. 'break' → logprob: -8.358163833618164

Token 1537: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3209322988986969
    2. '               ' → logprob: -1.3209322690963745
    3. 'continue' → logprob: -5.570932388305664
    4. '                   ' → logprob: -6.570932388305664
    5. 'return' → logprob: -6.945932388305664
    6. '       ' → logprob: -7.320932388305664
    7. ',' → logprob: -7.945932388305664
    8. 'raise' → logprob: -8.945932388305664
    9. ' continue' → logprob: -9.695932388305664
    10. 'import' → logprob: -9.945932388305664

Token 1538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0319061279296875
    2. '                   ' → logprob: -4.1569061279296875
    3. '           ' → logprob: -4.1569061279296875
    4. 'continue' → logprob: -10.781906127929688
    5. '                       ' → logprob: -10.906906127929688
    6. ' continue' → logprob: -11.031906127929688
    7. ',' → logprob: -11.531906127929688
    8. '```' → logprob: -11.656906127929688
    9. '       ' → logprob: -12.406906127929688
    10. '   ' → logprob: -13.031906127929688

Token 1539: ' raise' (ID: 9338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012344584800302982
    2. 'sys' → logprob: -5.0123443603515625
    3. 'raise' (adapté à ' raise') → logprob: -5.2623443603515625
    4. 'return' → logprob: -8.012344360351562
    5. 'continue' → logprob: -9.387344360351562
    6. '           ' → logprob: -12.012344360351562
    7. ' print' → logprob: -12.137344360351562
    8. '               ' → logprob: -13.637344360351562
    9. '       ' → logprob: -14.012344360351562
    10. ' sys' → logprob: -14.512344360351562

Token 1540: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.000948141620028764
    2. 'Runtime' → logprob: -7.000947952270508
    3. 'Assertion' → logprob: -10.250947952270508
    4. ' Value' → logprob: -13.875947952270508
    5. 'System' → logprob: -15.750947952270508
    6. 'Exception' → logprob: -15.750947952270508
    7. ' Runtime' → logprob: -18.875947952270508
    8. '_value' → logprob: -19.500947952270508
    9. '(Value' → logprob: -19.500947952270508
    10. '_Value' → logprob: -19.875947952270508

Token 1541: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.011049000546336174
    2. 'rror' → logprob: -4.511048793792725
    3. 'r' → logprob: -14.261049270629883
    4. 'n' → logprob: -15.136049270629883
    5. 'ror' → logprob: -16.261049270629883
    6. 'LError' → logprob: -16.386049270629883
    7. ' Error' → logprob: -17.511049270629883
    8. 'SError' → logprob: -17.886049270629883
    9. 'Warning' → logprob: -17.886049270629883
    10. 'error' → logprob: -18.136049270629883

Token 1542: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002931558701675385
    2. '(f' → logprob: -8.500292778015137
    3. '(' → logprob: -9.375292778015137
    4. '('' → logprob: -13.125292778015137
    5. '(
' → logprob: -13.375292778015137
    6. '"' → logprob: -14.500292778015137
    7. '               ' → logprob: -15.000292778015137
    8. 'f' → logprob: -15.500292778015137
    9. '           ' → logprob: -15.625292778015137
    10. '("'' → logprob: -16.125293731689453

Token 1543: 'Invalid' (ID: 12278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4323691725730896
    2. 'Invalid' → logprob: -1.5573692321777344
    3. 'f' → logprob: -2.0573692321777344
    4. '"In' → logprob: -5.557369232177734
    5. 'Pattern' → logprob: -6.307369232177734
    6. ' f' → logprob: -6.307369232177734
    7. 'Old' → logprob: -6.432369232177734
    8. 'In' → logprob: -7.182369232177734
    9. 'All' → logprob: -7.182369232177734
    10. 'Anc' → logprob: -8.057369232177734

Token 1544: ' old' (ID: 2890)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.3335856795310974
    2. ' old' → logprob: -1.7085857391357422
    3. ' symbol' → logprob: -2.958585739135742
    4. ' input' → logprob: -3.458585739135742
    5. 'pattern' → logprob: -4.708585739135742
    6. ' hex' → logprob: -5.583585739135742
    7. 'symbol' → logprob: -5.958585739135742
    8. 'old' → logprob: -6.083585739135742
    9. ' rhythm' → logprob: -7.708585739135742
    10. 'input' → logprob: -7.833585739135742

Token 1545: ' product' (ID: 1888)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.6967422962188721
    2. ' product' → logprob: -0.9467422962188721
    3. '_pattern' → logprob: -2.821742296218872
    4. '_product' → logprob: -2.946742296218872
    5. 'pattern' → logprob: -7.321742057800293
    6. 'Product' → logprob: -8.071742057800293
    7. ' _' → logprob: -8.571742057800293
    8. 'product' → logprob: -8.696742057800293
    9. '_' → logprob: -8.821742057800293
    10. 'Pattern' → logprob: -9.071742057800293

Token 1546: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.05566252022981644
    2. 'pattern' → logprob: -2.9306626319885254
    3. ' symbol' → logprob: -7.805662631988525
    4. 'symbol' → logprob: -8.055662155151367
    5. ')' → logprob: -10.805662155151367
    6. '_pattern' → logprob: -11.305662155151367
    7. ' input' → logprob: -11.555662155151367
    8. 'input' → logprob: -13.180662155151367
    9. '")' → logprob: -13.305662155151367
    10. '   ' → logprob: -13.680662155151367

Token 1547: ' detected' (ID: 28357)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3347523510456085
    2. ')")
' → logprob: -1.8347523212432861
    3. '       ' → logprob: -2.709752321243286
    4. '")' → logprob: -3.209752321243286
    5. ')' → logprob: -5.084752559661865
    6. '           ' → logprob: -5.459752559661865
    7. ' detected' → logprob: -5.709752559661865
    8. ' found' → logprob: -6.709752559661865
    9. ' for' → logprob: -7.334752559661865
    10. '")
' → logprob: -7.334752559661865

Token 1548: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.29309067130088806
    2. '           ' → logprob: -1.5430907011032104
    3. ')")
' → logprob: -3.793090581893921
    4. '       ' → logprob: -4.5430908203125
    5. '")' → logprob: -5.0430908203125
    6. ')' → logprob: -8.2930908203125
    7. '")
' → logprob: -8.6680908203125
    8. '               ' → logprob: -9.0430908203125
    9. '.")
' → logprob: -10.0430908203125
    10. '")

' → logprob: -10.6680908203125

Token 1549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000923965300898999
    2. 'old' → logprob: -7.125924110412598
    3. '       ' → logprob: -9.375924110412598
    4. '               ' → logprob: -11.375924110412598
    5. '```' → logprob: -12.250924110412598
    6. '<|end|>' → logprob: -12.500924110412598
    7. ' old' → logprob: -13.250924110412598
    8. '   ' → logprob: -13.375924110412598
    9. '		' → logprob: -13.375924110412598
    10. '
' → logprob: -13.375924110412598

Token 1550: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' (adapté à ' old') → logprob: -0.36428436636924744
    2. '           ' → logprob: -1.2392843961715698
    3. '       ' → logprob: -4.239284515380859
    4. ' old' → logprob: -6.864284515380859
    5. '
' → logprob: -9.73928451538086
    6. '               ' → logprob: -9.86428451538086
    7. '   ' → logprob: -9.86428451538086
    8. '	old' → logprob: -9.98928451538086
    9. 'if' → logprob: -11.36428451538086
    10. '(old' → logprob: -11.73928451538086

Token 1551: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -6.153795766294934e-06
    2. 'patterns' → logprob: -12.125005722045898
    3. '_pattern' → logprob: -15.250005722045898
    4. '           ' → logprob: -16.0000057220459
    5. '       ' → logprob: -16.3750057220459
    6. '_pat' → logprob: -16.6250057220459
    7. '
' → logprob: -17.0000057220459
    8. '_symbols' → logprob: -17.7500057220459
    9. '_p' → logprob: -17.8750057220459
    10. '_products' → logprob: -17.8750057220459

Token 1552: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.1080467781284824e-05
    2. '.' → logprob: -10.125041007995605
    3. ' .' → logprob: -15.000041007995605
    4. 'append' → logprob: -15.500041007995605
    5. '.extend' → logprob: -16.000041961669922
    6. '.Append' → logprob: -16.375041961669922
    7. '.app' → logprob: -16.375041961669922
    8. '.add' → logprob: -17.375041961669922
    9. '.ap' → logprob: -18.000041961669922
    10. ').' → logprob: -18.125041961669922

Token 1553: '(pattern' (ID: 62660)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.061968132853507996
    2. '(pattern' → logprob: -2.8119680881500244
    3. ' pattern' → logprob: -14.561967849731445
    4. 'pat' → logprob: -18.561967849731445
    5. 'Pattern' → logprob: -20.186967849731445
    6. '_pattern' → logprob: -21.436967849731445
    7. '.pattern' → logprob: -21.561967849731445
    8. 'attern' → logprob: -21.686967849731445
    9. '(
' → logprob: -21.811967849731445
    10. '```' → logprob: -22.436967849731445

Token 1554: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8349315524101257
    2. '       ' → logprob: -0.9599315524101257
    3. '
' → logprob: -1.9599316120147705
    4. '<|end|>' → logprob: -3.5849316120147705
    5. ')
' → logprob: -4.334931373596191
    6. '<|end|>' → logprob: -7.084931373596191
    7. '        
' → logprob: -8.209931373596191
    8. '
' → logprob: -9.334931373596191
    9. '   ' → logprob: -9.959931373596191
    10. '```' → logprob: -10.209931373596191

Token 1555: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37779104709625244
    2. 'mer' → logprob: -1.2527910470962524
    3. ' merger' → logprob: -4.002790927886963
    4. '       ' → logprob: -5.127790927886963
    5. '
' → logprob: -5.502790927886963
    6. '    
' → logprob: -8.627791404724121
    7. 'm' → logprob: -9.377791404724121
    8. 'rpm' → logprob: -9.377791404724121
    9. '```' → logprob: -10.127791404724121
    10. 'pm' → logprob: -10.127791404724121

Token 1556: ' merger' (ID: 77756)
  Prédit: 'mer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.010678142309188843
    2. 'if' → logprob: -5.385678291320801
    3. 'rpm' → logprob: -5.885678291320801
    4. '   ' → logprob: -6.135678291320801
    5. ' merger' → logprob: -8.3856782913208
    6. '#' → logprob: -8.7606782913208
    7. '       ' → logprob: -8.8856782913208
    8. 'mp' → logprob: -8.8856782913208
    9. '
' → logprob: -9.2606782913208
    10. 'r' → logprob: -9.3856782913208

Token 1557: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. '   ' → logprob: -14.50192928314209
    4. '	' → logprob: -16.876930236816406
    5. 'mer' → logprob: -17.376930236816406
    6. '＝' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.876930236816406
    8. '  ' → logprob: -18.251930236816406
    9. '=
' → logprob: -18.751930236816406
    10. '_mer' → logprob: -18.751930236816406

Token 1558: ' Rhythm' (ID: 148652)
  Prédit: 'Rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rh' → logprob: -4.320199877838604e-07
    2. ' Rhythm' → logprob: -14.75
    3. 'Ry' → logprob: -20.375
    4. ' Rh' → logprob: -21.375
    5. '   ' → logprob: -21.875
    6. 'RH' → logprob: -22.0
    7. 'Harmony' → logprob: -22.75
    8. 'Rock' → logprob: -23.0
    9. '```' → logprob: -23.25
    10. ' rhythm' → logprob: -23.625

Token 1559: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: 0.0
    2. 'Patterns' → logprob: -17.5
    3. 'pattern' → logprob: -18.125
    4. ' Pattern' → logprob: -19.25
    5. 'Rh' → logprob: -19.875
    6. '_pattern' → logprob: -20.875
    7. '=' → logprob: -21.0
    8. '.Pattern' → logprob: -21.125
    9. 'Pat' → logprob: -21.25
    10. '_PATTERN' → logprob: -22.25

Token 1560: 'Mer' (ID: 18280)
  Prédit: 'Mer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mer' → logprob: -1.2664456789934775e-06
    2. 'mer' → logprob: -13.875000953674316
    3. ' Mer' → logprob: -15.500000953674316
    4. 'Merk' → logprob: -19.125001907348633
    5. '_mer' → logprob: -19.375001907348633
    6. ' merger' → logprob: -19.500001907348633
    7. 'MER' → logprob: -20.500001907348633
    8. 'Merge' → logprob: -20.625001907348633
    9. '(M' → logprob: -21.250001907348633
    10. '(' → logprob: -21.625001907348633

Token 1561: 'ger' (ID: 1281)
  Prédit: 'ger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ger' → logprob: -0.004085524007678032
    2. 'er' → logprob: -5.504085540771484
    3. 'mer' → logprob: -12.754085540771484
    4. 'eger' → logprob: -13.254085540771484
    5. 'rer' → logprob: -14.504085540771484
    6. 'ager' → logprob: -14.754085540771484
    7. ' merger' → logprob: -14.879085540771484
    8. 'erg' → logprob: -15.254085540771484
    9. '   ' → logprob: -15.254085540771484
    10. 'ser' → logprob: -15.754085540771484

Token 1562: '(old' (ID: 38325)
  Prédit: '(old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(old' → logprob: -0.00012439649435691535
    2. 'old' → logprob: -9.000123977661133
    3. '(' → logprob: -14.750123977661133
    4. '       ' → logprob: -15.750123977661133
    5. ' old' → logprob: -16.000123977661133
    6. '(existing' → logprob: -16.750123977661133
    7. '	old' → logprob: -16.875123977661133
    8. '.old' → logprob: -16.875123977661133
    9. '_old' → logprob: -17.250123977661133
    10. '(N' → logprob: -17.625123977661133

Token 1563: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -3.810037742368877e-05
    2. 'patterns' → logprob: -10.250038146972656
    3. '```' → logprob: -13.875038146972656
    4. '
' → logprob: -14.875038146972656
    5. '_products' → logprob: -14.875038146972656
    6. 'old' → logprob: -15.250038146972656
    7. 'Patterns' → logprob: -15.625038146972656
    8. '`' → logprob: -16.125038146972656
    9. 's' → logprob: -16.125038146972656
    10. '=' → logprob: -16.625038146972656

Token 1564: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3890654444694519
    2. ')
' → logprob: -1.1390655040740967
    3. '       ' → logprob: -6.264065265655518
    4. '())
' → logprob: -9.514065742492676
    5. ')
' → logprob: -10.014065742492676
    6. '()
' → logprob: -10.139065742492676
    7. '   ' → logprob: -10.264065742492676
    8. '()' → logprob: -10.639065742492676
    9. ').' → logprob: -10.889065742492676
    10. '<|end|>' → logprob: -11.014065742492676

Token 1565: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06781240552663803
    2. '       ' → logprob: -2.942812442779541
    3. 'output' → logprob: -4.692812442779541
    4. 'merged' → logprob: -6.192812442779541
    5. ' result' → logprob: -6.692812442779541
    6. '   ' → logprob: -8.317811965942383
    7. 'res' → logprob: -9.817811965942383
    8. '	result' → logprob: -10.567811965942383
    9. '```' → logprob: -10.567811965942383
    10. ' merged' → logprob: -11.317811965942383

Token 1566: ' merged' (ID: 49536)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2523740530014038
    2. 'merged' (adapté à ' merged') → logprob: -1.5023740530014038
    3. 'res' → logprob: -8.252373695373535
    4. 'output' → logprob: -9.002373695373535
    5. ' result' → logprob: -10.627373695373535
    6. ' merged' → logprob: -10.752373695373535
    7. '       ' → logprob: -11.252373695373535
    8. 'merge' → logprob: -13.502373695373535
    9. 'out' → logprob: -15.127373695373535
    10. 'combined' → logprob: -15.127373695373535

Token 1567: ' =' (ID: 314)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00882941484451294
    2. '_str' → logprob: -5.758829593658447
    3. '_hex' → logprob: -6.383829593658447
    4. '_code' → logprob: -6.508829593658447
    5. '_result' → logprob: -6.883829593658447
    6. '_string' → logprob: -7.508829593658447
    7. 'pattern' → logprob: -7.758829593658447
    8. '_output' → logprob: -8.758829116821289
    9. ' =' → logprob: -8.883829116821289
    10. '=' → logprob: -9.258829116821289

Token 1568: ' merger' (ID: 77756)
  Prédit: 'mer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.0005532711511477828
    2. ' merger' → logprob: -7.500553131103516
    3. 'merge' → logprob: -16.125553131103516
    4. 'merged' → logprob: -16.500553131103516
    5. '   ' → logprob: -18.875553131103516
    6. ' ' → logprob: -19.625553131103516
    7. '`' → logprob: -19.750553131103516
    8. ' mer' → logprob: -20.375553131103516
    9. 'imer' → logprob: -20.750553131103516
    10. 'mero' → logprob: -20.875553131103516

Token 1569: '.merge' (ID: 51225)
  Prédit: '.merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.merge' → logprob: -0.00171563564799726
    2. '.' → logprob: -6.376715660095215
    3. 'merge' → logprob: -11.751715660095215
    4. '.m' → logprob: -13.126715660095215
    5. ' .' → logprob: -13.751715660095215
    6. '().' → logprob: -13.876715660095215
    7. '_merge' → logprob: -14.126715660095215
    8. '.Merge' → logprob: -14.376715660095215
    9. '._' → logprob: -17.3767147064209
    10. '.concatenate' → logprob: -17.5017147064209

Token 1570: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24345681071281433
    2. 'if' → logprob: -2.3684568405151367
    3. ' if' → logprob: -2.8684568405151367
    4. '
' → logprob: -3.2434568405151367
    5. '<|end|>' → logprob: -4.368456840515137
    6. '()
' → logprob: -4.868456840515137
    7. '   ' → logprob: -5.993456840515137
    8. '<|end|>' → logprob: -6.618456840515137
    9. '()' → logprob: -6.993456840515137
    10. '(' → logprob: -7.868456840515137

Token 1571: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4948226809501648
    2. 'if' → logprob: -1.1198227405548096
    3. '       ' → logprob: -2.9948227405548096
    4. ' if' → logprob: -4.3698225021362305
    5. '```' → logprob: -6.8698225021362305
    6. '<|end|>' → logprob: -8.86982250213623
    7. '	if' → logprob: -9.86982250213623
    8. '``' → logprob: -11.11982250213623
    9. '
' → logprob: -11.61982250213623
    10. '    ' → logprob: -11.74482250213623

Token 1572: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6939071416854858
    2. 'if' (adapté à ' if') → logprob: -0.6939071416854858
    3. ' if' → logprob: -7.443907260894775
    4. '   ' → logprob: -8.818906784057617
    5. 'outputs' → logprob: -11.068906784057617
    6. '```' → logprob: -11.693906784057617
    7. 'output' → logprob: -14.193906784057617
    8. '	if' → logprob: -14.568906784057617
    9. '           ' → logprob: -14.693906784057617
    10. '<|end|>' → logprob: -14.693906784057617

Token 1573: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.6931473612785339
    2. 'merged' → logprob: -0.6931473612785339
    3. 'Merged' → logprob: -16.943147659301758
    4. ' ' → logprob: -18.318147659301758
    5. ' ' → logprob: -18.443147659301758
    6. '   ' → logprob: -18.568147659301758
    7. 'm' → logprob: -18.818147659301758
    8. 'mer' → logprob: -19.318147659301758
    9. 'len' → logprob: -20.068147659301758
    10. 'erged' → logprob: -20.318147659301758

Token 1574: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.013652000576257706
    2. 'is' → logprob: -4.3886518478393555
    3. ' ==' → logprob: -7.2636518478393555
    4. '==' → logprob: -7.7636518478393555
    5. '	is' → logprob: -11.763651847839355
    6. '===' → logprob: -13.513651847839355
    7. '        ' → logprob: -13.763651847839355
    8. ')' → logprob: -13.763651847839355
    9. '       ' → logprob: -13.888651847839355
    10. '<|end|>' → logprob: -14.763651847839355

Token 1575: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00202880403958261
    2. 'not' → logprob: -6.252028942108154
    3. ' None' → logprob: -9.252028465270996
    4. ' not' → logprob: -13.002028465270996
    5. '   ' → logprob: -13.377028465270996
    6. 'Not' → logprob: -14.627028465270996
    7. '_None' → logprob: -18.627029418945312
    8. 'none' → logprob: -18.752029418945312
    9. '(None' → logprob: -19.002029418945312
    10. '       ' → logprob: -19.252029418945312

Token 1576: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4387436807155609
    2. ':' → logprob: -1.1887437105178833
    3. ':
' → logprob: -3.0637435913085938
    4. ' or' → logprob: -6.188743591308594
    5. '       ' → logprob: -6.563743591308594
    6. 'print' → logprob: -9.438743591308594
    7. '               ' → logprob: -9.938743591308594
    8. ' and' → logprob: -10.563743591308594
    9. '	       ' → logprob: -10.563743591308594
    10. '          ' → logprob: -10.688743591308594

Token 1577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005242652725428343
    2. 'print' → logprob: -5.255242824554443
    3. '       ' → logprob: -12.505242347717285
    4. '```' → logprob: -13.130242347717285
    5. ' print' → logprob: -13.630242347717285
    6. '               ' → logprob: -13.755242347717285
    7. '	       ' → logprob: -14.380242347717285
    8. '		' → logprob: -15.755242347717285
    9. '   ' → logprob: -17.2552433013916
    10. '	print' → logprob: -17.5052433013916

Token 1578: ' outputs' (ID: 32725)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06656423211097717
    2. '       ' → logprob: -2.8165643215179443
    3. 'outputs' (adapté à ' outputs') → logprob: -5.816564083099365
    4. '           ' → logprob: -6.566564083099365
    5. '```' → logprob: -9.691564559936523
    6. '   ' → logprob: -9.816564559936523
    7. 'prints' → logprob: -10.066564559936523
    8. ' print' → logprob: -10.566564559936523
    9. 'output' → logprob: -11.691564559936523
    10. '	print' → logprob: -12.441564559936523

Token 1579: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -13.000005722045898
    3. 'append' → logprob: -13.375005722045898
    4. '           ' → logprob: -13.750005722045898
    5. '.app' → logprob: -14.875005722045898
    6. '.extend' → logprob: -16.3750057220459
    7. ' .' → logprob: -16.7500057220459
    8. '.Append' → logprob: -16.8750057220459
    9. '```' → logprob: -16.8750057220459
    10. '   ' → logprob: -17.6250057220459

Token 1580: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.19162149727344513
    2. '"' → logprob: -1.8166215419769287
    3. '("-' → logprob: -5.44162130355835
    4. '"No' → logprob: -5.69162130355835
    5. '("?' → logprob: -6.81662130355835
    6. '"-' → logprob: -6.94162130355835
    7. '('' → logprob: -7.19162130355835
    8. '"?' → logprob: -7.56662130355835
    9. '"N' → logprob: -8.441621780395508
    10. ''' → logprob: -8.941621780395508

Token 1581: 'Too' (ID: 48381)
  Prédit: 'TO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TO' → logprob: -0.04950108006596565
    2. 'T' → logprob: -3.2995011806488037
    3. 'Too' → logprob: -6.549500942230225
    4. 'PAT' → logprob: -6.924500942230225
    5. '"' → logprob: -7.049500942230225
    6. 'ERROR' → logprob: -7.174500942230225
    7. 't' → logprob: -7.174500942230225
    8. 'OVER' → logprob: -7.424500942230225
    9. 'INVALID' → logprob: -7.674500942230225
    10. '"T' → logprob: -7.799500942230225

Token 1582: ' complex' (ID: 8012)
  Prédit: ' long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.8362973928451538
    2. 'Long' → logprob: -1.7112973928451538
    3. ' large' → logprob: -1.7112973928451538
    4. 'long' → logprob: -2.0862975120544434
    5. 'Large' → logprob: -3.2112975120544434
    6. 'large' → logprob: -3.9612975120544434
    7. ' big' → logprob: -4.461297512054443
    8. ' ' → logprob: -5.711297512054443
    9. 'Big' → logprob: -6.086297512054443
    10. ' Long' → logprob: -6.586297512054443

Token 1583: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04079332575201988
    2. ' pattern' → logprob: -3.6657934188842773
    3. 'pattern' → logprob: -4.540793418884277
    4. ' to' → logprob: -6.165793418884277
    5. '")
' → logprob: -6.915793418884277
    6. 'to' → logprob: -8.665793418884277
    7. ' for' → logprob: -9.290793418884277
    8. '.")' → logprob: -9.665793418884277
    9. '!")' → logprob: -9.790793418884277
    10. '"' → logprob: -10.165793418884277

Token 1584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001890210434794426
    2. 'else' → logprob: -6.501890182495117
    3. '           ' → logprob: -8.376890182495117
    4. ' else' → logprob: -9.251890182495117
    5. 'continue' → logprob: -10.001890182495117
    6. '   ' → logprob: -11.751890182495117
    7. '```' → logprob: -12.376890182495117
    8. '
' → logprob: -13.251890182495117
    9. ' continue' → logprob: -14.126890182495117
    10. '<|end|>' → logprob: -14.376890182495117

Token 1585: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5802443027496338
    2. '       ' → logprob: -0.8302443027496338
    3. ' else' → logprob: -5.455244064331055
    4. '   ' → logprob: -12.205244064331055
    5. 'continue' → logprob: -12.330244064331055
    6. 'elif' → logprob: -12.455244064331055
    7. '           ' → logprob: -12.830244064331055
    8. '```' → logprob: -12.830244064331055
    9. '	else' → logprob: -13.455244064331055
    10. '	' → logprob: -14.455244064331055

Token 1586: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022809267102275044
    2. 'outputs' → logprob: -9.000227928161621
    3. '       ' → logprob: -10.500227928161621
    4. ':' → logprob: -10.500227928161621
    5. ':
' → logprob: -10.625227928161621
    6. ' outputs' → logprob: -11.500227928161621
    7. '(outputs' → logprob: -12.000227928161621
    8. '```' → logprob: -12.375227928161621
    9. '               ' → logprob: -13.375227928161621
    10. '	       ' → logprob: -14.000227928161621

Token 1587: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06342969834804535
    2. '           ' → logprob: -2.813429594039917
    3. 'outputs' → logprob: -6.563429832458496
    4. ' outputs' → logprob: -10.063429832458496
    5. '   ' → logprob: -12.313429832458496
    6. '               ' → logprob: -14.063429832458496
    7. '(outputs' → logprob: -14.313429832458496
    8. '	       ' → logprob: -14.563429832458496
    9. '```' → logprob: -14.938429832458496
    10. 'output' → logprob: -15.188429832458496

Token 1588: ' outputs' (ID: 32725)
  Prédit: 'outputs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outputs' (adapté à ' outputs') → logprob: -0.020132236182689667
    2. '       ' → logprob: -4.020132064819336
    3. ' outputs' → logprob: -6.270132064819336
    4. '           ' → logprob: -9.395132064819336
    5. '(outputs' → logprob: -12.520132064819336
    6. '.outputs' → logprob: -14.395132064819336
    7. '   ' → logprob: -14.520132064819336
    8. 'output' → logprob: -14.895132064819336
    9. '               ' → logprob: -16.770132064819336
    10. '```' → logprob: -16.895132064819336

Token 1589: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.815280696377158e-05
    2. 'append' → logprob: -9.875078201293945
    3. '.extend' → logprob: -11.375078201293945
    4. '.' → logprob: -11.375078201293945
    5. '           ' → logprob: -12.875078201293945
    6. '.app' → logprob: -14.625078201293945
    7. '       ' → logprob: -15.750078201293945
    8. ' .' → logprob: -15.750078201293945
    9. 'outputs' → logprob: -15.750078201293945
    10. 'Append' → logprob: -16.625078201293945

Token 1590: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.615255839889869e-05
    2. 'merged' → logprob: -9.250096321105957
    3. 'mer' → logprob: -18.12509536743164
    4. '(f' → logprob: -18.62509536743164
    5. 'f' → logprob: -19.87509536743164
    6. '   ' → logprob: -20.00009536743164
    7. 'str' → logprob: -21.37509536743164
    8. '(
' → logprob: -21.75009536743164
    9. 'merge' → logprob: -21.75009536743164
    10. ' merged' → logprob: -21.87509536743164

Token 1591: 'merged' (ID: 66277)
  Prédit: 'merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -1.2664456789934775e-06
    2. ' merged' → logprob: -13.625000953674316
    3. 'str' → logprob: -18.625001907348633
    4. 'mer' → logprob: -19.125001907348633
    5. '"' → logprob: -19.250001907348633
    6. 'matched' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.375001907348633
    8. 'mapped' → logprob: -19.500001907348633
    9. 'm' → logprob: -19.750001907348633
    10. 'converted' → logprob: -21.000001907348633

Token 1592: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039891671389341354
    2. '<|end|>' → logprob: -3.4148917198181152
    3. '
' → logprob: -5.414891719818115
    4. ')
' → logprob: -7.164891719818115
    5. '       ' → logprob: -8.039891242980957
    6. '<|end|>' → logprob: -8.414891242980957
    7. '   ' → logprob: -9.039891242980957
    8. '```' → logprob: -9.164891242980957
    9. '")' → logprob: -10.039891242980957
    10. ')return' → logprob: -10.789891242980957

Token 1593: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1204558610916138
    2. 'for' → logprob: -1.1204558610916138
    3. '```' → logprob: -1.3704558610916138
    4. '   ' → logprob: -2.620455741882324
    5. '
' → logprob: -4.120455741882324
    6. 'print' → logprob: -5.745455741882324
    7. '``' → logprob: -7.495455741882324
    8. 'import' → logprob: -8.120455741882324
    9. ' for' → logprob: -8.370455741882324
    10. '    
' → logprob: -8.995455741882324

Token 1594: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14969614148139954
    2. 'if' → logprob: -2.649696111679077
    3. 'print' (adapté à ' print') → logprob: -2.899696111679077
    4. '```' → logprob: -4.524696350097656
    5. '   ' → logprob: -6.274696350097656
    6. ' for' → logprob: -8.149696350097656
    7. '
' → logprob: -8.649696350097656
    8. 'return' → logprob: -9.149696350097656
    9. '``' → logprob: -11.774696350097656
    10. '	for' → logprob: -12.649696350097656

Token 1595: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.0005394508480094373
    2. '("\' → logprob: -8.000539779663086
    3. ''\' → logprob: -8.500539779663086
    4. '"\' → logprob: -15.125539779663086
    5. '(*' → logprob: -15.500539779663086
    6. '(' → logprob: -16.750539779663086
    7. '('' → logprob: -18.000539779663086
    8. '(
' → logprob: -19.250539779663086
    9. ' '\' → logprob: -19.250539779663086
    10. '\' → logprob: -19.875539779663086

Token 1596: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -14.75
    3. 'join' → logprob: -19.5
    4. 'nj' → logprob: -20.875
    5. ' n' → logprob: -21.0
    6. 'ndef' → logprob: -21.75
    7. '``' → logprob: -22.625
    8. ''\' → logprob: -23.0
    9. '```' → logprob: -23.125
    10. 'newline' → logprob: -23.125

Token 1597: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.22083427011966705
    2. '''.' → logprob: -2.345834255218506
    3. ''\' → logprob: -3.220834255218506
    4. '.join' → logprob: -3.220834255218506
    5. 'join' → logprob: -3.970834255218506
    6. '\n' → logprob: -6.095834255218506
    7. '".' → logprob: -6.970834255218506
    8. '''' → logprob: -8.470834732055664
    9. '"\' → logprob: -9.595834732055664
    10. '```' → logprob: -9.595834732055664

Token 1598: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. ''.' → logprob: -14.125000953674316
    3. 'j' → logprob: -16.250001907348633
    4. ' join' → logprob: -17.000001907348633
    5. ').' → logprob: -17.625001907348633
    6. 'jo' → logprob: -17.875001907348633
    7. '''.' → logprob: -17.875001907348633
    8. 'print' → logprob: -18.375001907348633
    9. '.join' → logprob: -18.625001907348633
    10. ''' → logprob: -19.875001907348633

Token 1599: '(outputs' (ID: 172410)
  Prédit: '(outputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(outputs' → logprob: -0.00023691373644396663
    2. 'outputs' → logprob: -8.375236511230469
    3. '(output' → logprob: -12.000236511230469
    4. '(
' → logprob: -17.50023651123047
    5. ' outputs' → logprob: -17.87523651123047
    6. '.outputs' → logprob: -17.87523651123047
    7. '```' → logprob: -18.00023651123047
    8. ')' → logprob: -18.00023651123047
    9. 'output' → logprob: -18.25023651123047
    10. '(' → logprob: -18.50023651123047

Token 1600: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028501637279987335
    2. '())' → logprob: -5.87785005569458
    3. '()' → logprob: -10.127850532531738
    4. ')
' → logprob: -13.002850532531738
    5. '`)' → logprob: -14.252850532531738
    6. '))' → logprob: -14.377850532531738
    7. ')`' → logprob: -14.502850532531738
    8. '   ' → logprob: -14.502850532531738
    9. '})' → logprob: -15.377850532531738
    10. '')' → logprob: -15.877850532531738

Token 1601: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.839121826691553e-05
    2. '```' → logprob: -9.500078201293945
    3. ' if' → logprob: -12.875078201293945
    4. '
' → logprob: -15.375078201293945
    5. '<|end|>' → logprob: -15.375078201293945
    6. '#' → logprob: -15.375078201293945
    7. '    
' → logprob: -16.375078201293945
    8. '#if' → logprob: -17.250078201293945
    9. '  
' → logprob: -17.250078201293945
    10. '@if' → logprob: -17.250078201293945

Token 1602: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002226979471743107
    2. ' __' → logprob: -6.127226829528809
    3. 'name' → logprob: -10.127226829528809
    4. '```' → logprob: -14.627226829528809
    5. '___' → logprob: -14.627226829528809
    6. '_name' → logprob: -14.752226829528809
    7. ' ' → logprob: -15.377226829528809
    8. 'True' → logprob: -16.127227783203125
    9. '`' → logprob: -16.877227783203125
    10. 'Name' → logprob: -17.002227783203125

Token 1603: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5312030911445618
    2. '==' → logprob: -1.156203031539917
    3. ' ==' → logprob: -2.656203031539917
    4. '=="' → logprob: -4.031203269958496
    5. '=='' → logprob: -4.906203269958496
    6. 'name' → logprob: -7.156203269958496
    7. '[' → logprob: -8.156203269958496
    8. '```' → logprob: -8.281203269958496
    9. 'main' → logprob: -8.781203269958496
    10. '__.__' → logprob: -9.281203269958496

Token 1604: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.0722858102526516e-05
    2. '==' → logprob: -10.250041007995605
    3. '__.__' → logprob: -12.500041007995605
    4. '=="' → logprob: -14.500041007995605
    5. '____' → logprob: -15.375041007995605
    6. ' ==' → logprob: -15.375041007995605
    7. '__
' → logprob: -15.500041007995605
    8. 'name' → logprob: -16.37504005432129
    9. '=='' → logprob: -16.62504005432129
    10. '___' → logprob: -16.62504005432129

Token 1605: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06623604148626328
    2. '=="' → logprob: -3.3162360191345215
    3. '__' → logprob: -3.8162360191345215
    4. ' ==' → logprob: -5.4412360191345215
    5. '=='' → logprob: -6.5662360191345215
    6. '==
' → logprob: -10.44123649597168
    7. '=' → logprob: -11.19123649597168
    8. '===' → logprob: -13.44123649597168
    9. '_' → logprob: -13.94123649597168
    10. '==="' → logprob: -14.31623649597168

Token 1606: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01815205067396164
    2. ''' → logprob: -4.018152236938477
    3. '__' → logprob: -13.393152236938477
    4. ' "__' → logprob: -14.518152236938477
    5. '"name' → logprob: -17.518152236938477
    6. '"user' → logprob: -18.018152236938477
    7. ' '__' → logprob: -18.143152236938477
    8. 'main' → logprob: -18.643152236938477
    9. '"class' → logprob: -19.268152236938477
    10. '   ' → logprob: -19.518152236938477

Token 1607: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.062186259776353836
    2. '__' → logprob: -3.0621862411499023
    3. '"' → logprob: -4.562186241149902
    4. ''' → logprob: -5.812186241149902
    5. 'name' → logprob: -10.312186241149902
    6. '__":
' → logprob: -12.312186241149902
    7. 'built' → logprob: -12.312186241149902
    8. '_main' → logprob: -12.437186241149902
    9. '"name' → logprob: -12.562186241149902
    10. ' "__' → logprob: -12.687186241149902

Token 1608: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.22778649628162384
    2. '__' → logprob: -1.6027865409851074
    3. '__':
' → logprob: -6.102786540985107
    4. '__["' → logprob: -10.47778606414795
    5. '__:' → logprob: -10.97778606414795
    6. '__
' → logprob: -10.97778606414795
    7. '__.__' → logprob: -10.97778606414795
    8. '__
' → logprob: -10.97778606414795
    9. '==' → logprob: -11.60278606414795
    10. '__.' → logprob: -12.47778606414795

Token 1609: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.584239938296378e-06
    2. '	main' → logprob: -12.375007629394531
    3. ' main' → logprob: -13.375007629394531
    4. '   ' → logprob: -14.000007629394531
    5. '_main' → logprob: -14.625007629394531
    6. '(main' → logprob: -15.250007629394531
    7. '__' → logprob: -15.625007629394531
    8. '```' → logprob: -17.00000762939453
    9. 'mainwindow' → logprob: -18.25000762939453
    10. '.main' → logprob: -18.75000762939453

Token 1610: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -18.75
    4. '   ' → logprob: -19.25
    5. '(main' → logprob: -22.875
    6. 'import' → logprob: -23.0
    7. '_main' → logprob: -23.25
    8. '.main' → logprob: -23.5
    9. 'sys' → logprob: -25.5
    10. 'try' → logprob: -25.875

Token 1611: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1609
Tokens correctement prédits (1ère position, stricte): 620
Tokens correctement prédits (1ère position, avec adaptation): 684
Tokens correctement prédits (top 10): 1259
Précision stricte (1ère position): 38.53%
Précision adaptée (1ère position): 42.51%
Précision (top 10): 78.25%
================================================================================
