================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    total = 0
    for _ in range(n // 4):
        total += int(input())
    print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.109176754951477
    2. ' ' → logprob: -1.234176754951477
    3. 'o' → logprob: -2.2341766357421875
    4. '=' → logprob: -2.3591766357421875
    5. '+' → logprob: -2.8591766357421875
    6. '   ' → logprob: -3.2341766357421875
    7. '_' → logprob: -4.3591766357421875
    8. '.' → logprob: -4.3591766357421875
    9. 'e' → logprob: -4.8591766357421875
    10. '%' → logprob: -4.9841766357421875

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5945674777030945
    2. ' int' → logprob: -0.9695674777030945
    3. 'input' → logprob: -2.8445675373077393
    4. 'int' → logprob: -4.59456729888916
    5. ' ' → logprob: -8.21956729888916
    6. ' n' → logprob: -8.59456729888916
    7. ' s' → logprob: -10.59456729888916
    8. ' eval' → logprob: -10.84456729888916
    9. 'n' → logprob: -11.09456729888916
    10. '1' → logprob: -11.09456729888916

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002096134005114436
    2. '(input' → logprob: -6.252096176147461
    3. ' (' → logprob: -9.877096176147461
    4. '()' → logprob: -10.627096176147461
    5. '(
' → logprob: -11.002096176147461
    6. '```' → logprob: -11.002096176147461
    7. 'input' → logprob: -11.377096176147461
    8. ')' → logprob: -11.752096176147461
    9. ''' → logprob: -12.002096176147461
    10. '('' → logprob: -12.252096176147461

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7427012920379639
    2. ')' → logprob: -0.9927012920379639
    3. '()' → logprob: -2.367701292037964
    4. '())' → logprob: -2.992701292037964
    5. '))' → logprob: -5.492701530456543
    6. '('' → logprob: -6.742701530456543
    7. ' ' → logprob: -6.867701530456543
    8. '()))' → logprob: -6.992701530456543
    9. '```' → logprob: -7.367701530456543
    10. '(""))' → logprob: -8.367701530456543

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9612175226211548
    2. ' if' → logprob: -1.7112175226211548
    3. '<|end|>' → logprob: -1.9612175226211548
    4. ' ' → logprob: -2.2112174034118652
    5. ')' → logprob: -2.2112174034118652
    6. '    
' → logprob: -4.211217403411865
    7. '```' → logprob: -4.461217403411865
    8. ':' → logprob: -4.711217403411865
    9. '    ' → logprob: -4.836217403411865
    10. ' 
' → logprob: -4.836217403411865

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0052155256271362
    2. '   ' → logprob: -1.1302155256271362
    3. '<|end|>' → logprob: -2.130215644836426
    4. ' ' → logprob: -2.505215644836426
    5. ')' → logprob: -3.130215644836426
    6. 'if' (adapté à ' if') → logprob: -3.755215644836426
    7. '  ' → logprob: -4.255215644836426
    8. '    ' → logprob: -4.380215644836426
    9. ':' → logprob: -5.130215644836426
    10. ',' → logprob: -6.630215644836426

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007577050942927599
    2. ' ' → logprob: -5.007576942443848
    3. ' not' → logprob: -7.757576942443848
    4. 'n' → logprob: -7.757576942443848
    5. ' ' → logprob: -12.632576942443848
    6. '  ' → logprob: -14.132576942443848
    7. 'not' → logprob: -14.132576942443848
    8. ' (' → logprob: -15.132576942443848
    9. '<|end|>' → logprob: -15.257576942443848
    10. '	n' → logprob: -15.507576942443848

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.241923987865448
    2. ' ==' → logprob: -2.3669240474700928
    3. ' <' → logprob: -3.1169240474700928
    4. ' <=' → logprob: -3.3669240474700928
    5. '>' → logprob: -3.6169240474700928
    6. ' ' → logprob: -5.116923809051514
    7. '==' → logprob: -5.366923809051514
    8. ' >=' → logprob: -6.241923809051514
    9. '<' → logprob: -7.241923809051514
    10. ')' → logprob: -7.616923809051514

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2014191895723343
    2. '0' → logprob: -1.7014192342758179
    3. ' ' → logprob: -13.82641887664795
    4. '1' → logprob: -13.95141887664795
    5. '  ' → logprob: -14.20141887664795
    6. ')' → logprob: -15.20141887664795
    7. '100' → logprob: -15.26391887664795
    8. ' -' → logprob: -15.32641887664795
    9. '20' → logprob: -15.38891887664795
    10. '<|end|>' → logprob: -15.63891887664795

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002513712039217353
    2. ' ' → logprob: -6.002513885498047
    3. '-' → logprob: -10.377513885498047
    4. ' -' → logprob: -13.002513885498047
    5. '1' → logprob: -13.252513885498047
    6. '   ' → logprob: -14.127513885498047
    7. '42' → logprob: -14.752513885498047
    8. '  ' → logprob: -14.877513885498047
    9. '```' → logprob: -14.877513885498047
    10. '4' → logprob: -15.252513885498047

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.047134305234067e-05
    2. ':
' → logprob: -11.250030517578125
    3. '   ' → logprob: -12.125030517578125
    4. ' :' → logprob: -12.250030517578125
    5. '       ' → logprob: -13.250030517578125
    6. ':return' → logprob: -13.250030517578125
    7. '):' → logprob: -13.500030517578125
    8. ':\' → logprob: -14.000030517578125
    9. '    ' → logprob: -15.000030517578125
    10. '():' → logprob: -15.500030517578125

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002336758654564619
    2. '   ' → logprob: -6.8773369789123535
    3. ' break' → logprob: -6.8773369789123535
    4. '\n' → logprob: -9.127336502075195
    5. ':' → logprob: -10.502336502075195
    6. '    ' → logprob: -10.502336502075195
    7. '	break' → logprob: -10.752336502075195
    8. '\' → logprob: -11.252336502075195
    9. '      ' → logprob: -11.377336502075195
    10. ' ' → logprob: -11.627336502075195

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.011935565620660782
    2. '       ' → logprob: -4.761935710906982
    3. 'break' (adapté à ' break') → logprob: -5.886935710906982
    4. '	break' → logprob: -8.511935234069824
    5. '   ' → logprob: -8.886935234069824
    6. '\n' → logprob: -9.386935234069824
    7. '_break' → logprob: -10.011935234069824
    8. ' \' → logprob: -11.136935234069824
    9. '    ' → logprob: -11.511935234069824
    10. '```' → logprob: -11.761935234069824

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2311087846755981
    2. '\n' → logprob: -1.2311087846755981
    3. '
' → logprob: -2.2311086654663086
    4. '    
' → logprob: -2.4811086654663086
    5. '<|end|>' → logprob: -2.4811086654663086
    6. ':' → logprob: -2.8561086654663086
    7. '```' → logprob: -3.6061086654663086
    8. '\' → logprob: -3.8561086654663086
    9. ')' → logprob: -5.106108665466309
    10. '#' → logprob: -5.356108665466309

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4705030024051666
    2. '<|end|>' → logprob: -1.2205029726028442
    3. '\n' → logprob: -3.970503091812134
    4. '
' → logprob: -4.470502853393555
    5. '    
' → logprob: -4.470502853393555
    6. '#' → logprob: -4.595502853393555
    7. '```' → logprob: -4.720502853393555
    8. ')' → logprob: -5.220502853393555
    9. '\' → logprob: -5.345502853393555
    10. '<|end|>' → logprob: -5.970502853393555

Token 20: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5563520193099976
    2. ' ' → logprob: -1.6813520193099976
    3. '<|end|>' → logprob: -2.806352138519287
    4. ')' → logprob: -3.306352138519287
    5. '    ' → logprob: -3.556352138519287
    6. 'n' → logprob: -3.931352138519287
    7. '\n' → logprob: -4.056352138519287
    8. '\' → logprob: -4.181352138519287
    9. '#' → logprob: -4.431352138519287
    10. ' 
' → logprob: -4.556352138519287

Token 21: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03655652701854706
    2. '+' → logprob: -4.161556720733643
    3. ' +' → logprob: -4.661556720733643
    4. '_' → logprob: -5.786556720733643
    5. ' ' → logprob: -6.036556720733643
    6. ' =' → logprob: -6.161556720733643
    7. '+=' → logprob: -6.161556720733643
    8. '=' → logprob: -7.536556720733643
    9. '    ' → logprob: -8.536556243896484
    10. '_space' → logprob: -8.911556243896484

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42304837703704834
    2. ' ' → logprob: -1.5480483770370483
    3. ' n' → logprob: -2.173048496246338
    4. ' sum' → logprob: -4.173048496246338
    5. 'n' → logprob: -6.048048496246338
    6. 'sum' → logprob: -7.423048496246338
    7. '1' → logprob: -10.29804801940918
    8. ' total' → logprob: -10.67304801940918
    9. '   ' → logprob: -12.04804801940918
    10. '    ' → logprob: -12.17304801940918

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030779728665947914
    2. 'n' → logprob: -3.9057798385620117
    3. 'sum' → logprob: -4.780779838562012
    4. '1' → logprob: -7.405779838562012
    5. ' ' → logprob: -7.405779838562012
    6. ' n' → logprob: -7.905779838562012
    7. ' sum' → logprob: -9.280779838562012
    8. 'total' → logprob: -10.155779838562012
    9. '+' → logprob: -11.030779838562012
    10. '(n' → logprob: -11.655779838562012

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02602042816579342
    2. '<|end|>' → logprob: -4.276020526885986
    3. ' ' → logprob: -5.401020526885986
    4. '    ' → logprob: -5.776020526885986
    5. '    
' → logprob: -6.901020526885986
    6. '  ' → logprob: -7.526020526885986
    7. '\n' → logprob: -7.526020526885986
    8. '\' → logprob: -7.776020526885986
    9. ')' → logprob: -7.776020526885986
    10. ' for' → logprob: -8.276020050048828

Token 26: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2073579728603363
    2. ' for' → logprob: -1.9573580026626587
    3. '   ' → logprob: -3.082357883453369
    4. '	for' → logprob: -9.832358360290527
    5. '    ' → logprob: -10.207358360290527
    6. ' ' → logprob: -10.332358360290527
    7. '```' → logprob: -10.332358360290527
    8. '  ' → logprob: -11.582358360290527
    9. 'n' → logprob: -12.332358360290527
    10. '\t' → logprob: -12.582358360290527

Token 27: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03712114691734314
    2. ' ' → logprob: -3.662121057510376
    3. ' _' → logprob: -4.787121295928955
    4. '_' → logprob: -6.537121295928955
    5. 'i' → logprob: -7.037121295928955
    6. ' range' → logprob: -9.537120819091797
    7. ' in' → logprob: -12.287120819091797
    8. ' n' → logprob: -12.412120819091797
    9. ' ‌' → logprob: -12.537120819091797
    10. ' space' → logprob: -13.037120819091797

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007572157774120569
    2. 'in' → logprob: -7.375757217407227
    3. ' ' → logprob: -9.000757217407227
    4. ' i' → logprob: -12.625757217407227
    5. 'n' → logprob: -14.250757217407227
    6. 'range' → logprob: -14.625757217407227
    7. ' n' → logprob: -14.750757217407227
    8. '_' → logprob: -15.000757217407227
    9. '  ' → logprob: -15.000757217407227
    10. ',' → logprob: -15.125757217407227

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5231629014015198
    2. ' range' → logprob: -0.8981629014015198
    3. ' ' → logprob: -10.773162841796875
    4. '	range' → logprob: -12.398162841796875
    5. 'rang' → logprob: -12.523162841796875
    6. 'r' → logprob: -12.898162841796875
    7. '  ' → logprob: -13.273162841796875
    8. 'ran' → logprob: -14.023162841796875
    9. '_' → logprob: -14.023162841796875
    10. 'n' → logprob: -14.523162841796875

Token 30: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5765101313591003
    2. '(n' → logprob: -0.8265101313591003
    3. ' (' → logprob: -7.576509952545166
    4. ' n' → logprob: -9.951510429382324
    5. '()' → logprob: -12.701510429382324
    6. ')' → logprob: -13.326510429382324
    7. 'n' → logprob: -13.576510429382324
    8. '(range' → logprob: -14.076510429382324
    9. '(
' → logprob: -14.076510429382324
    10. '(s' → logprob: -14.201510429382324

Token 31: ' //' (ID: 602)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015698568895459175
    2. ' ):' → logprob: -7.126569747924805
    3. ')' → logprob: -7.876569747924805
    4. ':' → logprob: -8.626569747924805
    5. '+' → logprob: -9.126569747924805
    6. '):
' → logprob: -9.751569747924805
    7. '   ' → logprob: -11.126569747924805
    8. ',' → logprob: -11.751569747924805
    9. ' )' → logprob: -12.876569747924805
    10. ' ' → logprob: -13.001569747924805

Token 32: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18468976020812988
    2. '3' → logprob: -2.68468976020813
    3. ' ' → logprob: -2.68468976020813
    4. '10' → logprob: -4.059689521789551
    5. '5' → logprob: -4.559689521789551
    6. '100' → logprob: -6.434689521789551
    7. '6' → logprob: -7.434689521789551
    8. '4' → logprob: -7.434689521789551
    9. '7' → logprob: -7.934689521789551
    10. '20' → logprob: -8.55968952178955

Token 33: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8464447855949402
    2. '3' → logprob: -0.8464447855949402
    3. '5' → logprob: -2.846444845199585
    4. '10' → logprob: -3.096444845199585
    5. '7' → logprob: -3.971444845199585
    6. '6' → logprob: -5.471444606781006
    7. '4' → logprob: -5.596444606781006
    8. '100' → logprob: -5.846444606781006
    9. '50' → logprob: -6.471444606781006
    10. '400' → logprob: -6.971444606781006

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021295346319675446
    2. '+' → logprob: -4.396295547485352
    3. ' ):' → logprob: -5.021295547485352
    4. ')' → logprob: -7.271295547485352
    5. ' +' → logprob: -7.646295547485352
    6. '):
' → logprob: -7.896295547485352
    7. '*' → logprob: -8.646295547485352
    8. ':' → logprob: -8.646295547485352
    9. '   ' → logprob: -9.021295547485352
    10. ' )' → logprob: -10.396295547485352

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7703835964202881
    2. '    ' → logprob: -1.270383596420288
    3. ' ' → logprob: -2.270383596420288
    4. '   ' → logprob: -2.395383596420288
    5. ' total' → logprob: -3.770383596420288
    6. 'total' → logprob: -4.645383834838867
    7. '4' → logprob: -4.895383834838867
    8. ' 
' → logprob: -5.020383834838867
    9. '     
' → logprob: -5.520383834838867
    10. '        
' → logprob: -6.645383834838867

Token 36: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9538792967796326
    2. 'total' (adapté à ' total') → logprob: -1.2038793563842773
    3. ' total' → logprob: -1.2038793563842773
    4. '    ' → logprob: -5.203879356384277
    5. '       ' → logprob: -5.828879356384277
    6. ' ' → logprob: -6.203879356384277
    7. '4' → logprob: -6.453879356384277
    8. '  ' → logprob: -7.953879356384277
    9. '```' → logprob: -8.391379356384277
    10. ' ```' → logprob: -8.828879356384277

Token 37: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0023578100372105837
    2. '+=' → logprob: -6.1273579597473145
    3. '+' → logprob: -8.877357482910156
    4. ' +' → logprob: -11.002357482910156
    5. '    ' → logprob: -12.002357482910156
    6. ' ' → logprob: -12.752357482910156
    7. ' -=' → logprob: -13.377357482910156
    8. '   ' → logprob: -13.627357482910156
    9. '<|end|>' → logprob: -13.627357482910156
    10. '+='' → logprob: -14.252357482910156

Token 38: ' int' (ID: 677)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7860025763511658
    2. '1' → logprob: -2.4110026359558105
    3. '10' → logprob: -2.5360026359558105
    4. '5' → logprob: -2.6610026359558105
    5. ' ' → logprob: -3.0360026359558105
    6. '9' → logprob: -3.1610026359558105
    7. '3' → logprob: -3.5360026359558105
    8. '25' → logprob: -3.7860026359558105
    9. '36' → logprob: -3.9110026359558105
    10. '100' → logprob: -4.1610026359558105

Token 39: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.049333605915308
    2. '(' → logprob: -3.0493335723876953
    3. '('' → logprob: -7.549333572387695
    4. 'input' → logprob: -8.799333572387695
    5. '("' → logprob: -10.049333572387695
    6. '()' → logprob: -11.049333572387695
    7. ' (' → logprob: -12.799333572387695
    8. '(
' → logprob: -13.299333572387695
    9. ' ' → logprob: -13.674333572387695
    10. ' input' → logprob: -13.674333572387695

Token 40: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16038700938224792
    2. '()' → logprob: -1.9103870391845703
    3. ')' → logprob: -10.66038703918457
    4. '(' → logprob: -10.78538703918457
    5. '()))' → logprob: -10.78538703918457
    6. '())
' → logprob: -10.91038703918457
    7. ' ())' → logprob: -11.03538703918457
    8. '();)' → logprob: -11.41038703918457
    9. '()
' → logprob: -11.53538703918457
    10. '().' → logprob: -11.53538703918457

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2910943627357483
    2. '<|end|>' → logprob: -2.5410943031311035
    3. '\n' → logprob: -2.9160943031311035
    4. '+' → logprob: -3.6660943031311035
    5. '    
' → logprob: -3.6660943031311035
    6. ' 
' → logprob: -4.1660943031311035
    7. ' ' → logprob: -4.1660943031311035
    8. '*' → logprob: -4.5410943031311035
    9. '  
' → logprob: -5.0410943031311035
    10. '
' → logprob: -5.1660943031311035

Token 42: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4143204987049103
    2. '\n' → logprob: -1.914320468902588
    3. '<|end|>' → logprob: -2.914320468902588
    4. ' ' → logprob: -3.414320468902588
    5. '
' → logprob: -4.039320468902588
    6. '    
' → logprob: -4.164320468902588
    7. '  
' → logprob: -4.164320468902588
    8. 'print' (adapté à ' print') → logprob: -4.164320468902588
    9. ' 
' → logprob: -4.289320468902588
    10. '  ' → logprob: -5.164320468902588

Token 43: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.25249481201171875
    2. '(' → logprob: -1.5024948120117188
    3. '('' → logprob: -8.127494812011719
    4. '()' → logprob: -8.377494812011719
    5. 'total' → logprob: -11.127494812011719
    6. ' (' → logprob: -11.877494812011719
    7. '(sum' → logprob: -12.127494812011719
    8. '("' → logprob: -12.252494812011719
    9. '(f' → logprob: -13.002494812011719
    10. '((' → logprob: -13.377494812011719

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. ' )' → logprob: -11.500028610229492
    3. '+' → logprob: -11.875028610229492
    4. ')
' → logprob: -12.250028610229492
    5. '*' → logprob: -12.750028610229492
    6. '))' → logprob: -13.625028610229492
    7. '   ' → logprob: -14.375028610229492
    8. '`)' → logprob: -15.500028610229492
    9. ')`' → logprob: -15.625028610229492
    10. '(' → logprob: -15.625028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 45.24%
Précision (top 10): 83.33%
================================================================================
