================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class FibonacciModN:
    def __init__(self, n: int):
        self.n = n
        self.memo = { -1: 1, 0: 1 }
    
    def compute(self, i: int) -> int:
        if i in self.memo:
            return self.memo[i]
        self.memo[i] = (self.compute(i - 1) + self.compute(i - 2)) % self.n
        return self.memo[i]

class Node:
    def __init__(self, index: int, label: int):
        self.index = index
        self.label = label
    def __repr__(self):
        return f"Node(idx={self.index}, label={self.label})"

class DisjointSetUnion:
    def __init__(self, size: int):
        self.parent = list(range(size))
        self.rank = [0] * size
        self.count = size
    
    def find(self, x: int) -> int:
        while self.parent[x] != x:
            self.parent[x] = self.parent[self.parent[x]]
            x = self.parent[x]
        return x
    
    def union(self, x: int, y: int) -> None:
        rx = self.find(x)
        ry = self.find(y)
        if rx != ry:
            if self.rank[rx] < self.rank[ry]:
                self.parent[rx] = ry
            elif self.rank[ry] < self.rank[rx]:
                self.parent[ry] = rx
            else:
                self.parent[ry] = rx
                self.rank[rx] += 1
            self.count -= 1

class FibonacciSetsSolver:
    N = 1001
    
    def __init__(self, V: int, d: int):
        self.V = V
        self.d = d
        self.fibo_mod = FibonacciModN(self.N)
        self.nodes = [Node(i, self.fibo_mod.compute(i)) for i in range(1, V+1)]
        self.dsu = DisjointSetUnion(V)
    
    def solve(self) -> int:
        # Sort nodes by label to optimize connectivity check
        self.nodes.sort(key=lambda node: node.label)
        
        # Since labels mod N are in range [0,N), and difference must be < d,
        # we only need to check neighborhood in sorted nodes by labels.
        
        for i in range(self.V):
            j = i + 1
            while j < self.V and self.nodes[j].label - self.nodes[i].label < self.d:
                self.dsu.union(self.nodes[i].index - 1, self.nodes[j].index - 1)
                j += 1
        
        return self.dsu.count

def main():
    import sys
    inputs = sys.stdin.read().strip().split('\n')
    for line in inputs:
        if not line.strip():
            continue
        V, d = map(int, line.split())
        solver = FibonacciSetsSolver(V, d)
        print(solver.solve())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Fibonacci' (ID: 139341)
  → Token d'amorce (pas de prédiction)

Token 2: 'Mod' (ID: 4721)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5046318173408508
    2. '{' → logprob: -1.004631757736206
    3. '```' → logprob: -3.754631757736206
    4. '[' → logprob: -6.254631996154785
    5. ' {' → logprob: -6.379631996154785
    6. ':' → logprob: -6.379631996154785
    7. ' (' → logprob: -8.129631996154785
    8. ' ' → logprob: -8.129631996154785
    9. '(
' → logprob: -8.754631996154785
    10. '`' → logprob: -8.879631996154785

Token 4: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5595930218696594
    2. '{' → logprob: -1.0595929622650146
    3. ':' → logprob: -2.5595929622650146
    4. ' {' → logprob: -6.184593200683594
    5. '```' → logprob: -6.684593200683594
    6. '[' → logprob: -7.559593200683594
    7. '(:' → logprob: -8.059593200683594
    8. '.' → logprob: -8.809593200683594
    9. '({' → logprob: -10.059593200683594
    10. ' (' → logprob: -10.184593200683594

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.225274458527565
    2. '(' → logprob: -1.8502744436264038
    3. '```' → logprob: -3.2252745628356934
    4. ':
' → logprob: -6.475274562835693
    5. '   ' → logprob: -6.850274562835693
    6. '(
' → logprob: -6.975274562835693
    7. '``' → logprob: -7.975274562835693
    8. '():' → logprob: -8.600274085998535
    9. ''' → logprob: -9.600274085998535
    10. '`' → logprob: -9.850274085998535

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8319269418716431
    2. '```' → logprob: -1.081926941871643
    3. ' def' → logprob: -1.831926941871643
    4. 'def' (adapté à ' def') → logprob: -3.5819268226623535
    5. '(' → logprob: -4.3319268226623535
    6. ':' → logprob: -4.7069268226623535
    7. '\' → logprob: -4.9569268226623535
    8. '``' → logprob: -5.8319268226623535
    9. '`' → logprob: -6.9569268226623535
    10. ' ' → logprob: -6.9569268226623535

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4553326666355133
    2. ' __' → logprob: -1.455332636833191
    3. '__' → logprob: -2.5803327560424805
    4. ' calculate' → logprob: -3.7053327560424805
    5. ' ' → logprob: -4.2053327560424805
    6. '_' → logprob: -5.4553327560424805
    7. 'calculate' → logprob: -5.4553327560424805
    8. '  ' → logprob: -6.4553327560424805
    9. ' ```' → logprob: -7.4553327560424805
    10. '`' → logprob: -7.4553327560424805

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.696889623621246e-06
    2. ' init' → logprob: -13.25000286102295
    3. '_init' → logprob: -14.00000286102295
    4. 'ini' → logprob: -17.250001907348633
    5. '	init' → logprob: -18.875001907348633
    6. 'int' → logprob: -19.125001907348633
    7. '_' → logprob: -19.250001907348633
    8. '```' → logprob: -19.875001907348633
    9. 'i' → logprob: -20.125001907348633
    10. 'in' → logprob: -20.250001907348633

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.28948742151260376
    2. '__' → logprob: -1.664487361907959
    3. '(' → logprob: -3.039487361907959
    4. '(self' → logprob: -4.789487361907959
    5. '__(
' → logprob: -5.914487361907959
    6. '```' → logprob: -6.914487361907959
    7. '__((' → logprob: -7.164487361907959
    8. '_' → logprob: -7.414487361907959
    9. '__(*' → logprob: -8.789487838745117
    10. '__('' → logprob: -8.789487838745117

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004082078114151955
    2. ' self' → logprob: -5.504082202911377
    3. '(self' → logprob: -13.254081726074219
    4. ')' → logprob: -14.504081726074219
    5. 'f' → logprob: -14.504081726074219
    6. 'F' → logprob: -15.129081726074219
    7. ' ' → logprob: -15.629081726074219
    8. '   ' → logprob: -17.00408172607422
    9. '0' → logprob: -17.00408172607422
    10. ',self' → logprob: -17.12908172607422

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20317226648330688
    2. 'self' → logprob: -2.328172206878662
    3. ')' → logprob: -3.078172206878662
    4. '(self' → logprob: -3.578172206878662
    5. ' self' → logprob: -5.203172206878662
    6. '<|end|>' → logprob: -5.953172206878662
    7. ' ,' → logprob: -6.703172206878662
    8. ',self' → logprob: -7.453172206878662
    9. ')(' → logprob: -7.828172206878662
    10. '<|end|>' → logprob: -8.45317268371582

Token 12: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8494648933410645
    2. 'self' → logprob: -0.9744648933410645
    3. 'n' → logprob: -2.2244648933410645
    4. ' n' → logprob: -2.4744648933410645
    5. ' modulus' → logprob: -6.5994648933410645
    6. ' number' → logprob: -7.5994648933410645
    7. 'number' → logprob: -7.9744648933410645
    8. '   ' → logprob: -9.349464416503906
    9. ' mod' → logprob: -9.724464416503906
    10. ' N' → logprob: -9.849464416503906

Token 13: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055135808885097504
    2. ':' → logprob: -3.555135726928711
    3. ',' → logprob: -3.930135726928711
    4. ')' → logprob: -5.680135726928711
    5. '=' → logprob: -6.430135726928711
    6. '_' → logprob: -9.055135726928711
    7. ' ):' → logprob: -9.930135726928711
    8. ':int' → logprob: -10.180135726928711
    9. '):
' → logprob: -10.305135726928711
    10. ' ,' → logprob: -10.930135726928711

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34856289625167847
    2. 'int' → logprob: -1.2235629558563232
    3. ' ' → logprob: -9.973563194274902
    4. ':int' → logprob: -10.723563194274902
    5. ')' → logprob: -11.098563194274902
    6. '=int' → logprob: -11.848563194274902
    7. ' )' → logprob: -11.973563194274902
    8. '   ' → logprob: -11.973563194274902
    9. '  ' → logprob: -12.598563194274902
    10. '    ' → logprob: -13.348563194274902

Token 15: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7090950012207031
    2. '):' → logprob: -0.7090950012207031
    3. ')' → logprob: -4.209095001220703
    4. '):
' → logprob: -8.209095001220703
    5. ':' → logprob: -8.334095001220703
    6. ',n' → logprob: -8.834095001220703
    7. ' ,' → logprob: -9.209095001220703
    8. '   ' → logprob: -9.209095001220703
    9. '```' → logprob: -10.834095001220703
    10. ',int' → logprob: -11.584095001220703

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003939125686883926
    2. 'self' → logprob: -6.753939151763916
    3. '   ' → logprob: -7.003939151763916
    4. '```' → logprob: -7.753939151763916
    5. ':' → logprob: -8.128938674926758
    6. '(n' → logprob: -8.878938674926758
    7. '    ' → logprob: -8.878938674926758
    8. '        
' → logprob: -9.128938674926758
    9. '\' → logprob: -9.253938674926758
    10. '<|end|>' → logprob: -9.378938674926758

Token 17: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7261706590652466
    2. 'self' (adapté à ' self') → logprob: -0.7261706590652466
    3. ' self' → logprob: -3.476170539855957
    4. '```' → logprob: -7.101170539855957
    5. '   ' → logprob: -7.851170539855957
    6. ' ' → logprob: -8.851170539855957
    7. '_self' → logprob: -10.601170539855957
    8. '           ' → logprob: -10.851170539855957
    9. '\' → logprob: -10.851170539855957
    10. '	self' → logprob: -10.851170539855957

Token 18: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.18073640763759613
    2. '.' → logprob: -2.3057363033294678
    3. '.mod' → logprob: -2.8057363033294678
    4. '.f' → logprob: -5.805736541748047
    5. ' .' → logprob: -6.930736541748047
    6. '.m' → logprob: -7.805736541748047
    7. '.value' → logprob: -7.930736541748047
    8. '._' → logprob: -9.305736541748047
    9. '.num' → logprob: -9.305736541748047
    10. '.number' → logprob: -10.180736541748047

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6155129075050354
    2. '=' → logprob: -0.8655129075050354
    3. ' %=' → logprob: -4.240512847900391
    4. '%' → logprob: -4.990512847900391
    5. ')' → logprob: -4.990512847900391
    6. ' ' → logprob: -5.365512847900391
    7. ' %' → logprob: -6.115512847900391
    8. '_mod' → logprob: -6.365512847900391
    9. '_' → logprob: -7.615512847900391
    10. '   ' → logprob: -7.990512847900391

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759410262107849
    2. 'n' → logprob: -0.8259410262107849
    3. ' ' → logprob: -14.70094108581543
    4. ' ' → logprob: -15.20094108581543
    5. '0' → logprob: -15.20094108581543
    6. '1' → logprob: -16.32594108581543
    7. '	n' → logprob: -16.32594108581543
    8. '_n' → logprob: -16.82594108581543
    9. ')n' → logprob: -16.82594108581543
    10. '100' → logprob: -17.07594108581543

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4470134973526001
    2. '\n' → logprob: -2.1970133781433105
    3. '   ' → logprob: -2.6970133781433105
    4. '<|end|>' → logprob: -2.6970133781433105
    5. '\' → logprob: -3.0720133781433105
    6. '```' → logprob: -3.8220133781433105
    7. '    
' → logprob: -4.3220133781433105
    8. ' 
' → logprob: -5.3220133781433105
    9. '  
' → logprob: -5.3220133781433105
    10. ' ' → logprob: -5.6970133781433105

Token 22: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3618069887161255
    2. '
' → logprob: -2.111806869506836
    3. '\n' → logprob: -2.361806869506836
    4. '\' → logprob: -3.611806869506836
    5. '```' → logprob: -3.611806869506836
    6. '    
' → logprob: -4.111806869506836
    7. '       ' → logprob: -5.236806869506836
    8. '<|end|>' → logprob: -5.986806869506836
    9. '  
' → logprob: -6.361806869506836
    10. '``' → logprob: -6.611806869506836

Token 23: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6269127726554871
    2. '\n' → logprob: -1.8769128322601318
    3. '       ' → logprob: -1.8769128322601318
    4. '   ' → logprob: -2.501912832260132
    5. '<|end|>' → logprob: -3.626912832260132
    6. '\' → logprob: -4.376912593841553
    7. '    
' → logprob: -4.751912593841553
    8. '```' → logprob: -4.876912593841553
    9. '        
' → logprob: -5.376912593841553
    10. ':' → logprob: -5.376912593841553

Token 24: '.memo' (ID: 161018)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16899193823337555
    2. '.f' → logprob: -2.668992042541504
    3. '.mod' → logprob: -2.793992042541504
    4. '.n' → logprob: -4.543992042541504
    5. '._' → logprob: -5.543992042541504
    6. ' .' → logprob: -6.043992042541504
    7. '.value' → logprob: -6.418992042541504
    8. '.m' → logprob: -6.418992042541504
    9. '.F' → logprob: -6.668992042541504
    10. '.a' → logprob: -7.668992042541504

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16562704741954803
    2. '=' → logprob: -1.9156270027160645
    3. '[' → logprob: -5.2906270027160645
    4. '={}' → logprob: -8.415627479553223
    5. '.setdefault' → logprob: -10.165627479553223
    6. '_' → logprob: -10.290627479553223
    7. ' ' → logprob: -11.665627479553223
    8. '[:]' → logprob: -12.040627479553223
    9. '.clear' → logprob: -12.790627479553223
    10. ']' → logprob: -12.915627479553223

Token 26: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1459656059741974
    2. ' {}' → logprob: -2.645965576171875
    3. '{' → logprob: -2.895965576171875
    4. ' {' → logprob: -4.645965576171875
    5. '[' → logprob: -11.520965576171875
    6. 'dict' → logprob: -11.645965576171875
    7. ' defaultdict' → logprob: -12.895965576171875
    8. ' ' → logprob: -13.020965576171875
    9. ' dict' → logprob: -13.395965576171875
    10. ' [' → logprob: -13.770965576171875

Token 27: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015347852604463696
    2. '(' → logprob: -8.875153541564941
    3. ' ' → logprob: -11.875153541564941
    4. '1' → logprob: -12.000153541564941
    5. '{' → logprob: -15.375153541564941
    6. ' (' → logprob: -15.875153541564941
    7. '       ' → logprob: -17.250152587890625
    8. '   ' → logprob: -17.375152587890625
    9. '[' → logprob: -18.500152587890625
    10. '}' → logprob: -19.250152587890625

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033879990223795176
    2. ' ' → logprob: -8.875338554382324
    3. '2' → logprob: -9.375338554382324
    4. '-' → logprob: -10.000338554382324
    5. '0' → logprob: -10.125338554382324
    6. '6' → logprob: -11.375338554382324
    7. '5' → logprob: -13.125338554382324
    8. '3' → logprob: -13.250338554382324
    9. '7' → logprob: -13.562838554382324
    10. '10' → logprob: -13.625338554382324

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007925973040983081
    2. '0' → logprob: -7.625792503356934
    3. ' :' → logprob: -8.500792503356934
    4. '1' → logprob: -9.500792503356934
    5. ':-' → logprob: -12.250792503356934
    6. '2' → logprob: -12.375792503356934
    7. '-' → logprob: -12.500792503356934
    8. '7' → logprob: -12.500792503356934
    9. '6' → logprob: -13.250792503356934
    10. '}' → logprob: -13.875792503356934

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13111399114131927
    2. ' ' → logprob: -2.1311140060424805
    3. '1' → logprob: -5.5061140060424805
    4. '-' → logprob: -10.00611400604248
    5. '[' → logprob: -11.19361400604248
    6. ' -' → logprob: -11.50611400604248
    7. ' (' → logprob: -11.88111400604248
    8. '(' → logprob: -12.00611400604248
    9. ' [' → logprob: -12.00611400604248
    10. 'None' → logprob: -12.50611400604248

Token 31: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004550577141344547
    2. '1' → logprob: -5.629550457000732
    3. ' ' → logprob: -7.129550457000732
    4. '-' → logprob: -9.50455093383789
    5. '(' → logprob: -10.50455093383789
    6. '[' → logprob: -11.50455093383789
    7. '{' → logprob: -11.87955093383789
    8. '{}' → logprob: -12.19205093383789
    9. 'None' → logprob: -12.56705093383789
    10. '2' → logprob: -12.56705093383789

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5372911095619202
    2. '}' → logprob: -0.9122911095619202
    3. ' }' → logprob: -4.287291049957275
    4. ' ,' → logprob: -8.787291526794434
    5. ',
' → logprob: -9.037291526794434
    6. '   ' → logprob: -10.787291526794434
    7. '       ' → logprob: -11.162291526794434
    8. ')' → logprob: -13.037291526794434
    9. '},' → logprob: -13.287291526794434
    10. '}
' → logprob: -13.412291526794434

Token 33: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34878823161125183
    2. '0' → logprob: -1.2237882614135742
    3. '    ' → logprob: -9.348788261413574
    4. '  ' → logprob: -9.598788261413574
    5. '   ' → logprob: -9.598788261413574
    6. '1' → logprob: -10.723788261413574
    7. '       ' → logprob: -10.973788261413574
    8. '        ' → logprob: -11.098788261413574
    9. '     ' → logprob: -11.473788261413574
    10. '         ' → logprob: -11.786288261413574

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07016783952713013
    2. ' ' → logprob: -2.6951677799224854
    3. '-' → logprob: -8.570167541503906
    4. ' -' → logprob: -10.445167541503906
    5. '1' → logprob: -11.695167541503906
    6. '  ' → logprob: -13.070167541503906
    7. '   ' → logprob: -14.320167541503906
    8. '}' → logprob: -14.570167541503906
    9. '    ' → logprob: -15.882667541503906
    10. ' }' → logprob: -16.257667541503906

Token 35: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008981237770058215
    2. '}' → logprob: -7.125898361206055
    3. ',' → logprob: -10.000898361206055
    4. ' }' → logprob: -10.375898361206055
    5. ' :' → logprob: -11.375898361206055
    6. '}:' → logprob: -12.500898361206055
    7. '1' → logprob: -14.500898361206055
    8. ' }:' → logprob: -15.000898361206055
    9. '0' → logprob: -15.750898361206055
    10. '```' → logprob: -15.750898361206055

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14721781015396118
    2. ' ' → logprob: -2.0222177505493164
    3. '1' → logprob: -5.397217750549316
    4. '2' → logprob: -14.147217750549316
    5. '  ' → logprob: -14.709717750549316
    6. '   ' → logprob: -15.334717750549316
    7. '[' → logprob: -15.834717750549316
    8. '-' → logprob: -16.022218704223633
    9. '3' → logprob: -16.272218704223633
    10. '```' → logprob: -16.522218704223633

Token 37: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002516327193006873
    2. '1' → logprob: -6.002516269683838
    3. ' ' → logprob: -10.252516746520996
    4. '2' → logprob: -13.002516746520996
    5. '-' → logprob: -13.627516746520996
    6. '```' → logprob: -15.440016746520996
    7. '3' → logprob: -15.752516746520996
    8. '[' → logprob: -16.31501579284668
    9. '۰' → logprob: -16.31501579284668
    10. '5' → logprob: -16.50251579284668

Token 38: ' }
' (ID: 606)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03823196887969971
    2. ' }' → logprob: -3.41323184967041
    3. ',' → logprob: -5.41323184967041
    4. '   ' → logprob: -9.66323184967041
    5. '       ' → logprob: -9.91323184967041
    6. ')' → logprob: -13.28823184967041
    7. ',
' → logprob: -14.16323184967041
    8. '	' → logprob: -14.41323184967041
    9. '}
' → logprob: -14.66323184967041
    10. '```' → logprob: -14.66323184967041

Token 39: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3998109698295593
    2. '
' → logprob: -1.399811029434204
    3. '<|end|>' → logprob: -3.274811029434204
    4. '```' → logprob: -4.149810791015625
    5. '    
' → logprob: -4.649810791015625
    6. ' ' → logprob: -5.024810791015625
    7. '\' → logprob: -5.649810791015625
    8. ' 
' → logprob: -6.399810791015625
    9. '\n' → logprob: -6.774810791015625
    10. '       ' → logprob: -6.774810791015625

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1308223307132721
    2. 'def' → logprob: -2.3808224201202393
    3. ' def' → logprob: -3.5058224201202393
    4. '<|end|>' → logprob: -9.38082218170166
    5. '	def' → logprob: -10.50582218170166
    6. ' ' → logprob: -11.88082218170166
    7. '    
' → logprob: -12.38082218170166
    8. '       ' → logprob: -13.00582218170166
    9. '<|end|>' → logprob: -13.50582218170166
    10. '
' → logprob: -14.25582218170166

Token 41: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3285968005657196
    2. '   ' → logprob: -1.453596830368042
    3. 'def' (adapté à ' def') → logprob: -3.078596830368042
    4. '```' → logprob: -9.203597068786621
    5. ' ```' → logprob: -9.453597068786621
    6. '    ' → logprob: -9.703597068786621
    7. '	def' → logprob: -10.703597068786621
    8. ' ' → logprob: -10.953597068786621
    9. '    
' → logprob: -11.578597068786621
    10. '       ' → logprob: -12.453597068786621

Token 42: ' compute' (ID: 23864)
  Prédit: ' fibonacci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fibonacci' → logprob: -0.22317905724048615
    2. ' get' → logprob: -2.5981791019439697
    3. ' fib' → logprob: -2.7231791019439697
    4. ' calculate' → logprob: -3.9731791019439697
    5. ' _' → logprob: -4.473178863525391
    6. ' compute' → logprob: -4.723178863525391
    7. ' ' → logprob: -5.223178863525391
    8. ' f' → logprob: -5.598178863525391
    9. '_' → logprob: -5.848178863525391
    10. ' space' → logprob: -6.098178863525391

Token 43: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07844185829162598
    2. '_f' → logprob: -3.078441858291626
    3. '(self' → logprob: -4.203441619873047
    4. '_' → logprob: -4.453441619873047
    5. 'F' → logprob: -7.328441619873047
    6. '```' → logprob: -7.828441619873047
    7. '_value' → logprob: -7.953441619873047
    8. '_factor' → logprob: -8.328441619873047
    9. '_next' → logprob: -8.703441619873047
    10. '_F' → logprob: -8.828441619873047

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4611295461654663
    2. ')' → logprob: -1.2111295461654663
    3. '_f' → logprob: -3.086129665374756
    4. 'F' → logprob: -5.086129665374756
    5. '_' → logprob: -5.211129665374756
    6. ',f' → logprob: -5.836129665374756
    7. 'f' → logprob: -5.961129665374756
    8. '(' → logprob: -6.461129665374756
    9. ' ,' → logprob: -6.711129665374756
    10. ' )' → logprob: -6.836129665374756

Token 45: ' i' (ID: 575)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4666628837585449
    2. 'k' → logprob: -1.216662883758545
    3. ' i' → logprob: -2.966662883758545
    4. 'i' → logprob: -4.091662883758545
    5. ' n' → logprob: -5.966662883758545
    6. 'n' → logprob: -6.466662883758545
    7. ' index' → logprob: -6.591662883758545
    8. 'index' → logprob: -7.466662883758545
    9. ' ' → logprob: -7.591662883758545
    10. ' m' → logprob: -7.716662883758545

Token 46: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.052546508610248566
    2. ' ):' → logprob: -3.427546501159668
    3. ')' → logprob: -4.427546501159668
    4. ':' → logprob: -5.177546501159668
    5. ' )' → logprob: -7.302546501159668
    6. '+' → logprob: -9.177546501159668
    7. '):
' → logprob: -9.302546501159668
    8. ' ' → logprob: -9.302546501159668
    9. '-' → logprob: -10.302546501159668
    10. ',' → logprob: -10.552546501159668

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05569036677479744
    2. 'int' → logprob: -2.930690288543701
    3. ' ' → logprob: -8.30569076538086
    4. ' i' → logprob: -8.43069076538086
    5. ' )' → logprob: -9.30569076538086
    6. ')' → logprob: -9.30569076538086
    7. '   ' → logprob: -9.55569076538086
    8. '    ' → logprob: -10.55569076538086
    9. '  ' → logprob: -11.43069076538086
    10. '[int' → logprob: -11.68069076538086

Token 48: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03830471634864807
    2. ')' → logprob: -3.2883048057556152
    3. ' ):' → logprob: -8.788304328918457
    4. '):
' → logprob: -10.163304328918457
    5. '   ' → logprob: -10.288304328918457
    6. ':' → logprob: -10.788304328918457
    7. '       ' → logprob: -12.163304328918457
    8. ' )' → logprob: -12.288304328918457
    9. ' ' → logprob: -13.413304328918457
    10. ',' → logprob: -13.663304328918457

Token 49: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014191943046171218
    2. '):' → logprob: -9.500142097473145
    3. '():' → logprob: -10.875142097473145
    4. ' :' → logprob: -11.125142097473145
    5. ':**' → logprob: -11.500142097473145
    6. ':return' → logprob: -11.500142097473145
    7. '       ' → logprob: -12.000142097473145
    8. '>:' → logprob: -13.750142097473145
    9. '   ' → logprob: -13.750142097473145
    10. ':
' → logprob: -13.875142097473145

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029970664530992508
    2. 'int' → logprob: -3.529970645904541
    3. ' ' → logprob: -8.5299711227417
    4. '(int' → logprob: -11.9049711227417
    5. '[int' → logprob: -12.5299711227417
    6. '   ' → logprob: -13.1549711227417
    7. '	int' → logprob: -13.4049711227417
    8. ' ' → logprob: -13.6549711227417
    9. ':int' → logprob: -14.0299711227417
    10. '  ' → logprob: -14.1549711227417

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.045823566731997e-05
    2. '):' → logprob: -12.125020027160645
    3. ' :' → logprob: -12.250020027160645
    4. ':
' → logprob: -12.750020027160645
    5. '():' → logprob: -13.000020027160645
    6. ':return' → logprob: -13.125020027160645
    7. ':**' → logprob: -13.375020027160645
    8. '       ' → logprob: -14.125020027160645
    9. ',' → logprob: -15.750020027160645
    10. '   ' → logprob: -15.750020027160645

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029590425547212362
    2. '        ' → logprob: -6.752959251403809
    3. '    ' → logprob: -7.377959251403809
    4. ':' → logprob: -7.877959251403809
    5. '   ' → logprob: -8.627959251403809
    6. ' if' → logprob: -9.252959251403809
    7. 'if' → logprob: -9.377959251403809
    8. ' ' → logprob: -9.502959251403809
    9. '      ' → logprob: -9.502959251403809
    10. '```' → logprob: -9.627959251403809

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40564510226249695
    2. '       ' → logprob: -1.1556451320648193
    3. 'if' (adapté à ' if') → logprob: -4.03064489364624
    4. '        ' → logprob: -7.40564489364624
    5. '    ' → logprob: -9.280645370483398
    6. '   ' → logprob: -9.905645370483398
    7. '```' → logprob: -10.530645370483398
    8. '      ' → logprob: -10.780645370483398
    9. ' ' → logprob: -11.155645370483398
    10. 'If' → logprob: -12.280645370483398

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013980379328131676
    2. 'i' → logprob: -4.388980388641357
    3. ' ' → logprob: -6.638980388641357
    4. '    ' → logprob: -9.3889799118042
    5. ' (' → logprob: -10.6389799118042
    6. ' ' → logprob: -11.0139799118042
    7. '  ' → logprob: -11.7639799118042
    8. '   ' → logprob: -11.7639799118042
    9. ' not' → logprob: -11.8889799118042
    10. ' self' → logprob: -11.8889799118042

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21445122361183167
    2. ' <' → logprob: -2.464451313018799
    3. ' not' → logprob: -3.089451313018799
    4. '<' → logprob: -3.464451313018799
    5. ' <=' → logprob: -4.214451313018799
    6. ' ' → logprob: -4.464451313018799
    7. '<=' → logprob: -6.339451313018799
    8. 'in' → logprob: -6.464451313018799
    9. ' ==' → logprob: -7.214451313018799
    10. '==' → logprob: -8.08945083618164

Token 56: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.016060292720794678
    2. 'self' → logprob: -4.1410603523254395
    3. '<|end|>' → logprob: -11.266059875488281
    4. '	self' → logprob: -12.516059875488281
    5. ' ' → logprob: -12.516059875488281
    6. ' ' → logprob: -13.141059875488281
    7. '_self' → logprob: -13.516059875488281
    8. '(self' → logprob: -14.516059875488281
    9. '<|end|>' → logprob: -14.641059875488281
    10. '[self' → logprob: -14.891059875488281

Token 57: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0024420046247541904
    2. '.' → logprob: -6.127441883087158
    3. '.mem' → logprob: -8.877442359924316
    4. '.n' → logprob: -9.752442359924316
    5. '.memory' → logprob: -10.627442359924316
    6. ' .' → logprob: -10.877442359924316
    7. '.m' → logprob: -12.002442359924316
    8. '.mn' → logprob: -12.752442359924316
    9. '.micro' → logprob: -14.252442359924316
    10. '.mu' → logprob: -14.252442359924316

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002956591488327831
    2. ' :' → logprob: -9.000295639038086
    3. ':
' → logprob: -9.375295639038086
    4. ':return' → logprob: -9.625295639038086
    5. '       ' → logprob: -11.375295639038086
    6. '           ' → logprob: -12.000295639038086
    7. '):' → logprob: -13.125295639038086
    8. ':**' → logprob: -14.875295639038086
    9. '        ' → logprob: -15.625295639038086
    10. '.' → logprob: -15.625295639038086

Token 59: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3518698513507843
    2. '           ' → logprob: -1.226869821548462
    3. ':return' → logprob: -6.351870059967041
    4. ':
' → logprob: -6.601870059967041
    5. ' return' → logprob: -8.976869583129883
    6. '<|end|>' → logprob: -9.226869583129883
    7. 'return' → logprob: -11.101869583129883
    8. '<|end|>' → logprob: -11.226869583129883
    9. ' :' → logprob: -11.476869583129883
    10. '):' → logprob: -11.601869583129883

Token 60: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7053978443145752
    2. '           ' → logprob: -1.2053978443145752
    3. 'return' (adapté à ' return') → logprob: -1.5803978443145752
    4. ':return' → logprob: -8.330397605895996
    5. '       ' → logprob: -8.580397605895996
    6. '   ' → logprob: -9.830397605895996
    7. '               ' → logprob: -10.080397605895996
    8. ' ' → logprob: -11.080397605895996
    9. '{return' → logprob: -11.205397605895996
    10. '```' → logprob: -11.455397605895996

Token 61: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868737816810608
    2. ' self' → logprob: -1.136873722076416
    3. '       ' → logprob: -14.011874198913574
    4. '	self' → logprob: -14.636874198913574
    5. '   ' → logprob: -14.886874198913574
    6. '           ' → logprob: -15.011874198913574
    7. '(self' → logprob: -15.636874198913574
    8. ' ' → logprob: -15.886874198913574
    9. '```' → logprob: -16.136873245239258
    10. '[self' → logprob: -16.386873245239258

Token 62: '.memo' (ID: 161018)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35186466574668884
    2. '.memo' → logprob: -1.2268646955490112
    3. '.m' → logprob: -6.351864814758301
    4. '.n' → logprob: -7.101864814758301
    5. 'n' → logprob: -7.726864814758301
    6. ' .' → logprob: -8.8518648147583
    7. '.mem' → logprob: -9.2268648147583
    8. '.memory' → logprob: -10.4768648147583
    9. 'memo' → logprob: -10.6018648147583
    10. '.i' → logprob: -10.9768648147583

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031796174589544535
    2. '[' → logprob: -5.753179550170898
    3. '[
' → logprob: -14.128179550170898
    4. '[I' → logprob: -14.503179550170898
    5. '```' → logprob: -15.753179550170898
    6. 'i' → logprob: -16.0031795501709
    7. '\[' → logprob: -16.5031795501709
    8. '[in' → logprob: -16.8781795501709
    9. ' [' → logprob: -16.8781795501709
    10. '

' → logprob: -17.5031795501709

Token 64: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031143762171268463
    2. '}' → logprob: -5.878114223480225
    3. ')' → logprob: -8.378114700317383
    4. ']
' → logprob: -9.753114700317383
    5. ' ]' → logprob: -11.253114700317383
    6. ' }' → logprob: -12.753114700317383
    7. '}
' → logprob: -13.378114700317383
    8. '])' → logprob: -13.878114700317383
    9. ' ' → logprob: -14.628114700317383
    10. '       ' → logprob: -14.878114700317383

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22752636671066284
    2. '        
' → logprob: -1.7275264263153076
    3. '
' → logprob: -4.8525261878967285
    4. '    
' → logprob: -4.9775261878967285
    5. '\n' → logprob: -5.4775261878967285
    6. ' 
' → logprob: -6.3525261878967285
    7. '       
' → logprob: -7.3525261878967285
    8. '   
' → logprob: -7.3525261878967285
    9. '     
' → logprob: -7.3525261878967285
    10. '  
' → logprob: -7.4775261878967285

Token 66: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5224784016609192
    2. 'res' → logprob: -1.7724783420562744
    3. 'result' → logprob: -1.8974783420562744
    4. 'val' → logprob: -3.5224783420562744
    5. 'value' → logprob: -3.8974783420562744
    6. ' res' → logprob: -4.7724785804748535
    7. 'prev' → logprob: -4.8974785804748535
    8. ' val' → logprob: -5.1474785804748535
    9. 'x' → logprob: -5.7724785804748535
    10. ' result' → logprob: -5.8974785804748535

Token 67: '.memo' (ID: 161018)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6958648562431335
    2. '.memo' → logprob: -0.6958648562431335
    3. '.m' → logprob: -6.570864677429199
    4. '.mem' → logprob: -7.320864677429199
    5. '.n' → logprob: -8.1958646774292
    6. '.memory' → logprob: -9.3208646774292
    7. ' .' → logprob: -9.6958646774292
    8. '.compute' → logprob: -9.8208646774292
    9. '.mu' → logprob: -11.3208646774292
    10. '.micro' → logprob: -11.4458646774292

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3485000729560852
    2. '[' → logprob: -1.2235000133514404
    3. '[I' → logprob: -10.72350025177002
    4. '[
' → logprob: -11.34850025177002
    5. 'i' → logprob: -12.84850025177002
    6. ' [' → logprob: -13.22350025177002
    7. '[int' → logprob: -13.59850025177002
    8. '[...]' → logprob: -13.84850025177002
    9. '[ip' → logprob: -13.84850025177002
    10. ']' → logprob: -13.97350025177002

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015174767468124628
    2. '=' → logprob: -7.626517295837402
    3. '-' → logprob: -7.751517295837402
    4. ' ]' → logprob: -8.126517295837402
    5. ' =' → logprob: -8.376517295837402
    6. ']=' → logprob: -9.876517295837402
    7. ' -' → logprob: -11.751517295837402
    8. ' ' → logprob: -11.751517295837402
    9. ')' → logprob: -13.001517295837402
    10. ''s' → logprob: -14.251517295837402

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28115519881248474
    2. ' =' → logprob: -1.4061552286148071
    3. ']' → logprob: -13.906155586242676
    4. '=}' → logprob: -13.906155586242676
    5. '=
' → logprob: -14.656155586242676
    6. '=int' → logprob: -14.781155586242676
    7. ')' → logprob: -14.781155586242676
    8. ' =
' → logprob: -14.906155586242676
    9. ']=' → logprob: -15.281155586242676
    10. '-' → logprob: -15.281155586242676

Token 71: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013532141456380486
    2. ' (' → logprob: -6.6263532638549805
    3. '(' → logprob: -11.87635326385498
    4. '((' → logprob: -12.37635326385498
    5. '(f' → logprob: -12.75135326385498
    6. '(mod' → logprob: -13.00135326385498
    7. '(
' → logprob: -13.37635326385498
    8. '(max' → logprob: -13.62635326385498
    9. '(s' → logprob: -13.87635326385498
    10. '   ' → logprob: -13.87635326385498

Token 72: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003631550120189786
    2. ' self' → logprob: -5.628631591796875
    3. '(self' → logprob: -10.628631591796875
    4. '           ' → logprob: -12.628631591796875
    5. '       ' → logprob: -13.003631591796875
    6. '   ' → logprob: -14.628631591796875
    7. '
' → logprob: -14.753631591796875
    8. '	self' → logprob: -14.878631591796875
    9. '[self' → logprob: -15.878631591796875
    10. '+self' → logprob: -16.378631591796875

Token 73: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.0589289516210556
    2. '.' → logprob: -2.933928966522217
    3. '-' → logprob: -6.308928966522217
    4. ' .' → logprob: -6.558928966522217
    5. '.n' → logprob: -7.558928966522217
    6. ').' → logprob: -9.558928489685059
    7. '.memo' → logprob: -9.683928489685059
    8. ' -' → logprob: -10.433928489685059
    9. 'compute' → logprob: -10.683928489685059
    10. '   ' → logprob: -11.308928489685059

Token 74: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. '((' → logprob: -16.8750057220459
    4. ' (' → logprob: -17.0000057220459
    5. '(
' → logprob: -20.1250057220459
    6. ' ' → logprob: -20.2500057220459
    7. '(a' → logprob: -20.3750057220459
    8. '(n' → logprob: -20.3750057220459
    9. ')' → logprob: -20.8750057220459
    10. '   ' → logprob: -21.5000057220459

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760751962661743
    2. ' -' → logprob: -0.8260751962661743
    3. ' ' → logprob: -8.951075553894043
    4. '1' → logprob: -13.576075553894043
    5. '  ' → logprob: -13.826075553894043
    6. '	' → logprob: -13.951075553894043
    7. ')' → logprob: -14.076075553894043
    8. ' ' → logprob: -14.826075553894043
    9. '   ' → logprob: -14.826075553894043
    10. '```' → logprob: -14.826075553894043

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014855816261842847
    2. '2' → logprob: -6.626485347747803
    3. ' ' → logprob: -8.751485824584961
    4. ')' → logprob: -14.501485824584961
    5. '   ' → logprob: -14.876485824584961
    6. '
' → logprob: -15.626485824584961
    7. '```' → logprob: -16.12648582458496
    8. '3' → logprob: -16.87648582458496
    9. '	' → logprob: -17.12648582458496
    10. '  ' → logprob: -17.62648582458496

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011063382029533386
    2. '2' → logprob: -4.511063575744629
    3. ' ' → logprob: -11.261063575744629
    4. ')' → logprob: -14.011063575744629
    5. '
' → logprob: -14.761063575744629
    6. '

' → logprob: -14.886063575744629
    7. '  ' → logprob: -15.261063575744629
    8. '```' → logprob: -15.386063575744629
    9. '   ' → logprob: -15.698563575744629
    10. '`)' → logprob: -17.198562622070312

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6971608400344849
    2. ' +' → logprob: -0.6971608400344849
    3. ' )' → logprob: -5.947160720825195
    4. '+' → logprob: -6.947160720825195
    5. ' ' → logprob: -8.197160720825195
    6. ')+' → logprob: -8.947160720825195
    7. ']' → logprob: -11.197160720825195
    8. '}' → logprob: -12.447160720825195
    9. ' +
' → logprob: -13.197160720825195
    10. ' plus' → logprob: -13.822160720825195

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890598475933075
    2. '+' → logprob: -2.5789060592651367
    3. ' ' → logprob: -11.078906059265137
    4. ' +
' → logprob: -14.453906059265137
    5. ' ' → logprob: -16.82890510559082
    6. '+
' → logprob: -17.07890510559082
    7. '*' → logprob: -17.45390510559082
    8. ' plus' → logprob: -17.57890510559082
    9. '%' → logprob: -17.82890510559082
    10. ' +
' → logprob: -18.20390510559082

Token 80: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.029829973354935646
    2. 'self' → logprob: -3.529829978942871
    3. ' ' → logprob: -10.529829978942871
    4. ' ' → logprob: -10.529829978942871
    5. '	self' → logprob: -11.029829978942871
    6. '(self' → logprob: -12.904829978942871
    7. '    ' → logprob: -14.029829978942871
    8. '        ' → logprob: -14.029829978942871
    9. '            ' → logprob: -14.154829978942871
    10. '1' → logprob: -14.279829978942871

Token 81: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.04306576028466225
    2. '.' → logprob: -3.1680657863616943
    3. ' .' → logprob: -10.793066024780273
    4. ').' → logprob: -11.168066024780273
    5. 'compute' → logprob: -11.918066024780273
    6. ' ' → logprob: -12.543066024780273
    7. '	' → logprob: -13.293066024780273
    8. '.com' → logprob: -13.293066024780273
    9. ')' → logprob: -13.293066024780273
    10. '.compile' → logprob: -13.418066024780273

Token 82: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1602376252412796
    2. '(' → logprob: -1.9102376699447632
    3. ' (' → logprob: -12.410237312316895
    4. '(ii' → logprob: -12.660237312316895
    5. '(
' → logprob: -12.910237312316895
    6. ')' → logprob: -13.785237312316895
    7. '(I' → logprob: -14.285237312316895
    8. '(n' → logprob: -14.410237312316895
    9. '((' → logprob: -14.910237312316895
    10. '(s' → logprob: -15.910237312316895

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012276994064450264
    2. '-' → logprob: -4.512277126312256
    3. ' ' → logprob: -6.762277126312256
    4. ')' → logprob: -10.137276649475098
    5. '	' → logprob: -11.512276649475098
    6. '   ' → logprob: -11.762276649475098
    7. '  ' → logprob: -12.262276649475098
    8. ' )' → logprob: -13.012276649475098
    9. '    ' → logprob: -13.637276649475098
    10. 'i' → logprob: -13.637276649475098

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0700250193476677
    2. ' ' → logprob: -2.6950249671936035
    3. ')' → logprob: -9.695025444030762
    4. '<|end|>' → logprob: -11.882525444030762
    5. '```' → logprob: -12.570025444030762
    6. '1' → logprob: -12.820025444030762
    7. '-' → logprob: -12.820025444030762
    8. ' )' → logprob: -13.195025444030762
    9. '  ' → logprob: -13.820025444030762
    10. '<|end|>' → logprob: -14.007525444030762

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001712901284918189
    2. ' ' → logprob: -6.376712799072266
    3. ')' → logprob: -12.251712799072266
    4. '1' → logprob: -13.251712799072266
    5. '```' → logprob: -14.064212799072266
    6. '  ' → logprob: -14.251712799072266
    7. '۲' → logprob: -14.939212799072266
    8. ' )' → logprob: -15.439212799072266
    9. '

' → logprob: -15.501712799072266
    10. '   ' → logprob: -15.626712799072266

Token 86: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001503313542343676
    2. ' )' → logprob: -6.5015034675598145
    3. ')%' → logprob: -14.876502990722656
    4. ' ' → logprob: -15.876502990722656
    5. '       ' → logprob: -16.251502990722656
    6. ')
' → logprob: -16.751502990722656
    7. '    ' → logprob: -16.876502990722656
    8. '   ' → logprob: -17.001502990722656
    9. '))' → logprob: -17.126502990722656
    10. '        ' → logprob: -17.251502990722656

Token 87: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.017537396401166916
    2. ' ' → logprob: -4.142537593841553
    3. '%' → logprob: -6.517537593841553
    4. ')' → logprob: -10.892537117004395
    5. ' ' → logprob: -13.267537117004395
    6. '%n' → logprob: -13.892537117004395
    7. '  ' → logprob: -14.392537117004395
    8. ' )' → logprob: -14.517537117004395
    9. '%i' → logprob: -14.767537117004395
    10. '`' → logprob: -15.142537117004395

Token 88: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.014169743284583092
    2. 'self' → logprob: -4.264169692993164
    3. '       ' → logprob: -12.514169692993164
    4. ' ' → logprob: -13.764169692993164
    5. '(self' → logprob: -14.889169692993164
    6. ' ' → logprob: -15.264169692993164
    7. 'n' → logprob: -15.514169692993164
    8. '	self' → logprob: -15.764169692993164
    9. '   ' → logprob: -16.014169692993164
    10. ' n' → logprob: -16.264169692993164

Token 89: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0021904718596488237
    2. '.' → logprob: -6.127190589904785
    3. 'n' → logprob: -12.877190589904785
    4. ' .' → logprob: -13.502190589904785
    5. '.nt' → logprob: -15.002190589904785
    6. '`.' → logprob: -15.752190589904785
    7. '.nvim' → logprob: -15.752190589904785
    8. '​.' → logprob: -16.12718963623047
    9. ').' → logprob: -16.25218963623047
    10. '.
' → logprob: -16.50218963623047

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14734292030334473
    2. '       ' → logprob: -2.1473429203033447
    3. '\n' → logprob: -4.397342681884766
    4. '   ' → logprob: -5.647342681884766
    5. '\' → logprob: -6.897342681884766
    6. ' 
' → logprob: -7.522342681884766
    7. '<|end|>' → logprob: -7.772342681884766
    8. '        
' → logprob: -7.897342681884766
    9. '    
' → logprob: -8.022342681884766
    10. 'return' → logprob: -8.147342681884766

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26935842633247375
    2. '
' → logprob: -1.5193583965301514
    3. '\n' → logprob: -5.1443586349487305
    4. '   ' → logprob: -5.3943586349487305
    5. '        
' → logprob: -6.3943586349487305
    6. '\' → logprob: -6.8943586349487305
    7. '	' → logprob: -7.0193586349487305
    8. ' 
' → logprob: -7.3943586349487305
    9. '  
' → logprob: -7.6443586349487305
    10. '    
' → logprob: -7.7693586349487305

Token 92: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03761562705039978
    2. '
' → logprob: -3.5376155376434326
    3. '   ' → logprob: -5.537615776062012
    4. 'return' (adapté à ' return') → logprob: -6.662615776062012
    5. ' 
' → logprob: -7.412615776062012
    6. '        
' → logprob: -7.912615776062012
    7. ' return' → logprob: -7.912615776062012
    8. '\n' → logprob: -8.162615776062012
    9. '  
' → logprob: -8.662615776062012
    10. ' ' → logprob: -8.912615776062012

Token 93: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858816787600517
    2. ' self' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.423587799072266
    4. 'Self' → logprob: -15.548587799072266
    5. '	self' → logprob: -15.548587799072266
    6. '(self' → logprob: -16.298587799072266
    7. '_self' → logprob: -16.923587799072266
    8. ' ' → logprob: -17.298587799072266
    9. '[self' → logprob: -17.423587799072266
    10. 's' → logprob: -17.798587799072266

Token 94: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.05645149201154709
    2. '.' → logprob: -2.9314515590667725
    3. '.mem' → logprob: -7.181451320648193
    4. '.m' → logprob: -7.431451320648193
    5. '.memory' → logprob: -9.181451797485352
    6. ' .' → logprob: -9.931451797485352
    7. '.mime' → logprob: -11.181451797485352
    8. '.mesh' → logprob: -12.181451797485352
    9. '.mn' → logprob: -12.431451797485352
    10. '.м' → logprob: -12.681451797485352

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015028368216007948
    2. '[' → logprob: -6.501502990722656
    3. '[I' → logprob: -15.376502990722656
    4. ' [' → logprob: -15.751502990722656
    5. '[
' → logprob: -17.001502990722656
    6. '[n' → logprob: -17.001502990722656
    7. ' ' → logprob: -17.376502990722656
    8. 'i' → logprob: -18.251502990722656
    9. '[m' → logprob: -18.626502990722656
    10. '[self' → logprob: -18.751502990722656

Token 96: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5572459697723389
    2. '<|end|>' → logprob: -1.3072459697723389
    3. '.' → logprob: -2.682245969772339
    4. ' ' → logprob: -3.432245969772339
    5. '```' → logprob: -4.057246208190918
    6. '#' → logprob: -4.307246208190918
    7. 'n' → logprob: -5.307246208190918
    8. '\n' → logprob: -5.307246208190918
    9. '[' → logprob: -5.557246208190918
    10. '<|end|>' → logprob: -6.307246208190918

Token 98: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09411267936229706
    2. ' Factor' → logprob: -2.9691126346588135
    3. ' Fibonacci' → logprob: -4.219112873077393
    4. ' Prime' → logprob: -5.344112873077393
    5. ' Lucas' → logprob: -5.594112873077393
    6. ' ' → logprob: -5.594112873077393
    7. 'Factor' → logprob: -6.344112873077393
    8. ' Matrix' → logprob: -6.594112873077393
    9. ' Pascal' → logprob: -6.719112873077393
    10. 'Prime' → logprob: -6.844112873077393

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009666071855463088
    2. ' :' → logprob: -7.250966548919678
    3. '(' → logprob: -8.625967025756836
    4. '<|end|>' → logprob: -10.000967025756836
    5. ':
' → logprob: -11.875967025756836
    6. '():' → logprob: -12.125967025756836
    7. '):' → logprob: -12.500967025756836
    8. ':**' → logprob: -12.625967025756836
    9. '(object' → logprob: -12.875967025756836
    10. '(":' → logprob: -13.125967025756836

Token 100: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03376510739326477
    2. ' :' → logprob: -4.5337653160095215
    3. '   ' → logprob: -5.4087653160095215
    4. '(object' → logprob: -5.4087653160095215
    5. ' (' → logprob: -5.9087653160095215
    6. ':
' → logprob: -5.9087653160095215
    7. '(' → logprob: -5.9087653160095215
    8. '<|end|>' → logprob: -6.1587653160095215
    9. '):' → logprob: -7.0337653160095215
    10. ' :
' → logprob: -8.033764839172363

Token 101: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0048967888578772545
    2. ' class' → logprob: -5.754896640777588
    3. 'def' (adapté à ' def') → logprob: -6.629896640777588
    4. 'class' → logprob: -8.129897117614746
    5. '   ' → logprob: -9.629897117614746
    6. ' None' → logprob: -10.879897117614746
    7. ' ' → logprob: -11.754897117614746
    8. ':' → logprob: -13.379897117614746
    9. ' __' → logprob: -13.754897117614746
    10. ' de' → logprob: -13.754897117614746

Token 102: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0015533094992861152
    2. ' ' → logprob: -6.876553535461426
    3. '__' → logprob: -8.376553535461426
    4. ' init' → logprob: -9.376553535461426
    5. ' None' → logprob: -9.376553535461426
    6. ' _' → logprob: -9.876553535461426
    7. ' ___' → logprob: -11.501553535461426
    8. ' ' → logprob: -11.626553535461426
    9. '_init' → logprob: -11.626553535461426
    10. 'n' → logprob: -12.126553535461426

Token 103: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.004204359371215105
    2. 'nit' → logprob: -5.504204273223877
    3. ' init' → logprob: -9.504204750061035
    4. 'it' → logprob: -10.879204750061035
    5. 'ini' → logprob: -11.879204750061035
    6. ' nit' → logprob: -12.504204750061035
    7. 'int' → logprob: -12.629204750061035
    8. '   ' → logprob: -13.004204750061035
    9. '	init' → logprob: -13.129204750061035
    10. ' ' → logprob: -13.129204750061035

Token 104: '__(' (ID: 8241)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6656687259674072
    2. '__(' → logprob: -1.1656687259674072
    3. '(' → logprob: -1.9156687259674072
    4. '(self' → logprob: -4.040668487548828
    5. '__' → logprob: -5.040668487548828
    6. ' ' → logprob: -7.040668487548828
    7. '__(
' → logprob: -7.540668487548828
    8. '_' → logprob: -7.665668487548828
    9. '<|end|>' → logprob: -7.665668487548828
    10. '__((' → logprob: -8.665668487548828

Token 105: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018640907481312752
    2. ' self' → logprob: -4.018640995025635
    3. ')' → logprob: -7.643640995025635
    4. ' )' → logprob: -12.893640518188477
    5. '(self' → logprob: -13.018640518188477
    6. '0' → logprob: -13.268640518188477
    7. 'value' → logprob: -13.518640518188477
    8. 'data' → logprob: -14.518640518188477
    9. ',' → logprob: -14.643640518188477
    10. ' ' → logprob: -14.893640518188477

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22671324014663696
    2. ' ,' → logprob: -1.6017131805419922
    3. ' )' → logprob: -7.101713180541992
    4. ')' → logprob: -8.726713180541992
    5. ' ' → logprob: -9.226713180541992
    6. ' ):' → logprob: -9.976713180541992
    7. 'self' → logprob: -10.351713180541992
    8. ',value' → logprob: -10.726713180541992
    9. ' self' → logprob: -10.976713180541992
    10. '):' → logprob: -11.101713180541992

Token 107: ' index' (ID: 3472)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7305440306663513
    2. ' val' → logprob: -1.730544090270996
    3. ' data' → logprob: -1.980544090270996
    4. 'value' → logprob: -2.105544090270996
    5. 'data' → logprob: -3.855544090270996
    6. 'val' → logprob: -4.105544090270996
    7. ')' → logprob: -4.480544090270996
    8. ' )' → logprob: -4.480544090270996
    9. ' id' → logprob: -5.480544090270996
    10. ' self' → logprob: -5.980544090270996

Token 108: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19575856626033783
    2. '):' → logprob: -1.945758581161499
    3. ':' → logprob: -3.820758581161499
    4. ' ):' → logprob: -5.19575834274292
    5. ' ,' → logprob: -5.69575834274292
    6. '=' → logprob: -5.82075834274292
    7. ')' → logprob: -7.82075834274292
    8. ' ' → logprob: -8.570758819580078
    9. ':int' → logprob: -9.070758819580078
    10. ' )' → logprob: -9.070758819580078

Token 109: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6341834664344788
    2. 'int' → logprob: -0.7591834664344788
    3. ')' → logprob: -6.884183406829834
    4. '0' → logprob: -8.759183883666992
    5. 'None' → logprob: -9.509183883666992
    6. ':int' → logprob: -9.509183883666992
    7. ' None' → logprob: -9.634183883666992
    8. ' )' → logprob: -10.259183883666992
    9. '):
' → logprob: -10.384183883666992
    10. '[int' → logprob: -10.384183883666992

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053269561380147934
    2. '):' → logprob: -3.053269624710083
    3. ' ,' → logprob: -5.553269386291504
    4. ')' → logprob: -7.803269386291504
    5. ' ):' → logprob: -8.178269386291504
    6. '   ' → logprob: -9.928269386291504
    7. ' ' → logprob: -10.928269386291504
    8. '       ' → logprob: -11.303269386291504
    9. ' )' → logprob: -11.428269386291504
    10. '):
' → logprob: -12.178269386291504

Token 111: ' label' (ID: 4208)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.1736554205417633
    2. ' val' → logprob: -3.5486555099487305
    3. 'value' → logprob: -3.6736555099487305
    4. ' prev' → logprob: -3.9236555099487305
    5. ' next' → logprob: -4.0486555099487305
    6. ' data' → logprob: -4.0486555099487305
    7. ' parent' → logprob: -4.4236555099487305
    8. ' left' → logprob: -4.7986555099487305
    9. ' mod' → logprob: -5.4236555099487305
    10. ' ' → logprob: -5.9236555099487305

Token 112: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012011662125587463
    2. '):' → logprob: -4.512011528015137
    3. ')' → logprob: -7.512011528015137
    4. ',' → logprob: -8.637011528015137
    5. ' :' → logprob: -9.637011528015137
    6. ' ):' → logprob: -9.637011528015137
    7. '=None' → logprob: -9.762011528015137
    8. '=' → logprob: -10.512011528015137
    9. ':str' → logprob: -11.887011528015137
    10. ' )' → logprob: -11.887011528015137

Token 113: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9127065539360046
    2. 'int' → logprob: -1.2877066135406494
    3. ' str' → logprob: -1.5377066135406494
    4. 'str' → logprob: -2.2877066135406494
    5. ')' → logprob: -5.66270637512207
    6. ' None' → logprob: -7.03770637512207
    7. ' )' → logprob: -7.41270637512207
    8. 'None' → logprob: -7.53770637512207
    9. ' ' → logprob: -8.91270637512207
    10. '[int' → logprob: -9.16270637512207

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015072651207447052
    2. ',' → logprob: -4.265072822570801
    3. ')' → logprob: -7.515072822570801
    4. '):
' → logprob: -8.5150728225708
    5. ' ):' → logprob: -9.2650728225708
    6. ':' → logprob: -10.1400728225708
    7. '=' → logprob: -11.7650728225708
    8. '   ' → logprob: -11.8900728225708
    9. '=None' → logprob: -12.0150728225708
    10. ' ,' → logprob: -12.5150728225708

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059300877153873444
    2. ',' → logprob: -3.9343008995056152
    3. ')' → logprob: -4.559300899505615
    4. '   ' → logprob: -4.684300899505615
    5. ' ' → logprob: -5.309300899505615
    6. '<|end|>' → logprob: -5.559300899505615
    7. '):
' → logprob: -6.434300899505615
    8. ':' → logprob: -6.559300899505615
    9. ' 
' → logprob: -6.934300899505615
    10. '    ' → logprob: -7.059300899505615

Token 116: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6660577654838562
    2. '       ' → logprob: -1.416057825088501
    3. 'self' (adapté à ' self') → logprob: -1.416057825088501
    4. ' ' → logprob: -7.916057586669922
    5. ' ' → logprob: -8.041057586669922
    6. '        ' → logprob: -8.666057586669922
    7. '   ' → logprob: -10.541057586669922
    8. '	self' → logprob: -10.791057586669922
    9. '         ' → logprob: -12.291057586669922
    10. '     ' → logprob: -12.916057586669922

Token 117: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.048862699419260025
    2. '.index' → logprob: -3.0488626956939697
    3. ' .' → logprob: -8.42386245727539
    4. '=index' → logprob: -10.67386245727539
    5. 'index' → logprob: -10.92386245727539
    6. ' index' → logprob: -12.92386245727539
    7. ':' → logprob: -13.04886245727539
    8. ' =' → logprob: -13.17386245727539
    9. ':index' → logprob: -14.04886245727539
    10. '.label' → logprob: -14.17386245727539

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.209368035197258
    2. '=' → logprob: -1.7093679904937744
    3. ',' → logprob: -5.2093682289123535
    4. ' ' → logprob: -6.4593682289123535
    5. '<|end|>' → logprob: -7.5843682289123535
    6. ')' → logprob: -8.834367752075195
    7. ':' → logprob: -9.459367752075195
    8. ' ,' → logprob: -9.584367752075195
    9. '<|end|>' → logprob: -9.959367752075195
    10. '   ' → logprob: -11.459367752075195

Token 119: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.01255720853805542
    2. 'index' → logprob: -4.387557029724121
    3. ' ' → logprob: -10.012557029724121
    4. '0' → logprob: -13.762557029724121
    5. ' ' → logprob: -14.512557029724121
    6. '#index' → logprob: -14.762557029724121
    7. '	index' → logprob: -15.887557029724121
    8. '(index' → logprob: -16.012557983398438
    9. '=index' → logprob: -16.137557983398438
    10. ' int' → logprob: -16.637557983398438

Token 120: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08392516523599625
    2. '
' → logprob: -2.583925247192383
    3. '<|end|>' → logprob: -5.458925247192383
    4. '        
' → logprob: -8.458925247192383
    5. ' 
' → logprob: -8.708925247192383
    6. ',' → logprob: -9.333925247192383
    7. ' ' → logprob: -9.708925247192383
    8. '  
' → logprob: -9.833925247192383
    9. '        ' → logprob: -10.333925247192383
    10. '   ' → logprob: -10.458925247192383

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039230400579981506
    2. 'self' → logprob: -9.000391960144043
    3. '
' → logprob: -9.250391960144043
    4. '<|end|>' → logprob: -9.375391960144043
    5. ' self' → logprob: -10.000391960144043
    6. ',' → logprob: -11.250391960144043
    7. ' ' → logprob: -11.750391960144043
    8. '        
' → logprob: -12.375391960144043
    9. '      ' → logprob: -12.500391960144043
    10. '        ' → logprob: -12.625391960144043

Token 122: ' self' (ID: 1051)
  Prédit: ' label'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' label' → logprob: -0.2741851806640625
    2. 'label' → logprob: -1.6491851806640625
    3. ' self' → logprob: -3.5241851806640625
    4. 'self' (adapté à ' self') → logprob: -4.0241851806640625
    5. '       ' → logprob: -8.524185180664062
    6. '        ' → logprob: -11.524185180664062
    7. ' ' → logprob: -11.899185180664062
    8. ''label' → logprob: -12.024185180664062
    9. '.label' → logprob: -12.899185180664062
    10. '   ' → logprob: -12.899185180664062

Token 123: '.label' (ID: 6299)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22604289650917053
    2. '.label' → logprob: -1.6010428667068481
    3. 'label' → logprob: -8.851042747497559
    4. ',' → logprob: -8.851042747497559
    5. '.index' → logprob: -8.976042747497559
    6. ' .' → logprob: -9.226042747497559
    7. '.labels' → logprob: -10.226042747497559
    8. ' =' → logprob: -11.351042747497559
    9. '.value' → logprob: -11.351042747497559
    10. '.color' → logprob: -11.851042747497559

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47449231147766113
    2. '=' → logprob: -0.9744923114776611
    3. ' ' → logprob: -7.849492073059082
    4. ',' → logprob: -11.224492073059082
    5. ')' → logprob: -12.224492073059082
    6. '<|end|>' → logprob: -12.599492073059082
    7. '_' → logprob: -13.099492073059082
    8. ' ,' → logprob: -15.474492073059082
    9. '<|end|>' → logprob: -15.599492073059082
    10. ' =
' → logprob: -15.724492073059082

Token 125: ' label' (ID: 4208)
  Prédit: ' label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' label' → logprob: -0.06505058705806732
    2. ' ' → logprob: -2.8150506019592285
    3. 'label' → logprob: -5.8150506019592285
    4. ' index' → logprob: -9.56505012512207
    5. '0' → logprob: -12.31505012512207
    6. ' None' → logprob: -12.31505012512207
    7. '(label' → logprob: -12.69005012512207
    8. ''label' → logprob: -13.06505012512207
    9. '<|end|>' → logprob: -13.31505012512207
    10. ' ' → logprob: -13.44005012512207

Token 126: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05520925670862198
    2. '<|end|>' → logprob: -2.930209159851074
    3. '<|end|>' → logprob: -8.680209159851074
    4. '   ' → logprob: -9.930209159851074
    5. '    
' → logprob: -10.055209159851074
    6. '       ' → logprob: -10.430209159851074
    7. '

' → logprob: -11.680209159851074
    8. ' 
' → logprob: -11.930209159851074
    9. '  
' → logprob: -12.305209159851074
    10. '\n' → logprob: -12.680209159851074

Token 127: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30606791377067566
    2. '   ' → logprob: -1.806067943572998
    3. '<|end|>' → logprob: -2.431067943572998
    4. '    
' → logprob: -5.056067943572998
    5. '       ' → logprob: -6.681067943572998
    6. '<|end|>' → logprob: -7.056067943572998
    7. 'class' → logprob: -7.681067943572998
    8. ' ' → logprob: -7.806067943572998
    9. '  
' → logprob: -7.806067943572998
    10. ' 
' → logprob: -8.18106746673584

Token 128: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01900636963546276
    2. '<|end|>' → logprob: -4.019006252288818
    3. 'class' → logprob: -7.769006252288818
    4. '

' → logprob: -8.269006729125977
    5. '   ' → logprob: -9.769006729125977
    6. 'def' (adapté à ' def') → logprob: -10.144006729125977
    7. '<|end|>' → logprob: -10.269006729125977
    8. '    
' → logprob: -11.019006729125977
    9. '
    
' → logprob: -12.394006729125977
    10. '```' → logprob: -12.769006729125977

Token 129: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03752148896455765
    2. ' __' → logprob: -3.4125216007232666
    3. ' add' → logprob: -6.0375213623046875
    4. ' def' → logprob: -7.9125213623046875
    5. '_' → logprob: -8.037521362304688
    6. ' get' → logprob: -8.787521362304688
    7. ' _' → logprob: -9.037521362304688
    8. ' ' → logprob: -9.412521362304688
    9. '_add' → logprob: -9.537521362304688
    10. '_repr' → logprob: -10.037521362304688

Token 130: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0747746154665947
    2. 'lt' → logprob: -3.0747745037078857
    3. 'repr' → logprob: -3.6997745037078857
    4. 'hash' → logprob: -7.199774742126465
    5. 'str' → logprob: -7.949774742126465
    6. ' eq' → logprob: -11.824774742126465
    7. 'init' → logprob: -12.199774742126465
    8. ' lt' → logprob: -13.699774742126465
    9. 'le' → logprob: -13.949774742126465
    10. ' repr' → logprob: -14.074774742126465

Token 131: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.016951782628893852
    2. '__' → logprob: -4.141951560974121
    3. '__(
' → logprob: -7.516951560974121
    4. '__('' → logprob: -8.266951560974121
    5. '_' → logprob: -9.891951560974121
    6. '__("' → logprob: -10.641951560974121
    7. '(' → logprob: -11.391951560974121
    8. '(self' → logprob: -11.391951560974121
    9. '__((' → logprob: -11.391951560974121
    10. '_(' → logprob: -12.891951560974121

Token 132: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009339710813947022
    2. ' self' → logprob: -7.62593412399292
    3. ')' → logprob: -7.75093412399292
    4. 's' → logprob: -12.375933647155762
    5. '(self' → logprob: -12.375933647155762
    6. ' ' → logprob: -12.500933647155762
    7. ' )' → logprob: -13.250933647155762
    8. '
' → logprob: -14.375933647155762
    9. '

' → logprob: -15.125933647155762
    10. ',' → logprob: -15.250933647155762

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28267794847488403
    2. ')' → logprob: -1.7826778888702393
    3. '):
' → logprob: -3.1576778888702393
    4. ',' → logprob: -4.157678127288818
    5. ' ):' → logprob: -4.657678127288818
    6. 'self' → logprob: -5.907678127288818
    7. '__' → logprob: -6.157678127288818
    8. ' )' → logprob: -6.407678127288818
    9. '):

' → logprob: -6.657678127288818
    10. '(self' → logprob: -7.407678127288818

Token 134: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.04391617327928543
    2. '    ' → logprob: -4.16891622543335
    3. 'f' → logprob: -4.29391622543335
    4. ' return' → logprob: -4.66891622543335
    5. '       ' → logprob: -6.79391622543335
    6. ''' → logprob: -6.91891622543335
    7. '"' → logprob: -7.29391622543335
    8. '   ' → logprob: -7.66891622543335
    9. ' ' → logprob: -7.79391622543335
    10. 'return' → logprob: -7.91891622543335

Token 135: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17806757986545563
    2. ' return' → logprob: -1.9280675649642944
    3. '       ' → logprob: -4.053067684173584
    4. ' f' → logprob: -8.678067207336426
    5. 'f' → logprob: -9.178067207336426
    6. '   ' → logprob: -10.553067207336426
    7. '{return' → logprob: -11.928067207336426
    8. '	return' → logprob: -12.803067207336426
    9. '           ' → logprob: -12.928067207336426
    10. '    ' → logprob: -13.553067207336426

Token 136: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.029751762747764587
    2. 'f' → logprob: -3.529751777648926
    3. ''f' → logprob: -14.529751777648926
    4. ''' → logprob: -15.529751777648926
    5. ' ' → logprob: -15.654751777648926
    6. '"' → logprob: -16.15475082397461
    7. '`' → logprob: -16.27975082397461
    8. ' ' → logprob: -16.40475082397461
    9. '(f' → logprob: -16.52975082397461
    10. ' F' → logprob: -17.27975082397461

Token 137: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1520370990037918
    2. '"<' → logprob: -2.5270371437072754
    3. ''' → logprob: -3.4020371437072754
    4. 'f' → logprob: -4.027037143707275
    5. ''<' → logprob: -5.277037143707275
    6. '(Node' → logprob: -6.652037143707275
    7. '"{' → logprob: -7.027037143707275
    8. '(f' → logprob: -7.277037143707275
    9. ''{' → logprob: -7.777037143707275
    10. ''f' → logprob: -8.027036666870117

Token 138: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -6.992775888647884e-05
    2. '<Node' → logprob: -9.625069618225098
    3. ''' → logprob: -13.500069618225098
    4. '"' → logprob: -13.750069618225098
    5. ' Node' → logprob: -14.875069618225098
    6. 'f' → logprob: -14.875069618225098
    7. '_Node' → logprob: -15.250069618225098
    8. '{' → logprob: -15.375069618225098
    9. '(Node' → logprob: -16.000070571899414
    10. '.Node' → logprob: -16.125070571899414

Token 139: '(idx' (ID: 42793)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.12835486233234406
    2. '(index' → logprob: -2.128354787826538
    3. '{' → logprob: -6.753355026245117
    4. '(' → logprob: -8.628355026245117
    5. '(label' → logprob: -10.753355026245117
    6. '(self' → logprob: -10.753355026245117
    7. '(idx' → logprob: -11.753355026245117
    8. '(node' → logprob: -11.878355026245117
    9. '#{' → logprob: -12.503355026245117
    10. '(i' → logprob: -12.628355026245117

Token 140: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.0298071950674057
    2. '{' → logprob: -3.5298070907592773
    3. '=' → logprob: -10.904807090759277
    4. 'u' → logprob: -11.654807090759277
    5. 'f' → logprob: -12.029807090759277
    6. 'ex' → logprob: -12.404807090759277
    7. 'elf' → logprob: -12.404807090759277
    8. 'uel' → logprob: -12.779807090759277
    9. '#{' → logprob: -13.029807090759277
    10. ':{' → logprob: -13.029807090759277

Token 141: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.682846287731081e-05
    2. '{' → logprob: -9.750066757202148
    3. ' self' → logprob: -12.000066757202148
    4. 'elf' → logprob: -13.875066757202148
    5. '
' → logprob: -14.500066757202148
    6. 'sel' → logprob: -15.250066757202148
    7. 's' → logprob: -16.12506675720215
    8. '0' → logprob: -16.25006675720215
    9. 'index' → logprob: -16.62506675720215
    10. '   ' → logprob: -17.25006675720215

Token 142: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0018339187372475863
    2. 'index' → logprob: -6.501833915710449
    3. 'ex' → logprob: -8.25183391571045
    4. 'self' → logprob: -10.12683391571045
    5. '.' → logprob: -11.12683391571045
    6. '}.' → logprob: -12.75183391571045
    7. '.idx' → logprob: -12.87683391571045
    8. '.ex' → logprob: -13.25183391571045
    9. ',' → logprob: -14.12683391571045
    10. '}' → logprob: -14.12683391571045

Token 143: '},' (ID: 4180)
  Prédit: '},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -2.7610454708337784e-05
    2. ',' → logprob: -10.625027656555176
    3. '}' → logprob: -13.000027656555176
    4. ' },' → logprob: -14.625027656555176
    5. '},"' → logprob: -15.250027656555176
    6. '},
' → logprob: -15.750027656555176
    7. '!' → logprob: -16.37502670288086
    8. '},

' → logprob: -17.25002670288086
    9. 'label' → logprob: -18.12502670288086
    10. '],' → logprob: -18.12502670288086

Token 144: ' label' (ID: 4208)
  Prédit: 'label'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'label' → logprob: -0.2528882324695587
    2. ' label' → logprob: -1.5028882026672363
    3. 'lab' → logprob: -7.502888202667236
    4. ' lbl' → logprob: -8.502888679504395
    5. 'lbl' → logprob: -9.252888679504395
    6. ' lab' → logprob: -10.002888679504395
    7. '{' → logprob: -11.002888679504395
    8. ''label' → logprob: -11.127888679504395
    9. 'l' → logprob: -11.502888679504395
    10. ' l' → logprob: -12.252888679504395

Token 145: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.00021509946964215487
    2. '=' → logprob: -8.875215530395508
    3. '{' → logprob: -9.625215530395508
    4. '}' → logprob: -11.875215530395508
    5. '=self' → logprob: -14.375215530395508
    6. '=}' → logprob: -14.500215530395508
    7. '={
' → logprob: -15.375215530395508
    8. '='{' → logprob: -15.875215530395508
    9. 'self' → logprob: -16.125215530395508
    10. '=
' → logprob: -16.125215530395508

Token 146: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03484730422496796
    2. '{' → logprob: -3.4098472595214844
    3. ' self' → logprob: -6.784847259521484
    4. ' {' → logprob: -9.659847259521484
    5. '{
' → logprob: -13.034847259521484
    6. '{}' → logprob: -14.034847259521484
    7. 'f' → logprob: -14.159847259521484
    8. ' ' → logprob: -14.784847259521484
    9. ''{' → logprob: -15.034847259521484
    10. '{s' → logprob: -15.284847259521484

Token 147: '.label' (ID: 6299)
  Prédit: '.label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.label' → logprob: -7.584239938296378e-06
    2. '.' → logprob: -12.500007629394531
    3. 'label' → logprob: -13.000007629394531
    4. '.index' → logprob: -14.500007629394531
    5. '<label' → logprob: -15.250007629394531
    6. '})' → logprob: -16.00000762939453
    7. '.l' → logprob: -16.00000762939453
    8. '}' → logprob: -16.25000762939453
    9. '}.' → logprob: -16.62500762939453
    10. '.n' → logprob: -16.62500762939453

Token 148: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.47778308391571045
    2. '})' → logprob: -0.9777830839157104
    3. '}"' → logprob: -5.727783203125
    4. '}")' → logprob: -8.602783203125
    5. ')' → logprob: -8.727783203125
    6. ')}' → logprob: -10.227783203125
    7. ' })' → logprob: -10.977783203125
    8. ')")' → logprob: -11.352783203125
    9. '')"' → logprob: -11.477783203125
    10. '")' → logprob: -11.477783203125

Token 149: '"

' (ID: 2678)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022192252799868584
    2. '<|end|>' → logprob: -3.8971922397613525
    3. '

' → logprob: -7.147192478179932
    4. '\n' → logprob: -8.272192001342773
    5. '<|end|>' → logprob: -8.647192001342773
    6. '    
' → logprob: -9.397192001342773
    7. ')' → logprob: -9.522192001342773
    8. '
    
' → logprob: -10.022192001342773
    9. 'newline' → logprob: -10.272192001342773
    10. '```' → logprob: -10.397192001342773

Token 150: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20627768337726593
    2. 'class' → logprob: -1.7062777280807495
    3. '

' → logprob: -5.831277847290039
    4. 'c' → logprob: -8.206277847290039
    5. '
' → logprob: -8.206277847290039
    6. '\n' → logprob: -8.206277847290039
    7. 'def' → logprob: -8.331277847290039
    8. ' class' → logprob: -8.581277847290039
    9. ' 
' → logprob: -8.706277847290039
    10. '  
' → logprob: -9.331277847290039

Token 151: ' Dis' (ID: 3946)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.31342247128486633
    2. ' Tree' → logprob: -1.438422441482544
    3. ' Edge' → logprob: -4.313422679901123
    4. 'Graph' → logprob: -4.563422679901123
    5. ' Binary' → logprob: -5.438422679901123
    6. 'Tree' → logprob: -6.313422679901123
    7. ' Linked' → logprob: -7.313422679901123
    8. ' Solution' → logprob: -8.063422203063965
    9. ' Segment' → logprob: -8.938422203063965
    10. 'Edge' → logprob: -9.063422203063965

Token 152: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.001099491841159761
    2. 'Joint' → logprob: -7.126099586486816
    3. 't' → logprob: -8.376099586486816
    4. 'join' → logprob: -10.626099586486816
    5. 'jo' → logprob: -11.001099586486816
    6. 'crete' → logprob: -11.876099586486816
    7. ' joint' → logprob: -12.126099586486816
    8. '_joint' → logprob: -12.626099586486816
    9. 'tributed' → logprob: -13.001099586486816
    10. 'j' → logprob: -13.251099586486816

Token 153: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.6240566083070007e-06
    2. ' Set' → logprob: -14.000001907348633
    3. 'Union' → logprob: -15.125001907348633
    4. 'Sets' → logprob: -15.875001907348633
    5. '-set' → logprob: -16.500001907348633
    6. '_set' → logprob: -16.625001907348633
    7. 'set' → logprob: -16.875001907348633
    8. '_Set' → logprob: -17.250001907348633
    9. ' set' → logprob: -17.375001907348633
    10. 'S' → logprob: -17.875001907348633

Token 154: 'Union' (ID: 39222)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019638435915112495
    2. ':
' → logprob: -6.3769636154174805
    3. 'Union' → logprob: -8.37696361541748
    4. '():' → logprob: -11.37696361541748
    5. ' :' → logprob: -12.37696361541748
    6. '):' → logprob: -12.62696361541748
    7. '{' → logprob: -12.87696361541748
    8. 'Set' → logprob: -13.12696361541748
    9. ':

' → logprob: -13.50196361541748
    10. 'Forest' → logprob: -13.87696361541748

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0087516784551553e-05
    2. ':
' → logprob: -12.00001049041748
    3. '():' → logprob: -12.75001049041748
    4. ' :' → logprob: -15.37501049041748
    5. ':

' → logprob: -15.50001049041748
    6. '(' → logprob: -15.87501049041748
    7. '):' → logprob: -15.87501049041748
    8. ':**' → logprob: -16.000009536743164
    9. '(object' → logprob: -16.500009536743164
    10. '{' → logprob: -17.375009536743164

Token 156: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03377467021346092
    2. ':
' → logprob: -3.4087746143341064
    3. '   ' → logprob: -9.033774375915527
    4. '):' → logprob: -12.908774375915527
    5. '(object' → logprob: -13.283774375915527
    6. '):
' → logprob: -14.033774375915527
    7. ':def' → logprob: -14.033774375915527
    8. 'def' → logprob: -14.408774375915527
    9. '():' → logprob: -14.658774375915527
    10. ':

' → logprob: -14.658774375915527

Token 157: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.27514439821243286
    2. 'def' (adapté à ' def') → logprob: -1.525144338607788
    3. '   ' → logprob: -3.775144338607788
    4. 'class' → logprob: -11.900144577026367
    5. '	def' → logprob: -12.900144577026367
    6. ':def' → logprob: -13.400144577026367
    7. '    ' → logprob: -13.650144577026367
    8. ':' → logprob: -13.650144577026367
    9. '  ' → logprob: -15.150144577026367
    10. '    
' → logprob: -15.650144577026367

Token 158: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0016248335596174002
    2. '__' → logprob: -6.501625061035156
    3. ' ' → logprob: -9.376625061035156
    4. '  ' → logprob: -11.001625061035156
    5. ' ' → logprob: -11.751625061035156
    6. ' _' → logprob: -13.001625061035156
    7. ' ___' → logprob: -13.001625061035156
    8. ' init' → logprob: -13.376625061035156
    9. '_init' → logprob: -13.376625061035156
    10. 'object' → logprob: -13.751625061035156

Token 159: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -16.75
    3. 'int' → logprob: -17.25
    4. 'ini' → logprob: -18.375
    5. 'class' → logprob: -18.75
    6. '_init' → logprob: -18.875
    7. '(init' → logprob: -19.0
    8. 'nit' → logprob: -19.625
    9. 'inite' → logprob: -20.75
    10. '```' → logprob: -20.75

Token 160: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4804067015647888
    2. '__(' → logprob: -0.9804067015647888
    3. '(' → logprob: -5.480406761169434
    4. ' (' → logprob: -6.480406761169434
    5. '_(' → logprob: -8.230406761169434
    6. ')(' → logprob: -8.605406761169434
    7. ' ' → logprob: -9.980406761169434
    8. ',' → logprob: -10.855406761169434
    9. 'self' → logprob: -11.105406761169434
    10. '__' → logprob: -11.105406761169434

Token 161: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0046644918620586395
    2. ' self' → logprob: -5.379664421081543
    3. ' ' → logprob: -11.129664421081543
    4. '   ' → logprob: -11.629664421081543
    5. ')' → logprob: -11.754664421081543
    6. '(self' → logprob: -12.004664421081543
    7. '
' → logprob: -13.004664421081543
    8. ',' → logprob: -13.754664421081543
    9. '  ' → logprob: -14.004664421081543
    10. '	self' → logprob: -14.504664421081543

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013341709272935987
    2. ' ,' → logprob: -6.876334190368652
    3. 'self' → logprob: -8.251334190368652
    4. '(self' → logprob: -11.376334190368652
    5. ' self' → logprob: -11.376334190368652
    6. ')' → logprob: -12.001334190368652
    7. ' (' → logprob: -12.126334190368652
    8. ',self' → logprob: -12.876334190368652
    9. '   ' → logprob: -14.001334190368652
    10. ' ' → logprob: -14.251334190368652

Token 163: ' size' (ID: 2349)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9252258539199829
    2. ' n' → logprob: -1.175225853919983
    3. 'self' → logprob: -1.550225853919983
    4. ' size' → logprob: -3.0502257347106934
    5. 'n' → logprob: -3.4252257347106934
    6. 'size' → logprob: -6.175225734710693
    7. ' ' → logprob: -7.550225734710693
    8. '   ' → logprob: -10.050226211547852
    9. '    ' → logprob: -11.050226211547852
    10. ' parent' → logprob: -11.425226211547852

Token 164: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039586812257766724
    2. ':' → logprob: -3.2895867824554443
    3. ' ):' → logprob: -6.664587020874023
    4. '):
' → logprob: -9.039587020874023
    5. ')' → logprob: -9.039587020874023
    6. ',' → logprob: -11.289587020874023
    7. ' :' → logprob: -12.164587020874023
    8. ':int' → logprob: -12.289587020874023
    9. '}:' → logprob: -12.914587020874023
    10. ' ' → logprob: -13.414587020874023

Token 165: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.2467514276504517
    2. ' size' → logprob: -1.2467514276504517
    3. 'int' → logprob: -1.3717514276504517
    4. ' )' → logprob: -2.746751308441162
    5. ' ' → logprob: -3.121751308441162
    6. 'size' → logprob: -3.371751308441162
    7. ')' → logprob: -3.871751308441162
    8. 'n' → logprob: -6.246751308441162
    9. ' self' → logprob: -6.496751308441162
    10. ' n' → logprob: -6.496751308441162

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20154237747192383
    2. '):
' → logprob: -1.7015423774719238
    3. '):
' → logprob: -9.701541900634766
    4. ' ):' → logprob: -9.826541900634766
    5. ' ):
' → logprob: -11.826541900634766
    6. ')' → logprob: -12.076541900634766
    7. ':' → logprob: -14.826541900634766
    8. '   ' → logprob: -15.451541900634766
    9. '):

' → logprob: -15.451541900634766
    10. ' ' → logprob: -17.201541900634766

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1299392133951187
    2. 'self' → logprob: -2.254939317703247
    3. ' self' → logprob: -4.129939079284668
    4. '   ' → logprob: -7.504939079284668
    5. '):
' → logprob: -8.754939079284668
    6. '	self' → logprob: -9.504939079284668
    7. '        
' → logprob: -10.504939079284668
    8. '[self' → logprob: -10.879939079284668
    9. '(self' → logprob: -11.254939079284668
    10. '
' → logprob: -11.254939079284668

Token 168: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.024041369557380676
    2. ' self' → logprob: -3.7740414142608643
    3. '       ' → logprob: -7.774041175842285
    4. '   ' → logprob: -7.899041175842285
    5. 'parent' → logprob: -12.899041175842285
    6. '	self' → logprob: -14.524041175842285
    7. ' parent' → logprob: -15.149041175842285
    8. ' ' → logprob: -15.524041175842285
    9. '    ' → logprob: -15.649041175842285
    10. '  ' → logprob: -16.0240421295166

Token 169: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.08544051647186279
    2. 'parent' → logprob: -2.5854406356811523
    3. '_parent' → logprob: -5.585440635681152
    4. '.parents' → logprob: -6.460440635681152
    5. '	parent' → logprob: -8.335440635681152
    6. ' parent' → logprob: -8.335440635681152
    7. '.' → logprob: -8.835440635681152
    8. '._' → logprob: -8.835440635681152
    9. 'parents' → logprob: -9.085440635681152
    10. '   ' → logprob: -9.210440635681152

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759502649307251
    2. '=' → logprob: -0.8259502649307251
    3. '[' → logprob: -12.575950622558594
    4. 's' → logprob: -12.700950622558594
    5. '=[]' → logprob: -13.700950622558594
    6. ' ' → logprob: -13.825950622558594
    7. '   ' → logprob: -14.825950622558594
    8. ')' → logprob: -14.825950622558594
    9. ':' → logprob: -15.575950622558594
    10. '=[' → logprob: -15.575950622558594

Token 171: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.42916256189346313
    2. ' [' → logprob: -1.6791625022888184
    3. '[list' → logprob: -2.4291625022888184
    4. 'list' → logprob: -2.6791625022888184
    5. '[' → logprob: -5.179162502288818
    6. '[-' → logprob: -11.054162979125977
    7. '[List' → logprob: -11.554162979125977
    8. ' [-' → logprob: -11.679162979125977
    9. '[class' → logprob: -12.929162979125977
    10. '[i' → logprob: -13.179162979125977

Token 172: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -9.088346359931165e-07
    2. 'range' → logprob: -14.500000953674316
    3. '(' → logprob: -15.000000953674316
    4. ' range' → logprob: -18.125
    5. '	range' → logprob: -19.625
    6. '.range' → logprob: -21.375
    7. '(
' → logprob: -21.5
    8. '(

' → logprob: -22.125
    9. '<|end|>' → logprob: -22.125
    10. '(i' → logprob: -22.25

Token 173: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -9.088346359931165e-07
    2. 'size' → logprob: -14.250000953674316
    3. '(' → logprob: -15.875000953674316
    4. ',size' → logprob: -19.125
    5. '[size' → logprob: -19.25
    6. ' size' → logprob: -19.625
    7. '=size' → logprob: -19.75
    8. '<size' → logprob: -20.875
    9. ')' → logprob: -21.0
    10. '(s' → logprob: -21.375

Token 174: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00024203950306400657
    2. '))
' → logprob: -8.375242233276367
    3. ' ))' → logprob: -11.750242233276367
    4. '))

' → logprob: -13.250242233276367
    5. ')' → logprob: -13.875242233276367
    6. ')))' → logprob: -14.500242233276367
    7. '()))' → logprob: -15.500242233276367
    8. '));' → logprob: -16.500242233276367
    9. '))
' → logprob: -16.750242233276367
    10. ''))' → logprob: -17.375242233276367

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14780843257904053
    2. '
' → logprob: -2.02280855178833
    3. '<|end|>' → logprob: -6.39780855178833
    4. '   ' → logprob: -6.64780855178833
    5. ' 
' → logprob: -7.39780855178833
    6. '        
' → logprob: -7.39780855178833
    7. '  
' → logprob: -8.397808074951172
    8. ' ' → logprob: -8.897808074951172
    9. '        ' → logprob: -9.272808074951172
    10. '    
' → logprob: -9.272808074951172

Token 176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005816571414470673
    2. ' self' → logprob: -5.380816459655762
    3. '       ' → logprob: -6.755816459655762
    4. '   ' → logprob: -10.880816459655762
    5. 's' → logprob: -12.380816459655762
    6. ' ' → logprob: -12.505816459655762
    7. '
' → logprob: -13.505816459655762
    8. '  ' → logprob: -14.380816459655762
    9. 'elf' → logprob: -14.505816459655762
    10. '    ' → logprob: -15.130816459655762

Token 177: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.0011724866926670074
    2. '.size' → logprob: -6.7511725425720215
    3. '.parent' → logprob: -13.501172065734863
    4. '.' → logprob: -15.001172065734863
    5. 'rank' → logprob: -15.251172065734863
    6. '.r' → logprob: -15.501172065734863
    7. '.sz' → logprob: -17.00117301940918
    8. ' .' → logprob: -17.37617301940918
    9. '_rank' → logprob: -18.25117301940918
    10. 'size' → logprob: -18.62617301940918

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489491671323776
    2. '=' → logprob: -2.9298949241638184
    3. '[' → logprob: -11.55489444732666
    4. ' ' → logprob: -13.55489444732666
    5. 's' → logprob: -14.80489444732666
    6. ' =[' → logprob: -14.80489444732666
    7. '<|end|>' → logprob: -15.30489444732666
    8. '=[]' → logprob: -15.67989444732666
    9. '[:]' → logprob: -15.67989444732666
    10. '   ' → logprob: -15.92989444732666

Token 179: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20141363143920898
    2. ' [' → logprob: -1.701413631439209
    3. '[size' → logprob: -15.576414108276367
    4. '0' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.701414108276367
    6. ' ' → logprob: -17.826414108276367
    7. '   ' → logprob: -17.951414108276367
    8. '<|end|>' → logprob: -18.201414108276367
    9. '[int' → logprob: -18.326414108276367
    10. '([' → logprob: -18.326414108276367

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '1' → logprob: -17.375009536743164
    4. '   ' → logprob: -18.000009536743164
    5. '۰' → logprob: -19.625009536743164
    6. '
' → logprob: -20.687509536743164
    7. '  ' → logprob: -20.937509536743164
    8. ')' → logprob: -22.000009536743164
    9. '    ' → logprob: -22.000009536743164
    10. '3' → logprob: -22.375009536743164

Token 181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006004538154229522
    2. ']*' → logprob: -7.500600337982178
    3. ' ]' → logprob: -10.000600814819336
    4. ' for' → logprob: -13.500600814819336
    5. ')' → logprob: -15.000600814819336
    6. ']*(' → logprob: -15.250600814819336
    7. ' ' → logprob: -16.750600814819336
    8. '   ' → logprob: -17.000600814819336
    9. ']int' → logprob: -17.875600814819336
    10. 'for' → logprob: -19.000600814819336

Token 182: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11712683737277985
    2. ']*' → logprob: -2.492126941680908
    3. '*' → logprob: -4.367126941680908
    4. ' for' → logprob: -4.617126941680908
    5. ' *' → logprob: -5.617126941680908
    6. ' ]' → logprob: -6.742126941680908
    7. ')' → logprob: -8.24212646484375
    8. 'for' → logprob: -9.74212646484375
    9. ' ' → logprob: -9.86712646484375
    10. ')*' → logprob: -11.99212646484375

Token 183: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.02976737916469574
    2. ' size' → logprob: -3.5297672748565674
    3. '(size' → logprob: -11.029767036437988
    4. '   ' → logprob: -15.404767036437988
    5. '	size' → logprob: -15.904767036437988
    6. ' ' → logprob: -16.279767990112305
    7. '[size' → logprob: -16.404767990112305
    8. 'length' → logprob: -16.779767990112305
    9. '<size' → logprob: -16.904767990112305
    10. ',size' → logprob: -17.779767990112305

Token 184: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059865571558475494
    2. '   ' → logprob: -3.3098654747009277
    3. '    
' → logprob: -3.9348654747009277
    4. 'def' → logprob: -6.684865474700928
    5. '<|end|>' → logprob: -8.309865951538086
    6. '

' → logprob: -8.684865951538086
    7. '  
' → logprob: -8.934865951538086
    8. ' 
' → logprob: -9.434865951538086
    9. ' def' → logprob: -9.684865951538086
    10. '   
' → logprob: -10.684865951538086

Token 185: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004603149369359016
    2. '    
' → logprob: -5.879603385925293
    3. '   ' → logprob: -6.754603385925293
    4. '<|end|>' → logprob: -8.129603385925293
    5. '

' → logprob: -8.379603385925293
    6. '  
' → logprob: -9.754603385925293
    7. ' 
' → logprob: -11.129603385925293
    8. '
' → logprob: -11.629603385925293
    9. '<|end|>' → logprob: -11.629603385925293
    10. '	
' → logprob: -12.504603385925293

Token 186: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3622211515903473
    2. 'def' → logprob: -1.362221121788025
    3. '   ' → logprob: -3.2372212409973145
    4. '    
' → logprob: -5.3622212409973145
    5. ' def' → logprob: -6.2372212409973145
    6. '<|end|>' → logprob: -7.2372212409973145
    7. '	def' → logprob: -8.237220764160156
    8. '        
' → logprob: -8.362220764160156
    9. ' 
' → logprob: -8.737220764160156
    10. '

' → logprob: -8.987220764160156

Token 187: '.count' (ID: 14019)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.31107690930366516
    2. '.count' → logprob: -1.6860768795013428
    3. '.component' → logprob: -3.0610768795013428
    4. '.components' → logprob: -3.8110768795013428
    5. '.rank' → logprob: -4.936077117919922
    6. '.parent' → logprob: -6.436077117919922
    7. '.' → logprob: -6.936077117919922
    8. '.set' → logprob: -7.811077117919922
    9. '.sz' → logprob: -7.811077117919922
    10. '.connected' → logprob: -8.186077117919922

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017115899827331305
    2. '=' → logprob: -6.376711368560791
    3. ' ' → logprob: -11.87671184539795
    4. '<|end|>' → logprob: -13.87671184539795
    5. '  ' → logprob: -14.25171184539795
    6. '<|end|>' → logprob: -15.25171184539795
    7. ')' → logprob: -15.75171184539795
    8. '   ' → logprob: -16.126710891723633
    9. 's' → logprob: -16.376710891723633
    10. ',' → logprob: -16.501710891723633

Token 189: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.023309072479605675
    2. 'size' → logprob: -3.7733089923858643
    3. '0' → logprob: -10.148308753967285
    4. ' ' → logprob: -11.273308753967285
    5. '[size' → logprob: -12.148308753967285
    6. '(size' → logprob: -12.898308753967285
    7. '=size' → logprob: -13.898308753967285
    8. '<size' → logprob: -14.023308753967285
    9. '<|end|>' → logprob: -14.023308753967285
    10. '	size' → logprob: -15.148308753967285

Token 190: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07440199702978134
    2. '<|end|>' → logprob: -3.074402093887329
    3. '   ' → logprob: -4.32440185546875
    4. '    
' → logprob: -4.69940185546875
    5. 'def' → logprob: -6.94940185546875
    6. '

' → logprob: -7.07440185546875
    7. '<|end|>' → logprob: -7.07440185546875
    8. '  
' → logprob: -8.19940185546875
    9. ' 
' → logprob: -9.32440185546875
    10. ' def' → logprob: -10.44940185546875

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5808232426643372
    2. 'def' → logprob: -0.8308232426643372
    3. ' def' → logprob: -5.3308234214782715
    4. '	def' → logprob: -10.455822944641113
    5. ' ' → logprob: -13.205822944641113
    6. '  ' → logprob: -14.580822944641113
    7. '    
' → logprob: -14.580822944641113
    8. '_def' → logprob: -16.58082389831543
    9. '       ' → logprob: -17.08082389831543
    10. '        
' → logprob: -17.70582389831543

Token 192: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.615255839889869e-05
    2. ' def' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '	def' → logprob: -21.37509536743164
    5. ' ' → logprob: -22.87509536743164
    6. '
' → logprob: -23.25009536743164
    7. '```' → logprob: -24.37509536743164
    8. '    
' → logprob: -24.62509536743164
    9. 'de' → logprob: -25.00009536743164
    10. '  ' → logprob: -25.37509536743164

Token 193: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.10020710527896881
    2. 'find' → logprob: -2.3502070903778076
    3. '	find' → logprob: -15.725207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '_find' → logprob: -16.47520637512207
    6. ' union' → logprob: -16.85020637512207
    7. 'union' → logprob: -17.22520637512207
    8. '  ' → logprob: -17.72520637512207
    9. 'fin' → logprob: -18.10020637512207
    10. '   ' → logprob: -18.10020637512207

Token 194: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.281301349401474
    2. '(self' → logprob: -1.4063013792037964
    3. ' (' → logprob: -9.406301498413086
    4. '(x' → logprob: -11.031301498413086
    5. 'self' → logprob: -11.406301498413086
    6. '(
' → logprob: -11.781301498413086
    7. '(a' → logprob: -11.781301498413086
    8. '(node' → logprob: -12.531301498413086
    9. '(i' → logprob: -12.531301498413086
    10. '(

' → logprob: -12.656301498413086

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08361984044313431
    2. 'self' → logprob: -3.5836198329925537
    3. '(self' → logprob: -3.7086198329925537
    4. ')' → logprob: -4.333620071411133
    5. '(' → logprob: -5.083620071411133
    6. '(x' → logprob: -5.333620071411133
    7. '(i' → logprob: -5.833620071411133
    8. '(u' → logprob: -8.583620071411133
    9. '(a' → logprob: -8.958620071411133
    10. '(node' → logprob: -9.458620071411133

Token 196: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014450833201408386
    2. ' x' → logprob: -4.264451026916504
    3. 'a' → logprob: -8.639451026916504
    4. 'self' → logprob: -9.264451026916504
    5. 'u' → logprob: -11.389451026916504
    6. ' a' → logprob: -13.264451026916504
    7. ' self' → logprob: -13.764451026916504
    8. ' u' → logprob: -13.889451026916504
    9. 'i' → logprob: -15.014451026916504
    10. 'node' → logprob: -15.639451026916504

Token 197: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003368304343894124
    2. ')' → logprob: -5.753368377685547
    3. '):
' → logprob: -8.753368377685547
    4. ' ):' → logprob: -10.878368377685547
    5. ':' → logprob: -11.253368377685547
    6. ' )' → logprob: -15.503368377685547
    7. '   ' → logprob: -15.503368377685547
    8. '):

' → logprob: -15.628368377685547
    9. '):
' → logprob: -15.753368377685547
    10. '():' → logprob: -17.253368377685547

Token 198: ' int' (ID: 677)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08585742861032486
    2. ' x' → logprob: -2.585857391357422
    3. 'int' → logprob: -5.460857391357422
    4. ')' → logprob: -6.085857391357422
    5. ')x' → logprob: -8.835857391357422
    6. ' )' → logprob: -9.085857391357422
    7. ' int' → logprob: -9.210857391357422
    8. '):' → logprob: -10.585857391357422
    9. 'self' → logprob: -10.835857391357422
    10. ' ' → logprob: -11.835857391357422

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869117796421051
    2. '):' → logprob: -1.1369117498397827
    3. '):
' → logprob: -10.386911392211914
    4. ' )' → logprob: -12.511911392211914
    5. ' ):' → logprob: -12.636911392211914
    6. ')->' → logprob: -13.136911392211914
    7. ':' → logprob: -14.761911392211914
    8. '):
' → logprob: -15.136911392211914
    9. '):

' → logprob: -15.511911392211914
    10. '   ' → logprob: -16.511911392211914

Token 200: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12755632400512695
    2. '):' → logprob: -2.127556324005127
    3. '():' → logprob: -7.627556324005127
    4. ')' → logprob: -9.127555847167969
    5. '):
' → logprob: -11.627555847167969
    6. ' :' → logprob: -12.127555847167969
    7. ':
' → logprob: -12.627555847167969
    8. '->' → logprob: -12.627555847167969
    9. ')->' → logprob: -12.627555847167969
    10. '>:' → logprob: -13.627555847167969

Token 201: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031793788075447083
    2. ' int' → logprob: -5.753179550170898
    3. '[int' → logprob: -13.503179550170898
    4. '(int' → logprob: -16.3781795501709
    5. '	int' → logprob: -16.3781795501709
    6. ':int' → logprob: -16.6281795501709
    7. '<int' → logprob: -17.0031795501709
    8. ' ' → logprob: -18.2531795501709
    9. '=int' → logprob: -18.6281795501709
    10. ']int' → logprob: -19.7531795501709

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0110448794439435
    2. '):' → logprob: -4.636044979095459
    3. ':
' → logprob: -6.761044979095459
    4. '):
' → logprob: -9.6360445022583
    5. '():' → logprob: -10.0110445022583
    6. '   ' → logprob: -12.6360445022583
    7. ':**' → logprob: -12.7610445022583
    8. '}:' → logprob: -12.8860445022583
    9. ']:' → logprob: -13.3860445022583
    10. '():
' → logprob: -13.5110445022583

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018507862463593483
    2. '
' → logprob: -4.143507957458496
    3. ' 
' → logprob: -6.768507957458496
    4. '   ' → logprob: -7.893507957458496
    5. ' if' → logprob: -7.893507957458496
    6. ' while' → logprob: -8.643507957458496
    7. ':
' → logprob: -9.143507957458496
    8. '        
' → logprob: -9.518507957458496
    9. 'if' → logprob: -10.268507957458496
    10. '  
' → logprob: -10.268507957458496

Token 204: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25453078746795654
    2. ' if' → logprob: -1.5045307874679565
    3. '       ' → logprob: -6.004530906677246
    4. 'while' (adapté à ' while') → logprob: -9.379530906677246
    5. ' while' → logprob: -10.004530906677246
    6. '	if' → logprob: -14.004530906677246
    7. '   ' → logprob: -15.754530906677246
    8. 'return' → logprob: -17.62952995300293
    9. '```' → logprob: -17.62952995300293
    10. '
' → logprob: -17.87952995300293

Token 205: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00977804884314537
    2. 'x' → logprob: -4.759778022766113
    3. ' self' → logprob: -6.759778022766113
    4. ' x' → logprob: -12.634778022766113
    5. '	self' → logprob: -17.38477897644043
    6. '(self' → logprob: -18.38477897644043
    7. ' ' → logprob: -19.50977897644043
    8. '   ' → logprob: -20.38477897644043
    9. 'Self' → logprob: -21.00977897644043
    10. '(x' → logprob: -21.75977897644043

Token 206: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00046689616283401847
    2. 'parent' → logprob: -7.750466823577881
    3. '[parent' → logprob: -11.375467300415039
    4. ' !=' → logprob: -11.750467300415039
    5. '.' → logprob: -12.375467300415039
    6. 'self' → logprob: -12.625467300415039
    7. ' parent' → logprob: -12.875467300415039
    8. '	parent' → logprob: -12.875467300415039
    9. '!=' → logprob: -13.750467300415039
    10. ' .' → logprob: -14.000467300415039

Token 207: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.60414821645827e-06
    2. '[self' → logprob: -12.750004768371582
    3. 'x' → logprob: -13.500004768371582
    4. '[' → logprob: -15.250004768371582
    5. ' [' → logprob: -18.875003814697266
    6. '[
' → logprob: -18.875003814697266
    7. ' x' → logprob: -20.125003814697266
    8. '```' → logprob: -20.375003814697266
    9. 'self' → logprob: -20.625003814697266
    10. '(x' → logprob: -21.000003814697266

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020241623278707266
    2. ']!=' → logprob: -6.252024173736572
    3. '!=' → logprob: -9.377023696899414
    4. 'x' → logprob: -11.752023696899414
    5. ' !=' → logprob: -13.002023696899414
    6. ' ]' → logprob: -14.752023696899414
    7. '[' → logprob: -16.627023696899414
    8. ')!=' → logprob: -16.627023696899414
    9. '[x' → logprob: -17.002023696899414
    10. '}' → logprob: -17.252023696899414

Token 209: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.01124634686857462
    2. ' !=' → logprob: -4.511246204376221
    3. ']!=' → logprob: -8.761246681213379
    4. 'x' → logprob: -10.636246681213379
    5. ')!=' → logprob: -11.761246681213379
    6. '()!=' → logprob: -12.261246681213379
    7. '!==' → logprob: -12.511246681213379
    8. ']' → logprob: -14.136246681213379
    9. 'and' → logprob: -16.011245727539062
    10. '```' → logprob: -16.261245727539062

Token 210: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067154900170862675
    2. ' x' → logprob: -5.006715297698975
    3. '	x' → logprob: -16.131715774536133
    4. '
' → logprob: -19.381715774536133
    5. ')x' → logprob: -19.756715774536133
    6. 'self' → logprob: -21.631715774536133
    7. ' ' → logprob: -21.756715774536133
    8. '$x' → logprob: -22.256715774536133
    9. '   ' → logprob: -22.381715774536133
    10. '"x' → logprob: -22.506715774536133

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4741370677947998
    2. ':
' → logprob: -0.9741370677947998
    3. '):
' → logprob: -10.724137306213379
    4. ':

' → logprob: -11.724137306213379
    5. ',' → logprob: -11.849137306213379
    6. ' :
' → logprob: -12.349137306213379
    7. '       ' → logprob: -12.599137306213379
    8. ' :' → logprob: -13.099137306213379
    9. '   ' → logprob: -13.224137306213379
    10. 'x' → logprob: -13.224137306213379

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07371446490287781
    2. ' x' → logprob: -3.1987144947052
    3. 'x' → logprob: -4.198714256286621
    4. '       ' → logprob: -4.823714256286621
    5. ':
' → logprob: -5.448714256286621
    6. '   ' → logprob: -6.948714256286621
    7. ' self' → logprob: -7.573714256286621
    8. ':' → logprob: -7.698714256286621
    9. '):
' → logprob: -7.948714256286621
    10. 'self' → logprob: -8.198714256286621

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030498052015900612
    2. 'x' → logprob: -3.7804980278015137
    3. ' self' → logprob: -5.280498027801514
    4. '           ' → logprob: -6.155498027801514
    5. ' x' → logprob: -11.405498504638672
    6. '   ' → logprob: -13.655498504638672
    7. '	self' → logprob: -14.405498504638672
    8. '       ' → logprob: -14.655498504638672
    9. '               ' → logprob: -14.655498504638672
    10. 'parent' → logprob: -14.905498504638672

Token 214: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.35639387369155884
    2. 'parent' → logprob: -1.356393814086914
    3. '=' → logprob: -3.231393814086914
    4. ' =' → logprob: -6.606393814086914
    5. '_parent' → logprob: -7.106393814086914
    6. 'self' → logprob: -8.856393814086914
    7. '[parent' → logprob: -9.481393814086914
    8. 'x' → logprob: -9.606393814086914
    9. '.' → logprob: -9.981393814086914
    10. ' parent' → logprob: -10.106393814086914

Token 215: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0016187651781365275
    2. 'x' → logprob: -6.5016188621521
    3. '[' → logprob: -9.126618385314941
    4. ' x' → logprob: -12.626618385314941
    5. ' [' → logprob: -13.751618385314941
    6. '[self' → logprob: -14.126618385314941
    7. ' =' → logprob: -14.126618385314941
    8. '=' → logprob: -14.501618385314941
    9. '[
' → logprob: -15.126618385314941
    10. '	x' → logprob: -15.126618385314941

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.816591434879228e-05
    2. ']=' → logprob: -10.00008773803711
    3. ' ]' → logprob: -10.12508773803711
    4. '=' → logprob: -13.25008773803711
    5. '[x' → logprob: -14.62508773803711
    6. ' =' → logprob: -15.37508773803711
    7. '[' → logprob: -16.25008773803711
    8. 'x' → logprob: -16.25008773803711
    9. '   ' → logprob: -16.62508773803711
    10. ')' → logprob: -16.87508773803711

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014157623052597
    2. ' =' → logprob: -1.701415777206421
    3. ']' → logprob: -13.326416015625
    4. '[x' → logprob: -14.826416015625
    5. ']=' → logprob: -15.451416015625
    6. '=x' → logprob: -15.826416015625
    7. 'x' → logprob: -16.326416015625
    8. '[' → logprob: -17.451416015625
    9. '   ' → logprob: -17.826416015625
    10. ' ' → logprob: -17.951416015625

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178544342517853
    2. ' self' → logprob: -5.753178596496582
    3. '(self' → logprob: -14.128178596496582
    4. '[self' → logprob: -16.253177642822266
    5. '	self' → logprob: -17.503177642822266
    6. '=self' → logprob: -18.628177642822266
    7. 'Self' → logprob: -19.253177642822266
    8. '           ' → logprob: -19.503177642822266
    9. '
' → logprob: -19.753177642822266
    10. '0' → logprob: -19.753177642822266

Token 219: '.parent' (ID: 17454)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5475029945373535
    2. '.parent' → logprob: -1.2975029945373535
    3. 'parent' → logprob: -1.9225029945373535
    4. ' self' → logprob: -6.7975029945373535
    5. '[self' → logprob: -7.7975029945373535
    6. '.self' → logprob: -8.297502517700195
    7. '[parent' → logprob: -8.547502517700195
    8. ' parent' → logprob: -9.672502517700195
    9. '_parent' → logprob: -9.672502517700195
    10. '
' → logprob: -11.172502517700195

Token 220: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -6.182190554682165e-05
    2. 'self' → logprob: -9.750061988830566
    3. '[' → logprob: -12.625061988830566
    4. '(self' → logprob: -16.37506103515625
    5. '[
' → logprob: -16.75006103515625
    6. ' self' → logprob: -17.75006103515625
    7. '[x' → logprob: -18.50006103515625
    8. '[parent' → logprob: -19.75006103515625
    9. '[this' → logprob: -19.87506103515625
    10. '	self' → logprob: -20.25006103515625

Token 221: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -2.3438327843905427e-05
    2. 'parent' → logprob: -11.37502384185791
    3. '.x' → logprob: -12.12502384185791
    4. '.' → logprob: -12.50002384185791
    5. '.self' → logprob: -13.87502384185791
    6. 'self' → logprob: -14.37502384185791
    7. '[parent' → logprob: -14.75002384185791
    8. '.Parent' → logprob: -15.37502384185791
    9. '[x' → logprob: -15.50002384185791
    10. '.
' → logprob: -15.87502384185791

Token 222: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0004929834394715726
    2. 'x' → logprob: -7.625493049621582
    3. '[self' → logprob: -12.500493049621582
    4. '[
' → logprob: -14.625493049621582
    5. '[' → logprob: -14.750493049621582
    6. ' x' → logprob: -16.000492095947266
    7. '(x' → logprob: -16.500492095947266
    8. ']' → logprob: -16.625492095947266
    9. '{x' → logprob: -17.000492095947266
    10. '```' → logprob: -17.000492095947266

Token 223: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015380734112113714
    2. '[x' → logprob: -6.751538276672363
    3. ']
' → logprob: -8.501538276672363
    4. 'x' → logprob: -9.001538276672363
    5. ']]' → logprob: -10.251538276672363
    6. ' ]' → logprob: -12.626538276672363
    7. '])' → logprob: -13.751538276672363
    8. ']

' → logprob: -14.626538276672363
    9. ')]' → logprob: -15.376538276672363
    10. '(x' → logprob: -15.376538276672363

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005364707321859896
    2. 'x' → logprob: -8.375536918640137
    3. ' x' → logprob: -8.750536918640137
    4. '       ' → logprob: -9.125536918640137
    5. '   ' → logprob: -10.375536918640137
    6. '               ' → logprob: -12.250536918640137
    7. '          ' → logprob: -14.375536918640137
    8. '         ' → logprob: -15.000536918640137
    9. '	       ' → logprob: -15.250536918640137
    10. '
' → logprob: -15.250536918640137

Token 225: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -9.615255839889869e-05
    2. ' x' → logprob: -9.250096321105957
    3. '           ' → logprob: -19.00009536743164
    4. '	x' → logprob: -19.75009536743164
    5. '   ' → logprob: -20.87509536743164
    6. '       ' → logprob: -22.62509536743164
    7. ')x' → logprob: -23.62509536743164
    8. '               ' → logprob: -23.75009536743164
    9. '_x' → logprob: -24.37509536743164
    10. ' ' → logprob: -24.37509536743164

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38690099120140076
    2. ' =' → logprob: -1.1369010210037231
    3. ')' → logprob: -11.011900901794434
    4. ']' → logprob: -12.261900901794434
    5. ' ' → logprob: -12.761900901794434
    6. ' +=' → logprob: -13.261900901794434
    7. ' =
' → logprob: -14.386900901794434
    8. ' |=' → logprob: -14.386900901794434
    9. ',' → logprob: -14.636900901794434
    10. '.=' → logprob: -15.011900901794434

Token 227: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815006136894226
    2. ' self' → logprob: -4.0181498527526855
    3. '	self' → logprob: -17.018150329589844
    4. '[self' → logprob: -17.518150329589844
    5. '   ' → logprob: -17.768150329589844
    6. '(self' → logprob: -18.143150329589844
    7. ' ' → logprob: -18.893150329589844
    8. 'parent' → logprob: -19.768150329589844
    9. 's' → logprob: -20.143150329589844
    10. '    ' → logprob: -20.393150329589844

Token 228: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -3.726595241460018e-05
    2. 'parent' → logprob: -10.25003719329834
    3. '.' → logprob: -13.25003719329834
    4. '[parent' → logprob: -17.000038146972656
    5. ' parent' → logprob: -17.875038146972656
    6. '	parent' → logprob: -18.500038146972656
    7. '.Parent' → logprob: -19.125038146972656
    8. '_parent' → logprob: -19.125038146972656
    9. ',parent' → logprob: -20.000038146972656
    10. '.user' → logprob: -20.000038146972656

Token 229: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0001916200271807611
    2. 'x' → logprob: -9.125191688537598
    3. '[self' → logprob: -9.500191688537598
    4. '[' → logprob: -11.875191688537598
    5. '[parent' → logprob: -14.750191688537598
    6. 'self' → logprob: -15.500191688537598
    7. '[
' → logprob: -16.12519073486328
    8. ' x' → logprob: -16.25019073486328
    9. '```' → logprob: -17.00019073486328
    10. ' [' → logprob: -18.12519073486328

Token 230: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08918514847755432
    2. ']' → logprob: -2.4641852378845215
    3. ')
' → logprob: -8.714184761047363
    4. '}' → logprob: -10.089184761047363
    5. ']
' → logprob: -11.089184761047363
    6. ')]' → logprob: -12.214184761047363
    7. ' )' → logprob: -12.339184761047363
    8. ')return' → logprob: -12.339184761047363
    9. '<|end|>' → logprob: -12.464184761047363
    10. '       ' → logprob: -12.964184761047363

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018329687882214785
    2. 'return' → logprob: -6.626832962036133
    3. ' return' → logprob: -7.751832962036133
    4. '   ' → logprob: -10.126832962036133
    5. '
' → logprob: -11.376832962036133
    6. '<|end|>' → logprob: -12.126832962036133
    7. '           ' → logprob: -12.876832962036133
    8. '        
' → logprob: -13.001832962036133
    9. ',' → logprob: -13.376832962036133
    10. ':return' → logprob: -13.501832962036133

Token 232: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08512449264526367
    2. ' return' → logprob: -2.5851244926452637
    3. '       ' → logprob: -5.085124492645264
    4. '   ' → logprob: -10.835124969482422
    5. 'x' → logprob: -12.710124969482422
    6. '	return' → logprob: -13.335124969482422
    7. 'eturn' → logprob: -14.460124969482422
    8. '    ' → logprob: -14.710124969482422
    9. '
' → logprob: -14.960124969482422
    10. ' ' → logprob: -14.960124969482422

Token 233: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687217235565186
    2. ' x' → logprob: -1.1368721723556519
    3. 'self' → logprob: -13.761872291564941
    4. ' self' → logprob: -15.886872291564941
    5. '	x' → logprob: -17.386871337890625
    6. ' ' → logprob: -19.011871337890625
    7. '(x' → logprob: -19.011871337890625
    8. ' ' → logprob: -19.511871337890625
    9. 'parent' → logprob: -20.011871337890625
    10. ')x' → logprob: -20.261871337890625

Token 234: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6435637474060059
    2. '
' → logprob: -0.8935637474060059
    3. '<|end|>' → logprob: -3.268563747406006
    4. '   ' → logprob: -3.893563747406006
    5. '  
' → logprob: -5.768563747406006
    6. ' 
' → logprob: -6.393563747406006
    7. '   
' → logprob: -7.018563747406006
    8. '<|end|>' → logprob: -7.893563747406006
    9. '        
' → logprob: -8.393564224243164
    10. '

' → logprob: -8.518564224243164

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009912621229887009
    2. '    
' → logprob: -5.009912490844727
    3. 'def' → logprob: -5.759912490844727
    4. '
' → logprob: -10.384912490844727
    5. ' def' → logprob: -12.134912490844727
    6. '        
' → logprob: -12.884912490844727
    7. '  
' → logprob: -13.884912490844727
    8. '   
' → logprob: -14.634912490844727
    9. '```' → logprob: -15.884912490844727
    10. ' 
' → logprob: -16.384912490844727

Token 236: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.5776860184123507e-06
    2. ' def' → logprob: -13.00000286102295
    3. 'union' → logprob: -15.12500286102295
    4. '   ' → logprob: -16.875001907348633
    5. '	def' → logprob: -21.750001907348633
    6. '    
' → logprob: -21.875001907348633
    7. '
' → logprob: -22.375001907348633
    8. ' ' → logprob: -22.625001907348633
    9. '  ' → logprob: -24.000001907348633
    10. ' union' → logprob: -24.500001907348633

Token 237: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.10022759437561035
    2. ' union' → logprob: -2.3502275943756104
    3. ' unite' → logprob: -11.100227355957031
    4. 'un' → logprob: -12.350227355957031
    5. '_union' → logprob: -13.850227355957031
    6. 'merge' → logprob: -14.975227355957031
    7. '.union' → logprob: -16.22522735595703
    8. '	union' → logprob: -17.22522735595703
    9. ' merge' → logprob: -18.85022735595703
    10. 'Union' → logprob: -18.97522735595703

Token 238: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024781543761491776
    2. '(' → logprob: -6.002478122711182
    3. 'self' → logprob: -13.62747859954834
    4. ' (' → logprob: -14.00247859954834
    5. '(
' → logprob: -14.75247859954834
    6. ' self' → logprob: -17.627477645874023
    7. '(Self' → logprob: -17.752477645874023
    8. '(s' → logprob: -18.002477645874023
    9. '(this' → logprob: -18.377477645874023
    10. '   ' → logprob: -18.627477645874023

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022165567497722805
    2. 'self' → logprob: -9.250221252441406
    3. '(x' → logprob: -9.750221252441406
    4. '(self' → logprob: -10.000221252441406
    5. ' ,' → logprob: -11.000221252441406
    6. ',x' → logprob: -12.625221252441406
    7. ')' → logprob: -14.750221252441406
    8. '(' → logprob: -15.250221252441406
    9. ' self' → logprob: -15.500221252441406
    10. 'x' → logprob: -15.625221252441406

Token 240: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20218367874622345
    2. ' x' → logprob: -1.702183723449707
    3. 'a' → logprob: -7.577183723449707
    4. 'self' → logprob: -9.202183723449707
    5. 'u' → logprob: -9.827183723449707
    6. ' a' → logprob: -9.952183723449707
    7. ' u' → logprob: -10.327183723449707
    8. ' self' → logprob: -10.702183723449707
    9. ')' → logprob: -15.202183723449707
    10. ' ' → logprob: -15.702183723449707

Token 241: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009098324924707413
    2. ':' → logprob: -4.759098529815674
    3. ' ,' → logprob: -7.759098529815674
    4. ':int' → logprob: -9.884098052978516
    5. ',int' → logprob: -12.509098052978516
    6. '   ' → logprob: -13.759098052978516
    7. ' :' → logprob: -14.134098052978516
    8. ',
' → logprob: -15.759098052978516
    9. 'int' → logprob: -16.509098052978516
    10. ':,' → logprob: -17.509098052978516

Token 242: ' int' (ID: 677)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3310612440109253
    2. 'y' → logprob: -1.3310612440109253
    3. 'int' → logprob: -4.081061363220215
    4. ' int' → logprob: -7.331061363220215
    5. ' ' → logprob: -10.331061363220215
    6. ',' → logprob: -10.581061363220215
    7. 'x' → logprob: -11.581061363220215
    8. '<|end|>' → logprob: -11.706061363220215
    9. '   ' → logprob: -12.456061363220215
    10. ' x' → logprob: -12.831061363220215

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -11.375011444091797
    3. ',int' → logprob: -17.500011444091797
    4. ',
' → logprob: -18.750011444091797
    5. '   ' → logprob: -18.875011444091797
    6. ',x' → logprob: -20.500011444091797
    7. '‌,' → logprob: -21.000011444091797
    8. ':' → logprob: -21.250011444091797
    9. ',y' → logprob: -21.500011444091797
    10. ',

' → logprob: -21.750011444091797

Token 244: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.57594233751297
    2. 'y' → logprob: -0.82594233751297
    3. ' ' → logprob: -13.450942039489746
    4. '    ' → logprob: -14.200942039489746
    5. '   ' → logprob: -14.950942039489746
    6. '	y' → logprob: -15.200942039489746
    7. '  ' → logprob: -17.325942993164062
    8. '
' → logprob: -17.450942993164062
    9. 'x' → logprob: -17.700942993164062
    10. 'Y' → logprob: -17.950942993164062

Token 245: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05242615193128586
    2. ')' → logprob: -3.1774260997772217
    3. '):' → logprob: -4.677426338195801
    4. '):
' → logprob: -10.0524263381958
    5. '   ' → logprob: -11.0524263381958
    6. ':int' → logprob: -11.0524263381958
    7. ' )' → logprob: -13.6774263381958
    8. ' ):' → logprob: -13.6774263381958
    9. ' :' → logprob: -14.4274263381958
    10. '):
' → logprob: -14.8024263381958

Token 246: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24355214834213257
    2. ')' → logprob: -2.2435522079467773
    3. ' int' → logprob: -2.7435522079467773
    4. ' x' → logprob: -3.6185522079467773
    5. 'x' → logprob: -4.243552207946777
    6. ' )' → logprob: -5.493552207946777
    7. '   ' → logprob: -9.368552207946777
    8. '):' → logprob: -9.368552207946777
    9. '):
' → logprob: -9.618552207946777
    10. ' ' → logprob: -9.743552207946777

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011081460979767144
    2. '):' → logprob: -9.125110626220703
    3. ' )' → logprob: -13.750110626220703
    4. '):
' → logprob: -14.500110626220703
    5. ':' → logprob: -16.375110626220703
    6. '   ' → logprob: -17.625110626220703
    7. ')->' → logprob: -17.875110626220703
    8. ')
' → logprob: -19.125110626220703
    9. '`)' → logprob: -19.125110626220703
    10. '）' → logprob: -19.500110626220703

Token 248: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01130516268312931
    2. '):' → logprob: -4.511305332183838
    3. ')' → logprob: -8.63630485534668
    4. ' :' → logprob: -9.63630485534668
    5. ':int' → logprob: -11.76130485534668
    6. '):
' → logprob: -13.13630485534668
    7. ':
' → logprob: -13.26130485534668
    8. '   ' → logprob: -14.13630485534668
    9. ' ):' → logprob: -14.26130485534668
    10. '():' → logprob: -14.63630485534668

Token 249: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5979461073875427
    2. ' None' → logprob: -1.5979461669921875
    3. 'int' → logprob: -1.7229461669921875
    4. ' int' → logprob: -3.2229461669921875
    5. 'bool' → logprob: -4.3479461669921875
    6. 'True' → logprob: -4.8479461669921875
    7. ' bool' → logprob: -5.2229461669921875
    8. ' True' → logprob: -6.4729461669921875
    9. ')' → logprob: -6.5979461669921875
    10. ' ' → logprob: -8.722946166992188

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04473256319761276
    2. ':
' → logprob: -3.7947325706481934
    3. '       ' → logprob: -4.669732570648193
    4. '):' → logprob: -5.294732570648193
    5. '(self' → logprob: -5.669732570648193
    6. '):
' → logprob: -5.919732570648193
    7. ')' → logprob: -8.294732093811035
    8. '   ' → logprob: -8.669732093811035
    9. '<|end|>' → logprob: -9.169732093811035
    10. '(' → logprob: -10.169732093811035

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05085693299770355
    2. ' ' → logprob: -4.175857067108154
    3. '   ' → logprob: -4.175857067108154
    4. ' 
' → logprob: -4.925857067108154
    5. '<|end|>' → logprob: -5.050857067108154
    6. '  
' → logprob: -6.550857067108154
    7. '    ' → logprob: -7.175857067108154
    8. ' x' → logprob: -7.550857067108154
    9. ')' → logprob: -7.800857067108154
    10. '  ' → logprob: -7.925857067108154

Token 252: ' rx' (ID: 37623)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008432069793343544
    2. 'root' → logprob: -5.758431911468506
    3. ' x' → logprob: -5.758431911468506
    4. '   ' → logprob: -6.508431911468506
    5. 'rx' (adapté à ' rx') → logprob: -7.883431911468506
    6. 'xr' → logprob: -9.008432388305664
    7. 'px' → logprob: -10.008432388305664
    8. '       ' → logprob: -11.008432388305664
    9. ' ' → logprob: -11.258432388305664
    10. ' root' → logprob: -11.883432388305664

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889342308044434
    2. '=' → logprob: -2.5788934230804443
    3. ',' → logprob: -12.578893661499023
    4. ' ' → logprob: -16.578893661499023
    5. '=self' → logprob: -16.578893661499023
    6. '   ' → logprob: -17.453893661499023
    7. ')' → logprob: -17.453893661499023
    8. ' =
' → logprob: -17.703893661499023
    9. 'x' → logprob: -17.953893661499023
    10. '＝' → logprob: -18.828893661499023

Token 254: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245595395565033
    2. ' self' → logprob: -3.7732455730438232
    3. '(self' → logprob: -17.648244857788086
    4. '   ' → logprob: -17.773244857788086
    5. '	self' → logprob: -18.523244857788086
    6. '[self' → logprob: -19.148244857788086
    7. '       ' → logprob: -19.148244857788086
    8. '=self' → logprob: -20.023244857788086
    9. ' ' → logprob: -20.148244857788086
    10. 'this' → logprob: -21.523244857788086

Token 255: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -6.289473822107539e-05
    2. '.' → logprob: -9.875062942504883
    3. 'find' → logprob: -11.625062942504883
    4. '.parent' → logprob: -13.625062942504883
    5. ' .' → logprob: -13.875062942504883
    6. '.findall' → logprob: -15.375062942504883
    7. '=find' → logprob: -17.125062942504883
    8. '.
' → logprob: -17.625062942504883
    9. '.union' → logprob: -18.125062942504883
    10. ').' → logprob: -18.750062942504883

Token 256: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020532844064291567
    2. '(' → logprob: -8.500205039978027
    3. 'x' → logprob: -13.250205039978027
    4. '(
' → logprob: -18.250205993652344
    5. ' (' → logprob: -18.875205993652344
    6. '(y' → logprob: -20.125205993652344
    7. ')' → logprob: -20.750205993652344
    8. '(

' → logprob: -21.125205993652344
    9. ',x' → logprob: -21.375205993652344
    10. ' x' → logprob: -21.750205993652344

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011052536778151989
    2. ')
' → logprob: -4.51105260848999
    3. ')
' → logprob: -12.511052131652832
    4. ')

' → logprob: -14.636052131652832
    5. ' )' → logprob: -14.636052131652832
    6. ' )
' → logprob: -15.886052131652832
    7. ')x' → logprob: -17.88605308532715
    8. '       ' → logprob: -18.13605308532715
    9. '),' → logprob: -18.38605308532715
    10. ');' → logprob: -18.51105308532715

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1266721785068512
    2. ',' → logprob: -2.8766722679138184
    3. ' if' → logprob: -3.3766722679138184
    4. '<|end|>' → logprob: -4.001672267913818
    5. '        ' → logprob: -6.126672267913818
    6. '
' → logprob: -6.626672267913818
    7. ' rx' → logprob: -7.001672267913818
    8. 'x' → logprob: -7.126672267913818
    9. 'if' → logprob: -7.251672267913818
    10. ')' → logprob: -7.751672267913818

Token 259: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' (adapté à ' ry') → logprob: -0.10024075955152512
    2. ' ry' → logprob: -2.350240707397461
    3. '   ' → logprob: -10.475240707397461
    4. '       ' → logprob: -13.475240707397461
    5. 'rys' → logprob: -13.975240707397461
    6. '    ' → logprob: -13.975240707397461
    7. ' ' → logprob: -14.225240707397461
    8. '
' → logprob: -14.475240707397461
    9. '    
' → logprob: -14.975240707397461
    10. '  ' → logprob: -15.100240707397461

Token 260: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5344016551971436
    2. '=' → logprob: -1.5344016551971436
    3. ' =' → logprob: -1.9094016551971436
    4. ')' → logprob: -3.5344016551971436
    5. '==' → logprob: -4.034401893615723
    6. '<|end|>' → logprob: -7.034401893615723
    7. ' if' → logprob: -7.284401893615723
    8. ' ' → logprob: -7.784401893615723
    9. ':' → logprob: -8.284401893615723
    10. ')==' → logprob: -8.409401893615723

Token 261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44860440492630005
    2. 'y' → logprob: -1.4486043453216553
    3. ' self' → logprob: -2.1986043453216553
    4. ' y' → logprob: -4.198604583740234
    5. '(self' → logprob: -7.448604583740234
    6. '[self' → logprob: -11.573604583740234
    7. '(y' → logprob: -11.698604583740234
    8. '   ' → logprob: -12.823604583740234
    9. '       ' → logprob: -13.073604583740234
    10. '	self' → logprob: -13.948604583740234

Token 262: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.9797055721282959
    2. 'y' → logprob: -1.229705572128296
    3. '.find' → logprob: -1.354705572128296
    4. '[y' → logprob: -3.104705572128296
    5. '(y' → logprob: -3.854705572128296
    6. ' y' → logprob: -5.104705810546875
    7. '.' → logprob: -7.104705810546875
    8. ')' → logprob: -7.854705810546875
    9. '       ' → logprob: -8.729705810546875
    10. '   ' → logprob: -8.729705810546875

Token 263: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00014370749704539776
    2. 'y' → logprob: -9.000144004821777
    3. '(' → logprob: -10.875144004821777
    4. ')' → logprob: -14.500144004821777
    5. '(x' → logprob: -15.125144004821777
    6. ' (' → logprob: -15.250144004821777
    7. '(
' → logprob: -15.750144004821777
    8. ' y' → logprob: -16.25014305114746
    9. '   ' → logprob: -17.12514305114746
    10. '(r' → logprob: -18.12514305114746

Token 264: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008619185537099838
    2. ')
' → logprob: -4.75861930847168
    3. ')
' → logprob: -12.88361930847168
    4. '):
' → logprob: -14.00861930847168
    5. ' )' → logprob: -14.50861930847168
    6. ')

' → logprob: -15.25861930847168
    7. '       ' → logprob: -15.63361930847168
    8. '):' → logprob: -16.63361930847168
    9. '),' → logprob: -17.00861930847168
    10. ' )
' → logprob: -17.38361930847168

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01114685833454132
    2. '
' → logprob: -5.3861470222473145
    3. '<|end|>' → logprob: -5.7611470222473145
    4. ' if' → logprob: -6.2611470222473145
    5. ':
' → logprob: -7.5111470222473145
    6. '        ' → logprob: -8.636146545410156
    7. ':' → logprob: -8.886146545410156
    8. ')' → logprob: -8.886146545410156
    9. 'if' → logprob: -9.511146545410156
    10. '        
' → logprob: -9.636146545410156

Token 266: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22312141954898834
    2. '       ' → logprob: -1.7231214046478271
    3. 'if' (adapté à ' if') → logprob: -3.848121404647827
    4. '        ' → logprob: -9.723121643066406
    5. '   ' → logprob: -10.723121643066406
    6. ' ' → logprob: -10.848121643066406
    7. '    ' → logprob: -10.973121643066406
    8. '	if' → logprob: -11.098121643066406
    9. ' 
' → logprob: -12.348121643066406
    10. 'If' → logprob: -12.723121643066406

Token 267: ' rx' (ID: 37623)
  Prédit: ' rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rx' → logprob: -0.00033713103039190173
    2. 'rx' → logprob: -8.000337600708008
    3. '(rx' → logprob: -13.375337600708008
    4. ' ry' → logprob: -16.500337600708008
    5. '_rx' → logprob: -18.250337600708008
    6. ' ' → logprob: -18.750337600708008
    7. '.rx' → logprob: -19.250337600708008
    8. ' rv' → logprob: -19.375337600708008
    9. ' rq' → logprob: -19.875337600708008
    10. ' rp' → logprob: -20.125337600708008

Token 268: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.621178388595581
    2. ' !=' → logprob: -0.871178388595581
    3. '==' → logprob: -3.371178388595581
    4. '!=' → logprob: -4.62117862701416
    5. '=' → logprob: -10.62117862701416
    6. ' ' → logprob: -11.62117862701416
    7. ')' → logprob: -12.99617862701416
    8. ' ' → logprob: -13.62117862701416
    9. '<|end|>' → logprob: -14.37117862701416
    10. '```' → logprob: -14.62117862701416

Token 269: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.12692831456661224
    2. ' ry' → logprob: -2.1269283294677734
    3. '
' → logprob: -17.126928329467773
    4. 'rys' → logprob: -17.126928329467773
    5. 'ryd' → logprob: -17.501928329467773
    6. '   ' → logprob: -17.501928329467773
    7. ' ' → logprob: -17.626928329467773
    8. 'ryl' → logprob: -18.251928329467773
    9. 'Ry' → logprob: -18.501928329467773
    10. '       ' → logprob: -18.751928329467773

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019463682547211647
    2. ':
' → logprob: -6.251946449279785
    3. '):' → logprob: -11.251946449279785
    4. ' :' → logprob: -13.251946449279785
    5. ' and' → logprob: -13.626946449279785
    6. '):
' → logprob: -13.751946449279785
    7. ':

' → logprob: -15.376946449279785
    8. ':
' → logprob: -15.626946449279785
    9. '       ' → logprob: -16.00194549560547
    10. ',' → logprob: -16.50194549560547

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015062130114529282
    2. ':' → logprob: -9.625150680541992
    3. '       ' → logprob: -10.750150680541992
    4. '<|end|>' → logprob: -10.875150680541992
    5. ',' → logprob: -11.375150680541992
    6. ':
' → logprob: -11.875150680541992
    7. '```' → logprob: -12.125150680541992
    8. '            
' → logprob: -12.375150680541992
    9. ' if' → logprob: -12.875150680541992
    10. '               ' → logprob: -13.125150680541992

Token 272: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0069455336779356
    2. 'if' (adapté à ' if') → logprob: -5.006945610046387
    3. '           ' → logprob: -8.381945610046387
    4. '               ' → logprob: -14.506945610046387
    5. '            ' → logprob: -15.256945610046387
    6. 'If' → logprob: -15.506945610046387
    7. '	if' → logprob: -16.50694465637207
    8. '```' → logprob: -17.00694465637207
    9. '    ' → logprob: -17.25694465637207
    10. '       ' → logprob: -17.50694465637207

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687190413475037
    2. ' self' → logprob: -1.1368719339370728
    3. '(self' → logprob: -14.511872291564941
    4. '[self' → logprob: -15.511872291564941
    5. '	self' → logprob: -16.011871337890625
    6. '
' → logprob: -17.261871337890625
    7. '   ' → logprob: -17.511871337890625
    8. ' ' → logprob: -17.761871337890625
    9. 'Self' → logprob: -17.886871337890625
    10. 's' → logprob: -18.511871337890625

Token 274: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.128163257315464e-07
    2. 'rank' → logprob: -15.5
    3. ' .' → logprob: -17.125
    4. '.' → logprob: -17.625
    5. 'ank' → logprob: -19.25
    6. ' rank' → logprob: -19.375
    7. '(rank' → logprob: -19.875
    8. '_rank' → logprob: -20.0
    9. '.r' → logprob: -20.625
    10. '.
' → logprob: -22.875

Token 275: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. ' [' → logprob: -13.875001907348633
    3. 'rx' → logprob: -15.500001907348633
    4. ' rx' → logprob: -15.500001907348633
    5. '(rx' → logprob: -15.500001907348633
    6. '[
' → logprob: -17.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. ' ' → logprob: -19.250001907348633
    9. '
' → logprob: -20.000001907348633
    10. '[root' → logprob: -20.125001907348633

Token 276: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -10.500030517578125
    3. ' rx' → logprob: -13.500030517578125
    4. '(rx' → logprob: -14.375030517578125
    5. '_rx' → logprob: -14.875030517578125
    6. 'self' → logprob: -16.625030517578125
    7. '.rx' → logprob: -17.000030517578125
    8. 'ry' → logprob: -17.625030517578125
    9. 'Rx' → logprob: -18.125030517578125
    10. '```' → logprob: -19.250030517578125

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.042189933359622955
    2. '<' → logprob: -3.917189836502075
    3. ' <' → logprob: -3.917189836502075
    4. ']<' → logprob: -7.167190074920654
    5. ' ]' → logprob: -7.667190074920654
    6. '[' → logprob: -8.542189598083496
    7. '>' → logprob: -9.667189598083496
    8. ' ' → logprob: -11.542189598083496
    9. ']>' → logprob: -12.917189598083496
    10. ')' → logprob: -13.042189598083496

Token 278: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1002156138420105
    2. '<' → logprob: -2.3502156734466553
    3. '>' → logprob: -12.350215911865234
    4. '[' → logprob: -13.475215911865234
    5. ' ' → logprob: -13.725215911865234
    6. ' >' → logprob: -14.225215911865234
    7. '<class' → logprob: -15.225215911865234
    8. ']' → logprob: -15.600215911865234
    9. ')' → logprob: -15.600215911865234
    10. ' ' → logprob: -16.100215911865234

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759478807449341
    2. ' self' → logprob: -0.8259478807449341
    3. ' ry' → logprob: -12.075947761535645
    4. '	self' → logprob: -14.075947761535645
    5. 'ry' → logprob: -14.700947761535645
    6. '
' → logprob: -15.200947761535645
    7. '   ' → logprob: -15.325947761535645
    8. ' ' → logprob: -15.325947761535645
    9. '[self' → logprob: -15.325947761535645
    10. '=self' → logprob: -15.575947761535645

Token 280: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.0079954257234931
    2. 'rank' → logprob: -5.00799560546875
    3. ' rank' → logprob: -6.75799560546875
    4. '_rank' → logprob: -9.38299560546875
    5. '[' → logprob: -11.25799560546875
    6. '(rank' → logprob: -12.13299560546875
    7. '.' → logprob: -12.38299560546875
    8. 'Rank' → logprob: -12.75799560546875
    9. 'ank' → logprob: -12.75799560546875
    10. ' .' → logprob: -13.50799560546875

Token 281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' ry' → logprob: -13.625001907348633
    3. 'ry' → logprob: -14.875001907348633
    4. ' [' → logprob: -16.250001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '       ' → logprob: -18.125001907348633
    8. '```' → logprob: -18.500001907348633
    9. '[self' → logprob: -19.000001907348633
    10. '[r' → logprob: -19.375001907348633

Token 282: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -6.630610641877865e-06
    2. ' ry' → logprob: -12.000006675720215
    3. '
' → logprob: -15.875006675720215
    4. ']' → logprob: -17.0000057220459
    5. '[' → logprob: -17.6250057220459
    6. 'ryl' → logprob: -18.0000057220459
    7. 'ryd' → logprob: -18.1250057220459
    8. 'riy' → logprob: -18.3750057220459
    9. '

' → logprob: -18.7500057220459
    10. '   ' → logprob: -18.8750057220459

Token 283: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5761968493461609
    2. ']:
' → logprob: -0.8261968493461609
    3. ':' → logprob: -9.451196670532227
    4. ']:
' → logprob: -9.451196670532227
    5. ']' → logprob: -9.576196670532227
    6. ':
' → logprob: -10.951196670532227
    7. ']:

' → logprob: -11.826196670532227
    8. '       ' → logprob: -13.701196670532227
    9. ']:


' → logprob: -13.951196670532227
    10. ' ]' → logprob: -14.076196670532227

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04918041080236435
    2. '           ' → logprob: -3.549180507659912
    3. ':
' → logprob: -4.049180507659912
    4. '):
' → logprob: -7.674180507659912
    5. ':' → logprob: -7.924180507659912
    6. ',' → logprob: -8.424180030822754
    7. ' :
' → logprob: -9.174180030822754
    8. ' x' → logprob: -9.299180030822754
    9. '<|end|>' → logprob: -9.424180030822754
    10. ' self' → logprob: -9.549180030822754

Token 285: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20581337809562683
    2. 'self' (adapté à ' self') → logprob: -1.7058134078979492
    3. '               ' → logprob: -5.455813407897949
    4. '           ' → logprob: -9.83081340789795
    5. ' rx' → logprob: -10.20581340789795
    6. '                   ' → logprob: -11.33081340789795
    7. '   ' → logprob: -11.83081340789795
    8. '	self' → logprob: -12.83081340789795
    9. '[self' → logprob: -13.33081340789795
    10. 'rx' → logprob: -14.08081340789795

Token 286: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -6.027225754223764e-05
    2. 'parent' → logprob: -9.750060081481934
    3. '_parent' → logprob: -14.500060081481934
    4. '[parent' → logprob: -14.750060081481934
    5. '.' → logprob: -14.875060081481934
    6. ' .' → logprob: -15.750060081481934
    7. '.Parent' → logprob: -16.37506103515625
    8. ' parent' → logprob: -16.50006103515625
    9. ',parent' → logprob: -16.62506103515625
    10. '	parent' → logprob: -16.87506103515625

Token 287: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '(rx' → logprob: -18.375
    3. '```' → logprob: -18.625
    4. ' [' → logprob: -18.875
    5. 'rx' → logprob: -19.125
    6. '   ' → logprob: -20.25
    7. '[r' → logprob: -21.0
    8. '[self' → logprob: -21.125
    9. '][' → logprob: -21.125
    10. '       ' → logprob: -21.375

Token 288: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -1.1472419600977446e-06
    2. ' rx' → logprob: -14.500000953674316
    3. '[' → logprob: -15.125000953674316
    4. '_rx' → logprob: -16.500001907348633
    5. 'tx' → logprob: -16.625001907348633
    6. 'ry' → logprob: -16.875001907348633
    7. 'Rx' → logprob: -16.875001907348633
    8. '(rx' → logprob: -17.250001907348633
    9. 'x' → logprob: -17.375001907348633
    10. 'rv' → logprob: -18.375001907348633

Token 289: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003046642756089568
    2. ' ]' → logprob: -6.25304651260376
    3. ']=' → logprob: -7.00304651260376
    4. ' =' → logprob: -9.003046989440918
    5. '=' → logprob: -9.378046989440918
    6. ')' → logprob: -14.878046989440918
    7. ']+=' → logprob: -16.1280460357666
    8. '[' → logprob: -16.6280460357666
    9. '=y' → logprob: -16.6280460357666
    10. ' ' → logprob: -16.8780460357666

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048602476716041565
    2. '=' → logprob: -3.04860258102417
    3. '=y' → logprob: -11.423602104187012
    4. ' =
' → logprob: -12.673602104187012
    5. ' ' → logprob: -14.923602104187012
    6. ']' → logprob: -16.048603057861328
    7. '=
' → logprob: -16.673603057861328
    8. 'y' → logprob: -16.798603057861328
    9. ']=' → logprob: -17.173603057861328
    10. ')' → logprob: -17.173603057861328

Token 291: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.5759395956993103
    2. ' ry' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.950939178466797
    4. ' Ry' → logprob: -18.200939178466797
    5. 'ryd' → logprob: -18.325939178466797
    6. ' ' → logprob: -18.575939178466797
    7. 'ri' → logprob: -18.825939178466797
    8. 'ryl' → logprob: -18.825939178466797
    9. '   ' → logprob: -18.950939178466797
    10. '
' → logprob: -19.075939178466797

Token 292: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.045176912099123
    2. 'else' → logprob: -3.4201769828796387
    3. '               ' → logprob: -5.670176982879639
    4. ' else' → logprob: -5.795176982879639
    5. 'elif' → logprob: -5.920176982879639
    6. '
' → logprob: -6.920176982879639
    7. '<|end|>' → logprob: -7.295176982879639
    8. '       ' → logprob: -8.42017650604248
    9. '            
' → logprob: -8.67017650604248
    10. '\n' → logprob: -9.54517650604248

Token 294: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22280943393707275
    2. '           ' → logprob: -2.222809314727783
    3. ' else' → logprob: -2.472809314727783
    4. 'elif' (adapté à ' elif') → logprob: -4.972809314727783
    5. ' elif' → logprob: -9.222809791564941
    6. '       ' → logprob: -10.472809791564941
    7. '               ' → logprob: -10.847809791564941
    8. '
' → logprob: -12.722809791564941
    9. '            
' → logprob: -13.097809791564941
    10. '   ' → logprob: -13.472809791564941

Token 295: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021400451660156
    2. ' self' → logprob: -2.3502140045166016
    3. '[self' → logprob: -12.850214004516602
    4. '(self' → logprob: -12.975214004516602
    5. 's' → logprob: -14.100214004516602
    6. '	self' → logprob: -14.100214004516602
    7. '<|end|>' → logprob: -15.100214004516602
    8. 'Self' → logprob: -15.850214004516602
    9. '           ' → logprob: -15.850214004516602
    10. '   ' → logprob: -16.1002140045166

Token 296: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.013072818517684937
    2. 'rank' → logprob: -4.388072967529297
    3. '_rank' → logprob: -7.763072967529297
    4. ' rank' → logprob: -9.513072967529297
    5. '[' → logprob: -10.013072967529297
    6. '(rank' → logprob: -11.138072967529297
    7. 'Rank' → logprob: -13.138072967529297
    8. 'ank' → logprob: -13.513072967529297
    9. '
' → logprob: -14.888072967529297
    10. '.' → logprob: -15.638072967529297

Token 297: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -14.625000953674316
    3. '```' → logprob: -18.25
    4. '(rx' → logprob: -19.125
    5. ')[' → logprob: -19.25
    6. 's' → logprob: -19.25
    7. ' ' → logprob: -19.75
    8. '[
' → logprob: -19.75
    9. '   ' → logprob: -19.75
    10. '>[' → logprob: -19.875

Token 298: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.6940239667892456
    2. 'rx' → logprob: -0.6940239667892456
    3. '[' → logprob: -7.069024085998535
    4. ' ry' → logprob: -10.944024085998535
    5. ' rx' → logprob: -12.694024085998535
    6. '(rx' → logprob: -14.319024085998535
    7. 'rv' → logprob: -14.694024085998535
    8. '_rx' → logprob: -14.944024085998535
    9. 'rz' → logprob: -15.069024085998535
    10. 'ryd' → logprob: -15.194024085998535

Token 299: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05409860983490944
    2. '<' → logprob: -3.054098606109619
    3. ']' → logprob: -5.929098606109619
    4. '>' → logprob: -6.929098606109619
    5. ' >' → logprob: -7.054098606109619
    6. '[' → logprob: -7.179098606109619
    7. ']<' → logprob: -8.554099082946777
    8. ']>' → logprob: -11.679099082946777
    9. '<x' → logprob: -11.929099082946777
    10. ' ]' → logprob: -11.929099082946777

Token 300: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026572786271572113
    2. '<' → logprob: -3.6515727043151855
    3. ' >' → logprob: -8.776573181152344
    4. '[' → logprob: -9.651573181152344
    5. '>' → logprob: -10.151573181152344
    6. '<x' → logprob: -12.526573181152344
    7. ']' → logprob: -12.901573181152344
    8. ' ' → logprob: -13.401573181152344
    9. ')' → logprob: -14.026573181152344
    10. ':' → logprob: -14.151573181152344

Token 301: ' self' (ID: 1051)
  Prédit: ' rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rx' → logprob: -0.20462611317634583
    2. 'rx' → logprob: -1.7046260833740234
    3. 'self' → logprob: -6.079626083374023
    4. ' self' → logprob: -7.079626083374023
    5. '[' → logprob: -10.704626083374023
    6. 'rank' → logprob: -10.704626083374023
    7. '_rx' → logprob: -11.329626083374023
    8. '[self' → logprob: -11.704626083374023
    9. ' ry' → logprob: -12.704626083374023
    10. '(rx' → logprob: -12.704626083374023

Token 302: '.rank' (ID: 96793)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.12411593645811081
    2. '[' → logprob: -2.8741159439086914
    3. ' rx' → logprob: -3.1241159439086914
    4. 'rank' → logprob: -4.124115943908691
    5. ' rank' → logprob: -9.374115943908691
    6. 'self' → logprob: -12.249115943908691
    7. '.rank' → logprob: -12.499115943908691
    8. '_rx' → logprob: -12.874115943908691
    9. '.rx' → logprob: -13.374115943908691
    10. '(rx' → logprob: -13.624115943908691

Token 303: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. 'rx' → logprob: -13.875001907348633
    3. ' [' → logprob: -14.625001907348633
    4. ' rx' → logprob: -15.125001907348633
    5. '[
' → logprob: -15.375001907348633
    6. 'x' → logprob: -17.250001907348633
    7. '```' → logprob: -17.625001907348633
    8. '(rx' → logprob: -17.625001907348633
    9. 'import' → logprob: -18.000001907348633
    10. '_rx' → logprob: -18.250001907348633

Token 304: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -1.688212614681106e-05
    2. ' rx' → logprob: -11.000017166137695
    3. '[' → logprob: -16.875017166137695
    4. '_rx' → logprob: -17.875017166137695
    5. '(rx' → logprob: -18.000017166137695
    6. 'x' → logprob: -19.000017166137695
    7. '.rx' → logprob: -19.375017166137695
    8. 'rc' → logprob: -20.125017166137695
    9. 'Rx' → logprob: -20.125017166137695
    10. 'tx' → logprob: -20.625017166137695

Token 305: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09493175148963928
    2. ':
' → logprob: -2.5949318408966064
    3. '):
' → logprob: -5.094931602478027
    4. ']:
' → logprob: -5.219931602478027
    5. ']:' → logprob: -6.219931602478027
    6. '       ' → logprob: -6.719931602478027
    7. '):' → logprob: -7.219931602478027
    8. '               ' → logprob: -8.844931602478027
    9. ' :
' → logprob: -9.469931602478027
    10. '           ' → logprob: -9.469931602478027

Token 306: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22055684030056
    2. '               ' → logprob: -2.0955567359924316
    3. ':
' → logprob: -2.5955567359924316
    4. '           ' → logprob: -8.59555721282959
    5. ':
' → logprob: -9.97055721282959
    6. ':

' → logprob: -10.97055721282959
    7. '):
' → logprob: -10.97055721282959
    8. '       ' → logprob: -11.22055721282959
    9. ',' → logprob: -11.97055721282959
    10. '              ' → logprob: -12.22055721282959

Token 307: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06221247464418411
    2. 'self' (adapté à ' self') → logprob: -2.8122124671936035
    3. '               ' → logprob: -8.562212944030762
    4. '           ' → logprob: -10.062212944030762
    5. '[self' → logprob: -12.187212944030762
    6. '(self' → logprob: -13.687212944030762
    7. '	self' → logprob: -13.687212944030762
    8. ' ' → logprob: -14.187212944030762
    9. ' ' → logprob: -14.937212944030762
    10. '                   ' → logprob: -15.062212944030762

Token 308: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.3306015716807451e-05
    2. 'parent' → logprob: -11.37501335144043
    3. '.' → logprob: -14.12501335144043
    4. '[parent' → logprob: -14.62501335144043
    5. '	parent' → logprob: -15.75001335144043
    6. ' .' → logprob: -15.75001335144043
    7. '_parent' → logprob: -16.25001335144043
    8. 'self' → logprob: -16.62501335144043
    9. ' parent' → logprob: -16.75001335144043
    10. '.self' → logprob: -17.25001335144043

Token 309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[self' → logprob: -16.5
    3. '=' → logprob: -17.875
    4. '[y' → logprob: -18.125
    5. ' [' → logprob: -18.5
    6. '[root' → logprob: -18.5
    7. '[r' → logprob: -19.25
    8. '][' → logprob: -19.375
    9. 'ry' → logprob: -19.5
    10. ' ry' → logprob: -19.625

Token 310: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -6.372916686814278e-05
    2. 'rx' → logprob: -9.7500638961792
    3. '
' → logprob: -13.2500638961792
    4. ' ry' → logprob: -13.3750638961792
    5. '   ' → logprob: -13.6250638961792
    6. '     ' → logprob: -15.1250638961792
    7. '       ' → logprob: -15.7500638961792
    8. ' ' → logprob: -16.500062942504883
    9. '```' → logprob: -16.875062942504883
    10. '           ' → logprob: -17.000062942504883

Token 311: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2092025727033615
    2. '=' → logprob: -2.209202527999878
    3. ' =' → logprob: -2.584202527999878
    4. ']=' → logprob: -5.834202766418457
    5. '[' → logprob: -8.084202766418457
    6. ' ]' → logprob: -8.209202766418457
    7. ')' → logprob: -11.084202766418457
    8. '}' → logprob: -14.084202766418457
    9. ')=' → logprob: -14.834202766418457
    10. ' ' → logprob: -15.209202766418457

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193214416503906
    2. '=' → logprob: -1.501932144165039
    3. ']' → logprob: -13.376932144165039
    4. '[' → logprob: -14.251932144165039
    5. ')' → logprob: -14.751932144165039
    6. ']=' → logprob: -15.251932144165039
    7. ' ' → logprob: -16.25193214416504
    8. '=
' → logprob: -17.37693214416504
    9. ' =
' → logprob: -17.75193214416504
    10. '   ' → logprob: -18.00193214416504

Token 313: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0009115827269852161
    2. ' rx' → logprob: -7.000911712646484
    3. '_rx' → logprob: -17.500911712646484
    4. 'rv' → logprob: -17.875911712646484
    5. '(rx' → logprob: -18.250911712646484
    6. 'ry' → logprob: -18.750911712646484
    7. '.rx' → logprob: -19.125911712646484
    8. 'tx' → logprob: -19.500911712646484
    9. 'Rx' → logprob: -20.500911712646484
    10. 'rs' → logprob: -20.625911712646484

Token 314: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0071021514013409615
    2. 'else' → logprob: -5.007102012634277
    3. ' else' → logprob: -7.882102012634277
    4. '       ' → logprob: -12.882102012634277
    5. 'elif' → logprob: -13.007102012634277
    6. '               ' → logprob: -14.007102012634277
    7. '<|end|>' → logprob: -14.007102012634277
    8. '          ' → logprob: -14.257102012634277
    9. '		' → logprob: -15.007102012634277
    10. '```' → logprob: -15.007102012634277

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20477990806102753
    2. 'else' → logprob: -1.704779863357544
    3. ' else' → logprob: -5.704780101776123
    4. '       ' → logprob: -11.204779624938965
    5. '```' → logprob: -11.954779624938965
    6. '		' → logprob: -13.204779624938965
    7. '          ' → logprob: -13.204779624938965
    8. '   ' → logprob: -13.329779624938965
    9. '	else' → logprob: -13.704779624938965
    10. '               ' → logprob: -13.829779624938965

Token 316: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.009322743862867355
    2. ' else' → logprob: -4.759322643280029
    3. '           ' → logprob: -7.259322643280029
    4. '	else' → logprob: -12.884323120117188
    5. '       ' → logprob: -13.634323120117188
    6. '_else' → logprob: -15.009323120117188
    7. '   ' → logprob: -15.759323120117188
    8. '```' → logprob: -16.634323120117188
    9. '               ' → logprob: -16.884323120117188
    10. 'elif' → logprob: -17.884323120117188

Token 317: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4328547716140747
    2. ':' → logprob: -1.0578547716140747
    3. '               ' → logprob: -5.682854652404785
    4. '           ' → logprob: -7.807854652404785
    5. ' :
' → logprob: -8.932854652404785
    6. ':
' → logprob: -9.307854652404785
    7. '       ' → logprob: -10.432854652404785
    8. ' :' → logprob: -10.932854652404785
    9. ':

' → logprob: -11.307854652404785
    10. ',' → logprob: -11.557854652404785

Token 318: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008725132793188095
    2. '           ' → logprob: -7.250872611999512
    3. ' self' → logprob: -8.875872611999512
    4. 'self' → logprob: -11.500872611999512
    5. '       ' → logprob: -12.875872611999512
    6. '   ' → logprob: -13.250872611999512
    7. '                   ' → logprob: -13.375872611999512
    8. '```' → logprob: -13.500872611999512
    9. '              ' → logprob: -13.625872611999512
    10. '	           ' → logprob: -14.125872611999512

Token 319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.41657233238220215
    2. ' self' → logprob: -1.1665723323822021
    3. '               ' → logprob: -3.541572332382202
    4. '           ' → logprob: -8.291572570800781
    5. '   ' → logprob: -10.666572570800781
    6. '[self' → logprob: -11.791572570800781
    7. '                   ' → logprob: -12.041572570800781
    8. '	self' → logprob: -12.666572570800781
    9. ' ' → logprob: -13.291572570800781
    10. 's' → logprob: -13.791572570800781

Token 320: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.023265395313501358
    2. '.rank' → logprob: -3.7732653617858887
    3. 'parent' → logprob: -11.023265838623047
    4. 'rank' → logprob: -13.523265838623047
    5. '.' → logprob: -13.773265838623047
    6. '_parent' → logprob: -14.648265838623047
    7. ' .' → logprob: -15.523265838623047
    8. '_rank' → logprob: -15.648265838623047
    9. '[parent' → logprob: -15.898265838623047
    10. 'Parent' → logprob: -16.648265838623047

Token 321: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[self' → logprob: -15.875
    3. ' ry' → logprob: -19.0
    4. ' [' → logprob: -19.0
    5. '[root' → logprob: -20.25
    6. '   ' → logprob: -21.25
    7. '```' → logprob: -21.25
    8. '[r' → logprob: -21.375
    9. 'ry' → logprob: -21.5
    10. '       ' → logprob: -22.0

Token 322: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -2.15310683415737e-05
    2. 'rx' → logprob: -11.125021934509277
    3. ' ry' → logprob: -12.750021934509277
    4. '[' → logprob: -12.750021934509277
    5. '   ' → logprob: -14.375021934509277
    6. '       ' → logprob: -16.37502098083496
    7. '
' → logprob: -16.50002098083496
    8. '

' → logprob: -17.62502098083496
    9. 'ryl' → logprob: -17.62502098083496
    10. 'rv' → logprob: -17.87502098083496

Token 323: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20194125175476074
    2. '=' → logprob: -1.9519412517547607
    3. ']' → logprob: -3.2019412517547607
    4. ']=' → logprob: -9.32694149017334
    5. ')' → logprob: -9.45194149017334
    6. ' ]' → logprob: -11.82694149017334
    7. ')=' → logprob: -14.95194149017334
    8. '[' → logprob: -15.70194149017334
    9. '}' → logprob: -15.95194149017334
    10. ' )' → logprob: -16.076940536499023

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. ')' → logprob: -16.825939178466797
    4. ' =
' → logprob: -18.325939178466797
    5. '=
' → logprob: -18.700939178466797
    6. '=s' → logprob: -18.700939178466797
    7. ')=' → logprob: -19.075939178466797
    8. ' ' → logprob: -19.325939178466797
    9. ']' → logprob: -19.575939178466797
    10. '=user' → logprob: -20.075939178466797

Token 325: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.20141352713108063
    2. ' rx' → logprob: -1.7014135122299194
    3. '(rx' → logprob: -16.326414108276367
    4. '_rx' → logprob: -16.451414108276367
    5. '.rx' → logprob: -17.201414108276367
    6. 'rs' → logprob: -19.076414108276367
    7. 'rxjs' → logprob: -19.326414108276367
    8. 'tx' → logprob: -19.326414108276367
    9. 'Rx' → logprob: -19.701414108276367
    10. 'rv' → logprob: -19.701414108276367

Token 326: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2527935206890106
    2. '           ' → logprob: -1.502793550491333
    3. '       ' → logprob: -7.377793312072754
    4. 'self' → logprob: -9.377793312072754
    5. '                   ' → logprob: -9.627793312072754
    6. '
' → logprob: -9.877793312072754
    7. '   ' → logprob: -11.002793312072754
    8. '<|end|>' → logprob: -12.002793312072754
    9. ' self' → logprob: -13.127793312072754
    10. ',' → logprob: -13.252793312072754

Token 327: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.63523930311203
    2. '           ' → logprob: -0.76023930311203
    3. '       ' → logprob: -6.260239124298096
    4. '   ' → logprob: -8.385239601135254
    5. '
' → logprob: -8.635239601135254
    6. '                   ' → logprob: -9.260239601135254
    7. '<|end|>' → logprob: -9.260239601135254
    8. ',' → logprob: -10.385239601135254
    9. '```' → logprob: -10.760239601135254
    10. '            
' → logprob: -10.760239601135254

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006751255132257938
    2. ' self' → logprob: -5.00675106048584
    3. '               ' → logprob: -10.25675106048584
    4. '           ' → logprob: -14.75675106048584
    5. '                   ' → logprob: -16.381752014160156
    6. '
' → logprob: -16.506752014160156
    7. '   ' → logprob: -16.881752014160156
    8. '[self' → logprob: -17.506752014160156
    9. '	self' → logprob: -18.006752014160156
    10. '       ' → logprob: -18.381752014160156

Token 329: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.9361264946837764e-07
    2. 'rank' → logprob: -16.5
    3. 'ank' → logprob: -18.0
    4. '_rank' → logprob: -18.25
    5. '.' → logprob: -18.5
    6. ' .' → logprob: -19.375
    7. 'Rank' → logprob: -19.5
    8. 'self' → logprob: -20.125
    9. ' rank' → logprob: -20.375
    10. 'anks' → logprob: -20.875

Token 330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '(rx' → logprob: -16.25
    3. '[self' → logprob: -17.75
    4. '[
' → logprob: -18.25
    5. '```' → logprob: -18.5
    6. ' [' → logprob: -19.25
    7. '[r' → logprob: -19.25
    8. ' rx' → logprob: -19.5
    9. '.rx' → logprob: -19.5
    10. 'rx' → logprob: -19.625

Token 331: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -1.0087516784551553e-05
    2. '[' → logprob: -11.75001049041748
    3. ' rx' → logprob: -13.12501049041748
    4. '_rx' → logprob: -15.87501049041748
    5. '(rx' → logprob: -17.000009536743164
    6. '.rx' → logprob: -17.625009536743164
    7. 'Rx' → logprob: -18.625009536743164
    8. 'x' → logprob: -19.125009536743164
    9. 'tx' → logprob: -20.000009536743164
    10. '   ' → logprob: -20.250009536743164

Token 332: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47574639320373535
    2. ']+=' → logprob: -0.9757463932037354
    3. '+=' → logprob: -6.725746154785156
    4. ' +=' → logprob: -7.975746154785156
    5. ' ]' → logprob: -9.100746154785156
    6. '[' → logprob: -11.850746154785156
    7. ']+' → logprob: -12.975746154785156
    8. '']' → logprob: -13.475746154785156
    9. '```' → logprob: -14.475746154785156
    10. '"]' → logprob: -14.850746154785156

Token 333: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0022826455533504486
    2. ' +=' → logprob: -6.127282619476318
    3. ']+=' → logprob: -9.377283096313477
    4. '[' → logprob: -11.377283096313477
    5. '+' → logprob: -13.752283096313477
    6. '=' → logprob: -15.252283096313477
    7. '+='' → logprob: -16.377283096313477
    8. '+="' → logprob: -16.877283096313477
    9. '+=(' → logprob: -18.127283096313477
    10. '++' → logprob: -18.627283096313477

Token 334: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.75004005432129
    4. '
' → logprob: -18.50004005432129
    5. '```' → logprob: -19.50004005432129
    6. '  ' → logprob: -20.75004005432129
    7. '       ' → logprob: -21.18754005432129
    8. '[' → logprob: -21.25004005432129
    9. ' ' → logprob: -21.31254005432129
    10. '	' → logprob: -21.56254005432129

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -22.625
    5. '
' → logprob: -23.375
    6. '１' → logprob: -23.875
    7. '[' → logprob: -24.125
    8. '  ' → logprob: -24.75
    9. '۱' → logprob: -25.0
    10. '

' → logprob: -25.0

Token 336: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000683126098010689
    2. '       ' → logprob: -8.250682830810547
    3. '
' → logprob: -8.875682830810547
    4. '               ' → logprob: -9.125682830810547
    5. '<|end|>' → logprob: -9.250682830810547
    6. 'self' → logprob: -10.000682830810547
    7. ' self' → logprob: -11.250682830810547
    8. '                   ' → logprob: -12.375682830810547
    9. '```' → logprob: -12.750682830810547
    10. '   ' → logprob: -13.000682830810547

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007786541245877743
    2. '       ' → logprob: -7.500778675079346
    3. '<|end|>' → logprob: -8.875778198242188
    4. '               ' → logprob: -9.500778198242188
    5. '   ' → logprob: -13.375778198242188
    6. '                   ' → logprob: -13.500778198242188
    7. '<|end|>' → logprob: -13.625778198242188
    8. '          ' → logprob: -13.875778198242188
    9. '		' → logprob: -13.875778198242188
    10. '	       ' → logprob: -13.875778198242188

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7253735661506653
    2. '           ' → logprob: -0.9753735661506653
    3. ' self' → logprob: -1.9753735065460205
    4. '       ' → logprob: -9.850373268127441
    5. '   ' → logprob: -10.475373268127441
    6. '	self' → logprob: -11.850373268127441
    7. '               ' → logprob: -13.100373268127441
    8. '
' → logprob: -13.350373268127441
    9. ' ' → logprob: -13.350373268127441
    10. '		' → logprob: -15.350373268127441

Token 339: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -2.3080716346157715e-05
    2. 'count' → logprob: -10.750022888183594
    3. '.' → logprob: -13.375022888183594
    4. ' count' → logprob: -18.500022888183594
    5. ' .' → logprob: -18.625022888183594
    6. '.Count' → logprob: -18.625022888183594
    7. '.counter' → logprob: -18.750022888183594
    8. 'Count' → logprob: -19.875022888183594
    9. '.size' → logprob: -20.000022888183594
    10. '   ' → logprob: -20.250022888183594

Token 340: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.020628780126571655
    2. '-=' → logprob: -3.8956286907196045
    3. '-' → logprob: -9.395628929138184
    4. '   ' → logprob: -14.020628929138184
    5. '<|end|>' → logprob: -14.020628929138184
    6. ' ' → logprob: -14.520628929138184
    7. ' +=' → logprob: -14.520628929138184
    8. ' -' → logprob: -14.770628929138184
    9. '  ' → logprob: -15.395628929138184
    10. '```' → logprob: -15.520628929138184

Token 341: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.000015258789062
    4. '<|end|>' → logprob: -19.250015258789062
    5. '```' → logprob: -20.000015258789062
    6. '  ' → logprob: -21.250015258789062
    7. '
' → logprob: -21.750015258789062
    8. '۱' → logprob: -22.000015258789062
    9. ' ' → logprob: -22.125015258789062
    10. '       ' → logprob: -22.625015258789062

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -18.25
    4. '<|end|>' → logprob: -18.5
    5. '   ' → logprob: -19.5
    6. '۱' → logprob: -21.125
    7. '
' → logprob: -22.25
    8. '-' → logprob: -22.25
    9. '１' → logprob: -22.625
    10. '`' → logprob: -22.8125

Token 343: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09112442284822464
    2. '<|end|>' → logprob: -2.4661245346069336
    3. '

' → logprob: -7.091124534606934
    4. 'class' → logprob: -7.466124534606934
    5. '<|end|>' → logprob: -7.591124534606934
    6. '    
' → logprob: -8.716124534606934
    7. '   ' → logprob: -10.091124534606934
    8. 'def' → logprob: -10.216124534606934
    9. '
    
' → logprob: -11.841124534606934
    10. '```' → logprob: -11.841124534606934

Token 344: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03040151484310627
    2. '
' → logprob: -3.5304014682769775
    3. 'def' → logprob: -7.530401706695557
    4. ' class' → logprob: -9.280401229858398
    5. '    
' → logprob: -11.780401229858398
    6. '

' → logprob: -12.530401229858398
    7. '<|end|>' → logprob: -13.155401229858398
    8. '  
' → logprob: -13.280401229858398
    9. '```' → logprob: -13.280401229858398
    10. '<|end|>' → logprob: -14.280401229858398

Token 345: ' Fibonacci' (ID: 139341)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.12095621228218079
    2. 'Graph' → logprob: -2.7459561824798584
    3. ' Solution' → logprob: -3.4959561824798584
    4. ' Tree' → logprob: -4.3709564208984375
    5. 'Solution' → logprob: -6.2459564208984375
    6. ' Label' → logprob: -6.9959564208984375
    7. ' Connected' → logprob: -7.2459564208984375
    8. 'Tree' → logprob: -7.4959564208984375
    9. ' Component' → logprob: -7.4959564208984375
    10. ' Node' → logprob: -7.7459564208984375

Token 346: 'Sets' (ID: 36594)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.06445278972387314
    2. 'Graph' → logprob: -3.439452886581421
    3. 'Tree' → logprob: -4.439452648162842
    4. 'Sequence' → logprob: -5.689452648162842
    5. 'Component' → logprob: -6.314452648162842
    6. ':' → logprob: -6.439452648162842
    7. 'Path' → logprob: -6.814452648162842
    8. 'Set' → logprob: -6.814452648162842
    9. 'Cycle' → logprob: -6.814452648162842
    10. 'Node' → logprob: -6.939452648162842

Token 347: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004824907053261995
    2. ':
' → logprob: -5.379825115203857
    3. '(F' → logprob: -8.8798246383667
    4. '(' → logprob: -10.6298246383667
    5. 'F' → logprob: -11.0048246383667
    6. ' :' → logprob: -11.1298246383667
    7. ':F' → logprob: -11.8798246383667
    8. ':

' → logprob: -14.0048246383667
    9. ':def' → logprob: -15.0048246383667
    10. ' F' → logprob: -15.2548246383667

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008619539439678192
    2. ':
' → logprob: -4.75861930847168
    3. ':def' → logprob: -13.00861930847168
    4. '(' → logprob: -14.13361930847168
    5. ':

' → logprob: -14.25861930847168
    6. ' :' → logprob: -14.50861930847168
    7. '(object' → logprob: -15.13361930847168
    8. '():' → logprob: -15.63361930847168
    9. '):' → logprob: -16.75861930847168
    10. ':
' → logprob: -16.75861930847168

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018877071561291814
    2. ' def' → logprob: -6.376887798309326
    3. 'def' → logprob: -8.626887321472168
    4. '	def' → logprob: -13.001887321472168
    5. ':' → logprob: -13.251887321472168
    6. '    
' → logprob: -14.251887321472168
    7. ':
' → logprob: -14.626887321472168
    8. ',' → logprob: -15.126887321472168
    9. ':def' → logprob: -15.251887321472168
    10. '(' → logprob: -15.876887321472168

Token 350: ' N' (ID: 478)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.05782574042677879
    2. 'def' → logprob: -3.307825803756714
    3. '   ' → logprob: -3.932825803756714
    4. '    ' → logprob: -14.682826042175293
    5. '```' → logprob: -14.807826042175293
    6. '	def' → logprob: -15.057826042175293
    7. ' ' → logprob: -15.807826042175293
    8. '    
' → logprob: -16.182825088500977
    9. '  ' → logprob: -16.807825088500977
    10. 'class' → logprob: -16.807825088500977

Token 351: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030758647248148918
    2. ' =' → logprob: -4.155758857727051
    3. '   ' → logprob: -4.655758857727051
    4. '=' → logprob: -5.655758857727051
    5. 'def' → logprob: -7.030758857727051
    6. ' :' → logprob: -8.28075885772705
    7. 'um' → logprob: -9.03075885772705
    8. '=None' → logprob: -9.03075885772705
    9. ':int' → logprob: -9.78075885772705
    10. ' def' → logprob: -9.90575885772705

Token 352: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.24776355922222137
    2. '100' → logprob: -1.6227635145187378
    3. '0' → logprob: -4.622763633728027
    4. '200' → logprob: -5.872763633728027
    5. ' ' → logprob: -6.247763633728027
    6. 'int' → logprob: -6.247763633728027
    7. '1' → logprob: -6.622763633728027
    8. '500' → logprob: -6.622763633728027
    9. '300' → logprob: -7.497763633728027
    10. '400' → logprob: -7.622763633728027

Token 353: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.24459905922412872
    2. '100' → logprob: -1.7445991039276123
    3. '200' → logprob: -4.494598865509033
    4. '2' → logprob: -5.119598865509033
    5. '50' → logprob: -5.369598865509033
    6. '500' → logprob: -5.494598865509033
    7. '300' → logprob: -5.744598865509033
    8. '20' → logprob: -6.244598865509033
    9. '0' → logprob: -6.369598865509033
    10. 'int' → logprob: -6.494598865509033

Token 354: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02981008030474186
    2. '    
' → logprob: -4.154809951782227
    3. 'def' → logprob: -5.404809951782227
    4. '0' → logprob: -5.529809951782227
    5. '
' → logprob: -5.779809951782227
    6. ' def' → logprob: -6.654809951782227
    7. '000' → logprob: -8.404809951782227
    8. '    ' → logprob: -9.154809951782227
    9. ':' → logprob: -9.654809951782227
    10. ',' → logprob: -9.779809951782227

Token 355: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041995756328105927
    2. '    
' → logprob: -4.041995525360107
    3. ':' → logprob: -4.416995525360107
    4. 'def' → logprob: -5.041995525360107
    5. '
' → logprob: -6.041995525360107
    6. ' def' → logprob: -6.666995525360107
    7. '<|end|>' → logprob: -7.166995525360107
    8. '<|end|>' → logprob: -8.541996002197266
    9. ':
' → logprob: -9.166996002197266
    10. ',' → logprob: -9.291996002197266

Token 356: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19922271370887756
    2. ' def' → logprob: -1.8242226839065552
    3. '   ' → logprob: -3.9492228031158447
    4. ' ' → logprob: -11.449222564697266
    5. 'import' → logprob: -12.949222564697266
    6. '  ' → logprob: -13.574222564697266
    7. 'de' → logprob: -13.699222564697266
    8. 'from' → logprob: -13.699222564697266
    9. ':' → logprob: -13.949222564697266
    10. '	def' → logprob: -14.449222564697266

Token 357: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004653930198401213
    2. ' def' → logprob: -5.3796539306640625
    3. '@' → logprob: -10.629653930664062
    4. 'MOD' → logprob: -13.379653930664062
    5. 'mod' → logprob: -13.379653930664062
    6. 'from' → logprob: -13.379653930664062
    7. 'de' → logprob: -13.504653930664062
    8. 'import' → logprob: -13.754653930664062
    9. '   ' → logprob: -14.004653930664062
    10. 'class' → logprob: -14.879653930664062

Token 358: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00024965754710137844
    2. ' def' → logprob: -8.750249862670898
    3. ' ' → logprob: -9.375249862670898
    4. '__' → logprob: -12.750249862670898
    5. 'def' → logprob: -13.875249862670898
    6. ' init' → logprob: -14.125249862670898
    7. ' _' → logprob: -14.250249862670898
    8. ' solve' → logprob: -14.375249862670898
    9. '_init' → logprob: -15.875249862670898
    10. ' `' → logprob: -16.0002498626709

Token 359: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -18.25
    3. 'int' → logprob: -20.375
    4. 'def' → logprob: -20.5
    5. ' init' → logprob: -21.375
    6. 'innit' → logprob: -21.75
    7. 'in' → logprob: -21.875
    8. 'inite' → logprob: -21.875
    9. 'new' → logprob: -22.5
    10. 'i' → logprob: -22.75

Token 360: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0001576506474521011
    2. '__' → logprob: -9.125157356262207
    3. '(self' → logprob: -10.125157356262207
    4. '__(
' → logprob: -12.250157356262207
    5. '_(' → logprob: -12.875157356262207
    6. '(' → logprob: -14.250157356262207
    7. '__('' → logprob: -15.750157356262207
    8. '__((' → logprob: -16.125158309936523
    9. '<>(' → logprob: -16.625158309936523
    10. ')(' → logprob: -17.250158309936523

Token 361: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006071255193091929
    2. ' self' → logprob: -7.500607013702393
    3. ')' → logprob: -10.37560749053955
    4. '):
' → logprob: -11.37560749053955
    5. 'n' → logprob: -12.75060749053955
    6. '
' → logprob: -12.87560749053955
    7. '   ' → logprob: -13.25060749053955
    8. ',' → logprob: -13.25060749053955
    9. ' ' → logprob: -13.50060749053955
    10. '       ' → logprob: -15.50060749053955

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007686520111747086
    2. 'self' → logprob: -7.375768661499023
    3. '):
' → logprob: -10.000768661499023
    4. '(self' → logprob: -10.500768661499023
    5. '   ' → logprob: -10.875768661499023
    6. '):' → logprob: -11.000768661499023
    7. ' ,' → logprob: -11.000768661499023
    8. '       ' → logprob: -12.250768661499023
    9. ')' → logprob: -12.750768661499023
    10. ')(' → logprob: -13.000768661499023

Token 363: ' V' (ID: 631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0305225849151611
    2. 'self' → logprob: -1.2805225849151611
    3. ' n' → logprob: -2.155522584915161
    4. ' self' → logprob: -3.155522584915161
    5. 'labels' → logprob: -3.155522584915161
    6. 'mod' → logprob: -3.405522584915161
    7. 'k' → logprob: -3.780522584915161
    8. 'nodes' → logprob: -4.030522346496582
    9. ' labels' → logprob: -4.155522346496582
    10. ' nodes' → logprob: -4.530522346496582

Token 364: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18942996859550476
    2. ':' → logprob: -1.8144299983978271
    3. '):' → logprob: -5.314429759979248
    4. ' ,' → logprob: -5.689429759979248
    5. '):
' → logprob: -7.814429759979248
    6. ':int' → logprob: -8.564430236816406
    7. '   ' → logprob: -8.689430236816406
    8. ' ):' → logprob: -8.814430236816406
    9. ' :' → logprob: -8.939430236816406
    10. ')' → logprob: -9.189430236816406

Token 365: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.010133204981684685
    2. ' int' → logprob: -5.385133266448975
    3. 'List' → logprob: -6.260133266448975
    4. 'self' → logprob: -6.760133266448975
    5. '[int' → logprob: -7.260133266448975
    6. 'list' → logprob: -7.385133266448975
    7. '   ' → logprob: -7.385133266448975
    8. ')' → logprob: -8.385132789611816
    9. '):
' → logprob: -9.760132789611816
    10. '       ' → logprob: -9.760132789611816

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007303233724087477
    2. '):' → logprob: -5.007303237915039
    3. '):
' → logprob: -7.757303237915039
    4. ' ,' → logprob: -9.257303237915039
    5. ')' → logprob: -10.382303237915039
    6. ' ):' → logprob: -11.007303237915039
    7. '   ' → logprob: -11.882303237915039
    8. '       ' → logprob: -12.507303237915039
    9. '):
' → logprob: -13.132303237915039
    10. ':' → logprob: -13.507303237915039

Token 367: ' d' (ID: 272)
  Prédit: ' labels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' labels' → logprob: -1.1445941925048828
    2. 'labels' → logprob: -1.1445941925048828
    3. ' edges' → logprob: -1.7695941925048828
    4. 'n' → logprob: -3.269594192504883
    5. 'edges' → logprob: -3.269594192504883
    6. ' n' → logprob: -3.894594192504883
    7. ' nodes' → logprob: -4.144594192504883
    8. 'k' → logprob: -4.644594192504883
    9. 'mod' → logprob: -4.769594192504883
    10. 'N' → logprob: -4.894594192504883

Token 368: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2648388743400574
    2. 'ist' → logprob: -2.139838933944702
    3. 'ata' → logprob: -2.764838933944702
    4. ',' → logprob: -4.389838695526123
    5. 'istance' → logprob: -4.639838695526123
    6. 'ists' → logprob: -5.389838695526123
    7. 'is' → logprob: -5.639838695526123
    8. '_labels' → logprob: -5.639838695526123
    9. 'ef' → logprob: -6.014838695526123
    10. 'es' → logprob: -6.264838695526123

Token 369: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08445829153060913
    2. 'ict' → logprob: -3.084458351135254
    3. '[int' → logprob: -4.459458351135254
    4. 'list' → logprob: -4.584458351135254
    5. 'List' → logprob: -5.584458351135254
    6. ' int' → logprob: -6.084458351135254
    7. 'dict' → logprob: -6.459458351135254
    8. ')' → logprob: -6.459458351135254
    9. ':int' → logprob: -6.584458351135254
    10. '):' → logprob: -6.709458351135254

Token 370: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47216761112213135
    2. ',' → logprob: -1.0971676111221313
    3. '):
' → logprob: -3.222167491912842
    4. ')' → logprob: -6.472167491912842
    5. '):
' → logprob: -7.097167491912842
    6. ' ):' → logprob: -8.72216796875
    7. '   ' → logprob: -10.34716796875
    8. ' ,' → logprob: -10.59716796875
    9. '=' → logprob: -11.22216796875
    10. '       ' → logprob: -11.22216796875

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1888679839321412e-05
    2. ',' → logprob: -11.875021934509277
    3. 'self' → logprob: -11.875021934509277
    4. ' self' → logprob: -12.125021934509277
    5. '   ' → logprob: -14.000021934509277
    6. '      ' → logprob: -14.875021934509277
    7. '```' → logprob: -15.375021934509277
    8. '	   ' → logprob: -15.750021934509277
    9. '           ' → logprob: -15.875021934509277
    10. ':' → logprob: -15.875021934509277

Token 372: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2702077627182007
    2. '       ' → logprob: -1.5202077627182007
    3. ' self' → logprob: -4.02020788192749
    4. '   ' → logprob: -8.770207405090332
    5. '     ' → logprob: -13.020207405090332
    6. 'def' → logprob: -13.520207405090332
    7. '	self' → logprob: -13.520207405090332
    8. '      ' → logprob: -14.020207405090332
    9. ' ' → logprob: -14.145207405090332
    10. '    ' → logprob: -14.520207405090332

Token 373: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.006630708463490009
    2. '.' → logprob: -5.131630897521973
    3. ' .' → logprob: -8.631630897521973
    4. '.v' → logprob: -9.006630897521973
    5. '._' → logprob: -9.381630897521973
    6. '.N' → logprob: -9.631630897521973
    7. ' =' → logprob: -10.131630897521973
    8. '.d' → logprob: -10.381630897521973
    9. 'V' → logprob: -10.631630897521973
    10. '.nodes' → logprob: -10.881630897521973

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014576772227883339
    2. '=' → logprob: -4.2645769119262695
    3. ' ' → logprob: -7.8895769119262695
    4. ',' → logprob: -10.26457691192627
    5. ' ,' → logprob: -13.88957691192627
    6. '   ' → logprob: -14.38957691192627
    7. '    ' → logprob: -14.63957691192627
    8. '=int' → logprob: -14.76457691192627
    9. ' =
' → logprob: -14.88957691192627
    10. ')' → logprob: -15.26457691192627

Token 375: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.10020839422941208
    2. ' V' → logprob: -2.350208282470703
    3. '	V' → logprob: -13.475208282470703
    4. '_V' → logprob: -15.600208282470703
    5. '   ' → logprob: -16.475208282470703
    6. ' ' → logprob: -16.975208282470703
    7. ' ' → logprob: -17.100208282470703
    8. 'v' → logprob: -17.225208282470703
    9. '       ' → logprob: -17.600208282470703
    10. 'd' → logprob: -17.725208282470703

Token 376: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012958098202943802
    2. '
' → logprob: -4.38795804977417
    3. ',' → logprob: -7.88795804977417
    4. 'self' → logprob: -10.762958526611328
    5. ',
' → logprob: -11.137958526611328
    6. '<|end|>' → logprob: -11.137958526611328
    7. '        
' → logprob: -11.762958526611328
    8. '  
' → logprob: -12.637958526611328
    9. ' 
' → logprob: -13.012958526611328
    10. ' self' → logprob: -13.262958526611328

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.469590491382405e-05
    2. 'self' → logprob: -10.12507438659668
    3. ',' → logprob: -10.37507438659668
    4. ' self' → logprob: -13.25007438659668
    5. '   ' → logprob: -14.37507438659668
    6. '
' → logprob: -15.50007438659668
    7. '<|end|>' → logprob: -15.62507438659668
    8. ' ' → logprob: -16.12507438659668
    9. '      ' → logprob: -16.12507438659668
    10. 'd' → logprob: -16.62507438659668

Token 378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00021879478299524635
    2. 'd' → logprob: -8.750218391418457
    3. '       ' → logprob: -10.250218391418457
    4. ' self' → logprob: -10.625218391418457
    5. '
' → logprob: -14.625218391418457
    6. '   ' → logprob: -16.625219345092773
    7. ' d' → logprob: -17.875219345092773
    8. 's' → logprob: -18.250219345092773
    9. 'f' → logprob: -18.250219345092773
    10. '        
' → logprob: -18.500219345092773

Token 379: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.7730564475059509
    2. 'd' → logprob: -1.1480565071105957
    3. ' =' → logprob: -1.7730565071105957
    4. '.' → logprob: -4.023056507110596
    5. '.n' → logprob: -4.523056507110596
    6. '   ' → logprob: -5.398056507110596
    7. '=' → logprob: -5.398056507110596
    8. ' d' → logprob: -5.398056507110596
    9. '._' → logprob: -6.773056507110596
    10. ' .' → logprob: -7.023056507110596

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08983694761991501
    2. '=' → logprob: -2.464836835861206
    3. ' ' → logprob: -7.089837074279785
    4. ',' → logprob: -10.714837074279785
    5. '<|end|>' → logprob: -10.964837074279785
    6. ')' → logprob: -11.714837074279785
    7. '   ' → logprob: -12.964837074279785
    8. ' =
' → logprob: -13.464837074279785
    9. 'import' → logprob: -13.589837074279785
    10. '    ' → logprob: -13.589837074279785

Token 381: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25193077325820923
    2. ' d' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.126931190490723
    4. '	d' → logprob: -15.126931190490723
    5. '   ' → logprob: -15.501931190490723
    6. '_d' → logprob: -16.001930236816406
    7. '  ' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.126930236816406
    9. '    ' → logprob: -17.251930236816406
    10. 'int' → logprob: -17.501930236816406

Token 382: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20507797598838806
    2. '
' → logprob: -1.8300780057907104
    3. '<|end|>' → logprob: -3.705077886581421
    4. ',' → logprob: -8.580078125
    5. '<|end|>' → logprob: -9.955078125
    6. '        
' → logprob: -10.080078125
    7. ',
' → logprob: -10.080078125
    8. ' 
' → logprob: -10.580078125
    9. ' self' → logprob: -10.830078125
    10. 'self' → logprob: -10.830078125

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001360593712888658
    2. '<|end|>' → logprob: -6.7513604164123535
    3. '
' → logprob: -8.876360893249512
    4. ',' → logprob: -10.876360893249512
    5. ' self' → logprob: -11.376360893249512
    6. 'self' → logprob: -11.626360893249512
    7. '<|end|>' → logprob: -12.751360893249512
    8. '        
' → logprob: -13.001360893249512
    9. '   ' → logprob: -13.376360893249512
    10. ' ' → logprob: -14.126360893249512

Token 384: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07972318679094315
    2. ' self' → logprob: -2.5797231197357178
    3. '       ' → logprob: -7.204723358154297
    4. '
' → logprob: -10.079723358154297
    5. '        
' → logprob: -11.454723358154297
    6. 'fib' → logprob: -12.329723358154297
    7. 'n' → logprob: -12.579723358154297
    8. ' 
' → logprob: -12.704723358154297
    9. '   ' → logprob: -12.954723358154297
    10. ',' → logprob: -13.079723358154297

Token 385: '.f' (ID: 1196)
  Prédit: '.nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.5038776993751526
    2. '_nodes' → logprob: -1.8788776397705078
    3. 'nodes' → logprob: -2.753877639770508
    4. '.f' → logprob: -2.878877639770508
    5. ' =' → logprob: -3.628877639770508
    6. '._' → logprob: -4.378877639770508
    7. ' .' → logprob: -4.503877639770508
    8. '.labels' → logprob: -4.503877639770508
    9. 'labels' → logprob: -4.628877639770508
    10. '.' → logprob: -4.753877639770508

Token 386: 'ibo' (ID: 27764)
  Prédit: 'ib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ib' → logprob: -0.006714421324431896
    2. 'ibo' → logprob: -5.506714344024658
    3. 'ibonacci' → logprob: -6.756714344024658
    4. 'mod' → logprob: -7.256714344024658
    5. 'ibs' → logprob: -8.131714820861816
    6. 'n' → logprob: -8.506714820861816
    7. ' =' → logprob: -9.006714820861816
    8. 'b' → logprob: -10.006714820861816
    9. 'ibon' → logprob: -11.006714820861816
    10. 'm' → logprob: -11.256714820861816

Token 387: '_mod' (ID: 15325)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05723510682582855
    2. '=' → logprob: -3.1822350025177
    3. 'Mod' → logprob: -4.807235240936279
    4. 'mod' → logprob: -5.432235240936279
    5. '_mod' → logprob: -6.932235240936279
    6. 'n' → logprob: -7.682235240936279
    7. 'm' → logprob: -9.682234764099121
    8. 'o' → logprob: -11.307234764099121
    9. 'ni' → logprob: -11.932234764099121
    10. 'ro' → logprob: -12.307234764099121

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4635975658893585
    2. '=' → logprob: -1.3385975360870361
    3. 'N' → logprob: -2.713597536087036
    4. '_n' → logprob: -3.338597536087036
    5. 'n' → logprob: -5.088597774505615
    6. 'd' → logprob: -7.463597774505615
    7. '_N' → logprob: -9.713597297668457
    8. '=n' → logprob: -9.963597297668457
    9. 's' → logprob: -10.463597297668457
    10. '=N' → logprob: -10.838597297668457

Token 389: ' Fibonacci' (ID: 139341)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.023930219933390617
    2. ' Fibonacci' → logprob: -3.773930311203003
    3. 'n' → logprob: -7.773930072784424
    4. 'N' → logprob: -9.148930549621582
    5. '(F' → logprob: -9.898930549621582
    6. ' F' → logprob: -10.273930549621582
    7. 'Fib' → logprob: -10.523930549621582
    8. '[F' → logprob: -11.023930549621582
    9. ' ' → logprob: -11.773930549621582
    10. '	F' → logprob: -12.523930549621582

Token 390: 'Mod' (ID: 4721)
  Prédit: 'Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -9.088346359931165e-07
    2. 'mod' → logprob: -15.000000953674316
    3. 'F' → logprob: -15.125000953674316
    4. 'Modulo' → logprob: -17.375
    5. ' Mod' → logprob: -18.0
    6. '_mod' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. 'Mods' → logprob: -19.125
    9. 'Sets' → logprob: -19.125
    10. '_Mod' → logprob: -19.25

Token 391: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.274932143744081e-05
    2. 'n' → logprob: -10.375042915344238
    3. 'd' → logprob: -12.250042915344238
    4. '100' → logprob: -13.750042915344238
    5. 'self' → logprob: -14.125042915344238
    6. 'Sets' → logprob: -14.625042915344238
    7. 'Mod' → logprob: -14.625042915344238
    8. 's' → logprob: -15.062542915344238
    9. ' N' → logprob: -15.062542915344238
    10. '```' → logprob: -15.125042915344238

Token 392: '(self' (ID: 2402)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.059872642159461975
    2. '(self' → logprob: -3.184872627258301
    3. '(' → logprob: -4.309872627258301
    4. 'd' → logprob: -6.059872627258301
    5. '(V' → logprob: -7.434872627258301
    6. 'N' → logprob: -8.9348726272583
    7. '(N' → logprob: -9.4348726272583
    8. 'self' → logprob: -9.8098726272583
    9. '(n' → logprob: -9.9348726272583
    10. '(
' → logprob: -10.6848726272583

Token 393: '.N' (ID: 4439)
  Prédit: '.d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.5798291563987732
    2. '.N' → logprob: -0.8298291563987732
    3. 'N' → logprob: -6.454829216003418
    4. 'd' → logprob: -6.579829216003418
    5. '.V' → logprob: -7.329829216003418
    6. '.n' → logprob: -9.579829216003418
    7. '.' → logprob: -9.579829216003418
    8. '.D' → logprob: -9.579829216003418
    9. '.M' → logprob: -11.704829216003418
    10. '.v' → logprob: -12.329829216003418

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28155001997947693
    2. ')
' → logprob: -1.4065500497817993
    3. ')
' → logprob: -8.031550407409668
    4. ')

' → logprob: -10.406550407409668
    5. ' )
' → logprob: -11.031550407409668
    6. ' )' → logprob: -11.281550407409668
    7. '   ' → logprob: -12.281550407409668
    8. '       ' → logprob: -12.281550407409668
    9. ')`
' → logprob: -13.781550407409668
    10. ')d' → logprob: -13.781550407409668

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005470786709338427
    2. '<|end|>' → logprob: -5.2554707527160645
    3. 'self' → logprob: -8.755471229553223
    4. '   ' → logprob: -10.755471229553223
    5. ' self' → logprob: -11.005471229553223
    6. '```' → logprob: -11.255471229553223
    7. '
' → logprob: -11.755471229553223
    8. 'def' → logprob: -11.880471229553223
    9. '      ' → logprob: -12.630471229553223
    10. '<|end|>' → logprob: -12.630471229553223

Token 396: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2554049789905548
    2. ' self' → logprob: -1.5054049491882324
    3. '       ' → logprob: -5.755404949188232
    4. 'def' → logprob: -8.63040542602539
    5. '<|end|>' → logprob: -9.88040542602539
    6. '   ' → logprob: -11.50540542602539
    7. ' ' → logprob: -11.50540542602539
    8. 'import' → logprob: -11.88040542602539
    9. 'nodes' → logprob: -11.88040542602539
    10. 'from' → logprob: -12.00540542602539

Token 397: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.02554514817893505
    2. '.labels' → logprob: -4.900545120239258
    3. '.d' → logprob: -5.525545120239258
    4. '.f' → logprob: -6.150545120239258
    5. '.edges' → logprob: -6.275545120239258
    6. 'nodes' → logprob: -6.275545120239258
    7. '.vertices' → logprob: -6.525545120239258
    8. '.graph' → logprob: -6.775545120239258
    9. '.' → logprob: -7.400545120239258
    10. '.ds' → logprob: -7.650545120239258

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014174087904393673
    2. '=' → logprob: -4.264173984527588
    3. ' ' → logprob: -11.889174461364746
    4. '=[]' → logprob: -13.264174461364746
    5. ':' → logprob: -13.639174461364746
    6. '  ' → logprob: -16.13917350769043
    7. ' =[' → logprob: -16.13917350769043
    8. '   ' → logprob: -16.26417350769043
    9. '[' → logprob: -16.51417350769043
    10. ',' → logprob: -16.51417350769043

Token 399: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.008900310844182968
    2. '[' → logprob: -5.258900165557861
    3. ' []' → logprob: -5.758900165557861
    4. '[]' → logprob: -7.633900165557861
    5. '[list' → logprob: -12.25890064239502
    6. '[n' → logprob: -13.00890064239502
    7. '[List' → logprob: -13.00890064239502
    8. '[class' → logprob: -13.25890064239502
    9. '[int' → logprob: -13.25890064239502
    10. '[node' → logprob: -13.38390064239502

Token 400: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.013882103376090527
    2. 'None' → logprob: -4.763882160186768
    3. ' Node' → logprob: -5.263882160186768
    4. ' None' → logprob: -9.63888168334961
    5. ']' → logprob: -11.63888168334961
    6. '0' → logprob: -13.76388168334961
    7. '   ' → logprob: -14.01388168334961
    8. '	Node' → logprob: -14.01388168334961
    9. '(Node' → logprob: -14.38888168334961
    10. '.Node' → logprob: -14.63888168334961

Token 401: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005332559230737388
    2. '(' → logprob: -7.625533103942871
    3. '(index' → logprob: -10.125533103942871
    4. '(idx' → logprob: -12.875533103942871
    5. '(x' → logprob: -13.625533103942871
    6. ' (' → logprob: -15.000533103942871
    7. '(
' → logprob: -15.625533103942871
    8. '(_,' → logprob: -15.625533103942871
    9. ')(' → logprob: -15.750533103942871
    10. '((' → logprob: -16.000534057617188

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006836029351688921
    2. ' ,' → logprob: -7.750683784484863
    3. ',i' → logprob: -8.875683784484863
    4. '(i' → logprob: -10.500683784484863
    5. ')' → logprob: -10.750683784484863
    6. ',
' → logprob: -11.875683784484863
    7. '   ' → logprob: -11.875683784484863
    8. 'for' → logprob: -12.000683784484863
    9. '0' → logprob: -12.125683784484863
    10. ' for' → logprob: -12.125683784484863

Token 403: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.865024983882904
    2. 'self' → logprob: -1.1150250434875488
    3. ' self' → logprob: -1.6150250434875488
    4. ' ' → logprob: -4.115025043487549
    5. ' (' → logprob: -4.490025043487549
    6. '(self' → logprob: -4.990025043487549
    7. 'i' → logprob: -5.615025043487549
    8. '(' → logprob: -5.615025043487549
    9. '-' → logprob: -5.865025043487549
    10. ' i' → logprob: -6.115025043487549

Token 404: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0006000961875542998
    2. '.d' → logprob: -7.8755998611450195
    3. '.' → logprob: -8.87559986114502
    4. ' .' → logprob: -10.37559986114502
    5. ')' → logprob: -10.62559986114502
    6. 'f' → logprob: -11.87559986114502
    7. ').' → logprob: -12.37559986114502
    8. 'd' → logprob: -12.62559986114502
    9. ' ' → logprob: -13.00059986114502
    10. '.)' → logprob: -13.00059986114502

Token 405: 'ibo' (ID: 27764)
  Prédit: 'ibo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibo' → logprob: -0.00027349460287950933
    2. 'bo' → logprob: -8.375273704528809
    3. 'o' → logprob: -10.375273704528809
    4. 'i' → logprob: -12.500273704528809
    5. 'ib' → logprob: -12.875273704528809
    6. 'obo' → logprob: -13.875273704528809
    7. 'bio' → logprob: -14.000273704528809
    8. 'ifo' → logprob: -14.375273704528809
    9. '
' → logprob: -14.875273704528809
    10. '(' → logprob: -15.125273704528809

Token 406: '_mod' (ID: 15325)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.47430747747421265
    2. '_mod' → logprob: -0.9743074774742126
    3. 'omod' → logprob: -8.5993070602417
    4. 'mod' → logprob: -11.4743070602417
    5. 'om' → logprob: -11.9743070602417
    6. '_o' → logprob: -12.3493070602417
    7. 'о' → logprob: -12.5993070602417
    8. '_MOD' → logprob: -13.0993070602417
    9. '
' → logprob: -13.4743070602417
    10. '_' → logprob: -13.5993070602417

Token 407: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.0004742831224575639
    2. '.' → logprob: -7.875474452972412
    3. 'compute' → logprob: -10.375473976135254
    4. ' .' → logprob: -10.875473976135254
    5. ').' → logprob: -11.000473976135254
    6. '(i' → logprob: -11.625473976135254
    7. ')' → logprob: -12.250473976135254
    8. 'd' → logprob: -13.250473976135254
    9. '[i' → logprob: -13.375473976135254
    10. '.get' → logprob: -13.375473976135254

Token 408: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0012140447506681085
    2. '(' → logprob: -7.376214027404785
    3. '(d' → logprob: -7.751214027404785
    4. '((' → logprob: -8.876214027404785
    5. '(self' → logprob: -12.626214027404785
    6. ' (' → logprob: -12.626214027404785
    7. 'd' → logprob: -13.251214027404785
    8. '(j' → logprob: -13.251214027404785
    9. '(-' → logprob: -13.251214027404785
    10. ')' → logprob: -13.376214027404785

Token 409: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4886573553085327
    2. ')' → logprob: -1.6136573553085327
    3. ' ))' → logprob: -2.1136574745178223
    4. ' )' → logprob: -2.8636574745178223
    5. ' %' → logprob: -5.613657474517822
    6. ' ' → logprob: -5.988657474517822
    7. ')]' → logprob: -6.613657474517822
    8. '%' → logprob: -7.488657474517822
    9. 'd' → logprob: -8.988656997680664
    10. '%d' → logprob: -9.113656997680664

Token 410: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03100419230759144
    2. ')' → logprob: -3.9060041904449463
    3. 'for' → logprob: -4.656004428863525
    4. '       ' → logprob: -7.406004428863525
    5. '        ' → logprob: -9.656003952026367
    6. ' )' → logprob: -9.781003952026367
    7. '    ' → logprob: -10.406003952026367
    8. ']' → logprob: -10.406003952026367
    9. '   ' → logprob: -10.531003952026367
    10. ' ' → logprob: -10.656003952026367

Token 411: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5231898427009583
    2. ' i' → logprob: -0.8981898427009583
    3. ' ' → logprob: -10.898189544677734
    4. 'range' → logprob: -10.898189544677734
    5. ' range' → logprob: -11.148189544677734
    6. '	i' → logprob: -12.148189544677734
    7. '_' → logprob: -12.773189544677734
    8. ')' → logprob: -13.023189544677734
    9. '<|end|>' → logprob: -14.148189544677734
    10. '_i' → logprob: -14.148189544677734

Token 412: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016941595822572708
    2. 'in' → logprob: -4.141941547393799
    3. ' ' → logprob: -7.141941547393799
    4. 'range' → logprob: -9.766942024230957
    5. ' range' → logprob: -10.141942024230957
    6. ' i' → logprob: -11.516942024230957
    7. '<|end|>' → logprob: -13.016942024230957
    8. '	in' → logprob: -13.391942024230957
    9. '  ' → logprob: -13.516942024230957
    10. 'space' → logprob: -14.391942024230957

Token 413: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975129522383213
    2. ' range' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.65475082397461
    4. '(range' → logprob: -15.77975082397461
    5. ' ' → logprob: -16.27975082397461
    6. '	range' → logprob: -16.40475082397461
    7. '  ' → logprob: -18.02975082397461
    8. '    ' → logprob: -18.15475082397461
    9. ')' → logprob: -18.65475082397461
    10. '       ' → logprob: -19.15475082397461

Token 414: '(' (ID: 7)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.03073529154062271
    2. '(self' → logprob: -3.7807352542877197
    3. '(' → logprob: -4.905735492706299
    4. '(d' → logprob: -10.53073501586914
    5. 'self' → logprob: -11.53073501586914
    6. 'd' → logprob: -11.78073501586914
    7. ' (' → logprob: -12.03073501586914
    8. 'V' → logprob: -13.28073501586914
    9. '(
' → logprob: -13.78073501586914
    10. '(s' → logprob: -14.03073501586914

Token 415: '1' (ID: 16)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.42665764689445496
    2. 'V' → logprob: -1.1766576766967773
    3. 'self' → logprob: -3.9266576766967773
    4. '(self' → logprob: -4.051657676696777
    5. '-V' → logprob: -7.051657676696777
    6. '(-' → logprob: -7.301657676696777
    7. '(' → logprob: -8.801657676696777
    8. '-' → logprob: -9.301657676696777
    9. 'd' → logprob: -10.551657676696777
    10. ' V' → logprob: -11.301657676696777

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011740362970158458
    2. ' ,' → logprob: -7.501173973083496
    3. ',V' → logprob: -7.626173973083496
    4. 'V' → logprob: -10.626173973083496
    5. '   ' → logprob: -10.751173973083496
    6. ',
' → logprob: -10.751173973083496
    7. 'self' → logprob: -10.751173973083496
    8. ',self' → logprob: -11.251173973083496
    9. '(V' → logprob: -12.001173973083496
    10. 'd' → logprob: -12.126173973083496

Token 417: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.008931505493819714
    2. 'self' → logprob: -5.258931636810303
    3. ' V' → logprob: -5.633931636810303
    4. ' self' → logprob: -9.133931159973145
    5. '   ' → logprob: -12.008931159973145
    6. '	V' → logprob: -13.883931159973145
    7. 'd' → logprob: -14.758931159973145
    8. 'v' → logprob: -15.133931159973145
    9. ' ' → logprob: -15.383931159973145
    10. 'N' → logprob: -15.883931159973145

Token 418: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5815658569335938
    2. ' +' → logprob: -0.8315658569335938
    3. ')]' → logprob: -5.206565856933594
    4. ')' → logprob: -9.706565856933594
    5. ' )' → logprob: -10.081565856933594
    6. ' ' → logprob: -11.706565856933594
    7. ' +
' → logprob: -12.706565856933594
    8. '1' → logprob: -12.956565856933594
    9. ')])' → logprob: -12.956565856933594
    10. '+
' → logprob: -13.456565856933594

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033665422233752906
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.250336647033691
    4. ')' → logprob: -16.000337600708008
    5. 'd' → logprob: -16.125337600708008
    6. '2' → logprob: -16.375337600708008
    7. 'self' → logprob: -16.500337600708008
    8. ' )' → logprob: -17.625337600708008
    9. '    ' → logprob: -17.812837600708008
    10. '=' → logprob: -18.125337600708008

Token 420: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016182278341148049
    2. ')' → logprob: -9.375162124633789
    3. ']' → logprob: -9.625162124633789
    4. ' )' → logprob: -11.625162124633789
    5. ' ]' → logprob: -13.750162124633789
    6. ')]
' → logprob: -15.500162124633789
    7. '))' → logprob: -16.12516212463379
    8. '   ' → logprob: -16.62516212463379
    9. '}]' → logprob: -16.62516212463379
    10. ')}' → logprob: -16.75016212463379

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7290583252906799
    2. '<|end|>' → logprob: -0.7290583252906799
    3. '   ' → logprob: -3.479058265686035
    4. '
' → logprob: -6.104058265686035
    5. '<|end|>' → logprob: -7.354058265686035
    6. 'self' → logprob: -7.354058265686035
    7. 'def' → logprob: -8.104058265686035
    8. '```' → logprob: -8.479058265686035
    9. '    
' → logprob: -9.229058265686035
    10. ' self' → logprob: -9.479058265686035

Token 422: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.027497660368680954
    2. '       ' → logprob: -3.6524977684020996
    3. ' self' → logprob: -6.9024977684021
    4. '```' → logprob: -10.027497291564941
    5. '
' → logprob: -10.152497291564941
    6. 'def' → logprob: -10.777497291564941
    7. '#' → logprob: -11.027497291564941
    8. '   ' → logprob: -11.277497291564941
    9. '[self' → logprob: -11.527497291564941
    10. '        
' → logprob: -11.902497291564941

Token 423: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.002723917830735445
    2. '.ds' → logprob: -6.627723693847656
    3. '.uf' → logprob: -7.752723693847656
    4. '.' → logprob: -8.002723693847656
    5. '._' → logprob: -8.377723693847656
    6. ' .' → logprob: -9.252723693847656
    7. '.dis' → logprob: -10.002723693847656
    8. '.dsl' → logprob: -10.377723693847656
    9. '.union' → logprob: -10.502723693847656
    10. '.edges' → logprob: -10.627723693847656

Token 424: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.001112116384319961
    2. 's' → logprob: -7.00111198425293
    3. 'set' → logprob: -9.50111198425293
    4. 'is' → logprob: -9.62611198425293
    5. '   ' → logprob: -11.37611198425293
    6. '

' → logprob: -11.62611198425293
    7. 'SU' → logprob: -11.87611198425293
    8. '```' → logprob: -12.50111198425293
    9. 'sj' → logprob: -12.75111198425293
    10. '=' → logprob: -12.75111198425293

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193047523498535
    2. '=' → logprob: -1.5019304752349854
    3. ' ' → logprob: -14.001930236816406
    4. 's' → logprob: -15.126930236816406
    5. ')' → logprob: -16.876930236816406
    6. '  ' → logprob: -17.251930236816406
    7. ':' → logprob: -17.501930236816406
    8. '	' → logprob: -17.626930236816406
    9. '   ' → logprob: -17.626930236816406
    10. '(' → logprob: -17.751930236816406

Token 426: ' Dis' (ID: 3946)
  Prédit: ' Dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dis' → logprob: -0.3868716359138489
    2. 'Dis' → logprob: -1.136871576309204
    3. '_Dis' → logprob: -15.386871337890625
    4. ' ' → logprob: -16.136871337890625
    5. '_dis' → logprob: -16.511871337890625
    6. '   ' → logprob: -16.761871337890625
    7. ' dis' → logprob: -17.011871337890625
    8. '.Dis' → logprob: -17.636871337890625
    9. 'Discrete' → logprob: -17.886871337890625
    10. 'DS' → logprob: -19.011871337890625

Token 427: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.45324021577835083
    2. 'oint' → logprob: -1.078240156173706
    3. 'Joint' → logprob: -4.578240394592285
    4. 'j' → logprob: -5.078240394592285
    5. 'ont' → logprob: -5.078240394592285
    6. 'nt' → logprob: -7.703240394592285
    7. 's' → logprob: -8.078240394592285
    8. 'join' → logprob: -8.328240394592285
    9. 'jo' → logprob: -8.953240394592285
    10. 't' → logprob: -9.203240394592285

Token 428: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -7.896309739408025e-07
    2. 'set' → logprob: -14.250000953674316
    3. '_set' → logprob: -16.5
    4. 'Sets' → logprob: -17.0
    5. 'Union' → logprob: -17.125
    6. 'et' → logprob: -19.0
    7. ' Set' → logprob: -19.25
    8. '[' → logprob: -19.75
    9. '_Set' → logprob: -20.0
    10. ' set' → logprob: -20.125

Token 429: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.04860950633883476
    2. 'Set' → logprob: -3.048609495162964
    3. ' Union' → logprob: -11.673609733581543
    4. 'Sets' → logprob: -12.798609733581543
    5. 'union' → logprob: -12.798609733581543
    6. 'set' → logprob: -13.423609733581543
    7. '(S' → logprob: -13.923609733581543
    8. 'Unit' → logprob: -13.923609733581543
    9. '(V' → logprob: -14.048609733581543
    10. 'S' → logprob: -14.548609733581543

Token 430: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.003225606167688966
    2. '(self' → logprob: -5.753225803375244
    3. '(' → logprob: -10.003225326538086
    4. '(
' → logprob: -14.003225326538086
    5. 'self' → logprob: -14.378225326538086
    6. '(len' → logprob: -14.503225326538086
    7. '(v' → logprob: -15.003225326538086
    8. ' (' → logprob: -15.628225326538086
    9. '((' → logprob: -15.753225326538086
    10. '(N' → logprob: -17.628225326538086

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1782583391759545e-05
    2. ')
' → logprob: -11.125031471252441
    3. ' )' → logprob: -11.250031471252441
    4. '))' → logprob: -13.250031471252441
    5. '       ' → logprob: -14.500031471252441
    6. '+' → logprob: -14.750031471252441
    7. ')`' → logprob: -15.375031471252441
    8. ')

' → logprob: -15.500031471252441
    9. '),' → logprob: -15.750031471252441
    10. '   ' → logprob: -15.750031471252441

Token 432: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20637370645999908
    2. '   ' → logprob: -2.706373691558838
    3. '<|end|>' → logprob: -2.831373691558838
    4. '    
' → logprob: -3.331373691558838
    5. 'def' → logprob: -3.831373691558838
    6. ' def' → logprob: -6.706373691558838
    7. '

' → logprob: -7.081373691558838
    8. '<|end|>' → logprob: -7.956373691558838
    9. '  
' → logprob: -8.456374168395996
    10. '       ' → logprob: -8.581374168395996

Token 433: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019599439576268196
    2. ' def' → logprob: -4.144599437713623
    3. '   ' → logprob: -5.644599437713623
    4. '
' → logprob: -11.769599914550781
    5. ' ' → logprob: -11.894599914550781
    6. '	def' → logprob: -12.144599914550781
    7. '    
' → logprob: -14.144599914550781
    8. '       ' → logprob: -14.269599914550781
    9. '<|end|>' → logprob: -15.269599914550781
    10. '  ' → logprob: -15.894599914550781

Token 434: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.451116051815916e-05
    2. ' def' → logprob: -10.750024795532227
    3. '   ' → logprob: -13.250024795532227
    4. 'from' → logprob: -14.375024795532227
    5. '
' → logprob: -15.125024795532227
    6. 'self' → logprob: -15.250024795532227
    7. 'import' → logprob: -16.500024795532227
    8. '    
' → logprob: -18.125024795532227
    9. '	def' → logprob: -18.375024795532227
    10. '       ' → logprob: -19.250024795532227

Token 435: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5069620013237
    2. 'solve' → logprob: -1.0069620609283447
    3. ' build' → logprob: -4.881961822509766
    4. ' find' → logprob: -5.006961822509766
    5. ' process' → logprob: -5.256961822509766
    6. 'build' → logprob: -6.131961822509766
    7. ' compute' → logprob: -6.256961822509766
    8. ' group' → logprob: -6.256961822509766
    9. 'process' → logprob: -6.881961822509766
    10. 'compute' → logprob: -6.881961822509766

Token 436: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0891474261879921
    2. '(' → logprob: -2.4641473293304443
    3. 'self' → logprob: -9.214147567749023
    4. '()' → logprob: -10.339147567749023
    5. ' (' → logprob: -10.464147567749023
    6. '   ' → logprob: -11.214147567749023
    7. '(
' → logprob: -11.339147567749023
    8. '_' → logprob: -11.464147567749023
    9. '       ' → logprob: -12.839147567749023
    10. '_(' → logprob: -12.839147567749023

Token 437: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05703267827630043
    2. '):' → logprob: -2.932032585144043
    3. ')' → logprob: -6.932032585144043
    4. '):
' → logprob: -7.432032585144043
    5. 'self' → logprob: -7.932032585144043
    6. ' ,' → logprob: -9.432032585144043
    7. '):
' → logprob: -9.807032585144043
    8. '   ' → logprob: -10.182032585144043
    9. '       ' → logprob: -11.182032585144043
    10. ' ):' → logprob: -11.432032585144043

Token 438: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5525000095367432
    2. ':' → logprob: -0.9275000095367432
    3. ':
' → logprob: -3.677500009536743
    4. '       ' → logprob: -6.052499771118164
    5. ':self' → logprob: -8.052499771118164
    6. 'self' → logprob: -8.177499771118164
    7. '   ' → logprob: -8.677499771118164
    8. ' ->' → logprob: -8.927499771118164
    9. '(' → logprob: -9.177499771118164
    10. '():' → logprob: -9.927499771118164

Token 439: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0769691988825798
    2. ' int' → logprob: -3.4519691467285156
    3. 'None' → logprob: -3.4519691467285156
    4. ' None' → logprob: -4.701969146728516
    5. 'list' → logprob: -7.451969146728516
    6. 'set' → logprob: -8.201969146728516
    7. 'bool' → logprob: -8.326969146728516
    8. ' list' → logprob: -8.576969146728516
    9. '[int' → logprob: -9.076969146728516
    10. 'str' → logprob: -9.951969146728516

Token 440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2321382313966751
    2. '(self' → logprob: -2.357138156890869
    3. ':
' → logprob: -2.607138156890869
    4. '       ' → logprob: -3.357138156890869
    5. '   ' → logprob: -6.357138156890869
    6. '(' → logprob: -7.107138156890869
    7. '(
' → logprob: -7.232138156890869
    8. '():' → logprob: -8.982138633728027
    9. '):
' → logprob: -9.232138633728027
    10. '():
' → logprob: -9.232138633728027

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001987722353078425
    2. ' for' → logprob: -9.625198364257812
    3. '   ' → logprob: -10.375198364257812
    4. '    ' → logprob: -10.625198364257812
    5. '        
' → logprob: -10.750198364257812
    6. '```' → logprob: -11.500198364257812
    7. '      ' → logprob: -11.875198364257812
    8. '        ' → logprob: -11.875198364257812
    9. 'for' → logprob: -12.250198364257812
    10. 'self' → logprob: -12.375198364257812

Token 442: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018880976364016533
    2. 'edges' → logprob: -5.143880844116211
    3. 'label' → logprob: -6.518880844116211
    4. 'result' → logprob: -6.643880844116211
    5. 'pairs' → logprob: -7.143880844116211
    6. 'labels' → logprob: -7.268880844116211
    7. 'from' → logprob: -7.268880844116211
    8. 'res' → logprob: -7.268880844116211
    9. '   ' → logprob: -7.518880844116211
    10. '       ' → logprob: -7.518880844116211

Token 443: ' Sort' (ID: 25945)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006538808345794678
    2. 'visited' → logprob: -6.3815388679504395
    3. 'from' → logprob: -6.8815388679504395
    4. 'labels' → logprob: -7.3815388679504395
    5. 'edges' → logprob: -7.7565388679504395
    6. ' for' → logprob: -7.8815388679504395
    7. 'threshold' → logprob: -8.256538391113281
    8. '#' → logprob: -8.381538391113281
    9. 'union' → logprob: -8.506538391113281
    10. 'pairs' → logprob: -8.756538391113281

Token 444: ' nodes' (ID: 15749)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10998121649026871
    2. '(self' → logprob: -2.9849812984466553
    3. ' self' → logprob: -3.3599812984466553
    4. '       ' → logprob: -4.234981060028076
    5. '_nodes' → logprob: -5.859981060028076
    6. 'nodes' → logprob: -7.484981060028076
    7. ' by' → logprob: -8.484981536865234
    8. 'by' → logprob: -8.484981536865234
    9. '(' → logprob: -9.234981536865234
    10. '	self' → logprob: -9.484981536865234

Token 445: ' by' (ID: 656)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6127521991729736
    2. '=' → logprob: -1.6127521991729736
    3. '       ' → logprob: -1.7377521991729736
    4. ' =' → logprob: -1.8627521991729736
    5. '(self' → logprob: -1.8627521991729736
    6. '()' → logprob: -3.7377521991729736
    7. ' by' → logprob: -4.1127519607543945
    8. 'self' → logprob: -4.4877519607543945
    9. '.sort' → logprob: -4.4877519607543945
    10. ',' → logprob: -4.6127519607543945

Token 446: ' label' (ID: 4208)
  Prédit: 'label'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'label' → logprob: -0.08407861739397049
    2. ' label' → logprob: -3.084078550338745
    3. 'lambda' → logprob: -3.584078550338745
    4. ' their' → logprob: -5.959078788757324
    5. ' lambda' → logprob: -6.209078788757324
    6. 'their' → logprob: -6.584078788757324
    7. 'node' → logprob: -7.584078788757324
    8. ' node' → logprob: -9.084078788757324
    9. '   ' → logprob: -9.334078788757324
    10. 'the' → logprob: -9.584078788757324

Token 447: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011793961748480797
    2. 'self' → logprob: -5.261794090270996
    3. ',' → logprob: -5.636794090270996
    4. ':' → logprob: -6.511794090270996
    5. '
' → logprob: -8.011794090270996
    6. ':
' → logprob: -8.136794090270996
    7. '.' → logprob: -8.636794090270996
    8. '(self' → logprob: -9.136794090270996
    9. ' self' → logprob: -9.511794090270996
    10. ' and' → logprob: -9.511794090270996

Token 448: ' optimize' (ID: 40398)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5366327166557312
    2. ' facilitate' → logprob: -1.911632776260376
    3. 'opt' → logprob: -2.036632776260376
    4. ' process' → logprob: -2.411632776260376
    5. ' optimize' → logprob: -4.411632537841797
    6. 'fac' → logprob: -4.911632537841797
    7. 'sort' → logprob: -5.786632537841797
    8. 'prepare' → logprob: -6.161632537841797
    9. 'find' → logprob: -6.161632537841797
    10. 'start' → logprob: -6.286632537841797

Token 449: ' connectivity' (ID: 45849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.873668372631073
    2. 'self' → logprob: -0.873668372631073
    3. 'for' → logprob: -2.7486684322357178
    4. ' for' → logprob: -2.7486684322357178
    5. ' self' → logprob: -3.7486684322357178
    6. '```' → logprob: -5.498668193817139
    7. '        
' → logprob: -5.873668193817139
    8. ',' → logprob: -7.123668193817139
    9. '(self' → logprob: -7.123668193817139
    10. 'prev' → logprob: -7.248668193817139

Token 450: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02369670383632183
    2. '
' → logprob: -4.0236968994140625
    3. ',' → logprob: -5.5236968994140625
    4. '        
' → logprob: -7.6486968994140625
    5. '```' → logprob: -7.8986968994140625
    6. ':' → logprob: -8.648696899414062
    7. 'self' → logprob: -9.148696899414062
    8. '<|end|>' → logprob: -9.398696899414062
    9. ' and' → logprob: -9.898696899414062
    10. '.' → logprob: -10.023696899414062

Token 451: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015561969950795174
    2. '
' → logprob: -4.390562057495117
    3. ',' → logprob: -6.140562057495117
    4. '        
' → logprob: -8.640562057495117
    5. ':' → logprob: -8.890562057495117
    6. '<|end|>' → logprob: -9.015562057495117
    7. '```' → logprob: -9.015562057495117
    8. 'self' → logprob: -9.265562057495117
    9. ' and' → logprob: -10.265562057495117
    10. ',
' → logprob: -10.515562057495117

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007199443876743317
    2. '
' → logprob: -5.257199287414551
    3. '        
' → logprob: -7.007199287414551
    4. ',' → logprob: -7.757199287414551
    5. '```' → logprob: -7.882199287414551
    6. '<|end|>' → logprob: -9.38219928741455
    7. ' for' → logprob: -10.00719928741455
    8. ':' → logprob: -10.50719928741455
    9. '   ' → logprob: -11.38219928741455
    10. '#' → logprob: -11.38219928741455

Token 453: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09292354434728622
    2. '       ' → logprob: -2.717923641204834
    3. ' self' → logprob: -3.842923641204834
    4. 'sorted' → logprob: -7.217923641204834
    5. 'nodes' → logprob: -7.717923641204834
    6. '```' → logprob: -10.467923164367676
    7. 'for' → logprob: -10.467923164367676
    8. ' nodes' → logprob: -10.967923164367676
    9. ' sorted' → logprob: -10.967923164367676
    10. '        
' → logprob: -12.092923164367676

Token 454: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -3.583550642360933e-05
    2. 'nodes' → logprob: -10.375036239624023
    3. '.' → logprob: -13.125036239624023
    4. ' .' → logprob: -14.125036239624023
    5. '	nodes' → logprob: -14.500036239624023
    6. '.sorted' → logprob: -15.250036239624023
    7. ').' → logprob: -15.750036239624023
    8. '
' → logprob: -16.125036239624023
    9. '.vertices' → logprob: -16.375036239624023
    10. 's' → logprob: -16.500036239624023

Token 455: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00012368128227535635
    2. '.' → logprob: -9.000123977661133
    3. ' .' → logprob: -16.750123977661133
    4. '.s' → logprob: -17.000123977661133
    5. '   ' → logprob: -17.250123977661133
    6. ').' → logprob: -17.375123977661133
    7. '.sorted' → logprob: -18.000123977661133
    8. 'sort' → logprob: -18.125123977661133
    9. '=' → logprob: -18.500123977661133
    10. '	sort' → logprob: -18.875123977661133

Token 456: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0007196996593847871
    2. '()' → logprob: -7.2507195472717285
    3. '(' → logprob: -12.000720024108887
    4. '(reverse' → logprob: -13.250720024108887
    5. '()
' → logprob: -14.125720024108887
    6. 'key' → logprob: -14.500720024108887
    7. '(
' → logprob: -14.625720024108887
    8. '(lambda' → logprob: -16.62571907043457
    9. ' key' → logprob: -18.00071907043457
    10. ',key' → logprob: -18.25071907043457

Token 457: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0002619318547658622
    2. '=' → logprob: -8.250262260437012
    3. 'lambda' → logprob: -14.500262260437012
    4. '(lambda' → logprob: -15.875262260437012
    5. ' lambda' → logprob: -18.375261306762695
    6. '=
' → logprob: -18.750261306762695
    7. 'attr' → logprob: -19.375261306762695
    8. ' =' → logprob: -19.750261306762695
    9. '=self' → logprob: -20.000261306762695
    10. '=len' → logprob: -20.625261306762695

Token 458: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.17079831659793854
    2. 'node' → logprob: -1.9207983016967773
    3. ' x' → logprob: -4.670798301696777
    4. 'x' → logprob: -6.795798301696777
    5. ' n' → logprob: -10.670798301696777
    6. 'n' → logprob: -11.420798301696777
    7. '	node' → logprob: -14.545798301696777
    8. '(node' → logprob: -15.795798301696777
    9. '_node' → logprob: -15.920798301696777
    10. ',node' → logprob: -16.795799255371094

Token 459: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03142222389578819
    2. ' node' → logprob: -3.9064221382141113
    3. 'node' → logprob: -4.781422138214111
    4. ' :' → logprob: -6.031422138214111
    5. '=node' → logprob: -10.65642261505127
    6. '	node' → logprob: -12.53142261505127
    7. ',node' → logprob: -13.28142261505127
    8. '(node' → logprob: -13.28142261505127
    9. '   ' → logprob: -14.03142261505127
    10. '[node' → logprob: -14.03142261505127

Token 460: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.20141518115997314
    2. ' node' → logprob: -1.7014151811599731
    3. '(node' → logprob: -13.451415061950684
    4. '	node' → logprob: -15.576415061950684
    5. ' ' → logprob: -15.826415061950684
    6. '.node' → logprob: -17.326416015625
    7. '   ' → logprob: -17.451416015625
    8. 'n' → logprob: -17.701416015625
    9. '[node' → logprob: -17.701416015625
    10. '/node' → logprob: -17.951416015625

Token 461: '.label' (ID: 6299)
  Prédit: '.label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.label' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.375005722045898
    3. 'label' → logprob: -14.250005722045898
    4. ' .' → logprob: -15.125005722045898
    5. '.labels' → logprob: -15.125005722045898
    6. '<label' → logprob: -15.750005722045898
    7. ').' → logprob: -16.0000057220459
    8. '.l' → logprob: -16.6250057220459
    9. '.le' → logprob: -17.3750057220459
    10. '.lab' → logprob: -18.0000057220459

Token 462: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034380643046461046
    2. ')
' → logprob: -8.000344276428223
    3. ' )' → logprob: -12.750344276428223
    4. ')

' → logprob: -13.000344276428223
    5. ',' → logprob: -13.625344276428223
    6. ')
' → logprob: -14.125344276428223
    7. ')`' → logprob: -15.000344276428223
    8. '))' → logprob: -15.125344276428223
    9. '   ' → logprob: -15.500344276428223
    10. '       ' → logprob: -16.000343322753906

Token 463: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23458513617515564
    2. '
' → logprob: -1.609585165977478
    3. '        
' → logprob: -5.234585285186768
    4. ' for' → logprob: -6.609585285186768
    5. '<|end|>' → logprob: -6.984585285186768
    6. ',' → logprob: -7.484585285186768
    7. 'for' → logprob: -8.10958480834961
    8. '  
' → logprob: -8.60958480834961
    9. '    
' → logprob: -9.60958480834961
    10. '```' → logprob: -9.73458480834961

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12734076380729675
    2. 'for' → logprob: -2.252340793609619
    3. ' for' → logprob: -4.252340793609619
    4. 'i' → logprob: -9.877340316772461
    5. ' i' → logprob: -9.877340316772461
    6. '   ' → logprob: -10.877340316772461
    7. '```' → logprob: -11.252340316772461
    8. 'from' → logprob: -11.502340316772461
    9. '      ' → logprob: -11.627340316772461
    10. '        
' → logprob: -12.377340316772461

Token 465: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009292102768085897
    2. 'i' → logprob: -7.375929355621338
    3. 'j' → logprob: -9.00092887878418
    4. 'left' → logprob: -9.87592887878418
    5. 'n' → logprob: -10.37592887878418
    6. 'import' → logprob: -10.75092887878418
    7. 'from' → logprob: -11.00092887878418
    8. 'edges' → logprob: -11.12592887878418
    9. 'l' → logprob: -11.87592887878418
    10. '   ' → logprob: -12.25092887878418

Token 466: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001088543445803225
    2. 'edges' → logprob: -8.12608814239502
    3. 'i' → logprob: -8.62608814239502
    4. 'from' → logprob: -9.12608814239502
    5. 'import' → logprob: -9.50108814239502
    6. 'labels' → logprob: -9.75108814239502
    7. '#' → logprob: -9.75108814239502
    8. 'threshold' → logprob: -9.87608814239502
    9. 'visited' → logprob: -10.50108814239502
    10. 'left' → logprob: -10.75108814239502

Token 467: ' labels' (ID: 17125)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7482541799545288
    2. ' self' → logprob: -1.6232541799545288
    3. ' the' → logprob: -2.1232542991638184
    4. ' for' → logprob: -2.7482542991638184
    5. 'for' → logprob: -3.4982542991638184
    6. 'abs' → logprob: -3.6232542991638184
    7. ' abs' → logprob: -3.8732542991638184
    8. 'the' → logprob: -4.123254299163818
    9. ' all' → logprob: -4.498254299163818
    10. 'd' → logprob: -5.123254299163818

Token 468: ' mod' (ID: 1812)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5907785296440125
    2. ' are' → logprob: -1.4657785892486572
    3. 'd' → logprob: -2.9657785892486572
    4. '   ' → logprob: -3.3407785892486572
    5. ' can' → logprob: -3.5907785892486572
    6. 'can' → logprob: -3.5907785892486572
    7. 'diff' → logprob: -4.090778350830078
    8. '[i' → logprob: -4.465778350830078
    9. ' differ' → logprob: -4.965778350830078
    10. ' of' → logprob: -4.965778350830078

Token 469: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2255803495645523
    2. ' self' → logprob: -1.6005803346633911
    3. 'F' → logprob: -9.600580215454102
    4. '100' → logprob: -9.600580215454102
    5. '       ' → logprob: -12.100580215454102
    6. ' F' → logprob: -12.350580215454102
    7. 'd' → logprob: -12.475580215454102
    8. ' ' → logprob: -12.725580215454102
    9. '=self' → logprob: -12.850580215454102
    10. ' Fibonacci' → logprob: -13.225580215454102

Token 470: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5142538547515869
    2. ',' → logprob: -2.139253854751587
    3. ' are' → logprob: -2.764253854751587
    4. '=' → logprob: -3.014253854751587
    5. '   ' → logprob: -3.139253854751587
    6. '       ' → logprob: -3.389253854751587
    7. 'can' → logprob: -4.389253616333008
    8. 'have' → logprob: -4.389253616333008
    9. 'may' → logprob: -4.389253616333008
    10. 'self' → logprob: -4.764253616333008

Token 471: ' in' (ID: 306)
  Prédit: 'bounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.7549587488174438
    2. 'in' → logprob: -1.5049587488174438
    3. 'at' → logprob: -3.0049586296081543
    4. 'sorted' → logprob: -3.1299586296081543
    5. 'from' → logprob: -3.5049586296081543
    6. ' at' → logprob: -3.5049586296081543
    7. 'within' → logprob: -3.5049586296081543
    8. ' in' → logprob: -3.7549586296081543
    9. 'limited' → logprob: -3.8799586296081543
    10. 'up' → logprob: -4.504958629608154

Token 472: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6318508386611938
    2. '[' → logprob: -1.5068508386611938
    3. ' range' → logprob: -1.6318508386611938
    4. 'self' → logprob: -4.256850719451904
    5. 'the' → logprob: -4.381850719451904
    6. ' [' → logprob: -4.381850719451904
    7. 'a' → logprob: -5.881850719451904
    8. ' the' → logprob: -6.131850719451904
    9. '[self' → logprob: -6.256850719451904
    10. '{' → logprob: -6.381850719451904

Token 473: ' [' (ID: 723)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005649913102388382
    2. '(' → logprob: -5.380650043487549
    3. 'self' → logprob: -7.380650043487549
    4. '(F' → logprob: -7.880650043487549
    5. '(
' → logprob: -11.25564956665039
    6. '[self' → logprob: -12.50564956665039
    7. '(len' → logprob: -12.75564956665039
    8. '       ' → logprob: -12.88064956665039
    9. ' self' → logprob: -13.00564956665039
    10. ' (' → logprob: -13.75564956665039

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3156132698059082
    2. 'self' → logprob: -1.3156132698059082
    3. '(self' → logprob: -6.315613269805908
    4. '(' → logprob: -8.19061279296875
    5. '
' → logprob: -9.56561279296875
    6. ' self' → logprob: -9.69061279296875
    7. 'F' → logprob: -10.06561279296875
    8. '100' → logprob: -10.31561279296875
    9. '1' → logprob: -10.56561279296875
    10. ' ' → logprob: -11.94061279296875

Token 475: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010592726175673306
    2. ' ,' → logprob: -9.875105857849121
    3. ',
' → logprob: -10.750105857849121
    4. '   ' → logprob: -12.125105857849121
    5. 'self' → logprob: -12.125105857849121
    6. ' ' → logprob: -12.625105857849121
    7. '100' → logprob: -12.750105857849121
    8. ',N' → logprob: -13.000105857849121
    9. '
' → logprob: -13.125105857849121
    10. '...' → logprob: -13.250105857849121

Token 476: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4944378137588501
    2. ')' → logprob: -2.1194376945495605
    3. '],' → logprob: -2.4944376945495605
    4. '-' → logprob: -2.4944376945495605
    5. '),
' → logprob: -3.1194376945495605
    6. ']' → logprob: -3.7444376945495605
    7. ')
' → logprob: -4.6194376945495605
    8. '1' → logprob: -4.7444376945495605
    9. '],
' → logprob: -4.9944376945495605
    10. ']
' → logprob: -5.6194376945495605

Token 477: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5884429812431335
    2. 'for' → logprob: -0.8384429812431335
    3. '       ' → logprob: -4.713442802429199
    4. ' i' → logprob: -7.213442802429199
    5. 'i' → logprob: -7.463442802429199
    6. '#' → logprob: -7.713442802429199
    7. 'max' → logprob: -8.2134428024292
    8. 'we' → logprob: -8.4634428024292
    9. '        
' → logprob: -8.5884428024292
    10. ' we' → logprob: -8.5884428024292

Token 478: ' difference' (ID: 9809)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3464883267879486
    2. 'N' → logprob: -1.846488356590271
    3. ' self' → logprob: -3.2214882373809814
    4. 'max' → logprob: -3.4714882373809814
    5. ' N' → logprob: -4.2214884757995605
    6. 'F' → logprob: -4.4714884757995605
    7. 'abs' → logprob: -4.7214884757995605
    8. 'the' → logprob: -5.0964884757995605
    9. ' the' → logprob: -5.2214884757995605
    10. ' max' → logprob: -5.3464884757995605

Token 479: ' must' (ID: 2804)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7038834095001221
    2. ' <=' → logprob: -1.328883409500122
    3. 's' → logprob: -1.828883409500122
    4. '=' → logprob: -3.828883409500122
    5. ' between' → logprob: -4.328883171081543
    6. 'self' → logprob: -4.828883171081543
    7. ' is' → logprob: -4.953883171081543
    8. 'between' → logprob: -5.328883171081543
    9. '==' → logprob: -5.453883171081543
    10. ')' → logprob: -5.953883171081543

Token 480: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.26497626304626465
    2. ' be' → logprob: -1.5149762630462646
    3. '<=' → logprob: -4.389976501464844
    4. ' <=' → logprob: -8.264976501464844
    5. 'not' → logprob: -9.014976501464844
    6. '==' → logprob: -9.764976501464844
    7. ' not' → logprob: -10.764976501464844
    8. 'exact' → logprob: -11.139976501464844
    9. '=' → logprob: -11.264976501464844
    10. ')<=' → logprob: -11.514976501464844

Token 481: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.02027067169547081
    2. 'self' → logprob: -4.520270824432373
    3. 'd' → logprob: -5.645270824432373
    4. 'less' → logprob: -6.270270824432373
    5. 'exact' → logprob: -6.645270824432373
    6. '<' → logprob: -6.770270824432373
    7. 'at' → logprob: -7.270270824432373
    8. '==' → logprob: -8.020270347595215
    9. ' <=' → logprob: -9.145270347595215
    10. '1' → logprob: -10.145270347595215

Token 482: ' d' (ID: 272)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032929708249866962
    2. '=self' → logprob: -6.378293037414551
    3. '=' → logprob: -6.753293037414551
    4. ' self' → logprob: -7.878293037414551
    5. '       ' → logprob: -10.87829303741455
    6. 'd' → logprob: -11.75329303741455
    7. ' =' → logprob: -12.12829303741455
    8. '   ' → logprob: -12.62829303741455
    9. '
' → logprob: -13.00329303741455
    10. '(self' → logprob: -13.12829303741455

Token 483: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029384789522737265
    2. '       ' → logprob: -6.627938270568848
    3. ',
' → logprob: -7.377938270568848
    4. ':' → logprob: -7.502938270568848
    5. ' for' → logprob: -9.002938270568848
    6. ' ,' → logprob: -9.002938270568848
    7. '=' → logprob: -10.127938270568848
    8. ' and' → logprob: -10.127938270568848
    9. 'for' → logprob: -10.627938270568848
    10. '.' → logprob: -10.752938270568848

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03770415112376213
    2. ' i' → logprob: -3.9127042293548584
    3. ' for' → logprob: -4.412703990936279
    4. 'for' → logprob: -5.787703990936279
    5. 'i' → logprob: -7.037703990936279
    6. '   ' → logprob: -8.787704467773438
    7. 'import' → logprob: -9.037704467773438
    8. 'max' → logprob: -9.537704467773438
    9. ' we' → logprob: -10.037704467773438
    10. 'start' → logprob: -10.037704467773438

Token 485: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39577555656433105
    2. 'i' → logprob: -2.020775556564331
    3. ' i' → logprob: -2.270775556564331
    4. ' for' → logprob: -3.520775556564331
    5. 'for' → logprob: -3.520775556564331
    6. 'j' → logprob: -3.895775556564331
    7. ' j' → logprob: -5.27077579498291
    8. 'start' → logprob: -7.02077579498291
    9. '   ' → logprob: -7.39577579498291
    10. 'idx' → logprob: -7.39577579498291

Token 486: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8893564939498901
    2. 'i' → logprob: -1.3893564939498901
    3. ' for' → logprob: -2.1393566131591797
    4. 'j' → logprob: -2.7643566131591797
    5. ' i' → logprob: -3.2643566131591797
    6. 'start' → logprob: -3.3893566131591797
    7. '       ' → logprob: -4.26435661315918
    8. 'l' → logprob: -4.63935661315918
    9. '   ' → logprob: -4.63935661315918
    10. ' j' → logprob: -4.76435661315918

Token 487: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8302443027496338
    2. ' can' → logprob: -1.0802443027496338
    3. 'can' → logprob: -2.955244302749634
    4. '   ' → logprob: -3.455244302749634
    5. 'for' → logprob: -3.580244302749634
    6. 'continue' → logprob: -3.705244302749634
    7. ' for' → logprob: -4.455244064331055
    8. 'will' → logprob: -4.705244064331055
    9. ' will' → logprob: -4.955244064331055
    10. 'need' → logprob: -4.955244064331055

Token 488: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.05384831875562668
    2. ' need' → logprob: -3.1788482666015625
    3. 'consider' → logprob: -5.0538482666015625
    4. 'check' → logprob: -6.0538482666015625
    5. '       ' → logprob: -6.9288482666015625
    6. 'have' → logprob: -7.3038482666015625
    7. 'iterate' → logprob: -9.053848266601562
    8. ' have' → logprob: -9.303848266601562
    9. ' consider' → logprob: -9.803848266601562
    10. '   ' → logprob: -9.928848266601562

Token 489: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47409728169441223
    2. 'to' → logprob: -0.9740972518920898
    3. '           ' → logprob: -12.22409725189209
    4. ' ' → logprob: -12.72409725189209
    5. 'self' → logprob: -13.34909725189209
    6. 'def' → logprob: -13.59909725189209
    7. 'for' → logprob: -13.59909725189209
    8. '   ' → logprob: -13.72409725189209
    9. '       ' → logprob: -13.84909725189209
    10. 't' → logprob: -13.97409725189209

Token 490: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.18459868431091309
    2. 'consider' → logprob: -1.809598684310913
    3. 'iterate' → logprob: -6.059598922729492
    4. ' check' → logprob: -6.434598922729492
    5. 'compare' → logprob: -8.184598922729492
    6. ' consider' → logprob: -8.684598922729492
    7. 'for' → logprob: -8.809598922729492
    8. 'scan' → logprob: -8.809598922729492
    9. 'connect' → logprob: -10.809598922729492
    10. 'process' → logprob: -11.059598922729492

Token 491: ' neighborhood' (ID: 17528)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.0273091793060303
    2. 'nodes' → logprob: -1.1523091793060303
    3. 'adj' → logprob: -2.2773091793060303
    4. ' nodes' → logprob: -2.2773091793060303
    5. ' neighbors' → logprob: -3.0273091793060303
    6. 'for' → logprob: -3.2773091793060303
    7. 'neighbor' → logprob: -4.902309417724609
    8. 'labels' → logprob: -4.902309417724609
    9. ' for' → logprob: -5.527309417724609
    10. 'j' → logprob: -5.902309417724609

Token 492: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023489810526371002
    2. ' nodes' → logprob: -5.023489952087402
    3. ' in' → logprob: -5.523489952087402
    4. ' of' → logprob: -5.648489952087402
    5. ' for' → logprob: -5.898489952087402
    6. ' indices' → logprob: -6.523489952087402
    7. 'for' → logprob: -7.273489952087402
    8. 'nodes' → logprob: -7.523489952087402
    9. 'indices' → logprob: -7.773489952087402
    10. ' s' → logprob: -7.773489952087402

Token 493: ' sorted' (ID: 20099)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2276802659034729
    2. 'self' → logprob: -1.9776802062988281
    3. 'range' → logprob: -3.227680206298828
    4. ' the' → logprob: -4.227680206298828
    5. 'labels' → logprob: -5.102680206298828
    6. 'label' → logprob: -6.352680206298828
    7. ' range' → logprob: -6.477680206298828
    8. 'sorted' → logprob: -7.477680206298828
    9. ' self' → logprob: -8.477680206298828
    10. ' labels' → logprob: -8.977680206298828

Token 494: ' nodes' (ID: 15749)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22032907605171204
    2. ' self' → logprob: -2.0953290462493896
    3. ' list' → logprob: -3.3453290462493896
    4. '(self' → logprob: -4.845329284667969
    5. 'list' → logprob: -4.970329284667969
    6. '_nodes' → logprob: -5.470329284667969
    7. '       ' → logprob: -5.595329284667969
    8. ' nodes' → logprob: -5.720329284667969
    9. 'nodes' → logprob: -5.845329284667969
    10. '[self' → logprob: -6.470329284667969

Token 495: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6784955263137817
    2. ' for' → logprob: -0.9284955263137817
    3. 'for' → logprob: -2.428495407104492
    4. ',' → logprob: -5.303495407104492
    5. '        
' → logprob: -6.053495407104492
    6. '.' → logprob: -7.428495407104492
    7. ':' → logprob: -7.803495407104492
    8. '
' → logprob: -8.178495407104492
    9. '   ' → logprob: -9.428495407104492
    10. ' i' → logprob: -9.678495407104492

Token 496: ' labels' (ID: 17125)
  Prédit: 'label'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'label' → logprob: -0.03409835696220398
    2. ' label' → logprob: -3.4090983867645264
    3. '<label' → logprob: -8.909098625183105
    4. 'value' → logprob: -9.034098625183105
    5. ''label' → logprob: -9.659098625183105
    6. 'labels' → logprob: -10.159098625183105
    7. '.label' → logprob: -10.909098625183105
    8. '   ' → logprob: -11.784098625183105
    9. '_label' → logprob: -11.784098625183105
    10. ' ' → logprob: -11.784098625183105

Token 497: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029194794595241547
    2. ' for' → logprob: -4.1541948318481445
    3. 'for' → logprob: -5.2791948318481445
    4. '        
' → logprob: -5.6541948318481445
    5. ',' → logprob: -6.1541948318481445
    6. '.' → logprob: -6.2791948318481445
    7. '
' → logprob: -8.904194831848145
    8. ':' → logprob: -9.279194831848145
    9. '       
' → logprob: -10.154194831848145
    10. '        ' → logprob: -10.279194831848145

Token 498: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006371794268488884
    2. '        
' → logprob: -5.506371974945068
    3. ' for' → logprob: -6.506371974945068
    4. 'for' → logprob: -8.00637149810791
    5. '
' → logprob: -8.50637149810791
    6. '        ' → logprob: -9.25637149810791
    7. ' i' → logprob: -10.25637149810791
    8. '   ' → logprob: -10.88137149810791
    9. '  
' → logprob: -11.00637149810791
    10. '```' → logprob: -11.13137149810791

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036730289459228516
    2. ' for' → logprob: -3.9117302894592285
    3. 'for' → logprob: -4.4117302894592285
    4. ' i' → logprob: -5.7867302894592285
    5. 'i' → logprob: -7.1617302894592285
    6. '   ' → logprob: -10.41172981262207
    7. '```' → logprob: -11.66172981262207
    8. '        ' → logprob: -12.16172981262207
    9. 'start' → logprob: -12.28672981262207
    10. 'j' → logprob: -12.53672981262207

Token 500: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011281117796897888
    2. 'i' → logprob: -4.6362810134887695
    3. 'j' → logprob: -7.3862810134887695
    4. 'result' → logprob: -8.26128101348877
    5. '       ' → logprob: -8.51128101348877
    6. '   ' → logprob: -9.26128101348877
    7. 'left' → logprob: -9.38628101348877
    8. 'n' → logprob: -9.88628101348877
    9. 'window' → logprob: -10.26128101348877
    10. 'limit' → logprob: -10.26128101348877

Token 501: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5760650634765625
    2. 'i' → logprob: -0.8260650634765625
    3. ' idx' → logprob: -10.076065063476562
    4. 'idx' → logprob: -10.451065063476562
    5. '   ' → logprob: -11.326065063476562
    6. '	i' → logprob: -11.451065063476562
    7. ' ' → logprob: -11.576065063476562
    8. '_i' → logprob: -11.951065063476562
    9. '```' → logprob: -12.576065063476562
    10. 'j' → logprob: -12.951065063476562

Token 502: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.050586674362421036
    2. 'in' → logprob: -3.050586700439453
    3. ' ' → logprob: -6.300586700439453
    4. ',' → logprob: -9.675586700439453
    5. '  ' → logprob: -10.300586700439453
    6. '   ' → logprob: -11.050586700439453
    7. '+' → logprob: -11.050586700439453
    8. '	in' → logprob: -11.050586700439453
    9. '    ' → logprob: -12.050586700439453
    10. '_' → logprob: -13.175586700439453

Token 503: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023252001032233238
    2. ' range' → logprob: -3.773252010345459
    3. ' ' → logprob: -12.7732515335083
    4. '   ' → logprob: -12.8982515335083
    5. '  ' → logprob: -14.1482515335083
    6. '	range' → logprob: -16.023252487182617
    7. '(range' → logprob: -16.148252487182617
    8. '    ' → logprob: -16.273252487182617
    9. '0' → logprob: -17.023252487182617
    10. '     ' → logprob: -17.398252487182617

Token 504: '(self' (ID: 2402)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.07117617130279541
    2. '(' → logprob: -2.821176052093506
    3. '(self' → logprob: -4.696176052093506
    4. ' (' → logprob: -10.946176528930664
    5. 'len' → logprob: -11.571176528930664
    6. ' len' → logprob: -12.696176528930664
    7. '1' → logprob: -13.321176528930664
    8. '(
' → logprob: -13.321176528930664
    9. '(s' → logprob: -13.946176528930664
    10. ' ' → logprob: -14.696176528930664

Token 505: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.691704511642456
    2. 'V' → logprob: -1.066704511642456
    3. '-' → logprob: -2.566704511642456
    4. ')' → logprob: -3.441704511642456
    5. ' ' → logprob: -4.316704750061035
    6. ' -' → logprob: -4.566704750061035
    7. 'len' → logprob: -5.191704750061035
    8. '   ' → logprob: -5.691704750061035
    9. 'def' → logprob: -6.066704750061035
    10. 'self' → logprob: -6.191704750061035

Token 506: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6269857883453369
    2. '):' → logprob: -1.126985788345337
    3. '-' → logprob: -2.126985788345337
    4. '):
' → logprob: -3.876985788345337
    5. ' ):' → logprob: -7.126985549926758
    6. '   ' → logprob: -7.251985549926758
    7. ')' → logprob: -9.126985549926758
    8. '       ' → logprob: -9.501985549926758
    9. ' ' → logprob: -9.626985549926758
    10. ' ):
' → logprob: -10.376985549926758

Token 507: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5000548958778381
    2. '           ' → logprob: -1.2500548362731934
    3. ' for' → logprob: -3.3750548362731934
    4. ',' → logprob: -3.8750548362731934
    5. ':' → logprob: -4.000054836273193
    6. ' ' → logprob: -4.875054836273193
    7. '   ' → logprob: -4.875054836273193
    8. '        ' → logprob: -5.125054836273193
    9. '    ' → logprob: -6.125054836273193
    10. 'for' → logprob: -6.500054836273193

Token 508: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.13756906986236572
    2. 'for' → logprob: -2.262568950653076
    3. ' for' → logprob: -4.262568950653076
    4. ' j' → logprob: -4.637568950653076
    5. '   ' → logprob: -7.887568950653076
    6. '       ' → logprob: -8.262569427490234
    7. '           ' → logprob: -11.262569427490234
    8. 'node' → logprob: -11.637569427490234
    9. '	j' → logprob: -12.137569427490234
    10. 'current' → logprob: -12.762569427490234

Token 509: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48017141222953796
    2. '=' → logprob: -0.9801714420318604
    3. '=i' → logprob: -5.105171203613281
    4. ')' → logprob: -12.730171203613281
    5. '=j' → logprob: -12.980171203613281
    6. ' ' → logprob: -13.230171203613281
    7. '   ' → logprob: -14.355171203613281
    8. 'i' → logprob: -14.480171203613281
    9. '=
' → logprob: -14.730171203613281
    10. ' i' → logprob: -14.855171203613281

Token 510: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1517960956552997e-05
    2. ' i' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.750011444091797
    4. '	i' → logprob: -18.500011444091797
    5. '=i' → logprob: -19.750011444091797
    6. ')i' → logprob: -20.375011444091797
    7. ' ' → logprob: -21.000011444091797
    8. 'I' → logprob: -21.375011444091797
    9. '  ' → logprob: -21.875011444091797
    10. ')' → logprob: -22.125011444091797

Token 511: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00407923199236393
    2. ' +' → logprob: -5.504079341888428
    3. '1' → logprob: -15.12907886505127
    4. '+
' → logprob: -15.12907886505127
    5. '+j' → logprob: -16.004079818725586
    6. '+i' → logprob: -16.004079818725586
    7. '+=' → logprob: -17.629079818725586
    8. '()+' → logprob: -17.879079818725586
    9. '＋' → logprob: -18.754079818725586
    10. '<|end|>' → logprob: -18.879079818725586

Token 512: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.875051498413086
    4. '<|end|>' → logprob: -16.812551498413086
    5. '0' → logprob: -17.312551498413086
    6. '```' → logprob: -18.187551498413086
    7. '  ' → logprob: -18.250051498413086
    8. '[' → logprob: -18.312551498413086
    9. ',' → logprob: -18.687551498413086
    10. '
' → logprob: -18.750051498413086

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. 'for' → logprob: -17.875001907348633
    4. '<|end|>' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.687501907348633
    6. '```' → logprob: -18.812501907348633
    7. 'while' → logprob: -18.937501907348633
    8. '0' → logprob: -19.000001907348633
    9. '[' → logprob: -19.312501907348633
    10. '
' → logprob: -20.062501907348633

Token 514: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11853665113449097
    2. '           ' → logprob: -2.9935367107391357
    3. '       ' → logprob: -3.1185367107391357
    4. 'while' → logprob: -4.868536472320557
    5. '<|end|>' → logprob: -5.743536472320557
    6. '        
' → logprob: -5.868536472320557
    7. ' while' → logprob: -6.618536472320557
    8. '            
' → logprob: -7.243536472320557
    9. '  
' → logprob: -7.743536472320557
    10. ' 
' → logprob: -7.743536472320557

Token 515: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28484684228897095
    2. 'while' → logprob: -2.159846782684326
    3. '       ' → logprob: -2.284846782684326
    4. '           ' → logprob: -3.784846782684326
    5. ' while' → logprob: -5.784846782684326
    6. '        
' → logprob: -6.409846782684326
    7. '<|end|>' → logprob: -6.534846782684326
    8. '            
' → logprob: -7.909846782684326
    9. '	while' → logprob: -8.034847259521484
    10. '
' → logprob: -8.159847259521484

Token 516: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06755538284778595
    2. ' while' → logprob: -2.8175554275512695
    3. '           ' → logprob: -5.5675554275512695
    4. '       ' → logprob: -6.8175554275512695
    5. '
' → logprob: -7.4425554275512695
    6. '	while' → logprob: -10.69255542755127
    7. '            
' → logprob: -11.19255542755127
    8. '```' → logprob: -11.81755542755127
    9. '               ' → logprob: -12.19255542755127
    10. '        ' → logprob: -12.31755542755127

Token 517: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002695608709473163
    2. ' j' → logprob: -8.375269889831543
    3. '(j' → logprob: -10.750269889831543
    4. '(' → logprob: -11.375269889831543
    5. 'self' → logprob: -13.000269889831543
    6. '   ' → logprob: -13.625269889831543
    7. '(
' → logprob: -14.250269889831543
    8. '	j' → logprob: -14.750269889831543
    9. ' (' → logprob: -15.125269889831543
    10. '```' → logprob: -15.375269889831543

Token 518: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12718206644058228
    2. ' <' → logprob: -2.1271820068359375
    3. '<V' → logprob: -9.002182006835938
    4. '<len' → logprob: -9.377182006835938
    5. '<n' → logprob: -10.627182006835938
    6. '<size' → logprob: -12.252182006835938
    7. '<this' → logprob: -13.252182006835938
    8. '<Self' → logprob: -13.502182006835938
    9. ' ' → logprob: -13.752182006835938
    10. 'j' → logprob: -14.002182006835938

Token 519: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012439649435691535
    2. ' self' → logprob: -9.000123977661133
    3. 'len' → logprob: -14.625123977661133
    4. '
' → logprob: -15.000123977661133
    5. '           ' → logprob: -16.750123977661133
    6. '       ' → logprob: -17.250123977661133
    7. '(self' → logprob: -17.625123977661133
    8. '   ' → logprob: -18.000123977661133
    9. '=self' → logprob: -18.875123977661133
    10. '	self' → logprob: -19.000123977661133

Token 520: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.0016024599317461252
    2. 'V' → logprob: -6.751602649688721
    3. 'self' → logprob: -7.751602649688721
    4. '   ' → logprob: -14.126602172851562
    5. '       ' → logprob: -14.876602172851562
    6. '.N' → logprob: -15.501602172851562
    7. '	V' → logprob: -15.751602172851562
    8. '.' → logprob: -15.876602172851562
    9. '           ' → logprob: -16.001602172851562
    10. ')' → logprob: -16.626602172851562

Token 521: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31328243017196655
    2. 'and' → logprob: -1.3132824897766113
    3. '           ' → logprob: -11.063282012939453
    4. ' ' → logprob: -13.938282012939453
    5. '               ' → logprob: -13.938282012939453
    6. '          ' → logprob: -13.938282012939453
    7. '            ' → logprob: -14.688282012939453
    8. '       ' → logprob: -14.688282012939453
    9. '   ' → logprob: -15.063282012939453
    10. '              ' → logprob: -15.938282012939453

Token 522: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019521836657077074
    2. 'abs' → logprob: -6.751952171325684
    3. ' self' → logprob: -7.251952171325684
    4. '(self' → logprob: -9.751952171325684
    5. '   ' → logprob: -12.126952171325684
    6. ' abs' → logprob: -12.501952171325684
    7. '(abs' → logprob: -13.126952171325684
    8. '           ' → logprob: -14.001952171325684
    9. '       ' → logprob: -14.126952171325684
    10. ' (' → logprob: -14.251952171325684

Token 523: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.0004833425919059664
    2. 'nodes' → logprob: -8.000483512878418
    3. '.' → logprob: -9.250483512878418
    4. '.d' → logprob: -11.000483512878418
    5. '	nodes' → logprob: -11.625483512878418
    6. 'self' → logprob: -11.875483512878418
    7. '.n' → logprob: -13.250483512878418
    8. '.abs' → logprob: -13.375483512878418
    9. ' nodes' → logprob: -13.375483512878418
    10. '   ' → logprob: -13.500483512878418

Token 524: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001382241171086207
    2. '[' → logprob: -9.250138282775879
    3. '[i' → logprob: -11.000138282775879
    4. '[
' → logprob: -11.750138282775879
    5. '.' → logprob: -12.375138282775879
    6. ' [' → logprob: -12.750138282775879
    7. ')[' → logprob: -13.125138282775879
    8. ')' → logprob: -13.375138282775879
    9. '[self' → logprob: -14.375138282775879
    10. ''[' → logprob: -14.375138282775879

Token 525: '].' (ID: 1651)
  Prédit: '.label'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.label' → logprob: -0.0055490355007350445
    2. ').' → logprob: -5.88054895401001
    3. '].' → logprob: -6.13054895401001
    4. '.' → logprob: -8.130549430847168
    5. ' .' → logprob: -8.880549430847168
    6. '.labels' → logprob: -10.755549430847168
    7. '.space' → logprob: -10.880549430847168
    8. ' ].' → logprob: -11.505549430847168
    9. '.code' → logprob: -11.630549430847168
    10. ')' → logprob: -11.755549430847168

Token 526: 'label' (ID: 3198)
  Prédit: 'label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'label' → logprob: -2.6537622034084052e-05
    2. '.label' → logprob: -10.75002670288086
    3. ' label' → logprob: -12.87502670288086
    4. '<label' → logprob: -13.62502670288086
    5. '.' → logprob: -15.12502670288086
    6. ''label' → logprob: -15.12502670288086
    7. '   ' → logprob: -15.62502670288086
    8. 'index' → logprob: -16.12502670288086
    9. '	label' → logprob: -16.75002670288086
    10. '[label' → logprob: -16.87502670288086

Token 527: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.632767915725708
    2. '-' → logprob: -0.757767915725708
    3. '<' → logprob: -8.882767677307129
    4. ' <' → logprob: -10.882767677307129
    5. '<=' → logprob: -12.382767677307129
    6. ' ' → logprob: -13.257767677307129
    7. ')' → logprob: -13.507767677307129
    8. '   ' → logprob: -14.132767677307129
    9. '-self' → logprob: -14.507767677307129
    10. '[' → logprob: -14.882767677307129

Token 528: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009149204124696553
    2. ' self' → logprob: -7.000915050506592
    3. '           ' → logprob: -14.000914573669434
    4. '[self' → logprob: -14.250914573669434
    5. '   ' → logprob: -14.875914573669434
    6. '       ' → logprob: -15.000914573669434
    7. '	self' → logprob: -15.250914573669434
    8. '=self' → logprob: -15.375914573669434
    9. '(self' → logprob: -15.875914573669434
    10. ' ' → logprob: -16.00091552734375

Token 529: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.0005699523026123643
    2. 'nodes' → logprob: -7.625569820404053
    3. '	nodes' → logprob: -10.250570297241211
    4. '.' → logprob: -11.875570297241211
    5. ').' → logprob: -12.500570297241211
    6. ' .' → logprob: -12.500570297241211
    7. '.tokens' → logprob: -12.750570297241211
    8. '].' → logprob: -12.875570297241211
    9. '.Nodes' → logprob: -12.875570297241211
    10. ' nodes' → logprob: -13.000570297241211

Token 530: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1054253011243418e-05
    2. '[j' → logprob: -11.250020980834961
    3. 'i' → logprob: -12.250020980834961
    4. '[' → logprob: -13.000020980834961
    5. '[
' → logprob: -15.500020980834961
    6. '```' → logprob: -15.625020980834961
    7. '{i' → logprob: -15.875020980834961
    8. '   ' → logprob: -16.37502098083496
    9. '[I' → logprob: -16.50002098083496
    10. '[node' → logprob: -17.25002098083496

Token 531: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.712324857711792
    2. '.label' → logprob: -1.337324857711792
    3. '.' → logprob: -1.587324857711792
    4. ').' → logprob: -3.337324857711792
    5. '.j' → logprob: -6.087325096130371
    6. '.labels' → logprob: -7.212325096130371
    7. ' .' → logprob: -7.587325096130371
    8. '[' → logprob: -7.712325096130371
    9. '}.' → logprob: -7.962325096130371
    10. '.node' → logprob: -7.962325096130371

Token 532: 'label' (ID: 3198)
  Prédit: 'label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'label' → logprob: -2.558399319241289e-05
    2. ' label' → logprob: -11.500025749206543
    3. '<label' → logprob: -11.625025749206543
    4. ''label' → logprob: -13.375025749206543
    5. 'l' → logprob: -13.500025749206543
    6. '.label' → logprob: -14.125025749206543
    7. 'lab' → logprob: -14.375025749206543
    8. '_label' → logprob: -14.625025749206543
    9. '	label' → logprob: -15.250025749206543
    10. '```' → logprob: -15.500025749206543

Token 533: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06998367607593536
    2. ' <' → logprob: -2.694983720779419
    3. '<=' → logprob: -11.81998348236084
    4. ')' → logprob: -11.94498348236084
    5. '[' → logprob: -11.94498348236084
    6. '<int' → logprob: -11.94498348236084
    7. ' ' → logprob: -12.81998348236084
    8. '<n' → logprob: -13.31998348236084
    9. '()<' → logprob: -13.69498348236084
    10. '<|end|>' → logprob: -13.69498348236084

Token 534: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010361451422795653
    2. ' self' → logprob: -6.876036167144775
    3. '       ' → logprob: -13.126035690307617
    4. '           ' → logprob: -14.751035690307617
    5. '
' → logprob: -15.001035690307617
    6. '=self' → logprob: -15.126035690307617
    7. '	self' → logprob: -16.251035690307617
    8. '(self' → logprob: -16.251035690307617
    9. '   ' → logprob: -16.376035690307617
    10. '[self' → logprob: -17.376035690307617

Token 535: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.018172889947891235
    2. 'd' → logprob: -4.018172740936279
    3. '.' → logprob: -11.268173217773438
    4. 'self' → logprob: -11.893173217773438
    5. ' .' → logprob: -14.143173217773438
    6. '	d' → logprob: -14.268173217773438
    7. ' d' → logprob: -14.643173217773438
    8. ')d' → logprob: -15.393173217773438
    9. '
' → logprob: -15.518173217773438
    10. '>d' → logprob: -15.643173217773438

Token 536: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14657394587993622
    2. ':
' → logprob: -2.021574020385742
    3. '           ' → logprob: -6.271574020385742
    4. '               ' → logprob: -6.396574020385742
    5. ' and' → logprob: -8.771574020385742
    6. '):
' → logprob: -9.396574020385742
    7. '):' → logprob: -10.521574020385742
    8. ':
' → logprob: -10.896574020385742
    9. 'and' → logprob: -11.146574020385742
    10. ':

' → logprob: -11.521574020385742

Token 537: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005188458599150181
    2. '           ' → logprob: -5.380188465118408
    3. '                
' → logprob: -8.13018798828125
    4. '            
' → logprob: -10.00518798828125
    5. '```' → logprob: -10.13018798828125
    6. ':
' → logprob: -10.13018798828125
    7. ',' → logprob: -10.25518798828125
    8. ':' → logprob: -10.50518798828125
    9. '<|end|>' → logprob: -10.88018798828125
    10. '              ' → logprob: -11.50518798828125

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014440017752349377
    2. 'if' → logprob: -4.389440059661865
    3. '               ' → logprob: -7.014440059661865
    4. ' self' → logprob: -8.014439582824707
    5. 'x' → logprob: -8.139439582824707
    6. 'u' → logprob: -8.264439582824707
    7. '           ' → logprob: -10.514439582824707
    8. 'idx' → logprob: -10.514439582824707
    9. 'node' → logprob: -10.639439582824707
    10. '   ' → logprob: -10.764439582824707

Token 539: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.000104616025055293
    2. 'd' → logprob: -10.125104904174805
    3. '.' → logprob: -11.125104904174805
    4. '
' → logprob: -11.375104904174805
    5. 'if' → logprob: -11.625104904174805
    6. '.ds' → logprob: -11.875104904174805
    7. ' .' → logprob: -12.625104904174805
    8. 'ds' → logprob: -12.625104904174805
    9. 'self' → logprob: -13.000104904174805
    10. ').' → logprob: -13.125104904174805

Token 540: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0001037815964082256
    2. '.s' → logprob: -9.500103950500488
    3. 'sus' → logprob: -11.750103950500488
    4. '   ' → logprob: -12.500103950500488
    5. 's' → logprob: -12.875103950500488
    6. 'sup' → logprob: -13.000103950500488
    7. 'sum' → logprob: -13.625103950500488
    8. '
' → logprob: -14.125103950500488
    9. 'SU' → logprob: -14.375103950500488
    10. 'sw' → logprob: -14.375103950500488

Token 541: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -4.723352049040841e-06
    2. 'union' → logprob: -12.750004768371582
    3. '.' → logprob: -13.500004768371582
    4. '.un' → logprob: -15.750004768371582
    5. '.uniform' → logprob: -16.500003814697266
    6. '.merge' → logprob: -16.625003814697266
    7. ' .' → logprob: -17.000003814697266
    8. '	union' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '.unit' → logprob: -17.875003814697266

Token 542: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.244413766078651e-05
    2. '(i' → logprob: -9.750082015991211
    3. '(' → logprob: -11.375082015991211
    4. 'self' → logprob: -11.375082015991211
    5. '(
' → logprob: -13.750082015991211
    6. ' self' → logprob: -17.12508201599121
    7. '(j' → logprob: -17.62508201599121
    8. '((' → logprob: -17.75008201599121
    9. ' (' → logprob: -18.12508201599121
    10. '(this' → logprob: -18.37508201599121

Token 543: '.nodes' (ID: 44152)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.768147885799408
    2. 'nodes' → logprob: -1.2681479454040527
    3. '.nodes' → logprob: -1.3931479454040527
    4. ' i' → logprob: -6.018147945404053
    5. '.i' → logprob: -7.018147945404053
    6. '[i' → logprob: -7.268147945404053
    7. 'self' → logprob: -7.268147945404053
    8. ')' → logprob: -8.018147468566895
    9. ' nodes' → logprob: -8.268147468566895
    10. '(i' → logprob: -8.518147468566895

Token 544: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004239615984261036
    2. '[j' → logprob: -5.504239559173584
    3. 'i' → logprob: -9.379240036010742
    4. '[' → logprob: -10.629240036010742
    5. ')[' → logprob: -10.879240036010742
    6. ')' → logprob: -12.004240036010742
    7. ' [' → logprob: -12.504240036010742
    8. '(i' → logprob: -12.504240036010742
    9. '[
' → logprob: -12.754240036010742
    10. 'j' → logprob: -12.879240036010742

Token 545: '].' (ID: 1651)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.06458545476198196
    2. ').' → logprob: -3.0645854473114014
    3. '.' → logprob: -4.4395856857299805
    4. '].' → logprob: -6.3145856857299805
    5. ' .' → logprob: -7.1895856857299805
    6. '.code' → logprob: -8.18958568572998
    7. '}.' → logprob: -8.31458568572998
    8. '.idx' → logprob: -8.56458568572998
    9. '.token' → logprob: -9.06458568572998
    10. '.id' → logprob: -9.68958568572998

Token 546: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -3.225939872208983e-05
    2. ' index' → logprob: -11.125032424926758
    3. '.index' → logprob: -11.375032424926758
    4. 'j' → logprob: -13.250032424926758
    5. '   ' → logprob: -13.500032424926758
    6. ' ' → logprob: -14.250032424926758
    7. '.' → logprob: -14.750032424926758
    8. '
' → logprob: -15.000032424926758
    9. '       ' → logprob: -15.875032424926758
    10. '    ' → logprob: -16.000032424926758

Token 547: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004108796361833811
    2. ' ,' → logprob: -5.754108905792236
    3. ',self' → logprob: -7.754108905792236
    4. '               ' → logprob: -8.379108428955078
    5. 'self' → logprob: -8.504108428955078
    6. ',
' → logprob: -10.629108428955078
    7. '                   ' → logprob: -11.254108428955078
    8. '           ' → logprob: -12.004108428955078
    9. '),' → logprob: -12.504108428955078
    10. '                ' → logprob: -12.629108428955078

Token 548: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021045419271104038
    2. ' ' → logprob: -8.500210762023926
    3. '0' → logprob: -13.000210762023926
    4. ')' → logprob: -13.750210762023926
    5. '                   ' → logprob: -13.750210762023926
    6. '               ' → logprob: -14.125210762023926
    7. '           ' → logprob: -14.750210762023926
    8. '   ' → logprob: -15.375210762023926
    9. '                       ' → logprob: -15.500210762023926
    10. '
' → logprob: -15.875210762023926

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '                   ' → logprob: -14.875014305114746
    4. '           ' → logprob: -15.375014305114746
    5. '               ' → logprob: -15.625014305114746
    6. '   ' → logprob: -15.875014305114746
    7. '0' → logprob: -16.50001335144043
    8. '                       ' → logprob: -17.00001335144043
    9. '
' → logprob: -17.62501335144043
    10. ')' → logprob: -17.75001335144043

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011319868644932285
    2. ' ,' → logprob: -9.500113487243652
    3. ',self' → logprob: -10.500113487243652
    4. ',
' → logprob: -11.875113487243652
    5. 'self' → logprob: -13.250113487243652
    6. '               ' → logprob: -14.125113487243652
    7. '                   ' → logprob: -15.125113487243652
    8. ',j' → logprob: -15.250113487243652
    9. ',
' → logprob: -16.125112533569336
    10. ')' → logprob: -16.125112533569336

Token 551: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006727564614266157
    2. ' self' → logprob: -5.006727695465088
    3. '               ' → logprob: -11.63172721862793
    4. '           ' → logprob: -13.88172721862793
    5. '                   ' → logprob: -14.00672721862793
    6. '[self' → logprob: -14.63172721862793
    7. '       ' → logprob: -15.25672721862793
    8. '   ' → logprob: -15.25672721862793
    9. '	self' → logprob: -15.63172721862793
    10. '(self' → logprob: -16.50672721862793

Token 552: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.032037168741226196
    2. 'nodes' → logprob: -3.5320372581481934
    3. 'self' → logprob: -6.407037258148193
    4. '_nodes' → logprob: -8.282036781311035
    5. ' nodes' → logprob: -8.407036781311035
    6. '               ' → logprob: -10.032036781311035
    7. '	nodes' → logprob: -10.157036781311035
    8. '   ' → logprob: -10.907036781311035
    9. ').' → logprob: -11.157036781311035
    10. '[self' → logprob: -11.532036781311035

Token 553: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.020558586344122887
    2. 'j' → logprob: -3.8955585956573486
    3. ' j' → logprob: -11.77055835723877
    4. '	j' → logprob: -12.52055835723877
    5. '```' → logprob: -13.14555835723877
    6. '[' → logprob: -14.27055835723877
    7. '[i' → logprob: -14.89555835723877
    8. '
' → logprob: -15.02055835723877
    9. '][' → logprob: -15.14555835723877
    10. '[
' → logprob: -15.27055835723877

Token 554: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.7066205739974976
    2. '.index' → logprob: -0.7066205739974976
    3. ').' → logprob: -4.956620693206787
    4. '.' → logprob: -5.206620693206787
    5. '.code' → logprob: -8.581620216369629
    6. ']' → logprob: -9.206620216369629
    7. ' .' → logprob: -9.206620216369629
    8. '}.' → logprob: -9.331620216369629
    9. '.idx' → logprob: -9.456620216369629
    10. '.user' → logprob: -10.206620216369629

Token 555: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0001261845463886857
    2. 'i' → logprob: -9.125125885009766
    3. ' index' → logprob: -11.125125885009766
    4. '.index' → logprob: -13.250125885009766
    5. 'j' → logprob: -15.250125885009766
    6. 'label' → logprob: -15.375125885009766
    7. 'idx' → logprob: -16.125125885009766
    8. ' i' → logprob: -17.000125885009766
    9. '	index' → logprob: -17.250125885009766
    10. ' ' → logprob: -17.500125885009766

Token 556: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00987366121262312
    2. '-' → logprob: -4.634873867034912
    3. ')' → logprob: -9.134873390197754
    4. ' ' → logprob: -13.009873390197754
    5. '   ' → logprob: -13.259873390197754
    6. '           ' → logprob: -13.884873390197754
    7. '<|end|>' → logprob: -13.884873390197754
    8. '```' → logprob: -14.259873390197754
    9. '-)' → logprob: -14.384873390197754
    10. '               ' → logprob: -14.509873390197754

Token 557: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028083212673664093
    2. ' ' → logprob: -5.877808094024658
    3. '```' → logprob: -14.127808570861816
    4. ')' → logprob: -14.252808570861816
    5. '           ' → logprob: -14.252808570861816
    6. '   ' → logprob: -15.065308570861816
    7. '               ' → logprob: -15.315308570861816
    8. '-' → logprob: -15.690308570861816
    9. '                   ' → logprob: -16.0028076171875
    10. '0' → logprob: -16.1903076171875

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.613945101387799e-05
    2. ' ' → logprob: -9.375085830688477
    3. '0' → logprob: -14.625085830688477
    4. '   ' → logprob: -15.062585830688477
    5. '```' → logprob: -16.312585830688477
    6. '           ' → logprob: -16.687585830688477
    7. ')' → logprob: -17.437585830688477
    8. '-' → logprob: -17.500085830688477
    9. '       ' → logprob: -17.625085830688477
    10. '
' → logprob: -17.812585830688477

Token 559: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2664831280708313
    2. '               ' → logprob: -1.7664830684661865
    3. ')' → logprob: -2.7664830684661865
    4. ')
' → logprob: -9.516483306884766
    5. '           ' → logprob: -10.516483306884766
    6. '                   ' → logprob: -12.266483306884766
    7. ')

' → logprob: -12.516483306884766
    8. ' )
' → logprob: -12.766483306884766
    9. '              ' → logprob: -14.516483306884766
    10. '```' → logprob: -14.641483306884766

Token 560: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014072739577386528
    2. 'j' → logprob: -9.625141143798828
    3. '           ' → logprob: -9.625141143798828
    4. '                   ' → logprob: -12.250141143798828
    5. '                
' → logprob: -13.125141143798828
    6. '```' → logprob: -14.750141143798828
    7. '              ' → logprob: -14.875141143798828
    8. '
' → logprob: -15.125141143798828
    9. ' j' → logprob: -15.250141143798828
    10. '	           ' → logprob: -15.750141143798828

Token 561: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.015353497117757797
    2. '               ' → logprob: -4.265353679656982
    3. ' j' → logprob: -6.890353679656982
    4. '                   ' → logprob: -8.765353202819824
    5. '           ' → logprob: -11.515353202819824
    6. '                ' → logprob: -13.265353202819824
    7. '```' → logprob: -13.640353202819824
    8. '   ' → logprob: -14.640353202819824
    9. '                
' → logprob: -14.640353202819824
    10. '	j' → logprob: -14.765353202819824

Token 562: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003473825636319816
    2. ' +=' → logprob: -8.000347137451172
    3. '+' → logprob: -11.375347137451172
    4. ']+=' → logprob: -15.000347137451172
    5. '=' → logprob: -16.000347137451172
    6. '+='' → logprob: -18.875347137451172
    7. '+="' → logprob: -19.000347137451172
    8. '++' → logprob: -19.375347137451172
    9. '```' → logprob: -19.375347137451172
    10. ')' → logprob: -20.000347137451172

Token 563: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.250085830688477
    4. '  ' → logprob: -18.375085830688477
    5. '```' → logprob: -19.062585830688477
    6. '    ' → logprob: -19.875085830688477
    7. '           ' → logprob: -20.125085830688477
    8. '۱' → logprob: -20.625085830688477
    9. '１' → logprob: -20.750085830688477
    10. ' ' → logprob: -20.937585830688477

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.750009536743164
    4. '```' → logprob: -18.062509536743164
    5. '
' → logprob: -18.937509536743164
    6. '  ' → logprob: -19.312509536743164
    7. '۱' → logprob: -19.625009536743164
    8. '           ' → logprob: -19.687509536743164
    9. '１' → logprob: -20.062509536743164
    10. '2' → logprob: -20.125009536743164

Token 565: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2992922365665436
    2. '        
' → logprob: -1.5492922067642212
    3. '
' → logprob: -3.1742923259735107
    4. 'return' → logprob: -5.549292087554932
    5. '    
' → logprob: -8.54929256439209
    6. ' return' → logprob: -8.79929256439209
    7. '<|end|>' → logprob: -10.04929256439209
    8. '
        
' → logprob: -10.42429256439209
    9. '  
' → logprob: -10.42429256439209
    10. '```' → logprob: -10.54929256439209

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008626867085695267
    2. 'return' → logprob: -4.758626937866211
    3. ' return' → logprob: -11.633626937866211
    4. '
' → logprob: -13.758626937866211
    5. '```' → logprob: -14.008626937866211
    6. '	return' → logprob: -14.508626937866211
    7. '   ' → logprob: -14.758626937866211
    8. '        
' → logprob: -15.133626937866211
    9. '	' → logprob: -16.25862693786621
    10. '               ' → logprob: -16.38362693786621

Token 567: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.723973582556937e-05
    2. '       ' → logprob: -11.250017166137695
    3. ' return' → logprob: -12.375017166137695
    4. '        
' → logprob: -18.125017166137695
    5. '```' → logprob: -18.750017166137695
    6. '#' → logprob: -19.125017166137695
    7. 'result' → logprob: -19.250017166137695
    8. 'components' → logprob: -19.250017166137695
    9. 'groups' → logprob: -19.500017166137695
    10. 'for' → logprob: -19.625017166137695

Token 568: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007100477814674377
    2. ' self' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.125709533691406
    4. '       ' → logprob: -17.125709533691406
    5. '
' → logprob: -18.125709533691406
    6. '(self' → logprob: -18.250709533691406
    7. 'len' → logprob: -18.875709533691406
    8. '[self' → logprob: -20.375709533691406
    9. '	self' → logprob: -20.625709533691406
    10. '        
' → logprob: -21.375709533691406

Token 569: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -4.203409844194539e-05
    2. 'self' → logprob: -10.500041961669922
    3. ' .' → logprob: -12.000041961669922
    4. '.ds' → logprob: -12.750041961669922
    5. 'd' → logprob: -13.000041961669922
    6. '.' → logprob: -13.625041961669922
    7. '.v' → logprob: -14.750041961669922
    8. '.dsl' → logprob: -14.875041961669922
    9. 'ds' → logprob: -15.500041961669922
    10. '
' → logprob: -15.625041961669922

Token 570: 'su' (ID: 20634)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -6.837811088189483e-05
    2. '.' → logprob: -9.625068664550781
    3. '.get' → logprob: -14.625068664550781
    4. ' .' → logprob: -14.625068664550781
    5. 'count' → logprob: -14.875068664550781
    6. '.status' → logprob: -16.00006866455078
    7. '.Count' → logprob: -16.00006866455078
    8. '.parent' → logprob: -16.12506866455078
    9. '
' → logprob: -16.50006866455078
    10. '.rank' → logprob: -16.87506866455078

Token 572: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0032752682454884052
    2. ' solve' → logprob: -6.378275394439697
    3. ' run' → logprob: -6.753275394439697
    4. ' example' → logprob: -8.628274917602539
    5. ' test' → logprob: -9.003274917602539
    6. 'main' → logprob: -10.128274917602539
    7. ' fibonacci' → logprob: -10.753274917602539
    8. ' parse' → logprob: -11.503274917602539
    9. ' process' → logprob: -11.628274917602539
    10. ' find' → logprob: -12.003274917602539

Token 575: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.23917081207037e-05
    2. '():
' → logprob: -10.250041961669922
    3. ' ():' → logprob: -12.000041961669922
    4. '()' → logprob: -14.375041961669922
    5. '(' → logprob: -16.750041961669922
    6. '():

' → logprob: -16.750041961669922
    7. '():
' → logprob: -17.250041961669922
    8. '()>' → logprob: -17.375041961669922
    9. ':' → logprob: -17.625041961669922
    10. '().' → logprob: -17.875041961669922

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38167062401771545
    2. ' import' → logprob: -1.381670594215393
    3. 'import' → logprob: -3.0066707134246826
    4. ' n' → logprob: -4.6316704750061035
    5. ' V' → logprob: -6.0066704750061035
    6. 'def' → logprob: -6.6316704750061035
    7. 'n' → logprob: -6.7566704750061035
    8. ' if' → logprob: -6.8816704750061035
    9. ' def' → logprob: -7.8816704750061035
    10. 'if' → logprob: -8.506670951843262

Token 577: ' import' (ID: 1588)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.7794217467308044
    2. 'V' → logprob: -1.2794218063354492
    3. ' import' → logprob: -2.029421806335449
    4. 'import' (adapté à ' import') → logprob: -2.154421806335449
    5. '   ' → logprob: -5.404421806335449
    6. ' n' → logprob: -5.779421806335449
    7. 't' → logprob: -6.279421806335449
    8. ' t' → logprob: -6.279421806335449
    9. 'n' → logprob: -6.404421806335449
    10. ' T' → logprob: -6.529421806335449

Token 578: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -5.836499985889532e-05
    2. ' sys' → logprob: -9.7500581741333
    3. '=sys' → logprob: -17.250059127807617
    4. 'math' → logprob: -18.125059127807617
    5. 'random' → logprob: -19.375059127807617
    6. '	sys' → logprob: -19.625059127807617
    7. '(sys' → logprob: -20.250059127807617
    8. '   ' → logprob: -21.000059127807617
    9. '```' → logprob: -21.000059127807617
    10. 'stdin' → logprob: -21.375059127807617

Token 579: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25688326358795166
    2. '
' → logprob: -1.7568832635879517
    3. '    
' → logprob: -3.256883144378662
    4. 'input' → logprob: -4.256883144378662
    5. ' input' → logprob: -7.756883144378662
    6. 'import' → logprob: -8.00688362121582
    7. 'data' → logprob: -8.75688362121582
    8. 'n' → logprob: -8.75688362121582
    9. ' readline' → logprob: -9.75688362121582
    10. ' 
' → logprob: -10.63188362121582

Token 580: '   ' (ID: 271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.33107101917266846
    2. '   ' → logprob: -1.4560710191726685
    3. ' input' → logprob: -3.081070899963379
    4. '
' → logprob: -6.706070899963379
    5. 'data' → logprob: -6.831070899963379
    6. '    
' → logprob: -8.081070899963379
    7. 'def' → logprob: -9.956070899963379
    8. ' readline' → logprob: -9.956070899963379
    9. '	input' → logprob: -11.331070899963379
    10. 'n' → logprob: -11.581070899963379

Token 581: ' inputs' (ID: 21963)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05996212363243103
    2. '   ' → logprob: -3.434962034225464
    3. ' input' → logprob: -3.684962034225464
    4. 'data' → logprob: -7.434962272644043
    5. '
' → logprob: -9.059962272644043
    6. 'n' → logprob: -9.059962272644043
    7. ' readline' → logprob: -11.309962272644043
    8. 'read' → logprob: -11.809962272644043
    9. '    
' → logprob: -11.934962272644043
    10. 'for' → logprob: -12.184962272644043

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062017761170864105
    2. ' =' → logprob: -2.8120176792144775
    3. '   ' → logprob: -10.812017440795898
    4. '.' → logprob: -11.312017440795898
    5. '=sys' → logprob: -12.562017440795898
    6. '()' → logprob: -12.687017440795898
    7. '.=' → logprob: -12.812017440795898
    8. '_' → logprob: -13.562017440795898
    9. ' ' → logprob: -13.687017440795898
    10. '.readline' → logprob: -13.812017440795898

Token 583: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019325626781210303
    2. ' sys' → logprob: -6.251932621002197
    3. 'list' → logprob: -12.501932144165039
    4. '=sys' → logprob: -15.626932144165039
    5. '[' → logprob: -16.87693214416504
    6. '	sys' → logprob: -17.37693214416504
    7. '(sys' → logprob: -17.50193214416504
    8. 'iter' → logprob: -18.25193214416504
    9. ' list' → logprob: -18.62693214416504
    10. 'map' → logprob: -21.12693214416504

Token 584: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000453910295618698
    2. '.stdout' → logprob: -9.75045394897461
    3. 'stdin' → logprob: -9.87545394897461
    4. '__.' → logprob: -10.00045394897461
    5. '.' → logprob: -10.12545394897461
    6. '_.' → logprob: -10.50045394897461
    7. 'ed' → logprob: -10.62545394897461
    8. 'ad' → logprob: -10.75045394897461
    9. '.argv' → logprob: -10.75045394897461
    10. 'd' → logprob: -10.75045394897461

Token 585: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.12779460847377777
    2. '.readlines' → logprob: -2.1277945041656494
    3. '.read' → logprob: -7.3777947425842285
    4. 'read' → logprob: -8.75279426574707
    5. '.' → logprob: -9.75279426574707
    6. '.stdin' → logprob: -12.12779426574707
    7. 'buffer' → logprob: -12.25279426574707
    8. '.buffer' → logprob: -12.75279426574707
    9. '   ' → logprob: -12.75279426574707
    10. '_read' → logprob: -13.25279426574707

Token 586: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005541055579669774
    2. '()' → logprob: -7.500554084777832
    3. '()
' → logprob: -14.000554084777832
    4. '()\' → logprob: -16.00055503845215
    5. '(' → logprob: -16.37555503845215
    6. '()

' → logprob: -17.00055503845215
    7. ' ().' → logprob: -17.87555503845215
    8. '()`' → logprob: -18.75055503845215
    9. 'lines' → logprob: -18.75055503845215
    10. 'line' → logprob: -19.00055503845215

Token 587: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6931525468826294
    2. 'strip' → logprob: -0.6931525468826294
    3. 'decode' → logprob: -12.69315242767334
    4. 'read' → logprob: -14.19315242767334
    5. 'rstrip' → logprob: -14.31815242767334
    6. '(split' → logprob: -14.44315242767334
    7. '().' → logprob: -15.19315242767334
    8. ' split' → logprob: -15.81815242767334
    9. '(strip' → logprob: -17.068153381347656
    10. 'plit' → logprob: -17.568153381347656

Token 588: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020413640595506877
    2. '()' → logprob: -8.500204086303711
    3. '()
' → logprob: -15.375204086303711
    4. ' ().' → logprob: -15.875204086303711
    5. 'split' → logprob: -16.50020408630371
    6. '(' → logprob: -16.87520408630371
    7. '.split' → logprob: -17.62520408630371
    8. '()\' → logprob: -17.75020408630371
    9. '()

' → logprob: -18.75020408630371
    10. '().'' → logprob: -19.25020408630371

Token 589: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.125
    3. '(split' → logprob: -17.625
    4. 'spl' → logprob: -19.5
    5. 'strip' → logprob: -20.875
    6. 'decode' → logprob: -21.125
    7. '```' → logprob: -21.75
    8. 'replace' → logprob: -22.375
    9. '.split' → logprob: -23.0
    10. 'rstrip' → logprob: -23.625

Token 590: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003361412324011326
    2. '(' → logprob: -5.878361225128174
    3. '()
' → logprob: -8.628361701965332
    4. '()\' → logprob: -9.378361701965332
    5. '('\' → logprob: -9.503361701965332
    6. '('' → logprob: -9.628361701965332
    7. '_' → logprob: -10.503361701965332
    8. '()[' → logprob: -10.628361701965332
    9. '[' → logprob: -10.878361701965332
    10. '()]' → logprob: -11.378361701965332

Token 591: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.816093228830141e-06
    2. '\n' → logprob: -13.00000286102295
    3. 'newline' → logprob: -14.75000286102295
    4. ' n' → logprob: -16.250001907348633
    5. ' \' → logprob: -18.000001907348633
    6. 's' → logprob: -18.000001907348633
    7. 'lines' → logprob: -18.875001907348633
    8. 'r' → logprob: -19.125001907348633
    9. 't' → logprob: -19.250001907348633
    10. ')' → logprob: -19.875001907348633

Token 592: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04069913178682327
    2. '')' → logprob: -3.5406992435455322
    3. '   ' → logprob: -4.665699005126953
    4. ')
' → logprob: -6.790699005126953
    5. '')
' → logprob: -8.040699005126953
    6. '[' → logprob: -11.415699005126953
    7. '")' → logprob: -12.665699005126953
    8. ']' → logprob: -12.790699005126953
    9. '()' → logprob: -12.915699005126953
    10. '`)' → logprob: -13.415699005126953

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2983861565589905
    2. 't' → logprob: -2.0483860969543457
    3. 'for' → logprob: -2.2983860969543457
    4. ' for' → logprob: -4.423386096954346
    5. ' t' → logprob: -5.173386096954346
    6. 'n' → logprob: -5.423386096954346
    7. 'T' → logprob: -5.548386096954346
    8. ' T' → logprob: -6.548386096954346
    9. 'Q' → logprob: -8.173386573791504
    10. '    
' → logprob: -8.298386573791504

Token 594: ' for' (ID: 395)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27051249146461487
    2. 'T' → logprob: -1.5205124616622925
    3. 'for' (adapté à ' for') → logprob: -4.020512580871582
    4. 'Q' → logprob: -8.895512580871582
    5. '   ' → logprob: -9.020512580871582
    6. 'q' → logprob: -9.020512580871582
    7. ' t' → logprob: -10.770512580871582
    8. ' T' → logprob: -10.895512580871582
    9. 'num' → logprob: -11.270512580871582
    10. 'results' → logprob: -11.520512580871582

Token 595: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2519682049751282
    2. ' line' → logprob: -1.5019681453704834
    3. 'input' → logprob: -10.251968383789062
    4. ' input' → logprob: -12.751968383789062
    5. '   ' → logprob: -14.626968383789062
    6. 'inp' → logprob: -16.126968383789062
    7. '	line' → logprob: -16.376968383789062
    8. 'case' → logprob: -17.001968383789062
    9. 'l' → logprob: -17.251968383789062
    10. ' inp' → logprob: -17.376968383789062

Token 596: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010381679749116302
    2. 'in' → logprob: -6.876038074493408
    3. '   ' → logprob: -12.501038551330566
    4. ',' → logprob: -15.126038551330566
    5. '	in' → logprob: -15.251038551330566
    6. ':' → logprob: -15.376038551330566
    7. '_in' → logprob: -15.626038551330566
    8. ' i' → logprob: -15.626038551330566
    9. ' =' → logprob: -15.751038551330566
    10. '=' → logprob: -16.37603759765625

Token 597: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.07889363914728165
    2. ' inputs' → logprob: -2.5788936614990234
    3. '(inputs' → logprob: -12.703893661499023
    4. 'input' → logprob: -14.703893661499023
    5. '   ' → logprob: -15.578893661499023
    6. '.inputs' → logprob: -16.328893661499023
    7. ' input' → logprob: -17.078893661499023
    8. '_inputs' → logprob: -17.328893661499023
    9. ' ' → logprob: -18.578893661499023
    10. 'lines' → logprob: -18.828893661499023

Token 598: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011094626039266586
    2. ':
' → logprob: -4.511094570159912
    3. '):' → logprob: -10.63609504699707
    4. '):
' → logprob: -11.51109504699707
    5. ',' → logprob: -12.13609504699707
    6. ':

' → logprob: -13.38609504699707
    7. '       ' → logprob: -13.51109504699707
    8. '<|end|>' → logprob: -14.01109504699707
    9. '():
' → logprob: -14.26109504699707
    10. '.split' → logprob: -14.76109504699707

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4633671045303345
    2. ':' → logprob: -1.0883671045303345
    3. ',' → logprob: -3.963366985321045
    4. ':
' → logprob: -5.213366985321045
    5. '   ' → logprob: -5.713366985321045
    6. 'tokens' → logprob: -6.088366985321045
    7. ' if' → logprob: -6.338366985321045
    8. '<|end|>' → logprob: -7.963366985321045
    9. 'if' → logprob: -8.088367462158203
    10. '.split' → logprob: -8.838367462158203

Token 600: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4874212443828583
    2. 'if' (adapté à ' if') → logprob: -1.6124212741851807
    3. 'V' → logprob: -2.3624212741851807
    4. 'v' → logprob: -3.3624212741851807
    5. ' V' → logprob: -3.4874212741851807
    6. '       ' → logprob: -4.487421035766602
    7. ' v' → logprob: -4.987421035766602
    8. ' parts' → logprob: -5.612421035766602
    9. 'a' → logprob: -5.987421035766602
    10. 'parts' → logprob: -7.237421035766602

Token 601: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31478434801101685
    2. 'not' → logprob: -1.314784288406372
    3. ' line' → logprob: -7.064784526824951
    4. 'line' → logprob: -7.314784526824951
    5. '   ' → logprob: -13.814784049987793
    6. '=line' → logprob: -17.68978500366211
    7. '#line' → logprob: -18.06478500366211
    8. '(line' → logprob: -18.31478500366211
    9. '	not' → logprob: -18.31478500366211
    10. ' ' → logprob: -18.56478500366211

Token 602: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2014133334159851
    2. ' line' → logprob: -1.7014133930206299
    3. '	line' → logprob: -18.201414108276367
    4. '#line' → logprob: -19.076414108276367
    5. '(line' → logprob: -19.451414108276367
    6. '
' → logprob: -20.076414108276367
    7. '=line' → logprob: -20.201414108276367
    8. ' ' → logprob: -20.701414108276367
    9. 'Line' → logprob: -20.826414108276367
    10. '[line' → logprob: -20.826414108276367

Token 603: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1696363389492035
    2. ':' → logprob: -2.2946362495422363
    3. '.' → logprob: -2.9196362495422363
    4. ':
' → logprob: -7.419636249542236
    5. ' or' → logprob: -7.669636249542236
    6. '.startswith' → logprob: -8.919636726379395
    7. '.split' → logprob: -10.419636726379395
    8. ' .' → logprob: -11.544636726379395
    9. '.trim' → logprob: -12.044636726379395
    10. ':return' → logprob: -12.294636726379395

Token 604: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4994827210903168
    2. '():
' → logprob: -1.1244827508926392
    3. ':' → logprob: -2.7494826316833496
    4. ':
' → logprob: -5.49948263168335
    5. '()' → logprob: -8.874483108520508
    6. '():
' → logprob: -9.874483108520508
    7. ':return' → logprob: -9.874483108520508
    8. ' or' → logprob: -10.999483108520508
    9. 'continue' → logprob: -12.374483108520508
    10. '().' → logprob: -12.874483108520508

Token 605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3438327843905427e-05
    2. ' break' → logprob: -11.87502384185791
    3. '       ' → logprob: -12.12502384185791
    4. ',' → logprob: -12.75002384185791
    5. '	       ' → logprob: -12.75002384185791
    6. 'break' → logprob: -13.75002384185791
    7. '          ' → logprob: -14.37502384185791
    8. '<|end|>' → logprob: -14.50002384185791
    9. ' continue' → logprob: -14.75002384185791
    10. '   ' → logprob: -14.75002384185791

Token 606: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6866997480392456
    2. 'break' → logprob: -0.9366997480392456
    3. ' break' → logprob: -2.936699867248535
    4. 'continue' (adapté à ' continue') → logprob: -3.311699867248535
    5. '               ' → logprob: -4.311699867248535
    6. ' continue' → logprob: -6.311699867248535
    7. '       ' → logprob: -9.811699867248535
    8. 'return' → logprob: -10.436699867248535
    9. '	break' → logprob: -10.936699867248535
    10. '   ' → logprob: -11.561699867248535

Token 607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002123614540323615
    2. 'tokens' → logprob: -9.500212669372559
    3. ',' → logprob: -9.875212669372559
    4. '   ' → logprob: -10.375212669372559
    5. ' tokens' → logprob: -11.250212669372559
    6. '        
' → logprob: -11.375212669372559
    7. 'token' → logprob: -11.500212669372559
    8. '<|end|>' → logprob: -11.875212669372559
    9. '           ' → logprob: -12.375212669372559
    10. '      ' → logprob: -13.750212669372559

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004727371269837022
    2. 'tokens' → logprob: -8.500473022460938
    3. 'token' → logprob: -9.000473022460938
    4. ' tokens' → logprob: -10.125473022460938
    5. '   ' → logprob: -10.125473022460938
    6. ',' → logprob: -10.750473022460938
    7. '        
' → logprob: -11.125473022460938
    8. ' token' → logprob: -12.250473022460938
    9. '<|end|>' → logprob: -12.250473022460938
    10. ' ' → logprob: -12.875473022460938

Token 609: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.033050063997507095
    2. 'v' → logprob: -4.158050060272217
    3. ' V' → logprob: -4.283050060272217
    4. '       ' → logprob: -6.783050060272217
    5. 'n' → logprob: -7.283050060272217
    6. 'a' → logprob: -8.158050537109375
    7. 'parts' → logprob: -8.158050537109375
    8. ' parts' → logprob: -8.283050537109375
    9. ' v' → logprob: -8.533050537109375
    10. 'x' → logprob: -9.658050537109375

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007211300544440746
    2. ',d' → logprob: -7.250720977783203
    3. ' ,' → logprob: -11.625720977783203
    4. 'd' → logprob: -14.375720977783203
    5. ',V' → logprob: -14.750720977783203
    6. ',D' → logprob: -14.875720977783203
    7. '‌,' → logprob: -15.750720977783203
    8. '=' → logprob: -16.250720977783203
    9. ',v' → logprob: -16.375720977783203
    10. ',",' → logprob: -16.375720977783203

Token 611: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20145416259765625
    2. 'd' → logprob: -1.7014541625976562
    3. ' ' → logprob: -10.951454162597656
    4. '<|end|>' → logprob: -11.201454162597656
    5. 'space' → logprob: -13.576454162597656
    6. 's' → logprob: -13.576454162597656
    7. ' 
' → logprob: -13.701454162597656
    8. 'D' → logprob: -13.701454162597656
    9. ' D' → logprob: -13.826454162597656
    10. '_d' → logprob: -14.326454162597656

Token 612: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021281987428665
    2. ' =' → logprob: -2.350212812423706
    3. ',' → logprob: -12.100213050842285
    4. ')' → logprob: -14.975213050842285
    5. '=int' → logprob: -16.72521209716797
    6. '=

' → logprob: -16.97521209716797
    7. ' ' → logprob: -17.10021209716797
    8. '=line' → logprob: -17.10021209716797
    9. '<|end|>' → logprob: -17.85021209716797
    10. '＝' → logprob: -17.85021209716797

Token 613: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25202804803848267
    2. 'map' → logprob: -1.502027988433838
    3. ' line' → logprob: -9.752028465270996
    4. 'line' → logprob: -10.127028465270996
    5. '(map' → logprob: -15.002028465270996
    6. '	map' → logprob: -15.627028465270996
    7. 'list' → logprob: -16.12702751159668
    8. '[' → logprob: -16.75202751159668
    9. ' ' → logprob: -17.00202751159668
    10. '[line' → logprob: -17.12702751159668

Token 614: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.013410325162112713
    2. '(str' → logprob: -4.5134100914001465
    3. 'int' → logprob: -6.2634100914001465
    4. 'str' → logprob: -7.8884100914001465
    5. '(' → logprob: -10.013410568237305
    6. '(line' → logprob: -10.388410568237305
    7. 'line' → logprob: -13.138410568237305
    8. '(lambda' → logprob: -13.263410568237305
    9. '[int' → logprob: -15.263410568237305
    10. '=int' → logprob: -16.013410568237305

Token 615: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0542026087641716
    2. ',line' → logprob: -3.3042025566101074
    3. 'line' → logprob: -4.554202556610107
    4. ')' → logprob: -5.804202556610107
    5. ' line' → logprob: -6.679202556610107
    6. ',' → logprob: -6.929202556610107
    7. '=line' → logprob: -8.679203033447266
    8. '[line' → logprob: -9.804203033447266
    9. '#line' → logprob: -10.929203033447266
    10. '	line' → logprob: -11.554203033447266

Token 616: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007100477814674377
    2. ' line' → logprob: -7.2507100105285645
    3. '(line' → logprob: -17.625709533691406
    4. '	line' → logprob: -18.125709533691406
    5. '[line' → logprob: -18.875709533691406
    6. '#line' → logprob: -19.000709533691406
    7. '=line' → logprob: -19.375709533691406
    8. '   ' → logprob: -20.375709533691406
    9. ')' → logprob: -20.750709533691406
    10. ',line' → logprob: -21.375709533691406

Token 617: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.022816646844148636
    2. '.split' → logprob: -4.0228166580200195
    3. '.strip' → logprob: -5.3978166580200195
    4. '.' → logprob: -9.02281665802002
    5. '()' → logprob: -12.64781665802002
    6. ' .' → logprob: -13.52281665802002
    7. 'split' → logprob: -13.77281665802002
    8. ')' → logprob: -14.02281665802002
    9. '('').' → logprob: -14.52281665802002
    10. '   ' → logprob: -15.02281665802002

Token 618: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01873580366373062
    2. '()' → logprob: -4.893735885620117
    3. ')' → logprob: -5.018735885620117
    4. '('' → logprob: -5.518735885620117
    5. '(' → logprob: -8.393735885620117
    6. '(','' → logprob: -8.768735885620117
    7. '())
' → logprob: -10.018735885620117
    8. '(',' → logprob: -12.268735885620117
    9. '')' → logprob: -12.393735885620117
    10. '("' → logprob: -12.643735885620117

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002228525234386325
    2. '<|end|>' → logprob: -6.502228736877441
    3. '        
' → logprob: -7.752228736877441
    4. '   ' → logprob: -9.002228736877441
    5. '      ' → logprob: -10.252228736877441
    6. ' ' → logprob: -10.627228736877441
    7. '<|end|>' → logprob: -10.877228736877441
    8. '        ' → logprob: -10.877228736877441
    9. '    ' → logprob: -11.127228736877441
    10. '  ' → logprob: -11.752228736877441

Token 620: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.004341698717325926
    2. ' solver' → logprob: -5.5043416023254395
    3. '       ' → logprob: -8.379342079162598
    4. 'sol' → logprob: -11.629342079162598
    5. 'if' → logprob: -11.629342079162598
    6. 's' → logprob: -11.754342079162598
    7. 'solution' → logprob: -12.879342079162598
    8. ' if' → logprob: -13.379342079162598
    9. '_solver' → logprob: -13.379342079162598
    10. '        
' → logprob: -13.879342079162598

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815474033355713
    2. '=' → logprob: -4.018154621124268
    3. '   ' → logprob: -13.393155097961426
    4. '.' → logprob: -14.393155097961426
    5. '       ' → logprob: -14.643155097961426
    6. '<|end|>' → logprob: -14.643155097961426
    7. '<|end|>' → logprob: -14.643155097961426
    8. '(' → logprob: -15.268155097961426
    9. '    ' → logprob: -15.643155097961426
    10. '        ' → logprob: -15.893155097961426

Token 622: ' Fibonacci' (ID: 139341)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0024848117027431726
    2. ' Fibonacci' → logprob: -6.0024847984313965
    3. 'Fib' → logprob: -11.627485275268555
    4. ' F' → logprob: -16.127485275268555
    5. '<F' → logprob: -16.502485275268555
    6. '	F' → logprob: -16.627485275268555
    7. 'Fizz' → logprob: -18.002485275268555
    8. 'Fiber' → logprob: -18.502485275268555
    9. ' fibonacci' → logprob: -18.627485275268555
    10. '_F' → logprob: -18.877485275268555

Token 623: 'Sets' (ID: 36594)
  Prédit: 'Sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sets' → logprob: -1.3856492842023727e-06
    2. '_sets' → logprob: -14.250000953674316
    3. ' Sets' → logprob: -15.500000953674316
    4. 'Set' → logprob: -15.750000953674316
    5. 'sets' → logprob: -16.250001907348633
    6. 'F' → logprob: -16.625001907348633
    7. 'SETS' → logprob: -16.875001907348633
    8. 'S' → logprob: -17.000001907348633
    9. '
' → logprob: -17.500001907348633
    10. '```' → logprob: -18.000001907348633

Token 624: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -6.968934758333489e-05
    2. 'solver' → logprob: -9.625069618225098
    3. 'olver' → logprob: -13.625069618225098
    4. 'F' → logprob: -14.125069618225098
    5. '_solver' → logprob: -14.500069618225098
    6. 'S' → logprob: -14.875069618225098
    7. ' solver' → logprob: -15.125069618225098
    8. 'Sol' → logprob: -15.375069618225098
    9. ' Solver' → logprob: -16.375070571899414
    10. 'Solve' → logprob: -16.375070571899414

Token 625: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -1.981667537620524e-06
    2. '       ' → logprob: -14.000001907348633
    3. '(
' → logprob: -15.000001907348633
    4. '(' → logprob: -15.500001907348633
    5. 'V' → logprob: -15.750001907348633
    6. '(F' → logprob: -16.750001907348633
    7. '(v' → logprob: -16.875001907348633
    8. '(S' → logprob: -17.375001907348633
    9. '
' → logprob: -17.375001907348633
    10. ' (' → logprob: -17.500001907348633

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009120595059357584
    2. ',d' → logprob: -7.000912189483643
    3. ' ,' → logprob: -14.375911712646484
    4. ',
' → logprob: -17.125911712646484
    5. 'd' → logprob: -17.500911712646484
    6. ')' → logprob: -18.750911712646484
    7. ',v' → logprob: -18.875911712646484
    8. '   ' → logprob: -20.125911712646484
    9. '       ' → logprob: -20.500911712646484
    10. '‌,' → logprob: -20.750911712646484

Token 627: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.7610454708337784e-05
    2. ' d' → logprob: -10.500027656555176
    3. '       ' → logprob: -17.00002670288086
    4. '
' → logprob: -18.62502670288086
    5. '   ' → logprob: -19.25002670288086
    6. ')d' → logprob: -19.87502670288086
    7. '      ' → logprob: -20.37502670288086
    8. '        ' → logprob: -20.50002670288086
    9. '           ' → logprob: -20.62502670288086
    10. '  ' → logprob: -20.87502670288086

Token 628: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17237579822540283
    2. ')
' → logprob: -1.9223757982254028
    3. '       ' → logprob: -4.422375679016113
    4. ')
' → logprob: -9.797375679016113
    5. ').' → logprob: -11.672375679016113
    6. '   ' → logprob: -13.047375679016113
    7. ')

' → logprob: -13.422375679016113
    8. '<|end|>' → logprob: -13.672375679016113
    9. '),' → logprob: -14.172375679016113
    10. '<|end|>' → logprob: -14.797375679016113

Token 629: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5776979327201843
    2. '       ' → logprob: -0.8276979327201843
    3. 'result' → logprob: -6.70269775390625
    4. ' print' → logprob: -7.82769775390625
    5. '   ' → logprob: -9.45269775390625
    6. '```' → logprob: -11.07769775390625
    7. '
' → logprob: -11.57769775390625
    8. ' result' → logprob: -11.70269775390625
    9. 'count' → logprob: -12.20269775390625
    10. '        
' → logprob: -12.82769775390625

Token 630: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.500000953674316
    3. '       ' → logprob: -15.250000953674316
    4. 'result' → logprob: -15.750000953674316
    5. '
' → logprob: -20.5
    6. '   ' → logprob: -20.625
    7. 'res' → logprob: -20.625
    8. '        
' → logprob: -21.0
    9. '```' → logprob: -21.375
    10. '	print' → logprob: -21.875

Token 631: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00024382755509577692
    2. '(' → logprob: -8.500244140625
    3. 'solver' → logprob: -10.125244140625
    4. '(sol' → logprob: -15.375244140625
    5. 's' → logprob: -17.250244140625
    6. '(solution' → logprob: -17.375244140625
    7. ' solver' → logprob: -17.875244140625
    8. 'sol' → logprob: -18.375244140625
    9. '(
' → logprob: -18.500244140625
    10. '(f' → logprob: -18.625244140625

Token 632: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -1.2664456789934775e-06
    2. 'solver' → logprob: -14.750000953674316
    3. 'olve' → logprob: -15.000000953674316
    4. 'ol' → logprob: -15.500000953674316
    5. 'oler' → logprob: -15.625000953674316
    6. 'over' → logprob: -16.375001907348633
    7. ')' → logprob: -17.375001907348633
    8. 'o' → logprob: -17.875001907348633
    9. '(' → logprob: -17.875001907348633
    10. 'erver' → logprob: -18.625001907348633

Token 633: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -12.625006675720215
    3. ').' → logprob: -12.875006675720215
    4. ' .' → logprob: -14.875006675720215
    5. ')' → logprob: -16.6250057220459
    6. '.)' → logprob: -16.8750057220459
    7. '.run' → logprob: -17.5000057220459
    8. '.sol' → logprob: -18.3750057220459
    9. '.
' → logprob: -18.3750057220459
    10. '.compute' → logprob: -18.6250057220459

Token 634: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003444024478085339
    2. '()' → logprob: -8.000344276428223
    3. ')' → logprob: -12.000344276428223
    4. '())
' → logprob: -12.875344276428223
    5. ' ())' → logprob: -15.875344276428223
    6. '()))' → logprob: -17.12534523010254
    7. '())
' → logprob: -18.12534523010254
    8. '()
' → logprob: -18.25034523010254
    9. '();)' → logprob: -18.25034523010254
    10. '(' → logprob: -18.37534523010254

Token 635: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001254693343071267
    2. '```' → logprob: -9.875125885009766
    3. '<|end|>' → logprob: -10.250125885009766
    4. ' if' → logprob: -10.375125885009766
    5. '#' → logprob: -12.250125885009766
    6. '
' → logprob: -13.500125885009766
    7. '\' → logprob: -15.625125885009766
    8. '@if' → logprob: -15.875125885009766
    9. '#if' → logprob: -15.875125885009766
    10. '<|end|>' → logprob: -16.125125885009766

Token 636: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3870171904563904
    2. '__' → logprob: -1.1370172500610352
    3. 'name' → logprob: -9.887017250061035
    4. '_' → logprob: -10.137017250061035
    5. '_name' → logprob: -10.512017250061035
    6. ' ' → logprob: -11.512017250061035
    7. '___' → logprob: -12.137017250061035
    8. ' ' → logprob: -12.387017250061035
    9. 'Name' → logprob: -12.762017250061035
    10. ' ' → logprob: -13.387017250061035

Token 637: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0030397435184568167
    2. '==' → logprob: -6.378039836883545
    3. ' ==' → logprob: -6.878039836883545
    4. '=="' → logprob: -9.128039360046387
    5. '__.__' → logprob: -9.378039360046387
    6. ' __' → logprob: -10.503039360046387
    7. '__.' → logprob: -10.878039360046387
    8. '__[' → logprob: -11.378039360046387
    9. '.__' → logprob: -11.503039360046387
    10. '__["' → logprob: -11.503039360046387

Token 638: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.579495235811919e-05
    2. '==' → logprob: -9.37509536743164
    3. '=="' → logprob: -12.25009536743164
    4. '__.__' → logprob: -12.62509536743164
    5. ' ==' → logprob: -13.00009536743164
    6. '__
' → logprob: -15.87509536743164
    7. '__["' → logprob: -16.50009536743164
    8. '____' → logprob: -16.87509536743164
    9. '__[' → logprob: -16.87509536743164
    10. '"' → logprob: -17.25009536743164

Token 639: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09744910895824432
    2. '==' → logprob: -2.4724490642547607
    3. ' ==' → logprob: -5.09744930267334
    4. '=="' → logprob: -6.09744930267334
    5. '=='' → logprob: -9.22244930267334
    6. '__.__' → logprob: -12.34744930267334
    7. '=' → logprob: -13.22244930267334
    8. '_' → logprob: -13.47244930267334
    9. '==
' → logprob: -13.84744930267334
    10. '===' → logprob: -13.84744930267334

Token 640: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029756510630249977
    2. ''' → logprob: -3.529756546020508
    3. '__' → logprob: -12.279756546020508
    4. ' "__' → logprob: -13.654756546020508
    5. '"user' → logprob: -17.279756546020508
    6. '"name' → logprob: -17.529756546020508
    7. '"class' → logprob: -17.654756546020508
    8. ' '__' → logprob: -17.779756546020508
    9. ''"' → logprob: -18.279756546020508
    10. '   ' → logprob: -18.279756546020508

Token 641: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005878194235265255
    2. '__' → logprob: -5.25587797164917
    3. '"' → logprob: -7.50587797164917
    4. 'name' → logprob: -10.130878448486328
    5. ''' → logprob: -11.255878448486328
    6. '```' → logprob: -11.380878448486328
    7. '__":
' → logprob: -12.130878448486328
    8. 'python' → logprob: -12.380878448486328
    9. '_main' → logprob: -12.505878448486328
    10. 'built' → logprob: -12.630878448486328

Token 642: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04931816831231117
    2. '__' → logprob: -3.0493180751800537
    3. '__':
' → logprob: -7.549318313598633
    4. '__.__' → logprob: -9.049318313598633
    5. '__.' → logprob: -9.674318313598633
    6. '__["' → logprob: -11.049318313598633
    7. '__
' → logprob: -13.049318313598633
    8. '__
' → logprob: -13.549318313598633
    9. '.__' → logprob: -13.674318313598633
    10. '__",' → logprob: -14.049318313598633

Token 643: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0004946522531099617
    2. '__' → logprob: -8.000494956970215
    3. ' main' → logprob: -8.750494956970215
    4. '	main' → logprob: -14.750494956970215
    5. '_main' → logprob: -15.625494956970215
    6. '   ' → logprob: -15.750494956970215
    7. ' __' → logprob: -16.7504940032959
    8. 'python' → logprob: -18.0004940032959
    9. '.main' → logprob: -19.0004940032959
    10. '(main' → logprob: -19.2504940032959

Token 644: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. 'import' → logprob: -20.875
    4. '	main' → logprob: -21.125
    5. '   ' → logprob: -24.5
    6. '(main' → logprob: -25.375
    7. '.main' → logprob: -25.75
    8. '_main' → logprob: -26.5
    9. '
' → logprob: -28.0
    10. '```' → logprob: -28.125

Token 645: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 643
Tokens correctement prédits (1ère position, stricte): 317
Tokens correctement prédits (1ère position, avec adaptation): 348
Tokens correctement prédits (top 10): 576
Précision stricte (1ère position): 49.30%
Précision adaptée (1ère position): 54.12%
Précision (top 10): 89.58%
================================================================================
