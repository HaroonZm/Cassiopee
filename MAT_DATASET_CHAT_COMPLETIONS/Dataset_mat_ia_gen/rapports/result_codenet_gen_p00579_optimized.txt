================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

N,M= map(int,input().split())
A= list(map(int,input().split()))
intervals = [tuple(map(int,input().split())) for _ in range(M)]

end_at = [-1]*(N+1)
for L,R in intervals:
    if end_at[L-1]<R-1:
        end_at[L-1]= R-1

dp = [0]*(N+1)
max_back = [-1]*(N+1)

for i in range(N):
    dp[i+1] = max(dp[i+1], dp[i])
    if end_at[i]>=0:
        dp[end_at[i]+1] = max(dp[end_at[i]+1], dp[i])
    dp[i+1] = max(dp[i+1], dp[i]+A[i])
print(dp[N])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3002793490886688
    2. '\n' → logprob: -1.5502793788909912
    3. '<|end|>' → logprob: -3.675279378890991
    4. '\' → logprob: -4.925279140472412
    5. 'newline' → logprob: -5.675279140472412
    6. 'import' → logprob: -5.675279140472412
    7. '<|end|>' → logprob: -6.050279140472412
    8. '
' → logprob: -6.925279140472412
    9. '```' → logprob: -6.925279140472412
    10. '' → logprob: -7.675279140472412

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4259644558478612e-05
    2. ' (' → logprob: -11.875014305114746
    3. '(
' → logprob: -12.375014305114746
    4. '(

' → logprob: -13.250014305114746
    5. '("("' → logprob: -14.750014305114746
    6. '((' → logprob: -14.875014305114746
    7. '('' → logprob: -15.750014305114746
    8. '(.' → logprob: -16.87501335144043
    9. '```' → logprob: -17.00001335144043
    10. '(None' → logprob: -17.12501335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2915230095386505
    2. ')' → logprob: -2.916522979736328
    3. '\n' → logprob: -2.916522979736328
    4. 'def' → logprob: -3.541522979736328
    5. '
' → logprob: -3.791522979736328
    6. '(' → logprob: -4.041522979736328
    7. '
' → logprob: -4.291522979736328
    8. '' → logprob: -4.541522979736328
    9. 'sys' → logprob: -4.541522979736328
    10. '#' → logprob: -4.916522979736328

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054387565702199936
    2. '()' → logprob: -3.0543875694274902
    3. '.' → logprob: -6.05438756942749
    4. ')' → logprob: -6.55438756942749
    5. '().' → logprob: -7.67938756942749
    6. '('' → logprob: -7.92938756942749
    7. '40' → logprob: -8.304387092590332
    8. '```' → logprob: -8.554387092590332
    9. '("("' → logprob: -8.929387092590332
    10. ''' → logprob: -9.429387092590332

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2547602355480194
    2. ' input' → logprob: -1.5047602653503418
    3. ' sys' → logprob: -6.629760265350342
    4. 'sys' → logprob: -6.629760265350342
    5. 'lambda' → logprob: -10.254759788513184
    6. '=input' → logprob: -10.629759788513184
    7. ' lambda' → logprob: -10.754759788513184
    8. '```' → logprob: -10.879759788513184
    9. 'open' → logprob: -11.129759788513184
    10. ' ' → logprob: -11.379759788513184

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00100113230291754
    2. '.readline' → logprob: -7.626001358032227
    3. ' .' → logprob: -8.251001358032227
    4. '.stdin' → logprob: -8.876001358032227
    5. '.input' → logprob: -11.501001358032227
    6. '.import' → logprob: -11.501001358032227
    7. '.)' → logprob: -11.626001358032227
    8. '[' → logprob: -12.001001358032227
    9. '.get' → logprob: -12.126001358032227
    10. '.user' → logprob: -12.376001358032227

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004343956243246794
    2. '.read' → logprob: -5.8793439865112305
    3. '.' → logprob: -6.5043439865112305
    4. '.Read' → logprob: -11.25434398651123
    5. '.buffer' → logprob: -11.25434398651123
    6. '.readlines' → logprob: -11.62934398651123
    7. 'read' → logprob: -12.50434398651123
    8. '```' → logprob: -14.87934398651123
    9. '.READ' → logprob: -15.12934398651123
    10. ' .' → logprob: -15.50434398651123

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.570586085319519
    2. '(' → logprob: -2.0705862045288086
    3. 'def' → logprob: -2.0705862045288086
    4. '\n' → logprob: -2.6955862045288086
    5. '
' → logprob: -3.4455862045288086
    6. '()
' → logprob: -3.6955862045288086
    7. '(
' → logprob: -4.195586204528809
    8. '()

' → logprob: -4.695586204528809
    9. '\' → logprob: -4.820586204528809
    10. '

' → logprob: -5.195586204528809

Token 19: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03818287327885628
    2. 'n' → logprob: -3.2881829738616943
    3. 'N' → logprob: -9.913183212280273
    4. 'class' → logprob: -10.538183212280273
    5. 'd' → logprob: -10.788183212280273
    6. '```' → logprob: -10.788183212280273
    7. 'from' → logprob: -11.663183212280273
    8. '\' → logprob: -12.038183212280273
    9. 'a' → logprob: -13.163183212280273
    10. 'for' → logprob: -13.413183212280273

Token 20: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6140350699424744
    2. '=' → logprob: -1.2390351295471191
    3. ' ' → logprob: -2.239035129547119
    4. ')' → logprob: -3.739035129547119
    5. '<|end|>' → logprob: -3.739035129547119
    6. ',' → logprob: -4.614035129547119
    7. '>' → logprob: -6.989035129547119
    8. '[' → logprob: -7.114035129547119
    9. '.' → logprob: -7.864035129547119
    10. ' )' → logprob: -7.989035129547119

Token 21: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11819406598806381
    2. '=' → logprob: -2.493194103240967
    3. ',' → logprob: -3.618194103240967
    4. ' ,' → logprob: -6.493194103240967
    5. ' ' → logprob: -7.868194103240967
    6. ' =
' → logprob: -10.243193626403809
    7. ')' → logprob: -10.743193626403809
    8. '=int' → logprob: -11.993193626403809
    9. '<|end|>' → logprob: -11.993193626403809
    10. '=input' → logprob: -12.493193626403809

Token 22: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5759539604187012
    2. 'map' → logprob: -0.8259539604187012
    3. 'int' → logprob: -12.45095443725586
    4. 'list' → logprob: -12.45095443725586
    5. ' list' → logprob: -12.95095443725586
    6. ' ' → logprob: -13.70095443725586
    7. '	map' → logprob: -14.45095443725586
    8. ' int' → logprob: -14.70095443725586
    9. 'input' → logprob: -14.70095443725586
    10. 'tuple' → logprob: -14.82595443725586

Token 23: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19705620408058167
    2. '(int' → logprob: -2.322056293487549
    3. '(lambda' → logprob: -2.572056293487549
    4. '(str' → logprob: -6.072056293487549
    5. '(input' → logprob: -6.947056293487549
    6. '(len' → logprob: -8.32205581665039
    7. '<|end|>' → logprob: -8.44705581665039
    8. '(tuple' → logprob: -9.32205581665039
    9. '(list' → logprob: -9.44705581665039
    10. '((' → logprob: -9.94705581665039

Token 24: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04705650359392166
    2. ',input' → logprob: -3.6720564365386963
    3. '(' → logprob: -4.422056674957275
    4. ')' → logprob: -5.672056674957275
    5. ',int' → logprob: -6.297056674957275
    6. '(sys' → logprob: -6.797056674957275
    7. '(input' → logprob: -7.297056674957275
    8. ',(' → logprob: -7.672056674957275
    9. '(int' → logprob: -8.422056198120117
    10. '(','' → logprob: -8.797056198120117

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.19717630743980408
    2. '())' → logprob: -2.072176218032837
    3. '()' → logprob: -2.947176218032837
    4. ')' → logprob: -8.697175979614258
    5. '('' → logprob: -8.697175979614258
    6. '(' → logprob: -9.322175979614258
    7. '()))' → logprob: -10.447175979614258
    8. '()['' → logprob: -11.072175979614258
    9. '();)' → logprob: -11.197175979614258
    10. '()[' → logprob: -11.322175979614258

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0035148991737514734
    2. 'strip' → logprob: -5.753514766693115
    3. 'rstrip' → logprob: -8.003515243530273
    4. ')' → logprob: -13.753515243530273
    5. ' split' → logprob: -13.753515243530273
    6. 'read' → logprob: -14.503515243530273
    7. '(split' → logprob: -16.128515243530273
    8. 'spl' → logprob: -17.003515243530273
    9. '```' → logprob: -17.128515243530273
    10. 'rs' → logprob: -17.503515243530273

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.684157026233152e-05
    2. '()' → logprob: -10.375077247619629
    3. '())' → logprob: -10.500077247619629
    4. '))' → logprob: -11.250077247619629
    5. '`)' → logprob: -13.750077247619629
    6. '(' → logprob: -13.875077247619629
    7. '),' → logprob: -14.000077247619629
    8. ')`' → logprob: -14.125077247619629
    9. ' )' → logprob: -15.250077247619629
    10. ')
' → logprob: -15.625077247619629

Token 28: 'A' (ID: 32)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3026164472103119
    2. ' graph' → logprob: -2.9276163578033447
    3. 'edges' → logprob: -2.9276163578033447
    4. ' 
' → logprob: -3.6776163578033447
    5. 'data' → logprob: -3.8026163578033447
    6. '
' → logprob: -4.052616596221924
    7. 'a' → logprob: -4.177616596221924
    8. '  
' → logprob: -4.552616596221924
    9. '<|end|>' → logprob: -4.677616596221924
    10. ' edges' → logprob: -4.927616596221924

Token 29: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6082253456115723
    2. ' =' → logprob: -0.9832253456115723
    3. ',' → logprob: -2.9832253456115723
    4. '[' → logprob: -4.233225345611572
    5. '.' → logprob: -5.983225345611572
    6. '=[]' → logprob: -5.983225345611572
    7. 's' → logprob: -6.108225345611572
    8. ')' → logprob: -6.233225345611572
    9. ' ' → logprob: -6.233225345611572
    10. 'A' → logprob: -7.233225345611572

Token 30: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4182840883731842
    2. '[list' → logprob: -1.7932840585708618
    3. ' list' → logprob: -2.0432841777801514
    4. '[' → logprob: -3.6682841777801514
    5. ' [' → logprob: -4.418283939361572
    6. '[]' → logprob: -5.168283939361572
    7. '[int' → logprob: -6.543283939361572
    8. ' []' → logprob: -7.293283939361572
    9. '[l' → logprob: -9.29328441619873
    10. '[input' → logprob: -9.54328441619873

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.18691259622573853
    2. '(' → logprob: -1.9369125366210938
    3. '(int' → logprob: -3.6869125366210938
    4. '(range' → logprob: -7.186912536621094
    5. '(list' → logprob: -8.186912536621094
    6. '(input' → logprob: -8.686912536621094
    7. '()' → logprob: -10.311912536621094
    8. '[int' → logprob: -12.186912536621094
    9. '(eval' → logprob: -12.186912536621094
    10. '(

' → logprob: -12.686912536621094

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001431114797014743
    2. '(' → logprob: -9.375143051147461
    3. '[int' → logprob: -10.750143051147461
    4. 'int' → logprob: -10.875143051147461
    5. ',int' → logprob: -11.750143051147461
    6. '<int' → logprob: -12.000143051147461
    7. '=int' → logprob: -12.875143051147461
    8. ']int' → logprob: -14.625143051147461
    9. '	int' → logprob: -15.750143051147461
    10. '(lambda' → logprob: -15.875143051147461

Token 33: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.33227381110191345
    2. ',input' → logprob: -1.3322738409042358
    3. ',' → logprob: -4.332273960113525
    4. '(' → logprob: -5.207273960113525
    5. ',int' → logprob: -9.707273483276367
    6. ')' → logprob: -9.832273483276367
    7. ' ,' → logprob: -10.332273483276367
    8. '(int' → logprob: -10.832273483276367
    9. '=input' → logprob: -11.457273483276367
    10. 'input' → logprob: -11.582273483276367

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.875003814697266
    3. '(' → logprob: -14.250003814697266
    4. '.' → logprob: -15.250003814697266
    5. ' ().' → logprob: -15.875003814697266
    6. '(input' → logprob: -16.500003814697266
    7. '.readline' → logprob: -16.750003814697266
    8. '(.' → logprob: -17.125003814697266
    9. '.split' → logprob: -18.000003814697266
    10. ' .' → logprob: -18.125003814697266

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. 'strip' → logprob: -13.125001907348633
    3. ' split' → logprob: -15.750001907348633
    4. '(split' → logprob: -16.250001907348633
    5. 'rstrip' → logprob: -16.375001907348633
    6. 'spl' → logprob: -18.500001907348633
    7. 'plit' → logprob: -20.875001907348633
    8. '.split' → logprob: -20.875001907348633
    9. '_split' → logprob: -21.000001907348633
    10. 's' → logprob: -21.000001907348633

Token 36: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08897021412849426
    2. '())' → logprob: -2.588970184326172
    3. '))' → logprob: -5.338970184326172
    4. '()' → logprob: -5.463970184326172
    5. ')' → logprob: -7.463970184326172
    6. '(' → logprob: -7.963970184326172
    7. '()))
' → logprob: -10.213970184326172
    8. '()));' → logprob: -11.088970184326172
    9. '()))
' → logprob: -12.588970184326172
    10. '())))' → logprob: -12.963970184326172

Token 37: 'interval' (ID: 37558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5603659152984619
    2. 'B' → logprob: -1.810365915298462
    3. 'graph' → logprob: -2.685365915298462
    4. 'Q' → logprob: -2.935365915298462
    5. 'DP' → logprob: -4.185365676879883
    6. 'S' → logprob: -4.435365676879883
    7. 'M' → logprob: -4.435365676879883
    8. '
' → logprob: -4.560365676879883
    9. 'A' → logprob: -4.685365676879883
    10. 'tree' → logprob: -4.685365676879883

Token 38: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.043572261929512024
    2. '_s' → logprob: -3.293572187423706
    3. '_' → logprob: -5.543572425842285
    4. '(' → logprob: -7.418572425842285
    5. ' =' → logprob: -7.543572425842285
    6. '=' → logprob: -8.168572425842285
    7. '[' → logprob: -10.043572425842285
    8. '_size' → logprob: -10.793572425842285
    9. '_counts' → logprob: -11.043572425842285
    10. '[]' → logprob: -11.168572425842285

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871033489704132
    2. ' =' → logprob: -1.1371033191680908
    3. '=[]' → logprob: -8.512103080749512
    4. '[' → logprob: -11.637103080749512
    5. '=[' → logprob: -12.012103080749512
    6. ' =[' → logprob: -12.137103080749512
    7. 's' → logprob: -12.762103080749512
    8. '＝' → logprob: -13.512103080749512
    9. ' ' → logprob: -13.887103080749512
    10. ')' → logprob: -14.137103080749512

Token 40: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.38789665699005127
    2. '[' → logprob: -1.1378966569900513
    3. ' []' → logprob: -7.762896537780762
    4. '[list' → logprob: -8.262896537780762
    5. '[int' → logprob: -9.137896537780762
    6. '([]' → logprob: -9.262896537780762
    7. '[List' → logprob: -10.262896537780762
    8. ' [' → logprob: -10.512896537780762
    9. '[(' → logprob: -10.887896537780762
    10. '[len' → logprob: -12.012896537780762

Token 41: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.044262126088142395
    2. 'list' → logprob: -3.294262170791626
    3. ' tuple' → logprob: -6.294261932373047
    4. '()]' → logprob: -6.544261932373047
    5. '(tuple' → logprob: -6.794261932373047
    6. ']' → logprob: -7.294261932373047
    7. '[]' → logprob: -7.294261932373047
    8. '()' → logprob: -8.544261932373047
    9. 'map' → logprob: -9.044261932373047
    10. '(list' → logprob: -9.919261932373047

Token 42: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.315936429426074e-05
    2. 'map' → logprob: -10.125082969665527
    3. '(int' → logprob: -10.750082969665527
    4. '(' → logprob: -10.875082969665527
    5. '(input' → logprob: -13.250082969665527
    6. ' map' → logprob: -14.875082969665527
    7. ',map' → logprob: -16.125083923339844
    8. '(m' → logprob: -16.750083923339844
    9. '	map' → logprob: -16.875083923339844
    10. '_map' → logprob: -17.000083923339844

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014120421838015318
    2. 'int' → logprob: -9.250141143798828
    3. ',int' → logprob: -11.000141143798828
    4. '<int' → logprob: -11.750141143798828
    5. '[int' → logprob: -12.125141143798828
    6. '=int' → logprob: -12.250141143798828
    7. ' int' → logprob: -12.750141143798828
    8. ']int' → logprob: -12.750141143798828
    9. '(' → logprob: -13.250141143798828
    10. ' (' → logprob: -13.500141143798828

Token 44: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03383368253707886
    2. '(input' → logprob: -3.4088337421417236
    3. 'input' → logprob: -9.283833503723145
    4. ',' → logprob: -9.408833503723145
    5. '[input' → logprob: -12.533833503723145
    6. ' input' → logprob: -12.783833503723145
    7. '=input' → logprob: -13.033833503723145
    8. ',int' → logprob: -13.158833503723145
    9. '(' → logprob: -14.033833503723145
    10. '<input' → logprob: -14.783833503723145

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001182052365038544
    2. '.readline' → logprob: -9.125118255615234
    3. '()' → logprob: -11.750118255615234
    4. '.split' → logprob: -14.500118255615234
    5. ')' → logprob: -15.250118255615234
    6. '.' → logprob: -16.000118255615234
    7. '(' → logprob: -16.375118255615234
    8. ' ().' → logprob: -16.500118255615234
    9. '().__' → logprob: -16.625118255615234
    10. 'input' → logprob: -17.125118255615234

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. 'strip' → logprob: -16.125
    3. 'rstrip' → logprob: -17.5
    4. '(split' → logprob: -17.625
    5. 'read' → logprob: -17.625
    6. ' split' → logprob: -17.75
    7. 'spl' → logprob: -18.25
    8. '.split' → logprob: -21.125
    9. 's' → logprob: -21.25
    10. 'plit' → logprob: -21.375

Token 47: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009817004203796387
    2. '()))' → logprob: -4.634817123413086
    3. '()' → logprob: -10.759817123413086
    4. ')' → logprob: -10.759817123413086
    5. ' ))' → logprob: -12.009817123413086
    6. ')))' → logprob: -12.009817123413086
    7. '())' → logprob: -13.384817123413086
    8. ' ' → logprob: -14.259817123413086
    9. ')),' → logprob: -14.259817123413086
    10. '))
' → logprob: -14.259817123413086

Token 48: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9523051381111145
    2. 'for' → logprob: -1.2023050785064697
    3. ')' → logprob: -1.3273050785064697
    4. ' for' → logprob: -3.0773050785064697
    5. '(' → logprob: -7.077305316925049
    6. ')]' → logprob: -7.327305316925049
    7. '())' → logprob: -8.07730484008789
    8. '()]' → logprob: -8.20230484008789
    9. ']' → logprob: -8.95230484008789
    10. ' ' → logprob: -10.20230484008789

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2582484185695648
    2. ' range' → logprob: -1.5082484483718872
    3. '_range' → logprob: -5.883248329162598
    4. 'range' → logprob: -6.008248329162598
    5. ' _' → logprob: -6.883248329162598
    6. '(range' → logprob: -10.508248329162598
    7. '	range' → logprob: -13.383248329162598
    8. ' in' → logprob: -14.883248329162598
    9. ' ' → logprob: -15.008248329162598
    10. ' i' → logprob: -15.508248329162598

Token 50: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14716781675815582
    2. ' range' → logprob: -2.022167921066284
    3. '(range' → logprob: -5.522167682647705
    4. 'in' → logprob: -8.647168159484863
    5. '	range' → logprob: -9.147168159484863
    6. '_range' → logprob: -9.272168159484863
    7. '_' → logprob: -10.147168159484863
    8. ' in' → logprob: -10.272168159484863
    9. '(' → logprob: -11.147168159484863
    10. 'ange' → logprob: -11.272168159484863

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00671584764495492
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -14.506715774536133
    4. '	range' → logprob: -17.756715774536133
    5. 'r' → logprob: -18.506715774536133
    6. 'rang' → logprob: -19.256715774536133
    7. ' ' → logprob: -19.381715774536133
    8. '[' → logprob: -19.506715774536133
    9. 'ra' → logprob: -20.881715774536133
    10. 'A' → logprob: -21.006715774536133

Token 52: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.009873188100755215
    2. '(N' → logprob: -5.009873390197754
    3. '(' → logprob: -5.759873390197754
    4. '(
' → logprob: -13.884873390197754
    5. '(n' → logprob: -16.509872436523438
    6. '(int' → logprob: -16.509872436523438
    7. '(len' → logprob: -16.759872436523438
    8. ' (' → logprob: -17.259872436523438
    9. '(A' → logprob: -17.509872436523438
    10. '((' → logprob: -17.759872436523438

Token 53: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005670914542861283
    2. ')' → logprob: -7.5005669593811035
    3. ']' → logprob: -11.250567436218262
    4. '))' → logprob: -14.750567436218262
    5. ')])' → logprob: -15.125567436218262
    6. ')]
' → logprob: -15.875567436218262
    7. ')],' → logprob: -16.125566482543945
    8. ')}' → logprob: -16.250566482543945
    9. '])]' → logprob: -16.625566482543945
    10. '')]' → logprob: -17.250566482543945

Token 54: 'end' (ID: 419)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16407841444015503
    2. '#' → logprob: -2.7890784740448
    3. '```' → logprob: -3.4140784740448
    4. 'dp' → logprob: -4.164078235626221
    5. 'max' → logprob: -5.039078235626221
    6. 'interval' → logprob: -5.664078235626221
    7. 'result' → logprob: -5.789078235626221
    8. 'd' → logprob: -5.789078235626221
    9. 'A' → logprob: -5.914078235626221
    10. '' → logprob: -5.914078235626221

Token 55: '_at' (ID: 8254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4141041040420532
    2. '=' → logprob: -1.6641041040420532
    3. 's' → logprob: -3.5391039848327637
    4. '_' → logprob: -3.7891039848327637
    5. '#' → logprob: -4.039103984832764
    6. ']' → logprob: -4.039103984832764
    7. 'def' → logprob: -4.164103984832764
    8. '.' → logprob: -4.289103984832764
    9. ' =' → logprob: -4.789103984832764
    10. '(' → logprob: -5.539103984832764

Token 56: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43900078535079956
    2. ' =' → logprob: -1.6890008449554443
    3. '=' → logprob: -2.1890008449554443
    4. 's' → logprob: -3.3140008449554443
    5. '[' → logprob: -4.189000606536865
    6. '[]' → logprob: -5.814000606536865
    7. '=[]' → logprob: -6.564000606536865
    8. '[:]' → logprob: -7.314000606536865
    9. ']' → logprob: -7.939000606536865
    10. '_=' → logprob: -8.064001083374023

Token 57: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08077197521924973
    2. ' [' → logprob: -2.5807719230651855
    3. '[len' → logprob: -7.7057719230651855
    4. '{}' → logprob: -7.9557719230651855
    5. '[-' → logprob: -8.330772399902344
    6. '[]' → logprob: -8.330772399902344
    7. '[N' → logprob: -8.455772399902344
    8. ' [[]' → logprob: -8.580772399902344
    9. '[A' → logprob: -9.580772399902344
    10. '{' → logprob: -10.455772399902344

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000610690622124821
    2. 'float' → logprob: -8.1256103515625
    3. '10' → logprob: -8.2506103515625
    4. '(' → logprob: -10.3756103515625
    5. '-' → logprob: -11.8756103515625
    6. '(-' → logprob: -12.5006103515625
    7. '100' → logprob: -12.7506103515625
    8. '2' → logprob: -13.1256103515625
    9. 'N' → logprob: -13.3756103515625
    10. 'A' → logprob: -14.0006103515625

Token 59: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08301375061273575
    2. ']*(' → logprob: -3.2080137729644775
    3. ' for' → logprob: -3.7080137729644775
    4. ']*' → logprob: -4.583013534545898
    5. 'for' → logprob: -5.458013534545898
    6. ' ]' → logprob: -8.958013534545898
    7. ']+' → logprob: -10.083013534545898
    8. ')' → logprob: -11.083013534545898
    9. ',' → logprob: -11.458013534545898
    10. ')]' → logprob: -11.958013534545898

Token 60: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00035143180866725743
    2. '10' → logprob: -8.375351905822754
    3. '100' → logprob: -9.250351905822754
    4. '(N' → logprob: -11.875351905822754
    5. 'max' → logprob: -12.250351905822754
    6. 'M' → logprob: -12.250351905822754
    7. '(' → logprob: -13.375351905822754
    8. 'len' → logprob: -13.375351905822754
    9. '200' → logprob: -13.625351905822754
    10. '101' → logprob: -13.750351905822754

Token 61: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.348527729511261
    2. ')' → logprob: -1.2235276699066162
    3. ')
' → logprob: -10.473527908325195
    4. ' +' → logprob: -10.973527908325195
    5. '+)' → logprob: -10.973527908325195
    6. '<|end|>' → logprob: -11.973527908325195
    7. '1' → logprob: -12.848527908325195
    8. '))' → logprob: -12.973527908325195
    9. '```' → logprob: -13.223527908325195
    10. ' )' → logprob: -13.973527908325195

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016480287013109773
    2. '2' → logprob: -8.750164985656738
    3. ' ' → logprob: -12.250164985656738
    4. '10' → logprob: -14.500164985656738
    5. '3' → logprob: -15.125164985656738
    6. '5' → logprob: -15.375164985656738
    7. '7' → logprob: -16.125164031982422
    8. '11' → logprob: -16.375164031982422
    9. '4' → logprob: -16.500164031982422
    10. '6' → logprob: -16.625164031982422

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -13.375003814697266
    3. ' )' → logprob: -13.375003814697266
    4. '}' → logprob: -15.625003814697266
    5. ')

' → logprob: -16.125003814697266
    6. '```' → logprob: -16.125003814697266
    7. '))' → logprob: -16.250003814697266
    8. '),' → logprob: -16.500003814697266
    9. ']' → logprob: -16.875003814697266
    10. ')
' → logprob: -17.625003814697266

Token 64: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02667517215013504
    2. 'stack' → logprob: -4.276675224304199
    3. 'answer' → logprob: -6.151675224304199
    4. 'dp' → logprob: -6.401675224304199
    5. 'max' → logprob: -6.526675224304199
    6. 'res' → logprob: -6.651675224304199
    7. 'last' → logprob: -6.776675224304199
    8. 'current' → logprob: -7.401675224304199
    9. 'result' → logprob: -7.526675224304199
    10. 'cur' → logprob: -7.776675224304199

Token 65: ' L' (ID: 451)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8762890696525574
    2. 'i' → logprob: -1.7512891292572021
    3. ' l' → logprob: -1.7512891292572021
    4. 'l' → logprob: -2.626289129257202
    5. ' s' → logprob: -3.251289129257202
    6. 'a' → logprob: -3.626289129257202
    7. ' a' → logprob: -3.751289129257202
    8. ' L' → logprob: -4.001288890838623
    9. ' start' → logprob: -4.501288890838623
    10. 'L' → logprob: -4.751288890838623

Token 66: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01789061352610588
    2. ',_' → logprob: -4.392890453338623
    3. ' in' → logprob: -6.392890453338623
    4. ',L' → logprob: -6.517890453338623
    5. ',I' → logprob: -7.017890453338623
    6. ' ,' → logprob: -8.142890930175781
    7. ',i' → logprob: -8.767890930175781
    8. 'I' → logprob: -9.142890930175781
    9. ',in' → logprob: -9.142890930175781
    10. ',end' → logprob: -9.267890930175781

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373733162879944
    2. 'in' → logprob: -3.4087374210357666
    3. ',' → logprob: -9.783737182617188
    4. ' ' → logprob: -10.533737182617188
    5. '	in' → logprob: -13.158737182617188
    6. ',in' → logprob: -13.408737182617188
    7. 'In' → logprob: -13.908737182617188
    8. 's' → logprob: -14.283737182617188
    9. 'n' → logprob: -14.408737182617188
    10. '_in' → logprob: -14.908737182617188

Token 68: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.07890399545431137
    2. ' intervals' → logprob: -2.578903913497925
    3. '(interval' → logprob: -11.453904151916504
    4. ' interval' → logprob: -12.578904151916504
    5. 'ranges' → logprob: -16.453903198242188
    6. ' ' → logprob: -16.953903198242188
    7. 'Intervals' → logprob: -17.453903198242188
    8. 'range' → logprob: -17.828903198242188
    9. '```' → logprob: -18.078903198242188
    10. 'int' → logprob: -18.203903198242188

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.828512363834307e-05
    2. ':
' → logprob: -9.375088691711426
    3. '[' → logprob: -13.875088691711426
    4. ':**' → logprob: -14.625088691711426
    5. '):' → logprob: -14.875088691711426
    6. ',' → logprob: -14.875088691711426
    7. ' :' → logprob: -14.875088691711426
    8. '<|end|>' → logprob: -15.250088691711426
    9. ':

' → logprob: -15.875088691711426
    10. ':end' → logprob: -16.50008773803711

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03366102650761604
    2. '	end' → logprob: -3.658661127090454
    3. ' end' → logprob: -5.783660888671875
    4. '	if' → logprob: -6.408660888671875
    5. 'end' → logprob: -6.783660888671875
    6. '	for' → logprob: -7.908660888671875
    7. ' if' → logprob: -8.658660888671875
    8. '<|end|>' → logprob: -9.158660888671875
    9. '```' → logprob: -9.283660888671875
    10. ',' → logprob: -9.283660888671875

Token 71: ' if' (ID: 538)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10423203557729721
    2. ' end' → logprob: -2.6042320728302
    3. '   ' → logprob: -3.7292320728302
    4. 'if' (adapté à ' if') → logprob: -7.854231834411621
    5. '	end' → logprob: -8.479231834411621
    6. '       ' → logprob: -8.479231834411621
    7. ' if' → logprob: -9.354231834411621
    8. '_end' → logprob: -10.479231834411621
    9. ' ' → logprob: -10.729231834411621
    10. '```' → logprob: -10.729231834411621

Token 72: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.5770291686058044
    2. 'end' → logprob: -0.8270291686058044
    3. '0' → logprob: -7.577029228210449
    4. '1' → logprob: -8.70202922821045
    5. ' ' → logprob: -8.95202922821045
    6. ' L' → logprob: -9.32702922821045
    7. 'L' → logprob: -9.82702922821045
    8. ' R' → logprob: -10.82702922821045
    9. '	end' → logprob: -11.07702922821045
    10. '(end' → logprob: -11.07702922821045

Token 73: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.4272752852994017e-05
    2. '_' → logprob: -10.75002384185791
    3. 'at' → logprob: -14.12502384185791
    4. '_a' → logprob: -14.62502384185791
    5. '>' → logprob: -14.75002384185791
    6. '<' → logprob: -14.87502384185791
    7. '_<' → logprob: -16.125024795532227
    8. '_to' → logprob: -16.750024795532227
    9. '<=' → logprob: -16.875024795532227
    10. '[' → logprob: -16.875024795532227

Token 74: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -1.2948405128554441e-05
    2. '[R' → logprob: -11.62501335144043
    3. '[' → logprob: -13.00001335144043
    4. 'L' → logprob: -13.50001335144043
    5. '[
' → logprob: -16.37501335144043
    6. '<L' → logprob: -16.75001335144043
    7. '```' → logprob: -17.25001335144043
    8. '[int' → logprob: -17.37501335144043
    9. '	L' → logprob: -18.25001335144043
    10. '(L' → logprob: -18.37501335144043

Token 75: '-' (ID: 12)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20790858566761017
    2. ']<' → logprob: -2.3329086303710938
    3. ']' → logprob: -2.4579086303710938
    4. ')' → logprob: -6.457908630371094
    5. ')<' → logprob: -6.582908630371094
    6. ' <' → logprob: -6.832908630371094
    7. ']==' → logprob: -7.582908630371094
    8. '<R' → logprob: -8.582908630371094
    9. '==' → logprob: -8.957908630371094
    10. '==-' → logprob: -9.332908630371094

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014966767048463225
    2. ' ' → logprob: -9.375149726867676
    3. ']' → logprob: -10.250149726867676
    4. ']>' → logprob: -12.125149726867676
    5. '<|end|>' → logprob: -12.250149726867676
    6. ')' → logprob: -12.500149726867676
    7. ':' → logprob: -12.625149726867676
    8. '>' → logprob: -12.750149726867676
    9. ']<' → logprob: -13.000149726867676
    10. ')>' → logprob: -13.500149726867676

Token 77: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.004573834594339132
    2. ' <' → logprob: -6.504573822021484
    3. ']<' → logprob: -6.754573822021484
    4. ']' → logprob: -7.004573822021484
    5. '<R' → logprob: -7.254573822021484
    6. ')' → logprob: -9.629573822021484
    7. ')<' → logprob: -10.254573822021484
    8. '==' → logprob: -10.379573822021484
    9. '==-' → logprob: -11.004573822021484
    10. '<len' → logprob: -11.004573822021484

Token 78: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00016063073417171836
    2. ' R' → logprob: -8.750160217285156
    3. ' ' → logprob: -14.750160217285156
    4. '   ' → logprob: -14.875160217285156
    5. '=' → logprob: -15.000160217285156
    6. '<R' → logprob: -15.500160217285156
    7. 'r' → logprob: -16.000160217285156
    8. '	R' → logprob: -16.000160217285156
    9. 'L' → logprob: -16.125160217285156
    10. 'end' → logprob: -16.375160217285156

Token 79: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02797154150903225
    2. ':
' → logprob: -3.9029715061187744
    3. ':end' → logprob: -5.2779717445373535
    4. '):' → logprob: -6.2779717445373535
    5. '):
' → logprob: -9.277971267700195
    6. '>' → logprob: -9.402971267700195
    7. '   ' → logprob: -10.027971267700195
    8. ')' → logprob: -10.152971267700195
    9. 'end' → logprob: -10.277971267700195
    10. '>:' → logprob: -10.777971267700195

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006721630343236029
    2. ' ' → logprob: -7.750672340393066
    3. '<|end|>' → logprob: -8.500672340393066
    4. '2' → logprob: -11.125672340393066
    5. 'R' → logprob: -11.875672340393066
    6. ' R' → logprob: -12.625672340393066
    7. 'L' → logprob: -13.125672340393066
    8. '   ' → logprob: -13.125672340393066
    9. '<|end|>' → logprob: -13.313172340393066
    10. ')' → logprob: -13.375672340393066

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029119648039340973
    2. ':
' → logprob: -3.6541197299957275
    3. '):' → logprob: -6.779119491577148
    4. ':end' → logprob: -7.279119491577148
    5. '   ' → logprob: -8.779119491577148
    6. 'end' → logprob: -8.779119491577148
    7. ')' → logprob: -8.779119491577148
    8. '):
' → logprob: -9.029119491577148
    9. '       ' → logprob: -9.279119491577148
    10. '>' → logprob: -9.529119491577148

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006211035884916782
    2. 'end' → logprob: -5.131210803985596
    3. ' end' → logprob: -8.631211280822754
    4. '   ' → logprob: -9.881211280822754
    5. '[end' → logprob: -10.756211280822754
    6. ',end' → logprob: -11.881211280822754
    7. '```' → logprob: -11.881211280822754
    8. '      ' → logprob: -12.756211280822754
    9. '           ' → logprob: -13.006211280822754
    10. '=end' → logprob: -13.006211280822754

Token 83: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.04325437545776367
    2. '       ' → logprob: -3.6682543754577637
    3. ' end' → logprob: -4.168254375457764
    4. '           ' → logprob: -7.043254375457764
    5. '   ' → logprob: -7.918254375457764
    6. '[end' → logprob: -10.418254852294922
    7. '	end' → logprob: -10.668254852294922
    8. ',end' → logprob: -11.668254852294922
    9. ' ' → logprob: -11.793254852294922
    10. '=end' → logprob: -12.168254852294922

Token 84: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.9361264946837764e-07
    2. 'at' → logprob: -16.625
    3. '_' → logprob: -17.875
    4. '	at' → logprob: -18.375
    5. ' _' → logprob: -19.125
    6. '_a' → logprob: -19.375
    7. '_to' → logprob: -19.375
    8. '_AT' → logprob: -19.625
    9. '_att' → logprob: -19.75
    10. '   ' → logprob: -20.375

Token 85: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -2.8921695047756657e-05
    2. '[' → logprob: -11.000028610229492
    3. '[R' → logprob: -11.375028610229492
    4. ' [' → logprob: -15.250028610229492
    5. 'L' → logprob: -16.250028610229492
    6. '[l' → logprob: -16.375028610229492
    7. '[
' → logprob: -16.500028610229492
    8. '=L' → logprob: -17.250028610229492
    9. '```' → logprob: -18.125028610229492
    10. '[(' → logprob: -18.250028610229492

Token 86: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.507972572464496e-05
    2. ' -' → logprob: -9.62509536743164
    3. '<|end|>' → logprob: -10.75009536743164
    4. '[' → logprob: -12.75009536743164
    5. '<|end|>' → logprob: -12.75009536743164
    6. '[-' → logprob: -15.00009536743164
    7. '   ' → logprob: -15.25009536743164
    8. ')' → logprob: -15.50009536743164
    9. ']' → logprob: -15.75009536743164
    10. ' ' → logprob: -16.12509536743164

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.288163083605468e-05
    2. '2' → logprob: -10.125052452087402
    3. '<|end|>' → logprob: -11.625052452087402
    4. ' ' → logprob: -13.750052452087402
    5. '<|end|>' → logprob: -14.000052452087402
    6. '```' → logprob: -14.812552452087402
    7. '146' → logprob: -15.937552452087402
    8. '[' → logprob: -16.00005340576172
    9. '   ' → logprob: -16.37505340576172
    10. '...' → logprob: -16.43755340576172

Token 88: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3943053185939789
    2. ']=' → logprob: -1.2693053483963013
    3. '=' → logprob: -3.1443052291870117
    4. ' =' → logprob: -6.519305229187012
    5. ' ]' → logprob: -8.519305229187012
    6. ']+=' → logprob: -11.394305229187012
    7. '<R' → logprob: -11.519305229187012
    8. '']=' → logprob: -12.019305229187012
    9. '[R' → logprob: -12.394305229187012
    10. ']]=' → logprob: -12.644305229187012

Token 89: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -7.107425062713446e-06
    2. ' R' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.00000762939453
    4. '	R' → logprob: -17.62500762939453
    5. 'r' → logprob: -19.25000762939453
    6. '<R' → logprob: -19.87500762939453
    7. '(R' → logprob: -19.87500762939453
    8. '`' → logprob: -20.25000762939453
    9. 'Ｒ' → logprob: -20.37500762939453
    10. '_R' → logprob: -20.50000762939453

Token 90: '-' (ID: 12)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7049368619918823
    2. '<|end|>' → logprob: -1.4549368619918823
    3. '
' → logprob: -1.7049368619918823
    4. ' ' → logprob: -3.829936981201172
    5. '  
' → logprob: -3.954936981201172
    6. ' 
' → logprob: -4.704936981201172
    7. '```' → logprob: -4.829936981201172
    8. ')' → logprob: -5.204936981201172
    9. '<|end|>' → logprob: -5.204936981201172
    10. '[' → logprob: -5.454936981201172

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -16.500001907348633
    5. '0' → logprob: -18.875001907348633
    6. '１' → logprob: -19.562501907348633
    7. '<|end|>' → logprob: -19.937501907348633
    8. '```' → logprob: -20.250001907348633
    9. '۱' → logprob: -20.437501907348633
    10. '१' → logprob: -20.937501907348633

Token 92: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6000961661338806
    2. 'for' → logprob: -1.9750962257385254
    3. 'max' → logprob: -2.3500962257385254
    4. ')' → logprob: -3.1000962257385254
    5. ']' → logprob: -3.3500962257385254
    6. ' for' → logprob: -3.6000962257385254
    7. '
' → logprob: -3.7250962257385254
    8. '\n' → logprob: -3.8500962257385254
    9. '```' → logprob: -3.8500962257385254
    10. '#' → logprob: -4.475096225738525

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012557681649923325
    2. '=' → logprob: -4.387557506561279
    3. ' =[' → logprob: -10.887557983398438
    4. '[' → logprob: -11.262557983398438
    5. '=[' → logprob: -11.512557983398438
    6. '_' → logprob: -13.262557983398438
    7. ' ' → logprob: -13.387557983398438
    8. '=[]' → logprob: -14.137557983398438
    9. '0' → logprob: -14.262557983398438
    10. '1' → logprob: -14.887557983398438

Token 95: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0296274796128273
    2. '[-' → logprob: -3.779627561569214
    3. ' [' → logprob: -5.279627323150635
    4. '[N' → logprob: -7.404627323150635
    5. '[end' → logprob: -7.654627323150635
    6. '[len' → logprob: -9.154627799987793
    7. ' [-' → logprob: -10.779627799987793
    8. '[int' → logprob: -10.779627799987793
    9. '[n' → logprob: -11.029627799987793
    10. '0' → logprob: -12.154627799987793

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059991865418851376
    2. 'False' → logprob: -5.8809990882873535
    3. '[' → logprob: -6.7559990882873535
    4. '-' → logprob: -6.8809990882873535
    5. 'float' → logprob: -7.5059990882873535
    6. '1' → logprob: -8.880999565124512
    7. 'True' → logprob: -9.630999565124512
    8. '(' → logprob: -9.755999565124512
    9. '[N' → logprob: -10.255999565124512
    10. '10' → logprob: -10.380999565124512

Token 97: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.12817524373531342
    2. ']' → logprob: -2.1281752586364746
    3. ']*' → logprob: -7.003175258636475
    4. ']+' → logprob: -8.253174781799316
    5. ' for' → logprob: -10.003174781799316
    6. 'for' → logprob: -10.628174781799316
    7. ' ]' → logprob: -12.503174781799316
    8. ',' → logprob: -13.128174781799316
    9. ')*(' → logprob: -14.753174781799316
    10. '*(' → logprob: -15.128174781799316

Token 98: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9623810658231378e-05
    2. ' N' → logprob: -11.500020027160645
    3. '(N' → logprob: -11.625020027160645
    4. '100' → logprob: -16.875019073486328
    5. '1' → logprob: -17.000019073486328
    6. '[N' → logprob: -17.000019073486328
    7. 'M' → logprob: -17.250019073486328
    8. '10' → logprob: -17.625019073486328
    9. '`' → logprob: -17.750019073486328
    10. '(' → logprob: -17.875019073486328

Token 99: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.963691804325208e-05
    2. '+
' → logprob: -10.625029563903809
    3. '+)' → logprob: -12.375029563903809
    4. ')' → logprob: -14.875029563903809
    5. ' +' → logprob: -14.875029563903809
    6. '1' → logprob: -15.500029563903809
    7. '+

' → logprob: -16.875030517578125
    8. '```' → logprob: -17.375030517578125
    9. ')+' → logprob: -17.750030517578125
    10. '+B' → logprob: -18.750030517578125

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008294018916785717
    2. '2' → logprob: -7.125829219818115
    3. ' ' → logprob: -10.750829696655273
    4. '+' → logprob: -13.500829696655273
    5. '3' → logprob: -14.375829696655273
    6. '5' → logprob: -15.563329696655273
    7. '6' → logprob: -15.563329696655273
    8. '7' → logprob: -15.563329696655273
    9. '   ' → logprob: -15.688329696655273
    10. ')' → logprob: -15.875829696655273

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004158534109592438
    2. ')
' → logprob: -5.5041584968566895
    3. ')
' → logprob: -9.754158973693848
    4. ')

' → logprob: -11.629158973693848
    5. '+' → logprob: -12.004158973693848
    6. ' )' → logprob: -13.004158973693848
    7. '
' → logprob: -13.754158973693848
    8. '' → logprob: -14.504158973693848
    9. '```' → logprob: -14.629158973693848
    10. ')`' → logprob: -15.004158973693848

Token 102: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.558399319241289e-05
    2. ' for' → logprob: -11.375025749206543
    3. '```' → logprob: -11.500025749206543
    4. 'dp' → logprob: -12.875025749206543
    5. 'i' → logprob: -14.125025749206543
    6. '_' → logprob: -15.750025749206543
    7. '
' → logprob: -16.000024795532227
    8. '`' → logprob: -16.375024795532227
    9. '``' → logprob: -16.750024795532227
    10. 'from' → logprob: -17.375024795532227

Token 103: '_back' (ID: 8715)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4105701744556427
    2. '_end' → logprob: -1.7855701446533203
    3. '_dp' → logprob: -2.0355701446533203
    4. 'dp' → logprob: -3.7855701446533203
    5. '_val' → logprob: -5.78557014465332
    6. '_len' → logprob: -6.03557014465332
    7. '(dp' → logprob: -6.16057014465332
    8. '_value' → logprob: -6.78557014465332
    9. '_length' → logprob: -6.78557014465332
    10. '_re' → logprob: -7.66057014465332

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030117690563201904
    2. ' =' → logprob: -3.5301177501678467
    3. '=-' → logprob: -9.030117988586426
    4. '=[]' → logprob: -9.780117988586426
    5. '_idx' → logprob: -10.030117988586426
    6. '=max' → logprob: -10.405117988586426
    7. '=[' → logprob: -11.030117988586426
    8. '=_' → logprob: -11.155117988586426
    9. '=end' → logprob: -11.655117988586426
    10. '_' → logprob: -11.780117988586426

Token 105: ' [-' (ID: 20191)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03983473777770996
    2. ' -' → logprob: -3.53983473777771
    3. '0' → logprob: -4.664834976196289
    4. ' ' → logprob: -8.414834976196289
    5. '[-' → logprob: -8.539834976196289
    6. '-end' → logprob: -8.789834976196289
    7. '-N' → logprob: -11.289834976196289
    8. '-n' → logprob: -11.664834976196289
    9. '[' → logprob: -12.164834976196289
    10. ' [-' → logprob: -12.539834976196289

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. '10' → logprob: -11.625019073486328
    3. '2' → logprob: -12.625019073486328
    4. 'float' → logprob: -12.750019073486328
    5. '-' → logprob: -13.625019073486328
    6. ' ' → logprob: -13.875019073486328
    7. '100' → logprob: -14.875019073486328
    8. 'sys' → logprob: -15.000019073486328
    9. 'inf' → logprob: -15.375019073486328
    10. 'int' → logprob: -15.687519073486328

Token 107: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.0705588310956955
    2. ']' → logprob: -2.695558786392212
    3. ' for' → logprob: -8.320558547973633
    4. 'for' → logprob: -8.695558547973633
    5. ']*' → logprob: -9.695558547973633
    6. ')*(' → logprob: -9.695558547973633
    7. ')' → logprob: -10.195558547973633
    8. ' ]' → logprob: -10.445558547973633
    9. ']+' → logprob: -11.570558547973633
    10. '*(' → logprob: -11.695558547973633

Token 108: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0028675198554992676
    2. '(N' → logprob: -5.877867698669434
    3. 'M' → logprob: -10.627867698669434
    4. 'len' → logprob: -11.627867698669434
    5. ' N' → logprob: -12.002867698669434
    6. '10' → logprob: -12.127867698669434
    7. '(M' → logprob: -12.877867698669434
    8. '100' → logprob: -13.002867698669434
    9. '(' → logprob: -13.002867698669434
    10. '   ' → logprob: -13.877867698669434

Token 109: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4617256056226324e-05
    2. '1' → logprob: -11.750014305114746
    3. '+
' → logprob: -12.625014305114746
    4. ' +' → logprob: -13.375014305114746
    5. ')' → logprob: -14.250014305114746
    6. ')+' → logprob: -14.750014305114746
    7. '```' → logprob: -15.125014305114746
    8. '+)' → logprob: -15.500014305114746
    9. '[' → logprob: -16.250015258789062
    10. '+[' → logprob: -17.250015258789062

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002737330214586109
    2. '2' → logprob: -8.250273704528809
    3. ' ' → logprob: -12.125273704528809
    4. '```' → logprob: -12.875273704528809
    5. '6' → logprob: -13.687773704528809
    6. '7' → logprob: -14.250273704528809
    7. '+' → logprob: -15.000273704528809
    8. 'N' → logprob: -15.437773704528809
    9. ')' → logprob: -15.500273704528809
    10. '   ' → logprob: -15.562773704528809

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029803840443491936
    2. ')
' → logprob: -3.52980375289917
    3. ')

' → logprob: -10.279804229736328
    4. ')
' → logprob: -11.154804229736328
    5. ' )' → logprob: -13.154804229736328
    6. '
' → logprob: -13.529804229736328
    7. ')`' → logprob: -15.279804229736328
    8. '```' → logprob: -15.404804229736328
    9. ' )
' → logprob: -15.529804229736328
    10. '),' → logprob: -16.279804229736328

Token 112: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002943479048553854
    2. ' for' → logprob: -8.75029468536377
    3. 'max' → logprob: -9.00029468536377
    4. '```' → logprob: -11.87529468536377
    5. ')' → logprob: -13.37529468536377
    6. '0' → logprob: -13.62529468536377
    7. 'from' → logprob: -14.50029468536377
    8. '
' → logprob: -14.62529468536377
    9. 'i' → logprob: -15.37529468536377
    10. 'import' → logprob: -15.50029468536377

Token 113: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6933852434158325
    2. ' i' → logprob: -0.6933852434158325
    3. '_' → logprob: -8.943385124206543
    4. '_i' → logprob: -10.068385124206543
    5. 'x' → logprob: -10.818385124206543
    6. ' _' → logprob: -11.068385124206543
    7. ' ' → logprob: -12.068385124206543
    8. ' x' → logprob: -12.568385124206543
    9. '`' → logprob: -12.943385124206543
    10. 'I' → logprob: -13.068385124206543

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026374151930212975
    2. 'in' → logprob: -3.651374101638794
    3. ' ' → logprob: -9.651373863220215
    4. '	in' → logprob: -13.026373863220215
    5. 'import' → logprob: -13.526373863220215
    6. ',' → logprob: -14.026373863220215
    7. '1' → logprob: -14.026373863220215
    8. '0' → logprob: -14.526373863220215
    9. 'range' → logprob: -14.526373863220215
    10. 'In' → logprob: -14.526373863220215

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759456157684326
    2. ' range' → logprob: -0.8259456157684326
    3. ' ' → logprob: -12.575945854187012
    4. '(range' → logprob: -13.700945854187012
    5. '	range' → logprob: -13.700945854187012
    6. ' xrange' → logprob: -16.450944900512695
    7. '   ' → logprob: -16.825944900512695
    8. ')' → logprob: -17.075944900512695
    9. 'ran' → logprob: -17.325944900512695
    10. '  ' → logprob: -17.325944900512695

Token 116: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08900414407253265
    2. '(N' → logprob: -2.4640040397644043
    3. ' (' → logprob: -9.964004516601562
    4. '1' → logprob: -11.714004516601562
    5. ' ' → logprob: -12.464004516601562
    6. '(
' → logprob: -13.089004516601562
    7. '(n' → logprob: -13.464004516601562
    8. '(len' → logprob: -14.339004516601562
    9. '(i' → logprob: -14.714004516601562
    10. ' N' → logprob: -15.464004516601562

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2838802933692932
    2. '):
' → logprob: -2.0338802337646484
    3. '+' → logprob: -2.1588802337646484
    4. ' +' → logprob: -8.033880233764648
    5. ' ):' → logprob: -8.408880233764648
    6. '-' → logprob: -9.033880233764648
    7. ' ' → logprob: -9.533880233764648
    8. '1' → logprob: -10.408880233764648
    9. ')' → logprob: -10.533880233764648
    10. '   ' → logprob: -10.783880233764648

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19659554958343506
    2. ' if' → logprob: -2.5715956687927246
    3. ' max' → logprob: -3.0715956687927246
    4. 'max' → logprob: -3.6965956687927246
    5. ' dp' → logprob: -4.446595668792725
    6. 'dp' → logprob: -4.446595668792725
    7. 'if' → logprob: -5.196595668792725
    8. ' for' → logprob: -7.946595668792725
    9. '	dp' → logprob: -8.071595191955566
    10. '```' → logprob: -8.196595191955566

Token 119: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3055226504802704
    2. 'if' → logprob: -2.4305226802825928
    3. ' dp' → logprob: -2.8055226802825928
    4. 'max' → logprob: -3.1805226802825928
    5. '   ' → logprob: -3.4305226802825928
    6. ' if' → logprob: -3.5555226802825928
    7. ' max' → logprob: -4.805522441864014
    8. '#' → logprob: -5.805522441864014
    9. '
' → logprob: -8.055522918701172
    10. ' #' → logprob: -8.305522918701172

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12777696549892426
    2. '[' → logprob: -2.127776861190796
    3. ' =' → logprob: -8.127777099609375
    4. ' [' → logprob: -8.627777099609375
    5. '=' → logprob: -9.002777099609375
    6. ' ' → logprob: -9.877777099609375
    7. '[I' → logprob: -10.002777099609375
    8. '<|end|>' → logprob: -10.502777099609375
    9. ']' → logprob: -10.627777099609375
    10. '[int' → logprob: -10.877777099609375

Token 121: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06589636206626892
    2. ']' → logprob: -2.8158962726593018
    3. ' +' → logprob: -5.940896511077881
    4. ']+' → logprob: -7.565896511077881
    5. ']+=' → logprob: -7.690896511077881
    6. ']=' → logprob: -8.565896034240723
    7. ' ]' → logprob: -10.065896034240723
    8. '1' → logprob: -10.315896034240723
    9. '+]' → logprob: -11.065896034240723
    10. '+=' → logprob: -11.815896034240723

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.625014305114746
    3. ')' → logprob: -13.500014305114746
    4. '+' → logprob: -14.312514305114746
    5. '
' → logprob: -14.812514305114746
    6. '0' → logprob: -14.812514305114746
    7. '   ' → logprob: -14.937514305114746
    8. ']' → logprob: -14.937514305114746
    9. '```' → logprob: -15.125014305114746
    10. 'i' → logprob: -15.312514305114746

Token 123: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028735868632793427
    2. ')' → logprob: -3.778735876083374
    3. ']=' → logprob: -5.403735637664795
    4. '=' → logprob: -7.653735637664795
    5. ' ]' → logprob: -8.153736114501953
    6. ')=' → logprob: -9.528736114501953
    7. ' )' → logprob: -10.403736114501953
    8. ']+=' → logprob: -10.778736114501953
    9. '])' → logprob: -10.903736114501953
    10. 'max' → logprob: -11.403736114501953

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008717869408428669
    2. ' =' → logprob: -4.758718013763428
    3. '=max' → logprob: -9.25871753692627
    4. '+=' → logprob: -12.13371753692627
    5. 'max' → logprob: -14.00871753692627
    6. ',' → logprob: -14.50871753692627
    7. '>' → logprob: -14.63371753692627
    8. ' +=' → logprob: -15.50871753692627
    9. '.=' → logprob: -15.50871753692627
    10. ')' → logprob: -15.88371753692627

Token 125: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1228991448879242
    2. 'max' → logprob: -2.247899055480957
    3. ' max' → logprob: -5.247899055480957
    4. ' dp' → logprob: -5.372899055480957
    5. ' ' → logprob: -10.247899055480957
    6. 'min' → logprob: -10.622899055480957
    7. '	dp' → logprob: -10.622899055480957
    8. '   ' → logprob: -11.372899055480957
    9. '0' → logprob: -12.185399055480957
    10. '  ' → logprob: -12.747899055480957

Token 126: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0006899170693941414
    2. '(' → logprob: -7.37568998336792
    3. 'dp' → logprob: -9.875689506530762
    4. '(
' → logprob: -11.500689506530762
    5. ' (' → logprob: -14.125689506530762
    6. '```' → logprob: -15.250689506530762
    7. '_dp' → logprob: -15.750689506530762
    8. ' dp' → logprob: -15.750689506530762
    9. '(

' → logprob: -16.000690460205078
    10. '	dp' → logprob: -16.000690460205078

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3080716346157715e-05
    2. ')' → logprob: -12.000022888183594
    3. 'i' → logprob: -12.000022888183594
    4. '[' → logprob: -12.250022888183594
    5. ')[' → logprob: -13.750022888183594
    6. ' [' → logprob: -13.750022888183594
    7. ',i' → logprob: -14.375022888183594
    8. '```' → logprob: -14.375022888183594
    9. '[
' → logprob: -14.625022888183594
    10. '
' → logprob: -15.250022888183594

Token 128: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01900181546807289
    2. ' ,' → logprob: -4.2690019607543945
    3. '],' → logprob: -6.0190019607543945
    4. ',max' → logprob: -7.6440019607543945
    5. 'dp' → logprob: -7.7690019607543945
    6. '),' → logprob: -7.8940019607543945
    7. ',i' → logprob: -8.269001960754395
    8. ' dp' → logprob: -8.269001960754395
    9. ',
' → logprob: -8.394001960754395
    10. ',end' → logprob: -9.644001960754395

Token 129: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46210119128227234
    2. '1' → logprob: -1.8371012210845947
    3. 'dp' → logprob: -2.4621012210845947
    4. ' ,' → logprob: -3.5871012210845947
    5. '0' → logprob: -3.8371012210845947
    6. ' ' → logprob: -3.8371012210845947
    7. ' dp' → logprob: -3.9621012210845947
    8. ',i' → logprob: -4.837100982666016
    9. ',max' → logprob: -5.212100982666016
    10. 'i' → logprob: -5.462100982666016

Token 130: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029764611274003983
    2. ' ,' → logprob: -3.5297646522521973
    3. ',
' → logprob: -12.404764175415039
    4. ' ' → logprob: -13.029764175415039
    5. '
' → logprob: -13.404764175415039
    6. ' dp' → logprob: -13.779764175415039
    7. 'dp' → logprob: -13.904764175415039
    8. ' ,
' → logprob: -14.029764175415039
    9. ',max' → logprob: -14.279764175415039
    10. ',d' → logprob: -14.529764175415039

Token 131: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01605524867773056
    2. ' dp' → logprob: -4.141055107116699
    3. '	dp' → logprob: -11.5160551071167
    4. ' ' → logprob: -12.5160551071167
    5. 'max' → logprob: -12.8910551071167
    6. '   ' → logprob: -13.7660551071167
    7. '(dp' → logprob: -13.8910551071167
    8. '
' → logprob: -14.0160551071167
    9. '_dp' → logprob: -15.0160551071167
    10. '```' → logprob: -15.1410551071167

Token 132: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.822646693966817e-06
    2. ')' → logprob: -13.375007629394531
    3. ' [' → logprob: -13.500007629394531
    4. 'i' → logprob: -13.500007629394531
    5. '[' → logprob: -13.625007629394531
    6. ')[' → logprob: -14.875007629394531
    7. '```' → logprob: -14.875007629394531
    8. '(i' → logprob: -15.250007629394531
    9. ' ' → logprob: -15.500007629394531
    10. ' i' → logprob: -15.500007629394531

Token 133: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.23718738555908203
    2. ']' → logprob: -1.987187385559082
    3. ']+' → logprob: -2.737187385559082
    4. ')' → logprob: -5.362187385559082
    5. '+' → logprob: -6.362187385559082
    6. ' ])' → logprob: -6.862187385559082
    7. '])
' → logprob: -6.987187385559082
    8. ')+' → logprob: -8.487187385559082
    9. ' ]' → logprob: -8.737187385559082
    10. ' ' → logprob: -8.862187385559082

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10770024359226227
    2. '
' → logprob: -2.4827003479003906
    3. ' if' → logprob: -4.732700347900391
    4. '    
' → logprob: -4.982700347900391
    5. 'if' → logprob: -7.232700347900391
    6. ' 
' → logprob: -7.357700347900391
    7. '  
' → logprob: -7.857700347900391
    8. '```' → logprob: -8.10770034790039
    9. ',' → logprob: -8.60770034790039
    10. 'max' → logprob: -8.98270034790039

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0652039423584938
    2. ' if' → logprob: -3.190203905105591
    3. 'max' → logprob: -3.940203905105591
    4. 'end' → logprob: -7.06520414352417
    5. ' max' → logprob: -7.31520414352417
    6. 'idx' → logprob: -8.190203666687012
    7. 'for' → logprob: -9.065203666687012
    8. 'r' → logprob: -9.315203666687012
    9. 'l' → logprob: -9.565203666687012
    10. 'j' → logprob: -9.690203666687012

Token 136: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10024183988571167
    2. ' end' → logprob: -2.3502418994903564
    3. ' ' → logprob: -10.600241661071777
    4. '(end' → logprob: -12.225241661071777
    5. '0' → logprob: -13.475241661071777
    6. '	end' → logprob: -13.850241661071777
    7. 'max' → logprob: -14.225241661071777
    8. '   ' → logprob: -14.475241661071777
    9. '  ' → logprob: -14.600241661071777
    10. '[end' → logprob: -14.850241661071777

Token 137: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.7432603272027336e-06
    2. 'at' → logprob: -13.875001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_a' → logprob: -17.625001907348633
    5. 'At' → logprob: -18.000001907348633
    6. '	at' → logprob: -18.000001907348633
    7. '_to' → logprob: -18.500001907348633
    8. '_if' → logprob: -18.500001907348633
    9. ' at' → logprob: -18.500001907348633
    10. '_AT' → logprob: -18.750001907348633

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.452426608419046e-05
    2. '[L' → logprob: -10.50003433227539
    3. '[' → logprob: -12.12503433227539
    4. ' [' → logprob: -13.62503433227539
    5. '[
' → logprob: -15.12503433227539
    6. 'i' → logprob: -16.87503433227539
    7. '```' → logprob: -17.62503433227539
    8. '[I' → logprob: -17.75003433227539
    9. '[index' → logprob: -18.75003433227539
    10. '   ' → logprob: -18.87503433227539

Token 139: ']>=' (ID: 185954)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.40644317865371704
    2. '!=-' → logprob: -1.7814431190490723
    3. ' !=' → logprob: -1.9064431190490723
    4. '>=' → logprob: -4.281443119049072
    5. ')' → logprob: -6.156443119049072
    6. '>' → logprob: -7.656443119049072
    7. ']!=' → logprob: -8.53144359588623
    8. ')!=' → logprob: -8.53144359588623
    9. ' >=' → logprob: -9.90644359588623
    10. '!==' → logprob: -10.28144359588623

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008232106338255107
    2. 'i' → logprob: -7.500823020935059
    3. ' ' → logprob: -8.250823020935059
    4. ' i' → logprob: -11.625823020935059
    5. '1' → logprob: -15.375823020935059
    6. '   ' → logprob: -19.438323974609375
    7. '2' → logprob: -19.688323974609375
    8. ')' → logprob: -19.750823974609375
    9. '	i' → logprob: -20.000823974609375
    10. '۰' → logprob: -20.063323974609375

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03810150548815727
    2. ':
' → logprob: -3.2881014347076416
    3. '   ' → logprob: -10.663101196289062
    4. '       ' → logprob: -10.913101196289062
    5. ',' → logprob: -12.163101196289062
    6. '):
' → logprob: -12.913101196289062
    7. ':

' → logprob: -13.038101196289062
    8. '):' → logprob: -13.163101196289062
    9. ' :' → logprob: -13.413101196289062
    10. ' and' → logprob: -13.538101196289062

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006939971353858709
    2. ' dp' → logprob: -5.631939888000488
    3. 'dp' → logprob: -6.256939888000488
    4. ' for' → logprob: -7.256939888000488
    5. '   ' → logprob: -8.131939888000488
    6. ' max' → logprob: -9.131939888000488
    7. '        
' → logprob: -9.756939888000488
    8. 'max' → logprob: -10.381939888000488
    9. '
' → logprob: -10.506939888000488
    10. '	dp' → logprob: -10.506939888000488

Token 143: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0951017364859581
    2. ' dp' → logprob: -3.345101833343506
    3. '       ' → logprob: -4.470101833343506
    4. 'for' → logprob: -4.470101833343506
    5. 'max' → logprob: -4.720101833343506
    6. '   ' → logprob: -5.470101833343506
    7. 'j' → logprob: -5.970101833343506
    8. ' for' → logprob: -6.095101833343506
    9. 'start' → logprob: -6.095101833343506
    10. 'if' → logprob: -6.220101833343506

Token 144: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.003300578100606799
    2. '[i' → logprob: -5.878300666809082
    3. '[' → logprob: -7.878300666809082
    4. 'end' → logprob: -9.753300666809082
    5. '=end' → logprob: -10.128300666809082
    6. '[max' → logprob: -12.128300666809082
    7. ' [' → logprob: -12.753300666809082
    8. '[min' → logprob: -13.253300666809082
    9. '	end' → logprob: -13.753300666809082
    10. '[
' → logprob: -13.878300666809082

Token 145: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -5.438573680294212e-06
    2. 'at' → logprob: -12.250005722045898
    3. '	at' → logprob: -15.125005722045898
    4. ' at' → logprob: -16.3750057220459
    5. '   ' → logprob: -16.5000057220459
    6. '_end' → logprob: -17.2500057220459
    7. 'At' → logprob: -17.6250057220459
    8. '+' → logprob: -17.7500057220459
    9. '_' → logprob: -17.7500057220459
    10. '-at' → logprob: -17.8750057220459

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.125005722045898
    3. '[
' → logprob: -15.375005722045898
    4. 'i' → logprob: -15.750005722045898
    5. ' [' → logprob: -16.8750057220459
    6. '[s' → logprob: -17.0000057220459
    7. '[I' → logprob: -18.0000057220459
    8. '```' → logprob: -18.0000057220459
    9. ']' → logprob: -18.6250057220459
    10. '][' → logprob: -19.0000057220459

Token 147: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023072509095072746
    2. ']+' → logprob: -4.273072719573975
    3. '+' → logprob: -5.023072719573975
    4. '[' → logprob: -6.523072719573975
    5. ']' → logprob: -7.398072719573975
    6. 'i' → logprob: -9.773072242736816
    7. '   ' → logprob: -10.148072242736816
    8. ' +' → logprob: -10.648072242736816
    9. ')+' → logprob: -10.648072242736816
    10. '[
' → logprob: -11.273072242736816

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.750008583068848
    3. ']' → logprob: -14.875008583068848
    4. ')' → logprob: -16.250009536743164
    5. 'i' → logprob: -16.250009536743164
    6. '+' → logprob: -16.562509536743164
    7. '
' → logprob: -16.687509536743164
    8. '   ' → logprob: -16.812509536743164
    9. '[i' → logprob: -17.312509536743164
    10. '0' → logprob: -17.375009536743164

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06257186830043793
    2. ']=' → logprob: -2.8125717639923096
    3. ' ]' → logprob: -8.06257152557373
    4. ')' → logprob: -9.18757152557373
    5. '=' → logprob: -9.31257152557373
    6. ']+=' → logprob: -9.68757152557373
    7. ')]' → logprob: -11.68757152557373
    8. ')=' → logprob: -11.81257152557373
    9. '   ' → logprob: -12.06257152557373
    10. ' =' → logprob: -12.81257152557373

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014646913856267929
    2. ' =' → logprob: -4.264647006988525
    3. '=max' → logprob: -7.639647006988525
    4. '+=' → logprob: -14.264646530151367
    5. ')' → logprob: -14.389646530151367
    6. 'max' → logprob: -14.514646530151367
    7. ']=' → logprob: -16.014646530151367
    8. ')=' → logprob: -16.264646530151367
    9. '>' → logprob: -16.514646530151367
    10. '=min' → logprob: -16.764646530151367

Token 151: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3132619559764862
    2. ' max' → logprob: -1.3132619857788086
    3. '	max' → logprob: -15.438261985778809
    4. '(max' → logprob: -18.313261032104492
    5. '   ' → logprob: -18.563261032104492
    6. ' ' → logprob: -18.938261032104492
    7. '_max' → logprob: -19.438261032104492
    8. '[max' → logprob: -19.813261032104492
    9. '=max' → logprob: -20.313261032104492
    10. ',max' → logprob: -20.813261032104492

Token 152: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.750060081481934
    3. '(
' → logprob: -13.875060081481934
    4. 'dp' → logprob: -14.625060081481934
    5. '	dp' → logprob: -18.500059127807617
    6. ' (' → logprob: -19.250059127807617
    7. '```' → logprob: -19.625059127807617
    8. ' dp' → logprob: -20.125059127807617
    9. '(

' → logprob: -20.125059127807617
    10. '(df' → logprob: -20.500059127807617

Token 153: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.37500286102295
    3. '[i' → logprob: -14.25000286102295
    4. 'end' → logprob: -14.87500286102295
    5. '[
' → logprob: -15.50000286102295
    6. ')' → logprob: -16.500003814697266
    7. ' [' → logprob: -16.750003814697266
    8. ',end' → logprob: -16.875003814697266
    9. '(end' → logprob: -17.500003814697266
    10. '	end' → logprob: -17.625003814697266

Token 154: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.008130351081490517
    2. 'at' → logprob: -4.8831305503845215
    3. '[i' → logprob: -8.633130073547363
    4. 'At' → logprob: -9.133130073547363
    5. '   ' → logprob: -9.258130073547363
    6. '[' → logprob: -11.008130073547363
    7. '_end' → logprob: -11.258130073547363
    8. '	at' → logprob: -11.258130073547363
    9. '       ' → logprob: -11.508130073547363
    10. '           ' → logprob: -12.008130073547363

Token 155: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005642342148348689
    2. '_at' → logprob: -8.125564575195312
    3. 'i' → logprob: -8.875564575195312
    4. 'at' → logprob: -9.750564575195312
    5. '[' → logprob: -10.625564575195312
    6. '_i' → logprob: -12.125564575195312
    7. '[
' → logprob: -12.250564575195312
    8. '   ' → logprob: -12.250564575195312
    9. '{i' → logprob: -12.250564575195312
    10. '+' → logprob: -12.500564575195312

Token 156: ']+' (ID: 15344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.41531243920326233
    2. '+' → logprob: -1.29031240940094
    3. ']+' → logprob: -2.9153125286102295
    4. '[' → logprob: -5.41531229019165
    5. 'i' → logprob: -5.66531229019165
    6. '1' → logprob: -7.41531229019165
    7. '   ' → logprob: -7.66531229019165
    8. ')+' → logprob: -7.66531229019165
    9. ']' → logprob: -7.79031229019165
    10. '+i' → logprob: -8.915312767028809

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016241880075540394
    2. ' ' → logprob: -9.000162124633789
    3. '0' → logprob: -11.000162124633789
    4. '   ' → logprob: -12.562662124633789
    5. '+' → logprob: -12.750162124633789
    6. '[i' → logprob: -13.375162124633789
    7. ')' → logprob: -13.437662124633789
    8. '[' → logprob: -13.500162124633789
    9. '
' → logprob: -13.500162124633789
    10. '```' → logprob: -13.937662124633789

Token 158: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038330943789333105
    2. '],' → logprob: -5.628833293914795
    3. ' ,' → logprob: -8.503832817077637
    4. 'dp' → logprob: -10.753832817077637
    5. ' dp' → logprob: -13.003832817077637
    6. '),' → logprob: -13.753832817077637
    7. '(dp' → logprob: -13.753832817077637
    8. ']' → logprob: -14.003832817077637
    9. ',max' → logprob: -14.128832817077637
    10. ',d' → logprob: -14.253832817077637

Token 159: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.04308540001511574
    2. 'dp' → logprob: -3.1680853366851807
    3. '(dp' → logprob: -10.043085098266602
    4. ' ' → logprob: -10.918085098266602
    5. '	dp' → logprob: -10.918085098266602
    6. '_dp' → logprob: -13.293085098266602
    7. ')' → logprob: -13.793085098266602
    8. '   ' → logprob: -14.293085098266602
    9. '.dp' → logprob: -14.793085098266602
    10. ' ' → logprob: -14.793085098266602

Token 160: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.625007629394531
    3. 'i' → logprob: -12.625007629394531
    4. '[end' → logprob: -14.875007629394531
    5. ' i' → logprob: -15.250007629394531
    6. ' [' → logprob: -16.87500762939453
    7. '[I' → logprob: -17.12500762939453
    8. '(i' → logprob: -17.12500762939453
    9. ')' → logprob: -17.50000762939453
    10. '[
' → logprob: -17.50000762939453

Token 161: '])
' (ID: 5169)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5232455730438232
    2. ']+' → logprob: -0.8982455730438232
    3. ' ]' → logprob: -9.648245811462402
    4. '+' → logprob: -10.398245811462402
    5. '1' → logprob: -12.273245811462402
    6. '])' → logprob: -12.523245811462402
    7. '[' → logprob: -12.648245811462402
    8. '+]' → logprob: -12.898245811462402
    9. '])+' → logprob: -13.148245811462402
    10. '   ' → logprob: -13.523245811462402

Token 162: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' dp' (ID: 21546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6552447080612183
    2. '<|end|>' → logprob: -1.0302447080612183
    3. '+' → logprob: -2.405244827270508
    4. ' ' → logprob: -4.405244827270508
    5. '```' → logprob: -5.030244827270508
    6. '   ' → logprob: -5.405244827270508
    7. '[i' → logprob: -6.655244827270508
    8. '#' → logprob: -7.030244827270508
    9. '    ' → logprob: -7.155244827270508
    10. ' i' → logprob: -7.280244827270508

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.034702692180871964
    2. '[' → logprob: -3.409702777862549
    3. '<|end|>' → logprob: -7.534702777862549
    4. '[I' → logprob: -8.65970230102539
    5. '[end' → logprob: -9.65970230102539
    6. '[
' → logprob: -10.03470230102539
    7. '[user' → logprob: -10.03470230102539
    8. '[:]' → logprob: -10.40970230102539
    9. ')' → logprob: -10.53470230102539
    10. '```' → logprob: -10.78470230102539

Token 165: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030332813039422035
    2. ']' → logprob: -4.280333042144775
    3. ']+' → logprob: -4.405333042144775
    4. ' +' → logprob: -5.655333042144775
    5. ')+' → logprob: -9.530332565307617
    6. ']+=' → logprob: -9.530332565307617
    7. ')' → logprob: -9.655332565307617
    8. ' ]' → logprob: -10.155332565307617
    9. '+]' → logprob: -10.905332565307617
    10. '   ' → logprob: -11.155332565307617

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.265633419388905e-05
    2. ' ' → logprob: -9.750062942504883
    3. '   ' → logprob: -13.375062942504883
    4. '2' → logprob: -13.937562942504883
    5. '```' → logprob: -14.812562942504883
    6. ')' → logprob: -15.375062942504883
    7. '+' → logprob: -15.375062942504883
    8. '0' → logprob: -15.687562942504883
    9. '  ' → logprob: -15.687562942504883
    10. '
' → logprob: -15.875062942504883

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16871413588523865
    2. ']+=' → logprob: -1.918714165687561
    3. ']+' → logprob: -5.6687140464782715
    4. ')' → logprob: -5.9187140464782715
    5. '+=' → logprob: -6.9187140464782715
    6. '+' → logprob: -7.1687140464782715
    7. ' ]' → logprob: -8.66871452331543
    8. ']=' → logprob: -8.91871452331543
    9. ')+' → logprob: -9.29371452331543
    10. '+]' → logprob: -10.04371452331543

Token 168: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04513554647564888
    2. '=' → logprob: -3.170135498046875
    3. ' +=' → logprob: -6.795135498046875
    4. '+' → logprob: -7.170135498046875
    5. '=max' → logprob: -9.170135498046875
    6. ']+=' → logprob: -9.795135498046875
    7. '-=' → logprob: -10.670135498046875
    8. ')' → logprob: -11.170135498046875
    9. 'max' → logprob: -11.670135498046875
    10. ',' → logprob: -11.795135498046875

Token 169: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08167028427124023
    2. ' max' → logprob: -2.8316702842712402
    3. 'dp' → logprob: -3.9566702842712402
    4. ' dp' → logprob: -7.95667028427124
    5. ' ' → logprob: -11.206670761108398
    6. '	max' → logprob: -12.706670761108398
    7. 'min' → logprob: -13.019170761108398
    8. '(max' → logprob: -13.331670761108398
    9. 'A' → logprob: -13.394170761108398
    10. 'm' → logprob: -13.706670761108398

Token 170: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. 'dp' → logprob: -14.625336647033691
    4. '(
' → logprob: -15.875336647033691
    5. ' (' → logprob: -16.125335693359375
    6. '	dp' → logprob: -18.125335693359375
    7. '(

' → logprob: -18.375335693359375
    8. '(max' → logprob: -18.375335693359375
    9. '```' → logprob: -19.125335693359375
    10. '((' → logprob: -19.125335693359375

Token 171: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'dp' → logprob: -16.125
    3. 'i' → logprob: -16.25
    4. '[' → logprob: -18.125
    5. '```' → logprob: -18.375
    6. ')' → logprob: -18.5
    7. '[
' → logprob: -19.125
    8. '{i' → logprob: -19.75
    9. '(i' → logprob: -19.875
    10. ',i' → logprob: -20.5

Token 172: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0047533572651445866
    2. '[i' → logprob: -6.254753589630127
    3. ']' → logprob: -6.629753589630127
    4. ']+' → logprob: -6.879753589630127
    5. '1' → logprob: -8.629753112792969
    6. '])' → logprob: -9.504753112792969
    7. '   ' → logprob: -9.504753112792969
    8. ')' → logprob: -10.254753112792969
    9. ')+' → logprob: -10.879753112792969
    10. '[' → logprob: -11.129753112792969

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.841743303695694e-05
    2. '+' → logprob: -9.87509822845459
    3. ' ' → logprob: -10.12509822845459
    4. ')' → logprob: -13.12509822845459
    5. '   ' → logprob: -13.75009822845459
    6. '0' → logprob: -13.87509822845459
    7. 'i' → logprob: -14.37509822845459
    8. '[i' → logprob: -15.00009822845459
    9. '[' → logprob: -15.43759822845459
    10. '<|end|>' → logprob: -15.56259822845459

Token 174: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004670780152082443
    2. ' ,' → logprob: -5.3796706199646
    3. '],' → logprob: -10.879671096801758
    4. ',
' → logprob: -11.754671096801758
    5. '(dp' → logprob: -12.254671096801758
    6. '),' → logprob: -12.629671096801758
    7. 'dp' → logprob: -12.754671096801758
    8. ']' → logprob: -13.129671096801758
    9. ' dp' → logprob: -13.254671096801758
    10. ')' → logprob: -13.754671096801758

Token 175: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04946953430771828
    2. ' dp' → logprob: -3.049469470977783
    3. 'max' → logprob: -7.549469470977783
    4. ' max' → logprob: -9.049469947814941
    5. ' ' → logprob: -9.299469947814941
    6. 'A' → logprob: -10.049469947814941
    7. '   ' → logprob: -10.924469947814941
    8. ')' → logprob: -11.174469947814941
    9. '	dp' → logprob: -11.299469947814941
    10. ' A' → logprob: -11.299469947814941

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010747690976131707
    2. 'i' → logprob: -9.250107765197754
    3. '[' → logprob: -12.250107765197754
    4. ')' → logprob: -13.250107765197754
    5. '[end' → logprob: -13.875107765197754
    6. ']' → logprob: -14.500107765197754
    7. ' i' → logprob: -14.750107765197754
    8. '[N' → logprob: -14.875107765197754
    9. 'dp' → logprob: -15.000107765197754
    10. '   ' → logprob: -15.000107765197754

Token 177: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.47497621178627014
    2. ']' → logprob: -0.9749761819839478
    3. '+' → logprob: -7.224976062774658
    4. '])' → logprob: -9.099976539611816
    5. '])+' → logprob: -10.724976539611816
    6. ' ]' → logprob: -11.099976539611816
    7. '1' → logprob: -11.724976539611816
    8. ')+' → logprob: -12.599976539611816
    9. '+]' → logprob: -12.974976539611816
    10. ']
' → logprob: -13.099976539611816

Token 178: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01022760383784771
    2. ' A' → logprob: -4.635227680206299
    3. '1' → logprob: -7.760227680206299
    4. ' ' → logprob: -11.01022720336914
    5. '0' → logprob: -11.88522720336914
    6. '(A' → logprob: -12.51022720336914
    7. '   ' → logprob: -13.13522720336914
    8. '(' → logprob: -13.32272720336914
    9. '[A' → logprob: -13.44772720336914
    10. '
' → logprob: -13.51022720336914

Token 179: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.000003814697266
    3. 'i' → logprob: -13.500003814697266
    4. '[
' → logprob: -17.250003814697266
    5. ' [' → logprob: -18.250003814697266
    6. '```' → logprob: -18.750003814697266
    7. '[I' → logprob: -19.125003814697266
    8. ' i' → logprob: -19.500003814697266
    9. '][' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.625003814697266

Token 180: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.023491207510232925
    2. ')' → logprob: -3.773491144180298
    3. '))' → logprob: -9.523490905761719
    4. ' ])' → logprob: -9.898490905761719
    5. ')])' → logprob: -10.023490905761719
    6. '])
' → logprob: -10.398490905761719
    7. ' )' → logprob: -11.023490905761719
    8. ']' → logprob: -11.148490905761719
    9. ')
' → logprob: -11.898490905761719
    10. '})' → logprob: -13.023490905761719

Token 181: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6632393598556519
    2. '<|end|>' → logprob: -1.6632393598556519
    3. '```' → logprob: -2.0382394790649414
    4. '\n' → logprob: -2.1632394790649414
    5. '
' → logprob: -3.2882394790649414
    6. '[i' → logprob: -5.788239479064941
    7. '+' → logprob: -6.163239479064941
    8. '[' → logprob: -6.663239479064941
    9. ' 
' → logprob: -6.913239479064941
    10. ']' → logprob: -7.163239479064941

Token 182: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.250036239624023
    3. 'dp' → logprob: -15.250036239624023
    4. '(max' → logprob: -15.375036239624023
    5. ' (' → logprob: -15.875036239624023
    6. ' dp' → logprob: -16.875036239624023
    7. '	dp' → logprob: -18.875036239624023
    8. '(dc' → logprob: -19.000036239624023
    9. '(
' → logprob: -19.375036239624023
    10. '((' → logprob: -19.750036239624023

Token 183: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.004079470410943031
    2. '[-' → logprob: -5.504079341888428
    3. ')' → logprob: -14.254079818725586
    4. '[n' → logprob: -15.254079818725586
    5. '[M' → logprob: -16.504079818725586
    6. '[' → logprob: -17.129079818725586
    7. '(N' → logprob: -17.379079818725586
    8. 'N' → logprob: -17.504079818725586
    9. '[end' → logprob: -17.879079818725586
    10. ' [' → logprob: -18.504079818725586

Token 184: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011154505191370845
    2. '))' → logprob: -7.001115322113037
    3. '])' → logprob: -8.626115798950195
    4. '})' → logprob: -10.876115798950195
    5. ' )' → logprob: -12.751115798950195
    6. ')
' → logprob: -13.376115798950195
    7. '>)' → logprob: -15.126115798950195
    8. '）' → logprob: -15.251115798950195
    9. ')`' → logprob: -15.626115798950195
    10. '`)' → logprob: -16.001115798950195


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 182
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 51.10%
Précision adaptée (1ère position): 53.30%
Précision (top 10): 84.62%
================================================================================
