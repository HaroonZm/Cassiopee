================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    m, n_min, n_max = map(int, input().split())
    if m == 0 and n_min == 0 and n_max == 0:
        break
    scores = [int(input()) for _ in range(m)]
    best_n = n_min
    best_gap = -1
    for n in range(n_min, n_max + 1):
        # gap = lowest score of successful - highest score of unsuccessful
        gap = scores[n - 1] - scores[n]
        if gap > best_gap or (gap == best_gap and n > best_n):
            best_gap = gap
            best_n = n
    print(best_n)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314842700958252
    2. '    ' → logprob: -2.131484270095825
    3. '    
' → logprob: -2.631484270095825
    4. '\' → logprob: -2.881484270095825
    5. '\n' → logprob: -2.881484270095825
    6. ' ' → logprob: -3.256484270095825
    7. '```' → logprob: -3.256484270095825
    8. ' 
' → logprob: -3.631484270095825
    9. '  
' → logprob: -4.131484031677246
    10. '     
' → logprob: -4.256484031677246

Token 4: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.057939816266298294
    2. 'essage' → logprob: -4.1829400062561035
    3. 'e' → logprob: -4.6829400062561035
    4. 'i' → logprob: -5.0579400062561035
    5. 'y' → logprob: -5.1829400062561035
    6. 'o' → logprob: -5.1829400062561035
    7. '=' → logprob: -5.4329400062561035
    8. '   ' → logprob: -5.6829400062561035
    9. ' =' → logprob: -6.3079400062561035
    10. ':' → logprob: -6.9329400062561035

Token 6: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.105080246925354
    2. ' s' → logprob: -1.355080246925354
    3. ' ' → logprob: -1.730080246925354
    4. 'n' → logprob: -2.4800801277160645
    5. 's' → logprob: -2.6050801277160645
    6. ' input' → logprob: -3.8550801277160645
    7. '_' → logprob: -4.4800801277160645
    8. '  ' → logprob: -4.8550801277160645
    9. 'input' → logprob: -5.1050801277160645
    10. '   ' → logprob: -5.2300801277160645

Token 7: '_min' (ID: 15950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8401662111282349
    2. ' =' → logprob: -1.2151662111282349
    3. ',' → logprob: -1.3401662111282349
    4. ' ,' → logprob: -5.090166091918945
    5. ')' → logprob: -5.965166091918945
    6. ' ' → logprob: -7.840166091918945
    7. '<|end|>' → logprob: -7.965166091918945
    8. '   ' → logprob: -9.090166091918945
    9. '[' → logprob: -9.340166091918945
    10. '  ' → logprob: -10.090166091918945

Token 8: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7074024677276611
    2. ' =' → logprob: -0.7074024677276611
    3. ',' → logprob: -4.332402229309082
    4. ' ' → logprob: -7.332402229309082
    5. ' ,' → logprob: -8.207402229309082
    6. '_' → logprob: -10.582402229309082
    7. '  ' → logprob: -10.707402229309082
    8. ')' → logprob: -10.832402229309082
    9. '   ' → logprob: -11.957402229309082
    10. ' =
' → logprob: -12.082402229309082

Token 9: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03308708965778351
    2. 'n' → logprob: -3.7830870151519775
    3. '=' → logprob: -6.033087253570557
    4. ' =' → logprob: -6.533087253570557
    5. ' ' → logprob: -6.783087253570557
    6. ' _' → logprob: -6.783087253570557
    7. ' s' → logprob: -7.158087253570557
    8. '_' → logprob: -7.845587253570557
    9. ' k' → logprob: -8.345586776733398
    10. ' max' → logprob: -8.720586776733398

Token 10: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3600741922855377
    2. '=' → logprob: -1.8600741624832153
    3. ' =' → logprob: -2.110074281692505
    4. ',' → logprob: -3.735074281692505
    5. ' ' → logprob: -7.860074043273926
    6. '_min' → logprob: -8.110074043273926
    7. '_=' → logprob: -8.485074043273926
    8. '_max' → logprob: -8.735074043273926
    9. ' _' → logprob: -8.735074043273926
    10. '_,' → logprob: -9.485074043273926

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4864197373390198
    2. ' =' → logprob: -1.236419677734375
    3. ',' → logprob: -2.361419677734375
    4. ' ,' → logprob: -8.361419677734375
    5. ')' → logprob: -9.736419677734375
    6. '   ' → logprob: -9.736419677734375
    7. ' ' → logprob: -10.111419677734375
    8. '```' → logprob: -10.861419677734375
    9. '  ' → logprob: -10.986419677734375
    10. '    ' → logprob: -11.861419677734375

Token 12: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.23928266763687134
    2. 'map' → logprob: -2.2392826080322266
    3. ' input' → logprob: -2.6142826080322266
    4. 'input' → logprob: -3.9892826080322266
    5. '0' → logprob: -5.489282608032227
    6. ' ' → logprob: -6.239282608032227
    7. ' some' → logprob: -6.489282608032227
    8. ' int' → logprob: -6.864282608032227
    9. ' list' → logprob: -7.489282608032227
    10. 'some' → logprob: -7.614282608032227

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.38485464453697205
    2. '(' → logprob: -1.2598546743392944
    3. '(str' → logprob: -3.384854555130005
    4. '(lambda' → logprob: -6.509854793548584
    5. '(input' → logprob: -9.259854316711426
    6. '(list' → logprob: -9.384854316711426
    7. '(
' → logprob: -9.634854316711426
    8. '<int' → logprob: -10.384854316711426
    9. 'int' → logprob: -10.884854316711426
    10. ' (' → logprob: -11.134854316711426

Token 14: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08724856376647949
    2. ')' → logprob: -2.7122485637664795
    3. '(' → logprob: -4.462248802185059
    4. 'input' → logprob: -5.837248802185059
    5. '(user' → logprob: -7.212248802185059
    6. ' input' → logprob: -7.462248802185059
    7. '[input' → logprob: -8.712248802185059
    8. '(str' → logprob: -8.962248802185059
    9. '())' → logprob: -9.212248802185059
    10. '(range' → logprob: -9.337248802185059

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17987847328186035
    2. ' input' → logprob: -1.8048784732818604
    3. '(input' → logprob: -9.429878234863281
    4. ')' → logprob: -9.929878234863281
    5. '=input' → logprob: -13.554878234863281
    6. ',input' → logprob: -13.804878234863281
    7. ' )' → logprob: -14.179878234863281
    8. '	input' → logprob: -15.054878234863281
    9. '   ' → logprob: -15.554878234863281
    10. ' ' → logprob: -16.05487823486328

Token 16: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46863454580307007
    2. '())' → logprob: -1.3436346054077148
    3. '().' → logprob: -2.968634605407715
    4. '(' → logprob: -3.843634605407715
    5. '('' → logprob: -4.093634605407715
    6. '(()' → logprob: -4.843634605407715
    7. ')' → logprob: -5.468634605407715
    8. '`()' → logprob: -5.593634605407715
    9. '());' → logprob: -6.468634605407715
    10. '()))' → logprob: -7.218634605407715

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009174126898869872
    2. 'strip' → logprob: -7.000917434692383
    3. 'rstrip' → logprob: -12.375917434692383
    4. ' split' → logprob: -13.500917434692383
    5. '(split' → logprob: -16.250917434692383
    6. 'sp' → logprob: -16.500917434692383
    7. 'spl' → logprob: -16.625917434692383
    8. 's' → logprob: -17.250917434692383
    9. 'replace' → logprob: -18.250917434692383
    10. 'rs' → logprob: -18.250917434692383

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5799899101257324
    2. '())' → logprob: -0.8299899101257324
    3. '()' → logprob: -5.954989910125732
    4. '))' → logprob: -6.829989910125732
    5. '()))' → logprob: -8.82999038696289
    6. '('' → logprob: -9.70499038696289
    7. '(' → logprob: -10.70499038696289
    8. ' ())' → logprob: -10.70499038696289
    9. ')))' → logprob: -11.45499038696289
    10. '`)' → logprob: -11.70499038696289

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031412169337272644
    2. '):' → logprob: -4.156412124633789
    3. ')' → logprob: -5.031412124633789
    4. ',' → logprob: -5.656412124633789
    5. '   ' → logprob: -5.781412124633789
    6. '<|end|>' → logprob: -7.406412124633789
    7. '       ' → logprob: -8.031412124633789
    8. ' if' → logprob: -8.156412124633789
    9. ':
' → logprob: -8.656412124633789
    10. ' ' → logprob: -8.656412124633789

Token 20: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.01363377645611763
    2. ' not' → logprob: -4.513633728027344
    3. 'm' → logprob: -6.263633728027344
    4. ' ' → logprob: -7.763633728027344
    5. ' n' → logprob: -8.513633728027344
    6. 'not' → logprob: -10.638633728027344
    7. ' ' → logprob: -11.388633728027344
    8. ' (' → logprob: -12.013633728027344
    9. '<|end|>' → logprob: -12.513633728027344
    10. '  ' → logprob: -13.263633728027344

Token 22: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06961370259523392
    2. ' <' → logprob: -3.6946136951446533
    3. '==' → logprob: -3.8196136951446533
    4. ' <=' → logprob: -4.694613933563232
    5. ' ' → logprob: -5.069613933563232
    6. ' >' → logprob: -6.694613933563232
    7. '<' → logprob: -7.194613933563232
    8. ' >=' → logprob: -7.194613933563232
    9. '  ' → logprob: -7.319613933563232
    10. ')' → logprob: -7.819613933563232

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020709816366434097
    2. '0' → logprob: -3.895709753036499
    3. ' -' → logprob: -9.395709991455078
    4. '-' → logprob: -9.895709991455078
    5. ' n' → logprob: -10.895709991455078
    6. 'n' → logprob: -11.770709991455078
    7. '  ' → logprob: -13.020709991455078
    8. '=' → logprob: -13.520709991455078
    9. '   ' → logprob: -14.270709991455078
    10. '7' → logprob: -14.333209991455078

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07005625218153
    2. ' ' → logprob: -2.695056200027466
    3. '-' → logprob: -9.320055961608887
    4. ' -' → logprob: -10.945055961608887
    5. '1' → logprob: -12.632555961608887
    6. '   ' → logprob: -13.070055961608887
    7. '  ' → logprob: -13.507555961608887
    8. '7' → logprob: -14.882555961608887
    9. '4' → logprob: -14.945055961608887
    10. '9' → logprob: -15.132555961608887

Token 25: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001730987336486578
    2. ' and' → logprob: -6.501730918884277
    3. ' :' → logprob: -8.876730918884277
    4. 'and' → logprob: -9.876730918884277
    5. ' or' → logprob: -10.626730918884277
    6. ':return' → logprob: -11.751730918884277
    7. ':
' → logprob: -13.126730918884277
    8. ',' → logprob: -13.376730918884277
    9. '   ' → logprob: -14.126730918884277
    10. '):' → logprob: -14.626730918884277

Token 26: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0486510694026947
    2. 'n' → logprob: -3.0486509799957275
    3. ' ' → logprob: -9.798650741577148
    4. '	n' → logprob: -12.048650741577148
    5. '<|end|>' → logprob: -13.798650741577148
    6. '  ' → logprob: -14.673650741577148
    7. ' ' → logprob: -15.423650741577148
    8. '<|end|>' → logprob: -15.798650741577148
    9. '0' → logprob: -16.29865074157715
    10. ' н' → logprob: -16.79865074157715

Token 27: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04089873284101486
    2. '_min' → logprob: -4.16589879989624
    3. ' _' → logprob: -4.66589879989624
    4. '_max' → logprob: -4.79089879989624
    5. ' ' → logprob: -5.41589879989624
    6. ' ==' → logprob: -6.54089879989624
    7. '==' → logprob: -7.41589879989624
    8. '<|end|>' → logprob: -8.915898323059082
    9. '=' → logprob: -9.665898323059082
    10. 'max' → logprob: -10.665898323059082

Token 28: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.034592147916555405
    2. '==' → logprob: -3.4095921516418457
    3. ' ' → logprob: -7.659592151641846
    4. ' <=' → logprob: -8.409591674804688
    5. '<|end|>' → logprob: -9.034591674804688
    6. '=' → logprob: -10.534591674804688
    7. '<|end|>' → logprob: -10.659591674804688
    8. ' >=' → logprob: -10.659591674804688
    9. ' >' → logprob: -11.034591674804688
    10. ' and' → logprob: -11.534591674804688

Token 29: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12694312632083893
    2. ' ' → logprob: -2.1269431114196777
    3. ' and' → logprob: -11.501943588256836
    4. 'and' → logprob: -13.001943588256836
    5. ' n' → logprob: -14.501943588256836
    6. 'n' → logprob: -14.751943588256836
    7. '   ' → logprob: -14.876943588256836
    8. '  ' → logprob: -14.876943588256836
    9. '<|end|>' → logprob: -14.876943588256836
    10. '<|end|>' → logprob: -15.251943588256836

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020580079406499863
    2. ' ' → logprob: -3.8955800533294678
    3. ' and' → logprob: -10.895580291748047
    4. 'and' → logprob: -11.145580291748047
    5. 'n' → logprob: -13.020580291748047
    6. ' n' → logprob: -14.145580291748047
    7. 'm' → logprob: -14.458080291748047
    8. '  ' → logprob: -14.958080291748047
    9. '1' → logprob: -15.208080291748047
    10. '   ' → logprob: -15.645580291748047

Token 31: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0036163469776511192
    2. 'and' → logprob: -5.6286163330078125
    3. ':' → logprob: -11.753616333007812
    4. ' ' → logprob: -12.753616333007812
    5. '   ' → logprob: -13.378616333007812
    6. '```' → logprob: -13.878616333007812
    7. '	and' → logprob: -14.003616333007812
    8. '<|end|>' → logprob: -14.503616333007812
    9. ' ' → logprob: -14.628616333007812
    10. '<|end|>' → logprob: -15.003616333007812

Token 32: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22542907297611237
    2. 'n' → logprob: -1.6004290580749512
    3. '0' → logprob: -11.35042953491211
    4. '	n' → logprob: -13.10042953491211
    5. ' ' → logprob: -13.47542953491211
    6. '   ' → logprob: -15.10042953491211
    7. '```' → logprob: -15.35042953491211
    8. ' ' → logprob: -15.72542953491211
    9. 'and' → logprob: -15.97542953491211
    10. ' and' → logprob: -16.35042953491211

Token 33: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.03709942847490311
    2. '_' → logprob: -3.4120993614196777
    3. ' _' → logprob: -6.162099361419678
    4. '_min' → logprob: -6.662099361419678
    5. 'max' → logprob: -10.412099838256836
    6. '_m' → logprob: -11.662099838256836
    7. ' ' → logprob: -12.662099838256836
    8. '_ma' → logprob: -12.662099838256836
    9. '_MAX' → logprob: -13.037099838256836
    10. '==' → logprob: -13.162099838256836

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03951851651072502
    2. '==' → logprob: -3.2895185947418213
    3. ' ' → logprob: -6.789518356323242
    4. '<|end|>' → logprob: -8.289518356323242
    5. '<|end|>' → logprob: -10.414518356323242
    6. '  ' → logprob: -11.414518356323242
    7. ')==' → logprob: -11.664518356323242
    8. '```' → logprob: -11.914518356323242
    9. '=' → logprob: -12.039518356323242
    10. ' ' → logprob: -12.039518356323242

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016036950051784515
    2. ' ' → logprob: -4.1410369873046875
    3. '   ' → logprob: -14.016036987304688
    4. '  ' → logprob: -14.203536987304688
    5. ' ' → logprob: -14.641036987304688
    6. '<|end|>' → logprob: -16.016036987304688
    7. '1' → logprob: -16.141036987304688
    8. '۰' → logprob: -16.516036987304688
    9. '```' → logprob: -16.703536987304688
    10. '    ' → logprob: -17.078536987304688

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '  ' → logprob: -17.000158309936523
    4. '<|end|>' → logprob: -17.125158309936523
    5. '1' → logprob: -17.375158309936523
    6. '۰' → logprob: -17.500158309936523
    7. '```' → logprob: -18.125158309936523
    8. '   ' → logprob: -18.125158309936523
    9. ' ' → logprob: -18.500158309936523
    10. 'm' → logprob: -18.750158309936523

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.051066520740278e-05
    2. ':
' → logprob: -9.875060081481934
    3. ':return' → logprob: -12.125060081481934
    4. '   ' → logprob: -13.375060081481934
    5. '):' → logprob: -13.875060081481934
    6. ' :' → logprob: -14.375060081481934
    7. '       ' → logprob: -15.125060081481934
    8. ':**' → logprob: -16.37506103515625
    9. '():' → logprob: -17.25006103515625
    10. ',' → logprob: -17.25006103515625

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001860807416960597
    2. ' break' → logprob: -6.501860618591309
    3. '   ' → logprob: -8.751860618591309
    4. '\n' → logprob: -8.876860618591309
    5. ':' → logprob: -11.251860618591309
    6. '	break' → logprob: -11.626860618591309
    7. '\' → logprob: -11.876860618591309
    8. '    ' → logprob: -12.501860618591309
    9. '<|end|>' → logprob: -12.501860618591309
    10. '        
' → logprob: -12.876860618591309

Token 39: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.47776758670806885
    2. '       ' → logprob: -0.9777675867080688
    3. 'break' (adapté à ' break') → logprob: -5.727767467498779
    4. '   ' → logprob: -8.477767944335938
    5. '	break' → logprob: -8.977767944335938
    6. '           ' → logprob: -9.602767944335938
    7. '```' → logprob: -11.602767944335938
    8. '_break' → logprob: -12.227767944335938
    9. '\n' → logprob: -12.727767944335938
    10. '        
' → logprob: -12.977767944335938

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.237733855843544
    2. '\n' → logprob: -2.612733840942383
    3. '    
' → logprob: -2.862733840942383
    4. '   ' → logprob: -2.862733840942383
    5. ' 
' → logprob: -4.612733840942383
    6. '  
' → logprob: -5.112733840942383
    7. '```' → logprob: -6.237733840942383
    8. ':' → logprob: -6.487733840942383
    9. '   
' → logprob: -6.987733840942383
    10. '\' → logprob: -7.362733840942383

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16218970715999603
    2. '```' → logprob: -2.9121897220611572
    3. '
' → logprob: -3.4121897220611572
    4. '\n' → logprob: -3.5371897220611572
    5. '    
' → logprob: -3.9121897220611572
    6. ':' → logprob: -5.662189483642578
    7. 'n' → logprob: -5.662189483642578
    8. '<|end|>' → logprob: -6.412189483642578
    9. '#' → logprob: -6.787189483642578
    10. '\' → logprob: -7.537189483642578

Token 42: ' scores' (ID: 18923)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.345567524433136
    2. ':' → logprob: -2.220567464828491
    3. '
' → logprob: -2.720567464828491
    4. '\n' → logprob: -3.470567464828491
    5. 'n' → logprob: -3.970567464828491
    6. '```' → logprob: -4.09556770324707
    7. '#' → logprob: -4.72056770324707
    8. '<|end|>' → logprob: -4.84556770324707
    9. ',' → logprob: -5.34556770324707
    10. '    
' → logprob: -5.47056770324707

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03371969982981682
    2. '=' → logprob: -3.533719778060913
    3. '[' → logprob: -6.533719539642334
    4. '<|end|>' → logprob: -6.908719539642334
    5. ')' → logprob: -8.033720016479492
    6. '_' → logprob: -8.033720016479492
    7. ' ' → logprob: -8.408720016479492
    8. '.' → logprob: -8.533720016479492
    9. '[:]' → logprob: -9.033720016479492
    10. 's' → logprob: -9.783720016479492

Token 44: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.0826951265335083
    2. '[]' → logprob: -1.4576951265335083
    3. ' []' → logprob: -1.7076951265335083
    4. ' [' → logprob: -2.3326950073242188
    5. 'list' → logprob: -2.3326950073242188
    6. '[' → logprob: -3.3326950073242188
    7. '[list' → logprob: -4.082695007324219
    8. '[int' → logprob: -8.832695007324219
    9. '[m' → logprob: -9.207695007324219
    10. '[input' → logprob: -9.457695007324219

Token 45: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4373086094856262
    2. ' int' → logprob: -1.4373085498809814
    3. '0' → logprob: -2.1873085498809814
    4. ' map' → logprob: -6.9373087882995605
    5. 'map' → logprob: -7.0623087882995605
    6. ']int' → logprob: -7.4373087882995605
    7. ' ]' → logprob: -7.5623087882995605
    8. ']' → logprob: -7.8123087882995605
    9. ' ' → logprob: -8.187308311462402
    10. '   ' → logprob: -8.687308311462402

Token 46: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.024235356599092484
    2. '(' → logprob: -4.399235248565674
    3. '()' → logprob: -4.524235248565674
    4. '()]' → logprob: -7.649235248565674
    5. '(x' → logprob: -8.274235725402832
    6. '(i' → logprob: -10.024235725402832
    7. 'input' → logprob: -11.399235725402832
    8. '(
' → logprob: -11.524235725402832
    9. ']' → logprob: -12.149235725402832
    10. '(

' → logprob: -12.649235725402832

Token 47: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006799076218158007
    2. '()' → logprob: -7.375679969787598
    3. '()]' → logprob: -10.750679969787598
    4. '())
' → logprob: -11.500679969787598
    5. ')' → logprob: -12.375679969787598
    6. '()))' → logprob: -12.500679969787598
    7. '().' → logprob: -12.500679969787598
    8. '()),' → logprob: -12.625679969787598
    9. ' ())' → logprob: -12.750679969787598
    10. '()
' → logprob: -13.375679969787598

Token 48: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006776238325983286
    2. ')' → logprob: -5.256776332855225
    3. 'for' → logprob: -6.756776332855225
    4. ' for' → logprob: -9.131775856018066
    5. '())' → logprob: -9.131775856018066
    6. '(' → logprob: -9.131775856018066
    7. '()]' → logprob: -11.131775856018066
    8. ' ()' → logprob: -12.006775856018066
    9. ' ' → logprob: -12.131775856018066
    10. '   ' → logprob: -12.256775856018066

Token 49: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.0293556451797485
    2. ' range' → logprob: -1.1543556451797485
    3. '_' → logprob: -1.6543556451797485
    4. ' ' → logprob: -2.029355525970459
    5. ' i' → logprob: -5.529355525970459
    6. 'range' → logprob: -7.779355525970459
    7. '_range' → logprob: -8.154356002807617
    8. '<|end|>' → logprob: -10.029356002807617
    9. '	range' → logprob: -10.529356002807617
    10. ' ▁' → logprob: -10.529356002807617

Token 50: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3560246527194977
    2. ' range' → logprob: -1.2310246229171753
    3. ' in' → logprob: -4.981024742126465
    4. '	range' → logprob: -8.481024742126465
    5. 'in' → logprob: -8.981024742126465
    6. '(range' → logprob: -8.981024742126465
    7. ' ' → logprob: -8.981024742126465
    8. '  ' → logprob: -10.356024742126465
    9. ' xrange' → logprob: -10.856024742126465
    10. ' ran' → logprob: -11.606024742126465

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132665753364563
    2. ' range' → logprob: -1.3132665157318115
    3. '	range' → logprob: -13.56326675415039
    4. ' ' → logprob: -13.81326675415039
    5. '(range' → logprob: -14.18826675415039
    6. 'rang' → logprob: -14.68826675415039
    7. 'm' → logprob: -15.06326675415039
    8. 'ran' → logprob: -15.43826675415039
    9. ' ran' → logprob: -15.56326675415039
    10. '   ' → logprob: -15.81326675415039

Token 52: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.000816773681435734
    2. '(' → logprob: -7.250816822052002
    3. '(n' → logprob: -9.250816345214844
    4. ' (' → logprob: -11.625816345214844
    5. '(s' → logprob: -13.750816345214844
    6. '(
' → logprob: -15.500816345214844
    7. 'm' → logprob: -15.500816345214844
    8. '(M' → logprob: -16.125816345214844
    9. ' m' → logprob: -16.250816345214844
    10. ')m' → logprob: -17.375816345214844

Token 53: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0018164324574172497
    2. ')' → logprob: -6.501816272735596
    3. ']' → logprob: -8.126816749572754
    4. ' )' → logprob: -11.751816749572754
    5. '   ' → logprob: -12.251816749572754
    6. ')]
' → logprob: -13.876816749572754
    7. '),' → logprob: -14.126816749572754
    8. '))' → logprob: -14.251816749572754
    9. ' ]' → logprob: -14.501816749572754
    10. ' ' → logprob: -14.626816749572754

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30065831542015076
    2. '
' → logprob: -2.0506582260131836
    3. 'n' → logprob: -3.6756582260131836
    4. '<|end|>' → logprob: -3.8006582260131836
    5. '    
' → logprob: -3.9256582260131836
    6. ' ' → logprob: -4.050658226013184
    7. '```' → logprob: -4.550658226013184
    8. '[' → logprob: -4.925658226013184
    9. 's' → logprob: -5.050658226013184
    10. '    ' → logprob: -5.675658226013184

Token 55: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5552960634231567
    2. 'n' → logprob: -1.9302960634231567
    3. ' ' → logprob: -3.180295944213867
    4. 's' → logprob: -3.180295944213867
    5. '    ' → logprob: -3.430295944213867
    6. ' n' → logprob: -3.805295944213867
    7. ' if' → logprob: -4.055295944213867
    8. '    
' → logprob: -4.180295944213867
    9. ' 
' → logprob: -4.430295944213867
    10. 'result' → logprob: -4.805295944213867

Token 56: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18956616520881653
    2. '_score' → logprob: -2.064566135406494
    3. '_count' → logprob: -4.689566135406494
    4. '_idx' → logprob: -4.814566135406494
    5. '_index' → logprob: -5.189566135406494
    6. '_diff' → logprob: -5.189566135406494
    7. '_scores' → logprob: -5.314566135406494
    8. '_n' → logprob: -6.439566135406494
    9. '=' → logprob: -6.564566135406494
    10. '_margin' → logprob: -6.939566135406494

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10329420864582062
    2. '_' → logprob: -3.1032941341400146
    3. '=' → logprob: -3.3532941341400146
    4. ' ' → logprob: -4.228294372558594
    5. 'ex' → logprob: -6.728294372558594
    6. ',' → logprob: -6.853294372558594
    7. 's' → logprob: -7.103294372558594
    8. '_scores' → logprob: -8.853294372558594
    9. '  ' → logprob: -9.353294372558594
    10. '_score' → logprob: -9.978294372558594

Token 58: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2916103005409241
    2. '0' → logprob: -1.9166102409362793
    3. 'None' → logprob: -3.0416102409362793
    4. ' n' → logprob: -3.6666102409362793
    5. '-' → logprob: -4.166610240936279
    6. ' None' → logprob: -4.416610240936279
    7. ' ' → logprob: -6.041610240936279
    8. ' -' → logprob: -6.416610240936279
    9. '1' → logprob: -8.666610717773438
    10. 'float' → logprob: -9.041610717773438

Token 59: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.03489715978503227
    2. '_max' → logprob: -3.5348970890045166
    3. '_' → logprob: -5.409897327423096
    4. 'min' → logprob: -7.784897327423096
    5. '_m' → logprob: -8.534896850585938
    6. 'max' → logprob: -11.284896850585938
    7. '_
' → logprob: -12.409896850585938
    8. ' ' → logprob: -12.534896850585938
    9. '+' → logprob: -13.034896850585938
    10. '   ' → logprob: -13.159896850585938

Token 60: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20882418751716614
    2. '<|end|>' → logprob: -2.0838241577148438
    3. ' ' → logprob: -3.4588241577148438
    4. '    ' → logprob: -4.583824157714844
    5. ' for' → logprob: -4.708824157714844
    6. ' best' → logprob: -5.583824157714844
    7. '	best' → logprob: -5.708824157714844
    8. '  ' → logprob: -6.833824157714844
    9. '<|end|>' → logprob: -7.083824157714844
    10. ' 
' → logprob: -7.583824157714844

Token 62: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.6666833758354187
    2. ' best' → logprob: -1.0416834354400635
    3. 'for' → logprob: -3.2916834354400635
    4. ' for' → logprob: -3.2916834354400635
    5. 'max' → logprob: -3.5416834354400635
    6. ' max' → logprob: -4.166683197021484
    7. 'score' → logprob: -5.916683197021484
    8. '	best' → logprob: -6.416683197021484
    9. 'sum' → logprob: -6.541683197021484
    10. '   ' → logprob: -6.791683197021484

Token 63: '_gap' (ID: 131234)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.2516367733478546
    2. '_' → logprob: -2.1266367435455322
    3. '_sum' → logprob: -2.7516367435455322
    4. '_n' → logprob: -4.751636981964111
    5. '_diff' → logprob: -5.126636981964111
    6. '_avg' → logprob: -5.126636981964111
    7. '_max' → logprob: -5.501636981964111
    8. '_scores' → logprob: -6.001636981964111
    9. '_average' → logprob: -6.126636981964111
    10. '_value' → logprob: -6.501636981964111

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030195413157343864
    2. '=' → logprob: -3.530195474624634
    3. ' ' → logprob: -8.155195236206055
    4. '_' → logprob: -9.155195236206055
    5. ',' → logprob: -10.280195236206055
    6. ' =
' → logprob: -11.655195236206055
    7. ' _' → logprob: -13.280195236206055
    8. ')' → logprob: -13.655195236206055
    9. '   ' → logprob: -14.030195236206055
    10. ' =
' → logprob: -14.280195236206055

Token 65: ' -' (ID: 533)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -1.0910786390304565
    2. 'float' → logprob: -1.5910786390304565
    3. ' max' → logprob: -2.216078758239746
    4. ' ' → logprob: -2.341078758239746
    5. '10' → logprob: -2.716078758239746
    6. 'scores' → logprob: -3.091078758239746
    7. 'max' → logprob: -3.216078758239746
    8. ' scores' → logprob: -3.341078758239746
    9. ' abs' → logprob: -3.841078758239746
    10. 'abs' → logprob: -3.841078758239746

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02123933844268322
    2. 'float' → logprob: -4.646239280700684
    3. '10' → logprob: -4.896239280700684
    4. '100' → logprob: -5.771239280700684
    5. '999' → logprob: -7.396239280700684
    6. '2' → logprob: -10.146239280700684
    7. 'int' → logprob: -10.271239280700684
    8. ' ' → logprob: -10.771239280700684
    9. '987' → logprob: -10.896239280700684
    10. '101' → logprob: -11.021239280700684

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12727728486061096
    2. '\n' → logprob: -3.377277374267578
    3. '   ' → logprob: -3.877277374267578
    4. ' 
' → logprob: -4.002277374267578
    5. '<|end|>' → logprob: -4.002277374267578
    6. ' for' → logprob: -4.377277374267578
    7. '    
' → logprob: -5.252277374267578
    8. '  
' → logprob: -5.502277374267578
    9. '   
' → logprob: -6.752277374267578
    10. ' ' → logprob: -7.002277374267578

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12288111448287964
    2. '\n' → logprob: -3.3728811740875244
    3. ' 
' → logprob: -3.4978811740875244
    4. '<|end|>' → logprob: -3.4978811740875244
    5. '  
' → logprob: -5.247880935668945
    6. ' for' → logprob: -5.372880935668945
    7. '    
' → logprob: -6.247880935668945
    8. ' ' → logprob: -6.622880935668945
    9. 'for' → logprob: -6.622880935668945
    10. '   
' → logprob: -6.747880935668945

Token 69: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6291880011558533
    2. 'for' (adapté à ' for') → logprob: -1.504188060760498
    3. ' for' → logprob: -1.629188060760498
    4. ' 
' → logprob: -3.754188060760498
    5. '\n' → logprob: -4.004188060760498
    6. '<|end|>' → logprob: -6.254188060760498
    7. '  
' → logprob: -6.629188060760498
    8. '    
' → logprob: -6.879188060760498
    9. ' ' → logprob: -7.004188060760498
    10. '   ' → logprob: -7.879188060760498

Token 70: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.021049197763204575
    2. ' ' → logprob: -4.0210490226745605
    3. 'n' → logprob: -5.8960490226745605
    4. ' i' → logprob: -9.521049499511719
    5. ' _' → logprob: -10.146049499511719
    6. '	n' → logprob: -11.896049499511719
    7. '  ' → logprob: -12.646049499511719
    8. '_' → logprob: -12.646049499511719
    9. ' ' → logprob: -12.771049499511719
    10. '```' → logprob: -12.958549499511719

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010582361370325089
    2. 'in' → logprob: -4.635582447052002
    3. ' ' → logprob: -7.260582447052002
    4. '	in' → logprob: -10.135581970214844
    5. '<|end|>' → logprob: -10.510581970214844
    6. ' i' → logprob: -10.510581970214844
    7. 'n' → logprob: -11.385581970214844
    8. '  ' → logprob: -12.510581970214844
    9. 's' → logprob: -12.760581970214844
    10. '_' → logprob: -13.760581970214844

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02325642853975296
    2. 'range' → logprob: -3.773256540298462
    3. ' ' → logprob: -11.648256301879883
    4. '	range' → logprob: -14.148256301879883
    5. '(range' → logprob: -14.273256301879883
    6. ' ran' → logprob: -15.148256301879883
    7. ' xrange' → logprob: -15.398256301879883
    8. ' rang' → logprob: -15.648256301879883
    9. ' r' → logprob: -17.023256301879883
    10. ' ra' → logprob: -17.148256301879883

Token 73: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009117019944824278
    2. '(' → logprob: -7.000911712646484
    3. ' (' → logprob: -15.875911712646484
    4. '(
' → logprob: -18.250911712646484
    5. '(m' → logprob: -18.625911712646484
    6. '(nn' → logprob: -19.125911712646484
    7. '(nx' → logprob: -19.500911712646484
    8. '(N' → logprob: -19.750911712646484
    9. '(min' → logprob: -19.875911712646484
    10. '(s' → logprob: -20.125911712646484

Token 74: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0002067588793579489
    2. '_' → logprob: -8.75020694732666
    3. '_max' → logprob: -10.50020694732666
    4. '_m' → logprob: -11.37520694732666
    5. 'min' → logprob: -12.62520694732666
    6. '_MIN' → logprob: -13.62520694732666
    7. ' _' → logprob: -13.75020694732666
    8. '_
' → logprob: -14.50020694732666
    9. ')' → logprob: -14.75020694732666
    10. '_n' → logprob: -14.87520694732666

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004152956884354353
    2. ',n' → logprob: -5.629152774810791
    3. ' ,' → logprob: -7.504152774810791
    4. 'n' → logprob: -13.75415325164795
    5. '   ' → logprob: -14.87915325164795
    6. ',
' → logprob: -15.25415325164795
    7. ' n' → logprob: -16.379152297973633
    8. '```' → logprob: -16.504152297973633
    9. '‌,' → logprob: -16.754152297973633
    10. '-' → logprob: -17.879152297973633

Token 76: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0336470827460289
    2. 'n' → logprob: -3.408647060394287
    3. '	n' → logprob: -13.908647537231445
    4. '   ' → logprob: -16.533647537231445
    5. ' ' → logprob: -16.658647537231445
    6. '```' → logprob: -16.658647537231445
    7. ')n' → logprob: -16.908647537231445
    8. '(n' → logprob: -16.908647537231445
    9. ' ' → logprob: -17.283647537231445
    10. ',n' → logprob: -18.283647537231445

Token 77: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.7120533811976202e-05
    2. '_min' → logprob: -11.750017166137695
    3. 'max' → logprob: -12.000017166137695
    4. '+' → logprob: -12.875017166137695
    5. '_' → logprob: -14.875017166137695
    6. ')_' → logprob: -16.750017166137695
    7. ' _' → logprob: -16.875017166137695
    8. '_MAX' → logprob: -17.000017166137695
    9. '```' → logprob: -17.125017166137695
    10. 'Max' → logprob: -18.250017166137695

Token 78: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192946195602417
    2. ' +' → logprob: -1.501929521560669
    3. '   ' → logprob: -16.376930236816406
    4. '+
' → logprob: -17.126930236816406
    5. ' +
' → logprob: -17.501930236816406
    6. ')+' → logprob: -17.501930236816406
    7. '1' → logprob: -17.501930236816406
    8. ')' → logprob: -17.751930236816406
    9. ' ' → logprob: -17.751930236816406
    10. '＋' → logprob: -17.876930236816406

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246292024850845
    2. ' ' → logprob: -3.7732462882995605
    3. '```' → logprob: -15.148246765136719
    4. '   ' → logprob: -15.273246765136719
    5. ')' → logprob: -15.398246765136719
    6. '  ' → logprob: -17.52324676513672
    7. '0' → logprob: -17.89824676513672
    8. ' ' → logprob: -17.89824676513672
    9. '' → logprob: -18.58574676513672
    10. '2' → logprob: -18.64824676513672

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -17.125009536743164
    4. ')' → logprob: -17.875009536743164
    5. '   ' → logprob: -17.875009536743164
    6. '' → logprob: -19.562509536743164
    7. '۱' → logprob: -19.750009536743164
    8. '2' → logprob: -19.812509536743164
    9. '  ' → logprob: -19.812509536743164
    10. '１' → logprob: -20.000009536743164

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005262099206447601
    2. ':' → logprob: -5.2552618980407715
    3. ')' → logprob: -10.88026237487793
    4. '):
' → logprob: -12.00526237487793
    5. ' ):' → logprob: -13.75526237487793
    6. '>:' → logprob: -14.25526237487793
    7. ',' → logprob: -14.88026237487793
    8. '():' → logprob: -15.00526237487793
    9. '   ' → logprob: -15.38026237487793
    10. ']:' → logprob: -15.50526237487793

Token 82: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5708274245262146
    2. '       ' → logprob: -0.9458274245262146
    3. '   ' → logprob: -3.3208274841308594
    4. '<|end|>' → logprob: -5.070827484130859
    5. '    ' → logprob: -6.570827484130859
    6. ' ' → logprob: -6.945827484130859
    7. ',' → logprob: -7.945827484130859
    8. '<|end|>' → logprob: -8.32082748413086
    9. '      ' → logprob: -8.69582748413086
    10. '  ' → logprob: -8.94582748413086

Token 83: ' #' (ID: 1069)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scores' → logprob: -1.2132128477096558
    2. ' gap' → logprob: -1.5882128477096558
    3. ' current' → logprob: -2.4632129669189453
    4. ' s' → logprob: -2.8382129669189453
    5. ' total' → logprob: -2.8382129669189453
    6. ' sum' → logprob: -2.9632129669189453
    7. ' sums' → logprob: -3.2132129669189453
    8. ' gaps' → logprob: -3.5882129669189453
    9. 'scores' → logprob: -3.8382129669189453
    10. ' max' → logprob: -4.463212966918945

Token 84: ' gap' (ID: 19953)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45669710636138916
    2. ' max' → logprob: -2.9566969871520996
    3. 'for' → logprob: -2.9566969871520996
    4. ' current' → logprob: -3.3316969871520996
    5. ' sum' → logprob: -3.3316969871520996
    6. ' length' → logprob: -3.4566969871520996
    7. ' prefix' → logprob: -3.9566969871520996
    8. ' window' → logprob: -4.2066969871521
    9. ' gap' → logprob: -4.2066969871521
    10. ' total' → logprob: -4.4566969871521

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024955343455076218
    2. '=' → logprob: -4.1499552726745605
    3. 's' → logprob: -4.8999552726745605
    4. '<|end|>' → logprob: -6.8999552726745605
    5. ' ' → logprob: -8.649955749511719
    6. '_scores' → logprob: -10.149955749511719
    7. ',' → logprob: -10.399955749511719
    8. '<|end|>' → logprob: -10.524955749511719
    9. '=sum' → logprob: -10.649955749511719
    10. '_' → logprob: -10.899955749511719

Token 86: ' lowest' (ID: 23120)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4473479688167572
    2. 'max' → logprob: -1.0723479986190796
    3. '(max' → logprob: -5.447348117828369
    4. ' scores' → logprob: -5.822348117828369
    5. 'scores' → logprob: -5.822348117828369
    6. 'min' → logprob: -6.572348117828369
    7. ' min' → logprob: -6.697348117828369
    8. ' ' → logprob: -6.822348117828369
    9. 'sum' → logprob: -7.197348117828369
    10. ' sum' → logprob: -7.447348117828369

Token 87: ' score' (ID: 8429)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' of' (ID: 328)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04836012050509453
    2. 's' → logprob: -3.9233601093292236
    3. ' ' → logprob: -4.173360347747803
    4. '-' → logprob: -4.923360347747803
    5. '   ' → logprob: -6.923360347747803
    6. ',' → logprob: -7.423360347747803
    7. ' +' → logprob: -7.673360347747803
    8. '       ' → logprob: -7.673360347747803
    9. ')' → logprob: -7.798360347747803
    10. '<|end|>' → logprob: -8.423359870910645

Token 89: ' successful' (ID: 9359)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.28633248805999756
    2. 'scores' → logprob: -1.7863324880599976
    3. ' the' → logprob: -3.286332607269287
    4. ' any' → logprob: -4.411332607269287
    5. ' a' → logprob: -4.911332607269287
    6. ' top' → logprob: -5.786332607269287
    7. '(scores' → logprob: -6.161332607269287
    8. ' current' → logprob: -6.161332607269287
    9. ' range' → logprob: -6.411332607269287
    10. ' all' → logprob: -6.411332607269287

Token 90: ' -' (ID: 533)
  Prédit: ' students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' students' → logprob: -1.3271232843399048
    2. 's' → logprob: -1.8271232843399048
    3. ' n' → logprob: -2.4521231651306152
    4. 'n' → logprob: -2.4521231651306152
    5. ' attempts' → logprob: -3.3271231651306152
    6. ' segments' → logprob: -3.7021231651306152
    7. 'students' → logprob: -3.8271231651306152
    8. ' subsets' → logprob: -3.8271231651306152
    9. ' group' → logprob: -3.9521231651306152
    10. ' subset' → logprob: -3.9521231651306152

Token 91: ' highest' (ID: 11639)
  Prédit: ' highest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' highest' → logprob: -0.923660397529602
    2. ' lowest' → logprob: -1.048660397529602
    3. 'lowest' → logprob: -2.0486602783203125
    4. 'highest' → logprob: -2.1736602783203125
    5. ' max' → logprob: -5.5486602783203125
    6. ' min' → logprob: -6.4236602783203125
    7. 'max' → logprob: -6.7986602783203125
    8. 'min' → logprob: -7.2986602783203125
    9. ' scores' → logprob: -7.5486602783203125
    10. ' ' → logprob: -8.048660278320312

Token 92: ' score' (ID: 8429)
  Prédit: ' unsuccessful'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unsuccessful' → logprob: -0.9654058814048767
    2. ' score' → logprob: -1.2154059410095215
    3. 'score' → logprob: -1.9654059410095215
    4. '<|end|>' → logprob: -3.0904059410095215
    5. '_failed' → logprob: -3.2154059410095215
    6. ' successful' → logprob: -4.4654059410095215
    7. ' failed' → logprob: -4.4654059410095215
    8. ' failure' → logprob: -4.5904059410095215
    9. ' of' → logprob: -4.5904059410095215
    10. '_uns' → logprob: -5.0904059410095215

Token 93: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.13436898589134216
    2. 'of' → logprob: -3.384368896484375
    3. '<|end|>' → logprob: -3.509368896484375
    4. ' ' → logprob: -4.134368896484375
    5. '   ' → logprob: -5.009368896484375
    6. ' unsuccessful' → logprob: -5.384368896484375
    7. 'successful' → logprob: -5.384368896484375
    8. ' successful' → logprob: -5.634368896484375
    9. '       ' → logprob: -5.634368896484375
    10. '  ' → logprob: -5.759368896484375

Token 94: ' unsuccessful' (ID: 91036)
  Prédit: ' unsuccessful'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unsuccessful' → logprob: -0.6620467901229858
    2. 'uns' → logprob: -1.7870467901229858
    3. ' failed' → logprob: -1.7870467901229858
    4. ' failing' → logprob: -2.9120469093322754
    5. 'failed' → logprob: -3.0370469093322754
    6. ' uns' → logprob: -4.912046909332275
    7. 'fail' → logprob: -5.162046909332275
    8. ' failure' → logprob: -5.287046909332275
    9. ' successful' → logprob: -5.537046909332275
    10. 'successful' → logprob: -5.912046909332275

Token 95: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5734001398086548
    2. '       ' → logprob: -1.4484001398086548
    3. '<|end|>' → logprob: -2.6984000205993652
    4. ' ' → logprob: -2.9484000205993652
    5. ':' → logprob: -3.5734000205993652
    6. '    ' → logprob: -3.9484000205993652
    7. ')' → logprob: -4.573400020599365
    8. '_' → logprob: -5.323400020599365
    9. '#' → logprob: -5.698400020599365
    10. '  ' → logprob: -5.823400020599365

Token 97: ' gap' (ID: 19953)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.692375898361206
    2. ' max' → logprob: -2.067375898361206
    3. ' gap' → logprob: -2.317375898361206
    4. '   ' → logprob: -2.567375898361206
    5. '    ' → logprob: -3.317375898361206
    6. ' ' → logprob: -3.442375898361206
    7. ' 
' → logprob: -4.442376136779785
    8. ' lowest' → logprob: -4.692376136779785
    9. '        
' → logprob: -4.817376136779785
    10. ' current' → logprob: -4.817376136779785

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007922333665192127
    2. '=' → logprob: -4.882922172546387
    3. ' ' → logprob: -8.632922172546387
    4. '_' → logprob: -9.507922172546387
    5. 's' → logprob: -10.882922172546387
    6. ' =
' → logprob: -11.507922172546387
    7. ')' → logprob: -12.132922172546387
    8. ' =)' → logprob: -12.507922172546387
    9. 'space' → logprob: -12.632922172546387
    10. '_space' → logprob: -12.757922172546387

Token 99: ' scores' (ID: 18923)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5831255912780762
    2. ' min' → logprob: -1.5831255912780762
    3. 'max' → logprob: -1.9581255912780762
    4. ' scores' → logprob: -3.083125591278076
    5. 'min' → logprob: -3.583125591278076
    6. 'scores' → logprob: -4.458125591278076
    7. ' float' → logprob: -5.708125591278076
    8. ' ' → logprob: -6.208125591278076
    9. '0' → logprob: -7.083125591278076
    10. ' -' → logprob: -7.208125591278076

Token 100: '[n' (ID: 15433)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.36130207777023315
    2. '[n' → logprob: -1.736302137374878
    3. '[m' → logprob: -2.611302137374878
    4. '[-' → logprob: -3.611302137374878
    5. '[' → logprob: -4.111301898956299
    6. '[:-' → logprob: -5.486301898956299
    7. '[:]' → logprob: -6.611301898956299
    8. '.index' → logprob: -6.736301898956299
    9. '.count' → logprob: -7.236301898956299
    10. '[min' → logprob: -7.673801898956299

Token 101: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13696499168872833
    2. ' -' → logprob: -2.261965036392212
    3. ']' → logprob: -3.886965036392212
    4. ':]' → logprob: -6.136964797973633
    5. ':' → logprob: -7.261964797973633
    6. '   ' → logprob: -9.386964797973633
    7. ']-' → logprob: -9.636964797973633
    8. ':].' → logprob: -9.886964797973633
    9. ' :]' → logprob: -9.886964797973633
    10. 'm' → logprob: -10.011964797973633

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001265355502255261
    2. ' ' → logprob: -6.751265525817871
    3. 'scores' → logprob: -10.251265525817871
    4. 'm' → logprob: -11.126265525817871
    5. ']' → logprob: -11.626265525817871
    6. '2' → logprob: -12.376265525817871
    7. 'n' → logprob: -12.563765525817871
    8. '   ' → logprob: -12.563765525817871
    9. 's' → logprob: -12.876265525817871
    10. ')' → logprob: -13.126265525817871

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030924470047466457
    2. ' ' → logprob: -8.500308990478516
    3. 'm' → logprob: -10.375308990478516
    4. 'n' → logprob: -10.625308990478516
    5. '2' → logprob: -11.250308990478516
    6. 'min' → logprob: -11.375308990478516
    7. '   ' → logprob: -11.937808990478516
    8. '0' → logprob: -12.812808990478516
    9. '           ' → logprob: -13.375308990478516
    10. ' n' → logprob: -14.000308990478516

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017115899827331305
    2. ']-' → logprob: -6.626711368560791
    3. ' ]' → logprob: -8.50171184539795
    4. '-' → logprob: -9.62671184539795
    5. ']
' → logprob: -10.12671184539795
    6. ' -' → logprob: -10.37671184539795
    7. '+' → logprob: -11.25171184539795
    8. '   ' → logprob: -12.12671184539795
    9. ' ' → logprob: -12.37671184539795
    10. ':' → logprob: -12.75171184539795

Token 105: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.532355546951294
    2. '-' → logprob: -1.032355546951294
    3. '<|end|>' → logprob: -2.907355546951294
    4. ' ' → logprob: -7.407355308532715
    5. '<|end|>' → logprob: -8.407355308532715
    6. '-
' → logprob: -8.407355308532715
    7. ')' → logprob: -8.657355308532715
    8. ' -
' → logprob: -8.657355308532715
    9. '-n' → logprob: -9.032355308532715
    10. '
' → logprob: -9.407355308532715

Token 106: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.38730403780937195
    2. ' scores' → logprob: -1.1373040676116943
    3. '(scores' → logprob: -7.762303829193115
    4. 's' → logprob: -12.137304306030273
    5. 'score' → logprob: -14.387304306030273
    6. '_scores' → logprob: -15.012304306030273
    7. ' ' → logprob: -15.012304306030273
    8. '   ' → logprob: -15.137304306030273
    9. '<|end|>' → logprob: -15.887304306030273
    10. 'max' → logprob: -16.262304306030273

Token 107: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.11761001497507095
    2. '[' → logprob: -2.617609977722168
    3. '[m' → logprob: -3.367609977722168
    4. '[s' → logprob: -6.117609977722168
    5. '[min' → logprob: -7.617609977722168
    6. '[-' → logprob: -8.367609977722168
    7. '[max' → logprob: -9.242609977722168
    8. '[
' → logprob: -9.242609977722168
    9. '[:' → logprob: -9.492609977722168
    10. ' [' → logprob: -10.117609977722168

Token 108: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004008946008980274
    2. '<|end|>' → logprob: -6.254008769989014
    3. ' ]' → logprob: -7.004008769989014
    4. '-' → logprob: -8.254009246826172
    5. 'm' → logprob: -8.379009246826172
    6. ' -' → logprob: -9.254009246826172
    7. ' :]' → logprob: -9.379009246826172
    8. ':]' → logprob: -9.504009246826172
    9. '[m' → logprob: -9.754009246826172
    10. ' ' → logprob: -10.004009246826172

Token 109: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0147864818572998
    2. '   ' → logprob: -1.0147864818572998
    3. '       ' → logprob: -1.6397864818572998
    4. '<|end|>' → logprob: -3.0147864818573
    5. ' if' → logprob: -4.889786720275879
    6. '    
' → logprob: -5.014786720275879
    7. ' 
' → logprob: -5.389786720275879
    8. '        
' → logprob: -5.889786720275879
    9. ')' → logprob: -6.264786720275879
    10. '  
' → logprob: -6.389786720275879

Token 110: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5703098177909851
    2. '       ' → logprob: -1.3203098773956299
    3. '   ' → logprob: -1.9453098773956299
    4. 'if' (adapté à ' if') → logprob: -3.82030987739563
    5. '	if' → logprob: -6.195309638977051
    6. '    ' → logprob: -8.44530963897705
    7. '<|end|>' → logprob: -8.82030963897705
    8. ' ' → logprob: -9.32030963897705
    9. '	   ' → logprob: -10.32030963897705
    10. '```' → logprob: -10.57030963897705

Token 111: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.012511532753705978
    2. 'gap' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.512511253356934
    4. '_gap' → logprob: -15.512511253356934
    5. ' ' → logprob: -16.38751220703125
    6. '   ' → logprob: -16.76251220703125
    7. ' gaps' → logprob: -16.76251220703125
    8. '  ' → logprob: -17.76251220703125
    9. ' score' → logprob: -18.51251220703125
    10. 'n' → logprob: -18.82501220703125

Token 112: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.016101589426398277
    2. '>' → logprob: -4.141101360321045
    3. ' ' → logprob: -9.766101837158203
    4. '<|end|>' → logprob: -12.891101837158203
    5. '   ' → logprob: -13.141101837158203
    6. '    ' → logprob: -13.391101837158203
    7. '  ' → logprob: -14.391101837158203
    8. ' ' → logprob: -14.766101837158203
    9. ' >

' → logprob: -14.766101837158203
    10. '<|end|>' → logprob: -15.141101837158203

Token 113: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.029762646183371544
    2. 'best' → logprob: -3.5297627449035645
    3. '	best' → logprob: -11.404762268066406
    4. '(best' → logprob: -14.529762268066406
    5. '_best' → logprob: -15.279762268066406
    6. '.best' → logprob: -15.779762268066406
    7. ' ' → logprob: -16.404762268066406
    8. 'Best' → logprob: -16.654762268066406
    9. '0' → logprob: -18.279762268066406
    10. '   ' → logprob: -18.404762268066406

Token 114: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.250000953674316
    3. '_g' → logprob: -15.125000953674316
    4. '_ga' → logprob: -16.625001907348633
    5. ' _' → logprob: -16.750001907348633
    6. '_gate' → logprob: -18.000001907348633
    7. '_n' → logprob: -18.000001907348633
    8. 'gap' → logprob: -18.625001907348633
    9. '_best' → logprob: -18.625001907348633
    10. '_gid' → logprob: -19.375001907348633

Token 115: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009545345790684223
    2. ':
' → logprob: -4.88454532623291
    3. '       ' → logprob: -6.38454532623291
    4. '<|end|>' → logprob: -9.00954532623291
    5. '<|end|>' → logprob: -10.88454532623291
    6. '):' → logprob: -10.88454532623291
    7. '   ' → logprob: -11.00954532623291
    8. ' or' → logprob: -11.13454532623291
    9. '           ' → logprob: -11.13454532623291
    10. ' and' → logprob: -11.13454532623291

Token 116: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.37682846188545227
    2. '(g' → logprob: -1.2518284320831299
    3. '(' → logprob: -3.75182843208313
    4. '(n' → logprob: -6.001828670501709
    5. '(best' → logprob: -7.251828670501709
    6. '(score' → logprob: -7.751828670501709
    7. ' gap' → logprob: -8.62682819366455
    8. ' ' → logprob: -9.25182819366455
    9. '(scores' → logprob: -9.25182819366455
    10. '(
' → logprob: -9.37682819366455

Token 117: 'gap' (ID: 61115)
  Prédit: 'gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.25193724036216736
    2. ' gap' → logprob: -1.5019372701644897
    3. '   ' → logprob: -13.001936912536621
    4. ' ' → logprob: -13.251936912536621
    5. ' (' → logprob: -14.001936912536621
    6. '_gap' → logprob: -14.126936912536621
    7. '-gap' → logprob: -14.376936912536621
    8. 'g' → logprob: -14.876936912536621
    9. '(' → logprob: -15.126936912536621
    10. '(g' → logprob: -15.251936912536621

Token 118: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02060074731707573
    2. '==' → logprob: -3.8956007957458496
    3. ' and' → logprob: -10.270600318908691
    4. '=' → logprob: -11.645600318908691
    5. ' =' → logprob: -12.020600318908691
    6. ',' → logprob: -13.020600318908691
    7. ' >=' → logprob: -13.145600318908691
    8. 'and' → logprob: -13.270600318908691
    9. ' ' → logprob: -13.395600318908691
    10. '>=' → logprob: -15.145600318908691

Token 119: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.11284274607896805
    2. 'best' → logprob: -2.2378427982330322
    3. '	best' → logprob: -11.112842559814453
    4. '(best' → logprob: -13.487842559814453
    5. 'Best' → logprob: -13.862842559814453
    6. '_best' → logprob: -13.987842559814453
    7. '0' → logprob: -14.237842559814453
    8. ' ' → logprob: -14.237842559814453
    9. '   ' → logprob: -14.862842559814453
    10. '.best' → logprob: -15.362842559814453

Token 120: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -5.5861724831629544e-05
    2. 'gap' → logprob: -10.250056266784668
    3. '_' → logprob: -11.750056266784668
    4. ' gap' → logprob: -13.000056266784668
    5. '   ' → logprob: -13.250056266784668
    6. '_n' → logprob: -13.250056266784668
    7. ')' → logprob: -13.250056266784668
    8. '_score' → logprob: -14.125056266784668
    9. 'Gap' → logprob: -14.250056266784668
    10. ' ' → logprob: -14.625056266784668

Token 121: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006727803498506546
    2. 'and' → logprob: -5.006727695465088
    3. '    ' → logprob: -12.256728172302246
    4. '   ' → logprob: -12.756728172302246
    5. '        ' → logprob: -13.756728172302246
    6. ')' → logprob: -14.006728172302246
    7. ' ' → logprob: -14.131728172302246
    8. '       ' → logprob: -14.881728172302246
    9. '           ' → logprob: -14.881728172302246
    10. '          ' → logprob: -15.256728172302246

Token 122: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22625236213207245
    2. 'n' → logprob: -1.6012523174285889
    3. ' scores' → logprob: -7.976252555847168
    4. 'scores' → logprob: -8.601252555847168
    5. '   ' → logprob: -9.601252555847168
    6. ' ' → logprob: -9.851252555847168
    7. ' (' → logprob: -10.351252555847168
    8. '	n' → logprob: -10.476252555847168
    9. '(n' → logprob: -10.601252555847168
    10. ' best' → logprob: -10.851252555847168

Token 123: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03635779023170471
    2. '<' → logprob: -3.411357879638672
    3. ' >' → logprob: -6.036357879638672
    4. '>' → logprob: -8.411357879638672
    5. ' ' → logprob: -9.911357879638672
    6. '<n' → logprob: -10.661357879638672
    7. ' <
' → logprob: -12.661357879638672
    8. ')' → logprob: -12.911357879638672
    9. '<|end|>' → logprob: -13.036357879638672
    10. '<m' → logprob: -13.286357879638672

Token 124: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.1602577418088913
    2. ' best' → logprob: -1.9102576971054077
    3. '	best' → logprob: -10.410257339477539
    4. '_best' → logprob: -13.785257339477539
    5. '(best' → logprob: -13.785257339477539
    6. '   ' → logprob: -15.285257339477539
    7. '.best' → logprob: -15.535257339477539
    8. ' ' → logprob: -15.785257339477539
    9. 'Best' → logprob: -15.785257339477539
    10. '
' → logprob: -15.910257339477539

Token 125: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.6240566083070007e-06
    2. 'n' → logprob: -13.750001907348633
    3. '_' → logprob: -15.375001907348633
    4. ')' → logprob: -15.625001907348633
    5. '<|end|>' → logprob: -16.250001907348633
    6. '_best' → logprob: -16.750001907348633
    7. 'best' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.625001907348633
    9. ' ' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020866157487034798
    2. '):
' → logprob: -3.8958661556243896
    3. ':' → logprob: -8.270866394042969
    4. ')' → logprob: -10.770866394042969
    5. '   ' → logprob: -11.145866394042969
    6. ' ):' → logprob: -11.270866394042969
    7. '):
' → logprob: -11.770866394042969
    8. '       ' → logprob: -12.145866394042969
    9. '):

' → logprob: -13.270866394042969
    10. '<|end|>' → logprob: -14.145866394042969

Token 127: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010290613397955894
    2. ' best' → logprob: -5.635290622711182
    3. ':' → logprob: -6.260290622711182
    4. '   ' → logprob: -6.885290622711182
    5. '           ' → logprob: -7.010290622711182
    6. 'best' → logprob: -7.135290622711182
    7. '	best' → logprob: -7.260290622711182
    8. ':
' → logprob: -7.885290622711182
    9. '):
' → logprob: -8.260290145874023
    10. '(best' → logprob: -8.260290145874023

Token 128: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.036743391305208206
    2. '           ' → logprob: -3.911743402481079
    3. 'best' (adapté à ' best') → logprob: -4.2867431640625
    4. '       ' → logprob: -6.6617431640625
    5. '               ' → logprob: -7.5367431640625
    6. '
' → logprob: -8.4117431640625
    7. '	best' → logprob: -9.0367431640625
    8. '   ' → logprob: -9.4117431640625
    9. '```' → logprob: -10.2867431640625
    10. '_best' → logprob: -11.2867431640625

Token 129: '_gap' (ID: 131234)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0001443035143893212
    2. '_gap' → logprob: -8.875144004821777
    3. '_' → logprob: -12.750144004821777
    4. '_best' → logprob: -13.625144004821777
    5. ' _' → logprob: -15.750144004821777
    6. 'n' → logprob: -17.000144958496094
    7. '```' → logprob: -17.625144958496094
    8. '   ' → logprob: -18.250144958496094
    9. '_g' → logprob: -18.250144958496094
    10. '_x' → logprob: -18.750144958496094

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630506083369255
    2. '=' → logprob: -3.6513049602508545
    3. ',' → logprob: -12.526305198669434
    4. ' ' → logprob: -14.276305198669434
    5. ' ,' → logprob: -15.776305198669434
    6. '＝' → logprob: -16.401304244995117
    7. ' =
' → logprob: -16.401304244995117
    8. '<|end|>' → logprob: -16.776304244995117
    9. ' =)' → logprob: -17.276304244995117
    10. '=n' → logprob: -17.401304244995117

Token 131: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.31326746940612793
    2. 'gap' → logprob: -1.313267469406128
    3. '_gap' → logprob: -12.313267707824707
    4. '-gap' → logprob: -14.563267707824707
    5. ' gaps' → logprob: -14.938267707824707
    6. 'g' → logprob: -15.188267707824707
    7. '
' → logprob: -16.93826675415039
    8. ' ' → logprob: -17.06326675415039
    9. 'Gap' → logprob: -17.43826675415039
    10. '   ' → logprob: -17.81326675415039

Token 132: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04014592990279198
    2. '
' → logprob: -3.7901458740234375
    3. ' best' → logprob: -4.2901458740234375
    4. '   ' → logprob: -6.5401458740234375
    5. '       ' → logprob: -7.2901458740234375
    6. 'best' → logprob: -7.4151458740234375
    7. '	best' → logprob: -9.290145874023438
    8. '<|end|>' → logprob: -10.040145874023438
    9. ' 
' → logprob: -10.290145874023438
    10. '
' → logprob: -10.415145874023438

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014338968321681023
    2. ' best' → logprob: -4.389338970184326
    3. 'best' → logprob: -7.139338970184326
    4. '       ' → logprob: -7.639338970184326
    5. '   ' → logprob: -8.639338493347168
    6. '	best' → logprob: -8.639338493347168
    7. '
' → logprob: -9.639338493347168
    8. '```' → logprob: -10.139338493347168
    9. '               ' → logprob: -10.514338493347168
    10. '<|end|>' → logprob: -10.889338493347168

Token 134: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.6932430267333984
    2. 'best' (adapté à ' best') → logprob: -0.6932430267333984
    3. '           ' → logprob: -9.568243026733398
    4. '	best' → logprob: -11.193243026733398
    5. '   ' → logprob: -11.818243026733398
    6. '_best' → logprob: -13.568243026733398
    7. '       ' → logprob: -13.693243026733398
    8. '(best' → logprob: -13.818243026733398
    9. '.best' → logprob: -14.568243026733398
    10. 'Best' → logprob: -15.068243026733398

Token 135: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.749814019713085e-06
    2. 'n' → logprob: -12.875006675720215
    3. '_' → logprob: -13.625006675720215
    4. '_gap' → logprob: -14.000006675720215
    5. '```' → logprob: -14.250006675720215
    6. ' _' → logprob: -14.375006675720215
    7. '<|end|>' → logprob: -15.000006675720215
    8. 's' → logprob: -16.12500762939453
    9. '\' → logprob: -16.62500762939453
    10. '_s' → logprob: -16.75000762939453

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760024189949036
    2. '=' → logprob: -0.8260024189949036
    3. '<|end|>' → logprob: -10.07600212097168
    4. ' ' → logprob: -11.20100212097168
    5. '=n' → logprob: -12.07600212097168
    6. '=int' → logprob: -15.20100212097168
    7. '＝' → logprob: -15.57600212097168
    8. ')' → logprob: -15.95100212097168
    9. '=
' → logprob: -16.07600212097168
    10. ' =
' → logprob: -16.20100212097168

Token 137: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687410950660706
    2. ' n' → logprob: -1.1368740797042847
    3. '	n' → logprob: -12.886874198913574
    4. '   ' → logprob: -16.011873245239258
    5. '<|end|>' → logprob: -16.261873245239258
    6. ')n' → logprob: -16.386873245239258
    7. '```' → logprob: -16.636873245239258
    8. '_n' → logprob: -16.636873245239258
    9. '[n' → logprob: -17.136873245239258
    10. '$n' → logprob: -17.261873245239258

Token 138: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003925349097698927
    2. '   ' → logprob: -5.753925323486328
    3. ' print' → logprob: -7.253925323486328
    4. '<|end|>' → logprob: -10.628925323486328
    5. '```' → logprob: -12.003925323486328
    6. ')' → logprob: -12.628925323486328
    7. '
' → logprob: -12.628925323486328
    8. '	print' → logprob: -13.753925323486328
    9. '#print' → logprob: -14.753925323486328
    10. '(print' → logprob: -14.878925323486328

Token 140: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005343805067241192
    2. ' print' → logprob: -5.255343914031982
    3. '   ' → logprob: -9.130343437194824
    4. '
' → logprob: -14.255343437194824
    5. '```' → logprob: -14.255343437194824
    6. ' ' → logprob: -15.630343437194824
    7. '    
' → logprob: -16.13034439086914
    8. '	print' → logprob: -16.88034439086914
    9. 'for' → logprob: -17.38034439086914
    10. '  ' → logprob: -18.00534439086914

Token 141: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.0071165915578603745
    2. '(' → logprob: -5.007116794586182
    3. '(f' → logprob: -7.882116794586182
    4. '('' → logprob: -11.257116317749023
    5. '(b' → logprob: -12.132116317749023
    6. '("' → logprob: -13.382116317749023
    7. '()' → logprob: -13.507116317749023
    8. '((' → logprob: -13.757116317749023
    9. 'best' → logprob: -14.757116317749023
    10. '("("' → logprob: -14.882116317749023

Token 142: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.704273118884885e-07
    2. '_gap' → logprob: -14.625000953674316
    3. ')_' → logprob: -17.125
    4. ')' → logprob: -17.125
    5. 'n' → logprob: -17.25
    6. '_' → logprob: -17.375
    7. '_best' → logprob: -17.625
    8. ' _' → logprob: -17.75
    9. '_name' → logprob: -19.625
    10. '_a' → logprob: -19.75

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')
' → logprob: -14.87500286102295
    4. '')' → logprob: -15.62500286102295
    5. '`)' → logprob: -16.375003814697266
    6. '))' → logprob: -16.500003814697266
    7. ')`' → logprob: -16.875003814697266
    8. '")' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.250003814697266
    10. '```' → logprob: -17.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 141
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 120
Précision stricte (1ère position): 53.90%
Précision adaptée (1ère position): 55.32%
Précision (top 10): 85.11%
================================================================================
