================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
R, B, W, G = map(int, input().split())
print(R + B + W + G)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'R' (ID: 49)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '<-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<-' → logprob: -0.9534971117973328
    2. '[' → logprob: -1.2034971714019775
    3. '<' → logprob: -2.3284971714019775
    4. ')' → logprob: -3.2034971714019775
    5. '(' → logprob: -3.4534971714019775
    6. '#' → logprob: -3.5784971714019775
    7. ',' → logprob: -4.078496932983398
    8. '%' → logprob: -4.078496932983398
    9. '=' → logprob: -4.453496932983398
    10. '+' → logprob: -4.453496932983398

Token 4: ' W' (ID: 486)
  Prédit: '<-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<-' → logprob: -1.1016268730163574
    2. ')' → logprob: -1.8516268730163574
    3. ',' → logprob: -1.9766268730163574
    4. '<' → logprob: -2.1016268730163574
    5. '[' → logprob: -3.2266268730163574
    6. ' <-' → logprob: -3.2266268730163574
    7. '=' → logprob: -3.3516268730163574
    8. '(' → logprob: -3.7266268730163574
    9. '>' → logprob: -3.9766268730163574
    10. '%' → logprob: -4.476626873016357

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8518999218940735
    2. ')' → logprob: -1.8518998622894287
    3. ',' → logprob: -2.2268998622894287
    4. '[' → logprob: -2.3518998622894287
    5. '<-' → logprob: -2.8518998622894287
    6. '```' → logprob: -3.3518998622894287
    7. ' <-' → logprob: -3.6018998622894287
    8. '+' → logprob: -4.101900100708008
    9. ' =' → logprob: -4.351900100708008
    10. ';' → logprob: -4.726900100708008

Token 6: ' G' (ID: 499)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048878252506256104
    2. '=' → logprob: -3.9238781929016113
    3. ')' → logprob: -4.423878192901611
    4. '```' → logprob: -6.048878192901611
    5. ' ' → logprob: -6.548878192901611
    6. '.' → logprob: -6.673878192901611
    7. ',
' → logprob: -6.673878192901611
    8. ':' → logprob: -6.798878192901611
    9. 'R' → logprob: -7.298878192901611
    10. 'C' → logprob: -7.298878192901611

Token 7: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26197296380996704
    2. '=' → logprob: -1.8869729042053223
    3. ':' → logprob: -4.261972904205322
    4. '[' → logprob: -4.386972904205322
    5. ')' → logprob: -4.636972904205322
    6. ';' → logprob: -4.761972904205322
    7. '(' → logprob: -5.136972904205322
    8. '#' → logprob: -5.136972904205322
    9. '```' → logprob: -5.261972904205322
    10. '_' → logprob: -5.386972904205322

Token 8: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3623351454734802
    2. ' ' → logprob: -1.362335205078125
    3. '1' → logprob: -4.237335205078125
    4. '[' → logprob: -4.737335205078125
    5. '10' → logprob: -5.612335205078125
    6. '(' → logprob: -5.737335205078125
    7. ' (' → logprob: -5.862335205078125
    8. ' [' → logprob: -6.362335205078125
    9. 'map' → logprob: -6.362335205078125
    10. 'R' → logprob: -6.487335205078125

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06280510127544403
    2. '(lambda' → logprob: -3.43780517578125
    3. '(' → logprob: -4.06280517578125
    4. '(str' → logprob: -4.56280517578125
    5. '<|end|>' → logprob: -8.56280517578125
    6. 'int' → logprob: -9.06280517578125
    7. ')' → logprob: -9.18780517578125
    8. '(float' → logprob: -9.31280517578125
    9. '()' → logprob: -9.43780517578125
    10. '[int' → logprob: -9.56280517578125

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8234017491340637
    2. '(' → logprob: -1.073401689529419
    3. '(input' → logprob: -1.698401689529419
    4. '(user' → logprob: -4.323401927947998
    5. '(int' → logprob: -5.323401927947998
    6. '(str' → logprob: -5.948401927947998
    7. '(data' → logprob: -6.198401927947998
    8. '(code' → logprob: -6.448401927947998
    9. '`)' → logprob: -6.698401927947998
    10. '(token' → logprob: -6.823401927947998

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891589403152466
    2. ' input' → logprob: -2.57891583442688
    3. ')' → logprob: -11.2039155960083
    4. '(input' → logprob: -11.5789155960083
    5. 'list' → logprob: -14.0789155960083
    6. '```' → logprob: -14.8289155960083
    7. ',input' → logprob: -14.9539155960083
    8. 'raw' → logprob: -15.2039155960083
    9. '<input' → logprob: -15.7039155960083
    10. '	input' → logprob: -15.7039155960083

Token 12: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.763828694820404
    2. '())' → logprob: -0.888828694820404
    3. '()' → logprob: -3.263828754425049
    4. '(' → logprob: -4.388828754425049
    5. '`()' → logprob: -4.388828754425049
    6. '```' → logprob: -4.638828754425049
    7. '('' → logprob: -4.763828754425049
    8. '(""))' → logprob: -4.888828754425049
    9. '();)' → logprob: -5.263828754425049
    10. '`)' → logprob: -5.638828754425049

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009767174487933517
    2. 'strip' → logprob: -7.0009765625
    3. 'read' → logprob: -10.2509765625
    4. 'rstrip' → logprob: -11.0009765625
    5. ' split' → logprob: -11.5009765625
    6. ')' → logprob: -13.1259765625
    7. '(split' → logprob: -14.8759765625
    8. 'spl' → logprob: -16.0009765625
    9. '```' → logprob: -16.0009765625
    10. 'replace' → logprob: -16.0009765625

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03412692993879318
    2. ')' → logprob: -3.6591269969940186
    3. '()' → logprob: -5.4091267585754395
    4. '()))' → logprob: -6.0341267585754395
    5. '))' → logprob: -7.2841267585754395
    6. '`)' → logprob: -9.659127235412598
    7. '(),' → logprob: -10.534127235412598
    8. '(' → logprob: -10.659127235412598
    9. ' ())' → logprob: -10.784127235412598
    10. '()),' → logprob: -10.909127235412598

Token 15: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1245890855789185
    2. 'r' → logprob: -1.7495890855789185
    3. '#' → logprob: -1.8745890855789185
    4. '
' → logprob: -2.749588966369629
    5. 'if' → logprob: -2.999588966369629
    6. ')' → logprob: -2.999588966369629
    7. ',' → logprob: -3.624588966369629
    8. 'print' → logprob: -3.874588966369629
    9. '+' → logprob: -3.999588966369629
    10. 'R' → logprob: -4.249588966369629

Token 16: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002788551209960133
    2. '('' → logprob: -8.62527847290039
    3. '("("' → logprob: -9.62527847290039
    4. '()' → logprob: -11.37527847290039
    5. '((' → logprob: -12.12527847290039
    6. '(f' → logprob: -13.12527847290039
    7. '(`' → logprob: -13.25027847290039
    8. '(R' → logprob: -13.25027847290039
    9. '("""' → logprob: -13.37527847290039
    10. '(B' → logprob: -13.75027847290039

Token 17: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.51776123046875
    2. ')' → logprob: -1.01776123046875
    3. ',' → logprob: -3.39276123046875
    4. ' +' → logprob: -6.14276123046875
    5. ' ,' → logprob: -6.14276123046875
    6. '*' → logprob: -6.64276123046875
    7. '+)' → logprob: -6.76776123046875
    8. ' )' → logprob: -6.89276123046875
    9. '+B' → logprob: -7.14276123046875
    10. '>' → logprob: -8.89276123046875

Token 18: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10344728082418442
    2. ' B' → logprob: -2.353447198867798
    3. 'G' → logprob: -5.853447437286377
    4. ' G' → logprob: -8.603446960449219
    5. 'W' → logprob: -9.103446960449219
    6. ' ' → logprob: -9.978446960449219
    7. ' W' → logprob: -11.853446960449219
    8. ' ' → logprob: -12.228446960449219
    9. 'R' → logprob: -12.353446960449219
    10. ')' → logprob: -13.478446960449219

Token 19: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3520565330982208
    2. '+' → logprob: -1.8520565032958984
    3. ' +' → logprob: -1.9770565032958984
    4. ' )' → logprob: -6.977056503295898
    5. '))' → logprob: -8.477056503295898
    6. ' -' → logprob: -10.102056503295898
    7. '-' → logprob: -10.227056503295898
    8. '+B' → logprob: -10.352056503295898
    9. '+)' → logprob: -10.852056503295898
    10. '*' → logprob: -10.852056503295898

Token 20: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.06383966654539108
    2. ' W' → logprob: -2.8138396739959717
    3. 'G' → logprob: -6.438839435577393
    4. ' ' → logprob: -8.81383991241455
    5. ' G' → logprob: -9.43883991241455
    6. ')' → logprob: -10.93883991241455
    7. '1' → logprob: -12.68883991241455
    8. '  ' → logprob: -12.68883991241455
    9. 'R' → logprob: -12.68883991241455
    10. ' ' → logprob: -13.18883991241455

Token 21: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043548718094825745
    2. '+' → logprob: -5.629354953765869
    3. ' +' → logprob: -8.129354476928711
    4. '))' → logprob: -8.504354476928711
    5. ' )' → logprob: -9.254354476928711
    6. '`)' → logprob: -9.254354476928711
    7. '+)' → logprob: -11.379354476928711
    8. ')`' → logprob: -11.379354476928711
    9. '```' → logprob: -11.504354476928711
    10. '')' → logprob: -12.004354476928711

Token 22: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.014202055521309376
    2. ' G' → logprob: -4.264202117919922
    3. ' ' → logprob: -10.764202117919922
    4. ')' → logprob: -11.389202117919922
    5. '1' → logprob: -13.389202117919922
    6. '   ' → logprob: -13.764202117919922
    7. '  ' → logprob: -14.014202117919922
    8. '	G' → logprob: -15.014202117919922
    9. '(G' → logprob: -15.139202117919922
    10. ' ' → logprob: -15.139202117919922

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013691288768313825
    2. '`)' → logprob: -9.125137329101562
    3. '))' → logprob: -11.000137329101562
    4. ' )' → logprob: -12.125137329101562
    5. ')`' → logprob: -13.000137329101562
    6. '')' → logprob: -13.625137329101562
    7. '```' → logprob: -14.250137329101562
    8. '#' → logprob: -14.500137329101562
    9. ')
' → logprob: -15.375137329101562
    10. '+' → logprob: -15.875137329101562


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 3
Tokens correctement prédits (1ère position, avec adaptation): 3
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 14.29%
Précision adaptée (1ère position): 14.29%
Précision (top 10): 66.67%
================================================================================
