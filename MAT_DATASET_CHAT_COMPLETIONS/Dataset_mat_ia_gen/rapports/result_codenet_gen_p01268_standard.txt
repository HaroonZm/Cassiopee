================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

MAX_N = 200000

def sieve(n):
    is_prime = [True]*(n+1)
    is_prime[0]=False
    is_prime[1]=False
    for i in range(2,int(n**0.5)+1):
        if is_prime[i]:
            for j in range(i*i,n+1,i):
                is_prime[j]=False
    return [i for i,v in enumerate(is_prime) if v]

primes = sieve(MAX_N+10000)

def solve(N,P):
    # find first prime > N
    idx = bisect.bisect_right(primes, N)
    primesN = primes[idx:]
    sums = []
    for i in range(len(primesN)):
        for j in range(i,len(primesN)):
            sums.append(primesN[i]+primesN[j])
    sums.sort()
    return sums[P-1]

for line in sys.stdin:
    if line.strip() == '':
        continue
    N,P = map(int,line.split())
    if N==-1 and P==-1:
        break
    print(solve(N,P))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5945609211921692
    2. '.' → logprob: -0.9695609211921692
    3. 'import' → logprob: -3.8445608615875244
    4. 'newline' → logprob: -4.2195611000061035
    5. '\' → logprob: -4.7195611000061035
    6. '<|end|>' → logprob: -4.8445611000061035
    7. '```' → logprob: -5.3445611000061035
    8. '
' → logprob: -5.7195611000061035
    9. '<|end|>' → logprob: -6.4695611000061035
    10. '' → logprob: -6.4695611000061035

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.7053759519476444e-05
    2. 't' → logprob: -10.250057220458984
    3. 'e' → logprob: -11.375057220458984
    4. 'ected' → logprob: -12.250057220458984
    5. 'ec' → logprob: -13.500057220458984
    6. 'ectl' → logprob: -13.875057220458984
    7. '```' → logprob: -13.875057220458984
    8. 'ection' → logprob: -14.500057220458984
    9. '>' → logprob: -15.500057220458984
    10. 'ector' → logprob: -15.875057220458984

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24299927055835724
    2. '<|end|>' → logprob: -3.117999315261841
    3. '
' → logprob: -3.367999315261841
    4. '\n' → logprob: -3.492999315261841
    5. '\' → logprob: -3.742999315261841
    6. '' → logprob: -3.867999315261841
    7. '

' → logprob: -3.992999315261841
    8. 'import' → logprob: -4.117999076843262
    9. 'newline' → logprob: -4.867999076843262
    10. '```' → logprob: -5.367999076843262

Token 7: 'MAX' (ID: 21911)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8454324007034302
    2. '
' → logprob: -1.5954324007034302
    3. 'def' → logprob: -1.9704324007034302
    4. 'import' → logprob: -2.8454322814941406
    5. '\n' → logprob: -3.3454322814941406
    6. '' → logprob: -3.4704322814941406
    7. '```' → logprob: -3.5954322814941406
    8. '

' → logprob: -3.9704322814941406
    9. '_' → logprob: -5.095432281494141
    10. '`' → logprob: -5.220432281494141

Token 8: '_N' (ID: 3080)
  Prédit: '_SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.5124666094779968
    2. '_' → logprob: -1.5124666690826416
    3. '_CAP' → logprob: -2.6374666690826416
    4. '_VALUE' → logprob: -3.2624666690826416
    5. ' _' → logprob: -3.6374666690826416
    6. '_INT' → logprob: -5.2624664306640625
    7. '_VAL' → logprob: -5.2624664306640625
    8. '_DEPTH' → logprob: -5.3874664306640625
    9. '_LENGTH' → logprob: -5.6374664306640625
    10. '_LEN' → logprob: -5.7624664306640625

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5842205882072449
    2. '=' → logprob: -0.8342205882072449
    3. '_' → logprob: -4.8342204093933105
    4. ' ' → logprob: -9.334220886230469
    5. '_=' → logprob: -9.834220886230469
    6. '=_' → logprob: -10.584220886230469
    7. ' _' → logprob: -10.834220886230469
    8. '  ' → logprob: -10.834220886230469
    9. '_SPACE' → logprob: -10.959220886230469
    10. '_SIZE' → logprob: -11.334220886230469

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028031587600708008
    2. '10' → logprob: -3.903031587600708
    3. '100' → logprob: -4.903031349182129
    4. '200' → logprob: -11.403031349182129
    5. '1' → logprob: -11.778031349182129
    6. '500' → logprob: -12.528031349182129
    7. 'int' → logprob: -12.653031349182129
    8. ' int' → logprob: -12.778031349182129
    9. '20' → logprob: -12.778031349182129
    10. '300' → logprob: -13.028031349182129

Token 11: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1505078673362732
    2. '100' → logprob: -2.025507926940918
    3. '200' → logprob: -5.650507926940918
    4. '500' → logprob: -6.650507926940918
    5. '1' → logprob: -7.150507926940918
    6. '300' → logprob: -7.275507926940918
    7. '2' → logprob: -7.400507926940918
    8. '400' → logprob: -8.150507926940918
    9. ' ' → logprob: -8.525507926940918
    10. '250' → logprob: -9.650507926940918

Token 12: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1943223923444748
    2. '000' → logprob: -1.8193223476409912
    3. '00' → logprob: -4.94432258605957
    4. '\' → logprob: -6.19432258605957
    5. '_' → logprob: -6.31932258605957
    6. '\n' → logprob: -6.31932258605957
    7. '
' → logprob: -7.44432258605957
    8. '

' → logprob: -8.06932258605957
    9. '```' → logprob: -8.81932258605957
    10. '+' → logprob: -9.19432258605957

Token 13: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046028681099414825
    2. '
' → logprob: -4.4210286140441895
    3. '

' → logprob: -4.4210286140441895
    4. '\n' → logprob: -4.9210286140441895
    5. '\' → logprob: -5.7960286140441895
    6. '0' → logprob: -5.7960286140441895
    7. ' 
' → logprob: -6.1710286140441895
    8. '' → logprob: -6.5460286140441895
    9. '```' → logprob: -6.5460286140441895
    10. '_' → logprob: -7.4210286140441895

Token 14: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6050140261650085
    2. 'def' → logprob: -1.2300140857696533
    3. 'class' → logprob: -2.7300140857696533
    4. 'n' → logprob: -3.8550140857696533
    5. '

' → logprob: -4.230013847351074
    6. '```' → logprob: -4.480013847351074
    7. '\' → logprob: -4.605013847351074
    8. '\n' → logprob: -4.730013847351074
    9. 'data' → logprob: -5.730013847351074
    10. 'from' → logprob: -5.855013847351074

Token 15: ' sieve' (ID: 142781)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9767893552780151
    2. ' main' → logprob: -1.1017893552780151
    3. '_' → logprob: -1.8517893552780151
    4. ' solve' → logprob: -3.2267894744873047
    5. ' binary' → logprob: -3.3517894744873047
    6. ' find' → logprob: -3.6017894744873047
    7. ' insert' → logprob: -5.226789474487305
    8. ' dfs' → logprob: -5.851789474487305
    9. ' space' → logprob: -5.976789474487305
    10. ' _' → logprob: -6.351789474487305

Token 16: '(n' (ID: 2406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5249204635620117
    2. '(' → logprob: -0.8999204635620117
    3. '_s' → logprob: -7.649920463562012
    4. '_(' → logprob: -8.149920463562012
    5. '(n' → logprob: -8.399920463562012
    6. '(_)' → logprob: -9.274920463562012
    7. '(_' → logprob: -9.399920463562012
    8. '(s' → logprob: -9.649920463562012
    9. '```' → logprob: -9.649920463562012
    10. '_of' → logprob: -10.399920463562012

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010177217423915863
    2. ')' → logprob: -4.635177135467529
    3. ' ):' → logprob: -8.010177612304688
    4. '=' → logprob: -10.760177612304688
    5. '_' → logprob: -11.385177612304688
    6. ':' → logprob: -11.510177612304688
    7. ',' → logprob: -11.510177612304688
    8. '):
' → logprob: -11.885177612304688
    9. ' )' → logprob: -12.135177612304688
    10. '(' → logprob: -12.510177612304688

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01501629501581192
    2. '**' → logprob: -5.640016078948975
    3. '():' → logprob: -5.765016078948975
    4. ' :' → logprob: -6.390016078948975
    5. '   ' → logprob: -6.765016078948975
    6. ':
' → logprob: -7.140016078948975
    7. '```' → logprob: -7.140016078948975
    8. '[' → logprob: -7.640016078948975
    9. '[:]' → logprob: -7.890016078948975
    10. '`:' → logprob: -7.890016078948975

Token 19: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25733891129493713
    2. ' primes' → logprob: -2.6323390007019043
    3. ' sieve' → logprob: -3.0073390007019043
    4. '   ' → logprob: -3.2573390007019043
    5. ' sp' → logprob: -4.632339000701904
    6. 'is' (adapté à ' is') → logprob: -4.757339000701904
    7. ' prime' → logprob: -4.757339000701904
    8. ' visited' → logprob: -4.882339000701904
    9. ' lst' → logprob: -5.507339000701904
    10. ' ' → logprob: -5.632339000701904

Token 20: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0006388116744346917
    2. '_' → logprob: -7.500638961791992
    3. 'prime' → logprob: -9.750638961791992
    4. ' _' → logprob: -11.000638961791992
    5. '_pr' → logprob: -12.000638961791992
    6. ' prime' → logprob: -13.500638961791992
    7. ' ' → logprob: -14.125638961791992
    8. 'Prime' → logprob: -14.500638961791992
    9. '_com' → logprob: -14.625638961791992
    10. '_Pr' → logprob: -15.000638961791992

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21728426218032837
    2. '[' → logprob: -1.8422842025756836
    3. '=' → logprob: -3.5922842025756836
    4. '=[' → logprob: -4.717284202575684
    5. ' =[' → logprob: -8.342284202575684
    6. '[:]' → logprob: -10.217284202575684
    7. '[]' → logprob: -10.842284202575684
    8. ' ' → logprob: -11.217284202575684
    9. '   ' → logprob: -11.217284202575684
    10. '[i' → logprob: -11.592284202575684

Token 22: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5761040449142456
    2. ' [' → logprob: -0.8261040449142456
    3. '[n' → logprob: -8.826104164123535
    4. '[int' → logprob: -12.576104164123535
    5. ' ' → logprob: -12.826104164123535
    6. '[s' → logprob: -13.076104164123535
    7. '[start' → logprob: -13.701104164123535
    8. '[new' → logprob: -13.826104164123535
    9. '[num' → logprob: -14.326104164123535
    10. '[a' → logprob: -14.451104164123535

Token 23: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6931490898132324
    2. ' True' → logprob: -0.6931490898132324
    3. 'False' → logprob: -13.69314956665039
    4. '(True' → logprob: -14.19314956665039
    5. ' False' → logprob: -16.44314956665039
    6. ' Tru' → logprob: -18.56814956665039
    7. '1' → logprob: -19.19314956665039
    8. 'Tr' → logprob: -19.44314956665039
    9. '=True' → logprob: -19.69314956665039
    10. '   ' → logprob: -19.81814956665039

Token 24: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35976678133010864
    2. ']' → logprob: -1.2347667217254639
    3. ' ]' → logprob: -5.109766960144043
    4. ' ' → logprob: -6.609766960144043
    5. 'for' → logprob: -6.609766960144043
    6. ',' → logprob: -6.859766960144043
    7. '<|end|>' → logprob: -7.484766960144043
    8. ')' → logprob: -8.359766960144043
    9. '<|end|>' → logprob: -8.359766960144043
    10. ']*' → logprob: -8.734766960144043

Token 25: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019374389667063951
    2. ' n' → logprob: -6.251937389373779
    3. '(n' → logprob: -12.251937866210938
    4. ' ' → logprob: -13.376937866210938
    5. ')n' → logprob: -13.376937866210938
    6. '	n' → logprob: -14.751937866210938
    7. ')' → logprob: -15.126937866210938
    8. ' (' → logprob: -15.876937866210938
    9. '  ' → logprob: -16.376937866210938
    10. '   ' → logprob: -16.376937866210938

Token 26: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009118211455643177
    2. ' +' → logprob: -7.000911712646484
    3. '+)' → logprob: -16.125911712646484
    4. '+
' → logprob: -17.250911712646484
    5. ')' → logprob: -17.375911712646484
    6. ' ' → logprob: -17.375911712646484
    7. ' plus' → logprob: -17.875911712646484
    8. ')+' → logprob: -17.875911712646484
    9. '＋' → logprob: -17.875911712646484
    10. '+

' → logprob: -18.750911712646484

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019311357755213976
    2. ' ' → logprob: -6.251931190490723
    3. '0' → logprob: -14.251931190490723
    4. '```' → logprob: -14.501931190490723
    5. ' )' → logprob: -15.001931190490723
    6. '  ' → logprob: -15.001931190490723
    7. ')' → logprob: -15.251931190490723
    8. '   ' → logprob: -15.876931190490723
    9. '2' → logprob: -15.876931190490723
    10. '

' → logprob: -16.751930236816406

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023727134976070374
    2. ')
' → logprob: -8.625237464904785
    3. ' )' → logprob: -10.750237464904785
    4. '<|end|>' → logprob: -11.250237464904785
    5. ')[' → logprob: -12.500237464904785
    6. '),' → logprob: -12.750237464904785
    7. '```' → logprob: -12.875237464904785
    8. ')return' → logprob: -13.125237464904785
    9. ')#' → logprob: -13.500237464904785
    10. '[' → logprob: -13.625237464904785

Token 29: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1159389019012451
    2. 'is' → logprob: -1.8659389019012451
    3. '
' → logprob: -1.9909389019012451
    4. '<|end|>' → logprob: -2.365938901901245
    5. ' 
' → logprob: -2.490938901901245
    6. '[' → logprob: -2.740938901901245
    7. ' is' → logprob: -3.740938901901245
    8. '    
' → logprob: -3.990938901901245
    9. '  
' → logprob: -4.240939140319824
    10. '   ' → logprob: -4.365939140319824

Token 30: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.038241270929574966
    2. ' is' → logprob: -3.288241386413574
    3. '   ' → logprob: -8.913241386413574
    4. ' ' → logprob: -10.413241386413574
    5. ' for' → logprob: -11.538241386413574
    6. 'for' → logprob: -11.663241386413574
    7. '```' → logprob: -12.413241386413574
    8. '
' → logprob: -13.038241386413574
    9. 'i' → logprob: -13.163241386413574
    10. '    
' → logprob: -13.413241386413574

Token 31: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.002519657602533698
    2. '_' → logprob: -6.002519607543945
    3. '_false' → logprob: -11.252519607543945
    4. ' _' → logprob: -11.877519607543945
    5. '_pr' → logprob: -12.002519607543945
    6. 'prime' → logprob: -12.377519607543945
    7. '[' → logprob: -12.627519607543945
    8. '_true' → logprob: -13.127519607543945
    9. '_Pr' → logprob: -13.502519607543945
    10. 'Prime' → logprob: -13.877519607543945

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '\[' → logprob: -13.375003814697266
    3. ' [' → logprob: -13.750003814697266
    4. '<|end|>' → logprob: -14.625003814697266
    5. '[
' → logprob: -15.375003814697266
    6. '```' → logprob: -15.625003814697266
    7. ' ' → logprob: -15.750003814697266
    8. '   ' → logprob: -17.250003814697266
    9. ' =' → logprob: -17.375003814697266
    10. '=' → logprob: -17.750003814697266

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003571535926312208
    2. ' ' → logprob: -8.000357627868652
    3. '1' → logprob: -11.125357627868652
    4. '2' → logprob: -12.750357627868652
    5. '   ' → logprob: -13.375357627868652
    6. '  ' → logprob: -14.250357627868652
    7. ':' → logprob: -14.500357627868652
    8. ')' → logprob: -14.625357627868652
    9. '```' → logprob: -15.000357627868652
    10. '[' → logprob: -15.375357627868652

Token 34: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01553814485669136
    2. ' ]' → logprob: -4.640538215637207
    3. '=' → logprob: -5.640538215637207
    4. ']=' → logprob: -6.265538215637207
    5. ']==' → logprob: -8.890538215637207
    6. ' =' → logprob: -9.015538215637207
    7. ')' → logprob: -10.515538215637207
    8. '],' → logprob: -12.140538215637207
    9. '==' → logprob: -12.390538215637207
    10. '[' → logprob: -12.640538215637207

Token 35: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001502598519437015
    2. ' False' → logprob: -6.501502513885498
    3. 'is' → logprob: -15.376502990722656
    4. '=False' → logprob: -17.626502990722656
    5. '(False' → logprob: -18.001502990722656
    6. ' ' → logprob: -18.751502990722656
    7. '.False' → logprob: -19.626502990722656
    8. 'F' → logprob: -19.876502990722656
    9. '   ' → logprob: -20.001502990722656
    10. 'false' → logprob: -20.501502990722656

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25639039278030396
    2. '<|end|>' → logprob: -1.5063903331756592
    3. '<|end|>' → logprob: -6.381390571594238
    4. 'is' → logprob: -7.381390571594238
    5. ' is' → logprob: -7.756390571594238
    6. '  
' → logprob: -8.131390571594238
    7. '    
' → logprob: -8.631390571594238
    8. '```' → logprob: -8.631390571594238
    9. ' 
' → logprob: -8.756390571594238
    10. ',' → logprob: -8.881390571594238

Token 38: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.11330204457044601
    2. ' is' → logprob: -2.238301992416382
    3. '<|end|>' → logprob: -8.738302230834961
    4. '   ' → logprob: -8.988302230834961
    5. ' ' → logprob: -9.363302230834961
    6. '<|end|>' → logprob: -9.863302230834961
    7. '1' → logprob: -11.113302230834961
    8. '```' → logprob: -11.613302230834961
    9. '0' → logprob: -12.113302230834961
    10. 'import' → logprob: -12.363302230834961

Token 39: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -11.875007629394531
    3. 'prime' → logprob: -14.875007629394531
    4. '_p' → logprob: -15.750007629394531
    5. '_pr' → logprob: -16.12500762939453
    6. ' _' → logprob: -16.12500762939453
    7. '_pi' → logprob: -16.87500762939453
    8. 'Prime' → logprob: -18.12500762939453
    9. '[' → logprob: -18.37500762939453
    10. '_prior' → logprob: -18.50000762939453

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '\[' → logprob: -13.875001907348633
    3. '```' → logprob: -14.250001907348633
    4. '[
' → logprob: -15.375001907348633
    5. '1' → logprob: -16.625001907348633
    6. ' [' → logprob: -17.250001907348633
    7. '<|end|>' → logprob: -18.250001907348633
    8. '=True' → logprob: -18.500001907348633
    9. '[...]' → logprob: -18.875001907348633
    10. '=' → logprob: -18.875001907348633

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.250009536743164
    4. '[' → logprob: -16.375009536743164
    5. '=' → logprob: -16.562509536743164
    6. '2' → logprob: -16.875009536743164
    7. '0' → logprob: -17.312509536743164
    8. '   ' → logprob: -17.562509536743164
    9. '  ' → logprob: -17.812509536743164
    10. '-' → logprob: -18.625009536743164

Token 42: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026058517396450043
    2. ']=' → logprob: -3.7760584354400635
    3. ']' → logprob: -5.901058673858643
    4. ' =' → logprob: -10.776058197021484
    5. '=False' → logprob: -10.776058197021484
    6. ')=' → logprob: -11.026058197021484
    7. '=True' → logprob: -11.901058197021484
    8. '=}' → logprob: -12.901058197021484
    9. '']=' → logprob: -13.526058197021484
    10. '}=' → logprob: -13.776058197021484

Token 43: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. '=False' → logprob: -21.37500762939453
    4. 'F' → logprob: -21.62500762939453
    5. '(False' → logprob: -21.62500762939453
    6. 'True' → logprob: -22.25000762939453
    7. 'Fa' → logprob: -23.25000762939453
    8. '.False' → logprob: -23.50000762939453
    9. '_false' → logprob: -24.00000762939453
    10. 'false' → logprob: -24.12500762939453

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0950501412153244
    2. '\n' → logprob: -2.720050096511841
    3. ' 
' → logprob: -4.34505033493042
    4. '\' → logprob: -5.72005033493042
    5. '   ' → logprob: -5.97005033493042
    6. '' → logprob: -6.22005033493042
    7. '    
' → logprob: -6.84505033493042
    8. ' for' → logprob: -7.22005033493042
    9. '  
' → logprob: -7.72005033493042
    10. '```' → logprob: -7.72005033493042

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08756675571203232
    2. '   ' → logprob: -3.46256685256958
    3. '\n' → logprob: -3.58756685256958
    4. ' 
' → logprob: -4.71256685256958
    5. '```' → logprob: -5.58756685256958
    6. '    
' → logprob: -5.71256685256958
    7. ' for' → logprob: -5.83756685256958
    8. '  
' → logprob: -5.83756685256958
    9. '<|end|>' → logprob: -7.46256685256958
    10. '
' → logprob: -7.46256685256958

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5929707884788513
    2. 'for' (adapté à ' for') → logprob: -1.592970848083496
    3. '\n' → logprob: -1.842970848083496
    4. '
' → logprob: -2.842970848083496
    5. ' 
' → logprob: -4.217970848083496
    6. '```' → logprob: -5.217970848083496
    7. '   ' → logprob: -5.967970848083496
    8. '  
' → logprob: -6.842970848083496
    9. ' ' → logprob: -6.967970848083496
    10. '    
' → logprob: -7.217970848083496

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00268504093401134
    2. 'i' → logprob: -6.002685070037842
    3. ' ' → logprob: -8.502684593200684
    4. ' p' → logprob: -12.377684593200684
    5. '	i' → logprob: -13.252684593200684
    6. '  ' → logprob: -16.002685546875
    7. ' _' → logprob: -16.377685546875
    8. 'p' → logprob: -17.252685546875
    9. ' ' → logprob: -17.252685546875
    10. ' )' → logprob: -17.377685546875

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0164343249052763
    2. 'in' → logprob: -4.141434192657471
    3. ' ' → logprob: -7.891434192657471
    4. '  ' → logprob: -11.766434669494629
    5. '	in' → logprob: -11.891434669494629
    6. '   ' → logprob: -13.266434669494629
    7. ' i' → logprob: -13.266434669494629
    8. '1' → logprob: -13.391434669494629
    9. 'n' → logprob: -13.891434669494629
    10. '2' → logprob: -13.891434669494629

Token 49: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692862749099731
    2. 'range' → logprob: -2.1269285678863525
    3. '	range' → logprob: -15.126928329467773
    4. '2' → logprob: -15.751928329467773
    5. ' ' → logprob: -16.251928329467773
    6. '(range' → logprob: -17.626928329467773
    7. '   ' → logprob: -18.376928329467773
    8. '  ' → logprob: -18.501928329467773
    9. '.range' → logprob: -18.626928329467773
    10. ' xrange' → logprob: -19.626928329467773

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017148085171356797
    2. '2' → logprob: -6.501714706420898
    3. ' ' → logprob: -8.501714706420898
    4. ' (' → logprob: -11.626714706420898
    5. '   ' → logprob: -15.126714706420898
    6. '```' → logprob: -16.6267147064209
    7. '[' → logprob: -18.3767147064209
    8. '	' → logprob: -18.5017147064209
    9. ',' → logprob: -19.1267147064209
    10. '`' → logprob: -19.2517147064209

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.25000762939453
    4. '２' → logprob: -20.00000762939453
    5. '```' → logprob: -20.50000762939453
    6. '۲' → logprob: -20.62500762939453
    7. '  ' → logprob: -20.75000762939453
    8. ')' → logprob: -21.12500762939453
    9. '(' → logprob: -21.25000762939453
    10. '	' → logprob: -21.87500762939453

Token 52: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.145333930850029
    2. ' ,' → logprob: -2.020334005355835
    3. ' ' → logprob: -6.895333766937256
    4. ',i' → logprob: -7.520333766937256
    5. ')' → logprob: -8.395334243774414
    6. ' )' → logprob: -8.520334243774414
    7. '   ' → logprob: -8.520334243774414
    8. ',n' → logprob: -8.770334243774414
    9. ' i' → logprob: -9.395334243774414
    10. '  ' → logprob: -9.895334243774414

Token 53: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04324010759592056
    2. '(' → logprob: -3.1682400703430176
    3. ' (' → logprob: -9.293240547180176
    4. '((' → logprob: -9.668240547180176
    5. '(i' → logprob: -9.793240547180176
    6. '(s' → logprob: -11.043240547180176
    7. ' ' → logprob: -12.168240547180176
    8. '(pow' → logprob: -13.043240547180176
    9. 'n' → logprob: -13.168240547180176
    10. ' n' → logprob: -13.918240547180176

Token 54: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0005073997308500111
    2. '(' → logprob: -8.375507354736328
    3. '(n' → logprob: -9.000507354736328
    4. ' **' → logprob: -9.250507354736328
    5. '(i' → logprob: -10.000507354736328
    6. '*' → logprob: -12.500507354736328
    7. '.sqrt' → logprob: -12.875507354736328
    8. '*i' → logprob: -14.125507354736328
    9. '(math' → logprob: -14.250507354736328
    10. '```' → logprob: -14.250507354736328

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.625001907348633
    3. '.' → logprob: -13.875001907348633
    4. '(' → logprob: -22.000001907348633
    5. '2' → logprob: -22.250001907348633
    6. '۰' → logprob: -22.500001907348633
    7. '   ' → logprob: -22.625001907348633
    8. ' ' → logprob: -22.625001907348633
    9. '

' → logprob: -23.000001907348633
    10. '{' → logprob: -23.125001907348633

Token 56: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016480287013109773
    2. '0' → logprob: -8.750164985656738
    3. ' .' → logprob: -13.000164985656738
    4. '5' → logprob: -13.250164985656738
    5. '50' → logprob: -14.250164985656738
    6. '1' → logprob: -14.875164985656738
    7. '```' → logprob: -15.375164985656738
    8. ' ' → logprob: -15.500164985656738
    9. '3' → logprob: -16.375164031982422
    10. '25' → logprob: -16.500164031982422

Token 57: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.25000286102295
    3. '4' → logprob: -15.50000286102295
    4. '```' → logprob: -15.68750286102295
    5. '   ' → logprob: -15.93750286102295
    6. '
' → logprob: -16.062503814697266
    7. '**' → logprob: -16.437503814697266
    8. '0' → logprob: -16.562503814697266
    9. '6' → logprob: -16.937503814697266
    10. '

' → logprob: -17.000003814697266

Token 58: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.441790372133255
    2. ')+' → logprob: -1.4417903423309326
    3. '()+' → logprob: -2.4417903423309326
    4. ' +' → logprob: -3.6917903423309326
    5. ')' → logprob: -5.566790580749512
    6. '(' → logprob: -5.691790580749512
    7. '()' → logprob: -7.941790580749512
    8. ' ' → logprob: -8.316790580749512
    9. '")+' → logprob: -8.441790580749512
    10. '(+' → logprob: -8.816790580749512

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.375059127807617
    4. '2' → logprob: -18.250059127807617
    5. '  ' → logprob: -18.375059127807617
    6. '

' → logprob: -18.750059127807617
    7. '   ' → logprob: -18.812559127807617
    8. '
' → logprob: -18.937559127807617
    9. '+' → logprob: -19.625059127807617
    10. '(' → logprob: -20.312559127807617

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5790686011314392
    2. ':' → logprob: -0.8290686011314392
    3. ' ):' → logprob: -5.954068660736084
    4. ' :' → logprob: -7.954068660736084
    5. ')' → logprob: -9.204068183898926
    6. ',' → logprob: -10.079068183898926
    7. '):
' → logprob: -11.579068183898926
    8. ':**' → logprob: -11.704068183898926
    9. ':)' → logprob: -11.954068183898926
    10. ']:' → logprob: -13.579068183898926

Token 61: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007005443796515465
    2. ' :' → logprob: -5.632005214691162
    3. '   ' → logprob: -6.382005214691162
    4. ':
' → logprob: -6.882005214691162
    5. '    ' → logprob: -8.13200569152832
    6. '       ' → logprob: -8.50700569152832
    7. '):' → logprob: -9.50700569152832
    8. ' ' → logprob: -10.38200569152832
    9. ' :
' → logprob: -10.38200569152832
    10. '  ' → logprob: -11.38200569152832

Token 62: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5426980257034302
    2. ' :' → logprob: -1.5426980257034302
    3. ' if' → logprob: -2.1676979064941406
    4. ' ' → logprob: -2.9176979064941406
    5. '   ' → logprob: -4.292697906494141
    6. ' :
' → logprob: -4.542697906494141
    7. 'if' (adapté à ' if') → logprob: -5.667697906494141
    8. '    ' → logprob: -6.042697906494141
    9. ' ):' → logprob: -6.542697906494141
    10. ':
' → logprob: -6.667697906494141

Token 63: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00010914575977949426
    2. 'is' → logprob: -9.12510871887207
    3. ' ' → logprob: -16.50010871887207
    4. ' not' → logprob: -16.87510871887207
    5. ' ' → logprob: -17.37510871887207
    6. '	is' → logprob: -17.37510871887207
    7. '(is' → logprob: -19.75010871887207
    8. '    ' → logprob: -20.50010871887207
    9. 'not' → logprob: -21.00010871887207
    10. '   ' → logprob: -21.00010871887207

Token 64: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -12.000008583068848
    3. 'prime' → logprob: -13.000008583068848
    4. ' _' → logprob: -16.375009536743164
    5. '_pr' → logprob: -17.000009536743164
    6. 'r' → logprob: -17.375009536743164
    7. '```' → logprob: -18.250009536743164
    8. '_Pr' → logprob: -18.875009536743164
    9. '_prior' → logprob: -18.875009536743164
    10. '_true' → logprob: -19.375009536743164

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07891413569450378
    2. '[' → logprob: -2.578914165496826
    3. '[I' → logprob: -11.703913688659668
    4. '[ip' → logprob: -12.203913688659668
    5. '\[' → logprob: -12.953913688659668
    6. '```' → logprob: -13.328913688659668
    7. '[j' → logprob: -13.453913688659668
    8. '[in' → logprob: -14.203913688659668
    9. '[s' → logprob: -14.453913688659668
    10. '[u' → logprob: -14.703913688659668

Token 66: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20378445088863373
    2. ']:' → logprob: -2.328784465789795
    3. '):' → logprob: -2.453784465789795
    4. ']' → logprob: -7.953784465789795
    5. ' ):' → logprob: -8.328783988952637
    6. '[' → logprob: -8.828783988952637
    7. ' :' → logprob: -9.828783988952637
    8. ':]' → logprob: -9.828783988952637
    9. ']):' → logprob: -10.703783988952637
    10. ')' → logprob: -11.078783988952637

Token 67: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09348273277282715
    2. '       ' → logprob: -2.593482732772827
    3. ':
' → logprob: -4.968482971191406
    4. '   ' → logprob: -5.468482971191406
    5. '           ' → logprob: -6.218482971191406
    6. ' for' → logprob: -7.843482971191406
    7. ' :' → logprob: -8.343482971191406
    8. '<|end|>' → logprob: -8.343482971191406
    9. '```' → logprob: -9.343482971191406
    10. '    ' → logprob: -10.218482971191406

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20345377922058105
    2. ' range' → logprob: -2.203453779220581
    3. ' i' → logprob: -3.703453779220581
    4. 'for' (adapté à ' for') → logprob: -4.07845401763916
    5. '   ' → logprob: -4.32845401763916
    6. ' ' → logprob: -5.07845401763916
    7. 'range' → logprob: -5.07845401763916
    8. '    ' → logprob: -6.07845401763916
    9. ' in' → logprob: -6.82845401763916
    10. ' while' → logprob: -7.20345401763916

Token 69: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.007647206541150808
    2. 'j' → logprob: -4.8826470375061035
    3. ' ' → logprob: -10.257647514343262
    4. '	j' → logprob: -12.382647514343262
    5. ' x' → logprob: -15.132647514343262
    6. '<|end|>' → logprob: -15.132647514343262
    7. '    ' → logprob: -15.382647514343262
    8. '_j' → logprob: -15.507647514343262
    9. ' range' → logprob: -15.507647514343262
    10. ' (' → logprob: -15.757647514343262

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006016960367560387
    2. 'in' → logprob: -5.131016731262207
    3. ' ' → logprob: -10.256016731262207
    4. ' i' → logprob: -10.506016731262207
    5. '	in' → logprob: -12.006016731262207
    6. ' =' → logprob: -12.131016731262207
    7. '=i' → logprob: -12.131016731262207
    8. '=' → logprob: -12.256016731262207
    9. 'i' → logprob: -14.006016731262207
    10. '   ' → logprob: -14.131016731262207

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602250337600708
    2. ' range' → logprob: -1.9102250337600708
    3. '   ' → logprob: -15.160224914550781
    4. '	range' → logprob: -15.410224914550781
    5. '(range' → logprob: -15.660224914550781
    6. ' ' → logprob: -15.785224914550781
    7. '  ' → logprob: -17.28522491455078
    8. '    ' → logprob: -17.41022491455078
    9. 'r' → logprob: -19.16022491455078
    10. 'rang' → logprob: -19.28522491455078

Token 72: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.000007629394531
    3. 'i' → logprob: -14.250007629394531
    4. ' i' → logprob: -14.625007629394531
    5. ' (' → logprob: -15.750007629394531
    6. '(j' → logprob: -17.75000762939453
    7. '	i' → logprob: -18.62500762939453
    8. '(ii' → logprob: -18.87500762939453
    9. '   ' → logprob: -19.25000762939453
    10. '(I' → logprob: -19.37500762939453

Token 73: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0005772201111540198
    2. '*' → logprob: -7.500577449798584
    3. 'i' → logprob: -10.750576972961426
    4. ' *' → logprob: -12.875576972961426
    5. '*j' → logprob: -16.375577926635742
    6. '**' → logprob: -17.625577926635742
    7. ' i' → logprob: -17.750577926635742
    8. '2' → logprob: -18.625577926635742
    9. '```' → logprob: -19.375577926635742
    10. '*
' → logprob: -19.500577926635742

Token 74: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.38843411207199097
    2. ',' → logprob: -1.1384341716766357
    3. ',j' → logprob: -6.513433933258057
    4. ' ,' → logprob: -9.888434410095215
    5. ',N' → logprob: -11.638434410095215
    6. ',i' → logprob: -11.638434410095215
    7. ',len' → logprob: -12.388434410095215
    8. 'n' → logprob: -12.763434410095215
    9. ',num' → logprob: -13.513434410095215
    10. '(n' → logprob: -15.013434410095215

Token 75: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.558399319241289e-05
    2. '+i' → logprob: -10.875025749206543
    3. ' +' → logprob: -12.125025749206543
    4. '+j' → logprob: -13.875025749206543
    5. '+,' → logprob: -15.875025749206543
    6. '+
' → logprob: -17.125024795532227
    7. '1' → logprob: -17.625024795532227
    8. '+n' → logprob: -18.000024795532227
    9. '```' → logprob: -18.250024795532227
    10. ',' → logprob: -18.500024795532227

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.375003814697266
    4. '```' → logprob: -18.000003814697266
    5. ',' → logprob: -18.125003814697266
    6. '

' → logprob: -18.625003814697266
    7. ')' → logprob: -18.625003814697266
    8. '
' → logprob: -19.250003814697266
    9. 'i' → logprob: -19.812503814697266
    10. '  ' → logprob: -19.937503814697266

Token 77: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.018503772094845772
    2. ',' → logprob: -4.018503665924072
    3. ',j' → logprob: -8.01850414276123
    4. ' ,' → logprob: -10.89350414276123
    5. 'i' → logprob: -12.89350414276123
    6. ':i' → logprob: -13.64350414276123
    7. ' i' → logprob: -13.89350414276123
    8. '   ' → logprob: -14.89350414276123
    9. '，' → logprob: -15.51850414276123
    10. ',I' → logprob: -16.018503189086914

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005159787251614034
    2. ')' → logprob: -7.750515937805176
    3. ' ):' → logprob: -10.125515937805176
    4. ':' → logprob: -10.125515937805176
    5. ',' → logprob: -12.750515937805176
    6. '):
' → logprob: -13.375515937805176
    7. ']:' → logprob: -16.000516891479492
    8. '),' → logprob: -16.500516891479492
    9. ')：' → logprob: -16.500516891479492
    10. ' ' → logprob: -17.125516891479492

Token 79: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3217994272708893
    2. ' is' → logprob: -1.321799397468567
    3. 'is' → logprob: -5.071799278259277
    4. '                ' → logprob: -6.571799278259277
    5. '                   ' → logprob: -8.196799278259277
    6. '              ' → logprob: -8.321799278259277
    7. '           ' → logprob: -9.446799278259277
    8. '                
' → logprob: -9.821799278259277
    9. '                       ' → logprob: -10.321799278259277
    10. '```' → logprob: -10.821799278259277

Token 80: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.07988607883453369
    2. ' is' → logprob: -2.579885959625244
    3. '                   ' → logprob: -6.954885959625244
    4. '               ' → logprob: -11.329886436462402
    5. '                       ' → logprob: -11.579886436462402
    6. ' ' → logprob: -11.829886436462402
    7. '```' → logprob: -12.204886436462402
    8. '                ' → logprob: -13.454886436462402
    9. '   ' → logprob: -13.454886436462402
    10. '                    ' → logprob: -13.579886436462402

Token 81: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.250006675720215
    3. 'prime' → logprob: -13.250006675720215
    4. '_pr' → logprob: -15.875006675720215
    5. '_p' → logprob: -17.37500762939453
    6. '_prior' → logprob: -17.50000762939453
    7. '_false' → logprob: -17.62500762939453
    8. '```' → logprob: -17.75000762939453
    9. ' _' → logprob: -17.87500762939453
    10. 'Prime' → logprob: -18.00000762939453

Token 82: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001601539261173457
    2. '[' → logprob: -8.750160217285156
    3. '[i' → logprob: -14.250160217285156
    4. '\[' → logprob: -14.875160217285156
    5. '```' → logprob: -14.875160217285156
    6. '[js' → logprob: -15.875160217285156
    7. ' [' → logprob: -16.750160217285156
    8. '=' → logprob: -17.625160217285156
    9. '[s' → logprob: -17.625160217285156
    10. '[J' → logprob: -17.625160217285156

Token 83: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25289472937583923
    2. ']=' → logprob: -1.5028947591781616
    3. '=' → logprob: -7.002894878387451
    4. ' ]' → logprob: -9.877894401550293
    5. ' =' → logprob: -12.502894401550293
    6. ']==' → logprob: -15.377894401550293
    7. ')=' → logprob: -15.627894401550293
    8. ']='' → logprob: -15.877894401550293
    9. '=True' → logprob: -16.12789535522461
    10. '']=' → logprob: -16.62789535522461

Token 84: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004306692280806601
    2. ' False' → logprob: -7.750430583953857
    3. '(False' → logprob: -19.125431060791016
    4. '=False' → logprob: -19.875431060791016
    5. 'F' → logprob: -20.875431060791016
    6. 'True' → logprob: -21.750431060791016
    7. '.False' → logprob: -21.875431060791016
    8. 'false' → logprob: -22.000431060791016
    9. '_false' → logprob: -23.000431060791016
    10. '0' → logprob: -23.000431060791016

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3083513379096985
    2. '   ' → logprob: -1.8083512783050537
    3. '\n' → logprob: -2.8083512783050537
    4. '    
' → logprob: -3.9333512783050537
    5. '  
' → logprob: -5.433351516723633
    6. '<|end|>' → logprob: -5.433351516723633
    7. ' 
' → logprob: -5.683351516723633
    8. 'return' → logprob: -5.808351516723633
    9. ' return' → logprob: -6.683351516723633
    10. '	return' → logprob: -7.183351516723633

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20045988261699677
    2. '   ' → logprob: -1.9504598379135132
    3. '    
' → logprob: -3.9504599571228027
    4. '\n' → logprob: -5.075459957122803
    5. '  
' → logprob: -5.200459957122803
    6. ' 
' → logprob: -5.450459957122803
    7. 'return' → logprob: -7.200459957122803
    8. ' return' → logprob: -7.575459957122803
    9. '```' → logprob: -7.700459957122803
    10. '<|end|>' → logprob: -7.700459957122803

Token 87: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35132163763046265
    2. '
' → logprob: -1.9763216972351074
    3. ' return' → logprob: -3.2263216972351074
    4. 'return' (adapté à ' return') → logprob: -3.2263216972351074
    5. ' ' → logprob: -3.3513216972351074
    6. '    
' → logprob: -4.726321697235107
    7. 'r' → logprob: -4.851321697235107
    8. ' 
' → logprob: -4.851321697235107
    9. '	return' → logprob: -5.351321697235107
    10. 'n' → logprob: -5.851321697235107

Token 88: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7913458943367004
    2. ' is' → logprob: -1.4163458347320557
    3. ' [' → logprob: -1.6663458347320557
    4. 'is' → logprob: -2.1663458347320557
    5. '[i' → logprob: -7.666346073150635
    6. '[max' → logprob: -10.041345596313477
    7. '[int' → logprob: -11.166345596313477
    8. '[n' → logprob: -11.791345596313477
    9. '[len' → logprob: -12.166345596313477
    10. '[s' → logprob: -12.166345596313477

Token 89: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011482899077236652
    2. 'x' → logprob: -4.5114827156066895
    3. ' i' → logprob: -7.7614827156066895
    4. ' x' → logprob: -12.261483192443848
    5. 'k' → logprob: -12.386483192443848
    6. '```' → logprob: -16.51148223876953
    7. '	i' → logprob: -16.76148223876953
    8. 'num' → logprob: -17.13648223876953
    9. '   ' → logprob: -17.13648223876953
    10. 'idx' → logprob: -17.26148223876953

Token 90: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0017433661269024014
    2. 'for' → logprob: -6.376743316650391
    3. ' ' → logprob: -10.12674331665039
    4. ' in' → logprob: -14.62674331665039
    5. '	for' → logprob: -15.87674331665039
    6. ' 
' → logprob: -16.00174331665039
    7. '+' → logprob: -16.12674331665039
    8. '```' → logprob: -16.37674331665039
    9. ' fo' → logprob: -16.87674331665039
    10. ' ' → logprob: -16.87674331665039

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03220974653959274
    2. ' range' → logprob: -4.032209873199463
    3. 'i' → logprob: -4.282209873199463
    4. 'range' → logprob: -8.907209396362305
    5. ' in' → logprob: -11.782209396362305
    6. '(i' → logprob: -13.157209396362305
    7. ' xrange' → logprob: -13.532209396362305
    8. ' ' → logprob: -13.657209396362305
    9. '	i' → logprob: -14.032209396362305
    10. ',' → logprob: -15.407209396362305

Token 92: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09386211633682251
    2. ' range' → logprob: -3.3438620567321777
    3. ',' → logprob: -4.218862056732178
    4. ' is' → logprob: -4.218862056732178
    5. 'in' → logprob: -4.343862056732178
    6. ' ' → logprob: -5.218862056732178
    7. ' i' → logprob: -6.093862056732178
    8. 'range' → logprob: -6.343862056732178
    9. 'is' → logprob: -6.468862056732178
    10. ' if' → logprob: -8.093862533569336

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996311247348785
    2. 'in' → logprob: -2.694963216781616
    3. 'i' → logprob: -11.819963455200195
    4. ' ' → logprob: -12.194963455200195
    5. ' i' → logprob: -12.194963455200195
    6. '<|end|>' → logprob: -13.319963455200195
    7. 'ine' → logprob: -13.569963455200195
    8. '	in' → logprob: -13.819963455200195
    9. 'v' → logprob: -14.444963455200195
    10. ',' → logprob: -14.444963455200195

Token 94: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.2519367039203644
    2. ' enumerate' → logprob: -1.501936674118042
    3. 'enum' → logprob: -12.376936912536621
    4. 'en' → logprob: -12.751936912536621
    5. 'e' → logprob: -15.626936912536621
    6. '```' → logprob: -16.001935958862305
    7. '(en' → logprob: -16.251935958862305
    8. ' enumer' → logprob: -17.251935958862305
    9. '.enumer' → logprob: -17.251935958862305
    10. 'Enumer' → logprob: -17.501935958862305

Token 95: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -12.000011444091797
    3. 'is' → logprob: -12.250011444091797
    4. ' (' → logprob: -14.500011444091797
    5. ',is' → logprob: -16.250011444091797
    6. ' is' → logprob: -16.625011444091797
    7. '```' → logprob: -16.625011444091797
    8. '(
' → logprob: -17.125011444091797
    9. ')is' → logprob: -17.125011444091797
    10. '=is' → logprob: -17.375011444091797

Token 96: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -4.656383680412546e-05
    2. 'prime' → logprob: -10.000046730041504
    3. '_' → logprob: -14.000046730041504
    4. '_pr' → logprob: -16.500045776367188
    5. '_true' → logprob: -17.625045776367188
    6. 'Prime' → logprob: -17.875045776367188
    7. 'r' → logprob: -18.125045776367188
    8. '_p' → logprob: -18.500045776367188
    9. ' prime' → logprob: -18.875045776367188
    10. '```' → logprob: -19.125045776367188

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29311397671699524
    2. ' if' → logprob: -1.4181139469146729
    3. 'if' → logprob: -5.043114185333252
    4. '()' → logprob: -6.043114185333252
    5. '(' → logprob: -6.418114185333252
    6. ' ' → logprob: -7.668114185333252
    7. '(True' → logprob: -7.793114185333252
    8. ' )' → logprob: -8.293113708496094
    9. ']' → logprob: -9.543113708496094
    10. '(if' → logprob: -9.668113708496094

Token 98: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.029752805829048157
    2. 'if' → logprob: -3.529752731323242
    3. ' ' → logprob: -13.904752731323242
    4. ')' → logprob: -14.279752731323242
    5. '	if' → logprob: -15.279752731323242
    6. '
' → logprob: -16.029752731323242
    7. '   ' → logprob: -16.404752731323242
    8. ']' → logprob: -16.404752731323242
    9. ',' → logprob: -16.904752731323242
    10. ';if' → logprob: -17.029752731323242

Token 99: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0067154900170862675
    2. ' v' → logprob: -5.006715297698975
    3. '	v' → logprob: -16.006715774536133
    4. ')v' → logprob: -17.006715774536133
    5. '(v' → logprob: -19.381715774536133
    6. '_v' → logprob: -19.631715774536133
    7. ' ' → logprob: -19.631715774536133
    8. '
' → logprob: -20.381715774536133
    9. '-v' → logprob: -20.381715774536133
    10. '<v' → logprob: -20.381715774536133

Token 100: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004626052919775248
    2. ' ]' → logprob: -5.379626274108887
    3. ')]' → logprob: -13.754626274108887
    4. ' ' → logprob: -14.379626274108887
    5. ' if' → logprob: -14.504626274108887
    6. '()]' → logprob: -14.504626274108887
    7. ']

' → logprob: -14.629626274108887
    8. ']
' → logprob: -14.879626274108887
    9. ']==' → logprob: -15.004626274108887
    10. '<|end|>' → logprob: -15.629626274108887

Token 101: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.13227210938930511
    2. 'def' → logprob: -2.8822720050811768
    3. 'p' → logprob: -3.7572720050811768
    4. '#' → logprob: -4.382272243499756
    5. '```' → logprob: -4.757272243499756
    6. 'prime' → logprob: -5.132272243499756
    7. '
' → logprob: -5.257272243499756
    8. ' primes' → logprob: -6.007272243499756
    9. 'n' → logprob: -7.132272243499756
    10. '_' → logprob: -7.257272243499756

Token 102: 'imes' (ID: 2332)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.25580814480781555
    2. 'imes' → logprob: -1.8808081150054932
    3. 'int' → logprob: -2.630808115005493
    4. 'i' → logprob: -7.380808353424072
    5. 'im' → logprob: -9.005807876586914
    6. '#' → logprob: -9.130807876586914
    7. 'import' → logprob: -9.380807876586914
    8. 'ef' → logprob: -9.630807876586914
    9. 'def' → logprob: -10.505807876586914
    10. '```' → logprob: -11.005807876586914

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12444567680358887
    2. '=' → logprob: -2.499445676803589
    3. '(' → logprob: -3.374445676803589
    4. '_' → logprob: -8.124445915222168
    5. ' ' → logprob: -9.499445915222168
    6. ' (' → logprob: -9.499445915222168
    7. '[:]' → logprob: -10.249445915222168
    8. '<|end|>' → logprob: -10.624445915222168
    9. ' =(' → logprob: -10.999445915222168
    10. 's' → logprob: -10.999445915222168

Token 104: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2520121932029724
    2. ' sieve' → logprob: -1.5020122528076172
    3. '[s' → logprob: -9.752012252807617
    4. '[]' → logprob: -12.002012252807617
    5. ' s' → logprob: -12.002012252807617
    6. '	s' → logprob: -13.127012252807617
    7. '(s' → logprob: -13.377012252807617
    8. 'sie' → logprob: -13.377012252807617
    9. 'list' → logprob: -13.502012252807617
    10. ' [' → logprob: -13.752012252807617

Token 105: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.02975974604487419
    2. '(' → logprob: -3.529759645462036
    3. '(M' → logprob: -11.779759407043457
    4. '(max' → logprob: -14.529759407043457
    5. '(
' → logprob: -14.904759407043457
    6. '((' → logprob: -15.529759407043457
    7. '(Max' → logprob: -16.029760360717773
    8. '(`' → logprob: -16.154760360717773
    9. '(NUM' → logprob: -16.154760360717773
    10. ' (' → logprob: -16.654760360717773

Token 106: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.4855663721391466e-05
    2. '_' → logprob: -11.125015258789062
    3. ' _' → logprob: -17.375015258789062
    4. '_n' → logprob: -17.875015258789062
    5. '_M' → logprob: -18.000015258789062
    6. '_I' → logprob: -18.250015258789062
    7. '_A' → logprob: -18.500015258789062
    8. '```' → logprob: -19.500015258789062
    9. ')_' → logprob: -19.500015258789062
    10. 'N' → logprob: -20.250015258789062

Token 107: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '))' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.125001907348633
    4. ')
' → logprob: -16.375001907348633
    5. ']' → logprob: -17.500001907348633
    6. ')`' → logprob: -17.625001907348633
    7. ')]' → logprob: -17.625001907348633
    8. '),' → logprob: -18.375001907348633
    9. ')

' → logprob: -18.375001907348633
    10. ')}' → logprob: -18.750001907348633

Token 108: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2109067440032959
    2. '100' → logprob: -2.085906744003296
    3. '10' → logprob: -2.960906744003296
    4. '50' → logprob: -4.835906982421875
    5. '5' → logprob: -5.460906982421875
    6. ' ' → logprob: -7.085906982421875
    7. '20' → logprob: -7.835906982421875
    8. '500' → logprob: -8.210906982421875
    9. '0' → logprob: -8.585906982421875
    10. '2' → logprob: -8.835906982421875

Token 109: '00' (ID: 504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.643152740551159e-05
    2. '0' → logprob: -11.000036239624023
    3. ' )' → logprob: -11.875036239624023
    4. '1' → logprob: -12.625036239624023
    5. '])' → logprob: -13.125036239624023
    6. '5' → logprob: -13.250036239624023
    7. ']' → logprob: -13.500036239624023
    8. '))' → logprob: -13.625036239624023
    9. '6' → logprob: -14.500036239624023
    10. '3' → logprob: -14.625036239624023

Token 110: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.875003814697266
    3. '))' → logprob: -14.125003814697266
    4. ')
' → logprob: -15.250003814697266
    5. ']' → logprob: -16.125003814697266
    6. ')]' → logprob: -16.500003814697266
    7. ')`' → logprob: -16.875003814697266
    8. ')

' → logprob: -17.375003814697266
    9. '+' → logprob: -17.500003814697266
    10. '),' → logprob: -17.750003814697266

Token 111: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3644627332687378
    2. 'n' → logprob: -2.1144628524780273
    3. 'for' → logprob: -2.6144628524780273
    4. '
' → logprob: -3.6144628524780273
    5. '#' → logprob: -3.9894628524780273
    6. '\n' → logprob: -4.614462852478027
    7. '[' → logprob: -4.864462852478027
    8. 'num' → logprob: -5.364462852478027
    9. 'import' → logprob: -5.864462852478027
    10. 'index' → logprob: -6.114462852478027

Token 112: ' solve' (ID: 17722)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.1710413694381714
    2. ' ' → logprob: -1.4210413694381714
    3. ' binary' → logprob: -1.6710413694381714
    4. ' count' → logprob: -2.796041488647461
    5. ' solve' → logprob: -2.921041488647461
    6. ' factor' → logprob: -3.546041488647461
    7. ' main' → logprob: -3.796041488647461
    8. ' prime' → logprob: -3.796041488647461
    9. ' closest' → logprob: -4.171041488647461
    10. ' next' → logprob: -4.796041488647461

Token 113: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011713240382960066
    2. '("("' → logprob: -9.875117301940918
    3. ' (' → logprob: -10.000117301940918
    4. '('' → logprob: -12.375117301940918
    5. '((' → logprob: -13.375117301940918
    6. '(n' → logprob: -13.375117301940918
    7. '_' → logprob: -13.375117301940918
    8. '():' → logprob: -13.625117301940918
    9. '()' → logprob: -13.750117301940918
    10. '(line' → logprob: -14.000117301940918

Token 114: ',P' (ID: 64255)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5862759947776794
    2. '):' → logprob: -0.8362759947776794
    3. ' ):' → logprob: -5.086276054382324
    4. ' ,' → logprob: -5.836276054382324
    5. ')' → logprob: -6.836276054382324
    6. '):
' → logprob: -10.836276054382324
    7. ',n' → logprob: -10.836276054382324
    8. ' )' → logprob: -10.961276054382324
    9. ',
' → logprob: -12.086276054382324
    10. ' :' → logprob: -12.211276054382324

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02072114124894142
    2. ',' → logprob: -4.145720958709717
    3. ' ):' → logprob: -6.020720958709717
    4. ')' → logprob: -6.270720958709717
    5. '):
' → logprob: -8.770721435546875
    6. ' ,' → logprob: -9.770721435546875
    7. ':' → logprob: -10.770721435546875
    8. ' )' → logprob: -11.145721435546875
    9. ',int' → logprob: -11.770721435546875
    10. ',n' → logprob: -11.770721435546875

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003910268656909466
    2. '    
' → logprob: -6.253910064697266
    3. '
' → logprob: -7.003910064697266
    4. '    ' → logprob: -8.128910064697266
    5. ' 
' → logprob: -8.628910064697266
    6. ' result' → logprob: -9.378910064697266
    7. ' return' → logprob: -9.628910064697266
    8. '   
' → logprob: -9.628910064697266
    9. ' answer' → logprob: -9.878910064697266
    10. 'result' → logprob: -9.878910064697266

Token 117: ' #' (ID: 1069)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.951912760734558
    2. ' idx' → logprob: -2.0769128799438477
    3. 'idx' → logprob: -2.2019128799438477
    4. '   ' → logprob: -2.3269128799438477
    5. 'result' → logprob: -2.3269128799438477
    6. 'res' → logprob: -2.7019128799438477
    7. ' res' → logprob: -2.7019128799438477
    8. 'pos' → logprob: -3.5769128799438477
    9. 'dp' → logprob: -3.5769128799438477
    10. ' dp' → logprob: -3.5769128799438477

Token 118: ' find' (ID: 1646)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.3589677810668945
    2. ' result' → logprob: -1.7339677810668945
    3. ' dp' → logprob: -2.1089677810668945
    4. ' res' → logprob: -2.2339677810668945
    5. '   ' → logprob: -3.3589677810668945
    6. ' left' → logprob: -3.4839677810668945
    7. ' ans' → logprob: -3.4839677810668945
    8. 'idx' → logprob: -3.7339677810668945
    9. ' answer' → logprob: -3.8589677810668945
    10. 'dp' → logprob: -3.8589677810668945

Token 119: ' first' (ID: 1577)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.06329140812158585
    2. ' i' → logprob: -3.938291311264038
    3. ' index' → logprob: -4.063291549682617
    4. ' insertion' → logprob: -5.063291549682617
    5. '(' → logprob: -5.313291549682617
    6. ' pos' → logprob: -5.813291549682617
    7. 'idx' → logprob: -6.063291549682617
    8. ' closest' → logprob: -6.188291549682617
    9. ' insert' → logprob: -6.563291549682617
    10. ' bound' → logprob: -7.563291549682617

Token 120: ' prime' (ID: 9197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09782655537128448
    2. '_idx' → logprob: -3.4728264808654785
    3. ' idx' → logprob: -3.8478264808654785
    4. ' _' → logprob: -3.9728264808654785
    5. '_index' → logprob: -4.2228264808654785
    6. ' i' → logprob: -6.2228264808654785
    7. 'idx' → logprob: -6.7228264808654785
    8. ' index' → logprob: -6.8478264808654785
    9. '_i' → logprob: -6.9728264808654785
    10. '_pos' → logprob: -7.4728264808654785

Token 121: ' >' (ID: 1424)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.16656897962093353
    2. '_idx' → logprob: -1.9165689945220947
    3. '_' → logprob: -6.041568756103516
    4. '_pos' → logprob: -6.291568756103516
    5. ' =' → logprob: -7.291568756103516
    6. '_i' → logprob: -7.291568756103516
    7. '_g' → logprob: -8.791568756103516
    8. '_gt' → logprob: -8.791568756103516
    9. '=' → logprob: -9.666568756103516
    10. '_ind' → logprob: -10.166568756103516

Token 122: ' N' (ID: 478)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.5232294201850891
    2. 'P' → logprob: -0.8982294201850891
    3. ' ' → logprob: -10.523229598999023
    4. ''' → logprob: -10.523229598999023
    5. '(P' → logprob: -11.273229598999023
    6. ')' → logprob: -11.773229598999023
    7. ' '' → logprob: -11.773229598999023
    8. 'N' → logprob: -12.023229598999023
    9. ' N' → logprob: -12.273229598999023
    10. '(' → logprob: -12.773229598999023

Token 123: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2759542763233185
    2. '   ' → logprob: -2.150954246520996
    3. ' idx' → logprob: -2.400954246520996
    4. 'index' → logprob: -4.275954246520996
    5. 'pos' → logprob: -4.775954246520996
    6. ' i' → logprob: -5.900954246520996
    7. 'i' → logprob: -6.150954246520996
    8. ' pos' → logprob: -6.275954246520996
    9. ' index' → logprob: -6.400954246520996
    10. '
' → logprob: -7.275954246520996

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7514650821685791
    2. 'idx' → logprob: -1.376465082168579
    3. '
' → logprob: -1.876465082168579
    4. ' idx' → logprob: -3.001465082168579
    5. 'index' → logprob: -4.00146484375
    6. '    
' → logprob: -4.25146484375
    7. ' 
' → logprob: -4.87646484375
    8. ' next' → logprob: -5.37646484375
    9. ' i' → logprob: -5.50146484375
    10. 'next' → logprob: -5.75146484375

Token 125: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.6251861453056335
    2. ' idx' → logprob: -0.8751861453056335
    3. 'index' → logprob: -4.375185966491699
    4. 'pos' → logprob: -4.500185966491699
    5. ' pos' → logprob: -4.875185966491699
    6. ' index' → logprob: -5.000185966491699
    7. ' i' → logprob: -5.375185966491699
    8. 'i' → logprob: -5.500185966491699
    9. '   ' → logprob: -7.750185966491699
    10. ' p' → logprob: -8.5001859664917

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.65475082397461
    4. ' =
' → logprob: -16.77975082397461
    5. ')' → logprob: -17.65475082397461
    6. '_' → logprob: -18.15475082397461
    7. ',' → logprob: -18.52975082397461
    8. ' ' → logprob: -18.52975082397461
    9. 'space' → logprob: -19.15475082397461
    10. ' =
' → logprob: -19.40475082397461

Token 127: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.014165272004902363
    2. ' bis' → logprob: -4.26416540145874
    3. 'b' → logprob: -13.639164924621582
    4. 'bs' → logprob: -14.889164924621582
    5. '   ' → logprob: -16.1391658782959
    6. 'bi' → logprob: -16.2641658782959
    7. '	b' → logprob: -17.0141658782959
    8. ' ' → logprob: -17.7641658782959
    9. 'Bis' → logprob: -18.5141658782959
    10. 'len' → logprob: -19.0141658782959

Token 128: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.749814019713085e-06
    2. 'e' → logprob: -12.875006675720215
    3. 'lect' → logprob: -13.500006675720215
    4. 'ectl' → logprob: -14.500006675720215
    5. 'ct' → logprob: -14.625006675720215
    6. 'ects' → logprob: -14.625006675720215
    7. 'sect' → logprob: -15.000006675720215
    8. '```' → logprob: -15.500006675720215
    9. 'ected' → logprob: -15.875006675720215
    10. ' ect' → logprob: -16.25000762939453

Token 129: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.007751675322651863
    2. '_right' → logprob: -5.00775146484375
    3. '.' → logprob: -7.00775146484375
    4. '.ins' → logprob: -9.75775146484375
    5. '.pr' → logprob: -10.25775146484375
    6. '_left' → logprob: -11.25775146484375
    7. ' .' → logprob: -11.75775146484375
    8. '.right' → logprob: -12.63275146484375
    9. 'right' → logprob: -12.63275146484375
    10. '>' → logprob: -12.88275146484375

Token 130: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6365183591842651
    2. 'ct' → logprob: -1.0115183591842651
    3. 'is' → logprob: -3.1365184783935547
    4. 'sect' → logprob: -3.2615184783935547
    5. 'r' → logprob: -5.386518478393555
    6. 'ect' → logprob: -5.386518478393555
    7. 'nd' → logprob: -5.886518478393555
    8. 'spect' → logprob: -5.886518478393555
    9. 'n' → logprob: -6.011518478393555
    10. 'st' → logprob: -6.261518478393555

Token 131: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0032859710045158863
    2. 'ect' → logprob: -5.753285884857178
    3. 'c' → logprob: -9.378286361694336
    4. 'с' → logprob: -12.378286361694336
    5. 'r' → logprob: -12.628286361694336
    6. '```' → logprob: -12.753286361694336
    7. 'n' → logprob: -13.253286361694336
    8. '   ' → logprob: -13.378286361694336
    9. '<' → logprob: -13.878286361694336
    10. 'sect' → logprob: -14.253286361694336

Token 132: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.6966411471366882
    2. '(pr' → logprob: -0.6966411471366882
    3. '_left' → logprob: -5.821640968322754
    4. 'right' → logprob: -8.071640968322754
    5. 'Right' → logprob: -9.696640968322754
    6. '(' → logprob: -10.196640968322754
    7. 'pr' → logprob: -10.821640968322754
    8. '>' → logprob: -11.071640968322754
    9. '_RIGHT' → logprob: -11.196640968322754
    10. '_' → logprob: -11.446640968322754

Token 133: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -3.273621405242011e-05
    2. 'pr' → logprob: -10.500032424926758
    3. '(' → logprob: -12.250032424926758
    4. ' (' → logprob: -15.500032424926758
    5. '	pr' → logprob: -15.750032424926758
    6. '.pr' → logprob: -18.375032424926758
    7. '/pr' → logprob: -18.375032424926758
    8. '(pl' → logprob: -18.375032424926758
    9. '```' → logprob: -18.500032424926758
    10. ')' → logprob: -18.625032424926758

Token 134: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0003712085890583694
    2. '```' → logprob: -10.125370979309082
    3. '   ' → logprob: -10.250370979309082
    4. '#' → logprob: -10.500370979309082
    5. '

' → logprob: -10.875370979309082
    6. '`' → logprob: -10.875370979309082
    7. '[' → logprob: -11.000370979309082
    8. 'mes' → logprob: -11.062870979309082
    9. '{' → logprob: -11.375370979309082
    10. '
' → logprob: -11.437870979309082

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7012155652046204
    2. ',N' → logprob: -0.9512155652046204
    3. '(N' → logprob: -2.2012155055999756
    4. '(' → logprob: -5.326215744018555
    5. ' ,' → logprob: -6.326215744018555
    6. ',n' → logprob: -8.826215744018555
    7. ' (' → logprob: -9.076215744018555
    8. ',(' → logprob: -9.076215744018555
    9. ',P' → logprob: -11.201215744018555
    10. ',[' → logprob: -11.701215744018555

Token 136: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0067190444096922874
    2. ' N' → logprob: -5.00671911239624
    3. '(N' → logprob: -12.631718635559082
    4. '	N' → logprob: -15.756718635559082
    5. ')' → logprob: -16.2567195892334
    6. ' ' → logprob: -16.3817195892334
    7. '   ' → logprob: -17.1317195892334
    8. '[N' → logprob: -18.2567195892334
    9. '(' → logprob: -18.3817195892334
    10. ',N' → logprob: -18.5067195892334

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009212272125296295
    2. ')
' → logprob: -7.000921249389648
    3. ' )' → logprob: -12.500921249389648
    4. ')+' → logprob: -12.875921249389648
    5. '   ' → logprob: -13.500921249389648
    6. ')

' → logprob: -14.125921249389648
    7. ')
' → logprob: -15.375921249389648
    8. ')`' → logprob: -15.500921249389648
    9. ')return' → logprob: -15.625921249389648
    10. '))' → logprob: -15.750921249389648

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43856075406074524
    2. '   ' → logprob: -1.1885607242584229
    3. '    
' → logprob: -4.063560962677002
    4. ')' → logprob: -4.188560962677002
    5. ' 
' → logprob: -5.813560962677002
    6. ' ' → logprob: -6.063560962677002
    7. '    ' → logprob: -6.188560962677002
    8. ' p' → logprob: -6.688560962677002
    9. ' if' → logprob: -6.813560962677002
    10. '[' → logprob: -7.313560962677002

Token 139: ' primes' (ID: 104042)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0838338136672974
    2. ' p' → logprob: -1.2088338136672974
    3. ' P' → logprob: -2.333833694458008
    4. 'P' → logprob: -2.333833694458008
    5. '   ' → logprob: -2.708833694458008
    6. ' next' → logprob: -3.333833694458008
    7. 'next' → logprob: -4.458833694458008
    8. 'prime' → logprob: -4.958833694458008
    9. ' prime' → logprob: -4.958833694458008
    10. ' if' → logprob: -5.083833694458008

Token 140: 'N' (ID: 45)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.006752905435860157
    2. '[' → logprob: -5.006752967834473
    3. '[index' → logprob: -12.006752967834473
    4. '[
' → logprob: -12.006752967834473
    5. 'idx' → logprob: -12.131752967834473
    6. '[id' → logprob: -12.881752967834473
    7. ' [' → logprob: -13.256752967834473
    8. '[i' → logprob: -13.381752967834473
    9. '```' → logprob: -13.881752967834473
    10. '[start' → logprob: -14.006752967834473

Token 141: ' =' (ID: 314)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.017783822491765022
    2. '=' → logprob: -4.8927836418151855
    3. '[' → logprob: -4.8927836418151855
    4. ' =' → logprob: -6.5177836418151855
    5. 'x' → logprob: -7.3927836418151855
    6. 'idx' → logprob: -8.267784118652344
    7. 'X' → logprob: -9.267784118652344
    8. 'ex' → logprob: -10.517784118652344
    9. '   ' → logprob: -11.017784118652344
    10. '_' → logprob: -11.017784118652344

Token 142: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.2922069728374481
    2. ' primes' → logprob: -1.6672070026397705
    3. '[' → logprob: -3.0422070026397705
    4. ' [' → logprob: -4.167206764221191
    5. '[]' → logprob: -8.167206764221191
    6. '[p' → logprob: -8.167206764221191
    7. ' pr' → logprob: -8.667206764221191
    8. '   ' → logprob: -9.167206764221191
    9. '[N' → logprob: -9.417206764221191
    10. '[P' → logprob: -9.542206764221191

Token 143: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0008471485925838351
    2. '[:' → logprob: -7.500847339630127
    3. '[' → logprob: -8.625846862792969
    4. 'idx' → logprob: -9.250846862792969
    5. '[:]' → logprob: -12.375846862792969
    6. ' idx' → logprob: -12.750846862792969
    7. ' [' → logprob: -13.375846862792969
    8. '[max' → logprob: -13.375846862792969
    9. '[
' → logprob: -13.625846862792969
    10. '	idx' → logprob: -13.750846862792969

Token 144: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30075231194496155
    2. ':]' → logprob: -1.4257522821426392
    3. ':' → logprob: -4.30075216293335
    4. '-' → logprob: -5.92575216293335
    5. ']-' → logprob: -6.30075216293335
    6. '+' → logprob: -7.55075216293335
    7. ' :]' → logprob: -8.675752639770508
    8. ']+' → logprob: -9.300752639770508
    9. ' ]' → logprob: -9.425752639770508
    10. ' -' → logprob: -9.675752639770508

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09236741065979004
    2. '
' → logprob: -2.59236741065979
    3. '    
' → logprob: -5.842367172241211
    4. ' for' → logprob: -6.342367172241211
    5. 'def' → logprob: -6.467367172241211
    6. ' if' → logprob: -6.717367172241211
    7. 'return' → logprob: -7.342367172241211
    8. '#' → logprob: -7.467367172241211
    9. 'for' → logprob: -7.467367172241211
    10. ' return' → logprob: -7.467367172241211

Token 146: ' sums' (ID: 73121)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1154085397720337
    2. 'result' → logprob: -1.9904085397720337
    3. ' for' → logprob: -2.240408420562744
    4. 'res' → logprob: -2.615408420562744
    5. 'dp' → logprob: -2.865408420562744
    6. '   ' → logprob: -3.615408420562744
    7. 'ans' → logprob: -3.615408420562744
    8. 'if' → logprob: -3.740408420562744
    9. 'p' → logprob: -3.990408420562744
    10. 'count' → logprob: -4.115408420562744

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6624086499214172
    2. '=' → logprob: -0.7874086499214172
    3. '=[]' → logprob: -4.037408828735352
    4. '_' → logprob: -4.787408828735352
    5. '_=' → logprob: -6.537408828735352
    6. 's' → logprob: -7.537408828735352
    7. '=[' → logprob: -8.412408828735352
    8. '_list' → logprob: -8.662408828735352
    9. ',' → logprob: -8.662408828735352
    10. '_pr' → logprob: -8.912408828735352

Token 148: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013452786020934582
    2. ' [' → logprob: -4.888453006744385
    3. '[]' → logprob: -5.513453006744385
    4. '0' → logprob: -6.513453006744385
    5. ' []' → logprob: -8.888452529907227
    6. ' ' → logprob: -9.763452529907227
    7. 'pr' → logprob: -10.513452529907227
    8. '{' → logprob: -10.513452529907227
    9. '[p' → logprob: -10.888452529907227
    10. '[N' → logprob: -11.013452529907227

Token 149: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.17068350315094
    2. '   ' → logprob: -1.42068350315094
    3. ' s' → logprob: -2.4206833839416504
    4. ' curr' → logprob: -2.4206833839416504
    5. 'current' → logprob: -2.6706833839416504
    6. ' total' → logprob: -3.2956833839416504
    7. ' acc' → logprob: -3.4206833839416504
    8. ' cur' → logprob: -3.4206833839416504
    9. 'curr' → logprob: -3.5456833839416504
    10. 's' → logprob: -3.7956833839416504

Token 150: ' for' (ID: 395)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.32738396525382996
    2. 'curr' → logprob: -2.3273839950561523
    3. 'cur' → logprob: -2.9523839950561523
    4. 'total' → logprob: -3.0773839950561523
    5. 'acc' → logprob: -3.3273839950561523
    6. 's' → logprob: -3.3273839950561523
    7. ' current' → logprob: -5.952383995056152
    8. 'for' (adapté à ' for') → logprob: -6.202383995056152
    9. 'c' → logprob: -6.202383995056152
    10. 'cum' → logprob: -6.577383995056152

Token 151: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5510543584823608
    2. 'p' → logprob: -1.0510543584823608
    3. ' i' → logprob: -3.4260544776916504
    4. ' p' → logprob: -4.30105447769165
    5. 'prime' → logprob: -4.42605447769165
    6. 'x' → logprob: -5.30105447769165
    7. 'length' → logprob: -5.42605447769165
    8. ' length' → logprob: -6.17605447769165
    9. ' prime' → logprob: -6.67605447769165
    10. 'start' → logprob: -7.55105447769165

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03178396075963974
    2. 'in' → logprob: -3.5317840576171875
    3. ',' → logprob: -6.5317840576171875
    4. ' ,' → logprob: -7.7817840576171875
    5. ' ' → logprob: -9.031784057617188
    6. '	in' → logprob: -11.406784057617188
    7. '   ' → logprob: -11.656784057617188
    8. '  ' → logprob: -11.906784057617188
    9. ',in' → logprob: -12.156784057617188
    10. '_in' → logprob: -14.031784057617188

Token 153: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0023289097007364035
    2. ' range' → logprob: -6.127328872680664
    3. 'pr' → logprob: -8.877328872680664
    4. '   ' → logprob: -13.502328872680664
    5. ' ' → logprob: -13.752328872680664
    6. '  ' → logprob: -14.502328872680664
    7. '	range' → logprob: -15.252328872680664
    8. 'rang' → logprob: -15.377328872680664
    9. 'r' → logprob: -15.502328872680664
    10. '(range' → logprob: -15.877328872680664

Token 154: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0008408344583585858
    2. '(' → logprob: -7.125840663909912
    3. 'len' → logprob: -10.37584114074707
    4. ' len' → logprob: -13.50084114074707
    5. '(pr' → logprob: -13.62584114074707
    6. ',len' → logprob: -14.25084114074707
    7. '(P' → logprob: -14.50084114074707
    8. '(min' → logprob: -15.12584114074707
    9. '(N' → logprob: -15.12584114074707
    10. ' (' → logprob: -15.12584114074707

Token 155: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.0005760280764661729
    2. '(s' → logprob: -7.625576019287109
    3. '(' → logprob: -9.62557601928711
    4. ' (' → logprob: -11.62557601928711
    5. 'pr' → logprob: -11.75057601928711
    6. 's' → logprob: -13.50057601928711
    7. '(pl' → logprob: -14.12557601928711
    8. ')' → logprob: -14.37557601928711
    9. '(P' → logprob: -14.37557601928711
    10. '(p' → logprob: -14.50057601928711

Token 156: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00010890735575230792
    2. 'mes' → logprob: -11.00010871887207
    3. 'ime' → logprob: -11.62510871887207
    4. 'omes' → logprob: -11.87510871887207
    5. 'im' → logprob: -12.00010871887207
    6. '   ' → logprob: -12.06260871887207
    7. 'ims' → logprob: -12.37510871887207
    8. '_' → logprob: -12.37510871887207
    9. 'imates' → logprob: -12.37510871887207
    10. '_pr' → logprob: -12.50010871887207

Token 157: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.26262983679771423
    2. ')):' → logprob: -2.387629747390747
    3. '(pr' → logprob: -2.637629747390747
    4. ')):
' → logprob: -3.512629747390747
    5. ')-' → logprob: -4.137629985809326
    6. ')' → logprob: -4.387629985809326
    7. '):' → logprob: -5.762629985809326
    8. '))' → logprob: -6.387629985809326
    9. 's' → logprob: -6.887629985809326
    10. 'pr' → logprob: -7.137629985809326

Token 158: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002976633608341217
    2. '):
' → logprob: -6.002976417541504
    3. ')):' → logprob: -8.377976417541504
    4. ' ):' → logprob: -8.752976417541504
    5. '-' → logprob: -9.377976417541504
    6. ')' → logprob: -11.627976417541504
    7. ':' → logprob: -11.752976417541504
    8. ' -' → logprob: -13.002976417541504
    9. '+' → logprob: -13.002976417541504
    10. '   ' → logprob: -13.127976417541504

Token 159: '       ' (ID: 309)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0752625465393066
    2. '       ' → logprob: -1.2002625465393066
    3. '   ' → logprob: -1.7002625465393066
    4. 's' → logprob: -3.2002625465393066
    5. ' if' → logprob: -3.4502625465393066
    6. ' total' → logprob: -3.4502625465393066
    7. ' sum' → logprob: -3.9502625465393066
    8. 'sum' → logprob: -4.325262546539307
    9. ' for' → logprob: -4.700262546539307
    10. ' current' → logprob: -4.825262546539307

Token 160: ' for' (ID: 395)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.4355370998382568
    2. ' total' → logprob: -1.8105370998382568
    3. 's' → logprob: -1.9355370998382568
    4. ' current' → logprob: -2.310537099838257
    5. 'total' → logprob: -2.435537099838257
    6. ' if' → logprob: -3.185537099838257
    7. 'current' → logprob: -3.310537099838257
    8. 'curr' → logprob: -3.310537099838257
    9. ' curr' → logprob: -3.560537099838257
    10. 'if' → logprob: -3.560537099838257

Token 161: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38700801134109497
    2. ' j' → logprob: -1.1370079517364502
    3. 'range' → logprob: -9.762007713317871
    4. ' range' → logprob: -10.262007713317871
    5. ' ' → logprob: -11.387007713317871
    6. 'r' → logprob: -11.762007713317871
    7. 'k' → logprob: -11.887007713317871
    8. '   ' → logprob: -12.137007713317871
    9. 's' → logprob: -13.262007713317871
    10. ' k' → logprob: -13.637007713317871

Token 162: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004630816401913762
    2. 'in' → logprob: -7.875463008880615
    3. ' i' → logprob: -10.375463485717773
    4. ' range' → logprob: -10.875463485717773
    5. ' ' → logprob: -11.375463485717773
    6. '<|end|>' → logprob: -11.750463485717773
    7. 'range' → logprob: -12.125463485717773
    8. '	in' → logprob: -13.375463485717773
    9. ' =' → logprob: -13.750463485717773
    10. '   ' → logprob: -14.000463485717773

Token 163: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931501030921936
    2. 'range' → logprob: -0.6931501030921936
    3. '(range' → logprob: -13.193150520324707
    4. 'pr' → logprob: -15.068150520324707
    5. '   ' → logprob: -15.443150520324707
    6. '	range' → logprob: -15.443150520324707
    7. 'ange' → logprob: -16.06814956665039
    8. ' xrange' → logprob: -17.06814956665039
    9. '_range' → logprob: -17.31814956665039
    10. ' ' → logprob: -17.31814956665039

Token 164: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001696902181720361
    2. '(len' → logprob: -8.87516975402832
    3. '(' → logprob: -11.00016975402832
    4. 'i' → logprob: -11.75016975402832
    5. ' (' → logprob: -12.62516975402832
    6. ' i' → logprob: -13.37516975402832
    7. 'len' → logprob: -15.75016975402832
    8. '(j' → logprob: -16.50016975402832
    9. '   ' → logprob: -17.25016975402832
    10. '(pr' → logprob: -17.37516975402832

Token 165: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.32647082209587097
    2. ',' → logprob: -1.5764708518981934
    3. '+' → logprob: -2.7014708518981934
    4. ' ,' → logprob: -5.951470851898193
    5. ' +' → logprob: -7.201470851898193
    6. ',i' → logprob: -7.451470851898193
    7. ',+' → logprob: -8.326470375061035
    8. ',length' → logprob: -8.326470375061035
    9. ',n' → logprob: -9.576470375061035
    10. ',j' → logprob: -10.201470375061035

Token 166: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.00018232580623589456
    2. 'pr' → logprob: -8.625182151794434
    3. '(s' → logprob: -13.750182151794434
    4. 's' → logprob: -14.125182151794434
    5. '(' → logprob: -14.625182151794434
    6. ')' → logprob: -15.750182151794434
    7. '	pr' → logprob: -15.750182151794434
    8. ' (' → logprob: -16.50018310546875
    9. '(pl' → logprob: -16.75018310546875
    10. ' primes' → logprob: -17.50018310546875

Token 167: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0014321435010060668
    2. 'pr' → logprob: -7.126431941986084
    3. 's' → logprob: -7.876431941986084
    4. '(pr' → logprob: -8.876432418823242
    5. 'mes' → logprob: -9.626432418823242
    6. 'im' → logprob: -11.876432418823242
    7. 'es' → logprob: -11.876432418823242
    8. 'ime' → logprob: -12.126432418823242
    9. ')' → logprob: -12.376432418823242
    10. 'ines' → logprob: -13.126432418823242

Token 168: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.847109812544659e-05
    2. 's' → logprob: -10.750048637390137
    3. '(pr' → logprob: -11.250048637390137
    4. ')' → logprob: -11.750048637390137
    5. '[' → logprob: -14.000048637390137
    6. 'pr' → logprob: -14.375048637390137
    7. '_N' → logprob: -14.750048637390137
    8. '(N' → logprob: -14.750048637390137
    9. '[N' → logprob: -15.000048637390137
    10. ',' → logprob: -15.000048637390137

Token 169: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010347483679652214
    2. ')):' → logprob: -4.885347366333008
    3. '):
' → logprob: -6.010347366333008
    4. ')):
' → logprob: -8.885347366333008
    5. ']):' → logprob: -9.760347366333008
    6. ')' → logprob: -10.885347366333008
    7. ' ):' → logprob: -10.885347366333008
    8. '>):' → logprob: -11.510347366333008
    9. '):

' → logprob: -11.760347366333008
    10. '))' → logprob: -11.885347366333008

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044556602369993925
    2. ',' → logprob: -8.625445365905762
    3. ':' → logprob: -8.750445365905762
    4. '               ' → logprob: -10.875445365905762
    5. '<|end|>' → logprob: -11.250445365905762
    6. '          ' → logprob: -11.375445365905762
    7. '            ' → logprob: -11.625445365905762
    8. '            
' → logprob: -11.750445365905762
    9. '       ' → logprob: -12.000445365905762
    10. '[' → logprob: -12.000445365905762

Token 171: ' sums' (ID: 73121)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5159075260162354
    2. '               ' → logprob: -1.5159075260162354
    3. ' if' → logprob: -2.5159075260162354
    4. '           ' → logprob: -2.6409075260162354
    5. 's' → logprob: -4.765907287597656
    6. ' sums' → logprob: -4.765907287597656
    7. ' sum' → logprob: -4.890907287597656
    8. ' total' → logprob: -5.765907287597656
    9. 'sum' → logprob: -7.015907287597656
    10. ' val' → logprob: -7.515907287597656

Token 172: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06936058402061462
    2. '.' → logprob: -3.1943604946136475
    3. ' .' → logprob: -4.444360733032227
    4. '=' → logprob: -4.569360733032227
    5. ' =' → logprob: -5.819360733032227
    6. '().' → logprob: -7.569360733032227
    7. ').' → logprob: -9.819360733032227
    8. ')' → logprob: -9.944360733032227
    9. '.app' → logprob: -10.069360733032227
    10. 'append' → logprob: -10.444360733032227

Token 173: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.000964223057962954
    2. '(' → logprob: -7.000964164733887
    3. ' (' → logprob: -10.625964164733887
    4. 'pr' → logprob: -10.750964164733887
    5. '((' → logprob: -13.125964164733887
    6. '(pl' → logprob: -13.250964164733887
    7. '(
' → logprob: -14.125964164733887
    8. '(p' → logprob: -14.375964164733887
    9. '	pr' → logprob: -14.625964164733887
    10. '(s' → logprob: -15.500964164733887

Token 174: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.01593911275267601
    2. 's' → logprob: -4.390939235687256
    3. '[' → logprob: -5.890939235687256
    4. 'ime' → logprob: -8.140938758850098
    5. 'es' → logprob: -9.390938758850098
    6. 'ates' → logprob: -9.890938758850098
    7. 'pr' → logprob: -10.640938758850098
    8. ')' → logprob: -10.765938758850098
    9. 'ims' → logprob: -10.765938758850098
    10. 'ues' → logprob: -10.890938758850098

Token 175: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0029175723902881145
    2. '[j' → logprob: -5.877917766571045
    3. '[' → logprob: -10.002917289733887
    4. '[i' → logprob: -10.252917289733887
    5. '[s' → logprob: -12.002917289733887
    6. '[N' → logprob: -12.002917289733887
    7. '```' → logprob: -12.627917289733887
    8. ')' → logprob: -13.002917289733887
    9. 's' → logprob: -13.002917289733887
    10. ']' → logprob: -13.127917289733887

Token 176: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.3135053217411041
    2. '[i' → logprob: -1.3135052919387817
    3. '[' → logprob: -9.563505172729492
    4. 'j' → logprob: -9.813505172729492
    5. 'i' → logprob: -10.063505172729492
    6. ' [' → logprob: -10.938505172729492
    7. '][' → logprob: -11.313505172729492
    8. ')[' → logprob: -11.438505172729492
    9. '[
' → logprob: -12.688505172729492
    10. '[k' → logprob: -12.688505172729492

Token 177: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2529318332672119
    2. ']' → logprob: -1.502931833267212
    3. '+' → logprob: -7.127931594848633
    4. '+j' → logprob: -9.252931594848633
    5. ' ]' → logprob: -10.377931594848633
    6. '[j' → logprob: -10.627931594848633
    7. '[' → logprob: -11.252931594848633
    8. ' +' → logprob: -11.502931594848633
    9. '+]' → logprob: -12.002931594848633
    10. ']+=' → logprob: -12.377931594848633

Token 178: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0011709370883181691
    2. ' primes' → logprob: -6.751171112060547
    3. 'prime' → logprob: -14.626171112060547
    4. '(pr' → logprob: -16.376171112060547
    5. 'prim' → logprob: -16.751171112060547
    6. ' pr' → logprob: -16.876171112060547
    7. ' ' → logprob: -17.376171112060547
    8. 'pri' → logprob: -17.501171112060547
    9. '	pr' → logprob: -17.501171112060547
    10. 'pro' → logprob: -17.751171112060547

Token 179: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -7.719917630311102e-05
    2. 'ime' → logprob: -10.500077247619629
    3. 'mes' → logprob: -11.500077247619629
    4. '[' → logprob: -12.250077247619629
    5. '#' → logprob: -12.500077247619629
    6. 'im' → logprob: -12.875077247619629
    7. '

' → logprob: -12.875077247619629
    8. 'omes' → logprob: -12.875077247619629
    9. '{' → logprob: -13.312577247619629
    10. '<' → logprob: -13.562577247619629

Token 180: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006471486412920058
    2. '[j' → logprob: -7.625647068023682
    3. 's' → logprob: -8.87564754486084
    4. 'j' → logprob: -12.37564754486084
    5. '```' → logprob: -12.62564754486084
    6. 'M' → logprob: -13.25064754486084
    7. '[' → logprob: -13.87564754486084
    8. '`' → logprob: -13.87564754486084
    9. ']' → logprob: -14.00064754486084
    10. '
' → logprob: -14.37564754486084

Token 181: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.8921695047756657e-05
    2. 'j' → logprob: -10.875028610229492
    3. '][' → logprob: -12.125028610229492
    4. '[' → logprob: -12.625028610229492
    5. ']' → logprob: -14.875028610229492
    6. '[
' → logprob: -15.250028610229492
    7. '[i' → logprob: -15.375028610229492
    8. '])' → logprob: -15.500028610229492
    9. ')' → logprob: -16.875028610229492
    10. ' [' → logprob: -17.250028610229492

Token 182: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020246754866093397
    2. ' )' → logprob: -9.000202178955078
    3. ')
' → logprob: -10.000202178955078
    4. '])' → logprob: -11.000202178955078
    5. '))' → logprob: -12.125202178955078
    6. '   ' → logprob: -12.375202178955078
    7. '+' → logprob: -13.625202178955078
    8. ' ' → logprob: -14.125202178955078
    9. '>)' → logprob: -14.750202178955078
    10. '+)' → logprob: -14.750202178955078

Token 183: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015883026644587517
    2. '   ' → logprob: -4.765882968902588
    3. '
' → logprob: -5.015882968902588
    4. ' sums' → logprob: -8.265883445739746
    5. '    
' → logprob: -8.640883445739746
    6. 'if' → logprob: -10.265883445739746
    7. ' ' → logprob: -10.640883445739746
    8. ',' → logprob: -11.140883445739746
    9. 'return' → logprob: -11.390883445739746
    10. 'sum' → logprob: -11.390883445739746

Token 185: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.06206347420811653
    2. '.' → logprob: -2.812063455581665
    3. '=' → logprob: -9.312063217163086
    4. 'sort' → logprob: -13.687063217163086
    5. ' =' → logprob: -13.812063217163086
    6. '.s' → logprob: -13.937063217163086
    7. '.=' → logprob: -13.937063217163086
    8. '.append' → logprob: -14.312063217163086
    9. ' .' → logprob: -14.437063217163086
    10. '.extend' → logprob: -15.437063217163086

Token 186: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03451155126094818
    2. '   ' → logprob: -3.6595115661621094
    3. '<|end|>' → logprob: -5.284511566162109
    4. '    
' → logprob: -6.159511566162109
    5. '  
' → logprob: -7.409511566162109
    6. '
' → logprob: -9.53451156616211
    7. '<|end|>' → logprob: -9.65951156616211
    8. ' 
' → logprob: -9.65951156616211
    9. '   
' → logprob: -9.90951156616211
    10. ',' → logprob: -10.28451156616211

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022191671654582024
    2. '
' → logprob: -4.522191524505615
    3. 'idx' → logprob: -5.647191524505615
    4. 'for' → logprob: -6.147191524505615
    5. 'i' → logprob: -6.522191524505615
    6. '    
' → logprob: -6.897191524505615
    7. ' for' → logprob: -7.022191524505615
    8. 'pos' → logprob: -8.022192001342773
    9. 'count' → logprob: -8.022192001342773
    10. 'def' → logprob: -8.147192001342773

Token 188: ' return' (ID: 622)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7234269380569458
    2. 'idx' → logprob: -1.0984269380569458
    3. 'pos' → logprob: -2.7234268188476562
    4. 'l' → logprob: -2.7234268188476562
    5. 'lo' → logprob: -4.598426818847656
    6. '   ' → logprob: -4.598426818847656
    7. 'low' → logprob: -4.848426818847656
    8. ' left' → logprob: -5.723426818847656
    9. 'res' → logprob: -5.848426818847656
    10. 'count' → logprob: -5.973426818847656

Token 189: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6188679337501526
    2. 'bis' → logprob: -0.9938679337501526
    3. ' sums' → logprob: -2.868867874145508
    4. ' bis' → logprob: -3.493867874145508
    5. 'sum' → logprob: -6.118867874145508
    6. 'len' → logprob: -6.993867874145508
    7. 'b' → logprob: -8.618867874145508
    8. 'bs' → logprob: -9.118867874145508
    9. ' ' → logprob: -9.118867874145508
    10. 'binary' → logprob: -9.493867874145508

Token 190: '[P' (ID: 132164)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18150654435157776
    2. ']' → logprob: -1.8065065145492554
    3. '])' → logprob: -6.681506633758545
    4. ' -' → logprob: -7.806506633758545
    5. ')' → logprob: -9.931506156921387
    6. ']-' → logprob: -10.806506156921387
    7. ')]' → logprob: -11.431506156921387
    8. ' ]' → logprob: -12.056506156921387
    9. '[' → logprob: -12.556506156921387
    10. '`]' → logprob: -13.556506156921387

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. ']' → logprob: -16.500001907348633
    4. ')' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '```' → logprob: -18.375001907348633
    7. '0' → logprob: -18.687501907348633
    8. '2' → logprob: -18.937501907348633
    9. '  ' → logprob: -19.500001907348633
    10. '۱' → logprob: -19.812501907348633

Token 193: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5760626196861267
    2. ')' → logprob: -0.8260626196861267
    3. ')]' → logprob: -9.701062202453613
    4. '])' → logprob: -10.076062202453613
    5. '}' → logprob: -12.076062202453613
    6. ' ]' → logprob: -12.326062202453613
    7. ' )' → logprob: -12.576062202453613
    8. '<|end|>' → logprob: -13.326062202453613
    9. '']' → logprob: -13.951062202453613
    10. ']
' → logprob: -14.201062202453613

Token 194: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' line' (ID: 2543)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2671108841896057
    2. ' line' → logprob: -1.892110824584961
    3. ' i' → logprob: -3.267110824584961
    4. ' N' → logprob: -3.267110824584961
    5. '_' → logprob: -5.517110824584961
    6. ' ' → logprob: -6.392110824584961
    7. ' n' → logprob: -8.017110824584961
    8. ' x' → logprob: -8.017110824584961
    9. ' arg' → logprob: -8.017110824584961
    10. ' num' → logprob: -8.892110824584961

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059648193418979645
    2. 'in' → logprob: -5.130964756011963
    3. ' ' → logprob: -10.380965232849121
    4. '	in' → logprob: -13.880965232849121
    5. 's' → logprob: -14.380965232849121
    6. '  ' → logprob: -14.505965232849121
    7. ' ' → logprob: -14.630965232849121
    8. '_' → logprob: -15.005965232849121
    9. 'line' → logprob: -15.005965232849121
    10. '=' → logprob: -15.130965232849121

Token 197: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889727503061295
    2. ' sys' → logprob: -2.57889723777771
    3. '=sys' → logprob: -11.953897476196289
    4. '(sys' → logprob: -14.578897476196289
    5. '	sys' → logprob: -14.578897476196289
    6. 'stdin' → logprob: -15.828897476196289
    7. 's' → logprob: -18.57889747619629
    8. 'input' → logprob: -18.70389747619629
    9. 'iter' → logprob: -18.82889747619629
    10. 'import' → logprob: -19.07889747619629

Token 198: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.12823869287967682
    2. 'stdin' → logprob: -2.1282386779785156
    3. 'in' → logprob: -7.253238677978516
    4. '(stdin' → logprob: -7.878238677978516
    5. ' stdin' → logprob: -9.003238677978516
    6. 'import' → logprob: -10.253238677978516
    7. '.readline' → logprob: -10.753238677978516
    8. 'input' → logprob: -10.878238677978516
    9. ' in' → logprob: -12.003238677978516
    10. '.readlines' → logprob: -12.253238677978516

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011547120288014412
    2. '.readline' → logprob: -4.886547088623047
    3. '.strip' → logprob: -6.136547088623047
    4. '.readlines' → logprob: -7.136547088623047
    5. ' in' → logprob: -8.011547088623047
    6. '.rstrip' → logprob: -8.386547088623047
    7. 'in' → logprob: -9.136547088623047
    8. ':
' → logprob: -9.386547088623047
    9. 'rstrip' → logprob: -10.386547088623047
    10. '.' → logprob: -10.386547088623047

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012567223981022835
    2. 'N' → logprob: -5.262567043304443
    3. 'n' → logprob: -5.512567043304443
    4. '    
' → logprob: -7.387567043304443
    5. ' n' → logprob: -7.637567043304443
    6. '.strip' → logprob: -7.637567043304443
    7. ' N' → logprob: -7.887567043304443
    8. ' if' → logprob: -8.637567520141602
    9. 'if' → logprob: -9.012567520141602
    10. '.' → logprob: -9.262567520141602

Token 201: ' if' (ID: 538)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6922184228897095
    2. 'n' → logprob: -1.1922184228897095
    3. 'if' (adapté à ' if') → logprob: -2.31721830368042
    4. ' if' → logprob: -2.94221830368042
    5. 'line' → logprob: -4.06721830368042
    6. '   ' → logprob: -4.81721830368042
    7. ' n' → logprob: -4.94221830368042
    8. ' line' → logprob: -5.44221830368042
    9. ' N' → logprob: -5.69221830368042
    10. 'a' → logprob: -6.19221830368042

Token 202: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0493139773607254
    2. ' line' → logprob: -3.049314022064209
    3. 'not' → logprob: -7.299314022064209
    4. 'line' → logprob: -10.29931354522705
    5. ' ' → logprob: -11.04931354522705
    6. ' ' → logprob: -15.29931354522705
    7. '=line' → logprob: -15.29931354522705
    8. '#line' → logprob: -15.92431354522705
    9. '	line' → logprob: -16.424314498901367
    10. '	not' → logprob: -17.049314498901367

Token 203: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.02423686720430851
    2. '.' → logprob: -3.7742369174957275
    3. '.startswith' → logprob: -7.524236679077148
    4. '==' → logprob: -8.524236679077148
    5. '.rstrip' → logprob: -8.649236679077148
    6. 'strip' → logprob: -10.024236679077148
    7. ' ==' → logprob: -11.399236679077148
    8. '().' → logprob: -12.274236679077148
    9. '=' → logprob: -12.399236679077148
    10. '.chomp' → logprob: -12.649236679077148

Token 204: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.44528594613075256
    2. '==' → logprob: -1.1952859163284302
    3. '()' → logprob: -3.1952860355377197
    4. ' ==' → logprob: -4.320285797119141
    5. '():' → logprob: -6.070285797119141
    6. ':' → logprob: -8.94528579711914
    7. '()=="' → logprob: -10.94528579711914
    8. ')==' → logprob: -11.19528579711914
    9. ']==' → logprob: -12.07028579711914
    10. '():
' → logprob: -12.82028579711914

Token 205: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14309614896774292
    2. ' ==' → logprob: -2.0180962085723877
    3. ':' → logprob: -7.893095970153809
    4. '=' → logprob: -11.268095970153809
    5. '=='' → logprob: -11.893095970153809
    6. '()==' → logprob: -11.893095970153809
    7. '>' → logprob: -12.018095970153809
    8. ')==' → logprob: -12.768095970153809
    9. '==
' → logprob: -12.893095970153809
    10. '=="' → logprob: -13.143095970153809

Token 206: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.7825667858123779
    2. '""' → logprob: -1.282566785812378
    3. '"":' → logprob: -1.782566785812378
    4. '"' → logprob: -2.532566785812378
    5. ''' → logprob: -4.032567024230957
    6. ''ex' → logprob: -10.657567024230957
    7. ''end' → logprob: -11.532567024230957
    8. ' ""' → logprob: -12.157567024230957
    9. ' "' → logprob: -12.282567024230957
    10. ' '' → logprob: -13.282567024230957

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01608903892338276
    2. '   ' → logprob: -4.141088962554932
    3. ':' → logprob: -11.14108943939209
    4. '	break' → logprob: -12.14108943939209
    5. '      ' → logprob: -12.26608943939209
    6. '	   ' → logprob: -12.39108943939209
    7. ' break' → logprob: -12.51608943939209
    8. '   ' → logprob: -12.64108943939209
    9. '     ' → logprob: -12.76608943939209
    10. '	' → logprob: -12.76608943939209

Token 208: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.13337142765522003
    2. ' break' → logprob: -2.133371353149414
    3. '   ' → logprob: -5.383371353149414
    4. '	break' → logprob: -6.508371353149414
    5. '       ' → logprob: -8.008371353149414
    6. '_break' → logprob: -13.008371353149414
    7. '
' → logprob: -13.258371353149414
    8. '```' → logprob: -14.258371353149414
    9. ' ' → logprob: -14.633371353149414
    10. '           ' → logprob: -15.008371353149414

Token 209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001953018014319241
    2. '    
' → logprob: -6.251953125
    3. '
' → logprob: -12.001953125
    4. 'n' → logprob: -12.751953125
    5. '  
' → logprob: -12.751953125
    6. ' parts' → logprob: -12.876953125
    7. '   
' → logprob: -13.251953125
    8. 'N' → logprob: -13.376953125
    9. ' N' → logprob: -13.501953125
    10. 'tokens' → logprob: -14.001953125

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026359455659985542
    2. 'N' → logprob: -6.877635955810547
    3. 'n' → logprob: -7.252635955810547
    4. '    
' → logprob: -8.127635955810547
    5. 'tokens' → logprob: -8.127635955810547
    6. ' parts' → logprob: -9.502635955810547
    7. 'parts' → logprob: -9.752635955810547
    8. ' n' → logprob: -10.127635955810547
    9. 'line' → logprob: -10.252635955810547
    10. ' N' → logprob: -11.002635955810547

Token 211: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.00035060103982686996
    2. 'n' → logprob: -8.000350952148438
    3. '   ' → logprob: -11.875350952148438
    4. ' N' → logprob: -11.875350952148438
    5. 'parts' → logprob: -14.000350952148438
    6. 'args' → logprob: -16.125350952148438
    7. 'a' → logprob: -16.125350952148438
    8. ' parts' → logprob: -17.000350952148438
    9. ' n' → logprob: -17.250350952148438
    10. 'tokens' → logprob: -17.500350952148438

Token 212: ',P' (ID: 64255)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004707565065473318
    2. ',P' → logprob: -5.379707336425781
    3. ' ,' → logprob: -9.504707336425781
    4. ',int' → logprob: -12.379707336425781
    5. ',N' → logprob: -13.004707336425781
    6. '=' → logprob: -13.254707336425781
    7. ',p' → logprob: -14.379707336425781
    8. ',I' → logprob: -14.504707336425781
    9. ',line' → logprob: -14.879707336425781
    10. 'P' → logprob: -15.254707336425781

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08914338797330856
    2. ' =' → logprob: -2.4641432762145996
    3. '=int' → logprob: -8.964143753051758
    4. ',' → logprob: -9.839143753051758
    5. '=line' → logprob: -11.089143753051758
    6. '=input' → logprob: -13.214143753051758
    7. '=

' → logprob: -13.464143753051758
    8. '＝' → logprob: -14.214143753051758
    9. '=N' → logprob: -14.214143753051758
    10. '   ' → logprob: -14.839143753051758

Token 214: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002475777640938759
    2. ' map' → logprob: -6.002475738525391
    3. 'line' → logprob: -16.62747573852539
    4. 'list' → logprob: -18.25247573852539
    5. '(map' → logprob: -19.25247573852539
    6. '	map' → logprob: -19.75247573852539
    7. '   ' → logprob: -20.25247573852539
    8. ' ' → logprob: -20.37747573852539
    9. 'm' → logprob: -20.75247573852539
    10. '.map' → logprob: -21.62747573852539

Token 215: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004931025905534625
    2. '(' → logprob: -8.000493049621582
    3. '(str' → logprob: -8.875493049621582
    4. 'int' → logprob: -11.125493049621582
    5. '(lambda' → logprob: -12.875493049621582
    6. 'str' → logprob: -15.875493049621582
    7. '<int' → logprob: -16.2504940032959
    8. '=int' → logprob: -16.2504940032959
    9. ' int' → logprob: -16.3754940032959
    10. '(list' → logprob: -16.8754940032959

Token 216: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.05318118631839752
    2. ',line' → logprob: -3.0531811714172363
    3. ',' → logprob: -5.428181171417236
    4. '(' → logprob: -9.803181648254395
    5. 'line' → logprob: -9.928181648254395
    6. '=line' → logprob: -10.178181648254395
    7. ' line' → logprob: -10.678181648254395
    8. '[line' → logprob: -11.803181648254395
    9. '#line' → logprob: -11.803181648254395
    10. ')' → logprob: -11.803181648254395

Token 217: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0034778357949107885
    2. '.strip' → logprob: -5.753478050231934
    3. '.split' → logprob: -8.128478050231934
    4. '.' → logprob: -12.628478050231934
    5. '()' → logprob: -13.753478050231934
    6. ' .' → logprob: -15.253478050231934
    7. '.readline' → logprob: -15.628478050231934
    8. ' ().' → logprob: -15.753478050231934
    9. 'strip' → logprob: -17.128477096557617
    10. '.rstrip' → logprob: -17.253477096557617

Token 218: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013903736136853695
    2. ')' → logprob: -4.763903617858887
    3. '()' → logprob: -5.263903617858887
    4. '())
' → logprob: -9.888903617858887
    5. '(' → logprob: -10.513903617858887
    6. '('' → logprob: -11.013903617858887
    7. ' ())' → logprob: -13.513903617858887
    8. '(','' → logprob: -13.763903617858887
    9. '()
' → logprob: -14.263903617858887
    10. '()))' → logprob: -14.263903617858887

Token 219: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.047996021807193756
    2. '   ' → logprob: -3.4229960441589355
    3. ' print' → logprob: -4.4229960441589355
    4. '
' → logprob: -6.1729960441589355
    5. '    
' → logprob: -9.422995567321777
    6. '	print' → logprob: -10.297995567321777
    7. '<|end|>' → logprob: -10.672995567321777
    8. '```' → logprob: -11.297995567321777
    9. '#print' → logprob: -12.672995567321777
    10. ' 
' → logprob: -12.797995567321777

Token 220: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5690089639974758e-05
    2. 'result' → logprob: -11.875015258789062
    3. ' print' → logprob: -12.000015258789062
    4. 'res' → logprob: -13.125015258789062
    5. '   ' → logprob: -15.750015258789062
    6. 'ans' → logprob: -16.125015258789062
    7. 'answer' → logprob: -16.125015258789062
    8. 'ret' → logprob: -16.875015258789062
    9. '    
' → logprob: -18.000015258789062
    10. '
' → logprob: -19.000015258789062

Token 221: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.048595886677503586
    2. 'N' → logprob: -3.048595905303955
    3. ' ' → logprob: -11.923595428466797
    4. ' (' → logprob: -14.048595428466797
    5. ' ' → logprob: -14.298595428466797
    6. '(' → logprob: -15.298595428466797
    7. '(N' → logprob: -16.173595428466797
    8. '	N' → logprob: -16.423595428466797
    9. ' not' → logprob: -16.798595428466797
    10. '   ' → logprob: -17.548595428466797

Token 222: '==-' (ID: 116197)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.555690586566925
    2. ' <' → logprob: -1.4306905269622803
    3. '==' → logprob: -1.8056905269622803
    4. '<' → logprob: -4.680690765380859
    5. ' <=' → logprob: -5.055690765380859
    6. ' >=' → logprob: -5.555690765380859
    7. '<=' → logprob: -6.805690765380859
    8. '>=' → logprob: -7.055690765380859
    9. ' >' → logprob: -7.430690765380859
    10. '=' → logprob: -8.30569076538086

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '-' → logprob: -15.375001907348633
    5. '2' → logprob: -15.687501907348633
    6. 'N' → logprob: -16.500001907348633
    7. '```' → logprob: -16.750001907348633
    8. '
' → logprob: -17.500001907348633
    9. '``' → logprob: -17.562501907348633
    10. '=' → logprob: -17.625001907348633

Token 224: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10023707896471024
    2. 'and' → logprob: -2.3502371311187744
    3. '	and' → logprob: -11.600236892700195
    4. '   ' → logprob: -11.725236892700195
    5. ' or' → logprob: -11.975236892700195
    6. ':' → logprob: -12.600236892700195
    7. ':
' → logprob: -13.600236892700195
    8. ' ' → logprob: -13.600236892700195
    9. ' a' → logprob: -14.100236892700195
    10. '    ' → logprob: -16.100236892700195

Token 225: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.023245595395565033
    2. ' P' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.148244857788086
    4. '   ' → logprob: -18.273244857788086
    5. '  ' → logprob: -18.523244857788086
    6. 'p' → logprob: -19.773244857788086
    7. '	P' → logprob: -20.773244857788086
    8. '<P' → logprob: -21.273244857788086
    9. ',P' → logprob: -21.273244857788086
    10. '0' → logprob: -21.898244857788086

Token 226: '==-' (ID: 116197)
  Prédit: '==-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.025665057823061943
    2. '==' → logprob: -3.775665044784546
    3. ' ==' → logprob: -6.025665283203125
    4. ']==' → logprob: -15.275665283203125
    5. '=="' → logprob: -15.650665283203125
    6. ')==' → logprob: -16.525665283203125
    7. '=='' → logprob: -16.650665283203125
    8. '()==' → logprob: -16.775665283203125
    9. '==
' → logprob: -16.900665283203125
    10. '=' → logprob: -17.650665283203125

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '-' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '```' → logprob: -16.625001907348633
    5. ' -' → logprob: -16.812501907348633
    6. '2' → logprob: -18.125001907348633
    7. '१' → logprob: -18.187501907348633
    8. '１' → logprob: -18.187501907348633
    9. '১' → logprob: -18.437501907348633
    10. '0' → logprob: -18.437501907348633

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032208364456892014
    2. ':
' → logprob: -3.5322084426879883
    3. '   ' → logprob: -6.157208442687988
    4. '       ' → logprob: -8.032208442687988
    5. ':return' → logprob: -12.282208442687988
    6. '	break' → logprob: -13.532208442687988
    7. ' :' → logprob: -13.907208442687988
    8. ' break' → logprob: -14.157208442687988
    9. ' ' → logprob: -14.532208442687988
    10. '    ' → logprob: -14.782208442687988

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003508368507027626
    2. '   ' → logprob: -5.753508567810059
    3. 'break' → logprob: -8.753508567810059
    4. ' break' → logprob: -8.878508567810059
    5. '	break' → logprob: -10.628508567810059
    6. '        
' → logprob: -12.753508567810059
    7. '<|end|>' → logprob: -13.128508567810059
    8. '    
' → logprob: -13.753508567810059
    9. '```' → logprob: -14.378508567810059
    10. '           ' → logprob: -14.628508567810059

Token 230: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.10037078708410263
    2. ' break' → logprob: -2.3503708839416504
    3. '   ' → logprob: -9.100370407104492
    4. '	break' → logprob: -9.975370407104492
    5. '       ' → logprob: -12.100370407104492
    6. '_break' → logprob: -15.975370407104492
    7. '    
' → logprob: -16.225370407104492
    8. '```' → logprob: -16.725370407104492
    9. '
' → logprob: -17.475370407104492
    10. 'Break' → logprob: -17.975370407104492

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09072015434503555
    2. 'print' → logprob: -2.5907201766967773
    3. ' print' → logprob: -4.840720176696777
    4. '    
' → logprob: -5.715720176696777
    5. '
' → logprob: -8.340720176696777
    6. '```' → logprob: -9.090720176696777
    7. '  
' → logprob: -9.215720176696777
    8. '<|end|>' → logprob: -9.590720176696777
    9. '	print' → logprob: -11.090720176696777
    10. ' 
' → logprob: -11.590720176696777

Token 232: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009560054168105125
    2. ' print' → logprob: -7.250956058502197
    3. '   ' → logprob: -8.375955581665039
    4. 'result' → logprob: -12.000955581665039
    5. '```' → logprob: -12.750955581665039
    6. '	print' → logprob: -13.250955581665039
    7. '    
' → logprob: -13.375955581665039
    8. '
' → logprob: -13.750955581665039
    9. '<|end|>' → logprob: -14.500955581665039
    10. 'output' → logprob: -14.625955581665039

Token 233: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011188744247192517
    2. 'result' → logprob: -9.25011157989502
    3. ' print' → logprob: -11.37511157989502
    4. 'res' → logprob: -12.75011157989502
    5. 'answer' → logprob: -14.50011157989502
    6. '   ' → logprob: -14.62511157989502
    7. 'ans' → logprob: -15.50011157989502
    8. 'ret' → logprob: -16.125112533569336
    9. '    
' → logprob: -17.000112533569336
    10. 'pr' → logprob: -17.750112533569336

Token 234: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0015126005746424198
    2. '(' → logprob: -6.50151252746582
    3. 'solve' → logprob: -11.62651252746582
    4. '(sol' → logprob: -14.12651252746582
    5. '(
' → logprob: -15.25151252746582
    6. ' solve' → logprob: -15.75151252746582
    7. '(solution' → logprob: -15.75151252746582
    8. '()' → logprob: -16.75151252746582
    9. ' (' → logprob: -17.12651252746582
    10. '(resolve' → logprob: -17.62651252746582

Token 235: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.002911384915933013
    2. 'solve' → logprob: -6.627911567687988
    3. 'ove' → logprob: -6.752911567687988
    4. 'l' → logprob: -9.002911567687988
    5. 'lf' → logprob: -9.002911567687988
    6. 've' → logprob: -10.252911567687988
    7. 'alve' → logprob: -10.502911567687988
    8. 'ol' → logprob: -10.877911567687988
    9. 'r' → logprob: -10.877911567687988
    10. 'olv' → logprob: -11.002911567687988

Token 236: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04868149757385254
    2. '(' → logprob: -3.0486814975738525
    3. ' (' → logprob: -9.423681259155273
    4. '(
' → logprob: -11.923681259155273
    5. ')' → logprob: -12.298681259155273
    6. '((' → logprob: -14.298681259155273
    7. ')(' → logprob: -14.298681259155273
    8. '(n' → logprob: -15.048681259155273
    9. '(`' → logprob: -16.548681259155273
    10. '(

' → logprob: -16.548681259155273

Token 237: ',P' (ID: 64255)
  Prédit: ',P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',P' → logprob: -0.055439017713069916
    2. ',' → logprob: -2.930438995361328
    3. ' ,' → logprob: -7.555438995361328
    4. ',p' → logprob: -11.180438995361328
    5. ',
' → logprob: -11.180438995361328
    6. ',K' → logprob: -13.430438995361328
    7. '   ' → logprob: -14.180438995361328
    8. ',S' → logprob: -14.430438995361328
    9. ',N' → logprob: -14.805438995361328
    10. ' ' → logprob: -15.180438995361328

Token 238: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.674858301877975e-05
    2. ')' → logprob: -9.250096321105957
    3. '))
' → logprob: -14.875096321105957
    4. ' ))' → logprob: -16.250097274780273
    5. ')))' → logprob: -16.500097274780273
    6. '()))' → logprob: -17.750097274780273
    7. ')
' → logprob: -19.375097274780273
    8. ' ' → logprob: -19.500097274780273
    9. '),' → logprob: -19.625097274780273
    10. '"))' → logprob: -20.875097274780273


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 236
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 124
Tokens correctement prédits (top 10): 199
Précision stricte (1ère position): 49.58%
Précision adaptée (1ère position): 52.54%
Précision (top 10): 84.32%
================================================================================
