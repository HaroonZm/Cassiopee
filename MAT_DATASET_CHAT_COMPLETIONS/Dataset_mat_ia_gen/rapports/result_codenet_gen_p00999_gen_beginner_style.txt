================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    a,b,c,d,e = map(int,input().split())
    if a==0 and b==0 and c==0 and d==0 and e==0:
        break
    na,nb,nc= map(int,input().split())
    total = na*a + nb*b + nc*c
    n = na + nb + nc
    res = total
    # On essaie toutes les tailles de paquet possibles entre d et n
    for k in range(d,n+1):
        nb_sets = n // k
        rest = n % k
        # Coût si on fait nb_sets groupes de taille k et un reste
        price = nb_sets * k * e + rest * e * d if rest < d else nb_sets * k * e + rest * e * rest
        # Mais on ne sait pas si price est meilleur que total, on compare
        if rest < d:
            rest_price = min(rest*a,rest*b,rest*c)
            # ce n'est pas correct car on ne sait pas comment répartir les restants
            # la solution simple: comparer price avec total directement
            price = nb_sets * k * e + rest * a # au pire prix normal minimum par DVD, on ne sait pas
        else:
            price = nb_sets * k * e + rest * e * rest
        # En fait cette partie est trop compliquée, on va juste comparer price avec res et total
        price = nb_sets * k * e + rest * e * (d if rest<d else rest)
        if price < res:
            res = price
    # On va aussi comparer avec la méthode sans set : total
    if total < res:
        res = total
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4641891121864319
    2. '    ' → logprob: -2.089189052581787
    3. ' ' → logprob: -2.714189052581787
    4. '    
' → logprob: -3.089189052581787
    5. '\n' → logprob: -3.214189052581787
    6. '\' → logprob: -3.464189052581787
    7. ' 
' → logprob: -4.089189052581787
    8. '```' → logprob: -4.589189052581787
    9. '  
' → logprob: -4.964189052581787
    10. '     
' → logprob: -5.089189052581787

Token 4: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ',b' (ID: 17568)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8530831933021545
    2. '=' → logprob: -1.3530831336975098
    3. 'd' → logprob: -1.8530831336975098
    4. '   ' → logprob: -3.6030831336975098
    5. '+' → logprob: -3.7280831336975098
    6. ' +=' → logprob: -4.22808313369751
    7. ' =' → logprob: -4.22808313369751
    8. 'r' → logprob: -4.35308313369751
    9. 'a' → logprob: -4.72808313369751
    10. '    ' → logprob: -4.85308313369751

Token 6: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8322003483772278
    2. ' =' → logprob: -0.8322003483772278
    3. ',' → logprob: -2.082200288772583
    4. ' ,' → logprob: -5.582200527191162
    5. ')' → logprob: -7.207200527191162
    6. ' ' → logprob: -8.332200050354004
    7. '[' → logprob: -9.207200050354004
    8. '```' → logprob: -9.582200050354004
    9. '<|end|>' → logprob: -9.832200050354004
    10. '   ' → logprob: -10.457200050354004

Token 7: ',d' (ID: 26159)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15686337649822235
    2. '=' → logprob: -2.5318634510040283
    3. ',' → logprob: -2.7818634510040283
    4. ' ,' → logprob: -5.906863212585449
    5. ' ' → logprob: -8.15686321258545
    6. ')' → logprob: -8.40686321258545
    7. '   ' → logprob: -8.65686321258545
    8. '<|end|>' → logprob: -9.53186321258545
    9. '  ' → logprob: -9.65686321258545
    10. '    ' → logprob: -9.90686321258545

Token 8: ',e' (ID: 43127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3162245452404022
    2. '=' → logprob: -1.4412245750427246
    3. ',' → logprob: -3.4412245750427246
    4. ' ,' → logprob: -6.691224575042725
    5. ')' → logprob: -8.191224098205566
    6. '   ' → logprob: -8.316224098205566
    7. ' ' → logprob: -8.316224098205566
    8. '<|end|>' → logprob: -8.441224098205566
    9. '```' → logprob: -9.941224098205566
    10. '  ' → logprob: -10.441224098205566

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27834171056747437
    2. '=' → logprob: -1.7783417701721191
    3. ',' → logprob: -2.653341770172119
    4. ' ,' → logprob: -6.403341770172119
    5. ' ' → logprob: -7.778341770172119
    6. '   ' → logprob: -7.778341770172119
    7. ')' → logprob: -7.778341770172119
    8. '<|end|>' → logprob: -8.153341293334961
    9. ',f' → logprob: -8.903341293334961
    10. '```' → logprob: -9.903341293334961

Token 10: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.9021979570388794
    2. ' input' → logprob: -1.0271979570388794
    3. 'input' → logprob: -2.27719783782959
    4. 'map' → logprob: -3.02719783782959
    5. ' ' → logprob: -3.27719783782959
    6. '0' → logprob: -3.40219783782959
    7. '1' → logprob: -5.65219783782959
    8. ' random' → logprob: -6.27719783782959
    9. ' f' → logprob: -6.40219783782959
    10. ' [' → logprob: -6.77719783782959

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40216904878616333
    2. '<|end|>' → logprob: -1.5271689891815186
    3. '(int' → logprob: -2.9021689891815186
    4. '(str' → logprob: -3.6521689891815186
    5. '(lambda' → logprob: -3.6521689891815186
    6. '<|end|>' → logprob: -6.152169227600098
    7. ')' → logprob: -7.152169227600098
    8. '()' → logprob: -7.402169227600098
    9. '```' → logprob: -7.902169227600098
    10. 'int' → logprob: -8.214669227600098

Token 12: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.024422552436590195
    2. '(' → logprob: -3.8994226455688477
    3. ')' → logprob: -6.024422645568848
    4. 'input' → logprob: -7.024422645568848
    5. ' input' → logprob: -8.524422645568848
    6. '(str' → logprob: -9.399422645568848
    7. ' (' → logprob: -9.399422645568848
    8. '(range' → logprob: -10.274422645568848
    9. '(user' → logprob: -10.399422645568848
    10. ' )' → logprob: -10.524422645568848

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22954033315181732
    2. '())' → logprob: -1.6045403480529785
    3. '().' → logprob: -6.2295403480529785
    4. '(' → logprob: -7.6045403480529785
    5. '('' → logprob: -7.9795403480529785
    6. ')' → logprob: -7.9795403480529785
    7. '());' → logprob: -8.10453987121582
    8. '();)' → logprob: -8.85453987121582
    9. '(()' → logprob: -9.22953987121582
    10. '()))' → logprob: -9.35453987121582

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020890454470645636
    2. 'strip' → logprob: -8.500208854675293
    3. 'rstrip' → logprob: -12.500208854675293
    4. ' split' → logprob: -13.625208854675293
    5. '(split' → logprob: -14.625208854675293
    6. 'replace' → logprob: -17.00020980834961
    7. 'spl' → logprob: -17.00020980834961
    8. '```' → logprob: -18.75020980834961
    9. 'read' → logprob: -19.37520980834961
    10. 'startswith' → logprob: -19.75020980834961

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08994046598672867
    2. ')' → logprob: -2.5899405479431152
    3. '()' → logprob: -5.214940547943115
    4. '()))' → logprob: -5.464940547943115
    5. '))' → logprob: -6.714940547943115
    6. ' ())' → logprob: -10.714940071105957
    7. '(' → logprob: -10.839940071105957
    8. '`)' → logprob: -11.214940071105957
    9. '();)' → logprob: -12.089940071105957
    10. '()),' → logprob: -12.214940071105957

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7475141286849976
    2. '   ' → logprob: -0.8725141286849976
    3. '<|end|>' → logprob: -2.622514247894287
    4. ' if' → logprob: -3.997514247894287
    5. ')' → logprob: -5.372514247894287
    6. '```' → logprob: -5.747514247894287
    7. ' ' → logprob: -6.247514247894287
    8. ',' → logprob: -6.247514247894287
    9. ':
' → logprob: -6.622514247894287
    10. '\n' → logprob: -6.997514247894287

Token 17: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1522878408432007
    2. '<|end|>' → logprob: -1.1522878408432007
    3. ':' → logprob: -1.7772878408432007
    4. ' if' → logprob: -2.5272879600524902
    5. ' ' → logprob: -3.4022879600524902
    6. ',' → logprob: -3.9022879600524902
    7. ')' → logprob: -4.27728796005249
    8. '\n' → logprob: -4.52728796005249
    9. 'if' (adapté à ' if') → logprob: -4.52728796005249
    10. '  ' → logprob: -4.90228796005249

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.181938037276268
    2. 'a' → logprob: -1.8069380521774292
    3. ' not' → logprob: -6.556938171386719
    4. ' ' → logprob: -7.306938171386719
    5. '(a' → logprob: -9.806938171386719
    6. 'not' → logprob: -11.306938171386719
    7. '	a' → logprob: -11.931938171386719
    8. ' (' → logprob: -12.056938171386719
    9. ' e' → logprob: -12.681938171386719
    10. ' b' → logprob: -12.806938171386719

Token 19: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04318131133913994
    2. '==' → logprob: -3.9181814193725586
    3. ' <' → logprob: -4.168181419372559
    4. '<' → logprob: -6.418181419372559
    5. ' <=' → logprob: -6.668181419372559
    6. ' >' → logprob: -6.668181419372559
    7. ' !=' → logprob: -6.793181419372559
    8. ' ' → logprob: -7.043181419372559
    9. ' >=' → logprob: -8.168181419372559
    10. '>' → logprob: -9.418181419372559

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.058987054973840714
    2. ' ' → logprob: -3.0589871406555176
    3. 'b' → logprob: -4.683987140655518
    4. '-' → logprob: -7.183987140655518
    5. ' b' → logprob: -8.18398666381836
    6. ' -' → logprob: -10.68398666381836
    7. 'd' → logprob: -11.30898666381836
    8. '1' → logprob: -11.68398666381836
    9. 'e' → logprob: -11.68398666381836
    10. '```' → logprob: -13.05898666381836

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01572885364294052
    2. 'and' → logprob: -4.265728950500488
    3. ':' → logprob: -6.515728950500488
    4. ' ' → logprob: -9.765728950500488
    5. '   ' → logprob: -11.140728950500488
    6. ' a' → logprob: -12.515728950500488
    7. ' :' → logprob: -13.390728950500488
    8. ' &' → logprob: -13.390728950500488
    9. '    ' → logprob: -13.515728950500488
    10. '	and' → logprob: -13.640728950500488

Token 22: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20147453248500824
    2. 'b' → logprob: -1.7014745473861694
    3. ' ' → logprob: -9.7014741897583
    4. '	b' → logprob: -17.326475143432617
    5. '<|end|>' → logprob: -18.576475143432617
    6. ' б' → logprob: -18.826475143432617
    7. '  ' → logprob: -18.951475143432617
    8. 'a' → logprob: -19.201475143432617
    9. '_b' → logprob: -19.701475143432617
    10. ' a' → logprob: -19.826475143432617

Token 23: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14384675025939941
    2. ' ==' → logprob: -2.0188467502593994
    3. '<|end|>' → logprob: -6.89384651184082
    4. '=' → logprob: -10.01884651184082
    5. ' ' → logprob: -10.01884651184082
    6. '<|end|>' → logprob: -10.26884651184082
    7. ' and' → logprob: -11.76884651184082
    8. ')==' → logprob: -12.76884651184082
    9. '()==' → logprob: -12.89384651184082
    10. ']==' → logprob: -13.01884651184082

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013296448159962893
    2. ' ' → logprob: -6.62632942199707
    3. 'c' → logprob: -12.62632942199707
    4. 'd' → logprob: -16.12632942199707
    5. ' c' → logprob: -16.37632942199707
    6. 'e' → logprob: -17.06382942199707
    7. '۰' → logprob: -17.50132942199707
    8. 'and' → logprob: -17.62632942199707
    9. '  ' → logprob: -17.68882942199707
    10. '1' → logprob: -17.68882942199707

Token 25: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009765769354999065
    2. 'and' → logprob: -4.634765625
    3. ' ' → logprob: -12.259765625
    4. '```' → logprob: -13.134765625
    5. '	and' → logprob: -13.759765625
    6. '<|end|>' → logprob: -14.009765625
    7. '   ' → logprob: -14.759765625
    8. '    ' → logprob: -15.384765625
    9. '<|end|>' → logprob: -15.509765625
    10. '``' → logprob: -16.134765625

Token 26: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1797802895307541
    2. 'c' → logprob: -1.8047802448272705
    3. ' ' → logprob: -10.429780006408691
    4. '  ' → logprob: -13.179780006408691
    5. '0' → logprob: -13.179780006408691
    6. '	c' → logprob: -14.179780006408691
    7. '   ' → logprob: -14.554780006408691
    8. '_c' → logprob: -15.304780006408691
    9. ' and' → logprob: -15.304780006408691
    10. '    ' → logprob: -15.929780006408691

Token 27: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0038611164782196283
    2. ' ==' → logprob: -5.628860950469971
    3. ' and' → logprob: -9.003861427307129
    4. 'and' → logprob: -9.878861427307129
    5. '<|end|>' → logprob: -10.003861427307129
    6. '=' → logprob: -10.878861427307129
    7. '===' → logprob: -12.128861427307129
    8. '()==' → logprob: -12.253861427307129
    9. ' ' → logprob: -12.628861427307129
    10. '0' → logprob: -13.128861427307129

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -16.125045776367188
    4. ' and' → logprob: -16.750045776367188
    5. 'and' → logprob: -17.000045776367188
    6. '  ' → logprob: -17.375045776367188
    7. '1' → logprob: -17.500045776367188
    8. '```' → logprob: -18.312545776367188
    9. 'd' → logprob: -18.500045776367188
    10. '   ' → logprob: -18.562545776367188

Token 29: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04306073486804962
    2. 'and' → logprob: -3.168060779571533
    3. ' ' → logprob: -9.793060302734375
    4. '<|end|>' → logprob: -13.668060302734375
    5. '```' → logprob: -14.043060302734375
    6. '   ' → logprob: -14.168060302734375
    7. '	and' → logprob: -14.418060302734375
    8. '<|end|>' → logprob: -14.918060302734375
    9. ' и' → logprob: -15.168060302734375
    10. '    ' → logprob: -15.168060302734375

Token 30: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.030791403725743294
    2. 'd' → logprob: -3.5307915210723877
    3. ' ' → logprob: -7.280791282653809
    4. '0' → logprob: -8.030791282653809
    5. '<|end|>' → logprob: -10.905791282653809
    6. '	d' → logprob: -12.780791282653809
    7. '  ' → logprob: -13.905791282653809
    8. ' and' → logprob: -13.905791282653809
    9. '```' → logprob: -14.155791282653809
    10. '   ' → logprob: -14.155791282653809

Token 31: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0017170661594718695
    2. ' ==' → logprob: -6.3767170906066895
    3. '<|end|>' → logprob: -12.251716613769531
    4. '===' → logprob: -13.251716613769531
    5. '=' → logprob: -13.376716613769531
    6. '()==' → logprob: -13.626716613769531
    7. ')==' → logprob: -13.876716613769531
    8. ']==' → logprob: -14.251716613769531
    9. '<|end|>' → logprob: -14.501716613769531
    10. '=='' → logprob: -14.501716613769531

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '1' → logprob: -17.437623977661133
    4. ')' → logprob: -17.625123977661133
    5. '  ' → logprob: -17.875123977661133
    6. '۰' → logprob: -18.125123977661133
    7. '   ' → logprob: -18.375123977661133
    8. '-' → logprob: -18.500123977661133
    9. '<|end|>' → logprob: -18.562623977661133
    10. '```' → logprob: -18.750123977661133

Token 33: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005938636604696512
    2. 'and' → logprob: -5.130938529968262
    3. ' ' → logprob: -11.880938529968262
    4. ' a' → logprob: -14.255938529968262
    5. '	and' → logprob: -14.505938529968262
    6. ' ' → logprob: -14.880938529968262
    7. '```' → logprob: -15.130938529968262
    8. ' и' → logprob: -15.380938529968262
    9. '<|end|>' → logprob: -15.380938529968262
    10. '   ' → logprob: -15.630938529968262

Token 34: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.1002175584435463
    2. 'e' → logprob: -2.350217580795288
    3. '0' → logprob: -11.975217819213867
    4. ' ' → logprob: -12.475217819213867
    5. '	e' → logprob: -15.100217819213867
    6. ' ' → logprob: -15.100217819213867
    7. ''e' → logprob: -16.600217819213867
    8. '   ' → logprob: -16.975217819213867
    9. '`' → logprob: -17.100217819213867
    10. ')e' → logprob: -17.225217819213867

Token 35: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1602998673915863
    2. ' ==' → logprob: -1.9102998971939087
    3. '<|end|>' → logprob: -10.410300254821777
    4. '=' → logprob: -10.785300254821777
    5. ')==' → logprob: -12.410300254821777
    6. ']==' → logprob: -12.535300254821777
    7. ' ' → logprob: -12.785300254821777
    8. '==
' → logprob: -12.910300254821777
    9. '()==' → logprob: -12.910300254821777
    10. ' ' → logprob: -13.285300254821777

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007110013975761831
    2. ' ' → logprob: -7.250710964202881
    3. '   ' → logprob: -15.313211441040039
    4. '۰' → logprob: -15.875711441040039
    5. '  ' → logprob: -16.18821144104004
    6. '```' → logprob: -16.25071144104004
    7. '０' → logprob: -16.93821144104004
    8. ''' → logprob: -17.00071144104004
    9. ' ' → logprob: -17.06321144104004
    10. '1' → logprob: -17.18821144104004

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005203855689615011
    2. '       ' → logprob: -7.8755202293396
    3. ':
' → logprob: -9.375520706176758
    4. '   ' → logprob: -10.125520706176758
    5. ' :' → logprob: -11.875520706176758
    6. '):' → logprob: -12.500520706176758
    7. ':return' → logprob: -12.875520706176758
    8. '    ' → logprob: -14.625520706176758
    9. ':\' → logprob: -15.250520706176758
    10. ',' → logprob: -15.500520706176758

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007651951164007187
    2. '   ' → logprob: -7.375765323638916
    3. '\n' → logprob: -9.750764846801758
    4. ' break' → logprob: -10.500764846801758
    5. '     ' → logprob: -11.500764846801758
    6. '    ' → logprob: -11.750764846801758
    7. '      ' → logprob: -12.000764846801758
    8. '        ' → logprob: -12.375764846801758
    9. ':' → logprob: -12.625764846801758
    10. '<|end|>' → logprob: -12.750764846801758

Token 39: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5187579393386841
    2. '       ' → logprob: -1.018757939338684
    3. 'break' (adapté à ' break') → logprob: -3.1437578201293945
    4. '	break' → logprob: -7.8937578201293945
    5. '   ' → logprob: -8.768757820129395
    6. '```' → logprob: -11.393757820129395
    7. '        
' → logprob: -11.518757820129395
    8. '_break' → logprob: -12.018757820129395
    9. 'b' → logprob: -12.518757820129395
    10. 'Break' → logprob: -12.643757820129395

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14434204995632172
    2. '    
' → logprob: -2.3943419456481934
    3. '
' → logprob: -3.3943419456481934
    4. '\n' → logprob: -5.519341945648193
    5. '```' → logprob: -6.644341945648193
    6. '  
' → logprob: -7.269341945648193
    7. 'print' → logprob: -7.519341945648193
    8. '       ' → logprob: -7.644341945648193
    9. '<|end|>' → logprob: -8.144342422485352
    10. '\' → logprob: -8.269342422485352

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02050241455435753
    2. '    
' → logprob: -4.39550256729126
    3. '```' → logprob: -5.02050256729126
    4. '\n' → logprob: -7.77050256729126
    5. '
' → logprob: -8.520502090454102
    6. '<|end|>' → logprob: -9.020502090454102
    7. '       ' → logprob: -9.520502090454102
    8. '\' → logprob: -9.770502090454102
    9. 'print' → logprob: -9.770502090454102
    10. '``' → logprob: -9.895502090454102

Token 42: ' na' (ID: 898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03327101841568947
    2. ':' → logprob: -4.533270835876465
    3. '\n' → logprob: -4.908270835876465
    4. '    
' → logprob: -6.533270835876465
    5. 'n' → logprob: -6.658270835876465
    6. '<|end|>' → logprob: -6.908270835876465
    7. '       ' → logprob: -7.033270835876465
    8. ':
' → logprob: -7.158270835876465
    9. '
' → logprob: -7.158270835876465
    10. '```' → logprob: -7.158270835876465

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4392814338207245
    2. '=' → logprob: -1.6892814636230469
    3. 'me' → logprob: -2.314281463623047
    4. 'm' → logprob: -4.439281463623047
    5. 'x' → logprob: -4.439281463623047
    6. 'mes' → logprob: -5.064281463623047
    7. 't' → logprob: -5.189281463623047
    8. ',' → logprob: -5.439281463623047
    9. 'v' → logprob: -5.439281463623047
    10. 'ms' → logprob: -5.939281463623047

Token 44: 'nb' (ID: 7291)
  Prédit: 'nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.23158641159534454
    2. ' nb' → logprob: -1.6065864562988281
    3. '=' → logprob: -6.231586456298828
    4. '	nb' → logprob: -7.231586456298828
    5. 'b' → logprob: -7.356586456298828
    6. 'a' → logprob: -7.606586456298828
    7. '_nb' → logprob: -7.856586456298828
    8. ' =' → logprob: -8.106586456298828
    9. '```' → logprob: -8.481586456298828
    10. 'n' → logprob: -8.981586456298828

Token 45: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24752125144004822
    2. ' =' → logprob: -1.9975212812423706
    3. '=' → logprob: -3.122521162033081
    4. ',c' → logprob: -3.997521162033081
    5. ',e' → logprob: -3.997521162033081
    6. ' ,' → logprob: -7.12252140045166
    7. ',n' → logprob: -7.37252140045166
    8. ',d' → logprob: -8.37252140045166
    9. ',s' → logprob: -8.74752140045166
    10. ',C' → logprob: -8.74752140045166

Token 46: 'c' (ID: 66)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.4314687252044678
    2. 'a' → logprob: -1.1814687252044678
    3. ',e' → logprob: -4.931468963623047
    4. ',c' → logprob: -4.931468963623047
    5. ',' → logprob: -5.306468963623047
    6. 'e' → logprob: -5.431468963623047
    7. '=' → logprob: -5.556468963623047
    8. ' =' → logprob: -5.681468963623047
    9. '=a' → logprob: -6.056468963623047
    10. ',d' → logprob: -6.181468963623047

Token 47: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.534980058670044
    2. ',n' → logprob: -1.659980058670044
    3. ' =' → logprob: -2.034980058670044
    4. '=' → logprob: -2.534980058670044
    5. ',d' → logprob: -4.659979820251465
    6. ',e' → logprob: -6.534979820251465
    7. ' ,' → logprob: -7.284979820251465
    8. ',f' → logprob: -7.284979820251465
    9. '=n' → logprob: -7.784979820251465
    10. ',num' → logprob: -8.284979820251465

Token 48: ' map' (ID: 4014)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.27201488614082336
    2. 'a' → logprob: -1.772014856338501
    3. '0' → logprob: -3.522014856338501
    4. ' ' → logprob: -4.39701509475708
    5. ' sorted' → logprob: -5.02201509475708
    6. ' [' → logprob: -5.39701509475708
    7. ' (' → logprob: -5.52201509475708
    8. ' map' → logprob: -6.27201509475708
    9. '[' → logprob: -6.52201509475708
    10. '[a' → logprob: -6.52201509475708

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005253798794001341
    2. '(' → logprob: -5.255253791809082
    3. '<int' → logprob: -11.630253791809082
    4. 'int' → logprob: -12.380253791809082
    5. '[int' → logprob: -12.880253791809082
    6. '=int' → logprob: -13.755253791809082
    7. ' (' → logprob: -13.880253791809082
    8. '(lambda' → logprob: -13.880253791809082
    9. '(str' → logprob: -14.505253791809082
    10. '(
' → logprob: -15.380253791809082

Token 50: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0916682779788971
    2. ',input' → logprob: -2.7166683673858643
    3. ')' → logprob: -4.216668128967285
    4. '(' → logprob: -5.841668128967285
    5. '(int' → logprob: -6.091668128967285
    6. ',' → logprob: -7.466668128967285
    7. '=input' → logprob: -8.091668128967285
    8. ',int' → logprob: -8.216668128967285
    9. '()' → logprob: -8.591668128967285
    10. '```' → logprob: -9.966668128967285

Token 51: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.735893965815194e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -15.125017166137695
    4. ')' → logprob: -15.750017166137695
    5. ').' → logprob: -16.375017166137695
    6. '.' → logprob: -17.375017166137695
    7. '(' → logprob: -17.375017166137695
    8. '())' → logprob: -18.625017166137695
    9. '().
' → logprob: -18.625017166137695
    10. '()
' → logprob: -18.875017166137695

Token 52: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.4987974029500037e-05
    2. ' split' → logprob: -10.875024795532227
    3. ')' → logprob: -13.250024795532227
    4. 'strip' → logprob: -13.500024795532227
    5. 'plit' → logprob: -13.750024795532227
    6. '(split' → logprob: -14.500024795532227
    7. '().' → logprob: -15.875024795532227
    8. 's' → logprob: -15.875024795532227
    9. 'spl' → logprob: -16.000024795532227
    10. '()' → logprob: -16.125024795532227

Token 53: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1500466763973236
    2. '()' → logprob: -2.4000465869903564
    3. ')' → logprob: -3.0250465869903564
    4. '(' → logprob: -11.150046348571777
    5. ' ())' → logprob: -11.400046348571777
    6. '();)' → logprob: -11.775046348571777
    7. '`)' → logprob: -11.900046348571777
    8. '())
' → logprob: -12.275046348571777
    9. '(),' → logprob: -12.400046348571777
    10. '()))' → logprob: -13.025046348571777

Token 54: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.761771023273468
    2. '<|end|>' → logprob: -0.761771023273468
    3. '\n' → logprob: -3.0117709636688232
    4. '   ' → logprob: -5.261771202087402
    5. '<|end|>' → logprob: -6.261771202087402
    6. '[' → logprob: -6.761771202087402
    7. '\' → logprob: -6.761771202087402
    8. '()' → logprob: -7.011771202087402
    9. '```' → logprob: -7.011771202087402
    10. '    
' → logprob: -7.386771202087402

Token 55: ' total' (ID: 3609)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6025396585464478
    2. '=' → logprob: -1.3525396585464478
    3. ' +=' → logprob: -1.7275396585464478
    4. '+=' → logprob: -5.352539539337158
    5. '_' → logprob: -5.602539539337158
    6. ' -=' → logprob: -6.727539539337158
    7. ' ' → logprob: -6.977539539337158
    8. ')' → logprob: -7.102539539337158
    9. '+' → logprob: -7.102539539337158
    10. ',' → logprob: -7.102539539337158

Token 57: ' na' (ID: 898)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.43754565715789795
    2. 'a' → logprob: -1.062545657157898
    3. '(a' → logprob: -5.9375457763671875
    4. ' (' → logprob: -6.0625457763671875
    5. '0' → logprob: -6.9375457763671875
    6. ' ' → logprob: -7.0625457763671875
    7. ' max' → logprob: -8.187545776367188
    8. '(' → logprob: -8.187545776367188
    9. ' n' → logprob: -8.687545776367188
    10. ' abs' → logprob: -8.812545776367188

Token 58: '*a' (ID: 78448)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22898641228675842
    2. ' +' → logprob: -1.603986382484436
    3. '+b' → logprob: -6.7289862632751465
    4. '*' → logprob: -6.7289862632751465
    5. '+n' → logprob: -7.1039862632751465
    6. ' *' → logprob: -8.853986740112305
    7. '-' → logprob: -9.353986740112305
    8. ' -' → logprob: -10.353986740112305
    9. '+a' → logprob: -10.853986740112305
    10. '*n' → logprob: -11.103986740112305

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47414928674697876
    2. ' +' → logprob: -0.9741492867469788
    3. '+b' → logprob: -10.099149703979492
    4. '+n' → logprob: -11.599149703979492
    5. '-' → logprob: -11.849149703979492
    6. ' -' → logprob: -12.724149703979492
    7. ' ' → logprob: -12.849149703979492
    8. ' +
' → logprob: -13.224149703979492
    9. '<|end|>' → logprob: -14.349149703979492
    10. '+a' → logprob: -14.474149703979492

Token 60: ' nb' (ID: 28791)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.07905172556638718
    2. ' nb' → logprob: -2.5790517330169678
    3. '	nb' → logprob: -9.704051971435547
    4. ' ' → logprob: -10.204051971435547
    5. '   ' → logprob: -10.954051971435547
    6. '(nb' → logprob: -11.454051971435547
    7. 'nbsp' → logprob: -11.579051971435547
    8. '_nb' → logprob: -12.079051971435547
    9. '  ' → logprob: -12.454051971435547
    10. 'b' → logprob: -12.954051971435547

Token 61: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.009978002868592739
    2. '*' → logprob: -4.6349778175354
    3. ' *' → logprob: -8.759978294372559
    4. 'b' → logprob: -9.759978294372559
    5. '`' → logprob: -13.384978294372559
    6. ''*' → logprob: -13.759978294372559
    7. ' ' → logprob: -14.509978294372559
    8. ''b' → logprob: -14.634978294372559
    9. '>b' → logprob: -14.634978294372559
    10. '**' → logprob: -14.759978294372559

Token 62: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760486125946045
    2. ' +' → logprob: -0.8260486125946045
    3. '+c' → logprob: -9.451048851013184
    4. '<|end|>' → logprob: -11.076048851013184
    5. '+n' → logprob: -12.201048851013184
    6. ' +
' → logprob: -13.076048851013184
    7. '+
' → logprob: -13.201048851013184
    8. ' ' → logprob: -13.451048851013184
    9. '+xml' → logprob: -14.201048851013184
    10. '+++' → logprob: -14.326048851013184

Token 63: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.1606379896402359
    2. ' nc' → logprob: -1.9106379747390747
    3. ' ' → logprob: -9.285637855529785
    4. '.nc' → logprob: -9.535637855529785
    5. '   ' → logprob: -9.660637855529785
    6. '_nc' → logprob: -10.035637855529785
    7. 'n' → logprob: -10.285637855529785
    8. '    ' → logprob: -10.410637855529785
    9. '  ' → logprob: -11.410637855529785
    10. 'nd' → logprob: -11.535637855529785

Token 64: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.16055119037628174
    2. 'c' → logprob: -1.9105511903762817
    3. '*' → logprob: -8.660551071166992
    4. '*d' → logprob: -9.785551071166992
    5. ' *' → logprob: -10.160551071166992
    6. '	c' → logprob: -11.535551071166992
    7. 'e' → logprob: -12.035551071166992
    8. ')c' → logprob: -12.035551071166992
    9. '<|end|>' → logprob: -12.160551071166992
    10. '```' → logprob: -12.160551071166992

Token 65: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023417724296450615
    2. '<|end|>' → logprob: -4.523417949676514
    3. ' +' → logprob: -5.148417949676514
    4. '-' → logprob: -6.023417949676514
    5. '+
' → logprob: -6.148417949676514
    6. '\n' → logprob: -7.398417949676514
    7. '+\' → logprob: -8.523417472839355
    8. ' ' → logprob: -8.773417472839355
    9. ' if' → logprob: -8.898417472839355
    10. '\' → logprob: -9.023417472839355

Token 66: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' n' (ID: 297)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4624006450176239
    2. ' if' → logprob: -1.5874006748199463
    3. '
' → logprob: -2.9624006748199463
    4. 'if' → logprob: -3.3374006748199463
    5. '<|end|>' → logprob: -3.8374006748199463
    6. '+' → logprob: -3.9624006748199463
    7. '   ' → logprob: -4.587400436401367
    8. ' 
' → logprob: -5.587400436401367
    9. '  
' → logprob: -5.962400436401367
    10. ' ' → logprob: -5.962400436401367

Token 68: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0815601348876953
    2. 'd' → logprob: -1.3315601348876953
    3. 'o' → logprob: -2.2065601348876953
    4. '>' → logprob: -2.8315601348876953
    5. '=' → logprob: -3.0815601348876953
    6. ' =' → logprob: -3.5815601348876953
    7. 'ew' → logprob: -3.8315601348876953
    8. ' >' → logprob: -4.081560134887695
    9. 'um' → logprob: -4.331560134887695
    10. ' ' → logprob: -4.581560134887695

Token 69: ' na' (ID: 898)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.021005630493164
    2. ' total' → logprob: -1.271005630493164
    3. 'total' → logprob: -2.646005630493164
    4. 'int' → logprob: -2.771005630493164
    5. ' a' → logprob: -3.021005630493164
    6. ' d' → logprob: -3.396005630493164
    7. ' max' → logprob: -3.521005630493164
    8. ' (' → logprob: -4.021005630493164
    9. ' e' → logprob: -4.146005630493164
    10. ' ' → logprob: -4.146005630493164

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3528731167316437
    2. ' +' → logprob: -1.7278730869293213
    3. '+d' → logprob: -2.9778730869293213
    4. '*' → logprob: -3.1028730869293213
    5. '*d' → logprob: -4.3528733253479
    6. ' *' → logprob: -5.3528733253479
    7. '<|end|>' → logprob: -6.1028733253479
    8. '+b' → logprob: -6.2278733253479
    9. 'd' → logprob: -7.9778733253479
    10. '*a' → logprob: -8.227872848510742

Token 71: ' nb' (ID: 28791)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.004083624575287104
    2. ' nb' → logprob: -5.504083633422852
    3. '	nb' → logprob: -12.379083633422852
    4. '_nb' → logprob: -14.879083633422852
    5. '(nb' → logprob: -15.254083633422852
    6. 'nbsp' → logprob: -16.37908363342285
    7. 'nc' → logprob: -16.75408363342285
    8. ' ' → logprob: -16.87908363342285
    9. '.nb' → logprob: -16.87908363342285
    10. '1' → logprob: -17.12908363342285

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005333251319825649
    2. ' +' → logprob: -5.255333423614502
    3. '+n' → logprob: -10.130332946777344
    4. '+c' → logprob: -10.130332946777344
    5. '<|end|>' → logprob: -11.755332946777344
    6. '+d' → logprob: -12.130332946777344
    7. '+r' → logprob: -13.630332946777344
    8. '+
' → logprob: -14.005332946777344
    9. '+m' → logprob: -14.130332946777344
    10. '>' → logprob: -14.630332946777344

Token 73: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.00022189407900441438
    2. ' nc' → logprob: -8.500222206115723
    3. '_nc' → logprob: -11.375222206115723
    4. '.nc' → logprob: -12.125222206115723
    5. '1' → logprob: -14.125222206115723
    6. 'Nc' → logprob: -14.625222206115723
    7. 'n' → logprob: -15.625222206115723
    8. '<|end|>' → logprob: -16.375221252441406
    9. ' ' → logprob: -17.250221252441406
    10. 'nb' → logprob: -18.250221252441406

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40153205394744873
    2. 'if' → logprob: -1.5265320539474487
    3. '   ' → logprob: -3.4015321731567383
    4. 'n' → logprob: -4.651532173156738
    5. 'print' → logprob: -4.651532173156738
    6. ' 
' → logprob: -4.776532173156738
    7. '\n' → logprob: -4.901532173156738
    8. '    
' → logprob: -5.026532173156738
    9. ' ' → logprob: -5.401532173156738
    10. '   
' → logprob: -5.651532173156738

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134928047657013
    2. '=' → logprob: -1.313492774963379
    3. ',' → logprob: -9.688492774963379
    4. ' +=' → logprob: -10.688492774963379
    5. '=int' → logprob: -11.188492774963379
    6. 'ult' → logprob: -11.188492774963379
    7. ' ' → logprob: -11.313492774963379
    8. '/' → logprob: -11.313492774963379
    9. 's' → logprob: -11.813492774963379
    10. '=len' → logprob: -11.813492774963379

Token 78: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2293897420167923
    2. 'total' → logprob: -1.9793897867202759
    3. '"' → logprob: -4.354389667510986
    4. ' max' → logprob: -4.479389667510986
    5. ' (' → logprob: -4.854389667510986
    6. ' int' → logprob: -5.354389667510986
    7. '(total' → logprob: -5.354389667510986
    8. ' abs' → logprob: -5.729389667510986
    9. ' ' → logprob: -5.854389667510986
    10. ' n' → logprob: -5.979389667510986

Token 79: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6620250940322876
    2. ' //' → logprob: -1.5370250940322876
    3. '/n' → logprob: -2.162024974822998
    4. '/' → logprob: -2.412024974822998
    5. '//' → logprob: -2.787024974822998
    6. '*' → logprob: -6.912024974822998
    7. ' *' → logprob: -7.662024974822998
    8. '%' → logprob: -8.412025451660156
    9. ' %' → logprob: -9.037025451660156
    10. '>' → logprob: -9.412025451660156

Token 80: '   ' (ID: 271)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.578991174697876
    2. ' //' → logprob: -1.703991174697876
    3. '%' → logprob: -2.328991174697876
    4. '*' → logprob: -3.578991174697876
    5. ' %' → logprob: -3.828991174697876
    6. '-' → logprob: -4.203990936279297
    7. '+' → logprob: -4.328990936279297
    8. '<|end|>' → logprob: -4.328990936279297
    9. ' /' → logprob: -4.453990936279297
    10. ' *' → logprob: -4.703990936279297

Token 81: ' #' (ID: 1069)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5689020156860352
    2. ' //' → logprob: -2.068902015686035
    3. '-' → logprob: -2.693902015686035
    4. '*' → logprob: -2.693902015686035
    5. '+' → logprob: -3.568902015686035
    6. '%' → logprob: -3.693902015686035
    7. ' /' → logprob: -3.943902015686035
    8. ' *' → logprob: -4.068902015686035
    9. ' -' → logprob: -4.443902015686035
    10. ' if' → logprob: -4.693902015686035

Token 82: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8345470428466797
    2. ' if' → logprob: -1.2095470428466797
    3. 'if' → logprob: -1.9595470428466797
    4. '+' → logprob: -4.45954704284668
    5. 'n' → logprob: -4.58454704284668
    6. ' res' → logprob: -4.58454704284668
    7. '   ' → logprob: -4.83454704284668
    8. ' while' → logprob: -4.83454704284668
    9. ' max' → logprob: -5.08454704284668
    10. ' n' → logprob: -5.20954704284668

Token 83: ' essa' (ID: 19417)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.049496766179800034
    2. 'ly' → logprob: -3.174496650695801
    3. 'el' → logprob: -6.799496650695801
    4. ' e' → logprob: -7.049496650695801
    5. 'ce' → logprob: -7.049496650695801
    6. ' the' → logprob: -7.299496650695801
    7. 'es' → logprob: -7.674496650695801
    8. 'eline' → logprob: -7.674496650695801
    9. 'elif' → logprob: -7.799496650695801
    10. 'line' → logprob: -7.924496650695801

Token 84: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.012842408381402493
    2. 'ye' → logprob: -5.262842178344727
    3. 'y' → logprob: -6.012842178344727
    4. 'i' → logprob: -6.262842178344727
    5. 'iera' → logprob: -6.262842178344727
    6. '\' → logprob: -8.762842178344727
    7. 'iye' → logprob: -9.012842178344727
    8. '```' → logprob: -9.450342178344727
    9. 'uie' → logprob: -9.512842178344727
    10. '   ' → logprob: -9.575342178344727

Token 85: ' toutes' (ID: 17502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0974922180175781
    2. ' d' → logprob: -1.3474922180175781
    3. 'd' → logprob: -1.7224922180175781
    4. ' de' → logprob: -1.9724922180175781
    5. '<|end|>' → logprob: -3.597492218017578
    6. 't' → logprob: -4.597492218017578
    7. 's' → logprob: -4.597492218017578
    8. 'de' → logprob: -5.097492218017578
    9. ' toutes' → logprob: -5.472492218017578
    10. '_' → logprob: -5.472492218017578

Token 86: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.49628469347953796
    2. '<|end|>' → logprob: -1.4962847232818604
    3. ' ' → logprob: -2.6212847232818604
    4. 's' → logprob: -2.8712847232818604
    5. 'les' → logprob: -3.7462847232818604
    6. ' possible' → logprob: -5.621284484863281
    7. '  ' → logprob: -5.871284484863281
    8. ' combinations' → logprob: -6.371284484863281
    9. ' l' → logprob: -6.871284484863281
    10. 'possible' → logprob: -6.996284484863281

Token 87: ' tailles' (ID: 169460)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1639753580093384
    2. 'p' → logprob: -1.5389753580093384
    3. 'poss' → logprob: -1.5389753580093384
    4. 'comb' → logprob: -1.6639753580093384
    5. ' comb' → logprob: -3.788975238800049
    6. 'possible' → logprob: -4.663975238800049
    7. ' ' → logprob: -5.038975238800049
    8. '5' → logprob: -5.538975238800049
    9. 's' → logprob: -5.913975238800049
    10. '4' → logprob: -6.413975238800049

Token 88: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' paquet' (ID: 180866)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3411997556686401
    2. ' ' → logprob: -1.8411997556686401
    3. '1' → logprob: -2.0911998748779297
    4. 's' → logprob: -2.3411998748779297
    5. 'l' → logprob: -3.5911998748779297
    6. '0' → logprob: -3.5911998748779297
    7. ' pizzas' → logprob: -3.5911998748779297
    8. 'g' → logprob: -3.7786998748779297
    9. 't' → logprob: -4.02869987487793
    10. 'e' → logprob: -4.09119987487793

Token 90: ' possibles' (ID: 97753)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37580323219299316
    2. ' ' → logprob: -2.125803232192993
    3. '   ' → logprob: -2.375803232192993
    4. '  ' → logprob: -3.000803232192993
    5. ',' → logprob: -4.000802993774414
    6. 'i' → logprob: -5.125802993774414
    7. ' ,' → logprob: -5.625802993774414
    8. 'n' → logprob: -5.875802993774414
    9. '<|end|>' → logprob: -5.875802993774414
    10. ' i' → logprob: -5.875802993774414

Token 91: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9406350255012512
    2. ' for' → logprob: -1.0656349658966064
    3. '<|end|>' → logprob: -3.0656349658966064
    4. ',' → logprob: -3.1906349658966064
    5. 'for' → logprob: -3.3156349658966064
    6. '   ' → logprob: -3.3156349658966064
    7. '  ' → logprob: -3.4406349658966064
    8. ':' → logprob: -4.5656352043151855
    9. ' (' → logprob: -4.8156352043151855
    10. ' ,' → logprob: -4.8156352043151855

Token 92: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5329588055610657
    2. ' ' → logprob: -1.032958745956421
    3. ' n' → logprob: -3.532958745956421
    4. '0' → logprob: -4.282958984375
    5. 'n' → logprob: -4.782958984375
    6. '2' → logprob: -5.907958984375
    7. '3' → logprob: -7.657958984375
    8. 'a' → logprob: -8.157958984375
    9. '4' → logprob: -8.282958984375
    10. ' max' → logprob: -8.282958984375

Token 93: ' et' (ID: 859)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6506612300872803
    2. 'd' → logprob: -1.7756612300872803
    3. ' e' → logprob: -1.7756612300872803
    4. '1' → logprob: -3.6506612300872803
    5. ' d' → logprob: -3.7756612300872803
    6. ' et' → logprob: -4.150661468505859
    7. '+' → logprob: -4.400661468505859
    8. '   ' → logprob: -4.400661468505859
    9. ' and' → logprob: -4.525661468505859
    10. ' a' → logprob: -4.650661468505859

Token 94: ' n' (ID: 297)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.632871687412262
    2. ' e' → logprob: -0.757871687412262
    3. ' ' → logprob: -8.757871627807617
    4. '	e' → logprob: -10.507871627807617
    5. '<|end|>' → logprob: -10.882871627807617
    6. ' d' → logprob: -10.882871627807617
    7. 'd' → logprob: -11.257871627807617
    8. '```' → logprob: -12.007871627807617
    9. ' n' → logprob: -12.632871627807617
    10. '   ' → logprob: -12.945371627807617

Token 95: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29573655128479004
    2. ',' → logprob: -2.67073655128479
    3. ':' → logprob: -2.92073655128479
    4. 'for' → logprob: -2.92073655128479
    5. '+' → logprob: -3.29573655128479
    6. ' ,' → logprob: -4.420736312866211
    7. '   ' → logprob: -4.920736312866211
    8. ' :' → logprob: -5.295736312866211
    9. 'd' → logprob: -5.545736312866211
    10. ' ' → logprob: -5.920736312866211

Token 96: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49229690432548523
    2. ':' → logprob: -1.9922969341278076
    3. 'for' → logprob: -2.1172969341278076
    4. ',' → logprob: -2.9922969341278076
    5. ' ' → logprob: -3.6172969341278076
    6. '   ' → logprob: -4.1172966957092285
    7. ':
' → logprob: -4.9922966957092285
    8. ' 
' → logprob: -5.6172966957092285
    9. '```' → logprob: -5.6172966957092285
    10. ' :' → logprob: -5.7422966957092285

Token 97: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16052794456481934
    2. 'for' (adapté à ' for') → logprob: -1.9105279445648193
    3. '   ' → logprob: -9.285528182983398
    4. ' ' → logprob: -10.285528182983398
    5. ',' → logprob: -10.535528182983398
    6. 'n' → logprob: -10.660528182983398
    7. 'f' → logprob: -11.285528182983398
    8. ':' → logprob: -11.285528182983398
    9. 'r' → logprob: -11.410528182983398
    10. '```' → logprob: -11.410528182983398

Token 98: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13568077981472015
    2. 'i' → logprob: -3.010680675506592
    3. ' p' → logprob: -3.885680675506592
    4. ' s' → logprob: -4.010680675506592
    5. ' size' → logprob: -4.760680675506592
    6. ' pack' → logprob: -5.260680675506592
    7. ' pa' → logprob: -5.385680675506592
    8. ' paquet' → logprob: -5.635680675506592
    9. ' k' → logprob: -5.760680675506592
    10. 'pa' → logprob: -6.510680675506592

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03829381614923477
    2. 'in' → logprob: -3.2882938385009766
    3. ' ' → logprob: -8.788293838500977
    4. 'd' → logprob: -10.788293838500977
    5. 'range' → logprob: -11.163293838500977
    6. '	in' → logprob: -11.288293838500977
    7. '  ' → logprob: -11.538293838500977
    8. 'k' → logprob: -11.663293838500977
    9. 'n' → logprob: -12.413293838500977
    10. '   ' → logprob: -12.413293838500977

Token 100: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4288192093372345
    2. 'range' → logprob: -1.053819179534912
    3. ' d' → logprob: -10.17881965637207
    4. 'd' → logprob: -10.55381965637207
    5. ' ' → logprob: -10.92881965637207
    6. '	range' → logprob: -11.30381965637207
    7. '(range' → logprob: -11.42881965637207
    8. '   ' → logprob: -11.67881965637207
    9. ' xrange' → logprob: -13.92881965637207
    10. '  ' → logprob: -14.05381965637207

Token 101: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.014174672774970531
    2. '(' → logprob: -4.264174461364746
    3. ' (' → logprob: -12.389174461364746
    4. '(D' → logprob: -12.639174461364746
    5. '(
' → logprob: -13.139174461364746
    6. '()' → logprob: -14.889174461364746
    7. '(s' → logprob: -15.014174461364746
    8. '(m' → logprob: -15.889174461364746
    9. '(de' → logprob: -15.889174461364746
    10. '(e' → logprob: -16.014175415039062

Token 102: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1397651731967926
    2. ' ,' → logprob: -2.1397652626037598
    3. ',d' → logprob: -4.38976526260376
    4. ',n' → logprob: -8.639764785766602
    5. '   ' → logprob: -10.014764785766602
    6. ',k' → logprob: -10.264764785766602
    7. ',e' → logprob: -10.889764785766602
    8. ',b' → logprob: -11.014764785766602
    9. ' ' → logprob: -11.389764785766602
    10. '+' → logprob: -11.764764785766602

Token 103: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05492347106337547
    2. ' +' → logprob: -2.9299235343933105
    3. '+d' → logprob: -10.679923057556152
    4. '   ' → logprob: -12.554923057556152
    5. '+
' → logprob: -12.804923057556152
    6. ' ' → logprob: -12.929923057556152
    7. '+k' → logprob: -13.429923057556152
    8. ')+' → logprob: -14.054923057556152
    9. ' +
' → logprob: -14.304923057556152
    10. 'e' → logprob: -14.554923057556152

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012689977302215993
    2. ' ' → logprob: -9.000126838684082
    3. '   ' → logprob: -13.250126838684082
    4. '  ' → logprob: -14.875126838684082
    5. 'd' → logprob: -15.000126838684082
    6. '2' → logprob: -15.375126838684082
    7. '```' → logprob: -15.875126838684082
    8. ')' → logprob: -16.0001277923584
    9. 'e' → logprob: -16.2501277923584
    10. '    ' → logprob: -17.0001277923584

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003380846756044775
    2. '):
' → logprob: -8.875338554382324
    3. ':' → logprob: -9.125338554382324
    4. ' ):' → logprob: -9.500338554382324
    5. ')' → logprob: -12.250338554382324
    6. ',' → logprob: -12.375338554382324
    7. '+' → logprob: -13.000338554382324
    8. '   ' → logprob: -13.750338554382324
    9. '):
' → logprob: -15.000338554382324
    10. '}:' → logprob: -15.125338554382324

Token 106: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0857529416680336
    2. '   ' → logprob: -3.5857529640197754
    3. '<|end|>' → logprob: -3.5857529640197754
    4. ' :' → logprob: -4.335752964019775
    5. '       ' → logprob: -4.960752964019775
    6. ':
' → logprob: -6.335752964019775
    7. '):' → logprob: -6.460752964019775
    8. '    ' → logprob: -7.710752964019775
    9. '<|end|>' → logprob: -7.835752964019775
    10. ')' → logprob: -8.210752487182617

Token 107: ' nb' (ID: 28791)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22043932974338531
    2. ' res' → logprob: -2.8454394340515137
    3. '       ' → logprob: -3.3454394340515137
    4. 'if' → logprob: -3.3454394340515137
    5. ' for' → logprob: -3.4704394340515137
    6. 'res' → logprob: -4.095439434051514
    7. '    ' → logprob: -5.345439434051514
    8. 'for' → logprob: -5.470439434051514
    9. '        ' → logprob: -5.720439434051514
    10. '   ' → logprob: -6.220439434051514

Token 108: '_sets' (ID: 56707)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8071181774139404
    2. '=' → logprob: -1.5571181774139404
    3. 'est' → logprob: -2.6821181774139404
    4. '_' → logprob: -3.4321181774139404
    5. 's' → logprob: -3.5571181774139404
    6. '+' → logprob: -3.8071181774139404
    7. ',' → logprob: -4.1821184158325195
    8. 'k' → logprob: -4.4321184158325195
    9. '_pa' → logprob: -4.4321184158325195
    10. '_total' → logprob: -4.5571184158325195

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25430598855018616
    2. '=' → logprob: -1.5043059587478638
    3. 'et' → logprob: -7.129305839538574
    4. '   ' → logprob: -7.754305839538574
    5. '=k' → logprob: -8.504305839538574
    6. '=int' → logprob: -9.379305839538574
    7. 's' → logprob: -9.379305839538574
    8. 'ets' → logprob: -9.629305839538574
    9. '    ' → logprob: -9.754305839538574
    10. '_sets' → logprob: -9.879305839538574

Token 110: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18485206365585327
    2. ' k' → logprob: -2.309852123260498
    3. ' (' → logprob: -3.559852123260498
    4. ' res' → logprob: -4.184852123260498
    5. ' ' → logprob: -4.934852123260498
    6. ' total' → logprob: -4.934852123260498
    7. 'n' → logprob: -5.434852123260498
    8. 'k' → logprob: -6.059852123260498
    9. 'res' → logprob: -6.184852123260498
    10. 'total' → logprob: -6.684852123260498

Token 111: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1798713058233261
    2. '//' → logprob: -1.8048713207244873
    3. ' ' → logprob: -10.429871559143066
    4. 'k' → logprob: -11.304871559143066
    5. '   ' → logprob: -11.304871559143066
    6. '
' → logprob: -11.429871559143066
    7. '-k' → logprob: -11.554871559143066
    8. ' -' → logprob: -11.679871559143066
    9. '-' → logprob: -11.929871559143066
    10. ' #' → logprob: -12.054871559143066

Token 112: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008052219054661691
    2. ' k' → logprob: -7.125805377960205
    3. '<|end|>' → logprob: -14.625804901123047
    4. ' ' → logprob: -16.250804901123047
    5. '	k' → logprob: -16.250804901123047
    6. '*k' → logprob: -18.375804901123047
    7. '   ' → logprob: -18.375804901123047
    8. '  ' → logprob: -18.500804901123047
    9. '{k' → logprob: -18.500804901123047
    10. '`' → logprob: -18.750804901123047

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07664352655410767
    2. '
' → logprob: -3.201643466949463
    3. '<|end|>' → logprob: -3.576643466949463
    4. '        
' → logprob: -5.576643466949463
    5. '<|end|>' → logprob: -7.201643466949463
    6. '
' → logprob: -9.076643943786621
    7. '  
' → logprob: -9.826643943786621
    8. '        ' → logprob: -9.826643943786621
    9. ',' → logprob: -9.951643943786621
    10. '       
' → logprob: -10.326643943786621

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05814780667424202
    2. '<|end|>' → logprob: -2.93314790725708
    3. '
' → logprob: -6.93314790725708
    4. '        
' → logprob: -7.68314790725708
    5. '<|end|>' → logprob: -7.93314790725708
    6. '   ' → logprob: -8.058147430419922
    7. '+' → logprob: -8.308147430419922
    8. ' if' → logprob: -8.433147430419922
    9. ' ' → logprob: -8.933147430419922
    10. ' +' → logprob: -9.683147430419922

Token 115: ' rest' (ID: 2867)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2328722476959229
    2. 'res' → logprob: -1.4828722476959229
    3. '       ' → logprob: -2.107872247695923
    4. ' for' → logprob: -2.357872247695923
    5. 'rem' → logprob: -2.732872247695923
    6. 'rest' (adapté à ' rest') → logprob: -3.357872247695923
    7. 'if' → logprob: -3.357872247695923
    8. 're' → logprob: -3.607872247695923
    9. ' res' → logprob: -3.982872247695923
    10. 'reste' → logprob: -4.107872009277344

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11285808682441711
    2. '=' → logprob: -2.2378580570220947
    3. '=k' → logprob: -11.362857818603516
    4. '=n' → logprob: -12.362857818603516
    5. 's' → logprob: -12.362857818603516
    6. '   ' → logprob: -12.612857818603516
    7. '	' → logprob: -13.112857818603516
    8. ' ' → logprob: -13.612857818603516
    9. ',' → logprob: -13.612857818603516
    10. '=int' → logprob: -13.862857818603516

Token 117: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02976449765264988
    2. 'n' → logprob: -3.529764413833618
    3. ' ' → logprob: -11.904764175415039
    4. '	n' → logprob: -13.029764175415039
    5. '(n' → logprob: -14.154764175415039
    6. ' ' → logprob: -14.529764175415039
    7. '   ' → logprob: -14.654764175415039
    8. '0' → logprob: -14.717264175415039
    9. 'total' → logprob: -14.842264175415039
    10. '_n' → logprob: -15.154764175415039

Token 118: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06197742745280266
    2. '%' → logprob: -2.8119773864746094
    3. ' -' → logprob: -12.68697738647461
    4. ' ' → logprob: -12.81197738647461
    5. '-' → logprob: -13.43697738647461
    6. '<|end|>' → logprob: -14.68697738647461
    7. ' %=' → logprob: -15.18697738647461
    8. '```' → logprob: -15.68697738647461
    9. '%n' → logprob: -15.99947738647461
    10. ' ' → logprob: -15.99947738647461

Token 119: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3868725001811981
    2. ' k' → logprob: -1.1368725299835205
    3. '	k' → logprob: -14.136872291564941
    4. ' ' → logprob: -15.136872291564941
    5. '<|end|>' → logprob: -15.261872291564941
    6. '{k' → logprob: -16.511873245239258
    7. ' к' → logprob: -16.886873245239258
    8. '*k' → logprob: -17.261873245239258
    9. '   ' → logprob: -17.636873245239258
    10. ',k' → logprob: -17.636873245239258

Token 120: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27536192536354065
    2. '<|end|>' → logprob: -1.6503618955612183
    3. '
' → logprob: -3.150362014770508
    4. '        
' → logprob: -6.150362014770508
    5. '<|end|>' → logprob: -6.275362014770508
    6. ',' → logprob: -7.400362014770508
    7. '   ' → logprob: -8.400362014770508
    8. '  
' → logprob: -8.400362014770508
    9. ')' → logprob: -8.775362014770508
    10. ' if' → logprob: -9.525362014770508

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4853855073451996
    2. '<|end|>' → logprob: -0.985385537147522
    3. '
' → logprob: -5.485385417938232
    4. '        
' → logprob: -5.985385417938232
    5. '<|end|>' → logprob: -6.360385417938232
    6. '   ' → logprob: -6.860385417938232
    7. '```' → logprob: -7.360385417938232
    8. ',' → logprob: -8.23538589477539
    9. ')' → logprob: -8.48538589477539
    10. '#' → logprob: -8.98538589477539

Token 122: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5988660454750061
    2. '       ' → logprob: -1.4738659858703613
    3. 'for' → logprob: -2.3488659858703613
    4. 'res' → logprob: -3.4738659858703613
    5. 'cost' → logprob: -3.7238659858703613
    6. 'total' → logprob: -3.8488659858703613
    7. ' if' → logprob: -3.9738659858703613
    8. 'rest' → logprob: -5.473865985870361
    9. '```' → logprob: -5.848865985870361
    10. 'temp' → logprob: -5.848865985870361

Token 123: ' Co' (ID: 4642)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8149675726890564
    2. 'if' → logprob: -1.8149676322937012
    3. ' cost' → logprob: -1.9399676322937012
    4. 'for' → logprob: -2.564967632293701
    5. 'res' → logprob: -2.814967632293701
    6. ' if' → logprob: -3.314967632293701
    7. ' res' → logprob: -4.189967632293701
    8. ' for' → logprob: -4.564967632293701
    9. 'total' → logprob: -4.689967632293701
    10. 'price' → logprob: -4.814967632293701

Token 124: 'ût' (ID: 24581)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.17952877283096313
    2. 'st' → logprob: -1.9295287132263184
    3. 'sts' → logprob: -4.554528713226318
    4. 'ût' → logprob: -5.554528713226318
    5. 'uts' → logprob: -6.804528713226318
    6. 't' → logprob: -6.929528713226318
    7. 'mp' → logprob: -8.054529190063477
    8. '#' → logprob: -8.179529190063477
    9. 'ts' → logprob: -8.304529190063477
    10. 'u' → logprob: -8.679529190063477

Token 125: ' si' (ID: 1784)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.601531445980072
    2. '=' → logprob: -0.976531445980072
    3. 'total' → logprob: -3.851531505584717
    4. '_total' → logprob: -4.476531505584717
    5. '_sets' → logprob: -4.851531505584717
    6. 's' → logprob: -4.976531505584717
    7. 'des' → logprob: -5.976531505584717
    8. '_set' → logprob: -5.976531505584717
    9. 'for' → logprob: -5.976531505584717
    10. '_par' → logprob: -6.351531505584717

Token 126: ' on' (ID: 402)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.5078747868537903
    2. ' nb' → logprob: -1.5078747272491455
    3. ' on' → logprob: -1.8828747272491455
    4. 'rest' → logprob: -4.382874965667725
    5. ' k' → logprob: -6.007874965667725
    6. 'nb' → logprob: -6.132874965667725
    7. '(nb' → logprob: -6.257874965667725
    8. ' we' → logprob: -6.507874965667725
    9. 'on' → logprob: -6.757874965667725
    10. 'k' → logprob: -7.632874965667725

Token 127: ' fait' (ID: 7473)
  Prédit: ' prend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prend' → logprob: -1.5433100461959839
    2. 'fait' → logprob: -2.1683101654052734
    3. 'ach' → logprob: -2.6683101654052734
    4. 'pack' → logprob: -2.6683101654052734
    5. 'util' → logprob: -2.7933101654052734
    6. 'pa' → logprob: -3.1683101654052734
    7. 'pr' → logprob: -3.2933101654052734
    8. ' utilise' → logprob: -3.2933101654052734
    9. 'reg' → logprob: -3.4183101654052734
    10. 'met' → logprob: -3.5433101654052734

Token 128: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.7756879925727844
    2. 'nb' → logprob: -1.2756879329681396
    3. '(nb' → logprob: -1.6506879329681396
    4. ' des' → logprob: -3.9006879329681396
    5. ' ' → logprob: -4.150688171386719
    6. '	nb' → logprob: -4.775688171386719
    7. 'les' → logprob: -5.400688171386719
    8. ' les' → logprob: -5.775688171386719
    9. 'des' → logprob: -6.400688171386719
    10. 'k' → logprob: -6.650688171386719

Token 129: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0001468067930545658
    2. '_set' → logprob: -9.375146865844727
    3. '_s' → logprob: -10.375146865844727
    4. '_' → logprob: -10.875146865844727
    5. 'sets' → logprob: -12.750146865844727
    6. '_de' → logprob: -13.375146865844727
    7. 's' → logprob: -13.750146865844727
    8. '_des' → logprob: -13.750146865844727
    9. ' _' → logprob: -14.625146865844727
    10. ' de' → logprob: -15.000146865844727

Token 130: ' groupes' (ID: 72206)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4539684057235718
    2. ' *' → logprob: -1.8289684057235718
    3. ' sets' → logprob: -2.8289685249328613
    4. ' de' → logprob: -3.4539685249328613
    5. 'sets' → logprob: -3.7039685249328613
    6. '+' → logprob: -3.8289685249328613
    7. '_sets' → logprob: -4.703968524932861
    8. 'de' → logprob: -5.078968524932861
    9. 'pa' → logprob: -5.078968524932861
    10. ' pa' → logprob: -5.578968524932861

Token 131: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5278542041778564
    2. 'de' → logprob: -1.7778542041778564
    3. '*' → logprob: -2.9028542041778564
    4. '=' → logprob: -3.2778542041778564
    5. ' =' → logprob: -3.4028542041778564
    6. 'd' → logprob: -4.277853965759277
    7. ' complète' → logprob: -4.527853965759277
    8. '   ' → logprob: -4.777853965759277
    9. ' *' → logprob: -4.777853965759277
    10. ' à' → logprob: -4.777853965759277

Token 132: ' taille' (ID: 41644)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030491814017295837
    2. ' k' → logprob: -3.655491828918457
    3. 'size' → logprob: -6.530491828918457
    4. ' taille' → logprob: -6.655491828918457
    5. 'tail' → logprob: -6.905491828918457
    6. ' size' → logprob: -8.030491828918457
    7. '`' → logprob: -10.280491828918457
    8. '```' → logprob: -11.030491828918457
    9. '{k' → logprob: -11.280491828918457
    10. ' ' → logprob: -11.655491828918457

Token 133: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020548895001411438
    2. ' k' → logprob: -3.8955488204956055
    3. '```' → logprob: -12.645548820495605
    4. '<|end|>' → logprob: -13.895548820495605
    5. '`' → logprob: -14.145548820495605
    6. ' ' → logprob: -14.520548820495605
    7. 'd' → logprob: -14.770548820495605
    8. '*k' → logprob: -15.395548820495605
    9. '{k' → logprob: -15.395548820495605
    10. '   ' → logprob: -15.645548820495605

Token 134: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8592602610588074
    2. '+' → logprob: -1.3592603206634521
    3. ',' → logprob: -2.484260320663452
    4. ':' → logprob: -2.609260320663452
    5. ' :' → logprob: -2.609260320663452
    6. ' plus' → logprob: -4.234260082244873
    7. ' et' → logprob: -4.484260082244873
    8. '<|end|>' → logprob: -4.609260082244873
    9. ' =' → logprob: -4.734260082244873
    10. '=' → logprob: -5.234260082244873

Token 135: ' un' (ID: 537)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.590499997138977
    2. '(rest' → logprob: -2.4654998779296875
    3. ' un' → logprob: -2.5904998779296875
    4. 'rest' → logprob: -2.5904998779296875
    5. ' ' → logprob: -2.7154998779296875
    6. ' (' → logprob: -2.9654998779296875
    7. ' une' → logprob: -3.5904998779296875
    8. 'un' → logprob: -4.0904998779296875
    9. '1' → logprob: -4.3404998779296875
    10. '(' → logprob: -4.4654998779296875

Token 136: ' reste' (ID: 26769)
  Prédit: ' groupe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupe' → logprob: -0.03418499603867531
    2. 'g' → logprob: -4.28418493270874
    3. ' group' → logprob: -5.53418493270874
    4. ' reste' → logprob: -5.78418493270874
    5. ' ' → logprob: -5.90918493270874
    6. ' rest' → logprob: -6.03418493270874
    7. 'group' → logprob: -6.65918493270874
    8. 'rest' → logprob: -6.78418493270874
    9. ' seul' → logprob: -6.90918493270874
    10. 'reste' → logprob: -7.65918493270874

Token 137: '
' (ID: 198)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.041830796748399734
    2. ' rest' → logprob: -3.9168307781219482
    3. 'rest' → logprob: -5.416831016540527
    4. '(rest' → logprob: -5.916831016540527
    5. ' of' → logprob: -6.166831016540527
    6. 'de' → logprob: -6.291831016540527
    7. '<|end|>' → logprob: -6.541831016540527
    8. '=' → logprob: -6.791831016540527
    9. ' ' → logprob: -7.166831016540527
    10. ' =' → logprob: -7.166831016540527

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07961607724428177
    2. ':' → logprob: -3.579616069793701
    3. ' =' → logprob: -3.704616069793701
    4. '   ' → logprob: -4.704616069793701
    5. ' if' → logprob: -5.704616069793701
    6. ' :' → logprob: -5.704616069793701
    7. '=' → logprob: -5.829616069793701
    8. '<|end|>' → logprob: -6.704616069793701
    9. ',' → logprob: -6.829616069793701
    10. '        ' → logprob: -7.829616069793701

Token 139: ' price' (ID: 3911)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6301041841506958
    2. ' cost' → logprob: -1.6301041841506958
    3. 'res' → logprob: -2.6301040649414062
    4. ' =' → logprob: -3.0051040649414062
    5. ' if' → logprob: -3.5051040649414062
    6. 'if' → logprob: -3.5051040649414062
    7. ' res' → logprob: -3.6301040649414062
    8. '=' → logprob: -4.005104064941406
    9. 'co' → logprob: -4.380104064941406
    10. '       ' → logprob: -4.630104064941406

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06065814942121506
    2. '=' → logprob: -3.0606582164764404
    3. 's' → logprob: -4.810657978057861
    4. '_sets' → logprob: -6.185657978057861
    5. '_' → logprob: -7.310657978057861
    6. '_per' → logprob: -8.06065845489502
    7. '_set' → logprob: -9.06065845489502
    8. '_for' → logprob: -9.31065845489502
    9. '_group' → logprob: -9.31065845489502
    10. '_total' → logprob: -9.93565845489502

Token 141: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.29561343789100647
    2. 'nb' → logprob: -1.545613408088684
    3. ' res' → logprob: -4.1706132888793945
    4. 'res' → logprob: -4.4206132888793945
    5. '(nb' → logprob: -4.7956132888793945
    6. 'k' → logprob: -6.0456132888793945
    7. ' k' → logprob: -7.0456132888793945
    8. '	nb' → logprob: -7.0456132888793945
    9. '   ' → logprob: -7.5456132888793945
    10. '(' → logprob: -8.420613288879395

Token 142: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0005114490049891174
    2. '*' → logprob: -8.000511169433594
    3. '_' → logprob: -9.375511169433594
    4. '*_' → logprob: -10.250511169433594
    5. ' *' → logprob: -11.125511169433594
    6. '*k' → logprob: -11.375511169433594
    7. '+' → logprob: -11.875511169433594
    8. 'sets' → logprob: -12.375511169433594
    9. '_set' → logprob: -12.750511169433594
    10. '_s' → logprob: -13.125511169433594

Token 143: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16539166867733002
    2. '*' → logprob: -2.165391683578491
    3. '*k' → logprob: -3.290391683578491
    4. '*p' → logprob: -9.29039192199707
    5. '*q' → logprob: -9.41539192199707
    6. '*c' → logprob: -9.79039192199707
    7. ' ' → logprob: -9.91539192199707
    8. '*s' → logprob: -10.04039192199707
    9. '*(' → logprob: -10.29039192199707
    10. '*a' → logprob: -10.29039192199707

Token 144: ' k' (ID: 372)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07242622971534729
    2. 'res' → logprob: -2.6974263191223145
    3. 'd' → logprob: -6.5724263191223145
    4. 'k' → logprob: -7.3224263191223145
    5. ' e' → logprob: -8.447425842285156
    6. ' res' → logprob: -8.947425842285156
    7. 'pa' → logprob: -11.322425842285156
    8. '
' → logprob: -11.447425842285156
    9. '(e' → logprob: -11.822425842285156
    10. ' ' → logprob: -12.197425842285156

Token 145: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2562548816204071
    2. ' *' → logprob: -1.5062549114227295
    3. '*d' → logprob: -6.13125467300415
    4. '*a' → logprob: -6.50625467300415
    5. '*b' → logprob: -8.381255149841309
    6. '*s' → logprob: -9.256255149841309
    7. '*c' → logprob: -9.381255149841309
    8. '*object' → logprob: -10.131255149841309
    9. '*q' → logprob: -10.381255149841309
    10. '<|end|>' → logprob: -10.881255149841309

Token 146: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.29250600934028625
    2. 'res' → logprob: -1.4175059795379639
    3. ' res' → logprob: -5.417506217956543
    4. ' e' → logprob: -5.917506217956543
    5. 'total' → logprob: -6.417506217956543
    6. 'min' → logprob: -7.042506217956543
    7. '(res' → logprob: -8.042506217956543
    8. '(e' → logprob: -8.417506217956543
    9. 'd' → logprob: -8.667506217956543
    10. 'max' → logprob: -8.792506217956543

Token 147: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.069800615310669
    2. '<|end|>' → logprob: -1.069800615310669
    3. '+' → logprob: -1.194800615310669
    4. ' if' → logprob: -5.56980037689209
    5. '<|end|>' → logprob: -5.81980037689209
    6. 'if' → logprob: -6.31980037689209
    7. '       ' → logprob: -7.31980037689209
    8. '
' → logprob: -7.56980037689209
    9. ' +
' → logprob: -7.81980037689209
    10. '+
' → logprob: -7.94480037689209

Token 148: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.31641924381256104
    2. ' rest' → logprob: -1.316419243812561
    3. '(rest' → logprob: -6.0664191246032715
    4. 'res' → logprob: -8.56641960144043
    5. '   ' → logprob: -8.81641960144043
    6. ' (' → logprob: -9.62891960144043
    7. '(' → logprob: -10.00391960144043
    8. ' res' → logprob: -10.12891960144043
    9. ' ' → logprob: -10.12891960144043
    10. ' e' → logprob: -10.25391960144043

Token 149: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11294838041067123
    2. '*' → logprob: -2.237948417663574
    3. '*b' → logprob: -10.112948417663574
    4. '*a' → logprob: -10.737948417663574
    5. '*k' → logprob: -10.862948417663574
    6. '*c' → logprob: -11.612948417663574
    7. '*d' → logprob: -11.987948417663574
    8. '*w' → logprob: -12.612948417663574
    9. '**' → logprob: -12.987948417663574
    10. '*u' → logprob: -12.987948417663574

Token 150: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.35649096965789795
    2. ' e' → logprob: -1.231490969657898
    3. 'a' → logprob: -5.6064910888671875
    4. ' a' → logprob: -6.6064910888671875
    5. ' ' → logprob: -7.4814910888671875
    6. 'c' → logprob: -7.6064910888671875
    7. 'd' → logprob: -7.6064910888671875
    8. ' d' → logprob: -8.106491088867188
    9. 'b' → logprob: -8.481491088867188
    10. ' c' → logprob: -8.668991088867188

Token 151: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' d' (ID: 272)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8603965640068054
    2. '2' → logprob: -1.4853966236114502
    3. 'd' → logprob: -2.11039662361145
    4. '5' → logprob: -2.36039662361145
    5. 'a' → logprob: -3.36039662361145
    6. '<|end|>' → logprob: -3.48539662361145
    7. '7' → logprob: -4.110396385192871
    8. '4' → logprob: -4.985396385192871
    9. '1' → logprob: -5.110396385192871
    10. 'c' → logprob: -5.485396385192871

Token 153: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.010856213979423046
    2. ' k' → logprob: -4.8858561515808105
    3. 'rest' → logprob: -6.0108561515808105
    4. 'k' → logprob: -7.7608561515808105
    5. ' nb' → logprob: -9.135856628417969
    6. '(rest' → logprob: -9.385856628417969
    7. ' d' → logprob: -9.385856628417969
    8. ' ' → logprob: -10.510856628417969
    9. ' res' → logprob: -11.260856628417969
    10. ' e' → logprob: -11.510856628417969

Token 155: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3137704133987427
    2. '>' → logprob: -1.5637704133987427
    3. '!=' → logprob: -1.6887704133987427
    4. ' !=' → logprob: -2.188770294189453
    5. ' >' → logprob: -2.313770294189453
    6. ' ==' → logprob: -2.938770294189453
    7. ' else' → logprob: -3.688770294189453
    8. '<' → logprob: -3.813770294189453
    9. 'else' → logprob: -4.313770294189453
    10. ' <' → logprob: -4.563770294189453

Token 156: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03408948704600334
    2. ' d' → logprob: -4.0340895652771
    3. 'k' → logprob: -4.1590895652771
    4. ' k' → logprob: -9.034089088439941
    5. ' ' → logprob: -10.909089088439941
    6. 'e' → logprob: -11.034089088439941
    7. '=' → logprob: -11.909089088439941
    8. '	d' → logprob: -12.409089088439941
    9. '=d' → logprob: -12.409089088439941
    10. '>d' → logprob: -12.534089088439941

Token 157: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008620131760835648
    2. 'else' → logprob: -4.758620262145996
    3. '        ' → logprob: -13.133620262145996
    4. '       ' → logprob: -13.633620262145996
    5. '	else' → logprob: -13.758620262145996
    6. ' ' → logprob: -14.383620262145996
    7. '+' → logprob: -15.633620262145996
    8. '_else' → logprob: -15.758620262145996
    9. '<|end|>' → logprob: -16.38361930847168
    10. '    ' → logprob: -16.38361930847168

Token 158: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -1.043635606765747
    2. 'nb' → logprob: -1.168635606765747
    3. '(nb' → logprob: -1.293635606765747
    4. 'rest' → logprob: -3.793635606765747
    5. ' (' → logprob: -4.543635368347168
    6. ' rest' → logprob: -4.793635368347168
    7. '(' → logprob: -4.793635368347168
    8. '(n' → logprob: -5.418635368347168
    9. '(rest' → logprob: -5.793635368347168
    10. 'price' → logprob: -5.918635368347168

Token 159: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -7.421908958349377e-05
    2. '_set' → logprob: -10.25007438659668
    3. 'sets' → logprob: -10.50007438659668
    4. '_' → logprob: -11.87507438659668
    5. 'Sets' → logprob: -13.25007438659668
    6. 'ets' → logprob: -14.62507438659668
    7. 'a' → logprob: -15.62507438659668
    8. 'k' → logprob: -15.75007438659668
    9. 'e' → logprob: -15.87507438659668
    10. '+' → logprob: -15.87507438659668

Token 160: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014327093958854675
    2. '*' → logprob: -4.264327049255371
    3. '*k' → logprob: -8.889327049255371
    4. '**' → logprob: -12.139327049255371
    5. 'price' → logprob: -12.764327049255371
    6. ' ' → logprob: -13.014327049255371
    7. '*n' → logprob: -13.264327049255371
    8. '*num' → logprob: -13.389327049255371
    9. '```' → logprob: -13.389327049255371
    10. '<|end|>' → logprob: -13.514327049255371

Token 161: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05596882849931717
    2. ' k' → logprob: -2.930968761444092
    3. '(k' → logprob: -7.055968761444092
    4. ' (' → logprob: -9.30596923828125
    5. 'e' → logprob: -10.55596923828125
    6. '(' → logprob: -10.68096923828125
    7. ' ' → logprob: -11.05596923828125
    8. '   ' → logprob: -11.36846923828125
    9. ' e' → logprob: -11.43096923828125
    10. 'n' → logprob: -11.99346923828125

Token 162: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31332826614379883
    2. '*' → logprob: -1.3133282661437988
    3. 'e' → logprob: -10.43832778930664
    4. ' ' → logprob: -10.93832778930664
    5. '*a' → logprob: -12.31332778930664
    6. '*d' → logprob: -12.93832778930664
    7. '**' → logprob: -13.25082778930664
    8. '*k' → logprob: -13.31332778930664
    9. '*b' → logprob: -13.43832778930664
    10. '<|end|>' → logprob: -14.00082778930664

Token 163: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05515419691801071
    2. ' e' → logprob: -2.9301540851593018
    3. 'd' → logprob: -9.305153846740723
    4. ' ' → logprob: -9.555153846740723
    5. 'a' → logprob: -10.805153846740723
    6. '	e' → logprob: -10.805153846740723
    7. ' d' → logprob: -11.180153846740723
    8. '   ' → logprob: -11.180153846740723
    9. '  ' → logprob: -11.867653846740723
    10. 'b' → logprob: -12.180153846740723

Token 164: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' rest' (ID: 2867)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.842179536819458
    2. 'e' → logprob: -1.967179536819458
    3. 'rest' → logprob: -1.967179536819458
    4. 'k' → logprob: -2.717179536819458
    5. ' rest' → logprob: -2.842179536819458
    6. ' d' → logprob: -2.967179536819458
    7. ' e' → logprob: -3.092179536819458
    8. '(rest' → logprob: -4.342179298400879
    9. ' (' → logprob: -4.467179298400879
    10. '(k' → logprob: -4.467179298400879

Token 166: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.079106904566288
    2. '*' → logprob: -2.5791068077087402
    3. '*d' → logprob: -9.829107284545898
    4. 'e' → logprob: -10.204107284545898
    5. ' ' → logprob: -10.204107284545898
    6. '*k' → logprob: -11.079107284545898
    7. '**' → logprob: -11.079107284545898
    8. ' ' → logprob: -11.704107284545898
    9. ' **' → logprob: -11.954107284545898
    10. 'd' → logprob: -12.204107284545898

Token 167: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11158879101276398
    2. ' e' → logprob: -2.486588716506958
    3. 'd' → logprob: -4.236588954925537
    4. 'c' → logprob: -5.611588954925537
    5. 'b' → logprob: -6.486588954925537
    6. ' d' → logprob: -6.611588954925537
    7. ' c' → logprob: -7.986588954925537
    8. 'a' → logprob: -8.361588478088379
    9. ' ' → logprob: -8.549088478088379
    10. 'k' → logprob: -9.174088478088379

Token 168: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' rest' (ID: 2867)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6639704704284668
    2. 'rest' → logprob: -1.0389704704284668
    3. 'e' → logprob: -2.663970470428467
    4. 'k' → logprob: -2.913970470428467
    5. ' rest' → logprob: -5.538970470428467
    6. ' d' → logprob: -6.788970470428467
    7. 'c' → logprob: -7.538970470428467
    8. ' e' → logprob: -7.788970470428467
    9. '5' → logprob: -8.413970947265625
    10. '1' → logprob: -8.663970947265625

Token 170: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' Mais' (ID: 13880)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03450325131416321
    2. ' if' → logprob: -3.409503221511841
    3. 'res' → logprob: -7.15950345993042
    4. ' res' → logprob: -10.284502983093262
    5. '       ' → logprob: -10.784502983093262
    6. '   ' → logprob: -11.034502983093262
    7. 'If' → logprob: -13.159502983093262
    8. '
' → logprob: -13.534502983093262
    9. 'price' → logprob: -13.659502983093262
    10. '           ' → logprob: -13.784502983093262

Token 174: ' on' (ID: 402)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.6940250396728516
    2. 'if' → logprob: -1.5690250396728516
    3. 'price' → logprob: -1.8190250396728516
    4. ' if' → logprob: -2.4440250396728516
    5. 'res' → logprob: -4.194025039672852
    6. ' res' → logprob: -4.319025039672852
    7. ' prix' → logprob: -5.194025039672852
    8. ' si' → logprob: -6.069025039672852
    9. '   ' → logprob: -6.319025039672852
    10. 'prix' → logprob: -6.569025039672852

Token 175: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9234085083007812
    2. 'continue' → logprob: -1.2984085083007812
    3. 'if' → logprob: -1.7984085083007812
    4. 'compare' → logprob: -3.1734085083007812
    5. ' compare' → logprob: -3.2984085083007812
    6. ' if' → logprob: -3.5484085083007812
    7. 'contin' → logprob: -5.048408508300781
    8. ' veut' → logprob: -5.173408508300781
    9. ' cherche' → logprob: -5.673408508300781
    10. ' regarde' → logprob: -5.673408508300781

Token 176: ' sait' (ID: 52101)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6757906079292297
    2. ' garde' → logprob: -1.300790548324585
    3. ' prend' → logprob: -1.800790548324585
    4. 'compare' → logprob: -4.550790786743164
    5. ' compare' → logprob: -5.175790786743164
    6. 'if' → logprob: -5.550790786743164
    7. 'ret' → logprob: -5.800790786743164
    8. ' g' → logprob: -5.925790786743164
    9. 'pr' → logprob: -6.050790786743164
    10. ' prends' → logprob: -6.175790786743164

Token 177: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6624690294265747
    2. ' pas' → logprob: -0.7874690294265747
    3. ' jamais' → logprob: -3.537468910217285
    4. ' rien' → logprob: -9.287468910217285
    5. 'r' → logprob: -9.787468910217285
    6. 'p' → logprob: -10.662468910217285
    7. '   ' → logprob: -10.662468910217285
    8. ' ' → logprob: -10.787468910217285
    9. 'jam' → logprob: -10.787468910217285
    10. 'plus' → logprob: -10.912468910217285

Token 178: ' si' (ID: 1784)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.024681253358721733
    2. 'pas' → logprob: -4.774681091308594
    3. ' jamais' → logprob: -4.774681091308594
    4. ' si' → logprob: -5.899681091308594
    5. ' toujours' → logprob: -6.024681091308594
    6. ' if' → logprob: -6.649681091308594
    7. 'if' → logprob: -7.899681091308594
    8. ' plus' → logprob: -9.024681091308594
    9. ' ' → logprob: -9.149681091308594
    10. ' s' → logprob: -9.399681091308594

Token 179: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.08290655165910721
    2. ' rest' → logprob: -3.082906484603882
    3. 'price' → logprob: -3.707906484603882
    4. ' res' → logprob: -5.832906723022461
    5. ' k' → logprob: -6.332906723022461
    6. ' prix' → logprob: -6.582906723022461
    7. 'rest' → logprob: -6.957906723022461
    8. ' ' → logprob: -7.957906723022461
    9. ' le' → logprob: -8.332906723022461
    10. 'k' → logprob: -8.457906723022461

Token 180: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02683963254094124
    2. '<' → logprob: -4.401839733123779
    3. ' <=' → logprob: -4.901839733123779
    4. ' >' → logprob: -5.151839733123779
    5. '<=' → logprob: -8.151839256286621
    6. '>' → logprob: -8.401839256286621
    7. '<|end|>' → logprob: -9.026839256286621
    8. '   ' → logprob: -9.276839256286621
    9. ' >=' → logprob: -9.651839256286621
    10. ' ' → logprob: -10.151839256286621

Token 181: ' meilleur' (ID: 37552)
  Prédit: ' meilleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' meilleur' → logprob: -1.047719955444336
    2. ' inférieur' → logprob: -1.297719955444336
    3. ' moins' → logprob: -1.922719955444336
    4. 'moins' → logprob: -2.672719955444336
    5. '<' → logprob: -3.297719955444336
    6. 'min' → logprob: -3.547719955444336
    7. 'le' → logprob: -3.672719955444336
    8. ' moindre' → logprob: -3.672719955444336
    9. ' <' → logprob: -4.797719955444336
    10. ' less' → logprob: -5.672719955444336

Token 182: ' que' (ID: 661)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6482158303260803
    2. ',' → logprob: -1.6482157707214355
    3. '   ' → logprob: -2.0232157707214355
    4. '<|end|>' → logprob: -3.0232157707214355
    5. ' ' → logprob: -3.7732157707214355
    6. ' ou' → logprob: -4.0232157707214355
    7. '<|end|>' → logprob: -4.5232157707214355
    8. ' ,' → logprob: -5.2732157707214355
    9. ' and' → logprob: -5.3982157707214355
    10. '       ' → logprob: -5.3982157707214355

Token 183: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5232928395271301
    2. ' res' → logprob: -0.8982928395271301
    3. ' price' → logprob: -10.148292541503906
    4. 'price' → logprob: -10.523292541503906
    5. ' ' → logprob: -10.898292541503906
    6. ' ' → logprob: -11.023292541503906
    7. '	res' → logprob: -11.398292541503906
    8. ' la' → logprob: -11.773292541503906
    9. ' total' → logprob: -11.898292541503906
    10. '   ' → logprob: -12.148292541503906

Token 184: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19978253543376923
    2. ' if' → logprob: -2.199782609939575
    3. 'if' → logprob: -3.449782609939575
    4. '   ' → logprob: -3.824782609939575
    5. '       ' → logprob: -5.324782371520996
    6. '<|end|>' → logprob: -5.574782371520996
    7. '<|end|>' → logprob: -6.449782371520996
    8. '    
' → logprob: -6.449782371520996
    9. '
' → logprob: -7.324782371520996
    10. ':
' → logprob: -7.449782371520996

Token 185: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39846834540367126
    2. '   ' → logprob: -2.148468255996704
    3. '
' → logprob: -2.648468255996704
    4. '    ' → logprob: -3.523468255996704
    5. 'res' → logprob: -4.023468494415283
    6. ' 
' → logprob: -4.023468494415283
    7. ' res' → logprob: -4.148468494415283
    8. ' if' → logprob: -4.648468494415283
    9. '        
' → logprob: -4.773468494415283
    10. '        ' → logprob: -5.148468494415283

Token 186: ' compare' (ID: 12221)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.23929037153720856
    2. 'if' → logprob: -2.614290475845337
    3. ' if' → logprob: -3.114290475845337
    4. ' compare' → logprob: -4.239290237426758
    5. '   ' → logprob: -4.489290237426758
    6. ' continues' → logprob: -4.739290237426758
    7. ' doit' → logprob: -4.989290237426758
    8. '    ' → logprob: -5.239290237426758
    9. 'continue' → logprob: -5.239290237426758
    10. ' regarde' → logprob: -5.364290237426758

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0618102550506592
    2. ' if' → logprob: -1.4368102550506592
    3. '   ' → logprob: -2.311810255050659
    4. '<|end|>' → logprob: -2.436810255050659
    5. 'if' → logprob: -3.061810255050659
    6. ' =' → logprob: -3.436810255050659
    7. '<|end|>' → logprob: -3.561810255050659
    8. '       ' → logprob: -3.811810255050659
    9. '=' → logprob: -4.061810493469238
    10. 'res' → logprob: -4.186810493469238

Token 188: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08893085271120071
    2. '<|end|>' → logprob: -3.46393084526062
    3. ' if' → logprob: -3.83893084526062
    4. '   ' → logprob: -3.96393084526062
    5. '<|end|>' → logprob: -5.588931083679199
    6. '    
' → logprob: -5.713931083679199
    7. 'if' → logprob: -6.713931083679199
    8. '  
' → logprob: -6.838931083679199
    9. ' 
' → logprob: -7.088931083679199
    10. '       ' → logprob: -7.463931083679199

Token 189: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7547191977500916
    2. ' if' → logprob: -0.7547191977500916
    3. 'if' (adapté à ' if') → logprob: -3.3797192573547363
    4. '   ' → logprob: -4.254719257354736
    5. ' =' → logprob: -6.254719257354736
    6. '       ' → logprob: -6.254719257354736
    7. '=' → logprob: -6.379719257354736
    8. '    
' → logprob: -6.504719257354736
    9. 'res' → logprob: -6.629719257354736
    10. '<|end|>' → logprob: -7.129719257354736

Token 190: ' rest' (ID: 2867)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.0013269031187519431
    2. 'price' → logprob: -6.626327037811279
    3. '(price' → logprob: -14.626326560974121
    4. ' res' → logprob: -15.501326560974121
    5. '	price' → logprob: -15.501326560974121
    6. 'res' → logprob: -17.251327514648438
    7. ' pric' → logprob: -18.001327514648438
    8. ' prix' → logprob: -18.376327514648438
    9. ' ' → logprob: -18.626327514648438
    10. '_price' → logprob: -18.751327514648438

Token 191: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6016749739646912
    2. '<' → logprob: -1.726675033569336
    3. ' ==' → logprob: -1.976675033569336
    4. '==' → logprob: -2.601675033569336
    5. ' >' → logprob: -3.351675033569336
    6. '>' → logprob: -3.976675033569336
    7. ' !=' → logprob: -5.601675033569336
    8. '!=' → logprob: -6.601675033569336
    9. ' and' → logprob: -7.351675033569336
    10. ' >=' → logprob: -7.851675033569336

Token 192: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5826479196548462
    2. 'd' → logprob: -0.8326479196548462
    3. 'k' → logprob: -5.457647800445557
    4. ' k' → logprob: -6.207647800445557
    5. ' ' → logprob: -8.457648277282715
    6. '=' → logprob: -10.082648277282715
    7. '0' → logprob: -10.457648277282715
    8. '  ' → logprob: -11.207648277282715
    9. 'e' → logprob: -11.457648277282715
    10. 'n' → logprob: -11.582648277282715

Token 193: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17175854742527008
    2. ':' → logprob: -1.9217585325241089
    3. ':
' → logprob: -4.921758651733398
    4. 'and' → logprob: -5.546758651733398
    5. ' :' → logprob: -8.671758651733398
    6. ' or' → logprob: -10.421758651733398
    7. ',' → logprob: -10.671758651733398
    8. ' :
' → logprob: -11.046758651733398
    9. ' ' → logprob: -11.796758651733398
    10. '       ' → logprob: -12.046758651733398

Token 194: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5624707937240601
    2. ' and' → logprob: -1.56247079372406
    3. '           ' → logprob: -1.81247079372406
    4. ':' → logprob: -3.3124709129333496
    5. ':
' → logprob: -4.43747091293335
    6. '<|end|>' → logprob: -5.56247091293335
    7. '
' → logprob: -6.93747091293335
    8. '   ' → logprob: -7.06247091293335
    9. '<|end|>' → logprob: -7.43747091293335
    10. 'and' → logprob: -7.56247091293335

Token 195: ' rest' (ID: 2867)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.8393751978874207
    2. 'if' → logprob: -1.9643752574920654
    3. ' if' → logprob: -1.9643752574920654
    4. '       ' → logprob: -2.0893752574920654
    5. ' price' → logprob: -2.4643752574920654
    6. '
' → logprob: -3.3393752574920654
    7. '           ' → logprob: -3.5893752574920654
    8. 'res' → logprob: -4.464375019073486
    9. ' res' → logprob: -6.464375019073486
    10. '               ' → logprob: -6.714375019073486

Token 196: '_price' (ID: 18814)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1855614185333252
    2. '*' → logprob: -1.9355614185333252
    3. ' =' → logprob: -4.685561180114746
    4. '=' → logprob: -4.935561180114746
    5. ' *=' → logprob: -6.185561180114746
    6. 'price' → logprob: -6.935561180114746
    7. '*=' → logprob: -7.185561180114746
    8. '_price' → logprob: -7.560561180114746
    9. '==' → logprob: -7.685561180114746
    10. ' ==' → logprob: -7.810561180114746

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10030727088451385
    2. '=' → logprob: -2.3503072261810303
    3. ' +=' → logprob: -9.47530746459961
    4. '+=' → logprob: -11.10030746459961
    5. ' ' → logprob: -11.97530746459961
    6. '+' → logprob: -13.97530746459961
    7. '   ' → logprob: -14.72530746459961
    8. ' +' → logprob: -14.85030746459961
    9. 's' → logprob: -15.72530746459961
    10. '  ' → logprob: -15.85030746459961

Token 198: ' min' (ID: 1349)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.08106014877557755
    2. 'e' → logprob: -3.3310601711273193
    3. 'nb' → logprob: -4.08105993270874
    4. 'k' → logprob: -4.83105993270874
    5. ' rest' → logprob: -5.08105993270874
    6. 'd' → logprob: -5.83105993270874
    7. '(rest' → logprob: -6.20605993270874
    8. 'price' → logprob: -6.70605993270874
    9. '(nb' → logprob: -7.20605993270874
    10. '(' → logprob: -7.20605993270874

Token 199: '(rest' (ID: 117922)
  Prédit: '(rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.471145361661911
    2. '(e' → logprob: -2.0961453914642334
    3. '(price' → logprob: -2.2211453914642334
    4. '(k' → logprob: -2.7211453914642334
    5. '((' → logprob: -3.4711453914642334
    6. '(d' → logprob: -3.8461453914642334
    7. '(' → logprob: -4.596145153045654
    8. '(nb' → logprob: -4.846145153045654
    9. '(n' → logprob: -5.596145153045654
    10. '(res' → logprob: -6.346145153045654

Token 200: '*a' (ID: 78448)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2289583384990692
    2. '*' → logprob: -1.8539583683013916
    3. '*d' → logprob: -3.7289583683013916
    4. ',' → logprob: -4.2289581298828125
    5. '*k' → logprob: -5.8539581298828125
    6. ' ,' → logprob: -6.3539581298828125
    7. ',d' → logprob: -6.4789581298828125
    8. ',e' → logprob: -6.7289581298828125
    9. 'e' → logprob: -7.1039581298828125
    10. ',k' → logprob: -7.8539581298828125

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018265122547745705
    2. ' ,' → logprob: -4.393265247344971
    3. ' +' → logprob: -5.643265247344971
    4. '+' → logprob: -6.768265247344971
    5. ',d' → logprob: -8.143264770507812
    6. ',b' → logprob: -8.643264770507812
    7. 'rest' → logprob: -9.143264770507812
    8. ',e' → logprob: -9.143264770507812
    9. ',
' → logprob: -10.018264770507812
    10. 'e' → logprob: -10.143264770507812

Token 202: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.3498896360397339
    2. ' rest' → logprob: -1.2248896360397339
    3. '   ' → logprob: -7.849889755249023
    4. 'e' → logprob: -7.974889755249023
    5. ' e' → logprob: -8.224889755249023
    6. 'res' → logprob: -9.349889755249023
    7. '    ' → logprob: -9.974889755249023
    8. ' res' → logprob: -9.974889755249023
    9. ' ' → logprob: -10.099889755249023
    10. '  ' → logprob: -10.349889755249023

Token 203: '*b' (ID: 72162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0040400526486337185
    2. '*b' → logprob: -5.879040241241455
    3. '*c' → logprob: -7.379040241241455
    4. ' *' → logprob: -8.004039764404297
    5. '*d' → logprob: -8.254039764404297
    6. '*a' → logprob: -11.754039764404297
    7. 'e' → logprob: -12.254039764404297
    8. '*(' → logprob: -14.629039764404297
    9. '*f' → logprob: -14.754039764404297
    10. '*k' → logprob: -14.879039764404297

Token 204: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010723463492468
    2. ',' → logprob: -7.126072406768799
    3. ' )' → logprob: -9.00107192993164
    4. '+' → logprob: -9.62607192993164
    5. ')
' → logprob: -10.37607192993164
    6. ' +' → logprob: -12.00107192993164
    7. 'rest' → logprob: -12.00107192993164
    8. ' rest' → logprob: -12.62607192993164
    9. '(rest' → logprob: -12.62607192993164
    10. ',res' → logprob: -12.75107192993164

Token 205: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.004686326254159212
    2. ' rest' → logprob: -5.37968635559082
    3. 'res' → logprob: -10.25468635559082
    4. '
' → logprob: -11.75468635559082
    5. '(rest' → logprob: -12.00468635559082
    6. 'e' → logprob: -12.12968635559082
    7. 'ress' → logprob: -13.25468635559082
    8. 'd' → logprob: -13.75468635559082
    9. 'reste' → logprob: -14.19218635559082
    10. 'c' → logprob: -14.19218635559082

Token 206: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.012056301347911358
    2. '*' → logprob: -4.637056350708008
    3. '*a' → logprob: -6.262056350708008
    4. '*d' → logprob: -8.637056350708008
    5. ' *' → logprob: -9.887056350708008
    6. ')' → logprob: -9.887056350708008
    7. 'c' → logprob: -10.387056350708008
    8. '*b' → logprob: -10.762056350708008
    9. '*r' → logprob: -11.262056350708008
    10. 'e' → logprob: -11.512056350708008

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014768906403332949
    2. ')
' → logprob: -7.126476764678955
    3. '       ' → logprob: -7.626476764678955
    4. '           ' → logprob: -9.251477241516113
    5. ' )' → logprob: -10.376477241516113
    6. ',' → logprob: -11.001477241516113
    7. '   ' → logprob: -12.251477241516113
    8. ')+' → logprob: -12.251477241516113
    9. ')*' → logprob: -12.626477241516113
    10. '               ' → logprob: -12.876477241516113

Token 208: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34665852785110474
    2. '<|end|>' → logprob: -2.22165846824646
    3. '           ' → logprob: -2.59665846824646
    4. ')' → logprob: -2.97165846824646
    5. ' else' → logprob: -3.47165846824646
    6. 'else' → logprob: -4.596658706665039
    7. '
' → logprob: -4.721658706665039
    8. ',' → logprob: -6.221658706665039
    9. '               ' → logprob: -6.596658706665039
    10. '            
' → logprob: -6.721658706665039

Token 209: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1465709209442139
    2. 'if' → logprob: -1.1465709209442139
    3. ' if' → logprob: -1.6465709209442139
    4. 'price' → logprob: -2.521570920944214
    5. '           ' → logprob: -3.021570920944214
    6. '
' → logprob: -3.771570920944214
    7. ' price' → logprob: -4.771571159362793
    8. ')' → logprob: -5.771571159362793
    9. 'res' → logprob: -5.896571159362793
    10. '   ' → logprob: -6.896571159362793

Token 210: ' ce' (ID: 2357)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7926992177963257
    2. ' if' → logprob: -1.4176992177963257
    3. 'price' → logprob: -1.6676992177963257
    4. ' price' → logprob: -2.5426993370056152
    5. 'res' → logprob: -4.042699337005615
    6. ' res' → logprob: -4.667699337005615
    7. '       ' → logprob: -5.542699337005615
    8. '           ' → logprob: -5.792699337005615
    9. 'rest' → logprob: -7.167699337005615
    10. '   ' → logprob: -7.292699337005615

Token 211: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5184969305992126
    2. ' if' → logprob: -2.0184969902038574
    3. 'n' → logprob: -2.8934969902038574
    4. 'ci' → logprob: -3.2684969902038574
    5. '   ' → logprob: -3.7684969902038574
    6. 's' → logprob: -3.7684969902038574
    7. 'rest' → logprob: -4.268496990203857
    8. ' n' → logprob: -4.268496990203857
    9. ' rest' → logprob: -4.518496990203857
    10. 'price' → logprob: -4.518496990203857

Token 212: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.41749075055122375
    2. ' n' → logprob: -1.6674907207489014
    3. 'n' → logprob: -2.0424907207489014
    4. ''' → logprob: -4.7924909591674805
    5. 'e' → logprob: -5.1674909591674805
    6. 'est' → logprob: -5.7924909591674805
    7. '=' → logprob: -6.9174909591674805
    8. 'if' → logprob: -7.1674909591674805
    9. 'pas' → logprob: -7.1674909591674805
    10. '’est' → logprob: -7.4174909591674805

Token 213: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.011110070161521435
    2. ' pas' → logprob: -4.511110305786133
    3. '_pas' → logprob: -11.261110305786133
    4. '   ' → logprob: -11.761110305786133
    5. 'plus' → logprob: -12.261110305786133
    6. 'p' → logprob: -12.511110305786133
    7. 'pa' → logprob: -12.511110305786133
    8. '       ' → logprob: -12.636110305786133
    9. 't' → logprob: -12.761110305786133
    10. 's' → logprob: -12.886110305786133

Token 214: ' correct' (ID: 6145)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.42423954606056213
    2. ' pas' → logprob: -1.1742395162582397
    3. ' rest' → logprob: -4.674239635467529
    4. 'rest' → logprob: -4.924239635467529
    5. 'une' → logprob: -5.424239635467529
    6. 'le' → logprob: -6.174239635467529
    7. '   ' → logprob: -6.674239635467529
    8. ' meilleur' → logprob: -6.924239635467529
    9. 'un' → logprob: -7.049239635467529
    10. 'possible' → logprob: -7.049239635467529

Token 215: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8021988868713379
    2. '<|end|>' → logprob: -0.9271988868713379
    3. '           ' → logprob: -2.427198886871338
    4. ')' → logprob: -3.052198886871338
    5. ' rest' → logprob: -5.552198886871338
    6. '<|end|>' → logprob: -5.677198886871338
    7. ' if' → logprob: -5.927198886871338
    8. ',' → logprob: -6.052198886871338
    9. '               ' → logprob: -6.302198886871338
    10. ' else' → logprob: -6.677198886871338

Token 216: ' on' (ID: 402)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.1770056039094925
    2. 'rest' → logprob: -2.5520055294036865
    3. '           ' → logprob: -3.3020055294036865
    4. '               ' → logprob: -4.302005767822266
    5. ' price' → logprob: -5.177005767822266
    6. ')' → logprob: -5.302005767822266
    7. '       ' → logprob: -5.677005767822266
    8. 'price' → logprob: -6.177005767822266
    9. '                       ' → logprob: -6.302005767822266
    10. '            ' → logprob: -6.427005767822266

Token 217: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.224381446838379
    2. ' continue' → logprob: -1.349381446838379
    3. 'n' → logprob: -2.724381446838379
    4. ' doit' → logprob: -2.974381446838379
    5. ' n' → logprob: -3.349381446838379
    6. ' ne' → logprob: -3.599381446838379
    7. 've' → logprob: -3.599381446838379
    8. ' veut' → logprob: -3.599381446838379
    9. ' compare' → logprob: -4.224381446838379
    10. 'ne' → logprob: -4.224381446838379

Token 218: ' sait' (ID: 52101)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.3493254780769348
    2. ' peut' → logprob: -2.47432541847229
    3. 'pas' → logprob: -2.59932541847229
    4. 's' → logprob: -3.72432541847229
    5. 'compare' → logprob: -4.099325656890869
    6. ' sait' → logprob: -4.224325656890869
    7. 'pour' → logprob: -4.349325656890869
    8. 'p' → logprob: -4.349325656890869
    9. 'continue' → logprob: -4.599325656890869
    10. ' compare' → logprob: -4.974325656890869

Token 219: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6326866149902344
    2. 'pas' → logprob: -0.7576866149902344
    3. '   ' → logprob: -10.757686614990234
    4. ' ' → logprob: -11.007686614990234
    5. '_pas' → logprob: -11.507686614990234
    6. '  ' → logprob: -12.007686614990234
    7. 'if' → logprob: -12.257686614990234
    8. 'p' → logprob: -12.257686614990234
    9. ' if' → logprob: -12.507686614990234
    10. 'pass' → logprob: -12.882686614990234

Token 220: ' comment' (ID: 5375)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.7637245059013367
    2. ' if' → logprob: -1.5137245655059814
    3. ' pas' → logprob: -1.8887245655059814
    4. '       ' → logprob: -3.3887245655059814
    5. '           ' → logprob: -3.6387245655059814
    6. ' quel' → logprob: -4.013724327087402
    7. ' ce' → logprob: -4.263724327087402
    8. 'pas' → logprob: -4.513724327087402
    9. ' rest' → logprob: -4.763724327087402
    10. 'if' → logprob: -4.763724327087402

Token 221: ' répart' (ID: 147636)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -2.289663553237915
    2. ' gérer' → logprob: -2.289663553237915
    3. ' reg' → logprob: -2.414663553237915
    4. ' rest' → logprob: -2.539663553237915
    5. '   ' → logprob: -2.789663553237915
    6. 'calcul' → logprob: -2.914663553237915
    7. 'comb' → logprob: -3.164663553237915
    8. ' calcul' → logprob: -3.289663553237915
    9. 'les' → logprob: -3.414663553237915
    10. ' traiter' → logprob: -3.664663553237915

Token 222: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0007865179213695228
    2. '   ' → logprob: -8.875786781311035
    3. 'er' → logprob: -9.375786781311035
    4. 'ier' → logprob: -9.500786781311035
    5. 'i' → logprob: -9.750786781311035
    6. '       ' → logprob: -10.250786781311035
    7. 'irer' → logprob: -10.500786781311035
    8. 'ition' → logprob: -10.563286781311035
    9. 'tir' → logprob: -10.688286781311035
    10. '#' → logprob: -10.688286781311035

Token 223: ' les' (ID: 1341)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.9360337257385254
    2. ' rest' → logprob: -1.0610337257385254
    3. ' entre' → logprob: -1.9360337257385254
    4. ')' → logprob: -3.5610337257385254
    5. ' les' → logprob: -4.436033725738525
    6. '       ' → logprob: -4.436033725738525
    7. '
' → logprob: -4.561033725738525
    8. '   ' → logprob: -4.811033725738525
    9. ' le' → logprob: -5.186033725738525
    10. '           ' → logprob: -5.436033725738525

Token 224: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.11793665587902069
    2. ' rest' → logprob: -2.367936611175537
    3. 'tokens' → logprob: -5.242936611175537
    4. 'rests' → logprob: -5.867936611175537
    5. ' tokens' → logprob: -6.617936611175537
    6. 'reste' → logprob: -6.742936611175537
    7. ' rests' → logprob: -6.992936611175537
    8. 'units' → logprob: -7.367936611175537
    9. ' ' → logprob: -7.492936611175537
    10. 'items' → logprob: -7.617936611175537

Token 225: 'ants' (ID: 2027)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.176710844039917
    2. '_price' → logprob: -1.426710844039917
    3. '       ' → logprob: -1.926710844039917
    4. '   ' → logprob: -2.176710844039917
    5. '
' → logprob: -4.051711082458496
    6. 'rest' → logprob: -4.176711082458496
    7. '           ' → logprob: -4.301711082458496
    8. ' rest' → logprob: -4.301711082458496
    9. '_rest' → logprob: -4.551711082458496
    10. ' else' → logprob: -4.676711082458496

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17682930827140808
    2. ')' → logprob: -3.0518293380737305
    3. '           ' → logprob: -3.3018293380737305
    4. '<|end|>' → logprob: -3.5518293380737305
    5. ' rest' → logprob: -4.5518293380737305
    6. '
' → logprob: -5.0518293380737305
    7. '   ' → logprob: -5.4268293380737305
    8. ' else' → logprob: -5.5518293380737305
    9. ',' → logprob: -5.6768293380737305
    10. 'rest' → logprob: -5.8018293380737305

Token 227: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9530576467514038
    2. ' continue' → logprob: -1.5780576467514038
    3. 'continue' → logprob: -1.7030576467514038
    4. '           ' → logprob: -2.4530577659606934
    5. ' if' → logprob: -2.8280577659606934
    6. 'if' → logprob: -3.8280577659606934
    7. 'price' → logprob: -4.828057765960693
    8. 'else' → logprob: -4.828057765960693
    9. ' price' → logprob: -4.953057765960693
    10. '   ' → logprob: -5.203057765960693

Token 230: ' solution' (ID: 7578)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.3328619003295898
    2. 'if' → logprob: -1.4578619003295898
    3. ' if' → logprob: -1.9578619003295898
    4. 'continue' → logprob: -2.33286190032959
    5. ' for' → logprob: -2.58286190032959
    6. ' rest' → logprob: -3.08286190032959
    7. 'for' → logprob: -3.33286190032959
    8. ' pass' → logprob: -3.83286190032959
    9. 'elif' → logprob: -4.70786190032959
    10. 'pass' → logprob: -4.83286190032959

Token 231: ' simple' (ID: 4705)
  Prédit: ' optimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -0.9910554885864258
    2. ' =' → logprob: -1.3660554885864258
    3. '       ' → logprob: -2.366055488586426
    4. '=' → logprob: -2.366055488586426
    5. ' n' → logprob: -3.741055488586426
    6. ' complète' → logprob: -3.741055488586426
    7. 'est' → logprob: -3.991055488586426
    8. 'n' → logprob: -3.991055488586426
    9. 'optim' → logprob: -4.241055488586426
    10. 'optimal' → logprob: -4.366055488586426

Token 232: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2761027216911316
    2. '<|end|>' → logprob: -2.2761027812957764
    3. ' continue' → logprob: -2.6511027812957764
    4. '           ' → logprob: -3.5261027812957764
    5. ' continues' → logprob: -5.026102542877197
    6. '   ' → logprob: -5.151102542877197
    7. 'continue' → logprob: -5.401102542877197
    8. '<|end|>' → logprob: -5.401102542877197
    9. ' else' → logprob: -5.901102542877197
    10. ',' → logprob: -6.401102542877197

Token 233: ' comparer' (ID: 125081)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2956968545913696
    2. ' res' → logprob: -1.5456968545913696
    3. ' for' → logprob: -1.9206968545913696
    4. ' rest' → logprob: -1.9206968545913696
    5. ' price' → logprob: -2.79569673538208
    6. 'for' → logprob: -2.92069673538208
    7. 'rest' → logprob: -3.29569673538208
    8. 'price' → logprob: -3.67069673538208
    9. ' pass' → logprob: -4.54569673538208
    10. ' continue' → logprob: -4.54569673538208

Token 234: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.3527478873729706
    2. 'price' → logprob: -1.727747917175293
    3. ' rest' → logprob: -2.727747917175293
    4. ' res' → logprob: -4.477747917175293
    5. 'rest' → logprob: -4.977747917175293
    6. 'res' → logprob: -4.977747917175293
    7. '       ' → logprob: -5.227747917175293
    8. ' if' → logprob: -5.352747917175293
    9. ' total' → logprob: -5.477747917175293
    10. '   ' → logprob: -5.727747917175293

Token 235: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09465602040290833
    2. ',' → logprob: -3.594655990600586
    3. '           ' → logprob: -4.219655990600586
    4. ' if' → logprob: -4.469655990600586
    5. '<|end|>' → logprob: -4.719655990600586
    6. '   ' → logprob: -5.219655990600586
    7. '<|end|>' → logprob: -5.219655990600586
    8. ' and' → logprob: -5.344655990600586
    9. '               ' → logprob: -5.844655990600586
    10. ')' → logprob: -6.719655990600586

Token 236: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9415450096130371
    2. ' res' → logprob: -1.191545009613037
    3. ' total' → logprob: -2.066545009613037
    4. 'total' → logprob: -2.066545009613037
    5. 'rest' → logprob: -3.691545009613037
    6. ' rest' → logprob: -4.566545009613037
    7. ' price' → logprob: -5.191545009613037
    8. 'price' → logprob: -5.441545009613037
    9. ' min' → logprob: -5.691545009613037
    10. 'min' → logprob: -6.816545009613037

Token 237: ' directement' (ID: 52317)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039520688354969025
    2. '<|end|>' → logprob: -3.539520740509033
    3. '<|end|>' → logprob: -5.914520740509033
    4. ' and' → logprob: -6.414520740509033
    5. ' if' → logprob: -6.539520740509033
    6. '
' → logprob: -6.789520740509033
    7. '   ' → logprob: -6.914520740509033
    8. ',' → logprob: -7.414520740509033
    9. '           ' → logprob: -8.414520263671875
    10. ')' → logprob: -8.539520263671875

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09175822883844376
    2. '<|end|>' → logprob: -3.3417582511901855
    3. '   ' → logprob: -3.5917582511901855
    4. '
' → logprob: -4.0917582511901855
    5. '<|end|>' → logprob: -6.0917582511901855
    6. ' if' → logprob: -6.5917582511901855
    7. ')' → logprob: -6.7167582511901855
    8. ' and' → logprob: -7.3417582511901855
    9. ',' → logprob: -7.4667582511901855
    10. ':' → logprob: -8.091757774353027

Token 239: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' price' (ID: 3911)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39636316895484924
    2. ' if' → logprob: -1.5213631391525269
    3. '   ' → logprob: -2.8963632583618164
    4. 'if' → logprob: -3.0213632583618164
    5. ' res' → logprob: -6.646363258361816
    6. 'res' → logprob: -6.646363258361816
    7. '           ' → logprob: -6.896363258361816
    8. ')' → logprob: -8.896363258361816
    9. '=' → logprob: -8.896363258361816
    10. '
' → logprob: -9.271363258361816

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7716658711433411
    2. '=' → logprob: -1.0216658115386963
    3. ' <' → logprob: -2.1466658115386963
    4. ' >' → logprob: -3.5216658115386963
    5. '>' → logprob: -5.146666049957275
    6. '<' → logprob: -5.271666049957275
    7. ' <=' → logprob: -5.396666049957275
    8. '<|end|>' → logprob: -5.396666049957275
    9. ' >=' → logprob: -5.646666049957275
    10. '>=' → logprob: -6.271666049957275

Token 242: ' nb' (ID: 28791)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03367716446518898
    2. ' min' → logprob: -3.658677101135254
    3. 'price' → logprob: -5.533677101135254
    4. 'total' → logprob: -5.908677101135254
    5. 'res' → logprob: -8.158677101135254
    6. ' price' → logprob: -8.658677101135254
    7. ' total' → logprob: -8.783677101135254
    8. 'nb' → logprob: -10.783677101135254
    9. 'max' → logprob: -11.408677101135254
    10. ' res' → logprob: -11.533677101135254

Token 243: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -2.2007883671903983e-05
    2. '_set' → logprob: -12.125021934509277
    3. ' _' → logprob: -12.250021934509277
    4. 'sets' → logprob: -12.625021934509277
    5. '_' → logprob: -13.000021934509277
    6. 'Sets' → logprob: -13.375021934509277
    7. ' sets' → logprob: -14.625021934509277
    8. '_s' → logprob: -14.875021934509277
    9. '
' → logprob: -14.875021934509277
    10. ' ' → logprob: -15.250021934509277

Token 244: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.024643566459417343
    2. '*' → logprob: -3.774643659591675
    3. '<|end|>' → logprob: -6.649643421173096
    4. 'price' → logprob: -10.649643898010254
    5. '_price' → logprob: -11.024643898010254
    6. '<|end|>' → logprob: -11.274643898010254
    7. '*k' → logprob: -11.399643898010254
    8. '**' → logprob: -11.899643898010254
    9. ' ' → logprob: -12.399643898010254
    10. '```' → logprob: -12.774643898010254

Token 245: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18158358335494995
    2. ' k' → logprob: -1.8065836429595947
    3. 'e' → logprob: -7.181583404541016
    4. ' e' → logprob: -7.306583404541016
    5. ' ' → logprob: -9.056583404541016
    6. '<|end|>' → logprob: -9.306583404541016
    7. '(k' → logprob: -10.244083404541016
    8. ' (' → logprob: -11.119083404541016
    9. 'a' → logprob: -11.369083404541016
    10. '  ' → logprob: -11.431583404541016

Token 246: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31330162286758423
    2. '*' → logprob: -1.3133015632629395
    3. 'e' → logprob: -10.938302040100098
    4. ' ' → logprob: -12.188302040100098
    5. '*a' → logprob: -12.688302040100098
    6. '**' → logprob: -13.063302040100098
    7. '<|end|>' → logprob: -13.063302040100098
    8. '*b' → logprob: -13.438302040100098
    9. '```' → logprob: -14.250802040100098
    10. '+' → logprob: -14.313302040100098

Token 247: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.023810790851712227
    2. ' e' → logprob: -3.773810863494873
    3. 'd' → logprob: -8.148810386657715
    4. 'a' → logprob: -8.648810386657715
    5. ' ' → logprob: -10.398810386657715
    6. ' d' → logprob: -10.773810386657715
    7. 'b' → logprob: -11.523810386657715
    8. '	e' → logprob: -11.586310386657715
    9. ' a' → logprob: -11.773810386657715
    10. 'c' → logprob: -12.211310386657715

Token 248: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7236300706863403
    2. '+' → logprob: -1.4736300706863403
    3. ' if' → logprob: -2.223629951477051
    4. '       ' → logprob: -2.473629951477051
    5. '<|end|>' → logprob: -2.848629951477051
    6. 'if' → logprob: -4.473629951477051
    7. '   ' → logprob: -4.723629951477051
    8. '
' → logprob: -4.848629951477051
    9. '<|end|>' → logprob: -6.598629951477051
    10. 'price' → logprob: -7.223629951477051

Token 249: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.06064962223172188
    2. ' rest' → logprob: -3.0606496334075928
    3. 'min' → logprob: -4.810649394989014
    4. ' min' → logprob: -5.810649394989014
    5. '(rest' → logprob: -7.685649394989014
    6. 'res' → logprob: -9.310649871826172
    7. '   ' → logprob: -10.060649871826172
    8. 'e' → logprob: -10.060649871826172
    9. '(' → logprob: -10.185649871826172
    10. 'price' → logprob: -10.685649871826172

Token 250: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07119382917881012
    2. '*' → logprob: -2.6961939334869385
    3. '_price' → logprob: -7.196193695068359
    4. '<|end|>' → logprob: -8.44619369506836
    5. '*a' → logprob: -9.32119369506836
    6. 'price' → logprob: -10.32119369506836
    7. '*b' → logprob: -10.57119369506836
    8. '*_' → logprob: -11.07119369506836
    9. 'Price' → logprob: -11.57119369506836
    10. 'e' → logprob: -11.57119369506836

Token 251: ' a' (ID: 261)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1052020937204361
    2. 'a' → logprob: -3.3552021980285645
    3. 'd' → logprob: -3.4802021980285645
    4. ' e' → logprob: -3.6052021980285645
    5. 'min' → logprob: -5.8552021980285645
    6. ' d' → logprob: -6.4802021980285645
    7. ' min' → logprob: -6.7302021980285645
    8. ' a' → logprob: -6.8552021980285645
    9. ' ' → logprob: -9.230201721191406
    10. '1' → logprob: -9.230201721191406

Token 252: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' pire' (ID: 94963)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.1519744396209717
    2. 'else' → logprob: -2.2769744396209717
    3. 'minimum' → logprob: -2.4019744396209717
    4. 'moins' → logprob: -2.7769744396209717
    5. '   ' → logprob: -3.1519744396209717
    6. ' lieu' → logprob: -3.4019744396209717
    7. 'pass' → logprob: -3.4019744396209717
    8. ' mieux' → logprob: -3.5269744396209717
    9. ' minimum' → logprob: -3.5269744396209717
    10. ' moins' → logprob: -3.9019744396209717

Token 255: ' prix' (ID: 18771)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' normal' (ID: 6078)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7488847374916077
    2. '<|end|>' → logprob: -0.7488847374916077
    3. '   ' → logprob: -4.123884677886963
    4. '<|end|>' → logprob: -4.248884677886963
    5. ' +' → logprob: -5.123884677886963
    6. '
' → logprob: -5.498884677886963
    7. '+' → logprob: -5.623884677886963
    8. ' if' → logprob: -6.123884677886963
    9. ',' → logprob: -6.748884677886963
    10. ')' → logprob: -6.748884677886963

Token 257: ' minimum' (ID: 11085)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' DVD' (ID: 19640)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -1.1096060276031494
    2. 'un' → logprob: -1.4846060276031494
    3. 'rest' → logprob: -1.4846060276031494
    4. ' unité' → logprob: -3.3596060276031494
    5. 'token' → logprob: -3.7346060276031494
    6. 'piece' → logprob: -4.10960578918457
    7. 'une' → logprob: -4.60960578918457
    8. 'reste' → logprob: -4.73460578918457
    9. 'a' → logprob: -4.73460578918457
    10. 'default' → logprob: -4.85960578918457

Token 260: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.201553225517273
    2. '   ' → logprob: -1.326553225517273
    3. 'if' → logprob: -2.2015533447265625
    4. '
' → logprob: -2.7015533447265625
    5. '       ' → logprob: -2.8265533447265625
    6. 'res' → logprob: -3.0765533447265625
    7. 'rest' → logprob: -3.7015533447265625
    8. '<|end|>' → logprob: -3.8265533447265625
    9. ')' → logprob: -4.4515533447265625
    10. ' res' → logprob: -4.8265533447265625

Token 262: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3615230321884155
    2. 'continue' → logprob: -1.2365230321884155
    3. 'contin' → logprob: -4.736523151397705
    4. ' continuer' → logprob: -6.861523151397705
    5. ' continues' → logprob: -7.111523151397705
    6. '       ' → logprob: -7.611523151397705
    7. ')' → logprob: -7.986523151397705
    8. ' continu' → logprob: -8.236522674560547
    9. 'continu' → logprob: -8.736522674560547
    10. ' reste' → logprob: -8.986522674560547

Token 263: ' sait' (ID: 52101)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1590585708618164
    2. ' continue' → logprob: -2.0340585708618164
    3. 'contin' → logprob: -4.659058570861816
    4. '       ' → logprob: -6.409058570861816
    5. 'pas' → logprob: -7.159058570861816
    6. 'replace' → logprob: -7.534058570861816
    7. 'a' → logprob: -7.659058570861816
    8. 'aj' → logprob: -7.784058570861816
    9. 'f' → logprob: -8.034058570861816
    10. '```' → logprob: -8.409058570861816

Token 264: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.9623810658231378e-05
    2. ' pas' → logprob: -11.625020027160645
    3. 'pass' → logprob: -12.125020027160645
    4. '           ' → logprob: -13.375020027160645
    5. '       ' → logprob: -13.500020027160645
    6. '_pas' → logprob: -14.250020027160645
    7. '               ' → logprob: -14.875020027160645
    8. '   ' → logprob: -15.375020027160645
    9. '        ' → logprob: -15.750020027160645
    10. '          ' → logprob: -15.875020027160645

Token 265: '
' (ID: 198)
  Prédit: 'comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comment' → logprob: -0.8276214003562927
    2. ' comment' → logprob: -1.7026214599609375
    3. '   ' → logprob: -2.9526214599609375
    4. 'how' → logprob: -3.2026214599609375
    5. ' how' → logprob: -3.4526214599609375
    6. ' pas' → logprob: -3.7026214599609375
    7. '       ' → logprob: -3.7026214599609375
    8. 'faire' → logprob: -4.0776214599609375
    9. 'pas' → logprob: -4.2026214599609375
    10. 'ré' → logprob: -4.2026214599609375

Token 266: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044113852083683014
    2. '   ' → logprob: -3.669113874435425
    3. ' if' → logprob: -4.919113636016846
    4. '<|end|>' → logprob: -5.169113636016846
    5. ')' → logprob: -6.669113636016846
    6. ' ' → logprob: -7.419113636016846
    7. ',' → logprob: -7.544113636016846
    8. 'if' → logprob: -8.169114112854004
    9. '<|end|>' → logprob: -8.169114112854004
    10. '=' → logprob: -8.544114112854004

Token 268: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47175946831703186
    2. ':' → logprob: -1.7217594385147095
    3. '           ' → logprob: -1.7217594385147095
    4. '       ' → logprob: -4.59675931930542
    5. 'price' → logprob: -5.84675931930542
    6. ' price' → logprob: -6.22175931930542
    7. ' :
' → logprob: -6.59675931930542
    8. ' :' → logprob: -7.72175931930542
    9. '
' → logprob: -7.84675931930542
    10. '   ' → logprob: -7.97175931930542

Token 269: '           ' (ID: 352)
  Prédit: ' price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.43563559651374817
    2. 'price' → logprob: -1.3106355667114258
    3. '           ' → logprob: -3.185635566711426
    4. ' nb' → logprob: -3.560635566711426
    5. '       ' → logprob: -4.685635566711426
    6. 'nb' → logprob: -6.310635566711426
    7. ' rest' → logprob: -6.810635566711426
    8. '   ' → logprob: -8.060635566711426
    9. 'rest' → logprob: -8.685635566711426
    10. '          ' → logprob: -8.935635566711426

Token 270: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' (adapté à ' price') → logprob: -0.017357112839818
    2. ' price' → logprob: -4.267357349395752
    3. 'rest' → logprob: -6.142357349395752
    4. 'nb' → logprob: -7.642357349395752
    5. ' nb' → logprob: -8.517356872558594
    6. ' rest' → logprob: -9.142356872558594
    7. '   ' → logprob: -9.392356872558594
    8. '       ' → logprob: -9.392356872558594
    9. '           ' → logprob: -10.642356872558594
    10. '     ' → logprob: -11.642356872558594

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132660686969757
    2. ' =' → logprob: -1.3132660388946533
    3. '*=' → logprob: -13.438265800476074
    4. ' *=' → logprob: -14.188265800476074
    5. '+=' → logprob: -14.313265800476074
    6. ' +=' → logprob: -14.938265800476074
    7. ' ' → logprob: -14.938265800476074
    8. ')' → logprob: -15.688265800476074
    9. '＝' → logprob: -15.938265800476074
    10. '*' → logprob: -15.938265800476074

Token 272: ' nb' (ID: 28791)
  Prédit: 'nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nb' → logprob: -0.06388552486896515
    2. '(nb' → logprob: -3.438885450363159
    3. ' nb' → logprob: -3.688885450363159
    4. 'price' → logprob: -6.063885688781738
    5. '(' → logprob: -7.063885688781738
    6. 'min' → logprob: -7.188885688781738
    7. '(n' → logprob: -7.938885688781738
    8. 'rest' → logprob: -9.313885688781738
    9. '   ' → logprob: -9.688885688781738
    10. ' (' → logprob: -9.813885688781738

Token 273: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -3.810037742368877e-05
    2. '_set' → logprob: -10.750038146972656
    3. 'sets' → logprob: -11.250038146972656
    4. '_' → logprob: -14.125038146972656
    5. 'Sets' → logprob: -14.375038146972656
    6. 'ets' → logprob: -14.625038146972656
    7. 'sts' → logprob: -15.000038146972656
    8. '_st' → logprob: -15.750038146972656
    9. '   ' → logprob: -15.875038146972656
    10. 'ub' → logprob: -15.875038146972656

Token 274: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06212587282061577
    2. '*' → logprob: -2.8121259212493896
    3. '*k' → logprob: -8.812126159667969
    4. ' ' → logprob: -12.187126159667969
    5. '**' → logprob: -13.312126159667969
    6. ' ' → logprob: -14.062126159667969
    7. '*n' → logprob: -15.562126159667969
    8. '[' → logprob: -15.687126159667969
    9. '```' → logprob: -15.687126159667969
    10. '*num' → logprob: -15.812126159667969

Token 275: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.17990954220294952
    2. ' k' → logprob: -1.804909586906433
    3. 'rest' → logprob: -9.804909706115723
    4. ' ' → logprob: -10.429909706115723
    5. 'c' → logprob: -10.929909706115723
    6. 'e' → logprob: -11.304909706115723
    7. '   ' → logprob: -11.679909706115723
    8. ' rest' → logprob: -11.679909706115723
    9. ' c' → logprob: -12.054909706115723
    10. ' e' → logprob: -12.179909706115723

Token 276: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08895353227853775
    2. '*' → logprob: -2.4639534950256348
    3. ' ' → logprob: -11.963953971862793
    4. ' ' → logprob: -12.338953971862793
    5. 'e' → logprob: -13.338953971862793
    6. '**' → logprob: -14.088953971862793
    7. ' **' → logprob: -15.463953971862793
    8. ' e' → logprob: -15.963953971862793
    9. ' _' → logprob: -16.588953018188477
    10. '[' → logprob: -16.588953018188477

Token 277: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.026745155453681946
    2. ' e' → logprob: -3.651745080947876
    3. 'd' → logprob: -8.651744842529297
    4. 'rest' → logprob: -8.901744842529297
    5. 'c' → logprob: -9.651744842529297
    6. ' d' → logprob: -11.526744842529297
    7. 'k' → logprob: -11.651744842529297
    8. ' ' → logprob: -11.776744842529297
    9. ' rest' → logprob: -11.776744842529297
    10. '   ' → logprob: -12.339244842529297

Token 278: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.005993143655359745
    2. ' rest' → logprob: -5.255993366241455
    3. 'e' → logprob: -7.630993366241455
    4. 'min' → logprob: -8.755992889404297
    5. ' e' → logprob: -10.130992889404297
    6. '(rest' → logprob: -10.880992889404297
    7. '   ' → logprob: -11.380992889404297
    8. ' min' → logprob: -11.630992889404297
    9. 'price' → logprob: -11.630992889404297
    10. 'k' → logprob: -12.255992889404297

Token 280: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10023459792137146
    2. '*' → logprob: -2.3502345085144043
    3. ' ' → logprob: -12.100234985351562
    4. '*c' → logprob: -12.100234985351562
    5. ' ' → logprob: -12.350234985351562
    6. '**' → logprob: -12.600234985351562
    7. '*a' → logprob: -13.100234985351562
    8. 'e' → logprob: -13.600234985351562
    9. '*b' → logprob: -13.725234985351562
    10. '*d' → logprob: -14.600234985351562

Token 281: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11556176096200943
    2. 'min' → logprob: -2.4905617237091064
    3. ' e' → logprob: -4.8655619621276855
    4. ' min' → logprob: -5.1155619621276855
    5. 'rest' → logprob: -5.2405619621276855
    6. 'd' → logprob: -5.6155619621276855
    7. 'a' → logprob: -6.1155619621276855
    8. 'c' → logprob: -7.4905619621276855
    9. 'max' → logprob: -8.115561485290527
    10. ' rest' → logprob: -9.240561485290527

Token 282: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06206829100847244
    2. '*' → logprob: -2.812068223953247
    3. '<|end|>' → logprob: -10.062067985534668
    4. ' ' → logprob: -11.562067985534668
    5. '**' → logprob: -12.062067985534668
    6. '*k' → logprob: -12.062067985534668
    7. ' ' → logprob: -12.062067985534668
    8. '*d' → logprob: -12.437067985534668
    9. '(rest' → logprob: -12.687067985534668
    10. '*(' → logprob: -12.812067985534668

Token 283: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.15436658263206482
    2. 'd' → logprob: -2.1543664932250977
    3. 'e' → logprob: -3.7793664932250977
    4. '1' → logprob: -6.279366493225098
    5. ' rest' → logprob: -7.279366493225098
    6. 'a' → logprob: -7.279366493225098
    7. 'c' → logprob: -7.654366493225098
    8. 'k' → logprob: -8.904366493225098
    9. 'min' → logprob: -9.279366493225098
    10. ' d' → logprob: -9.404366493225098

Token 284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28907591104507446
    2. '       ' → logprob: -1.4140758514404297
    3. ' if' → logprob: -5.16407585144043
    4. 'if' → logprob: -7.28907585144043
    5. ')' → logprob: -7.91407585144043
    6. '<|end|>' → logprob: -8.28907585144043
    7. '
' → logprob: -8.41407585144043
    8. '    
' → logprob: -8.41407585144043
    9. '        
' → logprob: -8.53907585144043
    10. '	if' → logprob: -9.91407585144043

Token 285: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043145570904016495
    2. '       ' → logprob: -4.043145656585693
    3. ' if' → logprob: -4.168145656585693
    4. '<|end|>' → logprob: -5.293145656585693
    5. ')' → logprob: -6.168145656585693
    6. 'if' → logprob: -7.543145656585693
    7. '    
' → logprob: -7.918145656585693
    8. ',' → logprob: -8.043145179748535
    9. '
' → logprob: -8.168145179748535
    10. '	if' → logprob: -9.293145179748535

Token 286: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5984408855438232
    2. ' if' → logprob: -1.2234408855438232
    3. '       ' → logprob: -2.5984408855438232
    4. 'if' → logprob: -2.5984408855438232
    5. '
' → logprob: -5.473441123962402
    6. '	if' → logprob: -6.848441123962402
    7. ' ' → logprob: -7.723441123962402
    8. '    
' → logprob: -8.098441123962402
    9. ')' → logprob: -8.223441123962402
    10. '           ' → logprob: -8.723441123962402

Token 287: ' En' (ID: 2130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4902459383010864
    2. '   ' → logprob: -1.4902459383010864
    3. ' if' → logprob: -2.115245819091797
    4. '       ' → logprob: -3.240245819091797
    5. 'res' → logprob: -6.365245819091797
    6. '           ' → logprob: -8.240245819091797
    7. ' res' → logprob: -8.740245819091797
    8. '  ' → logprob: -9.365245819091797
    9. '	if' → logprob: -9.740245819091797
    10. '=' → logprob: -10.365245819091797

Token 288: ' fait' (ID: 7473)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3170447051525116
    2. 'res' → logprob: -2.067044734954834
    3. ' if' → logprob: -2.442044734954834
    4. '   ' → logprob: -4.192044734954834
    5. ' res' → logprob: -4.192044734954834
    6. '       ' → logprob: -4.192044734954834
    7. 'elif' → logprob: -6.567044734954834
    8. 'price' → logprob: -6.817044734954834
    9. 'total' → logprob: -7.067044734954834
    10. '           ' → logprob: -7.192044734954834

Token 289: ' cette' (ID: 7696)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7057965397834778
    2. ' if' → logprob: -0.9557965397834778
    3. 'if' → logprob: -2.580796480178833
    4. '   ' → logprob: -3.205796480178833
    5. '           ' → logprob: -6.830796718597412
    6. '    ' → logprob: -6.955796718597412
    7. ':' → logprob: -7.080796718597412
    8. ',' → logprob: -7.580796718597412
    9. '        
' → logprob: -7.830796718597412
    10. '  ' → logprob: -8.330796241760254

Token 290: ' partie' (ID: 22139)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24664369225502014
    2. 'for' → logprob: -2.8716437816619873
    3. 'price' → logprob: -3.1216437816619873
    4. ' if' → logprob: -3.3716437816619873
    5. ' boucle' → logprob: -4.121643543243408
    6. '   ' → logprob: -4.496643543243408
    7. ' code' → logprob: -5.121643543243408
    8. '#' → logprob: -5.246643543243408
    9. 'code' → logprob: -5.371643543243408
    10. '       ' → logprob: -5.621643543243408

Token 291: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34404677152633667
    2. '       ' → logprob: -2.7190468311309814
    3. ' continue' → logprob: -3.0940468311309814
    4. '<|end|>' → logprob: -3.2190468311309814
    5. ' +=' → logprob: -3.5940468311309814
    6. 'continue' → logprob: -3.8440468311309814
    7. '=' → logprob: -4.094046592712402
    8. ' =' → logprob: -4.844046592712402
    9. '    ' → logprob: -4.844046592712402
    10. ':' → logprob: -5.094046592712402

Token 292: ' trop' (ID: 14765)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2948721647262573
    2. 'comment' → logprob: -2.544872283935547
    3. 'inut' → logprob: -2.919872283935547
    4. 'incorrect' → logprob: -3.419872283935547
    5. 'bug' → logprob: -4.419872283935547
    6. 'à' → logprob: -4.669872283935547
    7. ' inutile' → logprob: -4.794872283935547
    8. 'fa' → logprob: -4.794872283935547
    9. 'red' → logprob: -4.919872283935547
    10. 'redu' → logprob: -5.044872283935547

Token 293: ' compli' (ID: 51016)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.22182731330394745
    2. 'com' → logprob: -1.7218272686004639
    3. 'long' → logprob: -4.971827507019043
    4. 'optim' → logprob: -5.596827507019043
    5. 'simpl' → logprob: -6.221827507019043
    6. 'compl' → logprob: -6.346827507019043
    7. 'comp' → logprob: -6.346827507019043
    8. 'co' → logprob: -6.846827507019043
    9. '   ' → logprob: -7.596827507019043
    10. 'simple' → logprob: -7.721827507019043

Token 294: 'quée' (ID: 63772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11235139518976212
    2. '   ' → logprob: -2.487351417541504
    3. ',' → logprob: -3.987351417541504
    4. 'e' → logprob: -6.737351417541504
    5. '    ' → logprob: -6.862351417541504
    6. '...' → logprob: -7.737351417541504
    7. '        ' → logprob: -8.112351417541504
    8. '.' → logprob: -8.237351417541504
    9. '  ' → logprob: -8.487351417541504
    10. '           ' → logprob: -8.737351417541504

Token 295: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6550969481468201
    2. '       ' → logprob: -1.2800970077514648
    3. '<|end|>' → logprob: -1.6550970077514648
    4. ' continue' → logprob: -5.280097007751465
    5. 'continue' → logprob: -5.905097007751465
    6. '<|end|>' → logprob: -6.905097007751465
    7. '
' → logprob: -7.655097007751465
    8. '	continue' → logprob: -7.655097007751465
    9. '    ' → logprob: -8.155097007751465
    10. '...' → logprob: -8.530097007751465

Token 296: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19052888453006744
    2. '       ' → logprob: -2.5655288696289062
    3. ' if' → logprob: -3.3155288696289062
    4. ' continue' → logprob: -3.3155288696289062
    5. 'continue' → logprob: -4.315528869628906
    6. 'if' → logprob: -4.815528869628906
    7. '#' → logprob: -6.315528869628906
    8. ' #' → logprob: -8.690528869628906
    9. ' pass' → logprob: -9.315528869628906
    10. '	continue' → logprob: -9.440528869628906

Token 297: ' va' (ID: 3423)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33481553196907043
    2. ' break' → logprob: -2.084815502166748
    3. ' continue' → logprob: -2.709815502166748
    4. 'break' → logprob: -3.209815502166748
    5. '       ' → logprob: -3.334815502166748
    6. 'continue' → logprob: -4.334815502166748
    7. '    ' → logprob: -6.209815502166748
    8. 'contin' → logprob: -7.834815502166748
    9. '           ' → logprob: -8.334815979003906
    10. ' continuer' → logprob: -8.584815979003906

Token 298: ' juste' (ID: 31553)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.4980389177799225
    2. 'break' → logprob: -2.1230390071868896
    3. ' continuer' → logprob: -2.7480390071868896
    4. 'just' → logprob: -3.2480390071868896
    5. ' break' → logprob: -3.2480390071868896
    6. 'continue' → logprob: -3.4980390071868896
    7. 'simpl' → logprob: -3.4980390071868896
    8. 'con' → logprob: -3.9980390071868896
    9. ' continue' → logprob: -5.3730387687683105
    10. ' just' → logprob: -5.6230387687683105

Token 299: ' comparer' (ID: 125081)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.574280858039856
    2. 'contin' → logprob: -2.3242807388305664
    3. ' comparer' → logprob: -2.8242807388305664
    4. 'price' → logprob: -2.8242807388305664
    5. 'com' → logprob: -2.9492807388305664
    6. 'compare' → logprob: -3.1992807388305664
    7. ' if' → logprob: -3.5742807388305664
    8. 'continue' → logprob: -3.6992807388305664
    9. ' price' → logprob: -4.074280738830566
    10. ' continuer' → logprob: -4.324280738830566

Token 300: ' price' (ID: 3911)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.619769811630249
    2. '   ' → logprob: -1.494769811630249
    3. 'if' → logprob: -1.619769811630249
    4. '       ' → logprob: -4.244770050048828
    5. ' price' → logprob: -4.369770050048828
    6. 'res' → logprob: -5.244770050048828
    7. 'price' → logprob: -5.619770050048828
    8. ' res' → logprob: -6.369770050048828
    9. '    ' → logprob: -6.994770050048828
    10. '
' → logprob: -8.369770050048828

Token 301: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5471075177192688
    2. '   ' → logprob: -1.297107458114624
    3. ' if' → logprob: -2.297107458114624
    4. '<|end|>' → logprob: -4.047107696533203
    5. '<|end|>' → logprob: -5.172107696533203
    6. '=' → logprob: -5.297107696533203
    7. ' =' → logprob: -5.297107696533203
    8. ',' → logprob: -5.797107696533203
    9. ':' → logprob: -6.047107696533203
    10. ' with' → logprob: -6.547107696533203

Token 302: ' res' (ID: 694)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5438753962516785
    2. ' total' → logprob: -1.4188754558563232
    3. 'res' → logprob: -1.7938754558563232
    4. ' res' → logprob: -4.543875217437744
    5. 'price' → logprob: -8.043875694274902
    6. ' price' → logprob: -8.543875694274902
    7. '   ' → logprob: -10.543875694274902
    8. ' ' → logprob: -11.543875694274902
    9. 'min' → logprob: -12.043875694274902
    10. ' min' → logprob: -12.293875694274902

Token 303: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08714259415864944
    2. '   ' → logprob: -3.3371427059173584
    3. ' if' → logprob: -3.7121427059173584
    4. '
' → logprob: -3.9621427059173584
    5. '    
' → logprob: -6.712142467498779
    6. 'if' → logprob: -6.837142467498779
    7. '        
' → logprob: -6.837142467498779
    8. '  
' → logprob: -8.337142944335938
    9. ',' → logprob: -8.837142944335938
    10. '	if' → logprob: -9.337142944335938

Token 304: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9231003522872925
    2. '       ' → logprob: -1.0481003522872925
    3. 'if' → logprob: -1.5481003522872925
    4. '           ' → logprob: -4.423100471496582
    5. '   ' → logprob: -4.798100471496582
    6. ' update' → logprob: -5.173100471496582
    7. 'res' → logprob: -5.423100471496582
    8. ' res' → logprob: -5.673100471496582
    9. ' continue' → logprob: -6.423100471496582
    10. 'update' → logprob: -6.673100471496582

Token 305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00581621378660202
    2. '   ' → logprob: -5.6308159828186035
    3. ' if' → logprob: -7.2558159828186035
    4. '
' → logprob: -7.3808159828186035
    5. '        
' → logprob: -7.8808159828186035
    6. '<|end|>' → logprob: -8.130816459655762
    7. 'if' → logprob: -9.880816459655762
    8. '    
' → logprob: -10.130816459655762
    9. ',' → logprob: -10.380816459655762
    10. '  
' → logprob: -10.505816459655762

Token 306: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5211621522903442
    2. '       ' → logprob: -1.2711621522903442
    3. '
' → logprob: -2.5211620330810547
    4. ' if' → logprob: -4.271162033081055
    5. '<|end|>' → logprob: -4.521162033081055
    6. '    
' → logprob: -5.021162033081055
    7. ' 
' → logprob: -5.646162033081055
    8. '  
' → logprob: -5.771162033081055
    9. '        
' → logprob: -6.646162033081055
    10. '\n' → logprob: -7.271162033081055

Token 307: ' price' (ID: 3911)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1812370866537094
    2. '   ' → logprob: -2.556236982345581
    3. ' if' → logprob: -3.056236982345581
    4. '
' → logprob: -3.431236982345581
    5. 'if' → logprob: -5.18123722076416
    6. '<|end|>' → logprob: -6.93123722076416
    7. '    
' → logprob: -7.05623722076416
    8. '        
' → logprob: -7.43123722076416
    9. ',' → logprob: -8.68123722076416
    10. '	if' → logprob: -9.05623722076416

Token 308: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' nb' (ID: 28791)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1509338766336441
    2. ' min' → logprob: -2.2759339809417725
    3. 'nb' → logprob: -3.6509339809417725
    4. ' nb' → logprob: -4.650933742523193
    5. 'total' → logprob: -7.025933742523193
    6. 'price' → logprob: -7.400933742523193
    7. ' total' → logprob: -9.025934219360352
    8. 'res' → logprob: -9.525934219360352
    9. ' price' → logprob: -9.900934219360352
    10. '   ' → logprob: -10.525934219360352

Token 310: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0003728774609044194
    2. '_set' → logprob: -8.000372886657715
    3. '*_' → logprob: -11.375372886657715
    4. 'sets' → logprob: -11.875372886657715
    5. 'Sets' → logprob: -12.125372886657715
    6. '_' → logprob: -12.500372886657715
    7. '*' → logprob: -12.750372886657715
    8. ' _' → logprob: -13.000372886657715
    9. '   ' → logprob: -14.375372886657715
    10. '_s' → logprob: -14.750372886657715

Token 311: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006751851178705692
    2. '*' → logprob: -5.006752014160156
    3. '<|end|>' → logprob: -10.506752014160156
    4. ' ' → logprob: -12.756752014160156
    5. '*k' → logprob: -13.131752014160156
    6. '**' → logprob: -13.631752014160156
    7. ' ' → logprob: -14.131752014160156
    8. '```' → logprob: -14.756752014160156
    9. ' **' → logprob: -15.256752014160156
    10. '#' → logprob: -15.881752014160156

Token 312: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08895320445299149
    2. ' k' → logprob: -2.4639532566070557
    3. 'e' → logprob: -12.338953018188477
    4. ' ' → logprob: -12.463953018188477
    5. '   ' → logprob: -13.963953018188477
    6. ' e' → logprob: -13.963953018188477
    7. '<|end|>' → logprob: -14.213953018188477
    8. '	k' → logprob: -14.713953018188477
    9. '```' → logprob: -14.776453018188477
    10. '  ' → logprob: -15.088953018188477

Token 313: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012515303678810596
    2. '*' → logprob: -4.387515068054199
    3. ' ' → logprob: -12.6375150680542
    4. ' ' → logprob: -14.1375150680542
    5. '**' → logprob: -14.6375150680542
    6. ' **' → logprob: -14.8875150680542
    7. '```' → logprob: -15.8875150680542
    8. '`' → logprob: -16.200016021728516
    9. '"' → logprob: -16.387516021728516
    10. 'e' → logprob: -16.387516021728516

Token 314: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.009938115254044533
    2. ' e' → logprob: -4.6349382400512695
    3. 'k' → logprob: -9.25993824005127
    4. 'd' → logprob: -9.88493824005127
    5. 'a' → logprob: -11.50993824005127
    6. ' ' → logprob: -12.25993824005127
    7. '<|end|>' → logprob: -12.82243824005127
    8. 'price' → logprob: -13.19743824005127
    9. 'c' → logprob: -13.44743824005127
    10. ' k' → logprob: -13.50993824005127

Token 315: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44611427187919617
    2. '+' → logprob: -1.4461143016815186
    3. '       ' → logprob: -2.6961143016815186
    4. 'if' → logprob: -4.0711140632629395
    5. '   ' → logprob: -4.1961140632629395
    6. ' if' → logprob: -4.3211140632629395
    7. '
' → logprob: -4.5711140632629395
    8. '+
' → logprob: -8.321114540100098
    9. 'price' → logprob: -8.946114540100098
    10. ' ' → logprob: -9.196114540100098

Token 316: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.019261911511421204
    2. ' rest' → logprob: -4.019261837005615
    3. '(rest' → logprob: -7.269261837005615
    4. 'min' → logprob: -9.269262313842773
    5. 'max' → logprob: -9.269262313842773
    6. '0' → logprob: -9.519262313842773
    7. '(' → logprob: -9.894262313842773
    8. '   ' → logprob: -10.644262313842773
    9. ' min' → logprob: -11.019262313842773
    10. ' (' → logprob: -11.019262313842773

Token 317: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003186863148584962
    2. '*' → logprob: -5.7531867027282715
    3. '<|end|>' → logprob: -13.00318717956543
    4. ' ' → logprob: -13.12818717956543
    5. ' ' → logprob: -13.50318717956543
    6. '"' → logprob: -14.62818717956543
    7. 'e' → logprob: -15.00318717956543
    8. '**' → logprob: -15.00318717956543
    9. '   ' → logprob: -15.00318717956543
    10. ''' → logprob: -15.19068717956543

Token 318: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7150431275367737
    2. ' e' → logprob: -0.9650431275367737
    3. 'd' → logprob: -3.090043067932129
    4. 'a' → logprob: -3.340043067932129
    5. ' d' → logprob: -3.590043067932129
    6. ' a' → logprob: -4.090043067932129
    7. 'rest' → logprob: -5.965043067932129
    8. ' rest' → logprob: -7.215043067932129
    9. ' ' → logprob: -7.965043067932129
    10. '0' → logprob: -8.340043067932129

Token 319: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.32482483983039856
    2. '*' → logprob: -1.3248248100280762
    3. '*k' → logprob: -5.324824810028076
    4. '*d' → logprob: -6.574824810028076
    5. ' if' → logprob: -7.074824810028076
    6. 'd' → logprob: -7.199824810028076
    7. '
' → logprob: -7.824824810028076
    8. 'if' → logprob: -8.074825286865234
    9. 'k' → logprob: -8.199825286865234
    10. '       ' → logprob: -8.324825286865234

Token 320: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5252801179885864
    2. 'rest' → logprob: -1.0252801179885864
    3. 'k' → logprob: -3.400279998779297
    4. 'e' → logprob: -4.650279998779297
    5. '1' → logprob: -5.900279998779297
    6. ' d' → logprob: -6.275279998779297
    7. ' rest' → logprob: -6.275279998779297
    8. ' k' → logprob: -8.650279998779297
    9. ' e' → logprob: -9.275279998779297
    10. ' ' → logprob: -9.525279998779297

Token 321: 'd' (ID: 67)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6834992170333862
    2. 'd' → logprob: -1.0584992170333862
    3. 'rest' → logprob: -1.9334992170333862
    4. '1' → logprob: -5.808499336242676
    5. 'max' → logprob: -8.183499336242676
    6. 'min' → logprob: -9.308499336242676
    7. 'r' → logprob: -10.308499336242676
    8. 'e' → logprob: -10.933499336242676
    9. ' rest' → logprob: -10.933499336242676
    10. ' d' → logprob: -11.058499336242676

Token 322: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11048420518636703
    2. ' if' → logprob: -2.3604841232299805
    3. ' )' → logprob: -5.2354841232299805
    4. '-' → logprob: -6.2354841232299805
    5. 'if' → logprob: -6.3604841232299805
    6. '))' → logprob: -7.3604841232299805
    7. ' -' → logprob: -8.11048412322998
    8. ' or' → logprob: -8.86048412322998
    9. ')))' → logprob: -10.61048412322998
    10. '+' → logprob: -10.73548412322998

Token 323: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.30487313866615295
    2. 'k' → logprob: -2.17987322807312
    3. ' rest' → logprob: -2.17987322807312
    4. 'd' → logprob: -3.67987322807312
    5. ' k' → logprob: -4.804872989654541
    6. ' d' → logprob: -5.929872989654541
    7. '(rest' → logprob: -8.0548734664917
    8. '   ' → logprob: -9.3048734664917
    9. '(k' → logprob: -9.6798734664917
    10. ' ' → logprob: -10.6798734664917

Token 324: '<' (ID: 27)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7339637875556946
    2. 'else' → logprob: -0.7339637875556946
    3. '<' → logprob: -4.108963966369629
    4. ' <' → logprob: -4.358963966369629
    5. '==' → logprob: -5.733963966369629
    6. '>=' → logprob: -5.733963966369629
    7. '<=' → logprob: -6.483963966369629
    8. '>' → logprob: -6.608963966369629
    9. ' >=' → logprob: -7.733963966369629
    10. ' >' → logprob: -8.108963966369629

Token 325: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06171409413218498
    2. 'rest' → logprob: -3.0617141723632812
    3. ' d' → logprob: -4.936714172363281
    4. 'k' → logprob: -5.436714172363281
    5. ' rest' → logprob: -6.686714172363281
    6. ' k' → logprob: -8.811714172363281
    7. '   ' → logprob: -11.061714172363281
    8. ' ' → logprob: -11.061714172363281
    9. 'r' → logprob: -11.499214172363281
    10. '1' → logprob: -11.749214172363281

Token 326: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12697535753250122
    2. 'else' → logprob: -2.1269752979278564
    3. ')' → logprob: -10.751975059509277
    4. ' ' → logprob: -12.126975059509277
    5. '```' → logprob: -12.251975059509277
    6. '       ' → logprob: -13.001975059509277
    7. '	else' → logprob: -13.376975059509277
    8. '-' → logprob: -13.626975059509277
    9. '        ' → logprob: -13.751975059509277
    10. '   ' → logprob: -13.751975059509277

Token 327: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.001222370658069849
    2. ' rest' → logprob: -7.126222133636475
    3. 'k' → logprob: -7.876222133636475
    4. '1' → logprob: -10.751222610473633
    5. '   ' → logprob: -12.376222610473633
    6. ' k' → logprob: -12.626222610473633
    7. 'r' → logprob: -12.751222610473633
    8. 'res' → logprob: -12.876222610473633
    9. 'd' → logprob: -14.251222610473633
    10. '(rest' → logprob: -14.251222610473633

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008526319288648665
    2. ')
' → logprob: -7.125852584838867
    3. ' )' → logprob: -10.500852584838867
    4. '))' → logprob: -11.625852584838867
    5. '       ' → logprob: -12.000852584838867
    6. '   ' → logprob: -13.250852584838867
    7. ')
' → logprob: -14.000852584838867
    8. ')

' → logprob: -14.125852584838867
    9. ')`' → logprob: -15.000852584838867
    10. ' )
' → logprob: -15.625852584838867

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20467089116573334
    2. '
' → logprob: -1.9546709060668945
    3. '   ' → logprob: -3.5796709060668945
    4. ' if' → logprob: -4.8296709060668945
    5. '        
' → logprob: -5.8296709060668945
    6. '<|end|>' → logprob: -6.7046709060668945
    7. '    
' → logprob: -6.8296709060668945
    8. 'if' → logprob: -6.8296709060668945
    9. '  
' → logprob: -7.5796709060668945
    10. '
' → logprob: -8.329670906066895

Token 330: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26979923248291016
    2. '   ' → logprob: -2.26979923248291
    3. '       ' → logprob: -2.89479923248291
    4. ' if' → logprob: -3.14479923248291
    5. ' 
' → logprob: -4.64479923248291
    6. '  
' → logprob: -5.26979923248291
    7. '<|end|>' → logprob: -5.39479923248291
    8. '\n' → logprob: -5.64479923248291
    9. '    
' → logprob: -5.64479923248291
    10. 'if' (adapté à ' if') → logprob: -5.64479923248291

Token 331: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.2519323229789734
    2. 'price' → logprob: -1.5019323825836182
    3. '   ' → logprob: -13.251932144165039
    4. '(price' → logprob: -14.376932144165039
    5. '	price' → logprob: -14.501932144165039
    6. ' ' → logprob: -15.126932144165039
    7. 'res' → logprob: -17.25193214416504
    8. '  ' → logprob: -17.25193214416504
    9. '    ' → logprob: -17.50193214416504
    10. ' prix' → logprob: -18.25193214416504

Token 332: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002694555325433612
    2. '<' → logprob: -6.002694606781006
    3. ' <=' → logprob: -8.752694129943848
    4. ' >=' → logprob: -10.002694129943848
    5. ' ' → logprob: -11.752694129943848
    6. ' >' → logprob: -12.377694129943848
    7. '<|end|>' → logprob: -14.127694129943848
    8. '<=' → logprob: -14.252694129943848
    9. '   ' → logprob: -14.502694129943848
    10. '  ' → logprob: -14.877694129943848

Token 333: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007102862582542002
    2. ' res' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.625710487365723
    4. '	res' → logprob: -16.250709533691406
    5. '
' → logprob: -18.000709533691406
    6. '  ' → logprob: -19.500709533691406
    7. ' ' → logprob: -19.500709533691406
    8. 'ress' → logprob: -19.500709533691406
    9. '(res' → logprob: -19.500709533691406
    10. '_res' → logprob: -19.625709533691406

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020578909665346146
    2. ':
' → logprob: -3.8955788612365723
    3. '       ' → logprob: -11.02057933807373
    4. '):' → logprob: -11.77057933807373
    5. ':
' → logprob: -12.77057933807373
    6. ' :' → logprob: -12.77057933807373
    7. '):
' → logprob: -13.39557933807373
    8. ':

' → logprob: -13.77057933807373
    9. '   ' → logprob: -13.89557933807373
    10. '           ' → logprob: -14.14557933807373

Token 335: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08836433291435242
    2. '           ' → logprob: -2.713364362716675
    3. '
' → logprob: -4.213364124298096
    4. '        
' → logprob: -6.838364124298096
    5. '<|end|>' → logprob: -7.213364124298096
    6. '            
' → logprob: -7.713364124298096
    7. '               ' → logprob: -7.838364124298096
    8. '   ' → logprob: -9.338364601135254
    9. '	       ' → logprob: -9.338364601135254
    10. '    
' → logprob: -9.463364601135254

Token 336: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5779468417167664
    2. ' res' → logprob: -0.8279468417167664
    3. '           ' → logprob: -6.577946662902832
    4. '       ' → logprob: -7.827946662902832
    5. '               ' → logprob: -8.827946662902832
    6. '
' → logprob: -9.952946662902832
    7. '   ' → logprob: -11.452946662902832
    8. '	res' → logprob: -11.827946662902832
    9. ' 
' → logprob: -14.077946662902832
    10. ' ' → logprob: -14.452946662902832

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. '＝' → logprob: -14.575940132141113
    4. ' =)' → logprob: -17.200939178466797
    5. ',' → logprob: -17.575939178466797
    6. '<|end|>' → logprob: -17.950939178466797
    7. '=int' → logprob: -18.075939178466797
    8. '=}' → logprob: -18.325939178466797
    9. '=

' → logprob: -18.325939178466797
    10. '.=' → logprob: -18.325939178466797

Token 338: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.00317783304490149
    2. ' price' → logprob: -5.753177642822266
    3. '	price' → logprob: -16.503177642822266
    4. '   ' → logprob: -18.378177642822266
    5. 'Price' → logprob: -19.628177642822266
    6. '_price' → logprob: -20.003177642822266
    7. '(price' → logprob: -20.128177642822266
    8. '.price' → logprob: -20.753177642822266
    9. ' ' → logprob: -21.503177642822266
    10. 'int' → logprob: -21.878177642822266

Token 339: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09114715456962585
    2. '   ' → logprob: -2.4661471843719482
    3. '
' → logprob: -6.466146945953369
    4. ' print' → logprob: -8.091147422790527
    5. '    
' → logprob: -8.216147422790527
    6. '  
' → logprob: -10.466147422790527
    7. '<|end|>' → logprob: -10.591147422790527
    8. '	print' → logprob: -12.841147422790527
    9. '.print' → logprob: -12.841147422790527
    10. ')' → logprob: -13.091147422790527

Token 340: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31017419695854187
    2. '   ' → logprob: -2.1851742267608643
    3. '
' → logprob: -2.6851742267608643
    4. '<|end|>' → logprob: -2.9351742267608643
    5. '\n' → logprob: -4.185173988342285
    6. '    
' → logprob: -5.060173988342285
    7. ' print' → logprob: -5.560173988342285
    8. ')' → logprob: -5.810173988342285
    9. '  
' → logprob: -6.185173988342285
    10. ' 
' → logprob: -7.935173988342285

Token 341: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01628069020807743
    2. '   ' → logprob: -4.141280651092529
    3. ' print' → logprob: -8.766281127929688
    4. '    
' → logprob: -10.141281127929688
    5. '
' → logprob: -10.766281127929688
    6. ')' → logprob: -11.141281127929688
    7. '(print' → logprob: -12.641281127929688
    8. '<|end|>' → logprob: -12.766281127929688
    9. '.print' → logprob: -13.141281127929688
    10. '  
' → logprob: -13.266281127929688

Token 342: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008624739944934845
    2. ' print' → logprob: -4.75862455368042
    3. '   ' → logprob: -11.508625030517578
    4. 'Print' → logprob: -16.508625030517578
    5. '#print' → logprob: -17.508625030517578
    6. '#' → logprob: -17.883625030517578
    7. '```' → logprob: -18.258625030517578
    8. ' ' → logprob: -18.633625030517578
    9. '    
' → logprob: -18.758625030517578
    10. '	print' → logprob: -18.758625030517578

Token 343: ' va' (ID: 3423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006877460982650518
    2. ' print' → logprob: -5.381877422332764
    3. '   ' → logprob: -6.131877422332764
    4. 'r' → logprob: -10.131877899169922
    5. '.print' → logprob: -11.756877899169922
    6. 'pr' → logprob: -12.131877899169922
    7. '#print' → logprob: -12.756877899169922
    8. '	print' → logprob: -12.881877899169922
    9. '
' → logprob: -12.881877899169922
    10. '  ' → logprob: -13.006877899169922

Token 344: ' aussi' (ID: 9894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18576763570308685
    2. ' print' → logprob: -1.935767650604248
    3. '   ' → logprob: -3.685767650604248
    4. 'pr' → logprob: -10.18576717376709
    5. '    ' → logprob: -11.06076717376709
    6. ' impr' → logprob: -11.31076717376709
    7. '    
' → logprob: -11.31076717376709
    8. 'r' → logprob: -11.31076717376709
    9. '  ' → logprob: -11.81076717376709
    10. '#' → logprob: -12.06076717376709

Token 345: ' comparer' (ID: 125081)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006430548615753651
    2. '   ' → logprob: -5.756430625915527
    3. ' print' → logprob: -5.756430625915527
    4. 'pr' → logprob: -10.506430625915527
    5. '#' → logprob: -11.381430625915527
    6. '#print' → logprob: -11.631430625915527
    7. '
' → logprob: -12.381430625915527
    8. 'if' → logprob: -12.381430625915527
    9. '    
' → logprob: -12.506430625915527
    10. '  ' → logprob: -13.131430625915527

Token 346: ' avec' (ID: 3937)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.16394343972206116
    2. '   ' → logprob: -2.5389435291290283
    3. 'print' → logprob: -3.4139435291290283
    4. 'with' → logprob: -4.538943290710449
    5. ' res' → logprob: -4.538943290710449
    6. ' with' → logprob: -5.163943290710449
    7. ' avec' → logprob: -5.413943290710449
    8. 'if' → logprob: -5.663943290710449
    9. 'avec' → logprob: -6.788943290710449
    10. ' if' → logprob: -7.163943290710449

Token 347: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.009438951499760151
    2. 'na' → logprob: -5.634438991546631
    3. 'n' → logprob: -5.884438991546631
    4. ' total' → logprob: -6.009438991546631
    5. '   ' → logprob: -8.509438514709473
    6. ' na' → logprob: -9.509438514709473
    7. '0' → logprob: -9.759438514709473
    8. 'min' → logprob: -9.884438514709473
    9. 'print' → logprob: -10.009438514709473
    10. ' n' → logprob: -10.259438514709473

Token 348: ' méthode' (ID: 71490)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7084485292434692
    2. 'total' → logprob: -0.9584485292434692
    3. 'minimum' → logprob: -3.0834484100341797
    4. 'na' → logprob: -3.7084484100341797
    5. 'print' → logprob: -3.9584484100341797
    6. 'prix' → logprob: -4.83344841003418
    7. 'price' → logprob: -5.20844841003418
    8. ' total' → logprob: -5.33344841003418
    9. 'a' → logprob: -5.95844841003418
    10. 'cost' → logprob: -6.33344841003418

Token 349: ' sans' (ID: 9828)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05669223889708519
    2. '   ' → logprob: -3.681692123413086
    3. ' print' → logprob: -4.056692123413086
    4. 'a' → logprob: -5.056692123413086
    5. ' normale' → logprob: -6.681692123413086
    6. 'standard' → logprob: -7.056692123413086
    7. 'na' → logprob: -7.806692123413086
    8. 'if' → logprob: -8.181692123413086
    9. ' de' → logprob: -8.306692123413086
    10. ' classique' → logprob: -8.306692123413086

Token 350: ' set' (ID: 920)
  Prédit: 'pa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pa' → logprob: -0.39586588740348816
    2. ' paquet' → logprob: -1.5208659172058105
    3. 'pack' → logprob: -3.0208659172058105
    4. ' pa' → logprob: -3.6458659172058105
    5. ' pack' → logprob: -4.8958659172058105
    6. 'package' → logprob: -5.3958659172058105
    7. '#' → logprob: -5.7708659172058105
    8. 'for' → logprob: -6.1458659172058105
    9. 'faire' → logprob: -6.5208659172058105
    10. 'paq' → logprob: -6.6458659172058105

Token 351: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009250573813915253
    2. ' if' → logprob: -5.009250640869141
    3. '    
' → logprob: -6.634250640869141
    4. 'if' → logprob: -7.384250640869141
    5. '
' → logprob: -8.25925064086914
    6. ',' → logprob: -9.63425064086914
    7. '.' → logprob: -9.88425064086914
    8. ':' → logprob: -10.13425064086914
    9. '   
' → logprob: -10.38425064086914
    10. '  
' → logprob: -10.88425064086914

Token 352: ' total' (ID: 3609)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20719178020954132
    2. ' if' → logprob: -2.3321917057037354
    3. 'print' → logprob: -2.7071917057037354
    4. 'res' → logprob: -4.2071919441223145
    5. '   ' → logprob: -5.5821919441223145
    6. ' print' → logprob: -5.9571919441223145
    7. ' res' → logprob: -6.9571919441223145
    8. 'total' → logprob: -7.2071919441223145
    9. '
' → logprob: -8.707191467285156
    10. '```' → logprob: -9.207191467285156

Token 353: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017033906187862158
    2. '
' → logprob: -6.751703262329102
    3. '    
' → logprob: -8.001703262329102
    4. ' if' → logprob: -9.126703262329102
    5. 'if' → logprob: -9.876703262329102
    6. '
' → logprob: -11.376703262329102
    7. '  
' → logprob: -12.001703262329102
    8. ',' → logprob: -12.126703262329102
    9. 'print' → logprob: -12.876703262329102
    10. '<|end|>' → logprob: -13.126703262329102

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011073173955082893
    2. 'print' → logprob: -4.511073112487793
    3. '    
' → logprob: -11.136073112487793
    4. ' print' → logprob: -11.886073112487793
    5. '```' → logprob: -13.136073112487793
    6. '
' → logprob: -13.386073112487793
    7. '  
' → logprob: -16.38607406616211
    8. '	print' → logprob: -16.38607406616211
    9. '       ' → logprob: -16.88607406616211
    10. '        
' → logprob: -17.38607406616211

Token 355: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06344614923000336
    2. '   ' → logprob: -2.813446044921875
    3. 'if' (adapté à ' if') → logprob: -7.063446044921875
    4. ' print' → logprob: -7.438446044921875
    5. ' if' → logprob: -11.438446044921875
    6. '    
' → logprob: -11.688446044921875
    7. '```' → logprob: -11.813446044921875
    8. '
' → logprob: -12.188446044921875
    9. '	print' → logprob: -14.563446044921875
    10. '#print' → logprob: -15.188446044921875

Token 356: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39708268642425537
    2. ' res' → logprob: -1.2720826864242554
    3. 'total' → logprob: -3.522082805633545
    4. 'res' → logprob: -4.022082805633545
    5. ' ' → logprob: -11.522082328796387
    6. '   ' → logprob: -12.147082328796387
    7. ' price' → logprob: -13.397082328796387
    8. '  ' → logprob: -14.022082328796387
    9. ' a' → logprob: -14.897082328796387
    10. '0' → logprob: -14.897082328796387

Token 357: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.48118484020233154
    2. ' <' → logprob: -0.9811848402023315
    3. '>' → logprob: -5.981184959411621
    4. ' >' → logprob: -6.106184959411621
    5. '<=' → logprob: -7.106184959411621
    6. '>=' → logprob: -7.356184959411621
    7. ' >=' → logprob: -7.606184959411621
    8. ' <=' → logprob: -7.981184959411621
    9. '   ' → logprob: -12.106184959411621
    10. ' ' → logprob: -12.481184959411621

Token 358: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.006715370807796717
    2. ' res' → logprob: -5.006715297698975
    3. '	res' → logprob: -17.256715774536133
    4. '   ' → logprob: -17.756715774536133
    5. ' ' → logprob: -19.006715774536133
    6. '(res' → logprob: -19.256715774536133
    7. '=' → logprob: -19.256715774536133
    8. '=res' → logprob: -19.756715774536133
    9. '  ' → logprob: -20.131715774536133
    10. 'ress' → logprob: -20.256715774536133

Token 359: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38738536834716797
    2. ':
' → logprob: -1.137385368347168
    3. '       ' → logprob: -8.012385368347168
    4. '   ' → logprob: -8.762385368347168
    5. ':
' → logprob: -11.887385368347168
    6. '=' → logprob: -12.012385368347168
    7. '):
' → logprob: -12.137385368347168
    8. ':

' → logprob: -13.137385368347168
    9. ' :
' → logprob: -13.387385368347168
    10. '):' → logprob: -13.637385368347168

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012214169837534428
    2. '
' → logprob: -7.001221179962158
    3. '   ' → logprob: -9.251221656799316
    4. ':
' → logprob: -9.376221656799316
    5. ':' → logprob: -10.626221656799316
    6. 'res' → logprob: -10.876221656799316
    7. '<|end|>' → logprob: -10.876221656799316
    8. '    
' → logprob: -11.126221656799316
    9. '        
' → logprob: -11.501221656799316
    10. ' res' → logprob: -11.501221656799316

Token 361: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0009857696713879704
    2. '   ' → logprob: -7.750985622406006
    3. ' res' → logprob: -7.750985622406006
    4. 'print' → logprob: -9.000986099243164
    5. '	res' → logprob: -14.000986099243164
    6. '       ' → logprob: -15.000986099243164
    7. ' print' → logprob: -16.250986099243164
    8. '
' → logprob: -16.250986099243164
    9. '  ' → logprob: -18.250986099243164
    10. 'ress' → logprob: -18.625986099243164

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326553225517273
    2. '=' → logprob: -1.3132655620574951
    3. ' =
' → logprob: -13.313265800476074
    4. '＝' → logprob: -14.313265800476074
    5. ' ' → logprob: -15.313265800476074
    6. '   ' → logprob: -15.438265800476074
    7. '=
' → logprob: -15.438265800476074
    8. '=res' → logprob: -15.438265800476074
    9. '=

' → logprob: -15.813265800476074
    10. ' =)' → logprob: -16.063264846801758

Token 363: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.029750604182481766
    2. ' total' → logprob: -3.5297505855560303
    3. 'tot' → logprob: -16.52975082397461
    4. '	total' → logprob: -16.52975082397461
    5. '   ' → logprob: -18.02975082397461
    6. 't' → logprob: -18.15475082397461
    7. '(total' → logprob: -18.15475082397461
    8. ' ' → logprob: -18.65475082397461
    9. ' ' → logprob: -18.77975082397461
    10. '
' → logprob: -19.15475082397461

Token 364: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033945636823773384
    2. 'print' → logprob: -5.753394603729248
    3. '    
' → logprob: -8.87839412689209
    4. '
' → logprob: -9.62839412689209
    5. '```' → logprob: -11.87839412689209
    6. '  
' → logprob: -13.25339412689209
    7. ' print' → logprob: -13.37839412689209
    8. '        
' → logprob: -14.50339412689209
    9. '<|end|>' → logprob: -14.87839412689209
    10. '   
' → logprob: -15.62839412689209

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035387747921049595
    2. 'print' → logprob: -5.753538608551025
    3. '    
' → logprob: -8.378539085388184
    4. '
' → logprob: -9.128539085388184
    5. '<|end|>' → logprob: -11.628539085388184
    6. ' print' → logprob: -11.753539085388184
    7. '```' → logprob: -13.003539085388184
    8. '  
' → logprob: -13.628539085388184
    9. '	print' → logprob: -14.628539085388184
    10. '        
' → logprob: -14.878539085388184

Token 366: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5759775042533875
    2. 'print' (adapté à ' print') → logprob: -0.8259775042533875
    3. ' print' → logprob: -10.825977325439453
    4. '    
' → logprob: -11.575977325439453
    5. '```' → logprob: -11.825977325439453
    6. '
' → logprob: -13.950977325439453
    7. '	print' → logprob: -14.950977325439453
    8. '  
' → logprob: -16.825977325439453
    9. '#print' → logprob: -16.825977325439453
    10. '   ' → logprob: -17.200977325439453

Token 367: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.790129555156454e-05
    2. '(int' → logprob: -10.250067710876465
    3. '(' → logprob: -10.500067710876465
    4. 'res' → logprob: -13.500067710876465
    5. '(f' → logprob: -13.500067710876465
    6. '(round' → logprob: -13.750067710876465
    7. ' (' → logprob: -13.875067710876465
    8. 'int' → logprob: -15.875067710876465
    9. '()' → logprob: -17.62506866455078
    10. ' res' → logprob: -17.75006866455078

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -13.875005722045898
    4. '())' → logprob: -15.125005722045898
    5. '()' → logprob: -15.375005722045898
    6. '))' → logprob: -16.3750057220459
    7. ')`' → logprob: -16.6250057220459
    8. '`)' → logprob: -17.5000057220459
    9. '')' → logprob: -17.8750057220459
    10. ')#' → logprob: -18.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 366
Tokens correctement prédits (1ère position, stricte): 113
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 239
Précision stricte (1ère position): 30.87%
Précision adaptée (1ère position): 31.69%
Précision (top 10): 65.30%
================================================================================
