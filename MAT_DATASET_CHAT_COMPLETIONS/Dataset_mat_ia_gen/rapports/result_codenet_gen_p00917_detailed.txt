================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from math import gcd

# Fonction pour calculer la position angulaire des mains à un temps t (en secondes fractionnaires)
# h, m, s = heure, minute, seconde fractionnaire
# H = nombre d'heures du cadran (ex: 12 pour une horloge 12h)
# Retourne les angles en degrés des mains heure, minute, seconde


def angles(H, t):
    # t : temps en secondes (peut être fractionnaire)
    # Le second tourne 360° en 60 secondes => vitesse = 6°/s
    angle_s = (t * 6) % 360
    # La minute tourne 360° en 3600 s => 0.1°/s
    angle_m = (t * 0.1) % 360
    # L'heure tourne 360° en H*3600 s => vitesse 360/(H*3600) = 1/(10*H) degrés/s
    angle_h = (t * (360 / (H * 3600))) % 360
    return angle_h, angle_m, angle_s


# Fonction pour calculer l'angle minimal entre deux angles sur un cercle
def minimal_angle(a1, a2):
    diff = abs(a1 - a2)
    if diff > 180:
        diff = 360 - diff
    return diff


# Simplifie la fraction n/d en sa forme irréductible
def simplify_fraction(n, d):
    if n == 0:
        return 0, 1
    g = gcd(n, d)
    return n // g, d // g


# Convertit un temps en fraction de secondes n/d en h,m,n,d avec h,m et n/d la fraction simplifiée
def frac_seconds_to_h_m_n_d(H, total_seconds_num, total_seconds_den):
    # total_seconds = h*3600 + m*60 + s_num/s_den
    # On travaille sur la fraction total_seconds_num/total_seconds_den
    # Convertir en heures, minutes, et secondes fractionnaires
    # seconds fraction = (total_seconds_num/total_seconds_den) % 60
    # minutes = (total_seconds // 60) % 60
    # hours = (total_seconds // 3600) % H
    # On travaille avec la division entière adaptée aux fractions

    # Pour extraire h (heures)
    total_seconds_int = total_seconds_num // total_seconds_den
    remainder_num = total_seconds_num % total_seconds_den

    h = (total_seconds_int // 3600) % H
    m = (total_seconds_int % 3600) // 60
    # secondes entières
    s_whole = (total_seconds_int % 60)

    # reste fractionnaire de secondes = remainder_num / total_seconds_den
    # On veut s_num/s_den = s_whole + fraction
    s_num = s_whole * total_seconds_den + remainder_num
    s_den = total_seconds_den

    # simplification de la fraction secondes
    s_num, s_den = simplify_fraction(s_num, s_den)

    # si la fraction est entière (d=1), on représente les secondes par n=s_num et d=1
    return h, m, s_num, s_den


# Fonction qui teste si la condition "pas de deux aiguilles chevauchent" est satisfaite:
# c'est-à-dire que les 3 angles sont distincts (tolérance faible pour flottants)
def no_overlap(ah, am, as_):
    eps = 1e-14
    angles_set = [ah, am, as_]
    # ordre renvoyé de la petite à la grande
    angles_sorted = sorted(angles_set)
    # comparer angles triés successifs pour voir s'ils sont distincts (mod 360)
    for i in range(3):
        for j in range(i + 1, 3):
            diff = abs(angles_sorted[i] - angles_sorted[j])
            diff = min(diff, 360 - diff)
            if diff < eps:
                return False
    return True


# Vérifie la condition "Deux angles entre la main des secondes et les deux autres sont égaux"
# Soit angle_sm = angle entre seconde et minute, angle_sh = angle entre seconde et heure
# On doit avoir angle_sm == angle_sh (dans une tolérance)
def equal_angles_condition(ah, am, as_):
    angle_sm = minimal_angle(as_, am)
    angle_sh = minimal_angle(as_, ah)
    eps = 1e-14
    return abs(angle_sm - angle_sh) < eps


# Fonction pour additionner heures, minutes, secondes en un nombre de secondes fractionnaire,
# représenté sous forme d'un numérateur/denominateur pour plus de précision.
def time_to_fractional_seconds(H, h, m, s):
    # s est entier
    # retourne num, den = h*3600 + m*60 + s (fractionnaire), denom = 1
    total_sec = h * 3600 + m * 60 + s
    # renvoie num/den = total_sec/1
    return total_sec, 1


# Fonction qui avance le temps d'un pas en secondes (fractionnaire)
# Représentation en fraction (num, den)
def fraction_add(num1, den1, num2, den2):
    # (num1/den1) + (num2/den2) = (num1*den2 + num2*den1) / (den1*den2)
    n = num1 * den2 + num2 * den1
    d = den1 * den2
    # on simplifie après
    g = gcd(n, d)
    return n // g, d // g


# Fonction pour comparer deux fractions a/b et c/d
# Retourne -1 si a/b < c/d, 0 si égal, 1 si supérieur
def frac_compare(a, b, c, d):
    # Compare a/b et c/d par produit croisé
    val = a * d - c * b
    if val < 0:
        return -1
    elif val > 0:
        return 1
    else:
        return 0


# Converti une fraction temps (en secondes) num/den en un flottant (pour calculs angulaires)
def frac_to_float(num, den):
    return num / den


# Fonction pour normaliser le temps (en secondes fractionnaires) modulo H heures
def mod_time(H, num, den):
    # H heures = H*3600 s
    # calcule num/den mod H*3600
    full = H * 3600
    # On fera la mod sur un int: num * 1 % (full * den)
    total = num % (full * den)
    return total, den


# Fonction principale de recherche brute (adaptée avec fractionnement)
def find_first_time(H, h0, m0, s0):
    # On veut trouver le premier temps T >= h0:m0:s0 fractionnaire (ici s0 est entier)
    # où deux conditions sont vraies :
    # 1) aucune paire de mains n'est superposée (pas d'angles égaux)
    # 2) les deux angles entre la main des secondes et les deux autres mains sont égaux

    # Transforme le temps initial en fraction seconds num/den
    t_num, t_den = time_to_fractional_seconds(H, h0, m0, s0)

    # Durée maximale à tester: une révolution complète du système (H heures)
    # limite = H*3600 s

    # Pas de recherche: pour la haute précision, essayer de trouver la fraction exacte
    # On sait que les conditions s'expriment par égalités d'angles,
    # donc expressions linéaires en t.
    # On va résoudre analytiquement les conditions.

    # Notations:
    # angles:
    # ah = (t * 360 / (H*3600)) % 360 = (t/(H*3600))*360 = (t/H/3600)*360 = t/(H*10) degr/s
    # vitesse h = 360/(H*3600) deg/s
    # am = 0.1 deg/s
    # as = 6 deg/s

    # Condition angle_sm == angle_sh:
    # minimal_angle(as, am) == minimal_angle(as, ah)

    # On note:
    # angle between S and M = diff_sm = minimal_angle(as, am)
    # angle between S and H = diff_sh = minimal_angle(as, ah)
    #
    # On veux diff_sm == diff_sh != 0 (non chevauché)

    # On développe les expressions algébriques:
    # angles modulo 360 unités

    # On cherche t pour lequel:
    # |as - am| mod 360 = |as - ah| mod 360 et non nul et pas de chevauche

    # On approche les valeurs possibles pour t par l'équation :
    # |(6t - 0.1t) mod 360| = |(6t - (360/(H*3600))*t) mod 360|

    # 6t - 0.1t = 5.9t
    # 6t - 360/(H*3600)*t = 6t - t/(H*10) = (6 - 1/(10H)) * t

    # On pose:
    # A = 5.9
    # B = (6 - 1/(10H))

    # Cherchons t tel que:
    # minimal_angle_modulo(5.9 t, 360) = minimal_angle_modulo(B t, 360)

    # minimal_angle_modulo(x, 360) = min(x mod 360, 360 - (x mod 360))
    # Soit x_m = x mod 360

    # On veut:
    # min(5.9 t mod 360, 360 - (5.9 t mod 360)) = min(B t mod 360, 360 - (B t mod 360))

    # Cela implique que 5.9 t mod 360 et B t mod 360 sont symétriques autour de 180
    # ou égaux, pour que leurs min soient égaux.

    # On posera 5.9 t mod 360 = a, B t mod 360 = b
    # et on a min(a, 360 - a) = min(b, 360 - b)

    # On a 3 possibilité principales:
    # a = b ,
    # a = 360 - b

    H3600 = H * 3600
    v_h = 360 / H3600
    v_m = 0.1
    v_s = 6

    # Cette fonction calcule les solutions possibles en temps t >= t0 en secondes
    # On utilise la condition a = b mod 360 ou a = 360 - b mod 360

    # Pour résoudre (v_s - v_m)*t ≡ ± (v_s - v_h)*t (mod 360)
    # Soit difference = (v_s - v_m)*t - k*360 = ±((v_s - v_h)*t)
    # pour k entier

    A = v_s - v_m  # 5.9
    B = v_s - v_h  # 6 - 1/(10H)

    candidates = []

    # On considère 2 cas pour k : + et -
    # on cherche t pour k entier :
    # A t - k 360 = B t => (A - B) t = k*360 => t = k * 360 / (A - B)
    # ou
    # A t - k 360 = -B t => (A + B) t = k*360 => t = k * 360 / (A + B)

    # On teste k dans un intervalle pour trouver des t >= t0, t < H3600
    # Nous allons chercher k dans [-maxK, maxK]

    maxK = 2 * H * 3600  # grand nombre pour parcourir toutes périodes

    den1 = A - B
    den2 = A + B

    t0 = t_num / t_den  # temps de départ en float

    def check_t(t):
        # vérifie si t satisfait (t>=t0), conditions no_overlap et égalité angles
        if t < t0:
            return False
        ah = (t * v_h) % 360
        am = (t * v_m) % 360
        as_ = (t * v_s) % 360

        if not no_overlap(ah, am, as_):
            return False
        if not equal_angles_condition(ah, am, as_):
            return False
        return True

    # Collecte des candidats
    for sign in [1, -1]:
        if sign == 1:
            den = den1
        else:
            den = den2
        if den == 0:
            continue
        # k positif et négatif car temps t doit être positif
        # on boucle sur k pour calculer t et vérifier
        # On borne k par intervalle raisonnable correspondant au max temps
        base = 360 / abs(den)

        # k minimal pour dépasser t0 : t = k*360/den >= t0 => k >= t0 * den/360 (en tenant compte du signe)
        if den > 0:
            k_start = int(t0 * den / 360)
            if t0 * den / 360 > k_start:
                k_start += 1
        else:
            k_start = int(t0 * den / 360)
            if t0 * den / 360 > k_start:
                k_start += 1

        # On teste k de k_start à k_start+maxK (en faisant attention aux signes)
        # On limite le nombre de candidats pour la performance

        max_check = 2 * H3600
        limit_k = k_start + max_check

        for k in range(k_start, limit_k):
            t = k * 360 / den
            if t < 0:
                continue
            if t >= H3600:
                # On reste dans une journée modulo H heures
                # Comme on cherche premier temps >= t0 dans [0, H3600)
                # on ne considère pas t plus grand que H3600
                break
            if check_t(t):
                candidates.append(t)
                break  # on garde le plus petit k produisant solution

    if not candidates:
        # Théoriquement ne doit pas arriver
        return None

    t_sol = min(candidates)
    # normaliser temps modulo H3600
    t_sol = t_sol % H3600

    # convertir en fraction irréductible:
    # On approxime t_sol par une fraction n/d
    # Pour conserver exactitude, on peut approximer avec dénominateur petit
    # mais problème d'exactitude
    # Solution plus précise : exprimer t_sol en base secondes + fraction à partir des solutions analytiques

    # Or t_sol est exactement k*360 / den, on calcule t_sol fractionnaire

    # Trouvons k et den, t_sol = k*360/den, donc num = k*360, den = den

    # Trouvons quelle expression a donné la solution t_sol

    # Pour ça, on re-explore les candidats en fraction pour retrouver fraction exacte (k,den)
    # Toutefois, on peut approximer puisqu on a la fraction t_sol

    # On retient la valeur fractionnelle exacte utilisée ci-dessus

    # Précision: on a t_sol calculé comme k*360/den

    # On essaie de retrouver les candidats trouvés précedemment, puis on retourne fraction exacte

    # On vérifie les formules avec k / den possible

    # Cherchons la fraction n/d tal comme t_sol = n/d

    # En effet on a calcul t_sol = k*360/den; k entier

    # On cherche k et den parmi candidats

    # On vérifie si t_sol proche de k*360/den pour k entier proche

    # On tente de trouver fraction simplifiée

    # test pour les 2 den possibles
    # on cherche k entier tel que |t_sol - k*360/den| < 1e-13

    for sign in [1, -1]:
        if sign == 1:
            den_ = den1
        else:
            den_ = den2
        if den_ == 0:
            continue
        # on calcule k approché
        k_approx = t_sol * den_ / 360
        k_floor = int(k_approx)
        candidates_k = [k_floor, k_floor + 1]
        for k_cand in candidates_k:
            val = k_cand * 360 / den_
            if abs(val - t_sol) < 1e-13 and k_cand >= 0:
                n = k_cand * 360
                d = den_
                # simplification fraction
                n_s, d_s = simplify_fraction(n, d)
                h_sol, m_sol, n_sec, d_sec = frac_seconds_to_h_m_n_d(H, n_s, d_s)
                return h_sol, m_sol, n_sec, d_sec

    # Par sécurité, si pas trouvé, on convertit temps sous forme décimale de secondes
    # En utilisant approx rationnelle avec densité 10^9
    precision = 10**9
    n = int(round(t_sol * precision))
    d = precision
    n_s, d_s = simplify_fraction(n, d)
    h_sol, m_sol, n_sec, d_sec = frac_seconds_to_h_m_n_d(H, n_s, d_s)
    return h_sol, m_sol, n_sec, d_sec


def main():
    for line in sys.stdin:
        if line.strip() == '':
            continue
        H, h, m, s = map(int, line.split())
        if H == 0 and h == 0 and m == 0 and s == 0:
            break
        res = find_first_time(H, h, m, s)
        if res is None:
            # En théorie ne doit pas arriver
            print("0 0 0 1")
        else:
            print(*res)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43662330508232117
    2. '.' → logprob: -1.1866233348846436
    3. 'import' → logprob: -4.0616230964660645
    4. '\' → logprob: -4.4366230964660645
    5. 'newline' → logprob: -5.1866230964660645
    6. '<|end|>' → logprob: -5.4366230964660645
    7. '
' → logprob: -5.9366230964660645
    8. '```' → logprob: -6.4366230964660645
    9. '' → logprob: -7.0616230964660645
    10. '<|end|>' → logprob: -7.1866230964660645

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01873229257762432
    2. 'os' → logprob: -4.143732070922852
    3. ' collections' → logprob: -7.393732070922852
    4. ' pathlib' → logprob: -7.768732070922852
    5. ' Py' → logprob: -7.893732070922852
    6. ' ' → logprob: -8.393732070922852
    7. ' math' → logprob: -8.393732070922852
    8. 'collections' → logprob: -8.893732070922852
    9. ' datetime' → logprob: -9.143732070922852
    10. ' typing' → logprob: -9.518732070922852

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.061040423810482025
    2. 'import' → logprob: -3.3110404014587402
    3. '.' → logprob: -3.8110404014587402
    4. ' ' → logprob: -7.81104040145874
    5. ' .' → logprob: -9.311040878295898
    6. '.import' → logprob: -9.686040878295898
    7. '_import' → logprob: -11.311040878295898
    8. '	import' → logprob: -11.436040878295898
    9. ' im' → logprob: -12.311040878295898
    10. '<|end|>' → logprob: -12.436040878295898

Token 6: ' gcd' (ID: 106918)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.05483556166291237
    2. 'sqrt' → logprob: -3.429835557937622
    3. ' pi' → logprob: -4.804835796356201
    4. ' ceil' → logprob: -5.304835796356201
    5. ' sin' → logprob: -6.179835796356201
    6. ' import' → logprob: -6.429835796356201
    7. ' ' → logprob: -7.054835796356201
    8. ' pow' → logprob: -7.054835796356201
    9. ' log' → logprob: -7.679835796356201
    10. 'pow' → logprob: -7.929835796356201

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6852609515190125
    2. '\n' → logprob: -1.3102610111236572
    3. '
' → logprob: -2.3102610111236572
    4. '(
' → logprob: -3.4352610111236572
    5. '\' → logprob: -3.9352610111236572
    6. '<|end|>' → logprob: -4.185260772705078
    7. '```' → logprob: -4.435260772705078
    8. ',' → logprob: -4.685260772705078
    9. 'import' → logprob: -5.310260772705078
    10. '\(' → logprob: -5.310260772705078

Token 8: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06026575714349747
    2. '\' → logprob: -3.8102657794952393
    3. '(' → logprob: -4.31026554107666
    4. '\n' → logprob: -4.68526554107666
    5. '```' → logprob: -5.81026554107666
    6. '(
' → logprob: -5.93526554107666
    7. ',' → logprob: -6.18526554107666
    8. '
' → logprob: -6.43526554107666
    9. 'a' → logprob: -6.68526554107666
    10. '`' → logprob: -7.68526554107666

Token 9: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2536991238594055
    2. ' def' → logprob: -1.5036990642547607
    3. 'd' → logprob: -7.75369930267334
    4. 'define' → logprob: -9.00369930267334
    5. ' 

' → logprob: -9.25369930267334
    6. ' ' → logprob: -9.25369930267334
    7. 'g' → logprob: -9.37869930267334
    8. '\' → logprob: -9.62869930267334
    9. '#' → logprob: -9.75369930267334
    10. ' define' → logprob: -10.00369930267334

Token 10: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1323424577713013
    2. '_' → logprob: -1.3823424577713013
    3. ' def' → logprob: -1.8823424577713013
    4. 'def' → logprob: -2.0073423385620117
    5. ' ' → logprob: -2.7573423385620117
    6. '_de' → logprob: -3.0073423385620117
    7. ' calculate' → logprob: -5.132342338562012
    8. '(' → logprob: -5.632342338562012
    9. ' (' → logprob: -5.757342338562012
    10. 'de' → logprob: -6.132342338562012

Token 11: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.26049599051475525
    2. 'calcul' → logprob: -1.5104960203170776
    3. ' trouver' → logprob: -5.510496139526367
    4. 'cal' → logprob: -6.260496139526367
    5. 'tr' → logprob: -6.885496139526367
    6. ' calc' → logprob: -8.260496139526367
    7. ' déterminer' → logprob: -8.385496139526367
    8. ' calcular' → logprob: -8.510496139526367
    9. 'simpl' → logprob: -8.760496139526367
    10. 'Calcul' → logprob: -8.885496139526367

Token 12: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.3438327843905427e-05
    2. 'ating' → logprob: -11.25002384185791
    3. 'ate' → logprob: -12.50002384185791
    4. 'atrice' → logprob: -12.62502384185791
    5. 'ateur' → logprob: -13.37502384185791
    6. '_' → logprob: -13.87502384185791
    7. '#' → logprob: -15.25002384185791
    8. '_er' → logprob: -16.250022888183594
    9. '```' → logprob: -16.500022888183594
    10. 's' → logprob: -16.625022888183594

Token 13: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.37922409176826477
    2. ' le' → logprob: -1.5042240619659424
    3. ' ' → logprob: -3.2542240619659424
    4. '_le' → logprob: -3.7542240619659424
    5. 'le' → logprob: -4.3792243003845215
    6. '_' → logprob: -4.5042243003845215
    7. '_la' → logprob: -5.2542243003845215
    8. '_l' → logprob: -7.2542243003845215
    9. ' l' → logprob: -7.3792243003845215
    10. 'la' → logprob: -8.004223823547363

Token 14: ' position' (ID: 4010)
  Prédit: 'pg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pg' → logprob: -1.301023006439209
    2. ' pg' → logprob: -1.301023006439209
    3. 'plus' → logprob: -1.676023006439209
    4. ' plus' → logprob: -2.426023006439209
    5. ' somme' → logprob: -2.801023006439209
    6. 'PG' → logprob: -3.176023006439209
    7. 's' → logprob: -3.426023006439209
    8. ' PG' → logprob: -4.676023006439209
    9. ' p' → logprob: -5.801023006439209
    10. ' factor' → logprob: -5.926023006439209

Token 15: ' ang' (ID: 2929)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12278390675783157
    2. '(' → logprob: -3.872783899307251
    3. '_de' → logprob: -3.872783899307251
    4. '_d' → logprob: -4.62278413772583
    5. 'd' → logprob: -4.74778413772583
    6. '_des' → logprob: -5.12278413772583
    7. 's' → logprob: -5.12278413772583
    8. ' de' → logprob: -5.24778413772583
    9. 'de' → logprob: -5.37278413772583
    10. '_final' → logprob: -5.37278413772583

Token 16: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.006007598713040352
    2. 'le' → logprob: -5.631007671356201
    3. 'ula' → logprob: -6.381007671356201
    4. 'u' → logprob: -7.881007671356201
    5. 'ul' → logprob: -9.006007194519043
    6. 'la' → logprob: -9.506007194519043
    7. 'e' → logprob: -10.006007194519043
    8. 'l' → logprob: -10.131007194519043
    9. 'ule' → logprob: -11.256007194519043
    10. 'lée' → logprob: -12.006007194519043

Token 17: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33686086535453796
    2. 'def' → logprob: -1.5868608951568604
    3. 's' → logprob: -3.7118608951568604
    4. ' (' → logprob: -3.9618608951568604
    5. ' d' → logprob: -4.336860656738281
    6. ' def' → logprob: -4.836860656738281
    7. '(angle' → logprob: -5.211860656738281
    8. 'd' → logprob: -5.961860656738281
    9. 'de' → logprob: -6.961860656738281
    10. ':' → logprob: -6.961860656738281

Token 18: ' mains' (ID: 50381)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2500708103179932
    2. ' points' → logprob: -1.8750708103179932
    3. ' satellites' → logprob: -1.8750708103179932
    4. 'points' → logprob: -2.125070810317993
    5. ' l' → logprob: -2.375070810317993
    6. 'é' → logprob: -3.750070810317993
    7. 'la' → logprob: -3.750070810317993
    8. ' la' → logprob: -3.875070810317993
    9. '```' → logprob: -4.125070571899414
    10. 'plan' → logprob: -4.250070571899414

Token 19: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6286561489105225
    2. 'def' → logprob: -1.0036561489105225
    3. ':' → logprob: -3.5036561489105225
    4. '(' → logprob: -3.6286561489105225
    5. ' :' → logprob: -4.753656387329102
    6. ' def' → logprob: -4.878656387329102
    7. ' (' → logprob: -5.128656387329102
    8. '(s' → logprob: -5.378656387329102
    9. '```' → logprob: -5.753656387329102
    10. 'd' → logprob: -6.128656387329102

Token 20: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.682684063911438
    2. 'une' → logprob: -1.557684063911438
    3. 't' → logprob: -2.6826839447021484
    4. ' chaque' → logprob: -2.9326839447021484
    5. 'un' → logprob: -3.4326839447021484
    6. 'part' → logprob: -3.6826839447021484
    7. ' une' → logprob: -3.8076839447021484
    8. ' l' → logprob: -4.057683944702148
    9. ' midi' → logprob: -4.057683944702148
    10. ' partir' → logprob: -5.182683944702148

Token 21: ' temps' (ID: 11160)
  Prédit: 'instant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'instant' → logprob: -0.4147443473339081
    2. ' instant' → logprob: -2.0397443771362305
    3. ' given' → logprob: -3.0397443771362305
    4. 'heure' → logprob: -3.2897443771362305
    5. 'temps' → logprob: -3.6647443771362305
    6. 'moment' → logprob: -3.7897443771362305
    7. 'e' → logprob: -3.9147443771362305
    8. 'given' → logprob: -4.0397443771362305
    9. ' moment' → logprob: -4.9147443771362305
    10. ''instant' → logprob: -4.9147443771362305

Token 22: ' t' (ID: 260)
  Prédit: ' donné'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donné' → logprob: -0.4247604012489319
    2. ' t' → logprob: -1.299760341644287
    3. 't' → logprob: -2.674760341644287
    4. ' donnée' → logprob: -6.299760341644287
    5. '(t' → logprob: -6.549760341644287
    6. ' given' → logprob: -7.049760341644287
    7. '_' → logprob: -9.049760818481445
    8. ' =' → logprob: -10.299760818481445
    9. 'don' → logprob: -10.424760818481445
    10. ' données' → logprob: -10.424760818481445

Token 23: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40335750579833984
    2. 'def' → logprob: -1.1533575057983398
    3. ' :' → logprob: -4.77835750579834
    4. ' def' → logprob: -6.02835750579834
    5. ':def' → logprob: -6.27835750579834
    6. ',' → logprob: -6.65335750579834
    7. '\' → logprob: -7.27835750579834
    8. 's' → logprob: -7.52835750579834
    9. 'd' → logprob: -8.52835750579834
    10. '```' → logprob: -8.52835750579834

Token 24: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4334696829319
    2. 'en' → logprob: -1.9334696531295776
    3. 's' → logprob: -2.933469772338867
    4. 'int' → logprob: -3.308469772338867
    5. 'heure' → logprob: -3.683469772338867
    6. 'second' → logprob: -4.058469772338867
    7. ' )' → logprob: -4.433469772338867
    8. 'float' → logprob: -4.558469772338867
    9. '):' → logprob: -4.683469772338867
    10. 'he' → logprob: -4.933469772338867

Token 25: ' secondes' (ID: 109098)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.5479890704154968
    2. 'he' → logprob: -1.0479891300201416
    3. 'seconds' → logprob: -3.9229891300201416
    4. 'heure' → logprob: -4.0479888916015625
    5. 'minutes' → logprob: -4.1729888916015625
    6. ' secondes' → logprob: -4.5479888916015625
    7. 'hours' → logprob: -6.4229888916015625
    8. 'de' → logprob: -6.4229888916015625
    9. ' heures' → logprob: -6.4229888916015625
    10. '```' → logprob: -7.5479888916015625

Token 26: ' fraction' (ID: 33763)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009630120359361172
    2. '):' → logprob: -4.75963020324707
    3. ' )' → logprob: -7.13463020324707
    4. 's' → logprob: -9.75963020324707
    5. 'def' → logprob: -10.00963020324707
    6. ' ):' → logprob: -10.50963020324707
    7. '):
' → logprob: -10.75963020324707
    8. ')
' → logprob: -11.00963020324707
    9. '):

' → logprob: -11.13463020324707
    10. ',' → logprob: -11.50963020324707

Token 27: 'naires' (ID: 65019)
  Prédit: 'naire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.2221711128950119
    2. 'né' → logprob: -2.3471710681915283
    3. 'nées' → logprob: -2.5971710681915283
    4. 'naires' → logprob: -4.722171306610107
    5. 'née' → logprob: -4.722171306610107
    6. 'al' → logprob: -5.847171306610107
    7. 'n' → logprob: -6.097171306610107
    8. 'nel' → logprob: -6.472171306610107
    9. ' of' → logprob: -6.847171306610107
    10. 's' → logprob: -7.222171306610107

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016917793080210686
    2. '):' → logprob: -4.141917705535889
    3. ' )' → logprob: -7.141917705535889
    4. ' ):' → logprob: -10.016918182373047
    5. 'def' → logprob: -11.516918182373047
    6. '):

' → logprob: -11.766918182373047
    7. '):
' → logprob: -11.766918182373047
    8. ',' → logprob: -12.141918182373047
    9. ':' → logprob: -12.391918182373047
    10. 's' → logprob: -12.766918182373047

Token 29: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010385256027802825
    2. ':' → logprob: -7.251038551330566
    3. ' def' → logprob: -8.876038551330566
    4. '```' → logprob: -9.126038551330566
    5. ':def' → logprob: -10.376038551330566
    6. '\' → logprob: -10.751038551330566
    7. 'de' → logprob: -11.126038551330566
    8. 'd' → logprob: -12.126038551330566
    9. ' :' → logprob: -13.501038551330566
    10. 'dé' → logprob: -13.876038551330566

Token 30: ' h' (ID: 312)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028244927525520325
    2. ' def' → logprob: -5.877824306488037
    3. 'd' → logprob: -11.627824783325195
    4. 'de' → logprob: -11.752824783325195
    5. '```' → logprob: -13.627824783325195
    6. ' 
' → logprob: -14.502824783325195
    7. '\' → logprob: -14.502824783325195
    8. ':def' → logprob: -15.377824783325195
    9. ' de' → logprob: -15.627824783325195
    10. '
' → logprob: -16.127824783325195

Token 31: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8083605766296387
    2. '=' → logprob: -1.9333605766296387
    3. 'ours' → logprob: -2.0583605766296387
    4. 'our' → logprob: -2.0583605766296387
    5. ',' → logprob: -2.1833605766296387
    6. 'e' → logprob: -3.8083605766296387
    7. '_angle' → logprob: -4.933360576629639
    8. 'and' → logprob: -6.183360576629639
    9. '_' → logprob: -6.183360576629639
    10. '}' → logprob: -6.558360576629639

Token 32: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.061995141208171844
    2. 'm' → logprob: -2.811995029449463
    3. ' ' → logprob: -10.811995506286621
    4. '	m' → logprob: -13.436995506286621
    5. 'min' → logprob: -13.936995506286621
    6. ' min' → logprob: -14.061995506286621
    7. '  ' → logprob: -14.186995506286621
    8. ' ' → logprob: -14.436995506286621
    9. ' м' → logprob: -14.811995506286621
    10. ' s' → logprob: -15.186995506286621

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014286790043115616
    2. ' ,' → logprob: -4.764286994934082
    3. ' =' → logprob: -5.639286994934082
    4. 'our' → logprob: -6.764286994934082
    5. ')' → logprob: -8.264286994934082
    6. '=' → logprob: -8.389286994934082
    7. 'ours' → logprob: -8.514286994934082
    8. '<|end|>' → logprob: -10.014286994934082
    9. 's' → logprob: -10.639286994934082
    10. ' ' → logprob: -11.014286994934082

Token 34: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16029946506023407
    2. 's' → logprob: -1.9102994203567505
    3. ' ' → logprob: -10.410299301147461
    4. ' and' → logprob: -10.910299301147461
    5. 'def' → logprob: -12.535299301147461
    6. 'S' → logprob: -12.660299301147461
    7. ' def' → logprob: -12.910299301147461
    8. 'and' → logprob: -12.910299301147461
    9. ' ' → logprob: -12.910299301147461
    10. '  ' → logprob: -13.035299301147461

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9539079666137695
    2. ')' → logprob: -1.4539079666137695
    3. ',' → logprob: -1.8289079666137695
    4. '):' → logprob: -2.2039079666137695
    5. ' )' → logprob: -3.3289079666137695
    6. ' ,' → logprob: -3.5789079666137695
    7. ' are' → logprob: -4.2039079666137695
    8. ' ):' → logprob: -4.9539079666137695
    9. ' :' → logprob: -5.0789079666137695
    10. '=' → logprob: -5.7039079666137695

Token 36: ' heure' (ID: 40341)
  Prédit: ' heures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heures' → logprob: -0.15677134692668915
    2. ' hours' → logprob: -3.156771421432495
    3. ' temps' → logprob: -3.531771421432495
    4. ' t' → logprob: -4.156771183013916
    5. ' heure' → logprob: -4.281771183013916
    6. ' int' → logprob: -4.781771183013916
    7. ' ' → logprob: -5.031771183013916
    8. 't' → logprob: -5.281771183013916
    9. ' time' → logprob: -5.531771183013916
    10. ' hour' → logprob: -5.656771183013916

Token 37: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4803345203399658
    2. ',' → logprob: -1.4803345203399658
    3. '):' → logprob: -2.355334520339966
    4. 's' → logprob: -3.980334520339966
    5. ':' → logprob: -4.480334281921387
    6. 'def' → logprob: -4.730334281921387
    7. '_' → logprob: -5.105334281921387
    8. ' =' → logprob: -5.605334281921387
    9. ' )' → logprob: -6.105334281921387
    10. '(' → logprob: -6.230334281921387

Token 38: ' minute' (ID: 12434)
  Prédit: ' minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minutes' → logprob: -0.663908064365387
    2. 'minutes' → logprob: -2.038908004760742
    3. ' t' → logprob: -2.538908004760742
    4. ' minute' → logprob: -2.788908004760742
    5. ' ' → logprob: -2.913908004760742
    6. 'minute' → logprob: -3.163908004760742
    7. ' fraction' → logprob: -3.663908004760742
    8. ' secondes' → logprob: -4.038908004760742
    9. ' f' → logprob: -4.663908004760742
    10. 'fraction' → logprob: -4.788908004760742

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017489362508058548
    2. 's' → logprob: -5.267489433288574
    3. 'def' → logprob: -5.892489433288574
    4. ' ,' → logprob: -6.142489433288574
    5. ' =' → logprob: -6.392489433288574
    6. ' ' → logprob: -6.892489433288574
    7. '#' → logprob: -6.892489433288574
    8. ')' → logprob: -7.017489433288574
    9. ',
' → logprob: -7.642489433288574
    10. '```' → logprob: -7.767489433288574

Token 40: ' seconde' (ID: 66204)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1758280992507935
    2. ' t' → logprob: -1.3008280992507935
    3. ' ms' → logprob: -1.9258280992507935
    4. 'ms' → logprob: -2.800827980041504
    5. ' f' → logprob: -3.425827980041504
    6. '```' → logprob: -3.925827980041504
    7. ' a' → logprob: -4.175827980041504
    8. '  ' → logprob: -4.425827980041504
    9. 'a' → logprob: -4.550827980041504
    10. '   ' → logprob: -4.550827980041504

Token 41: ' fraction' (ID: 33763)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012676101177930832
    2. ' def' → logprob: -4.887676239013672
    3. ':' → logprob: -6.262676239013672
    4. 's' → logprob: -6.762676239013672
    5. '\' → logprob: -7.512676239013672
    6. '#' → logprob: -8.137676239013672
    7. ',' → logprob: -8.137676239013672
    8. '```' → logprob: -8.137676239013672
    9. '\n' → logprob: -9.012676239013672
    10. '
' → logprob: -9.262676239013672

Token 42: 'naire' (ID: 30464)
  Prédit: 'naires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naires' → logprob: -0.22795799374580383
    2. 'naire' → logprob: -2.7279579639434814
    3. 'aires' → logprob: -2.9779579639434814
    4. 'nelles' → logprob: -3.6029579639434814
    5. 'nées' → logprob: -3.7279579639434814
    6. 'aire' → logprob: -4.4779582023620605
    7. 's' → logprob: -4.7279582023620605
    8. 'def' → logprob: -5.8529582023620605
    9. 'al' → logprob: -6.4779582023620605
    10. 'nelle' → logprob: -6.7279582023620605

Token 43: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013226228766143322
    2. ':' → logprob: -7.6263227462768555
    3. ' def' → logprob: -8.001322746276855
    4. '
' → logprob: -8.376322746276855
    5. '\' → logprob: -9.501322746276855
    6. '```' → logprob: -9.876322746276855
    7. ':def' → logprob: -10.126322746276855
    8. 'd' → logprob: -10.626322746276855
    9. '#' → logprob: -11.251322746276855
    10. ',' → logprob: -11.501322746276855

Token 44: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000747802434489131
    2. '\' → logprob: -8.000747680664062
    3. '
' → logprob: -8.625747680664062
    4. '```' → logprob: -9.000747680664062
    5. 'd' → logprob: -10.000747680664062
    6. ' def' → logprob: -10.375747680664062
    7. '\n' → logprob: -11.125747680664062
    8. 'de' → logprob: -12.375747680664062
    9. '``' → logprob: -12.375747680664062
    10. ':def' → logprob: -13.750747680664062

Token 45: ' H' (ID: 487)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11332704871892929
    2. ' def' → logprob: -2.2383270263671875
    3. '
' → logprob: -8.363327026367188
    4. ' 
' → logprob: -9.363327026367188
    5. '```' → logprob: -9.488327026367188
    6. 'd' → logprob: -10.238327026367188
    7. '#' → logprob: -10.738327026367188
    8. '\' → logprob: -11.238327026367188
    9. ' d' → logprob: -12.113327026367188
    10. '  
' → logprob: -12.238327026367188

Token 46: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3625900149345398
    2. ' =' → logprob: -1.2375900745391846
    3. '=' → logprob: -5.2375898361206055
    4. '_angle' → logprob: -5.6125898361206055
    5. '=int' → logprob: -6.9875898361206055
    6. ' ,' → logprob: -7.2375898361206055
    7. 'our' → logprob: -7.4875898361206055
    8. 'angle' → logprob: -8.487589836120605
    9. 'ours' → logprob: -8.612589836120605
    10. 'H' → logprob: -8.612589836120605

Token 47: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.984299898147583
    2. ' h' → logprob: -0.984299898147583
    3. ' (' → logprob: -2.359299898147583
    4. 'h' → logprob: -2.609299898147583
    5. '360' → logprob: -2.984299898147583
    6. '12' → logprob: -4.359299659729004
    7. '(h' → logprob: -4.734299659729004
    8. '(' → logprob: -4.984299659729004
    9. '60' → logprob: -6.234299659729004
    10. '6' → logprob: -6.859299659729004

Token 48: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6146397590637207
    2. ' d' → logprob: -1.2396397590637207
    3. '_d' → logprob: -2.7396397590637207
    4. '_total' → logprob: -3.3646397590637207
    5. 'total' → logprob: -3.9896397590637207
    6. '_' → logprob: -4.489639759063721
    7. '_de' → logprob: -4.739639759063721
    8. 'de' → logprob: -4.864639759063721
    9. ' de' → logprob: -4.864639759063721
    10. ' total' → logprob: -5.489639759063721

Token 49: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7583838701248169
    2. 'e' → logprob: -0.8833838701248169
    3. 'he' → logprob: -2.7583837509155273
    4. '_he' → logprob: -4.258383750915527
    5. ''heure' → logprob: -4.383383750915527
    6. '_' → logprob: -5.508383750915527
    7. '’he' → logprob: -5.758383750915527
    8. ''é' → logprob: -6.008383750915527
    9. ' heures' → logprob: -6.008383750915527
    10. '_hours' → logprob: -6.383383750915527

Token 50: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.008377579040825367
    2. 'heure' → logprob: -5.508377552032471
    3. ''' → logprob: -6.633377552032471
    4. 'a' → logprob: -7.258377552032471
    5. 'hours' → logprob: -7.758377552032471
    6. '```' → logprob: -7.758377552032471
    7. ' heures' → logprob: -8.508378028869629
    8. 'angles' → logprob: -8.633378028869629
    9. 'He' → logprob: -9.133378028869629
    10. '_he' → logprob: -9.133378028869629

Token 51: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.01117314025759697
    2. 'ure' → logprob: -5.011173248291016
    3. 'ur' → logprob: -5.636173248291016
    4. 'urs' → logprob: -7.636173248291016
    5. 'u' → logprob: -8.886173248291016
    6. '```' → logprob: -10.136173248291016
    7. 'uves' → logprob: -10.261173248291016
    8. '#' → logprob: -10.386173248291016
    9. 'URES' → logprob: -10.886173248291016
    10. 'uret' → logprob: -11.511173248291016

Token 52: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3592219352722168
    2. ' =' → logprob: -2.234221935272217
    3. 'def' → logprob: -2.859221935272217
    4. ' ,' → logprob: -3.109221935272217
    5. ')' → logprob: -3.484221935272217
    6. ' def' → logprob: -3.734221935272217
    7. 's' → logprob: -4.609221935272217
    8. ' )' → logprob: -4.734221935272217
    9. ' (' → logprob: -5.859221935272217
    10. ' ' → logprob: -5.859221935272217

Token 53: ' cadr' (ID: 108267)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.5025007724761963
    2. 'hor' → logprob: -1.8775007724761963
    3. ' jour' → logprob: -2.7525007724761963
    4. 'e' → logprob: -3.6275007724761963
    5. 'une' → logprob: -3.7525007724761963
    6. ''heure' → logprob: -3.7525007724761963
    7. ''une' → logprob: -3.8775007724761963
    8. ''' → logprob: -4.252500534057617
    9. ''un' → logprob: -4.752500534057617
    10. 'la' → logprob: -5.127500534057617

Token 54: 'an' (ID: 270)
  Prédit: 'rier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rier' → logprob: -0.04132580757141113
    2. 're' → logprob: -3.291325807571411
    3. 'er' → logprob: -7.166325569152832
    4. 'r' → logprob: -7.166325569152832
    5. 'ier' → logprob: -7.291325569152832
    6. 'rie' → logprob: -8.041325569152832
    7. 'rière' → logprob: -8.791325569152832
    8. 'e' → logprob: -9.041325569152832
    9. 'riere' → logprob: -9.291325569152832
    10. '   ' → logprob: -9.916325569152832

Token 55: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006439318414777517
    2. '
' → logprob: -6.006439208984375
    3. ' def' → logprob: -6.506439208984375
    4. '\' → logprob: -6.881439208984375
    5. ':' → logprob: -8.006439208984375
    6. '#' → logprob: -8.631439208984375
    7. '

' → logprob: -9.006439208984375
    8. 's' → logprob: -9.006439208984375
    9. ',' → logprob: -9.006439208984375
    10. '```' → logprob: -9.256439208984375

Token 56: 'ex' (ID: 490)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '12' → logprob: -0.14518867433071136
    2. ' ' → logprob: -2.020188570022583
    3. ')' → logprob: -6.645188808441162
    4. '   ' → logprob: -8.895188331604004
    5. ' )' → logprob: -9.020188331604004
    6. '  ' → logprob: -9.270188331604004
    7. '24' → logprob: -9.457688331604004
    8. '1' → logprob: -9.457688331604004
    9. '```' → logprob: -9.582688331604004
    10. ',' → logprob: -9.645188331604004

Token 57: ':' (ID: 25)
  Prédit: 'emple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emple' → logprob: -0.03230428695678711
    2. 'e' → logprob: -3.907304286956787
    3. 'em' → logprob: -4.907304286956787
    4. 'empl' → logprob: -7.032304286956787
    5. 'ample' → logprob: -7.032304286956787
    6. ':' → logprob: -7.657304286956787
    7. ')' → logprob: -8.032304763793945
    8. 'm' → logprob: -8.282304763793945
    9. 'empel' → logprob: -9.282304763793945
    10. 'mpl' → logprob: -9.532304763793945

Token 58: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.4290944039821625
    2. ' ' → logprob: -1.0540944337844849
    3. '```' → logprob: -9.429094314575195
    4. '   ' → logprob: -9.554094314575195
    5. '  ' → logprob: -9.991594314575195
    6. '24' → logprob: -10.054094314575195
    7. ')' → logprob: -10.804094314575195
    8. ' ' → logprob: -10.929094314575195
    9. '`' → logprob: -11.179094314575195
    10. '1' → logprob: -11.429094314575195

Token 59: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.018507862463593483
    2. ' ' → logprob: -4.018507957458496
    3. '24' → logprob: -8.518507957458496
    4. '```' → logprob: -10.018507957458496
    5. '1' → logprob: -10.206007957458496
    6. '6' → logprob: -11.081007957458496
    7. '3' → logprob: -11.706007957458496
    8. '2' → logprob: -11.893507957458496
    9. 'h' → logprob: -12.081007957458496
    10. ')' → logprob: -12.456007957458496

Token 60: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06601186841726303
    2. ',' → logprob: -3.191011905670166
    3. ' ou' → logprob: -4.441011905670166
    4. ' pour' → logprob: -5.191011905670166
    5. '),' → logprob: -6.941011905670166
    6. ')
' → logprob: -7.316011905670166
    7. ' )' → logprob: -7.441011905670166
    8. ' for' → logprob: -7.566011905670166
    9. ' dans' → logprob: -7.691011905670166
    10. ' or' → logprob: -7.816011905670166

Token 61: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.3051111698150635
    2. ' une' → logprob: -1.5551111698150635
    3. 'l' → logprob: -3.3051111698150635
    4. ' l' → logprob: -4.805110931396484
    5. 'hor' → logprob: -6.180110931396484
    6. 'un' → logprob: -6.305110931396484
    7. ' hor' → logprob: -7.055110931396484
    8. '```' → logprob: -7.305110931396484
    9. 'a' → logprob: -8.305110931396484
    10. '12' → logprob: -8.680110931396484

Token 62: ' hor' (ID: 5683)
  Prédit: 'hor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hor' → logprob: -0.028243225067853928
    2. ' hor' → logprob: -4.028243064880371
    3. 'mont' → logprob: -5.528243064880371
    4. '```' → logprob: -5.653243064880371
    5. ' montre' → logprob: -6.778243064880371
    6. 'clock' → logprob: -7.903243064880371
    7. ' cadr' → logprob: -8.278243064880371
    8. 'pend' → logprob: -8.528243064880371
    9. 'c' → logprob: -8.778243064880371
    10. 'class' → logprob: -9.028243064880371

Token 63: 'loge' (ID: 100124)
  Prédit: 'loge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loge' → logprob: -0.036164771765470505
    2. 'log' → logprob: -4.1611647605896
    3. 'lage' → logprob: -4.4111647605896
    4. 'l' → logprob: -5.0361647605896
    5. 'reur' → logprob: -7.6611647605896
    6. '</' → logprob: -8.161165237426758
    7. '```' → logprob: -8.786165237426758
    8. 'logue' → logprob: -9.286165237426758
    9. '   ' → logprob: -9.661165237426758
    10. 'le' → logprob: -10.161165237426758

Token 64: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02192860096693039
    2. ',' → logprob: -4.146928787231445
    3. ' classique' → logprob: -6.646928787231445
    4. ' analog' → logprob: -6.771928787231445
    5. ' standard' → logprob: -7.146928787231445
    6. ' )' → logprob: -7.521928787231445
    7. 'standard' → logprob: -8.021928787231445
    8. ' analogue' → logprob: -8.396928787231445
    9. '),' → logprob: -8.771928787231445
    10. 'analog' → logprob: -9.021928787231445

Token 65: '12' (ID: 899)
  Prédit: ' classique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' classique' → logprob: -1.6177855730056763
    2. 'analog' → logprob: -1.6177855730056763
    3. 'class' → logprob: -1.7427855730056763
    4. 'standard' → logprob: -1.9927855730056763
    5. ')' → logprob: -2.1177854537963867
    6. 'trad' → logprob: -3.2427854537963867
    7. ' analog' → logprob: -3.3677854537963867
    8. 'ang' → logprob: -3.6177854537963867
    9. '12' → logprob: -4.117785453796387
    10. 'à' → logprob: -4.242785453796387

Token 66: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5228859782218933
    2. ')' → logprob: -1.772886037826538
    3. 'he' → logprob: -1.897886037826538
    4. ' heures' → logprob: -2.772886037826538
    5. 'heure' → logprob: -5.022885799407959
    6. ',' → logprob: -5.272885799407959
    7. ' ' → logprob: -6.147885799407959
    8. ' )' → logprob: -6.272885799407959
    9. '-he' → logprob: -6.397885799407959
    10. ' ou' → logprob: -6.897885799407959

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006692749448120594
    2. ')
' → logprob: -5.756692886352539
    3. '#' → logprob: -6.381692886352539
    4. ',' → logprob: -7.006692886352539
    5. ')
' → logprob: -8.256692886352539
    6. ')

' → logprob: -8.381692886352539
    7. ' )' → logprob: -9.381692886352539
    8. 'def' → logprob: -10.131692886352539
    9. '')' → logprob: -10.381692886352539
    10. ')#' → logprob: -10.506692886352539

Token 68: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059205275028944016
    2. '
' → logprob: -3.0592052936553955
    3. '```' → logprob: -5.434205055236816
    4. '\' → logprob: -6.059205055236816
    5. '

' → logprob: -6.059205055236816
    6. '\n' → logprob: -7.684205055236816
    7. ' def' → logprob: -8.184205055236816
    8. '#' → logprob: -8.934205055236816
    9. '
' → logprob: -8.934205055236816
    10. 'class' → logprob: -8.934205055236816

Token 69: ' Retour' (ID: 146830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027690162882208824
    2. ' def' → logprob: -3.6526901721954346
    3. '#' → logprob: -7.1526899337768555
    4. 'D' → logprob: -8.277689933776855
    5. 'd' → logprob: -9.027689933776855
    6. '```' → logprob: -9.652689933776855
    7. 'N' → logprob: -10.152689933776855
    8. 'n' → logprob: -10.777689933776855
    9. 'T' → logprob: -11.277689933776855
    10. 'C' → logprob: -11.527689933776855

Token 70: 'ne' (ID: 611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9813352823257446
    2. 'ne' → logprob: -1.9813352823257446
    3. 'n' → logprob: -2.106335163116455
    4. ' :' → logprob: -2.481335163116455
    5. 'ner' → logprob: -2.856335163116455
    6. ' None' → logprob: -2.981335163116455
    7. ' type' → logprob: -3.231335163116455
    8. 's' → logprob: -3.231335163116455
    9. ' s' → logprob: -4.231335163116455
    10. 'e' → logprob: -4.231335163116455

Token 71: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.01342185027897358
    2. ' la' → logprob: -5.263422012329102
    3. ' ' → logprob: -5.888422012329102
    4. 'l' → logprob: -6.388422012329102
    5. ' un' → logprob: -6.513422012329102
    6. ' ' → logprob: -6.763422012329102
    7. 'angle' → logprob: -8.388422012329102
    8. ' angle' → logprob: -8.763422012329102
    9. ' the' → logprob: -9.638422012329102
    10. ' les' → logprob: -9.638422012329102

Token 72: ' angles' (ID: 43448)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.22419890761375427
    2. ' angles' → logprob: -1.7241989374160767
    3. ' ' → logprob: -4.599198818206787
    4. '_' → logprob: -5.474198818206787
    5. 'positions' → logprob: -5.599198818206787
    6. '_positions' → logprob: -6.849198818206787
    7. 'angles' → logprob: -6.974198818206787
    8. '_angles' → logprob: -7.349198818206787
    9. ' position' → logprob: -7.724198818206787
    10. ' angle' → logprob: -8.224199295043945

Token 73: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0178991686552763
    2. ':' → logprob: -4.142899036407471
    3. ' def' → logprob: -6.892899036407471
    4. ':def' → logprob: -7.892899036407471
    5. ' :' → logprob: -9.017899513244629
    6. '\' → logprob: -9.142899513244629
    7. '```' → logprob: -9.642899513244629
    8. 's' → logprob: -10.017899513244629
    9. ')' → logprob: -10.392899513244629
    10. ':
' → logprob: -10.517899513244629

Token 74: ' degrés' (ID: 195297)
  Prédit: ' degrés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degrés' → logprob: -0.46153929829597473
    2. 'de' → logprob: -1.3365392684936523
    3. ' radians' → logprob: -2.7115392684936523
    4. ' degré' → logprob: -3.8365392684936523
    5. ' ' → logprob: -5.336539268493652
    6. '_de' → logprob: -5.461539268493652
    7. 'r' → logprob: -5.586539268493652
    8. ' degrees' → logprob: -6.211539268493652
    9. '	de' → logprob: -6.711539268493652
    10. 'degrees' → logprob: -7.086539268493652

Token 75: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00833477545529604
    2. '\' → logprob: -5.258334636688232
    3. '
' → logprob: -6.133334636688232
    4. ' def' → logprob: -7.758334636688232
    5. '```' → logprob: -8.13333511352539
    6. ':def' → logprob: -9.38333511352539
    7. '\n' → logprob: -10.38333511352539
    8. '
' → logprob: -11.25833511352539
    9. '

' → logprob: -11.25833511352539
    10. ':' → logprob: -11.25833511352539

Token 76: ' mains' (ID: 50381)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -1.1333696842193604
    2. ' mains' → logprob: -1.6333696842193604
    3. ' aigu' → logprob: -1.7583696842193604
    4. ' ' → logprob: -2.3833696842193604
    5. 'm' → logprob: -2.7583696842193604
    6. ' main' → logprob: -4.008369445800781
    7. ' a' → logprob: -4.133369445800781
    8. 'tro' → logprob: -4.133369445800781
    9. ' différentes' → logprob: -4.258369445800781
    10. ' three' → logprob: -4.383369445800781

Token 77: ' heure' (ID: 40341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017704968340694904
    2. ' def' → logprob: -7.126770496368408
    3. ':' → logprob: -7.626770496368408
    4. '\' → logprob: -8.501770973205566
    5. '```' → logprob: -9.001770973205566
    6. ':def' → logprob: -9.876770973205566
    7. ',' → logprob: -10.251770973205566
    8. ' :' → logprob: -10.751770973205566
    9. '
' → logprob: -12.251770973205566
    10. ':
' → logprob: -12.376770973205566

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01651674695312977
    2. ' ,' → logprob: -4.14151668548584
    3. 's' → logprob: -8.51651668548584
    4. ',m' → logprob: -9.89151668548584
    5. ',min' → logprob: -10.39151668548584
    6. 'def' → logprob: -10.76651668548584
    7. ',#' → logprob: -10.89151668548584
    8. ',h' → logprob: -11.01651668548584
    9. ',s' → logprob: -11.26651668548584
    10. 'minute' → logprob: -11.39151668548584

Token 79: ' minute' (ID: 12434)
  Prédit: 'minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minute' → logprob: -0.20511533319950104
    2. ' minute' → logprob: -1.7051153182983398
    3. 'min' → logprob: -6.83011531829834
    4. ' ' → logprob: -7.45511531829834
    5. 'minutes' → logprob: -7.58011531829834
    6. ' minutes' → logprob: -8.33011531829834
    7. '```' → logprob: -8.33011531829834
    8. 'm' → logprob: -8.58011531829834
    9. '#' → logprob: -8.70511531829834
    10. '   ' → logprob: -8.95511531829834

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024755682796239853
    2. 's' → logprob: -4.899755477905273
    3. ' et' → logprob: -5.024755477905273
    4. ' ,' → logprob: -5.149755477905273
    5. 'et' → logprob: -5.774755477905273
    6. ' and' → logprob: -7.524755477905273
    7. ' s' → logprob: -8.524755477905273
    8. 'import' → logprob: -9.274755477905273
    9. ')' → logprob: -9.399755477905273
    10. ' ' → logprob: -9.524755477905273

Token 81: ' seconde' (ID: 66204)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5714781284332275
    2. ' seconde' → logprob: -1.0714781284332275
    3. ' et' → logprob: -3.0714781284332275
    4. 'second' → logprob: -4.071477890014648
    5. '```' → logprob: -4.571477890014648
    6. 'et' → logprob: -4.946477890014648
    7. ' and' → logprob: -6.071477890014648
    8. 'angle' → logprob: -6.321477890014648
    9. ' secondes' → logprob: -6.446477890014648
    10. ' second' → logprob: -6.571477890014648

Token 82: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013965806923806667
    2. '\' → logprob: -5.013965606689453
    3. '```' → logprob: -5.513965606689453
    4. '
' → logprob: -6.638965606689453
    5. 'd' → logprob: -6.763965606689453
    6. ':def' → logprob: -8.638965606689453
    7. ':' → logprob: -8.888965606689453
    8. 'de' → logprob: -9.388965606689453
    9. '\n' → logprob: -9.638965606689453
    10. ' def' → logprob: -9.888965606689453

Token 83: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20218192040920258
    2. 'def' → logprob: -1.7021819353103638
    3. 'de' → logprob: -7.202181816101074
    4. ' d' → logprob: -11.702181816101074
    5. '```' → logprob: -11.702181816101074
    6. '\' → logprob: -13.202181816101074
    7. ' de' → logprob: -13.952181816101074
    8. '
' → logprob: -14.077181816101074
    9. ' def' → logprob: -14.202181816101074
    10. 's' → logprob: -14.452181816101074

Token 84: ' angles' (ID: 43448)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -1.168668270111084
    2. ' position' → logprob: -1.668668270111084
    3. ' angular' → logprob: -2.043668270111084
    4. ' calculate' → logprob: -2.168668270111084
    5. ' get' → logprob: -2.793668270111084
    6. ' ' → logprob: -2.793668270111084
    7. ' angles' → logprob: -3.293668270111084
    8. ' clock' → logprob: -3.668668270111084
    9. ' positions' → logprob: -3.793668270111084
    10. ' hand' → logprob: -4.293668270111084

Token 85: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012928436510264874
    2. '(h' → logprob: -4.637928485870361
    3. '_' → logprob: -6.387928485870361
    4. '_h' → logprob: -7.887928485870361
    5. '_(' → logprob: -8.137928009033203
    6. '_at' → logprob: -8.887928009033203
    7. '_angles' → logprob: -9.262928009033203
    8. '(_' → logprob: -9.387928009033203
    9. '(hour' → logprob: -9.512928009033203
    10. '(H' → logprob: -9.512928009033203

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.602024900028482e-05
    2. ',h' → logprob: -10.125085830688477
    3. ' ,' → logprob: -10.250085830688477
    4. '):' → logprob: -12.375085830688477
    5. ',H' → logprob: -13.750085830688477
    6. ')' → logprob: -14.000085830688477
    7. ',
' → logprob: -14.000085830688477
    8. ':' → logprob: -14.500085830688477
    9. ',n' → logprob: -14.750085830688477
    10. 'h' → logprob: -15.375085830688477

Token 87: ' t' (ID: 260)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5232061147689819
    2. 'h' → logprob: -0.8982061147689819
    3. ' t' → logprob: -10.273205757141113
    4. 't' → logprob: -10.773205757141113
    5. '	h' → logprob: -11.773205757141113
    6. ' ' → logprob: -11.898205757141113
    7. '```' → logprob: -12.648205757141113
    8. ' ' → logprob: -12.898205757141113
    9. ')' → logprob: -13.023205757141113
    10. ' )' → logprob: -13.460705757141113

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03400123119354248
    2. ',' → logprob: -3.534001350402832
    3. ')' → logprob: -5.534001350402832
    4. ':' → logprob: -8.409001350402832
    5. '):
' → logprob: -10.409001350402832
    6. ' ):' → logprob: -10.659001350402832
    7. '=' → logprob: -12.409001350402832
    8. '),' → logprob: -13.159001350402832
    9. 's' → logprob: -13.534001350402832
    10. ' ' → logprob: -14.471501350402832

Token 89: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7283111810684204
    2. '   ' → logprob: -0.7283111810684204
    3. ',' → logprob: -4.103311061859131
    4. '    
' → logprob: -5.103311061859131
    5. ' :' → logprob: -5.478311061859131
    6. ' ' → logprob: -6.478311061859131
    7. '
' → logprob: -6.853311061859131
    8. '  
' → logprob: -7.103311061859131
    9. ':
' → logprob: -7.228311061859131
    10. ' 
' → logprob: -7.228311061859131

Token 90: ' #' (ID: 1069)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.31496480107307434
    2. 'h' → logprob: -1.564964771270752
    3. '   ' → logprob: -3.689964771270752
    4. ' 
' → logprob: -3.814964771270752
    5. '    ' → logprob: -5.189964771270752
    6. '    
' → logprob: -5.689964771270752
    7. ' ' → logprob: -6.689964771270752
    8. ' hour' → logprob: -7.564964771270752
    9. ' ' → logprob: -7.814964771270752
    10. '     
' → logprob: -7.939964771270752

Token 91: ' t' (ID: 260)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5143983960151672
    2. ' h' → logprob: -1.0143983364105225
    3. '   ' → logprob: -3.2643983364105225
    4. ' ' → logprob: -8.014398574829102
    5. 'H' → logprob: -8.389398574829102
    6. '360' → logprob: -8.514398574829102
    7. ' hours' → logprob: -9.139398574829102
    8. ' H' → logprob: -9.639398574829102
    9. ' heures' → logprob: -9.639398574829102
    10. '	h' → logprob: -9.889398574829102

Token 92: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6670122146606445
    2. ' %=' → logprob: -2.0420122146606445
    3. '=' → logprob: -2.2920122146606445
    4. '_hours' → logprob: -2.7920122146606445
    5. '_' → logprob: -3.1670122146606445
    6. ')' → logprob: -3.7920122146606445
    7. '_h' → logprob: -3.7920122146606445
    8. ' %' → logprob: -4.1670122146606445
    9. ' *=' → logprob: -4.2920122146606445
    10. '_hour' → logprob: -4.5420122146606445

Token 93: ' temps' (ID: 11160)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.03702166676521301
    2. 't' → logprob: -3.4120216369628906
    3. ' ' → logprob: -6.912021636962891
    4. ' H' → logprob: -6.912021636962891
    5. 'H' → logprob: -7.787021636962891
    6. ' h' → logprob: -8.16202163696289
    7. '   ' → logprob: -8.53702163696289
    8. ' (' → logprob: -9.03702163696289
    9. ' float' → logprob: -9.78702163696289
    10. '0' → logprob: -9.91202163696289

Token 94: ' en' (ID: 469)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.328831434249878
    2. '_' → logprob: -1.828831434249878
    3. '_hours' → logprob: -2.203831434249878
    4. '_s' → logprob: -2.328831434249878
    5. ' =' → logprob: -2.578831434249878
    6. '   ' → logprob: -2.953831434249878
    7. '_seconds' → logprob: -3.703831434249878
    8. '=' → logprob: -3.703831434249878
    9. ')' → logprob: -3.953831434249878
    10. '_hour' → logprob: -4.078831672668457

Token 95: ' secondes' (ID: 109098)
  Prédit: ' secondes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' secondes' → logprob: -0.2616689205169678
    2. 's' → logprob: -2.0116689205169678
    3. ' float' → logprob: -3.1366689205169678
    4. ' seconds' → logprob: -4.011669158935547
    5. 'float' → logprob: -4.511669158935547
    6. 'seconds' → logprob: -5.011669158935547
    7. ' heures' → logprob: -5.261669158935547
    8. 'second' → logprob: -5.761669158935547
    9. ' s' → logprob: -6.386669158935547
    10. ' seconde' → logprob: -6.886669158935547

Token 96: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6619213819503784
    2. '    
' → logprob: -1.7869213819503784
    3. '   ' → logprob: -1.7869213819503784
    4. ',' → logprob: -2.161921501159668
    5. ' 
' → logprob: -2.161921501159668
    6. '\n' → logprob: -2.661921501159668
    7. '  
' → logprob: -3.036921501159668
    8. '    ' → logprob: -3.786921501159668
    9. ' ' → logprob: -3.786921501159668
    10. ' =' → logprob: -4.161921501159668

Token 97: 'pe' (ID: 424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1778440922498703
    2. ' )' → logprob: -2.4278440475463867
    3. ' float' → logprob: -3.6778440475463867
    4. 'float' → logprob: -3.6778440475463867
    5. ' t' → logprob: -4.927844047546387
    6. 't' → logprob: -4.927844047546387
    7. '   ' → logprob: -6.177844047546387
    8. ' H' → logprob: -6.552844047546387
    9. ' ' → logprob: -6.677844047546387
    10. 'H' → logprob: -7.427844047546387

Token 98: 'ut' (ID: 339)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5282332301139832
    2. 'ri' → logprob: -1.278233289718628
    3. 'c' → logprob: -3.153233289718628
    4. 'nd' → logprob: -3.528233289718628
    5. 'rc' → logprob: -4.028233051300049
    6. 'rine' → logprob: -5.278233051300049
    7. 'rt' → logprob: -5.528233051300049
    8. 'ut' → logprob: -5.778233051300049
    9. 'er' → logprob: -5.903233051300049
    10. 't' → logprob: -6.028233051300049

Token 99: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.687087893486023
    2. 'être' → logprob: -1.562087893486023
    3. '.' → logprob: -2.1870880126953125
    4. ')' → logprob: -3.0620880126953125
    5. '-être' → logprob: -3.5620880126953125
    6. ' ' → logprob: -3.8120880126953125
    7. '_' → logprob: -4.3120880126953125
    8. '=' → logprob: -4.8120880126953125
    9. ',' → logprob: -5.4370880126953125
    10. '-' → logprob: -5.4370880126953125

Token 100: ' fraction' (ID: 33763)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.20003347098827362
    2. 'float' → logprob: -1.82503342628479
    3. ' fraction' → logprob: -4.825033664703369
    4. ' float' → logprob: -5.075033664703369
    5. ' flott' → logprob: -5.950033664703369
    6. 'une' → logprob: -7.075033664703369
    7. 'fl' → logprob: -7.450033664703369
    8. 'un' → logprob: -7.575033664703369
    9. ' un' → logprob: -8.325033187866211
    10. ' une' → logprob: -8.450033187866211

Token 101: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.13459137082099915
    2. 'aire' → logprob: -2.3845913410186768
    3. 'a' → logprob: -4.509591579437256
    4. ')' → logprob: -4.509591579437256
    5. 'al' → logprob: -5.259591579437256
    6. 'ary' → logprob: -6.634591579437256
    7. 'n' → logprob: -6.759591579437256
    8. 'naires' → logprob: -6.884591579437256
    9. ' ' → logprob: -8.134591102600098
    10. 'er' → logprob: -8.134591102600098

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027103956788778305
    2. ' )' → logprob: -3.652103900909424
    3. '   ' → logprob: -8.152104377746582
    4. '):' → logprob: -8.402104377746582
    5. ' ' → logprob: -8.777104377746582
    6. ',' → logprob: -9.652104377746582
    7. ' ):' → logprob: -10.902104377746582
    8. '):
' → logprob: -11.027104377746582
    9. ' )
' → logprob: -11.152104377746582
    10. ')
' → logprob: -11.527104377746582

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3081570863723755
    2. '    
' → logprob: -1.6831570863723755
    3. ' 
' → logprob: -3.558156967163086
    4. '    ' → logprob: -3.933156967163086
    5. '
' → logprob: -4.933156967163086
    6. '  
' → logprob: -5.308156967163086
    7. '   
' → logprob: -5.558156967163086
    8. '     
' → logprob: -5.558156967163086
    9. ' ' → logprob: -5.683156967163086
    10. 'n' → logprob: -5.933156967163086

Token 104: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043984729796648026
    2. ' h' → logprob: -3.6689846515655518
    3. '    ' → logprob: -5.293984889984131
    4. '    
' → logprob: -5.293984889984131
    5. 'n' → logprob: -5.918984889984131
    6. 'h' → logprob: -5.918984889984131
    7. ' 
' → logprob: -7.918984889984131
    8. '
' → logprob: -8.668984413146973
    9. ' H' → logprob: -8.668984413146973
    10. ' n' → logprob: -8.918984413146973

Token 105: ' Le' (ID: 2018)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.32521235942840576
    2. 'h' → logprob: -1.5752123594284058
    3. '   ' → logprob: -2.8252124786376953
    4. ' s' → logprob: -5.825212478637695
    5. ' H' → logprob: -6.450212478637695
    6. 'H' → logprob: -6.825212478637695
    7. ' ' → logprob: -7.200212478637695
    8. ' heures' → logprob: -7.200212478637695
    9. ' angles' → logprob: -7.450212478637695
    10. ' hours' → logprob: -7.450212478637695

Token 106: ' second' (ID: 3099)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.6863149404525757
    2. 'angle' → logprob: -1.4363149404525757
    3. ' cycle' → logprob: -2.8113150596618652
    4. ' total' → logprob: -2.8113150596618652
    5. ' H' → logprob: -3.6863150596618652
    6. 'total' → logprob: -3.6863150596618652
    7. 's' → logprob: -3.8113150596618652
    8. 'H' → logprob: -4.436315059661865
    9. ' h' → logprob: -4.936315059661865
    10. 't' → logprob: -5.311315059661865

Token 107: ' tourne' (ID: 134461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18117600679397583
    2. '_' → logprob: -2.431175947189331
    3. '_angle' → logprob: -3.306175947189331
    4. 'es' → logprob: -3.431175947189331
    5. '_hand' → logprob: -5.43117618560791
    6. '_s' → logprob: -6.55617618560791
    7. 'e' → logprob: -7.30617618560791
    8. ' ' → logprob: -7.68117618560791
    9. ' s' → logprob: -7.80617618560791
    10. ',' → logprob: -8.55617618560791

Token 108: ' ' (ID: 220)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2757635712623596
    2. 's' → logprob: -2.275763511657715
    3. ' =' → logprob: -3.275763511657715
    4. '360' → logprob: -3.525763511657715
    5. ' de' → logprob: -4.275763511657715
    6. '=' → logprob: -4.275763511657715
    7. ' ' → logprob: -4.650763511657715
    8. ' a' → logprob: -4.650763511657715
    9. ' d' → logprob: -5.400763511657715
    10. '   ' → logprob: -5.525763511657715

Token 109: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.27729707956314087
    2. 'à' → logprob: -1.777297019958496
    3. ' à' → logprob: -3.027297019958496
    4. 'de' → logprob: -4.652297019958496
    5. 'd' → logprob: -5.027297019958496
    6. 'a' → logprob: -5.777297019958496
    7. ' ' → logprob: -6.652297019958496
    8. ' de' → logprob: -6.777297019958496
    9. ' a' → logprob: -7.527297019958496
    10. ' d' → logprob: -7.652297019958496

Token 110: '°' (ID: 6793)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7095907330513
    2. ' /' → logprob: -0.7095907330513
    3. '.' → logprob: -4.584590911865234
    4. '*' → logprob: -5.584590911865234
    5. ' *' → logprob: -6.084590911865234
    6. '0' → logprob: -10.709590911865234
    7. ' ' → logprob: -11.459590911865234
    8. '/d' → logprob: -11.959590911865234
    9. ')' → logprob: -12.334590911865234
    10. ',' → logprob: -12.709590911865234

Token 111: ' en' (ID: 469)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6252990365028381
    2. '/' → logprob: -1.3752989768981934
    3. ' ' → logprob: -2.1252989768981934
    4. ' *' → logprob: -2.8752989768981934
    5. '   ' → logprob: -4.500298976898193
    6. ' par' → logprob: -5.375298976898193
    7. '*' → logprob: -5.375298976898193
    8. '/s' → logprob: -5.875298976898193
    9. ',' → logprob: -6.125298976898193
    10. ' ' → logprob: -6.625298976898193

Token 112: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.03370068594813347
    2. ' ' → logprob: -3.408700704574585
    3. '6' → logprob: -10.658700942993164
    4. 's' → logprob: -11.658700942993164
    5. '59' → logprob: -12.033700942993164
    6. 't' → logprob: -12.283700942993164
    7. '```' → logprob: -12.908700942993164
    8. '   ' → logprob: -13.721200942993164
    9. '61' → logprob: -13.971200942993164
    10. '360' → logprob: -13.971200942993164

Token 113: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -2.1054253011243418e-05
    2. ' ' → logprob: -10.875020980834961
    3. '6' → logprob: -14.750020980834961
    4. 's' → logprob: -15.000020980834961
    5. '   ' → logprob: -15.000020980834961
    6. '```' → logprob: -15.250020980834961
    7. '360' → logprob: -15.500020980834961
    8. '  ' → logprob: -15.750020980834961
    9. '(' → logprob: -16.00002098083496
    10. 'H' → logprob: -16.50002098083496

Token 114: ' secondes' (ID: 109098)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11185840517282486
    2. 's' → logprob: -2.486858367919922
    3. ',' → logprob: -4.861858367919922
    4. ')' → logprob: -5.236858367919922
    5. ' secondes' → logprob: -5.361858367919922
    6. ' ' → logprob: -6.861858367919922
    7. '   ' → logprob: -7.361858367919922
    8. ' ' → logprob: -7.611858367919922
    9. '*' → logprob: -7.736858367919922
    10. ' *' → logprob: -7.986858367919922

Token 115: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026508092414587736
    2. '    
' → logprob: -6.502650737762451
    3. ',' → logprob: -8.25265121459961
    4. '\n' → logprob: -8.37765121459961
    5. 's' → logprob: -8.87765121459961
    6. '   
' → logprob: -9.00265121459961
    7. 'n' → logprob: -9.12765121459961
    8. ')' → logprob: -10.00265121459961
    9. ' ' → logprob: -10.25265121459961
    10. '
' → logprob: -10.37765121459961

Token 116: ' vitesse' (ID: 71752)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.03855467587709427
    2. ' ' → logprob: -3.2885546684265137
    3. '(' → logprob: -8.538555145263672
    4. 'angle' → logprob: -9.038555145263672
    5. ' (' → logprob: -9.913555145263672
    6. '360' → logprob: -10.038555145263672
    7. ' angle' → logprob: -10.038555145263672
    8. 's' → logprob: -10.538555145263672
    9. 't' → logprob: -11.913555145263672
    10. ' t' → logprob: -12.413555145263672

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10296474397182465
    2. '=' → logprob: -2.8529646396636963
    3. ' de' → logprob: -4.102964878082275
    4. '360' → logprob: -4.227964878082275
    5. ' ' → logprob: -5.602964878082275
    6. ' *' → logprob: -6.852964878082275
    7. ':' → logprob: -7.352964878082275
    8. '   ' → logprob: -7.602964878082275
    9. ' /' → logprob: -7.977964878082275
    10. '*' → logprob: -8.227964401245117

Token 118: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.012541198171675205
    2. ' ' → logprob: -4.5125412940979
    3. '360' → logprob: -6.5125412940979
    4. '(' → logprob: -12.137540817260742
    5. ' ' → logprob: -14.762540817260742
    6. '600' → logprob: -15.137540817260742
    7. '   ' → logprob: -15.637540817260742
    8. '60' → logprob: -15.762540817260742
    9. '	' → logprob: -16.012540817260742
    10. '-' → logprob: -16.075040817260742

Token 119: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0005611348897218704
    2. '360' → logprob: -7.500561237335205
    3. ' ' → logprob: -11.875560760498047
    4. '(' → logprob: -13.875560760498047
    5. '-' → logprob: -17.375560760498047
    6. '600' → logprob: -17.625560760498047
    7. ' ' → logprob: -17.875560760498047
    8. '60' → logprob: -17.875560760498047
    9. '36' → logprob: -17.875560760498047
    10. '   ' → logprob: -18.125560760498047

Token 120: '°' (ID: 6793)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1994731426239014
    2. ',' → logprob: -2.0744731426239014
    3. 's' → logprob: -2.0744731426239014
    4. '\n' → logprob: -2.3244731426239014
    5. '
' → logprob: -2.8244731426239014
    6. '#' → logprob: -3.4494731426239014
    7. 'def' → logprob: -3.4494731426239014
    8. '   ' → logprob: -3.6994731426239014
    9. '*' → logprob: -3.6994731426239014
    10. ')' → logprob: -3.8244731426239014

Token 121: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5812821984291077
    2. '/s' → logprob: -0.8312821984291077
    3. ' /' → logprob: -5.331282138824463
    4. 's' → logprob: -8.206282615661621
    5. '/sec' → logprob: -8.706282615661621
    6. ' ' → logprob: -12.081282615661621
    7. 'par' → logprob: -12.081282615661621
    8. 'def' → logprob: -12.206282615661621
    9. '/par' → logprob: -12.206282615661621
    10. '/
' → logprob: -12.331282615661621

Token 122: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017493189079687
    2. 'sec' → logprob: -6.751749515533447
    3. 'se' → logprob: -7.876749515533447
    4. 'second' → logprob: -8.751749038696289
    5. ' seconde' → logprob: -10.751749038696289
    6. '1' → logprob: -11.251749038696289
    7. '秒' → logprob: -13.126749038696289
    8. '```' → logprob: -13.626749038696289
    9. 'sek' → logprob: -13.876749038696289
    10. ' s' → logprob: -14.251749038696289

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2579936981201172
    2. '    
' → logprob: -2.132993698120117
    3. '\n' → logprob: -3.007993698120117
    4. '
' → logprob: -4.132993698120117
    5. '   
' → logprob: -4.882993698120117
    6. ' 
' → logprob: -5.007993698120117
    7. '  
' → logprob: -5.132993698120117
    8. 's' → logprob: -5.257993698120117
    9. 'n' → logprob: -5.382993698120117
    10. '\' → logprob: -5.382993698120117

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22313877940177917
    2. '    
' → logprob: -2.4731388092041016
    3. '
' → logprob: -2.9731388092041016
    4. '\n' → logprob: -3.4731388092041016
    5. 'n' → logprob: -4.973138809204102
    6. ' 
' → logprob: -5.098138809204102
    7. 's' → logprob: -5.348138809204102
    8. '  
' → logprob: -5.473138809204102
    9. ' ' → logprob: -5.848138809204102
    10. '\' → logprob: -6.098138809204102

Token 125: ' angle' (ID: 16538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2812357544898987
    2. 's' → logprob: -1.531235694885254
    3. ' s' → logprob: -4.281235694885254
    4. ' ' → logprob: -5.656235694885254
    5. 'n' → logprob: -5.781235694885254
    6. '\n' → logprob: -6.406235694885254
    7. ' 
' → logprob: -6.906235694885254
    8. '    
' → logprob: -7.031235694885254
    9. ' \' → logprob: -7.281235694885254
    10. '    ' → logprob: -7.281235694885254

Token 126: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.028315074741840363
    2. '_second' → logprob: -4.40331506729126
    3. 's' → logprob: -4.90331506729126
    4. '_sec' → logprob: -5.02831506729126
    5. '_seconds' → logprob: -6.65331506729126
    6. 'S' → logprob: -8.278315544128418
    7. '_se' → logprob: -9.028315544128418
    8. '_' → logprob: -11.028315544128418
    9. '_S' → logprob: -11.028315544128418
    10. 'sec' → logprob: -12.778315544128418

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40402254462242126
    2. '_s' → logprob: -1.1540225744247437
    3. 's' → logprob: -4.779022693634033
    4. 'e' → logprob: -5.779022693634033
    5. '_' → logprob: -6.029022693634033
    6. '=' → logprob: -6.529022693634033
    7. '_sec' → logprob: -7.154022693634033
    8. 'ec' → logprob: -7.529022693634033
    9. '_seconds' → logprob: -8.904022216796875
    10. '_second' → logprob: -10.029022216796875

Token 128: ' (' (ID: 350)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.03323297202587128
    2. ' ' → logprob: -4.283233165740967
    3. 't' → logprob: -5.033233165740967
    4. '(t' → logprob: -5.033233165740967
    5. '(' → logprob: -5.658233165740967
    6. ' t' → logprob: -6.658233165740967
    7. ' (' → logprob: -6.908233165740967
    8. '360' → logprob: -9.533232688903809
    9. '   ' → logprob: -11.908232688903809
    10. '36' → logprob: -13.158232688903809

Token 129: 't' (ID: 83)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7064802050590515
    2. 't' → logprob: -0.7064802050590515
    3. '360' → logprob: -4.706480026245117
    4. '(t' → logprob: -5.956480026245117
    5. ' t' → logprob: -6.581480026245117
    6. ' ' → logprob: -8.706480026245117
    7. '(' → logprob: -10.081480026245117
    8. ' (' → logprob: -11.206480026245117
    9. '180' → logprob: -12.956480026245117
    10. '   ' → logprob: -13.206480026245117

Token 130: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2879393994808197
    2. ' %' → logprob: -1.662939429283142
    3. '*' → logprob: -3.4129393100738525
    4. '%' → logprob: -3.7879393100738525
    5. ' ' → logprob: -5.412939548492432
    6. ')' → logprob: -7.662939548492432
    7. ' )' → logprob: -9.787939071655273
    8. '   ' → logprob: -11.537939071655273
    9. ' ' → logprob: -11.662939071655273
    10. '  ' → logprob: -11.912939071655273

Token 131: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.023255029693245888
    2. ' ' → logprob: -3.7732551097869873
    3. '360' → logprob: -12.023255348205566
    4. '60' → logprob: -14.210755348205566
    5. '   ' → logprob: -14.335755348205566
    6. '  ' → logprob: -14.398255348205566
    7. '```' → logprob: -15.148255348205566
    8. ')' → logprob: -16.08575439453125
    9. '

' → logprob: -16.21075439453125
    10. '۶' → logprob: -16.21075439453125

Token 132: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.466968650580384e-05
    2. '360' → logprob: -10.375054359436035
    3. ' ' → logprob: -11.125054359436035
    4. '60' → logprob: -11.750054359436035
    5. '```' → logprob: -15.750054359436035
    6. '۶' → logprob: -16.43755531311035
    7. '' → logprob: -16.87505531311035
    8. ')' → logprob: -16.93755531311035
    9. '
' → logprob: -17.06255531311035
    10. '36' → logprob: -17.12505531311035

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028696097433567047
    2. ')%' → logprob: -8.375287055969238
    3. ' )' → logprob: -10.250287055969238
    4. '.' → logprob: -10.875287055969238
    5. '%' → logprob: -13.625287055969238
    6. ' ' → logprob: -14.875287055969238
    7. '   ' → logprob: -15.375287055969238
    8. '}' → logprob: -16.750286102294922
    9. ');' → logprob: -16.875286102294922
    10. ')
' → logprob: -16.875286102294922

Token 134: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10078421235084534
    2. ' %' → logprob: -2.4757843017578125
    3. ')' → logprob: -4.9757843017578125
    4. '<|end|>' → logprob: -5.4757843017578125
    5. '.' → logprob: -8.600784301757812
    6. ' ' → logprob: -8.850784301757812
    7. '#' → logprob: -9.225784301757812
    8. ')%' → logprob: -9.475784301757812
    9. '<|end|>' → logprob: -9.725784301757812
    10. ',' → logprob: -10.850784301757812

Token 135: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0015126005746424198
    2. ' ' → logprob: -6.50151252746582
    3. '180' → logprob: -13.00151252746582
    4. '216' → logprob: -13.12651252746582
    5. '36' → logprob: -13.25151252746582
    6. '720' → logprob: -13.87651252746582
    7. '366' → logprob: -14.12651252746582
    8. '432' → logprob: -14.50151252746582
    9. '240' → logprob: -14.75151252746582
    10. '540' → logprob: -15.00151252746582

Token 136: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00012630375567823648
    2. '36' → logprob: -9.500125885009766
    3. '3' → logprob: -10.000125885009766
    4. '363' → logprob: -13.375125885009766
    5. '361' → logprob: -13.750125885009766
    6. ' ' → logprob: -14.000125885009766
    7. '359' → logprob: -14.375125885009766
    8. '366' → logprob: -14.750125885009766
    9. '216' → logprob: -15.125125885009766
    10. '365' → logprob: -15.125125885009766

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2105230689048767
    2. '   ' → logprob: -2.2105231285095215
    3. '\n' → logprob: -3.8355231285095215
    4. '    
' → logprob: -3.8355231285095215
    5. '  
' → logprob: -4.5855231285095215
    6. ' 
' → logprob: -4.8355231285095215
    7. '   
' → logprob: -5.4605231285095215
    8. '<|end|>' → logprob: -5.7105231285095215
    9. ' ' → logprob: -5.8355231285095215
    10. '  ' → logprob: -6.2105231285095215

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36087602376937866
    2. '\n' → logprob: -1.9858760833740234
    3. '   ' → logprob: -2.3608760833740234
    4. '    
' → logprob: -3.9858760833740234
    5. '  
' → logprob: -3.9858760833740234
    6. ' 
' → logprob: -4.235876083374023
    7. ' ' → logprob: -5.110876083374023
    8. '   
' → logprob: -5.235876083374023
    9. '' → logprob: -5.485876083374023
    10. '  ' → logprob: -6.610876083374023

Token 139: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8824775218963623
    2. '
' → logprob: -1.2574775218963623
    3. '\n' → logprob: -1.6324775218963623
    4. 'n' → logprob: -3.5074775218963623
    5. 'angle' → logprob: -3.5074775218963623
    6. '    
' → logprob: -4.007477760314941
    7. '   
' → logprob: -4.882477760314941
    8. ' 
' → logprob: -5.507477760314941
    9. '  
' → logprob: -5.507477760314941
    10. ' ' → logprob: -5.757477760314941

Token 140: ' La' (ID: 3038)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.9740373492240906
    2. '   ' → logprob: -1.5990374088287354
    3. ' angle' → logprob: -1.5990374088287354
    4. ' m' → logprob: -2.0990374088287354
    5. 'm' → logprob: -3.2240374088287354
    6. '#' → logprob: -3.9740374088287354
    7. ' #' → logprob: -3.9740374088287354
    8. ' t' → logprob: -4.599037170410156
    9. 't' → logprob: -5.349037170410156
    10. ' ' → logprob: -6.974037170410156

Token 141: ' minute' (ID: 12434)
  Prédit: ' minute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minute' → logprob: -0.3697398602962494
    2. 'minute' → logprob: -1.3697398900985718
    3. ' angle' → logprob: -3.2447397708892822
    4. 'angle' → logprob: -4.744740009307861
    5. ' m' → logprob: -5.494740009307861
    6. 'm' → logprob: -7.244740009307861
    7. '_angle' → logprob: -7.744740009307861
    8. ' vitesse' → logprob: -7.869740009307861
    9. '#' → logprob: -7.994740009307861
    10. ' #' → logprob: -8.744739532470703

Token 142: ' tourne' (ID: 134461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.719933032989502
    2. '_angle' → logprob: -1.469933032989502
    3. 's' → logprob: -2.094933032989502
    4. '_s' → logprob: -2.219933032989502
    5. 'angle' → logprob: -3.844933032989502
    6. ' =' → logprob: -4.344933032989502
    7. ',' → logprob: -5.344933032989502
    8. ' angle' → logprob: -5.844933032989502
    9. '=' → logprob: -5.969933032989502
    10. ' s' → logprob: -6.469933032989502

Token 143: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21060018241405487
    2. ' (' → logprob: -1.9606001377105713
    3. '(' → logprob: -3.3356001377105713
    4. '360' → logprob: -4.71060037612915
    5. 'angle' → logprob: -5.96060037612915
    6. ' angle' → logprob: -7.08560037612915
    7. ' à' → logprob: -7.96060037612915
    8. ' at' → logprob: -8.335599899291992
    9. '(angle' → logprob: -8.585599899291992
    10. '60' → logprob: -9.460599899291992

Token 144: '360' (ID: 9870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.701000988483429
    2. '360' → logprob: -1.2010009288787842
    3. '(t' → logprob: -1.9510009288787842
    4. ' (' → logprob: -2.951000928878784
    5. 't' → logprob: -5.701001167297363
    6. ' ' → logprob: -6.326001167297363
    7. 'à' → logprob: -6.826001167297363
    8. 'angle' → logprob: -7.076001167297363
    9. 'a' → logprob: -7.576001167297363
    10. '6' → logprob: -8.451001167297363

Token 145: '°' (ID: 6793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5622648000717163
    2. '*' → logprob: -1.3122648000717163
    3. ' /' → logprob: -2.562264919281006
    4. '/' → logprob: -2.937264919281006
    5. '°' → logprob: -3.937264919281006
    6. ' ' → logprob: -5.562264919281006
    7. '.' → logprob: -5.562264919281006
    8. '   ' → logprob: -7.437264919281006
    9. '/s' → logprob: -7.562264919281006
    10. ' %' → logprob: -7.687264919281006

Token 146: ' en' (ID: 469)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -1.3186864852905273
    2. ' (' → logprob: -1.6936864852905273
    3. ' /' → logprob: -1.8186864852905273
    4. ' en' → logprob: -1.9436864852905273
    5. ' in' → logprob: -2.1936864852905273
    6. '(' → logprob: -3.6936864852905273
    7. '   ' → logprob: -3.6936864852905273
    8. 's' → logprob: -4.068686485290527
    9. 'in' → logprob: -4.443686485290527
    10. 'angle' → logprob: -4.693686485290527

Token 147: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.1635122150182724
    2. ' ' → logprob: -1.9135122299194336
    3. '60' → logprob: -5.913512229919434
    4. '(' → logprob: -7.663512229919434
    5. ' (' → logprob: -9.288512229919434
    6. '36' → logprob: -12.413512229919434
    7. '366' → logprob: -13.163512229919434
    8. '359' → logprob: -13.163512229919434
    9. ' ' → logprob: -13.663512229919434
    10. '432' → logprob: -13.913512229919434

Token 148: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -12.000014305114746
    3. ' ' → logprob: -12.250014305114746
    4. '60' → logprob: -12.500014305114746
    5. ' (' → logprob: -18.250015258789062
    6. '366' → logprob: -18.625015258789062
    7. '359' → logprob: -19.500015258789062
    8. '  ' → logprob: -19.625015258789062
    9. '363' → logprob: -19.625015258789062
    10. '0' → logprob: -19.750015258789062

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.88418151892256e-05
    2. 's' → logprob: -10.250059127807617
    3. '.' → logprob: -11.625059127807617
    4. ' ' → logprob: -12.375059127807617
    5. 't' → logprob: -12.375059127807617
    6. 'o' → logprob: -13.000059127807617
    7. '#' → logprob: -14.250059127807617
    8. ')' → logprob: -14.500059127807617
    9. '<|end|>' → logprob: -15.187559127807617
    10. '*' → logprob: -15.250059127807617

Token 150: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3623378276824951
    2. ' s' → logprob: -1.7373378276824951
    3. ' ' → logprob: -3.362337827682495
    4. '*' → logprob: -4.112338066101074
    5. ' (' → logprob: -4.362338066101074
    6. '.' → logprob: -4.487338066101074
    7. '   ' → logprob: -4.612338066101074
    8. ' secondes' → logprob: -4.737338066101074
    9. ' seconds' → logprob: -5.237338066101074
    10. ' t' → logprob: -5.237338066101074

Token 151: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05370857194066048
    2. 'angle' → logprob: -3.053708553314209
    3. ',' → logprob: -6.053708553314209
    4. ' angle' → logprob: -6.678708553314209
    5. ')' → logprob: -7.678708553314209
    6. '    
' → logprob: -8.553709030151367
    7. ' ' → logprob: -8.678709030151367
    8. '  ' → logprob: -8.928709030151367
    9. '(angle' → logprob: -9.178709030151367
    10. '    ' → logprob: -10.053709030151367

Token 152: ' ' (ID: 220)
  Prédit: '(angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -0.6058332324028015
    2. ' (' → logprob: -1.3558332920074463
    3. 'angle' → logprob: -2.2308332920074463
    4. ' angle' → logprob: -2.7308332920074463
    5. '(t' → logprob: -3.7308332920074463
    6. '(' → logprob: -10.855833053588867
    7. '(m' → logprob: -11.230833053588867
    8. ' ' → logprob: -11.230833053588867
    9. '(theta' → logprob: -12.355833053588867
    10. '   ' → logprob: -12.480833053588867

Token 153: '0' (ID: 15)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.010153383947908878
    2. ' (' → logprob: -4.635153293609619
    3. 'angle' → logprob: -8.385153770446777
    4. '(' → logprob: -9.135153770446777
    5. ' angle' → logprob: -10.885153770446777
    6. '6' → logprob: -11.010153770446777
    7. '0' → logprob: -11.635153770446777
    8. '360' → logprob: -12.010153770446777
    9. ' ' → logprob: -12.260153770446777
    10. 't' → logprob: -12.635153770446777

Token 154: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.088346359931165e-07
    2. '6' → logprob: -14.375000953674316
    3. ',' → logprob: -16.0
    4. ' .' → logprob: -17.0
    5. '360' → logprob: -17.375
    6. '1' → logprob: -18.25
    7. '٫' → logprob: -18.875
    8. '7' → logprob: -19.0
    9. '60' → logprob: -19.0
    10. '3' → logprob: -19.125

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '10' → logprob: -19.625
    3. '```' → logprob: -20.25
    4. '01' → logprob: -21.25
    5. 'deg' → logprob: -21.3125
    6. '6' → logprob: -21.375
    7. 'f' → logprob: -21.4375
    8. '-' → logprob: -21.6875
    9. 't' → logprob: -21.6875
    10. '016' → logprob: -21.9375

Token 156: '°' (ID: 6793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2814083993434906
    2. '/s' → logprob: -1.406408429145813
    3. ' /' → logprob: -8.531408309936523
    4. 'per' → logprob: -10.281408309936523
    5. 's' → logprob: -11.031408309936523
    6. ' per' → logprob: -13.781408309936523
    7. '*' → logprob: -14.031408309936523
    8. ')' → logprob: -14.281408309936523
    9. '   ' → logprob: -14.531408309936523
    10. 'd' → logprob: -14.531408309936523

Token 158: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.27099974633893e-05
    2. '<|end|>' → logprob: -11.750012397766113
    3. ' s' → logprob: -12.875012397766113
    4. 'second' → logprob: -14.250012397766113
    5. 'sec' → logprob: -15.000012397766113
    6. '```' → logprob: -15.500012397766113
    7. '<|end|>' → logprob: -15.500012397766113
    8. ')' → logprob: -16.12501335144043
    9. ' ' → logprob: -16.37501335144043
    10. '
' → logprob: -16.62501335144043

Token 159: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05183842405676842
    2. 'angle' → logprob: -3.5518383979797363
    3. '
' → logprob: -4.176838397979736
    4. ' angle' → logprob: -5.426838397979736
    5. '    
' → logprob: -6.676838397979736
    6. ',' → logprob: -8.801838874816895
    7. '   
' → logprob: -9.051838874816895
    8. ' ' → logprob: -9.176838874816895
    9. 'm' → logprob: -9.301838874816895
    10. '  ' → logprob: -9.426838874816895

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02235197275876999
    2. 'angle' → logprob: -4.0223517417907715
    3. ' angle' → logprob: -6.0223517417907715
    4. '
' → logprob: -6.7723517417907715
    5. '    
' → logprob: -7.8973517417907715
    6. ' ' → logprob: -9.77235221862793
    7. ',' → logprob: -10.27235221862793
    8. '  ' → logprob: -10.27235221862793
    9. ' 
' → logprob: -10.77235221862793
    10. '   
' → logprob: -10.77235221862793

Token 161: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.6203136444091797
    2. ' angle' → logprob: -1.1203136444091797
    3. '   ' → logprob: -1.9953136444091797
    4. ' ' → logprob: -10.74531364440918
    5. '  ' → logprob: -11.49531364440918
    6. '_angle' → logprob: -11.62031364440918
    7. '(angle' → logprob: -11.62031364440918
    8. '    
' → logprob: -12.37031364440918
    9. '
' → logprob: -12.49531364440918
    10. ' ' → logprob: -12.74531364440918

Token 162: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.02975558675825596
    2. '_' → logprob: -3.5297555923461914
    3. 'm' → logprob: -12.779755592346191
    4. ' _' → logprob: -13.904755592346191
    5. '_s' → logprob: -14.904755592346191
    6. '_a' → logprob: -15.279755592346191
    7. '_b' → logprob: -15.654755592346191
    8. '_p' → logprob: -15.779755592346191
    9. '_v' → logprob: -15.904755592346191
    10. '_c' → logprob: -16.529754638671875

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163863845169544
    2. '=' → logprob: -4.264163970947266
    3. ' =(' → logprob: -15.514163970947266
    4. ' ' → logprob: -15.639163970947266
    5. 's' → logprob: -18.264163970947266
    6. ' =
' → logprob: -18.639163970947266
    7. '＝' → logprob: -18.889163970947266
    8. '=(' → logprob: -18.889163970947266
    9. ' ' → logprob: -19.014163970947266
    10. ',' → logprob: -19.139163970947266

Token 164: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16030973196029663
    2. '(t' → logprob: -1.9103097915649414
    3. '(' → logprob: -9.660309791564941
    4. ' ' → logprob: -11.410309791564941
    5. '   ' → logprob: -11.660309791564941
    6. '  ' → logprob: -13.660309791564941
    7. '((' → logprob: -15.410309791564941
    8. '(T' → logprob: -15.785309791564941
    9. '(s' → logprob: -16.535308837890625
    10. ' ((' → logprob: -16.785308837890625

Token 165: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6948074698448181
    2. '(t' → logprob: -0.6948074698448181
    3. ' t' → logprob: -6.819807529449463
    4. ' (' → logprob: -7.569807529449463
    5. '(' → logprob: -10.444807052612305
    6. '6' → logprob: -11.819807052612305
    7. ' ' → logprob: -12.069807052612305
    8. '   ' → logprob: -12.194807052612305
    9. '
' → logprob: -14.569807052612305
    10. '((' → logprob: -14.694807052612305

Token 166: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.034001342952251434
    2. '*' → logprob: -3.409001350402832
    3. ' ' → logprob: -8.034001350402832
    4. ' /' → logprob: -10.784001350402832
    5. '   ' → logprob: -12.159001350402832
    6. '/' → logprob: -12.534001350402832
    7. '  ' → logprob: -14.784001350402832
    8. ' ' → logprob: -14.909001350402832
    9. ')' → logprob: -15.409001350402832
    10. '**' → logprob: -16.159000396728516

Token 167: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6327198147773743
    2. '0' → logprob: -0.7577198147773743
    3. '(' → logprob: -9.507719993591309
    4. ' (' → logprob: -10.382719993591309
    5. '.' → logprob: -12.445219993591309
    6. '6' → logprob: -12.882719993591309
    7. '60' → logprob: -13.070219993591309
    8. '1' → logprob: -14.132719993591309
    9. '10' → logprob: -14.445219993591309
    10. ' .' → logprob: -14.445219993591309

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004542862065136433
    2. ' ' → logprob: -5.629542827606201
    3. '(' → logprob: -7.004542827606201
    4. ' (' → logprob: -11.62954330444336
    5. '1' → logprob: -11.75454330444336
    6. '6' → logprob: -11.75454330444336
    7. '60' → logprob: -12.50454330444336
    8. '.' → logprob: -13.00454330444336
    9. '   ' → logprob: -14.19204330444336
    10. '10' → logprob: -14.37954330444336

Token 169: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.703443770878948e-06
    2. ' .' → logprob: -12.625007629394531
    3. '/' → logprob: -14.000007629394531
    4. '6' → logprob: -14.250007629394531
    5. '
' → logprob: -14.875007629394531
    6. '1' → logprob: -15.125007629394531
    7. '0' → logprob: -15.375007629394531
    8. ' ' → logprob: -15.375007629394531
    9. '   ' → logprob: -16.00000762939453
    10. '```' → logprob: -16.00000762939453

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '166' → logprob: -15.250000953674316
    3. '016' → logprob: -15.375000953674316
    4. '6' → logprob: -16.125
    5. '06' → logprob: -18.5
    6. '116' → logprob: -19.125
    7. '```' → logprob: -19.375
    8. '01' → logprob: -19.5
    9. '066' → logprob: -19.5625
    10. '006' → logprob: -19.9375

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013345248298719525
    2. ' )' → logprob: -6.6263346672058105
    3. ')%' → logprob: -12.126334190368652
    4. ' ' → logprob: -13.876334190368652
    5. '   ' → logprob: -14.001334190368652
    6. '3' → logprob: -15.251334190368652
    7. '5' → logprob: -16.12633514404297
    8. '0' → logprob: -16.12633514404297
    9. '1' → logprob: -16.25133514404297
    10. '7' → logprob: -16.37633514404297

Token 172: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47408798336982727
    2. '%' → logprob: -0.9740879535675049
    3. ' ' → logprob: -12.224087715148926
    4. ')' → logprob: -12.474087715148926
    5. ' ' → logprob: -13.474087715148926
    6. ')%' → logprob: -14.849087715148926
    7. '[' → logprob: -15.849087715148926
    8. '
' → logprob: -16.474088668823242
    9. ' )' → logprob: -16.974088668823242
    10. '%s' → logprob: -17.099088668823242

Token 173: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.004628888331353664
    2. ' ' → logprob: -5.379628658294678
    3. '180' → logprob: -11.879629135131836
    4. '36' → logprob: -13.754629135131836
    5. ' ' → logprob: -15.754629135131836
    6. '720' → logprob: -16.254629135131836
    7. '240' → logprob: -16.379629135131836
    8. '```' → logprob: -16.817129135131836
    9. '   ' → logprob: -16.879629135131836
    10. '  ' → logprob: -17.129629135131836

Token 174: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '36' → logprob: -14.750004768371582
    4. '180' → logprob: -16.0000057220459
    5. '```' → logprob: -17.6250057220459
    6. '240' → logprob: -19.1875057220459
    7. '359' → logprob: -19.1875057220459
    8. '{' → logprob: -19.1875057220459
    9. '720' → logprob: -19.3125057220459
    10. '(' → logprob: -19.5625057220459

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029451563954353333
    2. '
' → logprob: -3.654451608657837
    3. '    
' → logprob: -6.279451370239258
    4. '  
' → logprob: -8.029451370239258
    5. '   
' → logprob: -8.279451370239258
    6. '  ' → logprob: -8.404451370239258
    7. ' 
' → logprob: -9.154451370239258
    8. '\n' → logprob: -9.404451370239258
    9. ' ' → logprob: -9.404451370239258
    10. ')' → logprob: -9.529451370239258

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034583290107548237
    2. '    
' → logprob: -8.375346183776855
    3. '
' → logprob: -9.500346183776855
    4. '#' → logprob: -11.750346183776855
    5. '   
' → logprob: -12.000346183776855
    6. ')' → logprob: -12.125346183776855
    7. 'angle' → logprob: -12.250346183776855
    8. '  
' → logprob: -12.500346183776855
    9. ' 
' → logprob: -13.000346183776855
    10. ' ' → logprob: -13.000346183776855

Token 177: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05421480908989906
    2. '#' (adapté à ' #') → logprob: -3.3042147159576416
    3. 'angle' → logprob: -4.429214954376221
    4. '
' → logprob: -6.179214954376221
    5. '    
' → logprob: -7.304214954376221
    6. ' ' → logprob: -7.929214954376221
    7. ' #' → logprob: -8.304214477539062
    8. '  ' → logprob: -8.429214477539062
    9. '  
' → logprob: -8.929214477539062
    10. '   
' → logprob: -9.179214477539062

Token 178: ' L' (ID: 451)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.011890100315213203
    2. ' angle' → logprob: -5.261889934539795
    3. 'hour' → logprob: -5.386889934539795
    4. '#' → logprob: -6.636889934539795
    5. 'h' → logprob: -8.386890411376953
    6. '   ' → logprob: -8.636890411376953
    7. 'H' → logprob: -9.136890411376953
    8. ' hour' → logprob: -10.136890411376953
    9. ' ' → logprob: -10.386890411376953
    10. 'heure' → logprob: -10.636890411376953

Token 179: ''heure' (ID: 110022)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.11117488890886307
    2. ' angle' → logprob: -2.3611748218536377
    3. ''heure' → logprob: -5.486175060272217
    4. 'hour' → logprob: -5.986175060272217
    5. 'heure' → logprob: -6.486175060272217
    6. '#' → logprob: -6.986175060272217
    7. ''' → logprob: -7.611175060272217
    8. '_angle' → logprob: -8.111174583435059
    9. 'H' → logprob: -8.736174583435059
    10. 'e' → logprob: -8.861174583435059

Token 180: ' tourne' (ID: 134461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20049363374710083
    2. '_angle' → logprob: -1.825493574142456
    3. ' =' → logprob: -4.325493812561035
    4. 'angle' → logprob: -6.325493812561035
    5. ' angle' → logprob: -6.700493812561035
    6. '_hours' → logprob: -7.200493812561035
    7. '=' → logprob: -7.700493812561035
    8. ',' → logprob: -7.700493812561035
    9. '_s' → logprob: -7.825493812561035
    10. '_hour' → logprob: -8.200493812561035

Token 181: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05217543989419937
    2. ' ' → logprob: -3.052175521850586
    3. '(' → logprob: -5.802175521850586
    4. '(angle' → logprob: -8.177175521850586
    5. '(t' → logprob: -9.177175521850586
    6. ' =' → logprob: -10.052175521850586
    7. ' ((' → logprob: -10.427175521850586
    8. 'angle' → logprob: -10.552175521850586
    9. '  ' → logprob: -11.177175521850586
    10. '360' → logprob: -11.302175521850586

Token 182: '360' (ID: 9870)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.08930213749408722
    2. ' (' → logprob: -2.7143020629882812
    3. '(' → logprob: -3.9643020629882812
    4. ' ' → logprob: -9.589302062988281
    5. '(h' → logprob: -9.714302062988281
    6. '360' → logprob: -10.589302062988281
    7. '(H' → logprob: -10.839302062988281
    8. 'angle' → logprob: -12.464302062988281
    9. '(angle' → logprob: -12.464302062988281
    10. '(T' → logprob: -12.464302062988281

Token 183: '°' (ID: 6793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8622596263885498
    2. ' *' → logprob: -1.1122596263885498
    3. '/' → logprob: -1.9872596263885498
    4. ' /' → logprob: -2.48725962638855
    5. ' ' → logprob: -4.612259864807129
    6. '°' → logprob: -4.862259864807129
    7. '.' → logprob: -6.362259864807129
    8. '<|end|>' → logprob: -6.487259864807129
    9. '(H' → logprob: -6.737259864807129
    10. ' (' → logprob: -6.987259864807129

Token 184: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9873757362365723
    2. ' (' → logprob: -1.2373757362365723
    3. ' in' → logprob: -1.6123757362365723
    4. ' /' → logprob: -3.1123757362365723
    5. '/' → logprob: -3.3623757362365723
    6. 'in' → logprob: -3.7373757362365723
    7. ' ' → logprob: -5.112375736236572
    8. '(' → logprob: -5.112375736236572
    9. '((' → logprob: -5.237375736236572
    10. ' à' → logprob: -5.612375736236572

Token 185: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.41729748249053955
    2. ' (' → logprob: -1.6672974824905396
    3. '(' → logprob: -1.9172974824905396
    4. '360' → logprob: -5.41729736328125
    5. '(t' → logprob: -8.66729736328125
    6. 'H' → logprob: -8.66729736328125
    7. '(T' → logprob: -9.16729736328125
    8. ' H' → logprob: -9.16729736328125
    9. '((' → logprob: -9.41729736328125
    10. ' ' → logprob: -9.41729736328125

Token 186: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020055711269378662
    2. ' *' → logprob: -4.020055770874023
    3. '360' → logprob: -6.270055770874023
    4. ' ' → logprob: -13.270055770874023
    5. 'H' → logprob: -13.770055770874023
    6. 'hours' → logprob: -13.770055770874023
    7. 'h' → logprob: -13.895055770874023
    8. '\t' → logprob: -14.145055770874023
    9. '*(' → logprob: -14.145055770874023
    10. '(' → logprob: -14.395055770874023

Token 187: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -9.126521035796031e-05
    2. ' ' → logprob: -9.375091552734375
    3. '(' → logprob: -12.500091552734375
    4. '60' → logprob: -13.375091552734375
    5. '*' → logprob: -14.875091552734375
    6. ' (' → logprob: -16.125091552734375
    7. '  ' → logprob: -16.125091552734375
    8. '   ' → logprob: -16.125091552734375
    9. '(t' → logprob: -16.500091552734375
    10. 't' → logprob: -16.500091552734375

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003631137660704553
    2. '*' → logprob: -9.00036334991455
    3. 's' → logprob: -9.12536334991455
    4. 't' → logprob: -9.25036334991455
    5. ' ' → logprob: -12.12536334991455
    6. ' t' → logprob: -12.25036334991455
    7. '.' → logprob: -12.50036334991455
    8. ' s' → logprob: -12.50036334991455
    9. '*t' → logprob: -12.75036334991455
    10. '_' → logprob: -13.43786334991455

Token 189: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7348944544792175
    2. ' (' → logprob: -1.3598945140838623
    3. ' ' → logprob: -2.1098945140838623
    4. 's' → logprob: -2.2348945140838623
    5. ' *' → logprob: -4.984894275665283
    6. ',' → logprob: -5.359894275665283
    7. '   ' → logprob: -5.484894275665283
    8. ' seconds' → logprob: -5.609894275665283
    9. '*' → logprob: -5.734894275665283
    10. ' t' → logprob: -5.984894275665283

Token 190: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023842109367251396
    2. 'angle' → logprob: -7.002384185791016
    3. ',' → logprob: -8.127384185791016
    4. ' (' → logprob: -8.252384185791016
    5. ' angle' → logprob: -8.502384185791016
    6. '(angle' → logprob: -9.127384185791016
    7. ' ' → logprob: -9.377384185791016
    8. '    
' → logprob: -9.502384185791016
    9. '
' → logprob: -9.627384185791016
    10. '<|end|>' → logprob: -9.627384185791016

Token 191: ' vitesse' (ID: 71752)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1964356154203415
    2. '(t' → logprob: -1.946435570716858
    3. '(angle' → logprob: -3.4464356899261475
    4. 'angle' → logprob: -5.696435451507568
    5. '(' → logprob: -8.571435928344727
    6. ' angle' → logprob: -9.321435928344727
    7. '   ' → logprob: -11.071435928344727
    8. '(h' → logprob: -11.071435928344727
    9. '(theta' → logprob: -11.196435928344727
    10. ' ' → logprob: -11.196435928344727

Token 192: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014176084659993649
    2. '=' → logprob: -4.264175891876221
    3. 's' → logprob: -12.139176368713379
    4. ' ' → logprob: -12.764176368713379
    5. '   ' → logprob: -13.639176368713379
    6. ' ' → logprob: -14.514176368713379
    7. '(' → logprob: -14.764176368713379
    8. 'angle' → logprob: -15.264176368713379
    9. ' =(' → logprob: -15.264176368713379
    10. 't' → logprob: -15.514176368713379

Token 193: '360' (ID: 9870)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694668769836426
    2. ' =' → logprob: -2.1269466876983643
    3. '=(' → logprob: -11.626946449279785
    4. ' ' → logprob: -12.751946449279785
    5. '360' → logprob: -13.126946449279785
    6. '(' → logprob: -13.126946449279785
    7. '0' → logprob: -14.501946449279785
    8. 's' → logprob: -14.626946449279785
    9. ' =(' → logprob: -14.626946449279785
    10. 't' → logprob: -14.876946449279785

Token 194: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2921474575996399
    2. ' /' → logprob: -1.4171473979949951
    3. '/(' → logprob: -5.167147636413574
    4. '/H' → logprob: -5.292147636413574
    5. '.' → logprob: -9.292147636413574
    6. '*' → logprob: -10.042147636413574
    7. '°' → logprob: -10.667147636413574
    8. ' ' → logprob: -11.042147636413574
    9. ' ' → logprob: -12.542147636413574
    10. '(H' → logprob: -12.792147636413574

Token 195: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.021450549364089966
    2. 'H' → logprob: -3.8964505195617676
    3. '(' → logprob: -7.146450519561768
    4. ' (' → logprob: -9.646450996398926
    5. ' H' → logprob: -10.146450996398926
    6. '360' → logprob: -11.396450996398926
    7. ')' → logprob: -13.521450996398926
    8. ' ' → logprob: -14.521450996398926
    9. ',H' → logprob: -14.521450996398926
    10. '((' → logprob: -14.646450996398926

Token 196: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0002346488763578236
    2. '360' → logprob: -8.375234603881836
    3. ')' → logprob: -13.625234603881836
    4. '\' → logprob: -13.875234603881836
    5. ' *' → logprob: -13.875234603881836
    6. ' ' → logprob: -15.125234603881836
    7. ' ' → logprob: -16.250234603881836
    8. '**' → logprob: -16.250234603881836
    9. '*(' → logprob: -16.375234603881836
    10. '*)' → logprob: -16.750234603881836

Token 197: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.053051743656396866
    2. '(' → logprob: -3.053051710128784
    3. '(H' → logprob: -5.428051948547363
    4. '60' → logprob: -10.428051948547363
    5. ' (' → logprob: -11.053051948547363
    6. 'H' → logprob: -12.303051948547363
    7. ' ' → logprob: -13.303051948547363
    8. '720' → logprob: -13.303051948547363
    9. '540' → logprob: -13.678051948547363
    10. '180' → logprob: -13.678051948547363

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. '00' → logprob: -13.75000286102295
    3. '*' → logprob: -14.00000286102295
    4. ')' → logprob: -14.87500286102295
    5. ' ' → logprob: -16.250001907348633
    6. '٠' → logprob: -16.250001907348633
    7. '۰' → logprob: -16.375001907348633
    8. '```' → logprob: -16.375001907348633
    9. '.' → logprob: -16.625001907348633
    10. 'o' → logprob: -17.000001907348633

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035820147022604942
    2. ' )' → logprob: -5.753582000732422
    3. ')*' → logprob: -8.253582000732422
    4. '))' → logprob: -10.503582000732422
    5. ')t' → logprob: -10.503582000732422
    6. ')
' → logprob: -11.003582000732422
    7. ' ' → logprob: -11.128582000732422
    8. '*' → logprob: -11.503582000732422
    9. 's' → logprob: -11.878582000732422
    10. '),' → logprob: -12.128582000732422

Token 200: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7598994970321655
    2. 'angle' → logprob: -0.8848994970321655
    3. '(angle' → logprob: -3.384899616241455
    4. ' angle' → logprob: -3.634899616241455
    5. ' (' → logprob: -3.759899616241455
    6. '*' → logprob: -4.259899616241455
    7. '   ' → logprob: -4.384899616241455
    8. '
' → logprob: -6.009899616241455
    9. '*(' → logprob: -6.509899616241455
    10. ' ' → logprob: -6.509899616241455

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2521645128726959
    2. '360' → logprob: -2.127164602279663
    3. '(' → logprob: -2.502164602279663
    4. '6' → logprob: -4.752164363861084
    5. ' ' → logprob: -4.752164363861084
    6. '0' → logprob: -6.002164363861084
    7. '60' → logprob: -6.377164363861084
    8. ' (' → logprob: -8.627164840698242
    9. 'frac' → logprob: -10.377164840698242
    10. '180' → logprob: -10.627164840698242

Token 202: '1' (ID: 16)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.39037269353866577
    2. '(' → logprob: -1.3903727531433105
    3. '0' → logprob: -3.0153727531433105
    4. '1' → logprob: -3.7653727531433105
    5. ' ' → logprob: -7.3903727531433105
    6. '60' → logprob: -7.6403727531433105
    7. '```' → logprob: -8.015372276306152
    8. 'frac' → logprob: -8.515372276306152
    9. '6' → logprob: -8.765372276306152
    10. '{' → logprob: -9.890372276306152

Token 203: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.06455874443054199
    2. '/(' → logprob: -3.314558744430542
    3. ' /' → logprob: -3.939558744430542
    4. '/H' → logprob: -5.189558982849121
    5. '.' → logprob: -7.064558982849121
    6. '0' → logprob: -9.439558982849121
    7. ' /(' → logprob: -9.689558982849121
    8. '\xe2\x81' → logprob: -10.939558982849121
    9. ' ' → logprob: -10.939558982849121
    10. 'e' → logprob: -11.439558982849121

Token 204: '10' (ID: 702)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.6928601861000061
    2. '10' → logprob: -0.8178601861000061
    3. 'H' → logprob: -3.4428601264953613
    4. ' H' → logprob: -4.942860126495361
    5. '(' → logprob: -4.942860126495361
    6. ' ' → logprob: -5.442860126495361
    7. ' (' → logprob: -5.942860126495361
    8. '100' → logprob: -6.192860126495361
    9. '60' → logprob: -6.442860126495361
    10. '30' → logprob: -6.942860126495361

Token 205: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2725895047187805
    2. '(H' → logprob: -2.0225894451141357
    3. '0' → logprob: -3.1475894451141357
    4. ')' → logprob: -3.8975894451141357
    5. ' *' → logprob: -3.8975894451141357
    6. '**' → logprob: -4.397589683532715
    7. 'H' → logprob: -5.772589683532715
    8. '*(' → logprob: -6.022589683532715
    9. '/H' → logprob: -6.772589683532715
    10. ' ' → logprob: -7.147589683532715

Token 206: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.35215550661087036
    2. 'H' → logprob: -1.2271554470062256
    3. ' H' → logprob: -6.602155685424805
    4. '(' → logprob: -6.602155685424805
    5. '60' → logprob: -7.477155685424805
    6. ' (' → logprob: -8.227155685424805
    7. '360' → logprob: -9.727155685424805
    8. '6' → logprob: -9.977155685424805
    9. ' ' → logprob: -11.227155685424805
    10. '	H' → logprob: -12.102155685424805

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1448107361793518
    2. '*' → logprob: -2.144810676574707
    3. ' )' → logprob: -4.269810676574707
    4. ' *' → logprob: -5.894810676574707
    5. '*)' → logprob: -7.394810676574707
    6. ')
' → logprob: -9.019810676574707
    7. ' ' → logprob: -9.144810676574707
    8. ')*' → logprob: -9.894810676574707
    9. '0' → logprob: -11.394810676574707
    10. ' ' → logprob: -11.519810676574707

Token 208: ' degrés' (ID: 195297)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.23973309993743896
    2. ' angle' → logprob: -2.2397332191467285
    3. '   ' → logprob: -2.3647332191467285
    4. '
' → logprob: -4.8647332191467285
    5. '(angle' → logprob: -5.8647332191467285
    6. '_angle' → logprob: -6.7397332191467285
    7. ' ' → logprob: -8.36473274230957
    8. ' (' → logprob: -8.48973274230957
    9. ' *' → logprob: -9.61473274230957
    10. '  
' → logprob: -9.86473274230957

Token 209: '/s' (ID: 5031)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6621100306510925
    2. ' *' → logprob: -1.2871100902557373
    3. '/' → logprob: -2.2871100902557373
    4. '/s' → logprob: -2.5371100902557373
    5. ' ' → logprob: -4.662109851837158
    6. '*' → logprob: -5.037109851837158
    7. '*s' → logprob: -5.662109851837158
    8. 's' → logprob: -6.037109851837158
    9. '   ' → logprob: -6.162109851837158
    10. '_s' → logprob: -7.287109851837158

Token 210: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004147018771618605
    2. 'angle' → logprob: -6.004147052764893
    3. ' angle' → logprob: -6.504147052764893
    4. '
' → logprob: -8.754146575927734
    5. '(angle' → logprob: -12.254146575927734
    6. '    
' → logprob: -12.754146575927734
    7. '_angle' → logprob: -13.504146575927734
    8. '  ' → logprob: -13.754146575927734
    9. ' =' → logprob: -13.879146575927734
    10. ' ' → logprob: -14.004146575927734

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028109941631555557
    2. ' angle' → logprob: -3.9031100273132324
    3. 'angle' → logprob: -4.903110027313232
    4. '
' → logprob: -9.153109550476074
    5. '(angle' → logprob: -12.778109550476074
    6. '    
' → logprob: -13.403109550476074
    7. '    ' → logprob: -13.653109550476074
    8. '_angle' → logprob: -13.778109550476074
    9. '   ' → logprob: -13.903109550476074
    10. ' ' → logprob: -14.403109550476074

Token 212: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.0069210343062877655
    2. ' angle' → logprob: -5.00692081451416
    3. '   ' → logprob: -8.50692081451416
    4. '(angle' → logprob: -13.63192081451416
    5. ' ' → logprob: -13.88192081451416
    6. 'angular' → logprob: -14.75692081451416
    7. '
' → logprob: -15.63192081451416
    8. '    
' → logprob: -15.88192081451416
    9. '  ' → logprob: -16.006921768188477
    10. '.angle' → logprob: -16.381921768188477

Token 213: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00010151672904612496
    2. '_' → logprob: -9.875101089477539
    3. '_H' → logprob: -10.750101089477539
    4. 'h' → logprob: -10.875101089477539
    5. '	h' → logprob: -12.375101089477539
    6. 'H' → logprob: -13.500101089477539
    7. '_hour' → logprob: -13.625101089477539
    8. '```' → logprob: -13.875101089477539
    9. '=' → logprob: -14.625101089477539
    10. '_=' → logprob: -15.500101089477539

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894089609384537
    2. '=' → logprob: -2.4639408588409424
    3. ' =(' → logprob: -14.338940620422363
    4. ' ' → logprob: -14.838940620422363
    5. ' =
' → logprob: -15.713940620422363
    6. '   ' → logprob: -15.838940620422363
    7. ',' → logprob: -16.83894157409668
    8. ')' → logprob: -17.08894157409668
    9. ' ' → logprob: -17.58894157409668
    10. '=(' → logprob: -17.71394157409668

Token 215: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3868989646434784
    2. '(t' → logprob: -1.1368989944458008
    3. '   ' → logprob: -10.7618989944458
    4. '(' → logprob: -12.7618989944458
    5. ' ' → logprob: -12.8868989944458
    6. '((' → logprob: -14.7618989944458
    7. '  ' → logprob: -15.1368989944458
    8. 't' → logprob: -15.1368989944458
    9. '
' → logprob: -16.511898040771484
    10. '(T' → logprob: -16.511898040771484

Token 216: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1347792148590088
    2. '(t' → logprob: -2.134779214859009
    3. ' t' → logprob: -5.13477897644043
    4. ' (' → logprob: -6.25977897644043
    5. '(' → logprob: -11.50977897644043
    6. '   ' → logprob: -12.25977897644043
    7. ' ' → logprob: -12.50977897644043
    8. '360' → logprob: -14.63477897644043
    9. ')t' → logprob: -15.13477897644043
    10. '	t' → logprob: -15.38477897644043

Token 217: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.028794365003705025
    2. ' /' → logprob: -3.903794288635254
    3. '*' → logprob: -4.903794288635254
    4. ' ' → logprob: -7.403794288635254
    5. '/' → logprob: -8.653794288635254
    6. '   ' → logprob: -11.903794288635254
    7. '/(' → logprob: -12.903794288635254
    8. ')' → logprob: -13.028794288635254
    9. ' ' → logprob: -13.153794288635254
    10. ' /(' → logprob: -13.653794288635254

Token 218: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02215016447007656
    2. ' (' → logprob: -4.022150039672852
    3. '360' → logprob: -6.397150039672852
    4. '1' → logprob: -6.772150039672852
    5. ' ' → logprob: -7.272150039672852
    6. '0' → logprob: -8.022150039672852
    7. '36' → logprob: -9.772150039672852
    8. '6' → logprob: -9.772150039672852
    9. '9' → logprob: -11.147150039672852
    10. '   ' → logprob: -11.772150039672852

Token 219: '360' (ID: 9870)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04230603948235512
    2. '360' → logprob: -3.2923059463500977
    3. '0' → logprob: -6.667305946350098
    4. '(' → logprob: -6.792305946350098
    5. ' ' → logprob: -7.042305946350098
    6. '36' → logprob: -7.167305946350098
    7. '6' → logprob: -9.167305946350098
    8. '   ' → logprob: -9.917305946350098
    9. '9' → logprob: -11.167305946350098
    10. ' (' → logprob: -11.417305946350098

Token 220: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.18145345151424408
    2. ' /' → logprob: -1.9314534664154053
    3. '/(' → logprob: -3.9314534664154053
    4. ')' → logprob: -7.181453227996826
    5. ')/(' → logprob: -8.181453704833984
    6. '/
' → logprob: -8.181453704833984
    7. ' ' → logprob: -10.681453704833984
    8. ' /(' → logprob: -10.806453704833984
    9. '   ' → logprob: -11.931453704833984
    10. ' /
' → logprob: -12.431453704833984

Token 221: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.06263871490955353
    2. '(' → logprob: -2.812638759613037
    3. ' (' → logprob: -7.312638759613037
    4. '((' → logprob: -13.437638282775879
    5. '(int' → logprob: -14.437638282775879
    6. '   ' → logprob: -14.687638282775879
    7. ' ' → logprob: -15.312638282775879
    8. '360' → logprob: -15.437638282775879
    9. '60' → logprob: -15.812638282775879
    10. ')' → logprob: -15.812638282775879

Token 222: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.25896504521369934
    2. 'H' → logprob: -1.508965015411377
    3. '(' → logprob: -5.258965015411377
    4. '10' → logprob: -7.133965015411377
    5. '360' → logprob: -7.258965015411377
    6. ' (' → logprob: -8.383965492248535
    7. ' H' → logprob: -9.758965492248535
    8. '60' → logprob: -11.258965492248535
    9. '   ' → logprob: -12.883965492248535
    10. ' ' → logprob: -13.133965492248535

Token 223: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.021344363689422607
    2. ' *' → logprob: -3.8963444232940674
    3. '360' → logprob: -7.146344184875488
    4. ' ' → logprob: -11.521344184875488
    5. '   ' → logprob: -13.021344184875488
    6. '  ' → logprob: -13.396344184875488
    7. '60' → logprob: -15.396344184875488
    8. ')' → logprob: -16.521345138549805
    9. '180' → logprob: -16.521345138549805
    10. ' ' → logprob: -16.521345138549805

Token 224: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '(' → logprob: -17.125
    4. '36' → logprob: -20.25
    5. '180' → logprob: -22.125
    6. '60' → logprob: -22.375
    7. '366' → logprob: -22.5
    8. '359' → logprob: -22.5
    9. '720' → logprob: -22.625
    10. '   ' → logprob: -22.875

Token 225: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '(' → logprob: -17.625
    3. ' ' → logprob: -19.5
    4. '36' → logprob: -20.25
    5. '60' → logprob: -21.0
    6. '720' → logprob: -22.25
    7. '120' → logprob: -22.375
    8. '180' → logprob: -22.375
    9. '432' → logprob: -22.625
    10. '366' → logprob: -22.625

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.625000953674316
    3. ')' → logprob: -15.000000953674316
    4. '00' → logprob: -15.750000953674316
    5. ' ' → logprob: -16.625001907348633
    6. ')))' → logprob: -17.000001907348633
    7. '۰' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '
' → logprob: -18.000001907348633
    10. 'O' → logprob: -18.375001907348633

Token 227: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02478138729929924
    2. ')' → logprob: -4.024781227111816
    3. '))' → logprob: -5.149781227111816
    4. ' ' → logprob: -7.149781227111816
    5. ')))
' → logprob: -11.899781227111816
    6. ' ))' → logprob: -12.399781227111816
    7. '))))' → logprob: -12.649781227111816
    8. ' )' → logprob: -12.899781227111816
    9. ')
' → logprob: -13.149781227111816
    10. '   ' → logprob: -13.399781227111816

Token 228: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10077127069234848
    2. '%' → logprob: -2.350771188735962
    3. ')' → logprob: -7.600771427154541
    4. ' ' → logprob: -9.975770950317383
    5. ' )' → logprob: -11.725770950317383
    6. ')%' → logprob: -12.225770950317383
    7. ' ' → logprob: -12.475770950317383
    8. '
' → logprob: -15.475770950317383
    9. '<|end|>' → logprob: -15.725770950317383
    10. '   ' → logprob: -15.725770950317383

Token 229: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '180' → logprob: -18.50010871887207
    4. '(' → logprob: -20.50010871887207
    5. '36' → logprob: -20.87510871887207
    6. '   ' → logprob: -21.25010871887207
    7. '359' → logprob: -21.75010871887207
    8. '```' → logprob: -22.12510871887207
    9. ' ' → logprob: -22.37510871887207
    10. '  ' → logprob: -22.50010871887207

Token 230: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '180' → logprob: -20.0
    4. '36' → logprob: -21.25
    5. '```' → logprob: -21.375
    6. '(' → logprob: -22.0
    7. '359' → logprob: -22.25
    8. '{' → logprob: -22.25
    9. '720' → logprob: -22.875
    10. '[' → logprob: -23.25

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007876326330006123
    2. '
' → logprob: -5.007876396179199
    3. '    
' → logprob: -7.007876396179199
    4. ' return' → logprob: -9.3828763961792
    5. 'return' → logprob: -9.8828763961792
    6. '<|end|>' → logprob: -10.0078763961792
    7. '	return' → logprob: -10.5078763961792
    8. '  
' → logprob: -11.1328763961792
    9. ')' → logprob: -12.0078763961792
    10. '
' → logprob: -12.1328763961792

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01848469488322735
    2. '    
' → logprob: -5.018484592437744
    3. ' return' → logprob: -5.393484592437744
    4. '
' → logprob: -5.768484592437744
    5. '<|end|>' → logprob: -6.893484592437744
    6. 'return' → logprob: -7.143484592437744
    7. '	return' → logprob: -7.143484592437744
    8. '  
' → logprob: -7.393484592437744
    9. ' 
' → logprob: -7.643484592437744
    10. '   
' → logprob: -8.768485069274902

Token 233: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006769603583961725
    2. 'return' (adapté à ' return') → logprob: -5.50676965713501
    3. '    
' → logprob: -6.75676965713501
    4. ' return' → logprob: -6.88176965713501
    5. '	return' → logprob: -8.256769180297852
    6. '
' → logprob: -8.506769180297852
    7. '<|end|>' → logprob: -11.506769180297852
    8. '	
' → logprob: -12.006769180297852
    9. '  
' → logprob: -12.381769180297852
    10. ' 
' → logprob: -12.381769180297852

Token 234: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.14411668479442596
    2. '(angle' → logprob: -2.1441166400909424
    3. ' angle' → logprob: -4.1441168785095215
    4. ' (' → logprob: -6.7691168785095215
    5. '(' → logprob: -10.519116401672363
    6. '   ' → logprob: -11.894116401672363
    7. '[' → logprob: -14.269116401672363
    8. 'angles' → logprob: -15.769116401672363
    9. '(int' → logprob: -15.894116401672363
    10. ' ' → logprob: -16.01911735534668

Token 235: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -2.629921436891891e-05
    2. '_s' → logprob: -10.62502670288086
    3. '_' → logprob: -14.12502670288086
    4. 'h' → logprob: -14.62502670288086
    5. 's' → logprob: -15.25002670288086
    6. '_angle' → logprob: -15.50002670288086
    7. 'angle' → logprob: -16.25002670288086
    8. '_a' → logprob: -16.75002670288086
    9. '	h' → logprob: -17.50002670288086
    10. '(h' → logprob: -17.50002670288086

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000146687583765015
    2. ' ,' → logprob: -8.875146865844727
    3. ',
' → logprob: -12.250146865844727
    4. 'angle' → logprob: -14.125146865844727
    5. '<|end|>' → logprob: -14.250146865844727
    6. ' angle' → logprob: -16.375146865844727
    7. ',\
' → logprob: -16.375146865844727
    8. '   ' → logprob: -16.750146865844727
    9. '‌,' → logprob: -16.875146865844727
    10. ',

' → logprob: -17.000146865844727

Token 237: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.31330981850624084
    2. 'angle' → logprob: -1.3133097887039185
    3. ' ' → logprob: -10.313309669494629
    4. '(angle' → logprob: -11.438309669494629
    5. 'space' → logprob: -13.563309669494629
    6. ' ' → logprob: -13.563309669494629
    7. ' space' → logprob: -14.188309669494629
    8. '_angle' → logprob: -15.188309669494629
    9. '.angle' → logprob: -15.438309669494629
    10. ',' → logprob: -16.188310623168945

Token 238: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.006801575422286987
    2. '_s' → logprob: -5.006801605224609
    3. 'm' → logprob: -9.50680160522461
    4. 's' → logprob: -11.50680160522461
    5. '_' → logprob: -13.38180160522461
    6. ' _' → logprob: -15.25680160522461
    7. '<|end|>' → logprob: -18.00680160522461
    8. '_ms' → logprob: -18.25680160522461
    9. '}_' → logprob: -18.75680160522461
    10. '_r' → logprob: -18.75680160522461

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044163595885038376
    2. 'angle' → logprob: -8.125441551208496
    3. ' ,' → logprob: -8.875441551208496
    4. ' angle' → logprob: -12.750441551208496
    5. '(angle' → logprob: -13.500441551208496
    6. ',
' → logprob: -14.000441551208496
    7. '   ' → logprob: -15.750441551208496
    8. '_angle' → logprob: -16.250442504882812
    9. ',s' → logprob: -16.750442504882812
    10. ',\
' → logprob: -16.875442504882812

Token 240: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.2519300878047943
    2. ' angle' → logprob: -1.5019301176071167
    3. '(angle' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.751930236816406
    5. ' ' → logprob: -16.126930236816406
    6. 'ang' → logprob: -16.876930236816406
    7. '_angle' → logprob: -17.126930236816406
    8. ' ang' → logprob: -17.376930236816406
    9. '.angle' → logprob: -18.001930236816406
    10. '   ' → logprob: -18.001930236816406

Token 241: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00317783304490149
    2. 's' → logprob: -5.753177642822266
    3. '_' → logprob: -15.753177642822266
    4. ' _' → logprob: -17.253177642822266
    5. ' s' → logprob: -18.003177642822266
    6. '<|end|>' → logprob: -18.378177642822266
    7. '```' → logprob: -18.378177642822266
    8. ''s' → logprob: -19.128177642822266
    9. '}_' → logprob: -19.503177642822266
    10. '	s' → logprob: -19.878177642822266

Token 242: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6036487817764282
    2. '<|end|>' → logprob: -0.9786487817764282
    3. 'def' → logprob: -2.7286486625671387
    4. '

' → logprob: -4.853648662567139
    5. '<|end|>' → logprob: -6.478648662567139
    6. '#' → logprob: -7.103648662567139
    7. '```' → logprob: -7.353648662567139
    8. '  
' → logprob: -8.728649139404297
    9. '\' → logprob: -8.728649139404297
    10. '\n' → logprob: -8.853649139404297

Token 243: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015627337619662285
    2. '#' → logprob: -4.515627384185791
    3. '
' → logprob: -6.265627384185791
    4. '<|end|>' → logprob: -6.765627384185791
    5. 'import' → logprob: -7.515627384185791
    6. '

' → logprob: -7.890627384185791
    7. '```' → logprob: -8.515626907348633
    8. '<|end|>' → logprob: -8.640626907348633
    9. ' def' → logprob: -10.140626907348633
    10. '\' → logprob: -10.140626907348633

Token 244: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024612643755972385
    2. ' def' → logprob: -6.1274614334106445
    3. '#' → logprob: -8.377461433410645
    4. 'import' → logprob: -10.252461433410645
    5. ' 
' → logprob: -13.252461433410645
    6. '
' → logprob: -13.627461433410645
    7. ' ' → logprob: -13.752461433410645
    8. '(' → logprob: -13.877461433410645
    9. ' #' → logprob: -13.877461433410645
    10. '```' → logprob: -14.127461433410645

Token 245: ' pour' (ID: 1930)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7106010913848877
    2. 'def' → logprob: -0.7106010913848877
    3. ' for' → logprob: -4.835600852966309
    4. ' pour' → logprob: -4.835600852966309
    5. ' to' → logprob: -7.585600852966309
    6. '#' → logprob: -8.335600852966309
    7. 'pour' → logprob: -8.585600852966309
    8. ' calculate' → logprob: -8.835600852966309
    9. 'for' → logprob: -9.085600852966309
    10. 'to' → logprob: -10.335600852966309

Token 246: ' calcul' (ID: 7559)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.23086592555046082
    2. 'calcul' → logprob: -2.105865955352783
    3. 'chercher' → logprob: -3.480865955352783
    4. '#' → logprob: -3.730865955352783
    5. ' trouver' → logprob: -4.980865955352783
    6. ' calcul' → logprob: -5.105865955352783
    7. 'dé' → logprob: -5.480865955352783
    8. 'detect' → logprob: -5.730865955352783
    9. 're' → logprob: -5.980865955352783
    10. 'find' → logprob: -6.230865955352783

Token 247: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.000442351185483858
    2. 'ler' → logprob: -7.7504425048828125
    3. '#' → logprob: -11.875442504882812
    4. 'uler' → logprob: -14.125442504882812
    5. 'der' → logprob: -14.250442504882812
    6. 'rer' → logprob: -14.375442504882812
    7. '```' → logprob: -14.750442504882812
    8. 'aler' → logprob: -15.125442504882812
    9. 'def' → logprob: -15.250442504882812
    10. 'ater' → logprob: -15.500442504882812

Token 248: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1807315349578857
    2. ' la' → logprob: -1.4307315349578857
    3. 'le' → logprob: -1.8057315349578857
    4. 'l' → logprob: -2.3057315349578857
    5. ' le' → logprob: -2.6807315349578857
    6. '_le' → logprob: -3.3057315349578857
    7. 'la' → logprob: -3.5557315349578857
    8. '_l' → logprob: -3.9307315349578857
    9. 'def' → logprob: -4.930731773376465
    10. '_la' → logprob: -4.930731773376465

Token 249: ''' (ID: 6)
  Prédit: ''éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''éc' → logprob: -0.8656818270683289
    2. 'angle' → logprob: -1.7406818866729736
    3. 'es' → logprob: -2.3656818866729736
    4. ''' → logprob: -2.3656818866729736
    5. 'a' → logprob: -2.4906818866729736
    6. 'e' → logprob: -2.6156818866729736
    7. 'ec' → logprob: -4.2406816482543945
    8. 'distance' → logprob: -4.7406816482543945
    9. ''é' → logprob: -5.1156816482543945
    10. 'def' → logprob: -5.2406816482543945

Token 250: 'angle' (ID: 7140)
  Prédit: 'angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.22534134984016418
    2. 'éc' → logprob: -2.475341320037842
    3. 'plus' → logprob: -3.225341320037842
    4. 'interval' → logprob: -3.725341320037842
    5. 'ec' → logprob: -3.850341320037842
    6. 'def' → logprob: -4.475341320037842
    7. 'arc' → logprob: -5.725341320037842
    8. 'intersection' → logprob: -5.850341320037842
    9. 'distance' → logprob: -5.975341320037842
    10. ''éc' → logprob: -6.475341320037842

Token 251: ' minimal' (ID: 19957)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.27660855650901794
    2. '_diff' → logprob: -2.151608467102051
    3. '_' → logprob: -3.026608467102051
    4. '_min' → logprob: -3.526608467102051
    5. 'entre' → logprob: -4.026608467102051
    6. 's' → logprob: -5.151608467102051
    7. ' between' → logprob: -5.776608467102051
    8. '_d' → logprob: -6.026608467102051
    9. 'diff' → logprob: -6.151608467102051
    10. 'between' → logprob: -6.276608467102051

Token 252: ' entre' (ID: 3853)
  Prédit: '_between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.09137598425149918
    2. '_' → logprob: -2.9663760662078857
    3. '_diff' → logprob: -4.091375827789307
    4. 'entre' → logprob: -5.841375827789307
    5. 'def' → logprob: -5.841375827789307
    6. '_angle' → logprob: -5.966375827789307
    7. '_d' → logprob: -6.466375827789307
    8. ' between' → logprob: -6.841375827789307
    9. '(' → logprob: -7.091375827789307
    10. '_inter' → logprob: -7.591375827789307

Token 253: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.014917886815965176
    2. ' deux' → logprob: -4.514917850494385
    3. '2' → logprob: -6.264917850494385
    4. 'l' → logprob: -7.014917850494385
    5. 'une' → logprob: -8.389918327331543
    6. 'les' → logprob: -8.514918327331543
    7. 'two' → logprob: -9.014918327331543
    8. 'la' → logprob: -9.264918327331543
    9. 'angle' → logprob: -9.389918327331543
    10. '_de' → logprob: -9.764918327331543

Token 254: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.18159164488315582
    2. ' angles' → logprob: -1.8065916299819946
    3. 'angle' → logprob: -8.056591987609863
    4. ' aigu' → logprob: -8.306591987609863
    5. 'a' → logprob: -8.681591987609863
    6. '_angles' → logprob: -8.806591987609863
    7. ' vectors' → logprob: -9.056591987609863
    8. ' vect' → logprob: -9.056591987609863
    9. ' positions' → logprob: -9.056591987609863
    10. 'positions' → logprob: -9.056591987609863

Token 255: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5749736428260803
    2. '(' → logprob: -1.5749735832214355
    3. '(a' → logprob: -2.3249735832214355
    4. ' (' → logprob: -2.5749735832214355
    5. '_' → logprob: -3.9499735832214355
    6. ' def' → logprob: -4.3249735832214355
    7. 'a' → logprob: -4.5749735832214355
    8. '(
' → logprob: -5.3249735832214355
    9. ',' → logprob: -5.6999735832214355
    10. '(angle' → logprob: -6.8249735832214355

Token 256: ' un' (ID: 537)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -0.31448060274124146
    2. ' ' → logprob: -1.9394805431365967
    3. ' une' → logprob: -3.5644805431365967
    4. 'une' → logprob: -3.5644805431365967
    5. '180' → logprob: -3.6894805431365967
    6. 'le' → logprob: -4.189480781555176
    7. ' la' → logprob: -5.064480781555176
    8. 'la' → logprob: -5.189480781555176
    9. '#' → logprob: -5.814480781555176
    10. 'l' → logprob: -5.939480781555176

Token 257: ' cercle' (ID: 172399)
  Prédit: ' cercle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cercle' → logprob: -0.016849929466843605
    2. 'c' → logprob: -5.141849994659424
    3. 'circle' → logprob: -5.141849994659424
    4. ' circle' → logprob: -6.141849994659424
    5. ' Cerc' → logprob: -6.516849994659424
    6. 'cer' → logprob: -7.891849994659424
    7. '360' → logprob: -8.516849517822266
    8. 'plan' → logprob: -8.641849517822266
    9. ' cer' → logprob: -8.641849517822266
    10. 'cycle' → logprob: -9.141849517822266

Token 258: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019645551219582558
    2. ' def' → logprob: -6.251964569091797
    3. '(' → logprob: -11.126964569091797
    4. '(
' → logprob: -11.376964569091797
    5. '(def' → logprob: -12.251964569091797
    6. '\' → logprob: -12.876964569091797
    7. ' (' → logprob: -14.001964569091797
    8. '
' → logprob: -14.126964569091797
    9. '```' → logprob: -15.376964569091797
    10. '_def' → logprob: -15.501964569091797

Token 259: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.47495681833243e-05
    2. ' def' → logprob: -10.625024795532227
    3. '
' → logprob: -16.125024795532227
    4. '(' → logprob: -16.375024795532227
    5. ' 
' → logprob: -17.000024795532227
    6. '(
' → logprob: -17.625024795532227
    7. '```' → logprob: -18.000024795532227
    8. '  
' → logprob: -18.375024795532227
    9. '(def' → logprob: -18.500024795532227
    10. 'import' → logprob: -18.500024795532227

Token 260: ' minimal' (ID: 19957)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.2890565097332001
    2. 'min' → logprob: -2.2890565395355225
    3. 'minimal' → logprob: -2.2890565395355225
    4. ' minimal' → logprob: -3.2890565395355225
    5. ' angle' → logprob: -4.914056301116943
    6. ' min' → logprob: -5.789056301116943
    7. 'angular' → logprob: -7.914056301116943
    8. 'diff' → logprob: -9.039056777954102
    9. ' minimale' → logprob: -10.664056777954102
    10. 'minimum' → logprob: -10.664056777954102

Token 261: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.005390399135649204
    2. '_' → logprob: -5.255390167236328
    3. '_distance' → logprob: -9.755390167236328
    4. '_difference' → logprob: -9.880390167236328
    5. '_diff' → logprob: -10.255390167236328
    6. '_interval' → logprob: -12.880390167236328
    7. ' _' → logprob: -13.130390167236328
    8. '_between' → logprob: -13.130390167236328
    9. '_gap' → logprob: -13.880390167236328
    10. '_angles' → logprob: -13.880390167236328

Token 262: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03496093675494194
    2. '(angle' → logprob: -3.534960985183716
    3. '(' → logprob: -5.284960746765137
    4. ' (' → logprob: -9.159960746765137
    5. '(x' → logprob: -11.409960746765137
    6. '(A' → logprob: -12.284960746765137
    7. '(theta' → logprob: -12.534960746765137
    8. '(alpha' → logprob: -13.034960746765137
    9. '(ai' → logprob: -14.034960746765137
    10. '(ax' → logprob: -14.284960746765137

Token 263: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008819366805255413
    2. '_,' → logprob: -5.508819580078125
    3. ',b' → logprob: -6.508819580078125
    4. ' ,' → logprob: -6.633819580078125
    5. '_' → logprob: -7.258819580078125
    6. ',a' → logprob: -7.758819580078125
    7. '1' → logprob: -8.008819580078125
    8. 'a' → logprob: -8.758819580078125
    9. ',_' → logprob: -9.383819580078125
    10. '(a' → logprob: -9.633819580078125

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006548931705765426
    2. ' ,' → logprob: -7.375654697418213
    3. ',a' → logprob: -10.500655174255371
    4. 'a' → logprob: -14.500655174255371
    5. ',
' → logprob: -15.875655174255371
    6. '‌,' → logprob: -16.375654220581055
    7. '_,' → logprob: -16.625654220581055
    8. ',b' → logprob: -17.500654220581055
    9. '<|end|>' → logprob: -18.625654220581055
    10. '1' → logprob: -18.875654220581055

Token 265: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06196858361363411
    2. ' a' → logprob: -2.8119685649871826
    3. '   ' → logprob: -14.686968803405762
    4. '	a' → logprob: -15.061968803405762
    5. ' ' → logprob: -16.311967849731445
    6. '    ' → logprob: -17.186967849731445
    7. ' ' → logprob: -17.811967849731445
    8. 'а' → logprob: -18.061967849731445
    9. ')a' → logprob: -18.061967849731445
    10. '  ' → logprob: -18.186967849731445

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05695193260908127
    2. ',' → logprob: -3.1819519996643066
    3. '1' → logprob: -4.556951999664307
    4. '_' → logprob: -6.681951999664307
    5. '_,' → logprob: -7.306951999664307
    6. ',a' → logprob: -7.556951999664307
    7. ' ,' → logprob: -7.806951999664307
    8. ',_' → logprob: -8.806951522827148
    9. 'r' → logprob: -9.306951522827148
    10. ',b' → logprob: -9.306951522827148

Token 267: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12705452740192413
    2. '):
' → logprob: -2.127054452896118
    3. '):
' → logprob: -9.252054214477539
    4. ')' → logprob: -11.502054214477539
    5. ' ):' → logprob: -11.627054214477539
    6. ',' → logprob: -12.377054214477539
    7. '):

' → logprob: -12.502054214477539
    8. '   ' → logprob: -13.502054214477539
    9. ':' → logprob: -13.752054214477539
    10. ' ):
' → logprob: -14.377054214477539

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015044590458273888
    2. 'diff' → logprob: -4.390044689178467
    3. ' diff' → logprob: -6.390044689178467
    4. 'delta' → logprob: -8.765044212341309
    5. 'abs' → logprob: -9.140044212341309
    6. '	diff' → logprob: -9.140044212341309
    7. ' return' → logprob: -9.140044212341309
    8. 'd' → logprob: -9.390044212341309
    9. ' d' → logprob: -9.765044212341309
    10. 'return' → logprob: -9.890044212341309

Token 269: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.06749766319990158
    2. ' diff' → logprob: -2.817497730255127
    3. 'd' → logprob: -5.442497730255127
    4. ' d' → logprob: -7.317497730255127
    5. 'abs' → logprob: -8.567497253417969
    6. 'delta' → logprob: -8.817497253417969
    7. '   ' → logprob: -9.067497253417969
    8. 'return' → logprob: -10.192497253417969
    9. ' return' → logprob: -11.442497253417969
    10. ' abs' → logprob: -12.067497253417969

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348503977060318
    2. '=' → logprob: -1.2235039472579956
    3. '_' → logprob: -9.848504066467285
    4. ',' → logprob: -13.348504066467285
    5. ')' → logprob: -13.348504066467285
    6. 's' → logprob: -14.473504066467285
    7. '_space' → logprob: -14.723504066467285
    8. 'space' → logprob: -14.723504066467285
    9. '_=' → logprob: -14.973504066467285
    10. '=int' → logprob: -15.098504066467285

Token 271: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.31378689408302307
    2. ' abs' → logprob: -1.3137868642807007
    3. '(abs' → logprob: -7.56378698348999
    4. 'min' → logprob: -12.438786506652832
    5. ' min' → logprob: -13.188786506652832
    6. 'a' → logprob: -16.31378746032715
    7. '(min' → logprob: -16.68878746032715
    8. ' (' → logprob: -17.06378746032715
    9. '(' → logprob: -18.93878746032715
    10. '(a' → logprob: -19.06378746032715

Token 272: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.707997428951785e-05
    2. '((' → logprob: -9.500077247619629
    3. 'a' → logprob: -13.125077247619629
    4. '(' → logprob: -15.750077247619629
    5. '(((' → logprob: -18.500076293945312
    6. '(angle' → logprob: -21.125076293945312
    7. ' (' → logprob: -22.250076293945312
    8. '(
' → logprob: -22.375076293945312
    9. '(A' → logprob: -22.500076293945312
    10. 'angle' → logprob: -22.875076293945312

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. 'a' → logprob: -13.25000286102295
    3. 's' → logprob: -14.75000286102295
    4. '_' → logprob: -15.00000286102295
    5. '2' → logprob: -15.50000286102295
    6. ' ' → logprob: -15.87500286102295
    7. 'ng' → logprob: -16.125003814697266
    8. 'n' → logprob: -17.000003814697266
    9. ' a' → logprob: -17.000003814697266
    10. '_angle' → logprob: -17.125003814697266

Token 274: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38695240020751953
    2. '-' → logprob: -1.1369524002075195
    3. '-a' → logprob: -9.63695240020752
    4. 'a' → logprob: -11.76195240020752
    5. ' ' → logprob: -12.63695240020752
    6. ' a' → logprob: -13.26195240020752
    7. ' -
' → logprob: -13.76195240020752
    8. '-
' → logprob: -14.88695240020752
    9. ' ' → logprob: -15.01195240020752
    10. '-angle' → logprob: -15.01195240020752

Token 275: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033546582562848926
    2. ' a' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.625335693359375
    4. ' ' → logprob: -18.625335693359375
    5. '	a' → logprob: -20.625335693359375
    6. '  ' → logprob: -21.375335693359375
    7. '    ' → logprob: -23.000335693359375
    8. 'а' → logprob: -23.625335693359375
    9. '(a' → logprob: -24.250335693359375
    10. ')' → logprob: -24.625335693359375

Token 276: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'a' → logprob: -19.50000762939453
    4. '   ' → logprob: -19.87500762939453
    5. '  ' → logprob: -21.00000762939453
    6. '２' → logprob: -21.25000762939453
    7. '_' → logprob: -21.25000762939453
    8. '۲' → logprob: -21.62500762939453
    9. ' a' → logprob: -21.75000762939453
    10. '₂' → logprob: -22.50000762939453

Token 277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00625914242118597
    2. ')
' → logprob: -5.131258964538574
    3. ' )' → logprob: -8.256258964538574
    4. ')%' → logprob: -10.131258964538574
    5. ' )
' → logprob: -11.381258964538574
    6. '%' → logprob: -11.381258964538574
    7. '   ' → logprob: -12.631258964538574
    8. ')

' → logprob: -13.256258964538574
    9. ')
' → logprob: -13.881258964538574
    10. ' %' → logprob: -14.631258964538574

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06620457023382187
    2. ' return' → logprob: -2.81620454788208
    3. 'return' → logprob: -6.06620454788208
    4. '
' → logprob: -6.56620454788208
    5. 'diff' → logprob: -7.94120454788208
    6. ' if' → logprob: -9.816205024719238
    7. ' diff' → logprob: -10.066205024719238
    8. '    ' → logprob: -11.316205024719238
    9. '360' → logprob: -11.941205024719238
    10. '    
' → logprob: -12.191205024719238

Token 279: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5202479362487793
    2. 'return' → logprob: -1.0202479362487793
    3. '   ' → logprob: -3.5202479362487793
    4. 'diff' → logprob: -4.270247936248779
    5. ' diff' → logprob: -7.020247936248779
    6. '360' → logprob: -8.020248413085938
    7. ' if' → logprob: -8.895248413085938
    8. 'if' (adapté à ' if') → logprob: -9.020248413085938
    9. '180' → logprob: -10.395248413085938
    10. ' min' → logprob: -11.895248413085938

Token 280: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.47410017251968384
    2. 'diff' → logprob: -0.9741001725196838
    3. '	diff' → logprob: -10.849100112915039
    4. '   ' → logprob: -13.099100112915039
    5. '(diff' → logprob: -13.599100112915039
    6. ' ' → logprob: -15.099100112915039
    7. '360' → logprob: -17.59910011291504
    8. '.diff' → logprob: -17.72410011291504
    9. '```' → logprob: -17.72410011291504
    10. 'd' → logprob: -17.97410011291504

Token 281: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07889308780431747
    2. ' >' → logprob: -2.5788931846618652
    3. '<=' → logprob: -13.578892707824707
    4. ' <=' → logprob: -14.578892707824707
    5. '()>' → logprob: -14.828892707824707
    6. '<' → logprob: -15.078892707824707
    7. '>\' → logprob: -15.578892707824707
    8. '>#' → logprob: -16.578893661499023
    9. '>
' → logprob: -16.953893661499023
    10. ' >
' → logprob: -17.203893661499023

Token 282: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.225412979722023
    2. ' ' → logprob: -1.6004129648208618
    3. '   ' → logprob: -16.100412368774414
    4. '(' → logprob: -16.475412368774414
    5. ' (' → logprob: -16.975412368774414
    6. '1' → logprob: -17.537912368774414
    7. ' ' → logprob: -17.600412368774414
    8. '  ' → logprob: -17.600412368774414
    9. '360' → logprob: -17.787912368774414
    10. '181' → logprob: -18.537912368774414

Token 283: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -19.375003814697266
    4. '   ' → logprob: -20.250003814697266
    5. '18' → logprob: -21.125003814697266
    6. '(' → logprob: -21.250003814697266
    7. '360' → logprob: -21.750003814697266
    8. '  ' → logprob: -22.125003814697266
    9. '0' → logprob: -23.000003814697266
    10. '181' → logprob: -23.500003814697266

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2060808688402176
    2. ':
' → logprob: -1.7060809135437012
    3. ' :
' → logprob: -6.331080913543701
    4. ' :' → logprob: -6.456080913543701
    5. '   ' → logprob: -6.831080913543701
    6. '):
' → logprob: -9.706080436706543
    7. ':return' → logprob: -9.706080436706543
    8. '       ' → logprob: -9.956080436706543
    9. 'diff' → logprob: -11.581080436706543
    10. ',' → logprob: -11.956080436706543

Token 285: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32374101877212524
    2. '       ' → logprob: -2.1987409591674805
    3. 'diff' → logprob: -2.4487409591674805
    4. ' diff' → logprob: -2.5737409591674805
    5. '	diff' → logprob: -6.0737409591674805
    6. '
' → logprob: -8.07374095916748
    7. ' return' → logprob: -8.44874095916748
    8. 'return' → logprob: -10.19874095916748
    9. '    ' → logprob: -10.44874095916748
    10. '    
' → logprob: -10.57374095916748

Token 286: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.02476092241704464
    2. '   ' → logprob: -4.149760723114014
    3. ' diff' → logprob: -4.774760723114014
    4. 'return' → logprob: -8.899761199951172
    5. '	diff' → logprob: -9.399761199951172
    6. '       ' → logprob: -10.899761199951172
    7. ' return' → logprob: -12.149761199951172
    8. '360' → logprob: -13.649761199951172
    9. '
' → logprob: -13.899761199951172
    10. '(diff' → logprob: -14.024761199951172

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=
' → logprob: -17.764163970947266
    4. '.=' → logprob: -18.389163970947266
    5. 'return' → logprob: -19.389163970947266
    6. '＝' → logprob: -19.764163970947266
    7. '=

' → logprob: -19.889163970947266
    8. '=}' → logprob: -20.264163970947266
    9. '   ' → logprob: -21.389163970947266
    10. '%=' → logprob: -21.639163970947266

Token 288: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.875045776367188
    4. '36' → logprob: -17.875045776367188
    5. '  ' → logprob: -22.125045776367188
    6. '361' → logprob: -22.375045776367188
    7. '```' → logprob: -22.625045776367188
    8. '0' → logprob: -23.125045776367188
    9. 'abs' → logprob: -23.125045776367188
    10. '(' → logprob: -23.125045776367188

Token 289: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '36' → logprob: -20.625
    4. '   ' → logprob: -22.0
    5. 'abs' → logprob: -22.125
    6. '```' → logprob: -22.625
    7. '(' → logprob: -24.0
    8. 'diff' → logprob: -24.5
    9. '  ' → logprob: -24.625
    10. 'angle' → logprob: -24.875

Token 290: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38693904876708984
    2. '-' → logprob: -1.1369390487670898
    3. '-d' → logprob: -9.63693904876709
    4. 'diff' → logprob: -13.01193904876709
    5. ' ' → logprob: -15.38693904876709
    6. '   ' → logprob: -16.386940002441406
    7. ' diff' → logprob: -16.386940002441406
    8. '	diff' → logprob: -17.386940002441406
    9. ' ' → logprob: -17.636940002441406
    10. '-
' → logprob: -17.886940002441406

Token 291: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.0206720617134124e-05
    2. ' diff' → logprob: -11.50001049041748
    3. '	diff' → logprob: -19.875009536743164
    4. '.diff' → logprob: -23.625009536743164
    5. 'Diff' → logprob: -24.000009536743164
    6. '(diff' → logprob: -24.125009536743164
    7. 'dif' → logprob: -24.250009536743164
    8. '_diff' → logprob: -24.500009536743164
    9. 'difference' → logprob: -25.125009536743164
    10. 'd' → logprob: -26.125009536743164

Token 292: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018089536752086133
    2. ' return' → logprob: -9.125181198120117
    3. 'return' → logprob: -9.625181198120117
    4. '	return' → logprob: -12.500181198120117
    5. '    
' → logprob: -14.375181198120117
    6. '
' → logprob: -14.375181198120117
    7. ':return' → logprob: -15.500181198120117
    8. '   ' → logprob: -15.750181198120117
    9. '  ' → logprob: -15.875181198120117
    10. ' ' → logprob: -16.125181198120117

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004113692557439208
    2. 'return' → logprob: -8.000411033630371
    3. ' return' → logprob: -9.500411033630371
    4. '	return' → logprob: -13.875411033630371
    5. '   ' → logprob: -17.250411987304688
    6. '```' → logprob: -17.375411987304688
    7. '
' → logprob: -17.625411987304688
    8. '    
' → logprob: -17.750411987304688
    9. '       ' → logprob: -17.750411987304688
    10. '  ' → logprob: -17.875411987304688

Token 294: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1049504354596138
    2. '   ' → logprob: -2.354950428009033
    3. ' return' → logprob: -5.354950428009033
    4. '	return' → logprob: -11.854950904846191
    5. ' ' → logprob: -14.479950904846191
    6. '  ' → logprob: -15.979950904846191
    7. '
' → logprob: -16.854949951171875
    8. 'eturn' → logprob: -17.104949951171875
    9. ':return' → logprob: -17.229949951171875
    10. '       ' → logprob: -17.354949951171875

Token 295: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0031777136027812958
    2. ' diff' → logprob: -5.753177642822266
    3. '	diff' → logprob: -17.128177642822266
    4. '(diff' → logprob: -18.503177642822266
    5. 'int' → logprob: -19.878177642822266
    6. '   ' → logprob: -20.253177642822266
    7. 'dif' → logprob: -20.503177642822266
    8. '_diff' → logprob: -20.503177642822266
    9. 'Diff' → logprob: -20.503177642822266
    10. 'd' → logprob: -20.753177642822266

Token 296: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2535075545310974
    2. '<|end|>' → logprob: -1.7535076141357422
    3. '

' → logprob: -3.253507614135742
    4. '#' → logprob: -4.628507614135742
    5. '<|end|>' → logprob: -7.003507614135742
    6. 'def' → logprob: -7.503507614135742
    7. '


' → logprob: -7.753507614135742
    8. '  
' → logprob: -8.878507614135742
    9. '```' → logprob: -9.003507614135742
    10. '
' → logprob: -10.128507614135742

Token 297: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.014264225959777832
    2. 'def' → logprob: -4.264264106750488
    3. '```' → logprob: -9.389264106750488
    4. 'import' → logprob: -11.639264106750488
    5. '
' → logprob: -13.014264106750488
    6. '<|end|>' → logprob: -13.139264106750488
    7. '<|end|>' → logprob: -14.014264106750488
    8. '\' → logprob: -14.264264106750488
    9. '  
' → logprob: -15.014264106750488
    10. '``' → logprob: -15.139264106750488

Token 298: ' Simpl' (ID: 92258)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016039058566093445
    2. '#' → logprob: -4.14103889465332
    3. 'import' → logprob: -13.14103889465332
    4. 'from' → logprob: -13.39103889465332
    5. ' def' → logprob: -14.26603889465332
    6. 'Code' → logprob: -15.39103889465332
    7. '```' → logprob: -15.76603889465332
    8. 'class' → logprob: -16.26603889465332
    9. '
' → logprob: -17.14103889465332
    10. '#!/' → logprob: -17.26603889465332

Token 299: 'ifie' (ID: 46409)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.04230981320142746
    2. 'ifie' → logprob: -4.167309761047363
    3. 'ifier' → logprob: -4.417309761047363
    4. 'ified' → logprob: -5.042309761047363
    5. 'if' → logprob: -5.167309761047363
    6. 'ef' → logprob: -7.792309761047363
    7. 'ification' → logprob: -7.917309761047363
    8. 'ifiez' → logprob: -8.292309761047363
    9. 'ificate' → logprob: -9.042309761047363
    10. 'e' → logprob: -9.167309761047363

Token 300: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.450204998254776
    2. '_fraction' → logprob: -1.4502049684524536
    3. 'fra' → logprob: -2.700205087661743
    4. 'fraction' → logprob: -3.700205087661743
    5. 'g' → logprob: -4.825204849243164
    6. ' fractions' → logprob: -5.450204849243164
    7. '_ratio' → logprob: -5.575204849243164
    8. 'frac' → logprob: -6.075204849243164
    9. 'Fraction' → logprob: -6.200204849243164
    10. ')' → logprob: -6.575204849243164

Token 301: ' fraction' (ID: 33763)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.6839332580566406
    2. 'def' → logprob: -0.9339332580566406
    3. 'fra' → logprob: -2.8089332580566406
    4. ' fraction' → logprob: -4.183933258056641
    5. 'from' → logprob: -4.558933258056641
    6. 'g' → logprob: -4.683933258056641
    7. 'import' → logprob: -6.183933258056641
    8. '#' → logprob: -7.058933258056641
    9. ' def' → logprob: -7.433933258056641
    10. 'fr' → logprob: -7.933933258056641

Token 302: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07895126193761826
    2. 'from' → logprob: -2.578951358795166
    3. ' def' → logprob: -10.703950881958008
    4. '(n' → logprob: -11.453950881958008
    5. '(num' → logprob: -11.578950881958008
    6. '(' → logprob: -11.953950881958008
    7. 'import' → logprob: -12.703950881958008
    8. ' from' → logprob: -12.828950881958008
    9. '```' → logprob: -13.078950881958008
    10. 'num' → logprob: -13.328950881958008

Token 303: '/d' (ID: 6662)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.37555745244026184
    2. ' /' → logprob: -1.8755574226379395
    3. ',' → logprob: -2.2505574226379395
    4. 'umerator' → logprob: -3.1255574226379395
    5. 'um' → logprob: -5.7505574226379395
    6. 'umer' → logprob: -6.1255574226379395
    7. 'def' → logprob: -6.1255574226379395
    8. '/div' → logprob: -7.3755574226379395
    9. 's' → logprob: -8.250557899475098
    10. '   ' → logprob: -8.375557899475098

Token 304: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.29340603761375e-05
    2. '
' → logprob: -9.500092506408691
    3. ' def' → logprob: -11.000092506408691
    4. ':def' → logprob: -15.375092506408691
    5. '  
' → logprob: -15.500092506408691
    6. '

' → logprob: -15.500092506408691
    7. '```' → logprob: -15.500092506408691
    8. '\' → logprob: -15.750092506408691
    9. 'ndef' → logprob: -16.500093460083008
    10. ':' → logprob: -16.625093460083008

Token 305: ' sa' (ID: 880)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8605666756629944
    2. '(n' → logprob: -1.4855666160583496
    3. 'g' → logprob: -1.9855666160583496
    4. ' n' → logprob: -2.4855666160583496
    5. 'def' → logprob: -3.2355666160583496
    6. '   ' → logprob: -3.9855666160583496
    7. ' (' → logprob: -4.11056661605835
    8. '(' → logprob: -4.48556661605835
    9. 'div' → logprob: -4.48556661605835
    10. 'return' → logprob: -5.36056661605835

Token 306: ' forme' (ID: 27450)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8165585994720459
    2. ' plus' → logprob: -1.191558599472046
    3. ' forme' → logprob: -1.566558599472046
    4. 'forme' → logprob: -3.816558599472046
    5. 'form' → logprob: -4.816558837890625
    6. 'simpl' → logprob: -5.066558837890625
    7. 'fraction' → logprob: -6.441558837890625
    8. 'g' → logprob: -6.441558837890625
    9. 'pg' → logprob: -6.566558837890625
    10. 'Plus' → logprob: -6.941558837890625

Token 307: ' irré' (ID: 172316)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00864908006042242
    2. ' (' → logprob: -5.758648872375488
    3. 'def' → logprob: -6.008648872375488
    4. 'n' → logprob: -7.008648872375488
    5. '(num' → logprob: -7.008648872375488
    6. '(' → logprob: -7.508648872375488
    7. ' n' → logprob: -8.258648872375488
    8. ' numerator' → logprob: -9.633648872375488
    9. '   ' → logprob: -10.008648872375488
    10. ' def' → logprob: -10.133648872375488

Token 308: 'duct' (ID: 1132)
  Prédit: 'duct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duct' → logprob: -0.005491533782333136
    2. 'duc' → logprob: -5.255491733551025
    3. 'd' → logprob: -9.380491256713867
    4. '#' → logprob: -10.255491256713867
    5. 'v' → logprob: -10.505491256713867
    6. 'f' → logprob: -10.630491256713867
    7. 'versible' → logprob: -10.880491256713867
    8. 'du' → logprob: -11.005491256713867
    9. '>' → logprob: -11.005491256713867
    10. 'r' → logprob: -12.130491256713867

Token 309: 'ible' (ID: 1430)
  Prédit: 'duct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duct' → logprob: -0.12059130519628525
    2. 'ible' → logprob: -2.870591402053833
    3. 'uct' → logprob: -2.995591402053833
    4. 'd' → logprob: -5.495591163635254
    5. 'duc' → logprob: -6.870591163635254
    6. 'u' → logprob: -6.995591163635254
    7. 'sible' → logprob: -8.745591163635254
    8. 'versible' → logprob: -8.995591163635254
    9. '```' → logprob: -9.370591163635254
    10. '#' → logprob: -9.495591163635254

Token 310: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.225939872208983e-05
    2. '
' → logprob: -10.375032424926758
    3. ' def' → logprob: -14.500032424926758
    4. '  
' → logprob: -15.500032424926758
    5. '\' → logprob: -15.750032424926758
    6. '```' → logprob: -16.375032424926758
    7. ' 
' → logprob: -16.750032424926758
    8. 'ndef' → logprob: -17.250032424926758
    9. '

' → logprob: -17.875032424926758
    10. ':def' → logprob: -18.125032424926758

Token 311: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.25
    3. '
' → logprob: -18.5
    4. '```' → logprob: -20.625
    5. 'de' → logprob: -22.625
    6. '  
' → logprob: -22.625
    7. 'd' → logprob: -22.625
    8. ':def' → logprob: -22.75
    9. 'ndef' → logprob: -22.875
    10. '	def' → logprob: -23.0

Token 312: ' simplify' (ID: 66240)
  Prédit: 'simpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simpl' → logprob: -0.01434060838073492
    2. ' simplify' → logprob: -4.264340400695801
    3. 'reduce' → logprob: -8.7643404006958
    4. ' simpl' → logprob: -12.1393404006958
    5. 's' → logprob: -12.3893404006958
    6. ' reduce' → logprob: -12.7643404006958
    7. 'g' → logprob: -13.0143404006958
    8. 'fraction' → logprob: -13.3893404006958
    9. 'def' → logprob: -13.5143404006958
    10. 'simp' → logprob: -14.0143404006958

Token 313: '_fraction' (ID: 151287)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.047557342797517776
    2. ' (' → logprob: -3.4225573539733887
    3. '(' → logprob: -4.297557353973389
    4. '_fraction' → logprob: -8.54755687713623
    5. '_frac' → logprob: -12.29755687713623
    6. '_n' → logprob: -12.79755687713623
    7. ' ' → logprob: -12.92255687713623
    8. '_' → logprob: -12.92255687713623
    9. '(
' → logprob: -13.92255687713623
    10. '_(' → logprob: -14.04755687713623

Token 314: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00030674142180942
    2. '(' → logprob: -8.250307083129883
    3. ' (' → logprob: -10.000307083129883
    4. '(
' → logprob: -16.500307083129883
    5. 'n' → logprob: -17.500307083129883
    6. '(num' → logprob: -18.000307083129883
    7. '(N' → logprob: -18.500307083129883
    8. 'def' → logprob: -19.125307083129883
    9. '(noun' → logprob: -20.125307083129883
    10. '(nb' → logprob: -20.250307083129883

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003944113850593567
    2. ' ,' → logprob: -5.628943920135498
    3. ',d' → logprob: -8.128944396972656
    4. ',n' → logprob: -10.628944396972656
    5. ',
' → logprob: -10.753944396972656
    6. '‌,' → logprob: -14.128944396972656
    7. ' ' → logprob: -14.753944396972656
    8. 'd' → logprob: -14.878944396972656
    9. '<|end|>' → logprob: -15.003944396972656
    10. ',

' → logprob: -15.378944396972656

Token 316: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0485873706638813
    2. ' d' → logprob: -3.0485873222351074
    3. ' ' → logprob: -18.048587799072266
    4. 'def' → logprob: -19.173587799072266
    5. 'n' → logprob: -19.673587799072266
    6. 'D' → logprob: -19.798587799072266
    7. '   ' → logprob: -19.923587799072266
    8. 's' → logprob: -20.798587799072266
    9. ')d' → logprob: -20.923587799072266
    10. 'c' → logprob: -21.048587799072266

Token 317: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029777219519019127
    2. '):
' → logprob: -3.5297772884368896
    3. '):
' → logprob: -11.279777526855469
    4. ')' → logprob: -12.154777526855469
    5. ' ):' → logprob: -12.279777526855469
    6. ':' → logprob: -12.654777526855469
    7. '):

' → logprob: -14.654777526855469
    8. '   ' → logprob: -15.529777526855469
    9. ' ):
' → logprob: -16.02977752685547
    10. ',' → logprob: -16.02977752685547

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008821379393339157
    2. 'g' → logprob: -5.133821487426758
    3. ' gcd' → logprob: -6.258821487426758
    4. ' g' → logprob: -7.008821487426758
    5. '    ' → logprob: -10.758821487426758
    6. ' if' → logprob: -11.258821487426758
    7. '	g' → logprob: -11.633821487426758
    8. '   ' → logprob: -11.758821487426758
    9. '    
' → logprob: -12.633821487426758
    10. '
' → logprob: -12.883821487426758

Token 319: ' if' (ID: 538)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.29033124446868896
    2. 'g' → logprob: -1.540331244468689
    3. '   ' → logprob: -3.2903313636779785
    4. ' gcd' → logprob: -8.04033088684082
    5. ' ' → logprob: -10.54033088684082
    6. ' div' → logprob: -11.16533088684082
    7. ' divisor' → logprob: -11.29033088684082
    8. '_g' → logprob: -11.29033088684082
    9. ' common' → logprob: -11.79033088684082
    10. '
' → logprob: -11.91533088684082

Token 320: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6934437155723572
    2. ' d' → logprob: -0.6934437155723572
    3. 'n' → logprob: -8.568443298339844
    4. ' n' → logprob: -9.193443298339844
    5. '	d' → logprob: -12.568443298339844
    6. '_d' → logprob: -14.693443298339844
    7. ' ' → logprob: -15.318443298339844
    8. '   ' → logprob: -15.443443298339844
    9. ' not' → logprob: -15.943443298339844
    10. '
' → logprob: -16.193443298339844

Token 321: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31494027376174927
    2. '==' → logprob: -1.3149402141571045
    3. ',' → logprob: -7.064940452575684
    4. '=' → logprob: -7.564940452575684
    5. ' ' → logprob: -9.189940452575684
    6. ' ,' → logprob: -9.439940452575684
    7. ' !=' → logprob: -10.314940452575684
    8. '0' → logprob: -10.939940452575684
    9. ')==' → logprob: -10.939940452575684
    10. '!=' → logprob: -11.064940452575684

Token 322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.375179290771484
    4. '  ' → logprob: -19.375179290771484
    5. '۰' → logprob: -19.875179290771484
    6. '```' → logprob: -20.500179290771484
    7. 'd' → logprob: -21.875179290771484
    8. ' ' → logprob: -22.000179290771484
    9. '０' → logprob: -22.125179290771484
    10. '=' → logprob: -22.750179290771484

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.500015258789062
    4. '۰' → logprob: -19.125015258789062
    5. '  ' → logprob: -20.000015258789062
    6. 'd' → logprob: -20.500015258789062
    7. '０' → logprob: -20.625015258789062
    8. '```' → logprob: -21.375015258789062
    9. '٠' → logprob: -21.875015258789062
    10. 'o' → logprob: -21.875015258789062

Token 324: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32496318221092224
    2. ':' → logprob: -1.3249632120132446
    3. '   ' → logprob: -4.949963092803955
    4. ':return' → logprob: -5.824963092803955
    5. '       ' → logprob: -7.324963092803955
    6. ',' → logprob: -7.699963092803955
    7. ' ' → logprob: -8.574963569641113
    8. ' return' → logprob: -9.574963569641113
    9. ' :
' → logprob: -9.574963569641113
    10. 'return' → logprob: -10.324963569641113

Token 325: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.431011438369751
    2. ' return' → logprob: -1.431011438369751
    3. '0' → logprob: -2.681011438369751
    4. ' ' → logprob: -3.681011438369751
    5. 'return' → logprob: -4.431011199951172
    6. '       ' → logprob: -5.931011199951172
    7. ' (' → logprob: -6.681011199951172
    8. '1' → logprob: -6.931011199951172
    9. ' d' → logprob: -8.306011199951172
    10. '(' → logprob: -9.056011199951172

Token 326: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024488167837262154
    2. ' return' → logprob: -3.8994882106781006
    3. '       ' → logprob: -5.8994879722595215
    4. '   ' → logprob: -6.8994879722595215
    5. '0' → logprob: -9.27448844909668
    6. '1' → logprob: -9.64948844909668
    7. '	return' → logprob: -11.14948844909668
    8. ' ' → logprob: -11.64948844909668
    9. '
' → logprob: -12.39948844909668
    10. ':return' → logprob: -13.39948844909668

Token 327: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009136092266999185
    2. '(' → logprob: -7.000913619995117
    3. ' ' → logprob: -13.125913619995117
    4. ' (' → logprob: -15.875913619995117
    5. '"' → logprob: -16.625913619995117
    6. '   ' → logprob: -20.125913619995117
    7. ''' → logprob: -20.750913619995117
    8. '۰' → logprob: -21.250913619995117
    9. '`' → logprob: -21.625913619995117
    10. '[' → logprob: -21.875913619995117

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. '(' → logprob: -9.250096321105957
    3. ' ' → logprob: -17.87509536743164
    4. '"' → logprob: -19.12509536743164
    5. ' (' → logprob: -21.12509536743164
    6. '[' → logprob: -22.50009536743164
    7. '`' → logprob: -23.50009536743164
    8. '```' → logprob: -23.62509536743164
    9. '00' → logprob: -23.87509536743164
    10. ''' → logprob: -24.12509536743164

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000365259445970878
    2. ' ,' → logprob: -8.000365257263184
    3. ',
' → logprob: -11.000365257263184
    4. ',d' → logprob: -11.750365257263184
    5. '1' → logprob: -12.500365257263184
    6. '   ' → logprob: -14.250365257263184
    7. ',n' → logprob: -15.125365257263184
    8. '0' → logprob: -15.625365257263184
    9. ' ' → logprob: -16.1253662109375
    10. ',\
' → logprob: -16.3753662109375

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'd' → logprob: -21.125
    4. '   ' → logprob: -23.125
    5. '```' → logprob: -24.0
    6. '１' → logprob: -24.5
    7. '۱' → logprob: -24.5
    8. '  ' → logprob: -25.0
    9. '১' → logprob: -25.4375
    10. ' ' → logprob: -25.4375

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. 'd' → logprob: -19.125
    4. '```' → logprob: -23.25
    5. '১' → logprob: -23.375
    6. '۱' → logprob: -23.5
    7. '   ' → logprob: -24.25
    8. '１' → logprob: -24.3125
    9. 'l' → logprob: -24.625
    10. '१' → logprob: -24.6875

Token 332: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008499689400196075
    2. 'n' → logprob: -5.008499622344971
    3. 'd' → logprob: -7.383499622344971
    4. ',' → logprob: -8.008500099182129
    5. '    
' → logprob: -8.508500099182129
    6. '
' → logprob: -8.508500099182129
    7. 'g' → logprob: -9.258500099182129
    8. ' ' → logprob: -9.258500099182129
    9. '  ' → logprob: -9.258500099182129
    10. ' n' → logprob: -10.008500099182129

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08189184963703156
    2. 'g' → logprob: -2.5818917751312256
    3. ' gcd' → logprob: -5.956892013549805
    4. ' g' → logprob: -8.581892013549805
    5. 'n' → logprob: -9.706892013549805
    6. '    
' → logprob: -10.081892013549805
    7. ' ' → logprob: -10.456892013549805
    8. '  ' → logprob: -10.706892013549805
    9. 'm' → logprob: -11.081892013549805
    10. '
' → logprob: -11.331892013549805

Token 334: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.7387197017669678
    2. ' g' → logprob: -0.7387197017669678
    3. '   ' → logprob: -3.1137197017669678
    4. ' gcd' → logprob: -9.613719940185547
    5. ' div' → logprob: -11.238719940185547
    6. ' ' → logprob: -11.738719940185547
    7. '    
' → logprob: -12.238719940185547
    8. ' divisor' → logprob: -12.488719940185547
    9. 'factor' → logprob: -12.988719940185547
    10. 'else' → logprob: -13.113719940185547

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16293898224830627
    2. '=' → logprob: -1.9129389524459839
    3. '=g' → logprob: -5.912939071655273
    4. 'cd' → logprob: -13.287939071655273
    5. '=sys' → logprob: -13.787939071655273
    6. ' ' → logprob: -14.037939071655273
    7. '=int' → logprob: -14.162939071655273
    8. '=s' → logprob: -14.162939071655273
    9. '   ' → logprob: -14.537939071655273
    10. ',' → logprob: -14.662939071655273

Token 336: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.005234002135694027
    2. ' gcd' → logprob: -5.2552337646484375
    3. '	g' → logprob: -16.755233764648438
    4. '   ' → logprob: -16.880233764648438
    5. ' ' → logprob: -17.880233764648438
    6. '_g' → logprob: -18.255233764648438
    7. '(g' → logprob: -18.880233764648438
    8. '=g' → logprob: -18.880233764648438
    9. 'math' → logprob: -19.005233764648438
    10. 'abs' → logprob: -19.380233764648438

Token 337: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00018661346985027194
    2. '(d' → logprob: -8.625186920166016
    3. '(' → logprob: -12.375186920166016
    4. ' (' → logprob: -13.500186920166016
    5. 'n' → logprob: -14.375186920166016
    6. '(abs' → logprob: -14.375186920166016
    7. 'd' → logprob: -15.875186920166016
    8. '(g' → logprob: -18.375186920166016
    9. '(
' → logprob: -18.500186920166016
    10. 'def' → logprob: -18.625186920166016

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05709685757756233
    2. ',d' → logprob: -2.9320969581604004
    3. ' ,' → logprob: -6.6820969581604
    4. '(d' → logprob: -7.0570969581604
    5. 'd' → logprob: -9.432096481323242
    6. ' d' → logprob: -11.432096481323242
    7. ',n' → logprob: -13.307096481323242
    8. '(' → logprob: -13.807096481323242
    9. ',
' → logprob: -14.307096481323242
    10. '
' → logprob: -14.557096481323242

Token 339: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023246407508850098
    2. ' d' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.023246765136719
    4. '	d' → logprob: -16.89824676513672
    5. 'abs' → logprob: -17.39824676513672
    6. ' abs' → logprob: -17.64824676513672
    7. ' ' → logprob: -17.77324676513672
    8. '  ' → logprob: -18.64824676513672
    9. ')d' → logprob: -20.02324676513672
    10. '
' → logprob: -20.14824676513672

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693178653717041
    2. ')
' → logprob: -0.693178653717041
    3. '   ' → logprob: -10.693178176879883
    4. ')
' → logprob: -12.443178176879883
    5. 'd' → logprob: -13.318178176879883
    6. ')d' → logprob: -13.693178176879883
    7. ' )
' → logprob: -14.068178176879883
    8. ')

' → logprob: -15.068178176879883
    9. 'n' → logprob: -15.318178176879883
    10. ' )' → logprob: -15.818178176879883

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0549590177834034
    2. ' return' → logprob: -3.6799590587615967
    3. 'n' → logprob: -3.9299590587615967
    4. ' n' → logprob: -5.054958820343018
    5. 'return' → logprob: -6.429958820343018
    6. '	n' → logprob: -8.554959297180176
    7. ' ' → logprob: -8.679959297180176
    8. '  ' → logprob: -9.929959297180176
    9. '    
' → logprob: -9.929959297180176
    10. '	return' → logprob: -10.179959297180176

Token 342: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6535653471946716
    2. 'return' (adapté à ' return') → logprob: -0.9035653471946716
    3. 'n' → logprob: -2.6535654067993164
    4. ' n' → logprob: -5.653565406799316
    5. '   ' → logprob: -7.153565406799316
    6. ' ' → logprob: -13.653565406799316
    7. '	return' → logprob: -14.278565406799316
    8. '
' → logprob: -15.278565406799316
    9. '  ' → logprob: -15.528565406799316
    10. '	n' → logprob: -15.778565406799316

Token 343: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6821327209472656
    2. ' n' → logprob: -1.4321327209472656
    3. ' (' → logprob: -2.0571327209472656
    4. '(n' → logprob: -2.0571327209472656
    5. '(' → logprob: -11.057132720947266
    6. ' ' → logprob: -12.807132720947266
    7. '(int' → logprob: -13.057132720947266
    8. '	n' → logprob: -13.682132720947266
    9. ' ' → logprob: -14.682132720947266
    10. '   ' → logprob: -14.932132720947266

Token 344: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.47408169507980347
    2. ' //' → logprob: -0.9740816950798035
    3. ' ' → logprob: -13.474081993103027
    4. '#' → logprob: -14.599081993103027
    5. ' ' → logprob: -14.599081993103027
    6. '`' → logprob: -14.849081993103027
    7. 'g' → logprob: -14.974081993103027
    8. '"' → logprob: -15.224081993103027
    9. '```' → logprob: -15.349081993103027
    10. ',' → logprob: -15.474081993103027

Token 345: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.128163257315464e-07
    2. ' g' → logprob: -15.25
    3. 'd' → logprob: -18.5
    4. '	g' → logprob: -22.875
    5. '
' → logprob: -23.125
    6. '_g' → logprob: -23.125
    7. '```' → logprob: -23.125
    8. '=g' → logprob: -23.5
    9. ' ' → logprob: -23.5
    10. '#g' → logprob: -23.875

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006307095172815025
    2. ',d' → logprob: -8.000630378723145
    3. ' ,' → logprob: -8.250630378723145
    4. ',
' → logprob: -10.500630378723145
    5. 'd' → logprob: -12.000630378723145
    6. ' d' → logprob: -15.375630378723145
    7. ',

' → logprob: -16.75063133239746
    8. ',g' → logprob: -16.87563133239746
    9. ',\
' → logprob: -17.00063133239746
    10. ' ,
' → logprob: -17.37563133239746

Token 347: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004078401252627373
    2. ' d' → logprob: -5.504078388214111
    3. ' ' → logprob: -19.129077911376953
    4. '	d' → logprob: -20.129077911376953
    5. '(d' → logprob: -20.129077911376953
    6. '   ' → logprob: -20.379077911376953
    7. '  ' → logprob: -20.629077911376953
    8. '
' → logprob: -22.629077911376953
    9. ' ' → logprob: -23.504077911376953
    10. '    ' → logprob: -24.004077911376953

Token 348: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.023407360538840294
    2. ' //' → logprob: -3.773407459259033
    3. 'g' → logprob: -8.773406982421875
    4. ' g' → logprob: -11.898406982421875
    5. '```' → logprob: -15.773406982421875
    6. ' ' → logprob: -16.148406982421875
    7. '#' → logprob: -16.648406982421875
    8. '//=' → logprob: -16.773406982421875
    9. '1' → logprob: -18.523406982421875
    10. '`' → logprob: -18.648406982421875

Token 349: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.0126840758603066e-05
    2. ' g' → logprob: -10.125040054321289
    3. 'd' → logprob: -18.87504005432129
    4. '	g' → logprob: -19.75004005432129
    5. '_g' → logprob: -20.62504005432129
    6. '=g' → logprob: -20.87504005432129
    7. '(g' → logprob: -20.87504005432129
    8. 's' → logprob: -21.25004005432129
    9. '[g' → logprob: -22.25004005432129
    10. '   ' → logprob: -23.00004005432129

Token 350: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25193890929222107
    2. 'def' → logprob: -1.5019389390945435
    3. 'import' → logprob: -11.876938819885254
    4. '```' → logprob: -14.001938819885254
    5. '
' → logprob: -14.501938819885254
    6. 'from' → logprob: -15.001938819885254
    7. '\' → logprob: -15.251938819885254
    8. ' def' → logprob: -15.501938819885254
    9. '<|end|>' → logprob: -15.626938819885254
    10. ' #' → logprob: -16.00193977355957

Token 352: ' Convert' (ID: 15629)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015109316445887089
    2. '#' → logprob: -6.501511096954346
    3. 'import' → logprob: -12.126510620117188
    4. 'from' → logprob: -12.876510620117188
    5. ' def' → logprob: -14.501510620117188
    6. 'class' → logprob: -18.251510620117188
    7. '```' → logprob: -18.626510620117188
    8. '...' → logprob: -19.376510620117188
    9. 'for' → logprob: -19.876510620117188
    10. ' #' → logprob: -19.876510620117188

Token 353: 'it' (ID: 278)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.20289640128612518
    2. 'it' → logprob: -2.3278963565826416
    3. 'def' → logprob: -3.0778963565826416
    4. 'is' → logprob: -3.7028963565826416
    5. 'isseur' → logprob: -4.702896595001221
    6. 'i' → logprob: -5.702896595001221
    7. 'issez' → logprob: -6.827896595001221
    8. 'ie' → logprob: -7.577896595001221
    9. ' def' → logprob: -8.077896118164062
    10. 't' → logprob: -8.327896118164062

Token 354: ' un' (ID: 537)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2747296690940857
    2. 'a' → logprob: -2.8997297286987305
    3. 'n' → logprob: -3.0247297286987305
    4. 'une' → logprob: -3.2747297286987305
    5. 'fraction' → logprob: -3.8997297286987305
    6. 'time' → logprob: -4.0247297286987305
    7. 's' → logprob: -4.0247297286987305
    8. 'seconds' → logprob: -4.6497297286987305
    9. '(n' → logprob: -5.1497297286987305
    10. 'angle' → logprob: -5.5247297286987305

Token 355: ' temps' (ID: 11160)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.0191237926483154
    2. 'float' → logprob: -1.2691237926483154
    3. 'fraction' → logprob: -1.5191237926483154
    4. 'nombre' → logprob: -3.3941237926483154
    5. ' float' → logprob: -4.0191240310668945
    6. 'tuple' → logprob: -4.3941240310668945
    7. 't' → logprob: -4.5191240310668945
    8. 'int' → logprob: -4.6441240310668945
    9. 'string' → logprob: -4.8941240310668945
    10. 'time' → logprob: -5.1441240310668945

Token 356: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8535548448562622
    2. '(n' → logprob: -1.8535548448562622
    3. '(t' → logprob: -1.9785548448562622
    4. ' (' → logprob: -2.2285547256469727
    5. '(' → logprob: -2.7285547256469727
    6. ' en' → logprob: -3.2285547256469727
    7. 't' → logprob: -4.353554725646973
    8. '_en' → logprob: -4.353554725646973
    9. '(seconds' → logprob: -5.103554725646973
    10. 'fraction' → logprob: -5.103554725646973

Token 357: ' fraction' (ID: 33763)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.7500545978546143
    2. 'fraction' → logprob: -1.2500545978546143
    3. 'second' → logprob: -2.7500545978546143
    4. 'fra' → logprob: -3.1250545978546143
    5. 'heure' → logprob: -3.8750545978546143
    6. '#' → logprob: -4.250054359436035
    7. '(' → logprob: -4.375054359436035
    8. '(h' → logprob: -4.875054359436035
    9. '(t' → logprob: -5.000054359436035
    10. ' heures' → logprob: -5.000054359436035

Token 358: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013333676906768233
    2. '(n' → logprob: -9.000133514404297
    3. '(' → logprob: -12.125133514404297
    4. ' def' → logprob: -13.125133514404297
    5. '(
' → logprob: -13.750133514404297
    6. '(t' → logprob: -14.750133514404297
    7. 'from' → logprob: -14.875133514404297
    8. '#' → logprob: -15.750133514404297
    9. '(def' → logprob: -15.750133514404297
    10. '
' → logprob: -15.875133514404297

Token 359: ' secondes' (ID: 109098)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.2373569011688232
    2. 'heure' → logprob: -1.4873569011688232
    3. 'second' → logprob: -1.4873569011688232
    4. 't' → logprob: -2.4873569011688232
    5. 'H' → logprob: -2.6123569011688232
    6. '#' → logprob: -4.112357139587402
    7. 'he' → logprob: -4.237357139587402
    8. 'une' → logprob: -4.362357139587402
    9. 'seconds' → logprob: -4.362357139587402
    10. 'jour' → logprob: -4.612357139587402

Token 360: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.4121114822482923e-06
    2. '
' → logprob: -13.375003814697266
    3. ' def' → logprob: -13.625003814697266
    4. '(
' → logprob: -14.625003814697266
    5. '(' → logprob: -15.875003814697266
    6. '(def' → logprob: -17.250003814697266
    7. '```' → logprob: -17.375003814697266
    8. 'de' → logprob: -17.375003814697266
    9. '\' → logprob: -18.125003814697266
    10. ':def' → logprob: -18.750003814697266

Token 361: '/d' (ID: 6662)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040260376408696175
    2. 'umerator' → logprob: -6.254025936126709
    3. ' ,' → logprob: -7.004025936126709
    4. 'umer' → logprob: -7.254025936126709
    5. 'um' → logprob: -8.879026412963867
    6. '/' → logprob: -9.129026412963867
    7. ',d' → logprob: -9.254026412963867
    8. 'def' → logprob: -10.004026412963867
    9. ' /' → logprob: -10.754026412963867
    10. '/d' → logprob: -11.004026412963867

Token 362: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.051066520740278e-05
    2. '
' → logprob: -10.250060081481934
    3. ' def' → logprob: -11.375060081481934
    4. '(n' → logprob: -12.250060081481934
    5. '(' → logprob: -12.500060081481934
    6. '(
' → logprob: -13.000060081481934
    7. '(def' → logprob: -13.625060081481934
    8. '\' → logprob: -14.500060081481934
    9. 'd' → logprob: -15.125060081481934
    10. '(t' → logprob: -15.625060081481934

Token 363: ' h' (ID: 312)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.6435185670852661
    2. 'string' → logprob: -1.8935185670852661
    3. 'chaine' → logprob: -2.2685184478759766
    4. 't' → logprob: -2.6435184478759766
    5. 'minutes' → logprob: -2.8935184478759766
    6. 'float' → logprob: -2.8935184478759766
    7. 'str' → logprob: -3.1435184478759766
    8. 'angle' → logprob: -3.2685184478759766
    9. 'n' → logprob: -3.2685184478759766
    10. '(' → logprob: -3.3935184478759766

Token 364: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010222526267170906
    2. ',m' → logprob: -5.010222434997559
    3. '   ' → logprob: -6.635222434997559
    4. ' ,' → logprob: -7.385222434997559
    5. ' ' → logprob: -8.510222434997559
    6. ',e' → logprob: -8.510222434997559
    7. ',i' → logprob: -8.635222434997559
    8. 'e' → logprob: -8.885222434997559
    9. ',n' → logprob: -9.260222434997559
    10. '  ' → logprob: -9.260222434997559

Token 365: ',n' (ID: 18103)
  Prédit: ',s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.3882253170013428
    2. 's' → logprob: -1.1382253170013428
    3. ',' → logprob: -6.638225555419922
    4. ' s' → logprob: -10.263225555419922
    5. ' ,' → logprob: -12.138225555419922
    6. '_,' → logprob: -14.013225555419922
    7. '	s' → logprob: -14.513225555419922
    8. '_s' → logprob: -14.638225555419922
    9. '`s' → logprob: -15.013225555419922
    10. '```' → logprob: -15.138225555419922

Token 366: ',d' (ID: 26159)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6362748146057129
    2. ',' → logprob: -1.386274814605713
    3. ',s' → logprob: -2.136274814605713
    4. ',d' → logprob: -2.886274814605713
    5. 'd' → logprob: -3.511274814605713
    6. ' s' → logprob: -5.011274814605713
    7. 'def' → logprob: -5.511274814605713
    8. '```' → logprob: -6.386274814605713
    9. 'umerator' → logprob: -7.136274814605713
    10. '
' → logprob: -7.136274814605713

Token 367: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01439242996275425
    2. '(n' → logprob: -4.389392375946045
    3. ' def' → logprob: -7.514392375946045
    4. '
' → logprob: -7.764392375946045
    5. '(h' → logprob: -8.139392852783203
    6. '(' → logprob: -8.389392852783203
    7. '(s' → logprob: -9.139392852783203
    8. ' (' → logprob: -9.764392852783203
    9. '(t' → logprob: -10.139392852783203
    10. '(def' → logprob: -10.139392852783203

Token 368: ' h' (ID: 312)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7283172607421875
    2. 'h' → logprob: -1.7283172607421875
    3. 'n' → logprob: -1.7283172607421875
    4. 'H' → logprob: -1.8533172607421875
    5. 'le' → logprob: -2.9783172607421875
    6. 'he' → logprob: -3.1033172607421875
    7. 'def' → logprob: -3.8533172607421875
    8. 'simpl' → logprob: -3.8533172607421875
    9. 'd' → logprob: -3.9783172607421875
    10. ' n' → logprob: -4.2283172607421875

Token 369: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0362599641084671
    2. '=' → logprob: -3.536259889602661
    3. ',d' → logprob: -5.66126012802124
    4. ' ,' → logprob: -6.91126012802124
    5. ' =' → logprob: -7.16126012802124
    6. ',n' → logprob: -7.66126012802124
    7. ',m' → logprob: -8.411259651184082
    8. ',h' → logprob: -9.286259651184082
    9. '_,' → logprob: -9.911259651184082
    10. 'd' → logprob: -9.911259651184082

Token 370: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0826140642166138
    2. 's' → logprob: -1.0826140642166138
    3. ',s' → logprob: -1.3326140642166138
    4. '=' → logprob: -3.207613945007324
    5. ' s' → logprob: -4.832613945007324
    6. ' ,' → logprob: -5.082613945007324
    7. ' =' → logprob: -6.082613945007324
    8. '=s' → logprob: -7.457613945007324
    9. '_,' → logprob: -7.957613945007324
    10. ',\
' → logprob: -9.332613945007324

Token 371: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.051502078771591187
    2. 'n' → logprob: -3.176501989364624
    3. ' s' → logprob: -5.801502227783203
    4. '0' → logprob: -6.176502227783203
    5. 'r' → logprob: -7.676502227783203
    6. 'h' → logprob: -7.926502227783203
    7. 'd' → logprob: -7.926502227783203
    8. ' n' → logprob: -8.426502227783203
    9. 'seconds' → logprob: -8.676502227783203
    10. 'rest' → logprob: -8.801502227783203

Token 372: '/d' (ID: 6662)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1663854867219925
    2. 'd' → logprob: -3.1663854122161865
    3. ',d' → logprob: -3.2913854122161865
    4. '/d' → logprob: -3.4163854122161865
    5. '=' → logprob: -4.041385650634766
    6. '/' → logprob: -4.916385650634766
    7. 'umerator' → logprob: -5.291385650634766
    8. 's' → logprob: -5.666385650634766
    9. ' =' → logprob: -6.791385650634766
    10. 'um' → logprob: -7.291385650634766

Token 373: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2805144488811493
    2. 'def' → logprob: -1.5305144786834717
    3. '(' → logprob: -4.280514240264893
    4. ' (' → logprob: -5.030514240264893
    5. '(h' → logprob: -6.280514240264893
    6. ',' → logprob: -6.280514240264893
    7. '(t' → logprob: -6.655514240264893
    8. ' def' → logprob: -6.905514240264893
    9. ':' → logprob: -7.155514240264893
    10. '(
' → logprob: -8.28051471710205

Token 374: ' fraction' (ID: 33763)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.6796457171440125
    2. ' fraction' → logprob: -0.8046457171440125
    3. ' partie' → logprob: -4.054645538330078
    4. ' position' → logprob: -5.304645538330078
    5. 'num' → logprob: -5.554645538330078
    6. 'part' → logprob: -5.679645538330078
    7. '_fraction' → logprob: -6.179645538330078
    8. ' fractions' → logprob: -6.429645538330078
    9. 'position' → logprob: -6.554645538330078
    10. ' forme' → logprob: -6.554645538330078

Token 375: ' simpl' (ID: 15693)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34108030796051025
    2. '(n' → logprob: -1.3410803079605103
    3. ' (' → logprob: -4.216080188751221
    4. '(' → logprob: -5.716080188751221
    5. ',' → logprob: -5.966080188751221
    6. '(s' → logprob: -6.466080188751221
    7. ' def' → logprob: -6.716080188751221
    8. '(t' → logprob: -6.841080188751221
    9. '(h' → logprob: -6.966080188751221
    10. ':' → logprob: -7.841080188751221

Token 376: 'ifiée' (ID: 88506)
  Prédit: 'ifiée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.026941638439893723
    2. 'ifi' → logprob: -3.7769415378570557
    3. 'ifié' → logprob: -6.901941776275635
    4. 'ifiées' → logprob: -6.901941776275635
    5. 'if' → logprob: -7.401941776275635
    6. 'i' → logprob: -7.651941776275635
    7. 'ifiés' → logprob: -7.901941776275635
    8. 'ified' → logprob: -9.151941299438477
    9. 'fi' → logprob: -9.776941299438477
    10. 'ifie' → logprob: -10.526941299438477

Token 377: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021072784438729286
    2. '(n' → logprob: -4.146072864532471
    3. '(' → logprob: -6.146072864532471
    4. '(t' → logprob: -6.771072864532471
    5. ' def' → logprob: -7.271072864532471
    6. '(def' → logprob: -8.021072387695312
    7. '(h' → logprob: -8.771072387695312
    8. ':' → logprob: -8.896072387695312
    9. '(s' → logprob: -9.021072387695312
    10. ',' → logprob: -9.146072387695312

Token 378: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.876193169271573e-05
    2. ' def' → logprob: -9.500088691711426
    3. '
' → logprob: -11.250088691711426
    4. ' 
' → logprob: -15.375088691711426
    5. '  
' → logprob: -15.375088691711426
    6. '\' → logprob: -16.000089645385742
    7. '```' → logprob: -16.125089645385742
    8. '(
' → logprob: -16.625089645385742
    9. '(' → logprob: -16.750089645385742
    10. '

' → logprob: -17.625089645385742

Token 379: ' frac' (ID: 72308)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4094655215740204
    2. 'convert' → logprob: -1.1594655513763428
    3. 'fraction' → logprob: -3.9094655513763428
    4. 'def' → logprob: -6.909465312957764
    5. 'to' → logprob: -8.034465789794922
    6. ' time' → logprob: -8.034465789794922
    7. ' convert' → logprob: -8.409465789794922
    8. 'seconds' → logprob: -8.659465789794922
    9. 'split' → logprob: -10.034465789794922
    10. 'from' → logprob: -10.034465789794922

Token 380: '_seconds' (ID: 83213)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7988770008087158
    2. '_time' → logprob: -1.5488770008087158
    3. 't' → logprob: -1.9238770008087158
    4. 'time' → logprob: -2.298877000808716
    5. 'tion' → logprob: -2.923877000808716
    6. '_times' → logprob: -4.298876762390137
    7. '_seconds' → logprob: -4.423876762390137
    8. '_' → logprob: -6.048876762390137
    9. '_convert' → logprob: -6.548876762390137
    10. 'to' → logprob: -6.673876762390137

Token 381: '_to' (ID: 5089)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009127851575613022
    2. '(t' → logprob: -4.884127616882324
    3. '(' → logprob: -7.259127616882324
    4. '(h' → logprob: -7.884127616882324
    5. '(s' → logprob: -8.134127616882324
    6. ' (' → logprob: -9.134127616882324
    7. '(time' → logprob: -10.634127616882324
    8. '(H' → logprob: -12.634127616882324
    9. '(
' → logprob: -12.884127616882324
    10. '(m' → logprob: -13.634127616882324

Token 382: '_h' (ID: 3434)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.05046619847416878
    2. 'hm' → logprob: -3.425466299057007
    3. '_h' → logprob: -5.050466060638428
    4. 'hours' → logprob: -5.425466060638428
    5. 'H' → logprob: -6.050466060638428
    6. 'time' → logprob: -6.300466060638428
    7. 'hour' → logprob: -7.425466060638428
    8. 'hh' → logprob: -7.800466060638428
    9. 'clock' → logprob: -8.175466537475586
    10. 'fraction' → logprob: -9.675466537475586

Token 383: '_m' (ID: 1285)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.5913824439048767
    2. '_m' → logprob: -1.0913825035095215
    3. 'm' → logprob: -2.2163825035095215
    4. ',m' → logprob: -7.2163825035095215
    5. ',' → logprob: -7.3413825035095215
    6. '_ms' → logprob: -8.841382026672363
    7. '(m' → logprob: -10.091382026672363
    8. 'md' → logprob: -11.091382026672363
    9. 'msc' → logprob: -11.091382026672363
    10. 'mm' → logprob: -11.216382026672363

Token 384: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.2177382707595825
    2. 'n' → logprob: -1.3427382707595825
    3. '(n' → logprob: -1.7177382707595825
    4. '_d' → logprob: -1.8427382707595825
    5. 'd' → logprob: -2.467738151550293
    6. '_m' → logprob: -5.342738151550293
    7. 's' → logprob: -5.592738151550293
    8. '_s' → logprob: -6.342738151550293
    9. '_(' → logprob: -6.592738151550293
    10. '_' → logprob: -6.717738151550293

Token 385: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.16223390400409698
    2. 'd' → logprob: -1.9122339487075806
    3. '(d' → logprob: -6.412233829498291
    4. '```' → logprob: -9.41223430633545
    5. '_m' → logprob: -10.16223430633545
    6. '(n' → logprob: -10.41223430633545
    7. '(' → logprob: -10.53723430633545
    8. 'umerator' → logprob: -10.66223430633545
    9. '(_' → logprob: -11.28723430633545
    10. '(m' → logprob: -11.28723430633545

Token 386: '(H' (ID: 20904)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008360736537724733
    2. '(' → logprob: -7.12583589553833
    3. ' (' → logprob: -11.125836372375488
    4. '(t' → logprob: -11.625836372375488
    5. '(s' → logprob: -12.000836372375488
    6. '(
' → logprob: -14.375836372375488
    7. '((' → logprob: -14.750836372375488
    8. '(N' → logprob: -15.375836372375488
    9. '(nt' → logprob: -16.375835418701172
    10. 'n' → logprob: -16.500835418701172

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. ' ,' → logprob: -11.750011444091797
    3. ',n' → logprob: -13.000011444091797
    4. ',
' → logprob: -14.125011444091797
    5. ',H' → logprob: -17.250011444091797
    6. '   ' → logprob: -17.375011444091797
    7. '‌,' → logprob: -17.500011444091797
    8. '):' → logprob: -17.500011444091797
    9. '):
' → logprob: -17.875011444091797
    10. ',

' → logprob: -17.875011444091797

Token 388: ' total' (ID: 3609)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005412808153778315
    2. ' n' → logprob: -5.880412578582764
    3. 't' → logprob: -6.755412578582764
    4. 'num' → logprob: -7.755412578582764
    5. 'frac' → logprob: -7.755412578582764
    6. 'numer' → logprob: -8.505413055419922
    7. '   ' → logprob: -9.255413055419922
    8. 'fraction' → logprob: -9.755413055419922
    9. 'h' → logprob: -10.005413055419922
    10. 'time' → logprob: -10.880413055419922

Token 389: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.46075764298439026
    2. '_n' → logprob: -1.2107576131820679
    3. ',' → logprob: -3.3357577323913574
    4. 's' → logprob: -4.085757732391357
    5. '_s' → logprob: -4.835757732391357
    6. 'n' → logprob: -5.335757732391357
    7. '_num' → logprob: -5.960757732391357
    8. ')' → logprob: -7.710757732391357
    9. ')_' → logprob: -7.960757732391357
    10. '_,' → logprob: -8.0857572555542

Token 390: '_num' (ID: 9834)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3221622705459595
    2. ',' → logprob: -1.5721622705459595
    3. '):
' → logprob: -2.69716215133667
    4. ',n' → logprob: -9.197162628173828
    5. ':' → logprob: -9.447162628173828
    6. '):
' → logprob: -9.822162628173828
    7. 'n' → logprob: -10.197162628173828
    8. '(n' → logprob: -10.322162628173828
    9. ')' → logprob: -10.322162628173828
    10. '):

' → logprob: -10.572162628173828

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002613358374219388
    2. ' ,' → logprob: -8.875261306762695
    3. ',
' → logprob: -9.250261306762695
    4. 'umerator' → logprob: -12.000261306762695
    5. ',

' → logprob: -12.750261306762695
    6. ',
' → logprob: -13.000261306762695
    7. '   ' → logprob: -13.375261306762695
    8. '_,' → logprob: -13.375261306762695
    9. ',n' → logprob: -13.625261306762695
    10. '=' → logprob: -13.875261306762695

Token 392: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0005530327325686812
    2. ' total' → logprob: -7.500553131103516
    3. '	total' → logprob: -17.625553131103516
    4. '   ' → logprob: -19.000553131103516
    5. ',total' → logprob: -19.125553131103516
    6. '(total' → logprob: -19.250553131103516
    7. '$total' → logprob: -20.250553131103516
    8. ' ' → logprob: -20.500553131103516
    9. '_total' → logprob: -20.500553131103516
    10. '
' → logprob: -21.250553131103516

Token 393: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.0001613459608051926
    2. '_den' → logprob: -9.000161170959473
    3. 'seconds' → logprob: -10.875161170959473
    4. '_sec' → logprob: -11.375161170959473
    5. 's' → logprob: -13.250161170959473
    6. '_secs' → logprob: -13.375161170959473
    7. '_s' → logprob: -14.375161170959473
    8. '_d' → logprob: -14.500161170959473
    9. 'den' → logprob: -14.625161170959473
    10. '_' → logprob: -14.750161170959473

Token 394: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.13459470868110657
    2. 'den' → logprob: -2.134594678878784
    3. '_d' → logprob: -4.884594917297363
    4. '_num' → logprob: -10.259594917297363
    5. 'd' → logprob: -11.009594917297363
    6. ' den' → logprob: -11.384594917297363
    7. '-den' → logprob: -12.634594917297363
    8. '_DEN' → logprob: -12.884594917297363
    9. 'Den' → logprob: -13.134594917297363
    10. '_dem' → logprob: -13.509594917297363

Token 395: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.523576557636261
    2. '):
' → logprob: -0.898576557636261
    3. '):
' → logprob: -7.898576736450195
    4. ')' → logprob: -10.148576736450195
    5. ':' → logprob: -11.023576736450195
    6. '):

' → logprob: -11.398576736450195
    7. ',' → logprob: -11.773576736450195
    8. '   ' → logprob: -12.523576736450195
    9. ' ):' → logprob: -14.148576736450195
    10. ' ):
' → logprob: -14.898576736450195

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009168252348899841
    2. ':' → logprob: -5.0091681480407715
    3. '(h' → logprob: -7.1341681480407715
    4. ':
' → logprob: -8.25916862487793
    5. '```' → logprob: -8.50916862487793
    6. '    
' → logprob: -8.63416862487793
    7. '
' → logprob: -8.88416862487793
    8. ',' → logprob: -9.13416862487793
    9. '   ' → logprob: -9.63416862487793
    10. '(' → logprob: -9.63416862487793

Token 397: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4455174207687378
    2. '#' (adapté à ' #') → logprob: -1.4455174207687378
    3. 'h' → logprob: -2.9455175399780273
    4. 'from' → logprob: -3.4455175399780273
    5. 'total' → logprob: -3.8205175399780273
    6. 'hours' → logprob: -4.570517539978027
    7. 't' → logprob: -6.445517539978027
    8. 'num' → logprob: -6.570517539978027
    9. '    
' → logprob: -7.195517539978027
    10. 'm' → logprob: -7.695517539978027

Token 398: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7544943690299988
    2. 'h' → logprob: -1.5044944286346436
    3. '#' → logprob: -1.8794944286346436
    4. 'hours' → logprob: -2.1294944286346436
    5. '   ' → logprob: -4.2544941902160645
    6. 'from' → logprob: -4.3794941902160645
    7. 'num' → logprob: -6.2544941902160645
    8. 'seconds' → logprob: -6.3794941902160645
    9. 'n' → logprob: -7.0044941902160645
    10. 'minutes' → logprob: -7.0044941902160645

Token 399: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -1.688212614681106e-05
    2. '_' → logprob: -11.750017166137695
    3. '_num' → logprob: -13.250017166137695
    4. '_s' → logprob: -13.250017166137695
    5. '_minutes' → logprob: -13.250017166137695
    6. '_total' → logprob: -13.750017166137695
    7. '_second' → logprob: -14.250017166137695
    8. ' _' → logprob: -15.125017166137695
    9. '\' → logprob: -15.125017166137695
    10. ')_' → logprob: -15.250017166137695

Token 400: ' =' (ID: 314)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00045700959162786603
    2. 'num' → logprob: -8.625456809997559
    3. '_n' → logprob: -8.750456809997559
    4. '_' → logprob: -10.000456809997559
    5. '=' → logprob: -10.375456809997559
    6. '   ' → logprob: -11.125456809997559
    7. 'Num' → logprob: -11.625456809997559
    8. ' =' → logprob: -12.250456809997559
    9. '_nom' → logprob: -12.750456809997559
    10. '#' → logprob: -12.875456809997559

Token 401: ' h' (ID: 312)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.12212840467691422
    2. '(total' → logprob: -2.372128486633301
    3. ' total' → logprob: -3.997128486633301
    4. ' (' → logprob: -5.872128486633301
    5. '((' → logprob: -8.7471284866333
    6. '   ' → logprob: -9.1221284866333
    7. 'div' → logprob: -9.3721284866333
    8. '(' → logprob: -9.7471284866333
    9. 'frac' → logprob: -10.8721284866333
    10. 'fraction' → logprob: -10.8721284866333

Token 402: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7545174360275269
    2. '   ' → logprob: -1.2545174360275269
    3. '*' → logprob: -2.2545175552368164
    4. '_num' → logprob: -2.8795175552368164
    5. ' ' → logprob: -4.004517555236816
    6. '//' → logprob: -4.129517555236816
    7. '#' → logprob: -4.504517555236816
    8. '=' → logprob: -5.004517555236816
    9. 'num' → logprob: -5.129517555236816
    10. ' =' → logprob: -5.379517555236816

Token 403: '360' (ID: 9870)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.7873594760894775
    2. '360' → logprob: -1.6623594760894775
    3. '(total' → logprob: -1.6623594760894775
    4. 'total' → logprob: -2.2873594760894775
    5. '(' → logprob: -3.6623594760894775
    6. ' (' → logprob: -4.037359237670898
    7. ' total' → logprob: -5.037359237670898
    8. 'H' → logprob: -5.287359237670898
    9. '60' → logprob: -5.537359237670898
    10. ' ' → logprob: -5.662359237670898

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.580929347255733e-05
    2. '000' → logprob: -11.875016212463379
    3. '   ' → logprob: -13.750016212463379
    4. '
' → logprob: -13.875016212463379
    5. '00' → logprob: -13.875016212463379
    6. ',' → logprob: -14.500016212463379
    7. '

' → logprob: -14.625016212463379
    8. 'o' → logprob: -14.625016212463379
    9. '
' → logprob: -14.750016212463379
    10. '```' → logprob: -14.875016212463379

Token 405: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5646665096282959
    2. '*' → logprob: -1.189666509628296
    3. '+' → logprob: -3.189666509628296
    4. ' *' → logprob: -3.564666509628296
    5. ' +' → logprob: -3.939666509628296
    6. '
' → logprob: -4.564666748046875
    7. '*num' → logprob: -4.814666748046875
    8. '   ' → logprob: -4.939666748046875
    9. ' ,' → logprob: -5.564666748046875
    10. 'num' → logprob: -5.939666748046875

Token 406: ' m' (ID: 284)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.44454067945480347
    2. 'm' → logprob: -1.4445407390594482
    3. '(m' → logprob: -2.5695407390594482
    4. ' (' → logprob: -3.6945407390594482
    5. '(' → logprob: -4.694540500640869
    6. '((' → logprob: -5.319540500640869
    7. '(t' → logprob: -5.944540500640869
    8. 'total' → logprob: -6.069540500640869
    9. ' m' → logprob: -6.944540500640869
    10. '(H' → logprob: -7.944540500640869

Token 407: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3090759515762329
    2. '_num' → logprob: -2.0590758323669434
    3. ',' → logprob: -3.3090758323669434
    4. '*num' → logprob: -3.5590758323669434
    5. ' *' → logprob: -3.9340758323669434
    6. 'num' → logprob: -4.059075832366943
    7. '   ' → logprob: -4.684075832366943
    8. ' ' → logprob: -4.934075832366943
    9. '_n' → logprob: -5.934075832366943
    10. '
' → logprob: -6.309075832366943

Token 408: '60' (ID: 1910)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6195110082626343
    2. 'n' → logprob: -1.1195110082626343
    3. '(total' → logprob: -2.494511127471924
    4. ' (' → logprob: -4.244511127471924
    5. '(' → logprob: -4.619511127471924
    6. '((' → logprob: -4.994511127471924
    7. 'total' → logprob: -5.244511127471924
    8. '(s' → logprob: -5.369511127471924
    9. ' n' → logprob: -6.119511127471924
    10. '(int' → logprob: -6.119511127471924

Token 409: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04292747750878334
    2. '
' → logprob: -3.5429275035858154
    3. '    
' → logprob: -5.167927265167236
    4. '  
' → logprob: -6.542927265167236
    5. ',' → logprob: -7.042927265167236
    6. ' ' → logprob: -7.292927265167236
    7. '\n' → logprob: -7.417927265167236
    8. ')' → logprob: -7.417927265167236
    9. '  ' → logprob: -7.792927265167236
    10. '   
' → logprob: -7.792927265167236

Token 410: ' s' (ID: 265)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.7366034984588623
    2. 'n' → logprob: -1.9866034984588623
    3. 'frac' → logprob: -2.2366034984588623
    4. '(n' → logprob: -2.3616034984588623
    5. 'total' → logprob: -2.3616034984588623
    6. '((' → logprob: -2.8616034984588623
    7. 'num' → logprob: -5.111603736877441
    8. 's' → logprob: -5.486603736877441
    9. '(t' → logprob: -5.736603736877441
    10. 'seconds' → logprob: -6.236603736877441

Token 411: '_num' (ID: 9834)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16179259121418
    2. '
' → logprob: -2.161792516708374
    3. '    
' → logprob: -4.286792755126953
    4. ',' → logprob: -4.911792755126953
    5. '=' → logprob: -6.161792755126953
    6. '  
' → logprob: -6.286792755126953
    7. '#' → logprob: -6.411792755126953
    8. 'num' → logprob: -6.536792755126953
    9. ' =' → logprob: -7.036792755126953
    10. '  ' → logprob: -7.661792755126953

Token 412: '/s' (ID: 5031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.645635724067688
    2. 'num' → logprob: -2.2706356048583984
    3. '_num' → logprob: -2.2706356048583984
    4. ' =' → logprob: -2.6456356048583984
    5. 'def' → logprob: -3.1456356048583984
    6. ',' → logprob: -3.1456356048583984
    7. '=' → logprob: -3.7706356048583984
    8. '#' → logprob: -3.7706356048583984
    9. '
' → logprob: -3.8956356048583984
    10. 's' → logprob: -4.520635604858398

Token 413: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.057198747992515564
    2. '_num' → logprob: -3.9321987628936768
    3. 'den' → logprob: -4.182198524475098
    4. 'total' → logprob: -4.557198524475098
    5. 'd' → logprob: -5.432198524475098
    6. '_total' → logprob: -6.057198524475098
    7. '   ' → logprob: -6.807198524475098
    8. 'num' → logprob: -7.682198524475098
    9. 's' → logprob: -7.682198524475098
    10. '_d' → logprob: -7.807198524475098

Token 414: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055147428065538406
    2. 'h' → logprob: -3.430147409439087
    3. '
' → logprob: -4.180147647857666
    4. '    
' → logprob: -6.805147647857666
    5. 'def' → logprob: -6.805147647857666
    6. ' h' → logprob: -6.805147647857666
    7. '```' → logprob: -6.930147647857666
    8. 'n' → logprob: -8.180147171020508
    9. 's' → logprob: -8.430147171020508
    10. '#' → logprob: -8.805147171020508

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018283503130078316
    2. 'h' → logprob: -4.268283367156982
    3. '
' → logprob: -6.143283367156982
    4. ' h' → logprob: -7.143283367156982
    5. '```' → logprob: -7.893283367156982
    6. 'def' → logprob: -8.26828384399414
    7. '    
' → logprob: -8.89328384399414
    8. 's' → logprob: -9.76828384399414
    9. '   ' → logprob: -9.76828384399414
    10. '#' → logprob: -9.76828384399414

Token 416: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03810747340321541
    2. '   ' → logprob: -3.538107395172119
    3. 's' → logprob: -5.663107395172119
    4. '#' (adapté à ' #') → logprob: -5.788107395172119
    5. ' h' → logprob: -8.038107872009277
    6. 'total' → logprob: -8.288107872009277
    7. 'def' → logprob: -8.288107872009277
    8. 'hours' → logprob: -8.413107872009277
    9. '
' → logprob: -8.788107872009277
    10. 'hour' → logprob: -9.413107872009277

Token 417: ' On' (ID: 2160)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.010441516526043415
    2. 'hours' → logprob: -5.510441303253174
    3. '#' → logprob: -5.635441303253174
    4. 'total' → logprob: -6.510441303253174
    5. '   ' → logprob: -7.385441303253174
    6. 'hour' → logprob: -8.510441780090332
    7. 's' → logprob: -9.010441780090332
    8. 'def' → logprob: -9.260441780090332
    9. 'seconds' → logprob: -10.010441780090332
    10. 'n' → logprob: -10.135441780090332

Token 418: ' travaille' (ID: 92596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485378503799438
    2. '#' → logprob: -1.5485378503799438
    3. 't' → logprob: -2.5485377311706543
    4. 'h' → logprob: -2.5485377311706543
    5. 's' → logprob: -4.548537731170654
    6. ' #' → logprob: -4.923537731170654
    7. 'def' → logprob: -5.548537731170654
    8. '
' → logprob: -5.673537731170654
    9. 'div' → logprob: -5.923537731170654
    10. '=' → logprob: -5.923537731170654

Token 419: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03375473618507385
    2. 'sur' → logprob: -4.533754825592041
    3. ' à' → logprob: -5.783754825592041
    4. ' ' → logprob: -5.908754825592041
    5. ' avec' → logprob: -6.033754825592041
    6. 'à' → logprob: -6.158754825592041
    7. ' with' → logprob: -6.408754825592041
    8. ' sur' → logprob: -6.408754825592041
    9. '```' → logprob: -6.408754825592041
    10. 'with' → logprob: -6.533754825592041

Token 420: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.318801611661911
    2. 'la' → logprob: -1.9438016414642334
    3. ' la' → logprob: -2.9438016414642334
    4. 'le' → logprob: -3.4438016414642334
    5. ' total' → logprob: -4.193801403045654
    6. 'l' → logprob: -4.818801403045654
    7. ' ' → logprob: -6.193801403045654
    8. 'une' → logprob: -6.193801403045654
    9. 't' → logprob: -6.193801403045654
    10. 'num' → logprob: -6.318801403045654

Token 421: ' fraction' (ID: 33763)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.008198344148695469
    2. 't' → logprob: -5.883198261260986
    3. '#' → logprob: -6.383198261260986
    4. 'h' → logprob: -7.133198261260986
    5. ' total' → logprob: -7.383198261260986
    6. 's' → logprob: -7.508198261260986
    7. 'seconds' → logprob: -7.883198261260986
    8. 'num' → logprob: -8.008198738098145
    9. '360' → logprob: -8.508198738098145
    10. 'remaining' → logprob: -8.633198738098145

Token 422: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23184378445148468
    2. 'num' → logprob: -2.8568437099456787
    3. ' ' → logprob: -3.3568437099456787
    4. 'total' → logprob: -3.6068437099456787
    5. ':' → logprob: -4.606843948364258
    6. 's' → logprob: -4.606843948364258
    7. ' num' → logprob: -4.731843948364258
    8. ' total' → logprob: -4.731843948364258
    9. ' s' → logprob: -4.731843948364258
    10. ' h' → logprob: -5.231843948364258

Token 423: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -11.875017166137695
    3. '_num' → logprob: -12.500017166137695
    4. '\' → logprob: -13.000017166137695
    5. 'seconds' → logprob: -14.000017166137695
    6. '```' → logprob: -14.125017166137695
    7. '_minutes' → logprob: -14.375017166137695
    8. '_s' → logprob: -14.500017166137695
    9. ')_' → logprob: -16.625017166137695
    10. '_SECONDS' → logprob: -16.750017166137695

Token 424: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.006457428447902203
    2. 'num' → logprob: -5.256457328796387
    3. '   ' → logprob: -7.631457328796387
    4. '_den' → logprob: -8.381457328796387
    5. 'def' → logprob: -9.006457328796387
    6. '_n' → logprob: -9.506457328796387
    7. '_' → logprob: -9.881457328796387
    8. '
' → logprob: -10.006457328796387
    9. ',' → logprob: -10.131457328796387
    10. 'den' → logprob: -10.256457328796387

Token 425: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003282048273831606
    2. ' ,' → logprob: -6.128282070159912
    3. '   ' → logprob: -7.878282070159912
    4. '<|end|>' → logprob: -8.503281593322754
    5. '<|end|>' → logprob: -8.753281593322754
    6. ',
' → logprob: -9.003281593322754
    7. ',total' → logprob: -10.503281593322754
    8. ' ' → logprob: -10.628281593322754
    9. ',d' → logprob: -10.753281593322754
    10. ')' → logprob: -11.003281593322754

Token 426: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -6.611323624383658e-05
    2. ' total' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.87506675720215
    4. ' ' → logprob: -17.50006675720215
    5. '	total' → logprob: -18.12506675720215
    6. '(total' → logprob: -18.62506675720215
    7. '  ' → logprob: -18.75006675720215
    8. ',total' → logprob: -19.50006675720215
    9. '_total' → logprob: -19.75006675720215
    10. '$total' → logprob: -20.75006675720215

Token 427: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.00023250321100931615
    2. 'seconds' → logprob: -8.375232696533203
    3. '_den' → logprob: -14.750232696533203
    4. '```' → logprob: -15.125232696533203
    5. '_' → logprob: -15.500232696533203
    6. 'Seconds' → logprob: -15.625232696533203
    7. '_second' → logprob: -15.750232696533203
    8. 's' → logprob: -15.750232696533203
    9. 'den' → logprob: -16.125232696533203
    10. '_SECONDS' → logprob: -16.250232696533203

Token 428: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.006334006320685148
    2. 'den' → logprob: -5.381333827972412
    3. ',' → logprob: -7.006333827972412
    4. '_num' → logprob: -7.881333827972412
    5. '   ' → logprob: -8.50633430480957
    6. 'def' → logprob: -9.88133430480957
    7. '_,' → logprob: -10.75633430480957
    8. 'num' → logprob: -10.75633430480957
    9. 'd' → logprob: -10.75633430480957
    10. '_' → logprob: -11.13133430480957

Token 429: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037233248353004456
    2. '
' → logprob: -3.662233352661133
    3. '    
' → logprob: -4.787233352661133
    4. 'def' → logprob: -7.412233352661133
    5. '  
' → logprob: -7.787233352661133
    6. ',' → logprob: -7.787233352661133
    7. '   
' → logprob: -8.912233352661133
    8. '```' → logprob: -9.162233352661133
    9. 'h' → logprob: -9.287233352661133
    10. ',
' → logprob: -9.537233352661133

Token 430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009193411096930504
    2. '
' → logprob: -5.134193420410156
    3. '    
' → logprob: -6.134193420410156
    4. 'def' → logprob: -8.259193420410156
    5. '  
' → logprob: -8.884193420410156
    6. '```' → logprob: -9.134193420410156
    7. ' h' → logprob: -9.259193420410156
    8. 'h' → logprob: -9.259193420410156
    9. '   
' → logprob: -10.384193420410156
    10. '   ' → logprob: -10.384193420410156

Token 431: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10783350467681885
    2. '   ' → logprob: -2.4828333854675293
    3. '#' (adapté à ' #') → logprob: -4.607833385467529
    4. 's' → logprob: -5.607833385467529
    5. 'from' → logprob: -6.232833385467529
    6. 'hours' → logprob: -6.982833385467529
    7. 'def' → logprob: -7.357833385467529
    8. 'total' → logprob: -7.857833385467529
    9. 'hour' → logprob: -8.107833862304688
    10. 'num' → logprob: -8.232833862304688

Token 432: ' Convert' (ID: 15629)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5024309754371643
    2. '#' → logprob: -2.1274309158325195
    3. '   ' → logprob: -2.1274309158325195
    4. 'total' → logprob: -2.3774309158325195
    5. 'from' → logprob: -3.8774309158325195
    6. 'hours' → logprob: -4.2524309158325195
    7. 'def' → logprob: -4.8774309158325195
    8. 's' → logprob: -5.0024309158325195
    9. 'seconds' → logprob: -5.3774309158325195
    10. 'num' → logprob: -5.6274309158325195

Token 433: 'ir' (ID: 380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17144988477230072
    2. 'ir' → logprob: -3.046449899673462
    3. 'it' → logprob: -3.296449899673462
    4. 'is' → logprob: -3.921449899673462
    5. 'total' → logprob: -4.171449661254883
    6. '#' → logprob: -4.546449661254883
    7. 'er' → logprob: -4.921449661254883
    8. 'i' → logprob: -5.296449661254883
    9. 'ie' → logprob: -5.421449661254883
    10. 't' → logprob: -6.171449661254883

Token 434: ' en' (ID: 469)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06310821324586868
    2. ' total' → logprob: -2.938108205795288
    3. ' la' → logprob: -5.813108444213867
    4. 'le' → logprob: -6.688108444213867
    5. '(total' → logprob: -6.813108444213867
    6. 'la' → logprob: -7.438108444213867
    7. ' en' → logprob: -7.938108444213867
    8. '   ' → logprob: -7.938108444213867
    9. ' le' → logprob: -8.063108444213867
    10. 't' → logprob: -8.688108444213867

Token 435: ' heures' (ID: 34311)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5865049958229065
    2. 'h' → logprob: -1.8365049362182617
    3. 'he' → logprob: -2.0865049362182617
    4. 'hours' → logprob: -2.7115049362182617
    5. '(h' → logprob: -4.086504936218262
    6. 'integer' → logprob: -4.336504936218262
    7. 'fraction' → logprob: -4.336504936218262
    8. '(total' → logprob: -4.586504936218262
    9. '#' → logprob: -4.586504936218262
    10. 'seconds' → logprob: -4.961504936218262

Token 436: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022558996453881264
    2. ',' → logprob: -5.64755916595459
    3. ' =' → logprob: -5.64755916595459
    4. '=' → logprob: -5.89755916595459
    5. 'total' → logprob: -5.89755916595459
    6. '(total' → logprob: -6.02255916595459
    7. '(h' → logprob: -6.14755916595459
    8. 'h' → logprob: -6.77255916595459
    9. 'num' → logprob: -7.39755916595459
    10. ':' → logprob: -7.77255916595459

Token 437: ' minutes' (ID: 5438)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.26615267992019653
    2. 'total' → logprob: -2.2661526203155518
    3. ' minutes' → logprob: -3.1411526203155518
    4. '   ' → logprob: -3.3911526203155518
    5. 'h' → logprob: -4.266152858734131
    6. ' total' → logprob: -4.391152858734131
    7. 'seconds' → logprob: -4.766152858734131
    8. ' h' → logprob: -5.641152858734131
    9. '#' → logprob: -5.766152858734131
    10. 'm' → logprob: -6.516152858734131

Token 438: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019946448504924774
    2. ',' → logprob: -4.144946575164795
    3. 'h' → logprob: -6.144946575164795
    4. ':' → logprob: -7.269946575164795
    5. 'num' → logprob: -8.394946098327637
    6. ' h' → logprob: -8.644946098327637
    7. '
' → logprob: -9.144946098327637
    8. '    
' → logprob: -9.269946098327637
    9. 'total' → logprob: -9.519946098327637
    10. '```' → logprob: -9.519946098327637

Token 439: ' et' (ID: 859)
  Prédit: 'seconds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seconds' → logprob: -0.03957695513963699
    2. 'second' → logprob: -3.914577007293701
    3. 'rest' → logprob: -5.539577007293701
    4. '#' → logprob: -5.914577007293701
    5. 'remaining' → logprob: -5.914577007293701
    6. ' secondes' → logprob: -5.914577007293701
    7. ' seconds' → logprob: -6.289577007293701
    8. 'total' → logprob: -6.289577007293701
    9. 's' → logprob: -6.539577007293701
    10. 'reste' → logprob: -7.414577007293701

Token 440: ' secondes' (ID: 109098)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.13939212262630463
    2. ' secondes' → logprob: -3.264392137527466
    3. 'seconds' → logprob: -3.389392137527466
    4. 'rest' → logprob: -4.139391899108887
    5. 'fraction' → logprob: -4.514391899108887
    6. 'reste' → logprob: -5.139391899108887
    7. '#' → logprob: -5.139391899108887
    8. 'se' → logprob: -5.264391899108887
    9. '```' → logprob: -5.514391899108887
    10. 're' → logprob: -5.514391899108887

Token 441: ' fraction' (ID: 33763)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01616223156452179
    2. '
' → logprob: -4.391162395477295
    3. ':' → logprob: -6.766162395477295
    4. '    
' → logprob: -7.016162395477295
    5. 'num' → logprob: -7.516162395477295
    6. 'h' → logprob: -9.016161918640137
    7. '```' → logprob: -9.016161918640137
    8. ',' → logprob: -9.391161918640137
    9. '#' → logprob: -9.391161918640137
    10. 'n' → logprob: -9.641161918640137

Token 442: 'naires' (ID: 65019)
  Prédit: 'naires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naires' → logprob: -0.27070966362953186
    2. 'naire' → logprob: -2.395709753036499
    3. 'num' → logprob: -2.520709753036499
    4. '_num' → logprob: -3.145709753036499
    5. 'n' → logprob: -5.02070951461792
    6. 'aires' → logprob: -5.14570951461792
    7. '_n' → logprob: -5.77070951461792
    8. '_' → logprob: -6.77070951461792
    9. '(n' → logprob: -6.77070951461792
    10. 'numer' → logprob: -6.89570951461792

Token 443: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005151335150003433
    2. '
' → logprob: -5.755151271820068
    3. '```' → logprob: -6.630151271820068
    4. '    
' → logprob: -8.005151748657227
    5. 'def' → logprob: -9.505151748657227
    6. 'h' → logprob: -9.505151748657227
    7. 'num' → logprob: -10.255151748657227
    8. ' h' → logprob: -10.880151748657227
    9. '``' → logprob: -10.880151748657227
    10. ':' → logprob: -10.880151748657227

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004160552751272917
    2. '
' → logprob: -6.504160404205322
    3. '    
' → logprob: -6.754160404205322
    4. 'h' → logprob: -7.504160404205322
    5. ' h' → logprob: -7.879160404205322
    6. '```' → logprob: -8.62916088104248
    7. 'def' → logprob: -9.37916088104248
    8. '#' → logprob: -10.00416088104248
    9. '   ' → logprob: -10.00416088104248
    10. '  
' → logprob: -10.37916088104248

Token 445: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.29377737641334534
    2. '   ' → logprob: -1.418777346611023
    3. '#' (adapté à ' #') → logprob: -5.1687774658203125
    4. 'hours' → logprob: -5.2937774658203125
    5. 'total' → logprob: -6.9187774658203125
    6. 'hour' → logprob: -8.293777465820312
    7. 'num' → logprob: -9.043777465820312
    8. ' h' → logprob: -9.168777465820312
    9. '    
' → logprob: -9.793777465820312
    10. 'seconds' → logprob: -10.168777465820312

Token 446: ' seconds' (ID: 12068)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.21604561805725098
    2. '   ' → logprob: -1.716045618057251
    3. '#' → logprob: -4.716045379638672
    4. 'hours' → logprob: -6.216045379638672
    5. 'total' → logprob: -6.341045379638672
    6. 'num' → logprob: -7.466045379638672
    7. 'hour' → logprob: -8.341045379638672
    8. 'def' → logprob: -8.466045379638672
    9. 's' → logprob: -8.716045379638672
    10. '    
' → logprob: -9.091045379638672

Token 447: ' fraction' (ID: 33763)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.008755081333220005
    2. ' =' → logprob: -5.383755207061768
    3. '_frac' → logprob: -6.508755207061768
    4. '_rem' → logprob: -7.383755207061768
    5. '_fraction' → logprob: -7.508755207061768
    6. '=' → logprob: -8.13375473022461
    7. '_n' → logprob: -8.50875473022461
    8. '   ' → logprob: -8.50875473022461
    9. 'num' → logprob: -8.88375473022461
    10. ',' → logprob: -9.25875473022461

Token 448: ' =' (ID: 314)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.016905957832932472
    2. ' =' → logprob: -4.766905784606934
    3. '=' → logprob: -5.641905784606934
    4. 'num' → logprob: -6.641905784606934
    5. '_' → logprob: -7.266905784606934
    6. 'naire' → logprob: -7.391905784606934
    7. '_n' → logprob: -7.766905784606934
    8. 'aire' → logprob: -8.266905784606934
    9. 's' → logprob: -8.641905784606934
    10. 'aires' → logprob: -8.891905784606934

Token 449: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.42356404662132263
    2. 'total' → logprob: -1.423564076423645
    3. '((' → logprob: -2.2985639572143555
    4. '(((' → logprob: -6.7985639572143555
    5. '(' → logprob: -6.9235639572143555
    6. ' (' → logprob: -7.1735639572143555
    7. ' total' → logprob: -8.048563957214355
    8. 'frac' → logprob: -8.173563957214355
    9. 'Fraction' → logprob: -8.548563957214355
    10. ' ((' → logprob: -9.423563957214355

Token 450: 'total' (ID: 9577)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.47640469670295715
    2. 'total' → logprob: -0.9764046669006348
    3. '((' → logprob: -6.476404666900635
    4. '(' → logprob: -7.851404666900635
    5. ' (' → logprob: -8.476405143737793
    6. ' total' → logprob: -9.101405143737793
    7. ')' → logprob: -10.976405143737793
    8. '(t' → logprob: -11.101405143737793
    9. 'frac' → logprob: -11.601405143737793
    10. '(((' → logprob: -11.976405143737793

Token 451: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -1.0921942703134846e-05
    2. 'seconds' → logprob: -11.62501049041748
    3. '_s' → logprob: -14.62501049041748
    4. '_num' → logprob: -14.62501049041748
    5. '_' → logprob: -14.87501049041748
    6. '```' → logprob: -15.62501049041748
    7. '\' → logprob: -16.000011444091797
    8. 's' → logprob: -16.250011444091797
    9. 'num' → logprob: -16.750011444091797
    10. 'Seconds' → logprob: -17.250011444091797

Token 452: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0001911432045744732
    2. 'num' → logprob: -8.625190734863281
    3. '_den' → logprob: -12.750190734863281
    4. '_' → logprob: -13.125190734863281
    5. 'Num' → logprob: -13.625190734863281
    6. 'den' → logprob: -13.625190734863281
    7. '
' → logprob: -14.500190734863281
    8. '	num' → logprob: -14.625190734863281
    9. '_n' → logprob: -15.000190734863281
    10. '   ' → logprob: -15.000190734863281

Token 453: '/' (ID: 14)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06850993633270264
    2. '*' → logprob: -3.068510055541992
    3. ' %' → logprob: -4.318510055541992
    4. '%' → logprob: -5.318510055541992
    5. ')' → logprob: -7.193510055541992
    6. ',' → logprob: -8.068510055541992
    7. ' ' → logprob: -8.818510055541992
    8. ' ,' → logprob: -10.068510055541992
    9. '*num' → logprob: -10.068510055541992
    10. ' -' → logprob: -10.193510055541992

Token 454: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0003357006062287837
    2. ' total' → logprob: -8.000335693359375
    3. '(total' → logprob: -16.125335693359375
    4. '	total' → logprob: -16.875335693359375
    5. ' ' → logprob: -17.500335693359375
    6. '_total' → logprob: -18.125335693359375
    7. '   ' → logprob: -18.250335693359375
    8. 'Total' → logprob: -18.375335693359375
    9. ',total' → logprob: -18.375335693359375
    10. '{' → logprob: -19.250335693359375

Token 455: '_seconds' (ID: 83213)
  Prédit: '_den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.02096877433359623
    2. '_seconds' → logprob: -4.270968914031982
    3. 'den' → logprob: -5.020968914031982
    4. '_sec' → logprob: -8.645968437194824
    5. '_' → logprob: -12.645968437194824
    6. '_second' → logprob: -13.020968437194824
    7. 'seconds' → logprob: -13.395968437194824
    8. '_num' → logprob: -14.895968437194824
    9. '```' → logprob: -15.895968437194824
    10. ' den' → logprob: -16.02096939086914

Token 456: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.02062445878982544
    2. 'den' → logprob: -3.8956243991851807
    3. '_num' → logprob: -9.895624160766602
    4. '_' → logprob: -10.895624160766602
    5. 'num' → logprob: -11.770624160766602
    6. '_del' → logprob: -14.020624160766602
    7. '_d' → logprob: -14.020624160766602
    8. ' den' → logprob: -14.520624160766602
    9. 'd' → logprob: -14.770624160766602
    10. 'def' → logprob: -14.895624160766602

Token 457: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.618533194065094
    2. ')' → logprob: -0.868533194065094
    3. '*' → logprob: -3.618533134460449
    4. ' )' → logprob: -4.493533134460449
    5. ' ' → logprob: -6.868533134460449
    6. ' %' → logprob: -7.243533134460449
    7. ' -' → logprob: -7.493533134460449
    8. ')*' → logprob: -7.868533134460449
    9. '   ' → logprob: -7.993533134460449
    10. '%' → logprob: -8.36853313446045

Token 458: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8366203904151917
    2. ' *' → logprob: -0.9616203904151917
    3. ' =' → logprob: -2.586620330810547
    4. '#' → logprob: -4.211620330810547
    5. '*' → logprob: -4.211620330810547
    6. ' %' → logprob: -4.461620330810547
    7. '
' → logprob: -4.711620330810547
    8. '=' → logprob: -4.836620330810547
    9. '%' → logprob: -4.961620330810547
    10. '_num' → logprob: -5.086620330810547

Token 459: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.6812829971313477
    2. '60' → logprob: -1.1812829971313477
    3. '(' → logprob: -1.6812829971313477
    4. ' (' → logprob: -7.306282997131348
    5. ' ' → logprob: -8.931282997131348
    6. '864' → logprob: -9.431282997131348
    7. '(int' → logprob: -10.806282997131348
    8. '36' → logprob: -10.931282997131348
    9. '216' → logprob: -11.181282997131348
    10. '(P' → logprob: -11.181282997131348

Token 460: '60' (ID: 1910)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.09570444375276566
    2. '60' → logprob: -2.9707045555114746
    3. '(' → logprob: -3.2207045555114746
    4. '864' → logprob: -10.970704078674316
    5. '216' → logprob: -11.095704078674316
    6. ' (' → logprob: -11.095704078674316
    7. '(M' → logprob: -12.470704078674316
    8. ' ' → logprob: -12.470704078674316
    9. '(P' → logprob: -12.720704078674316
    10. '(int' → logprob: -13.095704078674316

Token 461: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026002420112490654
    2. '
' → logprob: -3.9010024070739746
    3. '    
' → logprob: -5.276002407073975
    4. '  
' → logprob: -10.026002883911133
    5. '\n' → logprob: -10.151002883911133
    6. '   
' → logprob: -10.651002883911133
    7. ',' → logprob: -10.651002883911133
    8. ' 
' → logprob: -10.776002883911133
    9. '
' → logprob: -10.776002883911133
    10. 'def' → logprob: -10.776002883911133

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031875784043222666
    2. '
' → logprob: -6.003187656402588
    3. '    
' → logprob: -7.628187656402588
    4. '```' → logprob: -10.00318717956543
    5. 'def' → logprob: -10.50318717956543
    6. '   ' → logprob: -10.62818717956543
    7. '  
' → logprob: -10.75318717956543
    8. '\n' → logprob: -11.37818717956543
    9. ' 
' → logprob: -11.75318717956543
    10. '   
' → logprob: -11.75318717956543

Token 463: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04993266612291336
    2. 'seconds' → logprob: -3.1749327182769775
    3. '#' (adapté à ' #') → logprob: -6.424932479858398
    4. 'total' → logprob: -6.674932479858398
    5. ' seconds' → logprob: -6.924932479858398
    6. 's' → logprob: -7.174932479858398
    7. 'sec' → logprob: -7.799932479858398
    8. ' remainder' → logprob: -8.174932479858398
    9. 'rem' → logprob: -8.174932479858398
    10. 're' → logprob: -8.299932479858398

Token 464: ' minutes' (ID: 5438)
  Prédit: 'seconds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seconds' → logprob: -0.11975713819265366
    2. 'total' → logprob: -3.3697571754455566
    3. '#' → logprob: -3.8697571754455566
    4. 's' → logprob: -3.9947571754455566
    5. '   ' → logprob: -4.244757175445557
    6. 'sec' → logprob: -4.244757175445557
    7. 'def' → logprob: -5.994757175445557
    8. 'num' → logprob: -6.369757175445557
    9. 't' → logprob: -7.119757175445557
    10. 'h' → logprob: -7.244757175445557

Token 465: ' =' (ID: 314)
  Prédit: '_fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.5989311933517456
    2. '_num' → logprob: -1.0989311933517456
    3. '_frac' → logprob: -2.973931312561035
    4. ' =' → logprob: -3.348931312561035
    5. 'fraction' → logprob: -4.848931312561035
    6. '=' → logprob: -5.223931312561035
    7. ',' → logprob: -5.723931312561035
    8. '_' → logprob: -5.723931312561035
    9. 'num' → logprob: -6.348931312561035
    10. '_rem' → logprob: -6.348931312561035

Token 466: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.08556681871414185
    2. '((' → logprob: -2.710566759109497
    3. ' (' → logprob: -4.460566997528076
    4. '(int' → logprob: -6.085566997528076
    5. 'int' → logprob: -7.585566997528076
    6. '(' → logprob: -8.210566520690918
    7. '(t' → logprob: -8.210566520690918
    8. 'total' → logprob: -8.585566520690918
    9. '(((' → logprob: -8.585566520690918
    10. ' ((' → logprob: -8.585566520690918

Token 467: 'total' (ID: 9577)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0918840542435646
    2. 'total' → logprob: -2.841884136199951
    3. ' (' → logprob: -3.716884136199951
    4. '(' → logprob: -5.966884136199951
    5. ' total' → logprob: -6.716884136199951
    6. '((' → logprob: -7.466884136199951
    7. '(t' → logprob: -7.966884136199951
    8. '(H' → logprob: -8.966883659362793
    9. 'int' → logprob: -9.591883659362793
    10. '   ' → logprob: -9.966883659362793

Token 468: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -6.034592388459714e-06
    2. '_minutes' → logprob: -12.875005722045898
    3. '_total' → logprob: -13.750005722045898
    4. 'seconds' → logprob: -13.875005722045898
    5. '_second' → logprob: -15.375005722045898
    6. '_' → logprob: -15.375005722045898
    7. '_s' → logprob: -15.625005722045898
    8. '```' → logprob: -16.1250057220459
    9. '_num' → logprob: -16.2500057220459
    10. ' _' → logprob: -16.2500057220459

Token 469: ' //' (ID: 602)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0004354373668320477
    2. 'num' → logprob: -8.000435829162598
    3. ')' → logprob: -10.250435829162598
    4. '_den' → logprob: -11.000435829162598
    5. '_' → logprob: -11.375435829162598
    6. 'Num' → logprob: -11.500435829162598
    7. '%' → logprob: -12.625435829162598
    8. '_total' → logprob: -12.750435829162598
    9. '_n' → logprob: -12.875435829162598
    10. '   ' → logprob: -12.875435829162598

Token 470: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.015201582573354244
    2. ' ' → logprob: -4.515201568603516
    3. '(' → logprob: -6.140201568603516
    4. '360' → logprob: -6.390201568603516
    5. 'total' → logprob: -9.015201568603516
    6. '(total' → logprob: -9.140201568603516
    7. '   ' → logprob: -10.515201568603516
    8. ' (' → logprob: -10.890201568603516
    9. '600' → logprob: -11.890201568603516
    10. '  ' → logprob: -12.140201568603516

Token 471: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00565358716994524
    2. '(' → logprob: -5.630653381347656
    3. '360' → logprob: -6.630653381347656
    4. '(total' → logprob: -8.005653381347656
    5. ' ' → logprob: -8.380653381347656
    6. 'total' → logprob: -9.255653381347656
    7. '(T' → logprob: -11.005653381347656
    8. '600' → logprob: -11.380653381347656
    9. '   ' → logprob: -11.505653381347656
    10. ' (' → logprob: -12.255653381347656

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2192143052816391
    2. '_num' → logprob: -1.7192143201828003
    3. '   ' → logprob: -4.21921443939209
    4. ')
' → logprob: -7.59421443939209
    5. '_' → logprob: -7.96921443939209
    6. ',' → logprob: -8.09421443939209
    7. ')_' → logprob: -8.21921443939209
    8. ' )' → logprob: -8.59421443939209
    9. '_total' → logprob: -8.71921443939209
    10. 'num' → logprob: -8.84421443939209

Token 473: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25800731778144836
    2. '_num' → logprob: -1.883007287979126
    3. 'num' → logprob: -3.758007287979126
    4. '
' → logprob: -4.008007526397705
    5. ' =' → logprob: -4.508007526397705
    6. ',' → logprob: -5.758007526397705
    7. ' num' → logprob: -6.133007526397705
    8. '#' → logprob: -6.258007526397705
    9. ')' → logprob: -6.383007526397705
    10. '    
' → logprob: -6.633007526397705

Token 474: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.006782623939216137
    2. '360' → logprob: -5.006782531738281
    3. ' ' → logprob: -10.131782531738281
    4. '(' → logprob: -10.506782531738281
    5. '(H' → logprob: -16.38178253173828
    6. ' (' → logprob: -16.88178253173828
    7. '600' → logprob: -18.38178253173828
    8. '144' → logprob: -18.63178253173828
    9. '   ' → logprob: -19.25678253173828
    10. '(
' → logprob: -19.63178253173828

Token 475: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.3868904709815979
    2. '360' → logprob: -1.1368904113769531
    3. '(' → logprob: -11.011890411376953
    4. ' ' → logprob: -12.761890411376953
    5. '(H' → logprob: -16.511890411376953
    6. '36' → logprob: -17.636890411376953
    7. ' (' → logprob: -19.136890411376953
    8. '144' → logprob: -19.136890411376953
    9. '600' → logprob: -19.261890411376953
    10. '216' → logprob: -19.386890411376953

Token 476: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002648071153089404
    2. '
' → logprob: -6.377647876739502
    3. '```' → logprob: -7.502647876739502
    4. '    
' → logprob: -8.75264835357666
    5. ' minutes' → logprob: -10.62764835357666
    6. 'total' → logprob: -10.62764835357666
    7. '``' → logprob: -10.75264835357666
    8. '  
' → logprob: -10.87764835357666
    9. '\' → logprob: -11.12764835357666
    10. '       ' → logprob: -11.25264835357666

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015574338613077998
    2. '    
' → logprob: -9.750155448913574
    3. '
' → logprob: -10.500155448913574
    4. 'def' → logprob: -11.000155448913574
    5. 'total' → logprob: -11.625155448913574
    6. '```' → logprob: -11.750155448913574
    7. '       ' → logprob: -11.875155448913574
    8. '   ' → logprob: -12.625155448913574
    9. ' total' → logprob: -12.875155448913574
    10. 'num' → logprob: -12.875155448913574

Token 478: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00957203283905983
    2. 'total' → logprob: -5.7595720291137695
    3. ' total' → logprob: -5.8845720291137695
    4. 'quot' → logprob: -6.6345720291137695
    5. '
' → logprob: -7.5095720291137695
    6. ' seconds' → logprob: -7.8845720291137695
    7. ' quotient' → logprob: -8.25957202911377
    8. ' ' → logprob: -8.50957202911377
    9. 'seconds' → logprob: -8.63457202911377
    10. '#' (adapté à ' #') → logprob: -9.00957202911377

Token 479: ' hours' (ID: 5123)
  Prédit: 'hours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hours' → logprob: -0.09557043761014938
    2. 'total' → logprob: -2.4705703258514404
    3. 'h' → logprob: -6.0955705642700195
    4. 'he' → logprob: -6.9705705642700195
    5. '#' → logprob: -7.0955705642700195
    6. 'seconds' → logprob: -7.0955705642700195
    7. 'minutes' → logprob: -7.4705705642700195
    8. ' hours' → logprob: -8.09557056427002
    9. 'hour' → logprob: -8.47057056427002
    10. 'remaining' → logprob: -8.72057056427002

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39525601267814636
    2. '_num' → logprob: -1.3952560424804688
    3. '_' → logprob: -3.0202560424804688
    4. '=' → logprob: -4.645256042480469
    5. '_h' → logprob: -5.270256042480469
    6. '_hours' → logprob: -5.395256042480469
    7. ',' → logprob: -5.520256042480469
    8. '   ' → logprob: -6.145256042480469
    9. '_total' → logprob: -7.145256042480469
    10. '_floor' → logprob: -7.395256042480469

Token 481: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.4478808045387268
    2. ' (' → logprob: -1.197880744934082
    3. 'total' → logprob: -3.322880744934082
    4. ' total' → logprob: -3.947880744934082
    5. '(' → logprob: -5.697880744934082
    6. '(t' → logprob: -8.197880744934082
    7. '((' → logprob: -9.822880744934082
    8. ' ' → logprob: -10.072880744934082
    9. '   ' → logprob: -10.697880744934082
    10. '(
' → logprob: -11.322880744934082

Token 482: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0836324617266655
    2. ' total' → logprob: -3.208632469177246
    3. '(total' → logprob: -3.333632469177246
    4. ' (' → logprob: -5.583632469177246
    5. '(' → logprob: -8.333632469177246
    6. '   ' → logprob: -10.333632469177246
    7. ' ' → logprob: -10.708632469177246
    8. 't' → logprob: -10.833632469177246
    9. ')' → logprob: -10.958632469177246
    10. 'tot' → logprob: -11.583632469177246

Token 483: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -8.149051427608356e-05
    2. '_total' → logprob: -9.750081062316895
    3. '_hours' → logprob: -11.000081062316895
    4. 'seconds' → logprob: -12.375081062316895
    5. '_s' → logprob: -14.500081062316895
    6. '_num' → logprob: -14.750081062316895
    7. 'total' → logprob: -15.125081062316895
    8. ')_' → logprob: -15.375081062316895
    9. '_times' → logprob: -15.875081062316895
    10. ')' → logprob: -16.37508201599121

Token 484: ' //' (ID: 602)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.010759512893855572
    2. ' //' → logprob: -5.635759353637695
    3. '_' → logprob: -5.885759353637695
    4. '//' → logprob: -6.135759353637695
    5. ')' → logprob: -6.760759353637695
    6. 'num' → logprob: -7.760759353637695
    7. ' _' → logprob: -9.260759353637695
    8. '	' → logprob: -9.760759353637695
    9. '   ' → logprob: -9.760759353637695
    10. ' ' → logprob: -10.010759353637695

Token 485: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0068469117395579815
    2. '(' → logprob: -5.631846904754639
    3. '60' → logprob: -5.881846904754639
    4. ' ' → logprob: -7.881846904754639
    5. '(total' → logprob: -10.631847381591797
    6. ' (' → logprob: -11.256847381591797
    7. '1' → logprob: -11.381847381591797
    8. '(H' → logprob: -11.631847381591797
    9. 'total' → logprob: -12.256847381591797
    10. '   ' → logprob: -12.256847381591797

Token 486: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.01842828281223774
    2. '(' → logprob: -4.143428325653076
    3. '60' → logprob: -6.143428325653076
    4. '(total' → logprob: -8.518427848815918
    5. '216' → logprob: -11.643427848815918
    6. 'total' → logprob: -12.018427848815918
    7. '1' → logprob: -12.393427848815918
    8. ' (' → logprob: -12.393427848815918
    9. ' ' → logprob: -12.768427848815918
    10. '(H' → logprob: -12.893427848815918

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '_' → logprob: -17.250001907348633
    5. 'o' → logprob: -17.250001907348633
    6. '۰' → logprob: -17.500001907348633
    7. ',' → logprob: -18.000001907348633
    8. 'O' → logprob: -18.375001907348633
    9. '00' → logprob: -18.625001907348633
    10. '০' → logprob: -18.625001907348633

Token 488: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004209940321743488
    2. '_num' → logprob: -5.754209995269775
    3. '   ' → logprob: -8.254209518432617
    4. ')
' → logprob: -8.504209518432617
    5. '),' → logprob: -8.754209518432617
    6. ',' → logprob: -9.129209518432617
    7. ' )' → logprob: -9.504209518432617
    8. ')+' → logprob: -10.254209518432617
    9. '):' → logprob: -10.629209518432617
    10. '+' → logprob: -10.754209518432617

Token 489: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007109017577022314
    2. '
' → logprob: -5.38210916519165
    3. 'def' → logprob: -6.63210916519165
    4. '    
' → logprob: -8.257108688354492
    5. ':' → logprob: -9.007108688354492
    6. '  
' → logprob: -9.007108688354492
    7. 'total' → logprob: -9.382108688354492
    8. ' def' → logprob: -9.757108688354492
    9. ' =' → logprob: -9.757108688354492
    10. ' total' → logprob: -10.007108688354492

Token 490: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0005576779949478805
    2. '(H' → logprob: -7.625557899475098
    3. '(' → logprob: -9.875557899475098
    4. ' H' → logprob: -11.000557899475098
    5. ' (' → logprob: -13.875557899475098
    6. '24' → logprob: -15.000557899475098
    7. ' ' → logprob: -15.750557899475098
    8. '12' → logprob: -16.75055694580078
    9. '	H' → logprob: -17.12555694580078
    10. '{' → logprob: -17.87555694580078

Token 491: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008791008032858372
    2. '
' → logprob: -4.883790969848633
    3. '    
' → logprob: -7.383790969848633
    4. '```' → logprob: -8.633790969848633
    5. 'total' → logprob: -9.133790969848633
    6. ' 
' → logprob: -9.758790969848633
    7. '  
' → logprob: -9.883790969848633
    8. '   ' → logprob: -10.008790969848633
    9. 'def' → logprob: -10.133790969848633
    10. '``' → logprob: -11.633790969848633

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020319616422057152
    2. '
' → logprob: -4.14531946182251
    3. '    
' → logprob: -6.02031946182251
    4. ' 
' → logprob: -6.89531946182251
    5. 'def' → logprob: -8.770319938659668
    6. '  
' → logprob: -9.270319938659668
    7. ' total' → logprob: -9.395319938659668
    8. '   ' → logprob: -9.395319938659668
    9. '```' → logprob: -9.770319938659668
    10. 'total' → logprob: -9.770319938659668

Token 493: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010894310660660267
    2. 'total' → logprob: -5.260894298553467
    3. ' total' → logprob: -5.760894298553467
    4. 'quot' → logprob: -7.635894298553467
    5. ' seconds' → logprob: -8.260894775390625
    6. '#' (adapté à ' #') → logprob: -8.260894775390625
    7. '
' → logprob: -8.510894775390625
    8. '    
' → logprob: -8.510894775390625
    9. ' h' → logprob: -9.010894775390625
    10. 'seconds' → logprob: -9.135894775390625

Token 494: ' On' (ID: 2160)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8047642707824707
    2. 'quot' → logprob: -1.6797642707824707
    3. '#' → logprob: -2.0547642707824707
    4. '   ' → logprob: -2.1797642707824707
    5. 'hours' → logprob: -2.9297642707824707
    6. 'seconds' → logprob: -3.3047642707824707
    7. 'num' → logprob: -4.304764270782471
    8. 'from' → logprob: -5.304764270782471
    9. 'h' → logprob: -5.429764270782471
    10. 'q' → logprob: -6.054764270782471

Token 495: ' travaille' (ID: 92596)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1375670433044434
    2. 'num' → logprob: -1.5125670433044434
    3. ' num' → logprob: -2.3875670433044434
    4. ' #' → logprob: -2.6375670433044434
    5. 'import' → logprob: -3.2625670433044434
    6. '#' → logprob: -3.2625670433044434
    7. 'def' → logprob: -3.7625670433044434
    8. 'n' → logprob: -4.012567043304443
    9. ' continue' → logprob: -4.012567043304443
    10. ' =' → logprob: -4.137567043304443

Token 496: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13240765035152435
    2. '=' → logprob: -2.7574076652526855
    3. ' =' → logprob: -4.7574076652526855
    4. '       ' → logprob: -4.7574076652526855
    5. ' ' → logprob: -5.1324076652526855
    6. '    ' → logprob: -5.1324076652526855
    7. ' à' → logprob: -5.3824076652526855
    8. ' with' → logprob: -5.3824076652526855
    9. 'with' → logprob: -5.3824076652526855
    10. '  ' → logprob: -6.0074076652526855

Token 497: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5087525844573975
    2. '#' → logprob: -2.0087525844573975
    3. 'quot' → logprob: -2.6337525844573975
    4. 'h' → logprob: -3.0087525844573975
    5. 'div' → logprob: -3.1337525844573975
    6. 'num' → logprob: -3.5087525844573975
    7. 'q' → logprob: -3.6337525844573975
    8. 'hours' → logprob: -5.008752822875977
    9. 'temp' → logprob: -5.383752822875977
    10. 'numer' → logprob: -5.508752822875977

Token 498: ' division' (ID: 21629)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.45117947459220886
    2. 'div' → logprob: -1.3261795043945312
    3. 'total' → logprob: -2.7011795043945312
    4. '#' → logprob: -4.201179504394531
    5. '//' → logprob: -5.076179504394531
    6. 'import' → logprob: -6.576179504394531
    7. 'division' → logprob: -6.576179504394531
    8. 'def' → logprob: -6.826179504394531
    9. ' total' → logprob: -6.951179504394531
    10. ' from' → logprob: -6.951179504394531

Token 499: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6596971750259399
    2. ',' → logprob: -1.40969717502594
    3. ' ' → logprob: -3.1596970558166504
    4. ' /' → logprob: -3.2846970558166504
    5. ')' → logprob: -3.6596970558166504
    6. 'total' → logprob: -3.9096970558166504
    7. '_total' → logprob: -4.28469705581665
    8. ':' → logprob: -4.40969705581665
    9. '/' → logprob: -4.78469705581665
    10. '_num' → logprob: -5.15969705581665

Token 500: ' adaptée' (ID: 139884)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.824177622795105
    2. '   ' → logprob: -1.199177622795105
    3. ',' → logprob: -1.699177622795105
    4. ' ' → logprob: -4.6991777420043945
    5. '<|end|>' → logprob: -4.8241777420043945
    6. '<|end|>' → logprob: -5.0741777420043945
    7. ')' → logprob: -5.3241777420043945
    8. 'total' → logprob: -5.3241777420043945
    9. ' :' → logprob: -5.3241777420043945
    10. '
' → logprob: -5.4491777420043945

Token 501: ' aux' (ID: 5850)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029691241681575775
    2. ',' → logprob: -5.529691219329834
    3. '
' → logprob: -5.654691219329834
    4. 'def' → logprob: -5.904691219329834
    5. ' ' → logprob: -6.279691219329834
    6. 'num' → logprob: -6.279691219329834
    7. ' num' → logprob: -6.404691219329834
    8. ':' → logprob: -6.404691219329834
    9. ' total' → logprob: -6.779691219329834
    10. '    
' → logprob: -6.779691219329834

Token 502: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.0024041931610554457
    2. 'ent' → logprob: -6.25240421295166
    3. ' fractions' → logprob: -8.12740421295166
    4. 'fraction' → logprob: -10.25240421295166
    5. 'Fraction' → logprob: -10.50240421295166
    6. '//' → logprob: -10.62740421295166
    7. 'num' → logprob: -10.75240421295166
    8. 'Fra' → logprob: -11.12740421295166
    9. '```' → logprob: -11.75240421295166
    10. ' ent' → logprob: -12.00240421295166

Token 503: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028848794754594564
    2. '
' → logprob: -7.377884864807129
    3. 'def' → logprob: -7.627884864807129
    4. ')' → logprob: -8.502884864807129
    5. '    ' → logprob: -8.752884864807129
    6. '```' → logprob: -8.752884864807129
    7. ' ' → logprob: -8.877884864807129
    8. '    
' → logprob: -9.127884864807129
    9. ' h' → logprob: -9.377884864807129
    10. 'num' → logprob: -9.502884864807129

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09915044903755188
    2. ' 
' → logprob: -3.4741504192352295
    3. '  
' → logprob: -3.7241504192352295
    4. '
' → logprob: -4.099150657653809
    5. '    
' → logprob: -4.849150657653809
    6. '```' → logprob: -5.724150657653809
    7. '   
' → logprob: -5.724150657653809
    8. ' ' → logprob: -6.474150657653809
    9. '\n' → logprob: -6.974150657653809
    10. '    ' → logprob: -7.224150657653809

Token 505: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1877894401550293
    2. ' total' → logprob: -2.4377894401550293
    3. 'total' → logprob: -3.6877894401550293
    4. ' h' → logprob: -4.312789440155029
    5. ' hours' → logprob: -4.812789440155029
    6. '#' (adapté à ' #') → logprob: -4.937789440155029
    7. 'h' → logprob: -5.187789440155029
    8. ' #' → logprob: -5.437789440155029
    9. ' quotient' → logprob: -5.437789440155029
    10. 'quot' → logprob: -5.562789440155029

Token 506: ' Pour' (ID: 13931)
  Prédit: 'hours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hours' → logprob: -0.6784675717353821
    2. '#' → logprob: -1.0534675121307373
    3. 'total' → logprob: -3.1784675121307373
    4. '   ' → logprob: -3.3034675121307373
    5. 'h' → logprob: -4.053467750549316
    6. 'from' → logprob: -4.178467750549316
    7. 'seconds' → logprob: -4.678467750549316
    8. 'hour' → logprob: -4.803467750549316
    9. 'quot' → logprob: -5.053467750549316
    10. 'num' → logprob: -5.428467750549316

Token 507: ' extra' (ID: 5018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8428104519844055
    2. 'hours' → logprob: -0.9678104519844055
    3. 'div' → logprob: -2.7178103923797607
    4. 'total' → logprob: -3.4678103923797607
    5. 'seconds' → logprob: -3.7178103923797607
    6. 'h' → logprob: -4.09281063079834
    7. ' hours' → logprob: -4.09281063079834
    8. ' seconds' → logprob: -4.96781063079834
    9. 'quot' → logprob: -5.09281063079834
    10. ' #' → logprob: -5.21781063079834

Token 508: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.6371774077415466
    2. 'ct' → logprob: -0.8871774077415466
    3. '_seconds' → logprob: -4.387177467346191
    4. 't' → logprob: -5.137177467346191
    5. '_total' → logprob: -5.387177467346191
    6. 'er' → logprob: -5.512177467346191
    7. 'irer' → logprob: -5.887177467346191
    8. 'cut' → logprob: -6.137177467346191
    9. 'total' → logprob: -6.137177467346191
    10. '#' → logprob: -6.512177467346191

Token 509: ' h' (ID: 312)
  Prédit: 'hours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hours' → logprob: -0.0711773931980133
    2. 'h' → logprob: -3.6961774826049805
    3. 'quot' → logprob: -4.1961774826049805
    4. ' hours' → logprob: -4.5711774826049805
    5. 'total' → logprob: -5.1961774826049805
    6. 'seconds' → logprob: -5.5711774826049805
    7. '#' → logprob: -6.1961774826049805
    8. 'hour' → logprob: -6.1961774826049805
    9. 'he' → logprob: -6.4461774826049805
    10. '   ' → logprob: -7.9461774826049805

Token 510: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.467531681060791
    2. ' hours' → logprob: -2.092531681060791
    3. ' quotient' → logprob: -2.842531681060791
    4. ' ' → logprob: -2.967531681060791
    5. ',' → logprob: -2.967531681060791
    6. ' =' → logprob: -3.842531681060791
    7. '_hours' → logprob: -4.467531681060791
    8. ' total' → logprob: -4.717531681060791
    9. 'hours' → logprob: -4.717531681060791
    10. 'q' → logprob: -5.342531681060791

Token 511: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2512160837650299
    2. 'hours' → logprob: -1.6262160539627075
    3. 'total' → logprob: -4.001215934753418
    4. 'quot' → logprob: -5.626215934753418
    5. 'hour' → logprob: -6.876215934753418
    6. ' hours' → logprob: -7.751215934753418
    7. 'q' → logprob: -7.751215934753418
    8. 'H' → logprob: -7.751215934753418
    9. ' h' → logprob: -7.876215934753418
    10. ' total' → logprob: -9.251215934753418

Token 512: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.04841418191790581
    2. 'urs' → logprob: -3.2984142303466797
    3. 'ur' → logprob: -5.54841423034668
    4. '   ' → logprob: -5.67341423034668
    5. 'u' → logprob: -7.04841423034668
    6. 'ors' → logprob: -8.04841423034668
    7. 'ads' → logprob: -8.17341423034668
    8. 'ure' → logprob: -8.42341423034668
    9. '#' → logprob: -8.67341423034668
    10. '       ' → logprob: -9.04841423034668

Token 513: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30621832609176636
    2. ')' → logprob: -1.9312183856964111
    3. '),' → logprob: -2.806218385696411
    4. '):' → logprob: -3.681218385696411
    5. '   ' → logprob: -4.181218147277832
    6. '=' → logprob: -5.306218147277832
    7. ' =' → logprob: -5.556218147277832
    8. ':' → logprob: -6.556218147277832
    9. ' ' → logprob: -6.681218147277832
    10. ' ,' → logprob: -6.931218147277832

Token 514: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.18725410103797913
    2. '   ' → logprob: -2.0622541904449463
    3. ' h' → logprob: -3.8122541904449463
    4. 'hours' → logprob: -5.062253952026367
    5. 'quot' → logprob: -5.312253952026367
    6. 'total' → logprob: -5.437253952026367
    7. 'q' → logprob: -6.437253952026367
    8. '```' → logprob: -6.687253952026367
    9. ' hours' → logprob: -7.187253952026367
    10. ' total' → logprob: -7.812253952026367

Token 515: ' total' (ID: 3609)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06832222640514374
    2. 'hours' → logprob: -2.81832218170166
    3. 'total' (adapté à ' total') → logprob: -5.44332218170166
    4. '   ' → logprob: -6.69332218170166
    5. 'hour' → logprob: -7.69332218170166
    6. 'he' → logprob: -8.69332218170166
    7. 'quot' → logprob: -9.94332218170166
    8. ' h' → logprob: -11.19332218170166
    9. ' hours' → logprob: -11.31832218170166
    10. 'hrs' → logprob: -11.81832218170166

Token 516: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.000286364956991747
    2. '_' → logprob: -9.000286102294922
    3. '_num' → logprob: -9.125286102294922
    4. '_s' → logprob: -11.125286102294922
    5. '_hours' → logprob: -11.250286102294922
    6. '_sec' → logprob: -11.875286102294922
    7. '_total' → logprob: -12.625286102294922
    8. '_times' → logprob: -13.000286102294922
    9. '```' → logprob: -13.125286102294922
    10. '_minutes' → logprob: -13.625286102294922

Token 517: '_int' (ID: 12285)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0014810555148869753
    2. '_' → logprob: -7.376481056213379
    3. 'num' → logprob: -7.626481056213379
    4. '_div' → logprob: -9.376481056213379
    5. '_mul' → logprob: -9.376481056213379
    6. '_mult' → logprob: -10.251481056213379
    7. '=' → logprob: -10.501481056213379
    8. '_times' → logprob: -10.876481056213379
    9. '_floor' → logprob: -10.876481056213379
    10. '//' → logprob: -10.876481056213379

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39582860469818115
    2. '=' → logprob: -1.1458286046981812
    3. '_num' → logprob: -5.145828723907471
    4. ',' → logprob: -6.145828723907471
    5. '   ' → logprob: -7.770828723907471
    6. 'num' → logprob: -8.145828247070312
    7. '=num' → logprob: -9.020828247070312
    8. ' ' → logprob: -10.520828247070312
    9. '_n' → logprob: -10.895828247070312
    10. '_' → logprob: -11.395828247070312

Token 519: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.09490053355693817
    2. ' total' → logprob: -2.719900608062744
    3. '(total' → logprob: -3.719900608062744
    4. ' (' → logprob: -7.844900608062744
    5. '(' → logprob: -10.719900131225586
    6. '   ' → logprob: -13.094900131225586
    7. ' ' → logprob: -13.094900131225586
    8. '  ' → logprob: -15.094900131225586
    9. '	total' → logprob: -15.219900131225586
    10. '(t' → logprob: -16.469900131225586

Token 520: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -4.961759259458631e-06
    2. '_num' → logprob: -12.500004768371582
    3. '_' → logprob: -14.875004768371582
    4. '```' → logprob: -15.875004768371582
    5. ')_' → logprob: -15.875004768371582
    6. '_s' → logprob: -16.3750057220459
    7. 'seconds' → logprob: -16.7500057220459
    8. '\' → logprob: -16.7500057220459
    9. '_SECONDS' → logprob: -16.7500057220459
    10. '_numbers' → logprob: -16.8750057220459

Token 521: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0005194319528527558
    2. 'num' → logprob: -7.625519275665283
    3. 'den' → logprob: -11.125519752502441
    4. '_den' → logprob: -11.125519752502441
    5. 'Num' → logprob: -14.250519752502441
    6. '_' → logprob: -14.625519752502441
    7. '```' → logprob: -16.000518798828125
    8. '	num' → logprob: -16.250518798828125
    9. '_NUM' → logprob: -16.250518798828125
    10. 'int' → logprob: -16.750518798828125

Token 522: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5759664177894592
    2. ' //' → logprob: -0.8259664177894592
    3. '#' → logprob: -11.200966835021973
    4. '
' → logprob: -12.200966835021973
    5. 'div' → logprob: -13.075966835021973
    6. '=' → logprob: -13.575966835021973
    7. ' ' → logprob: -13.700966835021973
    8. '   ' → logprob: -13.825966835021973
    9. '//=' → logprob: -14.075966835021973
    10. ')' → logprob: -14.950966835021973

Token 523: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -2.7610454708337784e-05
    2. ' total' → logprob: -10.500027656555176
    3. '(total' → logprob: -22.37502670288086
    4. '	total' → logprob: -22.87502670288086
    5. 'Total' → logprob: -25.12502670288086
    6. '$total' → logprob: -25.50002670288086
    7. ',total' → logprob: -25.62502670288086
    8. ' ' → logprob: -26.25002670288086
    9. '   ' → logprob: -26.37502670288086
    10. 'tot' → logprob: -26.37502670288086

Token 524: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -2.339278580620885e-06
    2. 'seconds' → logprob: -13.000001907348633
    3. '_' → logprob: -18.625001907348633
    4. '_SECONDS' → logprob: -19.125001907348633
    5. '```' → logprob: -19.250001907348633
    6. 's' → logprob: -19.750001907348633
    7. 'Seconds' → logprob: -19.750001907348633
    8. '_second' → logprob: -19.875001907348633
    9. ' seconds' → logprob: -20.875001907348633
    10. 'SECONDS' → logprob: -21.125001907348633

Token 525: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.0004311460361350328
    2. 'den' → logprob: -7.750431060791016
    3. '_d' → logprob: -15.625431060791016
    4. 'Den' → logprob: -15.625431060791016
    5. '_def' → logprob: -16.750431060791016
    6. ' den' → logprob: -17.250431060791016
    7. '_DEN' → logprob: -17.500431060791016
    8. 'd' → logprob: -18.000431060791016
    9. '_' → logprob: -18.125431060791016
    10. '.den' → logprob: -18.375431060791016

Token 526: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0378260612487793
    2. '   ' → logprob: -3.7878260612487793
    3. '    
' → logprob: -4.912826061248779
    4. '*' → logprob: -6.412826061248779
    5. '  
' → logprob: -6.412826061248779
    6. '<|end|>' → logprob: -7.037826061248779
    7. ' 
' → logprob: -7.162826061248779
    8. '\n' → logprob: -7.287826061248779
    9. ')' → logprob: -8.037826538085938
    10. '   
' → logprob: -8.662826538085938

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011055364273488522
    2. ' h' → logprob: -4.8860554695129395
    3. 'h' → logprob: -6.2610554695129395
    4. '    
' → logprob: -7.8860554695129395
    5. '
' → logprob: -8.636054992675781
    6. ',' → logprob: -8.761054992675781
    7. '    ' → logprob: -9.011054992675781
    8. '  ' → logprob: -9.386054992675781
    9. '```' → logprob: -9.636054992675781
    10. ' 
' → logprob: -9.761054992675781

Token 528: ' remainder' (ID: 47056)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1668868362903595
    2. '   ' → logprob: -1.916886806488037
    3. 'hours' → logprob: -5.291886806488037
    4. ' h' → logprob: -6.916886806488037
    5. 'he' → logprob: -8.166887283325195
    6. 'hour' → logprob: -9.291887283325195
    7. 'total' → logprob: -9.791887283325195
    8. ' hours' → logprob: -9.916887283325195
    9. '	h' → logprob: -10.291887283325195
    10. '    
' → logprob: -10.916887283325195

Token 529: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.42748311161994934
    2. ' =' → logprob: -1.177483081817627
    3. '_' → logprob: -3.427483081817627
    4. '=' → logprob: -5.302483081817627
    5. ' _' → logprob: -7.802483081817627
    6. ',' → logprob: -7.802483081817627
    7. 'num' → logprob: -8.052483558654785
    8. '_n' → logprob: -8.177483558654785
    9. '_tokens' → logprob: -8.677483558654785
    10. '_space' → logprob: -8.927483558654785

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009756204672157764
    2. ' =' → logprob: -4.634756088256836
    3. ',' → logprob: -16.134756088256836
    4. 's' → logprob: -16.509756088256836
    5. '=
' → logprob: -17.009756088256836
    6. '=}' → logprob: -17.384756088256836
    7. ' ' → logprob: -18.759756088256836
    8. ')' → logprob: -18.759756088256836
    9. '=

' → logprob: -18.884756088256836
    10. '<|end|>' → logprob: -19.134756088256836

Token 531: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1002117469906807
    2. ' total' → logprob: -2.3502118587493896
    3. '(total' → logprob: -12.600212097167969
    4. '   ' → logprob: -13.475212097167969
    5. ' ' → logprob: -14.975212097167969
    6. '	total' → logprob: -16.85021209716797
    7. '  ' → logprob: -18.35021209716797
    8. ',total' → logprob: -18.72521209716797
    9. ' (' → logprob: -18.85021209716797
    10. '_total' → logprob: -19.22521209716797

Token 532: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.00019221604452468455
    2. 'seconds' → logprob: -8.875192642211914
    3. 'total' → logprob: -11.250192642211914
    4. '_sec' → logprob: -11.250192642211914
    5. '_total' → logprob: -11.750192642211914
    6. '_num' → logprob: -12.125192642211914
    7. '_den' → logprob: -13.000192642211914
    8. 'Seconds' → logprob: -13.125192642211914
    9. 'sec' → logprob: -13.375192642211914
    10. ' seconds' → logprob: -14.250192642211914

Token 533: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0005672106635756791
    2. 'num' → logprob: -7.500567436218262
    3. '%' → logprob: -11.500567436218262
    4. '_den' → logprob: -13.500567436218262
    5. 'Num' → logprob: -13.750567436218262
    6. '_' → logprob: -14.375567436218262
    7. 'den' → logprob: -15.500567436218262
    8. '	num' → logprob: -15.750567436218262
    9. '_nom' → logprob: -16.625566482543945
    10. '```' → logprob: -16.750566482543945

Token 534: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38723787665367126
    2. ' %' → logprob: -1.1372379064559937
    3. ' -' → logprob: -8.262237548828125
    4. '-' → logprob: -9.387237548828125
    5. ' ' → logprob: -11.387237548828125
    6. '%s' → logprob: -11.887237548828125
    7. '%d' → logprob: -13.137237548828125
    8. ' ' → logprob: -13.762237548828125
    9. '%
' → logprob: -14.387237548828125
    10. '
' → logprob: -14.512237548828125

Token 535: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0019286326132714748
    2. ' total' → logprob: -6.251928806304932
    3. '(total' → logprob: -16.876928329467773
    4. ' ' → logprob: -20.501928329467773
    5. '	total' → logprob: -21.001928329467773
    6. 'tot' → logprob: -21.001928329467773
    7. '   ' → logprob: -21.501928329467773
    8. 'Total' → logprob: -21.501928329467773
    9. ',total' → logprob: -21.501928329467773
    10. '_total' → logprob: -23.251928329467773

Token 536: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.0057220980525016785
    2. 'total' → logprob: -5.2557220458984375
    3. 'seconds' → logprob: -7.6307220458984375
    4. 'Seconds' → logprob: -13.130722045898438
    5. '_total' → logprob: -14.630722045898438
    6. 'second' → logprob: -15.630722045898438
    7. ' seconds' → logprob: -16.505722045898438
    8. ' total' → logprob: -16.630722045898438
    9. '_SECONDS' → logprob: -16.630722045898438
    10. '```' → logprob: -17.505722045898438

Token 537: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.005234121344983578
    2. 'den' → logprob: -5.255234241485596
    3. 'Den' → logprob: -15.380233764648438
    4. '_d' → logprob: -16.755233764648438
    5. '_DEN' → logprob: -18.005233764648438
    6. '.den' → logprob: -18.005233764648438
    7. ' den' → logprob: -18.130233764648438
    8. '_def' → logprob: -19.255233764648438
    9. '_dem' → logprob: -19.630233764648438
    10. '-den' → logprob: -19.630233764648438

Token 538: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06149934604763985
    2. '
' → logprob: -3.1864993572235107
    3. ',' → logprob: -5.436499118804932
    4. '    
' → logprob: -5.561499118804932
    5. '*' → logprob: -6.061499118804932
    6. '<|end|>' → logprob: -6.061499118804932
    7. '```' → logprob: -6.561499118804932
    8. '  
' → logprob: -7.061499118804932
    9. ' *' → logprob: -7.561499118804932
    10. '<|end|>' → logprob: -7.686499118804932

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02034321427345276
    2. 'h' → logprob: -4.02034330368042
    3. '```' → logprob: -7.64534330368042
    4. '    
' → logprob: -8.145342826843262
    5. 'total' → logprob: -8.145342826843262
    6. ' h' → logprob: -8.395342826843262
    7. '#' → logprob: -8.770342826843262
    8. '   ' → logprob: -9.145342826843262
    9. ' ' → logprob: -9.395342826843262
    10. 'he' → logprob: -9.395342826843262

Token 540: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.01398660521954298
    2. '   ' → logprob: -5.138986587524414
    3. ' h' → logprob: -5.513986587524414
    4. 'hours' → logprob: -5.638986587524414
    5. ' hours' → logprob: -9.138986587524414
    6. 'he' → logprob: -9.263986587524414
    7. '```' → logprob: -9.763986587524414
    8. ' ' → logprob: -10.013986587524414
    9. 'hour' → logprob: -10.013986587524414
    10. 'total' → logprob: -10.388986587524414

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.375500351190567
    2. '=' → logprob: -1.2505003213882446
    3. ',' → logprob: -3.625500440597534
    4. ' ,' → logprob: -10.375500679016113
    5. ' ' → logprob: -12.500500679016113
    6. '=int' → logprob: -12.500500679016113
    7. 's' → logprob: -12.625500679016113
    8. '	' → logprob: -12.750500679016113
    9. '   ' → logprob: -12.875500679016113
    10. ' =
' → logprob: -13.500500679016113

Token 542: ' (' (ID: 350)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3950323760509491
    2. '(total' → logprob: -1.7700324058532715
    3. ' total' → logprob: -2.0200324058532715
    4. ' (' → logprob: -3.7700324058532715
    5. '(' → logprob: -8.270031929016113
    6. ' ' → logprob: -11.020031929016113
    7. '   ' → logprob: -11.395031929016113
    8. 'tot' → logprob: -12.020031929016113
    9. '(t' → logprob: -12.582531929016113
    10. ',total' → logprob: -13.082531929016113

Token 543: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00040779312257654965
    2. ' total' → logprob: -8.500408172607422
    3. '(total' → logprob: -8.500408172607422
    4. '   ' → logprob: -14.500408172607422
    5. ' (' → logprob: -15.500408172607422
    6. 'tot' → logprob: -16.750408172607422
    7. '(' → logprob: -16.750408172607422
    8. ' ' → logprob: -17.500408172607422
    9. 't' → logprob: -17.875408172607422
    10. '  ' → logprob: -18.375408172607422

Token 544: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -6.229872087715194e-05
    2. 'seconds' → logprob: -9.750061988830566
    3. 'int' → logprob: -12.875061988830566
    4. '_int' → logprob: -13.875061988830566
    5. 'Seconds' → logprob: -16.250062942504883
    6. '_SECONDS' → logprob: -16.250062942504883
    7. ' seconds' → logprob: -16.625062942504883
    8. '_' → logprob: -17.000062942504883
    9. '```' → logprob: -17.000062942504883
    10. '\' → logprob: -17.875062942504883

Token 545: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.001506409258581698
    2. 'int' → logprob: -6.501506328582764
    3. 'Int' → logprob: -12.626506805419922
    4. '//' → logprob: -15.376506805419922
    5. '   ' → logprob: -15.501506805419922
    6. ' int' → logprob: -16.626506805419922
    7. ')' → logprob: -17.126506805419922
    8. '_num' → logprob: -17.126506805419922
    9. 't' → logprob: -17.251506805419922
    10. 'num' → logprob: -17.501506805419922

Token 546: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.21316410601139069
    2. '//' → logprob: -2.0881640911102295
    3. ')' → logprob: -2.7131640911102295
    4. ' ' → logprob: -7.338164329528809
    5. ')//' → logprob: -7.838164329528809
    6. ' ' → logprob: -7.963164329528809
    7. '   ' → logprob: -8.713164329528809
    8. ' )' → logprob: -9.213164329528809
    9. '    ' → logprob: -10.463164329528809
    10. '  ' → logprob: -10.963164329528809

Token 547: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.750003814697266
    3. '(' → logprob: -13.625003814697266
    4. '366' → logprob: -18.750003814697266
    5. ' (' → logprob: -20.125003814697266
    6. '   ' → logprob: -20.625003814697266
    7. '  ' → logprob: -21.750003814697266
    8. '36' → logprob: -21.875003814697266
    9. '180' → logprob: -22.625003814697266
    10. ')' → logprob: -22.750003814697266

Token 548: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '(' → logprob: -18.875
    4. '366' → logprob: -21.375
    5. '   ' → logprob: -22.625
    6. '359' → logprob: -23.875
    7. '36' → logprob: -24.125
    8. '  ' → logprob: -24.25
    9. '3' → logprob: -24.25
    10. '```' → logprob: -24.25

Token 549: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.125
    3. ' ' → logprob: -16.0
    4. '۰' → logprob: -18.625
    5. 'o' → logprob: -19.25
    6. 'O' → logprob: -19.75
    7. '00' → logprob: -20.0
    8. '   ' → logprob: -20.375
    9. '০' → logprob: -20.4375
    10. '(' → logprob: -21.125

Token 550: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018041854491457343
    2. ' )' → logprob: -9.0001802444458
    3. ')%' → logprob: -10.2501802444458
    4. ')
' → logprob: -10.8751802444458
    5. '   ' → logprob: -13.3751802444458
    6. '),' → logprob: -15.3751802444458
    7. ',' → logprob: -15.7501802444458
    8. '%' → logprob: -16.000181198120117
    9. ')`' → logprob: -16.375181198120117
    10. ' ' → logprob: -16.750181198120117

Token 551: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4301754832267761
    2. ' %' → logprob: -1.055175542831421
    3. ')' → logprob: -7.055175304412842
    4. '<|end|>' → logprob: -7.805175304412842
    5. ')%' → logprob: -9.68017578125
    6. ' ' → logprob: -9.93017578125
    7. '   ' → logprob: -9.93017578125
    8. '%D' → logprob: -12.05517578125
    9. '%s' → logprob: -12.05517578125
    10. '
' → logprob: -12.18017578125

Token 552: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.320199877838604e-07
    2. ' H' → logprob: -15.0
    3. '(H' → logprob: -20.875
    4. '	H' → logprob: -23.25
    5. '   ' → logprob: -23.375
    6. ' ' → logprob: -25.5
    7. '{' → logprob: -26.125
    8. ',H' → logprob: -26.25
    9. '_H' → logprob: -26.25
    10. '`' → logprob: -26.375

Token 553: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35915055871009827
    2. 'm' → logprob: -1.2341505289077759
    3. 'total' → logprob: -5.609150409698486
    4. '    
' → logprob: -5.859150409698486
    5. ' m' → logprob: -6.609150409698486
    6. '
' → logprob: -7.109150409698486
    7. 'remaining' → logprob: -7.984150409698486
    8. ' ' → logprob: -8.109150886535645
    9. '	m' → logprob: -8.734150886535645
    10. '  ' → logprob: -8.734150886535645

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30391353368759155
    2. 'm' → logprob: -1.6789135932922363
    3. 'total' → logprob: -3.5539135932922363
    4. ' m' → logprob: -3.6789135932922363
    5. ' remainder' → logprob: -4.678913593292236
    6. ' total' → logprob: -5.303913593292236
    7. 'remaining' → logprob: -6.178913593292236
    8. '    
' → logprob: -6.553913593292236
    9. ' ' → logprob: -6.678913593292236
    10. 'rest' → logprob: -7.428913593292236

Token 555: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.301526814699173
    2. 'remaining' → logprob: -2.0515267848968506
    3. 'total' → logprob: -2.3015267848968506
    4. 're' → logprob: -4.17652702331543
    5. 'rest' → logprob: -4.92652702331543
    6. 'rem' → logprob: -5.17652702331543
    7. 'minutes' → logprob: -6.17652702331543
    8. 'remain' → logprob: -6.92652702331543
    9. 'min' → logprob: -9.55152702331543
    10. 'reste' → logprob: -9.80152702331543

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575940728187561
    2. ' =' → logprob: -0.825940728187561
    3. ',' → logprob: -14.07594108581543
    4. '   ' → logprob: -15.45094108581543
    5. ' ' → logprob: -15.95094108581543
    6. '=int' → logprob: -16.95094108581543
    7. ' ' → logprob: -17.07594108581543
    8. ' =(' → logprob: -17.95094108581543
    9. ')' → logprob: -18.07594108581543
    10. '=

' → logprob: -18.20094108581543

Token 557: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.07891909033060074
    2. ' (' → logprob: -2.5789191722869873
    3. 'total' → logprob: -11.578919410705566
    4. '(' → logprob: -11.828919410705566
    5. '((' → logprob: -12.453919410705566
    6. ' total' → logprob: -12.578919410705566
    7. '(t' → logprob: -13.203919410705566
    8. ' ' → logprob: -13.578919410705566
    9. '(full' → logprob: -14.453919410705566
    10. '   ' → logprob: -15.203919410705566

Token 558: 'total' (ID: 9577)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.010098269209265709
    2. 'total' → logprob: -4.635098457336426
    3. ' (' → logprob: -8.260098457336426
    4. '((' → logprob: -9.760098457336426
    5. ' total' → logprob: -11.010098457336426
    6. '(' → logprob: -11.760098457336426
    7. '(t' → logprob: -14.885098457336426
    8. ',total' → logprob: -15.135098457336426
    9. 'tot' → logprob: -15.385098457336426
    10. '(full' → logprob: -16.26009750366211

Token 559: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.4205239713191986
    2. '_int' → logprob: -1.295524001121521
    3. 'int' → logprob: -2.6705238819122314
    4. 'seconds' → logprob: -9.045523643493652
    5. '60' → logprob: -9.545523643493652
    6. 'Int' → logprob: -10.420523643493652
    7. ' ' → logprob: -11.170523643493652
    8. '```' → logprob: -11.545523643493652
    9. '   ' → logprob: -11.795523643493652
    10. '(' → logprob: -11.795523643493652

Token 560: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0009161015041172504
    2. 'int' → logprob: -7.000916004180908
    3. 'Int' → logprob: -12.375916481018066
    4. '//' → logprob: -16.25091552734375
    5. '_INT' → logprob: -16.50091552734375
    6. '```' → logprob: -17.37591552734375
    7. '
' → logprob: -17.75091552734375
    8. '_num' → logprob: -17.75091552734375
    9. 'const' → logprob: -18.50091552734375
    10. '   ' → logprob: -18.62591552734375

Token 561: ' %' (ID: 1851)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.055650677531957626
    2. '//' → logprob: -2.9306507110595703
    3. ' ' → logprob: -7.43065071105957
    4. ' ' → logprob: -9.18065071105957
    5. '```' → logprob: -10.30565071105957
    6. '%' → logprob: -11.43065071105957
    7. '#' → logprob: -12.18065071105957
    8. ')' → logprob: -13.05565071105957
    9. '	' → logprob: -13.05565071105957
    10. ' %' → logprob: -13.43065071105957

Token 562: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.526570384972729e-05
    2. '60' → logprob: -9.875055313110352
    3. ' ' → logprob: -12.500055313110352
    4. '366' → logprob: -17.75005531311035
    5. '(' → logprob: -18.12505531311035
    6. '   ' → logprob: -20.00005531311035
    7. '600' → logprob: -20.00005531311035
    8. '  ' → logprob: -20.12505531311035
    9. '660' → logprob: -20.25005531311035
    10. '960' → logprob: -20.75005531311035

Token 563: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.9361264946837764e-07
    2. '60' → logprob: -16.125
    3. ' ' → logprob: -18.375
    4. '(' → logprob: -19.25
    5. '366' → logprob: -21.5
    6. '216' → logprob: -22.125
    7. '   ' → logprob: -22.75
    8. '  ' → logprob: -22.875
    9. '180' → logprob: -23.75
    10. '210' → logprob: -24.25

Token 564: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '60' → logprob: -14.375000953674316
    3. ')' → logprob: -15.250000953674316
    4. ' ' → logprob: -16.250001907348633
    5. '00' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '```' → logprob: -17.875001907348633
    8. '600' → logprob: -18.250001907348633
    9. '>' → logprob: -19.375001907348633
    10. '360' → logprob: -19.750001907348633

Token 565: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016588744474574924
    2. '//' → logprob: -7.126658916473389
    3. ' //' → logprob: -7.626658916473389
    4. ' )' → logprob: -8.75165843963623
    5. '   ' → logprob: -9.00165843963623
    6. ')//' → logprob: -9.50165843963623
    7. ' ' → logprob: -12.12665843963623
    8. '	' → logprob: -13.62665843963623
    9. '       ' → logprob: -13.75165843963623
    10. '```' → logprob: -14.37665843963623

Token 566: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07904147356748581
    2. ' //' → logprob: -2.5790414810180664
    3. '   ' → logprob: -9.704041481018066
    4. ' ' → logprob: -10.204041481018066
    5. '       ' → logprob: -10.704041481018066
    6. ')' → logprob: -11.579041481018066
    7. ' ' → logprob: -11.704041481018066
    8. '	' → logprob: -12.454041481018066
    9. '```' → logprob: -12.454041481018066
    10. '           ' → logprob: -13.704041481018066

Token 567: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. ' sixty' → logprob: -19.50002098083496
    4. '```' → logprob: -19.50002098083496
    5. '6' → logprob: -19.62502098083496
    6. '   ' → logprob: -19.75002098083496
    7. '  ' → logprob: -20.25002098083496
    8. '61' → logprob: -20.75002098083496
    9. ' ' → logprob: -20.87502098083496
    10. '(' → logprob: -22.00002098083496

Token 568: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '6' → logprob: -20.75
    4. '61' → logprob: -20.875
    5. '```' → logprob: -21.625
    6. '   ' → logprob: -22.0
    7. ' sixty' → logprob: -22.375
    8. '59' → logprob: -22.75
    9. '  ' → logprob: -23.0
    10. '600' → logprob: -23.125

Token 569: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06467529386281967
    2. 's' → logprob: -2.8146753311157227
    3. '    
' → logprob: -7.064675331115723
    4. '```' → logprob: -7.439675331115723
    5. ' s' → logprob: -8.064675331115723
    6. '
' → logprob: -8.064675331115723
    7. 'n' → logprob: -8.189675331115723
    8. 'r' → logprob: -8.689675331115723
    9. 'rest' → logprob: -9.689675331115723
    10. ',' → logprob: -11.189675331115723

Token 570: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07203175872564316
    2. '   ' → logprob: -2.9470317363739014
    3. '#' → logprob: -4.8220319747924805
    4. 'num' → logprob: -6.0720319747924805
    5. 'r' → logprob: -6.4470319747924805
    6. 'rest' → logprob: -6.5720319747924805
    7. ' s' → logprob: -6.6970319747924805
    8. '```' → logprob: -7.3220319747924805
    9. 'rem' → logprob: -7.4470319747924805
    10. 'n' → logprob: -7.4470319747924805

Token 571: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06371977925300598
    2. '#' (adapté à ' #') → logprob: -3.9387197494506836
    3. 'num' → logprob: -4.813719749450684
    4. '   ' → logprob: -4.938719749450684
    5. 'r' → logprob: -5.063719749450684
    6. 're' → logprob: -5.688719749450684
    7. 'n' → logprob: -5.688719749450684
    8. 'rem' → logprob: -5.813719749450684
    9. 'rest' → logprob: -5.813719749450684
    10. 'numer' → logprob: -5.813719749450684

Token 572: ' secondes' (ID: 109098)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26349717378616333
    2. '#' → logprob: -1.6384971141815186
    3. 'n' → logprob: -3.7634971141815186
    4. 'from' → logprob: -5.263497352600098
    5. 'num' → logprob: -5.638497352600098
    6. 'seconds' → logprob: -7.013497352600098
    7. 'if' → logprob: -7.013497352600098
    8. 'sec' → logprob: -7.388497352600098
    9. 'frac' → logprob: -7.513497352600098
    10. 'r' → logprob: -7.638497352600098

Token 573: ' ent' (ID: 1121)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.27374303340911865
    2. 'num' → logprob: -2.273743152618408
    3. 's' → logprob: -2.898743152618408
    4. '   ' → logprob: -3.523743152618408
    5. '_n' → logprob: -4.023743152618408
    6. 'n' → logprob: -4.398743152618408
    7. '_s' → logprob: -4.773743152618408
    8. 'fraction' → logprob: -5.773743152618408
    9. ' =' → logprob: -5.898743152618408
    10. 'frac' → logprob: -6.398743152618408

Token 574: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.010801267810165882
    2. 'ieres' → logprob: -5.010801315307617
    3. 'ier' → logprob: -6.510801315307617
    4. 'ière' → logprob: -6.510801315307617
    5. 'iers' → logprob: -7.635801315307617
    6. 'iere' → logprob: -8.510801315307617
    7. 'i' → logprob: -9.260801315307617
    8. '_seconds' → logprob: -9.510801315307617
    9. '=' → logprob: -9.885801315307617
    10. 'er' → logprob: -11.010801315307617

Token 575: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0253116674721241
    2. '=' → logprob: -4.650311470031738
    3. '   ' → logprob: -5.025311470031738
    4. ' =' → logprob: -5.525311470031738
    5. '```' → logprob: -6.650311470031738
    6. ' s' → logprob: -6.775311470031738
    7. '(s' → logprob: -7.025311470031738
    8. ',' → logprob: -7.775311470031738
    9. 'num' → logprob: -8.525311470031738
    10. 'n' → logprob: -8.775311470031738

Token 576: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.047580536454916
    2. '   ' → logprob: -3.4225804805755615
    3. ' s' → logprob: -4.422580718994141
    4. '```' → logprob: -7.422580718994141
    5. 'seconds' → logprob: -8.29758071899414
    6. '=' → logprob: -8.29758071899414
    7. ' =' → logprob: -9.29758071899414
    8. ',' → logprob: -9.42258071899414
    9. '       ' → logprob: -9.54758071899414
    10. '	s' → logprob: -9.67258071899414

Token 577: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.001071750302799046
    2. 'seconds' → logprob: -7.501071929931641
    3. 'sec' → logprob: -7.751071929931641
    4. 'secs' → logprob: -11.25107192993164
    5. '   ' → logprob: -11.37607192993164
    6. 'rest' → logprob: -11.50107192993164
    7. 'remaining' → logprob: -11.50107192993164
    8. '```' → logprob: -11.62607192993164
    9. ' s' → logprob: -11.87607192993164
    10. 'n' → logprob: -12.25107192993164

Token 578: '_wh' (ID: 86186)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0011417650384828448
    2. '_int' → logprob: -7.001141548156738
    3. 'num' → logprob: -9.001141548156738
    4. '_n' → logprob: -9.751141548156738
    5. '_ent' → logprob: -11.376141548156738
    6. 'int' → logprob: -11.501141548156738
    7. '_' → logprob: -11.876141548156738
    8. ' =' → logprob: -12.126141548156738
    9. '=' → logprob: -12.376141548156738
    10. '_seconds' → logprob: -13.001141548156738

Token 579: 'ole' (ID: 1491)
  Prédit: 'ole'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ole' → logprob: -0.0018428480252623558
    2. 'ile' → logprob: -6.376842975616455
    3. 'ol' → logprob: -9.501842498779297
    4. 'ite' → logprob: -9.751842498779297
    5. '=' → logprob: -13.001842498779297
    6. 'o' → logprob: -13.251842498779297
    7. '   ' → logprob: -14.126842498779297
    8. ' =' → logprob: -14.251842498779297
    9. '```' → logprob: -14.376842498779297
    10. 'oles' → logprob: -14.876842498779297

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014310657978058
    2. ' =' → logprob: -1.7014310359954834
    3. ',' → logprob: -11.826431274414062
    4. '_num' → logprob: -12.326431274414062
    5. '=num' → logprob: -12.951431274414062
    6. '=int' → logprob: -13.451431274414062
    7. 'num' → logprob: -13.951431274414062
    8. '_' → logprob: -15.201431274414062
    9. ' ' → logprob: -15.201431274414062
    10. 's' → logprob: -15.451431274414062

Token 581: ' (' (ID: 350)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5112989544868469
    2. '(re' → logprob: -1.1362988948822021
    3. ' remainder' → logprob: -2.636298894882202
    4. ' (' → logprob: -5.011299133300781
    5. '((' → logprob: -7.886299133300781
    6. '(total' → logprob: -8.761299133300781
    7. 'total' → logprob: -9.261299133300781
    8. '(' → logprob: -9.636299133300781
    9. '(rem' → logprob: -9.886299133300781
    10. '(r' → logprob: -10.261299133300781

Token 582: 'total' (ID: 9577)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0030928626656532288
    2. '(re' → logprob: -6.6280927658081055
    3. 'total' → logprob: -6.7530927658081055
    4. ' remainder' → logprob: -7.8780927658081055
    5. '   ' → logprob: -9.378092765808105
    6. '(' → logprob: -9.628092765808105
    7. '(total' → logprob: -10.378092765808105
    8. 'remaining' → logprob: -11.503092765808105
    9. 'r' → logprob: -12.003092765808105
    10. ' (' → logprob: -12.503092765808105

Token 583: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -4.127333340875339e-06
    2. 'seconds' → logprob: -12.500003814697266
    3. '_' → logprob: -15.875003814697266
    4. '```' → logprob: -16.500003814697266
    5. ')_' → logprob: -16.750003814697266
    6. 'Seconds' → logprob: -17.000003814697266
    7. '_second' → logprob: -17.250003814697266
    8. '_SECONDS' → logprob: -17.750003814697266
    9. '_num' → logprob: -18.000003814697266
    10. '_s' → logprob: -18.875003814697266

Token 584: '_int' (ID: 12285)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.196627676486969
    2. '_den' → logprob: -1.8216276168823242
    3. '_int' → logprob: -4.571627616882324
    4. 'num' → logprob: -6.071627616882324
    5. 'den' → logprob: -6.196627616882324
    6. 'int' → logprob: -7.071627616882324
    7. '%' → logprob: -7.821627616882324
    8. '_' → logprob: -8.196627616882324
    9. 'Num' → logprob: -8.571627616882324
    10. '_n' → logprob: -9.321627616882324

Token 585: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2015247344970703
    2. '%' → logprob: -1.7015247344970703
    3. ' ' → logprob: -9.32652473449707
    4. ' //' → logprob: -11.70152473449707
    5. ')' → logprob: -12.07652473449707
    6. '```' → logprob: -13.32652473449707
    7. '   ' → logprob: -13.45152473449707
    8. '//' → logprob: -13.95152473449707
    9. '*' → logprob: -13.95152473449707
    10. ' ' → logprob: -14.07652473449707

Token 586: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '360' → logprob: -16.250085830688477
    4. '61' → logprob: -17.875085830688477
    5. '  ' → logprob: -18.625085830688477
    6. '600' → logprob: -19.625085830688477
    7. ' sixty' → logprob: -19.625085830688477
    8. '   ' → logprob: -19.875085830688477
    9. 'seconds' → logprob: -19.875085830688477
    10. '59' → logprob: -20.500085830688477

Token 587: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '360' → logprob: -17.125
    4. '61' → logprob: -21.25
    5. '600' → logprob: -22.0
    6. 'seconds' → logprob: -22.5
    7. ' sixty' → logprob: -23.25
    8. '   ' → logprob: -23.375
    9. '  ' → logprob: -23.375
    10. '060' → logprob: -23.625

Token 588: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00219735992141068
    2. '*' → logprob: -6.752197265625
    3. ' *' → logprob: -7.502197265625
    4. ')*' → logprob: -8.627197265625
    5. ',' → logprob: -8.752197265625
    6. ' )' → logprob: -9.502197265625
    7. '   ' → logprob: -10.127197265625
    8. ')
' → logprob: -11.252197265625
    9. '),' → logprob: -12.877197265625
    10. ' ' → logprob: -13.252197265625

Token 589: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5451957583427429
    2. '   ' → logprob: -0.9201957583427429
    3. '```' → logprob: -4.795195579528809
    4. 's' → logprob: -4.920195579528809
    5. ' ,' → logprob: -5.920195579528809
    6. ',
' → logprob: -6.920195579528809
    7. ' s' → logprob: -7.545195579528809
    8. '    
' → logprob: -7.795195579528809
    9. '_s' → logprob: -8.545195579528809
    10. ' ' → logprob: -8.795195579528809

Token 590: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07348997890949249
    2. '#' (adapté à ' #') → logprob: -2.6984899044036865
    3. '   ' → logprob: -7.198490142822266
    4. '```' → logprob: -7.448490142822266
    5. 'num' → logprob: -7.573490142822266
    6. 'frac' → logprob: -7.823490142822266
    7. 're' → logprob: -8.198490142822266
    8. 'rest' → logprob: -8.323490142822266
    9. 'fraction' → logprob: -8.323490142822266
    10. 'r' → logprob: -8.948490142822266

Token 591: ' reste' (ID: 26769)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21736031770706177
    2. '#' → logprob: -1.967360258102417
    3. 'frac' → logprob: -3.467360258102417
    4. 'fraction' → logprob: -3.967360258102417
    5. 'num' → logprob: -6.342360496520996
    6. 're' → logprob: -7.217360496520996
    7. 'sec' → logprob: -7.592360496520996
    8. 'n' → logprob: -7.967360496520996
    9. 'rest' → logprob: -8.092360496520996
    10. 'seconds' → logprob: -8.217360496520996

Token 592: ' fraction' (ID: 33763)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.03314521163702011
    2. '_fraction' → logprob: -4.158145427703857
    3. '_frac' → logprob: -5.033145427703857
    4. '_n' → logprob: -5.283145427703857
    5. 'num' → logprob: -5.908145427703857
    6. ' =' → logprob: -7.033145427703857
    7. '_rem' → logprob: -8.1581449508667
    8. '_s' → logprob: -8.1581449508667
    9. ',' → logprob: -8.2831449508667
    10. '   ' → logprob: -8.4081449508667

Token 593: 'naire' (ID: 30464)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.016736453399062157
    2. 'naire' → logprob: -4.8917365074157715
    3. '_n' → logprob: -5.1417365074157715
    4. ' =' → logprob: -6.0167365074157715
    5. 'num' → logprob: -8.516736030578613
    6. ' numerator' → logprob: -8.766736030578613
    7. '   ' → logprob: -9.141736030578613
    8. '=' → logprob: -9.141736030578613
    9. '_' → logprob: -9.266736030578613
    10. 'aire' → logprob: -10.016736030578613

Token 594: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0803020000457764
    2. ' =' → logprob: -1.3303020000457764
    3. '=' → logprob: -2.5803020000457764
    4. ',' → logprob: -3.0803020000457764
    5. '   ' → logprob: -3.0803020000457764
    6. 're' → logprob: -3.2053020000457764
    7. '_num' → logprob: -3.2053020000457764
    8. 'fraction' → logprob: -3.7053020000457764
    9. 'num' → logprob: -3.9553020000457764
    10. ' s' → logprob: -3.9553020000457764

Token 595: ' secondes' (ID: 109098)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.1167978048324585
    2. 'seconds' → logprob: -1.7417978048324585
    3. 'fraction' → logprob: -2.241797924041748
    4. 'la' → logprob: -2.366797924041748
    5. 's' → logprob: -2.741797924041748
    6. 'total' → logprob: -3.116797924041748
    7. ' la' → logprob: -3.366797924041748
    8. 'second' → logprob: -3.616797924041748
    9. ' remainder' → logprob: -3.741797924041748
    10. ' seconds' → logprob: -3.991797924041748

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2995034456253052
    2. '_num' → logprob: -2.7995033264160156
    3. '   ' → logprob: -3.0495033264160156
    4. ' s' → logprob: -3.0495033264160156
    5. 's' → logprob: -4.299503326416016
    6. '=' → logprob: -4.299503326416016
    7. ',' → logprob: -4.424503326416016
    8. '_fraction' → logprob: -4.424503326416016
    9. '_s' → logprob: -4.549503326416016
    10. 'num' → logprob: -4.674503326416016

Token 597: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.03259348124265671
    2. ' remainder' → logprob: -3.6575934886932373
    3. '(re' → logprob: -5.157593250274658
    4. ' (' → logprob: -7.907593250274658
    5. '(' → logprob: -9.657593727111816
    6. 'fraction' → logprob: -10.282593727111816
    7. 'r' → logprob: -11.532593727111816
    8. 'remaining' → logprob: -11.782593727111816
    9. '	re' → logprob: -12.032593727111816
    10. '   ' → logprob: -12.407593727111816

Token 598: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0023015551269054413
    2. '_' → logprob: -6.1273016929626465
    3. '```' → logprob: -10.627301216125488
    4. '_NUM' → logprob: -10.752301216125488
    5. 'num' → logprob: -11.377301216125488
    6. '*' → logprob: -11.377301216125488
    7. 'Num' → logprob: -11.877301216125488
    8. '_den' → logprob: -12.127301216125488
    9. '_,' → logprob: -12.252301216125488
    10. '_n' → logprob: -12.377301216125488

Token 599: ' /' (ID: 820)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.310337632894516
    2. ' *' → logprob: -1.8103376626968384
    3. '*' → logprob: -2.810337543487549
    4. ' ,' → logprob: -3.935337543487549
    5. ' /' → logprob: -4.310337543487549
    6. '/' → logprob: -5.935337543487549
    7. '   ' → logprob: -6.060337543487549
    8. '<|end|>' → logprob: -6.310337543487549
    9. ' ' → logprob: -6.810337543487549
    10. '```' → logprob: -7.435337543487549

Token 600: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.011047814972698689
    2. ' total' → logprob: -4.511047840118408
    3. '(total' → logprob: -18.01104736328125
    4. ',total' → logprob: -19.76104736328125
    5. '_total' → logprob: -20.01104736328125
    6. ' ' → logprob: -20.26104736328125
    7. '	total' → logprob: -20.63604736328125
    8. 'Total' → logprob: -20.76104736328125
    9. '$total' → logprob: -21.13604736328125
    10. 'tot' → logprob: -22.13604736328125

Token 601: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -1.9361264946837764e-07
    2. 'seconds' → logprob: -16.25
    3. '_' → logprob: -17.75
    4. '```' → logprob: -19.125
    5. '_den' → logprob: -19.25
    6. '_SECONDS' → logprob: -19.5
    7. '_second' → logprob: -19.875
    8. '_total' → logprob: -20.625
    9. 'Seconds' → logprob: -20.75
    10. '\' → logprob: -21.125

Token 602: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.001503313542343676
    2. 'den' → logprob: -6.5015034675598145
    3. '_d' → logprob: -14.876502990722656
    4. '_DEN' → logprob: -15.501502990722656
    5. 'Den' → logprob: -16.001502990722656
    6. ' den' → logprob: -16.251502990722656
    7. '_' → logprob: -16.876502990722656
    8. '.den' → logprob: -17.001502990722656
    9. '_del' → logprob: -17.251502990722656
    10. 'd' → logprob: -17.251502990722656

Token 603: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015025680884718895
    2. ',' → logprob: -4.890025615692139
    3. '```' → logprob: -5.640025615692139
    4. 's' → logprob: -7.390025615692139
    5. ' s' → logprob: -8.015026092529297
    6. ' *' → logprob: -8.265026092529297
    7. ' ' → logprob: -8.265026092529297
    8. ' ' → logprob: -8.515026092529297
    9. ' /' → logprob: -8.640026092529297
    10. '    
' → logprob: -8.640026092529297

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0131110530346632
    2. 'return' → logprob: -5.263111114501953
    3. 's' → logprob: -5.388111114501953
    4. ' return' → logprob: -6.388111114501953
    5. ' s' → logprob: -7.138111114501953
    6. '```' → logprob: -8.138111114501953
    7. ',' → logprob: -8.763111114501953
    8. ' ' → logprob: -9.388111114501953
    9. 'n' → logprob: -10.013111114501953
    10. '  ' → logprob: -10.388111114501953

Token 605: ' #' (ID: 1069)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7133787274360657
    2. '   ' → logprob: -1.213378667831421
    3. 's' → logprob: -2.088378667831421
    4. ' return' → logprob: -3.088378667831421
    5. 'return' → logprob: -4.46337890625
    6. ' fraction' → logprob: -5.33837890625
    7. ' numerator' → logprob: -5.33837890625
    8. ' n' → logprob: -5.58837890625
    9. 'fraction' → logprob: -5.83837890625
    10. ' num' → logprob: -6.21337890625

Token 606: ' On' (ID: 2160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03960594907402992
    2. '#' → logprob: -4.164606094360352
    3. 'frac' → logprob: -4.914606094360352
    4. 'n' → logprob: -5.164606094360352
    5. 'num' → logprob: -5.414606094360352
    6. 'if' → logprob: -6.039606094360352
    7. 'return' → logprob: -6.539606094360352
    8. 'fraction' → logprob: -7.414606094360352
    9. '   ' → logprob: -8.414606094360352
    10. 'from' → logprob: -8.664606094360352

Token 607: ' veut' (ID: 41653)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1010435819625854
    2. 'cherche' → logprob: -2.101043701171875
    3. 'return' → logprob: -2.351043701171875
    4. '#' → logprob: -2.476043701171875
    5. 'do' → logprob: -3.101043701171875
    6. 's' → logprob: -3.226043701171875
    7. 'mult' → logprob: -3.226043701171875
    8. ' multipl' → logprob: -3.726043701171875
    9. 'div' → logprob: -3.726043701171875
    10. ' #' → logprob: -3.851043701171875

Token 608: ' s' (ID: 265)
  Prédit: 'simpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simpl' → logprob: -0.09413818269968033
    2. 's' → logprob: -3.2191381454467773
    3. '   ' → logprob: -4.469138145446777
    4. ' simpl' → logprob: -4.969138145446777
    5. 'fraction' → logprob: -5.094138145446777
    6. '(s' → logprob: -5.344138145446777
    7. ' s' → logprob: -5.594138145446777
    8. 'return' → logprob: -5.719138145446777
    9. ' garder' → logprob: -6.469138145446777
    10. ' fraction' → logprob: -6.719138145446777

Token 609: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.003109145909547806
    2. '_n' → logprob: -6.253108978271484
    3. '_wh' → logprob: -7.378108978271484
    4. '_frac' → logprob: -8.628108978271484
    5. '_' → logprob: -8.753108978271484
    6. 'num' → logprob: -9.503108978271484
    7. '_fraction' → logprob: -10.003108978271484
    8. '_nom' → logprob: -10.503108978271484
    9. ',' → logprob: -10.753108978271484
    10. '_,' → logprob: -11.628108978271484

Token 610: '/s' (ID: 5031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39302268624305725
    2. '=' → logprob: -1.2680226564407349
    3. ',' → logprob: -3.1430227756500244
    4. 's' → logprob: -9.018022537231445
    5. ' ,' → logprob: -9.018022537231445
    6. '_' → logprob: -9.768022537231445
    7. '   ' → logprob: -10.018022537231445
    8. '_num' → logprob: -11.143022537231445
    9. ' ' → logprob: -11.643022537231445
    10. '_s' → logprob: -11.643022537231445

Token 611: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.0013797598658129573
    2. 'den' → logprob: -6.75137996673584
    3. '_num' → logprob: -9.12637996673584
    4. '_d' → logprob: -9.87637996673584
    5. '_total' → logprob: -10.25137996673584
    6. '_' → logprob: -11.87637996673584
    7. '_DEN' → logprob: -13.37637996673584
    8. 'd' → logprob: -13.37637996673584
    9. '_dem' → logprob: -14.37637996673584
    10. '_tot' → logprob: -14.50137996673584

Token 612: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.614142656326294
    2. ' =' → logprob: -1.239142656326294
    3. '=' → logprob: -1.864142656326294
    4. ',' → logprob: -5.239142417907715
    5. 's' → logprob: -5.364142417907715
    6. '_s' → logprob: -7.114142417907715
    7. ' s' → logprob: -7.239142417907715
    8. '       ' → logprob: -7.364142417907715
    9. '_' → logprob: -7.739142417907715
    10. '    ' → logprob: -8.489142417907715

Token 613: ' s' (ID: 265)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.04589797556400299
    2. '(re' → logprob: -3.670897960662842
    3. ' remainder' → logprob: -4.045897960662842
    4. 'simpl' → logprob: -6.670897960662842
    5. ' (' → logprob: -8.9208984375
    6. '(s' → logprob: -9.4208984375
    7. 'fraction' → logprob: -9.4208984375
    8. 'remain' → logprob: -9.4208984375
    9. '	re' → logprob: -9.7958984375
    10. '   ' → logprob: -10.1708984375

Token 614: '_wh' (ID: 86186)
  Prédit: '_wh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wh' → logprob: -0.014797619543969631
    2. '_' → logprob: -4.264797687530518
    3. '_den' → logprob: -8.51479721069336
    4. '_num' → logprob: -8.76479721069336
    5. '_re' → logprob: -8.88979721069336
    6. 're' → logprob: -10.76479721069336
    7. 'wh' → logprob: -10.88979721069336
    8. 'whole' → logprob: -11.13979721069336
    9. '_fraction' → logprob: -11.51479721069336
    10. 'den' → logprob: -11.51479721069336

Token 615: 'ole' (ID: 1491)
  Prédit: 'ole'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ole' → logprob: -0.00010044389637187123
    2. '_num' → logprob: -10.250100135803223
    3. 'ol' → logprob: -10.375100135803223
    4. '_' → logprob: -12.000100135803223
    5. 'olen' → logprob: -12.500100135803223
    6. 'ile' → logprob: -12.625100135803223
    7. 'o' → logprob: -12.625100135803223
    8. '```' → logprob: -12.875100135803223
    9. 'olle' → logprob: -13.125100135803223
    10. ',' → logprob: -13.250100135803223

Token 616: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5276241898536682
    2. ' *' → logprob: -1.1526241302490234
    3. ',' → logprob: -2.4026241302490234
    4. '*,' → logprob: -6.277624130249023
    5. ' ,' → logprob: -7.402624130249023
    6. '+' → logprob: -8.027624130249023
    7. '*s' → logprob: -8.152624130249023
    8. ' +' → logprob: -8.277624130249023
    9. '*num' → logprob: -9.402624130249023
    10. '```' → logprob: -10.152624130249023

Token 617: ' fraction' (ID: 33763)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4851418435573578
    2. ' remainder' → logprob: -0.9851418733596802
    3. '(re' → logprob: -4.860141754150391
    4. ' (' → logprob: -6.485141754150391
    5. 'fraction' → logprob: -7.610141754150391
    6. ''' → logprob: -7.985141754150391
    7. ' fraction' → logprob: -8.61014175415039
    8. '(' → logprob: -8.86014175415039
    9. '"' → logprob: -8.98514175415039
    10. ' ' → logprob: -9.48514175415039

Token 618: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07713651657104492
    2. ' ' → logprob: -4.202136516571045
    3. '   ' → logprob: -4.452136516571045
    4. '_num' → logprob: -4.452136516571045
    5. ' _' → logprob: -4.702136516571045
    6. '=' → logprob: -4.952136516571045
    7. ',' → logprob: -5.452136516571045
    8. '_s' → logprob: -5.827136516571045
    9. ' =' → logprob: -6.077136516571045
    10. '+' → logprob: -6.077136516571045

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1417188197374344
    2. 's' → logprob: -2.391718864440918
    3. ',' → logprob: -4.516718864440918
    4. ' s' → logprob: -5.016718864440918
    5. ' ' → logprob: -5.891718864440918
    6. '    ' → logprob: -5.891718864440918
    7. ' =' → logprob: -6.016718864440918
    8. '```' → logprob: -6.016718864440918
    9. '       ' → logprob: -6.141718864440918
    10. '(s' → logprob: -6.266718864440918

Token 620: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.13297982513904572
    2. '   ' → logprob: -2.3829798698425293
    3. ' s' → logprob: -4.257979869842529
    4. 'return' → logprob: -4.757979869842529
    5. 'if' → logprob: -5.757979869842529
    6. ' if' → logprob: -6.757979869842529
    7. '```' → logprob: -7.007979869842529
    8. ',' → logprob: -7.132979869842529
    9. '       ' → logprob: -7.257979869842529
    10. ' return' → logprob: -7.757979869842529

Token 621: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.015245371498167515
    2. '_' → logprob: -4.89024543762207
    3. '_wh' → logprob: -4.89024543762207
    4. '_n' → logprob: -9.89024543762207
    5. 'num' → logprob: -11.51524543762207
    6. ' _' → logprob: -12.14024543762207
    7. '_space' → logprob: -12.26524543762207
    8. '_,' → logprob: -12.39024543762207
    9. '_nom' → logprob: -13.01524543762207
    10. '=' → logprob: -13.51524543762207

Token 622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4288771152496338
    2. '=' → logprob: -1.0538771152496338
    3. ',' → logprob: -8.678876876831055
    4. ' ,' → logprob: -14.053876876831055
    5. ')' → logprob: -14.178876876831055
    6. '<|end|>' → logprob: -14.553876876831055
    7. '=}' → logprob: -14.803876876831055
    8. '=num' → logprob: -14.803876876831055
    9. 's' → logprob: -14.928876876831055
    10. ' ' → logprob: -15.178876876831055

Token 623: ' s' (ID: 265)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.08453826606273651
    2. 's' → logprob: -2.584538221359253
    3. ' remainder' → logprob: -5.334538459777832
    4. '(re' → logprob: -7.959538459777832
    5. ' s' → logprob: -8.334538459777832
    6. 'remaining' → logprob: -10.334538459777832
    7. '   ' → logprob: -10.459538459777832
    8. 'rem' → logprob: -10.584538459777832
    9. 'rema' → logprob: -10.584538459777832
    10. 'rest' → logprob: -10.584538459777832

Token 624: '_wh' (ID: 86186)
  Prédit: '_wh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wh' → logprob: -3.2020991056924686e-05
    2. '_re' → logprob: -11.375032424926758
    3. 'wh' → logprob: -11.625032424926758
    4. '_w' → logprob: -12.500032424926758
    5. 'whole' → logprob: -13.625032424926758
    6. 're' → logprob: -13.625032424926758
    7. '*' → logprob: -13.750032424926758
    8. '_rem' → logprob: -13.875032424926758
    9. '_' → logprob: -14.250032424926758
    10. '+' → logprob: -14.375032424926758

Token 625: 'ole' (ID: 1491)
  Prédit: 'ole'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ole' → logprob: -0.0005096645909361541
    2. 'ol' → logprob: -8.375509262084961
    3. 'ile' → logprob: -8.750509262084961
    4. 'olen' → logprob: -9.875509262084961
    5. 'olle' → logprob: -11.375509262084961
    6. 'olate' → logprob: -11.500509262084961
    7. 'ite' → logprob: -11.875509262084961
    8. '_num' → logprob: -12.125509262084961
    9. 'old' → logprob: -12.125509262084961
    10. '```' → logprob: -12.250509262084961

Token 626: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.313263863325119
    2. ' *' → logprob: -1.3132638931274414
    3. '   ' → logprob: -13.563263893127441
    4. ',' → logprob: -15.188263893127441
    5. ' ' → logprob: -15.563263893127441
    6. ' ' → logprob: -16.063262939453125
    7. '**' → logprob: -16.313262939453125
    8. '*object' → logprob: -16.938262939453125
    9. '*(' → logprob: -17.313262939453125
    10. '*
' → logprob: -17.313262939453125

Token 627: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -5.836499985889532e-05
    2. ' total' → logprob: -9.7500581741333
    3. '(total' → logprob: -20.125059127807617
    4. '   ' → logprob: -21.000059127807617
    5. '	total' → logprob: -21.250059127807617
    6. ' ' → logprob: -22.250059127807617
    7. '$total' → logprob: -22.500059127807617
    8. 'Total' → logprob: -22.625059127807617
    9. '_total' → logprob: -22.875059127807617
    10. '.total' → logprob: -23.375059127807617

Token 628: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -1.9361264946837764e-07
    2. '_den' → logprob: -17.0
    3. 'seconds' → logprob: -18.375
    4. '_total' → logprob: -18.875
    5. '_times' → logprob: -19.0
    6. '_' → logprob: -19.25
    7. '_SECONDS' → logprob: -19.25
    8. '_results' → logprob: -19.625
    9. '```' → logprob: -20.0
    10. '_minutes' → logprob: -20.125

Token 629: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -5.512236498361744e-07
    2. 'den' → logprob: -16.0
    3. '_def' → logprob: -16.125
    4. '_d' → logprob: -16.125
    5. '_des' → logprob: -16.875
    6. '_dem' → logprob: -17.375
    7. '_del' → logprob: -17.625
    8. '_DEN' → logprob: -17.75
    9. '_num' → logprob: -18.125
    10. '_dec' → logprob: -18.625

Token 630: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022798418998718
    2. '+' → logprob: -1.9102280139923096
    3. ' plus' → logprob: -13.66022777557373
    4. ' ' → logprob: -13.66022777557373
    5. ' ' → logprob: -14.41022777557373
    6. '<|end|>' → logprob: -15.03522777557373
    7. ' +
' → logprob: -15.28522777557373
    8. 'plus' → logprob: -16.410228729248047
    9. ' +
' → logprob: -16.535228729248047
    10. '+xml' → logprob: -17.035228729248047

Token 631: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.10020796209573746
    2. 're' → logprob: -2.350208044052124
    3. 'rest' → logprob: -14.850208282470703
    4. '	re' → logprob: -15.100208282470703
    5. ' re' → logprob: -15.225208282470703
    6. 'rem' → logprob: -15.850208282470703
    7. ' ' → logprob: -16.100208282470703
    8. 'remain' → logprob: -17.225208282470703
    9. ' ' → logprob: -17.350208282470703
    10. 'rema' → logprob: -17.350208282470703

Token 632: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.9361264946837764e-07
    2. 'num' → logprob: -15.875
    3. ' _' → logprob: -17.5
    4. 'Num' → logprob: -18.0
    5. '```' → logprob: -18.0
    6. '_NUM' → logprob: -18.25
    7. '​' → logprob: -18.875
    8. '[' → logprob: -19.125
    9. '_den' → logprob: -19.625
    10. '_' → logprob: -19.75

Token 633: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07384900003671646
    2. ',' → logprob: -2.9488489627838135
    3. '
' → logprob: -5.323849201202393
    4. ' s' → logprob: -5.698849201202393
    5. ' ' → logprob: -5.948849201202393
    6. '<|end|>' → logprob: -5.948849201202393
    7. ' return' → logprob: -6.573849201202393
    8. 's' → logprob: -7.198849201202393
    9. '       ' → logprob: -7.198849201202393
    10. ',
' → logprob: -7.698849201202393

Token 634: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06918461620807648
    2. ' s' → logprob: -3.0691845417022705
    3. ',' → logprob: -3.9441845417022705
    4. '   ' → logprob: -7.44418478012085
    5. ',s' → logprob: -8.069184303283691
    6. ' ,' → logprob: -9.444184303283691
    7. '	s' → logprob: -10.694184303283691
    8. ' ' → logprob: -11.819184303283691
    9. ',
' → logprob: -12.569184303283691
    10. 'return' → logprob: -12.694184303283691

Token 635: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0025348791386932135
    2. ' s' → logprob: -6.002534866333008
    3. 'return' → logprob: -10.127534866333008
    4. '   ' → logprob: -11.002534866333008
    5. ' return' → logprob: -13.252534866333008
    6. ',' → logprob: -14.627534866333008
    7. ' ' → logprob: -16.002534866333008
    8. '```' → logprob: -16.127534866333008
    9. '_s' → logprob: -17.252534866333008
    10. '       ' → logprob: -17.502534866333008

Token 636: '_den' (ID: 145579)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.013309870846569538
    2. '_' → logprob: -4.388309955596924
    3. '_den' → logprob: -7.388309955596924
    4. '_,' → logprob: -10.263309478759766
    5. ' _' → logprob: -10.263309478759766
    6. ',' → logprob: -11.013309478759766
    7. ',_' → logprob: -11.013309478759766
    8. '_n' → logprob: -11.888309478759766
    9. '_des' → logprob: -12.013309478759766
    10. '_total' → logprob: -12.263309478759766

Token 637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. ',' → logprob: -15.913042068481445
    4. '＝' → logprob: -17.288042068481445
    5. '=}' → logprob: -17.913042068481445
    6. '=int' → logprob: -19.163042068481445
    7. ')' → logprob: -19.288042068481445
    8. '=
' → logprob: -19.413042068481445
    9. '=

' → logprob: -19.788042068481445
    10. 's' → logprob: -20.788042068481445

Token 638: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0002613358374219388
    2. ' total' → logprob: -8.250261306762695
    3. '(total' → logprob: -23.250261306762695
    4. 'tot' → logprob: -23.875261306762695
    5. '	total' → logprob: -24.500261306762695
    6. 'Total' → logprob: -24.625261306762695
    7. '_total' → logprob: -25.750261306762695
    8. '$total' → logprob: -25.875261306762695
    9. 't' → logprob: -26.125261306762695
    10. ' ' → logprob: -26.125261306762695

Token 639: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: 0.0
    2. 'seconds' → logprob: -17.125
    3. '_SECONDS' → logprob: -19.25
    4. 'Seconds' → logprob: -19.375
    5. '_second' → logprob: -20.125
    6. '```' → logprob: -20.875
    7. 's' → logprob: -21.0
    8. '_segments' → logprob: -21.0
    9. '_s' → logprob: -21.375
    10. '_' → logprob: -21.75

Token 640: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.0002619318547658622
    2. 'den' → logprob: -8.250262260437012
    3. '_d' → logprob: -14.875262260437012
    4. 'Den' → logprob: -15.625262260437012
    5. '_num' → logprob: -16.375261306762695
    6. '_def' → logprob: -17.125261306762695
    7. '_DEN' → logprob: -17.250261306762695
    8. '_des' → logprob: -17.500261306762695
    9. '.den' → logprob: -18.000261306762695
    10. '_del' → logprob: -18.000261306762695

Token 641: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007393414154648781
    2. '
' → logprob: -5.1323933601379395
    3. 'return' → logprob: -7.6323933601379395
    4. '<|end|>' → logprob: -8.007393836975098
    5. '	return' → logprob: -8.132393836975098
    6. ' return' → logprob: -8.507393836975098
    7. '    
' → logprob: -9.382393836975098
    8. ',' → logprob: -11.257393836975098
    9. '	
' → logprob: -11.382393836975098
    10. '
' → logprob: -11.882393836975098

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0775279775261879
    2. 'return' → logprob: -2.7025279998779297
    3. 's' → logprob: -5.45252799987793
    4. ' return' → logprob: -5.82752799987793
    5. 'n' → logprob: -8.70252799987793
    6. ' s' → logprob: -8.82752799987793
    7. '	return' → logprob: -12.20252799987793
    8. ' ' → logprob: -12.82752799987793
    9. '    
' → logprob: -13.20252799987793
    10. '  ' → logprob: -13.32752799987793

Token 643: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12602880597114563
    2. '   ' → logprob: -2.8760287761688232
    3. 'return' → logprob: -3.6260287761688232
    4. ' s' → logprob: -3.7510287761688232
    5. ' return' → logprob: -4.501029014587402
    6. 'n' → logprob: -7.376029014587402
    7. ' ' → logprob: -9.876029014587402
    8. '#' (adapté à ' #') → logprob: -10.001029014587402
    9. ' n' → logprob: -10.126029014587402
    10. '  ' → logprob: -10.876029014587402

Token 644: ' simpl' (ID: 15693)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23143498599529266
    2. 'return' → logprob: -1.606434941291809
    3. ' return' → logprob: -5.6064348220825195
    4. 'n' → logprob: -6.6064348220825195
    5. ' s' → logprob: -7.1064348220825195
    6. '   ' → logprob: -10.23143482208252
    7. 'num' → logprob: -10.60643482208252
    8. 'simpl' → logprob: -10.60643482208252
    9. '#' → logprob: -10.73143482208252
    10. '(s' → logprob: -10.85643482208252

Token 645: 'ification' (ID: 3166)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.01130068488419056
    2. 'ifier' → logprob: -4.636300563812256
    3. 'if' → logprob: -7.136300563812256
    4. 'ifie' → logprob: -7.386300563812256
    5. 'ifiez' → logprob: -9.886301040649414
    6. 'ified' → logprob: -10.136301040649414
    7. 'ifye' → logprob: -10.761301040649414
    8. 'ifies' → logprob: -11.511301040649414
    9. 'ifié' → logprob: -12.636301040649414
    10. 'ification' → logprob: -14.636301040649414

Token 646: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19594642519950867
    2. '   ' → logprob: -2.445946455001831
    3. ',' → logprob: -2.945946455001831
    4. 'return' → logprob: -4.070946216583252
    5. ' s' → logprob: -4.570946216583252
    6. '
' → logprob: -5.570946216583252
    7. ' return' → logprob: -5.695946216583252
    8. ',
' → logprob: -7.195946216583252
    9. '```' → logprob: -7.320946216583252
    10. '<|end|>' → logprob: -7.320946216583252

Token 647: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21056151390075684
    2. ' s' → logprob: -1.7105615139007568
    3. '(s' → logprob: -4.710561752319336
    4. ' (' → logprob: -9.335561752319336
    5. '_s' → logprob: -11.585561752319336
    6. '(' → logprob: -12.335561752319336
    7. ' =' → logprob: -14.210561752319336
    8. ',' → logprob: -14.335561752319336
    9. '	s' → logprob: -14.460561752319336
    10. '<|end|>' → logprob: -15.085561752319336

Token 648: ' fraction' (ID: 33763)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008104694075882435
    2. '(s' → logprob: -5.3831048011779785
    3. ' s' → logprob: -5.8831048011779785
    4. 'return' → logprob: -7.6331048011779785
    5. ',' → logprob: -10.13310432434082
    6. ' return' → logprob: -10.13310432434082
    7. '_s' → logprob: -10.38310432434082
    8. '(' → logprob: -10.75810432434082
    9. 'num' → logprob: -11.00810432434082
    10. 'fraction' → logprob: -11.00810432434082

Token 649: ' secondes' (ID: 109098)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2077074497938156
    2. '   ' → logprob: -1.957707405090332
    3. ' s' → logprob: -3.082707405090332
    4. ',' → logprob: -8.582707405090332
    5. 'return' → logprob: -8.707707405090332
    6. ' return' → logprob: -9.707707405090332
    7. '(s' → logprob: -10.332707405090332
    8. '`s' → logprob: -10.582707405090332
    9. ' ' → logprob: -11.082707405090332
    10. '	s' → logprob: -11.207707405090332

Token 650: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5124095678329468
    2. '   ' → logprob: -1.0124095678329468
    3. ',' → logprob: -4.012409687042236
    4. ' s' → logprob: -4.387409687042236
    5. 'return' → logprob: -5.887409687042236
    6. '
' → logprob: -6.262409687042236
    7. ' return' → logprob: -7.262409687042236
    8. ',
' → logprob: -7.512409687042236
    9. ' ,' → logprob: -8.512409210205078
    10. ' ' → logprob: -8.887409210205078

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018960997462272644
    2. 's' → logprob: -4.018960952758789
    3. ' s' → logprob: -7.143960952758789
    4. 'return' → logprob: -12.143960952758789
    5. ',' → logprob: -12.268960952758789
    6. '`s' → logprob: -12.893960952758789
    7. '	s' → logprob: -13.018960952758789
    8. '```' → logprob: -13.518960952758789
    9. '(s' → logprob: -13.643960952758789
    10. '_s' → logprob: -13.893960952758789

Token 652: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.00045677117304876447
    2. 'return' → logprob: -7.875456809997559
    3. ' s' → logprob: -9.750456809997559
    4. '   ' → logprob: -11.250456809997559
    5. '`s' → logprob: -12.750456809997559
    6. ' return' → logprob: -13.500456809997559
    7. '(s' → logprob: -14.375456809997559
    8. '```' → logprob: -14.875456809997559
    9. '	s' → logprob: -17.625455856323242
    10. '
' → logprob: -18.000455856323242

Token 653: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00015419373812619597
    2. 'num' → logprob: -9.125154495239258
    3. '_' → logprob: -10.750154495239258
    4. '_n' → logprob: -11.000154495239258
    5. '_,' → logprob: -13.500154495239258
    6. ',' → logprob: -13.625154495239258
    7. 'n' → logprob: -13.875154495239258
    8. 's' → logprob: -14.375154495239258
    9. '_NUM' → logprob: -15.000154495239258
    10. 'Num' → logprob: -15.125154495239258

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ',s' → logprob: -10.625041007995605
    3. '=' → logprob: -11.125041007995605
    4. 's' → logprob: -13.750041007995605
    5. ' ,' → logprob: -14.500041007995605
    6. '‌,' → logprob: -15.125041007995605
    7. ',
' → logprob: -15.875041007995605
    8. '_,' → logprob: -17.250041961669922
    9. ',\
' → logprob: -17.250041961669922
    10. ',user' → logprob: -17.625041961669922

Token 655: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01416350994259119
    2. ' s' → logprob: -4.264163494110107
    3. '	s' → logprob: -19.139163970947266
    4. '_s' → logprob: -19.514163970947266
    5. ' ' → logprob: -19.639163970947266
    6. ' ' → logprob: -20.889163970947266
    7. '  ' → logprob: -22.389163970947266
    8. '   ' → logprob: -22.514163970947266
    9. '    ' → logprob: -22.514163970947266
    10. '`s' → logprob: -22.639163970947266

Token 656: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -4.3822154111694545e-05
    2. 'den' → logprob: -10.625043869018555
    3. '_num' → logprob: -10.875043869018555
    4. '_DEN' → logprob: -15.125043869018555
    5. 'Den' → logprob: -16.125043869018555
    6. '.den' → logprob: -17.375043869018555
    7. '_dem' → logprob: -17.500043869018555
    8. '_def' → logprob: -17.750043869018555
    9. ' den' → logprob: -17.875043869018555
    10. '_des' → logprob: -18.250043869018555

Token 657: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00038038729690015316
    2. ' =' → logprob: -7.875380516052246
    3. '=s' → logprob: -16.50037956237793
    4. ',' → logprob: -16.50037956237793
    5. '=}' → logprob: -17.37537956237793
    6. '=
' → logprob: -18.12537956237793
    7. '=

' → logprob: -18.37537956237793
    8. '.=' → logprob: -18.50037956237793
    9. '<|end|>' → logprob: -18.75037956237793
    10. '＝' → logprob: -19.37537956237793

Token 658: ' simplify' (ID: 66240)
  Prédit: 'simpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simpl' → logprob: -2.15310683415737e-05
    2. ' simplify' → logprob: -10.750021934509277
    3. 'simple' → logprob: -17.25002098083496
    4. 'simp' → logprob: -18.25002098083496
    5. 'Simpl' → logprob: -19.50002098083496
    6. 's' → logprob: -20.87502098083496
    7. ' simpl' → logprob: -22.50002098083496
    8. ' simplified' → logprob: -22.62502098083496
    9. '(s' → logprob: -22.62502098083496
    10. '   ' → logprob: -22.62502098083496

Token 659: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -7.896309739408025e-07
    2. 'fraction' → logprob: -14.250000953674316
    3. 's' → logprob: -18.625
    4. 'Fraction' → logprob: -19.125
    5. '_' → logprob: -19.125
    6. '\' → logprob: -20.875
    7. '_frequency' → logprob: -21.0
    8. '_fragment' → logprob: -21.25
    9. '(s' → logprob: -21.375
    10. '_frac' → logprob: -21.875

Token 660: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.73052782076411e-05
    2. '(' → logprob: -9.625067710876465
    3. ' (' → logprob: -14.375067710876465
    4. 's' → logprob: -14.750067710876465
    5. '(
' → logprob: -15.750067710876465
    6. ' s' → logprob: -19.62506675720215
    7. ')' → logprob: -22.00006675720215
    8. '(

' → logprob: -22.00006675720215
    9. '((' → logprob: -22.25006675720215
    10. '(S' → logprob: -22.37506675720215

Token 661: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00017076305812224746
    2. 'um' → logprob: -8.875170707702637
    3. 'num' → logprob: -10.500170707702637
    4. 'u' → logprob: -13.375170707702637
    5. '_' → logprob: -14.000170707702637
    6. '_um' → logprob: -15.500170707702637
    7. '_NUM' → logprob: -15.875170707702637
    8. 'umer' → logprob: -16.250171661376953
    9. 'm' → logprob: -16.250171661376953
    10. 's' → logprob: -16.375171661376953

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034774013329297304
    2. ',s' → logprob: -8.000348091125488
    3. ' ,' → logprob: -11.375348091125488
    4. ',
' → logprob: -14.875348091125488
    5. 's' → logprob: -14.875348091125488
    6. ' s' → logprob: -16.750347137451172
    7. '‌,' → logprob: -17.750347137451172
    8. ')' → logprob: -17.875347137451172
    9. ',\
' → logprob: -18.875347137451172
    10. ',

' → logprob: -19.375347137451172

Token 663: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.157039049663581e-05
    2. ' s' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.750051498413086
    4. '	s' → logprob: -20.875051498413086
    5. ' ' → logprob: -21.125051498413086
    6. '
' → logprob: -22.375051498413086
    7. ')' → logprob: -22.500051498413086
    8. '  ' → logprob: -22.500051498413086
    9. ' ' → logprob: -22.500051498413086
    10. '```' → logprob: -22.625051498413086

Token 664: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.029756737872958183
    2. 'den' → logprob: -3.529756784439087
    3. '_num' → logprob: -12.154756546020508
    4. 'Den' → logprob: -14.529756546020508
    5. 'num' → logprob: -15.279756546020508
    6. '_d' → logprob: -16.279756546020508
    7. 'd' → logprob: -16.404756546020508
    8. '_DEN' → logprob: -16.779756546020508
    9. 's' → logprob: -17.029756546020508
    10. '-den' → logprob: -17.404756546020508

Token 665: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013738969573751092
    2. '   ' → logprob: -9.375137329101562
    3. ')
' → logprob: -9.875137329101562
    4. ')return' → logprob: -14.375137329101562
    5. ' )' → logprob: -14.625137329101562
    6. ' ' → logprob: -16.875137329101562
    7. ')
' → logprob: -17.375137329101562
    8. 'return' → logprob: -17.625137329101562
    9. '),' → logprob: -17.875137329101562
    10. ',' → logprob: -18.375137329101562

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026336227892898023
    2. 'return' → logprob: -8.625263214111328
    3. ' return' → logprob: -9.625263214111328
    4. '	return' → logprob: -11.125263214111328
    5. '```' → logprob: -13.500263214111328
    6. '    
' → logprob: -14.375263214111328
    7. '
' → logprob: -14.750263214111328
    8. '<|end|>' → logprob: -15.000263214111328
    9. '   ' → logprob: -15.875263214111328
    10. '       ' → logprob: -16.000263214111328

Token 667: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20146596431732178
    2. '   ' → logprob: -1.7014659643173218
    3. ' return' → logprob: -9.951465606689453
    4. '	return' → logprob: -12.326465606689453
    5. '```' → logprob: -15.826465606689453
    6. '    
' → logprob: -15.951465606689453
    7. ' ' → logprob: -15.951465606689453
    8. '{return' → logprob: -17.201465606689453
    9. ':return' → logprob: -17.451465606689453
    10. 'eturn' → logprob: -18.076465606689453

Token 668: ' si' (ID: 1784)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -6.2729995988775045e-06
    2. ' return' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.500006675720215
    4. ' ' → logprob: -19.5000057220459
    5. '	return' → logprob: -20.0000057220459
    6. '    
' → logprob: -20.8750057220459
    7. '#' → logprob: -21.1250057220459
    8. '```' → logprob: -22.2500057220459
    9. 'def' → logprob: -22.3750057220459
    10. '{return' → logprob: -22.8750057220459

Token 669: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16022644937038422
    2. 's' → logprob: -1.9102264642715454
    3. '(s' → logprob: -13.660226821899414
    4. ' ' → logprob: -14.535226821899414
    5. 'm' → logprob: -15.910226821899414
    6. ' ' → logprob: -16.035226821899414
    7. '   ' → logprob: -16.410226821899414
    8. '	s' → logprob: -16.785226821899414
    9. ' (' → logprob: -16.910226821899414
    10. '(' → logprob: -17.035226821899414

Token 670: ' fraction' (ID: 33763)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6972177028656006
    2. ' s' → logprob: -1.4472177028656006
    3. '_num' → logprob: -1.5722177028656006
    4. 'num' → logprob: -2.9472177028656006
    5. ' num' → logprob: -5.94721794128418
    6. 'den' → logprob: -6.32221794128418
    7. '_den' → logprob: -7.19721794128418
    8. 'numer' → logprob: -7.57221794128418
    9. 'Num' → logprob: -8.19721794128418
    10. 'fraction' → logprob: -8.82221794128418

Token 671: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4402593970298767
    2. ' s' → logprob: -1.0652594566345215
    3. ' secondes' → logprob: -5.6902594566345215
    4. '<|end|>' → logprob: -6.8152594566345215
    5. ' seconds' → logprob: -7.0652594566345215
    6. '_seconds' → logprob: -7.0652594566345215
    7. ' des' → logprob: -7.1902594566345215
    8. 'seconds' → logprob: -7.4402594566345215
    9. ' seconde' → logprob: -7.4402594566345215
    10. ' >=' → logprob: -7.6902594566345215

Token 672: ' entière' (ID: 61583)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.19448119401931763
    2. 'ég' → logprob: -1.8194811344146729
    3. '1' → logprob: -5.444481372833252
    4. 'eg' → logprob: -6.069481372833252
    5. 'sup' → logprob: -6.694481372833252
    6. 'strict' → logprob: -6.944481372833252
    7. ' ' → logprob: -7.194481372833252
    8. 'égal' → logprob: -7.194481372833252
    9. 'incorrect' → logprob: -7.194481372833252
    10. 'n' → logprob: -7.194481372833252

Token 673: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5242857933044434
    2. '   ' → logprob: -1.2742857933044434
    3. ' and' → logprob: -2.3992857933044434
    4. ',' → logprob: -4.024285793304443
    5. 'and' → logprob: -4.774285793304443
    6. ' :' → logprob: -5.649285793304443
    7. 'if' → logprob: -6.649285793304443
    8. ' if' → logprob: -6.774285793304443
    9. 's' → logprob: -7.024285793304443
    10. '       ' → logprob: -7.149285793304443

Token 674: 'd' (ID: 67)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07889056205749512
    2. ' s' → logprob: -2.578890562057495
    3. ')' → logprob: -15.453890800476074
    4. ' ' → logprob: -15.453890800476074
    5. '   ' → logprob: -15.578890800476074
    6. '(s' → logprob: -16.453889846801758
    7. '  ' → logprob: -16.453889846801758
    8. ' ' → logprob: -16.953889846801758
    9. ')s' → logprob: -17.328889846801758
    10. '
' → logprob: -17.453889846801758

Token 675: '=' (ID: 28)
  Prédit: 'enom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enom' → logprob: -0.9952290654182434
    2. 'iv' → logprob: -1.2452290058135986
    3. 's' → logprob: -1.6202290058135986
    4. '=' → logprob: -3.3702290058135986
    5. 'ans' → logprob: -3.7452290058135986
    6. '=s' → logprob: -4.370229244232178
    7. 'énom' → logprob: -4.495229244232178
    8. 'e' → logprob: -4.995229244232178
    9. '==' → logprob: -5.245229244232178
    10. ' s' → logprob: -5.370229244232178

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '=' → logprob: -14.62501049041748
    4. 's' → logprob: -17.250011444091797
    5. ' =' → logprob: -18.875011444091797
    6. ' ' → logprob: -19.500011444091797
    7. ' s' → logprob: -19.875011444091797
    8. '==' → logprob: -20.125011444091797
    9. '```' → logprob: -20.500011444091797
    10. ' ==' → logprob: -20.625011444091797

Token 677: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6808059811592102
    2. ')' → logprob: -0.8058059811592102
    3. '),' → logprob: -3.4308059215545654
    4. ' and' → logprob: -5.0558061599731445
    5. 'and' → logprob: -6.0558061599731445
    6. '):
' → logprob: -6.1808061599731445
    7. ':' → logprob: -6.3058061599731445
    8. ',' → logprob: -6.3058061599731445
    9. ' or' → logprob: -9.555806159973145
    10. '   ' → logprob: -9.805806159973145

Token 678: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.33621710538864136
    2. 'return' → logprob: -1.5862171649932861
    3. '   ' → logprob: -3.086217164993286
    4. ' s' → logprob: -3.836217164993286
    5. ' m' → logprob: -5.336216926574707
    6. '       ' → logprob: -5.961216926574707
    7. 'm' → logprob: -5.961216926574707
    8. 's' → logprob: -6.836216926574707
    9. ' h' → logprob: -7.086216926574707
    10. '	return' → logprob: -7.211216926574707

Token 679: ' représente' (ID: 88912)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41857561469078064
    2. 'return' → logprob: -1.543575644493103
    3. '   ' → logprob: -2.1685755252838135
    4. ' s' → logprob: -4.918575763702393
    5. 's' → logprob: -6.293575763702393
    6. 'm' → logprob: -7.043575763702393
    7. '       ' → logprob: -7.168575763702393
    8. ' pass' → logprob: -7.168575763702393
    9. ' m' → logprob: -7.793575763702393
    10. '#' → logprob: -7.918575763702393

Token 680: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36058318614959717
    2. 'h' → logprob: -1.2355831861495972
    3. '(h' → logprob: -5.485583305358887
    4. ' s' → logprob: -6.110583305358887
    5. '   ' → logprob: -6.235583305358887
    6. '(s' → logprob: -6.485583305358887
    7. 'return' → logprob: -6.735583305358887
    8. '(' → logprob: -7.860583305358887
    9. ' h' → logprob: -7.985583305358887
    10. ',' → logprob: -9.735583305358887

Token 681: ' secondes' (ID: 109098)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.066175676882267
    2. 'seconds' → logprob: -3.691175699234009
    3. 'second' → logprob: -3.691175699234009
    4. ' secondes' → logprob: -5.44117546081543
    5. 'h' → logprob: -5.81617546081543
    6. ' s' → logprob: -5.94117546081543
    7. 'he' → logprob: -6.31617546081543
    8. 'num' → logprob: -6.81617546081543
    9. 'fraction' → logprob: -7.94117546081543
    10. 'se' → logprob: -8.44117546081543

Token 682: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44226542115211487
    2. '=' → logprob: -1.5672653913497925
    3. ' =' → logprob: -2.692265510559082
    4. 's' → logprob: -3.067265510559082
    5. ' s' → logprob: -4.692265510559082
    6. ' ,' → logprob: -4.942265510559082
    7. 'return' → logprob: -5.067265510559082
    8. '   ' → logprob: -5.442265510559082
    9. 'if' → logprob: -6.067265510559082
    10. ' return' → logprob: -7.567265510559082

Token 683: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019523027585819364
    2. ' s' → logprob: -6.251952171325684
    3. '(s' → logprob: -10.876952171325684
    4. 'int' → logprob: -12.876952171325684
    5. '   ' → logprob: -14.251952171325684
    6. ' (' → logprob: -15.251952171325684
    7. '{s' → logprob: -15.251952171325684
    8. ' ' → logprob: -15.376952171325684
    9. 'str' → logprob: -15.626952171325684
    10. '(' → logprob: -15.626952171325684

Token 684: '=s' (ID: 32455)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.05326379835605621
    2. 'one' → logprob: -3.5532639026641846
    3. 's' → logprob: -4.5532636642456055
    4. 'u' → logprob: -6.3032636642456055
    5. '0' → logprob: -6.5532636642456055
    6. ' ' → logprob: -6.8032636642456055
    7. ',' → logprob: -6.9282636642456055
    8. '```' → logprob: -7.0532636642456055
    9. 'umbe' → logprob: -7.1782636642456055
    10. 'ull' → logprob: -7.1782636642456055

Token 685: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.06449459493160248
    2. 'um' → logprob: -2.8144946098327637
    3. '_um' → logprob: -6.814494609832764
    4. '_' → logprob: -7.439494609832764
    5. 'u' → logprob: -7.814494609832764
    6. '=' → logprob: -9.064494132995605
    7. ',' → logprob: -9.064494132995605
    8. ' =' → logprob: -10.314494132995605
    9. 'umerator' → logprob: -10.564494132995605
    10. '=_' → logprob: -10.939494132995605

Token 686: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009487013332545757
    2. '   ' → logprob: -6.009487152099609
    3. ',
' → logprob: -6.384487152099609
    4. ' if' → logprob: -6.759487152099609
    5. ' ,' → logprob: -6.884487152099609
    6. ',s' → logprob: -6.884487152099609
    7. '<|end|>' → logprob: -8.00948715209961
    8. ',num' → logprob: -8.38448715209961
    9. 'if' → logprob: -8.50948715209961
    10. ',n' → logprob: -8.50948715209961

Token 687: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.041828516870737076
    2. 's' → logprob: -3.4168286323547363
    3. '0' → logprob: -4.916828632354736
    4. ' d' → logprob: -8.041828155517578
    5. 'n' → logprob: -8.666828155517578
    6. '1' → logprob: -9.041828155517578
    7. 'm' → logprob: -9.291828155517578
    8. ' s' → logprob: -10.166828155517578
    9. ' ' → logprob: -10.166828155517578
    10. '   ' → logprob: -12.041828155517578

Token 688: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00011534435179783031
    2. '=None' → logprob: -9.125115394592285
    3. ' =' → logprob: -12.125115394592285
    4. '1' → logprob: -14.250115394592285
    5. '=-' → logprob: -16.25011444091797
    6. '=s' → logprob: -16.62511444091797
    7. '=
' → logprob: -16.62511444091797
    8. '=

' → logprob: -17.12511444091797
    9. '=False' → logprob: -17.50011444091797
    10. 'None' → logprob: -17.62511444091797

Token 689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013552368618547916
    2. 's' → logprob: -6.626355171203613
    3. '0' → logprob: -10.876355171203613
    4. 'None' → logprob: -12.126355171203613
    5. ' ' → logprob: -13.126355171203613
    6. '=' → logprob: -13.251355171203613
    7. '=s' → logprob: -15.251355171203613
    8. ' s' → logprob: -15.751355171203613
    9. '-' → logprob: -16.12635612487793
    10. '"s' → logprob: -16.12635612487793

Token 690: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008684676722623408
    2. 'return' → logprob: -7.375868320465088
    3. '       ' → logprob: -9.250868797302246
    4. ' return' → logprob: -9.875868797302246
    5. 'if' → logprob: -10.750868797302246
    6. ',' → logprob: -10.875868797302246
    7. '
' → logprob: -10.875868797302246
    8. '    
' → logprob: -11.250868797302246
    9. 'n' → logprob: -11.875868797302246
    10. ' if' → logprob: -12.250868797302246

Token 691: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008464370621368289
    2. ' return' → logprob: -7.6258463859558105
    3. 'return' → logprob: -8.000846862792969
    4. '       ' → logprob: -11.750846862792969
    5. ' n' → logprob: -12.500846862792969
    6. ' if' → logprob: -12.500846862792969
    7. 'n' → logprob: -12.750846862792969
    8. '	return' → logprob: -13.250846862792969
    9. 'if' → logprob: -13.625846862792969
    10. '    ' → logprob: -14.375846862792969

Token 692: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8377231955528259
    2. 'return' (adapté à ' return') → logprob: -0.9627231955528259
    3. 'n' → logprob: -1.9627232551574707
    4. ' return' → logprob: -3.2127232551574707
    5. ' n' → logprob: -5.462723255157471
    6. 'if' → logprob: -8.087722778320312
    7. ' ' → logprob: -9.837722778320312
    8. ' if' → logprob: -10.337722778320312
    9. 'h' → logprob: -10.587722778320312
    10. '	return' → logprob: -10.587722778320312

Token 693: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0017138548428192735
    2. '(h' → logprob: -6.376713752746582
    3. ' h' → logprob: -11.501713752746582
    4. '   ' → logprob: -14.251713752746582
    5. ' (' → logprob: -14.251713752746582
    6. '[h' → logprob: -16.0017147064209
    7. '(' → logprob: -16.5017147064209
    8. '	h' → logprob: -17.7517147064209
    9. '<h' → logprob: -18.5017147064209
    10. '  ' → logprob: -18.5017147064209

Token 694: ',' (ID: 11)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.38918501138687134
    2. ',' → logprob: -1.1391849517822266
    3. ',m' → logprob: -6.264184951782227
    4. ' m' → logprob: -8.014184951782227
    5. ' ,' → logprob: -9.764184951782227
    6. '   ' → logprob: -11.264184951782227
    7. ',
' → logprob: -12.389184951782227
    8. ',\
' → logprob: -14.514184951782227
    9. '	m' → logprob: -14.889184951782227
    10. '(m' → logprob: -14.889184951782227

Token 695: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.941850526549388e-06
    2. ' m' → logprob: -11.750007629394531
    3. '	m' → logprob: -21.75000762939453
    4. '   ' → logprob: -23.12500762939453
    5. ' ' → logprob: -23.37500762939453
    6. '
' → logprob: -24.12500762939453
    7. '<|end|>' → logprob: -24.37500762939453
    8. 'м' → logprob: -24.62500762939453
    9. '#m' → logprob: -24.62500762939453
    10. '```' → logprob: -24.75000762939453

Token 696: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00562240881845355
    2. ' s' → logprob: -5.255622386932373
    3. ',' → logprob: -7.880622386932373
    4. ',s' → logprob: -12.505622863769531
    5. '   ' → logprob: -12.505622863769531
    6. ' ,' → logprob: -13.880622863769531
    7. '0' → logprob: -14.130622863769531
    8. ' ' → logprob: -14.880622863769531
    9. '  ' → logprob: -15.130622863769531
    10. '`s' → logprob: -15.380622863769531

Token 697: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9027791495318525e-05
    2. ' s' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.125019073486328
    4. '(s' → logprob: -19.125019073486328
    5. '	s' → logprob: -20.625019073486328
    6. '{s' → logprob: -20.625019073486328
    7. ' ' → logprob: -21.000019073486328
    8. '`s' → logprob: -21.000019073486328
    9. '  ' → logprob: -21.750019073486328
    10. '```' → logprob: -22.125019073486328

Token 698: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -5.133198283147067e-05
    2. ',' → logprob: -10.750051498413086
    3. 'num' → logprob: -10.750051498413086
    4. ',_' → logprob: -12.500051498413086
    5. ',num' → logprob: -12.625051498413086
    6. '_,' → logprob: -14.000051498413086
    7. '```' → logprob: -16.375051498413086
    8. '_' → logprob: -16.375051498413086
    9. ' _' → logprob: -16.625051498413086
    10. '_n' → logprob: -16.625051498413086

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07985680550336838
    2. 's' → logprob: -2.5798568725585938
    3. ' ,' → logprob: -7.704856872558594
    4. ' s' → logprob: -8.204856872558594
    5. ',s' → logprob: -8.329856872558594
    6. '_,' → logprob: -13.954856872558594
    7. ' ' → logprob: -15.829856872558594
    8. ',
' → logprob: -16.704856872558594
    9. '_s' → logprob: -16.829856872558594
    10. '​' → logprob: -16.954856872558594

Token 700: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.246537173457909e-06
    2. ' s' → logprob: -12.375003814697266
    3. '_s' → logprob: -22.250003814697266
    4. '	s' → logprob: -22.500003814697266
    5. '   ' → logprob: -23.250003814697266
    6. '1' → logprob: -23.250003814697266
    7. '`s' → logprob: -23.750003814697266
    8. '(s' → logprob: -23.875003814697266
    9. ' ' → logprob: -24.000003814697266
    10. '{s' → logprob: -24.250003814697266

Token 701: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -6.153795766294934e-06
    2. 'den' → logprob: -13.000005722045898
    3. '_d' → logprob: -13.375005722045898
    4. '_num' → logprob: -14.000005722045898
    5. 'd' → logprob: -14.625005722045898
    6. '_de' → logprob: -15.125005722045898
    7. 'Den' → logprob: -15.375005722045898
    8. '_DEN' → logprob: -15.375005722045898
    9. '_def' → logprob: -15.875005722045898
    10. '_' → logprob: -17.2500057220459

Token 702: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02461344003677368
    2. 'def' → logprob: -3.774613380432129
    3. '<|end|>' → logprob: -7.024613380432129
    4. '```' → logprob: -8.399613380432129
    5. '<|end|>' → logprob: -8.774613380432129
    6. 'import' → logprob: -9.899613380432129
    7. ' #' → logprob: -11.524613380432129
    8. '\' → logprob: -12.024613380432129
    9. '...' → logprob: -12.149613380432129
    10. 'for' → logprob: -12.649613380432129

Token 704: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10024408996105194
    2. '#' → logprob: -2.3502440452575684
    3. 'import' → logprob: -10.975244522094727
    4. 'class' → logprob: -11.225244522094727
    5. 'from' → logprob: -11.975244522094727
    6. ' def' → logprob: -15.350244522094727
    7. '```' → logprob: -15.350244522094727
    8. '#define' → logprob: -17.600244522094727
    9. ' #' → logprob: -17.725244522094727
    10. '"""' → logprob: -18.350244522094727

Token 705: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012081857770681381
    2. '#' → logprob: -4.512081623077393
    3. ' def' → logprob: -6.887081623077393
    4. 'de' → logprob: -12.13708209991455
    5. 'for' → logprob: -13.63708209991455
    6. ':' → logprob: -13.88708209991455
    7. ' de' → logprob: -14.01208209991455
    8. ' #' → logprob: -14.01208209991455
    9. ':def' → logprob: -14.26208209991455
    10. 'import' → logprob: -14.51208209991455

Token 706: ' teste' (ID: 62670)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.012167710810899734
    2. 'tr' → logprob: -4.512167930603027
    3. 're' → logprob: -8.012167930603027
    4. 'cal' → logprob: -8.762167930603027
    5. 'dé' → logprob: -8.762167930603027
    6. 'chercher' → logprob: -9.262167930603027
    7. 'calcul' → logprob: -9.262167930603027
    8. 'pr' → logprob: -9.887167930603027
    9. '#' → logprob: -10.012167930603027
    10. 'calc' → logprob: -10.387167930603027

Token 707: ' si' (ID: 1784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39465227723121643
    2. '(H' → logprob: -2.5196523666381836
    3. 'si' → logprob: -2.5196523666381836
    4. 'if' → logprob: -2.6446523666381836
    5. '(' → logprob: -4.144652366638184
    6. 't' → logprob: -4.144652366638184
    7. '#' → logprob: -4.269652366638184
    8. 'la' → logprob: -4.394652366638184
    9. 's' → logprob: -4.644652366638184
    10. 'le' → logprob: -4.769652366638184

Token 708: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.46096867322921753
    2. 'l' → logprob: -2.3359687328338623
    3. 'une' → logprob: -2.4609687328338623
    4. 'abs' → logprob: -3.3359687328338623
    5. 'la' → logprob: -3.3359687328338623
    6. 'de' → logprob: -3.7109687328338623
    7. 'le' → logprob: -4.085968494415283
    8. '(H' → logprob: -4.335968494415283
    9. 'on' → logprob: -4.585968494415283
    10. 'angles' → logprob: -4.710968494415283

Token 709: ' condition' (ID: 7060)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.1406053304672241
    2. 'angles' → logprob: -1.7656053304672241
    3. 'position' → logprob: -2.2656054496765137
    4. 'def' → logprob: -2.6406054496765137
    5. 't' → logprob: -2.8906054496765137
    6. 'temps' → logprob: -3.0156054496765137
    7. '#' → logprob: -3.0156054496765137
    8. 'time' → logprob: -3.1406054496765137
    9. 'distance' → logprob: -3.8906054496765137
    10. 'diff' → logprob: -4.140605449676514

Token 710: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33649685978889465
    2. '#' → logprob: -1.5864968299865723
    3. 's' → logprob: -4.211496829986572
    4. 'd' → logprob: -4.586496829986572
    5. 'est' → logprob: -4.711496829986572
    6. ':' → logprob: -5.086496829986572
    7. 'de' → logprob: -5.211496829986572
    8. '<|end|>' → logprob: -5.211496829986572
    9. ' #' → logprob: -5.586496829986572
    10. ' est' → logprob: -5.586496829986572

Token 711: 'pas' (ID: 21122)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.9225718379020691
    2. 'abs' → logprob: -1.0475718975067139
    3. 'minimal' → logprob: -2.922571897506714
    4. 'angle' → logprob: -3.047571897506714
    5. 'les' → logprob: -3.172571897506714
    6. 'l' → logprob: -3.797571897506714
    7. 'def' → logprob: -4.422571659088135
    8. '#' → logprob: -4.547571659088135
    9. '```' → logprob: -4.547571659088135
    10. 'all' → logprob: -5.172571659088135

Token 712: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1679653376340866
    2. '_de' → logprob: -2.9179654121398926
    3. 'de' → logprob: -3.0429654121398926
    4. ' d' → logprob: -3.7929654121398926
    5. 's' → logprob: -4.917965412139893
    6. '_angle' → logprob: -5.417965412139893
    7. 'd' → logprob: -6.042965412139893
    8. '_visible' → logprob: -6.417965412139893
    9. 'def' → logprob: -6.917965412139893
    10. '#' → logprob: -6.917965412139893

Token 713: ' deux' (ID: 10301)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.6043745279312134
    2. ' angle' → logprob: -3.354374408721924
    3. 'collision' → logprob: -3.354374408721924
    4. ' triple' → logprob: -3.479374408721924
    5. 's' → logprob: -3.604374408721924
    6. 'tro' → logprob: -3.604374408721924
    7. 'de' → logprob: -3.854374408721924
    8. 'd' → logprob: -4.229374408721924
    9. 't' → logprob: -4.479374408721924
    10. 'cro' → logprob: -4.604374408721924

Token 714: ' aigu' (ID: 186800)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0536175966262817
    2. 'angles' → logprob: -1.4286175966262817
    3. ' angles' → logprob: -1.6786175966262817
    4. '_angles' → logprob: -2.553617477416992
    5. '_' → logprob: -2.678617477416992
    6. '_m' → logprob: -3.553617477416992
    7. ' mains' → logprob: -3.803617477416992
    8. '```' → logprob: -5.303617477416992
    9. ' doigts' → logprob: -5.678617477416992
    10. 'positions' → logprob: -6.428617477416992

Token 715: 'illes' (ID: 16849)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4236946702003479
    2. 'illes' → logprob: -1.1736946105957031
    3. 'e' → logprob: -3.423694610595703
    4. 'les' → logprob: -6.798694610595703
    5. 'lles' → logprob: -6.923694610595703
    6. 'gles' → logprob: -7.798694610595703
    7. 'ille' → logprob: -7.923694610595703
    8. 'des' → logprob: -8.923694610595703
    9. 's' → logprob: -8.923694610595703
    10. 'ces' → logprob: -10.048694610595703

Token 716: ' chev' (ID: 127415)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.562117338180542
    2. 's' → logprob: -2.437117338180542
    3. '"' → logprob: -2.562117338180542
    4. ' sont' → logprob: -3.562117338180542
    5. ' align' → logprob: -3.812117338180542
    6. ' à' → logprob: -3.937117338180542
    7. ' se' → logprob: -4.062117576599121
    8. ' s' → logprob: -4.062117576599121
    9. 'co' → logprob: -4.437117576599121
    10. ' ne' → logprob: -4.562117576599121

Token 717: 'auch' (ID: 47120)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.78765469789505
    2. 'auche' → logprob: -1.0376546382904053
    3. 'auch' → logprob: -2.4126546382904053
    4. 'e' → logprob: -2.9126546382904053
    5. 'ech' → logprob: -4.662654876708984
    6. 'uch' → logprob: -4.787654876708984
    7. 'ec' → logprob: -4.912654876708984
    8. 'eur' → logprob: -5.412654876708984
    9. 'au' → logprob: -5.787654876708984
    10. 'ee' → logprob: -6.162654876708984

Token 718: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0273607969284058
    2. 'ement' → logprob: -1.2773607969284058
    3. 'e' → logprob: -1.6523607969284058
    4. 'ées' → logprob: -2.9023609161376953
    5. 'er' → logprob: -3.4023609161376953
    6. 'ée' → logprob: -3.6523609161376953
    7. 'es' → logprob: -4.152360916137695
    8. 'é' → logprob: -4.402360916137695
    9. 'ant' → logprob: -4.777360916137695
    10. 'ment' → logprob: -4.777360916137695

Token 719: '"' (ID: 1)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.4163893461227417
    2. 'ment' → logprob: -1.6663893461227417
    3. 'r' → logprob: -3.1663894653320312
    4. '"' → logprob: -3.2913894653320312
    5. 'ent' → logprob: -3.5413894653320312
    6. 'ments' → logprob: -5.041389465332031
    7. '(nt' → logprob: -5.166389465332031
    8. 's' → logprob: -5.541389465332031
    9. 'pas' → logprob: -5.791389465332031
    10. 'es' → logprob: -6.166389465332031

Token 720: ' est' (ID: 893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03446109965443611
    2. '(H' → logprob: -3.53446102142334
    3. ' def' → logprob: -5.53446102142334
    4. '(' → logprob: -7.65946102142334
    5. '(def' → logprob: -9.65946102142334
    6. '(t' → logprob: -10.53446102142334
    7. '(s' → logprob: -10.53446102142334
    8. 's' → logprob: -10.65946102142334
    9. ' (' → logprob: -11.03446102142334
    10. '(h' → logprob: -11.28446102142334

Token 721: ' satis' (ID: 56317)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.062209226191043854
    2. 'respect' → logprob: -3.937209129333496
    3. 'True' → logprob: -4.062209129333496
    4. 'def' → logprob: -5.312209129333496
    5. 'not' → logprob: -5.312209129333496
    6. 'fulfilled' → logprob: -6.062209129333496
    7. '```' → logprob: -6.062209129333496
    8. 'v' → logprob: -6.937209129333496
    9. ' True' → logprob: -7.062209129333496
    10. 'met' → logprob: -7.062209129333496

Token 722: 'faite' (ID: 69848)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3931897282600403
    2. 'ait' → logprob: -1.3931896686553955
    3. 'ie' → logprob: -3.5181896686553955
    4. 'def' → logprob: -4.393189907073975
    5. 'ite' → logprob: -4.768189907073975
    6. 't' → logprob: -5.268189907073975
    7. 'e' → logprob: -5.643189907073975
    8. 'i' → logprob: -5.643189907073975
    9. '   ' → logprob: -6.143189907073975
    10. 'aut' → logprob: -6.268189907073975

Token 723: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003400975139811635
    2. '(' → logprob: -7.128400802612305
    3. ':' → logprob: -7.128400802612305
    4. '(def' → logprob: -7.628400802612305
    5. ' def' → logprob: -7.753400802612305
    6. '(H' → logprob: -7.878400802612305
    7. ':def' → logprob: -7.878400802612305
    8. '(
' → logprob: -10.128400802612305
    9. '
' → logprob: -10.253400802612305
    10. '_def' → logprob: -11.628400802612305

Token 724: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.583550642360933e-05
    2. ' def' → logprob: -10.250036239624023
    3. '
' → logprob: -15.125036239624023
    4. '#' → logprob: -16.500036239624023
    5. '```' → logprob: -17.625036239624023
    6. '(def' → logprob: -17.875036239624023
    7. '(' → logprob: -18.625036239624023
    8. ':def' → logprob: -19.000036239624023
    9. 'ndef' → logprob: -19.125036239624023
    10. 'import' → logprob: -19.500036239624023

Token 725: ' c' (ID: 274)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.750000953674316
    3. '#' → logprob: -15.000000953674316
    4. '
' → logprob: -19.375
    5. '0' → logprob: -19.5
    6. 'import' → logprob: -19.75
    7. 'de' → logprob: -19.875
    8. '1' → logprob: -20.25
    9. '6' → logprob: -20.375
    10. '2' → logprob: -20.375

Token 726: ''est' (ID: 6616)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22741270065307617
    2. 'on' → logprob: -1.8524127006530762
    3. 'ont' → logprob: -3.977412700653076
    4. '#' → logprob: -4.227412700653076
    5. 'ond' → logprob: -6.102412700653076
    6. 'e' → logprob: -6.602412700653076
    7. 'onc' → logprob: -6.602412700653076
    8. 'ons' → logprob: -6.727412700653076
    9. 'om' → logprob: -7.477412700653076
    10. 'lass' → logprob: -7.602412700653076

Token 727: '-à' (ID: 56297)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3530787229537964
    2. 'def' → logprob: -1.6030787229537964
    3. '(lambda' → logprob: -3.103078842163086
    4. ' lambda' → logprob: -3.853078842163086
    5. 'à' → logprob: -4.103078842163086
    6. '=lambda' → logprob: -4.853078842163086
    7. 'la' → logprob: -6.728078842163086
    8. 'a' → logprob: -6.728078842163086
    9. 'une' → logprob: -6.978078842163086
    10. 'l' → logprob: -7.353078842163086

Token 728: '-dire' (ID: 76064)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.7357058525085449
    2. 'dire' → logprob: -0.8607058525085449
    3. 'à' → logprob: -3.110705852508545
    4. 'a' → logprob: -4.735705852508545
    5. 'True' → logprob: -4.985705852508545
    6. 'true' → logprob: -5.360705852508545
    7. 'une' → logprob: -5.485705852508545
    8. '```' → logprob: -5.610705852508545
    9. 'tout' → logprob: -6.110705852508545
    10. 'def' → logprob: -6.360705852508545

Token 729: ' que' (ID: 661)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005614596419036388
    2. 'lambda' → logprob: -5.255614757537842
    3. 'abs' → logprob: -9.005614280700684
    4. '#' → logprob: -9.505614280700684
    5. ' def' → logprob: -9.505614280700684
    6. '(lambda' → logprob: -9.880614280700684
    7. 'angle' → logprob: -11.380614280700684
    8. ' lambda' → logprob: -11.630614280700684
    9. 'not' → logprob: -12.005614280700684
    10. '
' → logprob: -12.130614280700684

Token 730: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3356572687625885
    2. 'minimal' → logprob: -1.5856572389602661
    3. 'for' → logprob: -3.0856573581695557
    4. 'abs' → logprob: -3.7106573581695557
    5. 'all' → logprob: -5.960657119750977
    6. 'min' → logprob: -6.460657119750977
    7. ' minimal' → logprob: -7.085657119750977
    8. '#' → logprob: -7.210657119750977
    9. 'not' → logprob: -7.335657119750977
    10. 'l' → logprob: -7.460657119750977

Token 731: ' ' (ID: 220)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.48252516984939575
    2. 'def' → logprob: -2.732525110244751
    3. 'minimal' → logprob: -2.732525110244751
    4. 'diff' → logprob: -2.857525110244751
    5. 'abs' → logprob: -2.982525110244751
    6. ' trois' → logprob: -3.357525110244751
    7. 'tro' → logprob: -4.10752534866333
    8. 'de' → logprob: -4.10752534866333
    9. ' minimal' → logprob: -4.10752534866333
    10. '3' → logprob: -4.60752534866333

Token 732: '3' (ID: 18)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.2707800567150116
    2. 'tro' → logprob: -2.270780086517334
    3. 'de' → logprob: -3.145780086517334
    4. 'diff' → logprob: -3.645780086517334
    5. 'éc' → logprob: -4.145780086517334
    6. '3' → logprob: -4.270780086517334
    7. 'def' → logprob: -4.645780086517334
    8. 'angle' → logprob: -4.895780086517334
    9. 'abs' → logprob: -5.895780086517334
    10. ' trois' → logprob: -6.145780086517334

Token 733: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.09749387204647064
    2. 'a' → logprob: -2.972493886947632
    3. ' aigu' → logprob: -3.722493886947632
    4. ' angles' → logprob: -4.347493648529053
    5. 'def' → logprob: -6.972493648529053
    6. '#' → logprob: -7.597493648529053
    7. '```' → logprob: -7.597493648529053
    8. 'hands' → logprob: -7.722493648529053
    9. 'angle' → logprob: -7.722493648529053
    10. ' a' → logprob: -7.722493648529053

Token 734: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3875107765197754
    2. 'diff' → logprob: -1.7625107765197754
    3. 'des' → logprob: -2.7625107765197754
    4. '#' → logprob: -3.6375107765197754
    5. 'entre' → logprob: -4.387510776519775
    6. 'def' → logprob: -4.887510776519775
    7. ' sont' → logprob: -5.012510776519775
    8. 'ont' → logprob: -5.012510776519775
    9. 'angles' → logprob: -5.262510776519775
    10. 'distinct' → logprob: -5.887510776519775

Token 735: ' distinct' (ID: 16913)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6932603120803833
    2. 'distinct' → logprob: -0.8182603120803833
    3. 'diff' → logprob: -3.6932601928710938
    4. 'dist' → logprob: -4.568260192871094
    5. 'mut' → logprob: -4.568260192871094
    6. 'strict' → logprob: -5.193260192871094
    7. 'pair' → logprob: -5.943260192871094
    8. 'tou' → logprob: -6.318260192871094
    9. 'for' → logprob: -7.943260192871094
    10. '{' → logprob: -8.068260192871094

Token 736: 's' (ID: 82)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006041454034857452
    2. '
' → logprob: -7.500604152679443
    3. ' def' → logprob: -11.000603675842285
    4. '#' → logprob: -11.500603675842285
    5. '(
' → logprob: -11.875603675842285
    6. '(' → logprob: -12.125603675842285
    7. ',
' → logprob: -12.500603675842285
    8. '\' → logprob: -13.625603675842285
    9. '.
' → logprob: -13.625603675842285
    10. ',' → logprob: -13.750603675842285

Token 737: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010426939697936177
    2. '
' → logprob: -6.87604284286499
    3. ' def' → logprob: -11.876042366027832
    4. '#' → logprob: -13.501042366027832
    5. '

' → logprob: -14.751042366027832
    6. '  
' → logprob: -14.876042366027832
    7. ':def' → logprob: -15.376042366027832
    8. ' 
' → logprob: -15.876042366027832
    9. '```' → logprob: -16.25104331970215
    10. ':' → logprob: -16.50104331970215

Token 738: 'tol' (ID: 36618)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15120181441307068
    2. ')' → logprob: -2.1512017250061035
    3. 'angle' → logprob: -5.0262017250061035
    4. '#' → logprob: -5.4012017250061035
    5. ' def' → logprob: -6.0262017250061035
    6. 'a' → logprob: -6.5262017250061035
    7. '
' → logprob: -7.0262017250061035
    8. 'strict' → logprob: -7.0262017250061035
    9. 'diff' → logprob: -7.1512017250061035
    10. '   ' → logprob: -7.2762017250061035

Token 739: 'érance' (ID: 122504)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.35636481642723083
    2. 'érance' → logprob: -1.6063648462295532
    3. 'é' → logprob: -2.7313647270202637
    4. 'ér' → logprob: -3.4813647270202637
    5. '   ' → logprob: -7.231364727020264
    6. 'érence' → logprob: -7.356364727020264
    7. 'e' → logprob: -7.606364727020264
    8. 'ance' → logprob: -7.856364727020264
    9. 'éré' → logprob: -8.981365203857422
    10. ' ' → logprob: -9.106365203857422

Token 740: ' faible' (ID: 75786)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00688965804874897
    2. '>' → logprob: -5.631889820098877
    3. ' =' → logprob: -6.756889820098877
    4. '>=' → logprob: -7.381889820098877
    5. ' >' → logprob: -7.756889820098877
    6. '1' → logprob: -8.131889343261719
    7. ')' → logprob: -8.256889343261719
    8. ' >=' → logprob: -8.881889343261719
    9. '   ' → logprob: -9.756889343261719
    10. 'e' → logprob: -9.756889343261719

Token 741: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6469609141349792
    2. '=' → logprob: -1.646960973739624
    3. 'e' → logprob: -2.021960973739624
    4. ',' → logprob: -2.396960973739624
    5. ' de' → logprob: -4.146960735321045
    6. 'de' → logprob: -4.896960735321045
    7. ' =' → logprob: -5.021960735321045
    8. ')
' → logprob: -5.146960735321045
    9. ' )' → logprob: -5.271960735321045
    10. '),' → logprob: -5.396960735321045

Token 742: ' flott' (ID: 108700)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16411878168582916
    2. '0' → logprob: -2.164118766784668
    3. 'l' → logprob: -4.539118766784668
    4. ' ' → logprob: -5.164118766784668
    5. 'angle' → logprob: -5.164118766784668
    6. 'angles' → logprob: -6.039118766784668
    7. 'abs' → logprob: -6.289118766784668
    8. ')' → logprob: -6.664118766784668
    9. 'les' → logprob: -6.789118766784668
    10. 'le' → logprob: -7.164118766784668

Token 743: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.08755485713481903
    2. 'ante' → logprob: -2.962554931640625
    3. 'ement' → logprob: -4.712554931640625
    4. 'ants' → logprob: -4.837554931640625
    5. 'e' → logprob: -5.337554931640625
    6. '```' → logprob: -5.837554931640625
    7. 'é' → logprob: -6.087554931640625
    8. 'ing' → logprob: -6.462554931640625
    9. 'ée' → logprob: -6.962554931640625
    10. 'antes' → logprob: -7.212554931640625

Token 744: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02015163004398346
    2. ' )' → logprob: -4.395151615142822
    3. 'e' → logprob: -5.770151615142822
    4. ')
' → logprob: -5.895151615142822
    5. ',' → logprob: -7.520151615142822
    6. '")' → logprob: -8.02015209197998
    7. '=' → logprob: -9.14515209197998
    8. 'epsilon' → logprob: -9.39515209197998
    9. ' )
' → logprob: -9.52015209197998
    10. '),' → logprob: -9.52015209197998

Token 745: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014048899174667895
    2. '
' → logprob: -8.875140190124512
    3. '```' → logprob: -15.750140190124512
    4. '

' → logprob: -16.375141143798828
    5. ' def' → logprob: -16.875141143798828
    6. '\' → logprob: -17.000141143798828
    7. 'import' → logprob: -17.125141143798828
    8. '  
' → logprob: -17.125141143798828
    9. ' 
' → logprob: -17.875141143798828
    10. '#' → logprob: -18.000141143798828

Token 746: ' no' (ID: 860)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.1860525608062744
    2. 'no' → logprob: -1.4360525608062744
    3. 'check' → logprob: -2.0610525608062744
    4. 'angles' → logprob: -2.1860525608062744
    5. 'are' → logprob: -2.6860525608062744
    6. 'distinct' → logprob: -2.6860525608062744
    7. 'hands' → logprob: -4.186052322387695
    8. 'def' → logprob: -4.186052322387695
    9. 'three' → logprob: -4.686052322387695
    10. 'valid' → logprob: -5.061052322387695

Token 747: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.654285192489624
    2. 't' → logprob: -1.154285192489624
    3. 'ver' → logprob: -2.904285192489624
    4. '_che' → logprob: -3.529285192489624
    5. 'n' → logprob: -4.154285430908203
    6. '_over' → logprob: -4.404285430908203
    7. 'v' → logprob: -4.904285430908203
    8. 'w' → logprob: -5.029285430908203
    9. '_two' → logprob: -5.029285430908203
    10. 'ne' → logprob: -5.279285430908203

Token 748: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2669110596179962
    2. '(angle' → logprob: -1.7669110298156738
    3. '(a' → logprob: -2.766911029815674
    4. '_angles' → logprob: -8.516911506652832
    5. '(h' → logprob: -9.016911506652832
    6. '(*' → logprob: -9.391911506652832
    7. '(H' → logprob: -10.141911506652832
    8. '(A' → logprob: -10.266911506652832
    9. '(arr' → logprob: -11.266911506652832
    10. '(t' → logprob: -11.766911506652832

Token 749: 'ah' (ID: 849)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.35963645577430725
    2. 'angle' → logprob: -1.2346364259719849
    3. 'a' → logprob: -4.609636306762695
    4. 'ang' → logprob: -7.984636306762695
    5. 'ah' → logprob: -8.234636306762695
    6. 'h' → logprob: -8.359636306762695
    7. ' angles' → logprob: -8.734636306762695
    8. ')' → logprob: -10.109636306762695
    9. '(angle' → logprob: -10.109636306762695
    10. ' angle' → logprob: -10.859636306762695

Token 750: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10550765693187714
    2. '1' → logprob: -2.3555076122283936
    3. '_,' → logprob: -6.105507850646973
    4. '_a' → logprob: -6.730507850646973
    5. 's' → logprob: -7.480507850646973
    6. ' ,' → logprob: -7.980507850646973
    7. '_' → logprob: -8.230507850646973
    8. 'a' → logprob: -9.355507850646973
    9. '_s' → logprob: -9.480507850646973
    10. '_angles' → logprob: -9.730507850646973

Token 751: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0003570343542378396
    2. ' am' → logprob: -8.000356674194336
    3. 'angle' → logprob: -11.375356674194336
    4. '   ' → logprob: -13.125356674194336
    5. ' ' → logprob: -13.125356674194336
    6. 'a' → logprob: -13.250356674194336
    7. ' ' → logprob: -13.625356674194336
    8. 'ams' → logprob: -14.125356674194336
    9. 'amin' → logprob: -14.875356674194336
    10. '
' → logprob: -14.875356674194336

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.432518421206623e-05
    2. ' ,' → logprob: -9.7500638961792
    3. ',
' → logprob: -12.5000638961792
    4. ',a' → logprob: -14.6250638961792
    5. '),' → logprob: -14.8750638961792
    6. ',

' → logprob: -15.1250638961792
    7. '_,' → logprob: -15.3750638961792
    8. 's' → logprob: -15.7500638961792
    9. '=' → logprob: -16.000064849853516
    10. ')' → logprob: -16.625064849853516

Token 753: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0017306297086179256
    2. ' as' → logprob: -6.376730442047119
    3. '_as' → logprob: -11.501730918884277
    4. 'a' → logprob: -12.376730918884277
    5. 'As' → logprob: -12.501730918884277
    6. ' ' → logprob: -12.626730918884277
    7. 'angle' → logprob: -13.251730918884277
    8. 'aps' → logprob: -14.251730918884277
    9. 'ans' → logprob: -14.376730918884277
    10. 'asg' → logprob: -14.376730918884277

Token 754: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5422481298446655
    2. '):' → logprob: -1.0422481298446655
    3. '):
' → logprob: -2.792248249053955
    4. ')' → logprob: -6.042248249053955
    5. 's' → logprob: -7.167248249053955
    6. '_)' → logprob: -7.167248249053955
    7. '_,' → logprob: -8.167247772216797
    8. ',' → logprob: -8.792247772216797
    9. '):
' → logprob: -9.417247772216797
    10. 'a' → logprob: -9.917247772216797

Token 755: '):
' (ID: 1883)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7766058444976807
    2. '):' → logprob: -0.7766058444976807
    3. '):
' → logprob: -2.7766058444976807
    4. ')' → logprob: -4.276605606079102
    5. ',' → logprob: -6.651605606079102
    6. '_)' → logprob: -6.901605606079102
    7. 's' → logprob: -7.151605606079102
    8. '_,' → logprob: -7.526605606079102
    9. '):
' → logprob: -9.026605606079102
    10. '):

' → logprob: -9.276605606079102

Token 756: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00947649497538805
    2. ':' → logprob: -5.259476661682129
    3. '(' → logprob: -6.384476661682129
    4. ',' → logprob: -6.634476661682129
    5. '):' → logprob: -8.509476661682129
    6. ':
' → logprob: -8.634476661682129
    7. '(t' → logprob: -8.759476661682129
    8. '(a' → logprob: -9.009476661682129
    9. '(angle' → logprob: -9.134476661682129
    10. '):
' → logprob: -9.759476661682129

Token 757: ' eps' (ID: 39683)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' (adapté à ' eps') → logprob: -0.501006543636322
    2. 'epsilon' → logprob: -1.3760066032409668
    3. '   ' → logprob: -2.751006603240967
    4. 'tol' → logprob: -3.626006603240967
    5. 'return' → logprob: -3.876006603240967
    6. 't' → logprob: -4.376006603240967
    7. 'abs' → logprob: -4.751006603240967
    8. ' eps' → logprob: -5.876006603240967
    9. 'threshold' → logprob: -6.126006603240967
    10. 'EPS' → logprob: -6.626006603240967

Token 758: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34851622581481934
    2. '=' → logprob: -1.2235162258148193
    3. '_' → logprob: -10.473516464233398
    4. '   ' → logprob: -11.223516464233398
    5. ',' → logprob: -11.348516464233398
    6. ')' → logprob: -12.348516464233398
    7. '  ' → logprob: -12.598516464233398
    8. ' ' → logprob: -12.848516464233398
    9. ' ' → logprob: -12.848516464233398
    10. '	' → logprob: -13.848516464233398

Token 759: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. '0' → logprob: -9.625066757202148
    3. ' ' → logprob: -15.500066757202148
    4. '10' → logprob: -17.75006675720215
    5. '-' → logprob: -18.87506675720215
    6. '=' → logprob: -19.12506675720215
    7. '```' → logprob: -19.50006675720215
    8. '(' → logprob: -19.50006675720215
    9. '   ' → logprob: -20.00006675720215
    10. '2' → logprob: -20.62506675720215

Token 760: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. '0' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.625045776367188
    4. '10' → logprob: -16.625045776367188
    5. '-' → logprob: -17.500045776367188
    6. '2' → logprob: -18.625045776367188
    7. '=' → logprob: -19.000045776367188
    8. '(' → logprob: -19.125045776367188
    9. '   ' → logprob: -19.375045776367188
    10. '5' → logprob: -19.375045776367188

Token 761: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05490180477499962
    2. '-' → logprob: -2.9299018383026123
    3. '0' → logprob: -11.054902076721191
    4. '.' → logprob: -13.679902076721191
    5. 'E' → logprob: -14.179902076721191
    6. '```' → logprob: -14.304902076721191
    7. '-e' → logprob: -15.179902076721191
    8. '1' → logprob: -15.304902076721191
    9. '2' → logprob: -15.429902076721191
    10. '   ' → logprob: -15.804902076721191

Token 762: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006927779759280384
    2. '9' → logprob: -8.125692367553711
    3. '6' → logprob: -8.500692367553711
    4. '7' → logprob: -9.000692367553711
    5. '5' → logprob: -10.500692367553711
    6. '8' → logprob: -10.750692367553711
    7. '3' → logprob: -11.625692367553711
    8. '4' → logprob: -12.625692367553711
    9. '10' → logprob: -12.625692367553711
    10. '−' → logprob: -13.250692367553711

Token 763: '14' (ID: 1265)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.23125460743904114
    2. '7' → logprob: -1.8562545776367188
    3. '6' → logprob: -3.2312545776367188
    4. '8' → logprob: -4.606254577636719
    5. '10' → logprob: -7.731254577636719
    6. '5' → logprob: -8.606254577636719
    7. '12' → logprob: -9.481254577636719
    8. '4' → logprob: -12.606254577636719
    9. '09' → logprob: -13.231254577636719
    10. '3' → logprob: -13.356254577636719

Token 764: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04994218796491623
    2. '
' → logprob: -3.1749422550201416
    3. '    
' → logprob: -5.0499420166015625
    4. ' 
' → logprob: -9.049942016601562
    5. '  
' → logprob: -9.299942016601562
    6. '   
' → logprob: -9.424942016601562
    7. '	
' → logprob: -10.299942016601562
    8. '
' → logprob: -10.924942016601562
    9. ',' → logprob: -10.924942016601562
    10. '    ' → logprob: -11.049942016601562

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010193521156907082
    2. 'return' → logprob: -7.251019477844238
    3. 'if' → logprob: -8.876019477844238
    4. ' return' → logprob: -9.501019477844238
    5. ' if' → logprob: -10.001019477844238
    6. '
' → logprob: -10.126019477844238
    7. 'def' → logprob: -12.376019477844238
    8. '    
' → logprob: -13.001019477844238
    9. '    ' → logprob: -14.251019477844238
    10. '	return' → logprob: -14.376019477844238

Token 766: ' angles' (ID: 43448)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01446821540594101
    2. 'if' → logprob: -4.264468193054199
    3. '   ' → logprob: -8.7644681930542
    4. ' return' → logprob: -9.2644681930542
    5. 'angles' (adapté à ' angles') → logprob: -10.2644681930542
    6. 'abs' → logprob: -11.1394681930542
    7. 'for' → logprob: -13.5144681930542
    8. 'def' → logprob: -13.7644681930542
    9. 'diff' → logprob: -14.2644681930542
    10. ' if' → logprob: -14.7644681930542

Token 767: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38998910784721375
    2. '=' → logprob: -1.1399891376495361
    3. '=[' → logprob: -6.514988899230957
    4. ' =[' → logprob: -7.514988899230957
    5. 's' → logprob: -8.014988899230957
    6. '   ' → logprob: -8.139988899230957
    7. '_set' → logprob: -8.764988899230957
    8. '_list' → logprob: -9.139988899230957
    9. '[' → logprob: -9.639988899230957
    10. ')' → logprob: -10.014988899230957

Token 768: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026413965970277786
    2. '=' → logprob: -3.651413917541504
    3. '   ' → logprob: -10.026413917541504
    4. '()' → logprob: -11.151413917541504
    5. ')' → logprob: -11.276413917541504
    6. '(' → logprob: -11.276413917541504
    7. ' ' → logprob: -11.651413917541504
    8. '=set' → logprob: -11.651413917541504
    9. ' ={' → logprob: -13.151413917541504
    10. ',' → logprob: -13.401413917541504

Token 769: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.25361236929893494
    2. '[' → logprob: -1.5036123991012573
    3. 'set' → logprob: -6.503612518310547
    4. ' {' → logprob: -9.003612518310547
    5. ' [' → logprob: -9.878612518310547
    6. '[a' → logprob: -12.753612518310547
    7. 'sorted' → logprob: -12.878612518310547
    8. ' set' → logprob: -13.628612518310547
    9. '[(' → logprob: -14.503612518310547
    10. '[{' → logprob: -14.628612518310547

Token 770: 'ah' (ID: 849)
  Prédit: 'ah'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. ' ah' → logprob: -16.375001907348633
    4. '   ' → logprob: -18.000001907348633
    5. 'angle' → logprob: -19.125001907348633
    6. 'aj' → logprob: -19.750001907348633
    7. '[' → logprob: -19.875001907348633
    8. 'Ah' → logprob: -20.125001907348633
    9. 'ahs' → logprob: -20.125001907348633
    10. ' (' → logprob: -20.625001907348633

Token 771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.52788148727268e-05
    2. ' ,' → logprob: -10.375064849853516
    3. '+' → logprob: -11.250064849853516
    4. ',
' → logprob: -11.375064849853516
    5. ' +' → logprob: -13.250064849853516
    6. ',<' → logprob: -13.750064849853516
    7. '-' → logprob: -14.000064849853516
    8. '<' → logprob: -14.125064849853516
    9. '   ' → logprob: -14.375064849853516
    10. 'am' → logprob: -14.375064849853516

Token 772: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -3.214019307051785e-05
    2. ' am' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.625032424926758
    4. ' ' → logprob: -15.250032424926758
    5. 'ams' → logprob: -16.375032424926758
    6. ' ' → logprob: -17.375032424926758
    7. '    ' → logprob: -18.000032424926758
    8. '  ' → logprob: -18.750032424926758
    9. 'ah' → logprob: -19.000032424926758
    10. '
' → logprob: -19.000032424926758

Token 773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014180023572407663
    2. ' ,' → logprob: -8.875142097473145
    3. '   ' → logprob: -14.125142097473145
    4. '],' → logprob: -15.000142097473145
    5. ',
' → logprob: -15.125142097473145
    6. '_,' → logprob: -15.250142097473145
    7. 'as' → logprob: -15.375142097473145
    8. '+' → logprob: -17.250141143798828
    9. '(as' → logprob: -17.250141143798828
    10. '+,' → logprob: -17.625141143798828

Token 774: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.676292231422849e-05
    2. ' as' → logprob: -11.000017166137695
    3. ' ' → logprob: -17.625017166137695
    4. '   ' → logprob: -19.125017166137695
    5. '
' → logprob: -20.625017166137695
    6. '  ' → logprob: -20.875017166137695
    7. '         ' → logprob: -21.375017166137695
    8. '       ' → logprob: -21.500017166137695
    9. 'ass' → logprob: -21.875017166137695
    10. '    ' → logprob: -22.000017166137695

Token 775: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.281574010848999
    2. '_]' → logprob: -1.406574010848999
    3. '_,' → logprob: -9.031574249267578
    4. '_
' → logprob: -9.156574249267578
    5. ']' → logprob: -9.156574249267578
    6. ']
' → logprob: -10.781574249267578
    7. '+' → logprob: -10.781574249267578
    8. '_-' → logprob: -11.156574249267578
    9. '_=' → logprob: -11.906574249267578
    10. 's' → logprob: -12.281574249267578

Token 776: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0553349032998085
    2. ']' → logprob: -2.9303348064422607
    3. ']

' → logprob: -8.18033504486084
    4. ' ]
' → logprob: -9.55533504486084
    5. ']
' → logprob: -9.55533504486084
    6. '   ' → logprob: -10.68033504486084
    7. ',' → logprob: -12.80533504486084
    8. ' ]' → logprob: -13.43033504486084
    9. '[' → logprob: -13.68033504486084
    10. 'def' → logprob: -14.93033504486084

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008993052877485752
    2. 'for' → logprob: -5.008993148803711
    3. ' for' → logprob: -6.133993148803711
    4. 'angles' → logprob: -9.633993148803711
    5. ' angles' → logprob: -11.008993148803711
    6. '	for' → logprob: -11.008993148803711
    7. '
' → logprob: -13.258993148803711
    8. '_angles' → logprob: -13.883993148803711
    9. '    
' → logprob: -14.008993148803711
    10. 'def' → logprob: -14.008993148803711

Token 778: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03051343746483326
    2. 'angles' → logprob: -3.5305135250091553
    3. '   ' → logprob: -7.280513286590576
    4. 'n' → logprob: -9.905513763427734
    5. ' for' → logprob: -11.405513763427734
    6. 'return' → logprob: -11.780513763427734
    7. ' angles' → logprob: -13.280513763427734
    8. 'angle' → logprob: -13.655513763427734
    9. '
' → logprob: -14.155513763427734
    10. '	for' → logprob: -14.905513763427734

Token 779: ' ordre' (ID: 103061)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019223258132115006
    2. 'angles' → logprob: -7.001922130584717
    3. '   ' → logprob: -7.251922130584717
    4. 'return' → logprob: -8.251922607421875
    5. 'n' → logprob: -10.501922607421875
    6. ' for' → logprob: -11.626922607421875
    7. '	for' → logprob: -13.751922607421875
    8. 'def' → logprob: -14.251922607421875
    9. 'from' → logprob: -14.501922607421875
    10. 'eps' → logprob: -14.876922607421875

Token 780: ' ren' (ID: 5427)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.009035704657435417
    2. '=' → logprob: -4.884035587310791
    3. '   ' → logprob: -7.384035587310791
    4. 'for' → logprob: -8.50903606414795
    5. ' angles' → logprob: -9.13403606414795
    6. 'sorted' → logprob: -9.38403606414795
    7. '_angles' → logprob: -9.88403606414795
    8. 'indices' → logprob: -10.13403606414795
    9. 'ang' → logprob: -10.13403606414795
    10. ' =' → logprob: -10.25903606414795

Token 781: 'voy' (ID: 83465)
  Prédit: 'vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.10300465673208237
    2. 'umé' → logprob: -3.6030046939849854
    3. 'for' → logprob: -4.103004455566406
    4. 'du' → logprob: -4.728004455566406
    5. 'voy' → logprob: -4.728004455566406
    6. 'é' → logprob: -5.728004455566406
    7. 'a' → logprob: -5.728004455566406
    8. 'orm' → logprob: -6.103004455566406
    9. 'g' → logprob: -6.103004455566406
    10. 'né' → logprob: -6.228004455566406

Token 782: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11463792622089386
    2. 'ed' → logprob: -3.364637851715088
    3. 'ée' → logprob: -3.739637851715088
    4. 'e' → logprob: -4.114637851715088
    5. 'gé' → logprob: -4.239637851715088
    6. 'ées' → logprob: -4.739637851715088
    7. 'né' → logprob: -6.489637851715088
    8. 'ge' → logprob: -6.614637851715088
    9. 'ged' → logprob: -6.614637851715088
    10. '=' → logprob: -6.614637851715088

Token 783: ' de' (ID: 334)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.144659623503685
    2. '=' → logprob: -2.1446595191955566
    3. '   ' → logprob: -4.769659519195557
    4. 'sorted' → logprob: -5.394659519195557
    5. ' =' → logprob: -6.644659519195557
    6. 'return' → logprob: -6.894659519195557
    7. 'sort' → logprob: -7.769659519195557
    8. ' angles' → logprob: -8.019659996032715
    9. 'angle' → logprob: -8.644659996032715
    10. ',' → logprob: -8.644659996032715

Token 784: ' la' (ID: 557)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.35505837202072144
    2. 'angles' → logprob: -1.2300584316253662
    3. 'tri' → logprob: -5.980058193206787
    4. 'range' → logprob: -6.230058193206787
    5. ' sorted' → logprob: -8.355058670043945
    6. 'la' → logprob: -8.355058670043945
    7. 'sort' → logprob: -8.855058670043945
    8. 'indices' → logprob: -8.980058670043945
    9. '(sorted' → logprob: -8.980058670043945
    10. 'ranges' → logprob: -8.980058670043945

Token 785: ' petite' (ID: 28119)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.6974667310714722
    2. 'sorted' → logprob: -0.6974667310714722
    3. 'for' → logprob: -6.322466850280762
    4. 'range' → logprob: -6.947466850280762
    5. 'len' → logprob: -8.072466850280762
    6. 'import' → logprob: -8.072466850280762
    7. 'ang' → logprob: -8.822466850280762
    8. 'True' → logprob: -8.947466850280762
    9. 'angled' → logprob: -9.072466850280762
    10. 'sort' → logprob: -9.197466850280762

Token 786: ' à' (ID: 1221)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.7179853916168213
    2. 'r' → logprob: -1.4679853916168213
    3. 's' → logprob: -2.3429853916168213
    4. 'ur' → logprob: -3.5929853916168213
    5. 'rs' → logprob: -3.5929853916168213
    6. 't' → logprob: -3.8429853916168213
    7. 'est' → logprob: -3.8429853916168213
    8. 'range' → logprob: -4.467985153198242
    9. 'for' → logprob: -4.592985153198242
    10. 'angles' → logprob: -4.717985153198242

Token 787: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0027484113816171885
    2. 'gr' → logprob: -6.002748489379883
    3. '#' → logprob: -9.627748489379883
    4. 'max' → logprob: -10.252748489379883
    5. '[' → logprob: -10.502748489379883
    6. 'grand' → logprob: -10.502748489379883
    7. '```' → logprob: -10.752748489379883
    8. ' la' → logprob: -11.002748489379883
    9. 'l' → logprob: -11.127748489379883
    10. 'large' → logprob: -11.377748489379883

Token 788: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.02348783053457737
    2. 'grand' → logprob: -3.7734878063201904
    3. 'large' → logprob: -8.89848804473877
    4. ' grande' → logprob: -9.89848804473877
    5. 'g' → logprob: -10.39848804473877
    6. 'import' → logprob: -11.64848804473877
    7. 'big' → logprob: -12.27348804473877
    8. 'Grande' → logprob: -12.64848804473877
    9. 'gran' → logprob: -12.77348804473877
    10. ' ' → logprob: -13.52348804473877

Token 789: '
' (ID: 198)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0141182541847229
    2. ' angles' → logprob: -4.764118194580078
    3. 'sorted' → logprob: -6.514118194580078
    4. '   ' → logprob: -6.889118194580078
    5. 'for' → logprob: -7.139118194580078
    6. '.sort' → logprob: -7.139118194580078
    7. '
' → logprob: -8.014118194580078
    8. '_angles' → logprob: -8.514118194580078
    9. 's' → logprob: -8.639118194580078
    10. '=' → logprob: -9.514118194580078

Token 790: '   ' (ID: 271)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.009332789108157158
    2. '   ' → logprob: -5.134332656860352
    3. ' angles' → logprob: -6.509332656860352
    4. 'for' → logprob: -6.634332656860352
    5. '
' → logprob: -8.509332656860352
    6. '_angles' → logprob: -9.384332656860352
    7. 'if' → logprob: -9.509332656860352
    8. ' for' → logprob: -10.009332656860352
    9. 'sorted' → logprob: -10.134332656860352
    10. '```' → logprob: -10.884332656860352

Token 791: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' (adapté à ' angles') → logprob: -0.000549218209926039
    2. ' angles' → logprob: -8.25054931640625
    3. 'for' → logprob: -8.62554931640625
    4. '   ' → logprob: -9.75054931640625
    5. 'angle' → logprob: -11.50054931640625
    6. 'if' → logprob: -11.50054931640625
    7. '
' → logprob: -12.12554931640625
    8. 'sorted' → logprob: -12.25054931640625
    9. '_angles' → logprob: -12.62554931640625
    10. 'indices' → logprob: -12.87554931640625

Token 792: '_sorted' (ID: 104993)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0017202809685841203
    2. '_sorted' → logprob: -6.876720428466797
    3. '=' → logprob: -8.251720428466797
    4. '=_' → logprob: -8.876720428466797
    5. '_' → logprob: -9.251720428466797
    6. '=set' → logprob: -9.376720428466797
    7. ' =' → logprob: -10.251720428466797
    8. '_sort' → logprob: -10.251720428466797
    9. '_=' → logprob: -11.251720428466797
    10. '   ' → logprob: -12.126720428466797

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026378676295280457
    2. ' =' → logprob: -3.651378631591797
    3. '   ' → logprob: -10.776378631591797
    4. '_angles' → logprob: -10.901378631591797
    5. ')' → logprob: -11.401378631591797
    6. 'angles' → logprob: -11.651378631591797
    7. '(' → logprob: -12.151378631591797
    8. ',' → logprob: -13.026378631591797
    9. ')=' → logprob: -13.276378631591797
    10. '.' → logprob: -13.401378631591797

Token 794: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0001584850688232109
    2. ' sorted' → logprob: -8.750158309936523
    3. '(sorted' → logprob: -17.875158309936523
    4. '   ' → logprob: -18.375158309936523
    5. 'sort' → logprob: -20.625158309936523
    6. ' ' → logprob: -21.375158309936523
    7. '.sorted' → logprob: -21.500158309936523
    8. 'Sorted' → logprob: -22.000158309936523
    9. 'tuple' → logprob: -22.125158309936523
    10. 's' → logprob: -22.250158309936523

Token 795: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008171311928890646
    2. 'angles' → logprob: -7.25081729888916
    3. '([' → logprob: -9.25081729888916
    4. '(angle' → logprob: -12.62581729888916
    5. '([(' → logprob: -13.12581729888916
    6. '(set' → logprob: -13.37581729888916
    7. '(
' → logprob: -13.62581729888916
    8. '((' → logprob: -13.75081729888916
    9. '(range' → logprob: -14.37581729888916
    10. '_angles' → logprob: -15.00081729888916

Token 796: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.750003814697266
    3. '[' → logprob: -14.250003814697266
    4. 'angle' → logprob: -15.625003814697266
    5. 'ang' → logprob: -17.625003814697266
    6. 'ages' → logprob: -18.000003814697266
    7. 'set' → logprob: -18.625003814697266
    8. ' angles' → logprob: -18.750003814697266
    9. '[
' → logprob: -18.875003814697266
    10. '[(' → logprob: -20.000003814697266

Token 797: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.13062453269958496
    2. 'angles' → logprob: -2.380624532699585
    3. '_angles' → logprob: -3.880624532699585
    4. '(' → logprob: -4.755624771118164
    5. ' angles' → logprob: -8.130624771118164
    6. ')' → logprob: -8.255624771118164
    7. 's' → logprob: -9.880624771118164
    8. 'set' → logprob: -10.255624771118164
    9. '(
' → logprob: -11.005624771118164
    10. '([' → logprob: -11.380624771118164

Token 798: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010103347711265087
    2. ')
' → logprob: -4.635103225708008
    3. '(' → logprob: -8.760103225708008
    4. '   ' → logprob: -9.385103225708008
    5. ',' → logprob: -10.510103225708008
    6. 'angles' → logprob: -10.510103225708008
    7. '())' → logprob: -10.885103225708008
    8. ' )' → logprob: -11.760103225708008
    9. '[' → logprob: -12.635103225708008
    10. '_angles' → logprob: -12.635103225708008

Token 799: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9213377237319946
    2. '   ' → logprob: -1.0463377237319946
    3. ' for' → logprob: -1.4213377237319946
    4. 'if' → logprob: -5.796337604522705
    5. '
' → logprob: -6.171337604522705
    6. 'i' → logprob: -6.796337604522705
    7. ' if' → logprob: -7.046337604522705
    8. 'diff' → logprob: -7.546337604522705
    9. '```' → logprob: -7.671337604522705
    10. 'a' → logprob: -8.046338081359863

Token 800: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2812161445617676
    2. 'if' → logprob: -2.0312161445617676
    3. '   ' → logprob: -2.2812161445617676
    4. 'return' → logprob: -4.656216144561768
    5. 'diff' → logprob: -6.781216144561768
    6. ' for' → logprob: -7.281216144561768
    7. '```' → logprob: -9.03121566772461
    8. '
' → logprob: -9.15621566772461
    9. 'eps' → logprob: -9.78121566772461
    10. ' if' → logprob: -9.78121566772461

Token 801: ' comparer' (ID: 125081)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2019125074148178
    2. 'return' → logprob: -1.951912522315979
    3. 'if' → logprob: -3.2019124031066895
    4. 'diff' → logprob: -9.701912879943848
    5. '   ' → logprob: -9.826912879943848
    6. ' return' → logprob: -12.326912879943848
    7. ' for' → logprob: -12.326912879943848
    8. 'eps' → logprob: -12.576912879943848
    9. 'dist' → logprob: -12.576912879943848
    10. '#' → logprob: -12.701912879943848

Token 802: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.00988003984093666
    2. 'for' → logprob: -5.134880065917969
    3. 'abs' → logprob: -6.509880065917969
    4. 'if' → logprob: -6.634880065917969
    5. ' angles' → logprob: -7.759880065917969
    6. '(' → logprob: -8.509880065917969
    7. 'minimal' → logprob: -8.634880065917969
    8. '(abs' → logprob: -9.384880065917969
    9. ' for' → logprob: -9.759880065917969
    10. ' minimal' → logprob: -10.134880065917969

Token 803: ' tri' (ID: 12665)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.04042429104447365
    2. 'for' → logprob: -3.915424346923828
    3. '[' → logprob: -4.540424346923828
    4. 'diff' → logprob: -5.290424346923828
    5. '   ' → logprob: -7.165424346923828
    6. 'sorted' → logprob: -7.415424346923828
    7. 'angles' → logprob: -7.540424346923828
    8. ' for' → logprob: -8.290424346923828
    9. 'between' → logprob: -8.540424346923828
    10. '[:-' → logprob: -8.915424346923828

Token 804: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.6663772463798523
    2. 'ées' → logprob: -0.9163772463798523
    3. 'es' → logprob: -2.791377305984497
    4. '[' → logprob: -4.416377067565918
    5. 'angles' → logprob: -5.291377067565918
    6. 'ed' → logprob: -5.791377067565918
    7. 'é' → logprob: -6.791377067565918
    8. 'c' → logprob: -7.291377067565918
    9. 'zed' → logprob: -7.541377067565918
    10. 'ees' → logprob: -7.666377067565918

Token 805: ' success' (ID: 3505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3040899634361267
    2. '   ' → logprob: -1.8040900230407715
    3. ' for' → logprob: -2.4290900230407715
    4. 'if' → logprob: -5.0540900230407715
    5. ' if' → logprob: -6.1790900230407715
    6. ',' → logprob: -7.9290900230407715
    7. 'return' → logprob: -9.054089546203613
    8. 'and' → logprob: -9.054089546203613
    9. '
' → logprob: -9.429089546203613
    10. '```' → logprob: -9.804089546203613

Token 806: 'ifs' (ID: 14119)
  Prédit: 'ivement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.7377417683601379
    2. 'ves' → logprob: -0.9877417683601379
    3. 'vement' → logprob: -2.362741708755493
    4. 'vel' → logprob: -3.362741708755493
    5. 've' → logprob: -4.612741947174072
    6. 'angles' → logprob: -6.112741947174072
    7. 'és' → logprob: -6.737741947174072
    8. 'ifs' → logprob: -6.737741947174072
    9. 'els' → logprob: -6.987741947174072
    10. 'ément' → logprob: -7.237741947174072

Token 807: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7746357917785645
    2. '   ' → logprob: -1.1496357917785645
    3. ' for' → logprob: -1.5246357917785645
    4. ' and' → logprob: -6.6496357917785645
    5. 'and' → logprob: -6.8996357917785645
    6. ' if' → logprob: -7.1496357917785645
    7. 'if' → logprob: -7.2746357917785645
    8. ',' → logprob: -7.7746357917785645
    9. '
' → logprob: -8.524635314941406
    10. '<|end|>' → logprob: -10.274635314941406

Token 808: ' voir' (ID: 20611)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019614631310105324
    2. ' i' → logprob: -6.3769612312316895
    3. 'angles' → logprob: -9.876961708068848
    4. 'angle' → logprob: -10.126961708068848
    5. '1' → logprob: -10.126961708068848
    6. 'abs' → logprob: -10.251961708068848
    7. 'idx' → logprob: -10.501961708068848
    8. 'in' → logprob: -10.876961708068848
    9. 'range' → logprob: -12.001961708068848
    10. '2' → logprob: -12.126961708068848

Token 809: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011082838289439678
    2. ' if' → logprob: -4.511082649230957
    3. 'si' → logprob: -10.886082649230957
    4. ' si' → logprob: -11.761082649230957
    5. 's' → logprob: -12.261082649230957
    6. ' s' → logprob: -12.761082649230957
    7. 'i' → logprob: -14.886082649230957
    8. 'abs' → logprob: -16.011083602905273
    9. 'ifs' → logprob: -16.136083602905273
    10. 'angles' → logprob: -16.386083602905273

Token 810: ''ils' (ID: 41108)
  Prédit: ''ils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ils' → logprob: -0.2703709900379181
    2. 'i' → logprob: -1.6453709602355957
    3. ''il' → logprob: -3.1453709602355957
    4. '’ils' → logprob: -7.895370960235596
    5. 'ont' → logprob: -8.770371437072754
    6. '[i' → logprob: -9.770371437072754
    7. 'if' → logprob: -9.895371437072754
    8. 'ils' → logprob: -9.895371437072754
    9. ''i' → logprob: -10.770371437072754
    10. 'il' → logprob: -10.770371437072754

Token 811: ' sont' (ID: 5242)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7996054291725159
    2. '<' → logprob: -1.424605369567871
    3. '[' → logprob: -1.674605369567871
    4. 'are' → logprob: -3.049605369567871
    5. 'abs' → logprob: -4.174605369567871
    6. ' <' → logprob: -4.299605369567871
    7. 'diff' → logprob: -4.674605369567871
    8. ' ' → logprob: -4.799605369567871
    9. '<=' → logprob: -5.174605369567871
    10. ' differ' → logprob: -5.799605369567871

Token 812: ' distinct' (ID: 16913)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0523742251098156
    2. '>' → logprob: -3.8023741245269775
    3. 'strict' → logprob: -3.9273741245269775
    4. '>=' → logprob: -5.802374362945557
    5. 'inf' → logprob: -5.927374362945557
    6. 'moins' → logprob: -6.802374362945557
    7. '<=' → logprob: -7.427374362945557
    8. 'au' → logprob: -7.552374362945557
    9. 'distinct' → logprob: -8.177373886108398
    10. ' <' → logprob: -8.802373886108398

Token 813: 's' (ID: 82)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031017012894153595
    2. ' for' → logprob: -3.9060170650482178
    3. 'for' → logprob: -4.656016826629639
    4. '
' → logprob: -8.656017303466797
    5. ' and' → logprob: -8.656017303466797
    6. '	for' → logprob: -8.656017303466797
    7. ',' → logprob: -9.156017303466797
    8. '<|end|>' → logprob: -9.656017303466797
    9. '    
' → logprob: -10.281017303466797
    10. 'and' → logprob: -10.406017303466797

Token 814: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03425319865345955
    2. ' for' → logprob: -3.7842531204223633
    3. 'for' → logprob: -4.534253120422363
    4. '	for' → logprob: -9.659253120422363
    5. '
' → logprob: -9.784253120422363
    6. ' and' → logprob: -10.534253120422363
    7. ',' → logprob: -11.034253120422363
    8. '    
' → logprob: -11.034253120422363
    9. 'and' → logprob: -11.284253120422363
    10. '```' → logprob: -12.409253120422363

Token 815: 'mod' (ID: 4847)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.2708696126937866
    2. 'for' → logprob: -1.8958696126937866
    3. 'all' → logprob: -3.895869731903076
    4. 'any' → logprob: -4.020869731903076
    5. ' for' → logprob: -4.395869731903076
    6. ' all' → logprob: -4.520869731903076
    7. 'abs' → logprob: -4.770869731903076
    8. ' angles' → logprob: -5.020869731903076
    9. ' any' → logprob: -5.395869731903076
    10. '<' → logprob: -6.020869731903076

Token 816: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.007053387816995382
    2. ' ' → logprob: -5.007053375244141
    3. 'ulo' → logprob: -8.13205337524414
    4. '   ' → logprob: -11.13205337524414
    5. 'e' → logprob: -11.25705337524414
    6. 'ule' → logprob: -11.63205337524414
    7. '36' → logprob: -13.50705337524414
    8. '180' → logprob: -14.25705337524414
    9. ')' → logprob: -14.50705337524414
    10. '```' → logprob: -14.50705337524414

Token 817: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00012582694762386382
    2. ' ' → logprob: -9.000125885009766
    3. '180' → logprob: -13.250125885009766
    4. '1' → logprob: -14.625125885009766
    5. '0' → logprob: -17.250125885009766
    6. '=' → logprob: -17.875125885009766
    7. ')' → logprob: -18.625125885009766
    8. '36' → logprob: -18.875125885009766
    9. '
' → logprob: -19.000125885009766
    10. '```' → logprob: -19.125125885009766

Token 818: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8297125697135925
    2. ')' → logprob: -1.2047126293182373
    3. '):
' → logprob: -1.5797126293182373
    4. ' )
' → logprob: -3.5797126293182373
    5. '   ' → logprob: -4.704712390899658
    6. '360' → logprob: -5.079712390899658
    7. ' )' → logprob: -5.329712390899658
    8. ' ):
' → logprob: -5.829712390899658
    9. '):' → logprob: -6.079712390899658
    10. 'and' → logprob: -7.829712390899658

Token 819: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1759251207113266
    2. 'for' → logprob: -1.9259251356124878
    3. ' for' → logprob: -4.175925254821777
    4. '
' → logprob: -9.425925254821777
    5. '	for' → logprob: -9.550925254821777
    6. '```' → logprob: -10.550925254821777
    7. '    
' → logprob: -11.175925254821777
    8. 'if' → logprob: -11.300925254821777
    9. ',' → logprob: -12.425925254821777
    10. ' if' → logprob: -13.925925254821777

Token 820: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005688794772140682
    2. '   ' → logprob: -7.500568866729736
    3. ' for' → logprob: -11.625569343566895
    4. 'i' → logprob: -12.875569343566895
    5. 'return' → logprob: -13.000569343566895
    6. 'if' → logprob: -13.125569343566895
    7. '	for' → logprob: -16.250568389892578
    8. 'n' → logprob: -17.875568389892578
    9. '
' → logprob: -18.000568389892578
    10. '```' → logprob: -18.000568389892578

Token 821: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889000326395035
    2. ' i' → logprob: -2.578890085220337
    3. '	i' → logprob: -15.703889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '   ' → logprob: -17.953889846801758
    6. '_i' → logprob: -18.578889846801758
    7. 'idx' → logprob: -18.703889846801758
    8. ' ' → logprob: -20.703889846801758
    9. ' idx' → logprob: -20.953889846801758
    10. '  ' → logprob: -20.953889846801758

Token 822: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11290706694126129
    2. 'in' → logprob: -2.2379071712493896
    3. '+' → logprob: -10.487907409667969
    4. ',' → logprob: -10.862907409667969
    5. '   ' → logprob: -11.362907409667969
    6. ' ' → logprob: -11.487907409667969
    7. '	in' → logprob: -11.612907409667969
    8. '  ' → logprob: -13.112907409667969
    9. '1' → logprob: -14.112907409667969
    10. '_in' → logprob: -14.237907409667969

Token 823: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '	range' → logprob: -21.1250057220459
    4. '(range' → logprob: -22.0000057220459
    5. '
' → logprob: -22.6250057220459
    6. '0' → logprob: -23.0000057220459
    7. 'in' → logprob: -23.0000057220459
    8. 'ran' → logprob: -23.3750057220459
    9. '   ' → logprob: -23.3750057220459
    10. '[' → logprob: -23.8750057220459

Token 824: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.251091377227567e-05
    2. 'len' → logprob: -10.875042915344238
    3. '3' → logprob: -11.125042915344238
    4. '(' → logprob: -12.125042915344238
    5. '(len' → logprob: -12.750042915344238
    6. ' ' → logprob: -14.875042915344238
    7. '   ' → logprob: -16.750041961669922
    8. ' len' → logprob: -17.375041961669922
    9. '1' → logprob: -17.875041961669922
    10. '0' → logprob: -18.500041961669922

Token 825: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001469153561629355
    2. '3' → logprob: -6.751469135284424
    3. 'len' → logprob: -8.126469612121582
    4. '1' → logprob: -12.751469612121582
    5. '   ' → logprob: -15.626469612121582
    6. '0' → logprob: -15.876469612121582
    7. ' ' → logprob: -16.251468658447266
    8. ' len' → logprob: -17.251468658447266
    9. '(len' → logprob: -17.626468658447266
    10. '```' → logprob: -18.126468658447266

Token 826: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4401988089084625
    2. '):
' → logprob: -1.4401987791061401
    3. ' -' → logprob: -2.5651988983154297
    4. '):' → logprob: -3.3151988983154297
    5. '2' → logprob: -5.44019889831543
    6. '   ' → logprob: -6.69019889831543
    7. ')' → logprob: -8.94019889831543
    8. '1' → logprob: -9.19019889831543
    9. ' ' → logprob: -9.44019889831543
    10. '):
' → logprob: -9.81519889831543

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02931821532547474
    2. '   ' → logprob: -3.654318332672119
    3. ' if' → logprob: -6.279318332672119
    4. 'if' → logprob: -7.654318332672119
    5. '<|end|>' → logprob: -8.529317855834961
    6. '    ' → logprob: -8.904317855834961
    7. ' ' → logprob: -9.404317855834961
    8. ',' → logprob: -9.529317855834961
    9. '	   ' → logprob: -10.029317855834961
    10. '1' → logprob: -10.654317855834961

Token 828: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7517873048782349
    2. ' if' → logprob: -1.3767873048782349
    3. 'if' → logprob: -1.3767873048782349
    4. '   ' → logprob: -3.7517871856689453
    5. '    ' → logprob: -9.751787185668945
    6. '	if' → logprob: -10.001787185668945
    7. ' ' → logprob: -10.001787185668945
    8. '	   ' → logprob: -10.751787185668945
    9. ',' → logprob: -12.001787185668945
    10. '  ' → logprob: -12.001787185668945

Token 829: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0032045694533735514
    2. ' j' → logprob: -5.753204345703125
    3. '   ' → logprob: -11.003204345703125
    4. 'i' → logprob: -11.628204345703125
    5. '	j' → logprob: -14.128204345703125
    6. '  ' → logprob: -15.628204345703125
    7. 'range' → logprob: -16.128204345703125
    8. '    ' → logprob: -16.128204345703125
    9. '_j' → logprob: -16.378204345703125
    10. ' ' → logprob: -17.503204345703125

Token 830: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06997790187597275
    2. 'in' → logprob: -2.6949779987335205
    3. ' i' → logprob: -10.944977760314941
    4. 'i' → logprob: -11.069977760314941
    5. ' ' → logprob: -12.819977760314941
    6. '   ' → logprob: -13.444977760314941
    7. '	in' → logprob: -13.569977760314941
    8. '(i' → logprob: -14.694977760314941
    9. 'range' → logprob: -14.694977760314941
    10. '  ' → logprob: -15.194977760314941

Token 831: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14380039274692535
    2. ' range' → logprob: -2.1438004970550537
    3. 'i' → logprob: -4.143800258636475
    4. ' i' → logprob: -7.393800258636475
    5. '(i' → logprob: -8.518800735473633
    6. '(range' → logprob: -10.268800735473633
    7. '[i' → logprob: -11.143800735473633
    8. '   ' → logprob: -13.643800735473633
    9. ' ' → logprob: -13.643800735473633
    10. ' (' → logprob: -14.768800735473633

Token 832: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31685543060302734
    2. '(i' → logprob: -1.3168554306030273
    3. ' i' → logprob: -5.691855430603027
    4. ' (' → logprob: -9.191855430603027
    5. '3' → logprob: -9.566855430603027
    6. '   ' → logprob: -10.691855430603027
    7. '(' → logprob: -11.191855430603027
    8. '{i' → logprob: -13.441855430603027
    9. ' ' → logprob: -13.691855430603027
    10. 'range' → logprob: -14.316855430603027

Token 833: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008217616006731987
    2. ' +' → logprob: -4.883217811584473
    3. '+i' → logprob: -7.508217811584473
    4. 'i' → logprob: -10.008217811584473
    5. '1' → logprob: -11.508217811584473
    6. '   ' → logprob: -13.133217811584473
    7. '[i' → logprob: -13.633217811584473
    8. '(i' → logprob: -13.758217811584473
    9. ' i' → logprob: -13.883217811584473
    10. '+j' → logprob: -14.383217811584473

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004935794277116656
    2. '3' → logprob: -7.62549352645874
    3. ' ' → logprob: -12.250494003295898
    4. 'i' → logprob: -14.125494003295898
    5. '0' → logprob: -17.2504940032959
    6. '   ' → logprob: -17.3754940032959
    7. '```' → logprob: -17.6254940032959
    8. '2' → logprob: -17.8754940032959
    9. 'j' → logprob: -18.7504940032959
    10. '
' → logprob: -20.0004940032959

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -12.000011444091797
    3. '3' → logprob: -12.250011444091797
    4. 'i' → logprob: -14.875011444091797
    5. '   ' → logprob: -16.062511444091797
    6. '
' → logprob: -16.250011444091797
    7. '2' → logprob: -16.812511444091797
    8. '0' → logprob: -16.937511444091797
    9. '```' → logprob: -17.375011444091797
    10. 'j' → logprob: -18.625011444091797

Token 836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004585518909152597
    2. '3' → logprob: -7.875458717346191
    3. ' ,' → logprob: -9.500458717346191
    4. ' ' → logprob: -13.750458717346191
    5. '```' → logprob: -14.250458717346191
    6. '   ' → logprob: -14.500458717346191
    7. ',
' → logprob: -14.750458717346191
    8. '):' → logprob: -15.125458717346191
    9. '_,' → logprob: -15.875458717346191
    10. '):
' → logprob: -16.250457763671875

Token 837: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.625051498413086
    4. '  ' → logprob: -20.000051498413086
    5. '       ' → logprob: -20.375051498413086
    6. ')' → logprob: -20.875051498413086
    7. '
' → logprob: -20.875051498413086
    8. '۳' → logprob: -21.000051498413086
    9. '```' → logprob: -21.375051498413086
    10. '    ' → logprob: -21.375051498413086

Token 838: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '
' → logprob: -19.250001907348633
    5. '       ' → logprob: -19.375001907348633
    6. 'i' → logprob: -20.000001907348633
    7. '```' → logprob: -20.000001907348633
    8. ')' → logprob: -20.125001907348633
    9. '  ' → logprob: -20.250001907348633
    10. '           ' → logprob: -20.375001907348633

Token 839: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030428331345319748
    2. '):' → logprob: -3.530428409576416
    3. '       ' → logprob: -8.030427932739258
    4. ':' → logprob: -9.030427932739258
    5. '):
' → logprob: -9.155427932739258
    6. '   ' → logprob: -10.030427932739258
    7. ':
' → logprob: -10.280427932739258
    8. '():
' → logprob: -11.155427932739258
    9. ',' → logprob: -11.655427932739258
    10. '):

' → logprob: -12.155427932739258

Token 840: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005793657619506121
    2. '           ' → logprob: -7.625579357147217
    3. ' if' → logprob: -10.125579833984375
    4. '
' → logprob: -10.500579833984375
    5. '        
' → logprob: -11.750579833984375
    6. '   ' → logprob: -12.875579833984375
    7. ',' → logprob: -12.875579833984375
    8. 'if' → logprob: -13.125579833984375
    9. '<|end|>' → logprob: -13.625579833984375
    10. '```' → logprob: -13.625579833984375

Token 841: ' diff' (ID: 8868)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0718027874827385
    2. ' if' → logprob: -3.321802854537964
    3. 'if' → logprob: -3.446802854537964
    4. '           ' → logprob: -6.696802616119385
    5. '   ' → logprob: -9.946803092956543
    6. '               ' → logprob: -10.446803092956543
    7. 'diff' (adapté à ' diff') → logprob: -11.321803092956543
    8. '
' → logprob: -11.946803092956543
    9. '```' → logprob: -12.196803092956543
    10. ',' → logprob: -12.821803092956543

Token 842: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22585554420948029
    2. ' =' → logprob: -1.6008555889129639
    3. '<|end|>' → logprob: -8.725855827331543
    4. '<' → logprob: -9.100855827331543
    5. ' <' → logprob: -9.225855827331543
    6. '   ' → logprob: -10.850855827331543
    7. ')' → logprob: -11.100855827331543
    8. '<=' → logprob: -11.850855827331543
    9. '=min' → logprob: -12.100855827331543
    10. ' <=' → logprob: -12.350855827331543

Token 843: ' abs' (ID: 8443)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.038153715431690216
    2. 'abs' → logprob: -3.663153648376465
    3. 'min' → logprob: -4.913153648376465
    4. ' minimal' → logprob: -5.788153648376465
    5. 'angles' → logprob: -7.038153648376465
    6. '   ' → logprob: -8.413153648376465
    7. ' abs' → logprob: -8.913153648376465
    8. '(min' → logprob: -9.913153648376465
    9. '(abs' → logprob: -10.913153648376465
    10. 'minimum' → logprob: -11.163153648376465

Token 844: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0880301371216774
    2. 'angles' → logprob: -2.5880300998687744
    3. '((' → logprob: -4.7130303382873535
    4. '(min' → logprob: -9.838029861450195
    5. '(((' → logprob: -10.088029861450195
    6. 'minimal' → logprob: -11.338029861450195
    7. 'min' → logprob: -12.213029861450195
    8. ' angles' → logprob: -12.338029861450195
    9. '(angle' → logprob: -13.088029861450195
    10. 'angle' → logprob: -14.338029861450195

Token 845: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.004781711380928755
    2. '(' → logprob: -5.379781723022461
    3. '((' → logprob: -9.129781723022461
    4. ' angles' → logprob: -10.754781723022461
    5. 'minimal' → logprob: -11.629781723022461
    6. 'ang' → logprob: -12.004781723022461
    7. 'angle' → logprob: -12.004781723022461
    8. ' (' → logprob: -12.879781723022461
    9. '   ' → logprob: -13.379781723022461
    10. 'min' → logprob: -13.504781723022461

Token 846: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.00010509284038562328
    2. 'sorted' → logprob: -9.375104904174805
    3. '[' → logprob: -11.875104904174805
    4. '[i' → logprob: -12.000104904174805
    5. '_set' → logprob: -12.875104904174805
    6. 'Sorted' → logprob: -13.250104904174805
    7. '[j' → logprob: -13.500104904174805
    8. '   ' → logprob: -15.125104904174805
    9. 's' → logprob: -15.375104904174805
    10. 'orted' → logprob: -15.875104904174805

Token 847: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.25199127197265625
    2. '[i' → logprob: -1.5019912719726562
    3. 'i' → logprob: -10.376991271972656
    4. '[' → logprob: -11.001991271972656
    5. '[(' → logprob: -12.001991271972656
    6. 'j' → logprob: -12.251991271972656
    7. '   ' → logprob: -14.251991271972656
    8. '(j' → logprob: -14.501991271972656
    9. '[
' → logprob: -15.001991271972656
    10. '[-' → logprob: -15.126991271972656

Token 848: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023468613624572754
    2. '-' → logprob: -3.773468494415283
    3. ' ' → logprob: -8.898468971252441
    4. ']' → logprob: -10.773468971252441
    5. '<|end|>' → logprob: -10.898468971252441
    6. '-angle' → logprob: -11.773468971252441
    7. '[' → logprob: -12.023468971252441
    8. ' angles' → logprob: -12.398468971252441
    9. ')' → logprob: -12.523468971252441
    10. 'angles' → logprob: -12.648468971252441

Token 849: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04304680973291397
    2. '-' → logprob: -3.168046712875366
    3. '<|end|>' → logprob: -10.793046951293945
    4. '-angle' → logprob: -11.418046951293945
    5. ' ' → logprob: -11.418046951293945
    6. ',' → logprob: -14.043046951293945
    7. '[' → logprob: -14.418046951293945
    8. '   ' → logprob: -14.543046951293945
    9. '       ' → logprob: -14.918046951293945
    10. ' ' → logprob: -14.918046951293945

Token 850: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.002186426194384694
    2. ' angles' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.87718677520752
    4. '           ' → logprob: -15.00218677520752
    5. '_angles' → logprob: -15.50218677520752
    6. 'ANGLES' → logprob: -15.62718677520752
    7. 'angle' → logprob: -16.002185821533203
    8. '       ' → logprob: -16.127185821533203
    9. 'Angles' → logprob: -17.002185821533203
    10. ' ' → logprob: -17.752185821533203

Token 851: '_sorted' (ID: 104993)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.010236571542918682
    2. '_angles' → logprob: -5.010236740112305
    3. ' angles' → logprob: -5.760236740112305
    4. '_sorted' → logprob: -8.635236740112305
    5. 'sorted' → logprob: -9.510236740112305
    6. 'ANGLES' → logprob: -9.510236740112305
    7. '   ' → logprob: -12.010236740112305
    8. 'Angles' → logprob: -12.010236740112305
    9. 's' → logprob: -12.385236740112305
    10. ')' → logprob: -12.385236740112305

Token 852: '[j' (ID: 7895)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.009117921814322472
    2. '_sorted' → logprob: -5.13411808013916
    3. '_angles' → logprob: -6.25911808013916
    4. '[j' → logprob: -7.00911808013916
    5. 'sorted' → logprob: -9.00911808013916
    6. 'j' → logprob: -9.25911808013916
    7. ' angles' → logprob: -9.25911808013916
    8. 'ANGLES' → logprob: -10.50911808013916
    9. '[' → logprob: -12.25911808013916
    10. '])' → logprob: -12.38411808013916

Token 853: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003204092849045992
    2. ')
' → logprob: -5.753203868865967
    3. ')>' → logprob: -12.253204345703125
    4. ' )' → logprob: -12.378204345703125
    5. '<|end|>' → logprob: -12.378204345703125
    6. ')<' → logprob: -12.628204345703125
    7. '   ' → logprob: -12.753204345703125
    8. ')
' → logprob: -12.878204345703125
    9. '           ' → logprob: -13.503204345703125
    10. '       ' → logprob: -14.503204345703125

Token 854: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7835754988482222e-05
    2. '<|end|>' → logprob: -11.875018119812012
    3. ' if' → logprob: -12.625018119812012
    4. 'if' → logprob: -13.125018119812012
    5. '
' → logprob: -13.250018119812012
    6. '	       ' → logprob: -14.000018119812012
    7. '		' → logprob: -14.250018119812012
    8. '       ' → logprob: -14.500018119812012
    9. '   ' → logprob: -14.750018119812012
    10. '               ' → logprob: -14.875018119812012

Token 855: ' diff' (ID: 8868)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03641389310359955
    2. 'if' → logprob: -3.5364139080047607
    3. ' if' → logprob: -5.036413669586182
    4. '   ' → logprob: -9.16141414642334
    5. '		' → logprob: -11.78641414642334
    6. '
' → logprob: -11.78641414642334
    7. '	if' → logprob: -12.16141414642334
    8. '	       ' → logprob: -12.28641414642334
    9. ' ' → logprob: -12.41141414642334
    10. '       ' → logprob: -13.03641414642334

Token 856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05146222189068794
    2. ' =' → logprob: -3.176462173461914
    3. '<=' → logprob: -5.926462173461914
    4. '<|end|>' → logprob: -6.176462173461914
    5. '>' → logprob: -6.801462173461914
    6. ' <=' → logprob: -7.301462173461914
    7. '<' → logprob: -7.551462173461914
    8. ' <' → logprob: -7.676462173461914
    9. '   ' → logprob: -8.301462173461914
    10. ' >' → logprob: -8.801462173461914

Token 857: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014176911674439907
    2. ' min' → logprob: -4.889176845550537
    3. 'diff' → logprob: -5.514176845550537
    4. '360' → logprob: -6.014176845550537
    5. ' diff' → logprob: -10.139177322387695
    6. '(min' → logprob: -11.264177322387695
    7. 'abs' → logprob: -11.889177322387695
    8. '	min' → logprob: -12.264177322387695
    9. '   ' → logprob: -12.389177322387695
    10. 'minimal' → logprob: -13.139177322387695

Token 858: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.000803672184702009
    2. '(' → logprob: -7.250803470611572
    3. 'diff' → logprob: -9.62580394744873
    4. '(abs' → logprob: -10.75080394744873
    5. ' (' → logprob: -13.37580394744873
    6. ' diff' → logprob: -13.50080394744873
    7. '(
' → logprob: -13.62580394744873
    8. '	diff' → logprob: -13.75080394744873
    9. '360' → logprob: -14.62580394744873
    10. '(dist' → logprob: -15.87580394744873

Token 859: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015113171190023422
    2. '(diff' → logprob: -4.390113353729248
    3. 'diff' → logprob: -6.265113353729248
    4. '(' → logprob: -7.640113353729248
    5. ' ,' → logprob: -9.39011287689209
    6. '360' → logprob: -10.01511287689209
    7. ',
' → logprob: -10.51511287689209
    8. '(abs' → logprob: -10.76511287689209
    9. ' diff' → logprob: -11.26511287689209
    10. '   ' → logprob: -11.51511287689209

Token 860: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0004942946252413094
    2. ' ' → logprob: -7.625494480133057
    3. 'abs' → logprob: -12.125494003295898
    4. '   ' → logprob: -14.500494003295898
    5. ' abs' → logprob: -16.5004940032959
    6. '365' → logprob: -16.6254940032959
    7. '36' → logprob: -16.8754940032959
    8. '
' → logprob: -17.0004940032959
    9. '           ' → logprob: -17.3754940032959
    10. '359' → logprob: -17.5004940032959

Token 861: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.512236498361744e-07
    2. 'abs' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.875
    4. '(' → logprob: -19.125
    5. '
' → logprob: -19.75
    6. '36' → logprob: -20.375
    7. '365' → logprob: -20.625
    8. '   ' → logprob: -21.25
    9. '359' → logprob: -21.25
    10. '```' → logprob: -22.25

Token 862: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04859759286046028
    2. '-' → logprob: -3.048597574234009
    3. '-d' → logprob: -12.42359733581543
    4. 'diff' → logprob: -13.17359733581543
    5. ' ' → logprob: -13.54859733581543
    6. ' ' → logprob: -13.54859733581543
    7. ')' → logprob: -13.92359733581543
    8. '	' → logprob: -15.67359733581543
    9. ',' → logprob: -15.92359733581543
    10. '	diff' → logprob: -16.17359733581543

Token 863: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.306760805164231e-05
    2. ' diff' → logprob: -11.25001335144043
    3. '	diff' → logprob: -17.00001335144043
    4. '(diff' → logprob: -20.37501335144043
    5. 'dif' → logprob: -20.87501335144043
    6. '   ' → logprob: -21.50001335144043
    7. 'abs' → logprob: -21.87501335144043
    8. 'difference' → logprob: -22.00001335144043
    9. '
' → logprob: -22.25001335144043
    10. '.diff' → logprob: -22.62501335144043

Token 864: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032613694202154875
    2. ')
' → logprob: -6.253261566162109
    3. '           ' → logprob: -6.753261566162109
    4. '<|end|>' → logprob: -9.50326156616211
    5. '   ' → logprob: -10.12826156616211
    6. ')return' → logprob: -11.00326156616211
    7. '       ' → logprob: -11.12826156616211
    8. ' )' → logprob: -12.12826156616211
    9. '<|end|>' → logprob: -12.87826156616211
    10. ')\
' → logprob: -13.75326156616211

Token 865: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003445216570980847
    2. '       ' → logprob: -8.250344276428223
    3. '   ' → logprob: -9.500344276428223
    4. 'if' → logprob: -12.875344276428223
    5. ' if' → logprob: -13.250344276428223
    6. '	       ' → logprob: -14.000344276428223
    7. '<|end|>' → logprob: -14.125344276428223
    8. '          ' → logprob: -14.500344276428223
    9. '		' → logprob: -14.500344276428223
    10. '```' → logprob: -14.625344276428223

Token 866: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024200329557061195
    2. 'if' (adapté à ' if') → logprob: -3.774200439453125
    3. ' if' → logprob: -7.024200439453125
    4. '       ' → logprob: -9.899200439453125
    5. '   ' → logprob: -11.274200439453125
    6. '          ' → logprob: -14.774200439453125
    7. '	       ' → logprob: -15.399200439453125
    8. '	   ' → logprob: -15.774200439453125
    9. '		' → logprob: -15.899200439453125
    10. '	if' → logprob: -16.024200439453125

Token 867: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0788951888680458
    2. ' diff' → logprob: -2.578895092010498
    3. '	diff' → logprob: -12.453895568847656
    4. '   ' → logprob: -14.453895568847656
    5. '           ' → logprob: -14.453895568847656
    6. '(diff' → logprob: -16.078895568847656
    7. ' ' → logprob: -16.328895568847656
    8. '    ' → logprob: -16.828895568847656
    9. '       ' → logprob: -16.828895568847656
    10. 'dif' → logprob: -17.453895568847656

Token 868: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9856715798377991
    2. ' <' → logprob: -1.1106715202331543
    3. '<=' → logprob: -1.7356715202331543
    4. ' <=' → logprob: -2.1106715202331543
    5. '   ' → logprob: -12.110671997070312
    6. '<th' → logprob: -12.360671997070312
    7. '<|end|>' → logprob: -12.360671997070312
    8. ')<=' → logprob: -12.485671997070312
    9. '           ' → logprob: -12.860671997070312
    10. '≤' → logprob: -13.110671997070312

Token 869: ' eps' (ID: 39683)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.00015574338613077998
    2. '1' → logprob: -8.875155448913574
    3. ' eps' → logprob: -11.125155448913574
    4. 'epsilon' → logprob: -14.250155448913574
    5. 'EPS' → logprob: -15.875155448913574
    6. '   ' → logprob: -16.00015640258789
    7. 'ep' → logprob: -17.00015640258789
    8. '_eps' → logprob: -17.37515640258789
    9. 'esp' → logprob: -17.50015640258789
    10. ' ' → logprob: -17.62515640258789

Token 870: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3458244800567627
    2. ':' → logprob: -1.8458244800567627
    3. '           ' → logprob: -2.5958244800567627
    4. ':
' → logprob: -3.0958244800567627
    5. '       ' → logprob: -4.720824241638184
    6. ':return' → logprob: -5.345824241638184
    7. '                       ' → logprob: -8.470824241638184
    8. '                   ' → logprob: -8.720824241638184
    9. ' return' → logprob: -9.220824241638184
    10. '              ' → logprob: -9.470824241638184

Token 871: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025673373602330685
    2. 'return' → logprob: -6.127567291259766
    3. ' return' → logprob: -8.002567291259766
    4. '           ' → logprob: -10.627567291259766
    5. '	return' → logprob: -12.502567291259766
    6. '	           ' → logprob: -12.752567291259766
    7. '
' → logprob: -12.877567291259766
    8. '                
' → logprob: -13.002567291259766
    9. '                   ' → logprob: -13.127567291259766
    10. '			' → logprob: -13.127567291259766

Token 872: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.026579059660434723
    2. ' return' → logprob: -3.7765791416168213
    3. '               ' → logprob: -5.776578903198242
    4. '	return' → logprob: -8.776578903198242
    5. '           ' → logprob: -10.526578903198242
    6. '       ' → logprob: -11.151578903198242
    7. '                   ' → logprob: -11.276578903198242
    8. '   ' → logprob: -11.401578903198242
    9. ':return' → logprob: -12.776578903198242
    10. 'False' → logprob: -13.401578903198242

Token 873: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. 'True' → logprob: -19.500036239624023
    4. '(False' → logprob: -22.625036239624023
    5. 'false' → logprob: -24.000036239624023
    6. 'F' → logprob: -24.875036239624023
    7. '=False' → logprob: -25.250036239624023
    8. 'None' → logprob: -26.250036239624023
    9. '_false' → logprob: -26.500036239624023
    10. 'FALSE' → logprob: -26.625036239624023

Token 874: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029599938541650772
    2. '	return' → logprob: -4.404600143432617
    3. '       ' → logprob: -4.904600143432617
    4. '    
' → logprob: -5.654600143432617
    5. '<|end|>' → logprob: -5.654600143432617
    6. 'return' → logprob: -7.279600143432617
    7. '
' → logprob: -7.529600143432617
    8. ' return' → logprob: -8.279600143432617
    9. '	
' → logprob: -8.904600143432617
    10. '	continue' → logprob: -8.904600143432617

Token 875: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01164611428976059
    2. ' return' → logprob: -4.761646270751953
    3. 'return' → logprob: -6.011646270751953
    4. '	return' → logprob: -7.886646270751953
    5. '       ' → logprob: -9.011646270751953
    6. '
' → logprob: -10.386646270751953
    7. ' ' → logprob: -10.886646270751953
    8. '    
' → logprob: -11.636646270751953
    9. '```' → logprob: -11.886646270751953
    10. '  ' → logprob: -12.636646270751953

Token 876: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.034767407923936844
    2. '   ' → logprob: -3.6597673892974854
    3. ' return' → logprob: -4.9097676277160645
    4. '	return' → logprob: -7.0347676277160645
    5. '
' → logprob: -8.909767150878906
    6. '```' → logprob: -11.159767150878906
    7. 'eturn' → logprob: -12.159767150878906
    8. ' ' → logprob: -12.284767150878906
    9. 'Return' → logprob: -12.534767150878906
    10. '@return' → logprob: -13.034767150878906

Token 877: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. '(True' → logprob: -19.514163970947266
    4. '=True' → logprob: -22.514163970947266
    5. ' ' → logprob: -23.014163970947266
    6. '   ' → logprob: -24.014163970947266
    7. 'true' → logprob: -24.014163970947266
    8. 'False' → logprob: -24.639163970947266
    9. 'Tr' → logprob: -24.889163970947266
    10. '.True' → logprob: -25.514163970947266

Token 878: '


' (ID: 2499)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07204285264015198
    2. 'def' → logprob: -3.072042942047119
    3. '<|end|>' → logprob: -3.822042942047119
    4. '```' → logprob: -7.322042942047119
    5. '<|end|>' → logprob: -7.572042942047119
    6. 'import' → logprob: -9.697042465209961
    7. '\' → logprob: -11.322042465209961
    8. '
' → logprob: -11.447042465209961
    9. '  
' → logprob: -11.947042465209961
    10. '``' → logprob: -12.447042465209961

Token 879: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4745710790157318
    2. 'def' → logprob: -0.9745711088180542
    3. '<|end|>' → logprob: -7.974571228027344
    4. '```' → logprob: -9.599571228027344
    5. '<|end|>' → logprob: -9.849571228027344
    6. 'import' → logprob: -11.099571228027344
    7. '  
' → logprob: -13.474571228027344
    8. ' #' → logprob: -13.599571228027344
    9. ' def' → logprob: -13.724571228027344
    10. '\' → logprob: -13.849571228027344

Token 880: ' Vér' (ID: 159169)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003191612893715501
    2. '#' → logprob: -5.7531914710998535
    3. 'import' → logprob: -11.253191947937012
    4. 'class' → logprob: -14.878191947937012
    5. 'from' → logprob: -15.378191947937012
    6. ' def' → logprob: -15.503191947937012
    7. '```' → logprob: -16.253190994262695
    8. '"""' → logprob: -17.878190994262695
    9. 'de' → logprob: -18.378190994262695
    10. ' #' → logprob: -18.753190994262695

Token 881: 'ifie' (ID: 46409)
  Prédit: 'ification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.5468207001686096
    2. 'ifie' → logprob: -1.0468206405639648
    3. 'if' → logprob: -3.296820640563965
    4. 'ifier' → logprob: -3.421820640563965
    5. '#' → logprob: -8.421820640563965
    6. 'ifiez' → logprob: -9.046820640563965
    7. 'def' → logprob: -9.671820640563965
    8. 'ificate' → logprob: -10.796820640563965
    9. 'f' → logprob: -10.921820640563965
    10. 'ifi' → logprob: -11.296820640563965

Token 882: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5803658366203308
    2. ' la' → logprob: -1.8303658962249756
    3. ' if' → logprob: -2.5803658962249756
    4. ' si' → logprob: -2.5803658962249756
    5. '#' → logprob: -2.9553658962249756
    6. ' que' → logprob: -3.7053658962249756
    7. 'la' → logprob: -4.3303656578063965
    8. 'if' → logprob: -4.5803656578063965
    9. 'si' → logprob: -4.5803656578063965
    10. ' def' → logprob: -5.0803656578063965

Token 883: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.5936827063560486
    2. '#' → logprob: -1.7186827659606934
    3. 'conditions' → logprob: -2.3436827659606934
    4. 'def' → logprob: -3.3436827659606934
    5. 'tro' → logprob: -3.9686827659606934
    6. 'che' → logprob: -3.9686827659606934
    7. 'poss' → logprob: -4.343682765960693
    8. 'égalité' → logprob: -4.468682765960693
    9. 'exist' → logprob: -4.843682765960693
    10. 'position' → logprob: -5.218682765960693

Token 884: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027512614615261555
    2. '#' → logprob: -6.002751350402832
    3. '(' → logprob: -9.377751350402832
    4. ' def' → logprob: -10.252751350402832
    5. 'de' → logprob: -10.502751350402832
    6. '<|end|>' → logprob: -10.752751350402832
    7. 'for' → logprob: -11.002751350402832
    8. 'no' → logprob: -11.502751350402832
    9. '(
' → logprob: -11.752751350402832
    10. 'that' → logprob: -11.877751350402832

Token 885: 'Deux' (ID: 133838)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.2328462600708008
    2. 'angles' → logprob: -1.4828462600708008
    3. 'no' → logprob: -2.357846260070801
    4. 'over' → logprob: -2.357846260070801
    5. 'three' → logprob: -3.857846260070801
    6. 'not' → logprob: -4.107846260070801
    7. 'distinct' → logprob: -4.107846260070801
    8. 't' → logprob: -4.107846260070801
    9. 'ah' → logprob: -4.232846260070801
    10. 'angle' → logprob: -4.357846260070801

Token 886: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -1.3534713983535767
    2. 'a' → logprob: -1.4784713983535767
    3. ' aigu' → logprob: -1.8534713983535767
    4. ' angles' → logprob: -1.9784713983535767
    5. '#' → logprob: -2.353471279144287
    6. '_' → logprob: -3.978471279144287
    7. '_angles' → logprob: -3.978471279144287
    8. '```' → logprob: -3.978471279144287
    9. ' doigts' → logprob: -4.353471279144287
    10. ' a' → logprob: -4.853471279144287

Token 887: ' entre' (ID: 3853)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7305902242660522
    2. 'distinct' → logprob: -1.4805902242660522
    3. 's' → logprob: -2.355590343475342
    4. ' distinct' → logprob: -2.980590343475342
    5. '_diff' → logprob: -3.605590343475342
    6. '_dist' → logprob: -3.730590343475342
    7. '_' → logprob: -3.730590343475342
    8. 'different' → logprob: -4.230590343475342
    9. ' sont' → logprob: -4.480590343475342
    10. '_s' → logprob: -5.230590343475342

Token 888: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8527892827987671
    2. 'tro' → logprob: -1.852789282798767
    3. 'de' → logprob: -2.3527894020080566
    4. 'l' → logprob: -2.8527894020080566
    5. 'ah' → logprob: -2.8527894020080566
    6. '(' → logprob: -3.1027894020080566
    7. 'a' → logprob: -3.7277894020080566
    8. '3' → logprob: -4.102789402008057
    9. 'une' → logprob: -4.227789402008057
    10. 'cha' → logprob: -4.227789402008057

Token 889: ' main' (ID: 2758)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.3140001893043518
    2. 'de' → logprob: -2.439000129699707
    3. 'a' → logprob: -2.564000129699707
    4. 'angles' → logprob: -3.689000129699707
    5. '3' → logprob: -3.939000129699707
    6. 'les' → logprob: -4.439000129699707
    7. 'm' → logprob: -4.814000129699707
    8. 'qu' → logprob: -5.064000129699707
    9. 'quel' → logprob: -5.814000129699707
    10. '```' → logprob: -5.814000129699707

Token 890: ' des' (ID: 731)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.1269313097000122
    2. 'hour' → logprob: -1.7519313097000122
    3. 'heure' → logprob: -1.8769313097000122
    4. 's' → logprob: -2.6269311904907227
    5. 'he' → logprob: -3.5019311904907227
    6. ' heure' → logprob: -3.5019311904907227
    7. 'de' → logprob: -3.7519311904907227
    8. '#' → logprob: -3.7519311904907227
    9. 'd' → logprob: -4.126931190490723
    10. ' hour' → logprob: -4.376931190490723

Token 891: ' secondes' (ID: 109098)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6488959193229675
    2. 'minutes' → logprob: -1.2738959789276123
    3. 'tro' → logprob: -2.2738959789276123
    4. 'hor' → logprob: -3.5238959789276123
    5. 'heure' → logprob: -4.273895740509033
    6. '#' → logprob: -4.273895740509033
    7. ' heures' → logprob: -4.773895740509033
    8. 'de' → logprob: -4.898895740509033
    9. 'angles' → logprob: -5.273895740509033
    10. 'l' → logprob: -5.773895740509033

Token 892: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.13591764867305756
    2. ' et' → logprob: -2.3859176635742188
    3. ',' → logprob: -4.385917663574219
    4. 's' → logprob: -4.510917663574219
    5. '#' → logprob: -5.385917663574219
    6. ' and' → logprob: -6.260917663574219
    7. 'and' → logprob: -7.010917663574219
    8. 'diff' → logprob: -7.260917663574219
    9. 'import' → logprob: -7.385917663574219
    10. 'de' → logprob: -7.760917663574219

Token 893: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.41981518268585205
    2. 'l' → logprob: -1.669815182685852
    3. 'celle' → logprob: -2.1698150634765625
    4. 'minute' → logprob: -4.4198150634765625
    5. '#' → logprob: -5.2948150634765625
    6. 'heure' → logprob: -5.7948150634765625
    7. 'les' → logprob: -5.9198150634765625
    8. 'de' → logprob: -5.9198150634765625
    9. 'c' → logprob: -6.0448150634765625
    10. ' celle' → logprob: -6.0448150634765625

Token 894: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7150813937187195
    2. 'aut' → logprob: -1.7150814533233643
    3. 'minutes' → logprob: -1.9650814533233643
    4. ' autres' → logprob: -3.0900814533233643
    5. 'm' → logprob: -3.4650814533233643
    6. '#' → logprob: -3.4650814533233643
    7. ' minutes' → logprob: -3.9650814533233643
    8. 'angles' → logprob: -4.215081214904785
    9. 'a' → logprob: -4.215081214904785
    10. '```' → logprob: -5.465081214904785

Token 895: ' autres' (ID: 18701)
  Prédit: ' autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autres' → logprob: -0.7479379773139954
    2. 'aut' → logprob: -1.3729379177093506
    3. ' aigu' → logprob: -2.2479379177093506
    4. 'a' → logprob: -2.6229379177093506
    5. 'angles' → logprob: -2.7479379177093506
    6. 'm' → logprob: -4.49793815612793
    7. '#' → logprob: -4.87293815612793
    8. ' angles' → logprob: -5.62293815612793
    9. ' mains' → logprob: -6.12293815612793
    10. 'minutes' → logprob: -7.37293815612793

Token 896: ' sont' (ID: 5242)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1608206033706665
    2. 'angles' → logprob: -2.660820484161377
    3. ' aigu' → logprob: -3.160820484161377
    4. 'a' → logprob: -4.785820484161377
    5. '#' → logprob: -4.785820484161377
    6. ' mains' → logprob: -5.160820484161377
    7. 'do' → logprob: -5.535820484161377
    8. ' angles' → logprob: -5.785820484161377
    9. '```' → logprob: -6.535820484161377
    10. 'positions' → logprob: -6.535820484161377

Token 897: ' ég' (ID: 33150)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.2198271751403809
    2. 'strict' → logprob: -1.4698271751403809
    3. 'sup' → logprob: -1.9698271751403809
    4. 'ég' → logprob: -1.9698271751403809
    5. 'distinct' → logprob: -3.344827175140381
    6. '>' → logprob: -3.469827175140381
    7. ' ég' → logprob: -3.844827175140381
    8. 'diff' → logprob: -4.094827175140381
    9. 'dist' → logprob: -4.219827175140381
    10. '>=' → logprob: -4.344827175140381

Token 898: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.05076209455728531
    2. 'al' → logprob: -3.675762176513672
    3. 'ales' → logprob: -4.175762176513672
    4. 'als' → logprob: -4.925762176513672
    5. 'ale' → logprob: -7.800762176513672
    6. 'a' → logprob: -8.300762176513672
    7. '```' → logprob: -8.800762176513672
    8. 'alis' → logprob: -9.050762176513672
    9. '``' → logprob: -9.675762176513672
    10. '[' → logprob: -10.050762176513672

Token 899: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1069992780685425
    2. '.' → logprob: -2.106999397277832
    3. 'def' → logprob: -2.106999397277832
    4. ',' → logprob: -2.481999397277832
    5. ' (' → logprob: -2.481999397277832
    6. 'à' → logprob: -3.106999397277832
    7. ' à' → logprob: -3.231999397277832
    8. ':' → logprob: -3.231999397277832
    9. '(' → logprob: -3.481999397277832
    10. '#' → logprob: -4.231999397277832

Token 900: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -13.000003814697266
    3. ' def' → logprob: -13.750003814697266
    4. '#' → logprob: -14.500003814697266
    5. '
' → logprob: -15.250003814697266
    6. ':def' → logprob: -17.125003814697266
    7. 'de' → logprob: -17.250003814697266
    8. ':' → logprob: -18.500003814697266
    9. '(def' → logprob: -19.375003814697266
    10. '\' → logprob: -19.625003814697266

Token 901: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -16.125
    3. ' def' → logprob: -18.375
    4. '
' → logprob: -21.75
    5. '```' → logprob: -22.0
    6. '  
' → logprob: -25.5
    7. ':def' → logprob: -25.625
    8. '	def' → logprob: -25.75
    9. 'from' → logprob: -25.75
    10. 'import' → logprob: -25.875

Token 902: 'it' (ID: 278)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005780545179732144
    2. '#' → logprob: -8.000577926635742
    3. 'd' → logprob: -8.875577926635742
    4. ' def' → logprob: -9.875577926635742
    5. 'dé' → logprob: -11.125577926635742
    6. '
' → logprob: -11.250577926635742
    7. 'f' → logprob: -11.875577926635742
    8. 'de' → logprob: -11.875577926635742
    9. 'ur' → logprob: -13.625577926635742
    10. 'r' → logprob: -13.625577926635742

Token 903: ' angle' (ID: 16538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018502239836379886
    2. '#' → logprob: -6.876850128173828
    3. '
' → logprob: -7.751850128173828
    4. ' def' → logprob: -8.501850128173828
    5. 'de' → logprob: -9.251850128173828
    6. 'une' → logprob: -11.001850128173828
    7. 'angle' → logprob: -11.251850128173828
    8. 'la' → logprob: -11.626850128173828
    9. '```' → logprob: -12.251850128173828
    10. 'equal' → logprob: -12.376850128173828

Token 904: '_sm' (ID: 76283)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4741812944412231
    2. '_d' → logprob: -1.7241812944412231
    3. '_s' → logprob: -1.9741812944412231
    4. '1' → logprob: -1.9741812944412231
    5. 'diff' → logprob: -2.5991811752319336
    6. 'def' → logprob: -3.0991811752319336
    7. '_diff' → logprob: -3.2241811752319336
    8. '_' → logprob: -3.3491811752319336
    9. 'd' → logprob: -3.3491811752319336
    10. '_between' → logprob: -3.4741811752319336

Token 905: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6714364886283875
    2. ',' → logprob: -2.1714365482330322
    3. 'def' → logprob: -2.1714365482330322
    4. ' =' → logprob: -2.5464365482330322
    5. '1' → logprob: -2.6714365482330322
    6. 's' → logprob: -3.2964365482330322
    7. '==' → logprob: -3.9214365482330322
    8. 'angle' → logprob: -4.671436309814453
    9. 'a' → logprob: -5.046436309814453
    10. '_' → logprob: -5.421436309814453

Token 906: ' angle' (ID: 16538)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.44433462619781494
    2. 'minimal' → logprob: -1.194334626197815
    3. 'lambda' → logprob: -3.3193345069885254
    4. '(lambda' → logprob: -5.194334506988525
    5. '(abs' → logprob: -5.319334506988525
    6. 'def' → logprob: -5.694334506988525
    7. 'angle' → logprob: -5.819334506988525
    8. 'min' → logprob: -6.444334506988525
    9. ' abs' → logprob: -7.819334506988525
    10. '(min' → logprob: -8.569334983825684

Token 907: ' entre' (ID: 3853)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.23393286764621735
    2. 's' → logprob: -1.6089328527450562
    3. 'in' → logprob: -5.733932971954346
    4. '_' → logprob: -6.483932971954346
    5. '_h' → logprob: -6.733932971954346
    6. '_m' → logprob: -7.858932971954346
    7. 'between' → logprob: -8.358932495117188
    8. '1' → logprob: -8.483932495117188
    9. 'm' → logprob: -8.608932495117188
    10. 'diff' → logprob: -8.733932495117188

Token 908: ' seconde' (ID: 66204)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.1285756379365921
    2. 'ah' → logprob: -2.378575563430786
    3. 'am' → logprob: -4.503575801849365
    4. 'angle' → logprob: -4.878575801849365
    5. 'l' → logprob: -5.628575801849365
    6. 'la' → logprob: -6.753575801849365
    7. 'angles' → logprob: -7.003575801849365
    8. 'les' → logprob: -7.128575801849365
    9. '(' → logprob: -7.378575801849365
    10. 'the' → logprob: -7.753575801849365

Token 909: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11977258324623108
    2. 's' → logprob: -2.7447726726531982
    3. '_s' → logprob: -3.1197726726531982
    4. '_h' → logprob: -6.369772434234619
    5. ',' → logprob: -6.619772434234619
    6. '_,' → logprob: -7.744772434234619
    7. ' _' → logprob: -8.369772911071777
    8. 'et' → logprob: -8.619772911071777
    9. '_m' → logprob: -9.244772911071777
    10. '```' → logprob: -9.369772911071777

Token 910: ' minute' (ID: 12434)
  Prédit: 'heure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heure' → logprob: -0.08483564108610153
    2. 'minute' → logprob: -2.8348355293273926
    3. 'l' → logprob: -4.459835529327393
    4. 'h' → logprob: -5.584835529327393
    5. 'hour' → logprob: -5.834835529327393
    6. 'he' → logprob: -6.084835529327393
    7. 'ah' → logprob: -7.334835529327393
    8. 'min' → logprob: -8.33483600616455
    9. 'heur' → logprob: -8.45983600616455
    10. 'la' → logprob: -8.70983600616455

Token 911: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003488129877950996
    2. '_' → logprob: -9.625349044799805
    3. 's' → logprob: -9.625349044799805
    4. '_def' → logprob: -9.750349044799805
    5. '_s' → logprob: -10.625349044799805
    6. ' def' → logprob: -10.750349044799805
    7. '#' → logprob: -11.000349044799805
    8. '
' → logprob: -11.125349044799805
    9. '(' → logprob: -11.125349044799805
    10. '(a' → logprob: -11.250349044799805

Token 912: ' angle' (ID: 16538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23379454016685486
    2. 'angle' → logprob: -1.7337945699691772
    3. 'def' → logprob: -3.6087944507598877
    4. ' #' → logprob: -5.983794689178467
    5. ' angle' → logprob: -6.608794689178467
    6. '   ' → logprob: -7.733794689178467
    7. ' def' → logprob: -8.858794212341309
    8. 'sm' → logprob: -9.108794212341309
    9. ' ' → logprob: -10.233794212341309
    10. '
' → logprob: -10.358794212341309

Token 913: '_sh' (ID: 8823)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.1514524519443512
    2. '_sh' → logprob: -2.0264525413513184
    3. 'sh' → logprob: -5.401452541351318
    4. '_s' → logprob: -6.901452541351318
    5. 'hm' → logprob: -6.901452541351318
    6. '_' → logprob: -7.026452541351318
    7. '_m' → logprob: -7.026452541351318
    8. '_hr' → logprob: -8.77645206451416
    9. 'h' → logprob: -9.65145206451416
    10. '_hd' → logprob: -9.65145206451416

Token 914: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10042145848274231
    2. '=' → logprob: -2.35042142868042
    3. ' ' → logprob: -9.475421905517578
    4. '_' → logprob: -10.225421905517578
    5. ',' → logprob: -10.475421905517578
    6. 'def' → logprob: -10.850421905517578
    7. '   ' → logprob: -11.600421905517578
    8. ')' → logprob: -12.350421905517578
    9. '```' → logprob: -12.475421905517578
    10. '#' → logprob: -12.600421905517578

Token 915: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.038566719740629196
    2. ' angle' → logprob: -3.413566827774048
    3. 'l' → logprob: -6.788566589355469
    4. 'abs' → logprob: -6.788566589355469
    5. '(angle' → logprob: -7.163566589355469
    6. '#' → logprob: -7.288566589355469
    7. 'la' → logprob: -8.163566589355469
    8. 'def' → logprob: -8.288566589355469
    9. ' l' → logprob: -8.788566589355469
    10. 'le' → logprob: -9.163566589355469

Token 916: ' entre' (ID: 3853)
  Prédit: '_sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.1746479719877243
    2. '_s' → logprob: -3.4246480464935303
    3. 'entre' → logprob: -3.4246480464935303
    4. 'between' → logprob: -3.5496480464935303
    5. '=' → logprob: -3.9246480464935303
    6. '_between' → logprob: -4.424647808074951
    7. ' =' → logprob: -4.799647808074951
    8. 'sm' → logprob: -4.799647808074951
    9. '_pm' → logprob: -5.424647808074951
    10. '_' → logprob: -5.674647808074951

Token 917: ' seconde' (ID: 66204)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0339357815682888
    2. ' seconde' → logprob: -3.658935785293579
    3. 'second' → logprob: -5.283935546875
    4. 'heure' → logprob: -6.033935546875
    5. 's' → logprob: -10.033935546875
    6. ' ' → logprob: -11.033935546875
    7. '#' → logprob: -11.533935546875
    8. ' secondes' → logprob: -11.658935546875
    9. 'hour' → logprob: -11.908935546875
    10. 'seconds' → logprob: -12.033935546875

Token 918: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.04603813216090202
    2. ' et' → logprob: -3.6710381507873535
    3. '_et' → logprob: -4.0460381507873535
    4. 'and' → logprob: -7.4210381507873535
    5. '_' → logprob: -7.4210381507873535
    6. ' ' → logprob: -7.7960381507873535
    7. '_s' → logprob: -8.546037673950195
    8. ' and' → logprob: -8.921037673950195
    9. '-' → logprob: -10.921037673950195
    10. '   ' → logprob: -11.046037673950195

Token 919: ' heure' (ID: 40341)
  Prédit: 'heure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heure' → logprob: -0.00022809267102275044
    2. 'hour' → logprob: -8.750227928161621
    3. ' heure' → logprob: -10.250227928161621
    4. 'heur' → logprob: -10.750227928161621
    5. 'he' → logprob: -11.375227928161621
    6. ''heure' → logprob: -14.250227928161621
    7. 'h' → logprob: -15.375227928161621
    8. 'l' → logprob: -16.375228881835938
    9. 'hora' → logprob: -16.500228881835938
    10. 'hou' → logprob: -16.625228881835938

Token 920: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.292907877039397e-06
    2. '#' → logprob: -13.50000286102295
    3. '
' → logprob: -13.87500286102295
    4. '```' → logprob: -14.25000286102295
    5. ' def' → logprob: -15.25000286102295
    6. '\' → logprob: -18.750003814697266
    7. '``' → logprob: -19.125003814697266
    8. '  
' → logprob: -19.500003814697266
    9. ':def' → logprob: -19.875003814697266
    10. '_def' → logprob: -20.125003814697266

Token 921: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. '#' → logprob: -14.000000953674316
    3. ' def' → logprob: -15.875000953674316
    4. '```' → logprob: -16.250001907348633
    5. '
' → logprob: -17.250001907348633
    6. 'de' → logprob: -18.500001907348633
    7. 'd' → logprob: -19.125001907348633
    8. '\' → logprob: -20.000001907348633
    9. '#
' → logprob: -20.625001907348633
    10. '``' → logprob: -20.875001907348633

Token 922: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.125
    3. ' def' → logprob: -16.5
    4. '#' → logprob: -19.375
    5. '
' → logprob: -21.625
    6. '``' → logprob: -22.625
    7. 'd' → logprob: -22.75
    8. 'de' → logprob: -23.0
    9. 'from' → logprob: -23.5
    10. '	def' → logprob: -24.125

Token 923: ' doit' (ID: 21822)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00044651966891251504
    2. 'continue' → logprob: -8.125446319580078
    3. '#' → logprob: -9.500446319580078
    4. 'dé' → logprob: -9.750446319580078
    5. ' def' → logprob: -12.625446319580078
    6. 'define' → logprob: -12.750446319580078
    7. '
' → logprob: -13.125446319580078
    8. 'return' → logprob: -13.250446319580078
    9. ' continue' → logprob: -13.375446319580078
    10. ' déf' → logprob: -14.000446319580078

Token 924: ' avoir' (ID: 16595)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38826751708984375
    2. 'return' → logprob: -2.3882675170898438
    3. 'def' → logprob: -2.6382675170898438
    4. '#' → logprob: -2.7632675170898438
    5. 'tr' → logprob: -3.6382675170898438
    6. 'ver' → logprob: -4.388267517089844
    7. 'dé' → logprob: -4.888267517089844
    8. 'ret' → logprob: -5.013267517089844
    9. ' vérifier' → logprob: -5.013267517089844
    10. 'pr' → logprob: -5.263267517089844

Token 925: ' angle' (ID: 16538)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.09928829222917557
    2. ' abs' → logprob: -2.59928822517395
    3. 'minimal' → logprob: -4.099288463592529
    4. '(abs' → logprob: -6.599288463592529
    5. ' minimal' → logprob: -6.849288463592529
    6. 'def' → logprob: -7.474288463592529
    7. 'angle' → logprob: -7.974288463592529
    8. '
' → logprob: -9.474287986755371
    9. 'lambda' → logprob: -9.724287986755371
    10. '   ' → logprob: -9.974287986755371

Token 926: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.00026300468016415834
    2. '_sh' → logprob: -8.750263214111328
    3. 'sm' → logprob: -9.875263214111328
    4. '_s' → logprob: -10.000263214111328
    5. 's' → logprob: -12.875263214111328
    6. '	sm' → logprob: -14.125263214111328
    7. '
' → logprob: -14.625263214111328
    8. '_ss' → logprob: -15.000263214111328
    9. '```' → logprob: -15.375263214111328
    10. '_SM' → logprob: -15.500263214111328

Token 927: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40379586815834045
    2. '==' → logprob: -1.153795838356018
    3. ' <=' → logprob: -4.5287957191467285
    4. '<=' → logprob: -5.9037957191467285
    5. '=' → logprob: -6.1537957191467285
    6. ' =' → logprob: -8.653796195983887
    7. 's' → logprob: -8.653796195983887
    8. ',' → logprob: -8.903796195983887
    9. ' >=' → logprob: -8.903796195983887
    10. ' <' → logprob: -9.403796195983887

Token 928: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.038088999688625336
    2. ' angle' → logprob: -3.2880890369415283
    3. '   ' → logprob: -10.91308879852295
    4. 'minimal' → logprob: -11.28808879852295
    5. '0' → logprob: -12.16308879852295
    6. ' minimal' → logprob: -12.78808879852295
    7. '(angle' → logprob: -12.91308879852295
    8. ' ' → logprob: -12.91308879852295
    9. ' ' → logprob: -13.91308879852295
    10. 'ang' → logprob: -14.16308879852295

Token 929: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -0.00013977376511320472
    2. '_sm' → logprob: -9.625140190124512
    3. 'sh' → logprob: -10.125140190124512
    4. '_s' → logprob: -11.000140190124512
    5. '_' → logprob: -12.625140190124512
    6. '_th' → logprob: -13.000140190124512
    7. '_so' → logprob: -13.750140190124512
    8. '_sn' → logprob: -13.750140190124512
    9. '   ' → logprob: -14.000140190124512
    10. '_sk' → logprob: -14.000140190124512

Token 930: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2961512513575144e-05
    2. '
' → logprob: -10.750022888183594
    3. ' def' → logprob: -14.625022888183594
    4. '#' → logprob: -14.625022888183594
    5. '(
' → logprob: -15.375022888183594
    6. '```' → logprob: -15.625022888183594
    7. '(' → logprob: -15.875022888183594
    8. '(def' → logprob: -17.250022888183594
    9. '#
' → logprob: -17.625022888183594
    10. '  
' → logprob: -17.625022888183594

Token 931: 'dans' (ID: 108151)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4474264681339264
    2. ')' → logprob: -1.322426438331604
    3. ')
' → logprob: -3.4474265575408936
    4. 'True' → logprob: -3.9474265575408936
    5. '#' → logprob: -4.3224263191223145
    6. ' True' → logprob: -4.3224263191223145
    7. ' def' → logprob: -5.6974263191223145
    8. 'angle' → logprob: -5.8224263191223145
    9. '   ' → logprob: -6.1974263191223145
    10. ' ' → logprob: -6.3224263191223145

Token 932: ' une' (ID: 2463)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.266247034072876
    2. '#' → logprob: -2.766247034072876
    3. 'la' → logprob: -3.141247034072876
    4. 'le' → logprob: -3.766247034072876
    5. 'l' → logprob: -3.766247034072876
    6. 'une' → logprob: -4.141246795654297
    7. 'angle' → logprob: -4.391246795654297
    8. 'mod' → logprob: -4.641246795654297
    9. 't' → logprob: -5.016246795654297
    10. 'minimal' → logprob: -5.266246795654297

Token 933: ' tol' (ID: 45444)
  Prédit: ' tol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tol' → logprob: -0.5371092557907104
    2. 't' → logprob: -1.9121092557907104
    3. 'tol' → logprob: -2.037109375
    4. ' tolerance' → logprob: -4.412109375
    5. ' marge' → logprob: -4.537109375
    6. ' petite' → logprob: -4.537109375
    7. 'range' → logprob: -4.662109375
    8. '
' → logprob: -4.787109375
    9. ' small' → logprob: -5.224609375
    10. 'epsilon' → logprob: -5.349609375

Token 934: 'érance' (ID: 122504)
  Prédit: 'érance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érance' → logprob: -0.0033849377650767565
    2. 'rance' → logprob: -6.628385066986084
    3. 'érence' → logprob: -7.128385066986084
    4. 'ér' → logprob: -7.253385066986084
    5. 'er' → logprob: -8.003384590148926
    6. 'ance' → logprob: -9.253384590148926
    7. 'rence' → logprob: -10.128384590148926
    8. '#' → logprob: -11.003384590148926
    9. 'èr' → logprob: -11.253384590148926
    10. 'r' → logprob: -11.378384590148926

Token 935: ')
' (ID: 446)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5902529954910278
    2. '=' → logprob: -1.0902529954910278
    3. ' =' → logprob: -3.3402528762817383
    4. ')' → logprob: -3.8402528762817383
    5. ' de' → logprob: -4.340252876281738
    6. 'e' → logprob: -4.840252876281738
    7. '0' → logprob: -4.965252876281738
    8. ' ' → logprob: -5.215252876281738
    9. ' eps' → logprob: -5.465252876281738
    10. '   ' → logprob: -6.090252876281738

Token 936: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.127333340875339e-06
    2. '```' → logprob: -13.125003814697266
    3. ' def' → logprob: -13.750003814697266
    4. '
' → logprob: -14.000003814697266
    5. '#' → logprob: -17.500003814697266
    6. ':def' → logprob: -17.625003814697266
    7. '\' → logprob: -17.750003814697266
    8. '``' → logprob: -18.500003814697266
    9. '\
' → logprob: -18.875003814697266
    10. '(def' → logprob: -19.375003814697266

Token 937: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.31538110971450806
    2. 'angles' → logprob: -2.0653810501098633
    3. ' equal' → logprob: -3.3153810501098633
    4. ' angles' → logprob: -3.6903810501098633
    5. 'check' → logprob: -3.8153810501098633
    6. 'are' → logprob: -4.565381050109863
    7. 'two' → logprob: -4.565381050109863
    8. ' check' → logprob: -4.690381050109863
    9. 'angle' → logprob: -5.065381050109863
    10. 'equ' → logprob: -5.315381050109863

Token 938: '_angles' (ID: 197484)
  Prédit: '_angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angles' → logprob: -0.38746941089630127
    2. '_angle' → logprob: -1.1374694108963013
    3. '_' → logprob: -7.512469291687012
    4. '_distance' → logprob: -11.012469291687012
    5. '_equal' → logprob: -12.012469291687012
    6. ' _' → logprob: -12.512469291687012
    7. '_spacing' → logprob: -13.137469291687012
    8. '(_' → logprob: -13.262469291687012
    9. '_dist' → logprob: -13.262469291687012
    10. '_difference' → logprob: -13.637469291687012

Token 939: '_condition' (ID: 64948)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6082396507263184
    2. '(a' → logprob: -1.1082396507263184
    3. '(angle' → logprob: -2.3582396507263184
    4. '(as' → logprob: -3.4832396507263184
    5. '(sm' → logprob: -8.983240127563477
    6. '(am' → logprob: -10.358240127563477
    7. '(s' → logprob: -10.858240127563477
    8. ' (' → logprob: -10.983240127563477
    9. '(ar' → logprob: -11.233240127563477
    10. '(at' → logprob: -11.358240127563477

Token 940: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05830435827374458
    2. '(angle' → logprob: -3.3083043098449707
    3. '(a' → logprob: -4.308304309844971
    4. '(as' → logprob: -5.058304309844971
    5. ' (' → logprob: -9.308304786682129
    6. '(s' → logprob: -10.308304786682129
    7. '(
' → logprob: -10.808304786682129
    8. '(at' → logprob: -10.808304786682129
    9. '(am' → logprob: -11.433304786682129
    10. '(ai' → logprob: -11.683304786682129

Token 941: 'ah' (ID: 849)
  Prédit: 'ah'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.7651949524879456
    2. 'angle' → logprob: -1.2651948928833008
    3. 'as' → logprob: -1.7651948928833008
    4. 'a' → logprob: -3.265194892883301
    5. 'eps' → logprob: -4.140194892883301
    6. 'angles' → logprob: -4.765194892883301
    7. '):
' → logprob: -5.015194892883301
    8. 'epsilon' → logprob: -5.890194892883301
    9. ')' → logprob: -6.765194892883301
    10. 't' → logprob: -6.890194892883301

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001415618316968903
    2. ' ,' → logprob: -9.000141143798828
    3. ',
' → logprob: -11.250141143798828
    4. '_,' → logprob: -12.625141143798828
    5. 's' → logprob: -14.750141143798828
    6. ',

' → logprob: -15.375141143798828
    7. '),' → logprob: -15.375141143798828
    8. 'm' → logprob: -16.250141143798828
    9. ',
' → logprob: -16.375141143798828
    10. '=' → logprob: -16.500141143798828

Token 943: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.20144179463386536
    2. ' am' → logprob: -1.701441764831543
    3. 'as' → logprob: -11.076441764831543
    4. 'ams' → logprob: -11.951441764831543
    5. ' as' → logprob: -12.326441764831543
    6. ' ' → logprob: -14.326441764831543
    7. '_am' → logprob: -14.701441764831543
    8. ' ' → logprob: -15.326441764831543
    9. 'a' → logprob: -15.451441764831543
    10. 'amin' → logprob: -16.07644271850586

Token 944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.522638169466518e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',
' → logprob: -15.125024795532227
    4. '‌,' → logprob: -15.625024795532227
    5. '):
' → logprob: -16.250024795532227
    6. '_,' → logprob: -16.500024795532227
    7. '   ' → logprob: -16.875024795532227
    8. '=' → logprob: -17.000024795532227
    9. '‍,' → logprob: -17.500024795532227
    10. '`,' → logprob: -17.750024795532227

Token 945: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.011048528365790844
    2. ' as' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.511048316955566
    4. '	as' → logprob: -16.636049270629883
    5. '   ' → logprob: -17.261049270629883
    6. 'ass' → logprob: -17.761049270629883
    7. '  ' → logprob: -18.136049270629883
    8. '
' → logprob: -18.261049270629883
    9. 'a' → logprob: -18.261049270629883
    10. '_as' → logprob: -18.386049270629883

Token 946: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004170873435214162
    2. '):
' → logprob: -8.37541675567627
    3. '):' → logprob: -8.75041675567627
    4. '_)' → logprob: -10.87541675567627
    5. 's' → logprob: -12.37541675567627
    6. '_,' → logprob: -13.25041675567627
    7. ')' → logprob: -14.25041675567627
    8. '_
' → logprob: -14.37541675567627
    9. '_s' → logprob: -14.50041675567627
    10. '):
' → logprob: -15.25041675567627

Token 947: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08980502188205719
    2. '):
' → logprob: -2.4648051261901855
    3. ',' → logprob: -7.0898051261901855
    4. '):
' → logprob: -11.214804649353027
    5. ')' → logprob: -11.589804649353027
    6. '   ' → logprob: -12.589804649353027
    7. ':' → logprob: -12.839804649353027
    8. '):

' → logprob: -13.214804649353027
    9. ' ):' → logprob: -14.214804649353027
    10. ' ):
' → logprob: -17.214805603027344

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018769934540614486
    2. ' eps' → logprob: -6.3768768310546875
    3. 'eps' → logprob: -9.001876831054688
    4. '   ' → logprob: -10.251876831054688
    5. '```' → logprob: -12.251876831054688
    6. ' epsilon' → logprob: -13.001876831054688
    7. ' angle' → logprob: -13.001876831054688
    8. 'angle' → logprob: -13.001876831054688
    9. 'epsilon' → logprob: -13.751876831054688
    10. '   ' → logprob: -13.876876831054688

Token 949: ' angle' (ID: 16538)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.025618573650717735
    2. 'angle' (adapté à ' angle') → logprob: -4.275618553161621
    3. 'tol' → logprob: -5.400618553161621
    4. '   ' → logprob: -5.650618553161621
    5. ' eps' → logprob: -6.650618553161621
    6. 'diff' → logprob: -7.025618553161621
    7. 'epsilon' → logprob: -7.025618553161621
    8. 'return' → logprob: -8.900618553161621
    9. 't' → logprob: -9.025618553161621
    10. 'ang' → logprob: -11.900618553161621

Token 950: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.052494924515485764
    2. '_s' → logprob: -3.052495002746582
    3. 'sm' → logprob: -5.802495002746582
    4. 's' → logprob: -7.052495002746582
    5. '_ss' → logprob: -12.427495002746582
    6. '_sh' → logprob: -12.802495002746582
    7. '_pm' → logprob: -14.052495002746582
    8. '_' → logprob: -14.052495002746582
    9. ' sm' → logprob: -14.302495002746582
    10. '_sn' → logprob: -14.302495002746582

Token 951: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326597929000854
    2. '=' → logprob: -1.3132660388946533
    3. ',' → logprob: -12.438265800476074
    4. ' ' → logprob: -16.06326675415039
    5. ')' → logprob: -16.56326675415039
    6. ' ' → logprob: -16.81326675415039
    7. ' ,' → logprob: -17.43826675415039
    8. '   ' → logprob: -17.56326675415039
    9. ' =
' → logprob: -17.68826675415039
    10. '=min' → logprob: -18.18826675415039

Token 952: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.00040528984391130507
    2. ' minimal' → logprob: -8.000405311584473
    3. 'min' → logprob: -9.750405311584473
    4. 'abs' → logprob: -11.500405311584473
    5. 'minimum' → logprob: -14.500405311584473
    6. 'max' → logprob: -15.125405311584473
    7. '(min' → logprob: -15.250405311584473
    8. 'equal' → logprob: -16.250404357910156
    9. '   ' → logprob: -16.375404357910156
    10. '
' → logprob: -17.000404357910156

Token 953: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.875001907348633
    3. ' _' → logprob: -15.500001907348633
    4. '_angles' → logprob: -15.625001907348633
    5. 'angle' → logprob: -16.250001907348633
    6. '(' → logprob: -16.375001907348633
    7. '(angle' → logprob: -16.500001907348633
    8. '_distance' → logprob: -16.500001907348633
    9. '(_' → logprob: -16.875001907348633
    10. ' angle' → logprob: -17.750001907348633

Token 954: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -1.1637164789135568e-05
    2. '(am' → logprob: -11.500011444091797
    3. 'as' → logprob: -14.125011444091797
    4. '(' → logprob: -14.125011444091797
    5. '	as' → logprob: -19.750011444091797
    6. ' as' → logprob: -19.750011444091797
    7. '_as' → logprob: -20.250011444091797
    8. 'As' → logprob: -20.375011444091797
    9. '(an' → logprob: -20.875011444091797
    10. '(angle' → logprob: -21.125011444091797

Token 955: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.016453903168439865
    2. ',' → logprob: -4.516453742980957
    3. '_' → logprob: -5.266453742980957
    4. '_,
' → logprob: -8.891453742980957
    5. 's' → logprob: -10.766453742980957
    6. 'm' → logprob: -10.766453742980957
    7. '_
' → logprob: -11.141453742980957
    8. 'am' → logprob: -11.891453742980957
    9. ',_' → logprob: -11.891453742980957
    10. ' ,' → logprob: -12.266453742980957

Token 956: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.00010735770774772391
    2. ' am' → logprob: -9.625107765197754
    3. 'ah' → logprob: -10.125107765197754
    4. ' ah' → logprob: -14.375107765197754
    5. '   ' → logprob: -15.250107765197754
    6. ' ' → logprob: -16.125106811523438
    7. 'amh' → logprob: -16.250106811523438
    8. 'a' → logprob: -16.875106811523438
    9. 'ams' → logprob: -17.125106811523438
    10. '  ' → logprob: -17.375106811523438

Token 957: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02671080268919468
    2. ')
' → logprob: -3.6517107486724854
    3. ',' → logprob: -8.026710510253906
    4. ' )' → logprob: -9.901710510253906
    5. ' )
' → logprob: -11.401710510253906
    6. '   ' → logprob: -11.526710510253906
    7. ')

' → logprob: -12.526710510253906
    8. '),' → logprob: -12.526710510253906
    9. ')
' → logprob: -12.901710510253906
    10. ' ' → logprob: -14.651710510253906

Token 958: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006173660513013601
    2. ',' → logprob: -7.875617504119873
    3. ' angle' → logprob: -9.250617027282715
    4. '
' → logprob: -9.750617027282715
    5. 'angle' → logprob: -10.125617027282715
    6. ')' → logprob: -11.125617027282715
    7. '=' → logprob: -12.625617027282715
    8. ' =' → logprob: -12.750617027282715
    9. ' ,' → logprob: -12.875617027282715
    10. '    
' → logprob: -13.000617027282715

Token 959: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.6932938694953918
    2. ' angle' → logprob: -0.6932938694953918
    3. '   ' → logprob: -8.943293571472168
    4. ' minimal' → logprob: -11.318293571472168
    5. 'minimal' → logprob: -13.443293571472168
    6. ' ' → logprob: -13.818293571472168
    7. ' equal' → logprob: -14.818293571472168
    8. 'equal' → logprob: -15.068293571472168
    9. '```' → logprob: -15.818293571472168
    10. '(angle' → logprob: -15.818293571472168

Token 960: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -8.244413766078651e-05
    2. '_sm' → logprob: -9.500082015991211
    3. 'sh' → logprob: -12.000082015991211
    4. '_sr' → logprob: -15.000082015991211
    5. '	sh' → logprob: -15.500082015991211
    6. '_sn' → logprob: -15.750082015991211
    7. '_SH' → logprob: -16.00008201599121
    8. '_sp' → logprob: -16.37508201599121
    9. '_sk' → logprob: -16.50008201599121
    10. '_s' → logprob: -16.62508201599121

Token 961: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687264919281006
    2. ' =' → logprob: -1.13687264919281
    3. ',' → logprob: -14.136872291564941
    4. '   ' → logprob: -15.011872291564941
    5. ')' → logprob: -15.136872291564941
    6. ' ' → logprob: -15.886872291564941
    7. '<|end|>' → logprob: -16.011873245239258
    8. '=
' → logprob: -17.386873245239258
    9. '(' → logprob: -17.636873245239258
    10. '＝' → logprob: -17.761873245239258

Token 962: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.02975071594119072
    2. ' minimal' → logprob: -3.5297508239746094
    3. 'min' → logprob: -16.27975082397461
    4. '(' → logprob: -17.15475082397461
    5. 'Minimal' → logprob: -17.40475082397461
    6. 'abs' → logprob: -17.65475082397461
    7. '(min' → logprob: -17.65475082397461
    8. 'minor' → logprob: -17.90475082397461
    9. '0' → logprob: -18.15475082397461
    10. 'm' → logprob: -18.27975082397461

Token 963: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. 'angle' → logprob: -15.875000953674316
    4. 'Angle' → logprob: -17.000001907348633
    5. '-angle' → logprob: -18.000001907348633
    6. '(angle' → logprob: -18.500001907348633
    7. '_distance' → logprob: -18.500001907348633
    8. '_angles' → logprob: -18.750001907348633
    9. '_age' → logprob: -18.750001907348633
    10. ' angle' → logprob: -19.125001907348633

Token 964: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.014163628220558167
    2. 'as' → logprob: -4.264163494110107
    3. ' as' → logprob: -16.514163970947266
    4. '(' → logprob: -16.764163970947266
    5. '	as' → logprob: -18.889163970947266
    6. '(s' → logprob: -19.639163970947266
    7. ''as' → logprob: -19.764163970947266
    8. ' (' → logprob: -21.014163970947266
    9. '.as' → logprob: -21.264163970947266
    10. 'As' → logprob: -21.264163970947266

Token 965: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0005037044174969196
    2. '_' → logprob: -8.250503540039062
    3. ',' → logprob: -8.375503540039062
    4. 'h' → logprob: -11.625503540039062
    5. '_h' → logprob: -13.500503540039062
    6. '_,
' → logprob: -14.000503540039062
    7. ',h' → logprob: -15.125503540039062
    8. '__,' → logprob: -15.500503540039062
    9. '_
' → logprob: -16.625503540039062
    10. '_',' → logprob: -17.250503540039062

Token 966: ' ah' (ID: 5369)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -9.615255839889869e-05
    2. ' ah' → logprob: -9.250096321105957
    3. 'Ah' → logprob: -20.75009536743164
    4. '
' → logprob: -22.00009536743164
    5. 'ach' → logprob: -22.00009536743164
    6. ' ' → logprob: -22.50009536743164
    7. 'oh' → logprob: -22.62509536743164
    8. 'ahs' → logprob: -22.75009536743164
    9. ' ' → logprob: -23.00009536743164
    10. '-ah' → logprob: -23.25009536743164

Token 967: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038837024476379156
    2. ')
' → logprob: -7.875388145446777
    3. '   ' → logprob: -11.875388145446777
    4. ')
' → logprob: -14.500388145446777
    5. ' )' → logprob: -14.750388145446777
    6. ')return' → logprob: -16.000389099121094
    7. ')#' → logprob: -16.500389099121094
    8. '),' → logprob: -16.750389099121094
    9. ')<' → logprob: -17.250389099121094
    10. ')

' → logprob: -17.375389099121094

Token 968: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015359772078227252
    2. '
' → logprob: -9.500153541564941
    3. ' return' → logprob: -10.125153541564941
    4. '    
' → logprob: -11.250153541564941
    5. 'return' → logprob: -11.375153541564941
    6. '	return' → logprob: -12.500153541564941
    7. '\t' → logprob: -12.750153541564941
    8. '```' → logprob: -12.875153541564941
    9. '   ' → logprob: -13.625153541564941
    10. '    ' → logprob: -14.000153541564941

Token 969: ' eps' (ID: 39683)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32692664861679077
    2. '   ' → logprob: -1.3269267082214355
    3. ' return' → logprob: -4.4519267082214355
    4. 'eps' (adapté à ' eps') → logprob: -6.4519267082214355
    5. 'abs' → logprob: -9.076926231384277
    6. 'diff' → logprob: -9.576926231384277
    7. ' eps' → logprob: -9.826926231384277
    8. '```' → logprob: -10.701926231384277
    9. '	return' → logprob: -10.826926231384277
    10. 'tol' → logprob: -11.326926231384277

Token 970: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192973017692566
    2. '=' → logprob: -1.501929759979248
    3. '   ' → logprob: -15.00192928314209
    4. ' ' → logprob: -15.87692928314209
    5. ' ' → logprob: -16.501930236816406
    6. '    ' → logprob: -16.751930236816406
    7. ' =
' → logprob: -17.376930236816406
    8. ',' → logprob: -17.626930236816406
    9. '	' → logprob: -17.751930236816406
    10. '＝' → logprob: -18.126930236816406

Token 971: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016027313540689647
    2. ' ' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.625160217285156
    4. '0' → logprob: -16.000160217285156
    5. '5' → logprob: -16.250160217285156
    6. '2' → logprob: -16.375160217285156
    7. '  ' → logprob: -17.000160217285156
    8. '(' → logprob: -17.062660217285156
    9. '3' → logprob: -17.250160217285156
    10. '=' → logprob: -17.312660217285156

Token 972: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -13.125004768371582
    3. '0' → logprob: -13.625004768371582
    4. '2' → logprob: -15.125004768371582
    5. '5' → logprob: -15.250004768371582
    6. '   ' → logprob: -15.875004768371582
    7. '10' → logprob: -15.937504768371582
    8. '=' → logprob: -16.250003814697266
    9. '3' → logprob: -16.750003814697266
    10. '(' → logprob: -17.062503814697266

Token 973: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04859577491879463
    2. 'e' → logprob: -3.048595666885376
    3. '1' → logprob: -13.173595428466797
    4. '*' → logprob: -13.673595428466797
    5. '-e' → logprob: -13.673595428466797
    6. '```' → logprob: -13.673595428466797
    7. '**' → logprob: -14.548595428466797
    8. '   ' → logprob: -14.798595428466797
    9. '=' → logprob: -14.923595428466797
    10. '14' → logprob: -15.048595428466797

Token 974: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013381359167397022
    2. '14' → logprob: -9.000133514404297
    3. '12' → logprob: -13.000133514404297
    4. '9' → logprob: -13.125133514404297
    5. '7' → logprob: -13.250133514404297
    6. '10' → logprob: -13.750133514404297
    7. '8' → logprob: -14.125133514404297
    8. '6' → logprob: -14.500133514404297
    9. '13' → logprob: -14.625133514404297
    10. '5' → logprob: -14.750133514404297

Token 975: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.08758095651865005
    2. '12' → logprob: -2.837580919265747
    3. '10' → logprob: -4.462581157684326
    4. '13' → logprob: -5.212581157684326
    5. '9' → logprob: -5.462581157684326
    6. '15' → logprob: -5.962581157684326
    7. '11' → logprob: -6.962581157684326
    8. '8' → logprob: -7.837581157684326
    9. '7' → logprob: -8.962580680847168
    10. '16' → logprob: -11.462580680847168

Token 976: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010667511960491538
    2. 'return' → logprob: -7.0010666847229
    3. '	return' → logprob: -9.126067161560059
    4. ' return' → logprob: -10.751067161560059
    5. '
' → logprob: -10.876067161560059
    6. 'if' → logprob: -12.876067161560059
    7. '    
' → logprob: -13.126067161560059
    8. '	if' → logprob: -14.876067161560059
    9. '   ' → logprob: -14.876067161560059
    10. '```' → logprob: -15.001067161560059

Token 977: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032232257071882486
    2. 'return' → logprob: -5.753223419189453
    3. ' return' → logprob: -10.378223419189453
    4. 'if' → logprob: -11.753223419189453
    5. '	return' → logprob: -12.003223419189453
    6. '```' → logprob: -15.128223419189453
    7. ' if' → logprob: -17.128223419189453
    8. '
' → logprob: -17.378223419189453
    9. '   ' → logprob: -17.378223419189453
    10. '{return' → logprob: -18.128223419189453

Token 978: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02333923429250717
    2. '   ' → logprob: -3.77333927154541
    3. ' return' → logprob: -9.77333927154541
    4. 'if' → logprob: -10.27333927154541
    5. '	return' → logprob: -13.02333927154541
    6. '
' → logprob: -17.648338317871094
    7. '```' → logprob: -18.148338317871094
    8. '{return' → logprob: -18.273338317871094
    9. '  ' → logprob: -18.398338317871094
    10. ' ' → logprob: -18.398338317871094

Token 979: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0005672106635756791
    2. ' abs' → logprob: -7.500567436218262
    3. '(abs' → logprob: -11.250567436218262
    4. 'angle' → logprob: -13.750567436218262
    5. '   ' → logprob: -16.750566482543945
    6. '(' → logprob: -20.250566482543945
    7. 'fabs' → logprob: -20.250566482543945
    8. ' ' → logprob: -20.250566482543945
    9. '  ' → logprob: -21.000566482543945
    10. 'equal' → logprob: -21.375566482543945

Token 980: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: 0.0
    2. 'angle' → logprob: -18.25
    3. '((' → logprob: -18.5
    4. '(' → logprob: -18.75
    5. '(abs' → logprob: -21.875
    6. '(equal' → logprob: -22.875
    7. '(age' → logprob: -23.125
    8. '(distance' → logprob: -23.5
    9. '(theta' → logprob: -23.875
    10. '(edge' → logprob: -24.375

Token 981: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.07892438024282455
    2. '(angle' → logprob: -2.5789244174957275
    3. '(sm' → logprob: -11.203924179077148
    4. '_sh' → logprob: -11.453924179077148
    5. '_SM' → logprob: -12.953924179077148
    6. '(' → logprob: -12.953924179077148
    7. 'angle' → logprob: -13.578924179077148
    8. '((' → logprob: -13.828924179077148
    9. '_angle' → logprob: -13.953924179077148
    10. 'sm' → logprob: -14.078924179077148

Token 982: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20141568779945374
    2. '-' → logprob: -1.7014156579971313
    3. '-angle' → logprob: -13.826416015625
    4. ' ' → logprob: -13.951416015625
    5. ' angle' → logprob: -15.701416015625
    6. '   ' → logprob: -15.826416015625
    7. ' ' → logprob: -16.076416015625
    8. ' -
' → logprob: -16.951416015625
    9. 'angle' → logprob: -17.201416015625
    10. '−' → logprob: -17.951416015625

Token 983: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.0206720617134124e-05
    2. ' angle' → logprob: -11.50001049041748
    3. '(angle' → logprob: -20.750009536743164
    4. '   ' → logprob: -23.750009536743164
    5. ' ' → logprob: -23.875009536743164
    6. '
' → logprob: -24.250009536743164
    7. 'answer' → logprob: -24.625009536743164
    8. 'Angle' → logprob: -24.625009536743164
    9. '_angle' → logprob: -24.750009536743164
    10. '0' → logprob: -24.750009536743164

Token 984: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -0.0004306692280806601
    2. 'sh' → logprob: -7.750430583953857
    3. '	sh' → logprob: -16.875431060791016
    4. '_sm' → logprob: -17.500431060791016
    5. 'Sh' → logprob: -19.000431060791016
    6. '(sh' → logprob: -19.250431060791016
    7. '_th' → logprob: -19.250431060791016
    8. '_ph' → logprob: -19.500431060791016
    9. '_Sh' → logprob: -19.875431060791016
    10. '_SH' → logprob: -20.000431060791016

Token 985: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ')<' → logprob: -11.25002670288086
    3. ')<=' → logprob: -11.25002670288086
    4. ' )' → logprob: -15.12502670288086
    5. '())' → logprob: -17.50002670288086
    6. ' <=' → logprob: -17.87502670288086
    7. '),' → logprob: -18.00002670288086
    8. '()' → logprob: -18.25002670288086
    9. '<=' → logprob: -18.37502670288086
    10. '<' → logprob: -18.50002670288086

Token 986: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.577006995677948
    2. ' <' → logprob: -0.827006995677948
    3. ' <=' → logprob: -7.327006816864014
    4. '<=' → logprob: -7.827006816864014
    5. ')' → logprob: -12.452007293701172
    6. '()<' → logprob: -12.702007293701172
    7. ')<' → logprob: -14.077007293701172
    8. ' ' → logprob: -14.202007293701172
    9. '[' → logprob: -15.202007293701172
    10. '<|end|>' → logprob: -15.202007293701172

Token 987: ' eps' (ID: 39683)
  Prédit: 'eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eps' → logprob: -0.0015798516105860472
    2. ' eps' → logprob: -6.501579761505127
    3. '1' → logprob: -9.501580238342285
    4. 'epsilon' → logprob: -14.001580238342285
    5. ' ' → logprob: -14.251580238342285
    6. 'esp' → logprob: -14.751580238342285
    7. 'EPS' → logprob: -15.001580238342285
    8. 'ep' → logprob: -15.251580238342285
    9. '_eps' → logprob: -15.251580238342285
    10. '   ' → logprob: -17.00157928466797

Token 988: '


' (ID: 2499)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09280544519424438
    2. '<|end|>' → logprob: -2.5928053855895996
    3. 'def' → logprob: -4.3428053855896
    4. '<|end|>' → logprob: -7.2178053855896
    5. '
' → logprob: -10.717805862426758
    6. 'import' → logprob: -10.842805862426758
    7. '...' → logprob: -11.592805862426758
    8. '```' → logprob: -11.592805862426758
    9. ')' → logprob: -11.717805862426758
    10. '.' → logprob: -13.217805862426758

Token 989: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020922893658280373
    2. 'def' → logprob: -3.895922899246216
    3. 'import' → logprob: -8.770922660827637
    4. '<|end|>' → logprob: -9.270922660827637
    5. '
' → logprob: -9.395922660827637
    6. '<|end|>' → logprob: -10.270922660827637
    7. '

' → logprob: -12.395922660827637
    8. '```' → logprob: -12.395922660827637
    9. 'from' → logprob: -13.270922660827637
    10. '\' → logprob: -14.145922660827637

Token 990: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10024894028902054
    2. '#' → logprob: -2.3502490520477295
    3. 'import' → logprob: -10.100249290466309
    4. 'from' → logprob: -14.100249290466309
    5. ' def' → logprob: -15.350249290466309
    6. 'class' → logprob: -15.850249290466309
    7. '```' → logprob: -16.975248336791992
    8. '
' → logprob: -18.100248336791992
    9. '#!/' → logprob: -18.100248336791992
    10. ' #' → logprob: -18.350248336791992

Token 991: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026443805545568466
    2. '#' → logprob: -3.6514437198638916
    3. ' def' → logprob: -9.026443481445312
    4. 'de' → logprob: -11.026443481445312
    5. ' #' → logprob: -13.151443481445312
    6. 'for' → logprob: -13.401443481445312
    7. 'find' → logprob: -14.276443481445312
    8. '
' → logprob: -14.401443481445312
    9. 'to' → logprob: -15.151443481445312
    10. '```' → logprob: -15.401443481445312

Token 992: ' addition' (ID: 5856)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.13916945457458496
    2. 'chercher' → logprob: -2.264169454574585
    3. '#' → logprob: -4.139169692993164
    4. 'calcul' → logprob: -5.389169692993164
    5. 're' → logprob: -5.639169692993164
    6. 'find' → logprob: -6.764169692993164
    7. 'dé' → logprob: -8.514169692993164
    8. 'rés' → logprob: -8.889169692993164
    9. ' trouver' → logprob: -9.264169692993164
    10. 'cherche' → logprob: -9.514169692993164

Token 993: 'ner' (ID: 1247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007143391412682831
    2. ' def' → logprob: -8.125714302062988
    3. '=' → logprob: -9.625714302062988
    4. 'ner' → logprob: -9.875714302062988
    5. 's' → logprob: -9.875714302062988
    6. '+' → logprob: -10.375714302062988
    7. '_' → logprob: -10.500714302062988
    8. 'n' → logprob: -10.750714302062988
    9. '#' → logprob: -10.750714302062988
    10. ')' → logprob: -10.875714302062988

Token 994: ' heures' (ID: 34311)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.057892005890607834
    2. '(n' → logprob: -3.057892084121704
    3. '(num' → logprob: -6.057891845703125
    4. ' deux' → logprob: -6.557891845703125
    5. 'fra' → logprob: -6.682891845703125
    6. 'two' → logprob: -7.432891845703125
    7. ' def' → logprob: -7.432891845703125
    8. '#' → logprob: -7.682891845703125
    9. 'num' → logprob: -7.682891845703125
    10. ' (' → logprob: -7.807891845703125

Token 995: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4529212415218353
    2. ',' → logprob: -1.0779212713241577
    3. '#' → logprob: -4.202921390533447
    4. 'et' → logprob: -6.327921390533447
    5. '(h' → logprob: -7.077921390533447
    6. ',
' → logprob: -7.452921390533447
    7. '(' → logprob: -7.452921390533447
    8. ')' → logprob: -7.577921390533447
    9. '(
' → logprob: -7.827921390533447
    10. 'and' → logprob: -7.827921390533447

Token 996: ' minutes' (ID: 5438)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.003459775587543845
    2. '#' → logprob: -5.753459930419922
    3. ' minutes' → logprob: -8.628459930419922
    4. 'def' → logprob: -9.753459930419922
    5. 'min' → logprob: -10.253459930419922
    6. 'minute' → logprob: -12.253459930419922
    7. '_minutes' → logprob: -12.628459930419922
    8. 'second' → logprob: -14.378459930419922
    9. 'Minutes' → logprob: -14.628459930419922
    10. '   ' → logprob: -15.753459930419922

Token 997: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13192333281040192
    2. 'def' → logprob: -2.3819234371185303
    3. '#' → logprob: -3.5069234371185303
    4. 'et' → logprob: -7.506923198699951
    5. 's' → logprob: -8.13192367553711
    6. '#,' → logprob: -9.13192367553711
    7. 'and' → logprob: -9.38192367553711
    8. ' #' → logprob: -10.38192367553711
    9. ',#' → logprob: -10.75692367553711
    10. 'seconds' → logprob: -11.00692367553711

Token 998: ' secondes' (ID: 109098)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.16195066273212433
    2. ' secondes' → logprob: -1.911950707435608
    3. 'seconds' → logprob: -6.786950588226318
    4. ' second' → logprob: -7.786950588226318
    5. '#' → logprob: -9.036951065063477
    6. 'se' → logprob: -11.036951065063477
    7. 's' → logprob: -11.411951065063477
    8. ' seconde' → logprob: -11.536951065063477
    9. ' seconds' → logprob: -11.911951065063477
    10. 'sec' → logprob: -12.161951065063477

Token 999: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1319350302219391
    2. '(h' → logprob: -2.1319351196289062
    3. '#' → logprob: -5.881935119628906
    4. '(n' → logprob: -6.506935119628906
    5. '(
' → logprob: -9.256935119628906
    6. '(' → logprob: -9.256935119628906
    7. '(s' → logprob: -9.256935119628906
    8. '
' → logprob: -9.381935119628906
    9. ',' → logprob: -9.506935119628906
    10. ' def' → logprob: -10.006935119628906

Token 1000: ' un' (ID: 537)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.08493506908416748
    2. 'fra' → logprob: -3.584935188293457
    3. '#' → logprob: -4.209935188293457
    4. 'def' → logprob: -4.584935188293457
    5. 'frac' → logprob: -5.459935188293457
    6. 'une' → logprob: -5.459935188293457
    7. '```' → logprob: -5.584935188293457
    8. 'float' → logprob: -5.834935188293457
    9. 'second' → logprob: -6.209935188293457
    10. 'de' → logprob: -6.209935188293457

Token 1001: ' nombre' (ID: 9733)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.36278244853019714
    2. 'temps' → logprob: -2.4877824783325195
    3. 't' → logprob: -2.6127824783325195
    4. 'def' → logprob: -2.7377824783325195
    5. 'num' → logprob: -4.1127824783325195
    6. '#' → logprob: -4.3627824783325195
    7. '```' → logprob: -4.4877824783325195
    8. 'tuple' → logprob: -5.2377824783325195
    9. 'frac' → logprob: -5.2377824783325195
    10. 'numer' → logprob: -5.6127824783325195

Token 1002: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014555622823536396
    2. '#' → logprob: -5.01455545425415
    3. 'de' → logprob: -5.51455545425415
    4. '_' → logprob: -7.13955545425415
    5. ')' → logprob: -7.51455545425415
    6. ' def' → logprob: -7.88955545425415
    7. 't' → logprob: -8.139555931091309
    8. ' de' → logprob: -8.264555931091309
    9. '_de' → logprob: -8.514555931091309
    10. '_fraction' → logprob: -8.639555931091309

Token 1003: ' secondes' (ID: 109098)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.4417385756969452
    2. 'seconds' → logprob: -1.5667386054992676
    3. 'fra' → logprob: -2.0667386054992676
    4. '#' → logprob: -5.066738605499268
    5. '```' → logprob: -5.941738605499268
    6. 'fraction' → logprob: -5.941738605499268
    7. 'tokens' → logprob: -6.066738605499268
    8. ' secondes' → logprob: -6.191738605499268
    9. 'se' → logprob: -6.316738605499268
    10. 't' → logprob: -6.441738605499268

Token 1004: ' fraction' (ID: 33763)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.578184497309849e-05
    2. '
' → logprob: -9.375085830688477
    3. '```' → logprob: -14.500085830688477
    4. '#' → logprob: -15.625085830688477
    5. ' def' → logprob: -15.875085830688477
    6. '\' → logprob: -17.000085830688477
    7. '_def' → logprob: -17.375085830688477
    8. '
' → logprob: -18.000085830688477
    9. 'de' → logprob: -18.125085830688477
    10. '``' → logprob: -18.125085830688477

Token 1005: 'naire' (ID: 30464)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015324745327234268
    2. ')' → logprob: -7.251532554626465
    3. '(
' → logprob: -7.376532554626465
    4. '(' → logprob: -10.001532554626465
    5. '
' → logprob: -10.501532554626465
    6. '#
' → logprob: -10.751532554626465
    7. '   ' → logprob: -10.751532554626465
    8. '#' → logprob: -11.251532554626465
    9. ' def' → logprob: -11.626532554626465
    10. 's' → logprob: -12.126532554626465

Token 1006: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2471589798224159e-05
    2. '
' → logprob: -11.375012397766113
    3. ' def' → logprob: -14.250012397766113
    4. '```' → logprob: -15.625012397766113
    5. '_def' → logprob: -16.87501335144043
    6. ':def' → logprob: -17.00001335144043
    7. '\' → logprob: -17.25001335144043
    8. '#' → logprob: -17.37501335144043
    9. '(def' → logprob: -18.00001335144043
    10. 'de' → logprob: -18.50001335144043

Token 1007: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004595791921019554
    2. '#' → logprob: -5.504595756530762
    3. 'n' → logprob: -8.629595756530762
    4. ' def' → logprob: -8.879595756530762
    5. '
' → logprob: -9.129595756530762
    6. 'h' → logprob: -9.629595756530762
    7. '   ' → logprob: -12.004595756530762
    8. 'num' → logprob: -12.629595756530762
    9. ' n' → logprob: -12.754595756530762
    10. ' #' → logprob: -12.754595756530762

Token 1008: ' représent' (ID: 42664)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14270718395709991
    2. '#' → logprob: -2.017707109451294
    3. 'num' → logprob: -11.142706871032715
    4. ' #' → logprob: -12.392706871032715
    5. ' def' → logprob: -12.392706871032715
    6. 's' → logprob: -12.767706871032715
    7. '
' → logprob: -13.017706871032715
    8. '   ' → logprob: -13.767706871032715
    9. 'from' → logprob: -14.392706871032715
    10. 'n' → logprob: -14.517706871032715

Token 1009: 'é' (ID: 377)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.7659038305282593
    2. 'é' → logprob: -0.7659038305282593
    3. 'ant' → logprob: -3.265903949737549
    4. 'def' → logprob: -4.265903949737549
    5. 'ée' → logprob: -4.765903949737549
    6. 'és' → logprob: -5.765903949737549
    7. 'ing' → logprob: -6.515903949737549
    8. 'e' → logprob: -6.765903949737549
    9. 'ation' → logprob: -7.015903949737549
    10. 'ées' → logprob: -7.765903949737549

Token 1010: ' sous' (ID: 14487)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18268686532974243
    2. '#' → logprob: -1.8076868057250977
    3. 'num' → logprob: -6.432686805725098
    4. 'par' → logprob: -7.182686805725098
    5. 'as' → logprob: -8.932686805725098
    6. 'by' → logprob: -8.932686805725098
    7. '(num' → logprob: -9.182686805725098
    8. ' #' → logprob: -9.807686805725098
    9. '   ' → logprob: -10.557686805725098
    10. '
' → logprob: -10.807686805725098

Token 1011: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.11088962107896805
    2. 'la' → logprob: -2.6108896732330322
    3. 'form' → logprob: -3.9858896732330322
    4. ' forme' → logprob: -4.485889434814453
    5. 'fraction' → logprob: -7.235889434814453
    6. 'def' → logprob: -7.985889434814453
    7. 'forma' → logprob: -8.235889434814453
    8. '#' → logprob: -8.735889434814453
    9. 'une' → logprob: -9.735889434814453
    10. 'format' → logprob: -10.985889434814453

Token 1012: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.752693772315979
    2. 'def' → logprob: -0.877693772315979
    3. 'd' → logprob: -2.8776936531066895
    4. 'de' → logprob: -3.2526936531066895
    5. 'num' → logprob: -4.8776936531066895
    6. '(n' → logprob: -6.0026936531066895
    7. 'of' → logprob: -6.1276936531066895
    8. '(num' → logprob: -6.3776936531066895
    9. 'numer' → logprob: -6.7526936531066895
    10. '```' → logprob: -7.0026936531066895

Token 1013: ''un' (ID: 9788)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6719936728477478
    2. '(n' → logprob: -0.7969936728477478
    3. 'n' → logprob: -4.296993732452393
    4. 'fraction' → logprob: -5.296993732452393
    5. 'num' → logprob: -5.421993732452393
    6. '(' → logprob: -5.421993732452393
    7. '(num' → logprob: -6.046993732452393
    8. 'numer' → logprob: -6.171993732452393
    9. 'fra' → logprob: -6.171993732452393
    10. '#' → logprob: -6.421993732452393

Token 1014: ' num' (ID: 2269)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.38703474402427673
    2. 'fraction' → logprob: -2.2620346546173096
    3. '(n' → logprob: -2.5120346546173096
    4. '(num' → logprob: -3.2620346546173096
    5. 'num' → logprob: -3.2620346546173096
    6. '(' → logprob: -4.137034893035889
    7. '```' → logprob: -5.387034893035889
    8. ' tuple' → logprob: -5.512034893035889
    9. 'numer' → logprob: -5.512034893035889
    10. '(t' → logprob: -5.637034893035889

Token 1015: 'érateur' (ID: 108528)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5624905228614807
    2. 'érateur' → logprob: -1.187490463256836
    3. 'ERATOR' → logprob: -3.312490463256836
    4. 'er' → logprob: -3.312490463256836
    5. 'def' → logprob: -4.062490463256836
    6. ',num' → logprob: -4.687490463256836
    7. 'ber' → logprob: -4.812490463256836
    8. '=' → logprob: -5.687490463256836
    9. 'umerator' → logprob: -6.187490463256836
    10. '```' → logprob: -6.187490463256836

Token 1016: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007118130102753639
    2. 'def' → logprob: -6.132118225097656
    3. '=' → logprob: -6.257118225097656
    4. '/' → logprob: -7.382118225097656
    5. '*' → logprob: -7.757118225097656
    6. ',
' → logprob: -8.132118225097656
    7. ' ,' → logprob: -8.132118225097656
    8. ',num' → logprob: -8.632118225097656
    9. '_,' → logprob: -8.882118225097656
    10. '*,' → logprob: -9.132118225097656

Token 1017: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.03328566625714302
    2. 'd' → logprob: -3.533285617828369
    3. 'dé' → logprob: -6.283285617828369
    4. '#' → logprob: -7.783285617828369
    5. '1' → logprob: -8.033286094665527
    6. 'un' → logprob: -8.158286094665527
    7. '```' → logprob: -8.658286094665527
    8. 'def' → logprob: -9.033286094665527
    9. 'num' → logprob: -9.408286094665527
    10. '2' → logprob: -10.158286094665527

Token 1018: 'om' (ID: 310)
  Prédit: 'érateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.3862249553203583
    2. 'def' → logprob: -2.2612249851226807
    3. 'umerator' → logprob: -2.3862249851226807
    4. 'er' → logprob: -2.5112249851226807
    5. ',' → logprob: -4.386224746704102
    6. 'num' → logprob: -4.886224746704102
    7. 'ominator' → logprob: -5.511224746704102
    8. 'umer' → logprob: -5.886224746704102
    9. '__' → logprob: -5.886224746704102
    10. 'f' → logprob: -6.136224746704102

Token 1019: 'inate' (ID: 5180)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0200515054166317
    2. '(
' → logprob: -5.2700514793396
    3. ' def' → logprob: -5.6450514793396
    4. '(' → logprob: -5.8950514793396
    5. '(n' → logprob: -6.5200514793396
    6. '=' → logprob: -7.1450514793396
    7. ',' → logprob: -7.2700514793396
    8. ' (' → logprob: -7.2700514793396
    9. '_num' → logprob: -7.5200514793396
    10. '_' → logprob: -7.5200514793396

Token 1020: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5164703726768494
    2. 'r' → logprob: -1.1414704322814941
    3. 'teur' → logprob: -3.016470432281494
    4. 't' → logprob: -3.766470432281494
    5. 'u' → logprob: -5.016470432281494
    6. '_' → logprob: -6.141470432281494
    7. '_r' → logprob: -7.016470432281494
    8. '=' → logprob: -7.516470432281494
    9. 'te' → logprob: -7.766470432281494
    10. ',' → logprob: -7.766470432281494

Token 1021: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -13.750001907348633
    3. '
' → logprob: -14.000001907348633
    4. ' def' → logprob: -15.750001907348633
    5. '(
' → logprob: -18.000001907348633
    6. '#' → logprob: -18.500001907348633
    7. '(' → logprob: -18.500001907348633
    8. '_def' → logprob: -18.625001907348633
    9. '``' → logprob: -18.750001907348633
    10. '(def' → logprob: -18.875001907348633

Token 1022: ' plus' (ID: 2932)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14192427694797516
    2. '#' → logprob: -2.3919243812561035
    3. 'n' → logprob: -3.8919243812561035
    4. 'num' → logprob: -4.0169243812561035
    5. ' def' → logprob: -7.6419243812561035
    6. 's' → logprob: -8.016923904418945
    7. 'total' → logprob: -8.266923904418945
    8. 't' → logprob: -8.266923904418945
    9. ' #' → logprob: -8.391923904418945
    10. ')' → logprob: -8.891923904418945

Token 1023: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07816584408283234
    2. '#' → logprob: -3.8281657695770264
    3. '```' → logprob: -3.9531657695770264
    4. ',' → logprob: -4.9531660079956055
    5. '=' → logprob: -5.0781660079956055
    6. 'precision' → logprob: -5.8281660079956055
    7. '_precision' → logprob: -5.9531660079956055
    8. 'prec' → logprob: -6.2031660079956055
    9. 'de' → logprob: -6.3281660079956055
    10. 'pr' → logprob: -6.7031660079956055

Token 1024: ' précision' (ID: 130591)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.014888877049088478
    2. 'precision' → logprob: -4.764888763427734
    3. 'prec' → logprob: -5.389888763427734
    4. ' précision' → logprob: -7.014888763427734
    5. 'fra' → logprob: -7.764888763427734
    6. 'pré' → logprob: -9.264888763427734
    7. '#' → logprob: -9.639888763427734
    8. '100' → logprob: -9.764888763427734
    9. '1' → logprob: -11.014888763427734
    10. 'exact' → logprob: -11.014888763427734

Token 1025: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.0
    3. '```' → logprob: -16.125
    4. ' def' → logprob: -18.125
    5. '#' → logprob: -20.375
    6. '``' → logprob: -20.75
    7. '  
' → logprob: -21.625
    8. ':def' → logprob: -21.875
    9. '\' → logprob: -22.125
    10. '    
' → logprob: -22.375

Token 1026: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.75
    3. ' def' → logprob: -17.25
    4. '``' → logprob: -19.5
    5. '	def' → logprob: -21.75
    6. '
' → logprob: -21.75
    7. '_def' → logprob: -21.875
    8. 'from' → logprob: -22.75
    9. '\' → logprob: -22.875
    10. '#' → logprob: -23.0

Token 1027: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5983268618583679
    2. 'add' → logprob: -0.9733268618583679
    3. 'sum' → logprob: -3.5983269214630127
    4. 'to' → logprob: -3.7233269214630127
    5. 'def' → logprob: -4.723326683044434
    6. 'frac' → logprob: -5.598326683044434
    7. 'fraction' → logprob: -5.848326683044434
    8. 'h' → logprob: -6.348326683044434
    9. 'combine' → logprob: -6.473326683044434
    10. 'total' → logprob: -7.348326683044434

Token 1028: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5439427495002747
    2. '_add' → logprob: -0.9189427495002747
    3. '_sum' → logprob: -4.168942928314209
    4. '_' → logprob: -6.668942928314209
    5. '_num' → logprob: -7.043942928314209
    6. '_in' → logprob: -7.418942928314209
    7. '_seconds' → logprob: -8.04394245147705
    8. '_s' → logprob: -8.16894245147705
    9. '_plus' → logprob: -8.54394245147705
    10. 'to' → logprob: -8.66894245147705

Token 1029: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -1.144290804862976
    2. 'frac' → logprob: -1.394290804862976
    3. 'fraction' → logprob: -1.644290804862976
    4. '_frac' → logprob: -1.894290804862976
    5. 'num' → logprob: -2.7692909240722656
    6. '_num' → logprob: -3.6442909240722656
    7. 'numer' → logprob: -7.394290924072266
    8. '_seconds' → logprob: -8.144290924072266
    9. 'fra' → logprob: -9.394290924072266
    10. 'seconds' → logprob: -10.269290924072266

Token 1030: 'al' (ID: 280)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00016635251813568175
    2. '(n' → logprob: -9.875165939331055
    3. '(' → logprob: -10.125165939331055
    4. '(H' → logprob: -10.625165939331055
    5. '(num' → logprob: -11.000165939331055
    6. '(hour' → logprob: -11.250165939331055
    7. '(hours' → logprob: -12.000165939331055
    8. '_h' → logprob: -12.875165939331055
    9. ' (' → logprob: -12.875165939331055
    10. '(
' → logprob: -13.250165939331055

Token 1031: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.012410994619131088
    2. '_num' → logprob: -4.637411117553711
    3. '_s' → logprob: -7.137411117553711
    4. '(t' → logprob: -7.262411117553711
    5. '_time' → logprob: -7.887411117553711
    6. '_' → logprob: -8.262411117553711
    7. '_second' → logprob: -8.387411117553711
    8. '_sec' → logprob: -10.137411117553711
    9. '(num' → logprob: -10.387411117553711
    10. '_total' → logprob: -10.387411117553711

Token 1032: '(H' (ID: 20904)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0001895935565698892
    2. '(H' → logprob: -9.125189781188965
    3. '(' → logprob: -10.000189781188965
    4. '(n' → logprob: -11.000189781188965
    5. '(hour' → logprob: -11.500189781188965
    6. '(hours' → logprob: -12.625189781188965
    7. '(num' → logprob: -13.625189781188965
    8. '(hr' → logprob: -13.875189781188965
    9. '(
' → logprob: -14.125189781188965
    10. 'h' → logprob: -14.125189781188965

Token 1033: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007435183506458998
    2. ',h' → logprob: -7.375743389129639
    3. ' ,' → logprob: -9.875743865966797
    4. ',H' → logprob: -10.125743865966797
    5. 'h' → logprob: -11.875743865966797
    6. '   ' → logprob: -12.500743865966797
    7. ',
' → logprob: -12.625743865966797
    8. ',n' → logprob: -12.875743865966797
    9. '(h' → logprob: -12.875743865966797
    10. ',num' → logprob: -13.375743865966797

Token 1034: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.166338137816638e-05
    2. ' h' → logprob: -11.125031471252441
    3. '   ' → logprob: -11.375031471252441
    4. 'def' → logprob: -13.500031471252441
    5. '```' → logprob: -13.875031471252441
    6. '	h' → logprob: -14.125031471252441
    7. '#' → logprob: -14.500031471252441
    8. 't' → logprob: -15.000031471252441
    9. 'hours' → logprob: -15.000031471252441
    10. 'hh' → logprob: -15.625031471252441

Token 1035: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.666993507067673e-05
    2. ' ,' → logprob: -10.875036239624023
    3. ',m' → logprob: -11.375036239624023
    4. ',
' → logprob: -13.125036239624023
    5. ',h' → logprob: -13.125036239624023
    6. '_,' → logprob: -14.375036239624023
    7. 'm' → logprob: -15.125036239624023
    8. '   ' → logprob: -15.250036239624023
    9. 'h' → logprob: -16.125036239624023
    10. ',int' → logprob: -16.250036239624023

Token 1036: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.908022285439074e-05
    2. ' m' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.250059127807617
    4. ' ' → logprob: -16.875059127807617
    5. '  ' → logprob: -17.125059127807617
    6. '0' → logprob: -17.500059127807617
    7. '	m' → logprob: -17.875059127807617
    8. '       ' → logprob: -18.125059127807617
    9. '    ' → logprob: -18.250059127807617
    10. '     ' → logprob: -19.250059127807617

Token 1037: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.228561349213123e-05
    2. ' ,' → logprob: -10.875052452087402
    3. ',
' → logprob: -11.375052452087402
    4. ',d' → logprob: -11.750052452087402
    5. 'd' → logprob: -12.250052452087402
    6. ',s' → logprob: -12.750052452087402
    7. 's' → logprob: -13.000052452087402
    8. '_,' → logprob: -13.750052452087402
    9. '   ' → logprob: -14.125052452087402
    10. ',n' → logprob: -14.375052452087402

Token 1038: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4765544831752777
    2. 'n' → logprob: -0.9765545129776001
    3. '0' → logprob: -6.1015543937683105
    4. 'ns' → logprob: -9.601554870605469
    5. ' s' → logprob: -9.601554870605469
    6. 'sn' → logprob: -10.101554870605469
    7. ' n' → logprob: -10.976554870605469
    8. 'num' → logprob: -11.226554870605469
    9. '   ' → logprob: -11.851554870605469
    10. '1' → logprob: -11.976554870605469

Token 1039: '):
' (ID: 1883)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00038145645521581173
    2. '_n' → logprob: -8.125381469726562
    3. 'num' → logprob: -9.750381469726562
    4. ',' → logprob: -10.875381469726562
    5. 'n' → logprob: -12.375381469726562
    6. '_,' → logprob: -12.875381469726562
    7. 'Num' → logprob: -14.875381469726562
    8. '_' → logprob: -15.125381469726562
    9. '```' → logprob: -15.250381469726562
    10. ',num' → logprob: -16.500381469726562

Token 1040: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.153537318110466
    2. ':' → logprob: -2.2785372734069824
    3. '):' → logprob: -4.653537273406982
    4. '(s' → logprob: -5.278537273406982
    5. ' :' → logprob: -5.778537273406982
    6. '(' → logprob: -6.028537273406982
    7. '    ' → logprob: -6.403537273406982
    8. 'return' → logprob: -6.528537273406982
    9. ',' → logprob: -6.528537273406982
    10. ')' → logprob: -6.653537273406982

Token 1041: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5150340795516968
    2. '   ' → logprob: -1.1400340795516968
    3. 'return' → logprob: -3.0150341987609863
    4. 'num' → logprob: -3.6400341987609863
    5. '#' (adapté à ' #') → logprob: -5.640034198760986
    6. 'n' → logprob: -6.890034198760986
    7. '       ' → logprob: -7.015034198760986
    8. '```' → logprob: -7.765034198760986
    9. ' s' → logprob: -8.265033721923828
    10. '(' → logprob: -8.515033721923828

Token 1042: ' s' (ID: 265)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7809587121009827
    2. '#' → logprob: -1.655958652496338
    3. 'return' → logprob: -1.655958652496338
    4. 's' → logprob: -2.155958652496338
    5. '   ' → logprob: -4.280958652496338
    6. 'numer' → logprob: -4.405958652496338
    7. 'n' → logprob: -4.530958652496338
    8. 'den' → logprob: -5.530958652496338
    9. 'total' → logprob: -6.030958652496338
    10. 'from' → logprob: -7.280958652496338

Token 1043: ' est' (ID: 893)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00037025497294962406
    2. '_n' → logprob: -8.500370025634766
    3. 'num' → logprob: -9.125370025634766
    4. '_' → logprob: -10.000370025634766
    5. ' =' → logprob: -12.625370025634766
    6. '_wh' → logprob: -13.125370025634766
    7. '=' → logprob: -13.250370025634766
    8. '_h' → logprob: -13.625370025634766
    9. '```' → logprob: -14.250370025634766
    10. 'n' → logprob: -14.250370025634766

Token 1044: ' entier' (ID: 80473)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4320868253707886
    2. 's' → logprob: -1.3070868253707886
    3. ' a' → logprob: -4.057086944580078
    4. 'type' → logprob: -4.307086944580078
    5. 'an' → logprob: -4.432086944580078
    6. 'un' → logprob: -5.057086944580078
    7. ' s' → logprob: -5.057086944580078
    8. 'h' → logprob: -5.432086944580078
    9. 'fraction' → logprob: -5.682086944580078
    10. 'tuple' → logprob: -6.057086944580078

Token 1045: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5080158710479736
    2. '_num' → logprob: -1.7580158710479736
    3. ',' → logprob: -2.3830158710479736
    4. 'def' → logprob: -3.0080158710479736
    5. ' *' → logprob: -3.6330158710479736
    6. '*' → logprob: -4.1330156326293945
    7. '*num' → logprob: -5.2580156326293945
    8. '
' → logprob: -5.3830156326293945
    9. '  ' → logprob: -5.5080156326293945
    10. ')' → logprob: -5.5080156326293945

Token 1046: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26296257972717285
    2. '   ' → logprob: -2.387962579727173
    3. '*' → logprob: -3.262962579727173
    4. ' *' → logprob: -3.512962579727173
    5. 'def' → logprob: -3.637962579727173
    6. '_num' → logprob: -3.887962579727173
    7. '<|end|>' → logprob: -5.262962341308594
    8. ')' → logprob: -6.012962341308594
    9. ' ,' → logprob: -6.512962341308594
    10. 's' → logprob: -6.637962341308594

Token 1047: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05999816209077835
    2. 'num' → logprob: -3.5599982738494873
    3. '   ' → logprob: -4.059998035430908
    4. 'total' → logprob: -4.809998035430908
    5. 'numer' → logprob: -5.684998035430908
    6. 'n' → logprob: -7.434998035430908
    7. 'den' → logprob: -8.559998512268066
    8. 's' → logprob: -9.684998512268066
    9. '#' (adapté à ' #') → logprob: -9.684998512268066
    10. ' return' → logprob: -9.934998512268066

Token 1048: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05699123442173004
    2. 'total' → logprob: -3.3069913387298584
    3. 'num' → logprob: -4.056991100311279
    4. 'numer' → logprob: -7.306991100311279
    5. '   ' → logprob: -8.431991577148438
    6. 'n' → logprob: -8.431991577148438
    7. '#' → logprob: -9.056991577148438
    8. 't' → logprob: -9.806991577148438
    9. 'result' → logprob: -9.806991577148438
    10. 's' → logprob: -10.431991577148438

Token 1049: ' num' (ID: 2269)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.2698511481285095
    2. 'h' → logprob: -1.8948512077331543
    3. '((' → logprob: -2.5198512077331543
    4. '(n' → logprob: -6.644851207733154
    5. '(s' → logprob: -6.894851207733154
    6. 'num' → logprob: -7.144851207733154
    7. ' (' → logprob: -7.644851207733154
    8. '(((' → logprob: -7.644851207733154
    9. 'numer' → logprob: -8.269850730895996
    10. 'return' → logprob: -8.269850730895996

Token 1050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9435053467750549
    2. '=' → logprob: -1.1935052871704102
    3. ' =' → logprob: -1.1935052871704102
    4. '   ' → logprob: -6.06850528717041
    5. ' ,' → logprob: -7.56850528717041
    6. 'umerator' → logprob: -7.81850528717041
    7. 'return' → logprob: -8.44350528717041
    8. 's' → logprob: -8.56850528717041
    9. '=h' → logprob: -8.94350528717041
    10. ',h' → logprob: -9.31850528717041

Token 1051: ' den' (ID: 1786)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12726332247257233
    2. 'den' → logprob: -2.502263307571411
    3. ' ' → logprob: -3.502263307571411
    4. 'd' → logprob: -5.62726354598999
    5. ' den' → logprob: -6.50226354598999
    6. 's' → logprob: -6.50226354598999
    7. ' s' → logprob: -7.87726354598999
    8. ' denom' → logprob: -8.752263069152832
    9. '0' → logprob: -9.002263069152832
    10. ' d' → logprob: -9.377263069152832

Token 1052: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011160651221871376
    2. 'return' → logprob: -5.386160850524902
    3. 'def' → logprob: -6.011160850524902
    4. ' =' → logprob: -6.761160850524902
    5. 's' → logprob: -7.011160850524902
    6. 'num' → logprob: -7.261160850524902
    7. '=' → logprob: -7.886160850524902
    8. '(s' → logprob: -8.386160850524902
    9. ' return' → logprob: -8.886160850524902
    10. '(' → logprob: -9.011160850524902

Token 1053: ' h' (ID: 312)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.730193555355072
    2. 'h' → logprob: -0.855193555355072
    3. '((' → logprob: -2.605193614959717
    4. '(' → logprob: -4.605193614959717
    5. '(s' → logprob: -5.230193614959717
    6. 's' → logprob: -6.605193614959717
    7. '(((' → logprob: -6.855193614959717
    8. '   ' → logprob: -8.105193138122559
    9. ' h' → logprob: -8.230193138122559
    10. '(H' → logprob: -8.230193138122559

Token 1054: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4342057704925537
    2. ' *' → logprob: -1.0592057704925537
    3. ',' → logprob: -5.559206008911133
    4. '*,' → logprob: -7.934206008911133
    5. 's' → logprob: -8.309206008911133
    6. '*(' → logprob: -8.309206008911133
    7. '*num' → logprob: -8.559206008911133
    8. ' ,' → logprob: -8.934206008911133
    9. '*h' → logprob: -9.309206008911133
    10. '   ' → logprob: -9.434206008911133

Token 1055: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -2.9040898880339228e-05
    2. '(' → logprob: -10.625028610229492
    3. '60' → logprob: -12.875028610229492
    4. 'num' → logprob: -14.000028610229492
    5. '36' → logprob: -14.875028610229492
    6. '359' → logprob: -15.000028610229492
    7. ' ' → logprob: -15.375028610229492
    8. '1' → logprob: -15.500028610229492
    9. '```' → logprob: -16.375028610229492
    10. '720' → logprob: -17.375028610229492

Token 1056: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.7994282795116305e-05
    2. '000' → logprob: -10.75004768371582
    3. ' ' → logprob: -11.12504768371582
    4. '360' → logprob: -11.87504768371582
    5. '00' → logprob: -13.00004768371582
    6. '```' → logprob: -14.37504768371582
    7. '   ' → logprob: -14.37504768371582
    8. '(' → logprob: -14.87504768371582
    9. '*' → logprob: -15.50004768371582
    10. 'h' → logprob: -15.75004768371582

Token 1057: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.045120611786842346
    2. ' *' → logprob: -3.1701207160949707
    3. ',' → logprob: -6.795120716094971
    4. '*,' → logprob: -7.545120716094971
    5. '*num' → logprob: -8.170120239257812
    6. ' ,' → logprob: -10.045120239257812
    7. '*h' → logprob: -10.045120239257812
    8. '*m' → logprob: -10.545120239257812
    9. '```' → logprob: -11.045120239257812
    10. '*s' → logprob: -11.670120239257812

Token 1058: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.082832932472229
    2. '(m' → logprob: -2.5828328132629395
    3. '(' → logprob: -6.3328328132629395
    4. ' m' → logprob: -7.0828328132629395
    5. ' (' → logprob: -7.2078328132629395
    6. '((' → logprob: -8.332833290100098
    7. '   ' → logprob: -9.082833290100098
    8. '(s' → logprob: -9.332833290100098
    9. '```' → logprob: -10.457833290100098
    10. 'def' → logprob: -11.082833290100098

Token 1059: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06199043244123459
    2. ' *' → logprob: -2.81199049949646
    3. '*num' → logprob: -12.186990737915039
    4. ' ' → logprob: -12.436990737915039
    5. ',' → logprob: -12.686990737915039
    6. '	' → logprob: -12.811990737915039
    7. '**' → logprob: -13.311990737915039
    8. '*,' → logprob: -13.686990737915039
    9. '```' → logprob: -13.936990737915039
    10. '
' → logprob: -14.186990737915039

Token 1060: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.011761097237467766
    2. '0' → logprob: -4.51176118850708
    3. ' ' → logprob: -8.011760711669922
    4. '360' → logprob: -8.136760711669922
    5. '600' → logprob: -9.886760711669922
    6. 's' → logprob: -11.386760711669922
    7. '   ' → logprob: -11.886760711669922
    8. '  ' → logprob: -12.136760711669922
    9. '(' → logprob: -12.386760711669922
    10. '00' → logprob: -12.761760711669922

Token 1061: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6395793557167053
    2. ',' → logprob: -0.8895793557167053
    3. ' *' → logprob: -3.1395792961120605
    4. ' ,' → logprob: -4.3895792961120605
    5. '*num' → logprob: -5.8895792961120605
    6. '*,' → logprob: -6.1395792961120605
    7. '```' → logprob: -8.389579772949219
    8. ' ' → logprob: -8.389579772949219
    9. ',
' → logprob: -8.639579772949219
    10. '
' → logprob: -10.014579772949219

Token 1062: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031459855381399393
    2. ' s' → logprob: -5.878146171569824
    3. '0' → logprob: -8.753146171569824
    4. '(s' → logprob: -8.878146171569824
    5. ' ' → logprob: -11.503146171569824
    6. '(' → logprob: -11.503146171569824
    7. '   ' → logprob: -12.503146171569824
    8. 'h' → logprob: -12.628146171569824
    9. ' (' → logprob: -12.628146171569824
    10. 'int' → logprob: -12.878146171569824

Token 1063: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8081673383712769
    2. '   ' → logprob: -1.5581673383712769
    3. 'def' → logprob: -2.1831674575805664
    4. 'num' → logprob: -2.5581674575805664
    5. ' =' → logprob: -2.5581674575805664
    6. '=' → logprob: -3.8081674575805664
    7. ' return' → logprob: -4.433167457580566
    8. ',' → logprob: -4.558167457580566
    9. 's' → logprob: -5.058167457580566
    10. '
' → logprob: -5.558167457580566

Token 1064: 'fraction' (ID: 173249)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0743405744433403
    2. ')' → logprob: -3.199340581893921
    3. '),' → logprob: -4.449340343475342
    4. '0' → logprob: -4.949340343475342
    5. 's' → logprob: -5.574340343475342
    6. ' ,' → logprob: -5.824340343475342
    7. '1' → logprob: -6.324340343475342
    8. 'h' → logprob: -6.324340343475342
    9. '*' → logprob: -7.699340343475342
    10. ',h' → logprob: -7.949340343475342

Token 1065: 'naire' (ID: 30464)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.11182909458875656
    2. ')' → logprob: -3.3618290424346924
    3. ',' → logprob: -3.9868290424346924
    4. 'num' → logprob: -4.1118292808532715
    5. ')_' → logprob: -4.1118292808532715
    6. '_n' → logprob: -4.9868292808532715
    7. '),' → logprob: -6.2368292808532715
    8. '_,' → logprob: -6.7368292808532715
    9. 's' → logprob: -6.8618292808532715
    10. '_' → logprob: -6.9868292808532715

Token 1066: '),' (ID: 936)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4744575023651123
    2. ',' → logprob: -2.2244575023651123
    3. ')' → logprob: -2.3494575023651123
    4. '=' → logprob: -2.4744575023651123
    5. '   ' → logprob: -2.4744575023651123
    6. 'return' → logprob: -2.5994575023651123
    7. ' =' → logprob: -2.7244575023651123
    8. '_num' → logprob: -3.0994575023651123
    9. 'num' → logprob: -3.0994575023651123
    10. '):' → logprob: -3.2244575023651123

Token 1067: ' denom' (ID: 73604)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32842686772346497
    2. 'return' → logprob: -2.0784268379211426
    3. 'h' → logprob: -2.7034268379211426
    4. '(s' → logprob: -3.2034268379211426
    5. 'num' → logprob: -4.203426837921143
    6. '(h' → logprob: -4.578426837921143
    7. ' s' → logprob: -4.953426837921143
    8. ' return' → logprob: -5.828426837921143
    9. '
' → logprob: -5.953426837921143
    10. '   ' → logprob: -6.203426837921143

Token 1068: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3363245129585266
    2. ' =' → logprob: -1.7113244533538818
    3. 'def' → logprob: -3.086324453353882
    4. '   ' → logprob: -3.336324453353882
    5. ':' → logprob: -5.211324691772461
    6. '(h' → logprob: -5.336324691772461
    7. ',' → logprob: -5.961324691772461
    8. '(H' → logprob: -5.961324691772461
    9. '(s' → logprob: -6.586324691772461
    10. 'return' → logprob: -6.586324691772461

Token 1069: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00521182082593441
    2. '360' → logprob: -5.75521183013916
    3. '10' → logprob: -6.88021183013916
    4. '(' → logprob: -7.13021183013916
    5. ' ' → logprob: -9.25521183013916
    6. '100' → logprob: -9.88021183013916
    7. 's' → logprob: -10.13021183013916
    8. 'H' → logprob: -12.13021183013916
    9. '36' → logprob: -13.13021183013916
    10. '(H' → logprob: -13.25521183013916

Token 1070: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3822154111694545e-05
    2. 's' → logprob: -10.250043869018555
    3. '(' → logprob: -12.250043869018555
    4. '10' → logprob: -13.500043869018555
    5. 'int' → logprob: -14.625043869018555
    6. '360' → logprob: -14.625043869018555
    7. ' ' → logprob: -14.875043869018555
    8. '100' → logprob: -15.000043869018555
    9. 'h' → logprob: -15.625043869018555
    10. '6' → logprob: -16.750043869018555

Token 1071: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08657920360565186
    2. 'return' → logprob: -2.8365793228149414
    3. ' return' → logprob: -4.336579322814941
    4. '	return' → logprob: -5.211579322814941
    5. '(' → logprob: -6.961579322814941
    6. '
' → logprob: -7.086579322814941
    7. ',' → logprob: -7.086579322814941
    8. '=' → logprob: -7.586579322814941
    9. ' ' → logprob: -8.211579322814941
    10. ')' → logprob: -8.461579322814941

Token 1072: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7755506038665771
    2. 'return' → logprob: -0.7755506038665771
    3. ' return' → logprob: -2.775550603866577
    4. 'num' → logprob: -4.775550842285156
    5. '	return' → logprob: -5.150550842285156
    6. ':' → logprob: -7.525550842285156
    7. ':return' → logprob: -7.775550842285156
    8. 'def' → logprob: -8.650550842285156
    9. '    
' → logprob: -8.775550842285156
    10. '(num' → logprob: -9.150550842285156

Token 1073: ' total' (ID: 3609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04520893096923828
    2. '   ' → logprob: -3.9202089309692383
    3. ' return' → logprob: -3.9202089309692383
    4. 'num' → logprob: -5.795208930969238
    5. 'h' → logprob: -7.295208930969238
    6. 's' → logprob: -8.295208930969238
    7. '
' → logprob: -8.920208930969238
    8. '(h' → logprob: -9.170208930969238
    9. '```' → logprob: -9.420208930969238
    10. '	return' → logprob: -10.295208930969238

Token 1074: '_sec' (ID: 41702)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.09565342962741852
    2. '_' → logprob: -2.970653533935547
    3. '=' → logprob: -3.595653533935547
    4. '_h' → logprob: -5.345653533935547
    5. ' =' → logprob: -5.595653533935547
    6. '_seconds' → logprob: -6.970653533935547
    7. 'num' → logprob: -7.220653533935547
    8. '_n' → logprob: -7.470653533935547
    9. ',' → logprob: -7.470653533935547
    10. '_s' → logprob: -8.595653533935547

Token 1075: ' =' (ID: 314)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.20440615713596344
    2. ' =' → logprob: -1.9544061422348022
    3. '=' → logprob: -3.204406261444092
    4. 'num' → logprob: -6.579406261444092
    5. '   ' → logprob: -8.079405784606934
    6. ',' → logprob: -8.079405784606934
    7. 's' → logprob: -8.829405784606934
    8. '_' → logprob: -9.079405784606934
    9. '_n' → logprob: -9.329405784606934
    10. '=num' → logprob: -9.579405784606934

Token 1076: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2582528293132782
    2. '(h' → logprob: -1.5082528591156006
    3. '((' → logprob: -5.3832526206970215
    4. ' (' → logprob: -7.5082526206970215
    5. ' h' → logprob: -7.7582526206970215
    6. '(' → logprob: -7.7582526206970215
    7. '(s' → logprob: -8.88325309753418
    8. 'Fraction' → logprob: -10.13325309753418
    9. '(H' → logprob: -10.38325309753418
    10. '(((' → logprob: -11.00825309753418

Token 1077: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16029825806617737
    2. ' *' → logprob: -1.910298228263855
    3. ',' → logprob: -9.910298347473145
    4. '<|end|>' → logprob: -11.785298347473145
    5. ' ' → logprob: -11.910298347473145
    6. '360' → logprob: -12.535298347473145
    7. ' ' → logprob: -13.410298347473145
    8. ')' → logprob: -14.035298347473145
    9. '**' → logprob: -14.535298347473145
    10. '   ' → logprob: -14.660298347473145

Token 1078: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.9361264946837764e-07
    2. '36' → logprob: -16.625
    3. ' ' → logprob: -17.375
    4. '60' → logprob: -18.5
    5. '359' → logprob: -19.375
    6. '366' → logprob: -20.5
    7. '1' → logprob: -21.75
    8. '180' → logprob: -22.0
    9. '361' → logprob: -22.375
    10. '120' → logprob: -22.625

Token 1079: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '36' → logprob: -19.375
    4. '60' → logprob: -21.75
    5. '366' → logprob: -22.375
    6. '359' → logprob: -22.875
    7. '```' → logprob: -23.0
    8. '180' → logprob: -23.5
    9. 'num' → logprob: -23.75
    10. '(' → logprob: -23.875

Token 1080: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -12.125009536743164
    3. '*' → logprob: -12.500009536743164
    4. '   ' → logprob: -15.125009536743164
    5. '000' → logprob: -15.750009536743164
    6. '_' → logprob: -16.625009536743164
    7. '```' → logprob: -17.375009536743164
    8. '۰' → logprob: -17.625009536743164
    9. ' *' → logprob: -17.875009536743164
    10. '  ' → logprob: -18.000009536743164

Token 1081: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11405323445796967
    2. ' +' → logprob: -2.239053249359131
    3. '*' → logprob: -6.739053249359131
    4. '   ' → logprob: -11.364052772521973
    5. ' *' → logprob: -11.364052772521973
    6. ' ' → logprob: -12.489052772521973
    7. ',' → logprob: -12.864052772521973
    8. '000' → logprob: -13.364052772521973
    9. '+
' → logprob: -13.364052772521973
    10. ')' → logprob: -13.489052772521973

Token 1082: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.026301691308617592
    2. ' m' → logprob: -3.651301622390747
    3. '(m' → logprob: -14.776301383972168
    4. ' ' → logprob: -15.026301383972168
    5. '   ' → logprob: -15.276301383972168
    6. '	m' → logprob: -16.276302337646484
    7. ' (' → logprob: -16.776302337646484
    8. '0' → logprob: -17.151302337646484
    9. '60' → logprob: -17.151302337646484
    10. '(' → logprob: -17.151302337646484

Token 1083: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16071543097496033
    2. ' *' → logprob: -1.9107154607772827
    3. '60' → logprob: -8.160715103149414
    4. '<|end|>' → logprob: -8.660715103149414
    5. ' ' → logprob: -11.910715103149414
    6. '0' → logprob: -12.660715103149414
    7. '```' → logprob: -12.660715103149414
    8. ')' → logprob: -13.035715103149414
    9. '<|end|>' → logprob: -13.160715103149414
    10. '   ' → logprob: -13.160715103149414

Token 1084: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.500001907348633
    3. 's' → logprob: -14.000001907348633
    4. '59' → logprob: -17.500001907348633
    5. '61' → logprob: -18.375001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '(' → logprob: -19.125001907348633
    8. ' s' → logprob: -19.625001907348633
    9. '  ' → logprob: -20.500001907348633
    10. '6' → logprob: -20.625001907348633

Token 1085: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.12500286102295
    3. 's' → logprob: -14.25000286102295
    4. '(' → logprob: -14.75000286102295
    5. '59' → logprob: -15.62500286102295
    6. ' s' → logprob: -18.625003814697266
    7. '61' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.000003814697266
    9. '  ' → logprob: -19.875003814697266
    10. '0' → logprob: -20.125003814697266

Token 1086: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47411516308784485
    2. '+' → logprob: -0.9741151332855225
    3. '   ' → logprob: -10.849115371704102
    4. '*' → logprob: -12.599115371704102
    5. ' ' → logprob: -12.724115371704102
    6. '+
' → logprob: -13.349115371704102
    7. 'import' → logprob: -13.474115371704102
    8. '+s' → logprob: -13.599115371704102
    9. 's' → logprob: -13.849115371704102
    10. '
' → logprob: -13.974115371704102

Token 1087: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.5577775128767826e-06
    2. ' s' → logprob: -12.125005722045898
    3. '0' → logprob: -17.0000057220459
    4. '(s' → logprob: -17.5000057220459
    5. 'float' → logprob: -17.8750057220459
    6. '   ' → logprob: -17.8750057220459
    7. 'int' → logprob: -18.5000057220459
    8. '	s' → logprob: -20.3750057220459
    9. ' ' → logprob: -20.6250057220459
    10. 'fraction' → logprob: -20.7500057220459

Token 1088: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31646695733070374
    2. '<|end|>' → logprob: -1.9414669275283813
    3. '
' → logprob: -3.441467046737671
    4. '_num' → logprob: -3.816467046737671
    5. '   ' → logprob: -3.941467046737671
    6. '<|end|>' → logprob: -4.066466808319092
    7. ' ' → logprob: -5.191466808319092
    8. 'return' → logprob: -5.316466808319092
    9. '*' → logprob: -5.566466808319092
    10. ' ,' → logprob: -5.566466808319092

Token 1089: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2825707495212555
    2. '<|end|>' → logprob: -1.782570719718933
    3. '
' → logprob: -3.0325708389282227
    4. '<|end|>' → logprob: -4.532570838928223
    5. '   ' → logprob: -5.157570838928223
    6. ' ,' → logprob: -5.407570838928223
    7. ',
' → logprob: -5.532570838928223
    8. ' ' → logprob: -6.532570838928223
    9. 'return' → logprob: -7.407570838928223
    10. '    
' → logprob: -8.157570838928223

Token 1090: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.046617031097412
    2. 'total' → logprob: -1.046617031097412
    3. 'return' → logprob: -2.171617031097412
    4. ' ' → logprob: -3.046617031097412
    5. '(total' → logprob: -3.546617031097412
    6. ' total' → logprob: -3.796617031097412
    7. '   ' → logprob: -3.921617031097412
    8. ',total' → logprob: -4.046617031097412
    9. '
' → logprob: -4.421617031097412
    10. '(' → logprob: -4.796617031097412

Token 1091: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002686467720195651
    2. ' return' → logprob: -6.752686500549316
    3. 'num' → logprob: -7.502686500549316
    4. 'total' → logprob: -7.627686500549316
    5. '   ' → logprob: -7.877686500549316
    6. 'if' → logprob: -9.252686500549316
    7. '#' → logprob: -15.002686500549316
    8. ' total' → logprob: -15.002686500549316
    9. 'from' → logprob: -15.252686500549316
    10. '(' → logprob: -15.627686500549316

Token 1092: 'voie' (ID: 70072)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.07045108079910278
    2. 'urn' → logprob: -3.070451021194458
    3. 't' → logprob: -3.945451021194458
    4. '_turn' → logprob: -6.695451259613037
    5. 'return' → logprob: -8.695450782775879
    6. 'eturn' → logprob: -8.695450782775879
    7. ',' → logprob: -8.820450782775879
    8. 'total' → logprob: -9.445450782775879
    9. '_' → logprob: -9.695450782775879
    10. ')' → logprob: -9.695450782775879

Token 1093: ' num' (ID: 2269)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005778169259428978
    2. ' total' → logprob: -5.5057783126831055
    3. '(total' → logprob: -6.3807783126831055
    4. '(' → logprob: -13.380778312683105
    5. ' (' → logprob: -13.380778312683105
    6. 'return' → logprob: -13.755778312683105
    7. '   ' → logprob: -16.13077735900879
    8. ',total' → logprob: -16.13077735900879
    9. 'fraction' → logprob: -18.00577735900879
    10. '	total' → logprob: -18.50577735900879

Token 1094: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14948293566703796
    2. 'total' → logprob: -2.5244829654693604
    3. ',total' → logprob: -3.0244829654693604
    4. '=' → logprob: -5.399482727050781
    5. '(total' → logprob: -6.024482727050781
    6. ' ,' → logprob: -7.024482727050781
    7. '_total' → logprob: -7.024482727050781
    8. ',
' → logprob: -7.774482727050781
    9. 'return' → logprob: -8.024482727050781
    10. ' total' → logprob: -8.399482727050781

Token 1095: 'den' (ID: 1660)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7090741991996765
    2. 'total' → logprob: -0.7090741991996765
    3. '(total' → logprob: -4.959074020385742
    4. ' total' → logprob: -5.209074020385742
    5. '(' → logprob: -5.834074020385742
    6. ' ' → logprob: -8.459074020385742
    7. ' (' → logprob: -9.459074020385742
    8. 'int' → logprob: -10.459074020385742
    9. '360' → logprob: -11.209074020385742
    10. ',' → logprob: -11.334074020385742

Token 1096: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006909198593348265
    2. ',total' → logprob: -5.381909370422363
    3. 'total' → logprob: -6.506909370422363
    4. ' ,' → logprob: -8.631909370422363
    5. ',
' → logprob: -8.881909370422363
    6. ',num' → logprob: -9.006909370422363
    7. 'return' → logprob: -9.256909370422363
    8. '(total' → logprob: -9.381909370422363
    9. '   ' → logprob: -9.506909370422363
    10. '_total' → logprob: -10.131909370422363

Token 1097: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00013858173042535782
    2. ' total' → logprob: -9.000138282775879
    3. '(total' → logprob: -11.125138282775879
    4. 'float' → logprob: -15.625138282775879
    5. 'int' → logprob: -15.875138282775879
    6. '(' → logprob: -17.875139236450195
    7. '	total' → logprob: -18.625139236450195
    8. ',total' → logprob: -18.625139236450195
    9. '   ' → logprob: -18.750139236450195
    10. 'fraction' → logprob: -19.000139236450195

Token 1098: '_sec' (ID: 41702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7855497598648071
    2. '_sec' → logprob: -0.7855497598648071
    3. '_,' → logprob: -3.2855496406555176
    4. ',' → logprob: -3.2855496406555176
    5. '_
' → logprob: -5.910549640655518
    6. '_num' → logprob: -5.910549640655518
    7. '_total' → logprob: -6.160549640655518
    8. ',_' → logprob: -6.285549640655518
    9. '_seconds' → logprob: -7.160549640655518
    10. ' _' → logprob: -7.535549640655518

Token 1099: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008211346343159676
    2. '   ' → logprob: -5.883211135864258
    3. 'total' → logprob: -6.133211135864258
    4. ',total' → logprob: -6.508211135864258
    5. 'return' → logprob: -6.883211135864258
    6. ',
' → logprob: -7.758211135864258
    7. ' ,' → logprob: -9.008211135864258
    8. '
' → logprob: -9.883211135864258
    9. '(total' → logprob: -10.383211135864258
    10. '_total' → logprob: -10.758211135864258

Token 1100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '=' → logprob: -18.000001907348633
    6. '(' → logprob: -18.625001907348633
    7. '
' → logprob: -18.875001907348633
    8. 's' → logprob: -19.000001907348633
    9. '``' → logprob: -19.375001907348633
    10. '`' → logprob: -19.812501907348633

Token 1101: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29457494616508484
    2. 'return' → logprob: -1.6695749759674072
    3. '
' → logprob: -3.7945749759674072
    4. ',
' → logprob: -3.9195749759674072
    5. '   ' → logprob: -4.044574737548828
    6. 'total' → logprob: -5.669574737548828
    7. ' return' → logprob: -6.794574737548828
    8. ',total' → logprob: -7.044574737548828
    9. ' ,' → logprob: -7.294574737548828
    10. '    
' → logprob: -8.294574737548828

Token 1102: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4460717439651489
    2. '
' → logprob: -1.696071743965149
    3. ',' → logprob: -2.1960716247558594
    4. ',
' → logprob: -4.196071624755859
    5. ' return' → logprob: -4.196071624755859
    6. '```' → logprob: -4.946071624755859
    7. '   ' → logprob: -5.071071624755859
    8. '(return' → logprob: -5.571071624755859
    9. '(' → logprob: -5.696071624755859
    10. '0' → logprob: -5.946071624755859

Token 1103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07999590784311295
    2. ' return' → logprob: -3.57999587059021
    3. '   ' → logprob: -3.70499587059021
    4. ',' → logprob: -4.079996109008789
    5. '
' → logprob: -5.829996109008789
    6. '1' → logprob: -6.829996109008789
    7. '6' → logprob: -6.829996109008789
    8. '0' → logprob: -7.829996109008789
    9. '    
' → logprob: -8.204996109008789
    10. '```' → logprob: -8.204996109008789

Token 1104: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -2.927930654550437e-05
    2. ' total' → logprob: -10.500029563903809
    3. '(total' → logprob: -13.375029563903809
    4. 'int' → logprob: -15.750029563903809
    5. '   ' → logprob: -18.000028610229492
    6. '	total' → logprob: -19.125028610229492
    7. '(' → logprob: -19.500028610229492
    8. ',total' → logprob: -19.625028610229492
    9. 'tot' → logprob: -20.000028610229492
    10. 'Total' → logprob: -20.250028610229492

Token 1105: '_sec' (ID: 41702)
  Prédit: '_sec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -3.333223139634356e-05
    2. '_sep' → logprob: -11.250033378601074
    3. 'sec' → logprob: -11.375033378601074
    4. 's' → logprob: -12.125033378601074
    5. '_s' → logprob: -14.375033378601074
    6. '_secs' → logprob: -14.375033378601074
    7. '_sol' → logprob: -15.250033378601074
    8. '_se' → logprob: -15.375033378601074
    9. '_' → logprob: -15.500033378601074
    10. 't' → logprob: -15.500033378601074

Token 1106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2580113708972931
    2. '<|end|>' → logprob: -1.5080113410949707
    3. ' ,' → logprob: -6.008011341094971
    4. '
' → logprob: -6.758011341094971
    5. '<|end|>' → logprob: -7.383011341094971
    6. ',None' → logprob: -7.883011341094971
    7. ',num' → logprob: -8.133011817932129
    8. ',
' → logprob: -8.133011817932129
    9. ' ' → logprob: -8.508011817932129
    10. '_,' → logprob: -8.508011817932129

Token 1107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -21.5
    4. '   ' → logprob: -22.5
    5. '۱' → logprob: -24.125
    6. ' ' → logprob: -24.25
    7. '
' → logprob: -24.625
    8. '`' → logprob: -24.875
    9. '[' → logprob: -25.0
    10. 'def' → logprob: -25.0

Token 1108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -21.875
    5. '[' → logprob: -22.8125
    6. '
' → logprob: -23.0
    7. '(' → logprob: -23.3125
    8. 'def' → logprob: -23.5625
    9. '۱' → logprob: -23.5625
    10. '`' → logprob: -23.5625

Token 1109: '


' (ID: 2499)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8839864730834961
    2. 'def' → logprob: -0.8839864730834961
    3. '
' → logprob: -2.133986473083496
    4. '<|end|>' → logprob: -3.008986473083496
    5. '

' → logprob: -5.633986473083496
    6. '<|end|>' → logprob: -6.508986473083496
    7. '  
' → logprob: -8.258986473083496
    8. '```' → logprob: -8.258986473083496
    9. 'import' → logprob: -8.508986473083496
    10. '


' → logprob: -9.383986473083496

Token 1110: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8210951089859009
    2. 'def' → logprob: -1.0710951089859009
    3. '<|end|>' → logprob: -1.5710951089859009
    4. '<|end|>' → logprob: -5.571094989776611
    5. '(' → logprob: -5.946094989776611
    6. ':' → logprob: -7.321094989776611
    7. '\' → logprob: -7.571094989776611
    8. ')' → logprob: -8.44609546661377
    9. ' def' → logprob: -8.44609546661377
    10. '```' → logprob: -8.44609546661377

Token 1111: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20159129798412323
    2. '#' → logprob: -1.7015912532806396
    3. 'import' → logprob: -8.701591491699219
    4. 'from' → logprob: -12.576591491699219
    5. 'for' → logprob: -12.951591491699219
    6. '```' → logprob: -13.326591491699219
    7. 'while' → logprob: -13.701591491699219
    8. 'class' → logprob: -13.826591491699219
    9. '#!/' → logprob: -14.451591491699219
    10. ' def' → logprob: -15.326591491699219

Token 1112: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014629875309765339
    2. '#' → logprob: -4.26462984085083
    3. ' def' → logprob: -8.389630317687988
    4. 'for' → logprob: -10.014630317687988
    5. '```' → logprob: -10.764630317687988
    6. ' #' → logprob: -11.139630317687988
    7. '(
' → logprob: -11.264630317687988
    8. 'to' → logprob: -11.264630317687988
    9. '=' → logprob: -11.389630317687988
    10. 'de' → logprob: -11.639630317687988

Token 1113: ' avance' (ID: 81376)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.6853986978530884
    2. '#' → logprob: -1.1853986978530884
    3. 'def' → logprob: -1.8103986978530884
    4. 'find' → logprob: -4.310398578643799
    5. 'tr' → logprob: -5.060398578643799
    6. 'search' → logprob: -5.685398578643799
    7. 'calcul' → logprob: -6.685398578643799
    8. 'chercher' → logprob: -6.935398578643799
    9. 'calc' → logprob: -7.435398578643799
    10. 'detect' → logprob: -9.060399055480957

Token 1114: ' le' (ID: 505)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.03149695321917534
    2. 'def' → logprob: -4.531497001647949
    3. '(' → logprob: -4.656497001647949
    4. 'le' → logprob: -5.531497001647949
    5. '_time' → logprob: -6.156497001647949
    6. 'de' → logprob: -7.156497001647949
    7. '_' → logprob: -7.156497001647949
    8. 'd' → logprob: -7.406497001647949
    9. '(
' → logprob: -7.656497001647949
    10. 't' → logprob: -7.781497001647949

Token 1115: ' temps' (ID: 11160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6078291535377502
    2. 'time' → logprob: -2.6078290939331055
    3. '_' → logprob: -2.8578290939331055
    4. 'temps' → logprob: -3.1078290939331055
    5. ' pas' → logprob: -3.4828290939331055
    6. ' t' → logprob: -3.6078290939331055
    7. '(H' → logprob: -3.6078290939331055
    8. 'def' → logprob: -3.8578290939331055
    9. ' temps' → logprob: -3.8578290939331055
    10. 'H' → logprob: -3.8578290939331055

Token 1116: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16097812354564667
    2. '(H' → logprob: -1.910978078842163
    3. '(' → logprob: -8.035978317260742
    4. ' def' → logprob: -8.660978317260742
    5. '(
' → logprob: -8.785978317260742
    6. '
' → logprob: -10.160978317260742
    7. '```' → logprob: -10.410978317260742
    8. '#' → logprob: -11.160978317260742
    9. 'de' → logprob: -12.160978317260742
    10. ' (' → logprob: -12.785978317260742

Token 1117: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.7862305045127869
    2. ''une' → logprob: -0.9112305045127869
    3. '1' → logprob: -3.5362305641174316
    4. 't' → logprob: -4.161230564117432
    5. '```' → logprob: -4.161230564117432
    6. 'un' → logprob: -4.286230564117432
    7. 'une' → logprob: -4.911230564117432
    8. '_' → logprob: -4.911230564117432
    9. ' ' → logprob: -4.911230564117432
    10. 'def' → logprob: -5.161230564117432

Token 1118: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.8157190084457397
    2. 'increment' → logprob: -1.5657190084457397
    3. 'fraction' → logprob: -2.4407191276550293
    4. 't' → logprob: -2.6907191276550293
    5. '1' → logprob: -2.8157191276550293
    6. 'step' → logprob: -3.1907191276550293
    7. '#' → logprob: -3.8157191276550293
    8. 'num' → logprob: -4.315719127655029
    9. 'def' → logprob: -4.690719127655029
    10. 'token' → logprob: -4.815719127655029

Token 1119: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05637803673744202
    2. '(H' → logprob: -2.931378126144409
    3. '(
' → logprob: -7.68137788772583
    4. ' def' → logprob: -8.181378364562988
    5. '
' → logprob: -8.556378364562988
    6. 'de' → logprob: -8.681378364562988
    7. '```' → logprob: -9.181378364562988
    8. '(' → logprob: -9.556378364562988
    9. ' déf' → logprob: -10.306378364562988
    10. 't' → logprob: -10.556378364562988

Token 1120: ' secondes' (ID: 109098)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.4823201596736908
    2. 't' → logprob: -1.3573201894760132
    3. 'temps' → logprob: -2.6073200702667236
    4. 'seconds' → logprob: -4.607320308685303
    5. 'pas' → logprob: -4.732320308685303
    6. '#' → logprob: -4.857320308685303
    7. 'num' → logprob: -4.982320308685303
    8. 'fra' → logprob: -5.607320308685303
    9. '```' → logprob: -5.982320308685303
    10. 'def' → logprob: -6.357320308685303

Token 1121: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002212704159319401
    2. '
' → logprob: -6.1272125244140625
    3. '```' → logprob: -11.002212524414062
    4. ' def' → logprob: -11.877212524414062
    5. ':def' → logprob: -13.502212524414062
    6. '(' → logprob: -14.752212524414062
    7. '  
' → logprob: -14.752212524414062
    8. '\' → logprob: -14.877212524414062
    9. '(def' → logprob: -15.252212524414062
    10. '#' → logprob: -15.502212524414062

Token 1122: 'fraction' (ID: 173249)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6688485741615295
    2. 'def' → logprob: -1.2938485145568848
    3. ')' → logprob: -2.0438485145568848
    4. 't' → logprob: -2.7938485145568848
    5. ',' → logprob: -4.418848514556885
    6. '(H' → logprob: -5.168848514556885
    7. 'n' → logprob: -6.918848514556885
    8. '):' → logprob: -7.043848514556885
    9. ' def' → logprob: -7.543848514556885
    10. ')t' → logprob: -7.793848514556885

Token 1123: 'naire' (ID: 30464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0149081945419312
    2. ')' → logprob: -1.5149081945419312
    3. 'def' → logprob: -1.8899081945419312
    4. '_,' → logprob: -2.7649083137512207
    5. '_' → logprob: -2.8899083137512207
    6. 'al' → logprob: -2.8899083137512207
    7. '_num' → logprob: -4.264908313751221
    8. '_fraction' → logprob: -4.389908313751221
    9. '_
' → logprob: -4.514908313751221
    10. ')_' → logprob: -4.764908313751221

Token 1124: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2991252839565277
    2. 'def' → logprob: -2.1741251945495605
    3. '(H' → logprob: -2.1741251945495605
    4. ')' → logprob: -3.9241251945495605
    5. '):
' → logprob: -5.0491251945495605
    6. '):' → logprob: -6.5491251945495605
    7. ',
' → logprob: -7.4241251945495605
    8. '),' → logprob: -7.4241251945495605
    9. '):

' → logprob: -7.5491251945495605
    10. ')
' → logprob: -7.6741251945495605

Token 1125: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.7968066206085496e-05
    2. '
' → logprob: -10.875027656555176
    3. '```' → logprob: -11.750027656555176
    4. ' def' → logprob: -14.250027656555176
    5. '``' → logprob: -15.625027656555176
    6. 'de' → logprob: -16.250028610229492
    7. '(def' → logprob: -16.750028610229492
    8. '(
' → logprob: -17.375028610229492
    9. '(' → logprob: -17.750028610229492
    10. ':def' → logprob: -18.250028610229492

Token 1126: ' Re' (ID: 907)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -16.0
    3. '```' → logprob: -16.25
    4. ' def' → logprob: -16.5
    5. '#' → logprob: -19.125
    6. '``' → logprob: -20.75
    7. '	def' → logprob: -22.375
    8. '  
' → logprob: -22.5
    9. ':def' → logprob: -22.625
    10. 'de' → logprob: -23.0

Token 1127: 'prés' (ID: 61592)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.0001617035741219297
    2. '_turn' → logprob: -9.875162124633789
    3. 'def' → logprob: -10.125162124633789
    4. 't' → logprob: -10.375162124633789
    5. 'f' → logprob: -10.875162124633789
    6. 'tour' → logprob: -11.625162124633789
    7. 'tur' → logprob: -13.000162124633789
    8. 'turned' → logprob: -13.000162124633789
    9. '(turn' → logprob: -13.500162124633789
    10. 'eturn' → logprob: -14.125162124633789

Token 1128: 'entation' (ID: 100159)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08646999299526215
    2. 'sent' → logprob: -2.836469888687134
    3. 'resents' → logprob: -4.336470127105713
    4. 's' → logprob: -5.586470127105713
    5. 'ent' → logprob: -6.461470127105713
    6. 'esent' → logprob: -6.961470127105713
    7. 'ented' → logprob: -7.086470127105713
    8. 'resent' → logprob: -7.211470127105713
    9. ')' → logprob: -7.836470127105713
    10. 'resente' → logprob: -8.086469650268555

Token 1129: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006922688335180283
    2. '#' → logprob: -5.881922721862793
    3. 'class' → logprob: -6.256922721862793
    4. ' =' → logprob: -7.756922721862793
    5. ':' → logprob: -7.881922721862793
    6. ' def' → logprob: -8.131922721862793
    7. '
' → logprob: -8.381922721862793
    8. 'de' → logprob: -9.006922721862793
    9. 'num' → logprob: -9.006922721862793
    10. 'd' → logprob: -9.131922721862793

Token 1130: ' fraction' (ID: 33763)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.003669675439596176
    2. 'def' → logprob: -6.253669738769531
    3. 'numer' → logprob: -6.503669738769531
    4. 'fraction' → logprob: -9.253669738769531
    5. '#' → logprob: -10.253669738769531
    6. '(num' → logprob: -10.378669738769531
    7. 'nombre' → logprob: -10.753669738769531
    8. 'n' → logprob: -10.753669738769531
    9. 'total' → logprob: -11.378669738769531
    10. ' num' → logprob: -12.003669738769531

Token 1131: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01070750504732132
    2. '(n' → logprob: -5.635707378387451
    3. '_num' → logprob: -6.635707378387451
    4. '(' → logprob: -6.760707378387451
    5. ':' → logprob: -6.760707378387451
    6. '(num' → logprob: -7.010707378387451
    7. ' def' → logprob: -7.260707378387451
    8. ' (' → logprob: -8.01070785522461
    9. '(
' → logprob: -8.26070785522461
    10. ',' → logprob: -8.51070785522461

Token 1132: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07044874131679535
    2. 'n' → logprob: -2.820448637008667
    3. ')' → logprob: -6.195448875427246
    4. '#' → logprob: -6.195448875427246
    5. 't' → logprob: -6.320448875427246
    6. 'def' → logprob: -6.570448875427246
    7. 'numer' → logprob: -7.945448875427246
    8. 's' → logprob: -8.320448875427246
    9. ' num' → logprob: -9.070448875427246
    10. '(n' → logprob: -9.195448875427246

Token 1133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02706114389002323
    2. '_,' → logprob: -4.0270609855651855
    3. 'umerator' → logprob: -5.5270609855651855
    4. '_' → logprob: -6.1520609855651855
    5. '```' → logprob: -7.7770609855651855
    6. ',num' → logprob: -7.9020609855651855
    7. ',_' → logprob: -8.402061462402344
    8. 'u' → logprob: -8.402061462402344
    9. '=' → logprob: -8.652061462402344
    10. ',
' → logprob: -8.777061462402344

Token 1134: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0007101670489646494
    2. ' den' → logprob: -7.2507100105285645
    3. 'def' → logprob: -16.000709533691406
    4. 'd' → logprob: -17.625709533691406
    5. ')' → logprob: -17.750709533691406
    6. ',' → logprob: -18.250709533691406
    7. '
' → logprob: -18.875709533691406
    8. '   ' → logprob: -19.000709533691406
    9. ' ' → logprob: -19.125709533691406
    10. 'num' → logprob: -19.125709533691406

Token 1135: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9888454675674438
    2. '):
' → logprob: -1.4888454675674438
    3. ',' → logprob: -1.6138454675674438
    4. ')' → logprob: -2.1138453483581543
    5. '),' → logprob: -2.7388453483581543
    6. '):

' → logprob: -4.863845348358154
    7. ')=' → logprob: -5.738845348358154
    8. '=' → logprob: -5.988845348358154
    9. '),
' → logprob: -6.613845348358154
    10. ')
' → logprob: -7.238845348358154

Token 1136: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.250000953674316
    3. '```' → logprob: -15.375000953674316
    4. ' def' → logprob: -15.625000953674316
    5. ':def' → logprob: -17.875001907348633
    6. '``' → logprob: -18.375001907348633
    7. '(def' → logprob: -18.875001907348633
    8. 'de' → logprob: -19.000001907348633
    9. 'ndef' → logprob: -19.750001907348633
    10. '_def' → logprob: -20.375001907348633

Token 1137: ' fraction' (ID: 33763)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.03960101678967476
    2. 'time' → logprob: -3.5396010875701904
    3. 'increment' → logprob: -4.789600849151611
    4. 'step' → logprob: -7.164600849151611
    5. 'add' → logprob: -7.414600849151611
    6. 'increase' → logprob: -9.53960132598877
    7. 'adv' → logprob: -11.41460132598877
    8. 'next' → logprob: -11.91460132598877
    9. 'fraction' → logprob: -12.16460132598877
    10. ' advance' → logprob: -12.16460132598877

Token 1138: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.10222867876291275
    2. '_increment' → logprob: -3.1022286415100098
    3. '_step' → logprob: -3.3522286415100098
    4. '_' → logprob: -4.35222864151001
    5. 'al' → logprob: -6.10222864151001
    6. '_time' → logprob: -7.35222864151001
    7. '_adv' → logprob: -7.97722864151001
    8. '_in' → logprob: -8.477229118347168
    9. '_seconds' → logprob: -8.477229118347168
    10. '_ad' → logprob: -9.102229118347168

Token 1139: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.06156199425458908
    2. '_num' → logprob: -3.6865620613098145
    3. '(n' → logprob: -3.9365620613098145
    4. 'ition' → logprob: -5.3115620613098145
    5. '_fraction' → logprob: -5.4365620613098145
    6. '(_' → logprob: -5.9365620613098145
    7. '(' → logprob: -7.3115620613098145
    8. ' (' → logprob: -7.4365620613098145
    9. '_token' → logprob: -8.061561584472656
    10. '_(' → logprob: -8.186561584472656

Token 1140: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002812391903717071
    2. '_,' → logprob: -9.12528133392334
    3. ',num' → logprob: -9.62528133392334
    4. ' ,' → logprob: -9.75028133392334
    5. '+,' → logprob: -12.00028133392334
    6. ',s' → logprob: -12.37528133392334
    7. ',p' → logprob: -12.50028133392334
    8. ',
' → logprob: -12.62528133392334
    9. '1' → logprob: -12.62528133392334
    10. ',n' → logprob: -12.75028133392334

Token 1141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022403974435292184
    2. ',num' → logprob: -8.500224113464355
    3. '_,' → logprob: -12.000224113464355
    4. ',
' → logprob: -12.125224113464355
    5. ' ,' → logprob: -12.125224113464355
    6. '‌,' → logprob: -13.750224113464355
    7. ',n' → logprob: -14.250224113464355
    8. ',s' → logprob: -15.625224113464355
    9. ',",' → logprob: -15.625224113464355
    10. '‍,' → logprob: -15.750224113464355

Token 1142: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.023341795429587364
    2. 'num' → logprob: -4.023341655731201
    3. ' den' → logprob: -5.273341655731201
    4. ' num' → logprob: -9.89834213256836
    5. 'def' → logprob: -14.27334213256836
    6. '_den' → logprob: -14.52334213256836
    7. ',' → logprob: -15.14834213256836
    8. 'd' → logprob: -15.89834213256836
    9. ' denom' → logprob: -16.14834213256836
    10. 'n' → logprob: -17.02334213256836

Token 1143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3940231204032898
    2. ',' → logprob: -1.1440231800079346
    3. '_,' → logprob: -5.3940229415893555
    4. ',num' → logprob: -6.2690229415893555
    5. ',_' → logprob: -7.8940229415893555
    6. '_num' → logprob: -9.394022941589355
    7. '```' → logprob: -10.144022941589355
    8. '_' → logprob: -10.144022941589355
    9. ' ,' → logprob: -10.519022941589355
    10. ',
' → logprob: -10.769022941589355

Token 1144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.458980300929397e-05
    2. ',num' → logprob: -9.50008487701416
    3. ' ,' → logprob: -12.12508487701416
    4. ',
' → logprob: -12.62508487701416
    5. ',

' → logprob: -15.37508487701416
    6. '‌,' → logprob: -15.75008487701416
    7. ',n' → logprob: -15.87508487701416
    8. ',",' → logprob: -15.87508487701416
    9. '_,' → logprob: -16.125083923339844
    10. '+,' → logprob: -16.375083923339844

Token 1145: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0028073713183403015
    2. ' num' → logprob: -5.877807140350342
    3. '   ' → logprob: -13.2528076171875
    4. 'den' → logprob: -15.1278076171875
    5. '	num' → logprob: -15.7528076171875
    6. 'numer' → logprob: -16.0028076171875
    7. ',num' → logprob: -16.5028076171875
    8. ',' → logprob: -16.7528076171875
    9. '    ' → logprob: -17.5028076171875
    10. 'n' → logprob: -17.8778076171875

Token 1146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.44462358951568604
    2. ',' → logprob: -1.069623589515686
    3. '+' → logprob: -5.3196234703063965
    4. '1' → logprob: -5.4446234703063965
    5. '+,' → logprob: -5.8196234703063965
    6. '_,' → logprob: -6.6946234703063965
    7. ',num' → logprob: -7.4446234703063965
    8. '*,' → logprob: -7.8196234703063965
    9. '+=' → logprob: -8.069623947143555
    10. '*' → logprob: -8.694623947143555

Token 1147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010330478107789531
    2. ' ,' → logprob: -9.375102996826172
    3. ',num' → logprob: -11.625102996826172
    4. ',
' → logprob: -12.750102996826172
    5. '_,' → logprob: -12.875102996826172
    6. '‌,' → logprob: -13.000102996826172
    7. '   ' → logprob: -14.875102996826172
    8. '*,' → logprob: -15.625102996826172
    9. ',",' → logprob: -16.125102996826172
    10. ',

' → logprob: -16.250102996826172

Token 1148: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0031777136027812958
    2. ' den' → logprob: -5.753177642822266
    3. 'def' → logprob: -18.628177642822266
    4. '_den' → logprob: -20.128177642822266
    5. 'd' → logprob: -20.753177642822266
    6. 'Den' → logprob: -22.878177642822266
    7. ' ' → logprob: -23.128177642822266
    8. '=' → logprob: -23.128177642822266
    9. '```' → logprob: -23.503177642822266
    10. '.den' → logprob: -23.878177642822266

Token 1149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00037836082628928125
    2. '1' → logprob: -8.250378608703613
    3. '):
' → logprob: -9.750378608703613
    4. ',' → logprob: -10.250378608703613
    5. '```' → logprob: -12.375378608703613
    6. '
' → logprob: -12.625378608703613
    7. 'def' → logprob: -12.625378608703613
    8. ')' → logprob: -12.625378608703613
    9. '=' → logprob: -13.000378608703613
    10. '   ' → logprob: -13.375378608703613

Token 1150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39370930194854736
    2. '):
' → logprob: -1.1437093019485474
    3. ',' → logprob: -5.018709182739258
    4. '):
' → logprob: -9.018709182739258
    5. ')' → logprob: -10.518709182739258
    6. '   ' → logprob: -10.768709182739258
    7. '):

' → logprob: -11.268709182739258
    8. ':' → logprob: -11.518709182739258
    9. ' ):' → logprob: -12.643709182739258
    10. ',num' → logprob: -13.518709182739258

Token 1151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5354998111724854
    2. ')' → logprob: -2.2854998111724854
    3. '*' → logprob: -2.2854998111724854
    4. '+' → logprob: -3.2854998111724854
    5. '(
' → logprob: -3.6604998111724854
    6. ' return' → logprob: -3.9104998111724854
    7. ' ' → logprob: -4.410499572753906
    8. 'return' → logprob: -4.535499572753906
    9. ' (' → logprob: -4.785499572753906
    10. ',' → logprob: -4.785499572753906

Token 1152: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06902351975440979
    2. 'return' → logprob: -3.444023609161377
    3. 'n' → logprob: -4.694023609161377
    4. '(num' → logprob: -4.944023609161377
    5. ' num' → logprob: -5.694023609161377
    6. '+' → logprob: -5.819023609161377
    7. '(
' → logprob: -6.319023609161377
    8. '0' → logprob: -6.444023609161377
    9. ' return' → logprob: -6.819023609161377
    10. '(' → logprob: -7.069023609161377

Token 1153: ' (' (ID: 350)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.05423050746321678
    2. 'new' → logprob: -3.5542304515838623
    3. 'den' → logprob: -4.304230690002441
    4. '(num' → logprob: -5.304230690002441
    5. 'return' → logprob: -6.054230690002441
    6. 'l' → logprob: -6.429230690002441
    7. 'common' → logprob: -7.304230690002441
    8. 'n' → logprob: -8.179230690002441
    9. '   ' → logprob: -8.429230690002441
    10. ' num' → logprob: -9.179230690002441

Token 1154: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00027182576013728976
    2. ' num' → logprob: -8.375271797180176
    3. '(num' → logprob: -10.500271797180176
    4. ')' → logprob: -11.375271797180176
    5. 'den' → logprob: -14.000271797180176
    6. '   ' → logprob: -15.000271797180176
    7. '(' → logprob: -15.125271797180176
    8. ' (' → logprob: -15.375271797180176
    9. 'numer' → logprob: -15.625271797180176
    10. '	num' → logprob: -16.125272750854492

Token 1155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005135323386639357
    2. '*' → logprob: -5.505135536193848
    3. '*num' → logprob: -7.755135536193848
    4. ' *' → logprob: -8.005135536193848
    5. '+' → logprob: -9.130135536193848
    6. ' +' → logprob: -9.380135536193848
    7. '2' → logprob: -10.005135536193848
    8. ',' → logprob: -10.755135536193848
    9. 'num' → logprob: -11.380135536193848
    10. '```' → logprob: -12.005135536193848

Token 1156: '/' (ID: 14)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6329294443130493
    2. ' *' → logprob: -0.7579294443130493
    3. ' +' → logprob: -9.132929801940918
    4. ',' → logprob: -9.257929801940918
    5. '+' → logprob: -9.757929801940918
    6. '*num' → logprob: -10.257929801940918
    7. '*,' → logprob: -11.882929801940918
    8. ' ' → logprob: -12.007929801940918
    9. '   ' → logprob: -12.132929801940918
    10. ')' → logprob: -12.507929801940918

Token 1157: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0002615742268972099
    2. ' den' → logprob: -8.250261306762695
    3. 'def' → logprob: -16.750261306762695
    4. ' ' → logprob: -17.125261306762695
    5. '   ' → logprob: -17.500261306762695
    6. '_den' → logprob: -18.000261306762695
    7. ')' → logprob: -18.125261306762695
    8. '  ' → logprob: -18.250261306762695
    9. '(' → logprob: -19.625261306762695
    10. '-den' → logprob: -19.750261306762695

Token 1158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05225091055035591
    2. '*' → logprob: -3.552250862121582
    3. '2' → logprob: -4.677250862121582
    4. ')' → logprob: -4.802250862121582
    5. '+' → logprob: -6.302250862121582
    6. '```' → logprob: -6.677250862121582
    7. ')*' → logprob: -7.427250862121582
    8. ',' → logprob: -8.427250862121582
    9. '
' → logprob: -8.677250862121582
    10. ' *' → logprob: -9.052250862121582

Token 1159: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5485614538192749
    2. ' *' → logprob: -1.048561453819275
    3. ')' → logprob: -3.2985615730285645
    4. '+' → logprob: -4.4235615730285645
    5. ' +' → logprob: -4.5485615730285645
    6. '*num' → logprob: -5.1735615730285645
    7. ')*' → logprob: -5.5485615730285645
    8. ',' → logprob: -6.0485615730285645
    9. ' ,' → logprob: -9.923561096191406
    10. ' )' → logprob: -10.048561096191406

Token 1160: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33731675148010254
    2. '+' → logprob: -1.5873167514801025
    3. ',' → logprob: -3.3373167514801025
    4. ' *' → logprob: -3.5873167514801025
    5. ' +' → logprob: -5.087316513061523
    6. '*num' → logprob: -5.087316513061523
    7. '*,' → logprob: -5.337316513061523
    8. '+,' → logprob: -7.212316513061523
    9. 'num' → logprob: -8.087316513061523
    10. ',num' → logprob: -8.837316513061523

Token 1161: ' (' (ID: 350)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.038397639989852905
    2. ' num' → logprob: -3.9133975505828857
    3. '(num' → logprob: -4.163397789001465
    4. ' (' → logprob: -6.163397789001465
    5. '(' → logprob: -10.538397789001465
    6. ' ' → logprob: -12.913397789001465
    7. '   ' → logprob: -13.538397789001465
    8. ',num' → logprob: -13.663397789001465
    9. '	num' → logprob: -13.663397789001465
    10. '[num' → logprob: -13.663397789001465

Token 1162: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -4.787507714354433e-05
    2. '(num' → logprob: -10.62504768371582
    3. ' num' → logprob: -10.75004768371582
    4. 'den' → logprob: -13.87504768371582
    5. ')' → logprob: -14.50004768371582
    6. '+' → logprob: -15.87504768371582
    7. '[num' → logprob: -16.12504768371582
    8. '1' → logprob: -16.50004768371582
    9. '(' → logprob: -16.62504768371582
    10. '	num' → logprob: -17.00004768371582

Token 1163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.68153518543113e-05
    2. 'num' → logprob: -11.125057220458984
    3. '```' → logprob: -11.250057220458984
    4. '*' → logprob: -11.625057220458984
    5. '+' → logprob: -12.375057220458984
    6. '   ' → logprob: -12.625057220458984
    7. ',' → logprob: -12.625057220458984
    8. '1' → logprob: -13.000057220458984
    9. ')' → logprob: -13.625057220458984
    10. ' ' → logprob: -13.875057220458984

Token 1164: '/' (ID: 14)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.30368679761886597
    2. ' *' → logprob: -1.4286868572235107
    3. ',' → logprob: -4.053686618804932
    4. '*num' → logprob: -5.803686618804932
    5. '*,' → logprob: -7.178686618804932
    6. ')' → logprob: -7.303686618804932
    7. ' ,' → logprob: -8.55368709564209
    8. ')*' → logprob: -8.67868709564209
    9. '*)' → logprob: -11.17868709564209
    10. '	' → logprob: -11.30368709564209

Token 1165: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -4.127333340875339e-06
    2. ' den' → logprob: -12.750003814697266
    3. 'num' → logprob: -13.625003814697266
    4. '(' → logprob: -18.375003814697266
    5. '  ' → logprob: -18.625003814697266
    6. ' ' → logprob: -18.750003814697266
    7. '   ' → logprob: -18.750003814697266
    8. 'def' → logprob: -21.125003814697266
    9. '    ' → logprob: -21.375003814697266
    10. ')' → logprob: -21.625003814697266

Token 1166: '2' (ID: 17)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0008918096427805722
    2. '2' → logprob: -7.62589168548584
    3. ' den' → logprob: -8.25089168548584
    4. '_den' → logprob: -10.00089168548584
    5. 'def' → logprob: -10.12589168548584
    6. 'num' → logprob: -10.75089168548584
    7. '1' → logprob: -11.00089168548584
    8. '   ' → logprob: -11.75089168548584
    9. '```' → logprob: -12.87589168548584
    10. ')' → logprob: -13.12589168548584

Token 1167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00476368423551321
    2. ',' → logprob: -6.129763603210449
    3. ')=' → logprob: -6.754763603210449
    4. ' )' → logprob: -7.254763603210449
    5. '=' → logprob: -8.00476360321045
    6. '   ' → logprob: -8.50476360321045
    7. ')*' → logprob: -10.00476360321045
    8. ')
' → logprob: -10.87976360321045
    9. '),' → logprob: -10.87976360321045
    10. ' =' → logprob: -10.87976360321045

Token 1168: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.454616516828537
    2. '=' → logprob: -1.8296165466308594
    3. ',' → logprob: -2.5796165466308594
    4. ' =' → logprob: -3.2046165466308594
    5. '*' → logprob: -3.7046165466308594
    6. 'num' → logprob: -3.8296165466308594
    7. '+' → logprob: -4.829616546630859
    8. ')' → logprob: -5.704616546630859
    9. '<|end|>' → logprob: -5.954616546630859
    10. ' *' → logprob: -6.204616546630859

Token 1169: ' (' (ID: 350)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1459016352891922
    2. '(num' → logprob: -2.020901679992676
    3. ' (' → logprob: -6.395901679992676
    4. ' num' → logprob: -6.645901679992676
    5. '((' → logprob: -9.145901679992676
    6. '[num' → logprob: -9.395901679992676
    7. ',num' → logprob: -10.395901679992676
    8. '(' → logprob: -11.520901679992676
    9. '{' → logprob: -12.520901679992676
    10. '<num' → logprob: -12.520901679992676

Token 1170: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.9728669738397e-05
    2. '(num' → logprob: -9.500100135803223
    3. ' num' → logprob: -10.625100135803223
    4. '   ' → logprob: -15.125100135803223
    5. '[num' → logprob: -15.500100135803223
    6. '	num' → logprob: -16.875099182128906
    7. '<num' → logprob: -18.250099182128906
    8. '$num' → logprob: -18.250099182128906
    9. ',num' → logprob: -18.500099182128906
    10. 'numer' → logprob: -18.500099182128906

Token 1171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.598092684522271e-05
    2. '2' → logprob: -10.625056266784668
    3. '*' → logprob: -11.750056266784668
    4. '*num' → logprob: -11.750056266784668
    5. 'num' → logprob: -11.875056266784668
    6. '```' → logprob: -12.625056266784668
    7. '_num' → logprob: -13.250056266784668
    8. '+' → logprob: -14.000056266784668
    9. '_' → logprob: -14.250056266784668
    10. '
' → logprob: -15.375056266784668

Token 1172: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868834376335144
    2. ' *' → logprob: -1.1368834972381592
    3. '*num' → logprob: -11.386883735656738
    4. '**' → logprob: -15.136883735656738
    5. ' ' → logprob: -15.386883735656738
    6. ' ' → logprob: -15.511883735656738
    7. '*out' → logprob: -15.886883735656738
    8. '	' → logprob: -16.261882781982422
    9. '   ' → logprob: -16.511882781982422
    10. '```' → logprob: -16.886882781982422

Token 1173: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0003802680876106024
    2. ' den' → logprob: -7.875380039215088
    3. '_den' → logprob: -16.62537956237793
    4. 'def' → logprob: -18.00037956237793
    5. '(' → logprob: -18.12537956237793
    6. ' ' → logprob: -18.25037956237793
    7. '
' → logprob: -18.37537956237793
    8. 'Den' → logprob: -18.50037956237793
    9. '.den' → logprob: -18.50037956237793
    10. '```' → logprob: -19.00037956237793

Token 1174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.25000286102295
    3. '+' → logprob: -14.12500286102295
    4. '
' → logprob: -15.00000286102295
    5. 'den' → logprob: -15.87500286102295
    6. '```' → logprob: -16.125003814697266
    7. '_' → logprob: -16.750003814697266
    8. '₂' → logprob: -16.875003814697266
    9. ' +' → logprob: -17.000003814697266
    10. '_den' → logprob: -17.250003814697266

Token 1175: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0022698009852319956
    2. ' *' → logprob: -6.627269744873047
    3. '*num' → logprob: -7.377269744873047
    4. ')' → logprob: -8.627269744873047
    5. '+' → logprob: -9.252269744873047
    6. ',' → logprob: -11.127269744873047
    7. ' +' → logprob: -11.627269744873047
    8. '*)' → logprob: -12.002269744873047
    9. '*,' → logprob: -12.002269744873047
    10. ')*' → logprob: -13.377269744873047

Token 1176: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.023424595594406128
    2. ' num' → logprob: -3.7734246253967285
    3. 'den' → logprob: -9.02342414855957
    4. '(num' → logprob: -9.77342414855957
    5. ' den' → logprob: -13.77342414855957
    6. '[num' → logprob: -16.27342414855957
    7. ' (' → logprob: -16.27342414855957
    8. ' ' → logprob: -16.52342414855957
    9. '	num' → logprob: -16.64842414855957
    10. ',num' → logprob: -16.89842414855957

Token 1177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.827200897736475e-05
    2. '1' → logprob: -9.750078201293945
    3. '
' → logprob: -11.250078201293945
    4. '3' → logprob: -13.500078201293945
    5. '```' → logprob: -13.625078201293945
    6. '[' → logprob: -14.250078201293945
    7. '_' → logprob: -14.625078201293945
    8. '   ' → logprob: -15.000078201293945
    9. ' ' → logprob: -15.000078201293945
    10. '+' → logprob: -15.000078201293945

Token 1178: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.058512602001428604
    2. ' *' → logprob: -2.9335126876831055
    3. ',' → logprob: -5.6835126876831055
    4. ')' → logprob: -9.183512687683105
    5. '*num' → logprob: -9.808512687683105
    6. '*,' → logprob: -10.933512687683105
    7. ' ,' → logprob: -11.058512687683105
    8. '	' → logprob: -12.058512687683105
    9. '```' → logprob: -12.058512687683105
    10. '   ' → logprob: -12.683512687683105

Token 1179: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0019286326132714748
    2. ' den' → logprob: -6.251928806304932
    3. '_den' → logprob: -18.876928329467773
    4. 'def' → logprob: -19.376928329467773
    5. ' ' → logprob: -19.876928329467773
    6. 'd' → logprob: -19.876928329467773
    7. '(' → logprob: -20.001928329467773
    8. 'Den' → logprob: -20.126928329467773
    9. '```' → logprob: -20.251928329467773
    10. '   ' → logprob: -20.626928329467773

Token 1180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 'den' → logprob: -13.875000953674316
    3. '_' → logprob: -15.250000953674316
    4. '```' → logprob: -16.875001907348633
    5. ' ' → logprob: -17.625001907348633
    6. '
' → logprob: -17.750001907348633
    7. '_den' → logprob: -18.750001907348633
    8. ')' → logprob: -19.250001907348633
    9. '​' → logprob: -19.375001907348633
    10. 'def' → logprob: -19.500001907348633

Token 1181: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3515342175960541
    2. ')' → logprob: -1.2265342473983765
    3. ' ,' → logprob: -6.476534366607666
    4. '),' → logprob: -6.976534366607666
    5. '+' → logprob: -8.726533889770508
    6. ' )' → logprob: -8.726533889770508
    7. ',
' → logprob: -9.351533889770508
    8. '*' → logprob: -9.476533889770508
    9. '   ' → logprob: -10.226533889770508
    10. ')*' → logprob: -10.351533889770508

Token 1182: ' /' (ID: 820)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4523695409297943
    2. '*' → logprob: -1.0773695707321167
    3. ')' → logprob: -4.827369689941406
    4. ' *' → logprob: -4.827369689941406
    5. ' ,' → logprob: -6.202369689941406
    6. '*num' → logprob: -6.827369689941406
    7. '+' → logprob: -6.952369689941406
    8. '*,' → logprob: -6.952369689941406
    9. 'num' → logprob: -7.827369689941406
    10. '<|end|>' → logprob: -8.202369689941406

Token 1183: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.228561349213123e-05
    2. ' (' → logprob: -9.875052452087402
    3. 'den' → logprob: -14.125052452087402
    4. '(def' → logprob: -16.500051498413086
    5. '(D' → logprob: -17.250051498413086
    6. '(dec' → logprob: -18.375051498413086
    7. '(div' → logprob: -18.625051498413086
    8. ' ' → logprob: -18.875051498413086
    9. '(num' → logprob: -19.125051498413086
    10. '((' → logprob: -19.500051498413086

Token 1184: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0007267289329320192
    2. '(' → logprob: -7.250726699829102
    3. ' den' → logprob: -11.000726699829102
    4. '   ' → logprob: -18.1257266998291
    5. '_den' → logprob: -18.3757266998291
    6. ' (' → logprob: -18.7507266998291
    7. 'def' → logprob: -19.1257266998291
    8. 'Den' → logprob: -19.2507266998291
    9. '  ' → logprob: -20.0007266998291
    10. ' ' → logprob: -20.0007266998291

Token 1185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007303050952032208
    2. '2' → logprob: -7.375730514526367
    3. 'den' → logprob: -10.000730514526367
    4. '_den' → logprob: -10.500730514526367
    5. '```' → logprob: -10.750730514526367
    6. '_' → logprob: -12.625730514526367
    7. '[' → logprob: -13.375730514526367
    8. '
' → logprob: -14.000730514526367
    9. '   ' → logprob: -14.250730514526367
    10. '+' → logprob: -14.500730514526367

Token 1186: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.033938776701688766
    2. ' *' → logprob: -3.4089388847351074
    3. ')' → logprob: -8.40893840789795
    4. ',' → logprob: -10.65893840789795
    5. '*num' → logprob: -11.15893840789795
    6. '+' → logprob: -12.03393840789795
    7. ' ' → logprob: -12.15893840789795
    8. '*)' → logprob: -12.40893840789795
    9. ')*' → logprob: -12.78393840789795
    10. ' ' → logprob: -12.78393840789795

Token 1187: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -7.941850526549388e-06
    2. ' den' → logprob: -11.750007629394531
    3. '_den' → logprob: -21.75000762939453
    4. 'def' → logprob: -22.87500762939453
    5. 'Den' → logprob: -23.25000762939453
    6. 'num' → logprob: -23.62500762939453
    7. '.den' → logprob: -24.87500762939453
    8. 'de' → logprob: -25.12500762939453
    9. ' ' → logprob: -25.62500762939453
    10. '-den' → logprob: -26.00000762939453

Token 1188: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048731908202171326
    2. '2' → logprob: -3.048731803894043
    3. '```' → logprob: -9.548731803894043
    4. ')' → logprob: -11.173731803894043
    5. ' ' → logprob: -11.173731803894043
    6. '
' → logprob: -11.923731803894043
    7. '   ' → logprob: -12.173731803894043
    8. 'umerator' → logprob: -12.298731803894043
    9. 'den' → logprob: -12.423731803894043
    10. '_' → logprob: -12.798731803894043

Token 1189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020628207130357623
    2. '+' → logprob: -8.875205993652344
    3. ')
' → logprob: -10.625205993652344
    4. ' )' → logprob: -11.000205993652344
    5. '*' → logprob: -11.875205993652344
    6. 'num' → logprob: -12.000205993652344
    7. '+)' → logprob: -13.125205993652344
    8. '   ' → logprob: -13.250205993652344
    9. '}' → logprob: -13.750205993652344
    10. '*)' → logprob: -14.125205993652344

Token 1190: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1009000614285469
    2. '   ' → logprob: -3.600900173187256
    3. '*' → logprob: -3.725900173187256
    4. ')' → logprob: -4.600900173187256
    5. '(' → logprob: -4.850900173187256
    6. '<|end|>' → logprob: -4.975900173187256
    7. ' +' → logprob: -5.350900173187256
    8. 'return' → logprob: -6.100900173187256
    9. '{' → logprob: -6.600900173187256
    10. ':' → logprob: -6.600900173187256

Token 1191: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0173035860061646
    2. 'num' → logprob: -1.0173035860061646
    3. '+' → logprob: -2.267303466796875
    4. '(num' → logprob: -2.392303466796875
    5. '(' → logprob: -2.767303466796875
    6. '(
' → logprob: -5.017303466796875
    7. '(return' → logprob: -6.017303466796875
    8. '   ' → logprob: -6.017303466796875
    9. ' return' → logprob: -6.267303466796875
    10. '{' → logprob: -7.142303466796875

Token 1192: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.04362041875720024
    2. '=' → logprob: -3.2936203479766846
    3. '1' → logprob: -5.293620586395264
    4. ' =' → logprob: -8.043620109558105
    5. '*' → logprob: -9.543620109558105
    6. '=num' → logprob: -10.418620109558105
    7. 'u' → logprob: -10.543620109558105
    8. ',' → logprob: -10.543620109558105
    9. '_' → logprob: -11.418620109558105
    10. '**' → logprob: -12.043620109558105

Token 1193: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.000158842682139948
    2. ' num' → logprob: -8.75015926361084
    3. '(num' → logprob: -15.37515926361084
    4. '   ' → logprob: -15.75015926361084
    5. '	num' → logprob: -18.625158309936523
    6. ' ' → logprob: -19.500158309936523
    7. '  ' → logprob: -19.750158309936523
    8. '[num' → logprob: -20.875158309936523
    9. 'numer' → logprob: -21.375158309936523
    10. '```' → logprob: -21.375158309936523

Token 1194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '*' → logprob: -14.375000953674316
    3. '```' → logprob: -15.500000953674316
    4. 'umerator' → logprob: -16.125001907348633
    5. '*num' → logprob: -16.125001907348633
    6. 'num' → logprob: -16.250001907348633
    7. '_' → logprob: -17.000001907348633
    8. '
' → logprob: -17.875001907348633
    9. ' *' → logprob: -18.375001907348633
    10. '' → logprob: -18.375001907348633

Token 1195: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2014143168926239
    2. ' *' → logprob: -1.7014143466949463
    3. ' ' → logprob: -14.326414108276367
    4. '*num' → logprob: -16.451414108276367
    5. '**' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.826414108276367
    7. '```' → logprob: -16.951414108276367
    8. '*out' → logprob: -16.951414108276367
    9. '*object' → logprob: -17.701414108276367
    10. ',' → logprob: -18.076414108276367

Token 1196: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -6.611323624383658e-05
    2. ' den' → logprob: -9.625065803527832
    3. 'd' → logprob: -18.37506675720215
    4. '_den' → logprob: -18.75006675720215
    5. 'Den' → logprob: -18.87506675720215
    6. '   ' → logprob: -20.25006675720215
    7. '.den' → logprob: -20.75006675720215
    8. 'def' → logprob: -21.25006675720215
    9. ' ' → logprob: -21.50006675720215
    10. '-den' → logprob: -21.50006675720215

Token 1197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. 'den' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.0
    5. '
' → logprob: -17.25
    6. '_' → logprob: -17.875
    7. '₂' → logprob: -17.875
    8. '```' → logprob: -19.0
    9. '  ' → logprob: -19.25
    10. 'def' → logprob: -19.375

Token 1198: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141440629959106
    2. '+' → logprob: -1.7014143466949463
    3. ' +
' → logprob: -14.701414108276367
    4. '+
' → logprob: -15.076414108276367
    5. '+n' → logprob: -15.826414108276367
    6. ' ' → logprob: -16.451414108276367
    7. '＋' → logprob: -16.826414108276367
    8. ' plus' → logprob: -17.201414108276367
    9. ' +
' → logprob: -17.326414108276367
    10. '+,' → logprob: -17.451414108276367

Token 1199: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0004307884373702109
    2. ' num' → logprob: -7.750430583953857
    3. 'n' → logprob: -17.375431060791016
    4. '(num' → logprob: -19.250431060791016
    5. 'nu' → logprob: -19.375431060791016
    6. '	num' → logprob: -19.500431060791016
    7. '[num' → logprob: -19.625431060791016
    8. 'den' → logprob: -20.125431060791016
    9. ' ' → logprob: -20.625431060791016
    10. '   ' → logprob: -20.875431060791016

Token 1200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. 'num' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.750003814697266
    4. '```' → logprob: -18.250003814697266
    5. 'den' → logprob: -18.375003814697266
    6. ' ' → logprob: -19.500003814697266
    7. '
' → logprob: -20.625003814697266
    8. 'n' → logprob: -20.750003814697266
    9. '[num' → logprob: -21.250003814697266
    10. '₂' → logprob: -21.250003814697266

Token 1201: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4717983603477478
    2. ' *' → logprob: -1.0967984199523926
    3. ',' → logprob: -3.5967984199523926
    4. '   ' → logprob: -5.221798419952393
    5. '<|end|>' → logprob: -5.471798419952393
    6. ' n' → logprob: -6.471798419952393
    7. '*n' → logprob: -7.096798419952393
    8. ' ' → logprob: -7.346798419952393
    9. 'n' → logprob: -7.846798419952393
    10. '*num' → logprob: -8.471797943115234

Token 1202: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -9.615255839889869e-05
    2. ' den' → logprob: -9.250096321105957
    3. 'd' → logprob: -20.12509536743164
    4. 'Den' → logprob: -20.62509536743164
    5. 'def' → logprob: -20.75009536743164
    6. '_den' → logprob: -21.00009536743164
    7. '   ' → logprob: -21.75009536743164
    8. ' ' → logprob: -22.37509536743164
    9. '  ' → logprob: -22.37509536743164
    10. '-den' → logprob: -23.87509536743164

Token 1203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. 'f' → logprob: -18.75
    4. 'naire' → logprob: -18.875
    5. ' ' → logprob: -19.125
    6. 'def' → logprob: -19.25
    7. '
' → logprob: -20.0
    8. '_' → logprob: -20.125
    9. '１' → logprob: -20.375
    10. 's' → logprob: -20.375

Token 1204: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026405032724142075
    2. '   ' → logprob: -4.151404857635498
    3. ',
' → logprob: -5.526404857635498
    4. '<|end|>' → logprob: -6.026404857635498
    5. 'n' → logprob: -6.276404857635498
    6. ' ,' → logprob: -7.401404857635498
    7. ',n' → logprob: -7.776404857635498
    8. '
' → logprob: -8.026405334472656
    9. '    
' → logprob: -8.651405334472656
    10. ' n' → logprob: -8.776405334472656

Token 1205: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09971079230308533
    2. '   ' → logprob: -2.599710702896118
    3. 'n' → logprob: -4.349710941314697
    4. ' n' → logprob: -6.099710941314697
    5. ' ,' → logprob: -6.474710941314697
    6. '<|end|>' → logprob: -6.849710941314697
    7. ',n' → logprob: -7.349710941314697
    8. ',
' → logprob: -7.599710941314697
    9. '    
' → logprob: -7.724710941314697
    10. 'den' → logprob: -7.724710941314697

Token 1206: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.014517690055072308
    2. ' d' → logprob: -4.764517784118652
    3. '   ' → logprob: -5.139517784118652
    4. '	d' → logprob: -11.014517784118652
    5. ' ' → logprob: -13.639517784118652
    6. '       ' → logprob: -13.889517784118652
    7. 't' → logprob: -13.889517784118652
    8. '```' → logprob: -13.889517784118652
    9. '    
' → logprob: -14.014517784118652
    10. '    ' → logprob: -14.389517784118652

Token 1207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04317457601428032
    2. ' =' → logprob: -3.1681745052337646
    3. ',' → logprob: -9.043174743652344
    4. '```' → logprob: -10.668174743652344
    5. '   ' → logprob: -11.668174743652344
    6. '<|end|>' → logprob: -11.918174743652344
    7. 'd' → logprob: -13.043174743652344
    8. '*' → logprob: -13.168174743652344
    9. '=
' → logprob: -13.543174743652344
    10. ')' → logprob: -13.668174743652344

Token 1208: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0001584850688232109
    2. ' den' → logprob: -8.750158309936523
    3. '   ' → logprob: -20.875158309936523
    4. 'def' → logprob: -21.375158309936523
    5. 'd' → logprob: -21.875158309936523
    6. 'Den' → logprob: -21.875158309936523
    7. '_den' → logprob: -22.250158309936523
    8. ' ' → logprob: -23.625158309936523
    9. '  ' → logprob: -24.500158309936523
    10. '-den' → logprob: -25.000158309936523

Token 1209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.251091377227567e-05
    2. 'den' → logprob: -10.125042915344238
    3. '```' → logprob: -13.625042915344238
    4. '   ' → logprob: -15.000042915344238
    5. '_den' → logprob: -15.625042915344238
    6. 'def' → logprob: -15.750042915344238
    7. '[' → logprob: -15.875042915344238
    8. ' ' → logprob: -16.625041961669922
    9. '_' → logprob: -16.625041961669922
    10. 'num' → logprob: -16.750041961669922

Token 1210: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141343772411346
    2. '*' → logprob: -1.7014133930206299
    3. '   ' → logprob: -16.576414108276367
    4. ' ' → logprob: -18.201414108276367
    5. ' ' → logprob: -18.451414108276367
    6. '*num' → logprob: -18.451414108276367
    7. 'import' → logprob: -19.076414108276367
    8. '*d' → logprob: -20.201414108276367
    9. '*object' → logprob: -20.201414108276367
    10. 'def' → logprob: -20.326414108276367

Token 1211: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.306760805164231e-05
    2. ' den' → logprob: -11.25001335144043
    3. 'num' → logprob: -17.25001335144043
    4. 'Den' → logprob: -21.62501335144043
    5. '_den' → logprob: -21.62501335144043
    6. 'd' → logprob: -21.75001335144043
    7. 'def' → logprob: -22.50001335144043
    8. '.den' → logprob: -23.50001335144043
    9. 'dem' → logprob: -24.37501335144043
    10. '-den' → logprob: -25.00001335144043

Token 1212: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. 'den' → logprob: -13.250001907348633
    3. 's' → logprob: -16.750001907348633
    4. '
' → logprob: -16.750001907348633
    5. 'd' → logprob: -17.375001907348633
    6. ' ' → logprob: -18.125001907348633
    7. '₂' → logprob: -18.250001907348633
    8. '```' → logprob: -18.625001907348633
    9. '[' → logprob: -18.750001907348633
    10. '_' → logprob: -18.875001907348633

Token 1213: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010008628305513412
    2. '
' → logprob: -9.750100135803223
    3. 'return' → logprob: -10.875100135803223
    4. ' return' → logprob: -11.250100135803223
    5. '	return' → logprob: -12.250100135803223
    6. ',' → logprob: -13.250100135803223
    7. '    
' → logprob: -13.750100135803223
    8. 'g' → logprob: -14.125100135803223
    9. 'n' → logprob: -14.750100135803223
    10. '<|end|>' → logprob: -14.875100135803223

Token 1214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016410232055932283
    2. ',' → logprob: -7.626640796661377
    3. 'g' → logprob: -8.126641273498535
    4. '<|end|>' → logprob: -8.251641273498535
    5. 'return' → logprob: -8.751641273498535
    6. ' return' → logprob: -9.126641273498535
    7. '
' → logprob: -9.376641273498535
    8. '	return' → logprob: -9.626641273498535
    9. '    
' → logprob: -10.001641273498535
    10. ',g' → logprob: -10.501641273498535

Token 1215: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0253468751907349
    2. 'g' → logprob: -1.1503468751907349
    3. 'return' → logprob: -1.1503468751907349
    4. ' return' → logprob: -5.275346755981445
    5. 'n' → logprob: -6.025346755981445
    6. '	return' → logprob: -8.150346755981445
    7. ' g' → logprob: -9.150346755981445
    8. '    
' → logprob: -9.150346755981445
    9. ',' → logprob: -10.025346755981445
    10. 's' → logprob: -10.150346755981445

Token 1216: ' on' (ID: 402)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.47652989625930786
    2. 'return' → logprob: -0.9765298962593079
    3. 'n' → logprob: -6.351530075073242
    4. ' return' → logprob: -8.351530075073242
    5. 'ng' → logprob: -9.101530075073242
    6. 'gn' → logprob: -9.101530075073242
    7. '   ' → logprob: -9.226530075073242
    8. 'gd' → logprob: -9.601530075073242
    9. 'nd' → logprob: -10.601530075073242
    10. '#' → logprob: -10.976530075073242

Token 1217: ' simpl' (ID: 15693)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3158668577671051
    2. 'return' → logprob: -1.8158668279647827
    3. ',' → logprob: -3.1908669471740723
    4. ' return' → logprob: -3.4408669471740723
    5. 'n' → logprob: -4.815866947174072
    6. '   ' → logprob: -4.815866947174072
    7. 'from' → logprob: -5.440866947174072
    8. '=' → logprob: -5.565866947174072
    9. 'def' → logprob: -6.190866947174072
    10. ' =' → logprob: -6.690866947174072

Token 1218: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0032100381795316935
    2. 'ify' → logprob: -6.003210067749023
    3. 'ifier' → logprob: -8.003210067749023
    4. 'ifies' → logprob: -9.003210067749023
    5. 'if' → logprob: -9.378210067749023
    6. '   ' → logprob: -9.503210067749023
    7. 'ifiez' → logprob: -9.628210067749023
    8. 'ified' → logprob: -10.503210067749023
    9. 'ifye' → logprob: -11.878210067749023
    10. 'ification' → logprob: -12.003210067749023

Token 1219: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058615583926439285
    2. 'return' → logprob: -3.4336156845092773
    3. 'n' → logprob: -4.683615684509277
    4. 'g' → logprob: -4.683615684509277
    5. ' return' → logprob: -5.558615684509277
    6. ',' → logprob: -6.183615684509277
    7. ' n' → logprob: -9.308615684509277
    8. 's' → logprob: -9.558615684509277
    9. '(n' → logprob: -11.058615684509277
    10. ',n' → logprob: -11.433615684509277

Token 1220: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25445371866226196
    2. 'return' → logprob: -2.129453659057617
    3. ' return' → logprob: -2.254453659057617
    4. 'g' → logprob: -7.254453659057617
    5. ' g' → logprob: -9.879453659057617
    6. 'n' → logprob: -10.129453659057617
    7. '	return' → logprob: -11.379453659057617
    8. ' n' → logprob: -12.004453659057617
    9. ',' → logprob: -12.629453659057617
    10. '```' → logprob: -13.254453659057617

Token 1221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12430661171674728
    2. 'n' → logprob: -2.9993066787719727
    3. ',' → logprob: -3.6243066787719727
    4. ' return' → logprob: -4.374306678771973
    5. ' n' → logprob: -4.999306678771973
    6. 'g' → logprob: -5.249306678771973
    7. 'return' → logprob: -5.624306678771973
    8. '(n' → logprob: -5.749306678771973
    9. '```' → logprob: -5.999306678771973
    10. '	n' → logprob: -6.874306678771973

Token 1222: ' g' (ID: 329)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7549238801002502
    2. 'g' (adapté à ' g') → logprob: -0.8799238801002502
    3. 'n' → logprob: -2.6299238204956055
    4. '   ' → logprob: -3.8799238204956055
    5. ' return' → logprob: -3.8799238204956055
    6. ' g' → logprob: -7.0049238204956055
    7. ' n' → logprob: -8.379923820495605
    8. 's' → logprob: -8.504923820495605
    9. 'num' → logprob: -8.879923820495605
    10. 'nd' → logprob: -9.879923820495605

Token 1223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16187088191509247
    2. ' =' → logprob: -1.9118708372116089
    3. '=g' → logprob: -6.411870956420898
    4. ',' → logprob: -13.786870956420898
    5. '=n' → logprob: -14.036870956420898
    6. '=int' → logprob: -14.661870956420898
    7. '=s' → logprob: -15.161870956420898
    8. 'g' → logprob: -15.661870956420898
    9. '=
' → logprob: -16.2868709564209
    10. '=}' → logprob: -16.4118709564209

Token 1224: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.014164102263748646
    2. ' gcd' → logprob: -4.264163970947266
    3. 'n' → logprob: -14.514163970947266
    4. 'd' → logprob: -16.014163970947266
    5. ' g' → logprob: -18.514163970947266
    6. 'abs' → logprob: -18.514163970947266
    7. '	g' → logprob: -18.639163970947266
    8. '(g' → logprob: -19.014163970947266
    9. '_g' → logprob: -19.139163970947266
    10. '=g' → logprob: -19.389163970947266

Token 1225: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014203863975126296
    2. 'n' → logprob: -8.875142097473145
    3. '(' → logprob: -13.375142097473145
    4. 'g' → logprob: -15.125142097473145
    5. '=' → logprob: -16.125141143798828
    6. '(
' → logprob: -16.375141143798828
    7. '(g' → logprob: -16.875141143798828
    8. ',n' → logprob: -17.625141143798828
    9. '	n' → logprob: -17.875141143798828
    10. '_n' → logprob: -17.875141143798828

Token 1226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020401719666551799
    2. ',d' → logprob: -9.250204086303711
    3. ',n' → logprob: -9.625204086303711
    4. ' ,' → logprob: -10.625204086303711
    5. ',g' → logprob: -11.000204086303711
    6. ',
' → logprob: -14.875204086303711
    7. 'n' → logprob: -15.375204086303711
    8. '   ' → logprob: -15.875204086303711
    9. 'g' → logprob: -16.12520408630371
    10. 'd' → logprob: -18.25020408630371

Token 1227: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008818544447422028
    2. ' d' → logprob: -4.758818626403809
    3. 'g' → logprob: -8.508818626403809
    4. ' g' → logprob: -13.008818626403809
    5. 'n' → logprob: -17.133817672729492
    6. '   ' → logprob: -19.758817672729492
    7. ' n' → logprob: -20.008817672729492
    8. ' ' → logprob: -20.383817672729492
    9. '	d' → logprob: -21.133817672729492
    10. ')d' → logprob: -22.383817672729492

Token 1228: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0033168611116707325
    2. ')' → logprob: -5.753316879272461
    3. '   ' → logprob: -9.003316879272461
    4. 'n' → logprob: -11.878316879272461
    5. ')
' → logprob: -12.253316879272461
    6. ')n' → logprob: -12.503316879272461
    7. 'g' → logprob: -15.128316879272461
    8. ')

' → logprob: -16.12831687927246
    9. '(n' → logprob: -16.62831687927246
    10. ',' → logprob: -16.62831687927246

Token 1229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05664458125829697
    2. 'n' → logprob: -3.4316446781158447
    3. '	n' → logprob: -4.181644439697266
    4. '\t' → logprob: -6.056644439697266
    5. ' n' → logprob: -6.556644439697266
    6. '    
' → logprob: -7.056644439697266
    7. '```' → logprob: -7.431644439697266
    8. ',' → logprob: -7.556644439697266
    9. ' 
' → logprob: -8.431644439697266
    10. '\n' → logprob: -8.681644439697266

Token 1230: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031131880823522806
    2. ' n' → logprob: -6.253113269805908
    3. '   ' → logprob: -6.753113269805908
    4. 'num' → logprob: -11.62811279296875
    5. 'return' (adapté à ' return') → logprob: -12.50311279296875
    6. ' return' → logprob: -13.37811279296875
    7. '	n' → logprob: -13.75311279296875
    8. ' num' → logprob: -15.00311279296875
    9. ' 
' → logprob: -15.12811279296875
    10. '```' → logprob: -15.25311279296875

Token 1231: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02414645068347454
    2. ' n' → logprob: -3.774146556854248
    3. '(n' → logprob: -7.024146556854248
    4. ' (' → logprob: -11.52414608001709
    5. '	n' → logprob: -15.14914608001709
    6. '(' → logprob: -15.89914608001709
    7. '   ' → logprob: -16.149147033691406
    8. ' ' → logprob: -17.149147033691406
    9. ',n' → logprob: -18.024147033691406
    10. '_n' → logprob: -18.274147033691406

Token 1232: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3484775722026825
    2. '//' → logprob: -1.2234776020050049
    3. ',' → logprob: -10.973477363586426
    4. 'g' → logprob: -11.598477363586426
    5. ',//' → logprob: -13.598477363586426
    6. '```' → logprob: -13.848477363586426
    7. ' g' → logprob: -13.973477363586426
    8. ' ' → logprob: -14.098477363586426
    9. '
' → logprob: -14.348477363586426
    10. '//=' → logprob: -14.348477363586426

Token 1233: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.704273118884885e-07
    2. ' g' → logprob: -14.250000953674316
    3. 'd' → logprob: -18.375
    4. '	g' → logprob: -21.5
    5. '[g' → logprob: -21.625
    6. '_g' → logprob: -21.875
    7. '(g' → logprob: -22.625
    8. '=g' → logprob: -23.375
    9. '
' → logprob: -25.125
    10. 'г' → logprob: -25.375

Token 1234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3954463510308415e-05
    2. ',d' → logprob: -10.500054359436035
    3. ' ,' → logprob: -10.750054359436035
    4. ',
' → logprob: -12.875054359436035
    5. 'd' → logprob: -13.875054359436035
    6. ',g' → logprob: -14.125054359436035
    7. 'g' → logprob: -15.250054359436035
    8. ' d' → logprob: -15.875054359436035
    9. '`,' → logprob: -16.12505340576172
    10. '_,' → logprob: -17.12505340576172

Token 1235: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.836499985889532e-05
    2. ' d' → logprob: -9.7500581741333
    3. '(d' → logprob: -17.000059127807617
    4. '(' → logprob: -21.250059127807617
    5. ' (' → logprob: -22.375059127807617
    6. 'g' → logprob: -23.875059127807617
    7. ' ' → logprob: -24.125059127807617
    8. '	d' → logprob: -24.375059127807617
    9. '   ' → logprob: -24.500059127807617
    10. '  ' → logprob: -25.625059127807617

Token 1236: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06576153635978699
    2. ' //' → logprob: -2.9407615661621094
    3. 'g' → logprob: -4.565761566162109
    4. ' g' → logprob: -7.815761566162109
    5. ' ' → logprob: -12.06576156616211
    6. '```' → logprob: -12.94076156616211
    7. '   ' → logprob: -13.81576156616211
    8. ' ' → logprob: -13.94076156616211
    9. '  ' → logprob: -14.44076156616211
    10. '//=' → logprob: -14.56576156616211

Token 1237: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.318681188422488e-05
    2. ' g' → logprob: -11.25001335144043
    3. '(g' → logprob: -16.62501335144043
    4. '[g' → logprob: -17.62501335144043
    5. '	g' → logprob: -18.00001335144043
    6. '_g' → logprob: -18.50001335144043
    7. '/g' → logprob: -19.87501335144043
    8. '=g' → logprob: -20.50001335144043
    9. 'd' → logprob: -21.25001335144043
    10. '#g' → logprob: -21.75001335144043

Token 1238: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1239: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11297787725925446
    2. '#' → logprob: -2.237977981567383
    3. '
' → logprob: -9.362977981567383
    4. '```' → logprob: -10.362977981567383
    5. 'import' → logprob: -10.737977981567383
    6. 'num' → logprob: -12.612977981567383
    7. ' def' → logprob: -12.862977981567383
    8. '\' → logprob: -13.612977981567383
    9. '  
' → logprob: -13.987977981567383
    10. '

' → logprob: -14.112977981567383

Token 1240: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02986457198858261
    2. '#' → logprob: -3.529864549636841
    3. 'import' → logprob: -9.279864311218262
    4. 'from' → logprob: -10.904864311218262
    5. '
' → logprob: -13.904864311218262
    6. 'class' → logprob: -14.029864311218262
    7. ' def' → logprob: -14.904864311218262
    8. '```' → logprob: -16.654865264892578
    9. '  
' → logprob: -16.779865264892578
    10. 'H' → logprob: -17.279865264892578

Token 1241: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11346466094255447
    2. '#' → logprob: -2.238464593887329
    3. 'find' → logprob: -8.11346435546875
    4. ' def' → logprob: -8.61346435546875
    5. ' #' → logprob: -9.73846435546875
    6. 'fraction' → logprob: -10.73846435546875
    7. 'calculate' → logprob: -11.23846435546875
    8. 'next' → logprob: -11.86346435546875
    9. 'simpl' → logprob: -12.11346435546875
    10. 'f' → logprob: -12.61346435546875

Token 1242: ' comparer' (ID: 125081)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.7216211557388306
    2. '#' → logprob: -1.3466211557388306
    3. 'fraction' → logprob: -1.9716211557388306
    4. 'binary' → logprob: -3.221621036529541
    5. 'search' → logprob: -4.346621036529541
    6. 'approx' → logprob: -4.721621036529541
    7. 'chercher' → logprob: -4.721621036529541
    8. 'def' → logprob: -4.721621036529541
    9. 'tr' → logprob: -5.221621036529541
    10. ' fraction' → logprob: -5.721621036529541

Token 1243: ' deux' (ID: 10301)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.1768399029970169
    2. 'def' → logprob: -1.9268399477005005
    3. 'num' → logprob: -4.176839828491211
    4. 'two' → logprob: -7.551839828491211
    5. '(n' → logprob: -8.426839828491211
    6. '#' → logprob: -8.551839828491211
    7. 'de' → logprob: -9.801839828491211
    8. 'fraction' → logprob: -10.051839828491211
    9. ' deux' → logprob: -10.801839828491211
    10. ' two' → logprob: -11.301839828491211

Token 1244: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.006375936791300774
    2. 'fraction' → logprob: -5.506375789642334
    3. '(num' → logprob: -6.881375789642334
    4. ' fractions' → logprob: -7.381375789642334
    5. 'num' → logprob: -8.131376266479492
    6. 'flo' → logprob: -9.006376266479492
    7. 'f' → logprob: -10.131376266479492
    8. 'frac' → logprob: -10.256376266479492
    9. 'ration' → logprob: -10.506376266479492
    10. 'def' → logprob: -10.631376266479492

Token 1245: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.4121114822482923e-06
    2. '(num' → logprob: -13.375003814697266
    3. '(n' → logprob: -13.875003814697266
    4. ' def' → logprob: -14.625003814697266
    5. '#' → logprob: -14.750003814697266
    6. '(' → logprob: -17.375003814697266
    7. '
' → logprob: -17.625003814697266
    8. '(def' → logprob: -17.625003814697266
    9. '```' → logprob: -18.250003814697266
    10. ':def' → logprob: -20.500003814697266

Token 1246: '/b' (ID: 7611)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.2861711382865906
    2. '(num' → logprob: -2.0361711978912354
    3. ',' → logprob: -2.7861711978912354
    4. 'num' → logprob: -3.6611711978912354
    5. '(n' → logprob: -4.411170959472656
    6. ',b' → logprob: -5.161170959472656
    7. '_n' → logprob: -5.536170959472656
    8. 'b' → logprob: -5.661170959472656
    9. 'n' → logprob: -6.036170959472656
    10. '(b' → logprob: -7.286170959472656

Token 1247: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3183267116546631
    2. '(a' → logprob: -1.318326711654663
    3. '(num' → logprob: -5.443326950073242
    4. '(n' → logprob: -7.568326950073242
    5. 'a' → logprob: -9.068326950073242
    6. ' def' → logprob: -9.443326950073242
    7. '(' → logprob: -12.068326950073242
    8. 'num' → logprob: -12.318326950073242
    9. '#' → logprob: -13.568326950073242
    10. '(b' → logprob: -13.943326950073242

Token 1248: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005235767923295498
    2. ' c' → logprob: -5.25523567199707
    3. 'num' → logprob: -13.25523567199707
    4. 'n' → logprob: -15.25523567199707
    5. '	c' → logprob: -16.75523567199707
    6. ' ' → logprob: -17.88023567199707
    7. ' num' → logprob: -18.13023567199707
    8. '   ' → logprob: -18.13023567199707
    9. '  ' → logprob: -18.88023567199707
    10. '(c' → logprob: -19.25523567199707

Token 1249: '/d' (ID: 6662)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.8534233570098877
    2. 'd' → logprob: -0.9784233570098877
    3. '_n' → logprob: -2.9784233570098877
    4. ',' → logprob: -2.9784233570098877
    5. 'num' → logprob: -3.2284233570098877
    6. 'def' → logprob: -4.103423118591309
    7. '_d' → logprob: -4.353423118591309
    8. ',d' → logprob: -5.478423118591309
    9. '_,' → logprob: -5.478423118591309
    10. '_' → logprob: -5.603423118591309

Token 1250: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001158211671281606
    2. '(a' → logprob: -9.125115394592285
    3. ' def' → logprob: -12.500115394592285
    4. '(def' → logprob: -13.750115394592285
    5. '
' → logprob: -14.125115394592285
    6. '```' → logprob: -14.500115394592285
    7. '(' → logprob: -15.125115394592285
    8. 'a' → logprob: -15.750115394592285
    9. '#' → logprob: -15.875115394592285
    10. ':def' → logprob: -16.3751163482666

Token 1251: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.5577775128767826e-06
    2. '
' → logprob: -12.250005722045898
    3. '```' → logprob: -14.875005722045898
    4. ' def' → logprob: -15.375005722045898
    5. '#' → logprob: -16.6250057220459
    6. ':def' → logprob: -18.5000057220459
    7. '(def' → logprob: -19.2500057220459
    8. '\' → logprob: -19.7500057220459
    9. '	def' → logprob: -20.1250057220459
    10. '``' → logprob: -20.2500057220459

Token 1252: ' Retour' (ID: 146830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.173704271830502e-06
    2. '#' → logprob: -12.87500286102295
    3. ' def' → logprob: -15.12500286102295
    4. '
' → logprob: -15.25000286102295
    5. '```' → logprob: -18.000003814697266
    6. ':def' → logprob: -18.750003814697266
    7. 'de' → logprob: -18.875003814697266
    8. 'd' → logprob: -19.250003814697266
    9. '	def' → logprob: -20.125003814697266
    10. '\' → logprob: -20.375003814697266

Token 1253: 'ne' (ID: 611)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014973643701523542
    2. 'd' → logprob: -7.126497268676758
    3. '#' → logprob: -7.501497268676758
    4. 's' → logprob: -10.626497268676758
    5. 'n' → logprob: -10.751497268676758
    6. ' def' → logprob: -11.001497268676758
    7. 'ndef' → logprob: -11.751497268676758
    8. 'Def' → logprob: -12.001497268676758
    9. '```' → logprob: -12.001497268676758
    10. '=' → logprob: -12.126497268676758

Token 1254: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012440400896593928
    2. 'True' → logprob: -7.251244068145752
    3. ' -' → logprob: -8.376243591308594
    4. '1' → logprob: -8.626243591308594
    5. '0' → logprob: -9.751243591308594
    6. 'a' → logprob: -10.876243591308594
    7. '(-' → logprob: -11.376243591308594
    8. '{-' → logprob: -11.876243591308594
    9. '(' → logprob: -12.251243591308594
    10. '(a' → logprob: -12.626243591308594

Token 1255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -14.87500286102295
    4. '-' → logprob: -15.75000286102295
    5. ' -' → logprob: -16.125001907348633
    6. 'def' → logprob: -16.125001907348633
    7. '  ' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '0' → logprob: -17.500001907348633
    10. '
' → logprob: -17.750001907348633

Token 1256: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18720516562461853
    2. ' if' → logprob: -2.3122050762176514
    3. ',' → logprob: -3.4372050762176514
    4. 'a' → logprob: -3.8122050762176514
    5. 'def' → logprob: -4.5622053146362305
    6. '(a' → logprob: -5.3122053146362305
    7. '(num' → logprob: -7.4372053146362305
    8. '```' → logprob: -7.8122053146362305
    9. ' a' → logprob: -8.43720531463623
    10. 'for' → logprob: -8.68720531463623

Token 1257: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02050241455435753
    2. '(a' → logprob: -4.02050256729126
    3. 'num' → logprob: -6.39550256729126
    4. '(num' → logprob: -8.020502090454102
    5. '(' → logprob: -9.020502090454102
    6. ' a' → logprob: -9.770502090454102
    7. 'ab' → logprob: -10.270502090454102
    8. ' (' → logprob: -10.395502090454102
    9. 'frac' → logprob: -10.770502090454102
    10. '(n' → logprob: -10.770502090454102

Token 1258: '/b' (ID: 7611)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10439097881317139
    2. '<b' → logprob: -2.854391098022461
    3. ' <' → logprob: -3.604391098022461
    4. '/b' → logprob: -5.354391098022461
    5. ',' → logprob: -5.479391098022461
    6. ',b' → logprob: -6.604391098022461
    7. '==' → logprob: -6.854391098022461
    8. '1' → logprob: -7.854391098022461
    9. '[' → logprob: -7.979391098022461
    10. '>' → logprob: -8.229391098022461

Token 1259: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05072357505559921
    2. '<c' → logprob: -3.1757235527038574
    3. ' <' → logprob: -4.925723552703857
    4. '<b' → logprob: -8.300724029541016
    5. '>' → logprob: -9.175724029541016
    6. 'c' → logprob: -10.800724029541016
    7. '<
' → logprob: -10.925724029541016
    8. '<int' → logprob: -11.800724029541016
    9. '<a' → logprob: -11.800724029541016
    10. '<class' → logprob: -12.300724029541016

Token 1260: ' c' (ID: 274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09070131927728653
    2. 'c' → logprob: -2.7157013416290283
    3. 'a' → logprob: -4.090701103210449
    4. '(c' → logprob: -6.840701103210449
    5. '(a' → logprob: -6.965701103210449
    6. '1' → logprob: -7.090701103210449
    7. '(' → logprob: -7.590701103210449
    8. 'num' → logprob: -8.46570110321045
    9. ' ' → logprob: -9.59070110321045
    10. '(n' → logprob: -10.21570110321045

Token 1261: '/d' (ID: 6662)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5443148612976074
    2. '_num' → logprob: -1.1693148612976074
    3. '(num' → logprob: -3.2943148612976074
    4. 'num' → logprob: -3.2943148612976074
    5. ',num' → logprob: -4.419314861297607
    6. '_n' → logprob: -4.919314861297607
    7. '_,' → logprob: -5.294314861297607
    8. '(' → logprob: -6.044314861297607
    9. '(n' → logprob: -6.294314861297607
    10. '1' → logprob: -6.419314861297607

Token 1262: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11152790486812592
    2. '(a' → logprob: -2.736527919769287
    3. ',' → logprob: -3.986527919769287
    4. '
' → logprob: -4.111527919769287
    5. '(' → logprob: -5.861527919769287
    6. ',
' → logprob: -6.361527919769287
    7. 'a' → logprob: -7.486527919769287
    8. '(
' → logprob: -7.611527919769287
    9. ' def' → logprob: -9.861527442932129
    10. '```' → logprob: -10.861527442932129

Token 1263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0891878753900528
    2. '1' → logprob: -2.5891878604888916
    3. 'def' → logprob: -5.089188098907471
    4. ' ' → logprob: -5.589188098907471
    5. '```' → logprob: -9.089187622070312
    6. 'a' → logprob: -9.714187622070312
    7. '2' → logprob: -10.214187622070312
    8. 'None' → logprob: -10.589187622070312
    9. 'return' → logprob: -10.839187622070312
    10. 'lambda' → logprob: -10.964187622070312

Token 1264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05638636648654938
    2. 'def' → logprob: -2.9313864707946777
    3. '1' → logprob: -6.806386470794678
    4. ' ' → logprob: -8.30638599395752
    5. ' def' → logprob: -9.68138599395752
    6. 'return' → logprob: -10.43138599395752
    7. 'elif' → logprob: -10.68138599395752
    8. '
' → logprob: -11.43138599395752
    9. '   ' → logprob: -11.93138599395752
    10. '```' → logprob: -12.30638599395752

Token 1265: ' si' (ID: 1784)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009405532851815224
    2. 'if' → logprob: -5.009405612945557
    3. ' if' → logprob: -6.509405612945557
    4. '```' → logprob: -7.509405612945557
    5. ',
' → logprob: -7.759405612945557
    6. '<|end|>' → logprob: -9.759405136108398
    7. 'def' → logprob: -9.884405136108398
    8. ' ,' → logprob: -10.884405136108398
    9. '=' → logprob: -11.384405136108398
    10. 'a' → logprob: -11.509405136108398

Token 1266: ' égal' (ID: 15059)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03116723895072937
    2. ' a' → logprob: -3.5311672687530518
    3. '1' → logprob: -7.656167030334473
    4. '(a' → logprob: -7.781167030334473
    5. '0' → logprob: -8.906167030334473
    6. ' ' → logprob: -9.156167030334473
    7. 'None' → logprob: -9.531167030334473
    8. ' (' → logprob: -10.031167030334473
    9. '(' → logprob: -10.156167030334473
    10. ' None' → logprob: -10.281167030334473

Token 1267: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018239261582493782
    2. '(a' → logprob: -4.143239498138428
    3. '(' → logprob: -6.643239498138428
    4. '```' → logprob: -8.01823902130127
    5. ',' → logprob: -8.26823902130127
    6. 'a' → logprob: -9.14323902130127
    7. '(
' → logprob: -9.26823902130127
    8. ' def' → logprob: -10.26823902130127
    9. '
' → logprob: -10.39323902130127
    10. '(n' → logprob: -11.51823902130127

Token 1268: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.625262260437012
    3. 'def' → logprob: -9.875262260437012
    4. '```' → logprob: -11.000262260437012
    5. '
' → logprob: -12.000262260437012
    6. '#' → logprob: -12.250262260437012
    7. '+' → logprob: -14.375262260437012
    8. 'return' → logprob: -14.625262260437012
    9. '   ' → logprob: -14.875262260437012
    10. 'et' → logprob: -15.375262260437012

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -16.250001907348633
    4. 'def' → logprob: -16.375001907348633
    5. '+' → logprob: -16.625001907348633
    6. '#' → logprob: -18.000001907348633
    7. 'return' → logprob: -18.625001907348633
    8. '
' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '>' → logprob: -19.750001907348633

Token 1270: ' si' (ID: 1784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004130344314035028
    2. '(a' → logprob: -8.000412940979004
    3. '```' → logprob: -10.000412940979004
    4. ' def' → logprob: -10.625412940979004
    5. '(num' → logprob: -12.500412940979004
    6. '(def' → logprob: -13.125412940979004
    7. '(' → logprob: -14.125412940979004
    8. '(n' → logprob: -14.250412940979004
    9. 'a' → logprob: -15.125412940979004
    10. '
' → logprob: -15.125412940979004

Token 1271: ' supérieur' (ID: 98491)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.037734225392341614
    2. ' a' → logprob: -3.912734270095825
    3. '1' → logprob: -4.912734031677246
    4. '(a' → logprob: -5.287734031677246
    5. ' (' → logprob: -5.787734031677246
    6. '(' → logprob: -7.287734031677246
    7. ' ' → logprob: -7.662734031677246
    8. 'b' → logprob: -9.162734031677246
    9. 'n' → logprob: -9.912734031677246
    10. '((' → logprob: -10.287734031677246

Token 1272: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -12.500004768371582
    3. ' def' → logprob: -14.125004768371582
    4. '
' → logprob: -15.125004768371582
    5. '``' → logprob: -18.0000057220459
    6. '(a' → logprob: -18.2500057220459
    7. '(def' → logprob: -18.7500057220459
    8. '\' → logprob: -19.3750057220459
    9. '(' → logprob: -20.0000057220459
    10. 'a' → logprob: -20.7500057220459

Token 1273: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -13.250001907348633
    3. '
' → logprob: -15.500001907348633
    4. ' def' → logprob: -18.000001907348633
    5. '``' → logprob: -18.875001907348633
    6. ':def' → logprob: -20.625001907348633
    7. 'ndef' → logprob: -21.875001907348633
    8. '(def' → logprob: -22.250001907348633
    9. '	def' → logprob: -22.500001907348633
    10. '-def' → logprob: -22.875001907348633

Token 1274: ' frac' (ID: 72308)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.006985791493207216
    2. 'fraction' → logprob: -5.006985664367676
    3. 'frac' → logprob: -8.506985664367676
    4. 'cmp' → logprob: -9.631985664367676
    5. 'fra' → logprob: -13.756985664367676
    6. 'def' → logprob: -14.131985664367676
    7. ' compare' → logprob: -14.381985664367676
    8. 'comp' → logprob: -15.881985664367676
    9. 'fract' → logprob: -16.881986618041992
    10. 'com' → logprob: -17.256986618041992

Token 1275: '_compare' (ID: 82588)
  Prédit: '_compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compare' → logprob: -0.005335505120456219
    2. '_cmp' → logprob: -5.255335330963135
    3. '_comp' → logprob: -10.255335807800293
    4. 'compare' → logprob: -10.505335807800293
    5. 'cmp' → logprob: -11.130335807800293
    6. '_com' → logprob: -12.130335807800293
    7. '_less' → logprob: -12.130335807800293
    8. '_equal' → logprob: -12.380335807800293
    9. '_' → logprob: -12.880335807800293
    10. '_frac' → logprob: -13.630335807800293

Token 1276: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.24621975421905518
    2. '(num' → logprob: -1.9962197542190552
    3. '(n' → logprob: -2.4962196350097656
    4. '(' → logprob: -12.246219635009766
    5. 'a' → logprob: -15.121219635009766
    6. 'num' → logprob: -15.246219635009766
    7. '(
' → logprob: -15.871219635009766
    8. ' (' → logprob: -15.996219635009766
    9. '((' → logprob: -16.496219635009766
    10. '(ai' → logprob: -17.621219635009766

Token 1277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10461852699518204
    2. '_num' → logprob: -2.479618549346924
    3. ',b' → logprob: -4.979618549346924
    4. 'b' → logprob: -5.979618549346924
    5. 'n' → logprob: -6.229618549346924
    6. '_n' → logprob: -6.354618549346924
    7. 'a' → logprob: -6.979618549346924
    8. ',num' → logprob: -7.229618549346924
    9. 'num' → logprob: -7.479618549346924
    10. ',n' → logprob: -9.104618072509766

Token 1278: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2664456789934775e-06
    2. ' b' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.500001907348633
    4. 'a' → logprob: -20.625001907348633
    5. '	b' → logprob: -21.250001907348633
    6. ' ' → logprob: -21.375001907348633
    7. '```' → logprob: -21.375001907348633
    8. ',b' → logprob: -22.625001907348633
    9. ')b' → logprob: -22.750001907348633
    10. '  ' → logprob: -23.000001907348633

Token 1279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ' ,' → logprob: -11.625015258789062
    3. ',c' → logprob: -12.250015258789062
    4. ',
' → logprob: -14.000015258789062
    5. '_,' → logprob: -15.500015258789062
    6. ',a' → logprob: -15.500015258789062
    7. 'a' → logprob: -16.000015258789062
    8. 'c' → logprob: -16.125015258789062
    9. '   ' → logprob: -16.750015258789062
    10. '‌,' → logprob: -19.125015258789062

Token 1280: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024756586644798517
    2. ' c' → logprob: -6.002475738525391
    3. ' ' → logprob: -18.25247573852539
    4. '   ' → logprob: -18.62747573852539
    5. 'cd' → logprob: -19.62747573852539
    6. '	c' → logprob: -20.50247573852539
    7. '1' → logprob: -20.87747573852539
    8. '  ' → logprob: -21.37747573852539
    9. 'd' → logprob: -22.25247573852539
    10. '_c' → logprob: -22.87747573852539

Token 1281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ',d' → logprob: -10.375039100646973
    3. ' ,' → logprob: -12.250039100646973
    4. ',c' → logprob: -13.250039100646973
    5. '_,' → logprob: -14.250039100646973
    6. ',
' → logprob: -15.375039100646973
    7. 'd' → logprob: -16.375038146972656
    8. ',b' → logprob: -17.750038146972656
    9. '   ' → logprob: -18.250038146972656
    10. 'c' → logprob: -18.375038146972656

Token 1282: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013269031187519431
    2. ' d' → logprob: -6.626327037811279
    3. 'c' → logprob: -13.876326560974121
    4. '   ' → logprob: -18.001327514648438
    5. '
' → logprob: -18.126327514648438
    6. ')d' → logprob: -18.751327514648438
    7. '_d' → logprob: -18.876327514648438
    8. ' ' → logprob: -19.001327514648438
    9. '	d' → logprob: -19.001327514648438
    10. ',' → logprob: -20.001327514648438

Token 1283: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20148564875125885
    2. '):' → logprob: -1.7014856338500977
    3. '):
' → logprob: -10.076485633850098
    4. '   ' → logprob: -10.826485633850098
    5. ':' → logprob: -11.826485633850098
    6. '):

' → logprob: -13.201485633850098
    7. ')' → logprob: -13.951485633850098
    8. ' ):
' → logprob: -16.201486587524414
    9. ',' → logprob: -16.326486587524414
    10. ':
' → logprob: -16.451486587524414

Token 1284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005821668077260256
    2. '    ' → logprob: -5.755821704864502
    3. ':' → logprob: -6.380821704864502
    4. ' if' → logprob: -7.880821704864502
    5. '       ' → logprob: -8.130821228027344
    6. '```' → logprob: -9.255821228027344
    7. ':
' → logprob: -10.380821228027344
    8. '   ' → logprob: -10.630821228027344
    9. '  ' → logprob: -10.880821228027344
    10. '   ' → logprob: -11.130821228027344

Token 1285: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27860087156295776
    2. 'val' → logprob: -1.6536009311676025
    3. 'diff' → logprob: -3.2786009311676025
    4. 'ab' → logprob: -4.903600692749023
    5. 'tmp' → logprob: -5.903600692749023
    6. 'v' → logprob: -6.653600692749023
    7. 'temp' → logprob: -7.028600692749023
    8. 'prod' → logprob: -7.403600692749023
    9. ' if' → logprob: -8.278600692749023
    10. 'ac' → logprob: -8.653600692749023

Token 1286: ' Compare' (ID: 38200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.532738208770752
    2. 'diff' → logprob: -1.282738208770752
    3. 'val' → logprob: -2.032738208770752
    4. 'ab' → logprob: -6.032738208770752
    5. 'prod' → logprob: -6.657738208770752
    6. 'v' → logprob: -7.532738208770752
    7. 'tmp' → logprob: -8.782737731933594
    8. 'lhs' → logprob: -9.032737731933594
    9. 'left' → logprob: -9.532737731933594
    10. 'temp' → logprob: -10.157737731933594

Token 1287: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008184424950741231
    2. '(a' → logprob: -7.250818252563477
    3. 'if' → logprob: -10.250818252563477
    4. '0' → logprob: -10.500818252563477
    5. ' a' → logprob: -10.500818252563477
    6. '(' → logprob: -12.500818252563477
    7. ' (' → logprob: -13.000818252563477
    8. '[a' → logprob: -13.000818252563477
    9. '1' → logprob: -13.625818252563477
    10. '   ' → logprob: -13.750818252563477

Token 1288: '/b' (ID: 7611)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.2631200850009918
    2. '*' → logprob: -1.5131200551986694
    3. '*b' → logprob: -4.763120174407959
    4. '*c' → logprob: -6.638120174407959
    5. ' *' → logprob: -6.763120174407959
    6. 'd' → logprob: -9.2631196975708
    7. '**' → logprob: -11.3881196975708
    8. '```' → logprob: -11.5131196975708
    9. '*a' → logprob: -12.2631196975708
    10. '*f' → logprob: -14.2631196975708

Token 1289: ' et' (ID: 859)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0271479319781065
    2. '*d' → logprob: -4.2771477699279785
    3. '*c' → logprob: -4.7771477699279785
    4. ' *' → logprob: -5.9021477699279785
    5. ',' → logprob: -7.1521477699279785
    6. '*b' → logprob: -8.027148246765137
    7. '<' → logprob: -8.152148246765137
    8. '*,' → logprob: -9.277148246765137
    9. '*a' → logprob: -9.402148246765137
    10. '```' → logprob: -9.902148246765137

Token 1290: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.315936429426074e-05
    2. ' c' → logprob: -9.750082969665527
    3. 'a' → logprob: -10.625082969665527
    4. 'cd' → logprob: -15.000082969665527
    5. '(c' → logprob: -16.750083923339844
    6. '   ' → logprob: -17.625083923339844
    7. 'b' → logprob: -18.125083923339844
    8. '#' → logprob: -18.500083923339844
    9. '```' → logprob: -18.625083923339844
    10. '(a' → logprob: -18.875083923339844

Token 1291: '/d' (ID: 6662)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010263356380164623
    2. ',d' → logprob: -4.760263442993164
    3. '*d' → logprob: -6.760263442993164
    4. '*' → logprob: -7.885263442993164
    5. 'd' → logprob: -9.760263442993164
    6. ',
' → logprob: -10.760263442993164
    7. ' ,' → logprob: -10.760263442993164
    8. ',b' → logprob: -12.010263442993164
    9. ' *' → logprob: -13.135263442993164
    10. '   ' → logprob: -13.385263442993164

Token 1292: ' par' (ID: 686)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5831462740898132
    2. '   ' → logprob: -1.333146333694458
    3. ' if' → logprob: -2.083146333694458
    4. ':' → logprob: -3.333146333694458
    5. ':
' → logprob: -4.583146095275879
    6. 'diff' → logprob: -5.833146095275879
    7. '```' → logprob: -7.208146095275879
    8. '{
' → logprob: -7.583146095275879
    9. ',' → logprob: -7.583146095275879
    10. 'a' → logprob: -8.083146095275879

Token 1293: ' produit' (ID: 29429)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12962491810321808
    2. '(a' → logprob: -2.129624843597412
    3. '(' → logprob: -7.379624843597412
    4. ' (' → logprob: -7.504624843597412
    5. '(b' → logprob: -7.504624843597412
    6. ' a' → logprob: -7.879624843597412
    7. 'b' → logprob: -8.25462532043457
    8. 'diff' → logprob: -8.62962532043457
    9. 'cross' → logprob: -10.50462532043457
    10. 'ad' → logprob: -11.25462532043457

Token 1294: ' cro' (ID: 11270)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017143042758107185
    2. 'return' → logprob: -5.142143249511719
    3. 'ab' → logprob: -6.017143249511719
    4. '(a' → logprob: -6.142143249511719
    5. '   ' → logprob: -6.392143249511719
    6. 'ac' → logprob: -6.892143249511719
    7. ' a' → logprob: -7.267143249511719
    8. 'ae' → logprob: -7.392143249511719
    9. '```' → logprob: -7.892143249511719
    10. 'inter' → logprob: -8.392143249511719

Token 1295: 'isé' (ID: 30065)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.07144714146852493
    2. 'isé' → logprob: -3.4464471340179443
    3. 'is' → logprob: -3.8214471340179443
    4. 'isée' → logprob: -4.821447372436523
    5. 'isés' → logprob: -5.821447372436523
    6. 'sses' → logprob: -7.071447372436523
    7. 'isées' → logprob: -7.071447372436523
    8. 's' → logprob: -7.321447372436523
    9. 'ise' → logprob: -7.946447372436523
    10. 'c' → logprob: -8.071447372436523

Token 1296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4773207902908325
    2. ' if' → logprob: -1.6023207902908325
    3. ':' → logprob: -2.352320671081543
    4. 'if' → logprob: -2.602320671081543
    5. '```' → logprob: -5.602320671081543
    6. ':
' → logprob: -5.602320671081543
    7. '
' → logprob: -8.477320671081543
    8. '<|end|>' → logprob: -8.477320671081543
    9. '	if' → logprob: -8.852320671081543
    10. '{
' → logprob: -8.852320671081543

Token 1297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04479103535413742
    2. ':' → logprob: -3.5447909832000732
    3. ' if' → logprob: -4.794791221618652
    4. '```' → logprob: -5.419791221618652
    5. ':
' → logprob: -6.794791221618652
    6. 'if' → logprob: -7.919791221618652
    7. '
' → logprob: -8.044791221618652
    8. '    
' → logprob: -9.419791221618652
    9. '    ' → logprob: -9.794791221618652
    10. ',' → logprob: -10.294791221618652

Token 1298: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17660383880138397
    2. 'val' (adapté à ' val') → logprob: -2.0516037940979004
    3. 'diff' → logprob: -4.0516037940979
    4. 'prod' → logprob: -4.6766037940979
    5. 'ac' → logprob: -6.8016037940979
    6. 'v' → logprob: -6.8016037940979
    7. 'cmp' → logprob: -7.1766037940979
    8. ' if' → logprob: -7.3016037940979
    9. 'temp' → logprob: -7.3016037940979
    10. 'comp' → logprob: -7.8016037940979

Token 1299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30262720584869385
    2. ' =' → logprob: -1.4276272058486938
    3. '=a' → logprob: -4.052627086639404
    4. '1' → logprob: -6.052627086639404
    5. 'a' → logprob: -7.052627086639404
    6. 's' → logprob: -8.052627563476562
    7. '_a' → logprob: -8.552627563476562
    8. ' a' → logprob: -9.427627563476562
    9. '=
' → logprob: -10.552627563476562
    10. '=c' → logprob: -12.052627563476562

Token 1300: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.392202976712724e-06
    2. ' a' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.0000057220459
    4. '	a' → logprob: -18.0000057220459
    5. '```' → logprob: -18.7500057220459
    6. '  ' → logprob: -19.6250057220459
    7. '(a' → logprob: -20.2500057220459
    8. '_a' → logprob: -20.6250057220459
    9. ' ' → logprob: -21.3750057220459
    10. 'а' → logprob: -22.0000057220459

Token 1301: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.49853038787841797
    2. ' *' → logprob: -1.248530387878418
    3. '*d' → logprob: -2.248530387878418
    4. 'd' → logprob: -9.373530387878418
    5. '*b' → logprob: -11.748530387878418
    6. ' ' → logprob: -13.123530387878418
    7. '```' → logprob: -13.998530387878418
    8. ' ' → logprob: -15.373530387878418
    9. '   ' → logprob: -15.498530387878418
    10. '
' → logprob: -15.998530387878418

Token 1302: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.5491004129871726e-05
    2. ' d' → logprob: -10.000045776367188
    3. '```' → logprob: -18.875045776367188
    4. '	d' → logprob: -19.250045776367188
    5. '_d' → logprob: -19.375045776367188
    6. '(d' → logprob: -19.875045776367188
    7. '   ' → logprob: -19.875045776367188
    8. '
' → logprob: -20.000045776367188
    9. ')d' → logprob: -20.500045776367188
    10. '>d' → logprob: -21.000045776367188

Token 1303: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.055654849857091904
    2. '-' → logprob: -2.930654764175415
    3. '-b' → logprob: -7.180655002593994
    4. '-c' → logprob: -12.305654525756836
    5. ' ' → logprob: -13.680654525756836
    6. ',' → logprob: -13.930654525756836
    7. '-val' → logprob: -14.555654525756836
    8. '-
' → logprob: -14.680654525756836
    9. ' -
' → logprob: -14.930654525756836
    10. '<' → logprob: -14.930654525756836

Token 1304: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47557926177978516
    2. 'c' → logprob: -0.9755792617797852
    3. ' c' → logprob: -6.975579261779785
    4. ' b' → logprob: -7.475579261779785
    5. ' ' → logprob: -17.35057830810547
    6. '1' → logprob: -18.97557830810547
    7. '  ' → logprob: -18.97557830810547
    8. '	c' → logprob: -19.10057830810547
    9. '   ' → logprob: -19.22557830810547
    10. '	b' → logprob: -19.47557830810547

Token 1305: ' *' (ID: 425)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020720958709717
    2. ' b' → logprob: -2.3502073287963867
    3. '*b' → logprob: -15.100207328796387
    4. '	b' → logprob: -15.850207328796387
    5. '   ' → logprob: -16.35020637512207
    6. ',' → logprob: -16.35020637512207
    7. ' ' → logprob: -17.10020637512207
    8. '```' → logprob: -17.85020637512207
    9. '(b' → logprob: -17.97520637512207
    10. '1' → logprob: -17.97520637512207

Token 1306: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -13.750000953674316
    3. '(b' → logprob: -22.500001907348633
    4. '	b' → logprob: -23.500001907348633
    5. ')b' → logprob: -24.125001907348633
    6. '```' → logprob: -24.250001907348633
    7. '   ' → logprob: -25.000001907348633
    8. '\b' → logprob: -26.000001907348633
    9. 'bd' → logprob: -26.000001907348633
    10. '_b' → logprob: -26.000001907348633

Token 1307: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06842031329870224
    2. ' if' → logprob: -3.06842041015625
    3. '0' → logprob: -5.31842041015625
    4. '    ' → logprob: -5.44342041015625
    5. ' ' → logprob: -5.94342041015625
    6. '	if' → logprob: -6.94342041015625
    7. 'if' → logprob: -7.31842041015625
    8. '>' → logprob: -7.31842041015625
    9. '```' → logprob: -7.31842041015625
    10. ',' → logprob: -7.69342041015625

Token 1309: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04533219709992409
    2. 'if' (adapté à ' if') → logprob: -3.545332193374634
    3. '   ' → logprob: -4.420332431793213
    4. '	if' → logprob: -5.795332431793213
    5. '0' → logprob: -8.795331954956055
    6. '    ' → logprob: -9.295331954956055
    7. '```' → logprob: -9.545331954956055
    8. ' ' → logprob: -11.420331954956055
    9. '1' → logprob: -11.420331954956055
    10. ';if' → logprob: -11.795331954956055

Token 1310: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.04858771339058876
    2. 'val' → logprob: -3.0485877990722656
    3. '	val' → logprob: -15.048587799072266
    4. '_val' → logprob: -19.923587799072266
    5. '(val' → logprob: -20.048587799072266
    6. '.val' → logprob: -21.423587799072266
    7. '[val' → logprob: -21.423587799072266
    8. ' ' → logprob: -21.673587799072266
    9. ',val' → logprob: -22.173587799072266
    10. '   ' → logprob: -23.048587799072266

Token 1311: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5766842365264893
    2. ' <' → logprob: -0.8266842365264893
    3. '<|end|>' → logprob: -7.70168399810791
    4. ' ' → logprob: -9.20168399810791
    5. '<class' → logprob: -10.70168399810791
    6. '  ' → logprob: -10.82668399810791
    7. '[' → logprob: -10.82668399810791
    8. '>' → logprob: -10.95168399810791
    9. '<|end|>' → logprob: -11.32668399810791
    10. '<num' → logprob: -12.07668399810791

Token 1312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -22.000123977661133
    4. '  ' → logprob: -23.750123977661133
    5. '   ' → logprob: -23.750123977661133
    6. ' ' → logprob: -24.250123977661133
    7. ' ' → logprob: -24.375123977661133
    8. '00' → logprob: -24.625123977661133
    9. '  
' → logprob: -25.000123977661133
    10. '=' → logprob: -25.125123977661133

Token 1313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '۰' → logprob: -22.125
    4. '000' → logprob: -24.125
    5. 'return' → logprob: -24.5
    6. '00' → logprob: -24.625
    7. '```' → logprob: -25.125
    8. ' ' → logprob: -25.75
    9. '  ' → logprob: -25.75
    10. '=' → logprob: -25.75

Token 1314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5369464755058289
    2. ':
' → logprob: -1.5369465351104736
    3. '       ' → logprob: -1.7869465351104736
    4. '   ' → logprob: -3.6619465351104736
    5. ':return' → logprob: -5.5369462966918945
    6. ',' → logprob: -6.1619462966918945
    7. '<|end|>' → logprob: -7.7869462966918945
    8. '):
' → logprob: -8.786946296691895
    9. '
' → logprob: -9.286946296691895
    10. ' return' → logprob: -9.911946296691895

Token 1315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3095301389694214
    2. ' -' → logprob: -1.5595301389694214
    3. '-' → logprob: -3.184530258178711
    4. '   ' → logprob: -5.434530258178711
    5. ' return' → logprob: -5.559530258178711
    6. 'return' → logprob: -5.809530258178711
    7. '	return' → logprob: -6.309530258178711
    8. '	' → logprob: -7.059530258178711
    9. '    ' → logprob: -9.059530258178711
    10. '1' → logprob: -9.184530258178711

Token 1316: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9125801920890808
    2. 'return' (adapté à ' return') → logprob: -0.9125801920890808
    3. '       ' → logprob: -1.6625802516937256
    4. '	return' → logprob: -5.1625800132751465
    5. '   ' → logprob: -6.7875800132751465
    6. '	' → logprob: -8.037580490112305
    7. '           ' → logprob: -9.787580490112305
    8. '-' → logprob: -10.287580490112305
    9. ' -' → logprob: -10.412580490112305
    10. '	   ' → logprob: -10.662580490112305

Token 1317: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.2729995988775045e-06
    2. ' -' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.1250057220459
    4. '1' → logprob: -20.7500057220459
    5. '```' → logprob: -22.0000057220459
    6. '  ' → logprob: -23.6250057220459
    7. '
' → logprob: -24.2500057220459
    8. '−' → logprob: -24.2500057220459
    9. '	' → logprob: -24.3750057220459
    10. '\-' → logprob: -24.6250057220459

Token 1318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -21.25
    4. '<|end|>' → logprob: -21.75
    5. '2' → logprob: -22.0
    6. '۱' → logprob: -23.4375
    7. '১' → logprob: -23.5
    8. '१' → logprob: -23.6875
    9. '１' → logprob: -23.9375
    10. '3' → logprob: -24.0625

Token 1319: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28858742117881775
    2. '   ' → logprob: -2.0385873317718506
    3. 'elif' → logprob: -2.6635873317718506
    4. '<|end|>' → logprob: -3.1635873317718506
    5. '```' → logprob: -5.91358757019043
    6. '    
' → logprob: -6.03858757019043
    7. ' elif' → logprob: -6.53858757019043
    8. '  
' → logprob: -7.53858757019043
    9. '	elif' → logprob: -7.91358757019043
    10. '<|end|>' → logprob: -8.41358757019043

Token 1320: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06398661434650421
    2. '
' → logprob: -3.0639865398406982
    3. '```' → logprob: -4.438986778259277
    4. ' elif' → logprob: -6.563986778259277
    5. '   ' → logprob: -6.813986778259277
    6. 'if' → logprob: -8.063986778259277
    7. '    
' → logprob: -8.938986778259277
    8. 'return' → logprob: -9.438986778259277
    9. '	elif' → logprob: -9.563986778259277
    10. '1' → logprob: -9.563986778259277

Token 1321: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0012468972709029913
    2. 'if' → logprob: -6.751246929168701
    3. ' elif' → logprob: -9.501246452331543
    4. 'el' → logprob: -13.501246452331543
    5. ' if' → logprob: -14.876246452331543
    6. '
' → logprob: -16.50124740600586
    7. '```' → logprob: -17.25124740600586
    8. 'El' → logprob: -17.87624740600586
    9. '	elif' → logprob: -18.50124740600586
    10. '   ' → logprob: -19.25124740600586

Token 1322: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0297548845410347
    2. ' val' → logprob: -3.529754877090454
    3. '	val' → logprob: -13.029754638671875
    4. '   ' → logprob: -13.279754638671875
    5. '_val' → logprob: -15.279754638671875
    6. '.val' → logprob: -16.404754638671875
    7. '0' → logprob: -17.029754638671875
    8. '[val' → logprob: -17.029754638671875
    9. ' ' → logprob: -17.404754638671875
    10. 'Val' → logprob: -17.654754638671875

Token 1323: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1758018285036087
    2. ' ==' → logprob: -2.1758017539978027
    3. '>' → logprob: -3.1758017539978027
    4. ' >' → logprob: -5.175801753997803
    5. '=' → logprob: -9.050802230834961
    6. '   ' → logprob: -9.675802230834961
    7. '0' → logprob: -10.050802230834961
    8. '===' → logprob: -11.050802230834961
    9. '[' → logprob: -11.425802230834961
    10. '       ' → logprob: -12.175802230834961

Token 1324: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805821830406785
    2. ' ' → logprob: -5.877805709838867
    3. '   ' → logprob: -14.127805709838867
    4. '```' → logprob: -16.127805709838867
    5. '<|end|>' → logprob: -16.377805709838867
    6. '=' → logprob: -18.002805709838867
    7. '>' → logprob: -18.377805709838867
    8. '  ' → logprob: -18.502805709838867
    9. '1' → logprob: -18.502805709838867
    10. 'import' → logprob: -18.627805709838867

Token 1325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.500015258789062
    4. '1' → logprob: -19.500015258789062
    5. 'import' → logprob: -20.375015258789062
    6. '<|end|>' → logprob: -20.875015258789062
    7. '```' → logprob: -20.875015258789062
    8. '2' → logprob: -21.125015258789062
    9. 'return' → logprob: -21.250015258789062
    10. '۰' → logprob: -21.375015258789062

Token 1326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.240602508187294
    2. '       ' → logprob: -1.8656024932861328
    3. ':
' → logprob: -2.865602493286133
    4. '   ' → logprob: -6.740602493286133
    5. ':return' → logprob: -7.615602493286133
    6. '<|end|>' → logprob: -9.115602493286133
    7. ',' → logprob: -9.740602493286133
    8. ' :' → logprob: -9.740602493286133
    9. '1' → logprob: -9.740602493286133
    10. '):
' → logprob: -10.615602493286133

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012140270322561264
    2. '1' → logprob: -4.512140274047852
    3. '0' → logprob: -7.137140274047852
    4. ' return' → logprob: -9.137140274047852
    5. ' ' → logprob: -9.762140274047852
    6. 'return' → logprob: -9.762140274047852
    7. '   ' → logprob: -10.137140274047852
    8. '2' → logprob: -10.512140274047852
    9. '```' → logprob: -13.637140274047852
    10. '      ' → logprob: -14.012140274047852

Token 1328: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1601981222629547
    2. '1' → logprob: -2.410198211669922
    3. '       ' → logprob: -3.160198211669922
    4. ' return' → logprob: -4.160198211669922
    5. '   ' → logprob: -9.035198211669922
    6. ' ' → logprob: -9.785198211669922
    7. '0' → logprob: -10.785198211669922
    8. '	return' → logprob: -12.785198211669922
    9. '           ' → logprob: -13.285198211669922
    10. '2' → logprob: -13.785198211669922

Token 1329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -21.75
    4. '```' → logprob: -24.5
    5. '۱' → logprob: -25.75
    6. '
' → logprob: -26.75
    7. '+' → logprob: -26.75
    8. '１' → logprob: -27.0
    9. '  ' → logprob: -27.125
    10. '>' → logprob: -27.625

Token 1330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -25.125
    4. '```' → logprob: -26.875
    5. '۱' → logprob: -27.125
    6. '１' → logprob: -27.375
    7. '  ' → logprob: -28.375
    8. '0' → logprob: -29.25
    9. '
' → logprob: -29.25
    10. '﻿' → logprob: -29.5

Token 1331: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016837897419463843
    2. 'else' → logprob: -8.875168800354004
    3. ' else' → logprob: -12.000168800354004
    4. 'return' → logprob: -12.000168800354004
    5. '	else' → logprob: -12.250168800354004
    6. '	return' → logprob: -12.875168800354004
    7. '    
' → logprob: -13.500168800354004
    8. '<|end|>' → logprob: -13.625168800354004
    9. ',' → logprob: -13.750168800354004
    10. '       ' → logprob: -14.000168800354004

Token 1332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015421343967318535
    2. 'else' → logprob: -4.640421390533447
    3. ' else' → logprob: -5.265421390533447
    4. '0' → logprob: -9.015420913696289
    5. ' return' → logprob: -9.140420913696289
    6. 'return' → logprob: -9.390420913696289
    7. ' ' → logprob: -9.390420913696289
    8. '	else' → logprob: -10.265420913696289
    9. '  ' → logprob: -11.265420913696289
    10. '<|end|>' → logprob: -11.390420913696289

Token 1333: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.45357391238212585
    2. '0' → logprob: -1.5785739421844482
    3. '   ' → logprob: -1.9535739421844482
    4. ' else' → logprob: -4.703573703765869
    5. 'return' → logprob: -5.078573703765869
    6. ' ' → logprob: -7.703573703765869
    7. '```' → logprob: -7.703573703765869
    8. ' return' → logprob: -8.203574180603027
    9. '	else' → logprob: -9.828574180603027
    10. '	return' → logprob: -10.703574180603027

Token 1334: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03662111982703209
    2. ':' → logprob: -3.91162109375
    3. '   ' → logprob: -4.66162109375
    4. ':
' → logprob: -5.28662109375
    5. '0' → logprob: -7.16162109375
    6. ':return' → logprob: -8.03662109375
    7. ' return' → logprob: -8.91162109375
    8. 'return' → logprob: -9.66162109375
    9. ',' → logprob: -10.66162109375
    10. ' :' → logprob: -10.91162109375

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3696015179157257
    2. '0' → logprob: -1.2446014881134033
    3. 'return' → logprob: -3.9946014881134033
    4. ' return' → logprob: -6.494601726531982
    5. '   ' → logprob: -7.494601726531982
    6. '	return' → logprob: -8.119601249694824
    7. '	       ' → logprob: -10.119601249694824
    8. '           ' → logprob: -10.744601249694824
    9. ':return' → logprob: -10.869601249694824
    10. ' ' → logprob: -11.244601249694824

Token 1336: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0030969043727964163
    2. '0' → logprob: -6.253097057342529
    3. ' return' → logprob: -6.753097057342529
    4. '	return' → logprob: -15.503096580505371
    5. '       ' → logprob: -16.753097534179688
    6. '
' → logprob: -17.003097534179688
    7. 'eturn' → logprob: -17.003097534179688
    8. ' ' → logprob: -17.253097534179688
    9. '   ' → logprob: -17.878097534179688
    10. ':return' → logprob: -17.878097534179688

Token 1337: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '۰' → logprob: -22.875
    4. '=' → logprob: -26.25
    5. '<|end|>' → logprob: -26.5
    6. '०' → logprob: -26.625
    7. '٠' → logprob: -26.625
    8. '  ' → logprob: -26.625
    9. '```' → logprob: -26.75
    10. ' ' → logprob: -26.75

Token 1338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '۰' → logprob: -20.5
    4. '০' → logprob: -24.0
    5. '０' → logprob: -24.25
    6. '०' → logprob: -24.25
    7. '=' → logprob: -24.25
    8. '٠' → logprob: -24.75
    9. '00' → logprob: -25.125
    10. '   ' → logprob: -25.25

Token 1339: '


' (ID: 2499)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.012333164922893047
    2. 'def' → logprob: -4.512333393096924
    3. '
' → logprob: -6.762333393096924
    4. '```' → logprob: -9.637332916259766
    5. '<|end|>' → logprob: -10.887332916259766
    6. 'import' → logprob: -11.137332916259766
    7. '\' → logprob: -11.637332916259766
    8. '

' → logprob: -12.262332916259766
    9. '<|end|>' → logprob: -12.512332916259766
    10. '  
' → logprob: -12.637332916259766

Token 1340: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.016577135771512985
    2. 'def' → logprob: -4.141577243804932
    3. '
' → logprob: -7.766577243804932
    4. '```' → logprob: -9.141576766967773
    5. 'import' → logprob: -12.391576766967773
    6. '<|end|>' → logprob: -13.016576766967773
    7. '  
' → logprob: -13.766576766967773
    8. '

' → logprob: -13.891576766967773
    9. '<|end|>' → logprob: -14.141576766967773
    10. '``' → logprob: -14.641576766967773

Token 1341: ' Convert' (ID: 15629)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000727325037587434
    2. '#' → logprob: -7.25072717666626
    3. 'import' → logprob: -11.000727653503418
    4. 'class' → logprob: -15.000727653503418
    5. ' def' → logprob: -15.750727653503418
    6. 'from' → logprob: -16.6257266998291
    7. 'H' → logprob: -18.0007266998291
    8. '```' → logprob: -19.7507266998291
    9. '
' → logprob: -20.1257266998291
    10. '#!/' → logprob: -20.5007266998291

Token 1342: 'i' (ID: 72)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02006610296666622
    2. 'it' → logprob: -4.395066261291504
    3. '#' → logprob: -5.645066261291504
    4. 'ir' → logprob: -6.145066261291504
    5. 't' → logprob: -6.770066261291504
    6. '```' → logprob: -8.520066261291504
    7. 'i' → logprob: -8.645066261291504
    8. ' def' → logprob: -8.645066261291504
    9. '_to' → logprob: -10.395066261291504
    10. 'et' → logprob: -11.145066261291504

Token 1343: ' une' (ID: 2463)
  Prédit: '_fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.01495558675378561
    2. 't' → logprob: -5.389955520629883
    3. '_frac' → logprob: -5.889955520629883
    4. '```' → logprob: -6.764955520629883
    5. 'def' → logprob: -6.889955520629883
    6. '_f' → logprob: -7.014955520629883
    7. '_time' → logprob: -7.139955520629883
    8. '_seconds' → logprob: -7.389955520629883
    9. 'f' → logprob: -7.889955520629883
    10. '_decimal' → logprob: -8.264955520629883

Token 1344: ' fraction' (ID: 33763)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.8375844955444336
    2. 'def' → logprob: -0.9625844955444336
    3. 'time' → logprob: -2.5875844955444336
    4. '#' → logprob: -2.7125844955444336
    5. 'temps' → logprob: -4.337584495544434
    6. 't' → logprob: -4.712584495544434
    7. 'angle' → logprob: -5.337584495544434
    8. 'float' → logprob: -5.712584495544434
    9. 'H' → logprob: -6.212584495544434
    10. 'total' → logprob: -6.462584495544434

Token 1345: ' temps' (ID: 11160)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8207911252975464
    2. '(num' → logprob: -1.6957911252975464
    3. '#' → logprob: -1.8207911252975464
    4. 'en' → logprob: -2.320791244506836
    5. 'def' → logprob: -3.320791244506836
    6. 'a' → logprob: -3.945791244506836
    7. 'de' → logprob: -4.320791244506836
    8. '_to' → logprob: -4.320791244506836
    9. 'num' → logprob: -4.570791244506836
    10. '(a' → logprob: -5.320791244506836

Token 1346: ' (' (ID: 350)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.0229312181472778
    2. '_en' → logprob: -1.5229312181472778
    3. '(num' → logprob: -1.7729312181472778
    4. '_num' → logprob: -2.0229310989379883
    5. '_to' → logprob: -3.0229310989379883
    6. 'num' → logprob: -3.8979310989379883
    7. 'def' → logprob: -4.022931098937988
    8. ' en' → logprob: -4.397931098937988
    9. '(n' → logprob: -4.397931098937988
    10. '#' → logprob: -6.397931098937988

Token 1347: 'en' (ID: 262)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.12985579669475555
    2. 'n' → logprob: -2.1298558712005615
    3. 'a' → logprob: -6.504855632781982
    4. 'total' → logprob: -7.629855632781982
    5. 'def' → logprob: -8.25485610961914
    6. 't' → logprob: -8.87985610961914
    7. ')' → logprob: -9.00485610961914
    8. ' num' → logprob: -9.37985610961914
    9. 'h' → logprob: -9.62985610961914
    10. 'H' → logprob: -10.00485610961914

Token 1348: ' secondes' (ID: 109098)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.31338605284690857
    2. 'second' → logprob: -2.1883859634399414
    3. 'seconds' → logprob: -2.6883859634399414
    4. 'fraction' → logprob: -3.1883859634399414
    5. '#' → logprob: -3.6883859634399414
    6. 'total' → logprob: -4.938385963439941
    7. '```' → logprob: -6.063385963439941
    8. 'def' → logprob: -6.313385963439941
    9. 'he' → logprob: -6.313385963439941
    10. '(num' → logprob: -6.438385963439941

Token 1349: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7118829488754272
    2. ',' → logprob: -0.8368829488754272
    3. '_num' → logprob: -3.086883068084717
    4. 'en' → logprob: -4.336883068084717
    5. '#' → logprob: -5.461883068084717
    6. 'num' → logprob: -5.711883068084717
    7. '(n' → logprob: -6.086883068084717
    8. '(num' → logprob: -6.586883068084717
    9. ',num' → logprob: -7.086883068084717
    10. '_' → logprob: -7.211883068084717

Token 1350: ' num' (ID: 2269)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4364749789237976
    2. 'en' → logprob: -1.9364750385284424
    3. '(H' → logprob: -1.9364750385284424
    4. '(num' → logprob: -3.9364750385284424
    5. ',' → logprob: -4.186474800109863
    6. '(n' → logprob: -4.561474800109863
    7. ' en' → logprob: -5.311474800109863
    8. '#' → logprob: -5.436474800109863
    9. 'num' → logprob: -6.186474800109863
    10. 'à' → logprob: -6.561474800109863

Token 1351: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04461582750082016
    2. '/' → logprob: -3.5446157455444336
    3. 'érateur' → logprob: -5.419615745544434
    4. 'ERATOR' → logprob: -5.919615745544434
    5. '_,' → logprob: -6.294615745544434
    6. ',_' → logprob: -6.294615745544434
    7. ',num' → logprob: -6.294615745544434
    8. 'er' → logprob: -7.544615745544434
    9. '_' → logprob: -8.044615745544434
    10. 'é' → logprob: -8.669615745544434

Token 1352: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -2.2200749754119897e-06
    2. 'def' → logprob: -13.375001907348633
    3. ' den' → logprob: -15.000001907348633
    4. 'dem' → logprob: -15.750001907348633
    5. 'd' → logprob: -16.125001907348633
    6. ' denom' → logprob: -18.750001907348633
    7. '1' → logprob: -19.000001907348633
    8. '_den' → logprob: -19.750001907348633
    9. 'de' → logprob: -19.875001907348633
    10. '100' → logprob: -20.000001907348633

Token 1353: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09096844494342804
    2. ',' → logprob: -2.965968370437622
    3. 'en' → logprob: -3.965968370437622
    4. '#' → logprob: -5.090968608856201
    5. '
' → logprob: -5.840968608856201
    6. ' en' → logprob: -6.465968608856201
    7. '_en' → logprob: -6.965968608856201
    8. '(H' → logprob: -7.090968608856201
    9. '_to' → logprob: -7.215968608856201
    10. '=' → logprob: -7.715968608856201

Token 1354: ' un' (ID: 537)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.28731849789619446
    2. 'angle' → logprob: -2.412318468093872
    3. 'H' → logprob: -3.412318468093872
    4. 'un' → logprob: -3.537318468093872
    5. 'float' → logprob: -3.787318468093872
    6. 'une' → logprob: -4.037318706512451
    7. '(h' → logprob: -4.037318706512451
    8. 'angles' → logprob: -4.287318706512451
    9. 'total' → logprob: -5.662318706512451
    10. '#' → logprob: -5.787318706512451

Token 1355: ' flott' (ID: 108700)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6175577044487
    2. 'float' → logprob: -1.3675577640533447
    3. 'string' → logprob: -2.7425577640533447
    4. 'angle' → logprob: -3.1175577640533447
    5. '#' → logprob: -3.6175577640533447
    6. 'h' → logprob: -3.9925577640533447
    7. '(h' → logprob: -4.367557525634766
    8. 'temps' → logprob: -4.492557525634766
    9. 'def' → logprob: -5.742557525634766
    10. 'H' → logprob: -5.742557525634766

Token 1356: 'ant' (ID: 493)
  Prédit: 'eur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.38670527935028076
    2. 'o' → logprob: -1.8867052793502808
    3. 'or' → logprob: -2.6367053985595703
    4. 'loat' → logprob: -4.01170539855957
    5. 'ort' → logprob: -4.13670539855957
    6. 'ant' → logprob: -4.38670539855957
    7. 'ueur' → logprob: -4.76170539855957
    8. '```' → logprob: -5.26170539855957
    9. 'oint' → logprob: -5.38670539855957
    10. 't' → logprob: -5.38670539855957

Token 1357: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.117345684382599e-05
    2. ' def' → logprob: -11.000020980834961
    3. '
' → logprob: -12.875020980834961
    4. 'import' → logprob: -14.625020980834961
    5. '(' → logprob: -15.125020980834961
    6. '(def' → logprob: -15.500020980834961
    7. ':' → logprob: -15.625020980834961
    8. '   ' → logprob: -15.625020980834961
    9. '```' → logprob: -15.750020980834961
    10. ':
' → logprob: -16.25002098083496

Token 1358: 'pour' (ID: 52723)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.015346797183156013
    2. 'def' → logprob: -4.640347003936768
    3. 'return' → logprob: -5.390347003936768
    4. ')' → logprob: -7.390347003936768
    5. 'num' → logprob: -8.89034652709961
    6. ' float' → logprob: -9.26534652709961
    7. '
' → logprob: -9.76534652709961
    8. 't' → logprob: -10.14034652709961
    9. '   ' → logprob: -10.51534652709961
    10. '```' → logprob: -10.89034652709961

Token 1359: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.6275957226753235
    2. 'l' → logprob: -1.1275956630706787
    3. '#' → logprob: -2.8775956630706787
    4. 'aff' → logprob: -3.0025956630706787
    5. 'la' → logprob: -4.002595901489258
    6. 'le' → logprob: -4.627595901489258
    7. 'approx' → logprob: -6.002595901489258
    8. ' l' → logprob: -6.627595901489258
    9. 'les' → logprob: -6.877595901489258
    10. 'é' → logprob: -7.502595901489258

Token 1360: 's' (ID: 82)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.17237338423728943
    2. 'er' → logprob: -3.5473732948303223
    3. 'ating' → logprob: -3.6723732948303223
    4. 'ations' → logprob: -3.7973732948303223
    5. 'lation' → logprob: -4.297373294830322
    6. '#' → logprob: -4.672373294830322
    7. 'float' → logprob: -4.797373294830322
    8. 'ons' → logprob: -4.922373294830322
    9. 's' → logprob: -4.922373294830322
    10. 'def' → logprob: -5.172373294830322

Token 1361: ' ang' (ID: 2929)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07908432185649872
    2. 'def' → logprob: -3.4540843963623047
    3. ',' → logprob: -3.8290843963623047
    4. 'import' → logprob: -5.329084396362305
    5. 'de' → logprob: -5.704084396362305
    6. '_float' → logprob: -6.204084396362305
    7. '=' → logprob: -6.329084396362305
    8. '```' → logprob: -6.704084396362305
    9. '_' → logprob: -6.829084396362305
    10. '),' → logprob: -7.329084396362305

Token 1362: 'ul' (ID: 361)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5759904384613037
    2. 'le' → logprob: -0.8259904384613037
    3. 'ule' → logprob: -10.700990676879883
    4. 'ulaire' → logprob: -11.700990676879883
    5. 'l' → logprob: -12.075990676879883
    6. 'e' → logprob: -12.450990676879883
    7. '```' → logprob: -13.450990676879883
    8. 'ules' → logprob: -13.450990676879883
    9. '#' → logprob: -14.200990676879883
    10. '(' → logprob: -14.325990676879883

Token 1363: 'aires' (ID: 8507)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.11223503947257996
    2. 'ées' → logprob: -2.7372350692749023
    3. 'res' → logprob: -4.862235069274902
    4. 'aires' → logprob: -4.987235069274902
    5. 'és' → logprob: -5.112235069274902
    6. 'ees' → logprob: -5.487235069274902
    7. 'iers' → logprob: -5.612235069274902
    8. 'e' → logprob: -5.737235069274902
    9. 'ier' → logprob: -6.112235069274902
    10. 'eurs' → logprob: -6.237235069274902

Token 1364: ')
' (ID: 446)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022642439231276512
    2. ')
' → logprob: -4.522642612457275
    3. ')' → logprob: -4.772642612457275
    4. '):
' → logprob: -6.772642612457275
    5. '
' → logprob: -6.897642612457275
    6. '```' → logprob: -7.522642612457275
    7. ':
' → logprob: -8.897642135620117
    8. ',' → logprob: -9.897642135620117
    9. ' def' → logprob: -9.897642135620117
    10. '):' → logprob: -10.522642135620117

Token 1365: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007927165133878589
    2. '
' → logprob: -7.250792503356934
    3. ' def' → logprob: -10.000792503356934
    4. '```' → logprob: -10.250792503356934
    5. '``' → logprob: -14.125792503356934
    6. '\' → logprob: -14.250792503356934
    7. ' 
' → logprob: -16.12579345703125
    8. '   ' → logprob: -16.25079345703125
    9. '\n' → logprob: -16.25079345703125
    10. '\
' → logprob: -16.50079345703125

Token 1366: ' frac' (ID: 72308)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.023715917021036148
    2. 'frac' → logprob: -3.8987159729003906
    3. 'time' → logprob: -6.773715972900391
    4. 'def' → logprob: -7.148715972900391
    5. 'float' → logprob: -7.523715972900391
    6. 'to' → logprob: -7.898715972900391
    7. ' fraction' → logprob: -8.39871597290039
    8. ' fractional' → logprob: -10.39871597290039
    9. 'lambda' → logprob: -10.64871597290039
    10. 'fract' → logprob: -10.89871597290039

Token 1367: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.45766952633857727
    2. '_seconds' → logprob: -1.0826694965362549
    3. '_float' → logprob: -3.707669496536255
    4. '_frac' → logprob: -7.082669734954834
    5. '_time' → logprob: -7.207669734954834
    6. '_' → logprob: -7.332669734954834
    7. '_fraction' → logprob: -7.957669734954834
    8. '_times' → logprob: -8.082669258117676
    9. '_value' → logprob: -8.082669258117676
    10. '_convert' → logprob: -8.582669258117676

Token 1368: '_float' (ID: 44505)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0024783893022686243
    2. '_float' → logprob: -6.00247859954834
    3. ' float' → logprob: -12.87747859954834
    4. 'f' → logprob: -16.627477645874023
    5. 'floating' → logprob: -16.877477645874023
    6. '<float' → logprob: -17.377477645874023
    7. '=float' → logprob: -17.627477645874023
    8. 'Float' → logprob: -17.752477645874023
    9. '
' → logprob: -18.002477645874023
    10. '	float' → logprob: -18.252477645874023

Token 1369: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0005414772895164788
    2. '(' → logprob: -8.000541687011719
    3. '(n' → logprob: -8.500541687011719
    4. ' (' → logprob: -13.375541687011719
    5. '(
' → logprob: -14.875541687011719
    6. '(a' → logprob: -15.750541687011719
    7. 'num' → logprob: -16.12554168701172
    8. '(t' → logprob: -16.12554168701172
    9. '(NUM' → logprob: -16.12554168701172
    10. '((' → logprob: -16.37554168701172

Token 1370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007796077989041805
    2. '/' → logprob: -7.375779628753662
    3. ' ,' → logprob: -9.375779151916504
    4. ',num' → logprob: -10.250779151916504
    5. ' /' → logprob: -11.250779151916504
    6. ',
' → logprob: -11.750779151916504
    7. '_,' → logprob: -12.375779151916504
    8. '/,' → logprob: -13.500779151916504
    9. ')' → logprob: -13.625779151916504
    10. ',float' → logprob: -14.250779151916504

Token 1371: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00015860427811276168
    2. ' den' → logprob: -8.750158309936523
    3. 'def' → logprob: -16.125158309936523
    4. 'del' → logprob: -17.500158309936523
    5. 'float' → logprob: -18.875158309936523
    6. ' denom' → logprob: -19.125158309936523
    7. '_den' → logprob: -19.500158309936523
    8. 'dem' → logprob: -19.625158309936523
    9. 'div' → logprob: -19.750158309936523
    10. ' ' → logprob: -19.750158309936523

Token 1372: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47444647550582886
    2. '):' → logprob: -0.9744464755058289
    3. '):
' → logprob: -8.224446296691895
    4. ')' → logprob: -10.224446296691895
    5. ',' → logprob: -10.224446296691895
    6. '   ' → logprob: -11.099446296691895
    7. '):

' → logprob: -11.599446296691895
    8. ':' → logprob: -13.599446296691895
    9. '=' → logprob: -13.849446296691895
    10. ' ):' → logprob: -15.099446296691895

Token 1373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6237951517105103
    2. ' return' → logprob: -0.9987951517105103
    3. 'return' → logprob: -3.1237950325012207
    4. '(' → logprob: -3.2487950325012207
    5. '(num' → logprob: -5.623795032501221
    6. ' (' → logprob: -5.873795032501221
    7. '(
' → logprob: -6.623795032501221
    8. ')' → logprob: -6.873795032501221
    9. '(return' → logprob: -7.123795032501221
    10. '    ' → logprob: -7.373795032501221

Token 1374: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07916682213544846
    2. ' return' → logprob: -2.579166889190674
    3. '   ' → logprob: -8.204166412353516
    4. '	return' → logprob: -14.079166412353516
    5. '```' → logprob: -14.204166412353516
    6. 'num' → logprob: -14.329166412353516
    7. '`' → logprob: -14.829166412353516
    8. ':return' → logprob: -15.454166412353516
    9. '(return' → logprob: -15.579166412353516
    10. '       ' → logprob: -16.079166412353516

Token 1375: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014163628220558167
    2. ' num' → logprob: -4.264163494110107
    3. 'float' → logprob: -15.764163970947266
    4. ' float' → logprob: -19.389163970947266
    5. '(num' → logprob: -19.889163970947266
    6. ' ' → logprob: -20.639163970947266
    7. '	num' → logprob: -20.889163970947266
    8. '   ' → logprob: -23.514163970947266
    9. ' ' → logprob: -23.514163970947266
    10. '0' → logprob: -23.889163970947266

Token 1376: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.38688260316848755
    2. ' /' → logprob: -1.1368825435638428
    3. ' ' → logprob: -13.261882781982422
    4. '/
' → logprob: -13.386882781982422
    5. ' /
' → logprob: -13.636882781982422
    6. ' ' → logprob: -13.761882781982422
    7. '   ' → logprob: -13.886882781982422
    8. '/usr' → logprob: -13.886882781982422
    9. '```' → logprob: -14.261882781982422
    10. '*' → logprob: -14.386882781982422

Token 1377: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0001584850688232109
    2. ' den' → logprob: -8.750158309936523
    3. 'float' → logprob: -19.125158309936523
    4. ' ' → logprob: -21.000158309936523
    5. '   ' → logprob: -22.000158309936523
    6. '  ' → logprob: -22.625158309936523
    7. ' float' → logprob: -22.750158309936523
    8. 'def' → logprob: -23.250158309936523
    9. '_den' → logprob: -23.250158309936523
    10. 'Den' → logprob: -24.000158309936523

Token 1378: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4756014347076416
    2. '

' → logprob: -1.1006014347076416
    3. 'def' → logprob: -3.4756014347076416
    4. '#' → logprob: -5.1006011962890625
    5. '<|end|>' → logprob: -5.2256011962890625
    6. '


' → logprob: -5.9756011962890625
    7. '<|end|>' → logprob: -7.8506011962890625
    8. 'import' → logprob: -8.725601196289062
    9. '
' → logprob: -9.475601196289062
    10. '```' → logprob: -9.600601196289062

Token 1379: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10026609152555466
    2. '#' → logprob: -2.3502659797668457
    3. 'import' → logprob: -10.600266456604004
    4. '```' → logprob: -11.350266456604004
    5. '
' → logprob: -11.475266456604004
    6. 'class' → logprob: -11.600266456604004
    7. ' def' → logprob: -13.725266456604004
    8. 'H' → logprob: -14.975266456604004
    9. '  
' → logprob: -15.725266456604004
    10. '\' → logprob: -15.850266456604004

Token 1380: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02976900152862072
    2. '#' → logprob: -3.529768943786621
    3. 'import' → logprob: -11.029768943786621
    4. 'class' → logprob: -13.404768943786621
    5. ' def' → logprob: -14.904768943786621
    6. 'from' → logprob: -15.904768943786621
    7. '
' → logprob: -16.154769897460938
    8. '```' → logprob: -16.529769897460938
    9. 'H' → logprob: -17.779769897460938
    10. 'for' → logprob: -18.029769897460938

Token 1381: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018214913085103035
    2. '#' → logprob: -4.018214702606201
    3. ' def' → logprob: -9.76821517944336
    4. ' #' → logprob: -13.01821517944336
    5. '
' → logprob: -13.64321517944336
    6. 'de' → logprob: -13.89321517944336
    7. 'for' → logprob: -14.14321517944336
    8. 'pour' → logprob: -14.26821517944336
    9. 'to' → logprob: -14.51821517944336
    10. '_to' → logprob: -15.76821517944336

Token 1382: ' normal' (ID: 6078)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7764443159103394
    2. 'find' → logprob: -0.7764443159103394
    3. 'def' → logprob: -2.776444435119629
    4. 'tr' → logprob: -5.276444435119629
    5. 'binary' → logprob: -5.276444435119629
    6. 'search' → logprob: -6.151444435119629
    7. 'chercher' → logprob: -6.276444435119629
    8. 'fraction' → logprob: -7.526444435119629
    9. 'frac' → logprob: -7.776444435119629
    10. 't' → logprob: -7.776444435119629

Token 1383: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.10395757108926773
    2. 'izer' → logprob: -2.3539576530456543
    3. 'iser' → logprob: -5.603957653045654
    4. 'er' → logprob: -10.853957176208496
    5. '#' → logprob: -10.978957176208496
    6. 'iz' → logprob: -12.103957176208496
    7. 'ise' → logprob: -12.228957176208496
    8. 'i' → logprob: -12.478957176208496
    9. 'izing' → logprob: -12.853957176208496
    10. '_' → logprob: -12.978957176208496

Token 1384: ' le' (ID: 505)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.6417189836502075
    2. 'def' → logprob: -1.1417189836502075
    3. '_angle' → logprob: -2.141718864440918
    4. '(num' → logprob: -4.391718864440918
    5. '(angle' → logprob: -4.391718864440918
    6. 'angles' → logprob: -4.891718864440918
    7. '_angles' → logprob: -6.391718864440918
    8. 'num' → logprob: -6.766718864440918
    9. 'ang' → logprob: -8.141718864440918
    10. 'frac' → logprob: -8.141718864440918

Token 1385: ' temps' (ID: 11160)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.07879085838794708
    2. 'num' → logprob: -3.2037909030914307
    3. 'time' → logprob: -4.078790664672852
    4. 'temps' → logprob: -4.703790664672852
    5. 'def' → logprob: -5.203790664672852
    6. '#' → logprob: -6.453790664672852
    7. 'fraction' → logprob: -6.453790664672852
    8. 'frac' → logprob: -8.703790664672852
    9. 't' → logprob: -9.078790664672852
    10. 'ti' → logprob: -9.953790664672852

Token 1386: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.537868779967539e-06
    2. '(num' → logprob: -12.875008583068848
    3. ' def' → logprob: -13.500008583068848
    4. '```' → logprob: -13.625008583068848
    5. '
' → logprob: -13.750008583068848
    6. '#' → logprob: -13.875008583068848
    7. '(H' → logprob: -14.125008583068848
    8. '(def' → logprob: -15.375008583068848
    9. '(' → logprob: -15.750008583068848
    10. '(
' → logprob: -16.75000762939453

Token 1387: 'en' (ID: 262)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.030978992581367493
    2. 'def' → logprob: -3.5309789180755615
    3. ')' → logprob: -7.280979156494141
    4. '#' → logprob: -7.655979156494141
    5. '
' → logprob: -10.40597915649414
    6. 'H' → logprob: -11.90597915649414
    7. '   ' → logprob: -12.15597915649414
    8. '```' → logprob: -12.40597915649414
    9. ')
' → logprob: -12.65597915649414
    10. ' num' → logprob: -12.78097915649414

Token 1388: ' secondes' (ID: 109098)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01831101067364216
    2. 'seconds' → logprob: -4.393311023712158
    3. 'fraction' → logprob: -5.643311023712158
    4. '#' → logprob: -7.268311023712158
    5. 'second' → logprob: -8.393310546875
    6. 'def' → logprob: -8.393310546875
    7. '```' → logprob: -8.518310546875
    8. ' secondes' → logprob: -8.893310546875
    9. 'fra' → logprob: -9.018310546875
    10. 'float' → logprob: -9.393310546875

Token 1389: ' fraction' (ID: 33763)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.239078164100647
    2. ')' → logprob: -1.364078164100647
    3. ')
' → logprob: -1.864078164100647
    4. 'def' → logprob: -1.989078164100647
    5. '(num' → logprob: -2.7390780448913574
    6. 'num' → logprob: -2.9890780448913574
    7. '#' → logprob: -4.114078044891357
    8. ' (' → logprob: -5.364078044891357
    9. '),' → logprob: -5.489078044891357
    10. '
' → logprob: -5.614078044891357

Token 1390: 'naires' (ID: 65019)
  Prédit: 'naire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.10557425767183304
    2. 'aire' → logprob: -2.605574369430542
    3. 'def' → logprob: -4.230574131011963
    4. ')' → logprob: -5.730574131011963
    5. 'num' → logprob: -5.980574131011963
    6. 'naires' → logprob: -5.980574131011963
    7. 'aires' → logprob: -6.230574131011963
    8. '(num' → logprob: -7.980574131011963
    9. '_num' → logprob: -8.480574607849121
    10. '_fraction' → logprob: -8.605574607849121

Token 1391: ')' (ID: 8)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15457241237163544
    2. ')' → logprob: -2.5295724868774414
    3. '(num' → logprob: -3.0295724868774414
    4. ')
' → logprob: -4.779572486877441
    5. '):
' → logprob: -6.154572486877441
    6. ',' → logprob: -6.529572486877441
    7. 'num' → logprob: -7.029572486877441
    8. '),' → logprob: -7.529572486877441
    9. '#' → logprob: -8.154572486877441
    10. '):' → logprob: -8.279572486877441

Token 1392: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2352385965641588e-05
    2. '
' → logprob: -12.125012397766113
    3. ' def' → logprob: -12.500012397766113
    4. '#' → logprob: -12.750012397766113
    5. '(def' → logprob: -16.750011444091797
    6. '(' → logprob: -17.125011444091797
    7. '```' → logprob: -17.125011444091797
    8. '(num' → logprob: -17.500011444091797
    9. '(
' → logprob: -17.875011444091797
    10. ':' → logprob: -18.000011444091797

Token 1393: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.7613814473152161
    2. '360' → logprob: -1.5113813877105713
    3. 'H' → logprob: -1.8863813877105713
    4. '(' → logprob: -2.5113813877105713
    5. 'def' → logprob: -2.8863813877105713
    6. ' (' → logprob: -4.26138162612915
    7. '(lambda' → logprob: -5.51138162612915
    8. '(int' → logprob: -6.63638162612915
    9. '```' → logprob: -7.26138162612915
    10. 'lambda' → logprob: -7.38638162612915

Token 1394: ' heures' (ID: 34311)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.4060561776859686e-05
    2. '
' → logprob: -10.125043869018555
    3. ' def' → logprob: -12.500043869018555
    4. '```' → logprob: -16.375043869018555
    5. '#' → logprob: -17.875043869018555
    6. '(def' → logprob: -18.375043869018555
    7. '(' → logprob: -18.500043869018555
    8. '\' → logprob: -19.000043869018555
    9. '
' → logprob: -19.250043869018555
    10. ':def' → logprob: -19.750043869018555

Token 1395: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.968312951968983e-06
    2. '
' → logprob: -11.750009536743164
    3. ' def' → logprob: -13.125009536743164
    4. '```' → logprob: -17.125009536743164
    5. ':def' → logprob: -17.625009536743164
    6. '(def' → logprob: -19.125009536743164
    7. '#' → logprob: -19.375009536743164
    8. ':' → logprob: -19.750009536743164
    9. '  
' → logprob: -20.000009536743164
    10. '\' → logprob: -20.125009536743164

Token 1396: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. '
' → logprob: -13.375001907348633
    3. '```' → logprob: -15.000001907348633
    4. ' def' → logprob: -16.125001907348633
    5. '#' → logprob: -19.125001907348633
    6. '``' → logprob: -19.875001907348633
    7. '\' → logprob: -20.750001907348633
    8. '(def' → logprob: -21.125001907348633
    9. '  
' → logprob: -21.750001907348633
    10. '(' → logprob: -22.000001907348633

Token 1397: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0588148757815361
    2. 'normalize' → logprob: -3.183814764022827
    3. 'mod' → logprob: -5.183815002441406
    4. 'frac' → logprob: -5.308815002441406
    5. 'fraction' → logprob: -5.558815002441406
    6. 'time' → logprob: -7.433815002441406
    7. ' def' → logprob: -7.933815002441406
    8. 'normal' → logprob: -8.558815002441406
    9. ' normalize' → logprob: -9.683815002441406
    10. 'lambda' → logprob: -10.433815002441406

Token 1398: '_time' (ID: 6425)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.1083424910902977
    2. '(H' → logprob: -2.608342409133911
    3. 'def' → logprob: -4.23334264755249
    4. 'num' → logprob: -6.10834264755249
    5. '(t' → logprob: -6.10834264755249
    6. 't' → logprob: -6.23334264755249
    7. '_time' → logprob: -6.48334264755249
    8. '(time' → logprob: -6.85834264755249
    9. '_fraction' → logprob: -6.85834264755249
    10. '_seconds' → logprob: -6.98334264755249

Token 1399: '(H' (ID: 20904)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0007710324716754258
    2. '(H' → logprob: -7.2507710456848145
    3. 'def' → logprob: -10.000770568847656
    4. ' (' → logprob: -12.000770568847656
    5. 'num' → logprob: -13.000770568847656
    6. '(total' → logprob: -13.625770568847656
    7. '(NUM' → logprob: -13.750770568847656
    8. '(' → logprob: -13.875770568847656
    9. ',num' → logprob: -14.250770568847656
    10. '(n' → logprob: -14.500770568847656

Token 1400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.288163083605468e-05
    2. ',num' → logprob: -10.125052452087402
    3. ' ,' → logprob: -11.875052452087402
    4. ',
' → logprob: -12.875052452087402
    5. 'num' → logprob: -13.375052452087402
    6. '   ' → logprob: -14.250052452087402
    7. '(num' → logprob: -14.625052452087402
    8. 'def' → logprob: -15.000052452087402
    9. '
' → logprob: -16.00005340576172
    10. '_,' → logprob: -16.50005340576172

Token 1401: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.329167369287461e-05
    2. ' num' → logprob: -9.500093460083008
    3. ')' → logprob: -11.625093460083008
    4. '   ' → logprob: -12.875093460083008
    5. 'den' → logprob: -12.875093460083008
    6. 'def' → logprob: -13.125093460083008
    7. 'n' → logprob: -14.000093460083008
    8. 'numer' → logprob: -15.375093460083008
    9. '```' → logprob: -15.625093460083008
    10. '100' → logprob: -15.750093460083008

Token 1402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001005630983854644
    2. ',num' → logprob: -9.375100135803223
    3. ' ,' → logprob: -11.750100135803223
    4. ',
' → logprob: -12.125100135803223
    5. '_,' → logprob: -13.500100135803223
    6. 'num' → logprob: -15.375100135803223
    7. 'def' → logprob: -15.625100135803223
    8. '‌,' → logprob: -15.750100135803223
    9. '```' → logprob: -16.37510108947754
    10. ',H' → logprob: -16.62510108947754

Token 1403: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.004078401252627373
    2. ' den' → logprob: -5.504078388214111
    3. 'def' → logprob: -17.754077911376953
    4. ' ' → logprob: -17.879077911376953
    5. 'd' → logprob: -18.129077911376953
    6. '   ' → logprob: -19.129077911376953
    7. ' ' → logprob: -20.004077911376953
    8. '_den' → logprob: -20.004077911376953
    9. '  ' → logprob: -20.129077911376953
    10. '     ' → logprob: -20.379077911376953

Token 1404: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869069218635559
    2. '):
' → logprob: -1.1369068622589111
    3. '):
' → logprob: -10.511906623840332
    4. ')' → logprob: -12.386906623840332
    5. '):

' → logprob: -12.761906623840332
    6. '   ' → logprob: -13.636906623840332
    7. ',' → logprob: -16.13690757751465
    8. ' ):' → logprob: -16.26190757751465
    9. ':' → logprob: -16.51190757751465
    10. 'def' → logprob: -16.88690757751465

Token 1405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018883315846323967
    2. 'r' → logprob: -4.768883228302002
    3. 'rem' → logprob: -5.643883228302002
    4. '#' → logprob: -6.018883228302002
    5. 'num' → logprob: -6.143883228302002
    6. 'mod' → logprob: -6.893883228302002
    7. 'rest' → logprob: -8.64388370513916
    8. 'n' → logprob: -8.64388370513916
    9. '
' → logprob: -9.14388370513916
    10. 'total' → logprob: -9.26888370513916

Token 1406: ' #' (ID: 1069)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.8739222884178162
    2. 'num' → logprob: -1.123922348022461
    3. 'total' → logprob: -2.373922348022461
    4. '#' (adapté à ' #') → logprob: -2.623922348022461
    5. 'rem' → logprob: -3.123922348022461
    6. 'return' → logprob: -3.998922348022461
    7. 'n' → logprob: -4.248922348022461
    8. 'r' → logprob: -5.998922348022461
    9. 'g' → logprob: -6.373922348022461
    10. 'den' → logprob: -6.623922348022461

Token 1407: ' H' (ID: 487)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08739713579416275
    2. '#' → logprob: -3.2123970985412598
    3. 'num' → logprob: -3.8373970985412598
    4. 'cycle' → logprob: -4.83739709854126
    5. 'mod' → logprob: -5.21239709854126
    6. 'g' → logprob: -6.08739709854126
    7. 'n' → logprob: -6.46239709854126
    8. 'full' → logprob: -6.96239709854126
    9. 't' → logprob: -7.21239709854126
    10. 'val' → logprob: -7.71239709854126

Token 1408: ' heures' (ID: 34311)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -0.552348256111145
    2. '_times' → logprob: -1.677348256111145
    3. '*' → logprob: -2.1773481369018555
    4. '_seconds' → logprob: -3.1773481369018555
    5. '_hours' → logprob: -3.5523481369018555
    6. '_num' → logprob: -4.1773481369018555
    7. 'times' → logprob: -4.8023481369018555
    8. '_sec' → logprob: -4.8023481369018555
    9. 'num' → logprob: -5.3023481369018555
    10. ',' → logprob: -6.1773481369018555

Token 1409: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3011656403541565
    2. ',' → logprob: -2.6761655807495117
    3. '   ' → logprob: -2.8011655807495117
    4. '
' → logprob: -3.3011655807495117
    5. 'num' → logprob: -3.5511655807495117
    6. '360' → logprob: -3.8011655807495117
    7. ' *' → logprob: -4.801165580749512
    8. 'seconds' → logprob: -5.301165580749512
    9. 'def' → logprob: -5.551165580749512
    10. 'total' → logprob: -5.926165580749512

Token 1410: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00048656106810085475
    2. 'num' → logprob: -7.875486373901367
    3. 'int' → logprob: -10.000486373901367
    4. '(H' → logprob: -10.500486373901367
    5. '360' → logprob: -11.000486373901367
    6. ' H' → logprob: -11.375486373901367
    7. '(' → logprob: -12.750486373901367
    8. '(int' → logprob: -14.375486373901367
    9. '(num' → logprob: -14.625486373901367
    10. '_H' → logprob: -15.500486373901367

Token 1411: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06817024946212769
    2. ' *' → logprob: -3.0681703090667725
    3. '360' → logprob: -3.9431703090667725
    4. '\' → logprob: -13.443170547485352
    5. ' ' → logprob: -13.943170547485352
    6. '\t' → logprob: -14.443170547485352
    7. '
' → logprob: -14.568170547485352
    8. ' ' → logprob: -14.818170547485352
    9. '   ' → logprob: -14.943170547485352
    10. '*(' → logprob: -15.193170547485352

Token 1412: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -7.896309739408025e-07
    2. 'num' → logprob: -14.250000953674316
    3. '(' → logprob: -16.375
    4. '359' → logprob: -19.25
    5. 'den' → logprob: -19.375
    6. '366' → logprob: -19.75
    7. '36' → logprob: -20.0
    8. 'fraction' → logprob: -20.125
    9. '3' → logprob: -20.5
    10. '720' → logprob: -21.0

Token 1413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '000' → logprob: -16.125
    3. '   ' → logprob: -16.875
    4. '*' → logprob: -17.75
    5. '```' → logprob: -17.75
    6. ' ' → logprob: -18.125
    7. 'den' → logprob: -18.125
    8. 'num' → logprob: -19.0
    9. '*num' → logprob: -21.125
    10. '  ' → logprob: -21.125

Token 1414: ' s' (ID: 265)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8917126655578613
    2. ',' → logprob: -1.0167126655578613
    3. 'num' → logprob: -1.8917126655578613
    4. 'den' → logprob: -3.2667126655578613
    5. '*num' → logprob: -3.5167126655578613
    6. '```' → logprob: -5.516712665557861
    7. ',num' → logprob: -5.891712665557861
    8. 'def' → logprob: -7.141712665557861
    9. '360' → logprob: -7.641712665557861
    10. '   ' → logprob: -7.891712665557861

Token 1415: '
' (ID: 198)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5131567716598511
    2. '   ' → logprob: -1.138156771659851
    3. '
' → logprob: -3.1381568908691406
    4. ',' → logprob: -4.013156890869141
    5. 'total' → logprob: -4.888156890869141
    6. 'mod' → logprob: -4.888156890869141
    7. 'return' → logprob: -7.263156890869141
    8. 'n' → logprob: -7.263156890869141
    9. 'den' → logprob: -7.888156890869141
    10. 'time' → logprob: -8.01315689086914

Token 1416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5713119506835938
    2. 'num' → logprob: -0.9463119506835938
    3. ',' → logprob: -3.8213119506835938
    4. '
' → logprob: -4.446311950683594
    5. ' num' → logprob: -5.071311950683594
    6. 'n' → logprob: -5.821311950683594
    7. '```' → logprob: -6.821311950683594
    8. 'mod' → logprob: -7.696311950683594
    9. ' ,' → logprob: -7.946311950683594
    10. '``' → logprob: -8.196311950683594

Token 1417: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2306353598833084
    2. 'n' → logprob: -1.855635404586792
    3. 'total' → logprob: -3.980635404586792
    4. 'mod' → logprob: -4.355635166168213
    5. 'rem' → logprob: -4.855635166168213
    6. 'val' → logprob: -5.855635166168213
    7. '   ' → logprob: -6.230635166168213
    8. 'r' → logprob: -6.355635166168213
    9. 't' → logprob: -7.355635166168213
    10. 'res' → logprob: -7.855635166168213

Token 1418: ' calc' (ID: 25691)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.41507112979888916
    2. 'mod' → logprob: -2.0400710105895996
    3. 'num' → logprob: -2.1650710105895996
    4. 'n' → logprob: -3.1650710105895996
    5. 'val' → logprob: -3.5400710105895996
    6. 'rem' → logprob: -5.0400710105896
    7. 'den' → logprob: -5.5400710105896
    8. 'limit' → logprob: -5.9150710105896
    9. 't' → logprob: -6.4150710105896
    10. 'cycle' → logprob: -6.7900710105896

Token 1419: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.013667406514286995
    2. 'ul' → logprob: -5.263667583465576
    3. 'ulate' → logprob: -5.513667583465576
    4. 'num' → logprob: -6.388667583465576
    5. 'ulus' → logprob: -6.888667583465576
    6. 'uler' → logprob: -7.888667583465576
    7. 'u' → logprob: -8.138667106628418
    8. 'ulte' → logprob: -8.513667106628418
    9. 'cule' → logprob: -8.763667106628418
    10. '
' → logprob: -9.138667106628418

Token 1420: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2617367208003998
    2. ' num' → logprob: -2.6367366313934326
    3. 'n' → logprob: -3.2617366313934326
    4. '(num' → logprob: -3.3867366313934326
    5. ' n' → logprob: -4.011736869812012
    6. '   ' → logprob: -4.011736869812012
    7. ' (' → logprob: -4.761736869812012
    8. '(n' → logprob: -4.761736869812012
    9. ' remainder' → logprob: -4.761736869812012
    10. 'rem' → logprob: -5.261736869812012

Token 1421: '/' (ID: 14)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21656885743141174
    2. '%=' → logprob: -1.7165688276290894
    3. '%' → logprob: -4.716568946838379
    4. ',' → logprob: -5.966568946838379
    5. ' %=' → logprob: -6.341568946838379
    6. ' =' → logprob: -6.841568946838379
    7. '_mod' → logprob: -7.966568946838379
    8. 'mod' → logprob: -8.966568946838379
    9. '=num' → logprob: -9.841568946838379
    10. ',num' → logprob: -10.091568946838379

Token 1422: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.2664456789934775e-06
    2. ' den' → logprob: -13.625000953674316
    3. '(' → logprob: -18.625001907348633
    4. 'def' → logprob: -18.875001907348633
    5. ' ' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '
' → logprob: -19.875001907348633
    8. 'd' → logprob: -20.375001907348633
    9. '1' → logprob: -20.875001907348633
    10. '  ' → logprob: -20.875001907348633

Token 1423: ' mod' (ID: 1812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22847911715507507
    2. '%=' → logprob: -2.2284791469573975
    3. '%' → logprob: -3.7284791469573975
    4. ' =' → logprob: -3.8534791469573975
    5. ' %=' → logprob: -4.103478908538818
    6. ',' → logprob: -4.228478908538818
    7. 'num' → logprob: -4.603478908538818
    8. '   ' → logprob: -5.728478908538818
    9. ' %' → logprob: -6.228478908538818
    10. '_num' → logprob: -6.853478908538818

Token 1424: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.19184744358062744
    2. ' (' → logprob: -1.9418474435806274
    3. '(int' → logprob: -3.941847324371338
    4. '(' → logprob: -4.691847324371338
    5. '(num' → logprob: -6.441847324371338
    6. '((' → logprob: -7.816847324371338
    7. 'int' → logprob: -8.691847801208496
    8. 'num' → logprob: -8.816847801208496
    9. ' int' → logprob: -9.566847801208496
    10. '360' → logprob: -9.941847801208496

Token 1425: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.690244734287262
    2. '*' → logprob: -0.940244734287262
    3. '360' → logprob: -2.565244674682617
    4. '   ' → logprob: -4.815244674682617
    5. '```' → logprob: -4.940244674682617
    6. 'num' → logprob: -5.190244674682617
    7. '*num' → logprob: -6.315244674682617
    8. ' ,' → logprob: -6.440244674682617
    9. ' *' → logprob: -6.690244674682617
    10. '
' → logprob: -7.065244674682617

Token 1426: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.750000953674316
    4. '(' → logprob: -16.375
    5. 'den' → logprob: -17.625
    6. '``' → logprob: -18.5
    7. '   ' → logprob: -19.0
    8. 'num' → logprob: -19.25
    9. '`' → logprob: -19.875
    10. '  ' → logprob: -20.25

Token 1427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '000' → logprob: -13.750001907348633
    3. '00' → logprob: -14.625001907348633
    4. '```' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.375001907348633
    6. ' ' → logprob: -19.375001907348633
    7. '``' → logprob: -19.750001907348633
    8. '
' → logprob: -19.875001907348633
    9. ',' → logprob: -20.000001907348633
    10. '०' → logprob: -20.250001907348633

Token 1428: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2695423364639282
    2. '```' → logprob: -2.7695422172546387
    3. ',' → logprob: -3.0195422172546387
    4. ':
' → logprob: -3.5195422172546387
    5. ':' → logprob: -3.6445422172546387
    6. '
' → logprob: -3.6445422172546387
    7. 'num' → logprob: -4.519542217254639
    8. 'def' → logprob: -4.894542217254639
    9. '``' → logprob: -4.894542217254639
    10. ' =' → logprob: -5.769542217254639

Token 1429: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.151141881942749
    2. '   ' → logprob: -1.151141881942749
    3. ':' → logprob: -2.526141881942749
    4. '```' → logprob: -2.651141881942749
    5. ',
' → logprob: -3.151141881942749
    6. '
' → logprob: -3.151141881942749
    7. ' =' → logprob: -3.526141881942749
    8. ' ,' → logprob: -3.776141881942749
    9. 'num' → logprob: -4.026142120361328
    10. '``' → logprob: -4.526142120361328

Token 1430: ' full' (ID: 3149)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5874805450439453
    2. 'rem' → logprob: -2.0874805450439453
    3. 'limit' → logprob: -2.2124805450439453
    4. 'n' → logprob: -3.0874805450439453
    5. 'total' → logprob: -3.2124805450439453
    6. 'num' → logprob: -3.4624805450439453
    7. 'r' → logprob: -3.8374805450439453
    8. 'val' → logprob: -4.337480545043945
    9. 'bound' → logprob: -4.337480545043945
    10. 'max' → logprob: -4.462480545043945

Token 1431: ' =' (ID: 314)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0046584345400333405
    2. 'num' → logprob: -6.379658222198486
    3. '_seconds' → logprob: -6.754658222198486
    4. '_sec' → logprob: -7.129658222198486
    5. ' =' → logprob: -8.129658699035645
    6. ',' → logprob: -8.879658699035645
    7. '_' → logprob: -9.129658699035645
    8. '360' → logprob: -9.504658699035645
    9. '=' → logprob: -9.629658699035645
    10. '_time' → logprob: -9.754658699035645

Token 1432: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.17084704339504242
    2. '(H' → logprob: -2.545846939086914
    3. 'num' → logprob: -2.670846939086914
    4. 'full' → logprob: -5.795846939086914
    5. ' H' → logprob: -5.920846939086914
    6. ' (' → logprob: -6.295846939086914
    7. '(num' → logprob: -6.795846939086914
    8. '(full' → logprob: -8.045846939086914
    9. '(' → logprob: -8.795846939086914
    10. ' num' → logprob: -9.045846939086914

Token 1433: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04304703697562218
    2. ' *' → logprob: -3.1680469512939453
    3. '360' → logprob: -10.043046951293945
    4. ' ' → logprob: -13.418046951293945
    5. '   ' → logprob: -13.668046951293945
    6. '	' → logprob: -14.918046951293945
    7. '\' → logprob: -15.043046951293945
    8. '*num' → logprob: -15.543046951293945
    9. '\t' → logprob: -15.668046951293945
    10. '```' → logprob: -15.918046951293945

Token 1434: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. 'num' → logprob: -20.25
    4. 'den' → logprob: -20.625
    5. '36' → logprob: -21.875
    6. '60' → logprob: -21.875
    7. '   ' → logprob: -22.875
    8. '359' → logprob: -22.875
    9. '366' → logprob: -23.625
    10. '  ' → logprob: -23.75

Token 1435: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. 'num' → logprob: -17.875
    3. 'den' → logprob: -19.0
    4. ' ' → logprob: -20.125
    5. '```' → logprob: -21.875
    6. '36' → logprob: -22.25
    7. '359' → logprob: -22.375
    8. '   ' → logprob: -22.5
    9. '  ' → logprob: -22.5
    10. 'fraction' → logprob: -22.625

Token 1436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '600' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '000' → logprob: -15.625000953674316
    5. '360' → logprob: -16.625001907348633
    6. ' ' → logprob: -16.750001907348633
    7. '00' → logprob: -17.750001907348633
    8. '60' → logprob: -18.500001907348633
    9. '060' → logprob: -18.500001907348633
    10. '900' → logprob: -19.625001907348633

Token 1437: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0882810652256012
    2. '*' → logprob: -2.7132811546325684
    3. 'den' → logprob: -4.963281154632568
    4. '*num' → logprob: -5.588281154632568
    5. ' *' → logprob: -5.963281154632568
    6. 'num' → logprob: -6.213281154632568
    7. '   ' → logprob: -6.463281154632568
    8. ',' → logprob: -7.463281154632568
    9. '_den' → logprob: -8.58828067779541
    10. ')' → logprob: -8.96328067779541

Token 1438: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9715622067451477
    2. 'num' → logprob: -0.9715622067451477
    3. '   ' → logprob: -1.846562147140503
    4. ',' → logprob: -3.471562147140503
    5. '```' → logprob: -4.221562385559082
    6. '    
' → logprob: -4.846562385559082
    7. '``' → logprob: -4.971562385559082
    8. 'mod' → logprob: -4.971562385559082
    9. ' num' → logprob: -5.221562385559082
    10. 'n' → logprob: -5.346562385559082

Token 1439: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.08460705727338791
    2. 'rem' → logprob: -4.084607124328613
    3. 'mod' → logprob: -4.209607124328613
    4. 'n' → logprob: -4.584607124328613
    5. 'r' → logprob: -4.584607124328613
    6. 're' → logprob: -4.584607124328613
    7. ' num' → logprob: -5.209607124328613
    8. '   ' → logprob: -6.209607124328613
    9. 'rest' → logprob: -6.209607124328613
    10. ' remainder' → logprob: -6.209607124328613

Token 1440: ' On' (ID: 2160)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2036789208650589
    2. 'rem' → logprob: -2.953678846359253
    3. 'mod' → logprob: -2.953678846359253
    4. 'n' → logprob: -3.578678846359253
    5. 'r' → logprob: -3.828678846359253
    6. 're' → logprob: -4.203679084777832
    7. 'res' → logprob: -4.703679084777832
    8. 'rest' → logprob: -6.203679084777832
    9. 'val' → logprob: -6.578679084777832
    10. 'new' → logprob: -6.703679084777832

Token 1441: ' fera' (ID: 69827)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.22673794627189636
    2. 'n' → logprob: -2.7267379760742188
    3. 'rem' → logprob: -3.1017379760742188
    4. 'mod' → logprob: -3.8517379760742188
    5. 'full' → logprob: -3.9767379760742188
    6. 'r' → logprob: -4.101737976074219
    7. 'val' → logprob: -4.851737976074219
    8. 'quot' → logprob: -4.976737976074219
    9. 'q' → logprob: -5.101737976074219
    10. 're' → logprob: -5.351737976074219

Token 1442: ' la' (ID: 557)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.32988086342811584
    2. 'n' → logprob: -2.579880952835083
    3. ' num' → logprob: -3.579880952835083
    4. 'mod' → logprob: -3.704880952835083
    5. ' remainder' → logprob: -3.829880952835083
    6. 'full' → logprob: -4.329880714416504
    7. 'rem' → logprob: -4.329880714416504
    8. ' n' → logprob: -4.329880714416504
    9. ' full' → logprob: -4.454880714416504
    10. ' quotient' → logprob: -4.704880714416504

Token 1443: ' mod' (ID: 1812)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.02100905403494835
    2. 'n' → logprob: -5.1460089683532715
    3. 'quot' → logprob: -5.2710089683532715
    4. 'full' → logprob: -5.5210089683532715
    5. '(num' → logprob: -6.7710089683532715
    6. 'mod' → logprob: -6.7710089683532715
    7. '#' → logprob: -7.5210089683532715
    8. 'q' → logprob: -7.8960089683532715
    9. 'r' → logprob: -8.02100944519043
    10. 'rem' → logprob: -8.14600944519043

Token 1444: ' sur' (ID: 1512)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.045724231749773026
    2. 'ulo' → logprob: -3.5457241535186768
    3. ' num' → logprob: -4.670724391937256
    4. '(num' → logprob: -6.545724391937256
    5. 'if' → logprob: -6.795724391937256
    6. 'ulos' → logprob: -6.920724391937256
    7. 'ule' → logprob: -7.170724391937256
    8. '_num' → logprob: -7.670724391937256
    9. 'ulus' → logprob: -7.795724391937256
    10. '   ' → logprob: -8.170723915100098

Token 1445: ' un' (ID: 537)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03235737234354019
    2. '(num' → logprob: -3.5323574542999268
    3. '((' → logprob: -6.657357215881348
    4. 'full' → logprob: -7.657357215881348
    5. ' (' → logprob: -7.782357215881348
    6. ' num' → logprob: -8.032357215881348
    7. '(full' → logprob: -9.407357215881348
    8. ' ((' → logprob: -11.657357215881348
    9. ' full' → logprob: -11.907357215881348
    10. '(((' → logprob: -13.157357215881348

Token 1446: ' int' (ID: 677)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.058465827256441116
    2. '(num' → logprob: -3.6834657192230225
    3. 'full' → logprob: -3.6834657192230225
    4. 'numer' → logprob: -6.308465957641602
    5. '(full' → logprob: -6.933465957641602
    6. ' (' → logprob: -7.058465957641602
    7. ' full' → logprob: -7.683465957641602
    8. '((' → logprob: -7.808465957641602
    9. 'fraction' → logprob: -8.183465957641602
    10. 'n' → logprob: -8.308465957641602

Token 1447: ':' (ID: 25)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9695140719413757
    2. '   ' → logprob: -1.2195141315460205
    3. 'num' → logprob: -2.2195141315460205
    4. ' mod' → logprob: -3.0945141315460205
    5. ' remainder' → logprob: -3.2195141315460205
    6. ' full' → logprob: -3.7195141315460205
    7. ' modulus' → logprob: -3.8445141315460205
    8. 'full' → logprob: -4.094513893127441
    9. ' =' → logprob: -4.719513893127441
    10. ' modulo' → logprob: -4.719513893127441

Token 1448: ' num' (ID: 2269)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.21971528232097626
    2. '   ' → logprob: -3.2197153568267822
    3. 'full' → logprob: -3.2197153568267822
    4. 'num' → logprob: -3.4697153568267822
    5. 'rem' → logprob: -3.8447153568267822
    6. 'total' → logprob: -3.9697153568267822
    7. 're' → logprob: -4.844715118408203
    8. 'val' → logprob: -4.969715118408203
    9. ' remainder' → logprob: -4.969715118408203
    10. ' mod' → logprob: -4.969715118408203

Token 1449: ' *' (ID: 425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0409202575683594
    2. ' %=' → logprob: -1.2909202575683594
    3. ' =' → logprob: -1.7909202575683594
    4. '_mod' → logprob: -2.1659202575683594
    5. '%=' → logprob: -2.7909202575683594
    6. '%' → logprob: -4.165920257568359
    7. ' %' → logprob: -4.540920257568359
    8. 'mod' → logprob: -6.540920257568359
    9. '_re' → logprob: -7.290920257568359
    10. ',' → logprob: -8.66592025756836

Token 1450: ' ' (ID: 220)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.06344693154096603
    2. 'pow' → logprob: -3.1884469985961914
    3. '1' → logprob: -4.188446998596191
    4. '(' → logprob: -5.813446998596191
    5. 'mod' → logprob: -6.688446998596191
    6. 'full' → logprob: -8.188446998596191
    7. '   ' → logprob: -8.438446998596191
    8. 'num' → logprob: -9.813446998596191
    9. '(pow' → logprob: -9.813446998596191
    10. ' pow' → logprob: -9.938446998596191

Token 1451: '1' (ID: 16)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.08539015799760818
    2. 'pow' → logprob: -3.085390090942383
    3. '1' → logprob: -3.460390090942383
    4. '(' → logprob: -5.585390090942383
    5. 'mod' → logprob: -7.710390090942383
    6. 'full' → logprob: -7.710390090942383
    7. '(pow' → logprob: -10.460390090942383
    8. ' pow' → logprob: -12.585390090942383
    9. '_den' → logprob: -12.835390090942383
    10. '   ' → logprob: -12.835390090942383

Token 1452: ' %' (ID: 1851)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.19643375277519226
    2. ' %' → logprob: -1.9464337825775146
    3. '//' → logprob: -4.0714335441589355
    4. '%' → logprob: -4.3214335441589355
    5. '   ' → logprob: -6.5714335441589355
    6. ' *' → logprob: -6.6964335441589355
    7. ' ' → logprob: -7.5714335441589355
    8. '
' → logprob: -7.6964335441589355
    9. '*' → logprob: -7.8214335441589355
    10. ',' → logprob: -7.8214335441589355

Token 1453: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19231651723384857
    2. 'den' → logprob: -1.8173165321350098
    3. '(full' → logprob: -4.94231653213501
    4. 'full' → logprob: -5.56731653213501
    5. ' (' → logprob: -6.56731653213501
    6. ' full' → logprob: -9.942316055297852
    7. ' den' → logprob: -9.942316055297852
    8. '(int' → logprob: -11.317316055297852
    9. '((' → logprob: -12.192316055297852
    10. '(H' → logprob: -13.067316055297852

Token 1454: 'full' (ID: 15393)
  Prédit: '(full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(full' → logprob: -0.5473343729972839
    2. '(' → logprob: -1.0473344326019287
    3. 'full' → logprob: -3.0473344326019287
    4. 'den' → logprob: -3.7973344326019287
    5. '(int' → logprob: -7.54733419418335
    6. ' (' → logprob: -9.172334671020508
    7. 'int' → logprob: -10.422334671020508
    8. ' full' → logprob: -10.547334671020508
    9. '((' → logprob: -11.422334671020508
    10. 'Den' → logprob: -12.547334671020508

Token 1455: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23825253546237946
    2. ')' → logprob: -1.8632525205612183
    3. ' *' → logprob: -3.238252639770508
    4. 'den' → logprob: -4.363252639770508
    5. '_den' → logprob: -5.488252639770508
    6. '   ' → logprob: -8.113252639770508
    7. ')*' → logprob: -9.363252639770508
    8. ' ' → logprob: -9.488252639770508
    9. ')
' → logprob: -9.988252639770508
    10. '```' → logprob: -10.238252639770508

Token 1456: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -9.710618905955926e-05
    2. ' den' → logprob: -9.250097274780273
    3. '(' → logprob: -14.125097274780273
    4. 'd' → logprob: -16.875097274780273
    5. ' (' → logprob: -17.625097274780273
    6. ' ' → logprob: -18.000097274780273
    7. '```' → logprob: -18.000097274780273
    8. '   ' → logprob: -18.500097274780273
    9. 'def' → logprob: -18.875097274780273
    10. 'de' → logprob: -19.000097274780273

Token 1457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022809267102275044
    2. ')
' → logprob: -9.125227928161621
    3. ' )' → logprob: -9.375227928161621
    4. '),' → logprob: -12.000227928161621
    5. 'num' → logprob: -12.375227928161621
    6. '*' → logprob: -12.375227928161621
    7. '   ' → logprob: -12.875227928161621
    8. ')%' → logprob: -13.000227928161621
    9. '```' → logprob: -13.000227928161621
    10. '*num' → logprob: -13.250227928161621

Token 1458: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8176185488700867
    2. '%' → logprob: -1.0676186084747314
    3. '
' → logprob: -2.4426186084747314
    4. '   ' → logprob: -2.6926186084747314
    5. ' =' → logprob: -3.8176186084747314
    6. '=' → logprob: -3.8176186084747314
    7. '%
' → logprob: -5.817618370056152
    8. ')' → logprob: -6.317618370056152
    9. ' %
' → logprob: -6.442618370056152
    10. ' 
' → logprob: -6.567618370056152

Token 1459: ' total' (ID: 3609)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0110758543014526
    2. 'n' → logprob: -1.8860758543014526
    3. ' n' → logprob: -2.136075973510742
    4. 'r' → logprob: -2.386075973510742
    5. ' num' → logprob: -2.636075973510742
    6. ' r' → logprob: -2.886075973510742
    7. ' rem' → logprob: -3.386075973510742
    8. 'mod' → logprob: -3.511075973510742
    9. ' remainder' → logprob: -3.511075973510742
    10. '   ' → logprob: -4.386075973510742

Token 1460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051347412168979645
    2. '_num' → logprob: -3.426347494125366
    3. 'num' → logprob: -5.176347255706787
    4. '_mod' → logprob: -5.551347255706787
    5. '_seconds' → logprob: -5.551347255706787
    6. ' =' → logprob: -5.801347255706787
    7. 'mod' → logprob: -8.051347732543945
    8. '_time' → logprob: -8.426347732543945
    9. '=num' → logprob: -8.926347732543945
    10. '_re' → logprob: -9.426347732543945

Token 1461: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005630589555948973
    2. '(num' → logprob: -5.2556304931640625
    3. ' num' → logprob: -7.8806304931640625
    4. ' (' → logprob: -11.005630493164062
    5. '(' → logprob: -13.755630493164062
    6. '   ' → logprob: -14.630630493164062
    7. '((' → logprob: -15.255630493164062
    8. '	num' → logprob: -16.005630493164062
    9. 'numer' → logprob: -17.255630493164062
    10. '[num' → logprob: -17.505630493164062

Token 1462: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07010337710380554
    2. '%' → logprob: -2.695103406906128
    3. ' *' → logprob: -9.070103645324707
    4. '*' → logprob: -10.445103645324707
    5. ' %=' → logprob: -11.820103645324707
    6. ' ' → logprob: -12.570103645324707
    7. '%s' → logprob: -13.070103645324707
    8. ' %
' → logprob: -13.070103645324707
    9. '%d' → logprob: -13.195103645324707
    10. ' ' → logprob: -13.570103645324707

Token 1463: ' (' (ID: 350)
  Prédit: '(full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(full' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.375018119812012
    3. ' (' → logprob: -12.125018119812012
    4. '(total' → logprob: -13.875018119812012
    5. '(int' → logprob: -14.500018119812012
    6. '((' → logprob: -17.125019073486328
    7. '(final' → logprob: -18.000019073486328
    8. '   ' → logprob: -18.375019073486328
    9. '(abs' → logprob: -18.500019073486328
    10. ' ' → logprob: -18.625019073486328

Token 1464: 'full' (ID: 15393)
  Prédit: '(full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(full' → logprob: -0.1154065877199173
    2. 'full' → logprob: -2.3654065132141113
    3. '(' → logprob: -4.240406513214111
    4. ' full' → logprob: -8.24040699005127
    5. ' (' → logprob: -8.36540699005127
    6. 'den' → logprob: -8.61540699005127
    7. '(int' → logprob: -12.99040699005127
    8. '	full' → logprob: -14.24040699005127
    9. 'ful' → logprob: -14.36540699005127
    10. ' den' → logprob: -14.61540699005127

Token 1465: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.002476604888215661
    2. ' *' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.627476692199707
    4. '*
' → logprob: -15.627476692199707
    5. '**' → logprob: -16.12747573852539
    6. '```' → logprob: -16.25247573852539
    7. ' ' → logprob: -16.75247573852539
    8. ' ' → logprob: -18.00247573852539
    9. '[' → logprob: -18.00247573852539
    10. 'den' → logprob: -18.12747573852539

Token 1466: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -2.339278580620885e-06
    2. ' den' → logprob: -13.000001907348633
    3. 'Den' → logprob: -23.250001907348633
    4. '_den' → logprob: -23.375001907348633
    5. '   ' → logprob: -23.750001907348633
    6. ' ' → logprob: -23.875001907348633
    7. '  ' → logprob: -24.125001907348633
    8. 'd' → logprob: -25.000001907348633
    9. ' ' → logprob: -25.125001907348633
    10. 'def' → logprob: -26.125001907348633

Token 1467: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.44312788406387e-05
    2. ')
' → logprob: -9.875054359436035
    3. '   ' → logprob: -13.625054359436035
    4. ' )' → logprob: -13.625054359436035
    5. ')

' → logprob: -15.375054359436035
    6. '),' → logprob: -15.500054359436035
    7. '))' → logprob: -17.50005531311035
    8. '}' → logprob: -17.75005531311035
    9. ')}' → logprob: -17.75005531311035
    10. ')return' → logprob: -17.75005531311035

Token 1468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00905106496065855
    2. '
' → logprob: -5.5090508460998535
    3. ' return' → logprob: -6.2590508460998535
    4. 'return' → logprob: -6.2590508460998535
    5. ',' → logprob: -7.1340508460998535
    6. '    
' → logprob: -9.134051322937012
    7. 'num' → logprob: -10.134051322937012
    8. '```' → logprob: -10.134051322937012
    9. ' num' → logprob: -10.759051322937012
    10. ' 
' → logprob: -10.884051322937012

Token 1469: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42738470435142517
    2. ' return' → logprob: -1.1773847341537476
    3. 'return' (adapté à ' return') → logprob: -3.302384614944458
    4. ',' → logprob: -5.927384853363037
    5. '	return' → logprob: -10.177384376525879
    6. ' ,' → logprob: -10.302384376525879
    7. ' ' → logprob: -10.427384376525879
    8. ' num' → logprob: -10.552384376525879
    9. '    
' → logprob: -10.927384376525879
    10. '
' → logprob: -11.052384376525879

Token 1470: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00020354038861114532
    2. ' total' → logprob: -8.500203132629395
    3. '(total' → logprob: -17.12520408630371
    4. '   ' → logprob: -19.25020408630371
    5. '	total' → logprob: -21.50020408630371
    6. ' ' → logprob: -21.87520408630371
    7. ',total' → logprob: -23.37520408630371
    8. 't' → logprob: -23.75020408630371
    9. 'tot' → logprob: -24.12520408630371
    10. '$total' → logprob: -24.37520408630371

Token 1471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004046938265673816
    2. ' ,' → logprob: -8.500404357910156
    3. '<|end|>' → logprob: -8.875404357910156
    4. '   ' → logprob: -10.250404357910156
    5. ',
' → logprob: -11.625404357910156
    6. '```' → logprob: -12.625404357910156
    7. ',None' → logprob: -13.250404357910156
    8. ',num' → logprob: -13.375404357910156
    9. '/' → logprob: -13.375404357910156
    10. '  ' → logprob: -14.000404357910156

Token 1472: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00033546582562848926
    2. ' den' → logprob: -8.000335693359375
    3. '   ' → logprob: -21.000335693359375
    4. ' ' → logprob: -22.000335693359375
    5. ' ' → logprob: -23.000335693359375
    6. '_den' → logprob: -23.000335693359375
    7. 'd' → logprob: -23.250335693359375
    8. 'Den' → logprob: -23.250335693359375
    9. 'def' → logprob: -23.500335693359375
    10. '  ' → logprob: -23.500335693359375

Token 1473: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1474: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07247169315814972
    2. '#' → logprob: -2.6974716186523438
    3. '<|end|>' → logprob: -6.822471618652344
    4. '<|end|>' → logprob: -7.072471618652344
    5. '
' → logprob: -7.947471618652344
    6. '```' → logprob: -9.197471618652344
    7. 'import' → logprob: -9.197471618652344
    8. '

' → logprob: -11.322471618652344
    9. ' def' → logprob: -12.072471618652344
    10. '  
' → logprob: -12.447471618652344

Token 1475: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12709009647369385
    2. '#' → logprob: -2.1270899772644043
    3. 'import' → logprob: -8.877090454101562
    4. 'from' → logprob: -11.502090454101562
    5. 'class' → logprob: -11.502090454101562
    6. '```' → logprob: -14.127090454101562
    7. '
' → logprob: -14.252090454101562
    8. ' def' → logprob: -14.877090454101562
    9. '#!/' → logprob: -16.252090454101562
    10. ' #' → logprob: -16.502090454101562

Token 1476: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20152424275875092
    2. '#' → logprob: -1.701524257659912
    3. ' def' → logprob: -9.826523780822754
    4. ' #' → logprob: -9.951523780822754
    5. 'de' → logprob: -12.951523780822754
    6. 'for' → logprob: -14.326523780822754
    7. '
' → logprob: -14.326523780822754
    8. '```' → logprob: -14.451523780822754
    9. '(' → logprob: -14.576523780822754
    10. 'import' → logprob: -14.826523780822754

Token 1477: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.2729995988775045e-06
    2. '
' → logprob: -12.625006675720215
    3. '```' → logprob: -13.375006675720215
    4. ' def' → logprob: -13.625006675720215
    5. ':def' → logprob: -16.1250057220459
    6. '(
' → logprob: -17.3750057220459
    7. '``' → logprob: -18.6250057220459
    8. '#' → logprob: -18.6250057220459
    9. '(def' → logprob: -18.6250057220459
    10. 'de' → logprob: -19.3750057220459

Token 1478: ' recherche' (ID: 24975)
  Prédit: ' recherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.13924112915992737
    2. 'find' → logprob: -3.5142412185668945
    3. 'def' → logprob: -3.6392412185668945
    4. 're' → logprob: -3.7642412185668945
    5. '#' → logprob: -3.8892412185668945
    6. 'search' → logprob: -4.7642412185668945
    7. 'cherche' → logprob: -4.7642412185668945
    8. 'main' → logprob: -6.2642412185668945
    9. ' find' → logprob: -6.6392412185668945
    10. 'solve' → logprob: -6.6392412185668945

Token 1479: ' brute' (ID: 128602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014931005716789514
    2. '(
' → logprob: -9.625149726867676
    3. '(H' → logprob: -10.125149726867676
    4. ' def' → logprob: -10.875149726867676
    5. '
' → logprob: -12.000149726867676
    6. '(' → logprob: -12.125149726867676
    7. ':def' → logprob: -13.000149726867676
    8. '(def' → logprob: -13.125149726867676
    9. '```' → logprob: -13.125149726867676
    10. 'de' → logprob: -13.250149726867676

Token 1480: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00040660108788870275
    2. '(H' → logprob: -8.000406265258789
    3. '```' → logprob: -10.375406265258789
    4. ' def' → logprob: -10.750406265258789
    5. '(
' → logprob: -11.500406265258789
    6. 'de' → logprob: -12.500406265258789
    7. '#' → logprob: -13.625406265258789
    8. '
' → logprob: -13.875406265258789
    9. '(def' → logprob: -14.500406265258789
    10. '(' → logprob: -14.500406265258789

Token 1481: 'adapt' (ID: 119036)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6158024072647095
    2. 'def' → logprob: -0.9908024072647095
    3. '#' → logprob: -2.49080228805542
    4. ')' → logprob: -5.36580228805542
    5. '(H' → logprob: -8.490802764892578
    6. '
' → logprob: -8.615802764892578
    7. ')#' → logprob: -8.865802764892578
    8. '...' → logprob: -9.365802764892578
    9. ')
' → logprob: -9.740802764892578
    10. '   ' → logprob: -9.865802764892578

Token 1482: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5811597108840942
    2. 'ed' → logprob: -0.8311597108840942
    3. 'def' → logprob: -5.956159591674805
    4. 'é' → logprob: -6.331159591674805
    5. 'ative' → logprob: -8.081159591674805
    6. 'e' → logprob: -8.206159591674805
    7. 'ee' → logprob: -9.081159591674805
    8. '#' → logprob: -9.706159591674805
    9. '
' → logprob: -11.581159591674805
    10. '=' → logprob: -11.831159591674805

Token 1483: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6239661574363708
    2. '(H' → logprob: -1.6239662170410156
    3. ')' → logprob: -1.7489662170410156
    4. '```' → logprob: -3.7489662170410156
    5. 'for' → logprob: -3.9989662170410156
    6. ',' → logprob: -4.123966217041016
    7. 'à' → logprob: -4.873966217041016
    8. ' à' → logprob: -5.498966217041016
    9. '   ' → logprob: -5.623966217041016
    10. '(
' → logprob: -5.623966217041016

Token 1484: ' fraction' (ID: 33763)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0647156238555908
    2. '#' → logprob: -1.5647156238555908
    3. 'b' → logprob: -1.9397156238555908
    4. 'pr' → logprob: -2.189715623855591
    5. 'bis' → logprob: -2.814715623855591
    6. 'une' → logprob: -3.439715623855591
    7. 'un' → logprob: -3.939715623855591
    8. 'binary' → logprob: -4.189715385437012
    9. 't' → logprob: -4.564715385437012
    10. 'comment' → logprob: -4.689715385437012

Token 1485: 'nement' (ID: 15738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3339981138706207
    2. 'num' → logprob: -1.9589980840682983
    3. '_add' → logprob: -2.458998203277588
    4. ')' → logprob: -3.833998203277588
    5. '#' → logprob: -4.083998203277588
    6. '_num' → logprob: -5.458998203277588
    7. 'al' → logprob: -6.083998203277588
    8. 'nal' → logprob: -6.083998203277588
    9. '
' → logprob: -7.083998203277588
    10. 'ation' → logprob: -7.208998203277588

Token 1486: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4823596477508545
    2. '(H' → logprob: -1.6073596477508545
    3. 'def' → logprob: -2.4823596477508545
    4. 'de' → logprob: -3.2323596477508545
    5. '):' → logprob: -4.357359886169434
    6. 'du' → logprob: -4.857359886169434
    7. 't' → logprob: -4.982359886169434
    8. ',' → logprob: -4.982359886169434
    9. ' du' → logprob: -5.357359886169434
    10. ')
' → logprob: -6.107359886169434

Token 1487: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1054253011243418e-05
    2. '
' → logprob: -10.875020980834961
    3. '```' → logprob: -13.375020980834961
    4. ' def' → logprob: -14.750020980834961
    5. 'de' → logprob: -16.12502098083496
    6. ':def' → logprob: -17.50002098083496
    7. '``' → logprob: -19.12502098083496
    8. '(def' → logprob: -19.37502098083496
    9. 'ndef' → logprob: -20.12502098083496
    10. '	def' → logprob: -20.25002098083496

Token 1488: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3563551604747772
    2. 'search' → logprob: -1.2313551902770996
    3. 'br' → logprob: -5.7313551902771
    4. 'main' → logprob: -6.2313551902771
    5. 'solve' → logprob: -6.3563551902771
    6. ' find' → logprob: -7.9813551902771
    7. 'def' → logprob: -8.606354713439941
    8. 'equal' → logprob: -9.106354713439941
    9. ' search' → logprob: -9.481354713439941
    10. 'chercher' → logprob: -9.981354713439941

Token 1489: '_first' (ID: 29347)
  Prédit: '_angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angles' → logprob: -1.0684499740600586
    2. '(H' → logprob: -1.5684499740600586
    3. '_time' → logprob: -1.6934499740600586
    4. '_times' → logprob: -2.8184499740600586
    5. 'time' → logprob: -2.9434499740600586
    6. '_next' → logprob: -2.9434499740600586
    7. 'times' → logprob: -3.8184499740600586
    8. '_angle' → logprob: -3.8184499740600586
    9. '_positions' → logprob: -4.568449974060059
    10. 'angles' → logprob: -5.318449974060059

Token 1490: '_time' (ID: 6425)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -1.0739020109176636
    2. '(H' → logprob: -1.3239020109176636
    3. '_time' → logprob: -1.5739020109176636
    4. '_equal' → logprob: -2.948902130126953
    5. '_angle' → logprob: -3.573902130126953
    6. '_match' → logprob: -3.823902130126953
    7. '_over' → logprob: -4.073902130126953
    8. '_collision' → logprob: -4.698902130126953
    9. '_solution' → logprob: -4.698902130126953
    10. '_event' → logprob: -5.073902130126953

Token 1491: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00013369438238441944
    2. '(' → logprob: -9.000133514404297
    3. '(
' → logprob: -12.500133514404297
    4. 'def' → logprob: -13.000133514404297
    5. ' (' → logprob: -14.500133514404297
    6. '(h' → logprob: -14.875133514404297
    7. '_(' → logprob: -14.875133514404297
    8. '(T' → logprob: -15.125133514404297
    9. '(L' → logprob: -15.375133514404297
    10. '((' → logprob: -15.375133514404297

Token 1492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002956591488327831
    2. '):
' → logprob: -9.125295639038086
    3. '):' → logprob: -9.375295639038086
    4. ',
' → logprob: -10.000295639038086
    5. '   ' → logprob: -10.250295639038086
    6. ',H' → logprob: -11.625295639038086
    7. '(H' → logprob: -12.875295639038086
    8. ' ,' → logprob: -13.250295639038086
    9. '
' → logprob: -13.375295639038086
    10. ',num' → logprob: -13.875295639038086

Token 1493: ' h' (ID: 312)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.454878568649292
    2. 'max' → logprob: -1.579878568649292
    3. 'start' → logprob: -1.704878568649292
    4. 'target' → logprob: -2.329878568649292
    5. 'epsilon' → logprob: -2.579878568649292
    6. 'eps' → logprob: -2.704878568649292
    7. 'num' → logprob: -3.579878568649292
    8. 't' → logprob: -3.954878568649292
    9. 'precision' → logprob: -4.329878807067871
    10. 'threshold' → logprob: -4.954878807067871

Token 1494: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004752367385663092
    2. '_,' → logprob: -9.12547492980957
    3. ',
' → logprob: -9.37547492980957
    4. ' ,' → logprob: -9.62547492980957
    5. '   ' → logprob: -9.75047492980957
    6. ',m' → logprob: -10.25047492980957
    7. 'm' → logprob: -10.87547492980957
    8. '):
' → logprob: -10.87547492980957
    9. '):' → logprob: -11.00047492980957
    10. '=' → logprob: -11.62547492980957

Token 1495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002705145161598921
    2. ' ,' → logprob: -8.62527084350586
    3. ',
' → logprob: -10.62527084350586
    4. '_,' → logprob: -11.00027084350586
    5. '):
' → logprob: -11.25027084350586
    6. ',h' → logprob: -11.50027084350586
    7. '   ' → logprob: -11.75027084350586
    8. '):' → logprob: -12.50027084350586
    9. 'def' → logprob: -12.75027084350586
    10. ')' → logprob: -13.62527084350586

Token 1496: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011877965182065964
    2. ' m' → logprob: -4.51187801361084
    3. 'am' → logprob: -7.88687801361084
    4. 'h' → logprob: -8.01187801361084
    5. 'a' → logprob: -10.38687801361084
    6. '   ' → logprob: -11.01187801361084
    7. 'ah' → logprob: -11.82437801361084
    8. ' ' → logprob: -11.88687801361084
    9. ' h' → logprob: -11.94937801361084
    10. 'min' → logprob: -12.13687801361084

Token 1497: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0211993008852005
    2. '0' → logprob: -4.0211992263793945
    3. '_,' → logprob: -6.2711992263793945
    4. '   ' → logprob: -7.8961992263793945
    5. ' ,' → logprob: -8.146199226379395
    6. ',
' → logprob: -8.396199226379395
    7. '_' → logprob: -10.021199226379395
    8. '=None' → logprob: -10.146199226379395
    9. 's' → logprob: -10.521199226379395
    10. '=' → logprob: -11.146199226379395

Token 1498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017386233957950026
    2. '_,' → logprob: -10.000173568725586
    3. ' ,' → logprob: -10.250173568725586
    4. ',
' → logprob: -10.375173568725586
    5. ')' → logprob: -11.125173568725586
    6. ',n' → logprob: -11.875173568725586
    7. ',num' → logprob: -11.875173568725586
    8. 'def' → logprob: -12.000173568725586
    9. 's' → logprob: -12.250173568725586
    10. ',s' → logprob: -12.375173568725586

Token 1499: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08002980053424835
    2. ' s' → logprob: -2.5800297260284424
    3. '0' → logprob: -7.3300299644470215
    4. 'n' → logprob: -9.267529487609863
    5. ' ' → logprob: -9.517529487609863
    6. '```' → logprob: -10.017529487609863
    7. '   ' → logprob: -10.142529487609863
    8. '
' → logprob: -10.267529487609863
    9. 'as' → logprob: -10.455029487609863
    10. ')' → logprob: -11.580029487609863

Token 1500: '0' (ID: 15)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.01773521676659584
    2. 'num' → logprob: -4.767735004425049
    3. ',' → logprob: -5.267735004425049
    4. '_,' → logprob: -6.892735004425049
    5. '):
' → logprob: -7.017735004425049
    6. '_n' → logprob: -8.017735481262207
    7. '   ' → logprob: -8.142735481262207
    8. '
' → logprob: -8.267735481262207
    9. '```' → logprob: -8.267735481262207
    10. '0' → logprob: -8.517735481262207

Token 1501: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004387750814203173
    2. ',num' → logprob: -8.750438690185547
    3. '):
' → logprob: -9.000438690185547
    4. '):' → logprob: -9.625438690185547
    5. ' ,' → logprob: -10.500438690185547
    6. '   ' → logprob: -10.625438690185547
    7. ',
' → logprob: -10.875438690185547
    8. 'num' → logprob: -12.375438690185547
    9. '_num' → logprob: -12.500438690185547
    10. '_,' → logprob: -12.500438690185547

Token 1502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015510482480749488
    2. '```' → logprob: -7.251551151275635
    3. 'num' → logprob: -8.126550674438477
    4. '
' → logprob: -8.126550674438477
    5. '#' → logprob: -9.501550674438477
    6. 'step' → logprob: -9.751550674438477
    7. 't' → logprob: -10.626550674438477
    8. '    
' → logprob: -10.876550674438477
    9. 'def' → logprob: -11.001550674438477
    10. '``' → logprob: -11.626550674438477

Token 1503: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5061455368995667
    2. 'step' → logprob: -1.1311454772949219
    3. '#' (adapté à ' #') → logprob: -3.506145477294922
    4. 'from' → logprob: -4.131145477294922
    5. 'max' → logprob: -4.381145477294922
    6. 'num' → logprob: -4.506145477294922
    7. 'import' → logprob: -6.756145477294922
    8. 'start' → logprob: -7.006145477294922
    9. 'target' → logprob: -7.506145477294922
    10. 't' → logprob: -7.881145477294922

Token 1504: ' On' (ID: 2160)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.10044626891613007
    2. 'num' → logprob: -3.1004462242126465
    3. '#' → logprob: -3.9754462242126465
    4. '   ' → logprob: -4.8504462242126465
    5. 'pas' → logprob: -4.8504462242126465
    6. 'start' → logprob: -5.3504462242126465
    7. 'from' → logprob: -5.4754462242126465
    8. 'max' → logprob: -5.6004462242126465
    9. 'den' → logprob: -6.4754462242126465
    10. 't' → logprob: -7.2254462242126465

Token 1505: ' veut' (ID: 41653)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5342365503311157
    2. '#' → logprob: -1.5342365503311157
    3. 'num' → logprob: -1.7842365503311157
    4. 'import' → logprob: -4.659236431121826
    5. '
' → logprob: -5.284236431121826
    6. ' #' → logprob: -5.659236431121826
    7. 'def' → logprob: -5.909236431121826
    8. 's' → logprob: -6.659236431121826
    9. 'from' → logprob: -6.784236431121826
    10. ' num' → logprob: -6.784236431121826

Token 1506: ' trouver' (ID: 23195)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.44175559282302856
    2. '#' → logprob: -1.3167555332183838
    3. '   ' → logprob: -2.691755533218384
    4. 't' → logprob: -4.941755771636963
    5. 'step' → logprob: -5.316755771636963
    6. 'H' → logprob: -5.316755771636963
    7. 'h' → logprob: -7.066755771636963
    8. 'start' → logprob: -7.066755771636963
    9. 'current' → logprob: -7.066755771636963
    10. '
' → logprob: -8.066755294799805

Token 1507: ' le' (ID: 505)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.23921538889408112
    2. '   ' → logprob: -1.98921537399292
    3. '#' → logprob: -3.48921537399292
    4. 't' → logprob: -4.11421537399292
    5. 'H' → logprob: -4.61421537399292
    6. ' num' → logprob: -4.86421537399292
    7. 'def' → logprob: -5.48921537399292
    8. '
' → logprob: -6.86421537399292
    9. 'n' → logprob: -6.98921537399292
    10. 'step' → logprob: -6.98921537399292

Token 1508: ' premier' (ID: 15506)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10604729503393173
    2. '#' → logprob: -2.3560473918914795
    3. 't' → logprob: -5.8560471534729
    4. 'n' → logprob: -7.3560471534729
    5. 'from' → logprob: -7.7310471534729
    6. 'time' → logprob: -7.8560471534729
    7. 'H' → logprob: -7.8560471534729
    8. 'next' → logprob: -8.856047630310059
    9. '```' → logprob: -8.856047630310059
    10. 'h' → logprob: -8.981047630310059

Token 1509: ' temps' (ID: 11160)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5040093660354614
    2. 'time' → logprob: -1.0040093660354614
    3. 't' → logprob: -3.879009246826172
    4. '```' → logprob: -6.004009246826172
    5. '#' → logprob: -6.379009246826172
    6. 'pas' → logprob: -6.504009246826172
    7. 'token' → logprob: -6.754009246826172
    8. '
' → logprob: -7.504009246826172
    9. 'times' → logprob: -7.879009246826172
    10. 'moment' → logprob: -8.004009246826172

Token 1510: ' T' (ID: 353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037352300714701414
    2. '(
' → logprob: -6.878735065460205
    3. '(' → logprob: -7.128735065460205
    4. ',' → logprob: -7.628735065460205
    5. ' (' → logprob: -7.753735065460205
    6. '(num' → logprob: -8.753735542297363
    7. 'num' → logprob: -9.253735542297363
    8. ':' → logprob: -9.253735542297363
    9. 'def' → logprob: -9.378735542297363
    10. ' =' → logprob: -9.503735542297363

Token 1511: ' >=' (ID: 5064)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023632213473320007
    2. '(H' → logprob: -4.898632049560547
    3. ',' → logprob: -5.023632049560547
    4. '
' → logprob: -6.023632049560547
    5. ' (' → logprob: -7.148632049560547
    6. 'def' → logprob: -7.148632049560547
    7. ':
' → logprob: -7.273632049560547
    8. '(
' → logprob: -7.398632049560547
    9. 'num' → logprob: -7.523632049560547
    10. '(' → logprob: -7.523632049560547

Token 1512: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3628998398780823
    2. '0' → logprob: -1.8628997802734375
    3. 'time' → logprob: -2.3628997802734375
    4. '(h' → logprob: -3.4878997802734375
    5. '(' → logprob: -4.2378997802734375
    6. '(time' → logprob: -5.2378997802734375
    7. ' (' → logprob: -6.2378997802734375
    8. ' h' → logprob: -6.4878997802734375
    9. ' time' → logprob: -8.237899780273438
    10. '((' → logprob: -8.487899780273438

Token 1513: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010194214060902596
    2. ',' → logprob: -4.635194301605225
    3. '_' → logprob: -8.635193824768066
    4. ' ' → logprob: -9.260193824768066
    5. '_,' → logprob: -10.010193824768066
    6. '   ' → logprob: -10.135193824768066
    7. ' ,' → logprob: -10.510193824768066
    8. '```' → logprob: -12.010193824768066
    9. 'h' → logprob: -12.385193824768066
    10. '
' → logprob: -12.510193824768066

Token 1514: ':m' (ID: 83740)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.066077820956707
    2. '*' → logprob: -2.941077709197998
    3. ' *' → logprob: -5.191077709197998
    4. '   ' → logprob: -6.066077709197998
    5. ' ,' → logprob: -6.566077709197998
    6. ',
' → logprob: -7.441077709197998
    7. '0' → logprob: -7.816077709197998
    8. '*,' → logprob: -8.566078186035156
    9. '```' → logprob: -8.691078186035156
    10. ' ' → logprob: -8.941078186035156

Token 1515: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030870353803038597
    2. ',' → logprob: -3.7808704376220703
    3. 's' → logprob: -5.65587043762207
    4. 'o' → logprob: -7.15587043762207
    5. ':' → logprob: -7.28087043762207
    6. '
' → logprob: -7.40587043762207
    7. 'm' → logprob: -8.15587043762207
    8. ' ' → logprob: -8.28087043762207
    9. 'u' → logprob: -8.65587043762207
    10. '   ' → logprob: -8.65587043762207

Token 1516: ':s' (ID: 31023)
  Prédit: ':s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':s' → logprob: -0.2457614243030548
    2. ':' → logprob: -1.8707613945007324
    3. 's' → logprob: -3.3707613945007324
    4. ' s' → logprob: -3.7457613945007324
    5. ':ss' → logprob: -5.870761394500732
    6. '0' → logprob: -6.370761394500732
    7. ',' → logprob: -8.12076187133789
    8. ' ' → logprob: -8.37076187133789
    9. '   ' → logprob: -8.49576187133789
    10. ' :' → logprob: -8.87076187133789

Token 1517: '0' (ID: 15)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.9958367943763733
    2. '_n' → logprob: -1.2458367347717285
    3. '0' → logprob: -1.3708367347717285
    4. '_' → logprob: -3.7458367347717285
    5. ',' → logprob: -4.3708367347717285
    6. ' _' → logprob: -4.9958367347717285
    7. ':' → logprob: -4.9958367347717285
    8. '   ' → logprob: -5.2458367347717285
    9. '_f' → logprob: -5.6208367347717285
    10. '
' → logprob: -5.7458367347717285

Token 1518: ' fraction' (ID: 33763)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01915759965777397
    2. ',' → logprob: -4.269157409667969
    3. '```' → logprob: -6.894157409667969
    4. '
' → logprob: -7.144157409667969
    5. '(' → logprob: -7.144157409667969
    6. ' (' → logprob: -7.269157409667969
    7. '(num' → logprob: -7.519157409667969
    8. 'def' → logprob: -8.144157409667969
    9. 'num' → logprob: -9.019157409667969
    10. ':
' → logprob: -9.144157409667969

Token 1519: 'naire' (ID: 30464)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.16036619246006012
    2. '   ' → logprob: -3.2853662967681885
    3. 'naire' → logprob: -3.2853662967681885
    4. '_n' → logprob: -4.035366058349609
    5. 'num' → logprob: -4.410366058349609
    6. '_' → logprob: -4.785366058349609
    7. 'aire' → logprob: -5.035366058349609
    8. '
' → logprob: -5.160366058349609
    9. '_fraction' → logprob: -5.535366058349609
    10. '0' → logprob: -5.785366058349609

Token 1520: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005815975368022919
    2. ',' → logprob: -6.0058159828186035
    3. '
' → logprob: -6.2558159828186035
    4. '(' → logprob: -8.130815505981445
    5. 'def' → logprob: -8.505815505981445
    6. ' (' → logprob: -8.630815505981445
    7. '```' → logprob: -8.630815505981445
    8. '(num' → logprob: -8.755815505981445
    9. '    
' → logprob: -9.255815505981445
    10. ' where' → logprob: -10.130815505981445

Token 1521: 'ici' (ID: 3757)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6040353775024414
    2. 'num' → logprob: -1.6040353775024414
    3. ')' → logprob: -2.2290353775024414
    4. ' ,' → logprob: -2.9790353775024414
    5. '   ' → logprob: -3.4790353775024414
    6. ' num' → logprob: -3.7290353775024414
    7. '0' → logprob: -5.229035377502441
    8. 't' → logprob: -5.479035377502441
    9. ' )' → logprob: -5.729035377502441
    10. '```' → logprob: -5.729035377502441

Token 1522: ' s' (ID: 265)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9517391324043274
    2. '0' → logprob: -1.4517390727996826
    3. ')' → logprob: -2.0767390727996826
    4. '   ' → logprob: -2.3267390727996826
    5. '),' → logprob: -3.4517390727996826
    6. 'num' → logprob: -3.4517390727996826
    7. ' ,' → logprob: -3.7017390727996826
    8. ':' → logprob: -4.451739311218262
    9. '):
' → logprob: -4.951739311218262
    10. 's' → logprob: -5.326739311218262

Token 1523: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010401401668787003
    2. '_num' → logprob: -4.885401248931885
    3. ',' → logprob: -7.010401248931885
    4. '=' → logprob: -7.635401248931885
    5. '   ' → logprob: -8.010401725769043
    6. 'def' → logprob: -8.385401725769043
    7. '_' → logprob: -9.135401725769043
    8. '```' → logprob: -9.135401725769043
    9. 'num' → logprob: -9.385401725769043
    10. ')' → logprob: -9.385401725769043

Token 1524: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0060720443725586
    2. '_num' → logprob: -1.1310720443725586
    3. '+' → logprob: -2.5060720443725586
    4. ')' → logprob: -2.5060720443725586
    5. '   ' → logprob: -3.0060720443725586
    6. ' +' → logprob: -3.6310720443725586
    7. '),' → logprob: -4.006072044372559
    8. '[' → logprob: -4.131072044372559
    9. '
' → logprob: -5.006072044372559
    10. '```' → logprob: -5.631072044372559

Token 1525: ' entier' (ID: 80473)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036181554198265076
    2. 's' → logprob: -3.9111814498901367
    3. 'int' → logprob: -5.161181449890137
    4. '1' → logprob: -5.911181449890137
    5. 'fraction' → logprob: -6.036181449890137
    6. 'represented' → logprob: -6.911181449890137
    7. 'a' → logprob: -7.036181449890137
    8. 'an' → logprob: -7.786181449890137
    9. 'num' → logprob: -7.911181449890137
    10. 'integer' → logprob: -8.161181449890137

Token 1526: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08254494518041611
    2. ',' → logprob: -2.957545042037964
    3. '   ' → logprob: -4.207544803619385
    4. '),' → logprob: -4.957544803619385
    5. '+' → logprob: -5.707544803619385
    6. '):
' → logprob: -7.832544803619385
    7. '):' → logprob: -8.207545280456543
    8. '```' → logprob: -8.332545280456543
    9. ')
' → logprob: -8.707545280456543
    10. ' +' → logprob: -8.832545280456543

Token 1527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006668062414973974
    2. '
' → logprob: -7.750666618347168
    3. '```' → logprob: -9.250666618347168
    4. 'num' → logprob: -9.625666618347168
    5. '    
' → logprob: -10.375666618347168
    6. 'def' → logprob: -11.125666618347168
    7. ',' → logprob: -11.125666618347168
    8. 'import' → logprob: -13.000666618347168
    9. '#' → logprob: -13.500666618347168
    10. '   ' → logprob: -13.625666618347168

Token 1528: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01757827028632164
    2. 'step' → logprob: -4.142578125
    3. 'num' → logprob: -7.017578125
    4. 't' → logprob: -8.517578125
    5. '#' (adapté à ' #') → logprob: -8.642578125
    6. 'max' → logprob: -9.142578125
    7. 'start' → logprob: -10.392578125
    8. 'pas' → logprob: -10.517578125
    9. 'time' → logprob: -10.767578125
    10. 'from' → logprob: -11.017578125

Token 1529: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08836248517036438
    2. 'step' → logprob: -2.588362455368042
    3. 'num' → logprob: -5.463362693786621
    4. 'start' → logprob: -6.463362693786621
    5. 't' → logprob: -6.963362693786621
    6. 'max' → logprob: -6.963362693786621
    7. '#' → logprob: -6.963362693786621
    8. 'current' → logprob: -8.463362693786621
    9. 'from' → logprob: -8.963362693786621
    10. 'time' → logprob: -9.213362693786621

Token 1530: ' deux' (ID: 10301)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.516588568687439
    2. 'num' → logprob: -1.766588568687439
    3. 'angle' → logprob: -2.1415886878967285
    4. 'H' → logprob: -3.8915886878967285
    5. 'def' → logprob: -3.8915886878967285
    6. ' True' → logprob: -4.1415886878967285
    7. 't' → logprob: -4.5165886878967285
    8. 'import' → logprob: -4.6415886878967285
    9. '   ' → logprob: -4.8915886878967285
    10. '#' → logprob: -5.0165886878967285

Token 1531: ' conditions' (ID: 6409)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.12822116911411285
    2. 'num' → logprob: -2.878221273422241
    3. '#' → logprob: -3.378221273422241
    4. 'a' → logprob: -5.003221035003662
    5. '```' → logprob: -5.003221035003662
    6. 'angle' → logprob: -5.128221035003662
    7. 'hands' → logprob: -5.753221035003662
    8. 'seconds' → logprob: -7.128221035003662
    9. 'for' → logprob: -7.128221035003662
    10. 'numer' → logprob: -7.628221035003662

Token 1532: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33007189631462097
    2. ':' → logprob: -2.5800719261169434
    3. 's' → logprob: -3.0800719261169434
    4. '#' → logprob: -3.0800719261169434
    5. ' sont' → logprob: -3.0800719261169434
    6. '=' → logprob: -3.8300719261169434
    7. ' =' → logprob: -4.205071926116943
    8. ',' → logprob: -5.205071926116943
    9. '       ' → logprob: -5.705071926116943
    10. ' are' → logprob: -5.830071926116943

Token 1533: ' vra' (ID: 16065)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31364673376083374
    2. '#' → logprob: -1.8136467933654785
    3. 'True' → logprob: -2.9386467933654785
    4. 'v' → logprob: -3.9386467933654785
    5. 'respect' → logprob: -4.3136467933654785
    6. '   ' → logprob: -5.3136467933654785
    7. ' True' → logprob: -5.4386467933654785
    8. 'rem' → logprob: -5.8136467933654785
    9. '```' → logprob: -6.3136467933654785
    10. 'true' → logprob: -6.9386467933654785

Token 1534: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0008934747893363237
    2. 'lies' → logprob: -7.625893592834473
    3. 'iment' → logprob: -8.625893592834473
    4. 'im' → logprob: -9.750893592834473
    5. 'ises' → logprob: -10.250893592834473
    6. 'ries' → logprob: -10.500893592834473
    7. 'ites' → logprob: -10.500893592834473
    8. '
' → logprob: -11.125893592834473
    9. 'ient' → logprob: -11.750893592834473
    10. 'l' → logprob: -12.000893592834473

Token 1535: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0127656739205122
    2. '
' → logprob: -4.512765884399414
    3. '    
' → logprob: -6.762765884399414
    4. '```' → logprob: -8.262765884399414
    5. 'def' → logprob: -9.262765884399414
    6. ',' → logprob: -9.762765884399414
    7. ':' → logprob: -10.512765884399414
    8. '#' → logprob: -11.137765884399414
    9. 'step' → logprob: -11.137765884399414
    10. ':
' → logprob: -11.512765884399414

Token 1536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007709132041782141
    2. '#' → logprob: -7.7507710456848145
    3. '```' → logprob: -9.500770568847656
    4. '    ' → logprob: -9.625770568847656
    5. '    
' → logprob: -10.000770568847656
    6. '       ' → logprob: -10.500770568847656
    7. ' #' → logprob: -10.625770568847656
    8. 'n' → logprob: -11.125770568847656
    9. '
' → logprob: -11.375770568847656
    10. 'def' → logprob: -11.500770568847656

Token 1537: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052491530776023865
    2. 't' → logprob: -3.8024914264678955
    3. '#' (adapté à ' #') → logprob: -4.552491664886475
    4. ' t' → logprob: -5.052491664886475
    5. 'num' → logprob: -5.552491664886475
    6. 'n' → logprob: -6.052491664886475
    7. '```' → logprob: -6.052491664886475
    8. ' num' → logprob: -7.552491664886475
    9. ' #' → logprob: -7.552491664886475
    10. ' ' → logprob: -7.927491664886475

Token 1538: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46523818373680115
    2. '   ' → logprob: -1.2152382135391235
    3. 'num' → logprob: -3.215238094329834
    4. 't' → logprob: -4.465238094329834
    5. 'eps' → logprob: -5.215238094329834
    6. 'step' → logprob: -5.715238094329834
    7. 'import' → logprob: -5.965238094329834
    8. 'angle' → logprob: -6.090238094329834
    9. 'def' → logprob: -6.465238094329834
    10. 'n' → logprob: -6.715238094329834

Token 1539: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22015833854675293
    2. 'num' → logprob: -2.720158338546753
    3. 'eps' → logprob: -2.970158338546753
    4. 't' → logprob: -3.220158338546753
    5. 'EPS' → logprob: -5.220158576965332
    6. 'angle' → logprob: -5.345158576965332
    7. '   ' → logprob: -5.595158576965332
    8. 'from' → logprob: -5.595158576965332
    9. 'max' → logprob: -5.595158576965332
    10. 'import' → logprob: -5.595158576965332

Token 1540: ')' (ID: 8)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07627048343420029
    2. ')' → logprob: -3.451270580291748
    3. ':' → logprob: -4.451270580291748
    4. ',' → logprob: -5.076270580291748
    5. 'def' → logprob: -5.451270580291748
    6. ' #' → logprob: -5.826270580291748
    7. '    ' → logprob: -6.076270580291748
    8. '```' → logprob: -6.451270580291748
    9. '
' → logprob: -6.576270580291748
    10. '.' → logprob: -6.576270580291748

Token 1541: ' aucune' (ID: 51173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5926156044006348
    2. 'True' → logprob: -1.7176156044006348
    3. 'def' → logprob: -2.2176156044006348
    4. 't' → logprob: -2.2176156044006348
    5. 'angle' → logprob: -2.2176156044006348
    6. 'import' → logprob: -2.5926156044006348
    7. 'while' → logprob: -2.9676156044006348
    8. 'ah' → logprob: -3.5926156044006348
    9. 'angles' → logprob: -4.092615604400635
    10. 'for' → logprob: -4.592615604400635

Token 1542: ' paire' (ID: 148856)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6849400997161865
    2. 'de' → logprob: -0.8099400997161865
    3. '#' → logprob: -4.309940338134766
    4. '```' → logprob: -4.559940338134766
    5. 'angle' → logprob: -5.059940338134766
    6. 'over' → logprob: -5.559940338134766
    7. 'des' → logprob: -5.809940338134766
    8. '   ' → logprob: -6.309940338134766
    9. 'double' → logprob: -7.559940338134766
    10. 'é' → logprob: -7.559940338134766

Token 1543: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6017548441886902
    2. ' d' → logprob: -1.601754903793335
    3. 'de' → logprob: -2.226754903793335
    4. ' de' → logprob: -2.476754903793335
    5. 'n' → logprob: -4.351754665374756
    6. '_d' → logprob: -4.351754665374756
    7. '_' → logprob: -4.726754665374756
    8. ',' → logprob: -5.476754665374756
    9. ' n' → logprob: -5.476754665374756
    10. '_de' → logprob: -5.726754665374756

Token 1544: ' mains' (ID: 50381)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9048905968666077
    2. 'm' → logprob: -1.029890537261963
    3. 'angles' → logprob: -1.904890537261963
    4. 'do' → logprob: -3.529890537261963
    5. '```' → logprob: -3.779890537261963
    6. ' aigu' → logprob: -4.529890537261963
    7. '
' → logprob: -4.654890537261963
    8. 'de' → logprob: -5.529890537261963
    9. 'minutes' → logprob: -6.529890537261963
    10. 'main' → logprob: -6.529890537261963

Token 1545: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4077482521533966
    2. ',' → logprob: -2.032748222351074
    3. '_' → logprob: -2.907748222351074
    4. ')' → logprob: -3.407748222351074
    5. ' ,' → logprob: -3.657748222351074
    6. ' n' → logprob: -4.532748222351074
    7. 'def' → logprob: -4.907748222351074
    8. ' ' → logprob: -5.157748222351074
    9. ':' → logprob: -5.282748222351074
    10. ' (' → logprob: -5.407748222351074

Token 1546: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4601550102233887
    2. ''est' → logprob: -1.7101550102233887
    3. 'e' → logprob: -1.9601550102233887
    4. '_' → logprob: -2.8351550102233887
    5. ''' → logprob: -2.8351550102233887
    6. 'o' → logprob: -3.2101550102233887
    7. '_overlap' → logprob: -3.7101550102233887
    8. 's' → logprob: -3.8351550102233887
    9. ')' → logprob: -3.8351550102233887
    10. 'angles' → logprob: -4.085155010223389

Token 1547: ' super' (ID: 2539)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.102530598640442
    2. 'ég' → logprob: -1.227530598640442
    3. 'exact' → logprob: -2.3525304794311523
    4. ' ég' → logprob: -2.4775304794311523
    5. 'à' → logprob: -3.2275304794311523
    6. 'super' → logprob: -3.4775304794311523
    7. 'eg' → logprob: -3.4775304794311523
    8. 'che' → logprob: -3.6025304794311523
    9. 'over' → logprob: -3.9775304794311523
    10. 'sur' → logprob: -4.602530479431152

Token 1548: 'pos' (ID: 1103)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.458261102437973
    2. 'pos' → logprob: -1.3332611322402954
    3. 'posed' → logprob: -3.708261013031006
    4. '```' → logprob: -3.833261013031006
    5. 'ie' → logprob: -4.583261013031006
    6. 'pr' → logprob: -5.333261013031006
    7. 'posable' → logprob: -5.458261013031006
    8. 'p' → logprob: -5.583261013031006
    9. 'posé' → logprob: -5.583261013031006
    10. 'import' → logprob: -5.708261013031006

Token 1549: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.08380578458309174
    2. 'ées' → logprob: -3.208805799484253
    3. 'é' → logprob: -3.958805799484253
    4. 'e' → logprob: -4.583805561065674
    5. 'os' → logprob: -4.958805561065674
    6. 'ee' → logprob: -6.708805561065674
    7. 'ed' → logprob: -7.833805561065674
    8. 'pos' → logprob: -7.833805561065674
    9. 'pose' → logprob: -7.958805561065674
    10. 'ose' → logprob: -8.583806037902832

Token 1550: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07264009863138199
    2. '
' → logprob: -2.8226401805877686
    3. ',' → logprob: -5.3226399421691895
    4. '#' → logprob: -6.6976399421691895
    5. ',
' → logprob: -6.9476399421691895
    6. '    
' → logprob: -7.0726399421691895
    7. '```' → logprob: -7.1976399421691895
    8. '\n' → logprob: -8.072640419006348
    9. '  
' → logprob: -8.447640419006348
    10. ')' → logprob: -8.572640419006348

Token 1551: 'pas' (ID: 21122)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9106317162513733
    2. '#' → logprob: -1.1606316566467285
    3. 'ah' → logprob: -1.9106316566467285
    4. 'def' → logprob: -3.7856316566467285
    5. ')' → logprob: -4.0356316566467285
    6. ' True' → logprob: -4.2856316566467285
    7. '   ' → logprob: -4.2856316566467285
    8. 'angle' → logprob: -4.2856316566467285
    9. 'abs' → logprob: -4.5356316566467285
    10. '
' → logprob: -4.9106316566467285

Token 1552: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.444978803396225
    2. ' de' → logprob: -1.8199788331985474
    3. 'd' → logprob: -1.9449788331985474
    4. '   ' → logprob: -3.819978713989258
    5. ' d' → logprob: -4.069978713989258
    6. ' overlap' → logprob: -5.944978713989258
    7. '#' → logprob: -6.069978713989258
    8. 'over' → logprob: -6.319978713989258
    9. 'def' → logprob: -6.569978713989258
    10. '       ' → logprob: -6.694978713989258

Token 1553: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8624124526977539
    2. '_overlap' → logprob: -1.362412452697754
    3. ''espace' → logprob: -2.487412452697754
    4. ''' → logprob: -2.487412452697754
    5. '_' → logprob: -2.862412452697754
    6. 'é' → logprob: -3.737412452697754
    7. ''é' → logprob: -3.987412452697754
    8. ''esp' → logprob: -5.237412452697754
    9. ''e' → logprob: -5.362412452697754
    10. ''_' → logprob: -5.362412452697754

Token 1554: 'angles' (ID: 34011)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.0018484358442947268
    2. ' overlap' → logprob: -6.376848220825195
    3. '_overlap' → logprob: -10.251848220825195
    4. ' over' → logprob: -10.501848220825195
    5. ' overlaps' → logprob: -11.376848220825195
    6. '```' → logprob: -11.501848220825195
    7. '2' → logprob: -11.501848220825195
    8. ' overlapping' → logprob: -11.876848220825195
    9. 'de' → logprob: -12.001848220825195
    10. 'e' → logprob: -12.126848220825195

Token 1555: ' ég' (ID: 33150)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6303386092185974
    2. '   ' → logprob: -2.255338668823242
    3. ' ég' → logprob: -2.380338668823242
    4. '_' → logprob: -2.755338668823242
    5. '_overlap' → logprob: -2.755338668823242
    6. '=' → logprob: -4.005338668823242
    7. ' overlapping' → logprob: -4.130338668823242
    8. ' overlap' → logprob: -4.505338668823242
    9. ' n' → logprob: -4.630338668823242
    10. 'distinct' → logprob: -4.880338668823242

Token 1556: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.020385269075632095
    2. 'al' → logprob: -4.270385265350342
    3. 'ales' → logprob: -5.270385265350342
    4. 'ale' → logprob: -7.020385265350342
    5. '```' → logprob: -9.7703857421875
    6. 'als' → logprob: -10.2703857421875
    7. 'a' → logprob: -10.6453857421875
    8. '   ' → logprob: -12.0203857421875
    9. '=' → logprob: -12.1453857421875
    10. '_' → logprob: -12.3953857421875

Token 1557: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38919728994369507
    2. ')
' → logprob: -1.3891973495483398
    3. '   ' → logprob: -2.63919734954834
    4. '#' → logprob: -7.88919734954834
    5. ',' → logprob: -8.01419734954834
    6. '),' → logprob: -8.51419734954834
    7. ')
' → logprob: -8.76419734954834
    8. ' ' → logprob: -8.76419734954834
    9. ' )' → logprob: -9.01419734954834
    10. ' )
' → logprob: -9.13919734954834

Token 1558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011408114805817604
    2. '
' → logprob: -7.001140594482422
    3. '```' → logprob: -9.501140594482422
    4. 'num' → logprob: -10.001140594482422
    5. '    
' → logprob: -10.126140594482422
    6. 'def' → logprob: -10.626140594482422
    7. '#' → logprob: -11.501140594482422
    8. 'import' → logprob: -11.626140594482422
    9. '   ' → logprob: -12.376140594482422
    10. '       ' → logprob: -13.001140594482422

Token 1559: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007430415134876966
    2. '#' (adapté à ' #') → logprob: -7.2507429122924805
    3. 'num' → logprob: -11.37574291229248
    4. 'def' → logprob: -12.00074291229248
    5. '
' → logprob: -12.12574291229248
    6. '```' → logprob: -12.62574291229248
    7. ' #' → logprob: -13.25074291229248
    8. 'import' → logprob: -13.50074291229248
    9. '       ' → logprob: -14.37574291229248
    10. ' ' → logprob: -14.50074291229248

Token 1560: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008873366750776768
    2. '#' → logprob: -5.508873462677002
    3. 'num' → logprob: -6.633873462677002
    4. 'step' → logprob: -6.758873462677002
    5. 'def' → logprob: -7.008873462677002
    6. 't' → logprob: -8.133872985839844
    7. '
' → logprob: -8.258872985839844
    8. ' #' → logprob: -8.508872985839844
    9. ' step' → logprob: -8.883872985839844
    10. '```' → logprob: -9.258872985839844

Token 1561: '2' (ID: 17)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.2953627109527588
    2. '   ' → logprob: -1.4203627109527588
    3. 'as' → logprob: -1.9203627109527588
    4. 's' → logprob: -1.9203627109527588
    5. '#' → logprob: -2.045362710952759
    6. 't' → logprob: -3.670362710952759
    7. 'step' → logprob: -4.04536247253418
    8. 'den' → logprob: -5.29536247253418
    9. 'def' → logprob: -5.79536247253418
    10. 'angle' → logprob: -5.92036247253418

Token 1562: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029686735942959785
    2. '   ' → logprob: -4.15468692779541
    3. '#' → logprob: -4.65468692779541
    4. ' )' → logprob: -5.77968692779541
    5. ' #' → logprob: -7.65468692779541
    6. 'def' → logprob: -8.27968692779541
    7. '  ' → logprob: -10.15468692779541
    8. ')#' → logprob: -10.15468692779541
    9. '    ' → logprob: -10.52968692779541
    10. '
' → logprob: -10.65468692779541

Token 1563: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5249935984611511
    2. 'while' → logprob: -2.274993658065796
    3. 'equal' → logprob: -2.399993658065796
    4. 'True' → logprob: -2.649993658065796
    5. '   ' → logprob: -3.024993658065796
    6. 'def' → logprob: -3.524993658065796
    7. ' True' → logprob: -4.899993419647217
    8. 'import' → logprob: -4.899993419647217
    9. 'angle' → logprob: -5.024993419647217
    10. ' equal' → logprob: -5.149993419647217

Token 1564: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.429160237312317
    2. '3' → logprob: -1.554160237312317
    3. 'tro' → logprob: -1.929160237312317
    4. ' trois' → logprob: -2.0541601181030273
    5. 'angles' → logprob: -2.0541601181030273
    6. 'de' → logprob: -2.4291601181030273
    7. '#' → logprob: -3.6791601181030273
    8. ' angles' → logprob: -4.929160118103027
    9. '2' → logprob: -5.179160118103027
    10. ' deux' → logprob: -5.179160118103027

Token 1565: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.03966117277741432
    2. ' angles' → logprob: -3.539661169052124
    3. '#' → logprob: -5.789661407470703
    4. ' aigu' → logprob: -6.539661407470703
    5. ' ' → logprob: -6.664661407470703
    6. 'angle' → logprob: -6.789661407470703
    7. 'a' → logprob: -7.164661407470703
    8. ' ' → logprob: -7.789661407470703
    9. '_angles' → logprob: -8.414661407470703
    10. '   ' → logprob: -8.789661407470703

Token 1566: ' entre' (ID: 3853)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2140257358551025
    2. '_h' → logprob: -1.9640257358551025
    3. 'entre' → logprob: -2.7140257358551025
    4. '_' → logprob: -2.8390257358551025
    5. 's' → logprob: -2.8390257358551025
    6. ',' → logprob: -2.9640257358551025
    7. '   ' → logprob: -3.2140257358551025
    8. 'equal' → logprob: -3.2140257358551025
    9. ' ég' → logprob: -3.3390257358551025
    10. 'h' → logprob: -3.4640257358551025

Token 1567: ' la' (ID: 557)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.39921027421951294
    2. 'l' → logprob: -2.149210214614868
    3. 'ah' → logprob: -2.524210214614868
    4. 'h' → logprob: -3.149210214614868
    5. 'la' → logprob: -3.649210214614868
    6. ' as' → logprob: -4.274210453033447
    7. 'the' → logprob: -4.649210453033447
    8. ' l' → logprob: -5.274210453033447
    9. ' ah' → logprob: -5.274210453033447
    10. 's' → logprob: -5.274210453033447

Token 1568: ' main' (ID: 2758)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.4087945222854614
    2. 'main' → logprob: -1.6587945222854614
    3. 's' → logprob: -2.783794403076172
    4. 'a' → logprob: -3.533794403076172
    5. 'second' → logprob: -4.158794403076172
    6. 'as' → logprob: -4.533794403076172
    7. 'seconds' → logprob: -5.408794403076172
    8. ' secondes' → logprob: -5.408794403076172
    9. 'de' → logprob: -5.533794403076172
    10. 'm' → logprob: -5.783794403076172

Token 1569: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6128713488578796
    2. '_h' → logprob: -1.7378714084625244
    3. 'h' → logprob: -2.1128714084625244
    4. ',' → logprob: -3.2378714084625244
    5. 'heure' → logprob: -3.4878714084625244
    6. 'he' → logprob: -4.237871170043945
    7. '   ' → logprob: -4.487871170043945
    8. 'de' → logprob: -4.487871170043945
    9. '_s' → logprob: -4.487871170043945
    10. 'des' → logprob: -4.612871170043945

Token 1570: ' secondes' (ID: 109098)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.003149438416585326
    2. 'seconds' → logprob: -6.253149509429932
    3. ' secondes' → logprob: -6.753149509429932
    4. 's' → logprob: -10.878149032592773
    5. 'se' → logprob: -11.378149032592773
    6. ' second' → logprob: -11.878149032592773
    7. 'Second' → logprob: -12.128149032592773
    8. 'minutes' → logprob: -12.253149032592773
    9. '```' → logprob: -13.753149032592773
    10. '_second' → logprob: -13.753149032592773

Token 1571: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.5001809000968933
    2. ' and' → logprob: -1.875180959701538
    3. ',' → logprob: -2.250180959701538
    4. ' et' → logprob: -2.250180959701538
    5. 'and' → logprob: -3.625180959701538
    6. '_' → logprob: -7.875180721282959
    7. ',
' → logprob: -8.250181198120117
    8. '_et' → logprob: -8.250181198120117
    9. '   ' → logprob: -8.375181198120117
    10. '```' → logprob: -8.375181198120117

Token 1572: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.05012848973274231
    2. 'l' → logprob: -3.30012845993042
    3. 'la' → logprob: -5.05012845993042
    4. ' les' → logprob: -5.80012845993042
    5. '#' → logprob: -6.42512845993042
    6. 'de' → logprob: -8.425128936767578
    7. ' ' → logprob: -9.050128936767578
    8. '```' → logprob: -9.300128936767578
    9. 'une' → logprob: -9.800128936767578
    10. '   ' → logprob: -9.800128936767578

Token 1573: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0807546079158783
    2. 'aut' → logprob: -2.580754518508911
    3. ' deux' → logprob: -7.08075475692749
    4. '#' → logprob: -7.58075475692749
    5. ' ' → logprob: -8.705754280090332
    6. ' autres' → logprob: -9.080754280090332
    7. 'angles' → logprob: -9.830754280090332
    8. '```' → logprob: -10.580754280090332
    9. '   ' → logprob: -10.955754280090332
    10. 'other' → logprob: -11.205754280090332

Token 1574: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.1116657704114914
    2. ' autres' → logprob: -2.861665725708008
    3. 'angles' → logprob: -3.236665725708008
    4. '#' → logprob: -5.861665725708008
    5. 'other' → logprob: -5.986665725708008
    6. 'a' → logprob: -6.736665725708008
    7. ''autres' → logprob: -7.361665725708008
    8. ' angles' → logprob: -8.236665725708008
    9. ' ' → logprob: -8.486665725708008
    10. ' ' → logprob: -8.611665725708008

Token 1575: ' mains' (ID: 50381)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1196510791778564
    2. '   ' → logprob: -1.3696510791778564
    3. 'def' → logprob: -1.7446510791778564
    4. '_' → logprob: -2.2446510791778564
    5. 's' → logprob: -3.2446510791778564
    6. ':' → logprob: -4.744650840759277
    7. 'num' → logprob: -4.869650840759277
    8. 'conditions' → logprob: -5.244650840759277
    9. '_num' → logprob: -5.244650840759277
    10. ',' → logprob: -5.369650840759277

Token 1576: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023664459586143494
    2. ',' → logprob: -4.898664474487305
    3. ' =' → logprob: -5.523664474487305
    4. '
' → logprob: -6.148664474487305
    5. ':' → logprob: -6.398664474487305
    6. 'def' → logprob: -6.523664474487305
    7. '=' → logprob: -6.648664474487305
    8. '#' → logprob: -6.898664474487305
    9. 'num' → logprob: -7.148664474487305
    10. ' (' → logprob: -7.773664474487305

Token 1577: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.07250074297189713
    2. ' ég' → logprob: -2.822500705718994
    3. 'égal' → logprob: -4.572500705718994
    4. 'eg' → logprob: -8.947501182556152
    5. 'égalité' → logprob: -11.947501182556152
    6. ' eg' → logprob: -12.447501182556152
    7. 'equal' → logprob: -13.947501182556152
    8. 'Ég' → logprob: -14.072501182556152
    9. 'équ' → logprob: -14.322501182556152
    10. 'equals' → logprob: -14.572501182556152

Token 1578: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.009675227105617523
    2. 'ales' → logprob: -4.759675025939941
    3. 'als' → logprob: -7.134675025939941
    4. 'al' → logprob: -9.259675025939941
    5. '```' → logprob: -10.759675025939941
    6. 'a' → logprob: -11.009675025939941
    7. 'quals' → logprob: -11.259675025939941
    8. 'qu' → logprob: -11.384675025939941
    9. '_' → logprob: -11.634675025939941
    10. 'au' → logprob: -11.759675025939941

Token 1579: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28862884640693665
    2. '
' → logprob: -1.4136288166046143
    3. '    
' → logprob: -5.038629055023193
    4. 'def' → logprob: -7.663629055023193
    5. ',' → logprob: -9.538628578186035
    6. ':' → logprob: -9.538628578186035
    7. ',
' → logprob: -10.038628578186035
    8. '```' → logprob: -10.038628578186035
    9. '#' → logprob: -10.288628578186035
    10. ':
' → logprob: -10.538628578186035

Token 1580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008328551193699241
    2. 'step' → logprob: -7.500833034515381
    3. '```' → logprob: -8.750832557678223
    4. '
' → logprob: -10.000832557678223
    5. '    
' → logprob: -10.750832557678223
    6. 't' → logprob: -11.000832557678223
    7. 'def' → logprob: -11.375832557678223
    8. 'import' → logprob: -11.875832557678223
    9. 'num' → logprob: -12.750832557678223
    10. 'n' → logprob: -12.875832557678223

Token 1581: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4798215925693512
    2. 'step' → logprob: -0.9798215627670288
    3. ' step' → logprob: -5.979821681976318
    4. 'pas' → logprob: -7.104821681976318
    5. 'num' → logprob: -7.354821681976318
    6. '#' (adapté à ' #') → logprob: -7.354821681976318
    7. 't' → logprob: -7.479821681976318
    8. 'import' → logprob: -9.85482120513916
    9. '```' → logprob: -9.85482120513916
    10. '
' → logprob: -9.97982120513916

Token 1582: ' Transform' (ID: 27287)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.22421929240226746
    2. 'from' → logprob: -2.47421932220459
    3. '#' → logprob: -2.72421932220459
    4. 'max' → logprob: -3.47421932220459
    5. 'pas' → logprob: -5.59921932220459
    6. 'start' → logprob: -5.72421932220459
    7. 'import' → logprob: -5.72421932220459
    8. 'num' → logprob: -5.84921932220459
    9. 't' → logprob: -6.22421932220459
    10. 'time' → logprob: -7.09921932220459

Token 1583: 'e' (ID: 68)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5106185078620911
    2. 'e' → logprob: -1.6356184482574463
    3. 'num' → logprob: -2.1356184482574463
    4. 'total' → logprob: -2.8856184482574463
    5. 'er' → logprob: -4.135618686676025
    6. 'time' → logprob: -5.135618686676025
    7. 'h' → logprob: -5.885618686676025
    8. 't' → logprob: -6.510618686676025
    9. 'ation' → logprob: -6.885618686676025
    10. ' total' → logprob: -7.135618686676025

Token 1584: ' le' (ID: 505)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0537643432617188
    2. 'h' → logprob: -1.0537643432617188
    3. '   ' → logprob: -1.9287643432617188
    4. ' H' → logprob: -3.1787643432617188
    5. 't' → logprob: -3.4287643432617188
    6. ' h' → logprob: -3.6787643432617188
    7. 'num' → logprob: -3.9287643432617188
    8. 'time' → logprob: -5.428764343261719
    9. 'total' → logprob: -5.428764343261719
    10. '(H' → logprob: -5.428764343261719

Token 1585: ' temps' (ID: 11160)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.021016526967287064
    2. 'num' → logprob: -4.146016597747803
    3. '   ' → logprob: -6.771016597747803
    4. '#' → logprob: -6.771016597747803
    5. 'time' → logprob: -6.771016597747803
    6. 'H' → logprob: -7.146016597747803
    7. 't' → logprob: -8.771016120910645
    8. 'initial' → logprob: -8.771016120910645
    9. 'start' → logprob: -9.146016120910645
    10. 'current' → logprob: -9.521016120910645

Token 1586: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35118287801742554
    2. 'en' → logprob: -2.1011829376220703
    3. 'num' → logprob: -2.2261829376220703
    4. '(H' → logprob: -3.8511829376220703
    5. '(num' → logprob: -4.60118293762207
    6. ' en' → logprob: -4.60118293762207
    7. ',' → logprob: -5.35118293762207
    8. 'def' → logprob: -5.47618293762207
    9. 'start' → logprob: -5.60118293762207
    10. 'initial' → logprob: -5.85118293762207

Token 1587: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23192934691905975
    2. 'num' → logprob: -2.356929302215576
    3. 'en' → logprob: -2.731929302215576
    4. ',' → logprob: -4.106929302215576
    5. ' en' → logprob: -4.106929302215576
    6. '(num' → logprob: -4.731929302215576
    7. 'start' → logprob: -7.356929302215576
    8. 'def' → logprob: -7.356929302215576
    9. 'initial' → logprob: -7.606929302215576
    10. 't' → logprob: -7.856929302215576

Token 1588: ' fraction' (ID: 33763)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.046617306768894196
    2. 'total' → logprob: -3.296617269515991
    3. '(num' → logprob: -5.67161750793457
    4. 'h' → logprob: -6.79661750793457
    5. '(total' → logprob: -7.04661750793457
    6. 'numer' → logprob: -7.29661750793457
    7. 'fraction' → logprob: -7.54661750793457
    8. '#' → logprob: -7.92161750793457
    9. '(h' → logprob: -8.04661750793457
    10. 's' → logprob: -8.67161750793457

Token 1589: ' seconds' (ID: 12068)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.08928021788597107
    2. 'total' → logprob: -3.589280128479004
    3. 't' → logprob: -3.714280128479004
    4. 'h' → logprob: -3.964280128479004
    5. '   ' → logprob: -5.839280128479004
    6. 'time' → logprob: -5.964280128479004
    7. 'init' → logprob: -6.339280128479004
    8. 'n' → logprob: -6.339280128479004
    9. 'initial' → logprob: -6.339280128479004
    10. 'start' → logprob: -6.714280128479004

Token 1590: ' num' (ID: 2269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4068455994129181
    2. 'num' → logprob: -1.1568455696105957
    3. ',' → logprob: -4.906845569610596
    4. '(num' → logprob: -5.281845569610596
    5. 't' → logprob: -5.656845569610596
    6. 'total' → logprob: -7.281845569610596
    7. ',num' → logprob: -7.406845569610596
    8. 'n' → logprob: -7.531845569610596
    9. '_num' → logprob: -7.906845569610596
    10. 'initial' → logprob: -8.156846046447754

Token 1591: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32611528038978577
    2. '   ' → logprob: -2.076115369796753
    3. 'num' → logprob: -2.326115369796753
    4. 'total' → logprob: -3.951115369796753
    5. 't' → logprob: -4.576115131378174
    6. '0' → logprob: -4.826115131378174
    7. 'h' → logprob: -4.826115131378174
    8. 'initial' → logprob: -6.326115131378174
    9. 'init' → logprob: -6.451115131378174
    10. '=' → logprob: -6.576115131378174

Token 1592: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.3142017722129822
    2. '1' → logprob: -1.314201831817627
    3. ' den' → logprob: -7.064201831817627
    4. ' ' → logprob: -10.064201354980469
    5. 'd' → logprob: -11.314201354980469
    6. 'def' → logprob: -11.564201354980469
    7. '_den' → logprob: -12.064201354980469
    8. '  ' → logprob: -12.939201354980469
    9. '   ' → logprob: -13.064201354980469
    10. ',' → logprob: -13.064201354980469

Token 1593: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27686607837677
    2. 'num' → logprob: -1.77686607837677
    3. 'total' → logprob: -3.1518659591674805
    4. ',' → logprob: -4.1518659591674805
    5. 't' → logprob: -5.2768659591674805
    6. 'time' → logprob: -5.6518659591674805
    7. 'h' → logprob: -6.2768659591674805
    8. 'initial' → logprob: -6.7768659591674805
    9. 'n' → logprob: -7.2768659591674805
    10. 'start' → logprob: -7.5268659591674805

Token 1594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16942745447158813
    2. 'num' → logprob: -1.9194273948669434
    3. 'total' → logprob: -4.794427394866943
    4. ' num' → logprob: -8.044427871704102
    5. 'time' → logprob: -8.919427871704102
    6. 'initial' → logprob: -9.294427871704102
    7. 't' → logprob: -9.294427871704102
    8. ',' → logprob: -9.794427871704102
    9. ' total' → logprob: -9.794427871704102
    10. '```' → logprob: -10.169427871704102

Token 1595: ' t' (ID: 260)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0022618770599365
    2. 'start' → logprob: -1.3772618770599365
    3. 't' (adapté à ' t') → logprob: -1.5022618770599365
    4. 'total' → logprob: -2.0022618770599365
    5. 'initial' → logprob: -4.627262115478516
    6. 'init' → logprob: -5.502262115478516
    7. 'time' → logprob: -5.627262115478516
    8. 'h' → logprob: -6.127262115478516
    9. '   ' → logprob: -6.377262115478516
    10. 'current' → logprob: -7.252262115478516

Token 1596: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.031339507550001144
    2. 'num' → logprob: -4.031339645385742
    3. ',' → logprob: -4.906339645385742
    4. '0' → logprob: -6.281339645385742
    5. '=' → logprob: -6.281339645385742
    6. ' =' → logprob: -6.406339645385742
    7. ',num' → logprob: -8.656339645385742
    8. '=num' → logprob: -10.031339645385742
    9. 'Num' → logprob: -10.906339645385742
    10. '_' → logprob: -11.031339645385742

Token 1597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20219282805919647
    2. '=' → logprob: -1.827192783355713
    3. ' =' → logprob: -3.827192783355713
    4. ' ,' → logprob: -8.327193260192871
    5. ',h' → logprob: -9.577193260192871
    6. '=h' → logprob: -9.702193260192871
    7. '=t' → logprob: -11.202193260192871
    8. 't' → logprob: -11.702193260192871
    9. 's' → logprob: -11.702193260192871
    10. ',t' → logprob: -11.952193260192871

Token 1598: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10047990828752518
    2. '1' → logprob: -2.3504798412323
    3. ' t' → logprob: -8.600480079650879
    4. ' ' → logprob: -9.475480079650879
    5. '   ' → logprob: -12.225480079650879
    6. '=' → logprob: -12.975480079650879
    7. '0' → logprob: -13.975480079650879
    8. '`t' → logprob: -14.350480079650879
    9. '```' → logprob: -14.725480079650879
    10. ' =' → logprob: -14.975480079650879

Token 1599: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.002155018737539649
    2. 'den' → logprob: -6.87715482711792
    3. 't' → logprob: -7.50215482711792
    4. '_t' → logprob: -7.62715482711792
    5. '_DEN' → logprob: -11.002155303955078
    6. '_d' → logprob: -11.002155303955078
    7. '_dem' → logprob: -11.377155303955078
    8. ' t' → logprob: -12.127155303955078
    9. '_num' → logprob: -12.377155303955078
    10. ',_' → logprob: -12.627155303955078

Token 1600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07016017287969589
    2. ' =' → logprob: -2.695160150527954
    3. ',' → logprob: -8.445159912109375
    4. '=s' → logprob: -12.570159912109375
    5. '=t' → logprob: -13.195159912109375
    6. '=h' → logprob: -14.070159912109375
    7. '=f' → logprob: -14.445159912109375
    8. '=
' → logprob: -14.695159912109375
    9. ' ,' → logprob: -15.570159912109375
    10. ' ' → logprob: -16.070159912109375

Token 1601: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.05626591295003891
    2. 'h' → logprob: -3.0562658309936523
    3. ' time' → logprob: -5.056265830993652
    4. ' h' → logprob: -7.181265830993652
    5. '   ' → logprob: -8.306265830993652
    6. 'frac' → logprob: -8.931265830993652
    7. 'fraction' → logprob: -9.681265830993652
    8. '(time' → logprob: -11.306265830993652
    9. 't' → logprob: -11.306265830993652
    10. ' ' → logprob: -11.431265830993652

Token 1602: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.5213274309644476e-05
    2. 'to' → logprob: -12.000015258789062
    3. '_' → logprob: -12.750015258789062
    4. 'To' → logprob: -13.125015258789062
    5. ' _' → logprob: -14.000015258789062
    6. '   ' → logprob: -14.500015258789062
    7. '_,' → logprob: -14.625015258789062
    8. ',' → logprob: -14.875015258789062
    9. 't' → logprob: -15.000015258789062
    10. ',_' → logprob: -15.250015258789062

Token 1603: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.011057134717702866
    2. 'fraction' → logprob: -4.511056900024414
    3. '_seconds' → logprob: -12.011056900024414
    4. ' fraction' → logprob: -14.011056900024414
    5. 'Fraction' → logprob: -14.261056900024414
    6. 'int' → logprob: -14.386056900024414
    7. '_integer' → logprob: -15.011056900024414
    8. '_int' → logprob: -15.261056900024414
    9. 't' → logprob: -15.761056900024414
    10. ' fractional' → logprob: -15.761056900024414

Token 1604: 'al' (ID: 280)
  Prédit: '_fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.005804836750030518
    2. 'fraction' → logprob: -5.255805015563965
    3. '_seconds' → logprob: -7.505805015563965
    4. '_frac' → logprob: -11.130805015563965
    5. ' fractional' → logprob: -12.880805015563965
    6. 't' → logprob: -13.630805015563965
    7. 'Fraction' → logprob: -13.755805015563965
    8. '_factor' → logprob: -15.005805015563965
    9. '_num' → logprob: -15.130805015563965
    10. 'seconds' → logprob: -15.880805015563965

Token 1605: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.00012701898231171072
    2. 'seconds' → logprob: -9.000126838684082
    3. 's' → logprob: -13.000126838684082
    4. 't' → logprob: -13.750126838684082
    5. '```' → logprob: -16.7501277923584
    6. '_s' → logprob: -17.3751277923584
    7. '_second' → logprob: -17.8751277923584
    8. ' seconds' → logprob: -18.1251277923584
    9. 'Seconds' → logprob: -18.1251277923584
    10. '
' → logprob: -18.3751277923584

Token 1606: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.7133641196996905e-05
    2. 'H' → logprob: -10.62502670288086
    3. '(' → logprob: -12.87502670288086
    4. '
' → logprob: -16.37502670288086
    5. '(
' → logprob: -16.37502670288086
    6. '```' → logprob: -17.37502670288086
    7. '(T' → logprob: -18.62502670288086
    8. 't' → logprob: -18.75002670288086
    9. ',H' → logprob: -18.87502670288086
    10. '   ' → logprob: -19.00002670288086

Token 1607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011760921915993094
    2. ',H' → logprob: -9.750117301940918
    3. ' ,' → logprob: -9.875117301940918
    4. ',
' → logprob: -12.750117301940918
    5. '   ' → logprob: -13.125117301940918
    6. '(H' → logprob: -13.750117301940918
    7. ',h' → logprob: -14.375117301940918
    8. ',t' → logprob: -14.500117301940918
    9. 'H' → logprob: -15.750117301940918
    10. 't' → logprob: -16.125118255615234

Token 1608: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.6240566083070007e-06
    2. ' h' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '	h' → logprob: -19.625001907348633
    5. '0' → logprob: -21.125001907348633
    6. '```' → logprob: -21.375001907348633
    7. '_h' → logprob: -21.500001907348633
    8. '
' → logprob: -22.000001907348633
    9. '"h' → logprob: -22.125001907348633
    10. '<h' → logprob: -22.250001907348633

Token 1609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002957783581223339
    2. 'h' → logprob: -8.625295639038086
    3. 'o' → logprob: -9.250295639038086
    4. '   ' → logprob: -11.750295639038086
    5. ',' → logprob: -12.250295639038086
    6. '_' → logprob: -12.250295639038086
    7. '       ' → logprob: -14.375295639038086
    8. 'u' → logprob: -14.750295639038086
    9. ' ' → logprob: -14.875295639038086
    10. 'z' → logprob: -15.625295639038086

Token 1610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021903318702243268
    2. ' ,' → logprob: -8.875219345092773
    3. ',m' → logprob: -9.625219345092773
    4. ',
' → logprob: -11.750219345092773
    5. '   ' → logprob: -13.625219345092773
    6. ',t' → logprob: -13.875219345092773
    7. ')' → logprob: -13.875219345092773
    8. 'm' → logprob: -14.500219345092773
    9. '‌,' → logprob: -15.500219345092773
    10. '+' → logprob: -15.750219345092773

Token 1611: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023245712742209435
    2. ' m' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.648244857788086
    4. '    ' → logprob: -17.148244857788086
    5. '0' → logprob: -17.398244857788086
    6. ' ' → logprob: -17.398244857788086
    7. '   ' → logprob: -18.273244857788086
    8. ',' → logprob: -18.523244857788086
    9. '```' → logprob: -18.773244857788086
    10. '  ' → logprob: -19.148244857788086

Token 1612: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07976698130369186
    2. ',' → logprob: -2.5797669887542725
    3. '_,' → logprob: -7.204766750335693
    4. '_' → logprob: -10.954767227172852
    5. ',
' → logprob: -10.954767227172852
    6. 'm' → logprob: -10.954767227172852
    7. ' ,' → logprob: -11.079767227172852
    8. '_num' → logprob: -11.329767227172852
    9. ',m' → logprob: -11.454767227172852
    10. '   ' → logprob: -12.079767227172852

Token 1613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011148543562740088
    2. '+' → logprob: -7.251114845275879
    3. ' ,' → logprob: -8.376114845275879
    4. ' +' → logprob: -9.001114845275879
    5. ',
' → logprob: -10.626114845275879
    6. '+,' → logprob: -11.376114845275879
    7. ')' → logprob: -12.001114845275879
    8. '   ' → logprob: -12.876114845275879
    9. '),' → logprob: -14.251114845275879
    10. '```' → logprob: -14.251114845275879

Token 1614: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0046227299608290195
    2. ' s' → logprob: -5.379622936248779
    3. '0' → logprob: -13.254622459411621
    4. '   ' → logprob: -15.504622459411621
    5. ' ' → logprob: -15.629622459411621
    6. 'int' → logprob: -16.379623413085938
    7. ' ' → logprob: -16.504623413085938
    8. '  ' → logprob: -16.879623413085938
    9. '    ' → logprob: -16.879623413085938
    10. '       ' → logprob: -17.379623413085938

Token 1615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007575511932373047
    2. '_num' → logprob: -5.132575511932373
    3. ',' → logprob: -6.507575511932373
    4. '_,' → logprob: -10.132575988769531
    5. 'num' → logprob: -10.757575988769531
    6. '_' → logprob: -11.007575988769531
    7. '
' → logprob: -11.007575988769531
    8. 's' → logprob: -11.382575988769531
    9. ' ,' → logprob: -11.882575988769531
    10. ',_' → logprob: -11.882575988769531

Token 1616: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002422779070911929
    2. '   ' → logprob: -8.875242233276367
    3. ')
' → logprob: -9.750242233276367
    4. ',' → logprob: -10.375242233276367
    5. ' )' → logprob: -12.000242233276367
    6. '+' → logprob: -12.750242233276367
    7. '),' → logprob: -13.625242233276367
    8. ')+' → logprob: -15.000242233276367
    9. '<|end|>' → logprob: -15.000242233276367
    10. ')#' → logprob: -15.375242233276367

Token 1617: '   ' (ID: 271)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5869699716567993
    2. '   ' → logprob: -0.8369699716567993
    3. '```' → logprob: -5.08696985244751
    4. 'while' → logprob: -5.58696985244751
    5. 't' → logprob: -7.58696985244751
    6. 'pas' → logprob: -9.211970329284668
    7. 'steps' → logprob: -9.336970329284668
    8. ' step' → logprob: -9.836970329284668
    9. '
' → logprob: -9.961970329284668
    10. '    
' → logprob: -10.086970329284668

Token 1618: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.003434834536164999
    2. 'max' → logprob: -6.628434658050537
    3. 'pas' → logprob: -7.003434658050537
    4. '   ' → logprob: -7.753434658050537
    5. '#' (adapté à ' #') → logprob: -8.003435134887695
    6. 'while' → logprob: -8.378435134887695
    7. 't' → logprob: -9.753435134887695
    8. 'increment' → logprob: -10.128435134887695
    9. 'import' → logprob: -10.253435134887695
    10. 'from' → logprob: -10.628435134887695

Token 1619: ' Dur' (ID: 20386)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.006949799135327339
    2. '#' → logprob: -5.7569499015808105
    3. 'pas' → logprob: -6.0069499015808105
    4. 'max' → logprob: -7.0069499015808105
    5. 'increment' → logprob: -9.006949424743652
    6. 'STEP' → logprob: -9.131949424743652
    7. 't' → logprob: -9.881949424743652
    8. 'from' → logprob: -10.256949424743652
    9. 'while' → logprob: -10.381949424743652
    10. 'MAX' → logprob: -11.131949424743652

Token 1620: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3371112644672394
    2. 'e' → logprob: -2.212111234664917
    3. 'ation' → logprob: -2.337111234664917
    4. 'ee' → logprob: -2.587111234664917
    5. 'max' → logprob: -6.087111473083496
    6. '   ' → logprob: -7.462111473083496
    7. '_e' → logprob: -7.587111473083496
    8. '#' → logprob: -7.837111473083496
    9. 'step' → logprob: -8.212111473083496
    10. 'é' → logprob: -8.837111473083496

Token 1621: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2065304070711136
    2. 'max' → logprob: -2.5815303325653076
    3. ' =' → logprob: -3.5815303325653076
    4. '_max' → logprob: -3.9565303325653076
    5. '_step' → logprob: -4.456530570983887
    6. ',' → logprob: -4.456530570983887
    7. 'total' → logprob: -4.706530570983887
    8. '=' → logprob: -4.831530570983887
    9. '_total' → logprob: -4.831530570983887
    10. 'step' → logprob: -4.831530570983887

Token 1622: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0658944845199585
    2. 'max' → logprob: -1.0658944845199585
    3. ' =' → logprob: -2.190894603729248
    4. '=' → logprob: -2.565894603729248
    5. '   ' → logprob: -3.190894603729248
    6. 'full' → logprob: -3.440894603729248
    7. '360' → logprob: -4.440894603729248
    8. 'total' → logprob: -4.565894603729248
    9. '_max' → logprob: -4.815894603729248
    10. '_full' → logprob: -5.815894603729248

Token 1623: ' tester' (ID: 51819)
  Prédit: 'tester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tester' → logprob: -0.7408111691474915
    2. 'chercher' → logprob: -0.9908111691474915
    3. 'expl' → logprob: -2.3658111095428467
    4. 'v' → logprob: -3.4908111095428467
    5. 'checker' → logprob: -4.865811347961426
    6. 'an' → logprob: -5.365811347961426
    7. 'exam' → logprob: -5.990811347961426
    8. 'cons' → logprob: -6.115811347961426
    9. 'consider' → logprob: -6.490811347961426
    10. 'aj' → logprob: -6.865811347961426

Token 1624: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9366765022277832
    2. 'max' → logprob: -1.1866765022277832
    3. ',' → logprob: -1.4366765022277832
    4. 'full' → logprob: -3.186676502227783
    5. 'total' → logprob: -4.811676502227783
    6. 't' → logprob: -5.561676502227783
    7. 'H' → logprob: -6.186676502227783
    8. ' max' → logprob: -6.436676502227783
    9. ' full' → logprob: -6.936676502227783
    10. 'step' → logprob: -7.186676502227783

Token 1625: ' une' (ID: 2463)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6832390427589417
    2. 'full' → logprob: -1.1832389831542969
    3. 'max' → logprob: -1.9332389831542969
    4. ' full' → logprob: -4.183238983154297
    5. '360' → logprob: -4.808238983154297
    6. ' max' → logprob: -5.433238983154297
    7. ' H' → logprob: -5.558238983154297
    8. 't' → logprob: -5.558238983154297
    9. 'end' → logprob: -5.808238983154297
    10. '   ' → logprob: -6.058238983154297

Token 1626: ' révolution' (ID: 103160)
  Prédit: 'heure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heure' → logprob: -0.19018909335136414
    2. 'H' → logprob: -2.9401891231536865
    3. ' journée' → logprob: -3.4401891231536865
    4. ' heure' → logprob: -3.5651891231536865
    5. 'cycle' → logprob: -4.065188884735107
    6. 'tour' → logprob: -5.190188884735107
    7. '360' → logprob: -5.315188884735107
    8. 'he' → logprob: -5.690188884735107
    9. 'journ' → logprob: -5.690188884735107
    10. 't' → logprob: -5.940188884735107

Token 1627: ' complète' (ID: 75660)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3172013759613037
    2. ' (' → logprob: -1.3172013759613037
    3. '(H' → logprob: -1.8172013759613037
    4. ' complète' → logprob: -2.5672013759613037
    5. '360' → logprob: -2.9422013759613037
    6. ',' → logprob: -2.9422013759613037
    7. '(' → logprob: -3.4422013759613037
    8. ' of' → logprob: -4.192201614379883
    9. 'H' → logprob: -4.192201614379883
    10. ' completa' → logprob: -4.692201614379883

Token 1628: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05152461305260658
    2. ',' → logprob: -3.0515246391296387
    3. ' (' → logprob: -7.426524639129639
    4. '(H' → logprob: -7.551524639129639
    5. ' =' → logprob: -7.801524639129639
    6. '(' → logprob: -8.42652416229248
    7. '#' → logprob: -8.55152416229248
    8. '
' → logprob: -8.67652416229248
    9. ' *' → logprob: -9.05152416229248
    10. 'max' → logprob: -9.17652416229248

Token 1629: ' système' (ID: 30034)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.13125021755695343
    2. 'hor' → logprob: -2.1312501430511475
    3. 'c' → logprob: -6.506250381469727
    4. 'clock' → logprob: -6.631250381469727
    5. '12' → logprob: -7.006250381469727
    6. ' H' → logprob: -8.506250381469727
    7. '360' → logprob: -9.131250381469727
    8. 'Hor' → logprob: -10.131250381469727
    9. ' hor' → logprob: -10.506250381469727
    10. '```' → logprob: -10.506250381469727

Token 1630: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038234155625104904
    2. 'max' → logprob: -4.038234233856201
    3. ',' → logprob: -4.663234233856201
    4. ' max' → logprob: -5.288234233856201
    5. '
' → logprob: -6.788234233856201
    6. ' (' → logprob: -7.038234233856201
    7. 'full' → logprob: -7.163234233856201
    8. ' full' → logprob: -7.288234233856201
    9. 'total' → logprob: -7.538234233856201
    10. ' =' → logprob: -8.413233757019043

Token 1631: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0010180408135056496
    2. ' H' → logprob: -8.001017570495605
    3. '360' → logprob: -8.251017570495605
    4. '   ' → logprob: -8.876017570495605
    5. 't' → logprob: -9.251017570495605
    6. ')' → logprob: -9.626017570495605
    7. 'num' → logprob: -10.501017570495605
    8. '```' → logprob: -10.626017570495605
    9. 'full' → logprob: -11.251017570495605
    10. ' ' → logprob: -11.376017570495605

Token 1632: ' heures' (ID: 34311)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6352353096008301
    2. '*' → logprob: -0.7602353096008301
    3. ')' → logprob: -6.76023530960083
    4. ',' → logprob: -6.88523530960083
    5. '360' → logprob: -9.260234832763672
    6. '   ' → logprob: -9.635234832763672
    7. ' ' → logprob: -10.010234832763672
    8. '),' → logprob: -10.260234832763672
    9. 'import' → logprob: -10.760234832763672
    10. ')
' → logprob: -11.010234832763672

Token 1633: ')
' (ID: 446)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2876819372177124
    2. ' *' → logprob: -1.6626819372177124
    3. ',' → logprob: -3.412682056427002
    4. ')' → logprob: -4.287682056427002
    5. '   ' → logprob: -4.412682056427002
    6. '+' → logprob: -7.162682056427002
    7. ')*' → logprob: -8.787681579589844
    8. ' +' → logprob: -9.162681579589844
    9. '```' → logprob: -9.162681579589844
    10. ')
' → logprob: -9.287681579589844

Token 1634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04014008864760399
    2. 'max' → logprob: -3.540140151977539
    3. '
' → logprob: -5.290140151977539
    4. ' max' → logprob: -5.665140151977539
    5. ' full' → logprob: -7.790140151977539
    6. 'full' → logprob: -8.165140151977539
    7. ',' → logprob: -8.540140151977539
    8. 'total' → logprob: -8.540140151977539
    9. 't' → logprob: -8.665140151977539
    10. '```' → logprob: -8.790140151977539

Token 1635: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014711168594658375
    2. 'full' → logprob: -5.264711380004883
    3. 't' → logprob: -5.389711380004883
    4. ' max' → logprob: -5.514711380004883
    5. 'limit' → logprob: -8.139711380004883
    6. 'total' → logprob: -8.389711380004883
    7. ' full' → logprob: -9.389711380004883
    8. '   ' → logprob: -9.764711380004883
    9. 'end' → logprob: -9.889711380004883
    10. 'T' → logprob: -10.139711380004883

Token 1636: ' limite' (ID: 48939)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004620353225618601
    2. 'full' → logprob: -6.379620552062988
    3. '   ' → logprob: -6.629620552062988
    4. 't' → logprob: -7.254620552062988
    5. 'limit' → logprob: -8.379620552062988
    6. 'end' → logprob: -8.504620552062988
    7. 'total' → logprob: -8.879620552062988
    8. 'T' → logprob: -9.129620552062988
    9. ' max' → logprob: -9.129620552062988
    10. 'duration' → logprob: -10.004620552062988

Token 1637: ' =' (ID: 314)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.41743209958076477
    2. ' =' → logprob: -1.5424320697784424
    3. '_max' → logprob: -2.6674320697784424
    4. '=' → logprob: -4.0424323081970215
    5. '_time' → logprob: -4.0424323081970215
    6. '_seconds' → logprob: -5.0424323081970215
    7. '_sec' → logprob: -5.5424323081970215
    8. '_duration' → logprob: -6.1674323081970215
    9. '_limit' → logprob: -6.2924323081970215
    10. '_total' → logprob: -6.4174323081970215

Token 1638: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003290288441348821
    2. '(H' → logprob: -8.75032901763916
    3. '(' → logprob: -9.00032901763916
    4. ' H' → logprob: -10.37532901763916
    5. 'time' → logprob: -11.50032901763916
    6. '360' → logprob: -12.87532901763916
    7. ' (' → logprob: -13.87532901763916
    8. 't' → logprob: -13.87532901763916
    9. 'full' → logprob: -15.12532901763916
    10. '1' → logprob: -15.75032901763916

Token 1639: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28166764974594116
    2. ' *' → logprob: -1.406667709350586
    3. '360' → logprob: -7.906667709350586
    4. '   ' → logprob: -9.906667709350586
    5. ' ' → logprob: -10.156667709350586
    6. 'import' → logprob: -11.281667709350586
    7. ' ' → logprob: -11.531667709350586
    8. '\' → logprob: -11.531667709350586
    9. ',' → logprob: -12.156667709350586
    10. '```' → logprob: -12.906667709350586

Token 1640: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.25
    4. '366' → logprob: -17.25
    5. '36' → logprob: -17.75
    6. '359' → logprob: -17.875
    7. '   ' → logprob: -18.0
    8. '60' → logprob: -18.625
    9. '361' → logprob: -18.75
    10. '  ' → logprob: -18.875

Token 1641: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '000' → logprob: -13.625001907348633
    3. '00' → logprob: -15.625001907348633
    4. ' ' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '০' → logprob: -17.250001907348633
    7. '۰' → logprob: -17.875001907348633
    8. '०' → logprob: -18.000001907348633
    9. '
' → logprob: -18.375001907348633
    10. '```' → logprob: -18.750001907348633

Token 1642: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2677218019962311
    2. ',' → logprob: -1.8927217721939087
    3. '*' → logprob: -3.0177218914031982
    4. '
' → logprob: -4.517721652984619
    5. ' *' → logprob: -4.767721652984619
    6. '```' → logprob: -4.767721652984619
    7. ')' → logprob: -6.642721652984619
    8. '#' → logprob: -6.892721652984619
    9. '*num' → logprob: -6.892721652984619
    10. 'num' → logprob: -7.142721652984619

Token 1643: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009354636073112488
    2. '
' → logprob: -5.134354591369629
    3. 'limit' → logprob: -5.884354591369629
    4. '    
' → logprob: -8.259354591369629
    5. '```' → logprob: -8.509354591369629
    6. 'max' → logprob: -9.509354591369629
    7. ' limit' → logprob: -10.259354591369629
    8. 'step' → logprob: -10.759354591369629
    9. ',' → logprob: -11.009354591369629
    10. '``' → logprob: -11.884354591369629

Token 1644: '   ' (ID: 271)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.43578094244003296
    2. 'step' → logprob: -1.4357810020446777
    3. '   ' → logprob: -2.1857810020446777
    4. 'max' → logprob: -6.560781002044678
    5. 'lim' → logprob: -6.685781002044678
    6. '```' → logprob: -8.68578052520752
    7. 't' → logprob: -10.43578052520752
    8. 'steps' → logprob: -11.43578052520752
    9. '``' → logprob: -12.06078052520752
    10. '
' → logprob: -12.31078052520752

Token 1645: ' #' (ID: 1069)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.21378982067108154
    2. 'step' → logprob: -1.7137898206710815
    3. 'lim' → logprob: -4.463789939880371
    4. 'max' → logprob: -7.338789939880371
    5. '   ' → logprob: -9.463789939880371
    6. 'full' → logprob: -11.713789939880371
    7. 't' → logprob: -11.838789939880371
    8. 'pas' → logprob: -11.963789939880371
    9. 'increment' → logprob: -11.963789939880371
    10. 'while' → logprob: -12.088789939880371

Token 1646: ' Pas' (ID: 18323)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.02517414651811123
    2. 'limit' → logprob: -3.900174140930176
    3. 'lim' → logprob: -6.150174140930176
    4. 'pas' → logprob: -6.650174140930176
    5. 'max' → logprob: -7.525174140930176
    6. 'from' → logprob: -8.650174140930176
    7. '#' → logprob: -8.775174140930176
    8. 'increment' → logprob: -9.525174140930176
    9. 'time' → logprob: -9.650174140930176
    10. 't' → logprob: -10.025174140930176

Token 1647: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8854107856750488
    2. ' =' → logprob: -1.1354107856750488
    3. 'step' → logprob: -1.8854107856750488
    4. '=' → logprob: -2.760410785675049
    5. '_step' → logprob: -3.385410785675049
    6. 'pas' → logprob: -4.760410785675049
    7. 'num' → logprob: -5.885410785675049
    8. ' step' → logprob: -5.885410785675049
    9. '_num' → logprob: -6.760410785675049
    10. ',' → logprob: -7.135410785675049

Token 1648: ' recherche' (ID: 24975)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10861576348543167
    2. 'step' → logprob: -2.7336158752441406
    3. 'pas' → logprob: -4.233615875244141
    4. 't' → logprob: -4.733615875244141
    5. '100' → logprob: -5.483615875244141
    6. 'num' → logprob: -5.608615875244141
    7. 'test' → logprob: -6.358615875244141
    8. ' ' → logprob: -6.733615875244141
    9. 'seconds' → logprob: -7.358615875244141
    10. 'sec' → logprob: -7.858615875244141

Token 1649: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2126859426498413
    2. ' =' → logprob: -1.9626859426498413
    3. '=' → logprob: -4.087686061859131
    4. ',' → logprob: -4.962686061859131
    5. 'step' → logprob: -5.212686061859131
    6. ' step' → logprob: -5.337686061859131
    7. '    
' → logprob: -5.587686061859131
    8. ' #' → logprob: -5.712686061859131
    9. '#' → logprob: -6.462686061859131
    10. 'num' → logprob: -6.587686061859131

Token 1650: ' pour' (ID: 1930)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.8987590074539185
    2. 'step' → logprob: -1.2737590074539185
    3. '   ' → logprob: -1.8987590074539185
    4. '1' → logprob: -2.023758888244629
    5. ' ' → logprob: -4.148758888244629
    6. 'pas' → logprob: -5.023758888244629
    7. ' pas' → logprob: -5.523758888244629
    8. 'pass' → logprob: -6.398758888244629
    9. ' pass' → logprob: -7.648758888244629
    10. ' ' → logprob: -7.773758888244629

Token 1651: ' la' (ID: 557)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.48087334632873535
    2. 'pas' → logprob: -1.7308733463287354
    3. 'i' → logprob: -2.8558733463287354
    4. 't' → logprob: -2.8558733463287354
    5. 'num' → logprob: -3.2308733463287354
    6. '1' → logprob: -3.6058733463287354
    7. '_step' → logprob: -5.230873107910156
    8. '#' → logprob: -5.605873107910156
    9. ' step' → logprob: -5.980873107910156
    10. '_' → logprob: -5.980873107910156

Token 1652: ' haute' (ID: 49646)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.6475569009780884
    2. '#' → logprob: -1.8975569009780884
    3. 'dé' → logprob: -2.272556781768799
    4. 'pr' → logprob: -2.397556781768799
    5. 'suite' → logprob: -2.522556781768799
    6. 'pet' → logprob: -2.772556781768799
    7. 'precision' → logprob: -3.147556781768799
    8. 'start' → logprob: -3.647556781768799
    9. 'part' → logprob: -3.772556781768799
    10. 'fraction' → logprob: -3.772556781768799

Token 1653: ' précision' (ID: 130591)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.10384271293878555
    2. ' précision' → logprob: -2.7288427352905273
    3. 'precision' → logprob: -3.6038427352905273
    4. 'prec' → logprob: -5.853842735290527
    5. 'pré' → logprob: -6.853842735290527
    6. 'rés' → logprob: -7.228842735290527
    7. '_pr' → logprob: -8.228842735290527
    8. '-pr' → logprob: -8.478842735290527
    9. '_precision' → logprob: -8.478842735290527
    10. '-' → logprob: -8.853842735290527

Token 1654: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9380093216896057
    2. 'step' → logprob: -0.9380093216896057
    3. 't' → logprob: -3.063009262084961
    4. ' step' → logprob: -3.188009262084961
    5. ',' → logprob: -3.313009262084961
    6. 'pas' → logprob: -3.563009262084961
    7. '1' → logprob: -3.813009262084961
    8. '0' → logprob: -4.813009262084961
    9. '#' → logprob: -4.938009262084961
    10. '
' → logprob: -5.063009262084961

Token 1655: ' essayer' (ID: 92713)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.3034808039665222
    2. ' step' → logprob: -1.928480863571167
    3. '1' → logprob: -2.553480863571167
    4. '   ' → logprob: -4.428480625152588
    5. ' ' → logprob: -4.553480625152588
    6. 'pas' → logprob: -4.553480625152588
    7. ' pas' → logprob: -6.928480625152588
    8. 't' → logprob: -6.928480625152588
    9. 'num' → logprob: -6.928480625152588
    10. 'delta' → logprob: -7.053480625152588

Token 1656: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02283901907503605
    2. '   ' → logprob: -4.397839069366455
    3. 't' → logprob: -4.897839069366455
    4. 'num' → logprob: -6.397839069366455
    5. '100' → logprob: -7.647839069366455
    6. '0' → logprob: -8.397838592529297
    7. '10' → logprob: -8.647838592529297
    8. ' ' → logprob: -9.272838592529297
    9. 'step' → logprob: -9.772838592529297
    10. ' t' → logprob: -10.397838592529297

Token 1657: ' trouver' (ID: 23195)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.733873724937439
    2. 'fraction' → logprob: -1.733873724937439
    3. '10' → logprob: -1.983873724937439
    4. '0' → logprob: -2.4838738441467285
    5. 'continue' → logprob: -3.7338738441467285
    6. '100' → logprob: -3.8588738441467285
    7. 'num' → logprob: -4.3588738441467285
    8. 'int' → logprob: -4.4838738441467285
    9. '#' → logprob: -4.7338738441467285
    10. '...' → logprob: -5.2338738441467285

Token 1658: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03974480554461479
    2. 't' → logprob: -3.6647448539733887
    3. '(' → logprob: -5.164744853973389
    4. 'num' → logprob: -6.039744853973389
    5. ',' → logprob: -6.164744853973389
    6. '0' → logprob: -7.164744853973389
    7. ' (' → logprob: -7.664744853973389
    8. '#' → logprob: -7.914744853973389
    9. ' ' → logprob: -7.914744853973389
    10. '   ' → logprob: -8.03974437713623

Token 1659: ' fraction' (ID: 33763)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9735077619552612
    2. 'step' → logprob: -1.7235077619552612
    3. 'num' → logprob: -2.348507881164551
    4. 'pas' → logprob: -2.348507881164551
    5. ' next' → logprob: -3.098507881164551
    6. '#' → logprob: -3.223507881164551
    7. ' step' → logprob: -3.223507881164551
    8. 'token' → logprob: -3.598507881164551
    9. 'increment' → logprob: -4.223507881164551
    10. '1' → logprob: -4.223507881164551

Token 1660: ' exacte' (ID: 188756)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.5379314422607422
    2. '#' → logprob: -1.7879314422607422
    3. '   ' → logprob: -1.7879314422607422
    4. '_num' → logprob: -1.9129314422607422
    5. '_step' → logprob: -2.162931442260742
    6. 'step' → logprob: -2.662931442260742
    7. 't' → logprob: -2.787931442260742
    8. '1' → logprob: -4.037931442260742
    9. 'n' → logprob: -5.287931442260742
    10. 'import' → logprob: -5.412931442260742

Token 1661: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038297947496175766
    2. '#' → logprob: -4.2882981300354
    3. '
' → logprob: -4.9132981300354
    4. ',' → logprob: -5.4132981300354
    5. ' #' → logprob: -5.5382981300354
    6. ' step' → logprob: -6.0382981300354
    7. '    
' → logprob: -6.7882981300354
    8. 'step' → logprob: -7.1632981300354
    9. 'num' → logprob: -7.7882981300354
    10. ' (' → logprob: -8.038297653198242

Token 1662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007948118261992931
    2. ' step' → logprob: -6.38294792175293
    3. '
' → logprob: -6.50794792175293
    4. ',' → logprob: -6.63294792175293
    5. ' 
' → logprob: -7.75794792175293
    6. '    
' → logprob: -7.75794792175293
    7. 'step' → logprob: -7.75794792175293
    8. ' ' → logprob: -8.00794792175293
    9. '  
' → logprob: -8.38294792175293
    10. ' num' → logprob: -8.88294792175293

Token 1663: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.6347424387931824
    2. '   ' → logprob: -1.0097424983978271
    3. ' step' → logprob: -2.509742498397827
    4. 't' → logprob: -4.884742259979248
    5. 'num' → logprob: -5.384742259979248
    6. '
' → logprob: -5.509742259979248
    7. 'pas' → logprob: -6.259742259979248
    8. '#' (adapté à ' #') → logprob: -6.259742259979248
    9. 'p' → logprob: -7.134742259979248
    10. ' #' → logprob: -7.384742259979248

Token 1664: ' On' (ID: 2160)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.47201675176620483
    2. '   ' → logprob: -1.0970168113708496
    3. 'pas' → logprob: -3.5970168113708496
    4. ' step' → logprob: -5.09701681137085
    5. '#' → logprob: -5.22201681137085
    6. ' pas' → logprob: -7.22201681137085
    7. 'from' → logprob: -7.47201681137085
    8. 't' → logprob: -7.59701681137085
    9. 'num' → logprob: -7.84701681137085
    10. 'import' → logprob: -7.97201681137085

Token 1665: ' sait' (ID: 52101)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5996345281600952
    2. 'def' → logprob: -1.5996345281600952
    3. 'num' → logprob: -2.3496346473693848
    4. 'step' → logprob: -3.3496346473693848
    5. 'pas' → logprob: -3.7246346473693848
    6. 'n' → logprob: -4.224634647369385
    7. 's' → logprob: -4.474634647369385
    8. 'import' → logprob: -4.724634647369385
    9. '=' → logprob: -4.849634647369385
    10. 'pass' → logprob: -4.974634647369385

Token 1666: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8565524816513062
    2. '```' → logprob: -1.8565524816513062
    3. ' que' → logprob: -1.9815524816513062
    4. 'num' → logprob: -2.3565526008605957
    5. 't' → logprob: -3.1065526008605957
    6. 'import' → logprob: -3.2315526008605957
    7. '    ' → logprob: -3.7315526008605957
    8. 'que' → logprob: -4.356552600860596
    9. ' ' → logprob: -4.981552600860596
    10. ' t' → logprob: -5.231552600860596

Token 1667: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02678949385881424
    2. 'from' → logprob: -4.901789665222168
    3. '360' → logprob: -5.526789665222168
    4. '   ' → logprob: -5.651789665222168
    5. 'step' → logprob: -6.151789665222168
    6. 'pas' → logprob: -6.276789665222168
    7. 'den' → logprob: -6.401789665222168
    8. 'H' → logprob: -6.776789665222168
    9. 'pass' → logprob: -6.776789665222168
    10. 'while' → logprob: -7.151789665222168

Token 1668: ' conditions' (ID: 6409)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2791888415813446
    2. 't' → logprob: -2.904188871383667
    3. 'from' → logprob: -3.279188871383667
    4. 'num' → logprob: -3.654188871383667
    5. 'pas' → logprob: -3.904188871383667
    6. 'H' → logprob: -4.154188632965088
    7. 'next' → logprob: -4.279188632965088
    8. '1' → logprob: -4.529188632965088
    9. 'angle' → logprob: -4.779188632965088
    10. 'while' → logprob: -4.904188632965088

Token 1669: ' s' (ID: 265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12485872954130173
    2. '   ' → logprob: -2.3748586177825928
    3. '=' → logprob: -5.249858856201172
    4. 's' → logprob: -5.499858856201172
    5. ' =' → logprob: -5.999858856201172
    6. 't' → logprob: -6.374858856201172
    7. ' #' → logprob: -6.374858856201172
    8. 'num' → logprob: -6.874858856201172
    9. ' peuvent' → logprob: -7.249858856201172
    10. 'import' → logprob: -7.624858856201172

Token 1670: ''' (ID: 6)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.01058011781424284
    2. '_num' → logprob: -4.635580062866211
    3. ''ont' → logprob: -8.385580062866211
    4. '#' → logprob: -8.510580062866211
    5. 'u' → logprob: -10.010580062866211
    6. 'num' → logprob: -10.135580062866211
    7. '_' → logprob: -10.385580062866211
    8. 'avaient' → logprob: -10.385580062866211
    9. 't' → logprob: -10.510580062866211
    10. '```' → logprob: -10.635580062866211

Token 1671: 'expr' (ID: 21343)
  Prédit: 'atisf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisf' → logprob: -0.5319037437438965
    2. 'ont' → logprob: -1.2819037437438965
    3. 'app' → logprob: -2.4069037437438965
    4. 'atisfied' → logprob: -4.6569037437438965
    5. 's' → logprob: -5.2819037437438965
    6. ''app' → logprob: -5.7819037437438965
    7. 'expr' → logprob: -6.0319037437438965
    8. 'é' → logprob: -6.0319037437438965
    9. 'atis' → logprob: -6.2819037437438965
    10. '#' → logprob: -6.4069037437438965

Token 1672: 'iment' (ID: 2581)
  Prédit: 'èrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'èrent' → logprob: -0.9266876578330994
    2. '=' → logprob: -1.1766877174377441
    3. 'acent' → logprob: -2.801687717437744
    4. ' =' → logprob: -3.051687717437744
    5. 'licit' → logprob: -3.176687717437744
    6. '```' → logprob: -3.301687717437744
    7. 'icient' → logprob: -3.426687717437744
    8. 'ress' → logprob: -3.801687717437744
    9. 'ètent' → logprob: -4.926687717437744
    10. 'érent' → logprob: -5.051687717437744

Token 1673: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9202902913093567
    2. ' par' → logprob: -1.295290231704712
    3. 'par' → logprob: -2.670290231704712
    4. ' ici' → logprob: -3.170290231704712
    5. ' en' → logprob: -3.670290231704712
    6. 'num' → logprob: -3.920290231704712
    7. '=' → logprob: -4.045290470123291
    8. 'en' → logprob: -4.170290470123291
    9. '#' → logprob: -4.170290470123291
    10. 't' → logprob: -4.295290470123291

Token 1674: ' égal' (ID: 15059)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.014246124774217606
    2. ' #' → logprob: -6.139245986938477
    3. 'for' → logprob: -6.389245986938477
    4. 'num' → logprob: -7.139245986938477
    5. 'H' → logprob: -7.264245986938477
    6. 't' → logprob: -7.264245986938477
    7. 'import' → logprob: -7.514245986938477
    8. '1' → logprob: -7.639245986938477
    9. 'une' → logprob: -7.764245986938477
    10. '(' → logprob: -7.889245986938477

Token 1675: 'ités' (ID: 12479)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.6504427790641785
    2. 'ités' → logprob: -0.7754427790641785
    3. 'ite' → logprob: -4.900442600250244
    4. 'ites' → logprob: -5.400442600250244
    5. 'ations' → logprob: -6.900442600250244
    6. 'es' → logprob: -7.275442600250244
    7. 'ities' → logprob: -7.400442600250244
    8. 'e' → logprob: -7.650442600250244
    9. 'ity' → logprob: -8.025443077087402
    10. '0' → logprob: -8.150443077087402

Token 1676: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.270496129989624
    2. ':' → logprob: -2.520496129989624
    3. '<|end|>' → logprob: -2.520496129989624
    4. '<|end|>' → logprob: -4.145496368408203
    5. ' ' → logprob: -4.770496368408203
    6. ',' → logprob: -4.770496368408203
    7. ')' → logprob: -4.895496368408203
    8. ' :' → logprob: -5.270496368408203
    9. '  ' → logprob: -5.395496368408203
    10. '#' → logprob: -5.770496368408203

Token 1677: ''' (ID: 6)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.019145319238305092
    2. 'fra' → logprob: -4.519145488739014
    3. 'une' → logprob: -6.269145488739014
    4. 'équ' → logprob: -6.769145488739014
    5. ''équ' → logprob: -7.019145488739014
    6. 'des' → logprob: -7.144145488739014
    7. '#' → logprob: -7.769145488739014
    8. '```' → logprob: -7.894145488739014
    9. ''une' → logprob: -8.394145011901855
    10. ''' → logprob: -8.644145011901855

Token 1678: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0006073639378882945
    2. 'express' → logprob: -8.00060749053955
    3. 'fra' → logprob: -8.87560749053955
    4. 'équ' → logprob: -9.37560749053955
    5. 'angular' → logprob: -11.87560749053955
    6. '#' → logprob: -11.87560749053955
    7. 'ang' → logprob: -12.87560749053955
    8. 'interval' → logprob: -12.87560749053955
    9. '```' → logprob: -12.87560749053955
    10. 'equ' → logprob: -12.87560749053955

Token 1679: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05536344647407532
    2. ':' → logprob: -4.055363655090332
    3. ' ' → logprob: -4.305363655090332
    4. ',' → logprob: -5.055363655090332
    5. ')' → logprob: -6.180363655090332
    6. '.' → logprob: -6.430363655090332
    7. '<|end|>' → logprob: -6.430363655090332
    8. '#' → logprob: -7.055363655090332
    9. ' =' → logprob: -7.180363655090332
    10. '\n' → logprob: -7.180363655090332

Token 1680: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6333616375923157
    2. '   ' → logprob: -0.7583616375923157
    3. ' #' → logprob: -7.75836181640625
    4. '       ' → logprob: -8.75836181640625
    5. '    ' → logprob: -9.50836181640625
    6. '    
' → logprob: -10.63336181640625
    7. ' ' → logprob: -11.00836181640625
    8. '```' → logprob: -11.38336181640625
    9. '	' → logprob: -11.75836181640625
    10. '  ' → logprob: -11.75836181640625

Token 1681: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3895900845527649
    2. '   ' → logprob: -1.1395900249481201
    3. ' #' → logprob: -6.139590263366699
    4. '
' → logprob: -8.2645902633667
    5. '    
' → logprob: -9.6395902633667
    6. '       ' → logprob: -9.7645902633667
    7. '    ' → logprob: -10.0145902633667
    8. ' et' → logprob: -10.3895902633667
    9. ' ' → logprob: -11.2645902633667
    10. '#
' → logprob: -11.6395902633667

Token 1682: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28965893387794495
    2. '#' → logprob: -1.4146589040756226
    3. 'step' → logprob: -5.664659023284912
    4. 'pas' → logprob: -6.039659023284912
    5. ' #' → logprob: -6.664659023284912
    6. ' step' → logprob: -7.914659023284912
    7. '
' → logprob: -8.414658546447754
    8. 't' → logprob: -8.539658546447754
    9. 'num' → logprob: -8.789658546447754
    10. '    
' → logprob: -9.289658546447754

Token 1683: ' expressions' (ID: 43578)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12192370742559433
    2. '   ' → logprob: -2.7469236850738525
    3. 'step' → logprob: -3.4969236850738525
    4. 'pas' → logprob: -4.496923923492432
    5. 't' → logprob: -5.621923923492432
    6. 'delta' → logprob: -5.871923923492432
    7. 'increment' → logprob: -7.246923923492432
    8. 'pass' → logprob: -7.746923923492432
    9. 'eps' → logprob: -8.121923446655273
    10. ' #' → logprob: -8.621923446655273

Token 1684: ' lin' (ID: 14432)
  Prédit: ' alg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alg' → logprob: -0.5048650503158569
    2. 'alg' → logprob: -1.129865050315857
    3. 'symbol' → logprob: -3.2548651695251465
    4. 'import' → logprob: -4.5048651695251465
    5. 'al' → logprob: -5.2548651695251465
    6. '```' → logprob: -5.6298651695251465
    7. '#' → logprob: -6.0048651695251465
    8. 'num' → logprob: -6.0048651695251465
    9. '   ' → logprob: -6.2548651695251465
    10. 'fraction' → logprob: -6.6298651695251465

Token 1685: 'é' (ID: 377)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5751844644546509
    2. ')' → logprob: -1.9501844644546509
    3. '=' → logprob: -1.9501844644546509
    4. '+' → logprob: -2.0751843452453613
    5. 'ar' → logprob: -2.2001843452453613
    6. 'aires' → logprob: -2.9501843452453613
    7. 'def' → logprob: -3.7001843452453613
    8. 'aire' → logprob: -3.8251843452453613
    9. ' =' → logprob: -4.075184345245361
    10. '   ' → logprob: -4.075184345245361

Token 1686: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.007346434984356165
    2. 'é' → logprob: -5.8823466300964355
    3. '```' → logprob: -5.8823466300964355
    4. 'aire' → logprob: -7.5073466300964355
    5. '#' → logprob: -8.382346153259277
    6. 'ai' → logprob: -8.882346153259277
    7. 'e' → logprob: -9.257346153259277
    8. 'ar' → logprob: -9.382346153259277
    9. '+' → logprob: -9.507346153259277
    10. 'a' → logprob: -9.757346153259277

Token 1687: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6998361945152283
    2. ')' → logprob: -1.199836254119873
    3. ',' → logprob: -3.449836254119873
    4. ' *' → logprob: -3.949836254119873
    5. 'num' → logprob: -3.949836254119873
    6. '<|end|>' → logprob: -4.324836254119873
    7. ' num' → logprob: -4.449836254119873
    8. '...' → logprob: -4.699836254119873
    9. ' )' → logprob: -4.699836254119873
    10. '#' → logprob: -4.824836254119873

Token 1688: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10863639414310455
    2. 'num' → logprob: -2.6086363792419434
    3. 'angles' → logprob: -4.358636379241943
    4. 'temps' → logprob: -4.733636379241943
    5. 'fra' → logprob: -5.483636379241943
    6. 'fraction' → logprob: -6.983636379241943
    7. ' t' → logprob: -7.983636379241943
    8. 'les' → logprob: -7.983636379241943
    9. '360' → logprob: -8.608636856079102
    10. 'angle' → logprob: -8.733636856079102

Token 1689: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2781547009944916
    2. '#' → logprob: -2.7781546115875244
    3. '
' → logprob: -2.9031546115875244
    4. ')' → logprob: -3.2781546115875244
    5. ',' → logprob: -3.5281546115875244
    6. ':' → logprob: -4.0281548500061035
    7. '_num' → logprob: -4.9031548500061035
    8. 'import' → logprob: -5.0281548500061035
    9. '.' → logprob: -5.4031548500061035
    10. 'num' → logprob: -5.9031548500061035

Token 1690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12508292496204376
    2. '
' → logprob: -2.6250829696655273
    3. '    
' → logprob: -4.375082969665527
    4. ' for' → logprob: -4.875082969665527
    5. ' 
' → logprob: -5.125082969665527
    6. ' step' → logprob: -5.125082969665527
    7. '#' → logprob: -5.875082969665527
    8. 'step' → logprob: -6.375082969665527
    9. 'for' → logprob: -6.625082969665527
    10. '  
' → logprob: -6.750082969665527

Token 1691: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007235547993332148
    2. '#' (adapté à ' #') → logprob: -6.132235527038574
    3. '
' → logprob: -6.257235527038574
    4. '    
' → logprob: -6.632235527038574
    5. 'def' → logprob: -8.007235527038574
    6. 'step' → logprob: -8.007235527038574
    7. 't' → logprob: -8.382235527038574
    8. ' step' → logprob: -8.382235527038574
    9. 'n' → logprob: -8.882235527038574
    10. 'num' → logprob: -9.007235527038574

Token 1692: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16777090728282928
    2. 'step' → logprob: -2.1677708625793457
    3. '#' → logprob: -4.042770862579346
    4. ' step' → logprob: -4.792770862579346
    5. 'for' → logprob: -5.542770862579346
    6. '
' → logprob: -5.917770862579346
    7. 't' → logprob: -6.417770862579346
    8. 'from' → logprob: -6.542770862579346
    9. 'delta' → logprob: -7.292770862579346
    10. 'import' → logprob: -7.417770862579346

Token 1693: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4417957663536072
    2. '   ' → logprob: -2.316795825958252
    3. 'import' → logprob: -2.566795825958252
    4. 'continue' → logprob: -2.566795825958252
    5. 'vais' → logprob: -2.691795825958252
    6. 'def' → logprob: -4.816795825958252
    7. 'return' → logprob: -5.316795825958252
    8. 'from' → logprob: -5.441795825958252
    9. 'cherche' → logprob: -5.566795825958252
    10. ' #' → logprob: -5.816795825958252

Token 1694: ' résoudre' (ID: 134006)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1841120719909668
    2. 'import' → logprob: -1.3091120719909668
    3. 'from' → logprob: -1.9341120719909668
    4. '#' → logprob: -1.9341120719909668
    5. '   ' → logprob: -2.559112071990967
    6. 'pass' → logprob: -3.809112071990967
    7. ' for' → logprob: -3.809112071990967
    8. '
' → logprob: -5.434112071990967
    9. ' #' → logprob: -5.434112071990967
    10. ' from' → logprob: -6.684112071990967

Token 1695: ' analy' (ID: 12610)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8234268426895142
    2. ' #' → logprob: -1.6984268426895142
    3. 't' → logprob: -2.9484267234802246
    4. '(
' → logprob: -3.1984267234802246
    5. '   ' → logprob: -3.3234267234802246
    6. ' for' → logprob: -3.3234267234802246
    7. 'for' → logprob: -3.3234267234802246
    8. ' H' → logprob: -3.4484267234802246
    9. ' (' → logprob: -3.5734267234802246
    10. ')' → logprob: -3.9484267234802246

Token 1696: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.12081624567508698
    2. 'ser' → logprob: -2.370816230773926
    3. 't' → logprob: -3.995816230773926
    4. 'tiques' → logprob: -6.745816230773926
    5. 'si' → logprob: -8.620816230773926
    6. 'se' → logprob: -9.245816230773926
    7. 'ses' → logprob: -9.245816230773926
    8. 'st' → logprob: -9.370816230773926
    9. 's' → logprob: -9.745816230773926
    10. 'sement' → logprob: -9.745816230773926

Token 1697: 'quement' (ID: 42437)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.03411183878779411
    2. 'quement' → logprob: -3.784111738204956
    3. 't' → logprob: -4.659111976623535
    4. 'ser' → logprob: -7.159111976623535
    5. 'tiques' → logprob: -8.784111976623535
    6. 'sement' → logprob: -8.784111976623535
    7. '
' → logprob: -10.784111976623535
    8. 'th' → logprob: -11.034111976623535
    9. 'iquement' → logprob: -11.034111976623535
    10. 'st' → logprob: -11.034111976623535

Token 1698: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13540929555892944
    2. '#' → logprob: -3.010409355163574
    3. ' for' → logprob: -4.385409355163574
    4. ':' → logprob: -4.510409355163574
    5. ',' → logprob: -4.885409355163574
    6. ')' → logprob: -5.010409355163574
    7. ' #' → logprob: -5.010409355163574
    8. '.' → logprob: -5.260409355163574
    9. ' ' → logprob: -5.510409355163574
    10. 'import' → logprob: -5.885409355163574

Token 1699: ' conditions' (ID: 6409)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.029944054782390594
    2. 'for' → logprob: -4.654943943023682
    3. 'solutions' → logprob: -5.529943943023682
    4. ' #' → logprob: -5.779943943023682
    5. 'coeff' → logprob: -5.904943943023682
    6. 'dif' → logprob: -6.279943943023682
    7. 'den' → logprob: -6.529943943023682
    8. 'diff' → logprob: -6.779943943023682
    9. 'from' → logprob: -7.029943943023682
    10. 'angles' → logprob: -7.404943943023682

Token 1700: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1929740011692047
    2. '#' → logprob: -1.8179739713668823
    3. 'from' → logprob: -5.692974090576172
    4. 'for' → logprob: -6.317974090576172
    5. 'import' → logprob: -6.317974090576172
    6. ':' → logprob: -6.817974090576172
    7. 'def' → logprob: -7.317974090576172
    8. 'H' → logprob: -7.442974090576172
    9. ',' → logprob: -7.942974090576172
    10. ')' → logprob: -7.942974090576172

Token 1701: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48228558897972107
    2. '#' → logprob: -0.9822856187820435
    3. 'from' → logprob: -5.607285499572754
    4. '
' → logprob: -6.107285499572754
    5. 't' → logprob: -8.107285499572754
    6. 'for' → logprob: -8.232285499572754
    7. 'import' → logprob: -8.357285499572754
    8. 'delta' → logprob: -8.357285499572754
    9. 'n' → logprob: -8.482285499572754
    10. 'def' → logprob: -8.732285499572754

Token 1702: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.25386402010917664
    2. '   ' → logprob: -1.878864049911499
    3. 'from' → logprob: -2.878864049911499
    4. 'delta' → logprob: -5.12886381149292
    5. 'for' → logprob: -6.25386381149292
    6. 'angle' → logprob: -6.62886381149292
    7. 'A' → logprob: -6.75386381149292
    8. 'V' → logprob: -7.37886381149292
    9. 'step' → logprob: -7.62886381149292
    10. 'v' → logprob: -7.62886381149292

Token 1703: ' Not' (ID: 4037)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1399168074131012
    2. '   ' → logprob: -2.6399168968200684
    3. 'angle' → logprob: -4.389916896820068
    4. 'step' → logprob: -4.514916896820068
    5. 'delta' → logprob: -4.639916896820068
    6. 'from' → logprob: -4.764916896820068
    7. 'V' → logprob: -5.014916896820068
    8. 'for' → logprob: -5.889916896820068
    9. 'v' → logprob: -5.889916896820068
    10. 'n' → logprob: -7.264916896820068

Token 1704: 'ations' (ID: 929)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9709354639053345
    2. 'e' → logprob: -1.0959354639053345
    3. 'def' → logprob: -2.220935344696045
    4. 'import' → logprob: -2.595935344696045
    5. '   ' → logprob: -3.470935344696045
    6. '_e' → logprob: -4.220935344696045
    7. 'ed' → logprob: -4.970935344696045
    8. ' #' → logprob: -5.220935344696045
    9. 'amment' → logprob: -5.220935344696045
    10. 'A' → logprob: -5.220935344696045

Token 1705: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.691300094127655
    2. 'Ah' → logprob: -2.4413001537323
    3. '#' → logprob: -2.5663001537323
    4. 'a' → logprob: -2.9413001537323
    5. ' Ah' → logprob: -3.3163001537323
    6. ' ah' → logprob: -3.3163001537323
    7. ' a' → logprob: -3.5663001537323
    8. ' delta' → logprob: -3.6913001537323
    9. 'A' → logprob: -3.8163001537323
    10. 'angle' → logprob: -4.066299915313721

Token 1706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32504045963287354
    2. '#' → logprob: -1.7000404596328735
    3. 'w' → logprob: -3.325040340423584
    4. 'omega' → logprob: -3.575040340423584
    5. 'angle' → logprob: -5.200040340423584
    6. 'n' → logprob: -5.450040340423584
    7. 'Ah' → logprob: -5.700040340423584
    8. 'v' → logprob: -6.075040340423584
    9. 'delta' → logprob: -6.075040340423584
    10. 'from' → logprob: -6.075040340423584

Token 1707: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2753472626209259
    2. 'from' → logprob: -1.7753472328186035
    3. 'w' → logprob: -4.1503472328186035
    4. 'a' → logprob: -4.1503472328186035
    5. 'A' → logprob: -4.9003472328186035
    6. 'v' → logprob: -4.9003472328186035
    7. 'Ah' → logprob: -5.5253472328186035
    8. 'angle' → logprob: -5.5253472328186035
    9. 'omega' → logprob: -5.5253472328186035
    10. 'V' → logprob: -5.7753472328186035

Token 1708: ' angles' (ID: 43448)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30269941687583923
    2. 'omega' → logprob: -2.427699327468872
    3. 'w' → logprob: -2.552699327468872
    4. 'Ah' → logprob: -3.677699327468872
    5. 'angle' → logprob: -3.927699327468872
    6. 'a' → logprob: -4.427699565887451
    7. 'from' → logprob: -4.802699565887451
    8. 'n' → logprob: -5.177699565887451
    9. 'V' → logprob: -5.802699565887451
    10. 'A' → logprob: -5.927699565887451

Token 1709: ':
' (ID: 734)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.006747108418494463
    2. 'h' → logprob: -5.256747245788574
    3. 'H' → logprob: -7.006747245788574
    4. '_s' → logprob: -8.756747245788574
    5. ' =' → logprob: -8.881747245788574
    6. 's' → logprob: -9.631747245788574
    7. 'def' → logprob: -9.881747245788574
    8. '#' → logprob: -10.131747245788574
    9. '_H' → logprob: -10.631747245788574
    10. '
' → logprob: -10.881747245788574

Token 1710: '   ' (ID: 271)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.6308555603027344
    2. '#' → logprob: -1.1308555603027344
    3. '   ' → logprob: -2.3808555603027344
    4. 'angle' → logprob: -3.5058555603027344
    5. 'H' → logprob: -5.130855560302734
    6. 'def' → logprob: -5.380855560302734
    7. ' ah' → logprob: -5.755855560302734
    8. 'Ah' → logprob: -6.005855560302734
    9. 'h' → logprob: -6.130855560302734
    10. ' #' → logprob: -7.005855560302734

Token 1711: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.25932538509368896
    2. 'angle' → logprob: -1.884325385093689
    3. 'ah' → logprob: -3.5093255043029785
    4. 'def' → logprob: -4.1343255043029785
    5. 'from' → logprob: -4.5093255043029785
    6. 'Ah' → logprob: -5.1343255043029785
    7. '   ' → logprob: -5.3843255043029785
    8. 'a' → logprob: -6.1343255043029785
    9. 'as' → logprob: -6.6343255043029785
    10. 'ahs' → logprob: -6.7593255043029785

Token 1712: ' ah' (ID: 5369)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26524266600608826
    2. 'angle' → logprob: -1.7652426958084106
    3. '   ' → logprob: -3.515242576599121
    4. 'ah' → logprob: -5.015242576599121
    5. 'Ah' → logprob: -5.015242576599121
    6. 'a' → logprob: -6.015242576599121
    7. 'from' → logprob: -6.265242576599121
    8. 'def' → logprob: -6.765242576599121
    9. 'theta' → logprob: -6.765242576599121
    10. ' ' → logprob: -6.890242576599121

Token 1713: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6128037571907043
    2. ',' → logprob: -0.8628037571907043
    3. '=' → logprob: -3.7378036975860596
    4. '_num' → logprob: -4.987803936004639
    5. '   ' → logprob: -6.237803936004639
    6. 'def' → logprob: -7.487803936004639
    7. 't' → logprob: -8.23780345916748
    8. 'num' → logprob: -8.36280345916748
    9. ' ' → logprob: -8.61280345916748
    10. '_' → logprob: -8.61280345916748

Token 1714: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7371826171875
    2. '(' → logprob: -0.9871826171875
    3. '(lambda' → logprob: -1.9871826171875
    4. 'lambda' → logprob: -4.8621826171875
    5. ' (' → logprob: -6.1121826171875
    6. 't' → logprob: -6.9871826171875
    7. '360' → logprob: -7.7371826171875
    8. '6' → logprob: -8.8621826171875
    9. '   ' → logprob: -9.2371826171875
    10. ' lambda' → logprob: -9.4871826171875

Token 1715: 't' (ID: 83)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6456470489501953
    2. '(t' → logprob: -1.3956470489501953
    3. '360' → logprob: -2.0206470489501953
    4. 't' → logprob: -2.3956470489501953
    5. ' (' → logprob: -6.020647048950195
    6. ' ' → logprob: -7.770647048950195
    7. '   ' → logprob: -8.020647048950195
    8. '36' → logprob: -8.520647048950195
    9. '120' → logprob: -8.770647048950195
    10. '6' → logprob: -8.770647048950195

Token 1716: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01627224311232567
    2. '_num' → logprob: -4.641272068023682
    3. '*' → logprob: -5.266272068023682
    4. '   ' → logprob: -7.766272068023682
    5. ')' → logprob: -8.51627254486084
    6. '  ' → logprob: -8.64127254486084
    7. ' ' → logprob: -9.14127254486084
    8. ' ' → logprob: -9.26627254486084
    9. '*num' → logprob: -9.64127254486084
    10. '    ' → logprob: -9.76627254486084

Token 1717: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037708666641265154
    2. '360' → logprob: -5.75377082824707
    3. ' (' → logprob: -8.00377082824707
    4. '1' → logprob: -8.37877082824707
    5. '60' → logprob: -11.75377082824707
    6. '36' → logprob: -12.12877082824707
    7. '120' → logprob: -12.62877082824707
    8. ' ' → logprob: -13.00377082824707
    9. '   ' → logprob: -13.25377082824707
    10. '\' → logprob: -13.75377082824707

Token 1718: '360' (ID: 9870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037540055345743895
    2. '1' → logprob: -6.378754138946533
    3. '360' → logprob: -6.378754138946533
    4. ' (' → logprob: -8.128753662109375
    5. '36' → logprob: -10.753753662109375
    6. '6' → logprob: -11.753753662109375
    7. '   ' → logprob: -12.253753662109375
    8. 'Fraction' → logprob: -12.628753662109375
    9. '60' → logprob: -12.753753662109375
    10. 'frac' → logprob: -12.753753662109375

Token 1719: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4044894576072693
    2. '/' → logprob: -1.279489517211914
    3. ')' → logprob: -3.404489517211914
    4. ')/(' → logprob: -4.279489517211914
    5. '/(' → logprob: -5.029489517211914
    6. ')/' → logprob: -7.529489517211914
    7. ' )' → logprob: -9.654489517211914
    8. '/
' → logprob: -9.779489517211914
    9. ' /(' → logprob: -9.779489517211914
    10. '   ' → logprob: -9.904489517211914

Token 1720: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.023508092388510704
    2. '(' → logprob: -3.773508071899414
    3. ' (' → logprob: -8.273508071899414
    4. '((' → logprob: -13.148508071899414
    5. '   ' → logprob: -13.273508071899414
    6. ' ' → logprob: -13.898508071899414
    7. '60' → logprob: -14.273508071899414
    8. '  ' → logprob: -14.773508071899414
    9. ')' → logprob: -14.773508071899414
    10. '360' → logprob: -15.148508071899414

Token 1721: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.004168033599853516
    2. '(' → logprob: -5.5041680335998535
    3. ' (' → logprob: -9.379167556762695
    4. '360' → logprob: -12.754167556762695
    5. '((' → logprob: -14.379167556762695
    6. ')' → logprob: -14.379167556762695
    7. '   ' → logprob: -15.254167556762695
    8. 'H' → logprob: -15.254167556762695
    9. ' ' → logprob: -15.629167556762695
    10. '60' → logprob: -16.754167556762695

Token 1722: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.044088419526815414
    2. ' *' → logprob: -3.169088363647461
    3. '360' → logprob: -7.669088363647461
    4. ')' → logprob: -7.794088363647461
    5. ' ' → logprob: -8.919088363647461
    6. '   ' → logprob: -10.294088363647461
    7. ' ' → logprob: -10.669088363647461
    8. '\' → logprob: -11.919088363647461
    9. '  ' → logprob: -12.919088363647461
    10. ' )' → logprob: -14.044088363647461

Token 1723: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0002625278721097857
    2. '(' → logprob: -8.250262260437012
    3. ' ' → logprob: -13.750262260437012
    4. ' (' → logprob: -16.625263214111328
    5. '```' → logprob: -17.375263214111328
    6. '  ' → logprob: -18.250263214111328
    7. '   ' → logprob: -18.500263214111328
    8. '(H' → logprob: -20.375263214111328
    9. '``' → logprob: -20.625263214111328
    10. '{' → logprob: -20.750263214111328

Token 1724: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ')' → logprob: -13.500001907348633
    3. '))' → logprob: -15.250001907348633
    4. '```' → logprob: -15.500001907348633
    5. ' ' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '00' → logprob: -17.062501907348633
    8. '*' → logprob: -17.250001907348633
    9. '۰' → logprob: -17.500001907348633
    10. ')))' → logprob: -17.562501907348633

Token 1725: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0036361846141517162
    2. ')' → logprob: -6.753636360168457
    3. ')),' → logprob: -6.753636360168457
    4. '))
' → logprob: -7.128636360168457
    5. ')))' → logprob: -8.378636360168457
    6. ' ))' → logprob: -8.878636360168457
    7. ' ' → logprob: -10.253636360168457
    8. '))+' → logprob: -10.378636360168457
    9. '),' → logprob: -11.128636360168457
    10. '))*' → logprob: -11.253636360168457

Token 1726: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7971786260604858
    2. ')' → logprob: -1.0471786260604858
    3. ',' → logprob: -2.6721787452697754
    4. ')
' → logprob: -3.2971787452697754
    5. ' *' → logprob: -3.4221787452697754
    6. '#' → logprob: -3.6721787452697754
    7. '
' → logprob: -4.547178745269775
    8. '),' → logprob: -5.047178745269775
    9. ',
' → logprob: -5.172178745269775
    10. ' #' → logprob: -6.172178745269775

Token 1727: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0008129627676680684
    2. '(' → logprob: -7.125813007354736
    3. ' ' → logprob: -12.250812530517578
    4. ' (' → logprob: -13.125812530517578
    5. '1' → logprob: -13.375812530517578
    6. '180' → logprob: -16.500812530517578
    7. '(H' → logprob: -17.125812530517578
    8. '((' → logprob: -17.625812530517578
    9. '```' → logprob: -17.625812530517578
    10. '{' → logprob: -17.750812530517578

Token 1728: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.9361264946837764e-07
    2. '180' → logprob: -16.0
    3. '(' → logprob: -17.0
    4. ' ' → logprob: -18.875
    5. '1' → logprob: -19.5
    6. '359' → logprob: -22.375
    7. '{' → logprob: -22.75
    8. '36' → logprob: -23.0
    9. '```' → logprob: -23.75
    10. '720' → logprob: -24.0

Token 1729: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0219135545194149
    2. '#' → logprob: -4.396913528442383
    3. '
' → logprob: -5.521913528442383
    4. ' #' → logprob: -6.521913528442383
    5. ')' → logprob: -6.896913528442383
    6. ',' → logprob: -7.021913528442383
    7. '    
' → logprob: -7.646913528442383
    8. '\n' → logprob: -7.896913528442383
    9. ' ' → logprob: -9.146913528442383
    10. '  
' → logprob: -9.271913528442383

Token 1730: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.17602717876434326
    2. '(' → logprob: -2.426027297973633
    3. 't' → logprob: -2.676027297973633
    4. '360' → logprob: -6.301027297973633
    5. ' (' → logprob: -7.051027297973633
    6. '((' → logprob: -7.176027297973633
    7. '(lambda' → logprob: -8.801027297973633
    8. 'frac' → logprob: -8.801027297973633
    9. 'lambda' → logprob: -9.676027297973633
    10. 'Fraction' → logprob: -9.676027297973633

Token 1731: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.15856938064098358
    2. '(' → logprob: -2.6585693359375
    3. 't' → logprob: -2.6585693359375
    4. '360' → logprob: -6.0335693359375
    5. ' (' → logprob: -6.5335693359375
    6. '((' → logprob: -6.9085693359375
    7. 'num' → logprob: -7.2835693359375
    8. '(num' → logprob: -7.5335693359375
    9. '(n' → logprob: -9.1585693359375
    10. ' t' → logprob: -9.6585693359375

Token 1732: '/(' (ID: 27334)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01019197516143322
    2. '*' → logprob: -4.635191917419434
    3. ')' → logprob: -9.010191917419434
    4. '_num' → logprob: -9.135191917419434
    5. '*num' → logprob: -10.135191917419434
    6. ' ' → logprob: -10.260191917419434
    7. ' ' → logprob: -10.510191917419434
    8. '   ' → logprob: -11.010191917419434
    9. '  ' → logprob: -11.135191917419434
    10. ' *
' → logprob: -11.135191917419434

Token 1733: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.015387294813990593
    2. '(' → logprob: -4.515387058258057
    3. ' (' → logprob: -5.515387058258057
    4. '((' → logprob: -8.390387535095215
    5. '60' → logprob: -11.015387535095215
    6. ')' → logprob: -11.015387535095215
    7. ' ' → logprob: -11.515387535095215
    8. '10' → logprob: -11.640387535095215
    9. '360' → logprob: -12.265387535095215
    10. 'H' → logprob: -12.390387535095215

Token 1734: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0046869185753166676
    2. ' *' → logprob: -5.3796868324279785
    3. '360' → logprob: -9.879687309265137
    4. '   ' → logprob: -12.129687309265137
    5. '\' → logprob: -12.504687309265137
    6. ' ' → logprob: -13.254687309265137
    7. ' ' → logprob: -13.504687309265137
    8. '  ' → logprob: -14.254687309265137
    9. '\t' → logprob: -14.379687309265137
    10. '**' → logprob: -14.629687309265137

Token 1735: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.000018119812012
    3. '(' → logprob: -13.500018119812012
    4. '  ' → logprob: -15.875018119812012
    5. '   ' → logprob: -16.375019073486328
    6. '```' → logprob: -16.750019073486328
    7. '*' → logprob: -17.500019073486328
    8. '36' → logprob: -17.500019073486328
    9. ' (' → logprob: -18.500019073486328
    10. '60' → logprob: -18.500019073486328

Token 1736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ')' → logprob: -13.125004768371582
    3. ' ' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.250004768371582
    5. '*' → logprob: -14.500004768371582
    6. '00' → logprob: -15.000004768371582
    7. '000' → logprob: -15.500004768371582
    8. '```' → logprob: -16.0000057220459
    9. '))' → logprob: -17.0000057220459
    10. '
' → logprob: -17.5000057220459

Token 1737: '))*' (ID: 81502)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0129097206518054
    2. ')' → logprob: -4.637909889221191
    3. '))*' → logprob: -6.137909889221191
    4. ' ))' → logprob: -7.137909889221191
    5. '))
' → logprob: -9.387909889221191
    6. ' ' → logprob: -10.137909889221191
    7. ')))' → logprob: -10.512909889221191
    8. ' )' → logprob: -11.887909889221191
    9. '))/' → logprob: -12.137909889221191
    10. '*' → logprob: -12.262909889221191

Token 1738: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.62500286102295
    3. '36' → logprob: -14.25000286102295
    4. '(' → logprob: -14.25000286102295
    5. '```' → logprob: -15.87500286102295
    6. '{' → logprob: -16.375003814697266
    7. '180' → logprob: -16.500003814697266
    8. '1' → logprob: -17.125003814697266
    9. '60' → logprob: -17.750003814697266
    10. '359' → logprob: -18.000003814697266

Token 1739: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11167611181735992
    2. '#' → logprob: -2.6116762161254883
    3. '
' → logprob: -3.6116762161254883
    4. ')' → logprob: -6.986676216125488
    5. '    
' → logprob: -7.111676216125488
    6. '#
' → logprob: -7.236676216125488
    7. ',' → logprob: -7.861676216125488
    8. '*' → logprob: -8.111676216125488
    9. ')
' → logprob: -8.236676216125488
    10. 'def' → logprob: -8.236676216125488

Token 1740: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31141650676727295
    2. '360' → logprob: -1.686416506767273
    3. 't' → logprob: -3.0614166259765625
    4. '(t' → logprob: -4.1864166259765625
    5. 'num' → logprob: -4.8114166259765625
    6. ' (' → logprob: -4.9364166259765625
    7. '(num' → logprob: -6.4364166259765625
    8. '36' → logprob: -7.1864166259765625
    9. ' ' → logprob: -7.4364166259765625
    10. 'frac' → logprob: -7.9364166259765625

Token 1741: 't' (ID: 83)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.45565176010131836
    2. 't' → logprob: -1.3306517601013184
    3. '(' → logprob: -2.8306517601013184
    4. '(t' → logprob: -3.9556517601013184
    5. 'num' → logprob: -4.080651760101318
    6. '36' → logprob: -5.955651760101318
    7. '(num' → logprob: -7.455651760101318
    8. '   ' → logprob: -7.580651760101318
    9. '60' → logprob: -7.580651760101318
    10. 'frac' → logprob: -7.705651760101318

Token 1742: '/H' (ID: 37632)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10972368717193604
    2. '*' → logprob: -2.3597235679626465
    3. ' /' → logprob: -5.4847235679626465
    4. ')' → logprob: -6.4847235679626465
    5. '/' → logprob: -7.3597235679626465
    6. ',' → logprob: -7.6097235679626465
    7. '%' → logprob: -7.7347235679626465
    8. ' %' → logprob: -7.7347235679626465
    9. '_num' → logprob: -7.8597235679626465
    10. '*num' → logprob: -7.9847235679626465

Token 1743: '/' (ID: 14)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003391574718989432
    2. ' *' → logprob: -8.62533950805664
    3. '360' → logprob: -8.87533950805664
    4. ')' → logprob: -11.50033950805664
    5. '*)' → logprob: -13.12533950805664
    6. '*(' → logprob: -13.12533950805664
    7. ' ' → logprob: -13.37533950805664
    8. '   ' → logprob: -14.37533950805664
    9. '\' → logprob: -14.37533950805664
    10. '**' → logprob: -14.50033950805664

Token 1744: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.250015258789062
    3. ' ' → logprob: -13.500015258789062
    4. '36' → logprob: -14.625015258789062
    5. ' (' → logprob: -16.250015258789062
    6. '1' → logprob: -16.750015258789062
    7. '60' → logprob: -17.375015258789062
    8. '10' → logprob: -17.750015258789062
    9. '*' → logprob: -18.125015258789062
    10. '   ' → logprob: -18.500015258789062

Token 1745: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -15.500000953674316
    3. '000' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.75
    5. '۰' → logprob: -16.875
    6. '00' → logprob: -16.875
    7. '*' → logprob: -17.25
    8. '```' → logprob: -17.25
    9. '०' → logprob: -17.75
    10. '০' → logprob: -17.875

Token 1746: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11351574957370758
    2. ')*' → logprob: -2.238515853881836
    3. '*' → logprob: -7.863515853881836
    4. ')**' → logprob: -9.613515853881836
    5. '*)' → logprob: -9.863515853881836
    6. ')`' → logprob: -10.363515853881836
    7. ')
' → logprob: -10.738515853881836
    8. '))' → logprob: -10.988515853881836
    9. ' )' → logprob: -11.113515853881836
    10. '   ' → logprob: -11.238515853881836

Token 1747: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -6.825890159234405e-05
    2. '1' → logprob: -10.125068664550781
    3. '10' → logprob: -10.625068664550781
    4. '36' → logprob: -13.875068664550781
    5. '```' → logprob: -14.000068664550781
    6. '(' → logprob: -14.250068664550781
    7. '60' → logprob: -14.500068664550781
    8. '6' → logprob: -15.250068664550781
    9. '100' → logprob: -15.500068664550781
    10. ' ' → logprob: -16.37506866455078

Token 1748: ' =' (ID: 314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7058698534965515
    2. '   ' → logprob: -0.7058698534965515
    3. ')' → logprob: -5.580869674682617
    4. '#
' → logprob: -5.955869674682617
    5. '*' → logprob: -6.580869674682617
    6. '
' → logprob: -7.205869674682617
    7. ',' → logprob: -7.205869674682617
    8. ' #' → logprob: -7.455869674682617
    9. 'def' → logprob: -7.580869674682617
    10. '...' → logprob: -7.955869674682617

Token 1749: ' t' (ID: 260)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21194332838058472
    2. '360' → logprob: -2.3369433879852295
    3. '(t' → logprob: -3.4619433879852295
    4. 't' → logprob: -3.4619433879852295
    5. ' (' → logprob: -3.7119433879852295
    6. ' ' → logprob: -6.33694314956665
    7. ' t' → logprob: -6.58694314956665
    8. '36' → logprob: -7.08694314956665
    9. 'frac' → logprob: -7.46194314956665
    10. '`' → logprob: -7.83694314956665

Token 1750: '/(' (ID: 27334)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.21004828810691833
    2. ' *' → logprob: -2.335048198699951
    3. '/' → logprob: -2.585048198699951
    4. '<|end|>' → logprob: -5.085048198699951
    5. '*' → logprob: -5.210048198699951
    6. ',' → logprob: -6.335048198699951
    7. '<|end|>' → logprob: -7.335048198699951
    8. ' ' → logprob: -7.460048198699951
    9. ')' → logprob: -7.835048198699951
    10. '/(' → logprob: -8.08504867553711

Token 1751: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.12304588407278061
    2. 'H' → logprob: -2.9980459213256836
    3. '10' → logprob: -2.9980459213256836
    4. '(' → logprob: -4.373045921325684
    5. ' (' → logprob: -5.873045921325684
    6. '100' → logprob: -9.248045921325684
    7. ' ' → logprob: -9.498045921325684
    8. '1' → logprob: -9.498045921325684
    9. '60' → logprob: -9.748045921325684
    10. '   ' → logprob: -10.123045921325684

Token 1752: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0017023178515955806
    2. ' *' → logprob: -6.876702308654785
    3. '360' → logprob: -7.376702308654785
    4. '\' → logprob: -11.501702308654785
    5. '   ' → logprob: -11.501702308654785
    6. ' ' → logprob: -11.876702308654785
    7. ' ' → logprob: -12.501702308654785
    8. '	' → logprob: -13.001702308654785
    9. '\t' → logprob: -13.001702308654785
    10. ')' → logprob: -13.376702308654785

Token 1753: '10' (ID: 702)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00032366468803957105
    2. '10' → logprob: -8.250323295593262
    3. ' ' → logprob: -10.875323295593262
    4. '1' → logprob: -11.250323295593262
    5. '60' → logprob: -11.250323295593262
    6. '(' → logprob: -11.500323295593262
    7. '36' → logprob: -12.000323295593262
    8. '6' → logprob: -14.625323295593262
    9. '359' → logprob: -15.375323295593262
    10. '```' → logprob: -16.000324249267578

Token 1754: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1252187192440033
    2. '0' → logprob: -2.625218629837036
    3. ')' → logprob: -3.250218629837036
    4. ' *' → logprob: -5.125218868255615
    5. ')*' → logprob: -8.500218391418457
    6. '*)' → logprob: -9.500218391418457
    7. '360' → logprob: -9.750218391418457
    8. ' ' → logprob: -10.000218391418457
    9. '   ' → logprob: -10.125218391418457
    10. ' ' → logprob: -10.125218391418457

Token 1755: ' degr' (ID: 89580)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6486123204231262
    2. '*' → logprob: -1.8986122608184814
    3. '   ' → logprob: -2.3986122608184814
    4. '
' → logprob: -2.5236122608184814
    5. ',' → logprob: -3.1486122608184814
    6. ' *' → logprob: -3.5236122608184814
    7. '**' → logprob: -4.3986124992370605
    8. '#' → logprob: -4.5236124992370605
    9. 'def' → logprob: -4.7736124992370605
    10. ' /' → logprob: -4.8986124992370605

Token 1756: '/s' (ID: 5031)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.156437948346138
    2. ')' → logprob: -2.531437873840332
    3. 'e' → logprob: -3.281437873840332
    4. 's' → logprob: -4.531437873840332
    5. 'es' → logprob: -5.406437873840332
    6. 'ès' → logprob: -6.156437873840332
    7. 'és' → logprob: -6.281437873840332
    8. 'ées' → logprob: -6.531437873840332
    9. ' /' → logprob: -6.906437873840332
    10. 'rees' → logprob: -6.906437873840332

Token 1757: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3210104703903198
    2. '#' → logprob: -1.5710104703903198
    3. '
' → logprob: -3.3210105895996094
    4. 'def' → logprob: -4.821010589599609
    5. 'import' → logprob: -5.446010589599609
    6. ')' → logprob: -5.446010589599609
    7. 'from' → logprob: -5.946010589599609
    8. '#
' → logprob: -6.571010589599609
    9. '```' → logprob: -6.696010589599609
    10. '\' → logprob: -6.696010589599609

Token 1758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02456238679587841
    2. ')' → logprob: -4.524562358856201
    3. '
' → logprob: -5.524562358856201
    4. '#' → logprob: -5.649562358856201
    5. ',' → logprob: -5.899562358856201
    6. ',
' → logprob: -7.399562358856201
    7. '*' → logprob: -8.14956283569336
    8. ')
' → logprob: -8.39956283569336
    9. '...' → logprob: -8.77456283569336
    10. ' ' → logprob: -8.77456283569336

Token 1759: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25134164094924927
    2. '#' (adapté à ' #') → logprob: -1.6263415813446045
    3. '
' → logprob: -4.626341819763184
    4. '#
' → logprob: -5.626341819763184
    5. ')' → logprob: -6.001341819763184
    6. ' #' → logprob: -6.376341819763184
    7. 'from' → logprob: -6.501341819763184
    8. 'num' → logprob: -6.751341819763184
    9. ',' → logprob: -6.876341819763184
    10. ' ' → logprob: -7.501341819763184

Token 1760: ' vitesse' (ID: 71752)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4680514633655548
    2. '#' → logprob: -1.0930514335632324
    3. 'den' → logprob: -4.593051433563232
    4. 'num' → logprob: -4.968051433563232
    5. 'from' → logprob: -5.093051433563232
    6. 'a' → logprob: -5.718051433563232
    7. ' #' → logprob: -6.343051433563232
    8. 'ah' → logprob: -6.468051433563232
    9. 'def' → logprob: -6.468051433563232
    10. ' ' → logprob: -6.718051433563232

Token 1761: ' h' (ID: 312)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.19467775523662567
    2. 'h' → logprob: -3.0696778297424316
    3. ' =' → logprob: -3.0696778297424316
    4. '#' → logprob: -3.5696778297424316
    5. 's' → logprob: -4.319677829742432
    6. 'angle' → logprob: -4.819677829742432
    7. '=' → logprob: -4.944677829742432
    8. 'ah' → logprob: -5.319677829742432
    9. '_s' → logprob: -5.444677829742432
    10. ' #' → logprob: -5.569677829742432

Token 1762: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24191735684871674
    2. '_h' → logprob: -1.741917371749878
    3. '=' → logprob: -4.116917133331299
    4. '_' → logprob: -4.116917133331299
    5. 'h' → logprob: -5.991917133331299
    6. 's' → logprob: -6.616917133331299
    7. '_angle' → logprob: -7.116917133331299
    8. ' ' → logprob: -7.366917133331299
    9. '_s' → logprob: -7.741917133331299
    10. '   ' → logprob: -7.866917133331299

Token 1763: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5969303846359253
    2. '360' → logprob: -1.2219303846359253
    3. '(' → logprob: -1.9719303846359253
    4. '36' → logprob: -4.596930503845215
    5. ' ' → logprob: -6.221930503845215
    6. '0' → logprob: -6.471930503845215
    7. 'frac' → logprob: -7.346930503845215
    8. ' (' → logprob: -7.971930503845215
    9. '(t' → logprob: -8.846930503845215
    10. 't' → logprob: -8.846930503845215

Token 1764: '360' (ID: 9870)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5576558709144592
    2. '360' → logprob: -0.9326558709144592
    3. '(' → logprob: -3.5576558113098145
    4. 'Fraction' → logprob: -5.9326558113098145
    5. 'frac' → logprob: -6.6826558113098145
    6. '36' → logprob: -7.1826558113098145
    7. 'num' → logprob: -8.682656288146973
    8. 'fraction' → logprob: -8.682656288146973
    9. '0' → logprob: -9.682656288146973
    10. '6' → logprob: -10.057656288146973

Token 1765: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.47968319058418274
    2. ' /' → logprob: -0.9796831607818604
    3. '/(' → logprob: -5.2296833992004395
    4. ')' → logprob: -9.104682922363281
    5. '/
' → logprob: -10.854682922363281
    6. ')/(' → logprob: -10.979682922363281
    7. ' /
' → logprob: -11.229682922363281
    8. ' /(' → logprob: -11.229682922363281
    9. '/H' → logprob: -11.354682922363281
    10. '*' → logprob: -11.479682922363281

Token 1766: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.11423221975564957
    2. 'H' → logprob: -2.489232301712036
    3. '360' → logprob: -4.239232063293457
    4. '(' → logprob: -4.614232063293457
    5. ' (' → logprob: -8.114232063293457
    6. '`' → logprob: -9.614232063293457
    7. '10' → logprob: -9.864232063293457
    8. '\(' → logprob: -9.864232063293457
    9. ' H' → logprob: -10.114232063293457
    10. ' ' → logprob: -10.489232063293457

Token 1767: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004670780152082443
    2. '360' → logprob: -5.3796706199646
    3. ' *' → logprob: -10.254671096801758
    4. '\' → logprob: -12.129671096801758
    5. '```' → logprob: -12.754671096801758
    6. ' ' → logprob: -13.754671096801758
    7. ' ' → logprob: -13.879671096801758
    8. '**' → logprob: -14.129671096801758
    9. '10' → logprob: -14.254671096801758
    10. ')' → logprob: -14.504671096801758

Token 1768: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. '10' → logprob: -16.125
    4. '36' → logprob: -16.5
    5. '```' → logprob: -16.625
    6. '60' → logprob: -17.5
    7. '(' → logprob: -18.125
    8. '   ' → logprob: -18.5
    9. '359' → logprob: -18.625
    10. '  ' → logprob: -19.125

Token 1769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ')' → logprob: -12.375008583068848
    3. '00' → logprob: -13.250008583068848
    4. '000' → logprob: -13.500008583068848
    5. '   ' → logprob: -15.000008583068848
    6. '
' → logprob: -15.500008583068848
    7. '*' → logprob: -15.875008583068848
    8. ' ' → logprob: -16.62500762939453
    9. '```' → logprob: -16.75000762939453
    10. ')
' → logprob: -17.12500762939453

Token 1770: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013222652487456799
    2. ')
' → logprob: -7.126322269439697
    3. '*' → logprob: -8.876321792602539
    4. '))' → logprob: -9.251321792602539
    5. ' )' → logprob: -9.501321792602539
    6. '),' → logprob: -9.626321792602539
    7. ')))' → logprob: -10.751321792602539
    8. ' ' → logprob: -10.876321792602539
    9. '   ' → logprob: -11.126321792602539
    10. ')*' → logprob: -11.376321792602539

Token 1771: ' deg' (ID: 5597)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8720061779022217
    2. '#' → logprob: -1.4970061779022217
    3. ')' → logprob: -2.3720061779022217
    4. ' *' → logprob: -2.4970061779022217
    5. ',' → logprob: -2.7470061779022217
    6. '*' → logprob: -3.3720061779022217
    7. 'def' → logprob: -3.9970061779022217
    8. '
' → logprob: -4.122006416320801
    9. 'num' → logprob: -4.997006416320801
    10. ' #' → logprob: -5.122006416320801

Token 1772: '/s' (ID: 5031)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.16899283230304718
    2. '/s' → logprob: -1.9189928770065308
    3. ')' → logprob: -5.29399299621582
    4. 's' → logprob: -6.79399299621582
    5. ' /' → logprob: -6.79399299621582
    6. '#' → logprob: -8.04399299621582
    7. '   ' → logprob: -8.04399299621582
    8. '/h' → logprob: -8.41899299621582
    9. '*' → logprob: -8.91899299621582
    10. '/token' → logprob: -9.91899299621582

Token 1773: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12576718628406525
    2. '   ' → logprob: -3.375767230987549
    3. 'v' → logprob: -3.875767230987549
    4. '\n' → logprob: -4.750767230987549
    5. 'num' → logprob: -4.875767230987549
    6. ' #' → logprob: -5.125767230987549
    7. '#
' → logprob: -5.125767230987549
    8. ')' → logprob: -5.500767230987549
    9. '+
' → logprob: -5.625767230987549
    10. '
' → logprob: -5.625767230987549

Token 1774: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10531754791736603
    2. '#' → logprob: -2.7303175926208496
    3. 'v' → logprob: -4.35531759262085
    4. '
' → logprob: -4.85531759262085
    5. 'h' → logprob: -6.10531759262085
    6. ')' → logprob: -6.23031759262085
    7. ' #' → logprob: -6.48031759262085
    8. ',' → logprob: -6.60531759262085
    9. '    
' → logprob: -6.85531759262085
    10. ' ' → logprob: -7.48031759262085

Token 1775: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6574402451515198
    2. '   ' → logprob: -1.032440185546875
    3. 'v' → logprob: -2.782440185546875
    4. '
' → logprob: -3.532440185546875
    5. 'vh' → logprob: -3.657440185546875
    6. '#
' → logprob: -6.032440185546875
    7. '    
' → logprob: -6.782440185546875
    8. 'V' → logprob: -6.907440185546875
    9. ' #' → logprob: -7.407440185546875
    10. 'from' → logprob: -7.532440185546875

Token 1776: ' am' (ID: 939)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0573418140411377
    2. '#' → logprob: -1.1823418140411377
    3. 'vh' → logprob: -1.4323418140411377
    4. 'v' → logprob: -2.3073418140411377
    5. '
' → logprob: -6.307341575622559
    6. '    
' → logprob: -7.432341575622559
    7. 'vs' → logprob: -7.557341575622559
    8. 'V' → logprob: -7.557341575622559
    9. 'vm' → logprob: -7.557341575622559
    10. 'num' → logprob: -7.932341575622559

Token 1777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16045676171779633
    2. '=' → logprob: -1.9104567766189575
    3. '   ' → logprob: -9.785456657409668
    4. '_speed' → logprob: -10.035456657409668
    5. ',' → logprob: -10.285456657409668
    6. '_' → logprob: -10.535456657409668
    7. ' ' → logprob: -10.785456657409668
    8. '#' → logprob: -11.660456657409668
    9. ' #' → logprob: -11.660456657409668
    10. 's' → logprob: -12.285456657409668

Token 1778: ' ' (ID: 220)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.11171449720859528
    2. ' (' → logprob: -2.7367146015167236
    3. '(' → logprob: -3.7367146015167236
    4. '0' → logprob: -5.1117143630981445
    5. '6' → logprob: -5.3617143630981445
    6. 't' → logprob: -5.7367143630981445
    7. '360' → logprob: -6.7367143630981445
    8. ' ' → logprob: -7.4867143630981445
    9. '(lambda' → logprob: -7.4867143630981445
    10. '   ' → logprob: -7.8617143630981445

Token 1779: '0' (ID: 15)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.1850873976945877
    2. '(' → logprob: -2.1850874423980713
    3. '0' → logprob: -3.0600874423980713
    4. '6' → logprob: -5.560087203979492
    5. '360' → logprob: -6.185087203979492
    6. 't' → logprob: -6.310087203979492
    7. ' (' → logprob: -6.560087203979492
    8. ' ' → logprob: -9.060087203979492
    9. '60' → logprob: -9.185087203979492
    10. '   ' → logprob: -9.560087203979492

Token 1780: '.' (ID: 13)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.319603681564331
    2. '*' → logprob: -1.819603681564331
    3. '=' → logprob: -1.819603681564331
    4. '.' → logprob: -2.194603681564331
    5. '*(' → logprob: -2.694603681564331
    6. ' =' → logprob: -2.944603681564331
    7. ',' → logprob: -2.944603681564331
    8. '   ' → logprob: -3.069603681564331
    9. ' +' → logprob: -3.319603681564331
    10. '+' → logprob: -4.44460391998291

Token 1781: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.44443862256594e-05
    2. '0' → logprob: -10.000064849853516
    3. '   ' → logprob: -11.750064849853516
    4. '.' → logprob: -12.625064849853516
    5. '
' → logprob: -13.125064849853516
    6. '```' → logprob: -13.750064849853516
    7. ',' → logprob: -14.000064849853516
    8. '001' → logprob: -14.125064849853516
    9. '01' → logprob: -14.375064849853516
    10. '#' → logprob: -14.500064849853516

Token 1782: ' deg' (ID: 5597)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7089775204658508
    2. ')' → logprob: -1.083977460861206
    3. '<|end|>' → logprob: -2.833977460861206
    4. ' /' → logprob: -3.458977460861206
    5. '<|end|>' → logprob: -3.958977460861206
    6. ' #' → logprob: -4.208977699279785
    7. '/' → logprob: -4.833977699279785
    8. '*' → logprob: -5.083977699279785
    9. '   ' → logprob: -5.208977699279785
    10. ' *' → logprob: -5.458977699279785

Token 1783: '/s' (ID: 5031)
  Prédit: '/s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/s' → logprob: -0.42947015166282654
    2. '/' → logprob: -1.054470181465149
    3. ' /' → logprob: -7.804470062255859
    4. ')' → logprob: -8.80447006225586
    5. '#' → logprob: -9.80447006225586
    6. '/token' → logprob: -10.55447006225586
    7. '/j' → logprob: -10.55447006225586
    8. '   ' → logprob: -11.30447006225586
    9. 's' → logprob: -12.05447006225586
    10. '/n' → logprob: -12.30447006225586

Token 1784: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4080451726913452
    2. '   ' → logprob: -1.1580451726913452
    3. ' #' → logprob: -5.158045291900635
    4. '
' → logprob: -5.533045291900635
    5. '```' → logprob: -5.533045291900635
    6. '#
' → logprob: -6.408045291900635
    7. ' ' → logprob: -6.908045291900635
    8. '`' → logprob: -7.408045291900635
    9. ',' → logprob: -7.783045291900635
    10. ' ' → logprob: -7.908045291900635

Token 1785: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5325921177864075
    2. '   ' → logprob: -0.9075921177864075
    3. '
' → logprob: -6.407592296600342
    4. ' ' → logprob: -6.532592296600342
    5. 'v' → logprob: -6.782592296600342
    6. '```' → logprob: -6.782592296600342
    7. '#
' → logprob: -6.782592296600342
    8. 's' → logprob: -7.407592296600342
    9. ' #' → logprob: -7.907592296600342
    10. '\n' → logprob: -8.282591819763184

Token 1786: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.48050233721733093
    2. '   ' → logprob: -1.1055023670196533
    3. 'vh' → logprob: -3.7305023670196533
    4. ' ' → logprob: -4.605502128601074
    5. 'v' → logprob: -4.605502128601074
    6. 'vs' → logprob: -6.355502128601074
    7. 'hs' → logprob: -7.105502128601074
    8. 'ah' → logprob: -7.355502128601074
    9. '
' → logprob: -7.605502128601074
    10. '#
' → logprob: -7.730502128601074

Token 1787: ' as' (ID: 472)
  Prédit: 'vh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vh' → logprob: -0.31534963846206665
    2. '#' → logprob: -1.8153495788574219
    3. '   ' → logprob: -2.690349578857422
    4. 'v' → logprob: -3.815349578857422
    5. 'vs' → logprob: -5.190349578857422
    6. 'ah' → logprob: -5.440349578857422
    7. 'sh' → logprob: -6.690349578857422
    8. '
' → logprob: -7.065349578857422
    9. 'a' → logprob: -7.315349578857422
    10. 'hs' → logprob: -7.690349578857422

Token 1788: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1242683008313179
    2. '=' → logprob: -2.4992682933807373
    3. '_' → logprob: -3.3742682933807373
    4. ' _' → logprob: -8.624268531799316
    5. '   ' → logprob: -9.749268531799316
    6. ' ' → logprob: -9.999268531799316
    7. ',' → logprob: -10.124268531799316
    8. ')' → logprob: -10.374268531799316
    9. '_num' → logprob: -10.749268531799316
    10. '_=' → logprob: -10.874268531799316

Token 1789: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0004035017918795347
    2. ' ' → logprob: -8.37540340423584
    3. '(t' → logprob: -8.75040340423584
    4. '(' → logprob: -11.50040340423584
    5. ' (' → logprob: -13.25040340423584
    6. '360' → logprob: -14.00040340423584
    7. 't' → logprob: -14.12540340423584
    8. '   ' → logprob: -14.75040340423584
    9. '0' → logprob: -15.25040340423584
    10. '(lambda' → logprob: -16.000404357910156

Token 1790: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -8.41866585687967e-06
    2. '(t' → logprob: -12.000008583068848
    3. '(' → logprob: -13.750008583068848
    4. '360' → logprob: -14.625008583068848
    5. ' ' → logprob: -14.875008583068848
    6. '1' → logprob: -15.625008583068848
    7. '0' → logprob: -16.37500762939453
    8. '   ' → logprob: -17.25000762939453
    9. '```' → logprob: -17.75000762939453
    10. '60' → logprob: -17.87500762939453

Token 1791: ' deg' (ID: 5597)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1731395721435547
    2. '<|end|>' → logprob: -1.2981395721435547
    3. '<|end|>' → logprob: -1.7981395721435547
    4. '#' → logprob: -1.9231395721435547
    5. ')' → logprob: -2.9231395721435547
    6. ' def' → logprob: -4.423139572143555
    7. ' /' → logprob: -4.798139572143555
    8. '
' → logprob: -4.923139572143555
    9. ' #' → logprob: -5.673139572143555
    10. '   ' → logprob: -5.798139572143555

Token 1792: '/s' (ID: 5031)
  Prédit: '/s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/s' → logprob: -0.429098516702652
    2. '/' → logprob: -1.0540984869003296
    3. ')' → logprob: -9.054098129272461
    4. 's' → logprob: -9.429098129272461
    5. '#' → logprob: -9.554098129272461
    6. ' /' → logprob: -9.679098129272461
    7. '_s' → logprob: -11.304098129272461
    8. '/t' → logprob: -11.679098129272461
    9. '   ' → logprob: -11.929098129272461
    10. '/h' → logprob: -12.179098129272461

Token 1793: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7492969036102295
    2. '#' → logprob: -1.1242969036102295
    3. '
' → logprob: -1.7492969036102295
    4. 'from' → logprob: -5.249297142028809
    5. 'def' → logprob: -5.249297142028809
    6. '```' → logprob: -5.499297142028809
    7. '#
' → logprob: -5.874297142028809
    8. '    
' → logprob: -5.874297142028809
    9. 'import' → logprob: -6.124297142028809
    10. '\n' → logprob: -6.374297142028809

Token 1794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28015753626823425
    2. '#' → logprob: -1.6551575660705566
    3. '
' → logprob: -3.2801575660705566
    4. 'from' → logprob: -4.905157566070557
    5. '```' → logprob: -6.405157566070557
    6. '    
' → logprob: -6.655157566070557
    7. 'def' → logprob: -7.405157566070557
    8. 'import' → logprob: -7.405157566070557
    9. '#
' → logprob: -7.655157566070557
    10. 'for' → logprob: -7.780157566070557

Token 1795: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.33897271752357483
    2. '   ' → logprob: -1.3389726877212524
    3. 'from' → logprob: -4.213972568511963
    4. 'v' → logprob: -5.088972568511963
    5. '
' → logprob: -6.088972568511963
    6. 'V' → logprob: -7.213972568511963
    7. '```' → logprob: -8.463973045349121
    8. 't' → logprob: -8.713973045349121
    9. '#
' → logprob: -8.963973045349121
    10. 'for' → logprob: -9.088973045349121

Token 1796: ' Condition' (ID: 30255)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46720409393310547
    2. 'v' → logprob: -1.2172040939331055
    3. 'from' → logprob: -3.3422040939331055
    4. 'V' → logprob: -4.0922040939331055
    5. 'a' → logprob: -5.7172040939331055
    6. 'vh' → logprob: -5.7172040939331055
    7. '   ' → logprob: -5.8422040939331055
    8. 'delta' → logprob: -6.0922040939331055
    9. 'vs' → logprob: -6.3422040939331055
    10. 'Vs' → logprob: -6.3422040939331055

Token 1797: ' angle' (ID: 16538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20670269429683685
    2. ':' → logprob: -2.331702709197998
    3. ' #' → logprob: -3.456702709197998
    4. 'angle' → logprob: -4.456702709197998
    5. '"' → logprob: -4.706702709197998
    6. ' "' → logprob: -5.331702709197998
    7. 'd' → logprob: -5.331702709197998
    8. '=' → logprob: -5.456702709197998
    9. '   ' → logprob: -5.706702709197998
    10. ' =' → logprob: -6.206702709197998

Token 1798: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.17971275746822357
    2. '_sh' → logprob: -1.9297127723693848
    3. 'sm' → logprob: -5.054712772369385
    4. 's' → logprob: -5.429712772369385
    5. '_s' → logprob: -5.929712772369385
    6. 'sh' → logprob: -6.179712772369385
    7. '#' → logprob: -6.429712772369385
    8. ' between' → logprob: -7.679712772369385
    9. 'between' → logprob: -7.929712772369385
    10. '_between' → logprob: -8.429712295532227

Token 1799: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5858030319213867
    2. '_sm' → logprob: -1.3358030319213867
    3. '=' → logprob: -2.8358030319213867
    4. 's' → logprob: -3.3358030319213867
    5. '==' → logprob: -4.335803031921387
    6. ' ==' → logprob: -4.335803031921387
    7. '#' → logprob: -4.335803031921387
    8. 'sm' → logprob: -4.710803031921387
    9. ' #' → logprob: -4.960803031921387
    10. '   ' → logprob: -5.210803031921387

Token 1800: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.005846188869327307
    2. ' angle' → logprob: -5.38084602355957
    3. '(angle' → logprob: -7.25584602355957
    4. 'minimal' → logprob: -8.00584602355957
    5. '   ' → logprob: -9.75584602355957
    6. 'equal' → logprob: -10.38084602355957
    7. '(' → logprob: -10.75584602355957
    8. ' minimal' → logprob: -11.13084602355957
    9. '
' → logprob: -11.25584602355957
    10. '((' → logprob: -11.63084602355957

Token 1801: '_sh' (ID: 8823)
  Prédit: '_sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.6009191870689392
    2. '_as' → logprob: -1.475919246673584
    3. 'as' → logprob: -3.475919246673584
    4. '```' → logprob: -3.600919246673584
    5. ' =' → logprob: -3.725919246673584
    6. '   ' → logprob: -3.725919246673584
    7. 's' → logprob: -4.225919246673584
    8. '
' → logprob: -4.350919246673584
    9. '=' → logprob: -4.475919246673584
    10. '#' → logprob: -4.725919246673584

Token 1802: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4198407828807831
    2. '#' → logprob: -1.2948408126831055
    3. 'def' → logprob: -3.9198408126831055
    4. ':' → logprob: -4.0448408126831055
    5. 'from' → logprob: -4.2948408126831055
    6. '
' → logprob: -5.0448408126831055
    7. ':
' → logprob: -5.5448408126831055
    8. '```' → logprob: -6.4198408126831055
    9. ' #' → logprob: -6.7948408126831055
    10. 't' → logprob: -7.0448408126831055

Token 1803: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04832718148827553
    2. '   ' → logprob: -3.5483272075653076
    3. 'from' → logprob: -4.0483269691467285
    4. '```' → logprob: -7.4233269691467285
    5. '
' → logprob: -8.923327445983887
    6. '#
' → logprob: -10.173327445983887
    7. '``' → logprob: -10.548327445983887
    8. 't' → logprob: -10.923327445983887
    9. '"""
' → logprob: -10.923327445983887
    10. 'A' → logprob: -11.048327445983887

Token 1804: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.022057922556996346
    2. 'from' → logprob: -3.8970580101013184
    3. '```' → logprob: -7.897058010101318
    4. 'angle' → logprob: -8.39705753326416
    5. 't' → logprob: -8.89705753326416
    6. 'a' → logprob: -9.39705753326416
    7. '   ' → logprob: -9.39705753326416
    8. 'delta' → logprob: -9.52205753326416
    9. '
' → logprob: -9.64705753326416
    10. 'eps' → logprob: -9.64705753326416

Token 1805: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.019409583881497383
    2. 'from' → logprob: -4.019409656524658
    3. '```' → logprob: -8.1444091796875
    4. 'as' → logprob: -8.6444091796875
    5. '(v' → logprob: -8.8944091796875
    6. 'v' → logprob: -9.1444091796875
    7. 'angle' → logprob: -9.2694091796875
    8. '   ' → logprob: -10.1444091796875
    9. '6' → logprob: -10.3944091796875
    10. 'As' → logprob: -10.3944091796875

Token 1806: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.00018852073117159307
    2. 'angle' → logprob: -9.000188827514648
    3. 'diff' → logprob: -10.375188827514648
    4. '_diff' → logprob: -11.125188827514648
    5. 'def' → logprob: -11.750188827514648
    6. '#' → logprob: -13.750188827514648
    7. '_' → logprob: -14.000188827514648
    8. '(angle' → logprob: -14.000188827514648
    9. 'Angle' → logprob: -14.250188827514648
    10. '_ang' → logprob: -14.250188827514648

Token 1807: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.02730361558496952
    2. 'between' → logprob: -4.902303695678711
    3. 'as' → logprob: -5.402303695678711
    4. 'def' → logprob: -5.652303695678711
    5. '=' → logprob: -6.027303695678711
    6. 'sm' → logprob: -6.402303695678711
    7. '(sm' → logprob: -6.777303695678711
    8. 'diff' → logprob: -7.402303695678711
    9. '(angle' → logprob: -7.402303695678711
    10. '(a' → logprob: -7.527303695678711

Token 1808: ',' (ID: 11)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.16177159547805786
    2. '_' → logprob: -2.036771535873413
    3. ',' → logprob: -4.036771774291992
    4. ' -' → logprob: -8.286771774291992
    5. '-' → logprob: -8.286771774291992
    6. '_
' → logprob: -9.161771774291992
    7. '_-' → logprob: -9.286771774291992
    8. '_)' → logprob: -9.536771774291992
    9. '*' → logprob: -9.786771774291992
    10. ' ,' → logprob: -9.786771774291992

Token 1809: ' am' (ID: 939)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.4742431938648224
    2. 'am' → logprob: -0.9742431640625
    3. ' ah' → logprob: -8.9742431640625
    4. '(' → logprob: -11.2242431640625
    5. 'amh' → logprob: -11.9742431640625
    6. ' am' → logprob: -12.3492431640625
    7. '(am' → logprob: -12.4742431640625
    8. '   ' → logprob: -12.9742431640625
    9. '
' → logprob: -13.3492431640625
    10. 'ams' → logprob: -13.5992431640625

Token 1810: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005529000423848629
    2. ')==' → logprob: -5.755528926849365
    3. '_)' → logprob: -7.005528926849365
    4. ')
' → logprob: -7.630528926849365
    5. ',' → logprob: -7.755528926849365
    6. ')=' → logprob: -9.380529403686523
    7. '):
' → logprob: -10.005529403686523
    8. '_,' → logprob: -10.130529403686523
    9. ' )' → logprob: -10.380529403686523
    10. '),' → logprob: -10.380529403686523

Token 1811: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.115279197692871
    2. ' ==' → logprob: -1.240279197692871
    3. '=' → logprob: -1.490279197692871
    4. '==' → logprob: -2.365279197692871
    5. ')' → logprob: -3.365279197692871
    6. 'def' → logprob: -5.365279197692871
    7. '#' → logprob: -5.615279197692871
    8. ' -' → logprob: -5.615279197692871
    9. ' #' → logprob: -5.740279197692871
    10. '   ' → logprob: -6.240279197692871

Token 1812: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.0006376196397468448
    2. 'angle' → logprob: -7.500637531280518
    3. ' minimal' → logprob: -9.750638008117676
    4. 'equal' → logprob: -10.875638008117676
    5. '   ' → logprob: -12.500638008117676
    6. '
' → logprob: -13.625638008117676
    7. 'as' → logprob: -14.250638008117676
    8. ' ' → logprob: -15.000638008117676
    9. '#' → logprob: -15.125638008117676
    10. 'min' → logprob: -15.375638008117676

Token 1813: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -13.250003814697266
    3. 'angle' → logprob: -13.375003814697266
    4. '```' → logprob: -15.500003814697266
    5. 'Angle' → logprob: -16.000003814697266
    6. '_distance' → logprob: -17.000003814697266
    7. ' angle' → logprob: -17.125003814697266
    8. '_answer' → logprob: -17.125003814697266
    9. '\' → logprob: -17.125003814697266
    10. ' _' → logprob: -17.625003814697266

Token 1814: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.11376739293336868
    2. 'as' → logprob: -2.238767385482788
    3. '(sh' → logprob: -7.488767623901367
    4. 'sh' → logprob: -8.488767623901367
    5. '(' → logprob: -9.113767623901367
    6. '(s' → logprob: -10.738767623901367
    7. '(sm' → logprob: -11.738767623901367
    8. '(am' → logprob: -11.863767623901367
    9. ' as' → logprob: -11.988767623901367
    10. 'sm' → logprob: -12.613767623901367

Token 1815: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01447738241404295
    2. '_,' → logprob: -4.264477252960205
    3. ' ,' → logprob: -8.389477729797363
    4. '_' → logprob: -10.264477729797363
    5. ',
' → logprob: -10.389477729797363
    6. ',_' → logprob: -12.514477729797363
    7. '```' → logprob: -12.639477729797363
    8. '),' → logprob: -12.764477729797363
    9. '   ' → logprob: -12.764477729797363
    10. ')' → logprob: -13.514477729797363

Token 1816: ' ah' (ID: 5369)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -1.9361264946837764e-07
    2. ' ah' → logprob: -16.0
    3. 'Ah' → logprob: -19.375
    4. '
' → logprob: -19.625
    5. '   ' → logprob: -20.25
    6. 'ahs' → logprob: -20.875
    7. '(' → logprob: -21.125
    8. 'a' → logprob: -21.375
    9. 'ах' → logprob: -21.625
    10. ' ' → logprob: -21.75

Token 1817: ')

' (ID: 1029)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1879067420959473
    2. ')' → logprob: -1.4379067420959473
    3. ')
' → logprob: -1.4379067420959473
    4. '#' → logprob: -2.5629067420959473
    5. '):' → logprob: -2.5629067420959473
    6. '   ' → logprob: -3.0629067420959473
    7. '
' → logprob: -5.437906742095947
    8. '):

' → logprob: -5.562906742095947
    9. 'def' → logprob: -5.812906742095947
    10. ')

' → logprob: -6.062906742095947

Token 1818: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23618458211421967
    2. '   ' → logprob: -1.6111845970153809
    3. 'def' → logprob: -5.736184597015381
    4. '```' → logprob: -5.736184597015381
    5. '#
' → logprob: -5.861184597015381
    6. '
' → logprob: -7.611184597015381
    7. 'from' → logprob: -8.861184120178223
    8. '=' → logprob: -9.111184120178223
    9. '``' → logprob: -9.111184120178223
    10. ''''
' → logprob: -9.486184120178223

Token 1819: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.15164393186569214
    2. '   ' → logprob: -2.026643991470337
    3. '
' → logprob: -5.401643753051758
    4. 'def' → logprob: -6.776643753051758
    5. '#
' → logprob: -7.401643753051758
    6. 'v' → logprob: -7.776643753051758
    7. '    
' → logprob: -8.151643753051758
    8. 'from' → logprob: -8.276643753051758
    9. 't' → logprob: -8.401643753051758
    10. 'delta' → logprob: -8.526643753051758

Token 1820: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5101057887077332
    2. '   ' → logprob: -1.010105848312378
    3. 'from' → logprob: -3.635105848312378
    4. 'import' → logprob: -6.385105609893799
    5. 'def' → logprob: -6.510105609893799
    6. 'a' → logprob: -6.760105609893799
    7. 'delta' → logprob: -6.885105609893799
    8. 'A' → logprob: -7.385105609893799
    9. '
' → logprob: -7.385105609893799
    10. 'den' → logprob: -7.510105609893799

Token 1821: ' note' (ID: 7477)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8155141472816467
    2. 'cherche' → logprob: -1.190514087677002
    3. 'a' → logprob: -1.940514087677002
    4. 'va' → logprob: -3.440514087677002
    5. 'import' → logprob: -3.815514087677002
    6. 'continue' → logprob: -4.440514087677002
    7. 'def' → logprob: -5.315514087677002
    8. 've' → logprob: -5.690514087677002
    9. 'repr' → logprob: -5.690514087677002
    10. 'pose' → logprob: -5.690514087677002

Token 1822: ':
' (ID: 734)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7419199347496033
    2. '#' → logprob: -1.241919994354248
    3. 'from' → logprob: -1.866919994354248
    4. '   ' → logprob: -3.991919994354248
    5. 'a' → logprob: -4.366919994354248
    6. '
' → logprob: -4.866919994354248
    7. 'V' → logprob: -5.116919994354248
    8. 'A' → logprob: -5.491919994354248
    9. 'delta' → logprob: -5.616919994354248
    10. 'w' → logprob: -5.741919994354248

Token 1823: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.45651447772979736
    2. '   ' → logprob: -1.8315144777297974
    3. 'a' → logprob: -2.581514358520508
    4. '#' → logprob: -2.956514358520508
    5. 'from' → logprob: -3.956514358520508
    6. ' v' → logprob: -4.081514358520508
    7. 'u' → logprob: -5.081514358520508
    8. 't' → logprob: -5.206514358520508
    9. 'vs' → logprob: -5.206514358520508
    10. '```' → logprob: -5.331514358520508

Token 1824: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8295167088508606
    2. 'w' → logprob: -0.9545167088508606
    3. 'from' → logprob: -2.579516649246216
    4. 'omega' → logprob: -3.079516649246216
    5. 'v' → logprob: -3.579516649246216
    6. 'ws' → logprob: -5.079516887664795
    7. 'wh' → logprob: -5.329516887664795
    8. 'vh' → logprob: -5.579516887664795
    9. 'ω' → logprob: -5.954516887664795
    10. 'V' → logprob: -6.079516887664795

Token 1825: ' angle' (ID: 16538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5913042426109314
    2. 'from' → logprob: -1.3413043022155762
    3. '#' → logprob: -2.216304302215576
    4. 'a' → logprob: -3.591304302215576
    5. '```' → logprob: -4.591304302215576
    6. 'vs' → logprob: -4.716304302215576
    7. 'w' → logprob: -4.966304302215576
    8. 't' → logprob: -5.716304302215576
    9. 'delta' → logprob: -5.966304302215576
    10. 'import' → logprob: -6.091304302215576

Token 1826: ' between' (ID: 2870)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4497743844985962
    2. 's' → logprob: -1.3247743844985962
    3. '_h' → logprob: -2.4497742652893066
    4. 'h' → logprob: -5.574774265289307
    5. '_sh' → logprob: -6.699774265289307
    6. 'sh' → logprob: -6.699774265289307
    7. '_as' → logprob: -7.074774265289307
    8. 'diff' → logprob: -7.449774265289307
    9. '_sm' → logprob: -7.449774265289307
    10. '_diff' → logprob: -7.949774265289307

Token 1827: ' S' (ID: 336)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.06469954550266266
    2. 's' → logprob: -3.314699649810791
    3. 'minute' → logprob: -4.814699649810791
    4. 'sm' → logprob: -4.939699649810791
    5. 'am' → logprob: -5.314699649810791
    6. 'ah' → logprob: -6.439699649810791
    7. ' as' → logprob: -6.689699649810791
    8. 'second' → logprob: -7.064699649810791
    9. 'angle' → logprob: -7.564699649810791
    10. 'h' → logprob: -8.189699172973633

Token 1828: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.372635841369629
    2. 'and' → logprob: -1.497635841369629
    3. 'm' → logprob: -1.872635841369629
    4. ' and' → logprob: -2.247635841369629
    5. 'et' → logprob: -2.372635841369629
    6. '_m' → logprob: -2.497635841369629
    7. ',' → logprob: -3.622635841369629
    8. '_h' → logprob: -4.372635841369629
    9. 'h' → logprob: -4.872635841369629
    10. ' et' → logprob: -4.997635841369629

Token 1829: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00042686203960329294
    2. 'H' → logprob: -7.875426769256592
    3. ' M' → logprob: -10.25042724609375
    4. 'A' → logprob: -13.12542724609375
    5. 'm' → logprob: -13.37542724609375
    6. 'h' → logprob: -13.50042724609375
    7. 'S' → logprob: -14.00042724609375
    8. '```' → logprob: -14.12542724609375
    9. '#' → logprob: -14.31292724609375
    10. '   ' → logprob: -14.43792724609375

Token 1830: ' =' (ID: 314)
  Prédit: '_sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.6138460636138916
    2. ' =' → logprob: -1.1138460636138916
    3. '_' → logprob: -2.8638460636138916
    4. '=' → logprob: -2.9888460636138916
    5. '_s' → logprob: -4.6138458251953125
    6. '_diff' → logprob: -6.3638458251953125
    7. '#' → logprob: -6.3638458251953125
    8. '```' → logprob: -6.7388458251953125
    9. '   ' → logprob: -6.8638458251953125
    10. 's' → logprob: -6.8638458251953125

Token 1831: ' diff' (ID: 8868)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.9216132760047913
    2. 'abs' → logprob: -1.1716132164001465
    3. '(abs' → logprob: -1.6716132164001465
    4. '(min' → logprob: -2.6716132164001465
    5. 'min' → logprob: -4.4216132164001465
    6. '(lambda' → logprob: -4.5466132164001465
    7. '((' → logprob: -5.4216132164001465
    8. '(as' → logprob: -6.1716132164001465
    9. '(' → logprob: -6.5466132164001465
    10. 'lambda' → logprob: -6.6716132164001465

Token 1832: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.2389877885580063
    2. ' =' → logprob: -2.488987684249878
    3. '_s' → logprob: -2.988987684249878
    4. '_' → logprob: -3.113987684249878
    5. '=' → logprob: -4.613987922668457
    6. 'sm' → logprob: -4.738987922668457
    7. 's' → logprob: -4.863987922668457
    8. '```' → logprob: -5.613987922668457
    9. '_angle' → logprob: -7.113987922668457
    10. '   ' → logprob: -7.613987922668457

Token 1833: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6240031123161316
    2. ' =' → logprob: -0.9990031123161316
    3. '#' → logprob: -3.7490031719207764
    4. 's' → logprob: -3.9990031719207764
    5. '_sm' → logprob: -4.374002933502197
    6. '_' → logprob: -4.499002933502197
    7. '```' → logprob: -4.499002933502197
    8. '_s' → logprob: -5.249002933502197
    9. '   ' → logprob: -5.624002933502197
    10. ')' → logprob: -6.124002933502197

Token 1834: ' minimal' (ID: 19957)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.45915499329566956
    2. '(abs' → logprob: -1.2091549634933472
    3. '(lambda' → logprob: -3.9591550827026367
    4. '(min' → logprob: -4.209155082702637
    5. '(as' → logprob: -4.709155082702637
    6. 'min' → logprob: -4.834155082702637
    7. 'lambda' → logprob: -5.084155082702637
    8. '((' → logprob: -5.459155082702637
    9. 'minimal' → logprob: -5.459155082702637
    10. 'as' → logprob: -6.334155082702637

Token 1835: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.013275290839374065
    2. '_' → logprob: -4.388275146484375
    3. ')' → logprob: -8.263275146484375
    4. '(' → logprob: -9.138275146484375
    5. 'Angle' → logprob: -9.263275146484375
    6. '(
' → logprob: -9.513275146484375
    7. ' _' → logprob: -9.638275146484375
    8. '(_' → logprob: -9.888275146484375
    9. ')_' → logprob: -11.013275146484375
    10. ',' → logprob: -11.388275146484375

Token 1836: '(as' (ID: 67370)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.03433578461408615
    2. '(as' → logprob: -3.4093358516693115
    3. ' as' → logprob: -8.65933609008789
    4. '   ' → logprob: -9.28433609008789
    5. 'am' → logprob: -9.40933609008789
    6. '=' → logprob: -9.53433609008789
    7. '```' → logprob: -10.03433609008789
    8. 's' → logprob: -10.03433609008789
    9. '(s' → logprob: -10.65933609008789
    10. '(am' → logprob: -10.65933609008789

Token 1837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3162398338317871
    2. '_,' → logprob: -1.316239833831787
    3. ' ,' → logprob: -6.566239833831787
    4. '_' → logprob: -6.816239833831787
    5. ',
' → logprob: -8.566240310668945
    6. '_,
' → logprob: -9.941240310668945
    7. 's' → logprob: -10.191240310668945
    8. ',num' → logprob: -10.566240310668945
    9. '   ' → logprob: -10.691240310668945
    10. ',s' → logprob: -10.816240310668945

Token 1838: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -9.722539834911004e-05
    2. ' am' → logprob: -9.250097274780273
    3. '(am' → logprob: -14.625097274780273
    4. '   ' → logprob: -16.250097274780273
    5. 'ams' → logprob: -16.375097274780273
    6. ' ' → logprob: -16.375097274780273
    7. 'ah' → logprob: -16.500097274780273
    8. 'as' → logprob: -16.750097274780273
    9. ' ' → logprob: -17.250097274780273
    10. 'amin' → logprob: -17.875097274780273

Token 1839: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7709330320358276
    2. ')
' → logprob: -0.7709330320358276
    3. '   ' → logprob: -3.270933151245117
    4. ',' → logprob: -4.145933151245117
    5. ' -' → logprob: -4.520933151245117
    6. 'def' → logprob: -6.020933151245117
    7. '#' → logprob: -6.520933151245117
    8. '_sm' → logprob: -6.895933151245117
    9. ')

' → logprob: -7.020933151245117
    10. ' +' → logprob: -7.020933151245117

Token 1840: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34995466470718384
    2. '   ' → logprob: -1.349954605102539
    3. '
' → logprob: -4.099954605102539
    4. '=' → logprob: -4.474954605102539
    5. ' =' → logprob: -5.974954605102539
    6. ' #' → logprob: -6.474954605102539
    7. '#
' → logprob: -6.724954605102539
    8. ' and' → logprob: -7.099954605102539
    9. '=
' → logprob: -8.224954605102539
    10. '```' → logprob: -8.224954605102539

Token 1841: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.296275794506073
    2. '   ' → logprob: -1.4212758541107178
    3. '=' → logprob: -5.171275615692139
    4. '
' → logprob: -5.546275615692139
    5. '#
' → logprob: -6.296275615692139
    6. ' #' → logprob: -6.796275615692139
    7. '\n' → logprob: -7.796275615692139
    8. ' and' → logprob: -7.921275615692139
    9. ' =' → logprob: -8.171276092529297
    10. '```' → logprob: -8.296276092529297

Token 1842: ' angle' (ID: 16538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.011180568486452103
    2. 'angle' → logprob: -5.136180400848389
    3. 'from' → logprob: -5.761180400848389
    4. 'diff' → logprob: -7.636180400848389
    5. 'def' → logprob: -7.761180400848389
    6. 'On' → logprob: -7.886180400848389
    7. 'import' → logprob: -9.011180877685547
    8. 'Pour' → logprob: -9.261180877685547
    9. '```' → logprob: -9.386180877685547
    10. '
' → logprob: -9.511180877685547

Token 1843: ' between' (ID: 2870)
  Prédit: '_sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.7399472594261169
    2. 'between' → logprob: -1.3649473190307617
    3. '_sh' → logprob: -1.4899473190307617
    4. '_between' → logprob: -4.489947319030762
    5. ' between' → logprob: -4.614947319030762
    6. 'sh' → logprob: -4.989947319030762
    7. '_s' → logprob: -5.739947319030762
    8. '#' → logprob: -5.864947319030762
    9. 'sm' → logprob: -6.239947319030762
    10. 'diff' → logprob: -6.614947319030762

Token 1844: ' S' (ID: 336)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.7148357033729553
    2. 'sh' → logprob: -1.3398356437683105
    3. 'h' → logprob: -1.4648356437683105
    4. 's' → logprob: -4.2148356437683105
    5. 'as' → logprob: -6.0898356437683105
    6. 'hs' → logprob: -8.214836120605469
    7. ' ah' → logprob: -8.589836120605469
    8. 'hm' → logprob: -9.964836120605469
    9. 'am' → logprob: -10.714836120605469
    10. '(h' → logprob: -11.214836120605469

Token 1845: ' and' (ID: 326)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3045806884765625
    2. '_h' → logprob: -1.5545806884765625
    3. '_sh' → logprob: -3.8045806884765625
    4. ',' → logprob: -4.4295806884765625
    5. 'm' → logprob: -5.1795806884765625
    6. '_m' → logprob: -6.3045806884765625
    7. 'sh' → logprob: -6.3045806884765625
    8. '_' → logprob: -6.3045806884765625
    9. '_,' → logprob: -6.4295806884765625
    10. 'and' → logprob: -6.8045806884765625

Token 1846: ' H' (ID: 487)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.023912640288472176
    2. 'h' → logprob: -3.7739126682281494
    3. ' ah' → logprob: -7.89891242980957
    4. 'sh' → logprob: -8.64891242980957
    5. '
' → logprob: -9.27391242980957
    6. ' ' → logprob: -12.14891242980957
    7. 'hh' → logprob: -12.52391242980957
    8. 'Ah' → logprob: -12.89891242980957
    9. '```' → logprob: -12.89891242980957
    10. ' ' → logprob: -13.14891242980957

Token 1847: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42913228273391724
    2. ' =' → logprob: -1.0541322231292725
    3. '#' → logprob: -8.679132461547852
    4. '   ' → logprob: -9.429132461547852
    5. '=
' → logprob: -10.054132461547852
    6. ',' → logprob: -10.429132461547852
    7. ' ' → logprob: -10.554132461547852
    8. ')' → logprob: -10.554132461547852
    9. ' =
' → logprob: -11.554132461547852
    10. ' #' → logprob: -11.804132461547852

Token 1848: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.47839418053627014
    2. 'minimal' → logprob: -0.9783941507339478
    3. 'abs' → logprob: -5.853394031524658
    4. ' diff' → logprob: -7.478394031524658
    5. ' minimal' → logprob: -7.478394031524658
    6. 'min' → logprob: -9.478394508361816
    7. '(diff' → logprob: -9.603394508361816
    8. 'max' → logprob: -10.103394508361816
    9. 'def' → logprob: -10.478394508361816
    10. ' abs' → logprob: -10.978394508361816

Token 1849: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -0.002360425191000104
    2. '_sm' → logprob: -6.2523603439331055
    3. 'sh' → logprob: -7.7523603439331055
    4. '_' → logprob: -14.002360343933105
    5. 'sm' → logprob: -15.627360343933105
    6. '#' → logprob: -15.627360343933105
    7. '```' → logprob: -15.627360343933105
    8. '	sh' → logprob: -15.752360343933105
    9. '_SH' → logprob: -15.877360343933105
    10. '_h' → logprob: -16.002361297607422

Token 1850: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29579293727874756
    2. '#' → logprob: -1.5457929372787476
    3. '
' → logprob: -3.420793056488037
    4. '=' → logprob: -5.920793056488037
    5. '```' → logprob: -6.795793056488037
    6. ' =' → logprob: -6.920793056488037
    7. ':' → logprob: -7.045793056488037
    8. 'import' → logprob: -7.295793056488037
    9. 'def' → logprob: -7.420793056488037
    10. ')' → logprob: -7.420793056488037

Token 1851: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.00017159747949335724
    2. 'abs' → logprob: -8.875171661376953
    3. ' minimal' → logprob: -10.375171661376953
    4. '   ' → logprob: -15.375171661376953
    5. 'min' → logprob: -16.250171661376953
    6. ' abs' → logprob: -16.750171661376953
    7. '
' → logprob: -17.500171661376953
    8. 'max' → logprob: -17.500171661376953
    9. '(abs' → logprob: -18.375171661376953
    10. 'minimum' → logprob: -18.875171661376953

Token 1852: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.00016158436483237892
    2. 'angle' → logprob: -8.750161170959473
    3. '_' → logprob: -13.375161170959473
    4. '_diff' → logprob: -14.375161170959473
    5. '180' → logprob: -15.250161170959473
    6. ')' → logprob: -15.750161170959473
    7. 'Angle' → logprob: -16.00016212463379
    8. '```' → logprob: -16.62516212463379
    9. ' angle' → logprob: -16.75016212463379
    10. 'diff' → logprob: -17.00016212463379

Token 1853: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.002477200934663415
    2. 'as' → logprob: -6.002477169036865
    3. '(s' → logprob: -14.252477645874023
    4. ' as' → logprob: -15.002477645874023
    5. '(' → logprob: -15.377477645874023
    6. '(sh' → logprob: -16.002477645874023
    7. ''as' → logprob: -17.252477645874023
    8. '```' → logprob: -17.252477645874023
    9. '	as' → logprob: -17.377477645874023
    10. '=' → logprob: -17.627477645874023

Token 1854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004642736748792231
    2. ')' → logprob: -8.12546443939209
    3. '-' → logprob: -10.12546443939209
    4. ' ,' → logprob: -10.37546443939209
    5. ' -' → logprob: -10.37546443939209
    6. ',
' → logprob: -11.12546443939209
    7. '   ' → logprob: -11.12546443939209
    8. '_,' → logprob: -11.12546443939209
    9. ',)' → logprob: -11.87546443939209
    10. '#' → logprob: -12.87546443939209

Token 1855: ' ah' (ID: 5369)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -3.128163257315464e-07
    2. ' ah' → logprob: -15.375
    3. 'Ah' → logprob: -20.25
    4. 'ahs' → logprob: -20.625
    5. 'h' → logprob: -22.25
    6. '...' → logprob: -23.125
    7. '-ah' → logprob: -23.125
    8. 'ih' → logprob: -23.25
    9. 'ах' → logprob: -23.5
    10. '
' → logprob: -23.625

Token 1856: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40532946586608887
    2. ')' → logprob: -1.1553294658660889
    3. '#' → logprob: -4.655329704284668
    4. ')
' → logprob: -5.405329704284668
    5. '
' → logprob: -5.780329704284668
    6. 'def' → logprob: -7.280329704284668
    7. '```' → logprob: -8.280329704284668
    8. '    
' → logprob: -10.155329704284668
    9. ',' → logprob: -10.780329704284668
    10. 'import' → logprob: -10.905329704284668

Token 1857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34383904933929443
    2. '#' → logprob: -1.4688390493392944
    3. '```' → logprob: -3.343839168548584
    4. '
' → logprob: -4.593839168548584
    5. 'def' → logprob: -5.593839168548584
    6. 'from' → logprob: -5.593839168548584
    7. 'import' → logprob: -6.343839168548584
    8. '=' → logprob: -6.593839168548584
    9. '\' → logprob: -6.968839168548584
    10. '#
' → logprob: -7.593839168548584

Token 1858: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4392533004283905
    2. '#' → logprob: -1.064253330230713
    3. '
' → logprob: -5.189253330230713
    4. 'def' → logprob: -6.564253330230713
    5. '#
' (adapté à ' #
') → logprob: -7.189253330230713
    6. '\n' → logprob: -7.314253330230713
    7. '```' → logprob: -7.439253330230713
    8. ')' → logprob: -7.939253330230713
    9. '\' → logprob: -8.314252853393555
    10. ' #' → logprob: -8.564252853393555

Token 1859: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.057918328791856766
    2. '   ' → logprob: -3.0579183101654053
    3. 'import' → logprob: -5.932918548583984
    4. '=' → logprob: -6.057918548583984
    5. 'from' → logprob: -7.182918548583984
    6. ')' → logprob: -7.557918548583984
    7. '```' → logprob: -8.057918548583984
    8. 'def' → logprob: -8.182918548583984
    9. '#
' → logprob: -8.182918548583984
    10. ' #' → logprob: -8.307918548583984

Token 1860: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.008679928258061409
    2. 'from' → logprob: -5.2586798667907715
    3. 'import' → logprob: -6.3836798667907715
    4. '   ' → logprob: -7.3836798667907715
    5. 'On' → logprob: -7.8836798667907715
    6. '```' → logprob: -8.50868034362793
    7. 't' → logprob: -9.00868034362793
    8. 'diff' → logprob: -9.88368034362793
    9. ' #' → logprob: -10.00868034362793
    10. 'a' → logprob: -10.50868034362793

Token 1861: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0315651074051857
    2. 'from' → logprob: -4.031565189361572
    3. 'import' → logprob: -4.781565189361572
    4. '   ' → logprob: -5.656565189361572
    5. '#
' → logprob: -8.031564712524414
    6. '
' → logprob: -8.156564712524414
    7. 'def' → logprob: -8.281564712524414
    8. 'a' → logprob: -9.281564712524414
    9. 't' → logprob: -9.406564712524414
    10. '```' → logprob: -9.781564712524414

Token 1862: ' veux' (ID: 55673)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -1.1106220483779907
    2. '#' → logprob: -1.4856220483779907
    3. 've' → logprob: -1.6106220483779907
    4. 'pe' → logprob: -2.985621929168701
    5. 'a' → logprob: -3.235621929168701
    6. 's' → logprob: -3.610621929168701
    7. 'va' → logprob: -3.610621929168701
    8. 'continue' → logprob: -3.610621929168701
    9. 'note' → logprob: -4.485621929168701
    10. 'v' → logprob: -4.610621929168701

Token 1863: ' diff' (ID: 8868)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.38192975521087646
    2. ' résoudre' → logprob: -1.5069297552108765
    3. '#' → logprob: -3.131929874420166
    4. 'expr' → logprob: -4.881929874420166
    5. ' expr' → logprob: -5.006929874420166
    6. ' chercher' → logprob: -5.131929874420166
    7. ' continuer' → logprob: -5.506929874420166
    8. ' que' → logprob: -5.756929874420166
    9. ' minimal' → logprob: -6.006929874420166
    10. ' find' → logprob: -6.131929874420166

Token 1864: '_sm' (ID: 76283)
  Prédit: '_sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.14514648914337158
    2. 's' → logprob: -2.770146369934082
    3. '_s' → logprob: -3.395146369934082
    4. ' =' → logprob: -3.895146369934082
    5. '_' → logprob: -5.145146369934082
    6. '=' → logprob: -5.520146369934082
    7. '_sh' → logprob: -5.520146369934082
    8. '   ' → logprob: -6.770146369934082
    9. 'sm' → logprob: -7.645146369934082
    10. 'érences' → logprob: -8.020146369934082

Token 1865: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4031865894794464
    2. '==' → logprob: -1.278186559677124
    3. ' =' → logprob: -3.653186559677124
    4. '=' → logprob: -3.903186559677124
    5. ',' → logprob: -5.403186798095703
    6. 'def' → logprob: -7.528186798095703
    7. '==
' → logprob: -7.528186798095703
    8. ' -' → logprob: -7.778186798095703
    9. ' ==
' → logprob: -8.653186798095703
    10. 'import' → logprob: -9.028186798095703

Token 1866: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0015028368216007948
    2. ' diff' → logprob: -6.501502990722656
    3. '	diff' → logprob: -15.126502990722656
    4. '(diff' → logprob: -16.501502990722656
    5. '_diff' → logprob: -17.376502990722656
    6. 'minimal' → logprob: -17.626502990722656
    7. ' ' → logprob: -19.001502990722656
    8. '```' → logprob: -19.501502990722656
    9. '   ' → logprob: -20.001502990722656
    10. 'de' → logprob: -20.251502990722656

Token 1867: '_sh' (ID: 8823)
  Prédit: '_sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -0.00022547018306795508
    2. 'sh' → logprob: -8.750225067138672
    3. '_sm' → logprob: -9.625225067138672
    4. '	sh' → logprob: -15.125225067138672
    5. '_SH' → logprob: -15.375225067138672
    6. '_' → logprob: -15.875225067138672
    7. 'SH' → logprob: -16.500225067138672
    8. 's' → logprob: -16.750225067138672
    9. '_s' → logprob: -17.000225067138672
    10. ' sh' → logprob: -17.250225067138672

Token 1868: ' !=' (ID: 1666)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39751172065734863
    2. '
' → logprob: -1.3975117206573486
    3. '#' → logprob: -3.0225117206573486
    4. '.' → logprob: -5.1475114822387695
    5. ':' → logprob: -5.3975114822387695
    6. ',' → logprob: -5.6475114822387695
    7. 'import' → logprob: -5.7725114822387695
    8. '    
' → logprob: -5.8975114822387695
    9. 'def' → logprob: -5.8975114822387695
    10. '

' → logprob: -6.3975114822387695

Token 1869: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'minimal' → logprob: -16.000003814697266
    4. 'angle' → logprob: -16.375003814697266
    5. 'zero' → logprob: -17.000003814697266
    6. '=' → logprob: -17.125003814697266
    7. '1' → logprob: -17.750003814697266
    8. 'diff' → logprob: -18.000003814697266
    9. '180' → logprob: -18.375003814697266
    10. '#' → logprob: -18.750003814697266

Token 1870: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.93579563125968e-05
    2. 'diff' → logprob: -9.625089645385742
    3. 'minimal' → logprob: -11.125089645385742
    4. 'None' → logprob: -13.375089645385742
    5. '360' → logprob: -13.625089645385742
    6. 'angle' → logprob: -13.875089645385742
    7. '1' → logprob: -14.000089645385742
    8. '180' → logprob: -14.500089645385742
    9. 'abs' → logprob: -14.875089645385742
    10. ' ' → logprob: -14.875089645385742

Token 1871: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4222535192966461
    2. '
' → logprob: -1.7972534894943237
    3. '#' → logprob: -2.0472536087036133
    4. 'def' → logprob: -4.172253608703613
    5. 'import' → logprob: -4.297253608703613
    6. 'from' → logprob: -4.422253608703613
    7. '<|end|>' → logprob: -6.422253608703613
    8. '    
' → logprob: -6.672253608703613
    9. ',' → logprob: -7.047253608703613
    10. '  
' → logprob: -7.297253608703613

Token 1872: 'non' (ID: 11741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058977846056222916
    2. '0' → logprob: -3.6839778423309326
    3. '#' → logprob: -4.308978080749512
    4. 'and' → logprob: -5.058978080749512
    5. ' and' → logprob: -6.183978080749512
    6. ')
' → logprob: -6.183978080749512
    7. ')\' → logprob: -6.183978080749512
    8. 'def' → logprob: -6.433978080749512
    9. ' ' → logprob: -6.683978080749512
    10. 'et' → logprob: -7.683978080749512

Token 1873: ' chev' (ID: 127415)
  Prédit: 'nul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nul' → logprob: -0.25319671630859375
    2. 'n' → logprob: -1.6281967163085938
    3. 'null' → logprob: -4.628196716308594
    4. 'ég' → logprob: -5.378196716308594
    5. 'tr' → logprob: -5.503196716308594
    6. '0' → logprob: -5.753196716308594
    7. '=' → logprob: -6.003196716308594
    8. 'zero' → logprob: -6.503196716308594
    9. ' nul' → logprob: -7.253196716308594
    10. ' n' → logprob: -8.128196716308594

Token 1874: 'au' (ID: 753)
  Prédit: 'auch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auch' → logprob: -2.001229763031006
    2. 'èque' → logprob: -2.251229763031006
    3. 'ach' → logprob: -2.376229763031006
    4. 'èrent' → logprob: -2.376229763031006
    5. 'er' → logprob: -2.501229763031006
    6. 'e' → logprob: -2.501229763031006
    7. 'érent' → logprob: -2.626229763031006
    8. 'équ' → logprob: -3.251229763031006
    9. 'aque' → logprob: -3.376229763031006
    10. 'è' → logprob: -3.501229763031006

Token 1875: 'ché' (ID: 27299)
  Prédit: 'chent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chent' → logprob: -0.3802153468132019
    2. 'che' → logprob: -1.2552154064178467
    3. 'ch' → logprob: -4.005215167999268
    4. 'ché' → logprob: -5.630215167999268
    5. 'r' → logprob: -5.755215167999268
    6. 'chant' → logprob: -7.130215167999268
    7. 'cher' → logprob: -7.880215167999268
    8. 'que' → logprob: -8.130215644836426
    9. 'chet' → logprob: -8.255215644836426
    10. 'n' → logprob: -8.255215644836426

Token 1876: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022806229535490274
    2. ')
' → logprob: -6.3772807121276855
    3. ' )' → logprob: -8.127280235290527
    4. ' and' → logprob: -9.877280235290527
    5. ' et' → logprob: -9.877280235290527
    6. '#' → logprob: -10.127280235290527
    7. 'def' → logprob: -10.252280235290527
    8. ',' → logprob: -11.127280235290527
    9. 's' → logprob: -11.502280235290527
    10. ')

' → logprob: -11.752280235290527

Token 1877: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3141726851463318
    2. '#' → logprob: -1.4391727447509766
    3. 'def' → logprob: -4.439172744750977
    4. '
' → logprob: -4.564172744750977
    5. 'import' → logprob: -5.564172744750977
    6. '    
' → logprob: -6.689172744750977
    7. ')' → logprob: -6.814172744750977
    8. 'from' → logprob: -7.064172744750977
    9. '```' → logprob: -7.064172744750977
    10. '\n' → logprob: -7.189172744750977

Token 1878: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.39577972888946533
    2. '   ' → logprob: -1.2707797288894653
    3. 'def' → logprob: -3.770779609680176
    4. '
' → logprob: -4.520779609680176
    5. 'from' → logprob: -5.270779609680176
    6. 'import' → logprob: -5.645779609680176
    7. 'n' → logprob: -7.020779609680176
    8. '    
' → logprob: -7.520779609680176
    9. 't' → logprob: -7.645779609680176
    10. '```' → logprob: -7.770779609680176

Token 1879: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13000108301639557
    2. '#' → logprob: -2.2550010681152344
    3. 'def' → logprob: -4.255001068115234
    4. 'step' → logprob: -6.755001068115234
    5. 'delta' → logprob: -7.880001068115234
    6. 'n' → logprob: -8.255001068115234
    7. 'for' → logprob: -8.505001068115234
    8. 't' → logprob: -8.630001068115234
    9. 'from' → logprob: -9.130001068115234
    10. '
' → logprob: -9.130001068115234

Token 1880: ' développe' (ID: 102471)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5727078318595886
    2. 'def' → logprob: -1.5727078914642334
    3. 'continue' → logprob: -2.4477078914642334
    4. 'import' → logprob: -2.5727078914642334
    5. 'from' → logprob: -3.5727078914642334
    6. '_num' → logprob: -4.947707653045654
    7. 's' → logprob: -5.947707653045654
    8. 'num' → logprob: -5.947707653045654
    9. '=' → logprob: -6.197707653045654
    10. 'vais' → logprob: -6.197707653045654

Token 1881: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1093074232339859
    2. '#' → logprob: -2.9843075275421143
    3. ' v' → logprob: -4.359307289123535
    4. 'v' → logprob: -4.359307289123535
    5. ' a' → logprob: -4.984307289123535
    6. ' #' → logprob: -5.234307289123535
    7. 'a' → logprob: -5.359307289123535
    8. ' delta' → logprob: -6.609307289123535
    9. ' t' → logprob: -6.859307289123535
    10. 'delta' → logprob: -7.234307289123535

Token 1882: ' expressions' (ID: 43578)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06468323618173599
    2. 'diff' → logprob: -4.439683437347412
    3. 'def' → logprob: -4.689683437347412
    4. 'form' → logprob: -4.939683437347412
    5. 'conditions' → logprob: -4.939683437347412
    6. 'coeff' → logprob: -5.439683437347412
    7. 'angles' → logprob: -5.814683437347412
    8. 'express' → logprob: -5.814683437347412
    9. 'from' → logprob: -6.064683437347412
    10. 'équ' → logprob: -6.314683437347412

Token 1883: ' alg' (ID: 4485)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09800296276807785
    2. '#' → logprob: -2.5980029106140137
    3. 'from' → logprob: -5.723002910614014
    4. 't' → logprob: -5.848002910614014
    5. 'v' → logprob: -5.973002910614014
    6. 'delta' → logprob: -6.223002910614014
    7. ' #' → logprob: -6.723002910614014
    8. 'import' → logprob: -6.973002910614014
    9. '```' → logprob: -7.098002910614014
    10. '
' → logprob: -7.223002910614014

Token 1884: 'éb' (ID: 96403)
  Prédit: 'éb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éb' → logprob: -0.36052629351615906
    2. 'è' → logprob: -1.8605263233184814
    3. 'é' → logprob: -2.6105263233184814
    4. '#' → logprob: -3.1105263233184814
    5. 'ebra' → logprob: -3.9855263233184814
    6. 'e' → logprob: -5.860526084899902
    7. '=' → logprob: -6.235526084899902
    8. 'b' → logprob: -6.860526084899902
    9. '   ' → logprob: -6.985526084899902
    10. 'eb' → logprob: -7.110526084899902

Token 1885: 'riques' (ID: 82813)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -1.1515631675720215
    2. 'riques' → logprob: -1.1515631675720215
    3. 'r' → logprob: -2.0265631675720215
    4. 're' → logprob: -2.4015631675720215
    5. '#' → logprob: -2.5265631675720215
    6. 'ri' → logprob: -4.1515631675720215
    7. '`' → logprob: -4.4015631675720215
    8. '{' → logprob: -4.6515631675720215
    9. 'rique' → logprob: -5.0265631675720215
    10. '```' → logprob: -5.6515631675720215

Token 1886: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9369860291481018
    2. '   ' → logprob: -0.9369860291481018
    3. '#' → logprob: -2.811985969543457
    4. ',' → logprob: -3.311985969543457
    5. ' =' → logprob: -4.186985969543457
    6. '
' → logprob: -4.311985969543457
    7. ')' → logprob: -4.561985969543457
    8. 'def' → logprob: -4.561985969543457
    9. 'import' → logprob: -4.811985969543457
    10. ' t' → logprob: -4.936985969543457

Token 1887: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3039722740650177
    2. '#' → logprob: -1.4289722442626953
    3. 'from' → logprob: -4.553972244262695
    4. 'import' → logprob: -5.928972244262695
    5. '```' → logprob: -5.928972244262695
    6. 't' → logprob: -6.303972244262695
    7. '
' → logprob: -6.428972244262695
    8. '    
' → logprob: -7.428972244262695
    9. 'diff' → logprob: -8.178972244262695
    10. 'def' → logprob: -8.303972244262695

Token 1888: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.11286735534667969
    2. '   ' → logprob: -2.3628673553466797
    3. 'from' → logprob: -4.98786735534668
    4. '```' → logprob: -6.61286735534668
    5. 'v' → logprob: -6.73786735534668
    6. 'import' → logprob: -7.48786735534668
    7. 'for' → logprob: -7.61286735534668
    8. 'delta' → logprob: -7.98786735534668
    9. '
' → logprob: -8.23786735534668
    10. 't' → logprob: -8.48786735534668

Token 1889: ' angles' (ID: 43448)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03760277479887009
    2. '   ' → logprob: -3.662602663040161
    3. 'from' → logprob: -4.91260290145874
    4. 'import' → logprob: -7.28760290145874
    5. 'v' → logprob: -7.41260290145874
    6. '#
' → logprob: -7.78760290145874
    7. 'a' → logprob: -8.037602424621582
    8. '
' → logprob: -8.287602424621582
    9. 'delta' → logprob: -8.287602424621582
    10. 'def' → logprob: -8.412602424621582

Token 1890: ' modulo' (ID: 112372)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.10425780713558197
    2. 'h' → logprob: -2.854257822036743
    3. '#' → logprob: -4.229257583618164
    4. '_s' → logprob: -4.729257583618164
    5. ' =' → logprob: -5.229257583618164
    6. 's' → logprob: -5.979257583618164
    7. 'def' → logprob: -6.104257583618164
    8. '=' → logprob: -6.479257583618164
    9. 'diff' → logprob: -6.604257583618164
    10. '_' → logprob: -6.979257583618164

Token 1891: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.013400675728917122
    2. 't' → logprob: -4.388400554656982
    3. ' ' → logprob: -8.01340103149414
    4. '(t' → logprob: -8.51340103149414
    5. ')' → logprob: -9.26340103149414
    6. '180' → logprob: -10.13840103149414
    7. '`' → logprob: -10.88840103149414
    8. '   ' → logprob: -10.88840103149414
    9. '```' → logprob: -11.01340103149414
    10. '#' → logprob: -11.13840103149414

Token 1892: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -3.750436007976532e-05
    2. '180' → logprob: -10.25003719329834
    3. 't' → logprob: -13.25003719329834
    4. '36' → logprob: -16.125038146972656
    5. '60' → logprob: -16.750038146972656
    6. ' ' → logprob: -17.000038146972656
    7. '120' → logprob: -17.625038146972656
    8. '1' → logprob: -17.750038146972656
    9. '90' → logprob: -17.875038146972656
    10. '720' → logprob: -18.875038146972656

Token 1893: ' unités' (ID: 176121)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7058932781219482
    2. '   ' → logprob: -1.5808932781219482
    3. '
' → logprob: -2.0808932781219482
    4. 'def' → logprob: -3.4558932781219482
    5. ' =' → logprob: -3.8308932781219482
    6. 't' → logprob: -3.9558932781219482
    7. ':' → logprob: -4.205893516540527
    8. '\n' → logprob: -4.330893516540527
    9. ')' → logprob: -4.455893516540527
    10. '=' → logprob: -4.455893516540527

Token 1894: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31866058707237244
    2. ':' → logprob: -2.8186604976654053
    3. ',' → logprob: -3.4436604976654053
    4. ')' → logprob: -3.6936604976654053
    5. ' =' → logprob: -3.8186604976654053
    6. '#' → logprob: -3.8186604976654053
    7. '
' → logprob: -4.193660736083984
    8. '\n' → logprob: -4.193660736083984
    9. 'def' → logprob: -4.693660736083984
    10. '=' → logprob: -5.193660736083984

Token 1895: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2142971009016037
    2. '#' → logprob: -1.8392970561981201
    3. '\n' → logprob: -4.964297294616699
    4. 't' → logprob: -5.089297294616699
    5. 'def' → logprob: -5.214297294616699
    6. '
' → logprob: -5.464297294616699
    7. '    
' → logprob: -5.964297294616699
    8. 'import' → logprob: -6.589297294616699
    9. '...' → logprob: -6.839297294616699
    10. '\' → logprob: -7.339297294616699

Token 1896: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48138338327407837
    2. '#' (adapté à ' #') → logprob: -1.3563833236694336
    3. 'from' → logprob: -2.6063833236694336
    4. '
' → logprob: -3.6063833236694336
    5. 'import' → logprob: -4.731383323669434
    6. 'def' → logprob: -4.981383323669434
    7. 't' → logprob: -6.356383323669434
    8. 'n' → logprob: -7.106383323669434
    9. '```' → logprob: -7.231383323669434
    10. 'for' → logprob: -7.356383323669434

Token 1897: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6229108572006226
    2. '#' → logprob: -0.8729108572006226
    3. 'def' → logprob: -3.997910976409912
    4. 'from' → logprob: -4.122910976409912
    5. '
' → logprob: -5.622910976409912
    6. 'for' → logprob: -5.622910976409912
    7. 'import' → logprob: -6.497910976409912
    8. 't' → logprob: -7.122910976409912
    9. 'step' → logprob: -7.622910976409912
    10. 'n' → logprob: -8.122910499572754

Token 1898: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7708281874656677
    2. '#' → logprob: -1.1458282470703125
    3. 'def' → logprob: -2.6458282470703125
    4. 'vais' → logprob: -3.2708282470703125
    5. 'import' → logprob: -4.1458282470703125
    6. 'from' → logprob: -4.1458282470703125
    7. 's' → logprob: -4.8958282470703125
    8. '=' → logprob: -5.0208282470703125
    9. 'veux' → logprob: -5.5208282470703125
    10. 'va' → logprob: -5.5208282470703125

Token 1899: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1078990697860718
    2. 'for' → logprob: -1.1078990697860718
    3. '#' → logprob: -1.9828990697860718
    4. 't' → logprob: -2.4828991889953613
    5. ' for' → logprob: -3.1078991889953613
    6. 'def' → logprob: -3.4828991889953613
    7. 'H' → logprob: -5.107899188995361
    8. '
' → logprob: -5.232899188995361
    9. 's' → logprob: -5.357899188995361
    10. 'k' → logprob: -5.607899188995361

Token 1900: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2431997060775757
    2. 's' → logprob: -1.4931997060775757
    3. '_candidates' → logprob: -2.2431998252868652
    4. '#' → logprob: -2.6181998252868652
    5. '=' → logprob: -2.8681998252868652
    6. 'for' → logprob: -3.2431998252868652
    7. '_step' → logprob: -3.6181998252868652
    8. 'from' → logprob: -3.7431998252868652
    9. '_values' → logprob: -3.8681998252868652
    10. 'import' → logprob: -3.8681998252868652

Token 1901: ' lequel' (ID: 55154)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15348467230796814
    2. 'which' → logprob: -3.153484582901001
    3. '#' → logprob: -3.653484582901001
    4. 'a' → logprob: -4.52848482131958
    5. 'angle' → logprob: -4.65348482131958
    6. '0' → logprob: -4.65348482131958
    7. 'diff' → logprob: -4.90348482131958
    8. 's' → logprob: -5.40348482131958
    9. 'x' → logprob: -5.40348482131958
    10. '(' → logprob: -5.90348482131958

Token 1902: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34113919734954834
    2. '((' → logprob: -2.091139316558838
    3. '(as' → logprob: -2.216139316558838
    4. '(abs' → logprob: -3.841139316558838
    5. '6' → logprob: -3.966139316558838
    6. '#' → logprob: -4.841139316558838
    7. '(angle' → logprob: -6.466139316558838
    8. 'abs' → logprob: -6.716139316558838
    9. '(diff' → logprob: -7.341139316558838
    10. 'for' → logprob: -7.341139316558838

Token 1903: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21469274163246155
    2. 'from' → logprob: -1.7146927118301392
    3. 'for' → logprob: -5.08969259262085
    4. '   ' → logprob: -5.21469259262085
    5. 'import' → logprob: -8.089693069458008
    6. 'def' → logprob: -8.089693069458008
    7. '((' → logprob: -8.214693069458008
    8. '```' → logprob: -8.964693069458008
    9. '(' → logprob: -9.339693069458008
    10. '#
' → logprob: -9.714693069458008

Token 1904: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8993127942085266
    2. '#' (adapté à ' #') → logprob: -1.0243127346038818
    3. '(as' → logprob: -2.524312734603882
    4. '((' → logprob: -2.774312734603882
    5. 'for' → logprob: -3.774312734603882
    6. '(angle' → logprob: -3.899312734603882
    7. '6' → logprob: -4.524312973022461
    8. '(' → logprob: -4.524312973022461
    9. ' (' → logprob: -5.024312973022461
    10. 'as' → logprob: -5.274312973022461

Token 1905: ' |' (ID: 1022)
  Prédit: '(as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.2998560070991516
    2. '#' → logprob: -1.7998559474945068
    3. 'as' → logprob: -3.799855947494507
    4. '6' → logprob: -3.924855947494507
    5. 'from' → logprob: -4.424856185913086
    6. '(angle' → logprob: -4.549856185913086
    7. '((' → logprob: -4.799856185913086
    8. '(abs' → logprob: -5.174856185913086
    9. '(' → logprob: -5.549856185913086
    10. 'for' → logprob: -5.674856185913086

Token 1906: 'as' (ID: 288)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5519322156906128
    2. '(as' → logprob: -1.5519322156906128
    3. '6' → logprob: -1.8019322156906128
    4. 'as' → logprob: -3.4269323348999023
    5. '(t' → logprob: -4.926932334899902
    6. '((' → logprob: -5.176932334899902
    7. '(s' → logprob: -7.426932334899902
    8. '(abs' → logprob: -8.051932334899902
    9. '(angle' → logprob: -8.176932334899902
    10. 't' → logprob: -8.426932334899902

Token 1907: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1621469259262085
    2. '-' → logprob: -1.9121469259262085
    3. '-t' → logprob: -7.287147045135498
    4. '(t' → logprob: -7.787147045135498
    5. '_' → logprob: -8.28714656829834
    6. '-as' → logprob: -9.41214656829834
    7. ' +' → logprob: -9.41214656829834
    8. '+' → logprob: -9.91214656829834
    9. '-angle' → logprob: -9.91214656829834
    10. '-(' → logprob: -10.53714656829834

Token 1908: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.007433411665260792
    2. '(' → logprob: -5.7574334144592285
    3. '((' → logprob: -6.1324334144592285
    4. '(am' → logprob: -6.7574334144592285
    5. 'ah' → logprob: -7.1324334144592285
    6. ' am' → logprob: -10.38243293762207
    7. '(((' → logprob: -11.00743293762207
    8. ' (' → logprob: -11.50743293762207
    9. 'ams' → logprob: -11.88243293762207
    10. 'amh' → logprob: -12.00743293762207

Token 1909: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0020815012976527214
    2. ' +' → logprob: -7.252081394195557
    3. ')' → logprob: -7.752081394195557
    4. ' |' → logprob: -7.877081394195557
    5. '+' → logprob: -8.252081871032715
    6. ' -' → logprob: -8.877081871032715
    7. '%' → logprob: -10.127081871032715
    8. ')|' → logprob: -10.377081871032715
    9. '|\' → logprob: -10.877081871032715
    10. ')%' → logprob: -11.377081871032715

Token 1910: ' mod' (ID: 1812)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2547093331813812
    2. ')' → logprob: -2.004709243774414
    3. '==' → logprob: -2.879709243774414
    4. ' %' → logprob: -4.504709243774414
    5. '%' → logprob: -4.754709243774414
    6. ' +' → logprob: -6.379709243774414
    7. '   ' → logprob: -6.379709243774414
    8. ' =' → logprob: -6.379709243774414
    9. '|' → logprob: -6.629709243774414
    10. ' )' → logprob: -6.629709243774414

Token 1911: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -3.5597102396423e-05
    2. '180' → logprob: -10.250035285949707
    3. ' ' → logprob: -15.875035285949707
    4. '60' → logprob: -17.750036239624023
    5. 't' → logprob: -18.625036239624023
    6. '36' → logprob: -19.375036239624023
    7. '120' → logprob: -19.875036239624023
    8. '```' → logprob: -20.000036239624023
    9. '90' → logprob: -20.875036239624023
    10. '359' → logprob: -21.500036239624023

Token 1912: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.306760805164231e-05
    2. '180' → logprob: -11.25001335144043
    3. '60' → logprob: -18.12501335144043
    4. '36' → logprob: -18.50001335144043
    5. ' ' → logprob: -19.50001335144043
    6. '120' → logprob: -19.50001335144043
    7. 't' → logprob: -19.62501335144043
    8. '1' → logprob: -19.87501335144043
    9. '{' → logprob: -20.12501335144043
    10. '```' → logprob: -20.25001335144043

Token 1913: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08802959322929382
    2. '==' → logprob: -3.088029623031616
    3. ' =' → logprob: -3.713029623031616
    4. '=' → logprob: -4.588029384613037
    5. '   ' → logprob: -6.213029384613037
    6. 'def' → logprob: -7.463029384613037
    7. ')' → logprob: -7.463029384613037
    8. ' ' → logprob: -8.588029861450195
    9. '```' → logprob: -8.713029861450195
    10. ',' → logprob: -9.088029861450195

Token 1914: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.11090627312660217
    2. 'abs' → logprob: -2.6109063625335693
    3. '|(' → logprob: -3.6109063625335693
    4. '(abs' → logprob: -5.98590612411499
    5. '|min' → logprob: -6.86090612411499
    6. '#' → logprob: -8.610906600952148
    7. ' |' → logprob: -8.860906600952148
    8. '(|' → logprob: -9.235906600952148
    9. 'minimal' → logprob: -9.235906600952148
    10. ' abs' → logprob: -9.485906600952148

Token 1915: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.11001303791999817
    2. 'ah' → logprob: -2.985013008117676
    3. '(' → logprob: -3.360013008117676
    4. '((' → logprob: -5.735013008117676
    5. '(t' → logprob: -5.735013008117676
    6. '(as' → logprob: -5.860013008117676
    7. 'abs' → logprob: -5.985013008117676
    8. 't' → logprob: -6.235013008117676
    9. '(H' → logprob: -6.860013008117676
    10. '360' → logprob: -6.860013008117676

Token 1916: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22543060779571533
    2. '-' → logprob: -1.6004306077957153
    3. ' ' → logprob: -11.600430488586426
    4. ' ' → logprob: -12.850430488586426
    5. ' -
' → logprob: -13.975430488586426
    6. 'def' → logprob: -13.975430488586426
    7. '-
' → logprob: -14.475430488586426
    8. '  ' → logprob: -14.600430488586426
    9. '−' → logprob: -14.600430488586426
    10. ',' → logprob: -14.725430488586426

Token 1917: ' ah' (ID: 5369)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -6.694766489090398e-05
    2. '(' → logprob: -10.500066757202148
    3. ' ah' → logprob: -10.750066757202148
    4. 'am' → logprob: -11.125066757202148
    5. '((' → logprob: -13.250066757202148
    6. 'Ah' → logprob: -15.750066757202148
    7. ' (' → logprob: -15.750066757202148
    8. ' ' → logprob: -15.875066757202148
    9. '   ' → logprob: -15.875066757202148
    10. 'mh' → logprob: -16.62506675720215

Token 1918: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00042292833677493036
    2. ' |' → logprob: -9.125422477722168
    3. '|
' → logprob: -9.375422477722168
    4. 'mod' → logprob: -9.875422477722168
    5. ')' → logprob: -10.125422477722168
    6. ' mod' → logprob: -10.125422477722168
    7. '%' → logprob: -10.500422477722168
    8. '|\' → logprob: -10.750422477722168
    9. ')|' → logprob: -11.625422477722168
    10. ']' → logprob: -12.375422477722168

Token 1919: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6541154980659485
    2. '
' → logprob: -1.9041154384613037
    3. '#' → logprob: -2.4041154384613037
    4. ' and' → logprob: -3.4041154384613037
    5. 'def' → logprob: -3.6541154384613037
    6. ')' → logprob: -3.9041154384613037
    7. ':' → logprob: -4.029115676879883
    8. '=' → logprob: -4.029115676879883
    9. ' +' → logprob: -4.404115676879883
    10. '%' → logprob: -4.404115676879883

Token 1920: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '180' → logprob: -15.875021934509277
    4. ' ' → logprob: -19.25002098083496
    5. '```' → logprob: -19.37502098083496
    6. '(' → logprob: -19.50002098083496
    7. '260' → logprob: -19.50002098083496
    8. '720' → logprob: -19.87502098083496
    9. '60' → logprob: -19.87502098083496
    10. '860' → logprob: -20.12502098083496

Token 1921: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '180' → logprob: -17.0
    3. '(' → logprob: -18.125
    4. ' ' → logprob: -18.625
    5. '```' → logprob: -18.625
    6. '#' → logprob: -19.875
    7. '260' → logprob: -20.0
    8. '0' → logprob: -20.0
    9. '36' → logprob: -20.25
    10. '[' → logprob: -20.25

Token 1922: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.155461072921753
    2. '#' → logprob: -1.280461072921753
    3. '   ' → logprob: -1.405461072921753
    4. 'def' → logprob: -2.780461072921753
    5. 'import' → logprob: -3.655461072921753
    6. '\n' → logprob: -3.905461072921753
    7. '

' → logprob: -4.780461311340332
    8. '\' → logprob: -4.780461311340332
    9. '#
' → logprob: -4.905461311340332
    10. 'from' → logprob: -5.155461311340332

Token 1923: ' non' (ID: 2893)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25260964035987854
    2. 'abs' → logprob: -2.8776097297668457
    3. 'as' → logprob: -3.5026097297668457
    4. '((' → logprob: -3.6276097297668457
    5. '(abs' → logprob: -3.8776097297668457
    6. 'not' → logprob: -4.002609729766846
    7. ' (' → logprob: -4.377609729766846
    8. 't' → logprob: -4.502609729766846
    9. '(s' → logprob: -4.752609729766846
    10. ' abs' → logprob: -5.252609729766846

Token 1924: ' nul' (ID: 64435)
  Prédit: 'nul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nul' → logprob: -0.21260979771614075
    2. 'n' → logprob: -2.3376097679138184
    3. 'ég' → logprob: -3.3376097679138184
    4. '0' → logprob: -4.462609767913818
    5. '=' → logprob: -4.837609767913818
    6. 'null' → logprob: -4.962609767913818
    7. 'égal' → logprob: -4.962609767913818
    8. 'zero' → logprob: -5.087609767913818
    9. ' nul' → logprob: -5.462609767913818
    10. 'égalité' → logprob: -5.837609767913818

Token 1925: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5242960453033447
    2. '#' → logprob: -1.0242960453033447
    3. '
' → logprob: -3.6492960453033447
    4. 'def' → logprob: -4.774295806884766
    5. 'import' → logprob: -5.274295806884766
    6. 'from' → logprob: -6.524295806884766
    7. '```' → logprob: -6.774295806884766
    8. '\n' → logprob: -7.024295806884766
    9. '#
' → logprob: -7.149295806884766
    10. ')' → logprob: -7.274295806884766

Token 1926: ' pas' (ID: 2173)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.06936514377594
    2. 'abs' → logprob: -1.56936514377594
    3. 'no' → logprob: -2.0693650245666504
    4. 'not' → logprob: -2.0693650245666504
    5. 'ah' → logprob: -3.3193650245666504
    6. '|' → logprob: -3.9443650245666504
    7. '#' → logprob: -4.06936502456665
    8. 'pas' → logprob: -4.06936502456665
    9. ' abs' → logprob: -4.44436502456665
    10. 's' → logprob: -4.44436502456665

Token 1927: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6725391149520874
    2. 'd' → logprob: -2.047539234161377
    3. 'de' → logprob: -2.672539234161377
    4. ' ég' → logprob: -2.797539234161377
    5. '(abs' → logprob: -3.047539234161377
    6. ' (' → logprob: -3.172539234161377
    7. '(a' → logprob: -3.797539234161377
    8. '(de' → logprob: -4.172539234161377
    9. '(d' → logprob: -4.672539234161377
    10. '(as' → logprob: -4.797539234161377

Token 1928: ' chev' (ID: 127415)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4493641257286072
    2. 'che' → logprob: -2.199364185333252
    3. ' overlap' → logprob: -2.574364185333252
    4. ' chev' → logprob: -2.574364185333252
    5. ' deux' → logprob: -2.949364185333252
    6. '2' → logprob: -4.824364185333252
    7. 'over' → logprob: -4.949364185333252
    8. ' ' → logprob: -5.199364185333252
    9. 'double' → logprob: -5.449364185333252
    10. 's' → logprob: -5.574364185333252

Token 1929: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.030148927122354507
    2. 'auch' → logprob: -3.905148983001709
    3. 'a' → logprob: -5.780148983001709
    4. 'er' → logprob: -6.155148983001709
    5. 'au' → logprob: -6.155148983001709
    6. 'e' → logprob: -7.405148983001709
    7. 'ach' → logprob: -7.405148983001709
    8. '#' → logprob: -8.40514850616455
    9. 'auge' → logprob: -9.40514850616455
    10. 'arch' → logprob: -9.65514850616455

Token 1930: '

' (ID: 279)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -4.704065213445574e-05
    2. 'ement' → logprob: -10.875046730041504
    3. 'm' → logprob: -12.250046730041504
    4. 'rement' → logprob: -12.250046730041504
    5. 'ments' → logprob: -12.625046730041504
    6. 't' → logprob: -12.750046730041504
    7. 'nement' → logprob: -13.000046730041504
    8. '}' → logprob: -13.250046730041504
    9. 'lement' → logprob: -13.250046730041504
    10. 'nt' → logprob: -13.750046730041504

Token 1931: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09670579433441162
    2. '
' → logprob: -2.596705913543701
    3. '#' → logprob: -5.096705913543701
    4. '    
' → logprob: -5.346705913543701
    5. '\n' → logprob: -5.721705913543701
    6. 'def' → logprob: -6.346705913543701
    7. '\' → logprob: -7.721705913543701
    8. '```' → logprob: -8.721705436706543
    9. '

' → logprob: -9.096705436706543
    10. '   
' → logprob: -9.346705436706543

Token 1932: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14602422714233398
    2. '#' (adapté à ' #') → logprob: -2.271024227142334
    3. '
' → logprob: -3.896024227142334
    4. 'v' → logprob: -5.771024227142334
    5. 'def' → logprob: -6.146024227142334
    6. 'delta' → logprob: -6.646024227142334
    7. 'from' → logprob: -6.896024227142334
    8. 'for' → logprob: -7.146024227142334
    9. 'n' → logprob: -7.396024227142334
    10. '    
' → logprob: -7.521024227142334

Token 1933: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07441327720880508
    2. '#' → logprob: -2.824413299560547
    3. 'def' → logprob: -5.449413299560547
    4. '
' → logprob: -5.574413299560547
    5. 'from' → logprob: -6.449413299560547
    6. 'import' → logprob: -6.949413299560547
    7. 'n' → logprob: -7.449413299560547
    8. '    
' → logprob: -7.949413299560547
    9. 'for' → logprob: -8.199413299560547
    10. 'delta' → logprob: -9.074413299560547

Token 1934: ' approche' (ID: 102373)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5522677898406982
    2. '#' → logprob: -1.3022677898406982
    3. 'import' → logprob: -2.9272677898406982
    4. 'def' → logprob: -3.0522677898406982
    5. '   ' → logprob: -4.052268028259277
    6. 'expl' → logprob: -5.052268028259277
    7. ' continue' → logprob: -5.427268028259277
    8. '
' → logprob: -5.552268028259277
    9. ' #' → logprob: -5.677268028259277
    10. 'pass' → logprob: -6.052268028259277

Token 1935: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06857460737228394
    2. ':' → logprob: -3.9435746669769287
    3. ',' → logprob: -4.69357442855835
    4. ')' → logprob: -4.94357442855835
    5. '=' → logprob: -5.19357442855835
    6. ' =' → logprob: -5.56857442855835
    7. ' t' → logprob: -6.19357442855835
    8. 'def' → logprob: -6.31857442855835
    9. 'import' → logprob: -6.31857442855835
    10. 't' → logprob: -6.44357442855835

Token 1936: ' valeurs' (ID: 73668)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.7933325171470642
    2. 'diff' → logprob: -2.043332576751709
    3. 'calcul' → logprob: -2.043332576751709
    4. '#' → logprob: -2.418332576751709
    5. 't' → logprob: -3.293332576751709
    6. 'val' → logprob: -3.293332576751709
    7. 'conditions' → logprob: -3.668332576751709
    8. 'fra' → logprob: -3.918332576751709
    9. '```' → logprob: -4.918332576751709
    10. 'dif' → logprob: -5.043332576751709

Token 1937: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.126600980758667
    2. ':' → logprob: -3.126600980758667
    3. ',' → logprob: -4.126601219177246
    4. '+' → logprob: -5.251601219177246
    5. ')' → logprob: -5.376601219177246
    6. '#' → logprob: -5.501601219177246
    7. ' =' → logprob: -5.501601219177246
    8. 'import' → logprob: -5.626601219177246
    9. ' +' → logprob: -5.751601219177246
    10. '=' → logprob: -5.876601219177246

Token 1938: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13817685842514038
    2. '#' → logprob: -2.888176918029785
    3. 'for' → logprob: -3.388176918029785
    4. 'from' → logprob: -4.888176918029785
    5. 'n' → logprob: -5.263176918029785
    6. '+' → logprob: -5.388176918029785
    7. ' for' → logprob: -6.013176918029785
    8. 't' → logprob: -6.138176918029785
    9. 'def' → logprob: -6.138176918029785
    10. '
' → logprob: -6.263176918029785

Token 1939: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5709608793258667
    2. 't' → logprob: -1.0709608793258667
    3. 'n' → logprob: -2.5709609985351562
    4. 'N' → logprob: -6.070960998535156
    5. 'x' → logprob: -6.070960998535156
    6. 'm' → logprob: -6.195960998535156
    7. 'i' → logprob: -6.320960998535156
    8. '#' → logprob: -6.820960998535156
    9. 'diff' → logprob: -7.195960998535156
    10. 'delta' → logprob: -7.320960998535156

Token 1940: ' par' (ID: 686)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6681024432182312
    2. '   ' → logprob: -1.043102502822876
    3. ',' → logprob: -3.293102502822876
    4. '
' → logprob: -4.543102264404297
    5. '#' → logprob: -4.668102264404297
    6. '+' → logprob: -4.793102264404297
    7. 'import' → logprob: -4.918102264404297
    8. ')' → logprob: -5.043102264404297
    9. '=' → logprob: -5.043102264404297
    10. '<|end|>' → logprob: -5.043102264404297

Token 1941: ' l' (ID: 305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5474200248718262
    2. '(' → logprob: -1.5474200248718262
    3. 'i' → logprob: -2.297420024871826
    4. 'l' → logprob: -2.922420024871826
    5. 't' → logprob: -3.047420024871826
    6. '0' → logprob: -3.422420024871826
    7. '1' → logprob: -3.547420024871826
    8. 'la' → logprob: -3.547420024871826
    9. 'num' → logprob: -3.672420024871826
    10. 'une' → logprob: -3.797420024871826

Token 1942: ''équ' (ID: 170507)
  Prédit: 'iné'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iné' → logprob: -0.27515825629234314
    2. 'im' → logprob: -2.400158166885376
    3. 'a' → logprob: -2.525158166885376
    4. 'oop' → logprob: -3.775158166885376
    5. 'imité' → logprob: -3.775158166885376
    6. '#' → logprob: -5.275158405303955
    7. 'import' → logprob: -5.400158405303955
    8. 'oops' → logprob: -6.025158405303955
    9. 'égalité' → logprob: -6.900158405303955
    10. 'e' → logprob: -7.025158405303955

Token 1943: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.6446213722229004
    2. 'a' → logprob: -0.7696213722229004
    3. 'al' → logprob: -5.5196213722229
    4. '
' → logprob: -6.6446213722229
    5. 'ilibre' → logprob: -6.7696213722229
    6. 'e' → logprob: -6.8946213722229
    7. 'ivalence' → logprob: -7.2696213722229
    8. 'angle' → logprob: -7.3946213722229
    9. 'alité' → logprob: -7.3946213722229
    10. '=' → logprob: -8.144620895385742

Token 1944: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9246000051498413
    2. ' =' → logprob: -1.9246000051498413
    3. '(' → logprob: -2.174600124359131
    4. '=' → logprob: -2.424600124359131
    5. ',' → logprob: -2.549600124359131
    6. ' (' → logprob: -2.674600124359131
    7. '+' → logprob: -3.424600124359131
    8. ' #' → logprob: -3.674600124359131
    9. ' +' → logprob: -3.924600124359131
    10. '#' → logprob: -3.924600124359131

Token 1945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6898170709609985
    2. ' (' → logprob: -1.9398170709609985
    3. 't' → logprob: -2.939816951751709
    4. ' ' → logprob: -3.439816951751709
    5. ' t' → logprob: -3.439816951751709
    6. '#' → logprob: -3.564816951751709
    7. 'diff' → logprob: -3.564816951751709
    8. '(s' → logprob: -4.064816951751709
    9. '(' → logprob: -4.064816951751709
    10. '(t' → logprob: -4.189816951751709

Token 1946: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5489595532417297
    2. '#' (adapté à ' #') → logprob: -0.9239595532417297
    3. 'import' → logprob: -5.173959732055664
    4. 'for' → logprob: -5.298959732055664
    5. '   ' → logprob: -5.423959732055664
    6. '360' → logprob: -5.923959732055664
    7. '(' → logprob: -6.548959732055664
    8. '(s' → logprob: -6.923959732055664
    9. '```' → logprob: -7.173959732055664
    10. '(
' → logprob: -7.173959732055664

Token 1947: ' |' (ID: 1022)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5421395301818848
    2. 'from' → logprob: -0.9171395301818848
    3. 'for' → logprob: -4.542139530181885
    4. '6' → logprob: -6.042139530181885
    5. '360' → logprob: -6.542139530181885
    6. '(' → logprob: -7.167139530181885
    7. 'def' → logprob: -7.167139530181885
    8. '```' → logprob: -7.417139530181885
    9. 'abs' → logprob: -7.917139530181885
    10. '((' → logprob: -7.917139530181885

Token 1948: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9700545072555542
    2. '(as' → logprob: -1.3450545072555542
    3. 'as' → logprob: -1.8450545072555542
    4. '6' → logprob: -2.0950546264648438
    5. '((' → logprob: -2.9700546264648438
    6. '(t' → logprob: -4.095054626464844
    7. '(abs' → logprob: -5.595054626464844
    8. '(s' → logprob: -5.595054626464844
    9. 'abs' → logprob: -6.845054626464844
    10. '(angle' → logprob: -6.970054626464844

Token 1949: '6' (ID: 21)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7261776924133301
    2. 'as' → logprob: -1.22617769241333
    3. '6' → logprob: -2.22617769241333
    4. '((' → logprob: -3.10117769241333
    5. '(as' → logprob: -3.72617769241333
    6. '360' → logprob: -3.97617769241333
    7. '(t' → logprob: -4.47617769241333
    8. 't' → logprob: -5.10117769241333
    9. '(H' → logprob: -5.60117769241333
    10. '(s' → logprob: -5.85117769241333

Token 1950: 't' (ID: 83)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5737923979759216
    2. '*t' → logprob: -0.9487923979759216
    3. '/' → logprob: -3.3237924575805664
    4. 't' → logprob: -4.948792457580566
    5. '*' → logprob: -5.823792457580566
    6. ' /' → logprob: -6.698792457580566
    7. ')' → logprob: -6.698792457580566
    8. '*(' → logprob: -8.198792457580566
    9. ' -' → logprob: -8.448792457580566
    10. ' t' → logprob: -9.448792457580566

Token 1951: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04334193468093872
    2. ')' → logprob: -3.543341875076294
    3. '-' → logprob: -4.793342113494873
    4. ' ' → logprob: -5.918342113494873
    5. ' %' → logprob: -7.293342113494873
    6. '%' → logprob: -7.543342113494873
    7. ' *' → logprob: -7.668342113494873
    8. '*' → logprob: -8.543341636657715
    9. ' )' → logprob: -8.543341636657715
    10. ' /' → logprob: -8.918341636657715

Token 1952: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31618642807006836
    2. '0' → logprob: -1.3161864280700684
    3. ' (' → logprob: -6.816186428070068
    4. '(H' → logprob: -6.816186428070068
    5. '(t' → logprob: -8.191186904907227
    6. 'H' → logprob: -9.566186904907227
    7. '(.' → logprob: -9.566186904907227
    8. ' ' → logprob: -9.566186904907227
    9. '6' → logprob: -10.066186904907227
    10. '1' → logprob: -10.066186904907227

Token 1953: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35287612676620483
    2. '0' → logprob: -1.2278761863708496
    3. '(t' → logprob: -5.85287618637085
    4. ' (' → logprob: -6.97787618637085
    5. 't' → logprob: -8.227875709533691
    6. '(H' → logprob: -8.727875709533691
    7. '((' → logprob: -10.352875709533691
    8. ' ' → logprob: -10.352875709533691
    9. '6' → logprob: -10.727875709533691
    10. '1' → logprob: -10.727875709533691

Token 1954: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.097437315271236e-05
    2. ',' → logprob: -10.75005054473877
    3. 't' → logprob: -10.87505054473877
    4. '#' → logprob: -12.75005054473877
    5. ' .' → logprob: -13.12505054473877
    6. '0' → logprob: -14.12505054473877
    7. ' ' → logprob: -14.25005054473877
    8. ')' → logprob: -14.37505054473877
    9. '   ' → logprob: -14.75005054473877
    10. '.t' → logprob: -14.87505054473877

Token 1955: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017195509281009436
    2. '6' → logprob: -8.750171661376953
    3. '```' → logprob: -12.937671661376953
    4. '[' → logprob: -13.250171661376953
    5. '10' → logprob: -13.750171661376953
    6. '0' → logprob: -14.250171661376953
    7. '100' → logprob: -14.437671661376953
    8. '{' → logprob: -14.625171661376953
    9. '06' → logprob: -14.812671661376953
    10. '(' → logprob: -14.875171661376953

Token 1956: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007060127332806587
    2. '*t' → logprob: -5.0070600509643555
    3. ' t' → logprob: -8.632060050964355
    4. '*' → logprob: -9.507060050964355
    5. ' *' → logprob: -9.632060050964355
    6. ')' → logprob: -11.132060050964355
    7. ')t' → logprob: -11.507060050964355
    8. '`t' → logprob: -14.257060050964355
    9. '```' → logprob: -14.757060050964355
    10. '   ' → logprob: -15.882060050964355

Token 1957: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018555138260126114
    2. ')|' → logprob: -4.518555164337158
    3. '|' → logprob: -5.643555164337158
    4. ' )' → logprob: -6.393555164337158
    5. ' -' → logprob: -6.643555164337158
    6. ' +' → logprob: -7.518555164337158
    7. '*' → logprob: -9.3935546875
    8. ' |' → logprob: -9.5185546875
    9. '+' → logprob: -10.1435546875
    10. ' *' → logprob: -10.2685546875

Token 1958: ' mod' (ID: 1812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49468886852264404
    2. '|' → logprob: -1.494688868522644
    3. ' -' → logprob: -2.4946889877319336
    4. ' )' → logprob: -4.244688987731934
    5. ' *' → logprob: -4.369688987731934
    6. ' +' → logprob: -4.494688987731934
    7. '*' → logprob: -5.119688987731934
    8. ' |' → logprob: -5.119688987731934
    9. '-' → logprob: -5.244688987731934
    10. ' ' → logprob: -5.369688987731934

Token 1959: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. '180' → logprob: -14.625036239624023
    4. '{' → logprob: -17.000036239624023
    5. '36' → logprob: -17.750036239624023
    6. ' ' → logprob: -18.250036239624023
    7. '60' → logprob: -18.375036239624023
    8. '(' → logprob: -18.625036239624023
    9. '720' → logprob: -18.625036239624023
    10. '```' → logprob: -18.875036239624023

Token 1960: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -6.704273118884885e-07
    2. '60' → logprob: -14.875000953674316
    3. '36' → logprob: -15.750000953674316
    4. '(' → logprob: -16.875
    5. '180' → logprob: -16.875
    6. ' ' → logprob: -17.375
    7. '{' → logprob: -17.5
    8. '"' → logprob: -19.25
    9. ''' → logprob: -19.375
    10. '6' → logprob: -19.75

Token 1961: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.38866716623306274
    2. ')' → logprob: -1.638667106628418
    3. ' -' → logprob: -3.013667106628418
    4. ' =' → logprob: -3.138667106628418
    5. '=' → logprob: -4.013667106628418
    6. ' |' → logprob: -5.138667106628418
    7. ' ' → logprob: -5.638667106628418
    8. ' ==' → logprob: -5.888667106628418
    9. ' )' → logprob: -6.638667106628418
    10. '   ' → logprob: -7.263667106628418

Token 1962: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9273118376731873
    2. ' ' → logprob: -2.177311897277832
    3. ' =' → logprob: -2.427311897277832
    4. ' ==' → logprob: -2.427311897277832
    5. '=' → logprob: -2.802311897277832
    6. ')' → logprob: -2.927311897277832
    7. '   ' → logprob: -3.302311897277832
    8. ',' → logprob: -3.427311897277832
    9. ' *' → logprob: -3.427311897277832
    10. '-' → logprob: -3.677311897277832

Token 1963: ' |' (ID: 1022)
  Prédit: '|('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|(' → logprob: -0.4896289110183716
    2. '|' → logprob: -0.9896289110183716
    3. 'abs' → logprob: -4.239628791809082
    4. ' |' → logprob: -7.864628791809082
    5. '#' → logprob: -8.864628791809082
    6. '(abs' → logprob: -9.239628791809082
    7. '60' → logprob: -10.114628791809082
    8. '(' → logprob: -10.239628791809082
    9. '|min' → logprob: -10.239628791809082
    10. '|\' → logprob: -10.239628791809082

Token 1964: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0525168739259243
    2. '((' → logprob: -3.9275169372558594
    3. '(abs' → logprob: -3.9275169372558594
    4. 'abs' → logprob: -4.802516937255859
    5. '(H' → logprob: -5.802516937255859
    6. ' (' → logprob: -8.17751693725586
    7. '|(' → logprob: -8.80251693725586
    8. '6' → logprob: -10.67751693725586
    9. '|' → logprob: -11.17751693725586
    10. ' abs' → logprob: -11.30251693725586

Token 1965: '6' (ID: 21)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06627118587493896
    2. '(H' → logprob: -3.3162713050842285
    3. '((' → logprob: -3.6912713050842285
    4. '6' → logprob: -6.1912713050842285
    5. ' (' → logprob: -7.6912713050842285
    6. '360' → logprob: -8.81627082824707
    7. '(abs' → logprob: -9.06627082824707
    8. '(((' → logprob: -10.56627082824707
    9. 'H' → logprob: -10.81627082824707
    10. '(s' → logprob: -11.31627082824707

Token 1966: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.988221684878226e-06
    2. ' t' → logprob: -12.375006675720215
    3. '*t' → logprob: -13.375006675720215
    4. '*' → logprob: -14.250006675720215
    5. '`t' → logprob: -15.875006675720215
    6. '-' → logprob: -16.50000762939453
    7. ')t' → logprob: -16.87500762939453
    8. ' *' → logprob: -17.00000762939453
    9. '	t' → logprob: -17.00000762939453
    10. '#' → logprob: -17.12500762939453

Token 1967: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014673339203000069
    2. '-' → logprob: -4.264673233032227
    3. ' ' → logprob: -7.639673233032227
    4. '   ' → logprob: -12.014673233032227
    5. ' ' → logprob: -12.139673233032227
    6. '    ' → logprob: -12.514673233032227
    7. '  ' → logprob: -12.639673233032227
    8. ' -
' → logprob: -12.889673233032227
    9. ')' → logprob: -13.389673233032227
    10. '<|end|>' → logprob: -13.389673233032227

Token 1968: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33812016248703003
    2. '(H' → logprob: -1.9631202220916748
    3. '(t' → logprob: -2.463120222091675
    4. '(h' → logprob: -3.963120222091675
    5. ' (' → logprob: -3.963120222091675
    6. '((' → logprob: -4.088119983673096
    7. '0' → logprob: -5.838119983673096
    8. '\' → logprob: -6.588119983673096
    9. '360' → logprob: -7.338119983673096
    10. '(angle' → logprob: -7.463119983673096

Token 1969: '360' (ID: 9870)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6128866076469421
    2. '(' → logprob: -1.362886667251587
    3. 't' → logprob: -2.112886667251587
    4. '360' → logprob: -2.612886667251587
    5. ' (' → logprob: -5.737886428833008
    6. '0' → logprob: -6.112886428833008
    7. '((' → logprob: -6.987886428833008
    8. '(H' → logprob: -7.112886428833008
    9. ' t' → logprob: -7.862886428833008
    10. '\' → logprob: -8.487886428833008

Token 1970: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.13392606377601624
    2. '/(' → logprob: -2.5089261531829834
    3. ' /' → logprob: -3.2589261531829834
    4. 't' → logprob: -5.383925914764404
    5. '/H' → logprob: -7.133925914764404
    6. ' t' → logprob: -9.758926391601562
    7. ' /(' → logprob: -10.383926391601562
    8. '/h' → logprob: -11.133926391601562
    9. '/t' → logprob: -11.258926391601562
    10. ')/(' → logprob: -11.508926391601562

Token 1971: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0041440497152507305
    2. 'H' → logprob: -5.629144191741943
    3. '(' → logprob: -7.754144191741943
    4. ' (' → logprob: -9.129143714904785
    5. '{' → logprob: -12.754143714904785
    6. ' H' → logprob: -13.879143714904785
    7. '10' → logprob: -14.004143714904785
    8. '\(' → logprob: -14.754143714904785
    9. ')' → logprob: -14.879143714904785
    10. '((' → logprob: -15.629143714904785

Token 1972: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.012612665072083473
    2. '360' → logprob: -4.387612819671631
    3. ' *' → logprob: -9.887612342834473
    4. '   ' → logprob: -11.512612342834473
    5. ' ' → logprob: -11.762612342834473
    6. '**' → logprob: -12.262612342834473
    7. ' ' → logprob: -12.387612342834473
    8. ')' → logprob: -12.637612342834473
    9. '10' → logprob: -12.887612342834473
    10. '```' → logprob: -13.012612342834473

Token 1973: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.001328572048805654
    2. '(' → logprob: -6.626328468322754
    3. ' ' → logprob: -13.751328468322754
    4. '36' → logprob: -14.626328468322754
    5. '10' → logprob: -14.751328468322754
    6. ' (' → logprob: -15.501328468322754
    7. '60' → logprob: -15.626328468322754
    8. '```' → logprob: -15.876328468322754
    9. ')' → logprob: -16.50132942199707
    10. '   ' → logprob: -16.62632942199707

Token 1974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ')' → logprob: -13.75000286102295
    3. '00' → logprob: -13.75000286102295
    4. '))' → logprob: -14.87500286102295
    5. '```' → logprob: -15.50000286102295
    6. '000' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.125003814697266
    8. ')))' → logprob: -16.375003814697266
    9. '(' → logprob: -16.937503814697266
    10. ')]' → logprob: -17.250003814697266

Token 1975: '))*' (ID: 81502)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01618393138051033
    2. '))*' → logprob: -4.266183853149414
    3. ')' → logprob: -6.391183853149414
    4. ')t' → logprob: -8.641183853149414
    5. '0' → logprob: -10.016183853149414
    6. ')*' → logprob: -10.266183853149414
    7. 't' → logprob: -10.266183853149414
    8. ')))' → logprob: -10.641183853149414
    9. ' ))' → logprob: -11.266183853149414
    10. '   ' → logprob: -12.391183853149414

Token 1976: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6399203538894653
    2. '(H' → logprob: -0.7649203538894653
    3. '(' → logprob: -6.014920234680176
    4. '360' → logprob: -6.139920234680176
    5. 'H' → logprob: -6.889920234680176
    6. '(t' → logprob: -7.389920234680176
    7. ' t' → logprob: -7.764920234680176
    8. ' (' → logprob: -7.889920234680176
    9. '1' → logprob: -8.889920234680176
    10. '100' → logprob: -10.389920234680176

Token 1977: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011645073536783457
    2. ' )' → logprob: -7.876164436340332
    3. ')|' → logprob: -8.751164436340332
    4. ')%' → logprob: -8.751164436340332
    5. '))' → logprob: -8.876164436340332
    6. 'mod' → logprob: -9.376164436340332
    7. ' mod' → logprob: -10.376164436340332
    8. '0' → logprob: -10.376164436340332
    9. '   ' → logprob: -10.376164436340332
    10. '),' → logprob: -10.626164436340332

Token 1978: ' mod' (ID: 1812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009490952361375093
    2. 'mod' → logprob: -7.500948905944824
    3. ' mod' → logprob: -8.750948905944824
    4. ' )' → logprob: -9.375948905944824
    5. '|' → logprob: -10.125948905944824
    6. ')%' → logprob: -10.625948905944824
    7. '0' → logprob: -11.000948905944824
    8. '%' → logprob: -11.375948905944824
    9. '   ' → logprob: -12.000948905944824
    10. '#' → logprob: -12.250948905944824

Token 1979: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.025235291570425034
    2. '(' → logprob: -3.900235176086426
    3. ' (' → logprob: -5.650235176086426
    4. ' ' → logprob: -6.775235176086426
    5. '(H' → logprob: -11.525235176086426
    6. ' ' → logprob: -11.650235176086426
    7. '180' → logprob: -12.775235176086426
    8. '```' → logprob: -14.025235176086426
    9. '60' → logprob: -15.025235176086426
    10. '((' → logprob: -15.775235176086426

Token 1980: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.03816312924027443
    2. '(' → logprob: -3.288163185119629
    3. '(H' → logprob: -9.288163185119629
    4. ' (' → logprob: -11.288163185119629
    5. '{' → logprob: -11.913163185119629
    6. ' ' → logprob: -12.163163185119629
    7. '((' → logprob: -13.663163185119629
    8. '60' → logprob: -14.163163185119629
    9. '180' → logprob: -14.788163185119629
    10. '720' → logprob: -14.913163185119629

Token 1981: '|

' (ID: 60179)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.23590591549873352
    2. ')' → logprob: -1.6109058856964111
    3. ')|' → logprob: -5.98590612411499
    4. '#' → logprob: -6.11090612411499
    5. ' |' → logprob: -6.23590612411499
    6. '   ' → logprob: -6.73590612411499
    7. ' )' → logprob: -7.73590612411499
    8. '=' → logprob: -8.235905647277832
    9. '%' → logprob: -8.235905647277832
    10. ' =' → logprob: -8.360905647277832

Token 1982: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.28681331872940063
    2. '#' → logprob: -2.286813259124756
    3. '   ' → logprob: -3.161813259124756
    4. '\' → logprob: -4.161813259124756
    5. ' \' → logprob: -4.661813259124756
    6. '=' → logprob: -4.911813259124756
    7. '(' → logprob: -4.911813259124756
    8. ',' → logprob: -5.036813259124756
    9. ':' → logprob: -5.036813259124756
    10. ')' → logprob: -5.161813259124756

Token 1983: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8163653016090393
    2. '   ' → logprob: -0.8163653016090393
    3. 'diff' → logprob: -4.1913652420043945
    4. '0' → logprob: -4.4413652420043945
    5. 'n' → logprob: -4.6913652420043945
    6. '(' → logprob: -4.9413652420043945
    7. '+' → logprob: -5.3163652420043945
    8. '\n' → logprob: -5.3163652420043945
    9. 't' → logprob: -5.4413652420043945
    10. '=' → logprob: -5.5663652420043945

Token 1984: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6914758682250977
    2. '#' → logprob: -1.3164758682250977
    3. 'def' → logprob: -2.9414758682250977
    4. 'from' → logprob: -3.3164758682250977
    5. '
' → logprob: -3.8164758682250977
    6. '+' → logprob: -3.9414758682250977
    7. 'n' → logprob: -4.066475868225098
    8. '+
' → logprob: -4.191475868225098
    9. 'import' → logprob: -4.566475868225098
    10. '0' → logprob: -4.816475868225098

Token 1985: '6' (ID: 21)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5898417234420776
    2. '#' → logprob: -1.7148417234420776
    3. '(' → logprob: -2.214841842651367
    4. '0' → logprob: -2.339841842651367
    5. '
' → logprob: -3.089841842651367
    6. ')' → logprob: -3.339841842651367
    7. 'def' → logprob: -3.339841842651367
    8. '-' → logprob: -3.464841842651367
    9. '\n' → logprob: -3.714841842651367
    10. '=' → logprob: -3.839841842651367

Token 1986: 't' (ID: 83)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24490077793598175
    2. '*' → logprob: -2.119900703430176
    3. '*t' → logprob: -2.869900703430176
    4. 't' → logprob: -3.244900703430176
    5. ' t' → logprob: -7.744900703430176
    6. ' -' → logprob: -7.869900703430176
    7. ')' → logprob: -9.119900703430176
    8. '*(' → logprob: -9.119900703430176
    9. '-' → logprob: -9.244900703430176
    10. ' ' → logprob: -9.494900703430176

Token 1987: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.039558619260787964
    2. ' *' → logprob: -3.5395586490631104
    3. '-' → logprob: -5.164558410644531
    4. '*' → logprob: -6.164558410644531
    5. ' ' → logprob: -6.414558410644531
    6. ',' → logprob: -9.164558410644531
    7. ')' → logprob: -9.539558410644531
    8. 't' → logprob: -10.539558410644531
    9. ' ,' → logprob: -10.664558410644531
    10. '*t' → logprob: -11.164558410644531

Token 1988: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03368246555328369
    2. ' ' → logprob: -3.408682346343994
    3. '(' → logprob: -10.908682823181152
    4. ' (' → logprob: -11.408682823181152
    5. ' ' → logprob: -13.158682823181152
    6. '   ' → logprob: -13.283682823181152
    7. '    ' → logprob: -13.408682823181152
    8. '  ' → logprob: -14.658682823181152
    9. '.' → logprob: -15.471182823181152
    10. '1' → logprob: -15.533682823181152

Token 1989: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027921271976083517
    2. '(' → logprob: -8.250279426574707
    3. ' ' → logprob: -11.500279426574707
    4. '360' → logprob: -12.500279426574707
    5. ' (' → logprob: -13.250279426574707
    6. '.' → logprob: -13.875279426574707
    7. '6' → logprob: -15.375279426574707
    8. '60' → logprob: -15.750279426574707
    9. 't' → logprob: -15.875279426574707
    10. '1' → logprob: -15.875279426574707

Token 1990: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009199674241244793
    2. ' .' → logprob: -4.759199619293213
    3. ' ' → logprob: -8.509200096130371
    4. '*' → logprob: -9.134200096130371
    5. '0' → logprob: -9.634200096130371
    6. '   ' → logprob: -9.759200096130371
    7. ' *' → logprob: -9.884200096130371
    8. '    ' → logprob: -10.384200096130371
    9. '  ' → logprob: -11.134200096130371
    10. ',' → logprob: -11.634200096130371

Token 1991: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.845798710244708e-05
    2. '100' → logprob: -10.500038146972656
    3. '10' → logprob: -12.625038146972656
    4. '6' → logprob: -13.625038146972656
    5. '.' → logprob: -13.625038146972656
    6. '```' → logprob: -14.562538146972656
    7. 'The' → logprob: -14.750038146972656
    8. '5' → logprob: -14.875038146972656
    9. '0' → logprob: -14.875038146972656
    10. 'Let's' → logprob: -15.125038146972656

Token 1992: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8341089487075806
    2. ' *' → logprob: -1.3341089487075806
    3. '*t' → logprob: -1.4591089487075806
    4. '*' → logprob: -3.584108829498291
    5. ' t' → logprob: -3.834108829498291
    6. ')' → logprob: -4.084108829498291
    7. ')t' → logprob: -5.709108829498291
    8. ' ' → logprob: -9.45910930633545
    9. ')*' → logprob: -9.58410930633545
    10. '<|end|>' → logprob: -10.45910930633545

Token 1993: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34226009249687195
    2. '<|end|>' → logprob: -3.0922601222991943
    3. ',' → logprob: -3.3422601222991943
    4. '#' → logprob: -3.4672601222991943
    5. ' =' → logprob: -3.4672601222991943
    6. ' *' → logprob: -3.5922601222991943
    7. '*' → logprob: -3.7172601222991943
    8. '=' → logprob: -3.8422601222991943
    9. ' -' → logprob: -4.092259883880615
    10. '   ' → logprob: -4.342259883880615

Token 1994: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08283479511737823
    2. ' ' → logprob: -3.0828347206115723
    3. '(' → logprob: -3.5828347206115723
    4. ' (' → logprob: -5.332834720611572
    5. 't' → logprob: -8.20783519744873
    6. '0' → logprob: -8.58283519744873
    7. '6' → logprob: -8.83283519744873
    8. '(t' → logprob: -8.95783519744873
    9. ' t' → logprob: -9.45783519744873
    10. '54' → logprob: -10.45783519744873

Token 1995: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.033768679946660995
    2. '(' → logprob: -3.408768653869629
    3. 't' → logprob: -10.158768653869629
    4. '(t' → logprob: -10.408768653869629
    5. '((' → logprob: -11.533768653869629
    6. '6' → logprob: -11.533768653869629
    7. ' (' → logprob: -12.033768653869629
    8. 'float' → logprob: -12.158768653869629
    9. ' ' → logprob: -12.846268653869629
    10. '\(' → logprob: -12.908768653869629

Token 1996: '.' (ID: 13)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8096253275871277
    2. '*' → logprob: -0.9346253275871277
    3. '<|end|>' → logprob: -2.4346253871917725
    4. ')' → logprob: -3.1846253871917725
    5. ' ' → logprob: -4.684625148773193
    6. '<|end|>' → logprob: -4.809625148773193
    7. 't' → logprob: -5.059625148773193
    8. '.' → logprob: -6.059625148773193
    9. '*t' → logprob: -6.059625148773193
    10. ',' → logprob: -6.809625148773193

Token 1997: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.723352049040841e-06
    2. '900' → logprob: -12.375004768371582
    3. '90' → logprob: -14.750004768371582
    4. '901' → logprob: -17.000003814697266
    5. '
' → logprob: -18.000003814697266
    6. 'nine' → logprob: -19.000003814697266
    7. '９' → logprob: -19.125003814697266
    8. '899' → logprob: -19.125003814697266
    9. '0' → logprob: -19.125003814697266
    10. '۹' → logprob: -19.250003814697266

Token 1998: 't' (ID: 83)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06551403552293777
    2. '<|end|>' → logprob: -3.315514087677002
    3. ')' → logprob: -4.190514087677002
    4. ' *' → logprob: -5.190514087677002
    5. 't' → logprob: -5.440514087677002
    6. '*t' → logprob: -7.315514087677002
    7. '<|end|>' → logprob: -7.315514087677002
    8. ' t' → logprob: -9.565513610839844
    9. '+' → logprob: -9.690513610839844
    10. '```' → logprob: -9.690513610839844

Token 1999: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4219416379928589
    2. ')' → logprob: -2.6719417572021484
    3. '   ' → logprob: -2.7969417572021484
    4. ' +' → logprob: -3.0469417572021484
    5. ',' → logprob: -3.5469417572021484
    6. '<|end|>' → logprob: -3.5469417572021484
    7. '-' → logprob: -3.6719417572021484
    8. '#' → logprob: -3.9219417572021484
    9. ' *' → logprob: -4.296941757202148
    10. '+' → logprob: -4.296941757202148

Token 2000: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5836483240127563
    2. '#' → logprob: -1.9586483240127563
    3. ' *' → logprob: -2.958648204803467
    4. ' -' → logprob: -3.083648204803467
    5. '*' → logprob: -3.208648204803467
    6. ')' → logprob: -3.333648204803467
    7. ',' → logprob: -3.458648204803467
    8. ' #' → logprob: -3.958648204803467
    9. ' \' → logprob: -4.583648204803467
    10. '-' → logprob: -4.833648204803467

Token 2001: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4394941031932831
    2. '   ' → logprob: -1.1894941329956055
    3. ' #' → logprob: -3.8144941329956055
    4. ' -' → logprob: -5.4394941329956055
    5. '-' → logprob: -5.5644941329956055
    6. ')' → logprob: -5.5644941329956055
    7. '*' → logprob: -5.8144941329956055
    8. ' *' → logprob: -6.0644941329956055
    9. ' ' → logprob: -6.6894941329956055
    10. ',' → logprob: -7.0644941329956055

Token 2002: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05149143934249878
    2. ' #' → logprob: -3.6764914989471436
    3. '(' → logprob: -4.8014912605285645
    4. '   ' → logprob: -5.4264912605285645
    5. '5' → logprob: -5.8014912605285645
    6. ' (' → logprob: -6.0514912605285645
    7. '0' → logprob: -6.0514912605285645
    8. ' ' → logprob: -6.8014912605285645
    9. 't' → logprob: -6.9264912605285645
    10. 'from' → logprob: -7.6764912605285645

Token 2003: '6' (ID: 21)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1743398904800415
    2. '(' → logprob: -2.924339771270752
    3. '0' → logprob: -3.174339771270752
    4. 'from' → logprob: -3.424339771270752
    5. '5' → logprob: -4.299339771270752
    6. 'abs' → logprob: -5.549339771270752
    7. '360' → logprob: -5.549339771270752
    8. ' #' → logprob: -6.799339771270752
    9. ' (' → logprob: -6.924339771270752
    10. '((' → logprob: -6.924339771270752

Token 2004: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016042111441493034
    2. '*t' → logprob: -5.141042232513428
    3. ' *' → logprob: -5.141042232513428
    4. '*' → logprob: -6.016042232513428
    5. ' t' → logprob: -6.641042232513428
    6. ' -' → logprob: -8.64104175567627
    7. '-' → logprob: -8.76604175567627
    8. '-t' → logprob: -10.01604175567627
    9. '.' → logprob: -10.76604175567627
    10. '_t' → logprob: -10.89104175567627

Token 2005: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0012474933173507452
    2. '-' → logprob: -6.876247406005859
    3. ' ' → logprob: -9.12624740600586
    4. ' ' → logprob: -10.37624740600586
    5. ' *' → logprob: -10.87624740600586
    6. '<|end|>' → logprob: -11.00124740600586
    7. ',' → logprob: -11.75124740600586
    8. ')' → logprob: -12.37624740600586
    9. '```' → logprob: -12.87624740600586
    10. ' #' → logprob: -13.00124740600586

Token 2006: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3519797921180725
    2. ' (' → logprob: -1.2269797325134277
    3. '0' → logprob: -5.976979732513428
    4. '((' → logprob: -7.976979732513428
    5. ' ' → logprob: -8.351980209350586
    6. ' \' → logprob: -8.851980209350586
    7. '\' → logprob: -9.101980209350586
    8. ' ((' → logprob: -9.726980209350586
    9. '(H' → logprob: -10.851980209350586
    10. '1' → logprob: -11.351980209350586

Token 2007: '360' (ID: 9870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014437667094171047
    2. '360' → logprob: -5.514437675476074
    3. '(t' → logprob: -5.639437675476074
    4. '0' → logprob: -5.889437675476074
    5. 't' → logprob: -6.264437675476074
    6. '((' → logprob: -7.014437675476074
    7. ' (' → logprob: -7.639437675476074
    8. '\' → logprob: -8.514437675476074
    9. 'angle' → logprob: -9.389437675476074
    10. '(H' → logprob: -9.639437675476074

Token 2008: '/(' (ID: 27334)
  Prédit: '/('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/(' → logprob: -0.29358524084091187
    2. '/' → logprob: -1.6685853004455566
    3. ' /' → logprob: -2.7935853004455566
    4. 't' → logprob: -5.418585300445557
    5. '*' → logprob: -9.293584823608398
    6. ' /(' → logprob: -9.668584823608398
    7. ' *' → logprob: -10.668584823608398
    8. '(H' → logprob: -11.043584823608398
    9. ' t' → logprob: -11.168584823608398
    10. '(' → logprob: -11.543584823608398

Token 2009: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -6.682846287731081e-05
    2. 'H' → logprob: -10.500066757202148
    3. ' (' → logprob: -10.625066757202148
    4. '(' → logprob: -11.125066757202148
    5. '\(' → logprob: -16.12506675720215
    6. ' H' → logprob: -17.00006675720215
    7. '((' → logprob: -17.87506675720215
    8. ' ' → logprob: -18.12506675720215
    9. '\' → logprob: -19.12506675720215
    10. '   ' → logprob: -19.37506675720215

Token 2010: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0018081029411405325
    2. ' *' → logprob: -6.376808166503906
    3. '360' → logprob: -9.501808166503906
    4. ')' → logprob: -11.626808166503906
    5. '\' → logprob: -12.251808166503906
    6. ' ' → logprob: -12.251808166503906
    7. '**' → logprob: -12.751808166503906
    8. ' ' → logprob: -12.751808166503906
    9. '   ' → logprob: -13.376808166503906
    10. '*
' → logprob: -13.751808166503906

Token 2011: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '(' → logprob: -15.375001907348633
    4. '```' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.875001907348633
    6. 't' → logprob: -18.000001907348633
    7. '359' → logprob: -18.250001907348633
    8. '36' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.375001907348633
    10. '1' → logprob: -18.875001907348633

Token 2012: '0' (ID: 15)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.23108753561973572
    2. '0' → logprob: -1.606087565422058
    3. ')' → logprob: -6.481087684631348
    4. '00' → logprob: -6.731087684631348
    5. '*' → logprob: -6.981087684631348
    6. '000' → logprob: -7.231087684631348
    7. '600' → logprob: -7.606087684631348
    8. '300' → logprob: -7.856087684631348
    9. '   ' → logprob: -9.106087684631348
    10. ' ' → logprob: -9.481087684631348

Token 2013: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.45754474401474
    2. ')' → logprob: -1.0825448036193848
    3. ')t' → logprob: -3.5825448036193848
    4. '*t' → logprob: -7.832544803619385
    5. '*' → logprob: -9.582544326782227
    6. '))*' → logprob: -9.957544326782227
    7. 't' → logprob: -10.582544326782227
    8. '))' → logprob: -10.832544326782227
    9. ')`' → logprob: -11.332544326782227
    10. ')*(' → logprob: -11.707544326782227

Token 2014: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06940818578004837
    2. '360' → logprob: -2.8194081783294678
    3. '(' → logprob: -5.819408416748047
    4. '1' → logprob: -6.444408416748047
    5. '(H' → logprob: -6.444408416748047
    6. '60' → logprob: -7.819408416748047
    7. ' t' → logprob: -8.319408416748047
    8. '(t' → logprob: -8.569408416748047
    9. 'H' → logprob: -9.069408416748047
    10. '10' → logprob: -9.194408416748047

Token 2015: ' =' (ID: 314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6534660458564758
    2. ' =' → logprob: -1.778465986251831
    3. ')' → logprob: -2.403465986251831
    4. '=' → logprob: -3.403465986251831
    5. ' *' → logprob: -3.403465986251831
    6. ' -' → logprob: -3.653465986251831
    7. '*' → logprob: -3.653465986251831
    8. '   ' → logprob: -3.778465986251831
    9. ' #' → logprob: -3.778465986251831
    10. 't' → logprob: -4.15346622467041

Token 2016: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04675143584609032
    2. '5' → logprob: -3.7967514991760254
    3. ' (' → logprob: -4.921751499176025
    4. '6' → logprob: -5.171751499176025
    5. 't' → logprob: -5.171751499176025
    6. '((' → logprob: -5.546751499176025
    7. '(t' → logprob: -8.046751022338867
    8. ' ' → logprob: -9.546751022338867
    9. 'round' → logprob: -9.796751022338867
    10. '\(' → logprob: -9.796751022338867

Token 2017: '6' (ID: 21)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06243044137954712
    2. '6' → logprob: -3.3124303817749023
    3. 't' → logprob: -3.8124303817749023
    4. '5' → logprob: -6.812430381774902
    5. '((' → logprob: -7.812430381774902
    6. '(t' → logprob: -8.562430381774902
    7. ' (' → logprob: -8.687430381774902
    8. 'num' → logprob: -9.812430381774902
    9. '\' → logprob: -10.562430381774902
    10. '\(' → logprob: -10.937430381774902

Token 2018: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10088637471199036
    2. '*' → logprob: -3.600886344909668
    3. ' -' → logprob: -3.725886344909668
    4. '-' → logprob: -3.850886344909668
    5. ' *' → logprob: -4.850886344909668
    6. '*(' → logprob: -4.975886344909668
    7. '(' → logprob: -6.100886344909668
    8. '/' → logprob: -6.600886344909668
    9. '*t' → logprob: -6.725886344909668
    10. ' t' → logprob: -7.475886344909668

Token 2019: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0050850375555455685
    2. '-' → logprob: -6.005084991455078
    3. '<|end|>' → logprob: -6.505084991455078
    4. ' *' → logprob: -7.505084991455078
    5. ')' → logprob: -8.255084991455078
    6. ' ' → logprob: -9.380084991455078
    7. '*' → logprob: -9.505084991455078
    8. ',' → logprob: -10.005084991455078
    9. '<|end|>' → logprob: -10.880084991455078
    10. ' ' → logprob: -11.130084991455078

Token 2020: ' t' (ID: 260)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11976444721221924
    2. '(t' → logprob: -2.8697643280029297
    3. 't' → logprob: -3.3697643280029297
    4. ' (' → logprob: -3.9947643280029297
    5. '360' → logprob: -6.11976432800293
    6. '0' → logprob: -7.99476432800293
    7. ' t' → logprob: -8.11976432800293
    8. '6' → logprob: -9.11976432800293
    9. '\' → logprob: -9.11976432800293
    10. '((' → logprob: -9.49476432800293

Token 2021: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.32309669256210327
    2. ' /' → logprob: -1.823096752166748
    3. '/(' → logprob: -2.198096752166748
    4. '*' → logprob: -6.198096752166748
    5. ' *' → logprob: -6.948096752166748
    6. '*(' → logprob: -8.19809627532959
    7. ' /(' → logprob: -9.07309627532959
    8. '   ' → logprob: -9.44809627532959
    9. '/H' → logprob: -10.07309627532959
    10. ' ' → logprob: -11.69809627532959

Token 2022: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.4101211130619049
    2. '(' → logprob: -1.1601210832595825
    3. 'H' → logprob: -4.785120964050293
    4. ' (' → logprob: -4.910120964050293
    5. '10' → logprob: -5.160120964050293
    6. ' ' → logprob: -7.535120964050293
    7. '100' → logprob: -8.285120964050293
    8. '1' → logprob: -8.410120964050293
    9. '360' → logprob: -8.785120964050293
    10. '60' → logprob: -9.410120964050293

Token 2023: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00033391619217582047
    2. ' *' → logprob: -8.250333786010742
    3. '10' → logprob: -10.000333786010742
    4. ')' → logprob: -11.500333786010742
    5. ' ' → logprob: -12.125333786010742
    6. '   ' → logprob: -12.750333786010742
    7. '\' → logprob: -13.125333786010742
    8. '360' → logprob: -14.125333786010742
    9. '*
' → logprob: -14.125333786010742
    10. '
' → logprob: -14.375333786010742

Token 2024: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00011188744247192517
    2. ' ' → logprob: -9.50011157989502
    3. '360' → logprob: -10.37511157989502
    4. '60' → logprob: -13.00011157989502
    5. '(' → logprob: -13.62511157989502
    6. '1' → logprob: -13.75011157989502
    7. '```' → logprob: -15.12511157989502
    8. '`' → logprob: -15.37511157989502
    9. '	' → logprob: -15.62511157989502
    10. '*' → logprob: -15.75011157989502

Token 2025: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032271104282699525
    2. '0' → logprob: -8.250322341918945
    3. ')
' → logprob: -10.875322341918945
    4. '**' → logprob: -12.125322341918945
    5. ' )' → logprob: -12.500322341918945
    6. ')=' → logprob: -12.500322341918945
    7. ')`' → logprob: -12.500322341918945
    8. '))' → logprob: -12.625322341918945
    9. '1' → logprob: -13.000322341918945
    10. '),' → logprob: -13.125322341918945

Token 2026: ' =' (ID: 314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5019358992576599
    2. '   ' → logprob: -2.3769359588623047
    3. 'def' → logprob: -3.3769359588623047
    4. '\' → logprob: -3.5019359588623047
    5. '```' → logprob: -3.5019359588623047
    6. ')' → logprob: -3.6269359588623047
    7. '*' → logprob: -4.001935958862305
    8. 'from' → logprob: -4.126935958862305
    9. '
' → logprob: -4.376935958862305
    10. '+
' → logprob: -4.501935958862305

Token 2027: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26558586955070496
    2. '6' → logprob: -2.6405858993530273
    3. ' (' → logprob: -2.6405858993530273
    4. '5' → logprob: -2.7655858993530273
    5. 't' → logprob: -3.8905858993530273
    6. ' ' → logprob: -6.015585899353027
    7. '(t' → logprob: -6.140585899353027
    8. ' t' → logprob: -6.640585899353027
    9. '((' → logprob: -7.265585899353027
    10. '`' → logprob: -8.015585899353027

Token 2028: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1822385936975479
    2. '(' → logprob: -1.8072385787963867
    3. '5' → logprob: -7.057238578796387
    4. 't' → logprob: -7.307238578796387
    5. ' ' → logprob: -8.432238578796387
    6. '((' → logprob: -8.432238578796387
    7. ' (' → logprob: -8.432238578796387
    8. '60' → logprob: -9.557238578796387
    9. ')' → logprob: -9.932238578796387
    10. '   ' → logprob: -10.432238578796387

Token 2029: ' -' (ID: 533)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.810467541217804
    2. ' *' → logprob: -1.1854674816131592
    3. '*' → logprob: -1.8104674816131592
    4. 't' → logprob: -2.685467481613159
    5. ' -' → logprob: -4.185467720031738
    6. '-' → logprob: -6.810467720031738
    7. ' t' → logprob: -7.060467720031738
    8. ')' → logprob: -7.685467720031738
    9. ' ' → logprob: -9.560467720031738
    10. ')*' → logprob: -10.060467720031738

Token 2030: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04789228364825249
    2. '(' → logprob: -3.4228923320770264
    3. ' ' → logprob: -4.547892093658447
    4. ' (' → logprob: -5.922892093658447
    5. 't' → logprob: -7.672892093658447
    6. '(t' → logprob: -8.672892570495605
    7. 'frac' → logprob: -9.547892570495605
    8. '\' → logprob: -9.672892570495605
    9. ' t' → logprob: -9.922892570495605
    10. '0' → logprob: -10.922892570495605

Token 2031: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5787020921707153
    2. '(' → logprob: -0.8287020921707153
    3. ' (' → logprob: -6.953701972961426
    4. '\' → logprob: -7.328701972961426
    5. ' ' → logprob: -7.828701972961426
    6. 'frac' → logprob: -8.078701972961426
    7. '0' → logprob: -8.203701972961426
    8. '(t' → logprob: -10.328701972961426
    9. '\d' → logprob: -10.953701972961426
    10. 'fraction' → logprob: -11.203701972961426

Token 2032: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.13240212202072144
    2. ' /' → logprob: -2.132402181625366
    3. '/(' → logprob: -5.257401943206787
    4. '/H' → logprob: -9.257402420043945
    5. '0' → logprob: -9.382402420043945
    6. ')' → logprob: -11.382402420043945
    7. ' ' → logprob: -11.382402420043945
    8. ' /(' → logprob: -11.507402420043945
    9. ')/(' → logprob: -11.757402420043945
    10. '   ' → logprob: -11.882402420043945

Token 2033: '10' (ID: 702)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.15398934483528137
    2. '(H' → logprob: -2.153989315032959
    3. ' H' → logprob: -4.028989315032959
    4. '(' → logprob: -5.653989315032959
    5. ' (' → logprob: -5.778989315032959
    6. '10' → logprob: -6.403989315032959
    7. '{' → logprob: -8.028989791870117
    8. ' ' → logprob: -8.778989791870117
    9. ')' → logprob: -9.528989791870117
    10. '	H' → logprob: -11.278989791870117

Token 2034: 'H' (ID: 39)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00071386230411008
    2. ' *' → logprob: -7.25071382522583
    3. '*
' → logprob: -14.250714302062988
    4. ' ' → logprob: -14.375714302062988
    5. '**' → logprob: -14.500714302062988
    6. ' ' → logprob: -14.750714302062988
    7. 'H' → logprob: -14.875714302062988
    8. ')' → logprob: -14.875714302062988
    9. '*\' → logprob: -15.500714302062988
    10. '*)' → logprob: -15.625714302062988

Token 2035: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10250995308160782
    2. '))*' → logprob: -2.3525099754333496
    3. ')' → logprob: -6.10250997543335
    4. ')*' → logprob: -10.352509498596191
    5. ' ))' → logprob: -11.352509498596191
    6. '))
' → logprob: -12.102509498596191
    7. ')
' → logprob: -12.352509498596191
    8. '))-' → logprob: -12.852509498596191
    9. '),' → logprob: -13.477509498596191
    10. ')))' → logprob: -13.602509498596191

Token 2036: ' *' (ID: 425)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7458261251449585
    2. '   ' → logprob: -1.9958261251449585
    3. ')' → logprob: -2.120826244354248
    4. 'def' → logprob: -2.370826244354248
    5. '*' → logprob: -3.370826244354248
    6. '```' → logprob: -4.370826244354248
    7. ' *' → logprob: -4.620826244354248
    8. '...' → logprob: -4.620826244354248
    9. ' ' → logprob: -4.745826244354248
    10. '\' → logprob: -4.995826244354248

Token 2037: ' t' (ID: 260)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7107983231544495
    2. '(' → logprob: -1.7107982635498047
    3. '10' → logprob: -1.7107982635498047
    4. '1' → logprob: -2.2107982635498047
    5. '(H' → logprob: -3.9607982635498047
    6. 'den' → logprob: -5.585798263549805
    7. 't' → logprob: -5.710798263549805
    8. 'num' → logprob: -5.710798263549805
    9. ')' → logprob: -6.210798263549805
    10. ' H' → logprob: -7.085798263549805

Token 2038: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3793225288391113
    2. '   ' → logprob: -1.6293225288391113
    3. ')' → logprob: -2.2543225288391113
    4. '```' → logprob: -2.3793225288391113
    5. 'def' → logprob: -2.6293225288391113
    6. '
' → logprob: -2.8793225288391113
    7. '\' → logprob: -3.1293225288391113
    8. '*' → logprob: -3.3793225288391113
    9. '+' → logprob: -4.129322528839111
    10. 'from' → logprob: -4.504322528839111

Token 2039: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38129115104675293
    2. '#' → logprob: -1.881291151046753
    3. 'def' → logprob: -3.256291151046753
    4. '
' → logprob: -3.506291151046753
    5. 'n' → logprob: -3.756291151046753
    6. '\n' → logprob: -4.256291389465332
    7. '\' → logprob: -4.381291389465332
    8. ')' → logprob: -5.131291389465332
    9. '  
' → logprob: -5.381291389465332
    10. '+' → logprob: -5.381291389465332

Token 2040: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08358903229236603
    2. 'n' → logprob: -3.2085890769958496
    3. '#' (adapté à ' #') → logprob: -4.70858907699585
    4. '    
' → logprob: -5.20858907699585
    5. '
' → logprob: -5.45858907699585
    6. 'k' → logprob: -6.08358907699585
    7. 'A' → logprob: -6.08358907699585
    8. '+' → logprob: -6.08358907699585
    9. 'def' → logprob: -6.70858907699585
    10. 'm' → logprob: -7.08358907699585

Token 2041: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9121637344360352
    2. 'def' → logprob: -1.1621637344360352
    3. '#' → logprob: -2.537163734436035
    4. 'from' → logprob: -2.912163734436035
    5. 'delta' → logprob: -2.912163734436035
    6. '
' → logprob: -3.662163734436035
    7. 'diff' → logprob: -3.787163734436035
    8. 'n' → logprob: -4.662163734436035
    9. '    
' → logprob: -5.287163734436035
    10. 'A' → logprob: -5.537163734436035

Token 2042: ' pose' (ID: 17557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7814017534255981
    2. 'continue' → logprob: -1.2814017534255981
    3. '=' → logprob: -2.5314016342163086
    4. 'def' → logprob: -3.5314016342163086
    5. 'contin' → logprob: -3.7814016342163086
    6. ' continue' → logprob: -4.031401634216309
    7. '*' → logprob: -4.281401634216309
    8. '_num' → logprob: -4.656401634216309
    9. ' #' → logprob: -4.781401634216309
    10. ' =' → logprob: -4.781401634216309

Token 2043: ':
' (ID: 734)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1040973663330078
    2. 'd' → logprob: -1.8540973663330078
    3. 'delta' → logprob: -1.8540973663330078
    4. 'x' → logprob: -1.9790973663330078
    5. 'from' → logprob: -3.104097366333008
    6. 'diff' → logprob: -3.354097366333008
    7. 'k' → logprob: -3.479097366333008
    8. 'A' → logprob: -3.854097366333008
    9. 'c' → logprob: -3.854097366333008
    10. 'D' → logprob: -4.229097366333008

Token 2044: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.585732638835907
    2. 'delta' → logprob: -1.3357326984405518
    3. 'c' → logprob: -3.0857326984405518
    4. 'd' → logprob: -3.3357326984405518
    5. 'a' → logprob: -3.7107326984405518
    6. 'k' → logprob: -4.085732460021973
    7. 'V' → logprob: -4.210732460021973
    8. 'diff' → logprob: -4.585732460021973
    9. 'angle' → logprob: -5.710732460021973
    10. ' delta' → logprob: -5.835732460021973

Token 2045: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3570534884929657
    2. 'delta' → logprob: -1.732053518295288
    3. 'from' → logprob: -3.232053518295288
    4. 'a' → logprob: -4.232053279876709
    5. 'alpha' → logprob: -4.232053279876709
    6. 'c' → logprob: -4.357053279876709
    7. 'r' → logprob: -4.607053279876709
    8. 'd' → logprob: -5.357053279876709
    9. 'diff' → logprob: -5.357053279876709
    10. 'vs' → logprob: -5.482053279876709

Token 2046: ' A' (ID: 355)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7307808995246887
    2. 'delta' → logprob: -1.605780839920044
    3. 'from' → logprob: -1.980780839920044
    4. 'r' → logprob: -2.730780839920044
    5. 'a' → logprob: -3.855780839920044
    6. 'd' → logprob: -4.105781078338623
    7. 'c' → logprob: -4.355781078338623
    8. 'V' → logprob: -4.730781078338623
    9. '```' → logprob: -4.730781078338623
    10. 'diff' → logprob: -4.855781078338623

Token 2047: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2666403651237488
    2. '_sm' → logprob: -1.8916404247283936
    3. '_s' → logprob: -3.0166404247283936
    4. '_' → logprob: -4.2666401863098145
    5. '1' → logprob: -4.7666401863098145
    6. 's' → logprob: -5.1416401863098145
    7. 'sm' → logprob: -6.1416401863098145
    8. '=' → logprob: -6.5166401863098145
    9. '_num' → logprob: -7.5166401863098145
    10. '_diff' → logprob: -8.141640663146973

Token 2048: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.15522046387195587
    2. '59' → logprob: -2.9052205085754395
    3. ' ' → logprob: -3.5302205085754395
    4. '6' → logprob: -3.9052205085754395
    5. '(' → logprob: -3.9052205085754395
    6. 'Fraction' → logprob: -4.1552205085754395
    7. 'fraction' → logprob: -6.7802205085754395
    8. '590' → logprob: -7.1552205085754395
    9. ' (' → logprob: -7.5302205085754395
    10. '(H' → logprob: -8.530220031738281

Token 2049: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.0689610242843628
    2. '6' → logprob: -1.3189610242843628
    3. '59' → logprob: -2.0689611434936523
    4. '(' → logprob: -2.3189611434936523
    5. 'Fraction' → logprob: -2.3189611434936523
    6. 'fraction' → logprob: -4.193961143493652
    7. '590' → logprob: -4.318961143493652
    8. '10' → logprob: -4.318961143493652
    9. 'frac' → logprob: -4.443961143493652
    10. 'fra' → logprob: -6.193961143493652

Token 2050: '.' (ID: 13)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.029169905930757523
    2. '.' → logprob: -3.654169797897339
    3. ',' → logprob: -6.154170036315918
    4. '90' → logprob: -7.404170036315918
    5. '.
' → logprob: -10.029170036315918
    6. ',
' → logprob: -11.279170036315918
    7. '99' → logprob: -11.279170036315918
    8. '#' → logprob: -11.404170036315918
    9. '   ' → logprob: -11.404170036315918
    10. '+' → logprob: -11.904170036315918

Token 2051: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.610702363715973e-06
    2. '900' → logprob: -11.625009536743164
    3. ',' → logprob: -15.250009536743164
    4. '90' → logprob: -16.125009536743164
    5. '
' → logprob: -16.625009536743164
    6. ' ' → logprob: -17.125009536743164
    7. '899' → logprob: -17.500009536743164
    8. '.' → logprob: -18.125009536743164
    9. '901' → logprob: -18.375009536743164
    10. '۹' → logprob: -18.500009536743164

Token 2052: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07020261883735657
    2. '<|end|>' → logprob: -3.320202589035034
    3. '*' → logprob: -5.320202827453613
    4. '<|end|>' → logprob: -5.445202827453613
    5. '#' → logprob: -5.570202827453613
    6. '=' → logprob: -5.570202827453613
    7. ',
' → logprob: -5.695202827453613
    8. ' =' → logprob: -6.445202827453613
    9. '```' → logprob: -6.445202827453613
    10. '
' → logprob: -6.695202827453613

Token 2053: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10979238897562027
    2. ' =' → logprob: -2.859792470932007
    3. '=' → logprob: -3.109792470932007
    4. '#' → logprob: -7.359792232513428
    5. ',
' → logprob: -7.734792232513428
    6. 'A' → logprob: -8.109792709350586
    7. ' ,' → logprob: -8.484792709350586
    8. '   ' → logprob: -8.984792709350586
    9. '*' → logprob: -9.609792709350586
    10. ')' → logprob: -9.984792709350586

Token 2054: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7067645192146301
    2. '   ' → logprob: -0.9567645192146301
    3. '#' (adapté à ' #') → logprob: -2.8317644596099854
    4. '<|end|>' → logprob: -3.4567644596099854
    5. 'A' → logprob: -4.7067646980285645
    6. ',
' → logprob: -4.9567646980285645
    7. ')' → logprob: -5.3317646980285645
    8. '...' → logprob: -6.4567646980285645
    9. '*' → logprob: -6.5817646980285645
    10. '
' → logprob: -6.5817646980285645

Token 2055: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03800120949745178
    2. 'A' → logprob: -3.663001298904419
    3. '   ' → logprob: -4.66300106048584
    4. ' B' → logprob: -6.78800106048584
    5. '```' → logprob: -7.53800106048584
    6. '10' → logprob: -8.41300106048584
    7. '#' → logprob: -9.28800106048584
    8. '`' → logprob: -10.16300106048584
    9. '(' → logprob: -10.41300106048584
    10. ' A' → logprob: -10.53800106048584

Token 2056: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011050889268517494
    2. '=' → logprob: -4.511050701141357
    3. ',' → logprob: -13.261051177978516
    4. ' ' → logprob: -14.761051177978516
    5. ' ' → logprob: -15.261051177978516
    6. ' #' → logprob: -15.511051177978516
    7. ')' → logprob: -15.636051177978516
    8. ' =
' → logprob: -16.136051177978516
    9. '#' → logprob: -16.511051177978516
    10. '_' → logprob: -17.136051177978516

Token 2057: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5374836325645447
    2. '6' → logprob: -1.0374836921691895
    3. ' (' → logprob: -3.1624836921691895
    4. ' ' → logprob: -4.0374836921691895
    5. '1' → logprob: -6.6624836921691895
    6. '5' → logprob: -9.912483215332031
    7. '   ' → logprob: -10.162483215332031
    8. '((' → logprob: -10.162483215332031
    9. '0' → logprob: -10.912483215332031
    10. '10' → logprob: -11.037483215332031

Token 2058: '6' (ID: 21)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8007187247276306
    2. '1' → logprob: -1.0507187843322754
    3. '6' → logprob: -1.6757187843322754
    4. ' (' → logprob: -5.550718784332275
    5. ' ' → logprob: -5.675718784332275
    6. 'frac' → logprob: -5.675718784332275
    7. '10' → logprob: -5.925718784332275
    8. '((' → logprob: -8.550718307495117
    9. '0' → logprob: -9.050718307495117
    10. '   ' → logprob: -9.800718307495117

Token 2059: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012649375945329666
    2. '-' → logprob: -4.3876495361328125
    3. ' ' → logprob: -9.512649536132812
    4. ')' → logprob: -10.012649536132812
    5. '#' → logprob: -12.512649536132812
    6. '
' → logprob: -13.137649536132812
    7. '.' → logprob: -13.137649536132812
    8. '   ' → logprob: -13.512649536132812
    9. ',' → logprob: -13.637649536132812
    10. ' ' → logprob: -13.762649536132812

Token 2060: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0711827203631401
    2. ' ' → logprob: -3.1961827278137207
    3. '(' → logprob: -3.6961827278137207
    4. ' (' → logprob: -5.821182727813721
    5. 'frac' → logprob: -12.696182250976562
    6. '\' → logprob: -13.321182250976562
    7. ' ' → logprob: -14.321182250976562
    8. '`' → logprob: -14.696182250976562
    9. '0' → logprob: -14.946182250976562
    10. '   ' → logprob: -15.071182250976562

Token 2061: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3438880741596222
    2. '(' → logprob: -1.9688880443572998
    3. ' ' → logprob: -2.0938880443573
    4. ' (' → logprob: -3.5938880443573
    5. 'frac' → logprob: -7.718888282775879
    6. '\' → logprob: -9.593888282775879
    7. '   ' → logprob: -10.343888282775879
    8. '0' → logprob: -10.468888282775879
    9. ' \' → logprob: -10.593888282775879
    10. 'fraction' → logprob: -11.343888282775879

Token 2062: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5359785556793213
    2. '/(' → logprob: -1.1609785556793213
    3. ' /' → logprob: -2.2859785556793213
    4. ' /(' → logprob: -10.910978317260742
    5. ')/(' → logprob: -11.535978317260742
    6. '/
' → logprob: -12.160978317260742
    7. '   ' → logprob: -12.910978317260742
    8. ' ' → logprob: -13.285978317260742
    9. ' /
' → logprob: -13.410978317260742
    10. ')' → logprob: -13.660978317260742

Token 2063: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021890224888920784
    2. ' (' → logprob: -3.896890163421631
    3. '(H' → logprob: -6.771890163421631
    4. '10' → logprob: -8.646890640258789
    5. ' ' → logprob: -10.896890640258789
    6. '(
' → logprob: -12.646890640258789
    7. '   ' → logprob: -13.396890640258789
    8. '{' → logprob: -14.396890640258789
    9. '  ' → logprob: -14.646890640258789
    10. 'H' → logprob: -14.771890640258789

Token 2064: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.001999058062210679
    2. '*' → logprob: -7.0019989013671875
    3. ' H' → logprob: -7.0019989013671875
    4. ',' → logprob: -9.751998901367188
    5. ' *' → logprob: -10.501998901367188
    6. ')' → logprob: -10.501998901367188
    7. ',H' → logprob: -11.126998901367188
    8. ' ' → logprob: -11.626998901367188
    9. '   ' → logprob: -11.626998901367188
    10. '/H' → logprob: -12.001998901367188

Token 2065: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07052583992481232
    2. ')' → logprob: -2.695525884628296
    3. '))*' → logprob: -8.570526123046875
    4. '*' → logprob: -8.695526123046875
    5. '))
' → logprob: -9.570526123046875
    6. ' ))' → logprob: -9.945526123046875
    7. ')))' → logprob: -10.570526123046875
    8. ' *' → logprob: -11.195526123046875
    9. 'H' → logprob: -11.195526123046875
    10. '))-' → logprob: -11.320526123046875

Token 2066: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06046809256076813
    2. '\n' → logprob: -4.0604681968688965
    3. '#' → logprob: -4.3104681968688965
    4. ')' → logprob: -5.3104681968688965
    5. '
' → logprob: -5.3104681968688965
    6. 'A' → logprob: -5.8104681968688965
    7. '\' → logprob: -5.9354681968688965
    8. '+' → logprob: -6.6854681968688965
    9. 'def' → logprob: -6.6854681968688965
    10. '```' → logprob: -6.9354681968688965

Token 2067: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14507028460502625
    2. 'A' → logprob: -2.1450703144073486
    3. '
' → logprob: -4.2700700759887695
    4. 'def' → logprob: -6.2700700759887695
    5. '#' (adapté à ' #') → logprob: -7.2700700759887695
    6. '    
' → logprob: -8.14507007598877
    7. 'import' → logprob: -8.27007007598877
    8. ' A' → logprob: -8.39507007598877
    9. '```' → logprob: -8.77007007598877
    10. 'n' → logprob: -9.52007007598877

Token 2068: ' Cher' (ID: 48756)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4488104283809662
    2. 'A' → logprob: -1.4488104581832886
    3. '   ' → logprob: -2.448810338973999
    4. '
' → logprob: -4.448810577392578
    5. '#' → logprob: -4.823810577392578
    6. 'import' → logprob: -5.448810577392578
    7. ' A' → logprob: -5.948810577392578
    8. ' def' → logprob: -6.073810577392578
    9. '```' → logprob: -6.073810577392578
    10. 'from' → logprob: -6.948810577392578

Token 2069: 'ch' (ID: 332)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6772882342338562
    2. 'èche' → logprob: -1.427288293838501
    3. 'er' → logprob: -2.927288293838501
    4. '#' → logprob: -3.427288293838501
    5. '   ' → logprob: -3.427288293838501
    6. 'é' → logprob: -3.677288293838501
    7. 'c' → logprob: -3.802288293838501
    8. '=' → logprob: -4.177288055419922
    9. 'êche' → logprob: -4.302288055419922
    10. 'cker' → logprob: -4.552288055419922

Token 2070: 'ons' (ID: 1808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0003662020608317107
    2. 'ons' → logprob: -8.2503662109375
    3. 'er' → logprob: -10.1253662109375
    4. '#' → logprob: -10.3753662109375
    5. 'es' → logprob: -10.8753662109375
    6. 'é' → logprob: -12.7503662109375
    7. '=' → logprob: -12.8753662109375
    8. 'ez' → logprob: -12.8753662109375
    9. 'a' → logprob: -13.1253662109375
    10. ' e' → logprob: -13.7503662109375

Token 2071: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2281514406204224
    2. 't' → logprob: -1.2281514406204224
    3. ' t' → logprob: -1.9781514406204224
    4. ' k' → logprob: -2.353151321411133
    5. 'n' → logprob: -2.728151321411133
    6. 'A' → logprob: -3.978151321411133
    7. 'm' → logprob: -4.103151321411133
    8. '
' → logprob: -4.353151321411133
    9. ' A' → logprob: -4.728151321411133
    10. 'for' → logprob: -4.728151321411133

Token 2072: ' tel' (ID: 10716)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34442251920700073
    2. ' =' → logprob: -1.5944225788116455
    3. ':' → logprob: -3.2194225788116455
    4. ',' → logprob: -3.9694225788116455
    5. '   ' → logprob: -4.469422340393066
    6. '#' → logprob: -5.969422340393066
    7. '
' → logprob: -6.219422340393066
    8. 'for' → logprob: -6.219422340393066
    9. 'import' → logprob: -6.344422340393066
    10. 'A' → logprob: -6.469422340393066

Token 2073: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.3808344602584839
    2. '=' → logprob: -1.2558344602584839
    3. ' que' → logprob: -3.6308345794677734
    4. 'qu' → logprob: -5.505834579467773
    5. 'that' → logprob: -7.755834579467773
    6. '   ' → logprob: -8.255834579467773
    7. ' =' → logprob: -8.380834579467773
    8. ' qu' → logprob: -9.130834579467773
    9. '#' → logprob: -9.630834579467773
    10. 'u' → logprob: -9.755834579467773

Token 2074: ':
' (ID: 734)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0340231657028198
    2. '(A' → logprob: -1.4090231657028198
    3. ' abs' → logprob: -1.9090231657028198
    4. '(' → logprob: -2.4090232849121094
    5. '(abs' → logprob: -2.6590232849121094
    6. 'A' → logprob: -3.1590232849121094
    7. ' (' → logprob: -3.9090232849121094
    8. '5' → logprob: -4.534023284912109
    9. '```' → logprob: -5.034023284912109
    10. '((' → logprob: -5.409023284912109

Token 2075: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2195754051208496
    2. 'abs' → logprob: -1.4695754051208496
    3. ' t' → logprob: -2.3445754051208496
    4. ' abs' → logprob: -2.4695754051208496
    5. '(' → logprob: -2.5945754051208496
    6. '#' → logprob: -2.9695754051208496
    7. 'A' → logprob: -3.2195754051208496
    8. ' (' → logprob: -3.3445754051208496
    9. '(abs' → logprob: -3.7195754051208496
    10. '   ' → logprob: -4.21957540512085

Token 2076: ' #' (ID: 1069)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.083257794380188
    2. 'A' → logprob: -2.2082576751708984
    3. '(A' → logprob: -2.3332576751708984
    4. '#' (adapté à ' #') → logprob: -2.4582576751708984
    5. ' abs' → logprob: -2.5832576751708984
    6. '(abs' → logprob: -2.5832576751708984
    7. '5' → logprob: -2.8332576751708984
    8. 'for' → logprob: -3.0832576751708984
    9. ' (' → logprob: -3.3332576751708984
    10. '(' → logprob: -3.5832576751708984

Token 2077: ' minimal' (ID: 19957)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2479926347732544
    2. '(A' → logprob: -2.622992515563965
    3. 'A' → logprob: -2.872992515563965
    4. '(abs' → logprob: -3.122992515563965
    5. ' abs' → logprob: -4.122992515563965
    6. '((' → logprob: -4.497992515563965
    7. '(' → logprob: -5.372992515563965
    8. '#' → logprob: -5.872992515563965
    9. 'for' → logprob: -6.122992515563965
    10. '5' → logprob: -6.122992515563965

Token 2078: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.318681188422488e-05
    2. '_' → logprob: -12.00001335144043
    3. '_diff' → logprob: -13.62501335144043
    4. ' _' → logprob: -14.00001335144043
    5. 'Angle' → logprob: -14.00001335144043
    6. '_distance' → logprob: -14.12501335144043
    7. 'angle' → logprob: -14.12501335144043
    8. '_angles' → logprob: -14.75001335144043
    9. '_ang' → logprob: -14.87501335144043
    10. '\' → logprob: -15.00001335144043

Token 2079: '_mod' (ID: 15325)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7195242047309875
    2. '(as' → logprob: -0.8445242047309875
    3. '(' → logprob: -3.3445241451263428
    4. 'A' → logprob: -3.8445241451263428
    5. '(a' → logprob: -4.594524383544922
    6. '(abs' → logprob: -4.844524383544922
    7. 'as' → logprob: -6.594524383544922
    8. '((' → logprob: -6.844524383544922
    9. '(
' → logprob: -6.844524383544922
    10. '```' → logprob: -7.594524383544922

Token 2080: 'ulo' (ID: 5953)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16269132494926453
    2. '_' → logprob: -3.162691354751587
    3. '_mod' → logprob: -3.787691354751587
    4. '(A' → logprob: -3.912691354751587
    5. '(
' → logprob: -4.037691116333008
    6. '=' → logprob: -4.662691116333008
    7. 'A' → logprob: -5.037691116333008
    8. '((' → logprob: -5.412691116333008
    9. ' (' → logprob: -5.412691116333008
    10. '_m' → logprob: -5.787691116333008

Token 2081: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21003824472427368
    2. '360' → logprob: -2.585038185119629
    3. '(A' → logprob: -2.960038185119629
    4. '(
' → logprob: -4.085038185119629
    5. ' (' → logprob: -4.335038185119629
    6. 'A' → logprob: -4.710038185119629
    7. '('' → logprob: -5.710038185119629
    8. '(`' → logprob: -5.710038185119629
    9. ' =' → logprob: -6.210038185119629
    10. '=' → logprob: -6.210038185119629

Token 2082: '5' (ID: 20)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.34267666935920715
    2. '360' → logprob: -1.5926766395568848
    3. '5' → logprob: -3.2176766395568848
    4. ')' → logprob: -3.9676766395568848
    5. '(' → logprob: -4.842676639556885
    6. '(A' → logprob: -5.092676639556885
    7. 't' → logprob: -5.342676639556885
    8. 'abs' → logprob: -6.592676639556885
    9. ' A' → logprob: -6.842676639556885
    10. '6' → logprob: -6.967676639556885

Token 2083: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3025430738925934
    2. 't' → logprob: -1.802543044090271
    3. '9' → logprob: -2.6775431632995605
    4. ',' → logprob: -4.1775431632995605
    5. ')' → logprob: -5.6775431632995605
    6. '.t' → logprob: -5.8025431632995605
    7. '*' → logprob: -6.3025431632995605
    8. '*t' → logprob: -6.9275431632995605
    9. ')t' → logprob: -7.1775431632995605
    10. ' t' → logprob: -7.1775431632995605

Token 2084: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.14441418647766113
    2. 't' → logprob: -2.394414186477661
    3. '.' → logprob: -3.144414186477661
    4. ')' → logprob: -9.769413948059082
    5. ' t' → logprob: -10.769413948059082
    6. '.t' → logprob: -11.394413948059082
    7. ',' → logprob: -11.644413948059082
    8. ' ' → logprob: -11.644413948059082
    9. '<|end|>' → logprob: -11.769413948059082
    10. ')t' → logprob: -12.269413948059082

Token 2085: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0701548382639885
    2. ',' → logprob: -2.945154905319214
    3. '*' → logprob: -5.320154666900635
    4. '*t' → logprob: -5.320154666900635
    5. '_t' → logprob: -6.320154666900635
    6. ' *' → logprob: -6.820154666900635
    7. ' t' → logprob: -7.070154666900635
    8. ')' → logprob: -7.695154666900635
    9. '*,' → logprob: -8.445155143737793
    10. '```' → logprob: -8.695155143737793

Token 2086: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07300451397895813
    2. ')' → logprob: -3.5730044841766357
    3. '_mod' → logprob: -3.6980044841766357
    4. ' ,' → logprob: -4.823004722595215
    5. '%' → logprob: -5.823004722595215
    6. '_,' → logprob: -6.198004722595215
    7. ' %' → logprob: -7.448004722595215
    8. ',
' → logprob: -7.698004722595215
    9. '%,' → logprob: -7.823004722595215
    10. '*' → logprob: -7.948004722595215

Token 2087: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46065497398376465
    2. '360' → logprob: -1.4606549739837646
    3. 'B' → logprob: -2.4606549739837646
    4. '(B' → logprob: -3.8356549739837646
    5. ' (' → logprob: -4.085655212402344
    6. ' ' → logprob: -5.335655212402344
    7. ' B' → logprob: -5.835655212402344
    8. '(A' → logprob: -6.835655212402344
    9. 'A' → logprob: -6.960655212402344
    10. ')' → logprob: -6.960655212402344

Token 2088: '360' (ID: 9870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29127538204193115
    2. 'B' → logprob: -1.6662753820419312
    3. '(B' → logprob: -3.7912755012512207
    4. '360' → logprob: -3.7912755012512207
    5. '6' → logprob: -5.041275501251221
    6. ' (' → logprob: -5.041275501251221
    7. '((' → logprob: -6.666275501251221
    8. '(A' → logprob: -6.916275501251221
    9. ' B' → logprob: -6.916275501251221
    10. 'A' → logprob: -7.041275501251221

Token 2089: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025989297777414322
    2. ',' → logprob: -4.150989532470703
    3. ' -' → logprob: -5.525989532470703
    4. '-' → logprob: -6.775989532470703
    5. '//' → logprob: -6.900989532470703
    6. ')=' → logprob: -7.150989532470703
    7. ' )' → logprob: -7.275989532470703
    8. '   ' → logprob: -8.025989532470703
    9. ',
' → logprob: -8.400989532470703
    10. ' //' → logprob: -8.400989532470703

Token 2090: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2300159931182861
    2. ' ==' → logprob: -1.3550159931182861
    3. ' =' → logprob: -1.7300159931182861
    4. '==' → logprob: -2.230015993118286
    5. ',' → logprob: -2.855015993118286
    6. '   ' → logprob: -3.230015993118286
    7. '%' → logprob: -3.605015993118286
    8. '```' → logprob: -4.355015754699707
    9. ')' → logprob: -4.730015754699707
    10. '[' → logprob: -5.730015754699707

Token 2091: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.09924079477787018
    2. '(' → logprob: -2.474240779876709
    3. '(lambda' → logprob: -6.349240779876709
    4. 'B' → logprob: -6.349240779876709
    5. '(min' → logprob: -6.474240779876709
    6. 'min' → logprob: -6.599240779876709
    7. '((' → logprob: -6.599240779876709
    8. 'lambda' → logprob: -6.849240779876709
    9. ' (' → logprob: -7.599240779876709
    10. '(B' → logprob: -7.974240779876709

Token 2092: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -9.372294698550832e-06
    2. 'angle' → logprob: -12.500009536743164
    3. '_' → logprob: -12.875009536743164
    4. '\' → logprob: -13.875009536743164
    5. '```' → logprob: -14.500009536743164
    6. ' _' → logprob: -15.000009536743164
    7. 'Angle' → logprob: -15.250009536743164
    8. '_answer' → logprob: -15.625009536743164
    9. '_age' → logprob: -15.625009536743164
    10. '_ang' → logprob: -16.750009536743164

Token 2093: '_mod' (ID: 15325)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49101200699806213
    2. '_mod' → logprob: -0.9910119771957397
    3. 'mod' → logprob: -4.491012096405029
    4. '_' → logprob: -6.241012096405029
    5. 'B' → logprob: -6.866012096405029
    6. '_m' → logprob: -7.366012096405029
    7. '(B' → logprob: -7.741012096405029
    8. ' (' → logprob: -8.491011619567871
    9. '```' → logprob: -8.491011619567871
    10. '6' → logprob: -8.616011619567871

Token 2094: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.001026854501105845
    2. 'ule' → logprob: -7.001026630401611
    3. ' modulo' → logprob: -10.37602710723877
    4. '(' → logprob: -10.50102710723877
    5. '_' → logprob: -10.87602710723877
    6. 'Modulo' → logprob: -11.50102710723877
    7. '360' → logprob: -12.12602710723877
    8. 'culo' → logprob: -12.50102710723877
    9. 'u' → logprob: -12.75102710723877
    10. 'olo' → logprob: -13.12602710723877

Token 2095: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6571378111839294
    2. 'B' → logprob: -1.2821378707885742
    3. '(B' → logprob: -1.7821378707885742
    4. ' (' → logprob: -3.657137870788574
    5. ' B' → logprob: -4.782137870788574
    6. '<|end|>' → logprob: -7.907137870788574
    7. '((' → logprob: -8.157137870788574
    8. ')' → logprob: -8.282137870788574
    9. '6' → logprob: -8.407137870788574
    10. '36' → logprob: -9.407137870788574

Token 2096: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.47461557388305664
    2. 't' → logprob: -1.0996155738830566
    3. ',' → logprob: -3.2246155738830566
    4. '5' → logprob: -5.849615573883057
    5. ')' → logprob: -6.974615573883057
    6. ' ,' → logprob: -7.599615573883057
    7. '6' → logprob: -8.349615097045898
    8. ' ' → logprob: -8.474615097045898
    9. ',t' → logprob: -9.849615097045898
    10. ' ' → logprob: -9.974615097045898

Token 2097: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004857266612816602
    2. ' ,' → logprob: -8.00048542022705
    3. ')' → logprob: -9.25048542022705
    4. '%' → logprob: -11.25048542022705
    5. ',
' → logprob: -11.87548542022705
    6. '',' → logprob: -12.00048542022705
    7. '),' → logprob: -12.12548542022705
    8. '%,' → logprob: -12.75048542022705
    9. ' ' → logprob: -13.12548542022705
    10. '   ' → logprob: -13.25048542022705

Token 2098: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '180' → logprob: -15.750003814697266
    4. '```' → logprob: -16.250003814697266
    5. '
' → logprob: -16.500003814697266
    6. ')' → logprob: -17.000003814697266
    7. '36' → logprob: -17.000003814697266
    8. '359' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.250003814697266
    10. '5' → logprob: -17.500003814697266

Token 2099: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '0' → logprob: -16.000001907348633
    4. '36' → logprob: -16.125001907348633
    5. '180' → logprob: -17.000001907348633
    6. ')' → logprob: -17.375001907348633
    7. '{' → logprob: -17.500001907348633
    8. '
' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '359' → logprob: -17.750001907348633

Token 2100: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027000922709703445
    2. ')
' → logprob: -3.777000904083252
    3. '   ' → logprob: -6.277000904083252
    4. '#' → logprob: -6.777000904083252
    5. '):' → logprob: -8.65200138092041
    6. ')
' → logprob: -8.77700138092041
    7. ')

' → logprob: -9.02700138092041
    8. 'def' → logprob: -9.27700138092041
    9. ')\' → logprob: -10.02700138092041
    10. '):
' → logprob: -10.40200138092041

Token 2101: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6175782084465027
    2. ':
' → logprob: -1.7425782680511475
    3. '   ' → logprob: -1.8675782680511475
    4. '\n' → logprob: -3.2425782680511475
    5. '#' → logprob: -3.8675782680511475
    6. ',' → logprob: -4.242578029632568
    7. '\' → logprob: -4.367578029632568
    8. '
' → logprob: -4.617578029632568
    9. ')' → logprob: -4.742578029632568
    10. 'def' → logprob: -4.992578029632568

Token 2102: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12406075745820999
    2. '
' → logprob: -2.624060869216919
    3. 'def' → logprob: -3.749060869216919
    4. '#' (adapté à ' #') → logprob: -4.62406063079834
    5. 'for' → logprob: -5.99906063079834
    6. '```' → logprob: -6.74906063079834
    7. 'n' → logprob: -6.99906063079834
    8. '\' → logprob: -7.12406063079834
    9. '\n' → logprob: -7.12406063079834
    10. 'import' → logprob: -7.12406063079834

Token 2103: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7162455320358276
    2. 'def' → logprob: -0.9662455320358276
    3. '
' → logprob: -2.091245651245117
    4. 'import' → logprob: -5.841245651245117
    5. '#' → logprob: -6.716245651245117
    6. '    
' → logprob: -6.966245651245117
    7. 'from' → logprob: -8.216245651245117
    8. '  
' → logprob: -8.341245651245117
    9. '#
' → logprob: -8.466245651245117
    10. '\' → logprob: -8.716245651245117

Token 2104: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -3.976922744186595e-05
    2. 'def' → logprob: -10.875040054321289
    3. 'angle' → logprob: -11.125040054321289
    4. 'Angle' → logprob: -13.250040054321289
    5. '#' → logprob: -13.500040054321289
    6. 'mod' → logprob: -14.500040054321289
    7. '_mod' → logprob: -14.625040054321289
    8. '```' → logprob: -15.125040054321289
    9. '_distance' → logprob: -15.250040054321289
    10. '_' → logprob: -15.375040054321289

Token 2105: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0003121056070085615
    2. '(' → logprob: -8.875311851501465
    3. '_' → logprob: -10.000311851501465
    4. '(
' → logprob: -11.125311851501465
    5. ')' → logprob: -11.250311851501465
    6. '```' → logprob: -11.375311851501465
    7. '_angle' → logprob: -11.750311851501465
    8. ' =' → logprob: -11.875311851501465
    9. '(mod' → logprob: -11.875311851501465
    10. '_diff' → logprob: -12.000311851501465

Token 2106: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.00022547018306795508
    2. ' modulo' → logprob: -9.000225067138672
    3. 'Modulo' → logprob: -10.500225067138672
    4. 'od' → logprob: -11.000225067138672
    5. '_mod' → logprob: -11.125225067138672
    6. 'ule' → logprob: -11.250225067138672
    7. '_' → logprob: -12.125225067138672
    8. '(' → logprob: -12.125225067138672
    9. 'culo' → logprob: -12.750225067138672
    10. 'mod' → logprob: -13.250225067138672

Token 2107: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06779993325471878
    2. '_mod' → logprob: -3.1928000450134277
    3. '(a' → logprob: -4.442800045013428
    4. '(angle' → logprob: -5.817800045013428
    5. 'def' → logprob: -6.317800045013428
    6. '(`' → logprob: -6.692800045013428
    7. '(min' → logprob: -6.692800045013428
    8. 'mod' → logprob: -6.692800045013428
    9. '(A' → logprob: -7.442800045013428
    10. '((' → logprob: -7.567800045013428

Token 2108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32901740074157715
    2. ')' → logprob: -1.5790174007415771
    3. '=' → logprob: -3.954017400741577
    4. ' =' → logprob: -4.204017639160156
    5. '(x' → logprob: -4.829017639160156
    6. '%' → logprob: -4.954017639160156
    7. 'def' → logprob: -5.329017639160156
    8. ',
' → logprob: -5.704017639160156
    9. ')=' → logprob: -5.829017639160156
    10. '):
' → logprob: -6.329017639160156

Token 2109: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0014404731336981058
    2. ' ' → logprob: -6.626440525054932
    3. ')' → logprob: -9.501440048217773
    4. 'x' → logprob: -10.751440048217773
    5. ' x' → logprob: -12.751440048217773
    6. 't' → logprob: -13.126440048217773
    7. 'lambda' → logprob: -13.376440048217773
    8. 'mod' → logprob: -13.376440048217773
    9. '=' → logprob: -13.626440048217773
    10. '   ' → logprob: -14.001440048217773

Token 2110: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0012454704847186804
    2. ')' → logprob: -6.751245498657227
    3. 'x' → logprob: -9.751245498657227
    4. 'mod' → logprob: -12.126245498657227
    5. '180' → logprob: -12.501245498657227
    6. ' ' → logprob: -12.626245498657227
    7. '=' → logprob: -13.376245498657227
    8. '```' → logprob: -14.126245498657227
    9. ' )' → logprob: -15.126245498657227
    10. ')x' → logprob: -15.376245498657227

Token 2111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014715510420501232
    2. '):' → logprob: -5.014715671539307
    3. '):
' → logprob: -5.139715671539307
    4. ')
' → logprob: -7.514715671539307
    5. ')=' → logprob: -7.889715671539307
    6. 'def' → logprob: -8.264715194702148
    7. '#' → logprob: -8.639715194702148
    8. '=' → logprob: -8.889715194702148
    9. ')==' → logprob: -9.264715194702148
    10. '   ' → logprob: -9.514715194702148

Token 2112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6740643382072449
    2. '=' → logprob: -1.4240643978118896
    3. 'def' → logprob: -1.7990643978118896
    4. ' def' → logprob: -3.4240643978118896
    5. ':' → logprob: -4.1740641593933105
    6. '#' → logprob: -4.2990641593933105
    7. '   ' → logprob: -4.6740641593933105
    8. ':
' → logprob: -5.5490641593933105
    9. ' ==' → logprob: -6.6740641593933105
    10. '=
' → logprob: -6.7990641593933105

Token 2113: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.42961421608924866
    2. 'lambda' → logprob: -1.0546141862869263
    3. 'def' → logprob: -7.304614067077637
    4. 'x' → logprob: -9.554614067077637
    5. ' min' → logprob: -9.804614067077637
    6. ' lambda' → logprob: -9.929614067077637
    7. '(lambda' → logprob: -11.054614067077637
    8. '```' → logprob: -11.554614067077637
    9. '#' → logprob: -11.679614067077637
    10. '(min' → logprob: -12.179614067077637

Token 2114: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.261309951543808
    2. '(abs' → logprob: -1.5113099813461304
    3. '(min' → logprob: -5.38631010055542
    4. '(' → logprob: -5.76131010055542
    5. '((' → logprob: -7.26131010055542
    6. 'x' → logprob: -7.76131010055542
    7. '(int' → logprob: -8.136309623718262
    8. '(
' → logprob: -9.386309623718262
    9. 'abs' → logprob: -9.511309623718262
    10. ' (' → logprob: -11.011309623718262

Token 2115: ' mod' (ID: 1812)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.28342828154563904
    2. '%' → logprob: -1.5334283113479614
    3. ',' → logprob: -3.533428192138672
    4. ' ,' → logprob: -6.533428192138672
    5. ')' → logprob: -8.908428192138672
    6. ' ' → logprob: -10.158428192138672
    7. '(' → logprob: -10.408428192138672
    8. '```' → logprob: -10.533428192138672
    9. '   ' → logprob: -11.158428192138672
    10. '(x' → logprob: -11.283428192138672

Token 2116: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0008061755215749145
    2. ' ' → logprob: -7.1258063316345215
    3. '180' → logprob: -14.000805854797363
    4. ',' → logprob: -15.500805854797363
    5. '36' → logprob: -15.500805854797363
    6. '(' → logprob: -15.625805854797363
    7. '{' → logprob: -17.12580680847168
    8. ')' → logprob: -17.50080680847168
    9. '  ' → logprob: -17.87580680847168
    10. '0' → logprob: -18.00080680847168

Token 2117: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.625016212463379
    3. '180' → logprob: -11.875016212463379
    4. '{' → logprob: -17.500015258789062
    5. '36' → logprob: -19.500015258789062
    6. '720' → logprob: -20.375015258789062
    7. ' ' → logprob: -20.875015258789062
    8. '```' → logprob: -21.000015258789062
    9. '0' → logprob: -21.250015258789062
    10. ')' → logprob: -21.375015258789062

Token 2118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14531227946281433
    2. ' ,' → logprob: -2.0203123092651367
    3. '_,' → logprob: -7.145312309265137
    4. ',
' → logprob: -7.270312309265137
    5. '```' → logprob: -8.020312309265137
    6. ')' → logprob: -8.395312309265137
    7. '``' → logprob: -8.645312309265137
    8. '360' → logprob: -9.645312309265137
    9. ' ' → logprob: -9.770312309265137
    10. '(x' → logprob: -9.895312309265137

Token 2119: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -7.76759916334413e-05
    2. ' ' → logprob: -9.500077247619629
    3. '(' → logprob: -13.375077247619629
    4. 'abs' → logprob: -14.375077247619629
    5. '361' → logprob: -15.500077247619629
    6. '-' → logprob: -15.875077247619629
    7. '   ' → logprob: -16.375078201293945
    8. ' ' → logprob: -16.750078201293945
    9. '365' → logprob: -16.875078201293945
    10. '359' → logprob: -17.375078201293945

Token 2120: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -3.0948158382670954e-05
    2. '(' → logprob: -10.625030517578125
    3. ' ' → logprob: -12.625030517578125
    4. '
' → logprob: -14.000030517578125
    5. '361' → logprob: -14.250030517578125
    6. '   ' → logprob: -14.375030517578125
    7. '359' → logprob: -15.375030517578125
    8. '36' → logprob: -15.500030517578125
    9. '365' → logprob: -15.625030517578125
    10. 'abs' → logprob: -15.875030517578125

Token 2121: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03177356719970703
    2. '-' → logprob: -3.656773567199707
    3. 'mod' → logprob: -5.406773567199707
    4. ' mod' → logprob: -7.531773567199707
    5. ' x' → logprob: -9.031773567199707
    6. ' ' → logprob: -9.281773567199707
    7. 'x' → logprob: -9.781773567199707
    8. ')' → logprob: -9.906773567199707
    9. '-mod' → logprob: -10.531773567199707
    10. ' ' → logprob: -10.531773567199707

Token 2122: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4485635757446289
    2. 'x' → logprob: -1.073563575744629
    3. ' (' → logprob: -4.073563575744629
    4. ' x' → logprob: -6.323563575744629
    5. '(' → logprob: -7.073563575744629
    6. ')' → logprob: -13.448563575744629
    7. '(abs' → logprob: -13.573563575744629
    8. '(
' → logprob: -13.823563575744629
    9. '((' → logprob: -14.073563575744629
    10. '{x' → logprob: -14.073563575744629

Token 2123: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0018998401938006282
    2. ' x' → logprob: -6.501899719238281
    3. '(x' → logprob: -8.001899719238281
    4. ' (' → logprob: -10.001899719238281
    5. '(' → logprob: -11.126899719238281
    6. '   ' → logprob: -13.876899719238281
    7. ')x' → logprob: -14.626899719238281
    8. ')' → logprob: -15.001899719238281
    9. '{x' → logprob: -15.251899719238281
    10. '(
' → logprob: -15.876899719238281

Token 2124: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4338426887989044
    2. 'mod' → logprob: -1.058842658996582
    3. '%' → logprob: -5.558842658996582
    4. ' %' → logprob: -7.183842658996582
    5. ' modulo' → logprob: -8.058842658996582
    6. '_mod' → logprob: -9.683842658996582
    7. ')' → logprob: -9.808842658996582
    8. ' ' → logprob: -10.308842658996582
    9. ' ' → logprob: -10.933842658996582
    10. '	mod' → logprob: -11.433842658996582

Token 2125: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.018193721771240234
    2. ' ' → logprob: -4.01819372177124
    3. ' ' → logprob: -10.393194198608398
    4. ')' → logprob: -11.643194198608398
    5. '36' → logprob: -13.643194198608398
    6. '```' → logprob: -14.018194198608398
    7. '​' → logprob: -14.955694198608398
    8. ' )' → logprob: -15.830694198608398
    9. '   ' → logprob: -15.830694198608398
    10. '180' → logprob: -15.893194198608398

Token 2126: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -19.7500057220459
    4. ' ' → logprob: -20.3750057220459
    5. '   ' → logprob: -21.1250057220459
    6. '36' → logprob: -21.3750057220459
    7. '{' → logprob: -21.6250057220459
    8. '180' → logprob: -21.8750057220459
    9. '  ' → logprob: -22.2500057220459
    10. '```' → logprob: -22.2500057220459

Token 2127: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023820223286747932
    2. ')' → logprob: -3.773820161819458
    3. '))
' → logprob: -8.523819923400879
    4. ')))' → logprob: -8.648819923400879
    5. ' ))' → logprob: -9.273819923400879
    6. '   ' → logprob: -9.898819923400879
    7. '()))' → logprob: -11.273819923400879
    8. ' ' → logprob: -11.523819923400879
    9. ' ' → logprob: -12.148819923400879
    10. ' )' → logprob: -12.398819923400879

Token 2128: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8325616121292114
    2. '   ' → logprob: -1.7075616121292114
    3. ')' → logprob: -2.082561492919922
    4. '#' → logprob: -2.707561492919922
    5. '\n' → logprob: -2.707561492919922
    6. '\' → logprob: -3.207561492919922
    7. '
' → logprob: -4.082561492919922
    8. ':' → logprob: -4.457561492919922
    9. ':
' → logprob: -4.957561492919922
    10. ')
' → logprob: -5.082561492919922

Token 2129: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39991191029548645
    2. 'def' → logprob: -2.149911880493164
    3. '#' (adapté à ' #') → logprob: -2.399911880493164
    4. '\n' → logprob: -2.899911880493164
    5. '\' → logprob: -3.899911880493164
    6. ':' → logprob: -4.774911880493164
    7. '
' → logprob: -5.024911880493164
    8. ',' → logprob: -5.774911880493164
    9. 'for' → logprob: -5.774911880493164
    10. ':
' → logprob: -5.899911880493164

Token 2130: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2369043081998825
    2. 'def' → logprob: -1.611904263496399
    3. '
' → logprob: -5.236904144287109
    4. '#' → logprob: -6.361904144287109
    5. '```' → logprob: -6.861904144287109
    6. 'for' → logprob: -7.361904144287109
    7. 'A' → logprob: -7.611904144287109
    8. 'import' → logprob: -7.861904144287109
    9. '\' → logprob: -8.11190414428711
    10. ' def' → logprob: -8.23690414428711

Token 2131: 'it' (ID: 278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1513170003890991
    2. 'ur' → logprob: -1.5263170003890991
    3. 'u' → logprob: -1.9013170003890991
    4. 'n' → logprob: -2.1513171195983887
    5. 'm' → logprob: -2.7763171195983887
    6. 'l' → logprob: -3.1513171195983887
    7. ' =' → logprob: -3.9013171195983887
    8. '   ' → logprob: -4.026317119598389
    9. 'rt' → logprob: -4.151317119598389
    10. '=' → logprob: -4.776317119598389

Token 2132: ' x' (ID: 1215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7686430215835571
    2. 'from' → logprob: -1.3936430215835571
    3. '#' → logprob: -1.8936430215835571
    4. 'x' → logprob: -3.1436429023742676
    5. 'import' → logprob: -3.2686429023742676
    6. 'for' → logprob: -3.8936429023742676
    7. 'A' → logprob: -4.768642902374268
    8. '   ' → logprob: -5.143642902374268
    9. '```' → logprob: -5.143642902374268
    10. '(x' → logprob: -6.018642902374268

Token 2133: '_m' (ID: 1285)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6925143003463745
    2. '=' → logprob: -0.8175143003463745
    3. '%' → logprob: -3.567514419555664
    4. '_mod' → logprob: -4.442514419555664
    5. ' %' → logprob: -5.442514419555664
    6. ' %=' → logprob: -5.692514419555664
    7. '_' → logprob: -5.817514419555664
    8. ' mod' → logprob: -6.192514419555664
    9. 'mod' → logprob: -6.192514419555664
    10. ',' → logprob: -7.317514419555664

Token 2134: ' =' (ID: 314)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.003815630218014121
    2. '=' → logprob: -6.503815650939941
    3. ' =' → logprob: -6.628815650939941
    4. '_mod' → logprob: -8.253815650939941
    5. '_' → logprob: -8.628815650939941
    6. 'odule' → logprob: -8.753815650939941
    7. '```' → logprob: -9.503815650939941
    8. '`' → logprob: -10.003815650939941
    9. 'o' → logprob: -10.003815650939941
    10. 'odu' → logprob: -10.503815650939941

Token 2135: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.049848176538944244
    2. ' x' → logprob: -3.6748480796813965
    3. '(x' → logprob: -4.2998480796813965
    4. '(' → logprob: -5.1748480796813965
    5. ' (' → logprob: -5.7998480796813965
    6. 't' → logprob: -8.049848556518555
    7. '5' → logprob: -8.799848556518555
    8. '`' → logprob: -9.549848556518555
    9. '```' → logprob: -9.549848556518555
    10. '(t' → logprob: -9.924848556518555

Token 2136: ' mod' (ID: 1812)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'od' → logprob: -1.0161422491073608
    2. '_mod' → logprob: -1.5161422491073608
    3. '_m' → logprob: -1.5161422491073608
    4. '%' → logprob: -2.0161423683166504
    5. 'm' → logprob: -3.7661423683166504
    6. 'mod' → logprob: -3.8911423683166504
    7. '=' → logprob: -4.01614236831665
    8. '_' → logprob: -6.76614236831665
    9. '%m' → logprob: -6.76614236831665
    10. ' =' → logprob: -7.64114236831665

Token 2137: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -16.126033782958984
    4. ' ' → logprob: -17.376033782958984
    5. '36' → logprob: -17.876033782958984
    6. '`' → logprob: -18.001033782958984
    7. '720' → logprob: -18.376033782958984
    8. '{' → logprob: -18.626033782958984
    9. '``' → logprob: -19.626033782958984
    10. '(' → logprob: -19.751033782958984

Token 2138: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.625
    4. '36' → logprob: -16.75
    5. '`' → logprob: -17.5
    6. '{' → logprob: -18.25
    7. '``' → logprob: -18.875
    8. '(' → logprob: -19.125
    9. ' ' → logprob: -19.625
    10. '180' → logprob: -20.125

Token 2139: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5988931655883789
    2. '```' → logprob: -2.098893165588379
    3. ' =' → logprob: -2.723893165588379
    4. ')' → logprob: -2.848893165588379
    5. ',' → logprob: -3.098893165588379
    6. '   ' → logprob: -3.348893165588379
    7. '=' → logprob: -3.848893165588379
    8. '_' → logprob: -4.723893165588379
    9. '``' → logprob: -4.723893165588379
    10. ':' → logprob: -4.723893165588379

Token 2140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0264593362808228
    2. '\' → logprob: -1.9014593362808228
    3. '#' → logprob: -2.151459217071533
    4. '\n' → logprob: -2.276459217071533
    5. 'x' → logprob: -2.651459217071533
    6. ':' → logprob: -3.026459217071533
    7. '=' → logprob: -3.151459217071533
    8. '
' → logprob: -3.651459217071533
    9. ':
' → logprob: -4.026459217071533
    10. 'def' → logprob: -4.151459217071533

Token 2141: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.432026207447052
    2. '#' (adapté à ' #') → logprob: -1.1820261478424072
    3. 'for' → logprob: -3.5570261478424072
    4. 'def' → logprob: -5.307026386260986
    5. 'i' → logprob: -5.557026386260986
    6. '#
' → logprob: -5.682026386260986
    7. 'A' → logprob: -7.307026386260986
    8. 'n' → logprob: -7.307026386260986
    9. ' for' → logprob: -7.807026386260986
    10. 'x' → logprob: -8.057025909423828

Token 2142: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19173632562160492
    2. 'def' → logprob: -2.1917362213134766
    3. '   ' → logprob: -3.6917362213134766
    4. ' #' → logprob: -5.441736221313477
    5. '#
' → logprob: -5.441736221313477
    6. '
' → logprob: -5.566736221313477
    7. 'for' → logprob: -5.566736221313477
    8. 'from' → logprob: -5.816736221313477
    9. 'import' → logprob: -5.941736221313477
    10. '\' → logprob: -6.066736221313477

Token 2143: ' veut' (ID: 41653)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.6301524639129639
    2. '#' → logprob: -1.8801524639129639
    3. 'pose' → logprob: -2.130152463912964
    4. 'def' → logprob: -2.380152463912964
    5. 'cherche' → logprob: -2.755152463912964
    6. 'pos' → logprob: -2.880152463912964
    7. '=' → logprob: -3.130152463912964
    8. 'pro' → logprob: -3.255152463912964
    9. 'contin' → logprob: -3.630152463912964
    10. '
' → logprob: -4.255152702331543

Token 2144: ':
' (ID: 734)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -1.1915518045425415
    2. 'x' → logprob: -1.3165518045425415
    3. ' minimal' → logprob: -1.8165518045425415
    4. '(' → logprob: -2.441551685333252
    5. ' (' → logprob: -2.816551685333252
    6. '(
' → logprob: -3.316551685333252
    7. ' x' → logprob: -3.441551685333252
    8. '(x' → logprob: -4.566551685333252
    9. 'abs' → logprob: -5.316551685333252
    10. ' y' → logprob: -5.441551685333252

Token 2145: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2999628782272339
    2. 'for' → logprob: -2.4249629974365234
    3. 'def' → logprob: -3.0499629974365234
    4. 't' → logprob: -3.4249629974365234
    5. 'x' → logprob: -4.424962997436523
    6. '(' → logprob: -4.424962997436523
    7. '[
' → logprob: -4.674962997436523
    8. '(
' → logprob: -4.924962997436523
    9. '[' → logprob: -4.924962997436523
    10. '   ' → logprob: -5.424962997436523

Token 2146: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7279679775238037
    2. 'abs' → logprob: -1.6029679775238037
    3. 'x' → logprob: -2.4779679775238037
    4. 'minimal' → logprob: -3.2279679775238037
    5. '(' → logprob: -3.4779679775238037
    6. '((' → logprob: -3.7279679775238037
    7. '(abs' → logprob: -4.102968215942383
    8. '(
' → logprob: -4.227968215942383
    9. '(x' → logprob: -4.352968215942383
    10. ' (' → logprob: -4.352968215942383

Token 2147: ' min' (ID: 1349)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7553611397743225
    2. 'x' → logprob: -1.6303610801696777
    3. 'abs' → logprob: -2.2553610801696777
    4. '(
' → logprob: -3.1303610801696777
    5. '(' → logprob: -3.3803610801696777
    6. '((' → logprob: -3.5053610801696777
    7. 'def' → logprob: -4.005361080169678
    8. 'A' → logprob: -4.005361080169678
    9. 'for' → logprob: -4.255361080169678
    10. '(x' → logprob: -4.380361080169678

Token 2148: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1822400987148285
    2. '(' → logprob: -2.8072400093078613
    3. 'imal' → logprob: -2.9322400093078613
    4. '(min' → logprob: -4.182240009307861
    5. '(
' → logprob: -4.307240009307861
    6. '((' → logprob: -4.432240009307861
    7. 'x' → logprob: -5.057240009307861
    8. '_x' → logprob: -5.807240009307861
    9. 'minimal' → logprob: -6.432240009307861
    10. '(a' → logprob: -8.55724048614502

Token 2149: '5' (ID: 20)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5647861957550049
    2. '(' → logprob: -1.3147861957550049
    3. '(x' → logprob: -3.189786195755005
    4. '(int' → logprob: -3.439786195755005
    5. '(lambda' → logprob: -3.564786195755005
    6. '((' → logprob: -4.439785957336426
    7. '5' → logprob: -4.689785957336426
    8. 'minimal' → logprob: -4.814785957336426
    9. 'int' → logprob: -5.064785957336426
    10. '(A' → logprob: -5.314785957336426

Token 2150: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011521248379722238
    2. '9' → logprob: -7.001152038574219
    3. ' .' → logprob: -9.751152038574219
    4. 'point' → logprob: -10.126152038574219
    5. '46' → logprob: -11.126152038574219
    6. '90' → logprob: -11.126152038574219
    7. ')' → logprob: -11.251152038574219
    8. '59' → logprob: -11.376152038574219
    9. '39' → logprob: -11.376152038574219
    10. ''.' → logprob: -11.876152038574219

Token 2151: '9' (ID: 24)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4748455286026001
    2. '9' → logprob: -0.9748455286026001
    3. ')' → logprob: -7.7248454093933105
    4. ',' → logprob: -8.849845886230469
    5. ' .' → logprob: -9.974845886230469
    6. '900' → logprob: -10.974845886230469
    7. '.)' → logprob: -11.099845886230469
    8. '.
' → logprob: -11.349845886230469
    9. ' ' → logprob: -11.349845886230469
    10. '90' → logprob: -11.724845886230469

Token 2152: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.14610889554023743
    2. 't' → logprob: -2.021108865737915
    3. ' *' → logprob: -6.396109104156494
    4. '*' → logprob: -7.521109104156494
    5. ',' → logprob: -8.021108627319336
    6. '*t' → logprob: -8.396108627319336
    7. ')' → logprob: -8.521108627319336
    8. ' ' → logprob: -8.521108627319336
    9. ' )' → logprob: -9.771108627319336
    10. ' ' → logprob: -10.021108627319336

Token 2153: ' mod' (ID: 1812)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9055710434913635
    2. ' ,' → logprob: -1.1555709838867188
    3. '_mod' → logprob: -2.2805709838867188
    4. ' t' → logprob: -2.5305709838867188
    5. ' _' → logprob: -3.4055709838867188
    6. '_,' → logprob: -4.280570983886719
    7. '_m' → logprob: -4.530570983886719
    8. '_t' → logprob: -4.655570983886719
    9. ' ' → logprob: -5.155570983886719
    10. 't' → logprob: -5.155570983886719

Token 2154: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.007621533703058958
    2. ' ' → logprob: -4.882621765136719
    3. ',' → logprob: -11.382621765136719
    4. ' ' → logprob: -13.507621765136719
    5. ')' → logprob: -14.382621765136719
    6. '```' → logprob: -14.632621765136719
    7. ' ,' → logprob: -14.632621765136719
    8. '{' → logprob: -15.257621765136719
    9. '36' → logprob: -15.632621765136719
    10. '`' → logprob: -16.00762176513672

Token 2155: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '{' → logprob: -17.375139236450195
    4. ' ' → logprob: -17.750139236450195
    5. '36' → logprob: -18.500139236450195
    6. ')' → logprob: -18.625139236450195
    7. '180' → logprob: -18.625139236450195
    8. '```' → logprob: -18.625139236450195
    9. '`' → logprob: -19.375139236450195
    10. ',' → logprob: -19.375139236450195

Token 2156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005762168671935797
    2. ' ,' → logprob: -5.255762100219727
    3. ',
' → logprob: -8.130762100219727
    4. ')' → logprob: -8.755762100219727
    5. '```' → logprob: -10.130762100219727
    6. '   ' → logprob: -11.255762100219727
    7. '),' → logprob: -12.255762100219727
    8. '``' → logprob: -12.380762100219727
    9. '`,' → logprob: -12.880762100219727
    10. ' ' → logprob: -13.130762100219727

Token 2157: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.3496820628643036
    2. ' ' → logprob: -1.224682092666626
    3. ' ' → logprob: -7.474681854248047
    4. '   ' → logprob: -8.099681854248047
    5. ')' → logprob: -9.224681854248047
    6. '    ' → logprob: -9.724681854248047
    7. '(' → logprob: -10.349681854248047
    8. ' (' → logprob: -10.349681854248047
    9. '`' → logprob: -10.849681854248047
    10. '36' → logprob: -10.974681854248047

Token 2158: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0009417156688869
    2. ' ' → logprob: -7.125941753387451
    3. '   ' → logprob: -9.500941276550293
    4. '(' → logprob: -11.125941276550293
    5. ' ' → logprob: -11.375941276550293
    6. '36' → logprob: -12.125941276550293
    7. '365' → logprob: -12.625941276550293
    8. ')' → logprob: -12.750941276550293
    9. '  ' → logprob: -12.938441276550293
    10. '361' → logprob: -13.188441276550293

Token 2159: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03367947041988373
    2. '-' → logprob: -3.408679485321045
    3. ')' → logprob: -10.783679008483887
    4. ' ' → logprob: -12.283679008483887
    5. ' ' → logprob: -12.533679008483887
    6. ' minus' → logprob: -13.408679008483887
    7. 'minus' → logprob: -14.533679008483887
    8. '-min' → logprob: -14.658679008483887
    9. ' -
' → logprob: -15.033679008483887
    10. ' )' → logprob: -15.408679008483887

Token 2160: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008914520149119198
    2. ' (' → logprob: -7.25089168548584
    3. '5' → logprob: -8.62589168548584
    4. '((' → logprob: -14.00089168548584
    5. '(int' → logprob: -14.12589168548584
    6. ' ' → logprob: -15.50089168548584
    7. '{' → logprob: -16.250890731811523
    8. 'int' → logprob: -16.250890731811523
    9. '   ' → logprob: -16.750890731811523
    10. '45' → logprob: -17.250890731811523

Token 2161: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.22552356123924255
    2. '(' → logprob: -1.600523591041565
    3. ' (' → logprob: -9.725523948669434
    4. '{' → logprob: -11.725523948669434
    5. '(int' → logprob: -11.975523948669434
    6. ' ' → logprob: -11.975523948669434
    7. ')' → logprob: -12.100523948669434
    8. 'x' → logprob: -12.225523948669434
    9. 'int' → logprob: -12.975523948669434
    10. '(
' → logprob: -13.100523948669434

Token 2162: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.9153885558771435e-06
    2. ' .' → logprob: -12.375005722045898
    3. '46' → logprob: -15.375005722045898
    4. '9' → logprob: -15.375005722045898
    5. 'point' → logprob: -15.500005722045898
    6. ')' → logprob: -15.875005722045898
    7. ' ' → logprob: -16.1250057220459
    8. '.
' → logprob: -16.5000057220459
    9. '<|end|>' → logprob: -16.5000057220459
    10. '   ' → logprob: -16.7500057220459

Token 2163: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00043555660522542894
    2. '.' → logprob: -7.7504353523254395
    3. '900' → logprob: -12.750435829162598
    4. ')' → logprob: -14.250435829162598
    5. '...' → logprob: -15.000435829162598
    6. '90' → logprob: -15.000435829162598
    7. '#' → logprob: -16.43793487548828
    8. '```' → logprob: -16.68793487548828
    9. ',' → logprob: -16.81293487548828
    10. '4' → logprob: -17.00043487548828

Token 2164: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1128903403878212
    2. 't' → logprob: -2.2378902435302734
    3. ' *' → logprob: -10.362890243530273
    4. '*t' → logprob: -10.737890243530273
    5. '	t' → logprob: -12.362890243530273
    6. ' ' → logprob: -12.862890243530273
    7. '*' → logprob: -13.112890243530273
    8. '`t' → logprob: -13.362890243530273
    9. ' ' → logprob: -13.862890243530273
    10. '_t' → logprob: -13.862890243530273

Token 2165: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.8270477056503296
    2. ' t' → logprob: -1.2020477056503296
    3. ' mod' → logprob: -1.5770477056503296
    4. 't' → logprob: -3.077047824859619
    5. ')' → logprob: -4.827047824859619
    6. '_mod' → logprob: -7.327047824859619
    7. ' ' → logprob: -8.202047348022461
    8. '%' → logprob: -9.077047348022461
    9. ' ' → logprob: -9.702047348022461
    10. ')t' → logprob: -10.077047348022461

Token 2166: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.05508527532219887
    2. ' ' → logprob: -2.9300851821899414
    3. ' t' → logprob: -9.055085182189941
    4. 't' → logprob: -10.180085182189941
    5. ' ' → logprob: -10.805085182189941
    6. ')' → logprob: -10.805085182189941
    7. ',' → logprob: -13.555085182189941
    8. ' )' → logprob: -13.930085182189941
    9. '   ' → logprob: -14.117585182189941
    10. '_' → logprob: -14.367585182189941

Token 2167: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00038455575122497976
    2. 't' → logprob: -8.000384330749512
    3. ' ' → logprob: -10.625384330749512
    4. ' t' → logprob: -10.750384330749512
    5. ')' → logprob: -13.625384330749512
    6. '5' → logprob: -14.750384330749512
    7. '   ' → logprob: -14.875384330749512
    8. '```' → logprob: -14.875384330749512
    9. ' ' → logprob: -15.875384330749512
    10. '359' → logprob: -16.000385284423828

Token 2168: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0030429584439843893
    2. ')' → logprob: -6.128043174743652
    3. '   ' → logprob: -7.378043174743652
    4. ' ))' → logprob: -9.003043174743652
    5. '))
' → logprob: -10.378043174743652
    6. ')))' → logprob: -11.003043174743652
    7. '),' → logprob: -11.128043174743652
    8. ')),' → logprob: -11.753043174743652
    9. ',' → logprob: -11.878043174743652
    10. ''))' → logprob: -12.003043174743652

Token 2169: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7823542356491089
    2. ' =' → logprob: -1.4073542356491089
    3. ' ==' → logprob: -1.9073542356491089
    4. '=' → logprob: -2.7823543548583984
    5. ' ,' → logprob: -3.5323543548583984
    6. ')' → logprob: -4.032354354858398
    7. ',
' → logprob: -4.157354354858398
    8. '==' → logprob: -4.282354354858398
    9. '   ' → logprob: -5.282354354858398
    10. '```' → logprob: -6.032354354858398

Token 2170: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.008937880396842957
    2. ' min' → logprob: -4.758937835693359
    3. 'minimal' → logprob: -8.13393783569336
    4. ' minimal' → logprob: -11.38393783569336
    5. '   ' → logprob: -11.88393783569336
    6. 'minimum' → logprob: -12.88393783569336
    7. '	min' → logprob: -13.00893783569336
    8. '(min' → logprob: -13.13393783569336
    9. 'mini' → logprob: -13.75893783569336
    10. '```' → logprob: -14.13393783569336

Token 2171: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013894681818783283
    2. '(B' → logprob: -4.388894557952881
    3. '((' → logprob: -7.388894557952881
    4. ' (' → logprob: -7.388894557952881
    5. 'B' → logprob: -9.638895034790039
    6. '(int' → logprob: -10.388895034790039
    7. '\(' → logprob: -10.638895034790039
    8. '(abs' → logprob: -11.763895034790039
    9. '\' → logprob: -12.888895034790039
    10. '(
' → logprob: -13.263895034790039

Token 2172: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.02724514715373516
    2. 't' → logprob: -3.652245044708252
    3. ',' → logprob: -7.527245044708252
    4. ' ' → logprob: -8.65224552154541
    5. ' *' → logprob: -8.90224552154541
    6. '*' → logprob: -11.02724552154541
    7. ' ' → logprob: -11.15224552154541
    8. ')' → logprob: -11.27724552154541
    9. '_t' → logprob: -11.52724552154541
    10. '	t' → logprob: -11.77724552154541

Token 2173: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.41894015669822693
    2. ',' → logprob: -1.4189401865005493
    3. 'mod' → logprob: -2.6689400672912598
    4. ' ,' → logprob: -3.5439400672912598
    5. '_mod' → logprob: -7.16894006729126
    6. ' %' → logprob: -8.293940544128418
    7. ' ' → logprob: -8.418940544128418
    8. ' t' → logprob: -8.793940544128418
    9. ' modulo' → logprob: -8.918940544128418
    10. '%' → logprob: -8.918940544128418

Token 2174: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.001977999461814761
    2. ' ' → logprob: -6.376977920532227
    3. ' ' → logprob: -8.876977920532227
    4. ',' → logprob: -9.626977920532227
    5. ')' → logprob: -10.626977920532227
    6. 'space' → logprob: -11.251977920532227
    7. '```' → logprob: -11.626977920532227
    8. ''' → logprob: -12.376977920532227
    9. '​' → logprob: -12.376977920532227
    10. '`' → logprob: -12.501977920532227

Token 2175: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '```' → logprob: -14.375141143798828
    4. '36' → logprob: -15.625141143798828
    5. '180' → logprob: -16.375141143798828
    6. ' ' → logprob: -17.250141143798828
    7. '`' → logprob: -18.875141143798828
    8. '``' → logprob: -19.250141143798828
    9. '359' → logprob: -19.500141143798828
    10. '(' → logprob: -19.875141143798828

Token 2176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001328095211647451
    2. ' ,' → logprob: -6.876327991485596
    3. ')' → logprob: -8.751328468322754
    4. '),' → logprob: -10.126328468322754
    5. ',
' → logprob: -10.251328468322754
    6. '```' → logprob: -10.751328468322754
    7. ' mod' → logprob: -11.876328468322754
    8. ',)' → logprob: -11.876328468322754
    9. '   ' → logprob: -12.376328468322754
    10. '`,' → logprob: -12.501328468322754

Token 2177: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.07154902070760727
    2. ' ' → logprob: -2.6965489387512207
    3. ' ' → logprob: -6.446548938751221
    4. '​' → logprob: -12.071549415588379
    5. '```' → logprob: -12.321549415588379
    6. '\' → logprob: -12.946549415588379
    7. ')' → logprob: -13.196549415588379
    8. '   ' → logprob: -13.321549415588379
    9. '    ' → logprob: -13.821549415588379
    10. '`' → logprob: -13.821549415588379

Token 2178: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0021946365013718605
    2. ' ' → logprob: -6.127194404602051
    3. ' ' → logprob: -11.75219440460205
    4. '   ' → logprob: -14.25219440460205
    5. '36' → logprob: -15.25219440460205
    6. '361' → logprob: -16.002195358276367
    7. '​' → logprob: -16.127195358276367
    8. '359' → logprob: -16.502195358276367
    9. ')' → logprob: -16.752195358276367
    10. '  ' → logprob: -16.877195358276367

Token 2179: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16171948611736298
    2. '-' → logprob: -1.9117194414138794
    3. ')' → logprob: -6.66171932220459
    4. ',' → logprob: -9.16171932220459
    5. ' ' → logprob: -10.03671932220459
    6. '),' → logprob: -10.53671932220459
    7. '   ' → logprob: -11.53671932220459
    8. '```' → logprob: -11.78671932220459
    9. ')-' → logprob: -12.53671932220459
    10. 'mod' → logprob: -12.91171932220459

Token 2180: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.033769022673368454
    2. ' (' → logprob: -3.408769130706787
    3. '(' → logprob: -9.033768653869629
    4. '(bt' → logprob: -13.158768653869629
    5. '((' → logprob: -14.408768653869629
    6. '(b' → logprob: -14.783768653869629
    7. ' ' → logprob: -15.283768653869629
    8. '   ' → logprob: -15.908768653869629
    9. '(Bit' → logprob: -16.033769607543945
    10. ' ' → logprob: -16.033769607543945

Token 2181: 'B' (ID: 33)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.4753662943840027
    2. 'B' → logprob: -0.9753662943840027
    3. 'Bt' → logprob: -7.225366115570068
    4. ' (' → logprob: -8.350366592407227
    5. '(' → logprob: -8.725366592407227
    6. 'BT' → logprob: -8.975366592407227
    7. ' B' → logprob: -10.975366592407227
    8. '_B' → logprob: -12.850366592407227
    9. '(
' → logprob: -13.225366592407227
    10. '((' → logprob: -13.350366592407227

Token 2182: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3133600056171417
    2. 't' → logprob: -1.3133599758148193
    3. ' ' → logprob: -10.313360214233398
    4. '_t' → logprob: -10.688360214233398
    5. '	t' → logprob: -11.438360214233398
    6. ')' → logprob: -12.188360214233398
    7. ' ' → logprob: -12.313360214233398
    8. '*t' → logprob: -12.313360214233398
    9. '`t' → logprob: -12.563360214233398
    10. ' *' → logprob: -12.688360214233398

Token 2183: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.225661963224411
    2. 'mod' → logprob: -1.6006619930267334
    3. ' t' → logprob: -9.225662231445312
    4. ' ' → logprob: -10.225662231445312
    5. '_mod' → logprob: -10.725662231445312
    6. 't' → logprob: -10.850662231445312
    7. ' num' → logprob: -10.850662231445312
    8. ')' → logprob: -10.975662231445312
    9. '	mod' → logprob: -11.475662231445312
    10. 'num' → logprob: -11.725662231445312

Token 2184: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.001712901284918189
    2. ' ' → logprob: -6.376712799072266
    3. '   ' → logprob: -12.376712799072266
    4. ')' → logprob: -12.751712799072266
    5. 't' → logprob: -13.501712799072266
    6. '  ' → logprob: -14.876712799072266
    7. '```' → logprob: -15.001712799072266
    8. ' ' → logprob: -15.126712799072266
    9. ',' → logprob: -15.126712799072266
    10. ' t' → logprob: -15.251712799072266

Token 2185: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.0921942703134846e-05
    2. 't' → logprob: -12.00001049041748
    3. ' ' → logprob: -12.37501049041748
    4. ')' → logprob: -15.00001049041748
    5. '   ' → logprob: -16.625011444091797
    6. ' t' → logprob: -16.750011444091797
    7. '359' → logprob: -17.500011444091797
    8. '#' → logprob: -17.875011444091797
    9. '180' → logprob: -17.875011444091797
    10. '  ' → logprob: -18.500011444091797

Token 2186: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009492914192378521
    2. ')' → logprob: -5.009492874145508
    3. '))
' → logprob: -6.134492874145508
    4. ')):' → logprob: -8.259492874145508
    5. ')))' → logprob: -8.634492874145508
    6. ')):
' → logprob: -10.259492874145508
    7. '   ' → logprob: -10.634492874145508
    8. '#' → logprob: -10.634492874145508
    9. '))
' → logprob: -11.009492874145508
    10. ')),' → logprob: -11.509492874145508

Token 2187: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5246614813804626
    2. '#' → logprob: -2.0246615409851074
    3. ':
' → logprob: -2.1496615409851074
    4. '\n' → logprob: -2.8996615409851074
    5. '\' → logprob: -3.2746615409851074
    6. '   ' → logprob: -4.399661540985107
    7. '
' → logprob: -4.649661540985107
    8. ',' → logprob: -4.649661540985107
    9. 'def' → logprob: -4.774661540985107
    10. ')' → logprob: -5.024661540985107

Token 2188: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8219897747039795
    2. '#' (adapté à ' #') → logprob: -1.6969897747039795
    3. '   ' → logprob: -1.6969897747039795
    4. '
' → logprob: -2.6969897747039795
    5. '\' → logprob: -3.0719897747039795
    6. 'for' → logprob: -3.3219897747039795
    7. '#
' → logprob: -4.821990013122559
    8. 'def' → logprob: -5.071990013122559
    9. ' for' → logprob: -5.571990013122559
    10. 'n' → logprob: -5.821990013122559

Token 2189: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1193634495139122
    2. 'def' → logprob: -3.11936354637146
    3. '\n' → logprob: -3.61936354637146
    4. '
' → logprob: -4.494363307952881
    5. '#' → logprob: -4.619363307952881
    6. ':' → logprob: -5.369363307952881
    7. '\' → logprob: -5.619363307952881
    8. ' \' → logprob: -5.869363307952881
    9. 'import' → logprob: -6.994363307952881
    10. ':
' → logprob: -7.244363307952881

Token 2190: ' implique' (ID: 168269)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2741670310497284
    2. ' =' → logprob: -2.524167060852051
    3. '=' → logprob: -2.649167060852051
    4. 'continue' → logprob: -3.274167060852051
    5. 's' → logprob: -4.649167060852051
    6. ' continue' → logprob: -4.774167060852051
    7. ' #' → logprob: -5.149167060852051
    8. 'est' → logprob: -5.274167060852051
    9. '
' → logprob: -5.899167060852051
    10. 'contin' → logprob: -6.024167060852051

Token 2191: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20825131237506866
    2. '[
' → logprob: -2.7082512378692627
    3. 'que' → logprob: -3.3332512378692627
    4. 'x' → logprob: -3.7082512378692627
    5. '(
' → logprob: -4.083251476287842
    6. '(' → logprob: -4.333251476287842
    7. ' que' → logprob: -4.708251476287842
    8. 'une' → logprob: -5.458251476287842
    9. '   ' → logprob: -5.708251476287842
    10. 't' → logprob: -5.958251476287842

Token 2192: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.65092933177948
    2. '#' → logprob: -2.2759294509887695
    3. '(B' → logprob: -2.2759294509887695
    4. '5' → logprob: -2.4009294509887695
    5. '((' → logprob: -3.1509294509887695
    6. 'x' → logprob: -3.1509294509887695
    7. '(
' → logprob: -3.2759294509887695
    8. 'B' → logprob: -4.2759294509887695
    9. 'abs' → logprob: -4.4009294509887695
    10. 'for' → logprob: -4.9009294509887695

Token 2193: '5' (ID: 20)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5747920274734497
    2. '#' → logprob: -1.8247920274734497
    3. '(
' → logprob: -2.69979190826416
    4. '5' → logprob: -2.82479190826416
    5. 'x' → logprob: -3.32479190826416
    6. 'abs' → logprob: -3.57479190826416
    7. '((' → logprob: -3.94979190826416
    8. 'minimal' → logprob: -3.94979190826416
    9. '(B' → logprob: -4.07479190826416
    10. 'for' → logprob: -5.07479190826416

Token 2194: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021912967786192894
    2. '9' → logprob: -3.8969130516052246
    3. '.
' → logprob: -6.771913051605225
    4. ' .' → logprob: -9.396912574768066
    5. '90' → logprob: -9.771912574768066
    6. '   ' → logprob: -11.396912574768066
    7. '39' → logprob: -11.646912574768066
    8. '99' → logprob: -11.771912574768066
    9. ' ' → logprob: -12.271912574768066
    10. '93' → logprob: -12.396912574768066

Token 2195: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0021924946922808886
    2. '.' → logprob: -6.127192497253418
    3. ')' → logprob: -13.127192497253418
    4. '900' → logprob: -13.127192497253418
    5. ',' → logprob: -13.877192497253418
    6. '90' → logprob: -14.377192497253418
    7. '٩' → logprob: -15.377192497253418
    8. ':' → logprob: -15.814692497253418
    9. '.
' → logprob: -15.877192497253418
    10. '(' → logprob: -16.1271915435791

Token 2196: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.15708407759666443
    2. 't' → logprob: -2.0320839881896973
    3. ' *' → logprob: -4.657083988189697
    4. '*' → logprob: -5.532083988189697
    5. '*t' → logprob: -7.657083988189697
    6. ' ' → logprob: -8.407084465026855
    7. ',' → logprob: -9.282084465026855
    8. ' ' → logprob: -10.907084465026855
    9. ')' → logprob: -11.282084465026855
    10. '.' → logprob: -11.407084465026855

Token 2197: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.10985765606164932
    2. '_mod' → logprob: -2.9848575592041016
    3. ' t' → logprob: -3.3598575592041016
    4. 'mod' → logprob: -4.109857559204102
    5. ' modulo' → logprob: -6.859857559204102
    6. ' _' → logprob: -7.484857559204102
    7. ' %' → logprob: -8.984857559204102
    8. '_t' → logprob: -9.109857559204102
    9. ' ' → logprob: -9.484857559204102
    10. '%' → logprob: -9.609857559204102

Token 2198: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.001726349350064993
    2. ' ' → logprob: -6.376726150512695
    3. '```' → logprob: -11.251726150512695
    4. '`' → logprob: -12.251726150512695
    5. ' ' → logprob: -12.751726150512695
    6. '``' → logprob: -13.876726150512695
    7. '36' → logprob: -14.126726150512695
    8. '
' → logprob: -15.376726150512695
    9. ' `' → logprob: -15.876726150512695
    10. '=' → logprob: -15.939226150512695

Token 2199: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '`' → logprob: -19.375
    4. '```' → logprob: -20.25
    5. '``' → logprob: -22.25
    6. '{' → logprob: -22.375
    7. '36' → logprob: -23.0
    8. ''' → logprob: -23.125
    9. ' ' → logprob: -23.125
    10. '(' → logprob: -23.5

Token 2200: ' et' (ID: 859)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.41556814312934875
    2. '==' → logprob: -1.4155681133270264
    3. '=' → logprob: -2.5405681133270264
    4. ' =' → logprob: -4.1655683517456055
    5. ')' → logprob: -6.6655683517456055
    6. '```' → logprob: -6.7905683517456055
    7. ')==' → logprob: -8.790568351745605
    8. ',' → logprob: -9.165568351745605
    9. '==
' → logprob: -10.040568351745605
    10. ' ' → logprob: -10.665568351745605

Token 2201: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.9764904975891113
    2. 'B' → logprob: -1.4764904975891113
    3. '360' → logprob: -1.8514904975891113
    4. '(B' → logprob: -2.1014904975891113
    5. ' (' → logprob: -2.4764904975891113
    6. '(' → logprob: -3.6014904975891113
    7. ' ' → logprob: -5.726490497589111
    8. '0' → logprob: -7.976490497589111
    9. ' ' → logprob: -8.851490020751953
    10. '#' → logprob: -9.351490020751953

Token 2202: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3136172890663147
    2. 't' → logprob: -1.31361722946167
    3. '_t' → logprob: -8.563617706298828
    4. ' ' → logprob: -10.563617706298828
    5. ' ' → logprob: -10.563617706298828
    6. '`t' → logprob: -10.688617706298828
    7. '*t' → logprob: -11.063617706298828
    8. '	t' → logprob: -11.188617706298828
    9. '*' → logprob: -11.313617706298828
    10. '_' → logprob: -11.688617706298828

Token 2203: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6931917071342468
    2. 'mod' → logprob: -0.6931917071342468
    3. ' modulo' → logprob: -10.568191528320312
    4. '_mod' → logprob: -11.443191528320312
    5. ' ' → logprob: -13.318191528320312
    6. '	mod' → logprob: -13.443191528320312
    7. '%' → logprob: -13.568191528320312
    8. '<|end|>' → logprob: -13.693191528320312
    9. ' ' → logprob: -14.318191528320312
    10. '```' → logprob: -14.818191528320312

Token 2204: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0005325406673364341
    2. ' ' → logprob: -8.625532150268555
    3. '`' → logprob: -9.000532150268555
    4. '```' → logprob: -9.125532150268555
    5. '``' → logprob: -10.625532150268555
    6. ''' → logprob: -11.000532150268555
    7. '36' → logprob: -11.375532150268555
    8. ' modulo' → logprob: -11.875532150268555
    9. ' ' → logprob: -11.875532150268555
    10. '_' → logprob: -12.125532150268555

Token 2205: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0003385614836588502
    2. ' ' → logprob: -8.000338554382324
    3. '36' → logprob: -13.500338554382324
    4. '=' → logprob: -14.875338554382324
    5. '(' → logprob: -15.000338554382324
    6. ' ' → logprob: -15.500338554382324
    7. ')' → logprob: -15.875338554382324
    8. '
' → logprob: -15.875338554382324
    9. ' (' → logprob: -16.12533950805664
    10. '```' → logprob: -16.12533950805664

Token 2206: ' sont' (ID: 5242)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.0523730516433716
    2. ')' → logprob: -1.9273730516433716
    3. ' are' → logprob: -2.052372932434082
    4. ' doivent' → logprob: -2.177372932434082
    5. '```' → logprob: -2.302372932434082
    6. ' sont' → logprob: -3.052372932434082
    7. ' must' → logprob: -3.427372932434082
    8. ' modulo' → logprob: -3.802372932434082
    9. 'mod' → logprob: -3.927372932434082
    10. ' continue' → logprob: -4.927372932434082

Token 2207: ' sym' (ID: 5357)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.24047955870628357
    2. ' ég' → logprob: -2.4904794692993164
    3. 'égal' → logprob: -2.9904794692993164
    4. 'eg' → logprob: -3.1154794692993164
    5. 'either' → logprob: -4.240479469299316
    6. 'so' → logprob: -4.365479469299316
    7. '0' → logprob: -5.740479469299316
    8. 'equal' → logprob: -6.490479469299316
    9. 'à' → logprob: -7.240479469299316
    10. 'ident' → logprob: -7.990479469299316

Token 2208: 'étr' (ID: 35025)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25676754117012024
    2. 'b' → logprob: -2.006767511367798
    3. '=' → logprob: -3.006767511367798
    4. 'é' → logprob: -3.881767511367798
    5. 'étr' → logprob: -4.256767749786377
    6. 'metry' → logprob: -7.006767749786377
    7. '=b' → logprob: -7.256767749786377
    8. 'p' → logprob: -7.381767749786377
    9. 'metrical' → logprob: -7.631767749786377
    10. '==' → logprob: -7.631767749786377

Token 2209: 'iques' (ID: 11654)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.10837844014167786
    2. 'e' → logprob: -2.6083784103393555
    3. 'rique' → logprob: -4.8583784103393555
    4. 'étr' → logprob: -4.9833784103393555
    5. 'ic' → logprob: -5.9833784103393555
    6. '```' → logprob: -6.2333784103393555
    7. 'y' → logprob: -6.6083784103393555
    8. 'tr' → logprob: -6.6083784103393555
    9. 'é' → logprob: -6.8583784103393555
    10. '#' → logprob: -6.8583784103393555

Token 2210: ' autour' (ID: 39420)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48404890298843384
    2. ')' → logprob: -2.734048843383789
    3. '(' → logprob: -3.109048843383789
    4. '.' → logprob: -3.109048843383789
    5. ' modulo' → logprob: -3.109048843383789
    6. '_' → logprob: -3.484048843383789
    7. ''' → logprob: -3.859048843383789
    8. ' (' → logprob: -4.234048843383789
    9. 'mod' → logprob: -4.234048843383789
    10. ' or' → logprob: -4.359048843383789

Token 2211: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4911831319332123
    2. ')' → logprob: -2.241183042526245
    3. ' du' → logprob: -2.866183042526245
    4. 'de' → logprob: -3.241183042526245
    5. '(' → logprob: -3.241183042526245
    6. '   ' → logprob: -3.366183042526245
    7. ' d' → logprob: -3.741183042526245
    8. '=' → logprob: -4.116183280944824
    9. ' of' → logprob: -4.241183280944824
    10. ''' → logprob: -4.241183280944824

Token 2212: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '360' → logprob: -15.000003814697266
    4. ''' → logprob: -16.875003814697266
    5. '0' → logprob: -17.250003814697266
    6. '```' → logprob: -17.500003814697266
    7. '`' → logprob: -18.375003814697266
    8. '"' → logprob: -18.500003814697266
    9. '90' → logprob: -19.125003814697266
    10. '18' → logprob: -19.375003814697266

Token 2213: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -1.9361264946837764e-07
    2. '360' → logprob: -16.625
    3. '0' → logprob: -17.875
    4. ' ' → logprob: -19.125
    5. '18' → logprob: -19.125
    6. '```' → logprob: -20.75
    7. '90' → logprob: -21.25
    8. '181' → logprob: -21.25
    9. '1' → logprob: -21.5
    10. '182' → logprob: -22.125

Token 2214: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9384628534317017
    2. ',' → logprob: -1.3134628534317017
    3. '#' → logprob: -1.5634628534317017
    4. '.' → logprob: -3.188462734222412
    5. ')' → logprob: -3.563462734222412
    6. ' ' → logprob: -5.063462734222412
    7. '\' → logprob: -5.188462734222412
    8. '\n' → logprob: -5.438462734222412
    9. ' \' → logprob: -5.563462734222412
    10. '```' → logprob: -5.688462734222412

Token 2215: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3858952522277832
    2. '   ' → logprob: -1.5108952522277832
    3. ',' → logprob: -1.8858952522277832
    4. '.' → logprob: -2.385895252227783
    5. '\n' → logprob: -2.385895252227783
    6. ')' → logprob: -3.260895252227783
    7. ':
' → logprob: -3.385895252227783
    8. '#' → logprob: -3.510895252227783
    9. ',
' → logprob: -3.635895252227783
    10. '\' → logprob: -4.510895252227783

Token 2216: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26234662532806396
    2. ',' → logprob: -2.5123467445373535
    3. '   ' → logprob: -2.8873467445373535
    4. '#' (adapté à ' #') → logprob: -3.7623467445373535
    5. '.' → logprob: -4.1373467445373535
    6. ')' → logprob: -4.1373467445373535
    7. ':
' → logprob: -4.3873467445373535
    8. '\' → logprob: -5.1373467445373535
    9. '):' → logprob: -5.7623467445373535
    10. '\n' → logprob: -5.7623467445373535

Token 2217: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.733883261680603
    2. '   ' → logprob: -1.358883261680603
    3. ':
' → logprob: -1.858883261680603
    4. ',' → logprob: -3.4838833808898926
    5. '\n' → logprob: -4.233883380889893
    6. '#' → logprob: -4.483883380889893
    7. ',
' → logprob: -5.108883380889893
    8. '\' → logprob: -5.483883380889893
    9. ')' → logprob: -5.608883380889893
    10. '):' → logprob: -5.733883380889893

Token 2218: ' ég' (ID: 33150)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009864458814263344
    2. '5' → logprob: -4.884864330291748
    3. 'min' → logprob: -7.134864330291748
    4. '(' → logprob: -7.634864330291748
    5. '
' → logprob: -7.884864330291748
    6. ' #' → logprob: -8.759864807128906
    7. ' (' → logprob: -9.384864807128906
    8. '0' → logprob: -9.634864807128906
    9. '(
' → logprob: -9.634864807128906
    10. '180' → logprob: -10.384864807128906

Token 2219: 'aux' (ID: 5454)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.3864554762840271
    2. 'ale' → logprob: -1.3864555358886719
    3. 'ales' → logprob: -3.761455535888672
    4. 'a' → logprob: -3.886455535888672
    5. 'aux' → logprob: -3.886455535888672
    6. '=' → logprob: -5.636455535888672
    7. '```' → logprob: -7.386455535888672
    8. '
' → logprob: -8.011455535888672
    9. 'alet' → logprob: -8.636455535888672
    10. 'als' → logprob: -8.636455535888672

Token 2220: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13260143995285034
    2. '   ' → logprob: -3.007601499557495
    3. ':
' → logprob: -3.632601499557495
    4. ',' → logprob: -3.632601499557495
    5. '#' → logprob: -5.007601261138916
    6. ')' → logprob: -5.507601261138916
    7. 'def' → logprob: -5.882601261138916
    8. '.' → logprob: -6.132601261138916
    9. '):' → logprob: -6.632601261138916
    10. '\' → logprob: -7.257601261138916

Token 2221: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3389874994754791
    2. ' or' → logprob: -2.2139875888824463
    3. '   ' → logprob: -2.5889875888824463
    4. '\n' → logprob: -3.0889875888824463
    5. '\' → logprob: -4.588987350463867
    6. ':' → logprob: -4.963987350463867
    7. 'or' → logprob: -5.088987350463867
    8. ':
' → logprob: -5.338987350463867
    9. '0' → logprob: -5.338987350463867
    10. ',' → logprob: -5.713987350463867

Token 2222: ' que' (ID: 661)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -1.1866917610168457
    2. 't' → logprob: -1.4366917610168457
    3. 'x' → logprob: -2.1866917610168457
    4. '0' → logprob: -2.8116917610168457
    5. '#' → logprob: -3.0616917610168457
    6. 'k' → logprob: -3.1866917610168457
    7. 'tout' → logprob: -3.3116917610168457
    8. 'some' → logprob: -3.5616917610168457
    9. 'certain' → logprob: -3.9366917610168457
    10. 'n' → logprob: -4.311691761016846

Token 2223: ' leurs' (ID: 16348)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.5122524499893188
    2. '5' → logprob: -1.7622524499893188
    3. 'minimal' → logprob: -2.3872523307800293
    4. ' ' → logprob: -3.7622523307800293
    5. '_' → logprob: -4.137252330780029
    6. 'x' → logprob: -4.262252330780029
    7. ' i' → logprob: -4.512252330780029
    8. ' (' → logprob: -4.887252330780029
    9. ' x' → logprob: -5.137252330780029
    10. '(' → logprob: -5.137252330780029

Token 2224: ' min' (ID: 1349)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.15313389897346497
    2. 'values' → logprob: -3.4031338691711426
    3. 'dif' → logprob: -3.9031338691711426
    4. '
' → logprob: -4.153133869171143
    5. ' mod' → logprob: -4.278133869171143
    6. '_' → logprob: -5.028133869171143
    7. 'difference' → logprob: -5.028133869171143
    8. '=' → logprob: -5.153133869171143
    9. 'diff' → logprob: -5.903133869171143
    10. '_mod' → logprob: -5.903133869171143

Token 2225: ' soient' (ID: 59497)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7020513415336609
    2. '(' → logprob: -2.0770514011383057
    3. 'im' → logprob: -2.4520514011383057
    4. 'imal' → logprob: -2.4520514011383057
    5. 'imum' → logprob: -2.5770514011383057
    6. ')' → logprob: -2.9520514011383057
    7. '\' → logprob: -4.202051162719727
    8. ' _' → logprob: -4.452051162719727
    9. '(_' → logprob: -4.702051162719727
    10. '=' → logprob: -5.077051162719727

Token 2226: ' ég' (ID: 33150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36394885182380676
    2. ' ég' → logprob: -1.7389488220214844
    3. 'égal' → logprob: -2.8639488220214844
    4. 'equal' → logprob: -3.2389488220214844
    5. '==' → logprob: -4.363948822021484
    6. 'ég' → logprob: -4.863948822021484
    7. ' equal' → logprob: -5.613948822021484
    8. 'égalité' → logprob: -6.363948822021484
    9. ' égal' → logprob: -6.488948822021484
    10. ' =' → logprob: -6.613948822021484

Token 2227: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.10049466788768768
    2. 'al' → logprob: -2.600494623184204
    3. 'ales' → logprob: -4.475494861602783
    4. '=' → logprob: -5.225494861602783
    5. 'als' → logprob: -6.225494861602783
    6. '```' → logprob: -6.350494861602783
    7. 'a' → logprob: -8.725494384765625
    8. 'u' → logprob: -8.725494384765625
    9. 'ual' → logprob: -8.850494384765625
    10. 'ale' → logprob: -9.100494384765625

Token 2228: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4512341320514679
    2. '   ' → logprob: -1.4512341022491455
    3. ':
' → logprob: -3.0762341022491455
    4. ',' → logprob: -4.076234340667725
    5. '#' → logprob: -4.326234340667725
    6. ')' → logprob: -4.451234340667725
    7. '\n' → logprob: -4.451234340667725
    8. '):' → logprob: -5.201234340667725
    9. 'def' → logprob: -5.576234340667725
    10. '\' → logprob: -5.826234340667725

Token 2229: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7554111480712891
    2. '\n' → logprob: -1.380411148071289
    3. '   ' → logprob: -2.255411148071289
    4. ':
' → logprob: -2.630411148071289
    5. '\' → logprob: -2.880411148071289
    6. ',' → logprob: -4.755411148071289
    7. ')' → logprob: -5.255411148071289
    8. '#' → logprob: -5.380411148071289
    9. 'def' → logprob: -5.755411148071289
    10. '
' → logprob: -5.880411148071289

Token 2230: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010498370975255966
    2. '
' → logprob: -5.635498523712158
    3. 'def' → logprob: -6.010498523712158
    4. '\n' → logprob: -6.260498523712158
    5. '\' → logprob: -7.510498523712158
    6. '#' (adapté à ' #') → logprob: -7.635498523712158
    7. '    
' → logprob: -7.635498523712158
    8. ':' → logprob: -8.760498046875
    9. ':
' → logprob: -9.385498046875
    10. ',' → logprob: -9.385498046875

Token 2231: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11545799672603607
    2. ':' → logprob: -3.1154580116271973
    3. '\n' → logprob: -3.7404580116271973
    4. '
' → logprob: -4.740458011627197
    5. 'def' → logprob: -4.865458011627197
    6. ':
' → logprob: -5.615458011627197
    7. '\' → logprob: -5.740458011627197
    8. '#' → logprob: -5.990458011627197
    9. '\t' → logprob: -6.365458011627197
    10. ')' → logprob: -6.365458011627197

Token 2232: ' pos' (ID: 1253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7858176827430725
    2. ' =' → logprob: -1.0358176231384277
    3. '#' → logprob: -2.6608176231384277
    4. '_' → logprob: -3.2858176231384277
    5. ' #' → logprob: -4.035817623138428
    6. ' continue' → logprob: -4.785817623138428
    7. '
' → logprob: -4.910817623138428
    8. '=
' → logprob: -5.285817623138428
    9. 'def' → logprob: -5.410817623138428
    10. 'continue' → logprob: -5.660817623138428

Token 2233: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006261157803237438
    2. '=' → logprob: -5.131261348724365
    3. 't' → logprob: -8.256260871887207
    4. 'é' → logprob: -10.006260871887207
    5. '=e' → logprob: -11.381260871887207
    6. '=
' → logprob: -12.381260871887207
    7. 's' → logprob: -13.131260871887207
    8. '#' → logprob: -13.131260871887207
    9. 'è' → logprob: -14.006260871887207
    10. '```' → logprob: -14.006260871887207

Token 2234: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.3392271995544434
    2. ' A' → logprob: -1.4642271995544434
    3. 'x' → logprob: -2.3392271995544434
    4. '_' → logprob: -2.3392271995544434
    5. ' x' → logprob: -3.2142271995544434
    6. '#' → logprob: -3.5892271995544434
    7. ' B' → logprob: -3.5892271995544434
    8. ' ' → logprob: -3.8392271995544434
    9. 't' → logprob: -3.8392271995544434
    10. ' t' → logprob: -3.9642271995544434

Token 2235: '5' (ID: 20)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6692167520523071
    2. '180' → logprob: -1.6692167520523071
    3. 'x' → logprob: -1.7942167520523071
    4. '#' → logprob: -1.9192167520523071
    5. 'B' → logprob: -2.4192166328430176
    6. 'for' → logprob: -3.2942166328430176
    7. 'm' → logprob: -3.5442166328430176
    8. 'n' → logprob: -3.5442166328430176
    9. 'A' → logprob: -3.6692166328430176
    10. '(
' → logprob: -3.9192166328430176

Token 2236: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.746380237629637e-05
    2. '9' → logprob: -10.375097274780273
    3. 'point' → logprob: -10.375097274780273
    4. '.
' → logprob: -10.625097274780273
    5. ',' → logprob: -12.750097274780273
    6. ' .' → logprob: -13.625097274780273
    7. '   ' → logprob: -13.750097274780273
    8. '
' → logprob: -14.125097274780273
    9. '_point' → logprob: -14.125097274780273
    10. '4' → logprob: -14.375097274780273

Token 2237: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001709209755063057
    2. '.' → logprob: -6.376708984375
    3. ')' → logprob: -12.751708984375
    4. ',' → logprob: -13.251708984375
    5. '900' → logprob: -14.876708984375
    6. 't' → logprob: -15.126708984375
    7. '90' → logprob: -15.501708984375
    8. '(' → logprob: -16.001708984375
    9. '٩' → logprob: -16.001708984375
    10. '...' → logprob: -16.251708984375

Token 2238: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.12620124220848083
    2. 't' → logprob: -2.8762011528015137
    3. ' *' → logprob: -2.8762011528015137
    4. '*' → logprob: -5.751201152801514
    5. ' ' → logprob: -6.876201152801514
    6. '*t' → logprob: -6.876201152801514
    7. ' ' → logprob: -8.126201629638672
    8. ',' → logprob: -8.876201629638672
    9. '	t' → logprob: -10.126201629638672
    10. ' _' → logprob: -10.626201629638672

Token 2239: ' mod' (ID: 1812)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.1750959157943726
    2. '_' → logprob: -2.175096035003662
    3. ' =' → logprob: -2.300096035003662
    4. ' ' → logprob: -2.300096035003662
    5. ' ,' → logprob: -2.425096035003662
    6. ',' → logprob: -2.550096035003662
    7. ' t' → logprob: -2.550096035003662
    8. '_mod' → logprob: -2.675096035003662
    9. ' mod' → logprob: -4.175096035003662
    10. '=' → logprob: -4.300096035003662

Token 2240: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.017703240737318993
    2. '=' → logprob: -4.517703056335449
    3. ' ' → logprob: -5.392703056335449
    4. ' =' → logprob: -6.767703056335449
    5. 'space' → logprob: -8.14270305633545
    6. '`' → logprob: -8.51770305633545
    7. '```' → logprob: -8.64270305633545
    8. ''' → logprob: -9.14270305633545
    9. ' space' → logprob: -10.39270305633545
    10. '36' → logprob: -10.64270305633545

Token 2241: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -7.886803359724581e-05
    2. ' ' → logprob: -10.500079154968262
    3. '"' → logprob: -10.625079154968262
    4. ''' → logprob: -11.250079154968262
    5. '`' → logprob: -11.375079154968262
    6. '```' → logprob: -14.125079154968262
    7. ' ' → logprob: -14.750079154968262
    8. '180' → logprob: -15.000079154968262
    9. '36' → logprob: -15.125079154968262
    10. '``' → logprob: -16.000078201293945

Token 2242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6112444400787354
    2. ' =' → logprob: -0.8612444400787354
    3. ',' → logprob: -3.9862444400787354
    4. ')' → logprob: -5.111244201660156
    5. ' ,' → logprob: -6.486244201660156
    6. '```' → logprob: -6.486244201660156
    7. ' ' → logprob: -6.611244201660156
    8. '%' → logprob: -7.361244201660156
    9. ' %' → logprob: -7.361244201660156
    10. 'mod' → logprob: -7.611244201660156

Token 2243: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2599585950374603
    2. '180' → logprob: -2.259958505630493
    3. 'Bt' → logprob: -3.134958505630493
    4. '(' → logprob: -3.884958505630493
    5. '(B' → logprob: -4.009958744049072
    6. 'B' → logprob: -4.134958744049072
    7. '360' → logprob: -4.634958744049072
    8. 'X' → logprob: -5.134958744049072
    9. 'BT' → logprob: -5.509958744049072
    10. ' Bt' → logprob: -6.759958744049072

Token 2244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4426465928554535
    2. ' =' → logprob: -1.6926466226577759
    3. '=' → logprob: -2.9426465034484863
    4. '#' → logprob: -3.3176465034484863
    5. '<|end|>' → logprob: -3.9426465034484863
    6. '
' → logprob: -4.317646503448486
    7. ' ,' → logprob: -4.442646503448486
    8. ')' → logprob: -4.442646503448486
    9. '<|end|>' → logprob: -5.067646503448486
    10. ',
' → logprob: -5.567646503448486

Token 2245: ' B' (ID: 418)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06678102165460587
    2. ' #' → logprob: -3.1917810440063477
    3. ' B' → logprob: -4.816781044006348
    4. ' a' → logprob: -5.566781044006348
    5. 'a' → logprob: -5.691781044006348
    6. '180' → logprob: -5.941781044006348
    7. '   ' → logprob: -6.191781044006348
    8. ' ' → logprob: -7.191781044006348
    9. 'B' → logprob: -7.316781044006348
    10. '360' → logprob: -7.316781044006348

Token 2246: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13217215240001678
    2. ' t' → logprob: -2.132172107696533
    3. '_t' → logprob: -5.257172107696533
    4. '_' → logprob: -12.382172584533691
    5. '=' → logprob: -12.632172584533691
    6. ' =' → logprob: -12.632172584533691
    7. '	t' → logprob: -13.007172584533691
    8. 'a' → logprob: -13.882172584533691
    9. ' ' → logprob: -14.132172584533691
    10. '`t' → logprob: -14.132172584533691

Token 2247: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.31433653831481934
    2. 'mod' → logprob: -1.3143365383148193
    3. '_mod' → logprob: -6.939336776733398
    4. ' ' → logprob: -10.064336776733398
    5. ' ' → logprob: -11.439336776733398
    6. '%' → logprob: -11.564336776733398
    7. '_' → logprob: -11.689336776733398
    8. ' modulo' → logprob: -11.939336776733398
    9. '<|end|>' → logprob: -12.189336776733398
    10. '	mod' → logprob: -12.439336776733398

Token 2248: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.001521526137366891
    2. ' ' → logprob: -6.501521587371826
    3. ' ' → logprob: -11.876521110534668
    4. 'a' → logprob: -11.876521110534668
    5. '=' → logprob: -12.626521110534668
    6. '`' → logprob: -14.876521110534668
    7. '```' → logprob: -14.876521110534668
    8. ' a' → logprob: -15.501521110534668
    9. '​' → logprob: -15.626521110534668
    10. ' =' → logprob: -16.001522064208984

Token 2249: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -7.803360495017841e-05
    2. ' ' → logprob: -9.750078201293945
    3. '180' → logprob: -11.000078201293945
    4. ')' → logprob: -14.250078201293945
    5. '```' → logprob: -14.500078201293945
    6. ' ' → logprob: -14.625078201293945
    7. '`' → logprob: -14.875078201293945
    8. '​' → logprob: -15.625078201293945
    9. '=' → logprob: -15.750078201293945
    10. ',' → logprob: -16.000078201293945

Token 2250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11510701477527618
    2. '=' → logprob: -2.2401070594787598
    3. ',' → logprob: -6.74010705947876
    4. ')' → logprob: -7.36510705947876
    5. '#' → logprob: -8.615106582641602
    6. '```' → logprob: -10.240106582641602
    7. ' ' → logprob: -10.365106582641602
    8. '
' → logprob: -10.490106582641602
    9. '<|end|>' → logprob: -10.990106582641602
    10. 'a' → logprob: -10.990106582641602

Token 2251: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008153052069246769
    2. '360' → logprob: -5.758152961730957
    3. '180' → logprob: -5.758152961730957
    4. 'b' → logprob: -7.008152961730957
    5. '(' → logprob: -7.383152961730957
    6. 'x' → logprob: -8.758152961730957
    7. ' a' → logprob: -9.633152961730957
    8. '(a' → logprob: -11.320652961730957
    9. 'w' → logprob: -12.383152961730957
    10. '...' → logprob: -12.695652961730957

Token 2252: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5218280553817749
    2. '#' → logprob: -1.646828055381775
    3. '\' → logprob: -3.0218281745910645
    4. ')' → logprob: -3.7718281745910645
    5. ',' → logprob: -4.1468281745910645
    6. '\n' → logprob: -4.1468281745910645
    7. ' =' → logprob: -4.2718281745910645
    8. 'a' → logprob: -4.5218281745910645
    9. '```' → logprob: -4.6468281745910645
    10. '...' → logprob: -4.6468281745910645

Token 2253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5621589422225952
    2. '#' → logprob: -1.4371589422225952
    3. '\' → logprob: -3.1871590614318848
    4. ',' → logprob: -3.4371590614318848
    5. '\n' → logprob: -3.6871590614318848
    6. ':' → logprob: -4.187159061431885
    7. ',
' → logprob: -4.312159061431885
    8. ':
' → logprob: -4.687159061431885
    9. '=' → logprob: -4.812159061431885
    10. '...' → logprob: -4.937159061431885

Token 2254: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1917804330587387
    2. '#' (adapté à ' #') → logprob: -2.6917803287506104
    3. ':' → logprob: -3.4417803287506104
    4. '\n' → logprob: -3.4417803287506104
    5. '\' → logprob: -4.4417805671691895
    6. '[' → logprob: -5.6917805671691895
    7. ',' → logprob: -5.6917805671691895
    8. ':
' → logprob: -5.8167805671691895
    9. ' =' → logprob: -6.1917805671691895
    10. ')' → logprob: -6.5667805671691895

Token 2255: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7964724898338318
    2. '   ' → logprob: -1.7964725494384766
    3. '#' → logprob: -2.2964725494384766
    4. ')' → logprob: -2.6714725494384766
    5. '\n' → logprob: -3.1714725494384766
    6. '\' → logprob: -3.4214725494384766
    7. ',' → logprob: -3.7964725494384766
    8. '(' → logprob: -4.046472549438477
    9. ':
' → logprob: -4.046472549438477
    10. '=' → logprob: -4.546472549438477

Token 2256: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.077263742685318
    2. 'abs' → logprob: -3.577263832092285
    3. '#' → logprob: -3.702263832092285
    4. ' a' → logprob: -5.327263832092285
    5. '(a' → logprob: -5.452263832092285
    6. 'on' → logprob: -5.702263832092285
    7. '(' → logprob: -5.952263832092285
    8. ' (' → logprob: -6.702263832092285
    9. 'for' → logprob: -6.952263832092285
    10. '
' → logprob: -7.202263832092285

Token 2257: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8138471245765686
    2. 'pos' → logprob: -1.1888470649719238
    3. ' =' → logprob: -1.6888470649719238
    4. '#' → logprob: -3.688847064971924
    5. '=
' → logprob: -4.438847064971924
    6. '_pos' → logprob: -5.188847064971924
    7. ' pos' → logprob: -5.313847064971924
    8. '
' → logprob: -5.313847064971924
    9. '==' → logprob: -6.188847064971924
    10. '_' → logprob: -6.563847064971924

Token 2258: ' min' (ID: 1349)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.883851945400238
    2. ' (' → logprob: -1.3838520050048828
    3. '(a' → logprob: -2.258852005004883
    4. ' a' → logprob: -2.633852005004883
    5. 'abs' → logprob: -3.008852005004883
    6. ' abs' → logprob: -3.008852005004883
    7. '(' → logprob: -3.758852005004883
    8. '(
' → logprob: -4.133852005004883
    9. '(abs' → logprob: -4.133852005004883
    10. ' (
' → logprob: -6.758852005004883

Token 2259: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0018155979923903942
    2. '(' → logprob: -6.3768157958984375
    3. '(
' → logprob: -9.626815795898438
    4. 'a' → logprob: -10.251815795898438
    5. '(b' → logprob: -12.876815795898438
    6. ' (' → logprob: -13.001815795898438
    7. '((' → logprob: -13.626815795898438
    8. '(_' → logprob: -13.751815795898438
    9. '_a' → logprob: -14.001815795898438
    10. '(min' → logprob: -14.501815795898438

Token 2260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07408802211284637
    2. ' ,' → logprob: -2.6990880966186523
    3. '_,' → logprob: -6.824088096618652
    4. ' mod' → logprob: -7.324088096618652
    5. '_mod' → logprob: -7.699088096618652
    6. 'mod' → logprob: -7.699088096618652
    7. ')' → logprob: -7.824088096618652
    8. 'b' → logprob: -8.574088096618652
    9. ' +' → logprob: -8.949088096618652
    10. '=' → logprob: -9.324088096618652

Token 2261: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0005618501454591751
    2. ' ' → logprob: -7.625561714172363
    3. 'b' → logprob: -10.500561714172363
    4. '   ' → logprob: -10.875561714172363
    5. '(' → logprob: -11.625561714172363
    6. '359' → logprob: -12.000561714172363
    7. ' ' → logprob: -13.000561714172363
    8. 'a' → logprob: -13.375561714172363
    9. '361' → logprob: -13.750561714172363
    10. ')' → logprob: -14.125561714172363

Token 2262: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.10144715011119843
    2. 'b' → logprob: -2.351447105407715
    3. '180' → logprob: -7.351447105407715
    4. 'a' → logprob: -7.976447105407715
    5. ' ' → logprob: -8.851447105407715
    6. ' b' → logprob: -9.726447105407715
    7. ')' → logprob: -10.601447105407715
    8. '```' → logprob: -11.976447105407715
    9. '(' → logprob: -12.601447105407715
    10. 'abs' → logprob: -12.726447105407715

Token 2263: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006732660811394453
    2. '-' → logprob: -5.00673246383667
    3. ')' → logprob: -11.256732940673828
    4. ' ' → logprob: -13.506732940673828
    5. 'a' → logprob: -13.631732940673828
    6. '-a' → logprob: -14.006732940673828
    7. ' ' → logprob: -14.631732940673828
    8. '-b' → logprob: -16.256732940673828
    9. ' a' → logprob: -16.256732940673828
    10. ',' → logprob: -16.381732940673828

Token 2264: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012418980477377772
    2. ' a' → logprob: -6.876241683959961
    3. 'b' → logprob: -8.501241683959961
    4. ')' → logprob: -12.751241683959961
    5. ' b' → logprob: -13.501241683959961
    6. '(a' → logprob: -13.751241683959961
    7. ')a' → logprob: -15.501241683959961
    8. '(' → logprob: -16.12624168395996
    9. '	a' → logprob: -16.25124168395996
    10. '   ' → logprob: -16.87624168395996

Token 2265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020854694594163448
    2. ' )' → logprob: -9.250208854675293
    3. ')=' → logprob: -10.375208854675293
    4. '=' → logprob: -10.625208854675293
    5. ')
' → logprob: -11.000208854675293
    6. '')' → logprob: -11.625208854675293
    7. '),' → logprob: -12.500208854675293
    8. ')==' → logprob: -12.500208854675293
    9. '#' → logprob: -12.625208854675293
    10. '   ' → logprob: -12.750208854675293

Token 2266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27264297008514404
    2. '=' → logprob: -2.0226430892944336
    3. ')' → logprob: -2.8976430892944336
    4. ' ==' → logprob: -3.1476430892944336
    5. ',' → logprob: -5.522643089294434
    6. '==' → logprob: -6.397643089294434
    7. '#' → logprob: -7.147643089294434
    8. '   ' → logprob: -7.272643089294434
    9. ' )' → logprob: -8.397643089294434
    10. '```' → logprob: -8.772643089294434

Token 2267: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006560483016073704
    2. ' min' → logprob: -5.631560325622559
    3. 'b' → logprob: -5.881560325622559
    4. 'a' → logprob: -9.256560325622559
    5. 'max' → logprob: -10.006560325622559
    6. '	min' → logprob: -11.756560325622559
    7. 'minimal' → logprob: -12.381560325622559
    8. ' b' → logprob: -12.881560325622559
    9. '=min' → logprob: -13.131560325622559
    10. '(min' → logprob: -13.381560325622559

Token 2268: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.000351670227246359
    2. 'b' → logprob: -8.125351905822754
    3. '(' → logprob: -9.875351905822754
    4. ' (' → logprob: -12.625351905822754
    5. '(a' → logprob: -14.750351905822754
    6. '(
' → logprob: -15.000351905822754
    7. ' b' → logprob: -17.750350952148438
    8. 'a' → logprob: -18.000350952148438
    9. '\(' → logprob: -18.000350952148438
    10. '(abs' → logprob: -18.375350952148438

Token 2269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29463160037994385
    2. ' +' → logprob: -2.1696314811706543
    3. ' ,' → logprob: -2.6696314811706543
    4. ')' → logprob: -2.7946314811706543
    5. '+' → logprob: -5.919631481170654
    6. ' %' → logprob: -5.919631481170654
    7. ' mod' → logprob: -6.169631481170654
    8. ' ' → logprob: -7.294631481170654
    9. '),' → logprob: -7.669631481170654
    10. '   ' → logprob: -7.669631481170654

Token 2270: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5091813206672668
    2. ' a' → logprob: -1.759181261062622
    3. 'b' → logprob: -2.009181261062622
    4. ' b' → logprob: -2.384181261062622
    5. '360' → logprob: -7.509181499481201
    6. ' ' → logprob: -11.759181022644043
    7. ' ' → logprob: -12.009181022644043
    8. '	a' → logprob: -14.009181022644043
    9. '(a' → logprob: -14.384181022644043
    10. '	b' → logprob: -15.759181022644043

Token 2271: '360' (ID: 9870)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017758574103936553
    2. ' b' → logprob: -6.501775741577148
    3. 'a' → logprob: -8.251775741577148
    4. '360' → logprob: -12.001775741577148
    5. ' a' → logprob: -12.751775741577148
    6. ' ' → logprob: -13.376775741577148
    7. ' ' → logprob: -14.501775741577148
    8. ')' → logprob: -15.126775741577148
    9. '```' → logprob: -15.251775741577148
    10. '​' → logprob: -15.626775741577148

Token 2272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08896346390247345
    2. '-' → logprob: -2.463963508605957
    3. ' ' → logprob: -11.963963508605957
    4. ')' → logprob: -12.088963508605957
    5. ' ' → logprob: -12.338963508605957
    6. 'b' → logprob: -12.838963508605957
    7. ',' → logprob: -13.588963508605957
    8. ' b' → logprob: -14.213963508605957
    9. '-b' → logprob: -14.213963508605957
    10. '_' → logprob: -14.338963508605957

Token 2273: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003805064770858735
    2. ' b' → logprob: -7.875380516052246
    3. 'a' → logprob: -14.750380516052246
    4. ')b' → logprob: -18.87537956237793
    5. '	b' → logprob: -19.50037956237793
    6. ' б' → logprob: -19.62537956237793
    7. ' ' → logprob: -19.75037956237793
    8. '<|end|>' → logprob: -20.12537956237793
    9. '_b' → logprob: -20.25037956237793
    10. '<|end|>' → logprob: -20.25037956237793

Token 2274: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001444045570679009
    2. ')
' → logprob: -7.251443862915039
    3. ',' → logprob: -8.751443862915039
    4. '#' → logprob: -9.001443862915039
    5. '):' → logprob: -9.126443862915039
    6. '   ' → logprob: -9.126443862915039
    7. ':' → logprob: -10.376443862915039
    8. '')' → logprob: -10.626443862915039
    9. 'a' → logprob: -11.126443862915039
    10. '0' → logprob: -11.251443862915039

Token 2275: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0076428651809692
    2. '   ' → logprob: -1.5076428651809692
    3. '\' → logprob: -1.8826428651809692
    4. '\n' → logprob: -2.6326427459716797
    5. '#' → logprob: -3.0076427459716797
    6. ',' → logprob: -3.1326427459716797
    7. ':
' → logprob: -3.7576427459716797
    8. ')' → logprob: -3.7576427459716797
    9. 'def' → logprob: -4.75764274597168
    10. '[' → logprob: -5.00764274597168

Token 2276: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035467423498630524
    2. '\' → logprob: -5.160467624664307
    3. 'def' → logprob: -5.285467624664307
    4. ')' → logprob: -5.410467624664307
    5. ':' → logprob: -5.410467624664307
    6. '\n' → logprob: -5.410467624664307
    7. '#' (adapté à ' #') → logprob: -5.535467624664307
    8. '
' → logprob: -6.660467624664307
    9. '```' → logprob: -7.035467624664307
    10. ',' → logprob: -7.035467624664307

Token 2277: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0768299102783203
    2. '\n' → logprob: -1.7018299102783203
    3. ':' → logprob: -1.9518299102783203
    4. '#' → logprob: -2.0768299102783203
    5. ')' → logprob: -2.9518299102783203
    6. '
' → logprob: -2.9518299102783203
    7. '\' → logprob: -3.3268299102783203
    8. ',' → logprob: -4.45182991027832
    9. ' 
' → logprob: -4.70182991027832
    10. '):' → logprob: -4.82682991027832

Token 2278: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.363216519355774
    2. 'continue' → logprob: -1.613216519355774
    3. '_' → logprob: -1.863216519355774
    4. '#' → logprob: -2.4882164001464844
    5. ' =' → logprob: -2.7382164001464844
    6. 'mod' → logprob: -3.2382164001464844
    7. '
' → logprob: -3.8632164001464844
    8. '_num' → logprob: -4.113216400146484
    9. ' continue' → logprob: -4.363216400146484
    10. 'contin' → logprob: -4.488216400146484

Token 2279: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.038178395479917526
    2. ' =' → logprob: -4.663178443908691
    3. '#
' → logprob: -5.288178443908691
    4. ' #' → logprob: -5.538178443908691
    5. 'import' → logprob: -5.538178443908691
    6. '(
' → logprob: -6.038178443908691
    7. '[
' → logprob: -6.163178443908691
    8. ' (' → logprob: -6.288178443908691
    9. 'for' → logprob: -6.788178443908691
    10. '   ' → logprob: -6.788178443908691

Token 2280: '3' (ID: 18)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.3223350048065186
    2. 'abs' → logprob: -1.5723350048065186
    3. 'a' → logprob: -1.6973350048065186
    4. '(' → logprob: -2.1973350048065186
    5. '(
' → logprob: -2.3223350048065186
    6. '((' → logprob: -2.9473350048065186
    7. '#' → logprob: -3.5723350048065186
    8. '(abs' → logprob: -3.6973350048065186
    9. '[
' → logprob: -4.447335243225098
    10. '0' → logprob: -5.447335243225098

Token 2281: ' possibilité' (ID: 58463)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00012856863031629473
    2. '#' → logprob: -10.375128746032715
    3. ')' → logprob: -10.625128746032715
    4. '
' → logprob: -11.000128746032715
    5. '6' → logprob: -11.250128746032715
    6. ')
' → logprob: -11.875128746032715
    7. '   ' → logprob: -12.000128746032715
    8. '00' → logprob: -12.125128746032715
    9. '20' → logprob: -12.625128746032715
    10. '*' → logprob: -13.500128746032715

Token 2282: ' principales' (ID: 37058)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5267632007598877
    2. ':' → logprob: -1.2767632007598877
    3. '=' → logprob: -2.7767632007598877
    4. '#' → logprob: -4.151762962341309
    5. ''' → logprob: -4.401762962341309
    6. '1' → logprob: -5.276762962341309
    7. '   ' → logprob: -5.401762962341309
    8. ' ' → logprob: -5.526762962341309
    9. ' :' → logprob: -5.651762962341309
    10. '```' → logprob: -5.651762962341309

Token 2283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08288615196943283
    2. '#' → logprob: -3.332886219024658
    3. '[' → logprob: -4.082886219024658
    4. ' :' → logprob: -4.832886219024658
    5. ':
' → logprob: -5.957886219024658
    6. '   ' → logprob: -6.082886219024658
    7. ',' → logprob: -6.082886219024658
    8. ' ' → logprob: -6.332886219024658
    9. '.' → logprob: -6.582886219024658
    10. ''' → logprob: -6.582886219024658

Token 2284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18118126690387726
    2. '#' → logprob: -2.1811811923980713
    3. ' (' → logprob: -5.05618143081665
    4. '(' → logprob: -5.18118143081665
    5. ''' → logprob: -5.30618143081665
    6. '\' → logprob: -5.30618143081665
    7. '\t' → logprob: -5.80618143081665
    8. '```' → logprob: -5.80618143081665
    9. 'for' → logprob: -6.05618143081665
    10. ' \' → logprob: -6.05618143081665

Token 2285: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.014003651216626167
    2. '   ' → logprob: -4.389003753662109
    3. '1' → logprob: -7.264003753662109
    4. '#
' → logprob: -8.51400375366211
    5. 'for' → logprob: -9.26400375366211
    6. '```' → logprob: -9.76400375366211
    7. '(' → logprob: -9.88900375366211
    8. 'if' → logprob: -10.13900375366211
    9. ''''
' → logprob: -10.38900375366211
    10. '[
' → logprob: -10.51400375366211

Token 2286: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0004659425176214427
    2. '   ' → logprob: -8.500466346740723
    3. '#
' → logprob: -8.875466346740723
    4. 'for' → logprob: -10.125466346740723
    5. '1' → logprob: -10.375466346740723
    6. ''''
' → logprob: -11.250466346740723
    7. '#a' → logprob: -11.500466346740723
    8. '"""
' → logprob: -11.875466346740723
    9. '[
' → logprob: -12.500466346740723
    10. '```' → logprob: -12.875466346740723

Token 2287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3307046890258789
    2. ' =' → logprob: -1.330704689025879
    3. '==' → logprob: -5.080704689025879
    4. ' ==' → logprob: -5.330704689025879
    5. '#' → logprob: -5.455704689025879
    6. ',' → logprob: -7.580704689025879
    7. '=
' → logprob: -7.580704689025879
    8. '=a' → logprob: -7.705704689025879
    9. ')' → logprob: -9.330704689025879
    10. '1' → logprob: -9.580704689025879

Token 2288: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00019531534053385258
    2. ' b' → logprob: -9.125195503234863
    3. 'a' → logprob: -10.000195503234863
    4. '0' → logprob: -10.875195503234863
    5. '5' → logprob: -11.000195503234863
    6. '(' → logprob: -13.125195503234863
    7. '360' → logprob: -13.250195503234863
    8. '180' → logprob: -14.375195503234863
    9. '=b' → logprob: -15.625195503234863
    10. '   ' → logprob: -15.875195503234863

Token 2289: ' ,
' (ID: 24444)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8642178773880005
    2. '   ' → logprob: -1.4892178773880005
    3. ' or' → logprob: -1.9892178773880005
    4. '
' → logprob: -2.489217758178711
    5. ')' → logprob: -3.489217758178711
    6. '=' → logprob: -3.989217758178711
    7. '<|end|>' → logprob: -4.114217758178711
    8. '#' → logprob: -4.489217758178711
    9. ':
' → logprob: -4.614217758178711
    10. ',' → logprob: -4.614217758178711

Token 2290: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -6.277553620748222e-05
    2. '   ' → logprob: -9.750062942504883
    3. ' #' → logprob: -13.125062942504883
    4. '#a' → logprob: -13.875062942504883
    5. 'a' → logprob: -14.500062942504883
    6. '       ' → logprob: -15.250062942504883
    7. ''#' → logprob: -15.500062942504883
    8. 'or' → logprob: -16.250062942504883
    9. '           ' → logprob: -16.750062942504883
    10. '\' → logprob: -16.750062942504883

Token 2291: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -6.511406809295295e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' #' → logprob: -15.750006675720215
    4. 'or' → logprob: -16.0000057220459
    5. '#a' → logprob: -17.2500057220459
    6. '#
' → logprob: -18.6250057220459
    7. '       ' → logprob: -18.8750057220459
    8. 'a' → logprob: -19.5000057220459
    9. '
' → logprob: -19.7500057220459
    10. '\' → logprob: -19.7500057220459

Token 2292: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00553918955847621
    2. 'a' → logprob: -5.630539417266846
    3. '#a' → logprob: -6.255539417266846
    4. ' #' → logprob: -12.005538940429688
    5. '   ' → logprob: -12.130538940429688
    6. '360' → logprob: -14.005538940429688
    7. ' a' → logprob: -14.130538940429688
    8. '#
' → logprob: -14.505538940429688
    9. '##' → logprob: -14.505538940429688
    10. '```' → logprob: -14.505538940429688

Token 2293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252424418926239
    2. '=' → logprob: -1.5024244785308838
    3. ' ==' → logprob: -7.752424240112305
    4. ' ' → logprob: -10.877424240112305
    5. '==' → logprob: -11.377424240112305
    6. ' +' → logprob: -11.502424240112305
    7. ',' → logprob: -11.877424240112305
    8. ')' → logprob: -12.002424240112305
    9. '+' → logprob: -12.127424240112305
    10. ' !=' → logprob: -13.752424240112305

Token 2294: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.001915191882289946
    2. ' ' → logprob: -6.376914978027344
    3. '(' → logprob: -8.501914978027344
    4. ' (' → logprob: -12.501914978027344
    5. '180' → logprob: -12.876914978027344
    6. '   ' → logprob: -13.626914978027344
    7. ' ' → logprob: -14.876914978027344
    8. '36' → logprob: -15.126914978027344
    9. '361' → logprob: -15.126914978027344
    10. 'b' → logprob: -15.376914978027344

Token 2295: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.005954991560429335
    2. '(' → logprob: -5.130955219268799
    3. '180' → logprob: -11.38095474243164
    4. ' ' → logprob: -11.88095474243164
    5. ' (' → logprob: -12.88095474243164
    6. 'b' → logprob: -13.00595474243164
    7. '(a' → logprob: -15.13095474243164
    8. '(b' → logprob: -15.13095474243164
    9. '361' → logprob: -15.13095474243164
    10. '36' → logprob: -15.25595474243164

Token 2296: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08511453121900558
    2. '-' → logprob: -2.9601144790649414
    3. '#' → logprob: -5.085114479064941
    4. ' ' → logprob: -5.210114479064941
    5. '<|end|>' → logprob: -5.335114479064941
    6. ')' → logprob: -5.460114479064941
    7. ',' → logprob: -5.835114479064941
    8. ' #' → logprob: -6.835114479064941
    9. ' *' → logprob: -6.835114479064941
    10. '<|end|>' → logprob: -6.960114479064941

Token 2297: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006224901415407658
    2. ' b' → logprob: -5.131225109100342
    3. 'a' → logprob: -8.381224632263184
    4. '(' → logprob: -9.881224632263184
    5. ' (' → logprob: -11.631224632263184
    6. ' a' → logprob: -12.381224632263184
    7. '(b' → logprob: -13.256224632263184
    8. '(a' → logprob: -15.256224632263184
    9. ' ' → logprob: -15.506224632263184
    10. '360' → logprob: -15.506224632263184

Token 2298: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08227752149105072
    2. '#' → logprob: -2.957277536392212
    3. ':' → logprob: -3.957277536392212
    4. '\' → logprob: -6.082277297973633
    5. ',' → logprob: -6.332277297973633
    6. ' or' → logprob: -7.082277297973633
    7. '\n' → logprob: -7.332277297973633
    8. 'def' → logprob: -7.582277297973633
    9. ')' → logprob: -7.832277297973633
    10. 'a' → logprob: -8.332277297973633

Token 2300: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012753789313137531
    2. '#' → logprob: -5.012753963470459
    3. 'def' → logprob: -6.762753963470459
    4. '\' → logprob: -6.887753963470459
    5. '\n' → logprob: -6.887753963470459
    6. ':' → logprob: -8.0127534866333
    7. '```' → logprob: -8.0127534866333
    8. '
' → logprob: -8.0127534866333
    9. 'for' → logprob: -8.2627534866333
    10. 'n' → logprob: -8.6377534866333

Token 2301: '360' (ID: 9870)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8053950667381287
    2. '   ' → logprob: -1.6803951263427734
    3. ' =' → logprob: -2.0553951263427734
    4. '=' → logprob: -2.4303951263427734
    5. ',' → logprob: -2.6803951263427734
    6. ')' → logprob: -3.6803951263427734
    7. '):' → logprob: -3.9303951263427734
    8. ' ' → logprob: -5.055395126342773
    9. ':
' → logprob: -5.305395126342773
    10. ' *' → logprob: -5.305395126342773

Token 2302: '0' (ID: 15)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3183082342147827
    2. ' *' → logprob: -1.8183082342147827
    3. '0' → logprob: -2.6933083534240723
    4. ')' → logprob: -3.9433083534240723
    5. ',' → logprob: -5.068308353424072
    6. '=' → logprob: -5.443308353424072
    7. ' ' → logprob: -5.568308353424072
    8. '**' → logprob: -6.193308353424072
    9. '```' → logprob: -6.318308353424072
    10. '#' → logprob: -7.318308353424072

Token 2303: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.73904949426651
    2. ')' → logprob: -1.2390494346618652
    3. ' *' → logprob: -1.6140494346618652
    4. '0' → logprob: -4.489049434661865
    5. '#' → logprob: -4.989049434661865
    6. ',' → logprob: -5.614049434661865
    7. ' ' → logprob: -5.739049434661865
    8. ' =' → logprob: -6.614049434661865
    9. 'def' → logprob: -6.864049434661865
    10. ':' → logprob: -6.989049434661865

Token 2304: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00010115911572938785
    2. ' H' → logprob: -9.250101089477539
    3. '(H' → logprob: -12.375101089477539
    4. '360' → logprob: -14.250101089477539
    5. '   ' → logprob: -17.00010108947754
    6. '10' → logprob: -17.25010108947754
    7. '	H' → logprob: -17.50010108947754
    8. '_H' → logprob: -18.12510108947754
    9. ' ' → logprob: -18.25010108947754
    10. '(' → logprob: -19.12510108947754

Token 2305: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3879612684249878
    2. '*' → logprob: -1.1379612684249878
    3. '```' → logprob: -7.887961387634277
    4. ',' → logprob: -8.137961387634277
    5. ')' → logprob: -8.887961387634277
    6. '   ' → logprob: -9.012961387634277
    7. '
' → logprob: -10.387961387634277
    8. '360' → logprob: -10.762961387634277
    9. '**' → logprob: -11.387961387634277
    10. '`' → logprob: -11.387961387634277

Token 2306: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' ' → logprob: -19.875
    4. '36' → logprob: -20.875
    5. '...' → logprob: -22.125
    6. '361' → logprob: -22.375
    7. '366' → logprob: -22.625
    8. '`' → logprob: -22.625
    9. '   ' → logprob: -23.0
    10. '  ' → logprob: -23.0

Token 2307: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '36' → logprob: -19.625
    3. ' ' → logprob: -20.0
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -22.375
    6. '  ' → logprob: -22.5
    7. '359' → logprob: -22.875
    8. '361' → logprob: -22.875
    9. '60' → logprob: -23.125
    10. '3' → logprob: -23.25

Token 2308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '000' → logprob: -15.875
    3. '```' → logprob: -16.375
    4. ' ' → logprob: -17.375
    5. '   ' → logprob: -18.0
    6. '00' → logprob: -18.125
    7. '#' → logprob: -18.5
    8. '*' → logprob: -19.75
    9. '=' → logprob: -20.0
    10. 'def' → logprob: -20.25

Token 2309: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0497981533408165
    2. '   ' → logprob: -3.9247982501983643
    3. ',' → logprob: -4.799798011779785
    4. '```' → logprob: -5.174798011779785
    5. ',
' → logprob: -5.424798011779785
    6. '    
' → logprob: -5.799798011779785
    7. ')' → logprob: -6.299798011779785
    8. '#' → logprob: -7.049798011779785
    9. '
' → logprob: -7.424798011779785
    10. 'def' → logprob: -7.424798011779785

Token 2310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05291709676384926
    2. 'A' → logprob: -3.177917003631592
    3. '
' → logprob: -5.552917003631592
    4. ' A' → logprob: -6.177917003631592
    5. '    
' → logprob: -6.677917003631592
    6. '```' → logprob: -7.177917003631592
    7. '#' → logprob: -8.30291748046875
    8. 'B' → logprob: -8.42791748046875
    9. ',' → logprob: -8.67791748046875
    10. '`' → logprob: -8.92791748046875

Token 2311: ' v' (ID: 323)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24735258519649506
    2. '   ' → logprob: -1.7473526000976562
    3. 'from' → logprob: -3.3723526000976562
    4. 'for' → logprob: -5.372352600097656
    5. 'def' → logprob: -6.122352600097656
    6. 'g' → logprob: -6.997352600097656
    7. 'import' → logprob: -6.997352600097656
    8. '#' → logprob: -7.997352600097656
    9. 't' → logprob: -8.122352600097656
    10. 'n' → logprob: -8.497352600097656

Token 2312: '_h' (ID: 3434)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.1350525617599487
    2. ' =' → logprob: -1.2600525617599487
    3. '_' → logprob: -2.3850526809692383
    4. '_a' → logprob: -2.5100526809692383
    5. 'A' → logprob: -3.0100526809692383
    6. '_h' → logprob: -3.5100526809692383
    7. '6' → logprob: -3.6350526809692383
    8. '_v' → logprob: -3.8850526809692383
    9. 'v' → logprob: -4.010052680969238
    10. 'alue' → logprob: -4.260052680969238

Token 2313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22571410238742828
    2. '=' → logprob: -1.600714087486267
    3. '_' → logprob: -8.475713729858398
    4. '   ' → logprob: -9.600713729858398
    5. '_h' → logprob: -12.100713729858398
    6. ' ' → logprob: -12.975713729858398
    7. ',' → logprob: -12.975713729858398
    8. ' ' → logprob: -12.975713729858398
    9. '_=' → logprob: -13.225713729858398
    10. '```' → logprob: -13.600713729858398

Token 2314: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.07109379768371582
    2. '36' → logprob: -3.071093797683716
    3. '1' → logprob: -4.196093559265137
    4. '(' → logprob: -5.321093559265137
    5. 'Fraction' → logprob: -6.571093559265137
    6. '6' → logprob: -7.571093559265137
    7. 'frac' → logprob: -8.946093559265137
    8. 'fraction' → logprob: -9.196093559265137
    9. ' ' → logprob: -9.821093559265137
    10. '3' → logprob: -10.696093559265137

Token 2315: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.007373184431344271
    2. 'Fraction' → logprob: -5.632373332977295
    3. '1' → logprob: -6.507373332977295
    4. '36' → logprob: -6.882373332977295
    5. '(' → logprob: -6.882373332977295
    6. 'fraction' → logprob: -9.257372856140137
    7. 'frac' → logprob: -9.757372856140137
    8. '6' → logprob: -10.382372856140137
    9. '60' → logprob: -11.882372856140137
    10. 'fra' → logprob: -12.007372856140137

Token 2316: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2603415250778198
    2. ' /' → logprob: -1.6353415250778198
    3. '/(' → logprob: -3.3853416442871094
    4. '   ' → logprob: -8.01034164428711
    5. ')' → logprob: -10.63534164428711
    6. '//' → logprob: -11.13534164428711
    7. '
' → logprob: -11.13534164428711
    8. ' /(' → logprob: -11.26034164428711
    9. ')/(' → logprob: -11.63534164428711
    10. '*' → logprob: -11.63534164428711

Token 2317: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.500005722045898
    3. ' (' → logprob: -13.375005722045898
    4. '((' → logprob: -15.875005722045898
    5. 'v' → logprob: -15.875005722045898
    6. '   ' → logprob: -17.1250057220459
    7. 'H' → logprob: -17.2500057220459
    8. '(v' → logprob: -17.5000057220459
    9. '\(' → logprob: -17.8750057220459
    10. '(float' → logprob: -19.2500057220459

Token 2318: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -6.0391463193809614e-05
    2. '*' → logprob: -9.875060081481934
    3. '(' → logprob: -12.000060081481934
    4. '   ' → logprob: -13.625060081481934
    5. '```' → logprob: -15.125060081481934
    6. ' *' → logprob: -15.250060081481934
    7. ' ' → logprob: -15.250060081481934
    8. '\' → logprob: -15.750060081481934
    9. '\t' → logprob: -15.875060081481934
    10. '  ' → logprob: -16.25006103515625

Token 2319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8219583075260743e-05
    2. '000' → logprob: -10.500038146972656
    3. '00' → logprob: -11.500038146972656
    4. '   ' → logprob: -15.000038146972656
    5. ' ' → logprob: -16.125038146972656
    6. '```' → logprob: -17.625038146972656
    7. '(' → logprob: -17.750038146972656
    8. '       ' → logprob: -18.125038146972656
    9. '_' → logprob: -19.000038146972656
    10. ')' → logprob: -19.250038146972656

Token 2320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43725988268852234
    2. '   ' → logprob: -1.0622599124908447
    3. '    
' → logprob: -6.187259674072266
    4. ',' → logprob: -6.312259674072266
    5. 'v' → logprob: -6.437259674072266
    6. '```' → logprob: -7.062259674072266
    7. '
' → logprob: -7.187259674072266
    8. ',
' → logprob: -8.062259674072266
    9. ' v' → logprob: -8.687259674072266
    10. ' 
' → logprob: -8.687259674072266

Token 2321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021680502220988274
    2. '
' → logprob: -4.5216803550720215
    3. 'v' → logprob: -5.3966803550720215
    4. ' v' → logprob: -5.3966803550720215
    5. 'A' → logprob: -7.5216803550720215
    6. ' A' → logprob: -8.39668083190918
    7. '    
' → logprob: -8.64668083190918
    8. ',' → logprob: -9.27168083190918
    9. '    ' → logprob: -9.39668083190918
    10. '```' → logprob: -9.64668083190918

Token 2322: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.5518484711647034
    2. 'A' → logprob: -0.9268484711647034
    3. '   ' → logprob: -3.6768484115600586
    4. 'def' → logprob: -6.926848411560059
    5. 'import' → logprob: -7.301848411560059
    6. 'from' → logprob: -7.426848411560059
    7. '#' → logprob: -8.551848411560059
    8. '```' → logprob: -9.301848411560059
    9. 'results' → logprob: -9.551848411560059
    10. ' A' → logprob: -9.551848411560059

Token 2323: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.138279527425766
    2. '_s' → logprob: -2.263279438018799
    3. '_h' → logprob: -3.763279438018799
    4. 'm' → logprob: -6.888279438018799
    5. '_a' → logprob: -7.888279438018799
    6. '_' → logprob: -8.388279914855957
    7. 's' → logprob: -8.888279914855957
    8. 'h' → logprob: -10.638279914855957
    9. '_sm' → logprob: -10.763279914855957
    10. '=' → logprob: -11.013279914855957

Token 2324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488487705588341
    2. '=' → logprob: -2.929884910583496
    3. ' ' → logprob: -14.054884910583496
    4. ' ' → logprob: -14.179884910583496
    5. ',' → logprob: -14.929884910583496
    6. ')' → logprob: -15.304884910583496
    7. '   ' → logprob: -16.17988395690918
    8. '```' → logprob: -16.17988395690918
    9. 'v' → logprob: -16.30488395690918
    10. 's' → logprob: -16.67988395690918

Token 2325: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '6' → logprob: -15.000003814697266
    4. '.' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '```' → logprob: -19.062503814697266
    7. '`' → logprob: -19.312503814697266
    8. '1' → logprob: -19.500003814697266
    9. '  ' → logprob: -19.812503814697266
    10. '=' → logprob: -19.812503814697266

Token 2326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '6' → logprob: -16.500001907348633
    6. '(' → logprob: -18.562501907348633
    7. '=' → logprob: -19.000001907348633
    8. '  ' → logprob: -19.125001907348633
    9. '```' → logprob: -19.437501907348633
    10. '    ' → logprob: -19.500001907348633

Token 2327: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026648707687854767
    2. '0' → logprob: -3.651648759841919
    3. ' ' → logprob: -8.52664852142334
    4. '6' → logprob: -9.65164852142334
    5. '   ' → logprob: -10.02664852142334
    6. ' .' → logprob: -10.77664852142334
    7. '=' → logprob: -12.52664852142334
    8. '    ' → logprob: -12.52664852142334
    9. '*' → logprob: -12.65164852142334
    10. '     ' → logprob: -13.02664852142334

Token 2328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '100' → logprob: -15.625
    3. '099' → logprob: -16.0
    4. '```' → logprob: -16.875
    5. '000' → logprob: -18.0
    6. '   ' → logprob: -18.1875
    7. '01' → logprob: -18.5625
    8. '10' → logprob: -18.8125
    9. '{' → logprob: -18.8125
    10. '[' → logprob: -18.9375

Token 2329: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16636399924755096
    2. '   ' → logprob: -2.4163639545440674
    3. ',' → logprob: -3.1663639545440674
    4. ')' → logprob: -5.0413641929626465
    5. ' ' → logprob: -5.7913641929626465
    6. '  
' → logprob: -6.1663641929626465
    7. '    
' → logprob: -6.2913641929626465
    8. ' 
' → logprob: -6.2913641929626465
    9. '<|end|>' → logprob: -6.4163641929626465
    10. ',
' → logprob: -6.7913641929626465

Token 2330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05330415442585945
    2. 'v' → logprob: -3.0533041954040527
    3. ' v' → logprob: -5.553304195404053
    4. '```' → logprob: -7.678304195404053
    5. 'A' → logprob: -8.428303718566895
    6. '
' → logprob: -9.928303718566895
    7. '`' → logprob: -10.928303718566895
    8. ',' → logprob: -11.553303718566895
    9. 'B' → logprob: -11.678303718566895
    10. ' A' → logprob: -11.803303718566895

Token 2331: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.05569961667060852
    2. '   ' → logprob: -3.555699586868286
    3. 'A' → logprob: -3.680699586868286
    4. ' v' → logprob: -8.805699348449707
    5. 'B' → logprob: -9.055699348449707
    6. '#' → logprob: -10.305699348449707
    7. '```' → logprob: -10.805699348449707
    8. ' A' → logprob: -11.180699348449707
    9. 'from' → logprob: -11.180699348449707
    10. 'for' → logprob: -11.305699348449707

Token 2332: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.03565448522567749
    2. 's' → logprob: -3.4106545448303223
    3. '_h' → logprob: -7.160654544830322
    4. ' =' → logprob: -7.910654544830322
    5. '=' → logprob: -8.035654067993164
    6. '_' → logprob: -8.535654067993164
    7. '6' → logprob: -9.035654067993164
    8. '_a' → logprob: -10.035654067993164
    9. ' s' → logprob: -10.410654067993164
    10. ' ' → logprob: -10.910654067993164

Token 2333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022079944610596
    2. '=' → logprob: -2.3502206802368164
    3. ')' → logprob: -11.975220680236816
    4. ',' → logprob: -12.975220680236816
    5. ' ' → logprob: -13.350220680236816
    6. '_' → logprob: -13.475220680236816
    7. '   ' → logprob: -14.350220680236816
    8. ' ' → logprob: -15.100220680236816
    9. ' =
' → logprob: -15.225220680236816
    10. 's' → logprob: -15.600220680236816

Token 2334: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -18.0
    4. '   ' → logprob: -18.375
    5. '۶' → logprob: -20.375
    6. '٦' → logprob: -20.75
    7. '60' → logprob: -21.1875
    8. '६' → logprob: -21.1875
    9. '' → logprob: -21.4375
    10. '  ' → logprob: -21.75

Token 2335: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -19.5
    4. '   ' → logprob: -21.625
    5. '۶' → logprob: -21.625
    6. '٦' → logprob: -22.125
    7. '६' → logprob: -23.25
    8. '６' → logprob: -23.375
    9. '=' → logprob: -23.5
    10. '60' → logprob: -23.5

Token 2336: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5854640007019043
    2. '
' → logprob: -0.8354640007019043
    3. '    
' → logprob: -4.835464000701904
    4. '
' → logprob: -7.960464000701904
    5. '```' → logprob: -8.335464477539062
    6. ' 
' → logprob: -8.710464477539062
    7. '#' → logprob: -9.085464477539062
    8. '

' → logprob: -9.210464477539062
    9. 'def' → logprob: -9.335464477539062
    10. ',
' → logprob: -9.460464477539062

Token 2337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044662684202194214
    2. '
' → logprob: -3.6696627140045166
    3. 'A' → logprob: -4.5446624755859375
    4. '    
' → logprob: -5.6696624755859375
    5. '#' → logprob: -6.9196624755859375
    6. 'def' → logprob: -7.5446624755859375
    7. 'import' → logprob: -7.5446624755859375
    8. ' A' → logprob: -7.9196624755859375
    9. 'from' → logprob: -8.169662475585938
    10. 'for' → logprob: -8.669662475585938

Token 2338: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6561857461929321
    2. 'A' → logprob: -1.5311857461929321
    3. 'solutions' → logprob: -2.1561856269836426
    4. 'from' → logprob: -2.4061856269836426
    5. 'results' → logprob: -4.031185626983643
    6. 'import' → logprob: -4.406185626983643
    7. '#' (adapté à ' #') → logprob: -4.531185626983643
    8. 'def' → logprob: -5.156185626983643
    9. 'res' → logprob: -5.656185626983643
    10. 'possible' → logprob: -5.906185626983643

Token 2339: ' Cette' (ID: 27383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04606794938445091
    2. 'A' → logprob: -3.921067953109741
    3. 'for' → logprob: -4.671067714691162
    4. 'from' → logprob: -5.546067714691162
    5. '#' → logprob: -5.671067714691162
    6. 'n' → logprob: -5.796067714691162
    7. 'def' → logprob: -6.546067714691162
    8. '
' → logprob: -6.671067714691162
    9. 'step' → logprob: -7.296067714691162
    10. 'import' → logprob: -7.546067714691162

Token 2340: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32636624574661255
    2. '   ' → logprob: -2.2013661861419678
    3. 'import' → logprob: -2.5763661861419678
    4. '#' → logprob: -3.2013661861419678
    5. '
' → logprob: -4.201366424560547
    6. ':' → logprob: -4.826366424560547
    7. 'v' → logprob: -5.201366424560547
    8. ' #' → logprob: -5.951366424560547
    9. ' =' → logprob: -6.076366424560547
    10. 'H' → logprob: -6.076366424560547

Token 2341: ' calc' (ID: 25691)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017720464384183288
    2. ' def' → logprob: -6.626771926879883
    3. '
' → logprob: -8.876771926879883
    4. '_def' → logprob: -10.001771926879883
    5. '   ' → logprob: -10.126771926879883
    6. ')' → logprob: -10.126771926879883
    7. '=' → logprob: -10.251771926879883
    8. ' =' → logprob: -10.251771926879883
    9. '(
' → logprob: -10.751771926879883
    10. ':' → logprob: -11.001771926879883

Token 2342: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.12535765767097473
    2. 'def' → logprob: -2.7503576278686523
    3. 'ulate' → logprob: -3.7503576278686523
    4. 'cule' → logprob: -3.7503576278686523
    5. 'ul' → logprob: -5.375357627868652
    6. 'cul' → logprob: -7.625357627868652
    7. 'u' → logprob: -7.750357627868652
    8. 'culate' → logprob: -8.000357627868652
    9. 'ulte' → logprob: -8.500357627868652
    10. 'uler' → logprob: -9.125357627868652

Token 2343: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006064240820705891
    2. 'lambda' → logprob: -5.881064414978027
    3. '(lambda' → logprob: -7.256064414978027
    4. '#' → logprob: -7.381064414978027
    5. ' def' → logprob: -8.256064414978027
    6. '   ' → logprob: -8.256064414978027
    7. 'abs' → logprob: -8.506064414978027
    8. 't' → logprob: -8.631064414978027
    9. 'for' → logprob: -8.756064414978027
    10. 'a' → logprob: -8.881064414978027

Token 2344: ' solutions' (ID: 9368)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35456034541130066
    2. 'c' → logprob: -1.604560375213623
    3. 'results' → logprob: -3.854560375213623
    4. 'possible' → logprob: -3.854560375213623
    5. 'solutions' → logprob: -3.854560375213623
    6. '#' → logprob: -4.354560375213623
    7. 'res' → logprob: -5.729560375213623
    8. 'angles' → logprob: -5.854560375213623
    9. 'times' → logprob: -5.854560375213623
    10. 'from' → logprob: -5.979560375213623

Token 2345: ' possibles' (ID: 97753)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00629834970459342
    2. '   ' → logprob: -5.506298542022705
    3. '
' → logprob: -6.756298542022705
    4. 'for' → logprob: -7.381298542022705
    5. ' def' → logprob: -9.131298065185547
    6. 't' → logprob: -9.256298065185547
    7. '#' → logprob: -10.256298065185547
    8. ':' → logprob: -10.506298065185547
    9. '(
' → logprob: -10.506298065185547
    10. '=' → logprob: -11.006298065185547

Token 2346: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031344667077064514
    2. '   ' → logprob: -6.128134250640869
    3. ' def' → logprob: -8.003134727478027
    4. '
' → logprob: -8.128134727478027
    5. ':' → logprob: -9.628134727478027
    6. 'import' → logprob: -9.878134727478027
    7. '```' → logprob: -10.128134727478027
    8. 'for' → logprob: -10.378134727478027
    9. ')' → logprob: -11.003134727478027
    10. '(
' → logprob: -11.128134727478027

Token 2347: ' temps' (ID: 11160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6050928235054016
    2. 'fra' → logprob: -1.6050927639007568
    3. 'fraction' → logprob: -2.480092763900757
    4. 't' → logprob: -3.230092763900757
    5. '```' → logprob: -3.355092763900757
    6. '[]' → logprob: -3.355092763900757
    7. '[' → logprob: -4.730093002319336
    8. 'f' → logprob: -5.105093002319336
    9. 'range' → logprob: -5.480093002319336
    10. 'tokens' → logprob: -5.480093002319336

Token 2348: ' t' (ID: 260)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18328607082366943
    2. '   ' → logprob: -2.183286190032959
    3. ':' → logprob: -3.933286190032959
    4. ' def' → logprob: -3.933286190032959
    5. '
' → logprob: -4.933286190032959
    6. ',' → logprob: -6.433286190032959
    7. ')' → logprob: -6.808286190032959
    8. '(' → logprob: -7.058286190032959
    9. '#' → logprob: -7.558286190032959
    10. '=' → logprob: -8.3082857131958

Token 2349: ' >=' (ID: 5064)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05540597066283226
    2. '   ' → logprob: -3.430405855178833
    3. '
' → logprob: -4.555406093597412
    4. ':' → logprob: -5.055406093597412
    5. ' def' → logprob: -6.680406093597412
    6. 'import' → logprob: -6.930406093597412
    7. '.' → logprob: -8.305405616760254
    8. ':def' → logprob: -8.305405616760254
    9. '```' → logprob: -8.305405616760254
    10. ')' → logprob: -8.430405616760254

Token 2350: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00222590658813715
    2. '0' → logprob: -6.502225875854492
    3. 'num' → logprob: -8.752225875854492
    4. '#' → logprob: -9.002225875854492
    5. ' t' → logprob: -9.252225875854492
    6. '   ' → logprob: -9.377225875854492
    7. '1' → logprob: -9.377225875854492
    8. 'h' → logprob: -10.127225875854492
    9. '`t' → logprob: -10.252225875854492
    10. '```' → logprob: -10.877225875854492

Token 2351: '0' (ID: 15)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0026273811236023903
    2. '_' → logprob: -6.127627372741699
    3. 'num' → logprob: -8.2526273727417
    4. '```' → logprob: -10.2526273727417
    5. ''_' → logprob: -10.3776273727417
    6. '`' → logprob: -10.6276273727417
    7. ' _' → logprob: -11.5026273727417
    8. ')' → logprob: -11.8776273727417
    9. ',' → logprob: -11.8776273727417
    10. ':' → logprob: -12.0026273727417

Token 2352: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12586873769760132
    2. '
' → logprob: -3.000868797302246
    3. '   ' → logprob: -3.000868797302246
    4. ' def' → logprob: -4.250868797302246
    5. ':' → logprob: -6.125868797302246
    6. 'import' → logprob: -7.375868797302246
    7. '```' → logprob: -7.750868797302246
    8. ':def' → logprob: -8.125868797302246
    9. '	def' → logprob: -8.250868797302246
    10. '    
' → logprob: -9.125868797302246

Token 2353: ' secondes' (ID: 109098)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.43077200651168823
    2. 'def' → logprob: -2.180772066116333
    3. 'fraction' → logprob: -2.680772066116333
    4. 'r' → logprob: -3.055772066116333
    5. '```' → logprob: -3.930772066116333
    6. 'range' → logprob: -4.180771827697754
    7. '#' → logprob: -4.305771827697754
    8. 'ration' → logprob: -4.305771827697754
    9. 'num' → logprob: -4.430771827697754
    10. 's' → logprob: -5.430771827697754

Token 2354: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5087289214134216
    2. '   ' → logprob: -1.1337289810180664
    3. '
' → logprob: -3.5087289810180664
    4. ':' → logprob: -3.5087289810180664
    5. ' def' → logprob: -4.883728981018066
    6. 'import' → logprob: -6.258728981018066
    7. '.' → logprob: -6.633728981018066
    8. ')' → logprob: -6.883728981018066
    9. '	def' → logprob: -7.133728981018066
    10. '<|end|>' → logprob: -7.133728981018066

Token 2355: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42608800530433655
    2. '   ' → logprob: -1.4260879755020142
    3. '
' → logprob: -2.3010880947113037
    4. ' def' → logprob: -6.176087856292725
    5. ':' → logprob: -6.301087856292725
    6. '```' → logprob: -7.426087856292725
    7. '    
' → logprob: -7.676087856292725
    8. ':
' → logprob: -8.051088333129883
    9. '(
' → logprob: -8.426088333129883
    10. 'import' → logprob: -8.551088333129883

Token 2356: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4409884214401245
    2. '   ' → logprob: -1.5659884214401245
    3. '
' → logprob: -1.9409884214401245
    4. '```' → logprob: -5.940988540649414
    5. '    
' → logprob: -7.565988540649414
    6. ' def' → logprob: -8.065988540649414
    7. ':' → logprob: -8.815988540649414
    8. ')' → logprob: -8.815988540649414
    9. 'import' → logprob: -9.190988540649414
    10. '

' → logprob: -10.315988540649414

Token 2357: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3252125084400177
    2. '   ' → logprob: -1.5752124786376953
    3. '
' → logprob: -2.7002124786376953
    4. ' def' → logprob: -6.450212478637695
    5. 'import' → logprob: -6.950212478637695
    6. '    
' → logprob: -7.575212478637695
    7. 'from' → logprob: -8.450212478637695
    8. '```' → logprob: -9.450212478637695
    9. '
' → logprob: -11.200212478637695
    10. '#' → logprob: -11.325212478637695

Token 2358: ' utilise' (ID: 70283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14970414340496063
    2. 'import' → logprob: -2.1497042179107666
    3. '   ' → logprob: -5.1497039794921875
    4. 'continue' → logprob: -5.1497039794921875
    5. 'from' → logprob: -5.1497039794921875
    6. 'define' → logprob: -6.8997039794921875
    7. 'importe' → logprob: -6.8997039794921875
    8. '
' → logprob: -7.1497039794921875
    9. '```' → logprob: -7.8997039794921875
    10. ' def' → logprob: -8.149703979492188

Token 2359: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44261878728866577
    2. 'import' → logprob: -1.8176188468933105
    3. 'from' → logprob: -1.9426188468933105
    4. '[]' → logprob: -3.8176188468933105
    5. '   ' → logprob: -5.0676188468933105
    6. '```' → logprob: -5.4426188468933105
    7. 'lambda' → logprob: -5.9426188468933105
    8. '1' → logprob: -6.0676188468933105
    9. '[]
' → logprob: -6.3176188468933105
    10. '
' → logprob: -6.3176188468933105

Token 2360: ' condition' (ID: 7060)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2482997477054596
    2. 'import' → logprob: -1.8732997179031372
    3. 'from' → logprob: -2.8732998371124268
    4. 'for' → logprob: -6.123299598693848
    5. '
' → logprob: -6.248299598693848
    6. '#' → logprob: -6.373299598693848
    7. '[
' → logprob: -6.623299598693848
    8. '```' → logprob: -7.623299598693848
    9. 'range' → logprob: -7.998299598693848
    10. '[]' → logprob: -8.248299598693848

Token 2361: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05031442269682884
    2. 'import' → logprob: -4.050314426422119
    3. '   ' → logprob: -4.425314426422119
    4. '#' → logprob: -4.675314426422119
    5. '```' → logprob: -5.800314426422119
    6. '
' → logprob: -5.925314426422119
    7. 'from' → logprob: -6.425314426422119
    8. 'for' → logprob: -7.550314426422119
    9. ':' → logprob: -7.675314426422119
    10. '=' → logprob: -7.925314426422119

Token 2362: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0337131023406982
    2. '=' → logprob: -1.2837131023406982
    3. ' =' → logprob: -2.1587131023406982
    4. '_mod' → logprob: -2.1587131023406982
    5. 's' → logprob: -2.6587131023406982
    6. 'b' → logprob: -3.7837131023406982
    7. '_sm' → logprob: -5.033713340759277
    8. '_min' → logprob: -5.283713340759277
    9. 'pp' → logprob: -5.658713340759277
    10. 'mod' → logprob: -5.658713340759277

Token 2363: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00683685252442956
    2. '(' → logprob: -6.381836891174316
    3. 'a' → logprob: -6.631836891174316
    4. '5' → logprob: -7.381836891174316
    5. ' b' → logprob: -7.381836891174316
    6. 'v' → logprob: -7.506836891174316
    7. '(b' → logprob: -8.006836891174316
    8. 'lambda' → logprob: -8.006836891174316
    9. 'frac' → logprob: -8.381836891174316
    10. '(v' → logprob: -8.381836891174316

Token 2364: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06264308094978333
    2. 'def' → logprob: -3.187643051147461
    3. '
' → logprob: -4.062643051147461
    4. '    
' → logprob: -6.812643051147461
    5. '```' → logprob: -8.187643051147461
    6. ' def' → logprob: -8.812643051147461
    7. 'import' → logprob: -8.937643051147461
    8. ':' → logprob: -9.312643051147461
    9. 'for' → logprob: -9.437643051147461
    10. '#' → logprob: -10.062643051147461

Token 2365: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00020938136731274426
    2. '(' → logprob: -9.00020980834961
    3. '180' → logprob: -9.37520980834961
    4. '720' → logprob: -15.00020980834961
    5. ' ' → logprob: -15.25020980834961
    6. '36' → logprob: -15.50020980834961
    7. ' (' → logprob: -15.75020980834961
    8. '(int' → logprob: -17.12520980834961
    9. '{' → logprob: -17.25020980834961
    10. '
' → logprob: -17.25020980834961

Token 2366: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00011236425780225545
    2. '180' → logprob: -9.125112533569336
    3. '(' → logprob: -12.750112533569336
    4. '36' → logprob: -15.375112533569336
    5. '720' → logprob: -16.250112533569336
    6. '```' → logprob: -16.250112533569336
    7. ' ' → logprob: -16.750112533569336
    8. '1' → logprob: -18.625112533569336
    9. '359' → logprob: -18.625112533569336
    10. '{' → logprob: -19.000112533569336

Token 2367: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7913392186164856
    2. 'def' → logprob: -1.0413391590118408
    3. '
' → logprob: -1.7913391590118408
    4. ' def' → logprob: -4.04133939743042
    5. '    
' → logprob: -6.04133939743042
    6. '```' → logprob: -6.04133939743042
    7. '#' → logprob: -7.04133939743042
    8. 'import' → logprob: -7.16633939743042
    9. ':' → logprob: -7.29133939743042
    10. ',' → logprob: -7.54133939743042

Token 2368: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6940800547599792
    2. ' a' → logprob: -0.6940800547599792
    3. ' ' → logprob: -8.194080352783203
    4. ' (' → logprob: -8.569080352783203
    5. '   ' → logprob: -8.944080352783203
    6. '(a' → logprob: -9.069080352783203
    7. ' ' → logprob: -10.319080352783203
    8. '(' → logprob: -10.444080352783203
    9. '360' → logprob: -11.194080352783203
    10. '	a' → logprob: -11.194080352783203

Token 2369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1615000218153
    2. '=' → logprob: -2.0364999771118164
    3. ' b' → logprob: -4.411499977111816
    4. 'b' → logprob: -5.786499977111816
    5. ' ==' → logprob: -6.411499977111816
    6. ' ' → logprob: -7.911499977111816
    7. '_' → logprob: -8.661499977111816
    8. '```' → logprob: -8.661499977111816
    9. ' _' → logprob: -8.911499977111816
    10. '   ' → logprob: -9.161499977111816

Token 2370: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04971320554614067
    2. '360' → logprob: -3.049713134765625
    3. ' (' → logprob: -6.924713134765625
    4. ' ' → logprob: -10.299713134765625
    5. '(-' → logprob: -10.299713134765625
    6. '((' → logprob: -10.424713134765625
    7. '```' → logprob: -11.174713134765625
    8. '`' → logprob: -12.674713134765625
    9. '   ' → logprob: -12.799713134765625
    10. '-' → logprob: -12.799713134765625

Token 2371: '360' (ID: 9870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019594650715589523
    2. '360' → logprob: -4.019594669342041
    3. '(-' → logprob: -7.519594669342041
    4. ' (' → logprob: -7.519594669342041
    5. '((' → logprob: -8.269594192504883
    6. '-' → logprob: -10.269594192504883
    7. '-(' → logprob: -11.394594192504883
    8. ' ' → logprob: -11.644594192504883
    9. '```' → logprob: -12.019594192504883
    10. '((-' → logprob: -12.394594192504883

Token 2372: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02822295017540455
    2. '-' → logprob: -3.6532230377197266
    3. '<|end|>' → logprob: -7.528223037719727
    4. ':' → logprob: -8.153223037719727
    5. 'def' → logprob: -8.278223037719727
    6. ')' → logprob: -8.778223037719727
    7. ',' → logprob: -8.903223037719727
    8. ' *' → logprob: -9.028223037719727
    9. '#' → logprob: -9.403223037719727
    10. '
' → logprob: -9.778223037719727

Token 2373: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011144972406327724
    2. ' b' → logprob: -4.511145114898682
    3. 'a' → logprob: -9.386144638061523
    4. ' a' → logprob: -12.761144638061523
    5. '(' → logprob: -13.261144638061523
    6. ' (' → logprob: -13.886144638061523
    7. ')b' → logprob: -13.886144638061523
    8. ' ' → logprob: -14.261144638061523
    9. '```' → logprob: -14.386144638061523
    10. '...' → logprob: -14.386144638061523

Token 2374: ' mod' (ID: 1812)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0790749788284302
    2. 'def' → logprob: -1.0790749788284302
    3. '   ' → logprob: -1.2040749788284302
    4. ' def' → logprob: -5.079074859619141
    5. 'import' → logprob: -5.204074859619141
    6. '```' → logprob: -5.579074859619141
    7. '    
' → logprob: -6.079074859619141
    8. '#' → logprob: -8.07907485961914
    9. '`
' → logprob: -8.32907485961914
    10. ':' → logprob: -8.70407485961914

Token 2375: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.875004768371582
    4. '460' → logprob: -17.000003814697266
    5. '```' → logprob: -17.125003814697266
    6. '180' → logprob: -17.125003814697266
    7. '720' → logprob: -17.375003814697266
    8. '{' → logprob: -17.875003814697266
    9. '860' → logprob: -18.625003814697266
    10. ' ' → logprob: -18.875003814697266

Token 2376: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.512236498361744e-07
    2. '180' → logprob: -15.000000953674316
    3. '```' → logprob: -16.25
    4. '2' → logprob: -17.25
    5. '720' → logprob: -17.5
    6. ' ' → logprob: -17.5
    7. '0' → logprob: -19.0
    8. '1' → logprob: -19.125
    9. '=' → logprob: -19.25
    10. '(' → logprob: -19.25

Token 2377: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7590374946594238
    2. 'def' → logprob: -0.7590374946594238
    3. '   ' → logprob: -2.884037494659424
    4. 'import' → logprob: -6.134037494659424
    5. ' def' → logprob: -6.509037494659424
    6. '    
' → logprob: -6.759037494659424
    7. '

' → logprob: -7.259037494659424
    8. '```' → logprob: -7.259037494659424
    9. '  
' → logprob: -7.759037494659424
    10. ':' → logprob: -8.634037017822266

Token 2378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22946888208389282
    2. 'def' → logprob: -1.729468822479248
    3. '
' → logprob: -3.854468822479248
    4. 'import' → logprob: -5.729468822479248
    5. 'solutions' → logprob: -6.604468822479248
    6. 'from' → logprob: -7.854468822479248
    7. ' solutions' → logprob: -7.979468822479248
    8. ' def' → logprob: -7.979468822479248
    9. '    
' → logprob: -8.229469299316406
    10. '#' → logprob: -8.729469299316406

Token 2379: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3608403205871582
    2. '   ' → logprob: -1.4858403205871582
    3. 'solutions' → logprob: -2.860840320587158
    4. 'import' → logprob: -4.735840320587158
    5. '
' → logprob: -5.610840320587158
    6. 'from' → logprob: -5.860840320587158
    7. 'results' → logprob: -6.360840320587158
    8. 'res' → logprob: -7.485840320587158
    9. ' solutions' → logprob: -7.985840320587158
    10. '#' (adapté à ' #') → logprob: -7.985840320587158

Token 2380: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2805723547935486
    2. 'def' → logprob: -1.5305724143981934
    3. '
' → logprob: -4.155572414398193
    4. 'import' → logprob: -5.530572414398193
    5. 'for' → logprob: -5.655572414398193
    6. '#' → logprob: -6.655572414398193
    7. '    
' → logprob: -6.905572414398193
    8. 'i' → logprob: -7.655572414398193
    9. ' for' → logprob: -7.655572414398193
    10. 'n' → logprob: -7.905572414398193

Token 2381: ' résoudre' (ID: 134006)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13876484334468842
    2. 'n' → logprob: -2.2637648582458496
    3. 'i' → logprob: -5.38876485824585
    4. 'm' → logprob: -5.63876485824585
    5. 'offset' → logprob: -5.63876485824585
    6. 'N' → logprob: -6.01376485824585
    7. 'd' → logprob: -6.76376485824585
    8. 'a' → logprob: -6.88876485824585
    9. 'l' → logprob: -7.13876485824585
    10. 'def' → logprob: -7.38876485824585

Token 2382: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11278726160526276
    2. 'def' → logprob: -2.8627872467041016
    3. 'import' → logprob: -3.6127872467041016
    4. '#' → logprob: -4.737787246704102
    5. ' def' → logprob: -5.862787246704102
    6. ' for' → logprob: -6.112787246704102
    7. '```' → logprob: -6.237787246704102
    8. '
' → logprob: -6.487787246704102
    9. ' #' → logprob: -7.112787246704102
    10. 'for' → logprob: -7.237787246704102

Token 2383: 'v' (ID: 85)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.038612723350525
    2. 't' → logprob: -1.288612723350525
    3. 'i' → logprob: -2.0386128425598145
    4. ')' → logprob: -3.0386128425598145
    5. 'k' → logprob: -3.4136128425598145
    6. '
' → logprob: -3.6636128425598145
    7. 'abs' → logprob: -3.6636128425598145
    8. '#' → logprob: -3.7886128425598145
    9. 'n' → logprob: -4.1636128425598145
    10. 'A' → logprob: -4.9136128425598145

Token 2384: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4059796631336212
    2. '_h' → logprob: -1.1559796333312988
    3. '_m' → logprob: -5.030979633331299
    4. 'h' → logprob: -5.155979633331299
    5. 's' → logprob: -5.280979633331299
    6. ' =' → logprob: -8.030980110168457
    7. ')' → logprob: -8.280980110168457
    8. 'm' → logprob: -8.405980110168457
    9. '_a' → logprob: -8.905980110168457
    10. 'v' → logprob: -9.155980110168457

Token 2385: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2114572376012802
    2. '*t' → logprob: -2.5864572525024414
    3. 't' → logprob: -2.9614572525024414
    4. '*' → logprob: -3.3364572525024414
    5. ' t' → logprob: -4.461457252502441
    6. ' -' → logprob: -4.836457252502441
    7. ',' → logprob: -5.336457252502441
    8. ')' → logprob: -6.961457252502441
    9. '-' → logprob: -7.086457252502441
    10. ' ' → logprob: -8.086457252502441

Token 2386: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.010006803087890148
    2. ' v' → logprob: -4.635006904602051
    3. '0' → logprob: -9.51000690460205
    4. '(v' → logprob: -9.76000690460205
    5. ')' → logprob: -10.01000690460205
    6. ' (' → logprob: -10.76000690460205
    7. 'a' → logprob: -11.38500690460205
    8. ')v' → logprob: -11.51000690460205
    9. '1' → logprob: -11.63500690460205
    10. '(' → logprob: -11.63500690460205

Token 2387: '_m' (ID: 1285)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.19223438203334808
    2. '_m' → logprob: -2.9422342777252197
    3. 'm' → logprob: -3.0672342777252197
    4. '_s' → logprob: -3.6922342777252197
    5. '_h' → logprob: -3.9422342777252197
    6. ')' → logprob: -4.442234516143799
    7. ' v' → logprob: -5.442234516143799
    8. 'H' → logprob: -5.567234516143799
    9. 'h' → logprob: -5.817234516143799
    10. 's' → logprob: -6.192234516143799

Token 2388: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013702207244932652
    2. ')*' → logprob: -4.513702392578125
    3. ')t' → logprob: -7.263702392578125
    4. ',' → logprob: -7.763702392578125
    5. ')
' → logprob: -8.138702392578125
    6. '),' → logprob: -8.263702392578125
    7. 't' → logprob: -8.888702392578125
    8. ' )' → logprob: -8.888702392578125
    9. '   ' → logprob: -9.263702392578125
    10. '#' → logprob: -9.513702392578125

Token 2389: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6387129426002502
    2. 'v' → logprob: -0.7637129426002502
    3. '1' → logprob: -5.6387128829956055
    4. '(v' → logprob: -7.0137128829956055
    5. 'H' → logprob: -7.7637128829956055
    6. '5' → logprob: -8.263712882995605
    7. ' t' → logprob: -8.888712882995605
    8. '(' → logprob: -9.013712882995605
    9. '(t' → logprob: -9.138712882995605
    10. ')' → logprob: -9.513712882995605

Token 2390: ' �' (ID: 42308)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.743831992149353
    2. ' *' → logprob: -1.743831992149353
    3. '*' → logprob: -1.993831992149353
    4. '=' → logprob: -2.4938321113586426
    5. ' =' → logprob: -3.3688321113586426
    6. '*(' → logprob: -3.8688321113586426
    7. '*num' → logprob: -4.243832111358643
    8. ')' → logprob: -4.368832111358643
    9. '#' → logprob: -4.618832111358643
    10. '   ' → logprob: -4.618832111358643

Token 2391: '�' (ID: 94)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05029277130961418
    2. '(' → logprob: -3.675292730331421
    3. '0' → logprob: -5.80029296875
    4. '260' → logprob: -6.05029296875
    5. ' ' → logprob: -6.55029296875
    6. '61' → logprob: -6.55029296875
    7. '-' → logprob: -6.80029296875
    8. ''' → logprob: -6.92529296875
    9. 'x' → logprob: -7.17529296875
    10. '2' → logprob: -7.17529296875

Token 2392: ' ±' (ID: 58882)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3302694857120514
    2. ' (' → logprob: -2.2052695751190186
    3. '(v' → logprob: -3.2052695751190186
    4. 'v' → logprob: -3.8302695751190186
    5. '(' → logprob: -3.8302695751190186
    6. ' v' → logprob: -4.2052693367004395
    7. ' =' → logprob: -4.2052693367004395
    8. ' ' → logprob: -4.2052693367004395
    9. ',' → logprob: -4.4552693367004395
    10. '0' → logprob: -4.4552693367004395

Token 2393: ' (' (ID: 350)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -0.07598371803760529
    2. '(v' → logprob: -3.075983762741089
    3. '1' → logprob: -5.20098352432251
    4. '(' → logprob: -5.32598352432251
    5. '((' → logprob: -5.57598352432251
    6. '36' → logprob: -5.82598352432251
    7. '0' → logprob: -5.95098352432251
    8. 'v' → logprob: -6.20098352432251
    9. '180' → logprob: -6.32598352432251
    10. ' ' → logprob: -7.32598352432251

Token 2394: 'v' (ID: 85)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -0.013988724909722805
    2. '0' → logprob: -4.638988494873047
    3. 'k' → logprob: -6.013988494873047
    4. '(' → logprob: -8.263988494873047
    5. 'n' → logprob: -8.513988494873047
    6. ')' → logprob: -8.638988494873047
    7. ' ' → logprob: -8.638988494873047
    8. '(n' → logprob: -8.763988494873047
    9. '180' → logprob: -9.138988494873047
    10. '36' → logprob: -9.513988494873047

Token 2395: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.16690629720687866
    2. 's' → logprob: -1.9169063568115234
    3. '360' → logprob: -5.541906356811523
    4. '_' → logprob: -6.791906356811523
    5. ')' → logprob: -8.416906356811523
    6. 't' → logprob: -8.666906356811523
    7. '*' → logprob: -8.791906356811523
    8. ' s' → logprob: -9.041906356811523
    9. '36' → logprob: -9.166906356811523
    10. 'v' → logprob: -9.291906356811523

Token 2396: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0795115977525711
    2. '-' → logprob: -2.5795116424560547
    3. '_' → logprob: -8.704511642456055
    4. ')' → logprob: -9.204511642456055
    5. ' *' → logprob: -9.579511642456055
    6. ' ' → logprob: -9.704511642456055
    7. '*' → logprob: -9.954511642456055
    8. '   ' → logprob: -10.329511642456055
    9. '
' → logprob: -10.454511642456055
    10. ' _' → logprob: -10.704511642456055

Token 2397: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.025952817872166634
    2. ' v' → logprob: -3.7759528160095215
    3. '(v' → logprob: -6.2759528160095215
    4. ' (' → logprob: -7.9009528160095215
    5. '(' → logprob: -8.15095329284668
    6. '((' → logprob: -9.65095329284668
    7. '1' → logprob: -10.52595329284668
    8. ' ' → logprob: -10.90095329284668
    9. '   ' → logprob: -11.52595329284668
    10. ' ((' → logprob: -12.02595329284668

Token 2398: '_h' (ID: 3434)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.09048856794834137
    2. 'm' → logprob: -3.0904886722564697
    3. '_h' → logprob: -3.7154886722564697
    4. 'v' → logprob: -4.340488433837891
    5. 'h' → logprob: -5.840488433837891
    6. '_v' → logprob: -8.46548843383789
    7. '0' → logprob: -9.34048843383789
    8. ' v' → logprob: -9.34048843383789
    9. 'H' → logprob: -9.46548843383789
    10. '(' → logprob: -10.21548843383789

Token 2399: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.12721271812915802
    2. ')' → logprob: -2.1272127628326416
    3. ')*(' → logprob: -9.502212524414062
    4. '*' → logprob: -9.627212524414062
    5. 't' → logprob: -10.252212524414062
    6. '*)' → logprob: -10.502212524414062
    7. ')t' → logprob: -10.627212524414062
    8. ')**' → logprob: -11.502212524414062
    9. ')#' → logprob: -11.502212524414062
    10. ' )' → logprob: -11.877212524414062

Token 2400: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03513704612851143
    2. 'v' → logprob: -3.6601369380950928
    3. '(v' → logprob: -5.410137176513672
    4. '1' → logprob: -5.660137176513672
    5. '((' → logprob: -8.285137176513672
    6. '(t' → logprob: -8.535137176513672
    7. ' t' → logprob: -8.535137176513672
    8. '(' → logprob: -9.660137176513672
    9. ' v' → logprob: -10.910137176513672
    10. ' (' → logprob: -10.910137176513672

Token 2401: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0014067888259888
    2. '+' → logprob: -2.001406669616699
    3. ',' → logprob: -2.251406669616699
    4. ' +' → logprob: -2.626406669616699
    5. '=' → logprob: -2.751406669616699
    6. '#' → logprob: -2.876406669616699
    7. '   ' → logprob: -3.126406669616699
    8. '-' → logprob: -3.876406669616699
    9. ' =' → logprob: -3.876406669616699
    10. ' -' → logprob: -4.251406669616699

Token 2402: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08353497833013535
    2. '%' → logprob: -3.3335349559783936
    3. ')%' → logprob: -4.458535194396973
    4. '+' → logprob: -5.083535194396973
    5. ',' → logprob: -5.208535194396973
    6. '-' → logprob: -6.083535194396973
    7. ' %' → logprob: -6.458535194396973
    8. ' ' → logprob: -6.708535194396973
    9. '),' → logprob: -6.708535194396973
    10. ' +' → logprob: -6.833535194396973

Token 2403: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.004126369021832943
    2. ' ' → logprob: -5.50412654876709
    3. ' ' → logprob: -10.25412654876709
    4. ')' → logprob: -12.00412654876709
    5. '```' → logprob: -13.87912654876709
    6. '(' → logprob: -14.25412654876709
    7. '_' → logprob: -14.50412654876709
    8. '36' → logprob: -14.56662654876709
    9. '460' → logprob: -14.75412654876709
    10. '`' → logprob: -14.81662654876709

Token 2404: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0003013809327967465
    2. ' ' → logprob: -8.125301361083984
    3. ' ' → logprob: -13.875301361083984
    4. '```' → logprob: -14.000301361083984
    5. '{' → logprob: -14.625301361083984
    6. '180' → logprob: -14.625301361083984
    7. '`' → logprob: -14.875301361083984
    8. '(' → logprob: -14.875301361083984
    9. '720' → logprob: -15.187801361083984
    10. ')' → logprob: -15.187801361083984

Token 2405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3489627540111542
    2. ')
' → logprob: -1.4739627838134766
    3. '):' → logprob: -3.4739627838134766
    4. '):
' → logprob: -4.098962783813477
    5. '   ' → logprob: -4.598962783813477
    6. ')
' → logprob: -5.598962783813477
    7. '#' → logprob: -7.223962783813477
    8. ')`
' → logprob: -7.348962783813477
    9. '):
' → logprob: -7.848962783813477
    10. ')**' → logprob: -7.973962783813477

Token 2406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1483875960111618
    2. ':' → logprob: -2.6483876705169678
    3. '
' → logprob: -4.148387432098389
    4. 'def' → logprob: -4.273387432098389
    5. ')' → logprob: -5.023387432098389
    6. ',' → logprob: -5.148387432098389
    7. '+' → logprob: -5.773387432098389
    8. '#' → logprob: -5.898387432098389
    9. ' =' → logprob: -6.023387432098389
    10. 'import' → logprob: -6.398387432098389

Token 2407: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08336696773767471
    2. 'import' → logprob: -3.708366870880127
    3. '
' → logprob: -3.958366870880127
    4. 'def' → logprob: -4.083366870880127
    5. 'from' → logprob: -4.583366870880127
    6. 'A' → logprob: -5.708366870880127
    7. '#' (adapté à ' #') → logprob: -6.083366870880127
    8. '```' → logprob: -6.833366870880127
    9. 'v' → logprob: -7.583366870880127
    10. '    
' → logprob: -7.958366870880127

Token 2408: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.220513716340065
    2. 'def' → logprob: -2.0955138206481934
    3. 'from' → logprob: -3.5955138206481934
    4. 'import' → logprob: -3.9705138206481934
    5. '
' → logprob: -4.470513820648193
    6. 'A' → logprob: -4.720513820648193
    7. '#' → logprob: -5.345513820648193
    8. '```' → logprob: -6.470513820648193
    9. 'for' → logprob: -8.095513343811035
    10. ' from' → logprob: -8.095513343811035

Token 2409: 'it' (ID: 278)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31545206904411316
    2. 'n' → logprob: -2.5654520988464355
    3. 'ur' → logprob: -2.6904520988464355
    4. 'm' → logprob: -3.5654520988464355
    5. 'u' → logprob: -3.5654520988464355
    6. 'it' → logprob: -4.1904520988464355
    7. 'nt' → logprob: -4.4404520988464355
    8. '=' → logprob: -5.0654520988464355
    9. 'lut' → logprob: -5.4404520988464355
    10. 'r' → logprob: -5.5654520988464355

Token 2410: ' difference' (ID: 9809)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0234848260879517
    2. 'from' → logprob: -1.1484848260879517
    3. 'delta' → logprob: -2.023484706878662
    4. 'def' → logprob: -3.273484706878662
    5. 'v' → logprob: -3.273484706878662
    6. 'import' → logprob: -3.523484706878662
    7. 'for' → logprob: -4.148484706878662
    8. 'a' → logprob: -4.523484706878662
    9. '#' → logprob: -4.523484706878662
    10. 'diff' → logprob: -4.898484706878662

Token 2411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8150328397750854
    2. '_s' → logprob: -1.9400328397750854
    3. 's' → logprob: -2.190032958984375
    4. '_v' → logprob: -2.440032958984375
    5. '_diff' → logprob: -3.065032958984375
    6. 'v' → logprob: -3.315032958984375
    7. 'diff' → logprob: -3.940032958984375
    8. 'A' → logprob: -4.065032958984375
    9. '```' → logprob: -4.065032958984375
    10. '=' → logprob: -4.440032958984375

Token 2412: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2584957778453827
    2. 'v' → logprob: -1.508495807647705
    3. 'abs' → logprob: -6.008495807647705
    4. ' (' → logprob: -6.383495807647705
    5. ' v' → logprob: -7.008495807647705
    6. '6' → logprob: -7.883495807647705
    7. '5' → logprob: -8.383495330810547
    8. '((' → logprob: -8.508495330810547
    9. '(abs' → logprob: -8.508495330810547
    10. '(' → logprob: -8.758495330810547

Token 2413: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01587821915745735
    2. '(v' → logprob: -5.015878200531006
    3. 's' → logprob: -5.765878200531006
    4. '5' → logprob: -6.265878200531006
    5. 'int' → logprob: -6.265878200531006
    6. 'vs' → logprob: -7.015878200531006
    7. '6' → logprob: -7.765878200531006
    8. ' v' → logprob: -8.640878677368164
    9. '   ' → logprob: -8.765878677368164
    10. 'round' → logprob: -9.140878677368164

Token 2414: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.006048955023288727
    2. '_m' → logprob: -5.131049156188965
    3. 's' → logprob: -10.006049156188965
    4. '_' → logprob: -10.131049156188965
    5. ' _' → logprob: -11.131049156188965
    6. 'm' → logprob: -11.631049156188965
    7. ')' → logprob: -12.631049156188965
    8. '   ' → logprob: -13.256049156188965
    9. '_h' → logprob: -13.506049156188965
    10. '```' → logprob: -13.631049156188965

Token 2415: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08907753229141235
    2. '-' → logprob: -2.4640774726867676
    3. '_' → logprob: -10.089077949523926
    4. ' -
' → logprob: -10.839077949523926
    5. '-v' → logprob: -11.214077949523926
    6. '_minus' → logprob: -11.339077949523926
    7. '-
' → logprob: -11.714077949523926
    8. ' ' → logprob: -11.714077949523926
    9. '_m' → logprob: -11.839077949523926
    10. '```' → logprob: -11.839077949523926

Token 2416: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0022658745292574167
    2. ' v' → logprob: -6.127265930175781
    3. 'm' → logprob: -9.502265930175781
    4. '(v' → logprob: -13.752265930175781
    5. ' ' → logprob: -14.002265930175781
    6. '   ' → logprob: -14.127265930175781
    7. ' m' → logprob: -14.502265930175781
    8. 'import' → logprob: -14.752265930175781
    9. '_v' → logprob: -14.877265930175781
    10. '	v' → logprob: -14.877265930175781

Token 2417: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.011047224514186382
    2. '_h' → logprob: -4.63604736328125
    3. 'm' → logprob: -7.13604736328125
    4. 'h' → logprob: -7.88604736328125
    5. '_s' → logprob: -9.63604736328125
    6. '_' → logprob: -10.51104736328125
    7. '   ' → logprob: -12.76104736328125
    8. 's' → logprob: -12.76104736328125
    9. ' _' → logprob: -12.76104736328125
    10. '_v' → logprob: -13.13604736328125

Token 2418: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3146345019340515
    2. ')*' → logprob: -1.3146345615386963
    3. ')
' → logprob: -7.564634323120117
    4. '   ' → logprob: -7.814634323120117
    5. ')#' → logprob: -9.064634323120117
    6. ')t' → logprob: -9.564634323120117
    7. '),' → logprob: -9.689634323120117
    8. ' -' → logprob: -9.939634323120117
    9. ' )' → logprob: -10.064634323120117
    10. ')*(' → logprob: -10.189634323120117

Token 2419: 't' (ID: 83)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008752484805881977
    2. ' v' → logprob: -4.758752346038818
    3. '(v' → logprob: -9.133752822875977
    4. '(' → logprob: -12.008752822875977
    5. ' (' → logprob: -12.008752822875977
    6. '1' → logprob: -12.883752822875977
    7. '6' → logprob: -13.133752822875977
    8. '	v' → logprob: -13.133752822875977
    9. '_v' → logprob: -13.633752822875977
    10. '   ' → logprob: -13.758752822875977

Token 2420: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9637050032615662
    2. '
' → logprob: -2.088705062866211
    3. ' -' → logprob: -2.088705062866211
    4. ',' → logprob: -2.463705062866211
    5. '=' → logprob: -2.713705062866211
    6. '   ' → logprob: -2.963705062866211
    7. '-' → logprob: -3.338705062866211
    8. '#' → logprob: -3.588705062866211
    9. 'diff' → logprob: -3.588705062866211
    10. 'def' → logprob: -4.338705062866211

Token 2421: ' k' (ID: 372)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2503868341445923
    2. ' (' → logprob: -1.8753868341445923
    3. '±' → logprob: -3.2503867149353027
    4. 'pm' → logprob: -4.750386714935303
    5. '((' → logprob: -5.375386714935303
    6. '+' → logprob: -5.625386714935303
    7. '(' → logprob: -6.125386714935303
    8. 'plus' → logprob: -6.250386714935303
    9. '+(' → logprob: -6.875386714935303
    10. '(n' → logprob: -7.125386714935303

Token 2422: '*' (ID: 9)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.2975198030471802
    2. ',' → logprob: -2.4225196838378906
    3. ' =' → logprob: -3.5475196838378906
    4. ' *' → logprob: -3.7975196838378906
    5. '_times' → logprob: -4.047519683837891
    6. '=' → logprob: -4.172519683837891
    7. ')' → logprob: -4.547519683837891
    8. '*(' → logprob: -4.547519683837891
    9. ' ' → logprob: -4.922519683837891
    10. '*' → logprob: -5.047519683837891

Token 2423: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -4.0126840758603066e-05
    2. '180' → logprob: -10.125040054321289
    3. '36' → logprob: -16.75004005432129
    4. '720' → logprob: -18.62504005432129
    5. '120' → logprob: -19.50004005432129
    6. '359' → logprob: -19.62504005432129
    7. '#' → logprob: -19.75004005432129
    8. '
' → logprob: -20.00004005432129
    9. '```' → logprob: -20.00004005432129
    10. 'int' → logprob: -20.75004005432129

Token 2424: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4582708179950714
    2. ' for' → logprob: -1.833270788192749
    3. ' =' → logprob: -2.708270788192749
    4. ',' → logprob: -2.958270788192749
    5. '=' → logprob: -3.333270788192749
    6. ')' → logprob: -4.458271026611328
    7. ' *' → logprob: -4.458271026611328
    8. '
' → logprob: -5.458271026611328
    9. '*' → logprob: -5.458271026611328
    10. '#' → logprob: -5.583271026611328

Token 2425: ' ±' (ID: 58882)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.10088109225034714
    2. ' (' → logprob: -2.6008810997009277
    3. '0' → logprob: -4.225881099700928
    4. '((' → logprob: -6.100881099700928
    5. 'x' → logprob: -6.475881099700928
    6. '(x' → logprob: -7.725881099700928
    7. '(n' → logprob: -7.850881099700928
    8. 'k' → logprob: -8.35088062286377
    9. 'pm' → logprob: -8.35088062286377
    10. '(' → logprob: -8.60088062286377

Token 2426: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6953893303871155
    2. ' (' → logprob: -0.9453893303871155
    3. '(v' → logprob: -2.8203892707824707
    4. ' ((' → logprob: -2.9453892707824707
    5. '(' → logprob: -8.445389747619629
    6. 'difference' → logprob: -9.945389747619629
    7. ' ' → logprob: -10.570389747619629
    8. '   ' → logprob: -10.820389747619629
    9. '(d' → logprob: -10.820389747619629
    10. '1' → logprob: -11.070389747619629

Token 2427: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011078591458499432
    2. '(v' → logprob: -4.511078357696533
    3. ' (' → logprob: -11.261078834533691
    4. ' v' → logprob: -11.261078834533691
    5. ')' → logprob: -14.386078834533691
    6. '   ' → logprob: -14.386078834533691
    7. ')v' → logprob: -14.511078834533691
    8. '1' → logprob: -15.011078834533691
    9. '	v' → logprob: -15.011078834533691
    10. '_v' → logprob: -15.261078834533691

Token 2428: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00011808603449026123
    2. 's' → logprob: -9.375118255615234
    3. 'v' → logprob: -12.375118255615234
    4. ')' → logprob: -12.375118255615234
    5. '_m' → logprob: -12.500118255615234
    6. '_' → logprob: -12.500118255615234
    7. '_v' → logprob: -12.750118255615234
    8. ' _' → logprob: -13.125118255615234
    9. '_h' → logprob: -13.375118255615234
    10. ''_' → logprob: -13.500118255615234

Token 2429: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005255933851003647
    2. '-' → logprob: -5.255255699157715
    3. ' ' → logprob: -11.755255699157715
    4. ')' → logprob: -12.130255699157715
    5. ' -
' → logprob: -13.505255699157715
    6. '_' → logprob: -13.755255699157715
    7. '-m' → logprob: -13.880255699157715
    8. '<|end|>' → logprob: -14.005255699157715
    9. ' ' → logprob: -14.130255699157715
    10. '   ' → logprob: -14.505255699157715

Token 2430: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006319015519693494
    2. ' v' → logprob: -7.375631809234619
    3. '(v' → logprob: -12.625632286071777
    4. '	v' → logprob: -14.375632286071777
    5. '
' → logprob: -15.125632286071777
    6. '   ' → logprob: -15.375632286071777
    7. ')v' → logprob: -15.375632286071777
    8. ' ' → logprob: -15.750632286071777
    9. ' ' → logprob: -16.00063133239746
    10. ')' → logprob: -16.25063133239746

Token 2431: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0037866546772420406
    2. 'h' → logprob: -5.628786563873291
    3. '_m' → logprob: -8.62878704071045
    4. '   ' → logprob: -13.25378704071045
    5. '
' → logprob: -13.62878704071045
    6. '	h' → logprob: -13.87878704071045
    7. '_s' → logprob: -14.00378704071045
    8. 'm' → logprob: -14.75378704071045
    9. ',h' → logprob: -14.75378704071045
    10. '_' → logprob: -14.87878704071045

Token 2432: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.00762189133092761
    2. ')' → logprob: -4.882621765136719
    3. ')t' → logprob: -11.882621765136719
    4. ')#' → logprob: -12.882621765136719
    5. ')
' → logprob: -13.632621765136719
    6. '))*' → logprob: -13.757621765136719
    7. '*)' → logprob: -13.882621765136719
    8. ')*(' → logprob: -14.257621765136719
    9. ')**' → logprob: -14.382621765136719
    10. 't' → logprob: -14.882621765136719

Token 2433: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004179217794444412
    2. '360' → logprob: -8.500417709350586
    3. ' t' → logprob: -9.750417709350586
    4. ')' → logprob: -9.875417709350586
    5. '(t' → logprob: -10.375417709350586
    6. 'v' → logprob: -10.500417709350586
    7. '1' → logprob: -11.000417709350586
    8. ')t' → logprob: -11.125417709350586
    9. 'k' → logprob: -12.750417709350586
    10. '(' → logprob: -13.500417709350586

Token 2434: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6225694417953491
    2. ' -' → logprob: -0.9975694417953491
    3. '-' → logprob: -2.6225695610046387
    4. '*' → logprob: -4.997569561004639
    5. '#' → logprob: -4.997569561004639
    6. '   ' → logprob: -6.122569561004639
    7. ' *' → logprob: -6.372569561004639
    8. ' +' → logprob: -6.622569561004639
    9. ' ' → logprob: -7.372569561004639
    10. ')-' → logprob: -7.497569561004639

Token 2435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17385351657867432
    2. 'def' → logprob: -2.1738533973693848
    3. '#' → logprob: -3.7988533973693848
    4. '
' → logprob: -5.298853397369385
    5. 'import' → logprob: -5.673853397369385
    6. 'from' → logprob: -5.673853397369385
    7. 'for' → logprob: -6.673853397369385
    8. ' def' → logprob: -6.673853397369385
    9. ' =' → logprob: -6.923853397369385
    10. '\' → logprob: -6.923853397369385

Token 2436: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11744467169046402
    2. 'def' → logprob: -3.7424447536468506
    3. '#' (adapté à ' #') → logprob: -3.8674447536468506
    4. '
' → logprob: -3.9924447536468506
    5. ')' → logprob: -4.9924445152282715
    6. '\n' → logprob: -5.6174445152282715
    7. '+' → logprob: -5.7424445152282715
    8. '<|end|>' → logprob: -5.9924445152282715
    9. '```' → logprob: -5.9924445152282715
    10. '[
' → logprob: -6.1174445152282715

Token 2437: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3597155809402466
    2. '   ' → logprob: -1.3597155809402466
    3. '
' → logprob: -1.6097155809402466
    4. 'def' → logprob: -1.8597155809402466
    5. ' for' → logprob: -3.609715461730957
    6. 'for' → logprob: -3.859715461730957
    7. ' def' → logprob: -4.234715461730957
    8. 'from' → logprob: -4.734715461730957
    9. '\' → logprob: -4.859715461730957
    10. '\n' → logprob: -4.859715461730957

Token 2438: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06995543837547302
    2. ' k' → logprob: -2.694955348968506
    3. '
' → logprob: -11.694955825805664
    4. 'all' → logprob: -13.444955825805664
    5. ' ' → logprob: -13.569955825805664
    6. ' ' → logprob: -13.694955825805664
    7. ' all' → logprob: -14.069955825805664
    8. '#' → logprob: -14.194955825805664
    9. '   ' → logprob: -14.444955825805664
    10. '(k' → logprob: -14.694955825805664

Token 2439: ' entier' (ID: 80473)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03017783910036087
    2. 'in' → logprob: -3.5301778316497803
    3. '=' → logprob: -8.65517807006836
    4. ' =' → logprob: -8.78017807006836
    5. ',' → logprob: -10.40517807006836
    6. ' ' → logprob: -11.65517807006836
    7. '	in' → logprob: -11.65517807006836
    8. ' ' → logprob: -11.90517807006836
    9. '_in' → logprob: -12.15517807006836
    10. 'from' → logprob: -12.28017807006836

Token 2440: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4357984960079193
    2. ':' → logprob: -1.9357985258102417
    3. '
' → logprob: -2.560798406600952
    4. '#' → logprob: -3.060798406600952
    5. ':
' → logprob: -3.435798406600952
    6. ',' → logprob: -4.060798645019531
    7. 'def' → logprob: -4.935798645019531
    8. ',
' → logprob: -5.810798645019531
    9. '\n' → logprob: -5.935798645019531
    10. ' for' → logprob: -6.060798645019531

Token 2441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02569526433944702
    2. '
' → logprob: -4.400695323944092
    3. 'def' → logprob: -5.150695323944092
    4. '```' → logprob: -6.150695323944092
    5. 'for' → logprob: -6.775695323944092
    6. 'from' → logprob: -6.900695323944092
    7. ' for' → logprob: -7.025695323944092
    8. '    
' → logprob: -7.775695323944092
    9. '#' → logprob: -8.150694847106934
    10. 'import' → logprob: -8.275694847106934

Token 2442: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029427366331219673
    2. 'def' → logprob: -3.9044272899627686
    3. 'from' → logprob: -6.029427528381348
    4. 'solutions' → logprob: -6.154427528381348
    5. '
' → logprob: -6.279427528381348
    6. 'import' → logprob: -7.154427528381348
    7. ' solutions' → logprob: -7.279427528381348
    8. 'for' → logprob: -8.029427528381348
    9. ' for' → logprob: -8.904427528381348
    10. ' from' → logprob: -9.029427528381348

Token 2443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01301856990903616
    2. '=' → logprob: -4.388018608093262
    3. ',' → logprob: -7.638018608093262
    4. ')' → logprob: -10.888018608093262
    5. ' ,' → logprob: -12.513018608093262
    6. 's' → logprob: -13.263018608093262
    7. ' =
' → logprob: -13.763018608093262
    8. ' ' → logprob: -14.263018608093262
    9. ' ' → logprob: -15.013018608093262
    10. '_' → logprob: -15.763018608093262

Token 2444: ' v' (ID: 323)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4341319501399994
    2. 'v' → logprob: -1.0591319799423218
    3. '(v' → logprob: -5.559132099151611
    4. '59' → logprob: -7.309132099151611
    5. '(' → logprob: -8.059131622314453
    6. 'Fraction' → logprob: -8.309131622314453
    7. '6' → logprob: -10.059131622314453
    8. '590' → logprob: -10.059131622314453
    9. 'Decimal' → logprob: -10.309131622314453
    10. 'int' → logprob: -10.559131622314453

Token 2445: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.003674067324027419
    2. '_' → logprob: -5.628674030303955
    3. ' _' → logprob: -10.128674507141113
    4. 's' → logprob: -10.378674507141113
    5. '_m' → logprob: -13.503674507141113
    6. '_
' → logprob: -14.128674507141113
    7. ' ' → logprob: -15.878674507141113
    8. '_,' → logprob: -16.128673553466797
    9. '=' → logprob: -16.253673553466797
    10. ' =' → logprob: -16.503673553466797

Token 2446: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011024831794202328
    2. '-' → logprob: -4.6360249519348145
    3. ' *' → logprob: -7.2610249519348145
    4. '<|end|>' → logprob: -7.8860249519348145
    5. '*' → logprob: -9.386024475097656
    6. ')' → logprob: -10.511024475097656
    7. ' ' → logprob: -10.761024475097656
    8. ',' → logprob: -10.761024475097656
    9. '<|end|>' → logprob: -11.886024475097656
    10. ' ' → logprob: -12.511024475097656

Token 2447: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.130576806142926e-05
    2. ' v' → logprob: -10.375031471252441
    3. '0' → logprob: -17.125030517578125
    4. '	v' → logprob: -18.375030517578125
    5. '$v' → logprob: -18.375030517578125
    6. '=v' → logprob: -18.500030517578125
    7. '(v' → logprob: -19.125030517578125
    8. ')v' → logprob: -19.875030517578125
    9. '_v' → logprob: -20.375030517578125
    10. '=' → logprob: -20.375030517578125

Token 2448: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.048588961362838745
    2. 'm' → logprob: -3.048588991165161
    3. 'м' → logprob: -14.048588752746582
    4. '_h' → logprob: -15.298588752746582
    5. '_s' → logprob: -16.1735897064209
    6. ' m' → logprob: -16.2985897064209
    7. '=' → logprob: -16.7985897064209
    8. '	m' → logprob: -16.9235897064209
    9. '.m' → logprob: -17.2985897064209
    10. '_' → logprob: -17.5485897064209

Token 2449: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3626957833766937
    2. '   ' → logprob: -1.7376958131790161
    3. '<|end|>' → logprob: -2.4876956939697266
    4. 'B' → logprob: -4.112695693969727
    5. ' B' → logprob: -4.362695693969727
    6. '<|end|>' → logprob: -5.237695693969727
    7. ')' → logprob: -5.862695693969727
    8. ',B' → logprob: -6.362695693969727
    9. ' ' → logprob: -6.737695693969727
    10. ' ,' → logprob: -7.237695693969727

Token 2450: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8129405975341797
    2. '<|end|>' → logprob: -1.1879405975341797
    3. '
' → logprob: -1.5629405975341797
    4. '=' → logprob: -4.56294059753418
    5. '   ' → logprob: -5.06294059753418
    6. '#' → logprob: -5.06294059753418
    7. '<|end|>' → logprob: -5.18794059753418
    8. ',
' → logprob: -5.31294059753418
    9. ')' → logprob: -5.31294059753418
    10. '```' → logprob: -7.81294059753418

Token 2451: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0028381571173667908
    2. 'Fraction' → logprob: -6.502838134765625
    3. '59' → logprob: -6.877838134765625
    4. 'int' → logprob: -9.752838134765625
    5. 'fraction' → logprob: -10.002838134765625
    6. '6' → logprob: -10.127838134765625
    7. '590' → logprob: -10.752838134765625
    8. 'A' → logprob: -10.877838134765625
    9. 'frac' → logprob: -11.002838134765625
    10. '=' → logprob: -11.127838134765625

Token 2452: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0013042837381362915
    2. 'Fraction' → logprob: -8.251304626464844
    3. '(' → logprob: -8.376304626464844
    4. 'A' → logprob: -8.501304626464844
    5. '6' → logprob: -8.501304626464844
    6. '0' → logprob: -9.376304626464844
    7. 'frac' → logprob: -9.751304626464844
    8. '59' → logprob: -9.876304626464844
    9. 'fraction' → logprob: -9.876304626464844
    10. '=' → logprob: -10.626304626464844

Token 2453: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002406090497970581
    2. '9' → logprob: -9.375240325927734
    3. '.
' → logprob: -9.625240325927734
    4. 'point' → logprob: -9.875240325927734
    5. '   ' → logprob: -11.250240325927734
    6. '
' → logprob: -12.750240325927734
    7. '\.' → logprob: -12.875240325927734
    8. ' .' → logprob: -13.000240325927734
    9. ',' → logprob: -13.750240325927734
    10. '#' → logprob: -13.750240325927734

Token 2454: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.054500666621607e-06
    2. '900' → logprob: -12.75000286102295
    3. '899' → logprob: -17.125003814697266
    4. '90' → logprob: -17.250003814697266
    5. '.' → logprob: -17.375003814697266
    6. '901' → logprob: -19.375003814697266
    7. ',' → logprob: -19.625003814697266
    8. '۹' → logprob: -19.750003814697266
    9. '999' → logprob: -20.000003814697266
    10. '٩' → logprob: -20.000003814697266

Token 2455: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5838962197303772
    2. '<|end|>' → logprob: -1.3338961601257324
    3. ')' → logprob: -2.5838961601257324
    4. '
' → logprob: -3.3338961601257324
    5. ',' → logprob: -3.4588961601257324
    6. '<|end|>' → logprob: -3.7088961601257324
    7. '```' → logprob: -6.083896160125732
    8. 'B' → logprob: -6.333896160125732
    9. '    
' → logprob: -6.708896160125732
    10. '#' → logprob: -6.958896160125732

Token 2456: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3552549481391907
    2. '   ' → logprob: -1.230254888534546
    3. ' B' → logprob: -5.230255126953125
    4. '```' → logprob: -6.855255126953125
    5. '	B' → logprob: -8.730255126953125
    6. ' ' → logprob: -9.480255126953125
    7. '``' → logprob: -11.105255126953125
    8. ',' → logprob: -11.230255126953125
    9. ')' → logprob: -11.230255126953125
    10. '   ' → logprob: -11.355255126953125

Token 2457: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.01010818686336279
    2. ' B' → logprob: -4.76010799407959
    3. '   ' → logprob: -6.51010799407959
    4. '```' → logprob: -13.01010799407959
    5. '	B' → logprob: -13.88510799407959
    6. ' ' → logprob: -15.26010799407959
    7. 'from' → logprob: -15.51010799407959
    8. ' ' → logprob: -16.010108947753906
    9. '   ' → logprob: -16.135108947753906
    10. '`' → logprob: -16.135108947753906

Token 2458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009756677784025669
    2. '=' → logprob: -4.634756565093994
    3. ',' → logprob: -15.384757041931152
    4. ' ' → logprob: -15.509757041931152
    5. ')' → logprob: -15.884757041931152
    6. 's' → logprob: -17.259756088256836
    7. ' ' → logprob: -17.759756088256836
    8. '   ' → logprob: -17.884756088256836
    9. ' =
' → logprob: -18.009756088256836
    10. '_' → logprob: -18.009756088256836

Token 2459: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02611055038869381
    2. ' v' → logprob: -3.7761106491088867
    3. '(v' → logprob: -6.026110649108887
    4. '(' → logprob: -8.026110649108887
    5. ' (' → logprob: -9.401110649108887
    6. '6' → logprob: -10.276110649108887
    7. '   ' → logprob: -14.026110649108887
    8. '	v' → logprob: -14.526110649108887
    9. '_v' → logprob: -15.026110649108887
    10. ' ' → logprob: -15.401110649108887

Token 2460: '_s' (ID: 1278)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.1017724797129631
    2. '_s' → logprob: -2.3517725467681885
    3. 'h' → logprob: -6.476772308349609
    4. 's' → logprob: -10.60177230834961
    5. '_' → logprob: -15.35177230834961
    6. '_a' → logprob: -15.97677230834961
    7. '_c' → logprob: -16.47677230834961
    8. '	h' → logprob: -16.72677230834961
    9. '
' → logprob: -16.85177230834961
    10. '\' → logprob: -16.97677230834961

Token 2461: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03365088626742363
    2. '-' → logprob: -3.4086508750915527
    3. ' ' → logprob: -13.033651351928711
    4. '_' → logprob: -14.033651351928711
    5. ')' → logprob: -14.783651351928711
    6. ' ' → logprob: -14.908651351928711
    7. ' -
' → logprob: -15.283651351928711
    8. '<|end|>' → logprob: -15.283651351928711
    9. '   ' → logprob: -15.408651351928711
    10. '  ' → logprob: -16.28365135192871

Token 2462: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0008725132793188095
    2. ' v' → logprob: -7.625872611999512
    3. '(v' → logprob: -7.875872611999512
    4. '(' → logprob: -13.000872611999512
    5. ' (' → logprob: -13.375872611999512
    6. '   ' → logprob: -14.625872611999512
    7. '	v' → logprob: -15.625872611999512
    8. ' ' → logprob: -16.375871658325195
    9. '_v' → logprob: -16.750871658325195
    10. '((' → logprob: -18.250871658325195

Token 2463: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0007114782347343862
    2. 'h' → logprob: -7.250711441040039
    3. '_m' → logprob: -13.875711441040039
    4. '_s' → logprob: -14.750711441040039
    5. '   ' → logprob: -17.50071144104004
    6. '	h' → logprob: -17.50071144104004
    7. 'm' → logprob: -17.75071144104004
    8. '/h' → logprob: -17.87571144104004
    9. '
' → logprob: -18.00071144104004
    10. '           ' → logprob: -18.25071144104004

Token 2464: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2329862415790558
    2. '
' → logprob: -1.6079862117767334
    3. '```' → logprob: -5.7329864501953125
    4. '    
' → logprob: -6.9829864501953125
    5. '
' → logprob: -7.3579864501953125
    6. 'def' → logprob: -7.8579864501953125
    7. '#' → logprob: -7.9829864501953125
    8. 'from' → logprob: -7.9829864501953125
    9. 'import' → logprob: -8.107986450195312
    10. ')' → logprob: -8.232986450195312

Token 2465: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02135602943599224
    2. '
' → logprob: -4.646356105804443
    3. '#' → logprob: -4.896356105804443
    4. ',' → logprob: -6.771356105804443
    5. ')' → logprob: -6.896356105804443
    6. ':' → logprob: -7.896356105804443
    7. '```' → logprob: -8.021355628967285
    8. ' =' → logprob: -8.396355628967285
    9. 'import' → logprob: -8.521355628967285
    10. '=' → logprob: -8.646355628967285

Token 2466: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.174784317612648
    2. '6' → logprob: -1.9247843027114868
    3. ' (' → logprob: -4.549784183502197
    4. '1' → logprob: -6.924784183502197
    5. 'v' → logprob: -7.174784183502197
    6. ' ' → logprob: -7.299784183502197
    7. '(v' → logprob: -7.549784183502197
    8. '360' → logprob: -7.674784183502197
    9. '5' → logprob: -8.799784660339355
    10. '((' → logprob: -9.174784660339355

Token 2467: '6' (ID: 21)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16252119839191437
    2. '6' → logprob: -2.2875211238861084
    3. '5' → logprob: -3.0375211238861084
    4. '0' → logprob: -9.412521362304688
    5. ' (' → logprob: -9.412521362304688
    6. '((' → logprob: -9.537521362304688
    7. '(H' → logprob: -9.662521362304688
    8. '(B' → logprob: -9.912521362304688
    9. '36' → logprob: -10.412521362304688
    10. '360' → logprob: -11.037521362304688

Token 2468: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5976685881614685
    2. 'import' → logprob: -1.5976686477661133
    3. 'from' → logprob: -2.8476686477661133
    4. '
' → logprob: -3.2226686477661133
    5. '#' → logprob: -3.4726686477661133
    6. '<|end|>' → logprob: -3.5976686477661133
    7. ')' → logprob: -3.7226686477661133
    8. 'def' → logprob: -3.8476686477661133
    9. '```' → logprob: -4.722668647766113
    10. ',' → logprob: -5.222668647766113

Token 2469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2160068303346634
    2. '(' → logprob: -1.716006875038147
    3. ' ' → logprob: -4.591006755828857
    4. ' (' → logprob: -5.466006755828857
    5. '0' → logprob: -10.091007232666016
    6. 'v' → logprob: -11.091007232666016
    7. '\' → logprob: -11.091007232666016
    8. '   ' → logprob: -12.216007232666016
    9. 'frac' → logprob: -12.216007232666016
    10. '(v' → logprob: -12.341007232666016

Token 2470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.388213574886322
    2. '(' → logprob: -1.1382136344909668
    3. '0' → logprob: -7.138213634490967
    4. '(v' → logprob: -8.388213157653809
    5. 'v' → logprob: -8.638213157653809
    6. ' (' → logprob: -9.388213157653809
    7. ' ' → logprob: -10.013213157653809
    8. '(t' → logprob: -13.013213157653809
    9. '((' → logprob: -13.138213157653809
    10. '(s' → logprob: -13.513213157653809

Token 2471: '/(' (ID: 27334)
  Prédit: '/('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/(' → logprob: -0.3869122266769409
    2. '/' → logprob: -1.136912226676941
    3. ' /' → logprob: -10.76191234588623
    4. '/
' → logprob: -11.51191234588623
    5. '/
/' → logprob: -13.01191234588623
    6. '\/' → logprob: -13.01191234588623
    7. '0' → logprob: -13.26191234588623
    8. '(' → logprob: -14.13691234588623
    9. '```' → logprob: -14.51191234588623
    10. '/
' → logprob: -14.63691234588623

Token 2472: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001874262816272676
    2. ' (' → logprob: -6.3768744468688965
    3. '(H' → logprob: -8.751873970031738
    4. '10' → logprob: -11.501873970031738
    5. '0' → logprob: -12.751873970031738
    6. ' ' → logprob: -15.001873970031738
    7. '(int' → logprob: -15.376873970031738
    8. '   ' → logprob: -15.876873970031738
    9. '{' → logprob: -15.876873970031738
    10. 'H' → logprob: -17.126874923706055

Token 2473: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.20269055664539337
    2. '*' → logprob: -1.702690601348877
    3. ' *' → logprob: -7.077690601348877
    4. ' H' → logprob: -8.202690124511719
    5. '10' → logprob: -9.827690124511719
    6. '0' → logprob: -10.452690124511719
    7. '(H' → logprob: -10.452690124511719
    8. '/H' → logprob: -10.952690124511719
    9. '#' → logprob: -11.952690124511719
    10. '000' → logprob: -12.202690124511719

Token 2474: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002964150160551071
    2. ')
' → logprob: -6.002964019775391
    3. '   ' → logprob: -8.37796401977539
    4. ')
' → logprob: -8.62796401977539
    5. ' )' → logprob: -10.37796401977539
    6. ')

' → logprob: -11.50296401977539
    7. '))' → logprob: -11.62796401977539
    8. ')

' → logprob: -12.50296401977539
    9. '#' → logprob: -12.62796401977539
    10. ')`
' → logprob: -12.62796401977539

Token 2475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.623100996017456
    2. '
' → logprob: -0.873100996017456
    3. 'def' → logprob: -3.373100996017456
    4. '```' → logprob: -5.123101234436035
    5. '    
' → logprob: -5.998101234436035
    6. ' def' → logprob: -7.748101234436035
    7. '#' → logprob: -7.873101234436035
    8. 'from' → logprob: -8.123101234436035
    9. 'for' → logprob: -8.123101234436035
    10. 'solutions' → logprob: -8.373101234436035

Token 2476: ' candidates' (ID: 18116)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.8851624727249146
    2. '   ' → logprob: -1.2601624727249146
    3. 'results' → logprob: -1.7601624727249146
    4. 'def' → logprob: -3.260162353515625
    5. 'from' → logprob: -3.385162353515625
    6. 'import' → logprob: -3.635162353515625
    7. 'possible' → logprob: -4.635162353515625
    8. '```' → logprob: -5.010162353515625
    9. 'times' → logprob: -5.510162353515625
    10. 'result' → logprob: -5.635162353515625

Token 2477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11311830580234528
    2. '=' → logprob: -2.2381184101104736
    3. '=[]' → logprob: -8.238118171691895
    4. 's' → logprob: -11.988118171691895
    5. ':' → logprob: -12.363118171691895
    6. '=[]
' → logprob: -12.488118171691895
    7. ',' → logprob: -12.488118171691895
    8. '[]' → logprob: -13.363118171691895
    9. '_' → logprob: -13.488118171691895
    10. ')' → logprob: -13.613118171691895

Token 2478: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00013333676906768233
    2. 'set' → logprob: -9.750133514404297
    3. ' []' → logprob: -10.000133514404297
    4. '[]
' → logprob: -10.500133514404297
    5. '[]

' → logprob: -13.625133514404297
    6. '[]"' → logprob: -14.750133514404297
    7. '[' → logprob: -15.000133514404297
    8. '[]}' → logprob: -16.000133514404297
    9. '[])' → logprob: -17.375133514404297
    10. '{}' → logprob: -18.375133514404297

Token 2479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17691931128501892
    2. 'for' → logprob: -1.9269193410873413
    3. '
' → logprob: -4.301919460296631
    4. '```' → logprob: -6.926919460296631
    5. 'def' → logprob: -7.051919460296631
    6. 'k' → logprob: -7.426919460296631
    7. '    
' → logprob: -8.426918983459473
    8. ' for' → logprob: -9.176918983459473
    9. 'from' → logprob: -9.301918983459473
    10. 'max' → logprob: -9.551918983459473

Token 2480: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4232620298862457
    2. '   ' → logprob: -1.1732620000839233
    3. 'from' → logprob: -4.048262119293213
    4. 'k' → logprob: -4.298262119293213
    5. 'def' → logprob: -5.923262119293213
    6. 'max' → logprob: -7.173262119293213
    7. 'import' → logprob: -7.423262119293213
    8. '```' → logprob: -7.798262119293213
    9. '
' → logprob: -9.173261642456055
    10. ' for' → logprob: -9.298261642456055

Token 2481: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09211423993110657
    2. '   ' → logprob: -2.717114210128784
    3. 'k' → logprob: -3.967114210128784
    4. 'def' → logprob: -6.342114448547363
    5. 'max' → logprob: -7.592114448547363
    6. 'from' → logprob: -7.717114448547363
    7. '
' → logprob: -9.342114448547363
    8. '#' → logprob: -9.717114448547363
    9. ' for' → logprob: -9.717114448547363
    10. '```' → logprob: -9.842114448547363

Token 2482: ' considère' (ID: 176437)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19936180114746094
    2. ' for' → logprob: -1.824361801147461
    3. 'from' → logprob: -4.449361801147461
    4. 'import' → logprob: -5.074361801147461
    5. 'def' → logprob: -7.199361801147461
    6. ' from' → logprob: -8.449361801147461
    7. 'range' → logprob: -8.449361801147461
    8. '#' → logprob: -9.074361801147461
    9. '
' → logprob: -9.574361801147461
    10. '   ' → logprob: -9.824361801147461

Token 2483: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3242626488208771
    2. ' k' → logprob: -1.4492626190185547
    3. ' for' → logprob: -4.199262619018555
    4. 'for' → logprob: -4.574262619018555
    5. '   ' → logprob: -4.824262619018555
    6. 'max' → logprob: -5.449262619018555
    7. ' max' → logprob: -5.824262619018555
    8. 'def' → logprob: -8.199262619018555
    9. ' ' → logprob: -8.449262619018555
    10. 'range' → logprob: -8.449262619018555

Token 2484: '2' (ID: 17)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0932999849319458
    2. 'for' → logprob: -2.5932998657226562
    3. 'max' → logprob: -4.718299865722656
    4. 'range' → logprob: -6.093299865722656
    5. 'abs' → logprob: -6.468299865722656
    6. 'def' → logprob: -7.968299865722656
    7. ' for' → logprob: -8.468299865722656
    8. 't' → logprob: -8.468299865722656
    9. 'K' → logprob: -8.718299865722656
    10. ' k' → logprob: -8.843299865722656

Token 2485: ' cas' (ID: 2108)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45587673783302307
    2. '
' → logprob: -1.7058767080307007
    3. '   ' → logprob: -2.0808768272399902
    4. ' for' → logprob: -3.0808768272399902
    5. ' *' → logprob: -5.83087682723999
    6. '       ' → logprob: -6.08087682723999
    7. '#' → logprob: -6.45587682723999
    8. 'import' → logprob: -6.45587682723999
    9. '    
' → logprob: -7.08087682723999
    10. 'k' → logprob: -7.83087682723999

Token 2486: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14235882461071014
    2. 'for' → logprob: -2.2673587799072266
    3. ' for' → logprob: -3.6423587799072266
    4. ':' → logprob: -6.267358779907227
    5. '
' → logprob: -7.517358779907227
    6. '    
' → logprob: -8.517358779907227
    7. '#' → logprob: -9.267358779907227
    8. ':
' → logprob: -9.642358779907227
    9. '	for' → logprob: -9.767358779907227
    10. '\t' → logprob: -11.892358779907227

Token 2487: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004293580132070929
    2. 'sign' → logprob: -8.625429153442383
    3. 'a' → logprob: -9.875429153442383
    4. 'eq' → logprob: -10.375429153442383
    5. 'm' → logprob: -10.750429153442383
    6. 't' → logprob: -11.250429153442383
    7. 's' → logprob: -11.375429153442383
    8. 'c' → logprob: -11.500429153442383
    9. 'pos' → logprob: -11.750429153442383
    10. 'p' → logprob: -12.000429153442383

Token 2488: ' :' (ID: 712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6984279751777649
    2. 'for' → logprob: -1.1984279155731201
    3. ' for' → logprob: -2.19842791557312
    4. 'in' → logprob: -2.69842791557312
    5. ' =' → logprob: -5.198428153991699
    6. '=' → logprob: -5.448428153991699
    7. 'range' → logprob: -5.448428153991699
    8. ' range' → logprob: -5.948428153991699
    9. ':' → logprob: -6.323428153991699
    10. '   ' → logprob: -6.573428153991699

Token 2489: ' +' (ID: 659)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3227255344390869
    2. 'for' → logprob: -1.572725534439087
    3. ' for' → logprob: -3.072725534439087
    4. ' k' → logprob: -4.447725296020508
    5. '0' → logprob: -4.822725296020508
    6. '   ' → logprob: -7.322725296020508
    7. 'from' → logprob: -7.572725296020508
    8. 'range' → logprob: -7.822725296020508
    9. '-' → logprob: -8.322725296020508
    10. ' range' → logprob: -9.197725296020508

Token 2490: ' et' (ID: 859)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48033225536346436
    2. 'range' → logprob: -1.8553322553634644
    3. '0' → logprob: -2.105332374572754
    4. '-' → logprob: -3.105332374572754
    5. 'k' → logprob: -3.355332374572754
    6. '=' → logprob: -5.105332374572754
    7. 'for' → logprob: -5.605332374572754
    8. '<|end|>' → logprob: -5.730332374572754
    9. 'from' → logprob: -6.355332374572754
    10. 'import' → logprob: -6.855332374572754

Token 2491: ' -
' (ID: 27418)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -8.554343366995454e-05
    2. ' -' → logprob: -10.125085830688477
    3. '−' → logprob: -10.875085830688477
    4. '\-' → logprob: -11.125085830688477
    5. '1' → logprob: -11.875085830688477
    6. '=' → logprob: -12.875085830688477
    7. '–' → logprob: -14.750085830688477
    8. '-,' → logprob: -15.250085830688477
    9. '0' → logprob: -15.500085830688477
    10. '-=' → logprob: -15.500085830688477

Token 2492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9115549325942993
    2. 'for' → logprob: -1.1615549325942993
    3. ' for' → logprob: -1.7865549325942993
    4. '
' → logprob: -2.1615548133850098
    5. '```' → logprob: -6.66155481338501
    6. '    
' → logprob: -7.91155481338501
    7. ':' → logprob: -8.036555290222168
    8. '#' → logprob: -9.411555290222168
    9. ',' → logprob: -9.911555290222168
    10. '  
' → logprob: -10.036555290222168

Token 2493: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.141399085521698
    2. '   ' → logprob: -2.1413991451263428
    3. 'k' → logprob: -4.891398906707764
    4. '
' → logprob: -5.891398906707764
    5. ' for' → logprob: -6.391398906707764
    6. 'from' → logprob: -6.891398906707764
    7. 'max' → logprob: -7.141398906707764
    8. 'import' → logprob: -8.391399383544922
    9. '```' → logprob: -9.016399383544922
    10. '    
' → logprob: -9.266399383544922

Token 2494: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08115841448307037
    2. '   ' → logprob: -3.081158399581909
    3. '
' → logprob: -3.581158399581909
    4. ' for' → logprob: -5.581158638000488
    5. 'k' → logprob: -8.206158638000488
    6. '    
' → logprob: -9.706158638000488
    7. 'range' → logprob: -10.331158638000488
    8. '```' → logprob: -11.081158638000488
    9. '#' → logprob: -11.456158638000488
    10. 'from' → logprob: -11.831158638000488

Token 2495: ' cherche' (ID: 52345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2714341878890991
    2. ' for' → logprob: -1.5214341878890991
    3. '=' → logprob: -5.771434307098389
    4. 'def' → logprob: -5.771434307098389
    5. '   ' → logprob: -6.021434307098389
    6. '
' → logprob: -6.146434307098389
    7. 'import' → logprob: -6.271434307098389
    8. ' =' → logprob: -6.271434307098389
    9. 'range' → logprob: -6.521434307098389
    10. '#' → logprob: -7.271434307098389

Token 2496: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1273077130317688
    2. 'for' → logprob: -2.877307653427124
    3. ' k' → logprob: -3.127307653427124
    4. ' for' → logprob: -4.252307891845703
    5. 't' → logprob: -5.502307891845703
    6. ' t' → logprob: -7.252307891845703
    7. '   ' → logprob: -9.502307891845703
    8. 'abs' → logprob: -10.252307891845703
    9. ' ' → logprob: -10.377307891845703
    10. 'from' → logprob: -10.377307891845703

Token 2497: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20097678899765015
    2. ' for' → logprob: -2.200976848602295
    3. '   ' → logprob: -3.950976848602295
    4. '
' → logprob: -4.450976848602295
    5. 'from' → logprob: -4.450976848602295
    6. 'k' → logprob: -4.575976848602295
    7. '=' → logprob: -4.825976848602295
    8. ' =' → logprob: -5.950976848602295
    9. 'import' → logprob: -6.575976848602295
    10. ' k' → logprob: -6.700976848602295

Token 2498: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008930678479373455
    2. ' k' → logprob: -4.758930683135986
    3. 'all' → logprob: -9.508930206298828
    4. '(k' → logprob: -10.008930206298828
    5. '(' → logprob: -10.133930206298828
    6. 'each' → logprob: -10.383930206298828
    7. 't' → logprob: -10.758930206298828
    8. '_k' → logprob: -11.008930206298828
    9. 'i' → logprob: -11.633930206298828
    10. '1' → logprob: -11.883930206298828

Token 2499: ' entier' (ID: 80473)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2530730664730072
    2. 'in' → logprob: -1.5030730962753296
    3. '1' → logprob: -7.628073215484619
    4. '0' → logprob: -8.503072738647461
    5. 'k' → logprob: -8.878072738647461
    6. 'range' → logprob: -8.878072738647461
    7. ' ' → logprob: -10.878072738647461
    8. '=' → logprob: -11.003072738647461
    9. 'from' → logprob: -11.128072738647461
    10. 's' → logprob: -11.128072738647461

Token 2500: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8765114545822144
    2. '   ' → logprob: -1.0015114545822144
    3. '
' → logprob: -2.251511573791504
    4. ':
' → logprob: -3.126511573791504
    5. 'for' → logprob: -3.751511573791504
    6. ' for' → logprob: -4.001511573791504
    7. '=' → logprob: -5.001511573791504
    8. '    
' → logprob: -5.251511573791504
    9. ',' → logprob: -5.626511573791504
    10. '\n' → logprob: -6.376511573791504

Token 2501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6066988110542297
    2. 'for' → logprob: -1.231698751449585
    3. ' for' → logprob: -1.856698751449585
    4. '
' → logprob: -5.481698989868164
    5. '```' → logprob: -6.356698989868164
    6. 'k' → logprob: -7.731698989868164
    7. ' k' → logprob: -8.481698989868164
    8. 'from' → logprob: -9.106698989868164
    9. 'import' → logprob: -9.856698989868164
    10. '`' → logprob: -10.981698989868164

Token 2502: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38353079557418823
    2. '   ' → logprob: -2.133530855178833
    3. ' for' → logprob: -2.133530855178833
    4. '```' → logprob: -2.633530855178833
    5. 'from' → logprob: -5.008530616760254
    6. 'k' → logprob: -6.633530616760254
    7. 'range' → logprob: -8.133530616760254
    8. '``' → logprob: -8.508530616760254
    9. ' k' → logprob: -8.633530616760254
    10. ' ' → logprob: -8.883530616760254

Token 2503: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5423712730407715
    2. 'k' → logprob: -1.0423712730407715
    3. ' for' → logprob: -3.2923712730407715
    4. '   ' → logprob: -4.0423712730407715
    5. 'from' → logprob: -5.4173712730407715
    6. ' k' → logprob: -6.2923712730407715
    7. '-' → logprob: -7.1673712730407715
    8. 'max' → logprob: -7.2923712730407715
    9. 'import' → logprob: -7.2923712730407715
    10. '```' → logprob: -7.4173712730407715

Token 2504: ' t' (ID: 260)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2641773223876953
    2. '*t' → logprob: -2.0141773223876953
    3. 't' → logprob: -3.5141773223876953
    4. ' t' → logprob: -4.014177322387695
    5. ' =' → logprob: -4.389177322387695
    6. '*' → logprob: -4.764177322387695
    7. ',' → logprob: -4.889177322387695
    8. ' !=' → logprob: -5.014177322387695
    9. '=' → logprob: -5.139177322387695
    10. ' ==' → logprob: -5.764177322387695

Token 2505: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10830622166395187
    2. '*' → logprob: -2.4833061695098877
    3. ' =' → logprob: -4.858306407928467
    4. '=' → logprob: -5.358306407928467
    5. '*t' → logprob: -6.233306407928467
    6. ' -' → logprob: -6.733306407928467
    7. ' ==' → logprob: -6.983306407928467
    8. '*k' → logprob: -7.233306407928467
    9. '==' → logprob: -7.733306407928467
    10. '*num' → logprob: -8.358305931091309

Token 2506: ' k' (ID: 372)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0966901034116745
    2. 'k' → logprob: -2.5966901779174805
    3. ' B' → logprob: -4.2216901779174805
    4. '(B' → logprob: -6.0966901779174805
    5. ' k' → logprob: -7.8466901779174805
    6. '360' → logprob: -8.72169017791748
    7. ' (' → logprob: -9.47169017791748
    8. '(k' → logprob: -10.22169017791748
    9. '(' → logprob: -10.72169017791748
    10. '   ' → logprob: -10.97169017791748

Token 2507: ' ' (ID: 220)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.029582928866147995
    2. ' *' → logprob: -3.654582977294922
    3. '360' → logprob: -6.279582977294922
    4. ',' → logprob: -7.279582977294922
    5. '`' → logprob: -9.029582977294922
    6. '<|end|>' → logprob: -9.154582977294922
    7. ' ' → logprob: -9.904582977294922
    8. '\t' → logprob: -10.154582977294922
    9. '<|end|>' → logprob: -10.154582977294922
    10. '```' → logprob: -10.279582977294922

Token 2508: '360' (ID: 9870)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10596762597560883
    2. '360' → logprob: -2.3559675216674805
    3. ' *' → logprob: -5.3559675216674805
    4. ',' → logprob: -8.10596752166748
    5. '=' → logprob: -8.35596752166748
    6. '`' → logprob: -9.10596752166748
    7. '   ' → logprob: -9.35596752166748
    8. '\' → logprob: -9.48096752166748
    9. '```' → logprob: -9.85596752166748
    10. '\t' → logprob: -10.23096752166748

Token 2509: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0954832136631012
    2. ' =' → logprob: -2.4704833030700684
    3. '<|end|>' → logprob: -6.345483303070068
    4. ')' → logprob: -6.720483303070068
    5. ' ==' → logprob: -7.470483303070068
    6. ' !=' → logprob: -7.595483303070068
    7. '==' → logprob: -7.720483303070068
    8. '!=' → logprob: -7.845483303070068
    9. '<|end|>' → logprob: -7.970483303070068
    10. 'for' → logprob: -8.22048282623291

Token 2510: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03795357793569565
    2. ' B' → logprob: -3.4129536151885986
    3. '(' → logprob: -6.6629533767700195
    4. '(B' → logprob: -6.9129533767700195
    5. ' (' → logprob: -7.2879533767700195
    6. 'A' → logprob: -7.7879533767700195
    7. '±' → logprob: -7.9129533767700195
    8. '+' → logprob: -8.41295337677002
    9. 'pm' → logprob: -9.78795337677002
    10. '+B' → logprob: -10.16295337677002

Token 2511: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.23597341775894165
    2. ' t' → logprob: -1.8609733581542969
    3. ' *' → logprob: -3.360973358154297
    4. '*' → logprob: -4.235973358154297
    5. '*t' → logprob: -5.235973358154297
    6. '_t' → logprob: -8.735973358154297
    7. ' ' → logprob: -12.360973358154297
    8. '	t' → logprob: -12.485973358154297
    9. 'times' → logprob: -12.485973358154297
    10. ' ' → logprob: -12.610973358154297

Token 2512: ' =>' (ID: 871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23047290742397308
    2. '<|end|>' → logprob: -2.8554728031158447
    3. ' or' → logprob: -3.6054728031158447
    4. ',' → logprob: -3.8554728031158447
    5. '\n' → logprob: -3.8554728031158447
    6. '   ' → logprob: -4.105473041534424
    7. '<|end|>' → logprob: -4.355473041534424
    8. '*' → logprob: -4.855473041534424
    9. '#' → logprob: -5.105473041534424
    10. '=' → logprob: -5.230473041534424

Token 2513: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2166279554367065
    2. 'for' → logprob: -1.7166279554367065
    3. ' k' → logprob: -2.216628074645996
    4. 'k' → logprob: -2.466628074645996
    5. ' t' → logprob: -2.716628074645996
    6. ' if' → logprob: -2.841628074645996
    7. 'if' → logprob: -2.966628074645996
    8. ' (' → logprob: -3.091628074645996
    9. '   ' → logprob: -3.216628074645996
    10. 't' → logprob: -3.841628074645996

Token 2514: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08191446959972382
    2. 't' → logprob: -2.9569144248962402
    3. '(A' → logprob: -3.8319144248962402
    4. 'k' → logprob: -5.95691442489624
    5. ' A' → logprob: -7.20691442489624
    6. ')' → logprob: -7.20691442489624
    7. ' (' → logprob: -8.206914901733398
    8. '1' → logprob: -8.581914901733398
    9. ' t' → logprob: -9.206914901733398
    10. 'B' → logprob: -9.206914901733398

Token 2515: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0073470198549330235
    2. '-' → logprob: -5.382347106933594
    3. ' *' → logprob: -6.757347106933594
    4. '*' → logprob: -7.882347106933594
    5. ' ' → logprob: -7.882347106933594
    6. ' t' → logprob: -8.382347106933594
    7. ')' → logprob: -8.382347106933594
    8. 't' → logprob: -8.757347106933594
    9. ' +' → logprob: -10.132347106933594
    10. ',' → logprob: -10.257347106933594

Token 2516: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00038038729690015316
    2. ' B' → logprob: -7.875380516052246
    3. ')' → logprob: -15.500380516052246
    4. '1' → logprob: -17.75037956237793
    5. ' ' → logprob: -18.00037956237793
    6. '   ' → logprob: -18.00037956237793
    7. '	B' → logprob: -18.37537956237793
    8. '
' → logprob: -18.75037956237793
    9. '>B' → logprob: -20.12537956237793
    10. 'b' → logprob: -20.37537956237793

Token 2517: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004776022396981716
    2. ')*' → logprob: -5.3797760009765625
    3. ' )' → logprob: -9.754776000976562
    4. ')t' → logprob: -10.254776000976562
    5. '),' → logprob: -11.004776000976562
    6. '   ' → logprob: -11.629776000976562
    7. ')
' → logprob: -12.129776000976562
    8. '*' → logprob: -12.504776000976562
    9. '```' → logprob: -12.504776000976562
    10. '*)' → logprob: -12.504776000976562

Token 2518: ' t' (ID: 260)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08437655866146088
    2. ')*' → logprob: -2.959376573562622
    3. '*' → logprob: -4.584376335144043
    4. '!=' → logprob: -5.084376335144043
    5. ')t' → logprob: -5.084376335144043
    6. '*t' → logprob: -6.334376335144043
    7. ' !=' → logprob: -6.459376335144043
    8. ')!=' → logprob: -6.959376335144043
    9. '```' → logprob: -6.959376335144043
    10. ' *' → logprob: -7.209376335144043

Token 2519: ' =' (ID: 314)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5103448033332825
    2. ' !=' → logprob: -1.0103447437286377
    3. '=' → logprob: -4.635344982147217
    4. ')' → logprob: -4.885344982147217
    5. '==' → logprob: -5.135344982147217
    6. ' ==' → logprob: -5.510344982147217
    7. '<|end|>' → logprob: -6.135344982147217
    8. '<|end|>' → logprob: -6.385344982147217
    9. '!==' → logprob: -6.635344982147217
    10. ')!=' → logprob: -7.385344982147217

Token 2520: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1621570587158203
    2. '360' → logprob: -1.9121570587158203
    3. ' k' → logprob: -6.28715705871582
    4. ' ' → logprob: -10.16215705871582
    5. '(k' → logprob: -11.28715705871582
    6. '(' → logprob: -11.91215705871582
    7. '36' → logprob: -13.16215705871582
    8. '   ' → logprob: -13.28715705871582
    9. '```' → logprob: -13.53715705871582
    10. '{k' → logprob: -13.53715705871582

Token 2521: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2106899917125702
    2. '360' → logprob: -1.7106900215148926
    3. ' *' → logprob: -4.710690021514893
    4. '`' → logprob: -8.960689544677734
    5. '*(' → logprob: -10.710689544677734
    6. '```' → logprob: -10.710689544677734
    7. ' ' → logprob: -11.335689544677734
    8. '**' → logprob: -11.460689544677734
    9. ' ' → logprob: -11.835689544677734
    10. '(' → logprob: -12.085689544677734

Token 2522: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '180' → logprob: -20.25
    3. '36' → logprob: -20.625
    4. ' ' → logprob: -22.75
    5. '720' → logprob: -22.75
    6. '120' → logprob: -22.875
    7. '```' → logprob: -22.875
    8. '(' → logprob: -23.0
    9. '359' → logprob: -23.625
    10. '60' → logprob: -24.125

Token 2523: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0343947596848011
    2. '
' → logprob: -4.90939474105835
    3. '<|end|>' → logprob: -5.03439474105835
    4. '<|end|>' → logprob: -5.03439474105835
    5. '    
' → logprob: -5.15939474105835
    6. 'for' → logprob: -6.15939474105835
    7. 'def' → logprob: -6.90939474105835
    8. ',' → logprob: -7.15939474105835
    9. ' for' → logprob: -7.53439474105835
    10. 'if' → logprob: -8.034395217895508

Token 2524: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27646109461784363
    2. '   ' → logprob: -2.276461124420166
    3. '360' → logprob: -2.526461124420166
    4. 'k' → logprob: -3.776461124420166
    5. 'if' → logprob: -4.401461124420166
    6. 't' → logprob: -5.026461124420166
    7. ' for' → logprob: -5.276461124420166
    8. '#' → logprob: -6.151461124420166
    9. '       ' → logprob: -6.651461124420166
    10. '(k' → logprob: -6.901461124420166

Token 2525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0703732892870903
    2. ' =' → logprob: -2.695373296737671
    3. 'for' → logprob: -8.69537353515625
    4. ',' → logprob: -9.44537353515625
    5. '_candidates' → logprob: -9.94537353515625
    6. '*' → logprob: -10.57037353515625
    7. '<|end|>' → logprob: -10.94537353515625
    8. '_tokens' → logprob: -11.32037353515625
    9. '<|end|>' → logprob: -11.57037353515625
    10. ' for' → logprob: -11.82037353515625

Token 2526: ' k' (ID: 372)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -0.065630704164505
    2. '(' → logprob: -2.9406306743621826
    3. 'k' → logprob: -5.190630912780762
    4. '(k' → logprob: -5.440630912780762
    5. '(int' → logprob: -8.940630912780762
    6. 'int' → logprob: -9.065630912780762
    7. '36' → logprob: -9.315630912780762
    8. ' (' → logprob: -9.940630912780762
    9. '180' → logprob: -9.940630912780762
    10. '720' → logprob: -9.940630912780762

Token 2527: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.058088868856430054
    2. '*' → logprob: -3.058088779449463
    3. '360' → logprob: -4.683088779449463
    4. '*(' → logprob: -9.308089256286621
    5. '```' → logprob: -10.558089256286621
    6. ' ' → logprob: -10.683089256286621
    7. '
' → logprob: -11.808089256286621
    8. '	' → logprob: -12.058089256286621
    9. ' ' → logprob: -12.058089256286621
    10. '`' → logprob: -12.183089256286621

Token 2528: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.500000953674316
    3. '180' → logprob: -19.375
    4. ' ' → logprob: -19.375
    5. '36' → logprob: -19.5
    6. '```' → logprob: -20.0
    7. 'int' → logprob: -20.375
    8. '\' → logprob: -21.375
    9. '120' → logprob: -22.0
    10. '{' → logprob: -22.25

Token 2529: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. '180' → logprob: -18.75
    4. '36' → logprob: -19.5
    5. ' ' → logprob: -19.75
    6. '```' → logprob: -20.0
    7. '120' → logprob: -21.0
    8. '{' → logprob: -21.125
    9. '720' → logprob: -21.375
    10. '359' → logprob: -22.75

Token 2530: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4135398268699646
    2. '/' → logprob: -1.4135398864746094
    3. ' //' → logprob: -2.7885398864746094
    4. '/(' → logprob: -4.538539886474609
    5. '   ' → logprob: -4.913539886474609
    6. '//' → logprob: -4.913539886474609
    7. ' ' → logprob: -5.788539886474609
    8. '*' → logprob: -6.413539886474609
    9. ',' → logprob: -6.663539886474609
    10. ' *' → logprob: -6.788539886474609

Token 2531: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.004522804170846939
    2. '(abs' → logprob: -6.129522800445557
    3. 'abs' → logprob: -6.629522800445557
    4. ' (' → logprob: -7.629522800445557
    5. '(' → logprob: -8.004523277282715
    6. '(int' → logprob: -9.129523277282715
    7. 'int' → logprob: -10.129523277282715
    8. '((' → logprob: -10.379523277282715
    9. ' abs' → logprob: -11.254523277282715
    10. '(a' → logprob: -13.754523277282715

Token 2532: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.09790708124637604
    2. 'abs' → logprob: -2.472907066345215
    3. 'A' → logprob: -5.097907066345215
    4. '(abs' → logprob: -5.972907066345215
    5. 'int' → logprob: -9.222907066345215
    6. ' (' → logprob: -9.722907066345215
    7. '(' → logprob: -9.972907066345215
    8. ' abs' → logprob: -9.972907066345215
    9. '(int' → logprob: -11.347907066345215
    10. 'ABS' → logprob: -13.222907066345215

Token 2533: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20159420371055603
    2. ' -' → logprob: -1.7015942335128784
    3. '-B' → logprob: -8.701594352722168
    4. '-A' → logprob: -11.826594352722168
    5. '-k' → logprob: -12.826594352722168
    6. '-I' → logprob: -13.701594352722168
    7. ' ' → logprob: -13.951594352722168
    8. '-b' → logprob: -14.451594352722168
    9. '−' → logprob: -15.076594352722168
    10. '-P' → logprob: -15.951594352722168

Token 2534: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0015023599844425917
    2. ' B' → logprob: -6.501502513885498
    3. '(B' → logprob: -17.876502990722656
    4. '	B' → logprob: -18.001502990722656
    5. '(' → logprob: -19.501502990722656
    6. ' (' → logprob: -20.126502990722656
    7. ')' → logprob: -20.751502990722656
    8. ' ' → logprob: -20.876502990722656
    9. '_B' → logprob: -21.126502990722656
    10. ' ' → logprob: -21.376502990722656

Token 2535: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000891332805622369
    2. '+' → logprob: -8.00089168548584
    3. '   ' → logprob: -8.62589168548584
    4. ' )' → logprob: -8.75089168548584
    5. ')
' → logprob: -9.87589168548584
    6. '*' → logprob: -10.00089168548584
    7. '.' → logprob: -11.00089168548584
    8. '),' → logprob: -11.12589168548584
    9. ' +' → logprob: -11.62589168548584
    10. '#' → logprob: -11.75089168548584

Token 2536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1445106565952301
    2. 'for' → logprob: -2.2695107460021973
    3. '\n' → logprob: -4.894510746002197
    4. '\' → logprob: -5.144510746002197
    5. '    
' → logprob: -5.144510746002197
    6. '```' → logprob: -5.519510746002197
    7. ' for' → logprob: -5.894510746002197
    8. '  
' → logprob: -6.644510746002197
    9. '+' → logprob: -7.894510746002197
    10. '[' → logprob: -8.019510269165039

Token 2537: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03827499598264694
    2. 'for' → logprob: -3.4132750034332275
    3. ' for' → logprob: -5.663274765014648
    4. '```' → logprob: -7.413274765014648
    5. '
' → logprob: -8.788274765014648
    6. '    
' → logprob: -9.038274765014648
    7. '       ' → logprob: -9.538274765014648
    8. '\' → logprob: -9.663274765014648
    9. '\n' → logprob: -10.538274765014648
    10. 'k' → logprob: -11.538274765014648

Token 2538: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22989296913146973
    2. 'for' → logprob: -1.7298929691314697
    3. ' for' → logprob: -4.229892730712891
    4. 'k' → logprob: -5.479892730712891
    5. 'i' → logprob: -6.604892730712891
    6. '```' → logprob: -6.604892730712891
    7. '\' → logprob: -7.104892730712891
    8. '+' → logprob: -7.479892730712891
    9. ' ' → logprob: -7.604892730712891
    10. '    
' → logprob: -7.604892730712891

Token 2539: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5639922618865967
    2. 'A' → logprob: -2.1889922618865967
    3. ' (' → logprob: -2.1889922618865967
    4. '(A' → logprob: -2.4389922618865967
    5. ' A' → logprob: -2.6889922618865967
    6. '#' → logprob: -3.4389922618865967
    7. '(' → logprob: -5.063992500305176
    8. ' t' → logprob: -5.563992500305176
    9. 't' → logprob: -6.063992500305176
    10. ' ' → logprob: -6.563992500305176

Token 2540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3150750398635864
    2. '#' → logprob: -1.5650750398635864
    3. 'for' → logprob: -2.940074920654297
    4. ' for' → logprob: -5.690074920654297
    5. 'k' → logprob: -6.440074920654297
    6. 'A' → logprob: -6.565074920654297
    7. '```' → logprob: -7.190074920654297
    8. ' ' → logprob: -8.315074920654297
    9. '`' → logprob: -8.565074920654297
    10. '(' → logprob: -9.065074920654297

Token 2541: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5238587260246277
    2. '#' (adapté à ' #') → logprob: -1.1488587856292725
    3. 'A' → logprob: -2.7738587856292725
    4. 'for' → logprob: -3.8988587856292725
    5. '-' → logprob: -6.398858547210693
    6. 'B' → logprob: -6.648858547210693
    7. '(' → logprob: -7.023858547210693
    8. 'k' → logprob: -7.148858547210693
    9. '(A' → logprob: -7.273858547210693
    10. '(-' → logprob: -7.523858547210693

Token 2542: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5873566269874573
    2. 'A' → logprob: -1.4623565673828125
    3. 'for' → logprob: -1.8373565673828125
    4. '#' → logprob: -4.3373565673828125
    5. '(A' → logprob: -4.3373565673828125
    6. '-' → logprob: -4.9623565673828125
    7. '(-' → logprob: -5.4623565673828125
    8. 'B' → logprob: -5.7123565673828125
    9. '(B' → logprob: -6.0873565673828125
    10. '-A' → logprob: -6.4623565673828125

Token 2543: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.38687410950660706
    2. 't' → logprob: -1.1368740797042847
    3. '_t' → logprob: -12.761874198913574
    4. ' ' → logprob: -16.761873245239258
    5. ' т' → logprob: -17.011873245239258
    6. '#' → logprob: -17.136873245239258
    7. '*t' → logprob: -17.636873245239258
    8. ',' → logprob: -17.761873245239258
    9. '	t' → logprob: -17.761873245239258
    10. '_' → logprob: -17.886873245239258

Token 2544: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20040437579154968
    2. '+' → logprob: -1.825404405593872
    3. ' -' → logprob: -4.075404167175293
    4. '-' → logprob: -5.700404167175293
    5. ' ' → logprob: -10.700404167175293
    6. '   ' → logprob: -10.950404167175293
    7. ' +=' → logprob: -11.450404167175293
    8. '=' → logprob: -11.575404167175293
    9. ' plus' → logprob: -11.700404167175293
    10. ' ' → logprob: -11.825404167175293

Token 2545: ' k' (ID: 372)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0629403218626976
    2. ' B' → logprob: -2.9379403591156006
    3. '(B' → logprob: -5.8129401206970215
    4. 'k' → logprob: -6.0629401206970215
    5. ' (' → logprob: -6.8129401206970215
    6. '(' → logprob: -7.0629401206970215
    7. '(-' → logprob: -7.8129401206970215
    8. ' k' → logprob: -9.43794059753418
    9. ' (-' → logprob: -9.81294059753418
    10. '-B' → logprob: -10.06294059753418

Token 2546: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0028719231486320496
    2. ' ' → logprob: -5.877871990203857
    3. '(-' → logprob: -11.1278715133667
    4. ' -' → logprob: -11.7528715133667
    5. '   ' → logprob: -11.8778715133667
    6. ' (-' → logprob: -12.3153715133667
    7. '359' → logprob: -12.3778715133667
    8. '-' → logprob: -12.3778715133667
    9. '(' → logprob: -13.0653715133667
    10. '180' → logprob: -13.1278715133667

Token 2547: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.625000953674316
    3. '180' → logprob: -15.750000953674316
    4. '(' → logprob: -15.750000953674316
    5. '359' → logprob: -16.5
    6. 'B' → logprob: -16.625
    7. '(-' → logprob: -17.125
    8. '-' → logprob: -17.25
    9. '36' → logprob: -17.875
    10. '#' → logprob: -18.375

Token 2548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28115978837013245
    2. ' =' → logprob: -1.40615975856781
    3. ' ' → logprob: -12.531159400939941
    4. '   ' → logprob: -13.531159400939941
    5. '=-' → logprob: -13.906159400939941
    6. '-' → logprob: -14.906159400939941
    7. '*' → logprob: -14.968659400939941
    8. '#' → logprob: -14.968659400939941
    9. ')' → logprob: -15.093659400939941
    10. '+=' → logprob: -15.281159400939941

Token 2549: ' -' (ID: 533)
  Prédit: '-B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.43797871470451355
    2. '-' → logprob: -1.312978744506836
    3. 'B' → logprob: -2.687978744506836
    4. '-A' → logprob: -4.937978744506836
    5. ' -' → logprob: -5.062978744506836
    6. '-(' → logprob: -5.812978744506836
    7. '(-' → logprob: -8.187978744506836
    8. ' B' → logprob: -8.437978744506836
    9. '-b' → logprob: -8.687978744506836
    10. '(B' → logprob: -8.687978744506836

Token 2550: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005138330743648112
    2. ' B' → logprob: -7.625514030456543
    3. '(B' → logprob: -10.625514030456543
    4. '   ' → logprob: -14.000514030456543
    5. '(' → logprob: -14.875514030456543
    6. ' (' → logprob: -15.375514030456543
    7. '	B' → logprob: -17.125513076782227
    8. 'A' → logprob: -17.125513076782227
    9. ' ' → logprob: -17.625513076782227
    10. '1' → logprob: -17.625513076782227

Token 2551: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5267819166183472
    2. ' t' → logprob: -0.9017819166183472
    3. '   ' → logprob: -6.401782035827637
    4. ' (' → logprob: -7.651782035827637
    5. 'B' → logprob: -7.901782035827637
    6. ' B' → logprob: -8.026782035827637
    7. ' *' → logprob: -8.151782035827637
    8. '*' → logprob: -8.526782035827637
    9. '(B' → logprob: -9.401782035827637
    10. ')' → logprob: -9.776782035827637

Token 2552: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000455340719781816
    2. 'for' → logprob: -8.500454902648926
    3. '(' → logprob: -10.375454902648926
    4. '```' → logprob: -10.375454902648926
    5. '
' → logprob: -10.500454902648926
    6. '       ' → logprob: -10.625454902648926
    7. ' for' → logprob: -11.000454902648926
    8. '    
' → logprob: -11.250454902648926
    9. ')' → logprob: -11.375454902648926
    10. ' (' → logprob: -11.500454902648926

Token 2553: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2628594636917114
    2. 'for' → logprob: -2.512859344482422
    3. ' (' → logprob: -3.137859344482422
    4. '(A' → logprob: -3.387859344482422
    5. 'A' → logprob: -4.012859344482422
    6. '(B' → logprob: -4.262859344482422
    7. 'B' → logprob: -4.512859344482422
    8. ' for' → logprob: -4.762859344482422
    9. ' ' → logprob: -5.887859344482422
    10. '```' → logprob: -6.012859344482422

Token 2554: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23668737709522247
    2. '(A' → logprob: -1.986687421798706
    3. 'B' → logprob: -2.736687421798706
    4. ' (' → logprob: -5.736687183380127
    5. ' A' → logprob: -5.986687183380127
    6. '(B' → logprob: -6.236687183380127
    7. '(' → logprob: -7.111687183380127
    8. ' B' → logprob: -8.736687660217285
    9. ')' → logprob: -10.111687660217285
    10. '1' → logprob: -10.111687660217285

Token 2555: ' +' (ID: 659)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.17702828347682953
    2. 't' → logprob: -2.802028179168701
    3. ' -' → logprob: -2.802028179168701
    4. '+' → logprob: -3.927028179168701
    5. '-' → logprob: -4.302028179168701
    6. ' +' → logprob: -5.177028179168701
    7. ' *' → logprob: -7.802028179168701
    8. ')' → logprob: -8.05202865600586
    9. '-B' → logprob: -8.17702865600586
    10. '*' → logprob: -8.30202865600586

Token 2556: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.7610454708337784e-05
    2. ' B' → logprob: -10.500027656555176
    3. '	B' → logprob: -19.75002670288086
    4. '1' → logprob: -20.00002670288086
    5. '   ' → logprob: -20.00002670288086
    6. '_B' → logprob: -20.37502670288086
    7. ')' → logprob: -21.12502670288086
    8. '(B' → logprob: -21.50002670288086
    9. ' ' → logprob: -22.00002670288086
    10. '=B' → logprob: -22.00002670288086

Token 2557: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005355312954634428
    2. '*' → logprob: -5.380355358123779
    3. ')*' → logprob: -8.005354881286621
    4. ' t' → logprob: -9.005354881286621
    5. ' *' → logprob: -9.005354881286621
    6. ' )' → logprob: -10.005354881286621
    7. ')t' → logprob: -10.505354881286621
    8. 't' → logprob: -10.880354881286621
    9. '*)' → logprob: -10.880354881286621
    10. '_' → logprob: -11.255354881286621

Token 2558: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31355196237564087
    2. ' t' → logprob: -1.313551902770996
    3. '*' → logprob: -9.188551902770996
    4. '*t' → logprob: -9.688551902770996
    5. ' *' → logprob: -9.938551902770996
    6. ')' → logprob: -10.063551902770996
    7. '_t' → logprob: -11.063551902770996
    8. ')t' → logprob: -11.938551902770996
    9. '`t' → logprob: -12.438551902770996
    10. '_' → logprob: -12.938551902770996

Token 2559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232533812522888
    2. ' =' → logprob: -0.8982533812522888
    3. ')' → logprob: -9.648253440856934
    4. '```' → logprob: -10.148253440856934
    5. ' ' → logprob: -11.648253440856934
    6. '*' → logprob: -13.148253440856934
    7. '[' → logprob: -13.273253440856934
    8. '#' → logprob: -13.523253440856934
    9. '_' → logprob: -13.523253440856934
    10. ' +=' → logprob: -13.773253440856934

Token 2560: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003365350130479783
    2. ' k' → logprob: -8.125336647033691
    3. '360' → logprob: -10.125336647033691
    4. '(k' → logprob: -15.375336647033691
    5. '{k' → logprob: -16.750335693359375
    6. ' ' → logprob: -16.875335693359375
    7. '   ' → logprob: -17.250335693359375
    8. '(' → logprob: -17.625335693359375
    9. '-k' → logprob: -18.125335693359375
    10. '0' → logprob: -18.500335693359375

Token 2561: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02631968818604946
    2. ' *' → logprob: -3.651319742202759
    3. '360' → logprob: -11.27631950378418
    4. ' ' → logprob: -13.27631950378418
    5. '<|end|>' → logprob: -13.40131950378418
    6. '**' → logprob: -13.77631950378418
    7. '```' → logprob: -14.52631950378418
    8. ' ' → logprob: -15.15131950378418
    9. '+' → logprob: -15.27631950378418
    10. '`' → logprob: -15.90131950378418

Token 2562: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. '180' → logprob: -16.125
    4. '720' → logprob: -16.5
    5. '36' → logprob: -18.375
    6. '(' → logprob: -19.375
    7. '0' → logprob: -19.75
    8. '359' → logprob: -20.25
    9. '120' → logprob: -21.375
    10. '1' → logprob: -21.375

Token 2563: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008763278019614518
    2. 'for' → logprob: -8.125876426696777
    3. '```' → logprob: -8.125876426696777
    4. '
' → logprob: -8.500876426696777
    5. '#' → logprob: -11.000876426696777
    6. '    
' → logprob: -11.125876426696777
    7. 'def' → logprob: -11.625876426696777
    8. 'import' → logprob: -12.250876426696777
    9. ',' → logprob: -12.500876426696777
    10. ':' → logprob: -12.500876426696777

Token 2564: ' t' (ID: 260)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.0592868328094482
    2. 'k' → logprob: -1.9342868328094482
    3. ' t' → logprob: -1.9342868328094482
    4. 'for' → logprob: -2.0592868328094482
    5. '   ' → logprob: -2.4342868328094482
    6. 't' → logprob: -2.6842868328094482
    7. ' for' → logprob: -2.6842868328094482
    8. 'if' → logprob: -5.809287071228027
    9. '(k' → logprob: -6.434287071228027
    10. ' (' → logprob: -6.434287071228027

Token 2565: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.100211963057518
    2. ' =' → logprob: -2.3502118587493896
    3. '=k' → logprob: -12.725212097167969
    4. '   ' → logprob: -13.725212097167969
    5. '=
' → logprob: -15.475212097167969
    6. ' ' → logprob: -15.600212097167969
    7. 't' → logprob: -15.850212097167969
    8. '```' → logprob: -15.975212097167969
    9. ')' → logprob: -16.10021209716797
    10. 'k' → logprob: -16.72521209716797

Token 2566: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009605350787751377
    2. ' k' → logprob: -7.125960350036621
    3. '(k' → logprob: -8.875960350036621
    4. '   ' → logprob: -11.875960350036621
    5. '(' → logprob: -12.750960350036621
    6. '{k' → logprob: -12.875960350036621
    7. ' (' → logprob: -13.375960350036621
    8. 'abs' → logprob: -14.500960350036621
    9. 'lambda' → logprob: -14.500960350036621
    10. ' ' → logprob: -15.000960350036621

Token 2567: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026327935978770256
    2. '*' → logprob: -3.6513278484344482
    3. '#' → logprob: -12.151328086853027
    4. ' ' → logprob: -12.276328086853027
    5. '**' → logprob: -12.651328086853027
    6. '```' → logprob: -13.151328086853027
    7. '`' → logprob: -13.276328086853027
    8. 'import' → logprob: -13.276328086853027
    9. '<|end|>' → logprob: -13.401328086853027
    10. '[' → logprob: -13.526328086853027

Token 2568: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -7.100059156073257e-05
    2. ' ' → logprob: -9.875070571899414
    3. '(' → logprob: -10.875070571899414
    4. '180' → logprob: -14.750070571899414
    5. ' (' → logprob: -17.125070571899414
    6. '720' → logprob: -18.125070571899414
    7. '36' → logprob: -18.625070571899414
    8. '0' → logprob: -18.875070571899414
    9. '{' → logprob: -19.750070571899414
    10. '```' → logprob: -20.125070571899414

Token 2569: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.0280383548888494e-06
    2. '180' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.500001907348633
    4. '(' → logprob: -18.250001907348633
    5. '-' → logprob: -20.000001907348633
    6. '36' → logprob: -20.000001907348633
    7. '359' → logprob: -20.000001907348633
    8. '0' → logprob: -20.750001907348633
    9. '720' → logprob: -20.750001907348633
    10. '(-' → logprob: -21.125001907348633

Token 2570: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.20157812535762787
    2. ' /' → logprob: -1.701578140258789
    3. '/(' → logprob: -9.076578140258789
    4. '   ' → logprob: -10.201578140258789
    5. '*' → logprob: -13.076578140258789
    6. ' ' → logprob: -13.201578140258789
    7. '```' → logprob: -13.576578140258789
    8. '  ' → logprob: -13.701578140258789
    9. ' ' → logprob: -14.076578140258789
    10. '#' → logprob: -14.201578140258789

Token 2571: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005281546153128147
    2. ' (' → logprob: -5.255281448364258
    3. '(' → logprob: -10.005281448364258
    4. '   ' → logprob: -13.380281448364258
    5. '((' → logprob: -14.130281448364258
    6. 'A' → logprob: -16.755281448364258
    7. '(a' → logprob: -16.880281448364258
    8. '(B' → logprob: -17.255281448364258
    9. ' ' → logprob: -17.755281448364258
    10. '(C' → logprob: -17.755281448364258

Token 2572: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00012201975914649665
    2. ' (' → logprob: -9.1251220703125
    3. '(' → logprob: -11.3751220703125
    4. '((' → logprob: -14.1251220703125
    5. 'A' → logprob: -14.8751220703125
    6. '   ' → logprob: -15.6251220703125
    7. '(abs' → logprob: -16.5001220703125
    8. '(
' → logprob: -17.0001220703125
    9. ' ' → logprob: -17.2501220703125
    10. '{' → logprob: -17.5001220703125

Token 2573: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023594720289111137
    2. '+B' → logprob: -4.273594856262207
    3. ' +' → logprob: -4.773594856262207
    4. '-' → logprob: -7.273594856262207
    5. ' -' → logprob: -9.398594856262207
    6. 'B' → logprob: -9.523594856262207
    7. '+
' → logprob: -10.648594856262207
    8. ')' → logprob: -11.148594856262207
    9. ' ' → logprob: -11.648594856262207
    10. '-B' → logprob: -11.898594856262207

Token 2574: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.639096970204264e-05
    2. ' B' → logprob: -9.250096321105957
    3. '(B' → logprob: -16.125097274780273
    4. '   ' → logprob: -17.125097274780273
    5. '(' → logprob: -18.375097274780273
    6. '	B' → logprob: -19.750097274780273
    7. '_B' → logprob: -20.000097274780273
    8. '
' → logprob: -21.000097274780273
    9. '+B' → logprob: -21.250097274780273
    10. ' ' → logprob: -21.375097274780273

Token 2575: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05522007867693901
    2. '   ' → logprob: -3.055220127105713
    3. ')
' → logprob: -5.305220127105713
    4. '+' → logprob: -7.430220127105713
    5. '#' → logprob: -8.055219650268555
    6. '):
' → logprob: -9.430219650268555
    7. '):' → logprob: -9.430219650268555
    8. ')
' → logprob: -9.555219650268555
    9. ')\' → logprob: -9.555219650268555
    10. ' )' → logprob: -9.930219650268555

Token 2576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010953613556921482
    2. 'for' → logprob: -4.760953426361084
    3. ' for' → logprob: -6.760953426361084
    4. '```' → logprob: -7.760953426361084
    5. '    
' → logprob: -8.010953903198242
    6. '
' → logprob: -8.385953903198242
    7. 'k' → logprob: -9.135953903198242
    8. '       ' → logprob: -11.010953903198242
    9. ' k' → logprob: -11.260953903198242
    10. '``' → logprob: -11.635953903198242

Token 2577: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07043885439634323
    2. 'for' → logprob: -3.320438861846924
    3. '```' → logprob: -3.695438861846924
    4. 'k' → logprob: -5.320438861846924
    5. ' for' → logprob: -6.445438861846924
    6. 'i' → logprob: -8.695438385009766
    7. '
' → logprob: -9.195438385009766
    8. ' k' → logprob: -9.195438385009766
    9. '    
' → logprob: -9.570438385009766
    10. '``' → logprob: -9.695438385009766

Token 2578: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04367302358150482
    2. 'for' → logprob: -3.543673038482666
    3. 'k' → logprob: -4.668673038482666
    4. 'def' → logprob: -6.168673038482666
    5. '```' → logprob: -6.668673038482666
    6. 'i' → logprob: -7.668673038482666
    7. ' for' → logprob: -8.043672561645508
    8. '
' → logprob: -8.918672561645508
    9. 'max' → logprob: -10.043672561645508
    10. 'import' → logprob: -10.668672561645508

Token 2579: ' teste' (ID: 62670)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19739806652069092
    2. 'k' → logprob: -2.4473981857299805
    3. 'import' → logprob: -2.9473981857299805
    4. ' for' → logprob: -4.1973981857299805
    5. '
' → logprob: -4.5723981857299805
    6. 'from' → logprob: -5.4473981857299805
    7. '#' → logprob: -5.4473981857299805
    8. 'def' → logprob: -5.9473981857299805
    9. '=' → logprob: -7.0723981857299805
    10. 'max' → logprob: -7.3223981857299805

Token 2580: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19722503423690796
    2. ' k' → logprob: -2.3222250938415527
    3. 'for' → logprob: -2.8222250938415527
    4. ' for' → logprob: -4.072225093841553
    5. '   ' → logprob: -5.822225093841553
    6. '0' → logprob: -7.822225093841553
    7. 'import' → logprob: -8.197224617004395
    8. 'from' → logprob: -8.572224617004395
    9. 'range' → logprob: -9.197224617004395
    10. '```' → logprob: -9.197224617004395

Token 2581: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6673435568809509
    2. '0' → logprob: -0.9173435568809509
    3. 'k' → logprob: -3.1673436164855957
    4. '1' → logprob: -3.2923436164855957
    5. 'range' → logprob: -5.917343616485596
    6. '-' → logprob: -6.667343616485596
    7. '   ' → logprob: -6.792343616485596
    8. ' for' → logprob: -7.042343616485596
    9. '(' → logprob: -7.292343616485596
    10. '=' → logprob: -7.792343616485596

Token 2582: ' un' (ID: 537)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010367410723119974
    2. ' range' → logprob: -6.876036643981934
    3. '(range' → logprob: -13.251036643981934
    4. '[' → logprob: -13.626036643981934
    5. '1' → logprob: -14.626036643981934
    6. '	range' → logprob: -15.501036643981934
    7. 'k' → logprob: -16.12603759765625
    8. 'list' → logprob: -16.12603759765625
    9. '[-' → logprob: -17.50103759765625
    10. '```' → logprob: -18.25103759765625

Token 2583: ' interval' (ID: 17116)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5246587991714478
    2. ' range' → logprob: -0.8996587991714478
    3. 'for' → logprob: -7.399658679962158
    4. '(range' → logprob: -8.774659156799316
    5. '1' → logprob: -9.024659156799316
    6. ' for' → logprob: -9.524659156799316
    7. ' ' → logprob: -9.649659156799316
    8. '   ' → logprob: -9.649659156799316
    9. '100' → logprob: -9.774659156799316
    10. 'while' → logprob: -9.774659156799316

Token 2584: 'le' (ID: 282)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09508080780506134
    2. ' range' → logprob: -2.595080852508545
    3. '   ' → logprob: -5.470080852508545
    4. '(range' → logprob: -6.470080852508545
    5. 'from' → logprob: -6.720080852508545
    6. 'for' → logprob: -6.720080852508545
    7. '[-' → logprob: -6.845080852508545
    8. '[' → logprob: -6.845080852508545
    9. '0' → logprob: -7.095080852508545
    10. 'import' → logprob: -7.345080852508545

Token 2585: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8743424415588379
    2. 'for' → logprob: -1.624342441558838
    3. ' for' → logprob: -1.999342441558838
    4. 'range' → logprob: -1.999342441558838
    5. ' range' → logprob: -2.999342441558838
    6. '(' → logprob: -3.999342441558838
    7. '(range' → logprob: -4.124342441558838
    8. ' in' → logprob: -4.874342441558838
    9. '_range' → logprob: -5.124342441558838
    10. '(-' → logprob: -5.624342441558838

Token 2586: ' trouver' (ID: 23195)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3071530759334564
    2. 'range' → logprob: -1.8071531057357788
    3. ' k' → logprob: -2.9321529865264893
    4. 'k' → logprob: -3.0571529865264893
    5. '```' → logprob: -11.30715274810791
    6. ' ' → logprob: -12.05715274810791
    7. '_range' → logprob: -12.05715274810791
    8. '	range' → logprob: -12.68215274810791
    9. '1' → logprob: -13.43215274810791
    10. ' abs' → logprob: -14.05715274810791

Token 2587: ' des' (ID: 731)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25218823552131653
    2. 'k' → logprob: -1.6271882057189941
    3. '-' → logprob: -4.502188205718994
    4. 'range' → logprob: -4.502188205718994
    5. ' k' → logprob: -6.752188205718994
    6. '0' → logprob: -7.002188205718994
    7. ' ' → logprob: -7.127188205718994
    8. ' range' → logprob: -8.002188682556152
    9. ' -' → logprob: -8.127188682556152
    10. 'for' → logprob: -8.377188682556152

Token 2588: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31807342171669006
    2. ' k' → logprob: -1.3180733919143677
    3. '100' → logprob: -6.693073272705078
    4. '360' → logprob: -7.068073272705078
    5. ' range' → logprob: -7.193073272705078
    6. ' ' → logprob: -7.943073272705078
    7. '1' → logprob: -8.193073272705078
    8. '-' → logprob: -8.443073272705078
    9. 'range' → logprob: -8.568073272705078
    10. '60' → logprob: -9.193073272705078

Token 2589: ' >=' (ID: 5064)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6577118039131165
    2. '   ' → logprob: -1.6577117443084717
    3. ' for' → logprob: -1.6577117443084717
    4. ' in' → logprob: -2.9077117443084717
    5. 'range' → logprob: -4.157711982727051
    6. 'in' → logprob: -5.032711982727051
    7. ':' → logprob: -5.032711982727051
    8. 'k' → logprob: -5.157711982727051
    9. 'from' → logprob: -6.157711982727051
    10. 'import' → logprob: -6.157711982727051

Token 2590: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.29983294010162354
    2. '0' → logprob: -1.4248329401016235
    3. ' t' → logprob: -4.049832820892334
    4. ' ' → logprob: -7.674832820892334
    5. '1' → logprob: -8.049833297729492
    6. '(t' → logprob: -9.049833297729492
    7. 'int' → logprob: -10.299833297729492
    8. '-' → logprob: -10.549833297729492
    9. '`t' → logprob: -10.674833297729492
    10. '   ' → logprob: -10.862333297729492

Token 2591: '0' (ID: 15)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.01459815539419651
    2. '0' → logprob: -4.264598369598389
    3. 'num' → logprob: -8.63959789276123
    4. ''_' → logprob: -9.63959789276123
    5. '_den' → logprob: -9.88959789276123
    6. '_' → logprob: -10.63959789276123
    7. '```' → logprob: -10.76459789276123
    8. '`' → logprob: -10.88959789276123
    9. ' ' → logprob: -12.26459789276123
    10. '_start' → logprob: -12.26459789276123

Token 2592: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2887268364429474
    2. ' for' → logprob: -1.538726806640625
    3. 'for' → logprob: -4.413726806640625
    4. ' k' → logprob: -4.788726806640625
    5. ':' → logprob: -4.913726806640625
    6. '
' → logprob: -5.788726806640625
    7. '```' → logprob: -6.538726806640625
    8. ' range' → logprob: -6.913726806640625
    9. 'k' → logprob: -7.288726806640625
    10. 'range' → logprob: -7.788726806640625

Token 2593: ' t' (ID: 260)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6573213934898376
    2. 'k' → logprob: -0.7823213934898376
    3. '   ' → logprob: -3.9073214530944824
    4. ' for' → logprob: -6.032321453094482
    5. ' t' → logprob: -7.282321453094482
    6. 'for' → logprob: -7.782321453094482
    7. 't' → logprob: -7.907321453094482
    8. '0' → logprob: -9.032320976257324
    9. '1' → logprob: -9.657320976257324
    10. ' start' → logprob: -10.282320976257324

Token 2594: ' <' (ID: 464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7271162271499634
    2. ' =' → logprob: -1.6021162271499634
    3. '_max' → logprob: -2.727116107940674
    4. '_min' → logprob: -2.727116107940674
    5. 'for' → logprob: -3.352116107940674
    6. 'max' → logprob: -3.602116107940674
    7. '#' → logprob: -3.727116107940674
    8. '_num' → logprob: -3.852116107940674
    9. 'in' → logprob: -3.977116107940674
    10. ' in' → logprob: -4.602116107940674

Token 2595: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.05695261061191559
    2. ' H' → logprob: -2.931952714920044
    3. '   ' → logprob: -6.681952476501465
    4. 'int' → logprob: -7.931952476501465
    5. '(H' → logprob: -8.556952476501465
    6. ' ' → logprob: -9.181952476501465
    7. 't' → logprob: -10.181952476501465
    8. ' int' → logprob: -10.431952476501465
    9. '  ' → logprob: -10.806952476501465
    10. ' (' → logprob: -11.431952476501465

Token 2596: '360' (ID: 9870)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.035068903118371964
    2. '360' → logprob: -3.660068988800049
    3. ' *' → logprob: -4.910068988800049
    4. '```' → logprob: -7.660068988800049
    5. '\' → logprob: -7.910068988800049
    6. '_' → logprob: -8.91006851196289
    7. '**' → logprob: -9.41006851196289
    8. '   ' → logprob: -10.16006851196289
    9. '#' → logprob: -10.41006851196289
    10. '*
' → logprob: -10.53506851196289

Token 2597: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012166214582975954
    2. '   ' → logprob: -9.2501220703125
    3. '00' → logprob: -10.8751220703125
    4. '000' → logprob: -12.7501220703125
    5. '```' → logprob: -14.0001220703125
    6. '{
' → logprob: -14.6251220703125
    7. 'while' → logprob: -14.7501220703125
    8. 'for' → logprob: -14.8751220703125
    9. 'if' → logprob: -15.0001220703125
    10. '=' → logprob: -15.1251220703125

Token 2598: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10458093881607056
    2. '
' → logprob: -2.354580879211426
    3. '```' → logprob: -6.354580879211426
    4. 'for' → logprob: -6.604580879211426
    5. ' for' → logprob: -7.229580879211426
    6. '    
' → logprob: -7.979580879211426
    7. 'k' → logprob: -9.729580879211426
    8. '
' → logprob: -10.104580879211426
    9. 'def' → logprob: -10.729580879211426
    10. '  
' → logprob: -11.604580879211426

Token 2599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020245911553502083
    2. 'for' → logprob: -4.2702460289001465
    3. ' for' → logprob: -5.6452460289001465
    4. '```' → logprob: -6.6452460289001465
    5. '
' → logprob: -6.7702460289001465
    6. 'k' → logprob: -10.395245552062988
    7. '    
' → logprob: -10.895245552062988
    8. 'range' → logprob: -11.895245552062988
    9. 'import' → logprob: -12.395245552062988
    10. '``' → logprob: -12.395245552062988

Token 2600: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03584933280944824
    2. '```' → logprob: -3.5358493328094482
    3. 'k' → logprob: -5.660849571228027
    4. 'for' → logprob: -6.285849571228027
    5. ' for' → logprob: -8.160849571228027
    6. 'max' → logprob: -8.910849571228027
    7. '
' → logprob: -9.035849571228027
    8. '``' → logprob: -9.410849571228027
    9. ' k' → logprob: -9.660849571228027
    10. '`' → logprob: -12.035849571228027

Token 2601: ' Nous' (ID: 20193)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061343397945165634
    2. 'k' → logprob: -3.5613434314727783
    3. 'for' → logprob: -3.6863434314727783
    4. 'max' → logprob: -6.061343193054199
    5. '```' → logprob: -6.061343193054199
    6. '
' → logprob: -7.561343193054199
    7. ' for' → logprob: -8.0613431930542
    8. 'i' → logprob: -9.4363431930542
    9. 'import' → logprob: -9.4363431930542
    10. 'min' → logprob: -9.6863431930542

Token 2602: ' allons' (ID: 97647)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6496841907501221
    2. ' for' → logprob: -1.649684190750122
    3. 'import' → logprob: -2.024684190750122
    4. 'for' → logprob: -2.774684190750122
    5. ' import' → logprob: -3.399684190750122
    6. 'range' → logprob: -4.274683952331543
    7. ' range' → logprob: -4.899683952331543
    8. ' =' → logprob: -5.274683952331543
    9. ' try' → logprob: -5.649683952331543
    10. '_range' → logprob: -5.899683952331543

Token 2603: ' chercher' (ID: 79602)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.26959317922592163
    2. '   ' → logprob: -2.1445932388305664
    3. 'k' → logprob: -3.1445932388305664
    4. ' range' → logprob: -3.2695932388305664
    5. ' for' → logprob: -4.019593238830566
    6. 'range' → logprob: -4.519593238830566
    7. '    ' → logprob: -5.644593238830566
    8. 'for' → logprob: -5.644593238830566
    9. 'import' → logprob: -7.269593238830566
    10. ' import' → logprob: -8.519593238830566

Token 2604: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6391400098800659
    2. 'k' → logprob: -0.8891400098800659
    3. '   ' → logprob: -3.1391401290893555
    4. ' for' → logprob: -5.5141401290893555
    5. 'for' → logprob: -5.7641401290893555
    6. '0' → logprob: -5.7641401290893555
    7. '1' → logprob: -6.3891401290893555
    8. 'range' → logprob: -6.3891401290893555
    9. ' range' → logprob: -7.1391401290893555
    10. '-' → logprob: -7.7641401290893555

Token 2605: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1159359216690063
    2. ' =' → logprob: -1.4909359216690063
    3. ' for' → logprob: -1.9909359216690063
    4. '=' → logprob: -2.365935802459717
    5. ' in' → logprob: -2.740935802459717
    6. 'range' → logprob: -3.115935802459717
    7. 'k' → logprob: -3.615935802459717
    8. '   ' → logprob: -3.990935802459717
    9. '
' → logprob: -4.615935802459717
    10. ' k' → logprob: -4.740935802459717

Token 2606: ' [-' (ID: 20191)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07891909033060074
    2. ' range' → logprob: -2.5789191722869873
    3. '	range' → logprob: -11.203919410705566
    4. '1' → logprob: -11.703919410705566
    5. '0' → logprob: -12.828919410705566
    6. '(range' → logprob: -13.078919410705566
    7. '[' → logprob: -13.703919410705566
    8. '[-' → logprob: -14.703919410705566
    9. ' ' → logprob: -15.328919410705566
    10. '   ' → logprob: -15.328919410705566

Token 2607: 'max' (ID: 3228)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5297521352767944
    2. '(' → logprob: -1.6547521352767944
    3. '200' → logprob: -2.654752254486084
    4. 'int' → logprob: -3.279752254486084
    5. '10' → logprob: -3.529752254486084
    6. '(H' → logprob: -4.029752254486084
    7. '120' → logprob: -4.154752254486084
    8. '500' → logprob: -4.904752254486084
    9. '20' → logprob: -4.904752254486084
    10. '2' → logprob: -5.029752254486084

Token 2608: 'K' (ID: 42)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12428461015224457
    2. '   ' → logprob: -3.749284505844116
    3. '360' → logprob: -3.749284505844116
    4. ' ' → logprob: -3.999284505844116
    5. 'k' → logprob: -4.499284744262695
    6. '60' → logprob: -4.999284744262695
    7. '_k' → logprob: -5.124284744262695
    8. '300' → logprob: -5.124284744262695
    9. '10' → logprob: -5.374284744262695
    10. '1' → logprob: -5.874284744262695

Token 2609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1285649538040161
    2. '100' → logprob: -2.7535648345947266
    3. '+' → logprob: -4.378564834594727
    4. ' ,' → logprob: -4.753564834594727
    5. 'k' → logprob: -4.878564834594727
    6. '1' → logprob: -5.253564834594727
    7. '60' → logprob: -5.378564834594727
    8. '=' → logprob: -5.503564834594727
    9. '360' → logprob: -5.503564834594727
    10. '10' → logprob: -6.628564834594727

Token 2610: ' max' (ID: 2999)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.15626706182956696
    2. '200' → logprob: -3.2812671661376953
    3. 'max' → logprob: -3.2812671661376953
    4. '500' → logprob: -4.156267166137695
    5. '360' → logprob: -4.406267166137695
    6. ' ' → logprob: -4.656267166137695
    7. '300' → logprob: -5.031267166137695
    8. '10' → logprob: -5.531267166137695
    9. '600' → logprob: -5.656267166137695
    10. '120' → logprob: -5.656267166137695

Token 2611: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0014760562917217612
    2. 'k' → logprob: -7.251476287841797
    3. '_k' → logprob: -8.126476287841797
    4. 'int' → logprob: -9.501476287841797
    5. '=' → logprob: -9.751476287841797
    6. '_K' → logprob: -9.876476287841797
    7. '_val' → logprob: -10.126476287841797
    8. '_value' → logprob: -10.251476287841797
    9. ']' → logprob: -10.376476287841797
    10. '60' → logprob: -10.751476287841797

Token 2612: ']

' (ID: 3144)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3784785270690918
    2. '+' → logprob: -1.3784785270690918
    3. ' +' → logprob: -3.753478527069092
    4. '100' → logprob: -3.878478527069092
    5. '=' → logprob: -4.753478527069092
    6. '...' → logprob: -6.378478527069092
    7. '   ' → logprob: -6.753478527069092
    8. '20' → logprob: -7.128478527069092
    9. '10' → logprob: -7.378478527069092
    10. ']' → logprob: -7.503478527069092

Token 2613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5868476033210754
    2. 'max' → logprob: -0.8368476033210754
    3. '```' → logprob: -5.46184778213501
    4. ' max' → logprob: -5.58684778213501
    5. '100' → logprob: -7.33684778213501
    6. '50' → logprob: -7.58684778213501
    7. '``' → logprob: -7.96184778213501
    8. '
' → logprob: -8.211847305297852
    9. 'k' → logprob: -8.711847305297852
    10. '40' → logprob: -9.211847305297852

Token 2614: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.3147234320640564
    2. '   ' → logprob: -1.3147234916687012
    3. '```' → logprob: -6.939723491668701
    4. ' max' → logprob: -7.939723491668701
    5. '``' → logprob: -9.814723014831543
    6. '
' → logprob: -10.939723014831543
    7. 'import' → logprob: -11.314723014831543
    8. '(max' → logprob: -11.814723014831543
    9. '`' → logprob: -11.939723014831543
    10. '	max' → logprob: -11.939723014831543

Token 2615: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00013369438238441944
    2. '_K' → logprob: -9.000133514404297
    3. '_k' → logprob: -12.125133514404297
    4. ' K' → logprob: -12.625133514404297
    5. 'k' → logprob: -13.500133514404297
    6. ' ' → logprob: -19.250133514404297
    7. '	K' → logprob: -19.375133514404297
    8. '_value' → logprob: -19.625133514404297
    9. '```' → logprob: -19.625133514404297
    10. ' =' → logprob: -19.750133514404297

Token 2616: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2254248857498169
    2. '=' → logprob: -1.600424885749817
    3. '   ' → logprob: -12.100424766540527
    4. ',' → logprob: -12.725424766540527
    5. ' ' → logprob: -13.975424766540527
    6. '=int' → logprob: -14.350424766540527
    7. '	' → logprob: -14.600424766540527
    8. '```' → logprob: -14.725424766540527
    9. '    ' → logprob: -15.225424766540527
    10. ' ' → logprob: -15.600424766540527

Token 2617: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.49758556485176086
    2. 'int' → logprob: -1.7475855350494385
    3. '200' → logprob: -2.2475855350494385
    4. '2' → logprob: -2.8725855350494385
    5. '10' → logprob: -3.3725855350494385
    6. '(' → logprob: -4.997585773468018
    7. '500' → logprob: -4.997585773468018
    8. '300' → logprob: -6.122585773468018
    9. 'H' → logprob: -6.747585773468018
    10. '20' → logprob: -6.997585773468018

Token 2618: '2' (ID: 17)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9894081950187683
    2. '2' → logprob: -1.364408254623413
    3. 'int' → logprob: -1.614408254623413
    4. '200' → logprob: -2.614408254623413
    5. '10' → logprob: -2.989408254623413
    6. 'H' → logprob: -3.864408254623413
    7. '(' → logprob: -4.364408016204834
    8. '500' → logprob: -4.989408016204834
    9. '(H' → logprob: -5.739408016204834
    10. '300' → logprob: -6.489408016204834

Token 2619: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16008050739765167
    2. '
' → logprob: -3.5350804328918457
    3. '   ' → logprob: -3.5350804328918457
    4. '000' → logprob: -4.535080432891846
    5. '<|end|>' → logprob: -4.660080432891846
    6. ',' → logprob: -4.910080432891846
    7. '  
' → logprob: -4.910080432891846
    8. ' +' → logprob: -5.285080432891846
    9. '1' → logprob: -5.285080432891846
    10. '+' → logprob: -5.285080432891846

Token 2620: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.006383045110851526
    2. '(H' → logprob: -5.256382942199707
    3. 'int' → logprob: -7.006382942199707
    4. '(' → logprob: -8.631382942199707
    5. '10' → logprob: -11.006382942199707
    6. '(int' → logprob: -11.131382942199707
    7. ' (' → logprob: -11.381382942199707
    8. ' H' → logprob: -11.756382942199707
    9. '100' → logprob: -12.131382942199707
    10. '((' → logprob: -12.131382942199707

Token 2621: ' *' (ID: 425)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.6794918179512024
    2. '*' → logprob: -1.3044917583465576
    3. '0' → logprob: -2.5544917583465576
    4. '   ' → logprob: -3.1794917583465576
    5. ' *' → logprob: -3.5544917583465576
    6. ' ' → logprob: -3.9294917583465576
    7. '000' → logprob: -4.554491996765137
    8. '  ' → logprob: -4.679491996765137
    9. '  
' → logprob: -4.679491996765137
    10. '    
' → logprob: -5.679491996765137

Token 2622: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -0.004620591644197702
    2. '10' → logprob: -5.754620552062988
    3. '100' → logprob: -6.629620552062988
    4. '180' → logprob: -10.254620552062988
    5. 'int' → logprob: -10.879620552062988
    6. '60' → logprob: -11.004620552062988
    7. '120' → logprob: -11.379620552062988
    8. '1' → logprob: -11.754620552062988
    9. '720' → logprob: -11.879620552062988
    10. '600' → logprob: -12.254620552062988

Token 2623: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0006508402875624597
    2. '100' → logprob: -7.750650882720947
    3. '10' → logprob: -9.125650405883789
    4. '180' → logprob: -10.000650405883789
    5. '60' → logprob: -10.625650405883789
    6. '1' → logprob: -11.125650405883789
    7. '720' → logprob: -11.125650405883789
    8. '600' → logprob: -12.375650405883789
    9. '359' → logprob: -13.125650405883789
    10. 'max' → logprob: -13.750650405883789

Token 2624: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '00' → logprob: -13.25000286102295
    3. '000' → logprob: -13.62500286102295
    4. '   ' → logprob: -16.375003814697266
    5. ' ' → logprob: -17.375003814697266
    6. ')' → logprob: -19.125003814697266
    7. '<|end|>' → logprob: -19.125003814697266
    8. '०' → logprob: -19.625003814697266
    9. '```' → logprob: -20.125003814697266
    10. '۰' → logprob: -20.375003814697266

Token 2625: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09127665311098099
    2. '   ' → logprob: -3.0912766456604004
    3. '+' → logprob: -3.5912766456604004
    4. ' +' → logprob: -4.8412766456604
    5. ' 
' → logprob: -6.8412766456604
    6. ')' → logprob: -6.9662766456604
    7. '    
' → logprob: -7.0912766456604
    8. '
' → logprob: -7.3412766456604
    9. '+
' → logprob: -7.7162766456604
    10. ' ' → logprob: -7.8412766456604

Token 2626: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039908163249492645
    2. '   ' → logprob: -3.9149081707000732
    3. '+' → logprob: -4.539907932281494
    4. 'for' → logprob: -5.414907932281494
    5. ' for' → logprob: -6.789907932281494
    6. '
' → logprob: -6.914907932281494
    7. ' +' → logprob: -7.289907932281494
    8. '    
' → logprob: -7.664907932281494
    9. '  
' → logprob: -8.414908409118652
    10. ' 
' → logprob: -8.789908409118652

Token 2627: ' grand' (ID: 6363)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12931418418884277
    2. '+' → logprob: -2.2543141841888428
    3. 'for' → logprob: -4.879314422607422
    4. '   ' → logprob: -5.254314422607422
    5. ' for' → logprob: -6.879314422607422
    6. ' +' → logprob: -7.254314422607422
    7. ' ' → logprob: -7.379314422607422
    8. 'max' → logprob: -8.254314422607422
    9. '
' → logprob: -8.379314422607422
    10. 'import' → logprob: -9.004314422607422

Token 2628: ' nombre' (ID: 9733)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3956242799758911
    2. '```' → logprob: -1.7706242799758911
    3. 'range' → logprob: -2.7706241607666016
    4. 'max' → logprob: -3.2706241607666016
    5. '   ' → logprob: -4.895624160766602
    6. 'interval' → logprob: -5.270624160766602
    7. 'for' → logprob: -5.395624160766602
    8. 'int' → logprob: -5.645624160766602
    9. 'k' → logprob: -5.645624160766602
    10. '1' → logprob: -5.895624160766602

Token 2629: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8147885203361511
    2. '
' → logprob: -1.189788579940796
    3. '+' → logprob: -1.939788579940796
    4. ' +' → logprob: -2.689788579940796
    5. 'for' → logprob: -3.939788579940796
    6. ' for' → logprob: -4.189788341522217
    7. '    
' → logprob: -6.439788341522217
    8. '```' → logprob: -6.439788341522217
    9. '
' → logprob: -7.064788341522217
    10. 'import' → logprob: -7.439788341522217

Token 2630: ' parcour' (ID: 130642)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8646181225776672
    2. 'k' → logprob: -1.4896180629730225
    3. ' k' → logprob: -1.7396180629730225
    4. ' ' → logprob: -2.4896180629730225
    5. '<|end|>' → logprob: -3.7396180629730225
    6. ')' → logprob: -3.9896180629730225
    7. 'range' → logprob: -4.114618301391602
    8. '<|end|>' → logprob: -4.364618301391602
    9. ' range' → logprob: -4.989618301391602
    10. 'max' → logprob: -5.114618301391602

Token 2631: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.001699821907095611
    2. 'i' → logprob: -6.751699924468994
    3. 'r' → logprob: -7.626699924468994
    4. 'ire' → logprob: -11.376699447631836
    5. 'er' → logprob: -11.876699447631836
    6. '_' → logprob: -12.626699447631836
    7. '   ' → logprob: -12.626699447631836
    8. '__' → logprob: -12.876699447631836
    9. 'u' → logprob: -13.126699447631836
    10. '\' → logprob: -13.251699447631836

Token 2632: ' toutes' (ID: 17502)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23189257085323334
    2. '-' → logprob: -1.7318925857543945
    3. '1' → logprob: -4.2318925857543945
    4. 'k' → logprob: -4.7318925857543945
    5. ' range' → logprob: -5.8568925857543945
    6. '-k' → logprob: -6.9818925857543945
    7. ' -' → logprob: -7.2318925857543945
    8. 'max' → logprob: -7.3568925857543945
    9. '-range' → logprob: -7.8568925857543945
    10. '0' → logprob: -7.9818925857543945

Token 2633: ' périodes' (ID: 179488)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.4347609281539917
    2. 'k' → logprob: -1.5597609281539917
    3. ')' → logprob: -2.1847610473632812
    4. ' ' → logprob: -2.8097610473632812
    5. 'possible' → logprob: -3.3097610473632812
    6. 'tokens' → logprob: -3.3097610473632812
    7. ' possible' → logprob: -3.4347610473632812
    8. ' possibles' → logprob: -3.8097610473632812
    9. '1' → logprob: -4.059761047363281
    10. '_possible' → logprob: -4.059761047363281

Token 2634: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47747743129730225
    2. '
' → logprob: -1.4774774312973022
    3. 'for' → logprob: -2.477477550506592
    4. ' for' → logprob: -2.727477550506592
    5. '    
' → logprob: -7.102477550506592
    6. '	for' → logprob: -7.602477550506592
    7. '```' → logprob: -8.477477073669434
    8. '  
' → logprob: -8.977477073669434
    9. '
' → logprob: -9.352477073669434
    10. 'def' → logprob: -9.602477073669434

Token 2635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5098240971565247
    2. '
' → logprob: -1.0098240375518799
    3. 'for' → logprob: -3.50982403755188
    4. ' for' → logprob: -5.509824275970459
    5. '    
' → logprob: -7.509824275970459
    6. '```' → logprob: -8.1348237991333
    7. '
' → logprob: -8.5098237991333
    8. '  
' → logprob: -10.3848237991333
    9. '	for' → logprob: -10.5098237991333
    10. 'def' → logprob: -11.7598237991333

Token 2636: ' den' (ID: 1786)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22236448526382446
    2. '   ' → logprob: -2.0973644256591797
    3. ' for' → logprob: -2.5973644256591797
    4. '
' → logprob: -6.97236442565918
    5. '```' → logprob: -7.22236442565918
    6. 'k' → logprob: -8.47236442565918
    7. 'def' → logprob: -9.47236442565918
    8. 'i' → logprob: -9.84736442565918
    9. 't' → logprob: -10.34736442565918
    10. '    
' → logprob: -10.47236442565918

Token 2637: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3145291805267334
    2. ' =' → logprob: -1.3145291805267334
    3. ',' → logprob: -6.6895294189453125
    4. ':' → logprob: -11.939529418945312
    5. '=None' → logprob: -12.814529418945312
    6. ')' → logprob: -12.939529418945312
    7. ' ,' → logprob: -13.689529418945312
    8. 's' → logprob: -13.689529418945312
    9. '=int' → logprob: -13.814529418945312
    10. '.' → logprob: -13.814529418945312

Token 2638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036047372967004776
    2. ' =' → logprob: -3.4110474586486816
    3. ',' → logprob: -6.036047458648682
    4. '=None' → logprob: -13.036046981811523
    5. '=int' → logprob: -14.036046981811523
    6. ':' → logprob: -14.036046981811523
    7. '=True' → logprob: -14.411046981811523
    8. '=
' → logprob: -14.536046981811523
    9. '='' → logprob: -14.911046981811523
    10. '=}' → logprob: -14.911046981811523

Token 2639: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1379740685224533
    2. '(' → logprob: -3.3879740238189697
    3. 'A' → logprob: -3.6379740238189697
    4. 'int' → logprob: -3.6379740238189697
    5. '(A' → logprob: -4.012974262237549
    6. '360' → logprob: -4.137974262237549
    7. '10' → logprob: -5.887974262237549
    8. 'max' → logprob: -6.262974262237549
    9. '(int' → logprob: -6.262974262237549
    10. '100' → logprob: -7.512974262237549

Token 2640: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6184695363044739
    2. ' *' → logprob: -0.8684695363044739
    3. ',' → logprob: -4.118469715118408
    4. '<|end|>' → logprob: -4.493469715118408
    5. '*num' → logprob: -5.993469715118408
    6. '<|end|>' → logprob: -5.993469715118408
    7. ')' → logprob: -5.993469715118408
    8. '*k' → logprob: -6.243469715118408
    9. '```' → logprob: -6.868469715118408
    10. '*(' → logprob: -7.743469715118408

Token 2641: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0001239196863025427
    2. ' B' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.375123977661133
    4. '1' → logprob: -15.750123977661133
    5. '	B' → logprob: -17.000123977661133
    6. '(' → logprob: -17.500123977661133
    7. ' ' → logprob: -17.500123977661133
    8. '0' → logprob: -18.375123977661133
    9. '#' → logprob: -18.375123977661133
    10. '(B' → logprob: -18.500123977661133

Token 2642: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17367447912693024
    2. ',' → logprob: -2.2986745834350586
    3. '*' → logprob: -4.173674583435059
    4. ')' → logprob: -4.298674583435059
    5. '   ' → logprob: -4.923674583435059
    6. '  
' → logprob: -5.048674583435059
    7. '    
' → logprob: -5.548674583435059
    8. '```' → logprob: -6.423674583435059
    9. '
' → logprob: -6.673674583435059
    10. '   
' → logprob: -6.798674583435059

Token 2643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3375628590583801
    2. 'num' → logprob: -1.8375627994537354
    3. 'for' → logprob: -2.4625627994537354
    4. '
' → logprob: -4.4625630378723145
    5. '    
' → logprob: -4.5875630378723145
    6. '#' → logprob: -5.4625630378723145
    7. 'if' → logprob: -6.2125630378723145
    8. '1' → logprob: -6.3375630378723145
    9. ' for' → logprob: -6.4625630378723145
    10. '```' → logprob: -6.4625630378723145

Token 2644: ' den' (ID: 1786)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3442155420780182
    2. 'for' → logprob: -1.5942155122756958
    3. ' if' → logprob: -3.2192156314849854
    4. '   ' → logprob: -3.4692156314849854
    5. 'num' → logprob: -4.344215393066406
    6. ' for' → logprob: -5.719215393066406
    7. '1' → logprob: -7.719215393066406
    8. '```' → logprob: -9.719215393066406
    9. 'den' (adapté à ' den') → logprob: -10.219215393066406
    10. ' num' → logprob: -10.469215393066406

Token 2645: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01755695231258869
    2. '=' → logprob: -4.392557144165039
    3. '2' → logprob: -5.392557144165039
    4. ' =' → logprob: -7.892557144165039
    5. '```' → logprob: -10.142557144165039
    6. '_' → logprob: -10.392557144165039
    7. '=None' → logprob: -11.392557144165039
    8. '=_' → logprob: -12.017557144165039
    9. '_=' → logprob: -13.017557144165039
    10. '#' → logprob: -13.267557144165039

Token 2646: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.826414108276367
    4. '＝' → logprob: -17.951414108276367
    5. ')' → logprob: -18.201414108276367
    6. ':' → logprob: -18.951414108276367
    7. '=A' → logprob: -19.076414108276367
    8. 'A' → logprob: -19.826414108276367
    9. '=
' → logprob: -20.076414108276367
    10. ',' → logprob: -20.076414108276367

Token 2647: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.607391408877447e-05
    2. ' A' → logprob: -10.625036239624023
    3. '(A' → logprob: -11.500036239624023
    4. '(' → logprob: -13.500036239624023
    5. '   ' → logprob: -16.500036239624023
    6. ' (' → logprob: -17.375036239624023
    7. '-A' → logprob: -18.375036239624023
    8. '-' → logprob: -18.500036239624023
    9. '	A' → logprob: -18.500036239624023
    10. '0' → logprob: -18.750036239624023

Token 2648: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2282838672399521
    2. '+' → logprob: -1.6032838821411133
    3. ' -' → logprob: -5.978283882141113
    4. '+B' → logprob: -8.478283882141113
    5. '-' → logprob: -9.103283882141113
    6. ' ' → logprob: -12.728283882141113
    7. ')' → logprob: -12.853283882141113
    8. '   ' → logprob: -13.603283882141113
    9. ' +
' → logprob: -14.103283882141113
    10. '+
' → logprob: -14.103283882141113

Token 2649: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007099286303855479
    2. ' B' → logprob: -7.2507100105285645
    3. '	B' → logprob: -19.750709533691406
    4. '   ' → logprob: -20.250709533691406
    5. ' ' → logprob: -21.500709533691406
    6. '=B' → logprob: -22.875709533691406
    7. '>B' → logprob: -22.875709533691406
    8. '0' → logprob: -23.000709533691406
    9. '+B' → logprob: -23.125709533691406
    10. '+' → logprob: -23.250709533691406

Token 2650: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05219592526555061
    2. '   ' → logprob: -3.0521960258483887
    3. '

' → logprob: -6.177196025848389
    4. '    
' → logprob: -7.302196025848389
    5. 'for' → logprob: -7.302196025848389
    6. '
' → logprob: -9.80219554901123
    7. '```' → logprob: -9.92719554901123
    8. ' for' → logprob: -10.67719554901123
    9. 'if' → logprob: -11.05219554901123
    10. '  
' → logprob: -11.55219554901123

Token 2651: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5133269429206848
    2. '   ' → logprob: -1.26332688331604
    3. ' for' → logprob: -2.26332688331604
    4. '```' → logprob: -4.263327121734619
    5. '
' → logprob: -8.263326644897461
    6. '    
' → logprob: -8.513326644897461
    7. '``' → logprob: -9.388326644897461
    8. '	for' → logprob: -10.638326644897461
    9. '  
' → logprob: -10.638326644897461
    10. 'k' → logprob: -10.888326644897461

Token 2652: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2701278626918793
    2. '   ' → logprob: -1.7701278924942017
    3. ' for' → logprob: -2.770127773284912
    4. '
' → logprob: -5.895127773284912
    5. '```' → logprob: -7.145127773284912
    6. 'k' → logprob: -9.27012825012207
    7. '    
' → logprob: -9.64512825012207
    8. 'i' → logprob: -11.27012825012207
    9. '``' → logprob: -12.02012825012207
    10. 'range' → logprob: -12.14512825012207

Token 2653: '0' (ID: 15)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.1464271545410156
    2. '=' → logprob: -1.6464271545410156
    3. 's' → logprob: -1.7714271545410156
    4. 'for' → logprob: -2.3964271545410156
    5. '_values' → logprob: -2.5214271545410156
    6. '_num' → logprob: -3.2714271545410156
    7. '_times' → logprob: -3.3964271545410156
    8. ' =' → logprob: -3.5214271545410156
    9. '_vals' → logprob: -4.271427154541016
    10. '_list' → logprob: -5.146427154541016

Token 2654: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13937240839004517
    2. '_num' → logprob: -2.3893723487854004
    3. '=' → logprob: -4.2643723487854
    4. '_' → logprob: -5.1393723487854
    5. ',_' → logprob: -5.1393723487854
    6. '_,' → logprob: -5.1393723487854
    7. ' =' → logprob: -5.7643723487854
    8. ',num' → logprob: -6.5143723487854
    9. '_space' → logprob: -8.139372825622559
    10. ')' → logprob: -8.514372825622559

Token 2655: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13514137268066406
    2. 'time' → logprob: -2.135141372680664
    3. 'frac' → logprob: -5.885141372680664
    4. ' t' → logprob: -6.260141372680664
    5. 'fraction' → logprob: -6.885141372680664
    6. ' time' → logprob: -6.885141372680664
    7. '(t' → logprob: -7.135141372680664
    8. '(time' → logprob: -8.135141372680664
    9. '   ' → logprob: -9.635141372680664
    10. 'h' → logprob: -9.885141372680664

Token 2656: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0005412388709373772
    2. '_den' → logprob: -7.7505412101745605
    3. ''_' → logprob: -10.375541687011719
    4. '```' → logprob: -10.750541687011719
    5. 'num' → logprob: -11.000541687011719
    6. '[' → logprob: -12.000541687011719
    7. '_' → logprob: -12.625541687011719
    8. ' _' → logprob: -13.000541687011719
    9. '_start' → logprob: -13.125541687011719
    10. '+' → logprob: -13.125541687011719

Token 2657: ' /' (ID: 820)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18845850229263306
    2. '<|end|>' → logprob: -1.9384584426879883
    3. '<|end|>' → logprob: -4.188458442687988
    4. '   ' → logprob: -5.063458442687988
    5. ' ,' → logprob: -6.688458442687988
    6. ' ' → logprob: -6.938458442687988
    7. ' +' → logprob: -7.188458442687988
    8. '+' → logprob: -7.438458442687988
    9. '```' → logprob: -7.813458442687988
    10. ')' → logprob: -7.813458442687988

Token 2658: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -9.627176768844947e-05
    2. ' t' → logprob: -9.250096321105957
    3. '`t' → logprob: -16.75009536743164
    4. '	t' → logprob: -18.50009536743164
    5. '   ' → logprob: -18.75009536743164
    6. '1' → logprob: -21.25009536743164
    7. ')t' → logprob: -21.87509536743164
    8. '       ' → logprob: -22.12509536743164
    9. 'float' → logprob: -22.12509536743164
    10. '_t' → logprob: -22.25009536743164

Token 2659: '_den' (ID: 145579)
  Prédit: '_den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_den' → logprob: -0.3491092324256897
    2. 'den' → logprob: -1.224109172821045
    3. 't' → logprob: -7.474109172821045
    4. 'd' → logprob: -10.474109649658203
    5. '0' → logprob: -10.974109649658203
    6. '```' → logprob: -11.224109649658203
    7. '_DEN' → logprob: -11.599109649658203
    8. 'def' → logprob: -11.849109649658203
    9. '   ' → logprob: -11.849109649658203
    10. '10' → logprob: -13.599109649658203

Token 2660: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008434316143393517
    2. '   ' → logprob: -5.508434295654297
    3. '    
' → logprob: -6.383434295654297
    4. '
' → logprob: -7.008434295654297
    5. '+' → logprob: -7.258434295654297
    6. '

' → logprob: -7.508434295654297
    7. '  
' → logprob: -9.258434295654297
    8. ' +' → logprob: -9.758434295654297
    9. 'for' → logprob: -10.008434295654297
    10. '
    
' → logprob: -10.133434295654297

Token 2661: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010816002264618874
    2. '   ' → logprob: -5.1358160972595215
    3. 'for' → logprob: -6.2608160972595215
    4. '    
' → logprob: -6.7608160972595215
    5. '

' → logprob: -7.0108160972595215
    6. ' for' → logprob: -8.010815620422363
    7. '
' → logprob: -8.760815620422363
    8. '+' → logprob: -8.885815620422363
    9. '#' → logprob: -9.385815620422363
    10. '  
' → logprob: -10.385815620422363

Token 2662: ' temps' (ID: 11160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.025976398959755898
    2. ' t' → logprob: -4.275976181030273
    3. '0' → logprob: -5.025976181030273
    4. ')' → logprob: -6.150976181030273
    5. '1' → logprob: -7.025976181030273
    6. '#' → logprob: -7.775976181030273
    7. '```' → logprob: -7.900976181030273
    8. '.' → logprob: -8.400976181030273
    9. ')t' → logprob: -8.650976181030273
    10. ' ' → logprob: -8.650976181030273

Token 2663: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9734302163124084
    2. '
' → logprob: -1.5984301567077637
    3. '   ' → logprob: -1.7234301567077637
    4. ' +' → logprob: -2.4734301567077637
    5. 'for' → logprob: -3.2234301567077637
    6. 'import' → logprob: -3.5984301567077637
    7. '=' → logprob: -4.348430156707764
    8. '```' → logprob: -4.348430156707764
    9. ' for' → logprob: -4.598430156707764
    10. ')' → logprob: -4.848430156707764

Token 2664: ' départ' (ID: 32693)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.9261523485183716
    2. 'start' → logprob: -1.6761523485183716
    3. 'ré' → logprob: -2.176152229309082
    4. 'part' → logprob: -2.426152229309082
    5. 'dé' → logprob: -2.551152229309082
    6. ' départ' → logprob: -4.051152229309082
    7. 'continue' → logprob: -4.051152229309082
    8. 'continu' → logprob: -4.426152229309082
    9. 'depart' → logprob: -4.551152229309082
    10. 'origine' → logprob: -4.676152229309082

Token 2665: ' en' (ID: 469)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08945213258266449
    2. '   ' → logprob: -2.964452028274536
    3. 'for' → logprob: -3.839452028274536
    4. '```' → logprob: -5.089452266693115
    5. ' for' → logprob: -5.589452266693115
    6. '    
' → logprob: -6.214452266693115
    7. '

' → logprob: -8.714451789855957
    8. '  
' → logprob: -9.464451789855957
    9. ' 
' → logprob: -9.589451789855957
    10. '#' → logprob: -9.714451789855957

Token 2666: ' float' (ID: 4428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3509763777256012
    2. 'float' → logprob: -1.2259763479232788
    3. 't' → logprob: -7.725976467132568
    4. '360' → logprob: -7.850976467132568
    5. 'f' → logprob: -8.10097599029541
    6. ' float' → logprob: -8.35097599029541
    7. 's' → logprob: -8.35097599029541
    8. 'fraction' → logprob: -8.72597599029541
    9. ')' → logprob: -9.10097599029541
    10. '.' → logprob: -9.10097599029541

Token 2667: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2305346429347992
    2. '   ' → logprob: -2.355534553527832
    3. 'for' → logprob: -2.355534553527832
    4. ' for' → logprob: -4.855534553527832
    5. '```' → logprob: -5.105534553527832
    6. '    
' → logprob: -6.355534553527832
    7. '

' → logprob: -8.980534553527832
    8. 'k' → logprob: -9.355534553527832
    9. 'import' → logprob: -9.605534553527832
    10. '
' → logprob: -9.730534553527832

Token 2668: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16778552532196045
    2. 'for' → logprob: -2.29278564453125
    3. ' for' → logprob: -3.04278564453125
    4. '
' → logprob: -5.54278564453125
    5. '```' → logprob: -6.41778564453125
    6. '    
' → logprob: -8.66778564453125
    7. 'k' → logprob: -11.54278564453125
    8. 'i' → logprob: -11.54278564453125
    9. '``' → logprob: -11.66778564453125
    10. '  
' → logprob: -12.16778564453125

Token 2669: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.285398006439209
    2. '   ' → logprob: -1.910398006439209
    3. ' for' → logprob: -2.535398006439209
    4. '```' → logprob: -4.410398006439209
    5. '
' → logprob: -4.785398006439209
    6. 'k' → logprob: -8.285398483276367
    7. '``' → logprob: -9.285398483276367
    8. 'import' → logprob: -10.160398483276367
    9. '    
' → logprob: -10.160398483276367
    10. 't' → logprob: -10.410398483276367

Token 2670: ' check' (ID: 2371)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.323166847229004
    2. 'solve' → logprob: -1.823166847229004
    3. 'find' → logprob: -1.948166847229004
    4. 'generate' → logprob: -2.198166847229004
    5. 'possible' → logprob: -2.323166847229004
    6. 'is' → logprob: -2.823166847229004
    7. 'valid' → logprob: -2.948166847229004
    8. 'candidate' → logprob: -3.073166847229004
    9. 'search' → logprob: -4.448166847229004
    10. 'solutions' → logprob: -4.823166847229004

Token 2671: '_t' (ID: 838)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.9008464813232422
    2. '(t' → logprob: -1.6508464813232422
    3. '_t' → logprob: -2.150846481323242
    4. '_candidate' → logprob: -2.275846481323242
    5. '_time' → logprob: -2.775846481323242
    6. '(' → logprob: -3.150846481323242
    7. '_solution' → logprob: -3.400846481323242
    8. '_candidates' → logprob: -4.025846481323242
    9. '_times' → logprob: -4.650846481323242
    10. '(candidate' → logprob: -5.525846481323242

Token 2672: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.532001256942749
    2. '(' → logprob: -1.532001256942749
    3. '(num' → logprob: -2.032001256942749
    4. '(k' → logprob: -3.032001256942749
    5. '(_' → logprob: -4.407001495361328
    6. ':' → logprob: -6.782001495361328
    7. '_(' → logprob: -7.532001495361328
    8. '(n' → logprob: -7.657001495361328
    9. '_num' → logprob: -7.782001495361328
    10. '_' → logprob: -8.282001495361328

Token 2673: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3168070614337921
    2. '):
' → logprob: -1.4418070316314697
    3. ')' → logprob: -4.691807270050049
    4. '   ' → logprob: -4.691807270050049
    5. ':' → logprob: -5.441807270050049
    6. '+' → logprob: -5.566807270050049
    7. ',' → logprob: -5.566807270050049
    8. '_num' → logprob: -6.941807270050049
    9. '[' → logprob: -7.441807270050049
    10. '_' → logprob: -7.566807270050049

Token 2674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04744957759976387
    2. '   ' → logprob: -3.2974495887756348
    3. '    ' → logprob: -6.047449588775635
    4. ':' → logprob: -6.672449588775635
    5. '(' → logprob: -7.422449588775635
    6. ':
' → logprob: -7.422449588775635
    7. ' 
' → logprob: -7.422449588775635
    8. '    
' → logprob: -7.422449588775635
    9. '\' → logprob: -7.922449588775635
    10. '\n' → logprob: -8.047449111938477

Token 2675: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09907659888267517
    2. '   ' → logprob: -3.349076509475708
    3. ' if' → logprob: -3.474076509475708
    4. ' return' → logprob: -3.724076509475708
    5. 'return' → logprob: -6.349076747894287
    6. 'if' → logprob: -6.599076747894287
    7. ' ' → logprob: -8.099076271057129
    8. '    ' → logprob: -8.224076271057129
    9. '   ' → logprob: -9.099076271057129
    10. '   ' → logprob: -9.474076271057129

Token 2676: ' vér' (ID: 42524)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7276480197906494
    2. ' if' → logprob: -1.4776480197906494
    3. '   ' → logprob: -1.8526480197906494
    4. 'if' → logprob: -2.2276480197906494
    5. ' return' → logprob: -4.47764778137207
    6. 'return' → logprob: -4.72764778137207
    7. '
' → logprob: -6.85264778137207
    8. '           ' → logprob: -7.35264778137207
    9. '#' → logprob: -8.10264778137207
    10. '    ' → logprob: -8.22764778137207

Token 2677: 'ifie' (ID: 46409)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0530354976654053
    2. '   ' → logprob: -1.3030354976654053
    3. 'if' → logprob: -1.8030354976654053
    4. 'ifie' → logprob: -1.9280354976654053
    5. 'ifier' → logprob: -3.0530354976654053
    6. ' if' → logprob: -4.678035736083984
    7. 'ify' → logprob: -5.803035736083984
    8. '       ' → logprob: -5.928035736083984
    9. ' i' → logprob: -6.178035736083984
    10. 'ifié' → logprob: -7.303035736083984

Token 2678: ' si' (ID: 1784)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5379002690315247
    2. 't' → logprob: -0.9129002690315247
    3. ' abs' → logprob: -5.287900447845459
    4. 'abs' → logprob: -5.412900447845459
    5. ' (' → logprob: -6.412900447845459
    6. '(' → logprob: -6.787900447845459
    7. '(t' → logprob: -7.037900447845459
    8. '(abs' → logprob: -7.662900447845459
    9. '   ' → logprob: -7.912900447845459
    10. '0' → logprob: -8.4128999710083

Token 2679: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3745693266391754
    2. 'abs' → logprob: -1.624569296836853
    3. ' t' → logprob: -2.6245694160461426
    4. ' abs' → logprob: -4.124569416046143
    5. '0' → logprob: -4.249569416046143
    6. 'no' → logprob: -5.124569416046143
    7. ' no' → logprob: -5.999569416046143
    8. '(abs' → logprob: -6.749569416046143
    9. '(' → logprob: -7.124569416046143
    10. ' (' → logprob: -7.749569416046143

Token 2680: ' satisfait' (ID: 174890)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5786604881286621
    2. ' >=' → logprob: -1.203660488128662
    3. '<=' → logprob: -2.703660488128662
    4. '>=' → logprob: -2.828660488128662
    5. ')' → logprob: -5.578660488128662
    6. '<|end|>' → logprob: -6.078660488128662
    7. ' >' → logprob: -6.328660488128662
    8. '>' → logprob: -6.578660488128662
    9. ' <' → logprob: -6.703660488128662
    10. '*' → logprob: -7.828660488128662

Token 2681: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4351702630519867
    2. 'abs' → logprob: -2.0601701736450195
    3. ' t' → logprob: -2.4351701736450195
    4. '(abs' → logprob: -2.8101701736450195
    5. '(t' → logprob: -3.9351701736450195
    6. ' abs' → logprob: -3.9351701736450195
    7. '(' → logprob: -4.8101701736450195
    8. ' (' → logprob: -4.9351701736450195
    9. ')' → logprob: -5.0601701736450195
    10. 'True' → logprob: -5.6851701736450195

Token 2682: 't' (ID: 83)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.10899084061384201
    2. ')' → logprob: -3.3589909076690674
    3. 't' → logprob: -3.6089909076690674
    4. 'no' → logprob: -4.233990669250488
    5. 'equal' → logprob: -4.608990669250488
    6. '   ' → logprob: -5.608990669250488
    7. 'A' → logprob: -5.733990669250488
    8. ' abs' → logprob: -5.858990669250488
    9. 'not' → logprob: -6.358990669250488
    10. '(abs' → logprob: -7.483990669250488

Token 2683: '>=' (ID: 20974)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7134455442428589
    2. ' <=' → logprob: -1.3384455442428589
    3. '>=' → logprob: -2.0884456634521484
    4. '<=' → logprob: -2.9634456634521484
    5. ')' → logprob: -4.213445663452148
    6. ' *' → logprob: -4.213445663452148
    7. '*' → logprob: -4.338445663452148
    8. ',' → logprob: -4.588445663452148
    9. '   ' → logprob: -5.213445663452148
    10. '       ' → logprob: -5.463445663452148

Token 2684: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009935104753822088
    2. ' t' → logprob: -7.000993728637695
    3. '   ' → logprob: -9.750993728637695
    4. '0' → logprob: -11.500993728637695
    5. ')' → logprob: -12.125993728637695
    6. '       ' → logprob: -12.375993728637695
    7. ')t' → logprob: -13.875993728637695
    8. '    ' → logprob: -14.375993728637695
    9. '	t' → logprob: -14.625993728637695
    10. '`t' → logprob: -14.750993728637695

Token 2685: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004207444377243519
    2. ')' → logprob: -5.754207611083984
    3. ' >=' → logprob: -7.754207611083984
    4. '>=' → logprob: -8.754207611083984
    5. ' )' → logprob: -9.754207611083984
    6. '_' → logprob: -9.754207611083984
    7. '   ' → logprob: -9.879207611083984
    8. ' ' → logprob: -10.254207611083984
    9. '>' → logprob: -10.254207611083984
    10. '```' → logprob: -10.379207611083984

Token 2686: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5825170874595642
    2. ' and' → logprob: -0.8325170874595642
    3. 'and' → logprob: -5.082517147064209
    4. ' )' → logprob: -8.20751667022705
    5. '       ' → logprob: -10.70751667022705
    6. '),' → logprob: -11.33251667022705
    7. ' et' → logprob: -11.33251667022705
    8. ')
' → logprob: -11.58251667022705
    9. 'et' → logprob: -12.08251667022705
    10. '):
' → logprob: -12.45751667022705

Token 2687: ' conditions' (ID: 6409)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8168119192123413
    2. ' True' → logprob: -1.3168119192123413
    3. 'True' → logprob: -2.441812038421631
    4. ' t' → logprob: -2.566812038421631
    5. ' return' → logprob: -2.691812038421631
    6. 't' → logprob: -4.816812038421631
    7. '
' → logprob: -4.816812038421631
    8. 'return' → logprob: -5.066812038421631
    9. '   ' → logprob: -5.191812038421631
    10. ' ' → logprob: -5.441812038421631

Token 2688: ' no' (ID: 860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47412094473838806
    2. ':' → logprob: -1.4741209745407104
    3. '       ' → logprob: -2.599120855331421
    4. ':
' → logprob: -3.099120855331421
    5. '
' → logprob: -4.22412109375
    6. '):' → logprob: -5.59912109375
    7. '(' → logprob: -5.97412109375
    8. ' and' → logprob: -6.72412109375
    9. '):
' → logprob: -7.09912109375
    10. ' :' → logprob: -7.22412109375

Token 2689: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.015132301487028599
    2. '_' → logprob: -4.390132427215576
    3. ' overlap' → logprob: -6.515132427215576
    4. ' _' → logprob: -7.765132427215576
    5. '   ' → logprob: -8.640131950378418
    6. 't' → logprob: -9.265131950378418
    7. '```' → logprob: -9.515131950378418
    8. '
' → logprob: -10.140131950378418
    9. '_over' → logprob: -10.265131950378418
    10. 'over' → logprob: -10.265131950378418

Token 2690: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.013556718826294
    2. '   ' → logprob: -1.513556718826294
    3. '       ' → logprob: -1.763556718826294
    4. ')' → logprob: -3.013556718826294
    5. ',' → logprob: -3.013556718826294
    6. ':' → logprob: -3.013556718826294
    7. '):' → logprob: -3.013556718826294
    8. 'and' → logprob: -4.013556480407715
    9. '):
' → logprob: -4.388556480407715
    10. '(' → logprob: -5.013556480407715

Token 2691: ' égal' (ID: 15059)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.003207538742572069
    2. ' equal' → logprob: -5.753207683563232
    3. '   ' → logprob: -10.878207206726074
    4. '
' → logprob: -12.753207206726074
    5. '       ' → logprob: -13.253207206726074
    6. 'abs' → logprob: -13.628207206726074
    7. '(equal' → logprob: -13.628207206726074
    8. 'def' → logprob: -14.253207206726074
    9. '
' → logprob: -14.878207206726074
    10. 'import' → logprob: -15.003207206726074

Token 2692: 'ité' (ID: 3761)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.286579966545105
    2. '_' → logprob: -1.911579966545105
    3. '   ' → logprob: -1.911579966545105
    4. ')' → logprob: -2.1615800857543945
    5. '=' → logprob: -2.4115800857543945
    6. '       ' → logprob: -3.5365800857543945
    7. 'e' → logprob: -3.6615800857543945
    8. '(
' → logprob: -3.6615800857543945
    9. 'aux' → logprob: -4.2865800857543945
    10. '_equal' → logprob: -4.5365800857543945

Token 2693: ' angles' (ID: 43448)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.4823528826236725
    2. '(' → logprob: -1.85735285282135
    3. '   ' → logprob: -2.6073529720306396
    4. '       ' → logprob: -3.2323529720306396
    5. ')' → logprob: -3.8573529720306396
    6. '_t' → logprob: -4.1073527336120605
    7. ',' → logprob: -4.1073527336120605
    8. ' (' → logprob: -4.1073527336120605
    9. '```' → logprob: -4.6073527336120605
    10. ' and' → logprob: -4.7323527336120605

Token 2694: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29769614338874817
    2. '   ' → logprob: -1.5476961135864258
    3. ':' → logprob: -4.422696113586426
    4. ':
' → logprob: -4.422696113586426
    5. '
' → logprob: -5.047696113586426
    6. '):' → logprob: -5.297696113586426
    7. '):
' → logprob: -5.422696113586426
    8. ')' → logprob: -6.422696113586426
    9. '(' → logprob: -7.547696113586426
    10. ',' → logprob: -7.922696113586426

Token 2695: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6212961673736572
    2. '   ' → logprob: -1.8712961673736572
    3. '(t' → logprob: -1.8712961673736572
    4. ':' → logprob: -3.1212961673736572
    5. ':
' → logprob: -3.2462961673736572
    6. '       ' → logprob: -3.2462961673736572
    7. '):
' → logprob: -3.9962961673736572
    8. '(' → logprob: -4.871295928955078
    9. '):' → logprob: -5.996295928955078
    10. '(
' → logprob: -7.121295928955078

Token 2696: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5239840745925903
    2. '   ' → logprob: -0.8989840745925903
    3. '    ' → logprob: -8.1489839553833
    4. ' if' → logprob: -8.5239839553833
    5. '
' → logprob: -9.3989839553833
    6. 'if' (adapté à ' if') → logprob: -9.7739839553833
    7. ' ah' → logprob: -9.8989839553833
    8. '    
' → logprob: -10.2739839553833
    9. '           ' → logprob: -10.5239839553833
    10. '        
' → logprob: -10.8989839553833

Token 2697: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12702816724777222
    2. ' t' → logprob: -2.127028226852417
    3. '   ' → logprob: -9.627028465270996
    4. 'abs' → logprob: -10.877028465270996
    5. '    ' → logprob: -12.502028465270996
    6. '	t' → logprob: -12.752028465270996
    7. '       ' → logprob: -13.252028465270996
    8. ' ' → logprob: -13.252028465270996
    9. ' abs' → logprob: -13.627028465270996
    10. '_t' → logprob: -14.252028465270996

Token 2698: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8602951169013977
    2. ' >=' → logprob: -0.8602951169013977
    3. '>=' → logprob: -2.235295057296753
    4. '<' → logprob: -3.110295057296753
    5. '   ' → logprob: -7.360295295715332
    6. ' <=' → logprob: -7.610295295715332
    7. '<=' → logprob: -7.985295295715332
    8. '>' → logprob: -8.860295295715332
    9. ' >' → logprob: -9.110295295715332
    10. ')' → logprob: -9.235295295715332

Token 2699: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008621551096439362
    2. ' t' → logprob: -4.758621692657471
    3. '   ' → logprob: -12.258621215820312
    4. '0' → logprob: -13.758621215820312
    5. '(t' → logprob: -14.883621215820312
    6. '`t' → logprob: -15.133621215820312
    7. '	t' → logprob: -15.508621215820312
    8. '1' → logprob: -16.258621215820312
    9. ' ' → logprob: -16.508621215820312
    10. '       ' → logprob: -16.758621215820312

Token 2700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.25001049041748
    3. '_num' → logprob: -13.37501049041748
    4. '   ' → logprob: -14.25001049041748
    5. '```' → logprob: -14.62501049041748
    6. ' ' → logprob: -14.75001049041748
    7. '
' → logprob: -14.87501049041748
    8. 'o' → logprob: -15.37501049041748
    9. ')' → logprob: -15.37501049041748
    10. ' _' → logprob: -15.50001049041748

Token 2701: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0519838333129883
    2. '       ' → logprob: -1.3019838333129883
    3. ':' → logprob: -1.5519838333129883
    4. ':
' → logprob: -1.9269838333129883
    5. ' or' → logprob: -4.051983833312988
    6. ':return' → logprob: -5.926983833312988
    7. '   ' → logprob: -8.801983833312988
    8. '               ' → logprob: -8.926983833312988
    9. '          ' → logprob: -9.051983833312988
    10. '+' → logprob: -9.176983833312988

Token 2702: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15687714517116547
    2. ':
' → logprob: -2.531877040863037
    3. '           ' → logprob: -3.156877040863037
    4. ':' → logprob: -3.781877040863037
    5. ':return' → logprob: -9.531877517700195
    6. ' :
' → logprob: -9.781877517700195
    7. ' return' → logprob: -10.281877517700195
    8. '
' → logprob: -10.406877517700195
    9. '               ' → logprob: -11.031877517700195
    10. '   ' → logprob: -11.156877517700195

Token 2703: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24486804008483887
    2. 'return' (adapté à ' return') → logprob: -1.9948680400848389
    3. ' return' → logprob: -3.119868040084839
    4. '       ' → logprob: -3.369868040084839
    5. 'False' → logprob: -6.244868278503418
    6. '               ' → logprob: -8.494868278503418
    7. ' False' → logprob: -8.619868278503418
    8. '	       ' → logprob: -9.869868278503418
    9. '	return' → logprob: -10.369868278503418
    10. '0' → logprob: -10.369868278503418

Token 2704: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.688212614681106e-05
    2. ' False' → logprob: -11.000017166137695
    3. 'None' → logprob: -16.250017166137695
    4. '(False' → logprob: -16.875017166137695
    5. 'True' → logprob: -19.375017166137695
    6. '0' → logprob: -20.125017166137695
    7. '
' → logprob: -20.750017166137695
    8. '   ' → logprob: -21.375017166137695
    9. 'false' → logprob: -21.875017166137695
    10. '=False' → logprob: -21.875017166137695

Token 2705: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05608706176280975
    2. '   ' → logprob: -3.056087017059326
    3. '<|end|>' → logprob: -5.681087017059326
    4. '
' → logprob: -6.056087017059326
    5. '	' → logprob: -7.181087017059326
    6. '    
' → logprob: -7.681087017059326
    7. ')' → logprob: -9.056087493896484
    8. '        
' → logprob: -9.181087493896484
    9. '  
' → logprob: -10.181087493896484
    10. '\
' → logprob: -10.431087493896484

Token 2706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009627926629036665
    2. '   ' → logprob: -7.250962734222412
    3. '
' → logprob: -9.25096321105957
    4. '	' → logprob: -10.25096321105957
    5. '```' → logprob: -10.25096321105957
    6. '    
' → logprob: -11.00096321105957
    7. '<|end|>' → logprob: -11.12596321105957
    8. '        
' → logprob: -11.37596321105957
    9. '\' → logprob: -11.75096321105957
    10. '           ' → logprob: -11.75096321105957

Token 2707: ' ah' (ID: 5369)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018996017752215266
    2. ' if' → logprob: -6.876899719238281
    3. '   ' → logprob: -8.251899719238281
    4. ' ah' → logprob: -9.251899719238281
    5. 'import' → logprob: -9.251899719238281
    6. ' angle' → logprob: -9.251899719238281
    7. 'angle' → logprob: -9.501899719238281
    8. 'if' → logprob: -9.626899719238281
    9. '```' → logprob: -10.376899719238281
    10. ' ' → logprob: -10.626899719238281

Token 2708: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003582729957997799
    2. '=' → logprob: -5.753582954406738
    3. ' =' → logprob: -8.378582954406738
    4. '_,' → logprob: -8.878582954406738
    5. ' ,' → logprob: -10.878582954406738
    6. '_val' → logprob: -11.878582954406738
    7. '   ' → logprob: -12.628582954406738
    8. 't' → logprob: -14.003582954406738
    9. 'angle' → logprob: -14.128582954406738
    10. '_angle' → logprob: -14.128582954406738

Token 2709: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.002665788633748889
    2. ' (' → logprob: -6.002665996551514
    3. '   ' → logprob: -9.127665519714355
    4. 'angle' → logprob: -10.627665519714355
    5. '(' → logprob: -10.752665519714355
    6. '(angle' → logprob: -11.002665519714355
    7. '((' → logprob: -11.502665519714355
    8. 'angles' → logprob: -12.877665519714355
    9. ' ' → logprob: -13.627665519714355
    10. 't' → logprob: -13.877665519714355

Token 2710: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.08913630992174149
    2. 't' → logprob: -2.4641363620758057
    3. ' (' → logprob: -9.089136123657227
    4. '   ' → logprob: -9.964136123657227
    5. '(' → logprob: -10.464136123657227
    6. ' t' → logprob: -12.589136123657227
    7. '((' → logprob: -12.839136123657227
    8. ' ' → logprob: -15.089136123657227
    9. '	t' → logprob: -15.214136123657227
    10. '[t' → logprob: -15.214136123657227

Token 2711: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1602584570646286
    2. '*' → logprob: -1.910258412361145
    3. '*(' → logprob: -11.410258293151855
    4. ' ' → logprob: -11.910258293151855
    5. ')' → logprob: -12.035258293151855
    6. '*v' → logprob: -12.535258293151855
    7. '**' → logprob: -13.660258293151855
    8. '   ' → logprob: -13.910258293151855
    9. ' *
' → logprob: -13.910258293151855
    10. '```' → logprob: -14.535258293151855

Token 2712: ' v' (ID: 323)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4428727626800537
    2. '360' → logprob: -1.1928727626800537
    3. 'v' → logprob: -3.4428727626800537
    4. '(v' → logprob: -3.8178727626800537
    5. ' (' → logprob: -7.942873001098633
    6. ' ' → logprob: -10.192873001098633
    7. '36' → logprob: -10.317873001098633
    8. '   ' → logprob: -10.692873001098633
    9. ' v' → logprob: -11.192873001098633
    10. '60' → logprob: -11.442873001098633

Token 2713: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0026525864377617836
    2. '_s' → logprob: -6.252652645111084
    3. 'h' → logprob: -7.252652645111084
    4. 's' → logprob: -12.002652168273926
    5. '_' → logprob: -12.877652168273926
    6. ')' → logprob: -13.627652168273926
    7. '_H' → logprob: -13.752652168273926
    8. ' _' → logprob: -14.127652168273926
    9. '	h' → logprob: -14.502652168273926
    10. '```' → logprob: -14.502652168273926

Token 2714: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010852093109861016
    2. ')%' → logprob: -7.00108528137207
    3. ' )' → logprob: -8.87608528137207
    4. '   ' → logprob: -10.50108528137207
    5. '%' → logprob: -12.50108528137207
    6. ')
' → logprob: -13.50108528137207
    7. ' %' → logprob: -15.12608528137207
    8. '       ' → logprob: -15.12608528137207
    9. '    ' → logprob: -15.75108528137207
    10. '  ' → logprob: -16.25108528137207

Token 2715: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7380078434944153
    2. ' %' → logprob: -1.2380077838897705
    3. ')' → logprob: -1.4880077838897705
    4. ')%' → logprob: -5.36300802230835
    5. '   ' → logprob: -6.61300802230835
    6. ' )' → logprob: -9.738007545471191
    7. ',' → logprob: -10.988007545471191
    8. '       ' → logprob: -11.738007545471191
    9. ' ' → logprob: -11.988007545471191
    10. '%)' → logprob: -12.113007545471191

Token 2716: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '180' → logprob: -18.875003814697266
    4. '```' → logprob: -19.125003814697266
    5. ' ' → logprob: -20.125003814697266
    6. '`' → logprob: -20.250003814697266
    7. '   ' → logprob: -20.625003814697266
    8. '36' → logprob: -20.750003814697266
    9. '{' → logprob: -21.750003814697266
    10. '(' → logprob: -22.500003814697266

Token 2717: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. '180' → logprob: -18.5
    4. '`' → logprob: -20.25
    5. ' ' → logprob: -20.375
    6. '{' → logprob: -21.625
    7. '36' → logprob: -21.75
    8. '``' → logprob: -22.5
    9. '[' → logprob: -22.625
    10. '720' → logprob: -23.0

Token 2718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1284429281949997
    2. '   ' → logprob: -2.2534430027008057
    3. ',' → logprob: -4.503442764282227
    4. '<|end|>' → logprob: -6.003442764282227
    5. '
' → logprob: -6.628442764282227
    6. ')' → logprob: -8.878442764282227
    7. '           ' → logprob: -9.253442764282227
    8. '        
' → logprob: -9.753442764282227
    9. '  ' → logprob: -9.878442764282227
    10. '      ' → logprob: -10.128442764282227

Token 2719: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007172936573624611
    2. '       ' → logprob: -5.00717306137085
    3. ',' → logprob: -8.382172584533691
    4. '
' → logprob: -9.882172584533691
    5. '<|end|>' → logprob: -10.132172584533691
    6. '```' → logprob: -10.882172584533691
    7. '    ' → logprob: -11.132172584533691
    8. ' am' → logprob: -11.132172584533691
    9. '    
' → logprob: -11.382172584533691
    10. '   ' → logprob: -11.507172584533691

Token 2720: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' (adapté à ' am') → logprob: -0.1286521703004837
    2. ' am' → logprob: -2.7536520957946777
    3. '   ' → logprob: -2.8786520957946777
    4. '       ' → logprob: -7.253652095794678
    5. '    ' → logprob: -10.503652572631836
    6. ' ' → logprob: -10.878652572631836
    7. '           ' → logprob: -11.253652572631836
    8. ' ' → logprob: -11.503652572631836
    9. '   ' → logprob: -12.003652572631836
    10. 'amn' → logprob: -12.378652572631836

Token 2721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38695913553237915
    2. '=' → logprob: -1.1369590759277344
    3. '   ' → logprob: -9.386959075927734
    4. ')' → logprob: -13.386959075927734
    5. '```' → logprob: -14.136959075927734
    6. ' ' → logprob: -14.386959075927734
    7. '       ' → logprob: -14.386959075927734
    8. '    ' → logprob: -15.011959075927734
    9. '=
' → logprob: -16.011959075927734
    10. ',' → logprob: -16.011959075927734

Token 2722: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.2519422471523285
    2. ' (' → logprob: -1.5019422769546509
    3. '   ' → logprob: -11.37694263458252
    4. '(' → logprob: -13.87694263458252
    5. ' ' → logprob: -15.12694263458252
    6. '  ' → logprob: -15.75194263458252
    7. '(T' → logprob: -16.376941680908203
    8. '    ' → logprob: -16.751941680908203
    9. '       ' → logprob: -17.501941680908203
    10. 't' → logprob: -17.501941680908203

Token 2723: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20147201418876648
    2. '(t' → logprob: -1.7014720439910889
    3. ' (' → logprob: -10.826472282409668
    4. '   ' → logprob: -10.826472282409668
    5. ' t' → logprob: -11.076472282409668
    6. '(' → logprob: -14.201472282409668
    7. '	t' → logprob: -14.701472282409668
    8. '       ' → logprob: -14.826472282409668
    9. 'round' → logprob: -15.076472282409668
    10. ' ' → logprob: -15.201472282409668

Token 2724: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11291538178920746
    2. '*' → logprob: -2.237915277481079
    3. '   ' → logprob: -9.4879150390625
    4. ' ' → logprob: -11.4879150390625
    5. ' ' → logprob: -13.1129150390625
    6. '*v' → logprob: -13.3629150390625
    7. '**' → logprob: -13.9879150390625
    8. ')' → logprob: -14.4879150390625
    9. '```' → logprob: -14.6129150390625
    10. '...' → logprob: -14.6129150390625

Token 2725: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005129388999193907
    2. '0' → logprob: -5.755129337310791
    3. ' v' → logprob: -6.255129337310791
    4. ' ' → logprob: -10.75512981414795
    5. '   ' → logprob: -12.00512981414795
    6. '	v' → logprob: -14.25512981414795
    7. '$v' → logprob: -15.88012981414795
    8. '```' → logprob: -16.380128860473633
    9. '       ' → logprob: -16.505128860473633
    10. '
' → logprob: -16.567628860473633

Token 2726: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00011594036914175376
    2. 'm' → logprob: -9.750116348266602
    3. '0' → logprob: -10.125116348266602
    4. '_' → logprob: -12.000116348266602
    5. '   ' → logprob: -12.625116348266602
    6. ' _' → logprob: -13.125116348266602
    7. '1' → logprob: -14.000116348266602
    8. '_v' → logprob: -14.000116348266602
    9. '10' → logprob: -14.625116348266602
    10. '100' → logprob: -14.625116348266602

Token 2727: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004846538067795336
    2. ')%' → logprob: -7.875484466552734
    3. '%' → logprob: -9.875484466552734
    4. ' )' → logprob: -10.000484466552734
    5. ' %' → logprob: -12.250484466552734
    6. '%)' → logprob: -13.875484466552734
    7. '   ' → logprob: -14.000484466552734
    8. '```' → logprob: -14.875484466552734
    9. ' ' → logprob: -16.250484466552734
    10. '`)' → logprob: -16.500484466552734

Token 2728: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31332671642303467
    2. ' %' → logprob: -1.3133267164230347
    3. ')' → logprob: -9.938326835632324
    4. ')%' → logprob: -11.188326835632324
    5. '```' → logprob: -14.563326835632324
    6. ' ' → logprob: -14.813326835632324
    7. ']%' → logprob: -15.063326835632324
    8. '%)' → logprob: -15.063326835632324
    9. ' ' → logprob: -15.188326835632324
    10. '()%' → logprob: -15.688326835632324

Token 2729: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '180' → logprob: -21.75002098083496
    4. '36' → logprob: -22.00002098083496
    5. '```' → logprob: -22.62502098083496
    6. '   ' → logprob: -22.75002098083496
    7. '(' → logprob: -22.75002098083496
    8. ' ' → logprob: -23.25002098083496
    9. '{' → logprob: -23.37502098083496
    10. '359' → logprob: -23.87502098083496

Token 2730: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '180' → logprob: -17.375
    3. ' ' → logprob: -18.625
    4. '359' → logprob: -19.625
    5. '36' → logprob: -20.5
    6. '60' → logprob: -20.625
    7. '```' → logprob: -21.125
    8. '120' → logprob: -21.25
    9. '1' → logprob: -21.875
    10. '240' → logprob: -22.625

Token 2731: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1872861236333847
    2. '   ' → logprob: -1.812286138534546
    3. 'as' → logprob: -5.437285900115967
    4. ' as' → logprob: -6.437285900115967
    5. '           ' → logprob: -7.062285900115967
    6. '<|end|>' → logprob: -8.312286376953125
    7. ',' → logprob: -8.687286376953125
    8. '	as' → logprob: -9.062286376953125
    9. ' ' → logprob: -10.187286376953125
    10. '  ' → logprob: -10.937286376953125

Token 2732: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22144785523414612
    2. ' as' → logprob: -1.7214478254318237
    3. 'as' → logprob: -3.9714479446411133
    4. '```' → logprob: -7.096447944641113
    5. '       ' → logprob: -9.971447944641113
    6. ' ' → logprob: -10.471447944641113
    7. '	as' → logprob: -10.471447944641113
    8. ' ' → logprob: -10.846447944641113
    9. '   ' → logprob: -10.971447944641113
    10. '    ' → logprob: -12.471447944641113

Token 2733: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' (adapté à ' as') → logprob: -0.000317231344524771
    2. '   ' → logprob: -8.750317573547363
    3. ' as' → logprob: -8.750317573547363
    4. '       ' → logprob: -16.500316619873047
    5. '	as' → logprob: -16.625316619873047
    6. ' ' → logprob: -17.125316619873047
    7. 'AS' → logprob: -17.500316619873047
    8. '_as' → logprob: -19.750316619873047
    9. '  ' → logprob: -19.875316619873047
    10. ' ' → logprob: -20.375316619873047

Token 2734: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016687574097886682
    2. '=' → logprob: -6.626668930053711
    3. '_=' → logprob: -8.501668930053711
    4. ' =' → logprob: -9.001668930053711
    5. 't' → logprob: -12.001668930053711
    6. '   ' → logprob: -12.251668930053711
    7. 's' → logprob: -13.001668930053711
    8. '\' → logprob: -14.751668930053711
    9. '_s' → logprob: -14.751668930053711
    10. ' ' → logprob: -14.876668930053711

Token 2735: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197776645421982
    2. ' =' → logprob: -2.8119778633117676
    3. '   ' → logprob: -12.06197738647461
    4. ')' → logprob: -12.68697738647461
    5. '_' → logprob: -14.43697738647461
    6. ' ' → logprob: -15.06197738647461
    7. ',' → logprob: -16.18697738647461
    8. '	' → logprob: -16.93697738647461
    9. '    ' → logprob: -16.93697738647461
    10. '```' → logprob: -16.93697738647461

Token 2736: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.2519337236881256
    2. ' (' → logprob: -1.5019336938858032
    3. '   ' → logprob: -12.501934051513672
    4. '(' → logprob: -14.376934051513672
    5. ' ' → logprob: -15.626934051513672
    6. 't' → logprob: -16.626934051513672
    7. '  ' → logprob: -17.251934051513672
    8. '(T' → logprob: -17.501934051513672
    9. '    ' → logprob: -18.126934051513672
    10. '       ' → logprob: -18.251934051513672

Token 2737: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.3132915198802948
    2. 't' → logprob: -1.3132915496826172
    3. '   ' → logprob: -11.313291549682617
    4. ' (' → logprob: -11.688291549682617
    5. ' t' → logprob: -12.313291549682617
    6. '(' → logprob: -14.063291549682617
    7. '	t' → logprob: -14.188291549682617
    8. '       ' → logprob: -14.438291549682617
    9. '           ' → logprob: -14.813291549682617
    10. ')' → logprob: -15.313291549682617

Token 2738: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04303058981895447
    2. '*' → logprob: -3.1680305004119873
    3. '   ' → logprob: -10.918030738830566
    4. '*v' → logprob: -12.043030738830566
    5. ' ' → logprob: -12.293030738830566
    6. ' ' → logprob: -13.668030738830566
    7. '```' → logprob: -14.293030738830566
    8. '    ' → logprob: -15.543030738830566
    9. '*s' → logprob: -16.04302978515625
    10. '**' → logprob: -16.04302978515625

Token 2739: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002256475854665041
    2. ' v' → logprob: -6.377256393432617
    3. '6' → logprob: -7.502256393432617
    4. ' ' → logprob: -13.252256393432617
    5. '	v' → logprob: -15.877256393432617
    6. '```' → logprob: -16.502256393432617
    7. '   ' → logprob: -16.627256393432617
    8. '7' → logprob: -16.877256393432617
    9. '$v' → logprob: -16.877256393432617
    10. '_v' → logprob: -17.377256393432617

Token 2740: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.02325153350830078
    2. 's' → logprob: -3.773251533508301
    3. '6' → logprob: -12.5232515335083
    4. '_' → logprob: -13.7732515335083
    5. '```' → logprob: -14.2732515335083
    6. ')' → logprob: -15.5232515335083
    7. ' ' → logprob: -16.398250579833984
    8. ' s' → logprob: -16.898250579833984
    9. '``' → logprob: -16.898250579833984
    10. 'S' → logprob: -17.148250579833984

Token 2741: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009287334396503866
    2. ')%' → logprob: -7.12592887878418
    3. ' )' → logprob: -9.75092887878418
    4. '%' → logprob: -10.00092887878418
    5. '   ' → logprob: -11.75092887878418
    6. '%)' → logprob: -12.25092887878418
    7. '       ' → logprob: -12.37592887878418
    8. ' %' → logprob: -13.12592887878418
    9. '```' → logprob: -15.50092887878418
    10. '),' → logprob: -15.62592887878418

Token 2742: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47411003708839417
    2. ' %' → logprob: -0.9741100072860718
    3. ')' → logprob: -10.974109649658203
    4. ')%' → logprob: -11.224109649658203
    5. '()%' → logprob: -14.099109649658203
    6. '```' → logprob: -14.474109649658203
    7. ']%' → logprob: -14.849109649658203
    8. ' ' → logprob: -15.474109649658203
    9. '   ' → logprob: -15.724109649658203
    10. ' ' → logprob: -15.849109649658203

Token 2743: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -20.625
    4. '180' → logprob: -20.75
    5. '720' → logprob: -21.375
    6. '   ' → logprob: -21.375
    7. '36' → logprob: -21.875
    8. '[' → logprob: -22.25
    9. '(' → logprob: -22.625
    10. '430' → logprob: -23.625

Token 2744: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '180' → logprob: -21.25
    4. '36' → logprob: -21.375
    5. '```' → logprob: -21.875
    6. '720' → logprob: -22.625
    7. '359' → logprob: -23.625
    8. '960' → logprob: -23.875
    9. '(' → logprob: -23.875
    10. '60' → logprob: -23.875

Token 2745: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029809731990098953
    2. '   ' → logprob: -3.5298097133636475
    3. '
' → logprob: -11.029809951782227
    4. '           ' → logprob: -11.404809951782227
    5. '        
' → logprob: -11.529809951782227
    6. 'if' → logprob: -11.779809951782227
    7. ' if' → logprob: -12.154809951782227
    8. '   ' → logprob: -12.904809951782227
    9. '    
' → logprob: -14.029809951782227
    10. '```' → logprob: -14.279809951782227

Token 2746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06197575107216835
    2. '   ' → logprob: -2.8119757175445557
    3. '           ' → logprob: -12.186975479125977
    4. '
' → logprob: -14.436975479125977
    5. '        
' → logprob: -14.686975479125977
    6. '<|end|>' → logprob: -14.811975479125977
    7. '```' → logprob: -14.811975479125977
    8. '      ' → logprob: -14.936975479125977
    9. '	' → logprob: -15.811975479125977
    10. '	   ' → logprob: -15.811975479125977

Token 2747: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14034508168697357
    2. 'if' (adapté à ' if') → logprob: -2.2653450965881348
    3. '   ' → logprob: -3.8903450965881348
    4. ' if' → logprob: -5.015345096588135
    5. '           ' → logprob: -10.015344619750977
    6. 'return' → logprob: -11.640344619750977
    7. '	if' → logprob: -12.515344619750977
    8. '
' → logprob: -12.890344619750977
    9. ' ' → logprob: -13.140344619750977
    10. '```' → logprob: -13.140344619750977

Token 2748: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3822627067565918
    2. ' not' → logprob: -1.7572627067565918
    3. 'no' → logprob: -2.132262706756592
    4. ' no' → logprob: -3.632262706756592
    5. 'abs' → logprob: -9.38226318359375
    6. '(not' → logprob: -10.88226318359375
    7. '   ' → logprob: -11.38226318359375
    8. ' abs' → logprob: -11.38226318359375
    9. 'equal' → logprob: -11.88226318359375
    10. '(no' → logprob: -12.75726318359375

Token 2749: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.6931557655334473
    2. 'no' → logprob: -0.6931557655334473
    3. '(no' → logprob: -11.693155288696289
    4. '	no' → logprob: -16.81815528869629
    5. '(' → logprob: -17.19315528869629
    6. '_no' → logprob: -17.94315528869629
    7. ' (' → logprob: -17.94315528869629
    8. '   ' → logprob: -18.31815528869629
    9. ' ' → logprob: -18.56815528869629
    10. 'No' → logprob: -19.31815528869629

Token 2750: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.0001843485952122137
    2. '_' → logprob: -9.125184059143066
    3. '_over' → logprob: -9.625184059143066
    4. 'over' → logprob: -12.625184059143066
    5. '_
' → logprob: -13.375184059143066
    6. '(_' → logprob: -13.625184059143066
    7. ' _' → logprob: -14.000184059143066
    8. '\' → logprob: -14.125184059143066
    9. '_override' → logprob: -15.000184059143066
    10. '(over' → logprob: -15.125184059143066

Token 2751: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2471589798224159e-05
    2. '(
' → logprob: -12.000012397766113
    3. ' (' → logprob: -12.250012397766113
    4. '(

' → logprob: -15.375012397766113
    5. '(a' → logprob: -15.875012397766113
    6. '(`' → logprob: -15.875012397766113
    7. '   ' → logprob: -15.875012397766113
    8. '(am' → logprob: -16.25001335144043
    9. ',' → logprob: -16.50001335144043
    10. '(as' → logprob: -16.50001335144043

Token 2752: 'ah' (ID: 849)
  Prédit: 'ah'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.750021934509277
    3. ' ah' → logprob: -15.250021934509277
    4. ')' → logprob: -18.75002098083496
    5. '   ' → logprob: -18.87502098083496
    6. ' (' → logprob: -19.00002098083496
    7. 'ahs' → logprob: -19.12502098083496
    8. '
' → logprob: -19.75002098083496
    9. 'Ah' → logprob: -19.75002098083496
    10. '[' → logprob: -19.75002098083496

Token 2753: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016635251813568175
    2. ' ,' → logprob: -9.000165939331055
    3. ',
' → logprob: -10.250165939331055
    4. '   ' → logprob: -13.875165939331055
    5. '       ' → logprob: -13.875165939331055
    6. '_,' → logprob: -14.000165939331055
    7. 'am' → logprob: -14.125165939331055
    8. '           ' → logprob: -14.375165939331055
    9. ')' → logprob: -14.500165939331055
    10. '),' → logprob: -14.500165939331055

Token 2754: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.03804344683885574
    2. ' am' → logprob: -3.28804349899292
    3. '(am' → logprob: -14.663043022155762
    4. 'ams' → logprob: -14.788043022155762
    5. ' ' → logprob: -14.788043022155762
    6. '_am' → logprob: -15.913043022155762
    7. ' ' → logprob: -16.038043975830078
    8. 'amn' → logprob: -16.288043975830078
    9. '```' → logprob: -16.663043975830078
    10. 'ap' → logprob: -16.913043975830078

Token 2755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.88418151892256e-05
    2. ' ,' → logprob: -10.375059127807617
    3. ',
' → logprob: -10.875059127807617
    4. '       ' → logprob: -12.625059127807617
    5. '           ' → logprob: -13.125059127807617
    6. '   ' → logprob: -14.500059127807617
    7. '```' → logprob: -14.500059127807617
    8. ')' → logprob: -15.125059127807617
    9. '               ' → logprob: -15.375059127807617
    10. '‌,' → logprob: -16.125059127807617

Token 2756: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -4.5491004129871726e-05
    2. ' as' → logprob: -10.000045776367188
    3. '```' → logprob: -19.375045776367188
    4. ''as' → logprob: -20.375045776367188
    5. '	as' → logprob: -20.375045776367188
    6. '
' → logprob: -20.500045776367188
    7. ' ' → logprob: -20.500045776367188
    8. 'ass' → logprob: -20.875045776367188
    9. '   ' → logprob: -21.125045776367188
    10. ' ' → logprob: -21.500045776367188

Token 2757: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0087516784551553e-05
    2. '_)' → logprob: -12.00001049041748
    3. '):' → logprob: -13.00001049041748
    4. '_);
' → logprob: -14.75001049041748
    5. '_:' → logprob: -15.37501049041748
    6. '_
' → logprob: -15.62501049041748
    7. '_,' → logprob: -15.75001049041748
    8. '_
' → logprob: -16.000009536743164
    9. '_),' → logprob: -16.250009536743164
    10. '__' → logprob: -16.375009536743164

Token 2758: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.016490012407302856
    2. '):' → logprob: -4.5164899826049805
    3. '       ' → logprob: -5.2664899826049805
    4. '           ' → logprob: -9.01648998260498
    5. '):
' → logprob: -10.39148998260498
    6. ':
' → logprob: -10.39148998260498
    7. ')' → logprob: -10.51648998260498
    8. '   ' → logprob: -10.51648998260498
    9. ':' → logprob: -10.89148998260498
    10. '          ' → logprob: -12.89148998260498

Token 2759: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047214110963977873
    2. '       ' → logprob: -7.750472068786621
    3. '               ' → logprob: -10.500472068786621
    4. '          ' → logprob: -11.875472068786621
    5. '	       ' → logprob: -12.750472068786621
    6. '		' → logprob: -13.375472068786621
    7. ':' → logprob: -13.875472068786621
    8. '         ' → logprob: -15.125472068786621
    9. ',' → logprob: -15.250472068786621
    10. '                   ' → logprob: -15.625472068786621

Token 2760: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4905901253223419
    2. '           ' → logprob: -0.9905900955200195
    3. ' return' → logprob: -4.7405900955200195
    4. '               ' → logprob: -5.1155900955200195
    5. '       ' → logprob: -7.2405900955200195
    6. '	       ' → logprob: -7.6155900955200195
    7. 'continue' → logprob: -8.36559009552002
    8. '	return' → logprob: -9.49059009552002
    9. '```' → logprob: -10.61559009552002
    10. '   ' → logprob: -10.74059009552002

Token 2761: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. '(False' → logprob: -20.1250057220459
    4. 'True' → logprob: -21.2500057220459
    5. 'None' → logprob: -21.3750057220459
    6. 'false' → logprob: -22.6250057220459
    7. '=False' → logprob: -22.7500057220459
    8. 'F' → logprob: -23.2500057220459
    9. '_false' → logprob: -24.2500057220459
    10. 'FALSE' → logprob: -25.2500057220459

Token 2762: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033391619217582047
    2. '<|end|>' → logprob: -8.375333786010742
    3. '   ' → logprob: -10.250333786010742
    4. '	' → logprob: -10.375333786010742
    5. ',' → logprob: -12.000333786010742
    6. '
' → logprob: -12.125333786010742
    7. '        
' → logprob: -12.125333786010742
    8. ')' → logprob: -12.125333786010742
    9. '           ' → logprob: -12.750333786010742
    10. '<|end|>' → logprob: -13.375333786010742

Token 2763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001705246395431459
    2. '   ' → logprob: -9.000170707702637
    3. '<|end|>' → logprob: -10.250170707702637
    4. '        
' → logprob: -12.750170707702637
    5. '           ' → logprob: -13.125170707702637
    6. '	' → logprob: -13.625170707702637
    7. '```' → logprob: -13.625170707702637
    8. '
' → logprob: -13.625170707702637
    9. '    
' → logprob: -14.625170707702637
    10. '      ' → logprob: -14.625170707702637

Token 2764: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07229659706354141
    2. 'if' (adapté à ' if') → logprob: -3.322296619415283
    3. ' if' → logprob: -3.447296619415283
    4. '   ' → logprob: -6.322296619415283
    5. '```' → logprob: -10.947296142578125
    6. '           ' → logprob: -11.197296142578125
    7. 'return' → logprob: -12.447296142578125
    8. ' ' → logprob: -12.822296142578125
    9. '	if' → logprob: -12.822296142578125
    10. '
' → logprob: -12.822296142578125

Token 2765: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6933666467666626
    2. ' not' → logprob: -0.8183666467666626
    3. 'equal' → logprob: -3.193366527557373
    4. ' equal' → logprob: -4.193366527557373
    5. '   ' → logprob: -6.068366527557373
    6. 'abs' → logprob: -8.318367004394531
    7. '       ' → logprob: -8.943367004394531
    8. ' abs' → logprob: -10.443367004394531
    9. '(equal' → logprob: -10.568367004394531
    10. '           ' → logprob: -11.068367004394531

Token 2766: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.061982251703739166
    2. ' equal' → logprob: -2.8119821548461914
    3. '(equal' → logprob: -11.186982154846191
    4. 'abs' → logprob: -14.811982154846191
    5. '   ' → logprob: -15.311982154846191
    6. 'Equal' → logprob: -16.561983108520508
    7. ' ' → logprob: -17.436983108520508
    8. '_equal' → logprob: -17.686983108520508
    9. '.equal' → logprob: -18.436983108520508
    10. 'equals' → logprob: -18.811983108520508

Token 2767: '_angles' (ID: 197484)
  Prédit: '_angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angles' → logprob: -6.704273118884885e-07
    2. '_angle' → logprob: -15.625000953674316
    3. 'angles' → logprob: -16.0
    4. '(_' → logprob: -16.375
    5. '_' → logprob: -17.25
    6. '```' → logprob: -17.75
    7. '
' → logprob: -18.125
    8. '_shapes' → logprob: -18.125
    9. '_axes' → logprob: -18.375
    10. '_conditions' → logprob: -18.375

Token 2768: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -1.5928495486150496e-05
    2. '(' → logprob: -11.125016212463379
    3. '(_' → logprob: -14.625016212463379
    4. 'condition' → logprob: -15.500016212463379
    5. '_cond' → logprob: -16.000015258789062
    6. '_conditions' → logprob: -16.250015258789062
    7. '```' → logprob: -16.375015258789062
    8. '\' → logprob: -16.625015258789062
    9. 'Condition' → logprob: -16.625015258789062
    10. '_' → logprob: -17.375015258789062

Token 2769: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.292907877039397e-06
    2. ' (' → logprob: -12.75000286102295
    3. '(
' → logprob: -15.50000286102295
    4. '   ' → logprob: -17.125003814697266
    5. '(abs' → logprob: -17.250003814697266
    6. '((' → logprob: -18.250003814697266
    7. '(as' → logprob: -18.500003814697266
    8. '(a' → logprob: -18.750003814697266
    9. '```' → logprob: -19.125003814697266
    10. '(`' → logprob: -19.250003814697266

Token 2770: 'ah' (ID: 849)
  Prédit: 'ah'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -9.253090865968261e-06
    2. ' ah' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.875009536743164
    4. '(' → logprob: -16.500009536743164
    5. 'a' → logprob: -17.250009536743164
    6. ')' → logprob: -18.375009536743164
    7. 'Ah' → logprob: -18.500009536743164
    8. '       ' → logprob: -19.000009536743164
    9. '           ' → logprob: -19.125009536743164
    10. '```' → logprob: -19.375009536743164

Token 2771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001182052365038544
    2. '_,' → logprob: -9.875118255615234
    3. ',
' → logprob: -10.375118255615234
    4. ' ,' → logprob: -10.750118255615234
    5. '   ' → logprob: -12.500118255615234
    6. '),' → logprob: -13.250118255615234
    7. '```' → logprob: -13.375118255615234
    8. ')' → logprob: -13.500118255615234
    9. 'am' → logprob: -14.125118255615234
    10. '‌,' → logprob: -14.375118255615234

Token 2772: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.009427614510059357
    2. 'ah' → logprob: -4.759427547454834
    3. ' am' → logprob: -7.259427547454834
    4. ' ah' → logprob: -9.134428024291992
    5. ' ' → logprob: -14.884428024291992
    6. 'amh' → logprob: -15.009428024291992
    7. 'as' → logprob: -15.634428024291992
    8. '   ' → logprob: -15.759428024291992
    9. ' ' → logprob: -16.509428024291992
    10. 'ams' → logprob: -16.759428024291992

Token 2773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ' ,' → logprob: -11.375032424926758
    3. '_,' → logprob: -12.125032424926758
    4. '```' → logprob: -12.500032424926758
    5. ')' → logprob: -12.625032424926758
    6. ',
' → logprob: -12.750032424926758
    7. 'as' → logprob: -14.000032424926758
    8. '   ' → logprob: -14.125032424926758
    9. '       ' → logprob: -14.500032424926758
    10. '),' → logprob: -14.875032424926758

Token 2774: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0007099286303855479
    2. ' as' → logprob: -7.2507100105285645
    3. 'ash' → logprob: -20.375709533691406
    4. 'ah' → logprob: -20.625709533691406
    5. '	as' → logprob: -21.000709533691406
    6. '
' → logprob: -21.250709533691406
    7. 'As' → logprob: -21.750709533691406
    8. ''as' → logprob: -21.750709533691406
    9. '(as' → logprob: -22.250709533691406
    10. ' ' → logprob: -22.375709533691406

Token 2775: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004111880902200937
    2. '_)' → logprob: -5.5041117668151855
    3. '):' → logprob: -11.629112243652344
    4. '_,' → logprob: -11.754112243652344
    5. '_)
' → logprob: -12.379112243652344
    6. '_
' → logprob: -12.629112243652344
    7. '_);
' → logprob: -13.254112243652344
    8. '):
' → logprob: -13.379112243652344
    9. '_);
' → logprob: -13.629112243652344
    10. '_),' → logprob: -13.754112243652344

Token 2776: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04919106885790825
    2. '):' → logprob: -3.0491909980773926
    3. ')' → logprob: -7.799190998077393
    4. '):
' → logprob: -8.92419147491455
    5. '       ' → logprob: -10.29919147491455
    6. '   ' → logprob: -10.92419147491455
    7. ':' → logprob: -13.17419147491455
    8. ',' → logprob: -13.29919147491455
    9. '):

' → logprob: -13.54919147491455
    10. '           ' → logprob: -13.92419147491455

Token 2777: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2528236210346222
    2. '           ' → logprob: -1.5028235912322998
    3. ':' → logprob: -7.627823829650879
    4. ':
' → logprob: -8.502823829650879
    5. '               ' → logprob: -9.377823829650879
    6. '```' → logprob: -10.377823829650879
    7. 'return' → logprob: -10.877823829650879
    8. '):
' → logprob: -11.252823829650879
    9. ':return' → logprob: -11.377823829650879
    10. '   ' → logprob: -11.377823829650879

Token 2778: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.042598988860845566
    2. '       ' → logprob: -3.2925989627838135
    3. ' return' → logprob: -5.792599201202393
    4. '           ' → logprob: -7.042599201202393
    5. 'True' → logprob: -7.667599201202393
    6. 'False' → logprob: -9.917598724365234
    7. '	return' → logprob: -10.167598724365234
    8. '               ' → logprob: -10.417598724365234
    9. '   ' → logprob: -10.542598724365234
    10. ' True' → logprob: -12.417598724365234

Token 2779: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.512236498361744e-07
    2. 'True' → logprob: -14.750000953674316
    3. ' False' → logprob: -16.25
    4. '(False' → logprob: -21.625
    5. 'F' → logprob: -23.5
    6. 'false' → logprob: -25.375
    7. '=False' → logprob: -25.625
    8. 'None' → logprob: -25.875
    9. '0' → logprob: -26.0
    10. 'Fa' → logprob: -26.5

Token 2780: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004330895375460386
    2. '   ' → logprob: -5.754331111907959
    3. '	' → logprob: -7.004331111907959
    4. '<|end|>' → logprob: -9.2543306350708
    5. ',' → logprob: -10.3793306350708
    6. ':' → logprob: -10.7543306350708
    7. '	   ' → logprob: -11.0043306350708
    8. ')' → logprob: -11.1293306350708
    9. '	return' → logprob: -11.6293306350708
    10. '           ' → logprob: -12.0043306350708

Token 2781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054026443511247635
    2. '   ' → logprob: -3.0540263652801514
    3. '	' → logprob: -5.6790266036987305
    4. '```' → logprob: -7.3040266036987305
    5. '<|end|>' → logprob: -7.4290266036987305
    6. '        
' → logprob: -9.17902660369873
    7. '    
' → logprob: -9.17902660369873
    8. '	return' → logprob: -9.42902660369873
    9. '	   ' → logprob: -9.55402660369873
    10. '​' → logprob: -10.05402660369873

Token 2782: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05501904338598251
    2. '   ' → logprob: -2.9300191402435303
    3. 'return' (adapté à ' return') → logprob: -9.05501937866211
    4. '           ' → logprob: -11.68001937866211
    5. '	' → logprob: -12.18001937866211
    6. ' return' → logprob: -13.55501937866211
    7. '
' → logprob: -13.68001937866211
    8. '	return' → logprob: -13.93001937866211
    9. '```' → logprob: -14.30501937866211
    10. '	   ' → logprob: -14.93001937866211

Token 2783: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7146746763028204e-05
    2. ' True' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.25003719329834
    4. 't' → logprob: -20.250036239624023
    5. '    ' → logprob: -21.375036239624023
    6. '(True' → logprob: -21.875036239624023
    7. '       ' → logprob: -22.000036239624023
    8. 'true' → logprob: -22.625036239624023
    9. '  ' → logprob: -23.000036239624023
    10. 'False' → logprob: -23.500036239624023

Token 2784: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3215869069099426
    2. '<|end|>' → logprob: -1.8215868473052979
    3. '
' → logprob: -2.446586847305298
    4. '    
' → logprob: -4.696587085723877
    5. '<|end|>' → logprob: -4.696587085723877
    6. '  
' → logprob: -5.571587085723877
    7. ' 
' → logprob: -7.196587085723877
    8. '

' → logprob: -7.571587085723877
    9. '```' → logprob: -7.571587085723877
    10. '.' → logprob: -7.946587085723877

Token 2785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1859922558069229
    2. 'for' → logprob: -2.1859922409057617
    3. ' for' → logprob: -2.9359922409057617
    4. '
' → logprob: -5.935992240905762
    5. '```' → logprob: -6.685992240905762
    6. '    
' → logprob: -8.060992240905762
    7. 'def' → logprob: -11.060992240905762
    8. '`' → logprob: -11.310992240905762
    9. '       ' → logprob: -12.185992240905762
    10. '  
' → logprob: -12.310992240905762

Token 2786: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17195962369441986
    2. '   ' → logprob: -1.921959638595581
    3. ' for' → logprob: -4.671959400177002
    4. '```' → logprob: -6.171959400177002
    5. 'k' → logprob: -8.79695987701416
    6. 'i' → logprob: -10.29695987701416
    7. '
' → logprob: -11.42195987701416
    8. '``' → logprob: -12.04695987701416
    9. '    
' → logprob: -12.17195987701416
    10. 't' → logprob: -12.54695987701416

Token 2787: ' Collect' (ID: 30483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015180727932602167
    2. '   ' → logprob: -7.251518249511719
    3. ' for' → logprob: -7.626518249511719
    4. 'k' → logprob: -8.126518249511719
    5. 'i' → logprob: -11.251518249511719
    6. '```' → logprob: -11.626518249511719
    7. 't' → logprob: -13.126518249511719
    8. 'c' → logprob: -15.251518249511719
    9. 'from' → logprob: -15.376518249511719
    10. ' k' → logprob: -15.626518249511719

Token 2788: 'e' (ID: 68)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5995820760726929
    2. 'e' → logprob: -1.7245820760726929
    3. 'ion' → logprob: -2.0995821952819824
    4. 'ions' → logprob: -2.8495821952819824
    5. 'er' → logprob: -3.0995821952819824
    6. '   ' → logprob: -3.4745821952819824
    7. 'ing' → logprob: -4.474582195281982
    8. ' for' → logprob: -6.599582195281982
    9. 'ed' → logprob: -6.599582195281982
    10. 'def' → logprob: -7.474582195281982

Token 2789: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16756466031074524
    2. ' for' → logprob: -2.542564630508423
    3. '   ' → logprob: -3.167564630508423
    4. '=' → logprob: -4.542564868927002
    5. ' =' → logprob: -4.667564868927002
    6. 'k' → logprob: -5.417564868927002
    7. '[' → logprob: -5.792564868927002
    8. '[]' → logprob: -6.917564868927002
    9. '[
' → logprob: -7.042564868927002
    10. '[:]' → logprob: -7.167564868927002

Token 2790: ' candidats' (ID: 100182)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5519740581512451
    2. 'k' → logprob: -1.4269740581512451
    3. 'results' → logprob: -2.176974058151245
    4. 't' → logprob: -3.676974058151245
    5. 'c' → logprob: -3.801974058151245
    6. 'solutions' → logprob: -4.051974296569824
    7. 'times' → logprob: -6.551974296569824
    8. 'possible' → logprob: -7.426974296569824
    9. ' for' → logprob: -7.676974296569824
    10. 'ks' → logprob: -7.676974296569824

Token 2791: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2725816071033478
    2. '   ' → logprob: -1.5225815773010254
    3. ' for' → logprob: -4.147581577301025
    4. '```' → logprob: -5.897581577301025
    5. '
' → logprob: -6.397581577301025
    6. '    
' → logprob: -8.772582054138184
    7. '``' → logprob: -10.022582054138184
    8. 'k' → logprob: -10.897582054138184
    9. 'i' → logprob: -13.522582054138184
    10. ' =' → logprob: -14.022582054138184

Token 2792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.467744380235672
    2. ' for' → logprob: -1.2177443504333496
    3. 'for' → logprob: -2.5927443504333496
    4. '
' → logprob: -5.96774435043335
    5. '```' → logprob: -8.342744827270508
    6. '    
' → logprob: -9.717744827270508
    7. ' k' → logprob: -12.842744827270508
    8. 'k' → logprob: -12.967744827270508
    9. '``' → logprob: -13.092744827270508
    10. ',' → logprob: -13.342744827270508

Token 2793: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.189531147480011
    2. '   ' → logprob: -2.189531087875366
    3. ' for' → logprob: -2.939531087875366
    4. '```' → logprob: -4.939531326293945
    5. '
' → logprob: -7.439531326293945
    6. '``' → logprob: -10.314531326293945
    7. '    
' → logprob: -11.689531326293945
    8. 'k' → logprob: -12.689531326293945
    9. '`' → logprob: -13.689531326293945
    10. 'i' → logprob: -14.439531326293945

Token 2794: ' sign' (ID: 2232)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001328095211647451
    2. ' k' → logprob: -6.626327991485596
    3. '   ' → logprob: -13.126328468322754
    4. '       ' → logprob: -16.876327514648438
    5. '```' → logprob: -17.126327514648438
    6. ' ' → logprob: -17.251327514648438
    7. '	k' → logprob: -17.501327514648438
    8. '    ' → logprob: -17.501327514648438
    9. 'i' → logprob: -17.751327514648438
    10. 'K' → logprob: -18.001327514648438

Token 2795: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4400087296962738
    2. 'in' → logprob: -1.0650087594985962
    3. 'i' → logprob: -5.315008640289307
    4. '_' → logprob: -5.940008640289307
    5. 's' → logprob: -6.565008640289307
    6. ' ' → logprob: -7.315008640289307
    7. 'k' → logprob: -7.565008640289307
    8. ' i' → logprob: -7.940008640289307
    9. '1' → logprob: -8.315009117126465
    10. '_in' → logprob: -9.440009117126465

Token 2796: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02791869267821312
    2. '[-' → logprob: -4.277918815612793
    3. '(' → logprob: -5.152918815612793
    4. '1' → logprob: -5.527918815612793
    5. 'range' → logprob: -6.027918815612793
    6. '(+' → logprob: -7.152918815612793
    7. '+' → logprob: -7.902918815612793
    8. ' [' → logprob: -8.902918815612793
    9. ' [+' → logprob: -8.902918815612793
    10. '(-' → logprob: -10.152918815612793

Token 2797: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043734462815336883
    2. ' ' → logprob: -7.750437259674072
    3. '+' → logprob: -12.00043773651123
    4. '   ' → logprob: -15.37543773651123
    5. ' +' → logprob: -16.500436782836914
    6. '-' → logprob: -17.125436782836914
    7. '  ' → logprob: -17.625436782836914
    8. ' ' → logprob: -17.875436782836914
    9. '    ' → logprob: -19.125436782836914
    10. ' -' → logprob: -19.375436782836914

Token 2798: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040457461727783084
    2. ' ,' → logprob: -8.000404357910156
    3. '   ' → logprob: -10.625404357910156
    4. ',
' → logprob: -11.250404357910156
    5. ',-' → logprob: -11.375404357910156
    6. ',+' → logprob: -12.250404357910156
    7. ' in' → logprob: -12.500404357910156
    8. '       ' → logprob: -12.750404357910156
    9. ',int' → logprob: -14.000404357910156
    10. ':' → logprob: -14.000404357910156

Token 2799: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '1' → logprob: -17.50009536743164
    5. ' ' → logprob: -19.62509536743164
    6. ']' → logprob: -20.25009536743164
    7. '    ' → logprob: -21.00009536743164
    8. '+' → logprob: -21.37509536743164
    9. '  ' → logprob: -21.37509536743164
    10. '```' → logprob: -21.37509536743164

Token 2800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. ']' → logprob: -17.625
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -18.875
    6. ',' → logprob: -19.625
    7. '+' → logprob: -20.5
    8. '       ' → logprob: -20.625
    9. 'sign' → logprob: -21.125
    10. '  ' → logprob: -21.25

Token 2801: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16720901429653168
    2. ':
' → logprob: -1.9172090291976929
    3. ',' → logprob: -5.917209148406982
    4. ']:
' → logprob: -6.042209148406982
    5. '   ' → logprob: -6.667209148406982
    6. '):
' → logprob: -8.667208671569824
    7. ']:' → logprob: -8.667208671569824
    8. '       ' → logprob: -8.792208671569824
    9. ' :' → logprob: -10.417208671569824
    10. ' :
' → logprob: -10.917208671569824

Token 2802: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1952352225780487
    2. ':' → logprob: -2.070235252380371
    3. ' for' → logprob: -3.445235252380371
    4. '       ' → logprob: -4.570235252380371
    5. '    ' → logprob: -5.320235252380371
    6. '	for' → logprob: -6.945235252380371
    7. ' :' → logprob: -7.070235252380371
    8. ' in' → logprob: -8.070235252380371
    9. '```' → logprob: -8.195235252380371
    10. ':
' → logprob: -8.445235252380371

Token 2803: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37947672605514526
    2. '   ' → logprob: -1.75447678565979
    3. 'for' → logprob: -2.00447678565979
    4. '       ' → logprob: -5.379476547241211
    5. ' k' → logprob: -6.004476547241211
    6. 'k' → logprob: -7.254476547241211
    7. '```' → logprob: -8.879476547241211
    8. ' ' → logprob: -10.504476547241211
    9. '    ' → logprob: -10.629476547241211
    10. ' range' → logprob: -10.754476547241211

Token 2804: ' sign' (ID: 2232)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.12168528884649277
    2. 'sign' → logprob: -2.371685266494751
    3. ' den' → logprob: -4.24668550491333
    4. 'abs' → logprob: -5.37168550491333
    5. ' sign' → logprob: -6.87168550491333
    6. ' abs' → logprob: -7.62168550491333
    7. '(' → logprob: -7.62168550491333
    8. ' (' → logprob: -9.121685028076172
    9. '(sign' → logprob: -9.621685028076172
    10. '(abs' → logprob: -10.746685028076172

Token 2805: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1862800270318985
    2. ' ==' → logprob: -2.0612800121307373
    3. ':' → logprob: -3.6862800121307373
    4. '=' → logprob: -4.561280250549316
    5. '!=' → logprob: -5.311280250549316
    6. ' !=' → logprob: -6.686280250549316
    7. '==
' → logprob: -8.811280250549316
    8. ' =' → logprob: -8.936280250549316
    9. 'in' → logprob: -9.061280250549316
    10. ':
' → logprob: -9.561280250549316

Token 2806: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004655356984585524
    2. ' ' → logprob: -5.379655361175537
    3. '0' → logprob: -11.004654884338379
    4. '+' → logprob: -11.629654884338379
    5. '-' → logprob: -12.504654884338379
    6. ':' → logprob: -13.129654884338379
    7. '   ' → logprob: -13.504654884338379
    8. '=' → logprob: -14.129654884338379
    9. ' -' → logprob: -14.129654884338379
    10. '  ' → logprob: -15.129654884338379

Token 2807: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.5649528298527e-05
    2. '0' → logprob: -10.375075340270996
    3. ' ' → logprob: -10.500075340270996
    4. '+' → logprob: -11.625075340270996
    5. '-' → logprob: -12.125075340270996
    6. ':' → logprob: -13.625075340270996
    7. '=' → logprob: -14.500075340270996
    8. '```' → logprob: -15.250075340270996
    9. '+:' → logprob: -15.500075340270996
    10. '2' → logprob: -16.812576293945312

Token 2808: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1675659716129303
    2. ':
' → logprob: -1.917565941810608
    3. '       ' → logprob: -5.167565822601318
    4. '           ' → logprob: -6.542565822601318
    5. '   ' → logprob: -10.167566299438477
    6. ',' → logprob: -10.292566299438477
    7. '=' → logprob: -10.917566299438477
    8. ' :' → logprob: -10.917566299438477
    9. ' :
' → logprob: -11.167566299438477
    10. ' and' → logprob: -11.792566299438477

Token 2809: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6426673531532288
    2. '           ' → logprob: -0.7676673531532288
    3. ':' → logprob: -5.142667293548584
    4. ' for' → logprob: -6.392667293548584
    5. '   ' → logprob: -6.517667293548584
    6. '```' → logprob: -8.017667770385742
    7. '        ' → logprob: -8.392667770385742
    8. '	   ' → logprob: -9.267667770385742
    9. '    ' → logprob: -9.392667770385742
    10. ' :' → logprob: -10.267667770385742

Token 2810: ' den' (ID: 1786)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47700509428977966
    2. 'k' → logprob: -0.977005124092102
    3. ' for' → logprob: -5.9770050048828125
    4. 'range' → logprob: -9.102005004882812
    5. ' k' → logprob: -9.477005004882812
    6. '       ' → logprob: -9.602005004882812
    7. '   ' → logprob: -9.977005004882812
    8. '           ' → logprob: -10.352005004882812
    9. 'den' (adapté à ' den') → logprob: -10.852005004882812
    10. 'if' → logprob: -11.852005004882812

Token 2811: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3334279954433441
    2. '1' → logprob: -1.8334280252456665
    3. '=' → logprob: -2.208427906036377
    4. '2' → logprob: -5.083427906036377
    5. '_' → logprob: -5.333427906036377
    6. '=_' → logprob: -6.458427906036377
    7. '   ' → logprob: -8.208428382873535
    8. ')' → logprob: -8.708428382873535
    9. '```' → logprob: -8.833428382873535
    10. '_=' → logprob: -9.833428382873535

Token 2812: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.01748104952275753
    2. 'A' → logprob: -4.517480850219727
    3. '(A' → logprob: -5.142480850219727
    4. '(' → logprob: -7.892480850219727
    5. ' den' → logprob: -9.017480850219727
    6. 'abs' → logprob: -10.642480850219727
    7. ' (' → logprob: -11.017480850219727
    8. ' A' → logprob: -11.642480850219727
    9. 'int' → logprob: -12.017480850219727
    10. 'float' → logprob: -12.392480850219727

Token 2813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007460738532245159
    2. '2' → logprob: -5.382460594177246
    3. '-' → logprob: -6.257460594177246
    4. ' -' → logprob: -8.257460594177246
    5. '```' → logprob: -8.757460594177246
    6. '   ' → logprob: -9.132460594177246
    7. '=' → logprob: -9.507460594177246
    8. '
' → logprob: -9.882460594177246
    9. '`' → logprob: -10.007460594177246
    10. '-A' → logprob: -10.757460594177246

Token 2814: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3371036946773529
    2. '
' → logprob: -2.5871036052703857
    3. '<|end|>' → logprob: -2.8371036052703857
    4. '   ' → logprob: -3.4621036052703857
    5. '<|end|>' → logprob: -3.8371036052703857
    6. ':
' → logprob: -4.087103843688965
    7. ')' → logprob: -4.837103843688965
    8. ' ' → logprob: -4.837103843688965
    9. 'else' → logprob: -4.837103843688965
    10. '*' → logprob: -5.212103843688965

Token 2815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021655535325407982
    2. '           ' → logprob: -3.896655559539795
    3. ':' → logprob: -7.896655559539795
    4. '   ' → logprob: -8.646655082702637
    5. ' if' → logprob: -8.771655082702637
    6. '```' → logprob: -9.646655082702637
    7. ',' → logprob: -9.896655082702637
    8. ' for' → logprob: -10.021655082702637
    9. ';' → logprob: -10.146655082702637
    10. ':
' → logprob: -10.521655082702637

Token 2816: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5857505202293396
    2. 'else' (adapté à ' else') → logprob: -0.9607505202293396
    3. ' else' → logprob: -2.8357505798339844
    4. ':' → logprob: -6.835750579833984
    5. '           ' → logprob: -7.835750579833984
    6. ':
' → logprob: -8.210750579833984
    7. '	else' → logprob: -9.335750579833984
    8. 'elif' → logprob: -9.460750579833984
    9. '```' → logprob: -10.460750579833984
    10. '   ' → logprob: -10.585750579833984

Token 2817: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023491788655519485
    2. ':
' → logprob: -4.148491859436035
    3. '           ' → logprob: -5.273491859436035
    4. '=' → logprob: -6.648491859436035
    5. ' =' → logprob: -8.023491859436035
    6. '       ' → logprob: -8.023491859436035
    7. '   ' → logprob: -9.148491859436035
    8. ' :' → logprob: -9.148491859436035
    9. '        ' → logprob: -10.523491859436035
    10. '{' → logprob: -10.648491859436035

Token 2818: '           ' (ID: 352)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.523219645023346
    2. ' den' → logprob: -0.898219645023346
    3. '           ' → logprob: -10.02322006225586
    4. '   ' → logprob: -10.77322006225586
    5. '2' → logprob: -11.77322006225586
    6. '_den' → logprob: -12.02322006225586
    7. '       ' → logprob: -12.39822006225586
    8. ' ' → logprob: -13.39822006225586
    9. '```' → logprob: -13.64822006225586
    10. '1' → logprob: -13.64822006225586

Token 2819: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' (adapté à ' den') → logprob: -0.0026697113644331694
    2. ' den' → logprob: -6.127669811248779
    3. '           ' → logprob: -7.877669811248779
    4. '   ' → logprob: -9.502669334411621
    5. '       ' → logprob: -10.627669334411621
    6. '               ' → logprob: -12.752669334411621
    7. '                   ' → logprob: -14.377669334411621
    8. 'import' → logprob: -14.752669334411621
    9. 'det' → logprob: -14.877669334411621
    10. '_den' → logprob: -14.877669334411621

Token 2820: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197160854935646
    2. ' =' → logprob: -2.811971664428711
    3. '1' → logprob: -13.311971664428711
    4. '   ' → logprob: -14.686971664428711
    5. '=None' → logprob: -14.686971664428711
    6. '=True' → logprob: -15.061971664428711
    7. '2' → logprob: -15.436971664428711
    8. '=
' → logprob: -15.686971664428711
    9. '=}' → logprob: -16.43697166442871
    10. '=_' → logprob: -16.56197166442871

Token 2821: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.9027791495318525e-05
    2. ' den' → logprob: -10.875019073486328
    3. '-den' → logprob: -17.125019073486328
    4. 'det' → logprob: -18.875019073486328
    5. '   ' → logprob: -19.375019073486328
    6. 'd' → logprob: -20.750019073486328
    7. '(' → logprob: -21.000019073486328
    8. 'A' → logprob: -21.250019073486328
    9. '-' → logprob: -21.500019073486328
    10. ' ' → logprob: -22.125019073486328

Token 2822: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. 'den' → logprob: -12.125015258789062
    3. 'sign' → logprob: -12.125015258789062
    4. '1' → logprob: -12.750015258789062
    5. ' ' → logprob: -15.375015258789062
    6. '-' → logprob: -15.500015258789062
    7. '=' → logprob: -15.875015258789062
    8. '```' → logprob: -16.000015258789062
    9. '[' → logprob: -16.125015258789062
    10. '+' → logprob: -16.750015258789062

Token 2823: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027375299483537674
    2. ':' → logprob: -4.027375221252441
    3. '   ' → logprob: -5.027375221252441
    4. ':
' → logprob: -6.777375221252441
    5. '```' → logprob: -7.027375221252441
    6. ' if' → logprob: -8.777375221252441
    7. '           ' → logprob: -9.152375221252441
    8. ' for' → logprob: -9.902375221252441
    9. ',' → logprob: -9.902375221252441
    10. '[' → logprob: -10.027375221252441

Token 2824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07263942062854767
    2. '   ' → logprob: -2.6976394653320312
    3. ':' → logprob: -6.447639465332031
    4. ' for' → logprob: -7.447639465332031
    5. '```' → logprob: -8.197639465332031
    6. '           ' → logprob: -9.072639465332031
    7. 'for' → logprob: -10.447639465332031
    8. ')' → logprob: -10.947639465332031
    9. '<|end|>' → logprob: -10.947639465332031
    10. '[' → logprob: -11.197639465332031

Token 2825: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34158098697662354
    2. ' for' → logprob: -1.4665809869766235
    3. '       ' → logprob: -2.966580867767334
    4. '   ' → logprob: -5.091580867767334
    5. 'k' → logprob: -7.966580867767334
    6. '```' → logprob: -7.966580867767334
    7. 'if' (adapté à ' if') → logprob: -8.966581344604492
    8. ' k' → logprob: -9.341581344604492
    9. ' if' → logprob: -10.091581344604492
    10. 'from' → logprob: -11.216581344604492

Token 2826: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.27037543058395386
    2. ' den' → logprob: -2.2703754901885986
    3. ' abs' → logprob: -2.6453754901885986
    4. 'abs' → logprob: -2.7703754901885986
    5. 'not' → logprob: -12.64537525177002
    6. ' denom' → logprob: -12.77037525177002
    7. '(abs' → logprob: -13.39537525177002
    8. ' denominator' → logprob: -13.39537525177002
    9. ' not' → logprob: -13.77037525177002
    10. ' ' → logprob: -13.89537525177002

Token 2827: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0049881357699632645
    2. '==' → logprob: -5.879988193511963
    3. ' !=' → logprob: -6.129988193511963
    4. ' ==' → logprob: -12.879987716674805
    5. '()!=' → logprob: -14.629987716674805
    6. '!==' → logprob: -14.754987716674805
    7. '=' → logprob: -15.129987716674805
    8. ')!=' → logprob: -15.254987716674805
    9. '```' → logprob: -16.004987716674805
    10. ']!=' → logprob: -16.504987716674805

Token 2828: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -21.625
    4. '=' → logprob: -21.75
    5. '<|end|>' → logprob: -22.5
    6. ' ' → logprob: -22.5
    7. '  ' → logprob: -23.25
    8. 'None' → logprob: -23.375
    9. '1' → logprob: -23.375
    10. '```' → logprob: -24.25

Token 2829: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -21.5
    4. '<|end|>' → logprob: -22.25
    5. '
' → logprob: -23.5
    6. 'zero' → logprob: -23.625
    7. '00' → logprob: -23.75
    8. '000' → logprob: -23.75
    9. ' ' → logprob: -23.75
    10. '  ' → logprob: -23.875

Token 2830: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018898876383900642
    2. ':
' → logprob: -4.143898963928223
    3. '           ' → logprob: -6.018898963928223
    4. ' continue' → logprob: -9.143898963928223
    5. '       ' → logprob: -9.393898963928223
    6. ':return' → logprob: -9.393898963928223
    7. 'continue' → logprob: -9.768898963928223
    8. ' :' → logprob: -11.268898963928223
    9. '   ' → logprob: -11.268898963928223
    10. ',' → logprob: -11.393898963928223

Token 2831: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01625172048807144
    2. ':' → logprob: -4.266251564025879
    3. ' continue' → logprob: -6.891251564025879
    4. '       ' → logprob: -7.516251564025879
    5. ':
' → logprob: -8.516251564025879
    6. 'continue' → logprob: -8.891251564025879
    7. '	       ' → logprob: -9.516251564025879
    8. '	continue' → logprob: -10.141251564025879
    9. '   ' → logprob: -10.766251564025879
    10. '               ' → logprob: -11.141251564025879

Token 2832: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6986380219459534
    2. 'continue' (adapté à ' continue') → logprob: -0.6986380219459534
    3. '           ' → logprob: -5.698637962341309
    4. '       ' → logprob: -6.448637962341309
    5. '   ' → logprob: -8.198637962341309
    6. '	continue' → logprob: -9.573637962341309
    7. '```' → logprob: -9.573637962341309
    8. ' pass' → logprob: -10.323637962341309
    9. 'pass' → logprob: -10.448637962341309
    10. '_continue' → logprob: -11.073637962341309

Token 2833: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004456852038856596
    2. ' for' → logprob: -8.250445365905762
    3. '   ' → logprob: -9.000445365905762
    4. '<|end|>' → logprob: -10.875445365905762
    5. '        
' → logprob: -11.875445365905762
    6. '
' → logprob: -11.875445365905762
    7. '           ' → logprob: -12.250445365905762
    8. '	   ' → logprob: -12.500445365905762
    9. '<|end|>' → logprob: -12.500445365905762
    10. 'for' → logprob: -12.500445365905762

Token 2834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00416969507932663
    2. '   ' → logprob: -5.754169464111328
    3. '```' → logprob: -7.254169464111328
    4. ' for' → logprob: -9.004169464111328
    5. '<|end|>' → logprob: -9.504169464111328
    6. '           ' → logprob: -10.504169464111328
    7. 'for' → logprob: -11.254169464111328
    8. '        
' → logprob: -11.754169464111328
    9. '	' → logprob: -12.129169464111328
    10. '<|end|>' → logprob: -12.129169464111328

Token 2835: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.434866726398468
    2. '   ' → logprob: -1.6848666667938232
    3. 'for' → logprob: -1.9348666667938232
    4. '```' → logprob: -3.9348666667938232
    5. '       ' → logprob: -5.934866905212402
    6. ' k' → logprob: -7.809866905212402
    7. 'k' → logprob: -9.684866905212402
    8. '``' → logprob: -10.309866905212402
    9. ' ' → logprob: -10.809866905212402
    10. '	for' → logprob: -11.809866905212402

Token 2836: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006778961978852749
    2. 'from' → logprob: -5.756779193878174
    3. '   ' → logprob: -6.506779193878174
    4. 'k' → logprob: -6.881779193878174
    5. ' for' → logprob: -7.006779193878174
    6. '       ' → logprob: -9.506778717041016
    7. '```' → logprob: -9.756778717041016
    8. 'import' → logprob: -10.381778717041016
    9. ' k' → logprob: -12.631778717041016
    10. '``' → logprob: -13.256778717041016

Token 2837: ' positif' (ID: 89008)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8783616423606873
    2. ' in' → logprob: -1.003361701965332
    3. ' =' → logprob: -2.878361701965332
    4. '0' → logprob: -3.128361701965332
    5. ' i' → logprob: -3.378361701965332
    6. ' for' → logprob: -3.378361701965332
    7. '=' → logprob: -3.878361701965332
    8. '   ' → logprob: -4.128361701965332
    9. 'for' → logprob: -5.753361701965332
    10. ' ' → logprob: -6.003361701965332

Token 2838: ' et' (ID: 859)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3933766782283783
    2. ' in' → logprob: -1.7683767080307007
    3. 'for' → logprob: -2.018376588821411
    4. ' k' → logprob: -4.64337682723999
    5. ',' → logprob: -5.01837682723999
    6. 'in' → logprob: -6.64337682723999
    7. 'k' → logprob: -6.89337682723999
    8. ':' → logprob: -7.01837682723999
    9. '0' → logprob: -7.01837682723999
    10. '   ' → logprob: -8.018376350402832

Token 2839: ' nég' (ID: 55805)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.059318963438272476
    2. ' k' → logprob: -3.559319019317627
    3. 'negative' → logprob: -3.934319019317627
    4. ' nég' → logprob: -5.184319019317627
    5. ' negative' → logprob: -6.059319019317627
    6. '0' → logprob: -7.309319019317627
    7. ' negatif' → logprob: -7.934319019317627
    8. 'for' → logprob: -9.059318542480469
    9. 'neg' → logprob: -9.184318542480469
    10. '```' → logprob: -9.684318542480469

Token 2840: 'atif' (ID: 23984)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6386189460754395
    2. 'atifs' → logprob: -1.5136189460754395
    3. 'ér' → logprob: -2.6386189460754395
    4. 'atif' → logprob: -2.8886189460754395
    5. '```' → logprob: -3.7636189460754395
    6. 'itif' → logprob: -4.2636189460754395
    7. '#' → logprob: -4.5136189460754395
    8. 'ative' → logprob: -5.0136189460754395
    9. 't' → logprob: -5.1386189460754395
    10. 'éros' → logprob: -5.3886189460754395

Token 2841: ' car' (ID: 1669)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0783727616071701
    2. 'for' → logprob: -2.8283727169036865
    3. ':' → logprob: -4.953372955322266
    4. '   ' → logprob: -5.453372955322266
    5. '<|end|>' → logprob: -6.203372955322266
    6. ' k' → logprob: -7.328372955322266
    7. ',' → logprob: -7.953372955322266
    8. ' in' → logprob: -7.953372955322266
    9. ' range' → logprob: -8.078372955322266
    10. ' =' → logprob: -8.328372955322266

Token 2842: ' temps' (ID: 11160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7939531803131104
    2. ' k' → logprob: -1.4189531803131104
    3. 'for' → logprob: -1.5439531803131104
    4. ' range' → logprob: -3.2939531803131104
    5. 'range' → logprob: -3.5439531803131104
    6. 'k' → logprob: -3.6689531803131104
    7. '-' → logprob: -7.918952941894531
    8. ' in' → logprob: -9.168952941894531
    9. ' -' → logprob: -9.293952941894531
    10. 'True' → logprob: -9.793952941894531

Token 2843: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4746932089328766
    2. ' for' → logprob: -1.7246931791305542
    3. 'k' → logprob: -2.5996932983398438
    4. ' in' → logprob: -3.8496932983398438
    5. ' range' → logprob: -3.9746932983398438
    6. ' k' → logprob: -3.9746932983398438
    7. 'range' → logprob: -3.9746932983398438
    8. 'in' → logprob: -4.224693298339844
    9. 'pour' → logprob: -5.099693298339844
    10. 's' → logprob: -5.349693298339844

Token 2844: ' doit' (ID: 21822)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4021531939506531
    2. 'for' → logprob: -1.4021532535552979
    3. ' in' → logprob: -3.277153253555298
    4. '       ' → logprob: -4.527153015136719
    5. '   ' → logprob: -5.152153015136719
    6. 'from' → logprob: -5.402153015136719
    7. ' from' → logprob: -5.527153015136719
    8. ' range' → logprob: -5.902153015136719
    9. '```' → logprob: -6.152153015136719
    10. 'in' → logprob: -6.277153015136719

Token 2845: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9252673983573914
    2. '>=' → logprob: -1.6752674579620361
    3. 'range' → logprob: -2.300267457962036
    4. '<=' → logprob: -2.425267457962036
    5. 'from' → logprob: -2.800267457962036
    6. '<|end|>' → logprob: -3.550267457962036
    7. ' ranging' → logprob: -3.800267457962036
    8. ' =' → logprob: -4.550267219543457
    9. ' range' → logprob: -4.675267219543457
    10. ' être' → logprob: -4.925267219543457

Token 2846: ' positif' (ID: 89008)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2954484224319458
    2. '0' → logprob: -1.4204484224319458
    3. '1' → logprob: -1.6704484224319458
    4. '>=' → logprob: -1.9204484224319458
    5. 'positive' → logprob: -2.1704483032226562
    6. 'range' → logprob: -4.670448303222656
    7. '≥' → logprob: -5.545448303222656
    8. 'non' → logprob: -5.795448303222656
    9. ' positive' → logprob: -5.795448303222656
    10. '>' → logprob: -5.920448303222656

Token 2847: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6850059032440186
    2. ' for' → logprob: -0.8100059032440186
    3. '       ' → logprob: -3.6850059032440186
    4. 'for' → logprob: -3.8100059032440186
    5. '```' → logprob: -6.435006141662598
    6. ':' → logprob: -6.560006141662598
    7. '
' → logprob: -8.310006141662598
    8. ',' → logprob: -9.060006141662598
    9. '	for' → logprob: -9.435006141662598
    10. ' ' → logprob: -10.060006141662598

Token 2848: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1619528830051422
    2. ' for' → logprob: -1.9119528532028198
    3. 'for' → logprob: -7.286952972412109
    4. '```' → logprob: -7.411952972412109
    5. '<|end|>' → logprob: -8.78695297241211
    6. '	for' → logprob: -8.91195297241211
    7. ' k' → logprob: -10.41195297241211
    8. '[' → logprob: -10.53695297241211
    9. '<|end|>' → logprob: -11.16195297241211
    10. 'For' → logprob: -11.41195297241211

Token 2849: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5683023929595947
    2. ' for' → logprob: -0.9433023929595947
    3. '```' → logprob: -3.8183023929595947
    4. 'for' → logprob: -4.068302154541016
    5. '       ' → logprob: -5.318302154541016
    6. '``' → logprob: -8.818302154541016
    7. ' k' → logprob: -10.943302154541016
    8. '	for' → logprob: -11.443302154541016
    9. '
' → logprob: -11.443302154541016
    10. ' ' → logprob: -12.818302154541016

Token 2850: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28081652522087097
    2. '   ' → logprob: -1.6558165550231934
    3. '       ' → logprob: -3.2808165550231934
    4. 'for' → logprob: -4.155816555023193
    5. '```' → logprob: -7.905816555023193
    6. ' k' → logprob: -8.405816078186035
    7. '
' → logprob: -11.780816078186035
    8. '``' → logprob: -12.155816078186035
    9. ' from' → logprob: -12.655816078186035
    10. ' ' → logprob: -12.780816078186035

Token 2851: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1018122136592865
    2. ' for' → logprob: -2.4768121242523193
    3. 'range' → logprob: -4.976812362670898
    4. 'k' → logprob: -5.726812362670898
    5. ' k' → logprob: -6.976812362670898
    6. ' range' → logprob: -7.351812362670898
    7. '
' → logprob: -8.101812362670898
    8. 'continue' → logprob: -8.976812362670898
    9. '   ' → logprob: -9.101812362670898
    10. '#' → logprob: -9.476812362670898

Token 2852: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6133824586868286
    2. 'for' → logprob: -0.8633824586868286
    3. 'k' → logprob: -3.613382339477539
    4. ' k' → logprob: -4.863382339477539
    5. ' over' → logprob: -7.238382339477539
    6. '```' → logprob: -7.238382339477539
    7. '   ' → logprob: -7.613382339477539
    8. '       ' → logprob: -10.363382339477539
    9. ' on' → logprob: -10.363382339477539
    10. 'over' → logprob: -10.488382339477539

Token 2853: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.028791924938559532
    2. 'range' → logprob: -3.653791904449463
    3. ' k' → logprob: -6.653791904449463
    4. '-k' → logprob: -7.403791904449463
    5. ' range' → logprob: -7.778791904449463
    6. '-' → logprob: -9.403792381286621
    7. 'for' → logprob: -10.528792381286621
    8. '```' → logprob: -11.278792381286621
    9. '-range' → logprob: -11.528792381286621
    10. '0' → logprob: -11.778792381286621

Token 2854: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.048621319234371185
    2. 'for' → logprob: -3.173621416091919
    3. ' in' → logprob: -5.92362117767334
    4. '       ' → logprob: -6.92362117767334
    5. '```' → logprob: -7.29862117767334
    6. ' k' → logprob: -7.79862117767334
    7. ' range' → logprob: -8.29862117767334
    8. 'range' → logprob: -8.92362117767334
    9. '   ' → logprob: -9.79862117767334
    10. 'k' → logprob: -9.92362117767334

Token 2855: ' calcul' (ID: 7559)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07052628695964813
    2. ' k' → logprob: -2.695526361465454
    3. 'range' → logprob: -8.320526123046875
    4. 'abs' → logprob: -9.195526123046875
    5. ' range' → logprob: -9.320526123046875
    6. 'for' → logprob: -9.945526123046875
    7. ' for' → logprob: -10.195526123046875
    8. ' abs' → logprob: -10.320526123046875
    9. '-' → logprob: -11.695526123046875
    10. ' ' → logprob: -12.195526123046875

Token 2856: 'er' (ID: 259)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40022844076156616
    2. 'range' → logprob: -1.400228500366211
    3. 'er' → logprob: -2.525228500366211
    4. ' range' → logprob: -7.150228500366211
    5. 'e' → logprob: -7.150228500366211
    6. 't' → logprob: -7.650228500366211
    7. 'ter' → logprob: -7.650228500366211
    8. 'for' → logprob: -8.775228500366211
    9. '   ' → logprob: -8.900228500366211
    10. 'k' → logprob: -9.900228500366211

Token 2857: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0041797831654548645
    2. ' k' → logprob: -5.504179954528809
    3. 'for' → logprob: -10.629179954528809
    4. '```' → logprob: -10.879179954528809
    5. '0' → logprob: -11.004179954528809
    6. '-' → logprob: -11.254179954528809
    7. '-k' → logprob: -11.754179954528809
    8. '   ' → logprob: -11.754179954528809
    9. ' for' → logprob: -12.254179954528809
    10. 'range' → logprob: -12.629179954528809

Token 2858: ' et' (ID: 859)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16393190622329712
    2. '   ' → logprob: -2.1639318466186523
    3. 'for' → logprob: -3.4139318466186523
    4. '       ' → logprob: -6.663931846618652
    5. ':' → logprob: -7.413931846618652
    6. '```' → logprob: -7.913931846618652
    7. '	for' → logprob: -8.288931846618652
    8. ' range' → logprob: -8.663931846618652
    9. ' k' → logprob: -8.788931846618652
    10. ',' → logprob: -8.788931846618652

Token 2859: ' vérifier' (ID: 93671)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12742125988006592
    2. 'for' → logprob: -2.6274213790893555
    3. ' k' → logprob: -3.2524213790893555
    4. ' for' → logprob: -5.2524213790893555
    5. 'abs' → logprob: -6.6274213790893555
    6. 'range' → logprob: -7.0024213790893555
    7. 't' → logprob: -8.627421379089355
    8. ' abs' → logprob: -8.752421379089355
    9. 'find' → logprob: -9.002421379089355
    10. ' range' → logprob: -9.127421379089355

Token 2860: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3432866036891937
    2. 'for' → logprob: -1.7182866334915161
    3. '       ' → logprob: -2.2182865142822266
    4. '   ' → logprob: -6.468286514282227
    5. '```' → logprob: -7.718286514282227
    6. '           ' → logprob: -8.468286514282227
    7. ' k' → logprob: -9.468286514282227
    8. '``' → logprob: -10.718286514282227
    9. 'k' → logprob: -10.843286514282227
    10. 'range' → logprob: -11.468286514282227

Token 2861: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0077033997513353825
    2. ' for' → logprob: -5.3827033042907715
    3. '```' → logprob: -5.8827033042907715
    4. 'for' → logprob: -9.00770378112793
    5. '       ' → logprob: -9.00770378112793
    6. '``' → logprob: -10.88270378112793
    7. '	for' → logprob: -11.00770378112793
    8. '
' → logprob: -12.25770378112793
    9. ' k' → logprob: -12.50770378112793
    10. ' ' → logprob: -14.50770378112793

Token 2862: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10415061563253403
    2. ' for' → logprob: -2.7291505336761475
    3. 'for' → logprob: -3.6041505336761475
    4. '       ' → logprob: -5.104150772094727
    5. '```' → logprob: -8.104150772094727
    6. '	for' → logprob: -10.229150772094727
    7. '``' → logprob: -12.229150772094727
    8. ' ' → logprob: -12.229150772094727
    9. '           ' → logprob: -13.479150772094727
    10. '    ' → logprob: -13.979150772094727

Token 2863: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6683428883552551
    2. '       ' → logprob: -1.4183428287506104
    3. 'for' → logprob: -1.4183428287506104
    4. '   ' → logprob: -5.7933430671691895
    5. '```' → logprob: -9.543342590332031
    6. '           ' → logprob: -9.668342590332031
    7. ' k' → logprob: -11.293342590332031
    8. '``' → logprob: -12.168342590332031
    9. 'k' → logprob: -12.543342590332031
    10. '	for' → logprob: -13.418342590332031

Token 2864: ' borne' (ID: 111819)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5294042825698853
    2. ' for' → logprob: -0.9044042825698853
    3. ' range' → logprob: -6.154404163360596
    4. 'range' → logprob: -7.029404163360596
    5. ' k' → logprob: -7.279404163360596
    6. '   ' → logprob: -7.404404163360596
    7. ' continue' → logprob: -7.404404163360596
    8. 'k' → logprob: -7.904404163360596
    9. '```' → logprob: -8.279404640197754
    10. 'continue' → logprob: -8.904404640197754

Token 2865: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.933501124382019
    2. 'k' → logprob: -1.183501124382019
    3. ' for' → logprob: -1.308501124382019
    4. 'for' → logprob: -3.9335012435913086
    5. ' range' → logprob: -4.933501243591309
    6. 'range' → logprob: -5.683501243591309
    7. '   ' → logprob: -10.183501243591309
    8. '```' → logprob: -10.433501243591309
    9. ' ' → logprob: -11.058501243591309
    10. '    ' → logprob: -11.308501243591309

Token 2866: ' par' (ID: 686)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24729467928409576
    2. 'in' → logprob: -2.3722946643829346
    3. '=' → logprob: -2.8722946643829346
    4. ' =' → logprob: -3.4972946643829346
    5. 'for' → logprob: -3.9972946643829346
    6. ' for' → logprob: -4.247294902801514
    7. ' k' → logprob: -6.372294902801514
    8. 'range' → logprob: -6.622294902801514
    9. '   ' → logprob: -7.247294902801514
    10. ' range' → logprob: -7.622294902801514

Token 2867: ' interval' (ID: 17116)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.424601286649704
    2. 'range' → logprob: -2.4246013164520264
    3. '0' → logprob: -2.7996013164520264
    4. ' -' → logprob: -3.0496013164520264
    5. 'max' → logprob: -3.2996013164520264
    6. '360' → logprob: -3.2996013164520264
    7. ' range' → logprob: -4.174601078033447
    8. ' ' → logprob: -4.549601078033447
    9. '-H' → logprob: -4.799601078033447
    10. '1' → logprob: -4.924601078033447

Token 2868: 'le' (ID: 282)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.043054115027189255
    2. ' range' → logprob: -3.4180541038513184
    3. '_range' → logprob: -5.918054103851318
    4. '   ' → logprob: -6.918054103851318
    5. '(range' → logprob: -6.918054103851318
    6. 'ation' → logprob: -7.043054103851318
    7. 'for' → logprob: -7.418054103851318
    8. '[' → logprob: -7.793054103851318
    9. '0' → logprob: -8.043054580688477
    10. 'import' → logprob: -8.293054580688477

Token 2869: ' raisonn' (ID: 144705)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49538740515708923
    2. '   ' → logprob: -1.1203874349594116
    3. 'for' → logprob: -3.995387315750122
    4. '```' → logprob: -4.120387554168701
    5. ' range' → logprob: -4.370387554168701
    6. ' k' → logprob: -5.370387554168701
    7. ':' → logprob: -5.620387554168701
    8. '       ' → logprob: -5.870387554168701
    9. 'range' → logprob: -6.120387554168701
    10. '``' → logprob: -7.370387554168701

Token 2870: 'able' (ID: 562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0272082090377808
    2. '   ' → logprob: -1.4022082090377808
    3. ')' → logprob: -1.7772082090377808
    4. '=' → logprob: -2.7772083282470703
    5. 'e' → logprob: -2.7772083282470703
    6. ' =' → logprob: -4.52720832824707
    7. '    ' → logprob: -4.65220832824707
    8. ']' → logprob: -4.77720832824707
    9. ',' → logprob: -5.02720832824707
    10. '     ' → logprob: -5.02720832824707

Token 2871: ' correspondant' (ID: 146058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8977773785591125
    2. '```' → logprob: -0.8977773785591125
    3. ' for' → logprob: -2.0227773189544678
    4. ' k' → logprob: -3.5227773189544678
    5. '``' → logprob: -5.022777557373047
    6. '(' → logprob: -5.522777557373047
    7. '(k' → logprob: -5.647777557373047
    8. 'for' → logprob: -5.897777557373047
    9. '<|end|>' → logprob: -6.522777557373047
    10. '       ' → logprob: -7.022777557373047

Token 2872: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9528332948684692
    2. 'range' → logprob: -1.9528332948684692
    3. '```' → logprob: -2.0778331756591797
    4. ' to' → logprob: -2.3278331756591797
    5. ' à' → logprob: -3.0778331756591797
    6. 'à' → logprob: -3.3278331756591797
    7. '0' → logprob: -3.3278331756591797
    8. '       ' → logprob: -3.4528331756591797
    9. 'k' → logprob: -3.7028331756591797
    10. ' range' → logprob: -4.20283317565918

Token 2873: ' max' (ID: 2999)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '360' → logprob: -0.9173862934112549
    2. 'max' → logprob: -1.1673862934112549
    3. 'H' → logprob: -1.6673862934112549
    4. 'range' → logprob: -3.292386293411255
    5. 'int' → logprob: -4.042386054992676
    6. '#' → logprob: -4.417386054992676
    7. '720' → logprob: -4.667386054992676
    8. 'abs' → logprob: -5.542386054992676
    9. 'k' → logprob: -5.667386054992676
    10. '100' → logprob: -5.917386054992676

Token 2874: ' temps' (ID: 11160)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0691988542675972
    2. 'range' → logprob: -3.5691988468170166
    3. 'k' → logprob: -3.6941988468170166
    4. '(' → logprob: -5.319199085235596
    5. '(k' → logprob: -6.819199085235596
    6. 'for' → logprob: -6.944199085235596
    7. '[' → logprob: -6.944199085235596
    8. '=' → logprob: -7.069199085235596
    9. '_k' → logprob: -7.194199085235596
    10. ' range' → logprob: -7.569199085235596

Token 2875: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25113049149513245
    2. ' for' → logprob: -2.1261305809020996
    3. '```' → logprob: -2.5011305809020996
    4. 'for' → logprob: -4.1261305809021
    5. '``' → logprob: -6.3761305809021
    6. ' k' → logprob: -6.7511305809021
    7. 'k' → logprob: -7.8761305809021
    8. '       ' → logprob: -8.126130104064941
    9. '	for' → logprob: -8.376130104064941
    10. ':' → logprob: -8.626130104064941

Token 2876: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7528204321861267
    2. '   ' → logprob: -0.8778204321861267
    3. ' for' → logprob: -2.2528204917907715
    4. '``' → logprob: -5.7528204917907715
    5. 'for' → logprob: -6.1278204917907715
    6. '<|end|>' → logprob: -7.8778204917907715
    7. ' k' → logprob: -7.8778204917907715
    8. '(' → logprob: -8.002820014953613
    9. '\' → logprob: -8.502820014953613
    10. '    
' → logprob: -8.627820014953613

Token 2877: ' base' (ID: 3611)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4462261199951172
    2. '   ' → logprob: -1.1962261199951172
    3. '```' → logprob: -3.071226119995117
    4. 'for' → logprob: -4.696226119995117
    5. ' k' → logprob: -6.446226119995117
    6. '       ' → logprob: -8.321226119995117
    7. '``' → logprob: -8.321226119995117
    8. 'k' → logprob: -10.821226119995117
    9. ' ' → logprob: -11.571226119995117
    10. '	for' → logprob: -11.821226119995117

Token 2878: ' =' (ID: 314)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.5129227042198181
    2. ' =' → logprob: -1.137922763824463
    3. '=' → logprob: -3.512922763824463
    4. '_num' → logprob: -3.637922763824463
    5. '_' → logprob: -5.387922763824463
    6. 'k' → logprob: -5.387922763824463
    7. '_range' → logprob: -5.387922763824463
    8. ' _' → logprob: -6.512922763824463
    9. '   ' → logprob: -6.512922763824463
    10. '_t' → logprob: -6.887922763824463

Token 2879: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30317702889442444
    2. '360' → logprob: -1.428176999092102
    3. '1' → logprob: -5.0531768798828125
    4. 'k' → logprob: -5.5531768798828125
    5. ' ' → logprob: -5.5531768798828125
    6. 'int' → logprob: -6.0531768798828125
    7. '-' → logprob: -6.1781768798828125
    8. '(' → logprob: -6.5531768798828125
    9. ' k' → logprob: -8.178176879882812
    10. 'max' → logprob: -8.303176879882812

Token 2880: '360' (ID: 9870)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10104531794786453
    2. '1' → logprob: -3.1010453701019287
    3. '-' → logprob: -3.3510453701019287
    4. '360' → logprob: -4.72604513168335
    5. 'int' → logprob: -5.47604513168335
    6. 'max' → logprob: -7.35104513168335
    7. 'k' → logprob: -7.47604513168335
    8. ' ' → logprob: -8.101045608520508
    9. '-k' → logprob: -8.351045608520508
    10. '-(' → logprob: -8.476045608520508

Token 2881: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08577799797058105
    2. '*' → logprob: -2.710777997970581
    3. '   ' → logprob: -5.21077823638916
    4. '
' → logprob: -5.33577823638916
    5. '*k' → logprob: -5.58577823638916
    6. 'for' → logprob: -7.46077823638916
    7. ' /' → logprob: -8.33577823638916
    8. ' ' → logprob: -8.83577823638916
    9. '*i' → logprob: -8.83577823638916
    10. '#' → logprob: -8.83577823638916

Token 2882: ' abs' (ID: 8443)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.03672879561781883
    2. 'abs' → logprob: -3.411728858947754
    3. ' den' → logprob: -6.036728858947754
    4. ' abs' → logprob: -7.411728858947754
    5. '(abs' → logprob: -9.786728858947754
    6. '(' → logprob: -10.661728858947754
    7. ' (' → logprob: -13.036728858947754
    8. 'float' → logprob: -13.411728858947754
    9. '   ' → logprob: -15.161728858947754
    10. '_den' → logprob: -15.161728858947754

Token 2883: '(' (ID: 7)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00013846253568772227
    2. '(' → logprob: -9.125138282775879
    3. ' den' → logprob: -10.625138282775879
    4. '   ' → logprob: -12.250138282775879
    5. ' ' → logprob: -15.625138282775879
    6. '  ' → logprob: -16.375139236450195
    7. ' (' → logprob: -16.875139236450195
    8. '(
' → logprob: -17.000139236450195
    9. '_den' → logprob: -17.375139236450195
    10. '           ' → logprob: -18.000139236450195

Token 2884: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -2.5776860184123507e-06
    2. ' den' → logprob: -13.00000286102295
    3. 'int' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.375001907348633
    5. 'float' → logprob: -17.375001907348633
    6. '(' → logprob: -18.750001907348633
    7. '  ' → logprob: -18.875001907348633
    8. ' ' → logprob: -19.250001907348633
    9. 'det' → logprob: -19.750001907348633
    10. '_den' → logprob: -20.375001907348633

Token 2885: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017233692342415452
    2. ')
' → logprob: -6.751723289489746
    3. '1' → logprob: -7.751723289489746
    4. '   ' → logprob: -9.626723289489746
    5. ' )' → logprob: -11.501723289489746
    6. '*' → logprob: -11.876723289489746
    7. '_k' → logprob: -12.001723289489746
    8. ')
' → logprob: -12.251723289489746
    9. '))' → logprob: -12.501723289489746
    10. ')*' → logprob: -12.626723289489746

Token 2886: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040290577453561127
    2. ' for' → logprob: -8.375402450561523
    3. 'for' → logprob: -9.125402450561523
    4. '```' → logprob: -10.375402450561523
    5. '       ' → logprob: -10.625402450561523
    6. '
' → logprob: -12.625402450561523
    7. ',' → logprob: -13.500402450561523
    8. '    
' → logprob: -14.125402450561523
    9. ')' → logprob: -14.250402450561523
    10. '``' → logprob: -15.000402450561523

Token 2887: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16868342459201813
    2. '   ' → logprob: -2.4186835289001465
    3. 'for' → logprob: -2.7936835289001465
    4. ' k' → logprob: -6.0436835289001465
    5. '```' → logprob: -6.6686835289001465
    6. '       ' → logprob: -6.9186835289001465
    7. 'k' → logprob: -8.543683052062988
    8. '``' → logprob: -9.168683052062988
    9. 'range' → logprob: -11.293683052062988
    10. '
' → logprob: -11.543683052062988

Token 2888: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08180968463420868
    2. 'k' → logprob: -3.3318097591400146
    3. '   ' → logprob: -3.9568097591400146
    4. '       ' → logprob: -4.3318095207214355
    5. ' for' → logprob: -4.5818095207214355
    6. ' k' → logprob: -9.081809997558594
    7. '```' → logprob: -9.081809997558594
    8. 'import' → logprob: -10.956809997558594
    9. 'from' → logprob: -11.081809997558594
    10. '
' → logprob: -11.581809997558594

Token 2889: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6797288656234741
    2. '=' → logprob: -0.8047288656234741
    3. ' in' → logprob: -4.054728984832764
    4. 'for' → logprob: -4.179728984832764
    5. ' for' → logprob: -5.929728984832764
    6. 'range' → logprob: -6.179728984832764
    7. 'in' → logprob: -6.179728984832764
    8. ' k' → logprob: -6.304728984832764
    9. '=k' → logprob: -6.554728984832764
    10. 'k' → logprob: -6.679728984832764

Token 2890: ' pour' (ID: 1930)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5918560028076172
    2. ' =' → logprob: -1.8418560028076172
    3. '   ' → logprob: -2.341856002807617
    4. '=' → logprob: -2.466856002807617
    5. ' k' → logprob: -3.591856002807617
    6. 'for' → logprob: -3.716856002807617
    7. ' for' → logprob: -3.841856002807617
    8. '0' → logprob: -5.216856002807617
    9. '-' → logprob: -5.216856002807617
    10. 'min' → logprob: -5.591856002807617

Token 2891: ' dépasser' (ID: 187375)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2582305371761322
    2. 'k' → logprob: -2.008230447769165
    3. ' int' → logprob: -3.133230447769165
    4. ' k' → logprob: -3.758230447769165
    5. '(int' → logprob: -4.383230686187744
    6. 'max' → logprob: -4.883230686187744
    7. ' math' → logprob: -6.008230686187744
    8. 'math' → logprob: -6.508230686187744
    9. ' max' → logprob: -6.633230686187744
    10. '(k' → logprob: -7.883230686187744

Token 2892: ' t' (ID: 260)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16308097541332245
    2. 'max' → logprob: -2.913080930709839
    3. ' int' → logprob: -3.288080930709839
    4. 'k' → logprob: -4.163081169128418
    5. '(int' → logprob: -4.288081169128418
    6. ' max' → logprob: -4.413081169128418
    7. '0' → logprob: -4.788081169128418
    8. 't' → logprob: -5.663081169128418
    9. ' k' → logprob: -6.413081169128418
    10. ' t' → logprob: -7.038081169128418

Token 2893: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.271096110343933
    2. 'int' → logprob: -1.521096110343933
    3. 'k' → logprob: -1.771096110343933
    4. '=' → logprob: -2.1460962295532227
    5. ' k' → logprob: -2.2710962295532227
    6. '=int' → logprob: -2.6460962295532227
    7. ' int' → logprob: -3.8960962295532227
    8. 'import' → logprob: -5.396096229553223
    9. '   ' → logprob: -5.521096229553223
    10. 'max' → logprob: -5.771096229553223

Token 2894: ' :' (ID: 712)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8595981001853943
    2. '   ' → logprob: -0.9845981001853943
    3. ' k' → logprob: -2.984598159790039
    4. '       ' → logprob: -3.109598159790039
    5. '```' → logprob: -3.484598159790039
    6. ' =' → logprob: -3.609598159790039
    7. 'import' → logprob: -4.359598159790039
    8. '=' → logprob: -4.859598159790039
    9. ' for' → logprob: -4.984598159790039
    10. 'for' → logprob: -5.109598159790039

Token 2895: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4596652388572693
    2. ' k' → logprob: -1.959665298461914
    3. '```' → logprob: -2.209665298461914
    4. '   ' → logprob: -2.459665298461914
    5. 'for' → logprob: -4.709665298461914
    6. 'import' → logprob: -5.084665298461914
    7. '       ' → logprob: -5.209665298461914
    8. 'from' → logprob: -5.459665298461914
    9. ' for' → logprob: -5.834665298461914
    10. '``' → logprob: -5.959665298461914

Token 2896: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024288875982165337
    2. ' =' → logprob: -4.649288654327393
    3. '=int' → logprob: -4.899288654327393
    4. '_min' → logprob: -6.024288654327393
    5. '=k' → logprob: -6.024288654327393
    6. 'min' → logprob: -6.899288654327393
    7. 'k' → logprob: -8.02428913116455
    8. '=min' → logprob: -8.64928913116455
    9. '_start' → logprob: -8.89928913116455
    10. '   ' → logprob: -9.27428913116455

Token 2897: ' k' (ID: 372)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023807302117347717
    2. ' int' → logprob: -3.7738072872161865
    3. 'k' → logprob: -8.148807525634766
    4. '(int' → logprob: -8.773807525634766
    5. ' k' → logprob: -10.023807525634766
    6. 't' → logprob: -10.523807525634766
    7. 'max' → logprob: -10.773807525634766
    8. ' t' → logprob: -11.273807525634766
    9. ' max' → logprob: -12.273807525634766
    10. 'round' → logprob: -12.523807525634766

Token 2898: '*' (ID: 9)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6104459762573242
    2. '>=' → logprob: -1.4854459762573242
    3. ' =' → logprob: -1.8604459762573242
    4. ' >=' → logprob: -2.610445976257324
    5. '*' → logprob: -7.360445976257324
    6. '≥' → logprob: -8.610445976257324
    7. ' *' → logprob: -8.860445976257324
    8. '>' → logprob: -9.110445976257324
    9. '=int' → logprob: -9.110445976257324
    10. ' >' → logprob: -9.860445976257324

Token 2899: '360' (ID: 9870)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37673401832580566
    2. ' int' → logprob: -1.7517340183258057
    3. '(int' → logprob: -3.0017340183258057
    4. 't' → logprob: -3.6267340183258057
    5. ' (' → logprob: -3.8767340183258057
    6. ' t' → logprob: -3.8767340183258057
    7. ' math' → logprob: -4.751733779907227
    8. '(t' → logprob: -5.251733779907227
    9. 'math' → logprob: -6.001733779907227
    10. 'sign' → logprob: -6.501733779907227

Token 2900: '/' (ID: 14)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8271155953407288
    2. '>=' → logprob: -0.8271155953407288
    3. '/' → logprob: -3.202115535736084
    4. ' /' → logprob: -3.327115535736084
    5. '//' → logprob: -3.952115535736084
    6. ' //' → logprob: -4.327115535736084
    7. '=' → logprob: -5.452115535736084
    8. ' =' → logprob: -5.577115535736084
    9. ' >' → logprob: -5.577115535736084
    10. '>' → logprob: -5.827115535736084

Token 2901: 'den' (ID: 1660)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1658792644739151
    2. 'den' → logprob: -1.915879249572754
    3. ' abs' → logprob: -5.415879249572754
    4. '(abs' → logprob: -7.040879249572754
    5. ' den' → logprob: -8.165879249572754
    6. '|' → logprob: -11.415879249572754
    7. '```' → logprob: -11.915879249572754
    8. '(' → logprob: -12.165879249572754
    9. ' (' → logprob: -13.040879249572754
    10. ' ' → logprob: -13.915879249572754

Token 2902: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.469712495803833
    2. '=' → logprob: -1.844712495803833
    3. '   ' → logprob: -2.219712495803833
    4. ' k' → logprob: -3.219712495803833
    5. '       ' → logprob: -4.094712257385254
    6. ' ' → logprob: -4.719712257385254
    7. ' if' → logprob: -5.094712257385254
    8. 'import' → logprob: -5.469712257385254
    9. '1' → logprob: -5.719712257385254
    10. '
' → logprob: -5.844712257385254

Token 2903: ' t' (ID: 260)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.050436731427907944
    2. ' int' → logprob: -3.0504367351531982
    3. '(int' → logprob: -6.425436496734619
    4. ' t' → logprob: -8.925436973571777
    5. 't' → logprob: -9.550436973571777
    6. '[int' → logprob: -11.800436973571777
    7. ' (' → logprob: -12.800436973571777
    8. '(t' → logprob: -12.800436973571777
    9. 'k' → logprob: -12.925436973571777
    10. 'max' → logprob: -13.050436973571777

Token 2904: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010827206075191498
    2. '_num' → logprob: -5.01082706451416
    3. '_' → logprob: -6.38582706451416
    4. '```' → logprob: -7.76082706451416
    5. ' ' → logprob: -8.01082706451416
    6. '`' → logprob: -8.26082706451416
    7. '+' → logprob: -8.26082706451416
    8. ''_' → logprob: -8.76082706451416
    9. '   ' → logprob: -8.88582706451416
    10. '>' → logprob: -9.13582706451416

Token 2905: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3173011541366577
    2. 'max' → logprob: -1.6923011541366577
    3. 'k' → logprob: -2.0673012733459473
    4. ' k' → logprob: -2.3173012733459473
    5. 'for' → logprob: -2.3173012733459473
    6. ' max' → logprob: -2.8173012733459473
    7. '0' → logprob: -2.9423012733459473
    8. ' for' → logprob: -3.1923012733459473
    9. '`' → logprob: -4.567301273345947
    10. '(max' → logprob: -4.567301273345947

Token 2906: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.4692069292068481
    2. 'int' → logprob: -1.4692069292068481
    3. ' max' → logprob: -1.8442069292068481
    4. 'import' → logprob: -1.9692069292068481
    5. 'k' → logprob: -2.3442068099975586
    6. 'max' → logprob: -2.5942068099975586
    7. ' int' → logprob: -3.3442068099975586
    8. '   ' → logprob: -4.094206809997559
    9. '           ' → logprob: -5.469206809997559
    10. '       ' → logprob: -5.469206809997559

Token 2907: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017966721206903458
    2. ' =' → logprob: -4.1429667472839355
    3. '=int' → logprob: -6.2679667472839355
    4. '>=' → logprob: -11.017966270446777
    5. 'int' → logprob: -11.642966270446777
    6. '=k' → logprob: -13.017966270446777
    7. '```' → logprob: -13.517966270446777
    8. '>' → logprob: -13.767966270446777
    9. ' int' → logprob: -14.017966270446777
    10. '=max' → logprob: -14.017966270446777

Token 2908: ' t' (ID: 260)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0027279560454189777
    2. ' int' → logprob: -6.25272798538208
    3. 't' → logprob: -7.25272798538208
    4. '(int' → logprob: -9.752727508544922
    5. ' t' → logprob: -10.752727508544922
    6. 'round' → logprob: -12.127727508544922
    7. '(t' → logprob: -12.877727508544922
    8. '   ' → logprob: -13.127727508544922
    9. '[int' → logprob: -15.002727508544922
    10. 'k' → logprob: -15.627727508544922

Token 2909: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08044654875993729
    2. 'int' → logprob: -2.955446481704712
    3. '_num' → logprob: -4.330446720123291
    4. '=int' → logprob: -5.330446720123291
    5. '   ' → logprob: -6.455446720123291
    6. '
' → logprob: -6.955446720123291
    7. '_int' → logprob: -7.330446720123291
    8. '       ' → logprob: -7.455446720123291
    9. ' int' → logprob: -7.580446720123291
    10. 'o' → logprob: -7.580446720123291

Token 2910: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.071456789970398
    2. ' *' → logprob: -1.196456789970398
    3. ' =' → logprob: -2.5714569091796875
    4. '*' → logprob: -2.6964569091796875
    5. ' //' → logprob: -2.9464569091796875
    6. ' /' → logprob: -3.1964569091796875
    7. '//' → logprob: -3.5714569091796875
    8. '=' → logprob: -4.0714569091796875
    9. '-' → logprob: -4.3214569091796875
    10. ' ' → logprob: -4.3214569091796875

Token 2911: ' den' (ID: 1786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.20431606471538544
    2. 'den' → logprob: -1.8293160200119019
    3. '(abs' → logprob: -3.8293161392211914
    4. ' abs' → logprob: -6.329316139221191
    5. '(' → logprob: -7.454316139221191
    6. ' den' → logprob: -8.954316139221191
    7. ' (' → logprob: -10.204316139221191
    8. '|' → logprob: -12.204316139221191
    9. '```' → logprob: -12.329316139221191
    10. '{' → logprob: -12.829316139221191

Token 2912: '/' (ID: 14)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0901436805725098
    2. ' =' → logprob: -1.8401436805725098
    3. '+' → logprob: -1.9651436805725098
    4. '       ' → logprob: -2.0901436805725098
    5. ' +' → logprob: -2.4651436805725098
    6. '=' → logprob: -3.0901436805725098
    7. '   ' → logprob: -3.4651436805725098
    8. 'int' → logprob: -4.59014368057251
    9. '#' → logprob: -4.84014368057251
    10. 'import' → logprob: -5.46514368057251

Token 2913: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.002255410421639681
    2. 'abs' → logprob: -6.127255439758301
    3. 'base' → logprob: -10.3772554397583
    4. 'den' → logprob: -10.5022554397583
    5. ' ' → logprob: -12.0022554397583
    6. '1' → logprob: -13.3772554397583
    7. 'sign' → logprob: -13.8772554397583
    8. '   ' → logprob: -14.2522554397583
    9. ' abs' → logprob: -14.2522554397583
    10. '36' → logprob: -14.6272554397583

Token 2914: ' (' (ID: 350)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3983148336410522
    2. 'k' → logprob: -1.5233148336410522
    3. '       ' → logprob: -1.8983148336410522
    4. ' k' → logprob: -2.273314952850342
    5. '   ' → logprob: -3.023314952850342
    6. ' 
' → logprob: -3.148314952850342
    7. '`' → logprob: -3.398314952850342
    8. '``' → logprob: -4.023314952850342
    9. '+' → logprob: -4.273314952850342
    10. '(k' → logprob: -4.273314952850342

Token 2915: 'en' (ID: 262)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1885962188243866
    2. ' int' → logprob: -2.563596248626709
    3. '       ' → logprob: -3.813596248626709
    4. '0' → logprob: -4.063596248626709
    5. '   ' → logprob: -4.688596248626709
    6. ')' → logprob: -4.688596248626709
    7. '(int' → logprob: -4.938596248626709
    8. 'max' → logprob: -4.938596248626709
    9. ' k' → logprob: -5.188596248626709
    10. ' max' → logprob: -5.313596248626709

Token 2916: ' tenant' (ID: 38634)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5622636079788208
    2. 'int' → logprob: -1.1872636079788208
    3. 'sign' → logprob: -3.4372634887695312
    4. 'ceil' → logprob: -3.5622634887695312
    5. '+' → logprob: -4.062263488769531
    6. '```' → logprob: -4.187263488769531
    7. '(int' → logprob: -5.187263488769531
    8. ' int' → logprob: -5.312263488769531
    9. ' ' → logprob: -5.437263488769531
    10. 'k' → logprob: -5.812263488769531

Token 2917: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.133173406124115
    2. 'comp' → logprob: -2.1331734657287598
    3. '```' → logprob: -6.38317346572876
    4. 'account' → logprob: -6.38317346572876
    5. '   ' → logprob: -7.25817346572876
    6. ' ' → logprob: -7.50817346572876
    7. '    ' → logprob: -8.008172988891602
    8. '       ' → logprob: -8.633172988891602
    9. '  ' → logprob: -8.633172988891602
    10. '\t' → logprob: -8.883172988891602

Token 2918: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3125026822090149
    2. 'de' → logprob: -1.5625026226043701
    3. '```' → logprob: -3.93750262260437
    4. ' du' → logprob: -4.562502861022949
    5. 'du' → logprob: -5.062502861022949
    6. ' des' → logprob: -5.562502861022949
    7. '=' → logprob: -5.687502861022949
    8. '       ' → logprob: -5.687502861022949
    9. ' ' → logprob: -6.687502861022949
    10. ' k' → logprob: -6.812502861022949

Token 2919: ' signe' (ID: 87345)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5448774695396423
    2. '(sign' → logprob: -1.669877529144287
    3. 'den' → logprob: -2.669877529144287
    4. ' (' → logprob: -2.919877529144287
    5. '1' → logprob: -3.169877529144287
    6. '(' → logprob: -3.794877529144287
    7. '#' → logprob: -4.669877529144287
    8. ' sign' → logprob: -5.169877529144287
    9. '0' → logprob: -5.169877529144287
    10. '(abs' → logprob: -5.419877529144287

Token 2920: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0533947944641113
    2. ' +' → logprob: -1.3033947944641113
    3. ')' → logprob: -2.1783947944641113
    4. '       ' → logprob: -2.4283947944641113
    5. ')
' → logprob: -2.6783947944641113
    6. ' if' → logprob: -3.8033947944641113
    7. '```' → logprob: -3.8033947944641113
    8. '
' → logprob: -4.303394794464111
    9. '   ' → logprob: -4.678394794464111
    10. ',' → logprob: -4.928394794464111

Token 2921: '       ' (ID: 309)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.130552053451538
    2. '       ' → logprob: -1.255552053451538
    3. '```' → logprob: -1.255552053451538
    4. 'k' → logprob: -2.880552053451538
    5. '   ' → logprob: -3.630552053451538
    6. '(k' → logprob: -5.005552291870117
    7. '``' → logprob: -5.505552291870117
    8. '    ' → logprob: -5.505552291870117
    9. ' (' → logprob: -6.505552291870117
    10. '`' → logprob: -6.630552291870117

Token 2922: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9107944965362549
    2. ' k' → logprob: -0.9107944965362549
    3. 'k' → logprob: -2.160794496536255
    4. '```' → logprob: -3.285794496536255
    5. '   ' → logprob: -3.785794496536255
    6. ' for' → logprob: -4.410794258117676
    7. ' if' → logprob: -5.660794258117676
    8. 'for' → logprob: -6.285794258117676
    9. '    ' → logprob: -7.410794258117676
    10. '``' → logprob: -7.535794258117676

Token 2923: ' den' (ID: 1786)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5280159115791321
    2. ' sign' → logprob: -1.5280158519744873
    3. 'den' → logprob: -1.9030158519744873
    4. ' den' → logprob: -3.1530158519744873
    5. '(sign' → logprob: -7.528016090393066
    6. '   ' → logprob: -8.028016090393066
    7. '(' → logprob: -9.403016090393066
    8. ' (' → logprob: -9.528016090393066
    9. ' ' → logprob: -9.653016090393066
    10. '	sign' → logprob: -9.903016090393066

Token 2924: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0982818752527237
    2. ' >' → logprob: -2.4732818603515625
    3. '<' → logprob: -5.4732818603515625
    4. '>=' → logprob: -6.0982818603515625
    5. ' >=' → logprob: -6.5982818603515625
    6. ' <' → logprob: -6.5982818603515625
    7. '   ' → logprob: -10.098281860351562
    8. '<=' → logprob: -10.598281860351562
    9. '*' → logprob: -10.848281860351562
    10. ' <=' → logprob: -10.973281860351562

Token 2925: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004212594940327108
    2. '=' → logprob: -8.250421524047852
    3. ' ' → logprob: -8.750421524047852
    4. '       ' → logprob: -15.125421524047852
    5. '   ' → logprob: -15.125421524047852
    6. '           ' → logprob: -15.500421524047852
    7. '     ' → logprob: -15.875421524047852
    8. '  ' → logprob: -16.37542152404785
    9. '         ' → logprob: -16.37542152404785
    10. '1' → logprob: -16.50042152404785

Token 2926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002701208693906665
    2. '=' → logprob: -6.002701282501221
    3. '-' → logprob: -9.002700805664062
    4. ' ' → logprob: -9.252700805664062
    5. '=-' → logprob: -14.002700805664062
    6. '   ' → logprob: -14.502700805664062
    7. ' =' → logprob: -14.502700805664062
    8. ' -' → logprob: -14.627700805664062
    9. '=
' → logprob: -14.877700805664062
    10. '  ' → logprob: -15.002700805664062

Token 2927: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3215278089046478
    2. ':' → logprob: -1.3215278387069702
    3. '           ' → logprob: -4.94652795791626
    4. '       ' → logprob: -7.32152795791626
    5. '==' → logprob: -9.196527481079102
    6. ' and' → logprob: -9.571527481079102
    7. ':

' → logprob: -9.821527481079102
    8. '=' → logprob: -10.196527481079102
    9. ' :
' → logprob: -10.321527481079102
    10. ',' → logprob: -10.571527481079102

Token 2928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002202240051701665
    2. '```' → logprob: -7.627202033996582
    3. ' k' → logprob: -8.002202033996582
    4. '               ' → logprob: -8.252202033996582
    5. '            ' → logprob: -8.252202033996582
    6. ' continue' → logprob: -8.377202033996582
    7. '        ' → logprob: -8.627202033996582
    8. ' ' → logprob: -9.752202033996582
    9. '       ' → logprob: -10.252202033996582
    10. '
' → logprob: -10.252202033996582

Token 2929: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7408584952354431
    2. 'k' (adapté à ' k') → logprob: -1.115858554840088
    3. ' k' → logprob: -1.740858554840088
    4. 'min' → logprob: -4.990858554840088
    5. ' min' → logprob: -5.365858554840088
    6. 'start' → logprob: -5.865858554840088
    7. ' start' → logprob: -5.865858554840088
    8. 'import' → logprob: -6.990858554840088
    9. '       ' → logprob: -7.115858554840088
    10. '               ' → logprob: -7.490858554840088

Token 2930: '_start' (ID: 10949)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14430533349514008
    2. ' =' → logprob: -2.0193052291870117
    3. '=int' → logprob: -6.519305229187012
    4. '   ' → logprob: -9.644305229187012
    5. '>=' → logprob: -10.269305229187012
    6. 'int' → logprob: -10.894305229187012
    7. '=max' → logprob: -11.394305229187012
    8. 'max' → logprob: -11.644305229187012
    9. '≥' → logprob: -12.769305229187012
    10. ' int' → logprob: -12.769305229187012

Token 2931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742647111415863
    2. ' =' → logprob: -0.9742647409439087
    3. '=k' → logprob: -8.974265098571777
    4. '=int' → logprob: -9.849265098571777
    5. ',' → logprob: -13.099265098571777
    6. ' k' → logprob: -13.349265098571777
    7. '```' → logprob: -14.224265098571777
    8. ',k' → logprob: -14.349265098571777
    9. 'k' → logprob: -14.349265098571777
    10. '   ' → logprob: -14.474265098571777

Token 2932: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015489889308810234
    2. 'max' → logprob: -4.5154900550842285
    3. ' int' → logprob: -5.5154900550842285
    4. ' max' → logprob: -8.39048957824707
    5. '0' → logprob: -9.01548957824707
    6. '(int' → logprob: -9.76548957824707
    7. '(max' → logprob: -14.14048957824707
    8. ' ' → logprob: -14.26548957824707
    9. 'round' → logprob: -15.14048957824707
    10. '   ' → logprob: -15.14048957824707

Token 2933: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.11286021769046783
    2. 't' → logprob: -2.8628602027893066
    3. 'max' → logprob: -3.3628602027893066
    4. ' (' → logprob: -5.112860202789307
    5. '(max' → logprob: -5.362860202789307
    6. '((' → logprob: -5.612860202789307
    7. ' t' → logprob: -8.487860679626465
    8. ' max' → logprob: -8.612860679626465
    9. '(' → logprob: -9.862860679626465
    10. '-(' → logprob: -9.987860679626465

Token 2934: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000457605579867959
    2. '_num' → logprob: -8.875457763671875
    3. 't' → logprob: -9.250457763671875
    4. '_t' → logprob: -9.875457763671875
    5. '(t' → logprob: -11.125457763671875
    6. 'num' → logprob: -11.125457763671875
    7. 'import' → logprob: -11.375457763671875
    8. '(' → logprob: -11.500457763671875
    9. 'floor' → logprob: -11.625457763671875
    10. '_floor' → logprob: -11.625457763671875

Token 2935: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.3023509979248047
    2. ' -' → logprob: -1.5523509979248047
    3. '*' → logprob: -1.9273509979248047
    4. ' +' → logprob: -2.0523509979248047
    5. ')' → logprob: -2.1773509979248047
    6. '+' → logprob: -3.0523509979248047
    7. '-' → logprob: -3.4273509979248047
    8. '(' → logprob: -4.427350997924805
    9. ' ' → logprob: -5.052350997924805
    10. '(t' → logprob: -5.052350997924805

Token 2936: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.08930812776088715
    2. ' den' → logprob: -2.464308023452759
    3. '(' → logprob: -8.83930778503418
    4. ' (' → logprob: -9.33930778503418
    5. '0' → logprob: -10.46430778503418
    6. '   ' → logprob: -10.58930778503418
    7. ' ' → logprob: -10.71430778503418
    8. '1' → logprob: -10.83930778503418
    9. '  ' → logprob: -11.96430778503418
    10. 'd' → logprob: -12.33930778503418

Token 2937: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6165620684623718
    2. '/' → logprob: -1.6165621280670166
    3. '//' → logprob: -1.9915621280670166
    4. ' /' → logprob: -2.1165621280670166
    5. '           ' → logprob: -6.6165618896484375
    6. ')' → logprob: -7.3665618896484375
    7. '+' → logprob: -7.7415618896484375
    8. ' +' → logprob: -7.9915618896484375
    9. '       ' → logprob: -7.9915618896484375
    10. 'import' → logprob: -8.116561889648438

Token 2938: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -11.125020980834961
    3. '1' → logprob: -12.000020980834961
    4. '36' → logprob: -15.250020980834961
    5. '   ' → logprob: -15.875020980834961
    6. '60' → logprob: -17.62502098083496
    7. '180' → logprob: -18.12502098083496
    8. '  ' → logprob: -19.62502098083496
    9. '0' → logprob: -19.75002098083496
    10. '```' → logprob: -20.12502098083496

Token 2939: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -6.869017852295656e-06
    2. '1' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.250006675720215
    4. '36' → logprob: -16.12500762939453
    5. '180' → logprob: -16.75000762939453
    6. '359' → logprob: -19.00000762939453
    7. '   ' → logprob: -19.12500762939453
    8. '361' → logprob: -19.62500762939453
    9. '60' → logprob: -19.75000762939453
    10. '365' → logprob: -20.25000762939453

Token 2940: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7481998801231384
    2. ')
' → logprob: -0.8731998801231384
    3. ' +' → logprob: -3.248199939727783
    4. ' -' → logprob: -3.498199939727783
    5. ')+' → logprob: -3.998199939727783
    6. '+' → logprob: -4.623199939727783
    7. '-' → logprob: -4.873199939727783
    8. ')-' → logprob: -6.248199939727783
    9. '       ' → logprob: -7.123199939727783
    10. '   ' → logprob: -7.623199939727783

Token 2941: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7267351150512695
    2. '-' → logprob: -1.7267351150512695
    3. ' -' → logprob: -1.9767351150512695
    4. ' if' → logprob: -2.9767351150512695
    5. '       ' → logprob: -3.3517351150512695
    6. '           ' → logprob: -3.4767351150512695
    7. ',' → logprob: -3.6017351150512695
    8. '+' → logprob: -4.1017351150512695
    9. '```' → logprob: -4.6017351150512695
    10. 'if' → logprob: -4.8517351150512695

Token 2942: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7996659874916077
    2. ' k' → logprob: -1.299665927886963
    3. 'k' → logprob: -1.674665927886963
    4. '-' → logprob: -3.424665927886963
    5. '       ' → logprob: -3.674665927886963
    6. '```' → logprob: -5.049665927886963
    7. ' for' → logprob: -5.299665927886963
    8. '
' → logprob: -5.299665927886963
    9. 'for' → logprob: -5.674665927886963
    10. ' if' → logprob: -5.799665927886963

Token 2943: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007669798564165831
    2. ' k' → logprob: -5.257669925689697
    3. '(k' → logprob: -6.757669925689697
    4. 't' → logprob: -7.757669925689697
    5. '   ' → logprob: -8.132669448852539
    6. 'den' → logprob: -8.632669448852539
    7. 'not' → logprob: -9.257669448852539
    8. 'sign' → logprob: -9.757669448852539
    9. 'abs' → logprob: -9.882669448852539
    10. ' t' → logprob: -10.257669448852539

Token 2944: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6808761954307556
    2. '_start' → logprob: -1.0558762550354004
    3. '_num' → logprob: -2.5558762550354004
    4. 'k' → logprob: -3.1808762550354004
    5. 'num' → logprob: -4.5558762550354
    6. 'start' → logprob: -5.0558762550354
    7. '#' → logprob: -6.3058762550354
    8. 'import' → logprob: -6.5558762550354
    9. '       ' → logprob: -6.6808762550354
    10. '   ' → logprob: -7.5558762550354

Token 2945: ' *' (ID: 425)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9112012982368469
    2. ' *' → logprob: -1.5362012386322021
    3. '*' → logprob: -2.161201238632202
    4. ' <=' → logprob: -2.161201238632202
    5. '<=' → logprob: -2.911201238632202
    6. '<' → logprob: -2.911201238632202
    7. '*k' → logprob: -4.661201477050781
    8. '<num' → logprob: -4.786201477050781
    9. '>' → logprob: -5.536201477050781
    10. '<t' → logprob: -5.661201477050781

Token 2946: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.06994165480136871
    2. ' den' → logprob: -2.694941759109497
    3. '_den' → logprob: -13.069941520690918
    4. '.den' → logprob: -13.944941520690918
    5. '1' → logprob: -14.069941520690918
    6. ' ' → logprob: -14.444941520690918
    7. '+' → logprob: -15.819941520690918
    8. ' denominator' → logprob: -15.819941520690918
    9. '(' → logprob: -15.944941520690918
    10. 'd' → logprob: -16.319942474365234

Token 2947: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.015040131285786629
    2. ' /' → logprob: -4.765039920806885
    3. '>' → logprob: -5.640039920806885
    4. '%' → logprob: -6.765039920806885
    5. '/k' → logprob: -7.390039920806885
    6. ' >' → logprob: -7.765039920806885
    7. ' <' → logprob: -8.640040397644043
    8. '<=' → logprob: -9.015040397644043
    9. '<' → logprob: -9.015040397644043
    10. '>=' → logprob: -9.265040397644043

Token 2948: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '1' → logprob: -15.000028610229492
    4. '   ' → logprob: -16.125028610229492
    5. '180' → logprob: -16.375028610229492
    6. '36' → logprob: -16.875028610229492
    7. '  ' → logprob: -16.875028610229492
    8. '```' → logprob: -17.000028610229492
    9. '(' → logprob: -18.000028610229492
    10. 'float' → logprob: -18.250028610229492

Token 2949: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0002981624274980277
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -14.250298500061035
    4. '1' → logprob: -14.750298500061035
    5. '  ' → logprob: -15.000298500061035
    6. '```' → logprob: -16.12529754638672
    7. '36' → logprob: -16.25029754638672
    8. '(' → logprob: -17.00029754638672
    9. '    ' → logprob: -17.25029754638672
    10. '180' → logprob: -17.31279754638672

Token 2950: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1055994033813477
    2. '<' → logprob: -1.6055994033813477
    3. '<=' → logprob: -1.8555994033813477
    4. '+' → logprob: -2.4805994033813477
    5. '<int' → logprob: -3.1055994033813477
    6. ' -' → logprob: -3.2305994033813477
    7. '-' → logprob: -3.3555994033813477
    8. ' <=' → logprob: -3.4805994033813477
    9. '           ' → logprob: -3.8555994033813477
    10. ' +' → logprob: -4.230599403381348

Token 2951: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004092054907232523
    2. ' k' → logprob: -5.504092216491699
    3. '   ' → logprob: -11.7540922164917
    4. '	k' → logprob: -12.7540922164917
    5. '(k' → logprob: -14.1290922164917
    6. '{k' → logprob: -14.3790922164917
    7. 'int' → logprob: -14.8790922164917
    8. '    ' → logprob: -15.6290922164917
    9. ' ' → logprob: -15.7540922164917
    10. '=k' → logprob: -15.8790922164917

Token 2952: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -9.472211968386546e-05
    2. 'start' → logprob: -9.500094413757324
    3. 'Start' → logprob: -12.125094413757324
    4. '+' → logprob: -12.375094413757324
    5. '```' → logprob: -12.750094413757324
    6. '_START' → logprob: -13.000094413757324
    7. 'k' → logprob: -13.750094413757324
    8. 't' → logprob: -14.375094413757324
    9. '_Start' → logprob: -15.125094413757324
    10. '_' → logprob: -15.250094413757324

Token 2953: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4217655062675476
    2. ':' → logprob: -1.7967655658721924
    3. ':
' → logprob: -2.4217655658721924
    4. ' +' → logprob: -2.6717655658721924
    5. '           ' → logprob: -4.296765327453613
    6. '       ' → logprob: -6.171765327453613
    7. '               ' → logprob: -6.921765327453613
    8. '1' → logprob: -7.546765327453613
    9. '+=' → logprob: -7.671765327453613
    10. '):
' → logprob: -7.796765327453613

Token 2954: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5094766020774841
    2. '           ' → logprob: -1.884476661682129
    3. 'k' → logprob: -2.134476661682129
    4. ' k' → logprob: -2.259476661682129
    5. '```' → logprob: -4.634476661682129
    6. '+' → logprob: -5.009476661682129
    7. '``' → logprob: -6.759476661682129
    8. '++' → logprob: -6.884476661682129
    9. ' +' → logprob: -7.259476661682129
    10. '                   ' → logprob: -7.259476661682129

Token 2955: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.16208001971244812
    2. ' k' → logprob: -2.0370800495147705
    3. '               ' → logprob: -4.662079811096191
    4. '                   ' → logprob: -5.412079811096191
    5. '	k' → logprob: -6.037079811096191
    6. '           ' → logprob: -6.787079811096191
    7. '```' → logprob: -7.037079811096191
    8. '   ' → logprob: -8.787079811096191
    9. '                ' → logprob: -9.162079811096191
    10. '``' → logprob: -9.287079811096191

Token 2956: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.8227184414863586
    2. '=' → logprob: -1.1977183818817139
    3. '+=' → logprob: -2.072718381881714
    4. 'k' → logprob: -2.197718381881714
    5. 'start' → logprob: -4.447718620300293
    6. '=k' → logprob: -5.447718620300293
    7. '+' → logprob: -5.697718620300293
    8. 'Start' → logprob: -7.447718620300293
    9. '=start' → logprob: -7.697718620300293
    10. ' +=' → logprob: -8.072718620300293

Token 2957: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.017391672357916832
    2. '=' → logprob: -4.267391681671143
    3. ' +=' → logprob: -5.767391681671143
    4. '+' → logprob: -10.017391204833984
    5. '=k' → logprob: -10.642391204833984
    6. ' =' → logprob: -11.267391204833984
    7. 'k' → logprob: -11.892391204833984
    8. ']+=' → logprob: -12.267391204833984
    9. '+='' → logprob: -14.642391204833984
    10. '   ' → logprob: -15.017391204833984

Token 2958: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.0
    4. '```' → logprob: -18.25
    5. '0' → logprob: -18.875
    6. '<|end|>' → logprob: -21.375
    7. '+' → logprob: -21.5
    8. '  ' → logprob: -21.625
    9. '       ' → logprob: -21.875
    10. '#' → logprob: -22.5

Token 2959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -18.0
    4. '0' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. 'import' → logprob: -21.0
    7. '2' → logprob: -21.5
    8. '  ' → logprob: -21.5
    9. 'int' → logprob: -21.5625
    10. 'k' → logprob: -21.625

Token 2960: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03715583309531212
    2. '
' → logprob: -3.537155866622925
    3. '           ' → logprob: -5.787155628204346
    4. '<|end|>' → logprob: -6.037155628204346
    5. '	' → logprob: -7.412155628204346
    6. '<|end|>' → logprob: -8.287156105041504
    7. '```' → logprob: -8.537156105041504
    8. '        
' → logprob: -8.787156105041504
    9. ',' → logprob: -8.912156105041504
    10. '   ' → logprob: -9.162156105041504

Token 2961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7256490588188171
    2. '           ' → logprob: -0.7256490588188171
    3. '<|end|>' → logprob: -4.600648880004883
    4. '
' → logprob: -4.975648880004883
    5. '```' → logprob: -5.350648880004883
    6. '   ' → logprob: -5.475648880004883
    7. '<|end|>' → logprob: -6.600648880004883
    8. '	' → logprob: -7.475648880004883
    9. ' k' → logprob: -7.600648880004883
    10. ' for' → logprob: -7.725648880004883

Token 2962: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1617838740348816
    2. '```' → logprob: -2.7867839336395264
    3. 'else' (adapté à ' else') → logprob: -3.9117839336395264
    4. ' else' → logprob: -4.161783695220947
    5. '   ' → logprob: -4.161783695220947
    6. ' k' → logprob: -4.286783695220947
    7. '           ' → logprob: -4.536783695220947
    8. ' for' → logprob: -5.286783695220947
    9. 'k' → logprob: -5.786783695220947
    10. ',' → logprob: -6.786783695220947

Token 2963: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8644949793815613
    2. '           ' → logprob: -1.364495038986206
    3. '=' → logprob: -1.614495038986206
    4. ':' → logprob: -2.364495038986206
    5. ':
' → logprob: -3.989495038986206
    6. ' k' → logprob: -5.239494800567627
    7. 'k' → logprob: -6.864494800567627
    8. '=k' → logprob: -6.864494800567627
    9. '		' → logprob: -7.489494800567627
    10. '```' → logprob: -7.739494800567627

Token 2964: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2523728609085083
    2. 'k' → logprob: -2.0023727416992188
    3. ' k' → logprob: -2.8773727416992188
    4. '```' → logprob: -3.8773727416992188
    5. '       ' → logprob: -5.127372741699219
    6. '``' → logprob: -6.127372741699219
    7. '               ' → logprob: -6.752372741699219
    8. '-' → logprob: -7.627372741699219
    9. '   ' → logprob: -8.502372741699219
    10. ' -' → logprob: -8.752372741699219

Token 2965: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.492481529712677
    2. ' k' → logprob: -0.992481529712677
    3. '           ' → logprob: -4.117481708526611
    4. '0' → logprob: -7.242481708526611
    5. '-' → logprob: -8.242481231689453
    6. '       ' → logprob: -8.742481231689453
    7. '               ' → logprob: -8.867481231689453
    8. '```' → logprob: -9.117481231689453
    9. '            ' → logprob: -9.367481231689453
    10. ' ' → logprob: -9.492481231689453

Token 2966: '_start' (ID: 10949)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.314325213432312
    2. ' k' → logprob: -2.5643253326416016
    3. '=int' → logprob: -2.9393253326416016
    4. ' =' → logprob: -3.1893253326416016
    5. 'k' → logprob: -3.1893253326416016
    6. 'int' → logprob: -3.5643253326416016
    7. ' int' → logprob: -4.439325332641602
    8. '0' → logprob: -5.064325332641602
    9. '-' → logprob: -5.564325332641602
    10. '-=' → logprob: -6.564325332641602

Token 2967: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141461491584778
    2. ' =' → logprob: -1.7014145851135254
    3. ',' → logprob: -15.201415061950684
    4. '=int' → logprob: -15.201415061950684
    5. '	' → logprob: -15.451415061950684
    6. ' ' → logprob: -16.326414108276367
    7. '=k' → logprob: -16.826414108276367
    8. '=-' → logprob: -16.826414108276367
    9. '=None' → logprob: -16.951414108276367
    10. '```' → logprob: -16.951414108276367

Token 2968: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024381021037697792
    2. ' int' → logprob: -3.899380922317505
    3. '0' → logprob: -6.024381160736084
    4. '-int' → logprob: -7.024381160736084
    5. '-' → logprob: -7.774381160736084
    6. ' -' → logprob: -10.399380683898926
    7. '-(' → logprob: -10.399380683898926
    8. '(int' → logprob: -11.024380683898926
    9. ' ' → logprob: -11.149380683898926
    10. '	int' → logprob: -13.274380683898926

Token 2969: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9381486177444458
    2. '(t' → logprob: -1.1881486177444458
    3. '-(' → logprob: -2.1881484985351562
    4. 'int' → logprob: -2.8131484985351562
    5. '-' → logprob: -3.0631484985351562
    6. '(-' → logprob: -3.6881484985351562
    7. '0' → logprob: -4.313148498535156
    8. ' t' → logprob: -4.563148498535156
    9. '-t' → logprob: -4.563148498535156
    10. '(int' → logprob: -4.688148498535156

Token 2970: '0' (ID: 15)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.3406568765640259
    2. 't' → logprob: -1.8406568765640259
    3. ' (' → logprob: -2.5906567573547363
    4. '0' → logprob: -3.4656567573547363
    5. ' t' → logprob: -4.715656757354736
    6. '(' → logprob: -4.965656757354736
    7. '(-' → logprob: -5.465656757354736
    8. 'abs' → logprob: -6.715656757354736
    9. ' -' → logprob: -7.840656757354736
    10. '(abs' → logprob: -7.840656757354736

Token 2971: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0046769496984779835
    2. '*' → logprob: -5.379676818847656
    3. ' ' → logprob: -11.004676818847656
    4. ')' → logprob: -11.129676818847656
    5. ' -' → logprob: -11.879676818847656
    6. ' ' → logprob: -12.754676818847656
    7. '           ' → logprob: -13.004676818847656
    8. '-' → logprob: -13.254676818847656
    9. '	' → logprob: -13.379676818847656
    10. '   ' → logprob: -13.504676818847656

Token 2972: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.3708904981613159
    2. ' den' → logprob: -1.245890498161316
    3. ' abs' → logprob: -4.7458906173706055
    4. 'abs' → logprob: -5.4958906173706055
    5. '-den' → logprob: -5.7458906173706055
    6. '(-' → logprob: -6.4958906173706055
    7. '(' → logprob: -6.8708906173706055
    8. '-' → logprob: -7.1208906173706055
    9. '360' → logprob: -7.2458906173706055
    10. ' (' → logprob: -7.2458906173706055

Token 2973: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.38688334822654724
    2. ' /' → logprob: -1.1368833780288696
    3. '//' → logprob: -13.261883735656738
    4. ')' → logprob: -13.261883735656738
    5. ' //' → logprob: -14.261883735656738
    6. '/k' → logprob: -14.386883735656738
    7. ' ' → logprob: -14.511883735656738
    8. '```' → logprob: -14.511883735656738
    9. '#' → logprob: -14.636883735656738
    10. '/(' → logprob: -14.761883735656738

Token 2974: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.001178439473733306
    2. ' ' → logprob: -6.75117826461792
    3. '-' → logprob: -11.876178741455078
    4. '   ' → logprob: -14.501178741455078
    5. ' -' → logprob: -15.001178741455078
    6. '  ' → logprob: -15.751178741455078
    7. '1' → logprob: -16.751178741455078
    8. ' ' → logprob: -16.751178741455078
    9. '(' → logprob: -17.001178741455078
    10. '36' → logprob: -17.751178741455078

Token 2975: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.125041961669922
    3. '-' → logprob: -13.125041961669922
    4. '180' → logprob: -16.125041961669922
    5. ' -' → logprob: -16.375041961669922
    6. '   ' → logprob: -17.500041961669922
    7. '1' → logprob: -18.875041961669922
    8. '36' → logprob: -19.000041961669922
    9. '60' → logprob: -19.000041961669922
    10. 'abs' → logprob: -19.000041961669922

Token 2976: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7297727465629578
    2. '+' → logprob: -1.1047728061676025
    3. ' -' → logprob: -2.2297728061676025
    4. ' +' → logprob: -2.6047728061676025
    5. ')' → logprob: -5.604772567749023
    6. '           ' → logprob: -7.354772567749023
    7. '       ' → logprob: -8.479772567749023
    8. '```' → logprob: -8.604772567749023
    9. '<|end|>' → logprob: -8.729772567749023
    10. '+-' → logprob: -9.479772567749023

Token 2977: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.47478678822517395
    2. '+' → logprob: -1.9747867584228516
    3. '           ' → logprob: -1.9747867584228516
    4. '
' → logprob: -3.4747867584228516
    5. '       ' → logprob: -4.474786758422852
    6. '``' → logprob: -4.849786758422852
    7. '-' → logprob: -5.349786758422852
    8. ' +' → logprob: -5.349786758422852
    9. '            
' → logprob: -5.474786758422852
    10. '\' → logprob: -5.599786758422852

Token 2978: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7148725390434265
    2. ' k' → logprob: -0.8398725390434265
    3. '+' → logprob: -3.9648725986480713
    4. '       ' → logprob: -4.089872360229492
    5. '```' → logprob: -4.214872360229492
    6. 'k' → logprob: -4.589872360229492
    7. '               ' → logprob: -6.089872360229492
    8. '   ' → logprob: -6.339872360229492
    9. ' if' → logprob: -6.464872360229492
    10. '                   ' → logprob: -6.589872360229492

Token 2979: ' t' (ID: 260)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.40004459023475647
    2. 'k' → logprob: -1.150044560432434
    3. ' t' → logprob: -4.6500444412231445
    4. 't' → logprob: -6.6500444412231445
    5. ' (' → logprob: -7.1500444412231445
    6. 'True' → logprob: -7.5250444412231445
    7. '(k' → logprob: -8.275044441223145
    8. ' True' → logprob: -8.775044441223145
    9. ' not' → logprob: -8.900044441223145
    10. ' abs' → logprob: -9.400044441223145

Token 2980: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005762664368376136
    2. 't' → logprob: -8.62557601928711
    3. '_start' → logprob: -9.50057601928711
    4. ' ' → logprob: -9.75057601928711
    5. '   ' → logprob: -9.87557601928711
    6. '    ' → logprob: -10.12557601928711
    7. ' ' → logprob: -10.25057601928711
    8. ' t' → logprob: -10.50057601928711
    9. '_' → logprob: -11.00057601928711
    10. '	' → logprob: -11.62557601928711

Token 2981: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0017513417406007648
    2. '*' → logprob: -6.37675142288208
    3. ' <' → logprob: -10.126750946044922
    4. ' ' → logprob: -12.501750946044922
    5. '*num' → logprob: -12.876750946044922
    6. '<' → logprob: -13.376750946044922
    7. '   ' → logprob: -15.376750946044922
    8. ' ' → logprob: -15.501750946044922
    9. '<num' → logprob: -15.501750946044922
    10. '```' → logprob: -16.251750946044922

Token 2982: ' den' (ID: 1786)
  Prédit: ' den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' den' → logprob: -0.16023315489292145
    2. 'den' → logprob: -1.9102331399917603
    3. '_den' → logprob: -12.660233497619629
    4. ' abs' → logprob: -13.035233497619629
    5. ' ' → logprob: -13.910233497619629
    6. '-den' → logprob: -14.285233497619629
    7. ' dens' → logprob: -14.410233497619629
    8. 'abs' → logprob: -14.660233497619629
    9. '.den' → logprob: -14.660233497619629
    10. '360' → logprob: -15.785233497619629

Token 2983: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.16039158403873444
    2. '/' → logprob: -1.9103915691375732
    3. ' <' → logprob: -9.660391807556152
    4. '<' → logprob: -10.160391807556152
    5. '           ' → logprob: -11.410391807556152
    6. ' >' → logprob: -11.785391807556152
    7. '   ' → logprob: -11.785391807556152
    8. '>' → logprob: -12.035391807556152
    9. '       ' → logprob: -12.285391807556152
    10. '%' → logprob: -12.285391807556152

Token 2984: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.875001907348633
    4. '1' → logprob: -17.875001907348633
    5. '-' → logprob: -18.250001907348633
    6. '```' → logprob: -18.500001907348633
    7. '{' → logprob: -18.750001907348633
    8. '  ' → logprob: -19.125001907348633
    9. '(' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.250001907348633

Token 2985: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '180' → logprob: -17.875
    3. ' ' → logprob: -17.875
    4. '36' → logprob: -18.625
    5. '-' → logprob: -19.25
    6. '1' → logprob: -19.375
    7. '2' → logprob: -20.0
    8. '```' → logprob: -20.25
    9. '   ' → logprob: -20.875
    10. '3' → logprob: -20.875

Token 2986: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32497790455818176
    2. '<' → logprob: -1.4499778747558594
    3. '           ' → logprob: -4.324977874755859
    4. '<int' → logprob: -4.699977874755859
    5. ' >' → logprob: -4.699977874755859
    6. '               ' → logprob: -5.324977874755859
    7. '>' → logprob: -5.699977874755859
    8. '+' → logprob: -7.449977874755859
    9. '<float' → logprob: -7.824977874755859
    10. '-' → logprob: -7.949977874755859

Token 2987: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.12693557143211365
    2. 'k' → logprob: -2.1269354820251465
    3. '(k' → logprob: -12.376935958862305
    4. ' (' → logprob: -13.501935958862305
    5. '           ' → logprob: -14.126935958862305
    6. '	k' → logprob: -14.626935958862305
    7. '{k' → logprob: -15.501935958862305
    8. '               ' → logprob: -15.876935958862305
    9. ' ' → logprob: -16.126935958862305
    10. '            ' → logprob: -17.376935958862305

Token 2988: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.2987729102605954e-05
    2. 'start' → logprob: -10.125042915344238
    3. 'Start' → logprob: -13.250042915344238
    4. 't' → logprob: -14.000042915344238
    5. '_START' → logprob: -15.875042915344238
    6. 'k' → logprob: -17.250043869018555
    7. 'art' → logprob: -18.125043869018555
    8. ' start' → logprob: -18.500043869018555
    9. '_end' → logprob: -18.625043869018555
    10. '_Start' → logprob: -18.875043869018555

Token 2989: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.71933513879776
    2. '           ' → logprob: -1.7193350791931152
    3. ':' → logprob: -2.2193350791931152
    4. ' +' → logprob: -2.3443350791931152
    5. '+=' → logprob: -3.2193350791931152
    6. '-' → logprob: -3.4693350791931152
    7. ' +=' → logprob: -3.5943350791931152
    8. ':
' → logprob: -3.8443350791931152
    9. ' -' → logprob: -5.469335079193115
    10. '               ' → logprob: -6.219335079193115

Token 2990: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017839444801211357
    2. ' k' → logprob: -5.017839431762695
    3. '           ' → logprob: -5.142839431762695
    4. '+' → logprob: -5.767839431762695
    5. 'k' → logprob: -6.767839431762695
    6. '```' → logprob: -7.392839431762695
    7. ' +' → logprob: -9.267839431762695
    8. '++' → logprob: -9.517839431762695
    9. '                   ' → logprob: -10.392839431762695
    10. '``' → logprob: -10.892839431762695

Token 2991: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.03835059702396393
    2. 'k' (adapté à ' k') → logprob: -3.5383505821228027
    3. '               ' → logprob: -4.788350582122803
    4. '           ' → logprob: -8.663351058959961
    5. '                   ' → logprob: -10.413351058959961
    6. '                ' → logprob: -11.288351058959961
    7. '   ' → logprob: -12.663351058959961
    8. '	k' → logprob: -12.663351058959961
    9. '            ' → logprob: -12.788351058959961
    10. '              ' → logprob: -12.913351058959961

Token 2992: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.5006725788116455
    2. '+=' → logprob: -1.5006725788116455
    3. ' +=' → logprob: -2.1256725788116455
    4. ' k' → logprob: -3.5006725788116455
    5. 'k' → logprob: -4.750672340393066
    6. 'Start' → logprob: -5.875672340393066
    7. '          ' → logprob: -5.875672340393066
    8. '           ' → logprob: -6.125672340393066
    9. '+' → logprob: -6.250672340393066
    10. '=' → logprob: -7.125672340393066

Token 2993: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.43293389678001404
    2. ' +=' → logprob: -1.0579339265823364
    3. '           ' → logprob: -5.557933807373047
    4. '               ' → logprob: -8.432933807373047
    5. '=' → logprob: -9.432933807373047
    6. '                   ' → logprob: -11.307933807373047
    7. ' =' → logprob: -11.432933807373047
    8. 'k' → logprob: -11.807933807373047
    9. '          ' → logprob: -11.807933807373047
    10. '       ' → logprob: -11.932933807373047

Token 2994: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '
' → logprob: -17.500045776367188
    4. '0' → logprob: -17.625045776367188
    5. '   ' → logprob: -18.375045776367188
    6. '2' → logprob: -19.375045776367188
    7. '```' → logprob: -19.375045776367188
    8. ' ' → logprob: -21.625045776367188
    9. '       ' → logprob: -22.000045776367188
    10. '+' → logprob: -22.000045776367188

Token 2995: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -17.125001907348633
    4. '```' → logprob: -19.250001907348633
    5. '   ' → logprob: -20.000001907348633
    6. '
' → logprob: -20.375001907348633
    7. '2' → logprob: -20.750001907348633
    8. '-' → logprob: -21.500001907348633
    9. '3' → logprob: -22.187501907348633
    10. '<|end|>' → logprob: -22.812501907348633

Token 2996: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0083059286698699
    2. '   ' → logprob: -5.25830602645874
    3. '
' → logprob: -6.25830602645874
    4. '```' → logprob: -7.88330602645874
    5. '           ' → logprob: -8.383305549621582
    6. '<|end|>' → logprob: -9.008305549621582
    7. '\n' → logprob: -9.633305549621582
    8. ' for' → logprob: -9.758305549621582
    9. '        
' → logprob: -10.133305549621582
    10. '\' → logprob: -10.133305549621582

Token 2997: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3219374716281891
    2. ' for' → logprob: -2.0719375610351562
    3. '```' → logprob: -2.3219375610351562
    4. 'for' → logprob: -3.4469375610351562
    5. '       ' → logprob: -4.196937561035156
    6. '``' → logprob: -6.196937561035156
    7. '
' → logprob: -6.571937561035156
    8. '    
' → logprob: -7.821937561035156
    9. '	for' → logprob: -9.446937561035156
    10. '\' → logprob: -9.571937561035156

Token 2998: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4079363942146301
    2. 'for' → logprob: -1.6579363346099854
    3. '   ' → logprob: -2.2829363346099854
    4. ' for' → logprob: -3.4079363346099854
    5. '
' → logprob: -5.1579365730285645
    6. 'k' → logprob: -5.9079365730285645
    7. '```' → logprob: -7.4079365730285645
    8. ' k' → logprob: -8.657936096191406
    9. '        
' → logprob: -10.282936096191406
    10. '           ' → logprob: -10.657936096191406

Token 2999: ' On' (ID: 2160)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2647955119609833
    2. 'for' → logprob: -1.5147955417633057
    3. '       ' → logprob: -4.639795303344727
    4. ' k' → logprob: -6.639795303344727
    5. ' for' → logprob: -6.764795303344727
    6. '   ' → logprob: -7.514795303344727
    7. '```' → logprob: -9.514795303344727
    8. '
' → logprob: -10.514795303344727
    9. '``' → logprob: -11.889795303344727
    10. 'max' → logprob: -12.389795303344727

Token 3000: ' teste' (ID: 62670)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6709547638893127
    2. 'range' → logprob: -1.420954704284668
    3. ' for' → logprob: -2.420954704284668
    4. 'k' → logprob: -2.795954704284668
    5. '_range' → logprob: -3.545954704284668
    6. ' range' → logprob: -3.545954704284668
    7. '       ' → logprob: -3.920954704284668
    8. ' k' → logprob: -4.795954704284668
    9. ' =' → logprob: -6.170954704284668
    10. 'continue' → logprob: -6.545954704284668

Token 3001: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2740139663219452
    2. ' k' → logprob: -1.5240139961242676
    3. ' for' → logprob: -4.274013996124268
    4. 'for' → logprob: -4.899013996124268
    5. '   ' → logprob: -8.02401351928711
    6. '       ' → logprob: -9.64901351928711
    7. '```' → logprob: -10.52401351928711
    8. ' range' → logprob: -11.27401351928711
    9. 'range' → logprob: -11.39901351928711
    10. 'from' → logprob: -13.14901351928711

Token 3002: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7824065685272217
    2. 'for' → logprob: -1.2824065685272217
    3. ' for' → logprob: -1.4074065685272217
    4. '       ' → logprob: -4.657406806945801
    5. 'in' → logprob: -4.907406806945801
    6. 'from' → logprob: -6.782406806945801
    7. '   ' → logprob: -6.907406806945801
    8. '=' → logprob: -8.0324068069458
    9. ' range' → logprob: -8.0324068069458
    10. 'range' → logprob: -8.0324068069458

Token 3003: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008871606551110744
    2. 'range' → logprob: -7.125887393951416
    3. 'max' → logprob: -9.875886917114258
    4. ' k' → logprob: -10.500886917114258
    5. ' range' → logprob: -13.500886917114258
    6. '(k' → logprob: -13.750886917114258
    7. '   ' → logprob: -14.875886917114258
    8. ' max' → logprob: -15.500886917114258
    9. '{k' → logprob: -15.500886917114258
    10. '[k' → logprob: -15.625886917114258

Token 3004: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.002121353754773736
    2. 'start' → logprob: -6.252121448516846
    3. '=' → logprob: -9.502120971679688
    4. '=k' → logprob: -10.377120971679688
    5. 'k' → logprob: -10.502120971679688
    6. 'range' → logprob: -11.252120971679688
    7. 'Start' → logprob: -11.377120971679688
    8. '=_' → logprob: -12.002120971679688
    9. '=start' → logprob: -12.252120971679688
    10. '```' → logprob: -12.377120971679688

Token 3005: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8971914649009705
    2. ' in' → logprob: -1.5221915245056152
    3. '       ' → logprob: -1.8971915245056152
    4. 'for' → logprob: -2.5221915245056152
    5. 'in' → logprob: -2.6471915245056152
    6. ' for' → logprob: -2.8971915245056152
    7. '   ' → logprob: -5.772191524505615
    8. '=' → logprob: -5.772191524505615
    9. '-' → logprob: -6.147191524505615
    10. ' -' → logprob: -6.522191524505615

Token 3006: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010278578847646713
    2. 'max' → logprob: -4.885278701782227
    3. ' k' → logprob: -6.135278701782227
    4. 'int' → logprob: -8.260278701782227
    5. ' max' → logprob: -8.510278701782227
    6. '2' → logprob: -10.760278701782227
    7. '   ' → logprob: -11.510278701782227
    8. ' ' → logprob: -12.760278701782227
    9. ' int' → logprob: -13.010278701782227
    10. '(k' → logprob: -13.135278701782227

Token 3007: '_start' (ID: 10949)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2834782004356384
    2. '_start' → logprob: -1.4084782600402832
    3. ' k' → logprob: -6.408478260040283
    4. 'max' → logprob: -8.658477783203125
    5. '_k' → logprob: -8.783477783203125
    6. 'int' → logprob: -9.158477783203125
    7. '   ' → logprob: -9.533477783203125
    8. 'start' → logprob: -10.033477783203125
    9. '       ' → logprob: -10.658477783203125
    10. '_max' → logprob: -11.033477783203125

Token 3008: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16597792506217957
    2. ' +' → logprob: -1.915977954864502
    3. '+k' → logprob: -5.165977954864502
    4. '   ' → logprob: -11.915977478027344
    5. '+
' → logprob: -12.290977478027344
    6. '+++' → logprob: -13.165977478027344
    7. '+=' → logprob: -13.415977478027344
    8. '++' → logprob: -13.665977478027344
    9. 'import' → logprob: -13.665977478027344
    10. '```' → logprob: -13.790977478027344

Token 3009: 'max' (ID: 3228)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.09313829243183136
    2. '200' → logprob: -2.8431382179260254
    3. '20' → logprob: -4.843138217926025
    4. 'int' → logprob: -5.093138217926025
    5. '500' → logprob: -5.093138217926025
    6. '10' → logprob: -5.218138217926025
    7. '50' → logprob: -6.468138217926025
    8. '999' → logprob: -7.093138217926025
    9. '2' → logprob: -7.218138217926025
    10. '300' → logprob: -7.968138217926025

Token 3010: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00023643692838959396
    2. '100' → logprob: -8.625236511230469
    3. '400' → logprob: -11.500236511230469
    4. '```' → logprob: -11.625236511230469
    5. '=' → logprob: -12.000236511230469
    6. '500' → logprob: -12.375236511230469
    7. '10' → logprob: -12.500236511230469
    8. '+' → logprob: -12.750236511230469
    9. '200' → logprob: -13.000236511230469
    10. '20' → logprob: -13.125236511230469

Token 3011: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8543413877487183
    2. '   ' → logprob: -1.3543413877487183
    3. ':' → logprob: -1.8543413877487183
    4. 'for' → logprob: -2.604341506958008
    5. '	for' → logprob: -2.979341506958008
    6. '       ' → logprob: -4.729341506958008
    7. '+' → logprob: -5.229341506958008
    8. '```' → logprob: -5.479341506958008
    9. ' in' → logprob: -5.854341506958008
    10. ':
' → logprob: -6.354341506958008

Token 3012: 'en' (ID: 262)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.17148572206497192
    2. 'max' → logprob: -1.9214856624603271
    3. ' k' → logprob: -5.421485900878906
    4. ' max' → logprob: -5.421485900878906
    5. '           ' → logprob: -6.671485900878906
    6. '       ' → logprob: -7.171485900878906
    7. '+' → logprob: -9.171485900878906
    8. '   ' → logprob: -9.796485900878906
    9. '               ' → logprob: -10.171485900878906
    10. ')' → logprob: -10.296485900878906

Token 3013: ' faisant' (ID: 67003)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08614902943372726
    2. '1' → logprob: -3.336148977279663
    3. ' range' → logprob: -3.711148977279663
    4. 'max' → logprob: -3.961148977279663
    5. '+' → logprob: -5.961149215698242
    6. ' max' → logprob: -7.711149215698242
    7. ' ' → logprob: -9.211149215698242
    8. '100' → logprob: -9.586149215698242
    9. ' +' → logprob: -9.711149215698242
    10. '   ' → logprob: -10.086149215698242

Token 3014: ' attention' (ID: 8684)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04871749505400658
    2. ' range' → logprob: -3.048717498779297
    3. '   ' → logprob: -9.923717498779297
    4. 'max' → logprob: -10.173717498779297
    5. '1' → logprob: -11.423717498779297
    6. 'k' → logprob: -12.048717498779297
    7. '
' → logprob: -12.173717498779297
    8. '+' → logprob: -12.173717498779297
    9. ' ' → logprob: -12.423717498779297
    10. '```' → logprob: -13.048717498779297

Token 3015: ' aux' (ID: 5850)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8888193368911743
    2. ' à' → logprob: -1.0138193368911743
    3. '       ' → logprob: -2.0138192176818848
    4. '```' → logprob: -3.2638192176818848
    5. ',' → logprob: -3.6388192176818848
    6. '=' → logprob: -5.138819217681885
    7. '           ' → logprob: -5.263819217681885
    8. ' aux' → logprob: -5.263819217681885
    9. ' au' → logprob: -6.388819217681885
    10. 'au' → logprob: -6.638819217681885

Token 3016: ' signes' (ID: 133923)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.54833984375
    2. ' range' → logprob: -2.17333984375
    3. 'sign' → logprob: -2.29833984375
    4. 's' → logprob: -2.42333984375
    5. '1' → logprob: -2.67333984375
    6. '0' → logprob: -2.92333984375
    7. 'k' → logprob: -3.29833984375
    8. 'spacing' → logprob: -3.42333984375
    9. ' indentation' → logprob: -3.54833984375
    10. 'indent' → logprob: -3.67333984375

Token 3017: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3179945945739746
    2. '+' → logprob: -1.5679945945739746
    3. '       ' → logprob: -1.5679945945739746
    4. ':
' → logprob: -2.0679945945739746
    5. '```' → logprob: -2.6929945945739746
    6. '):
' → logprob: -2.9429945945739746
    7. ')' → logprob: -3.6929945945739746
    8. ',' → logprob: -4.192994594573975
    9. '):' → logprob: -5.317994594573975
    10. '           ' → logprob: -5.567994594573975

Token 3018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01751747913658619
    2. '   ' → logprob: -4.267517566680908
    3. ' for' → logprob: -5.767517566680908
    4. '```' → logprob: -8.89251708984375
    5. 'for' → logprob: -10.76751708984375
    6. '           ' → logprob: -11.14251708984375
    7. '<|end|>' → logprob: -11.14251708984375
    8. ',' → logprob: -11.51751708984375
    9. '``' → logprob: -12.39251708984375
    10. '<|end|>' → logprob: -12.64251708984375

Token 3019: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.273281991481781
    2. ' for' → logprob: -1.6482820510864258
    3. 'for' → logprob: -3.398282051086426
    4. '```' → logprob: -4.523282051086426
    5. '   ' → logprob: -6.273282051086426
    6. '``' → logprob: -8.273282051086426
    7. '           ' → logprob: -8.898282051086426
    8. ' k' → logprob: -10.148282051086426
    9. 'range' → logprob: -10.273282051086426
    10. '	for' → logprob: -10.398282051086426

Token 3020: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13336840271949768
    2. 'for' → logprob: -2.633368492126465
    3. ' for' → logprob: -3.008368492126465
    4. '   ' → logprob: -5.883368492126465
    5. '```' → logprob: -7.258368492126465
    6. '           ' → logprob: -8.883368492126465
    7. '``' → logprob: -11.383368492126465
    8. '               ' → logprob: -12.883368492126465
    9. 'k' → logprob: -13.383368492126465
    10. 'range' → logprob: -13.758368492126465

Token 3021: ' limite' (ID: 48939)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061279941350221634
    2. ' for' → logprob: -2.9362800121307373
    3. 'range' → logprob: -5.686279773712158
    4. ' range' → logprob: -6.936279773712158
    5. 'k' → logprob: -7.436279773712158
    6. '       ' → logprob: -7.811279773712158
    7. '   ' → logprob: -7.936279773712158
    8. '```' → logprob: -8.561280250549316
    9. '
' → logprob: -8.811280250549316
    10. ' k' → logprob: -9.311280250549316

Token 3022: ' le' (ID: 505)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.666621208190918
    2. 'k' → logprob: -0.791621208190918
    3. ' for' → logprob: -3.916621208190918
    4. ' range' → logprob: -5.791621208190918
    5. 'for' → logprob: -5.916621208190918
    6. 'range' → logprob: -6.166621208190918
    7. '   ' → logprob: -6.541621208190918
    8. ' à' → logprob: -6.541621208190918
    9. '```' → logprob: -7.416621208190918
    10. ' to' → logprob: -7.541621208190918

Token 3023: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.248613178730011
    2. 'range' → logprob: -1.8736131191253662
    3. ' range' → logprob: -3.748613119125366
    4. ' k' → logprob: -3.748613119125366
    5. 'for' → logprob: -4.248613357543945
    6. ' for' → logprob: -5.748613357543945
    7. 'pas' → logprob: -6.873613357543945
    8. 'pass' → logprob: -8.873613357543945
    9. '   ' → logprob: -9.123613357543945
    10. 'offset' → logprob: -9.498613357543945

Token 3024: ' de' (ID: 334)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.1044780015945435
    2. '_range' → logprob: -1.7294780015945435
    3. '_' → logprob: -1.9794780015945435
    4. 'for' → logprob: -2.854477882385254
    5. ' of' → logprob: -3.104477882385254
    6. ' for' → logprob: -3.479477882385254
    7. '```' → logprob: -3.604477882385254
    8. '_of' → logprob: -3.729477882385254
    9. '_k' → logprob: -3.854477882385254
    10. '=' → logprob: -3.854477882385254

Token 3025: ' candidats' (ID: 100182)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02833210676908493
    2. ' k' → logprob: -4.028332233428955
    3. 'iterations' → logprob: -5.153332233428955
    4. 'for' → logprob: -6.028332233428955
    5. ' iterations' → logprob: -7.528332233428955
    6. '```' → logprob: -7.903332233428955
    7. ' for' → logprob: -8.028331756591797
    8. 'steps' → logprob: -8.653331756591797
    9. 'lines' → logprob: -9.403331756591797
    10. 'i' → logprob: -9.528331756591797

Token 3026: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7015063762664795
    2. ' to' → logprob: -1.4515063762664795
    3. ' =' → logprob: -2.3265063762664795
    4. '```' → logprob: -2.8265063762664795
    5. 'for' → logprob: -3.3265063762664795
    6. '   ' → logprob: -3.4515063762664795
    7. ' k' → logprob: -4.076506614685059
    8. '=' → logprob: -4.701506614685059
    9. ' à' → logprob: -4.826506614685059
    10. ' in' → logprob: -5.951506614685059

Token 3027: ' la' (ID: 557)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.12927982211112976
    2. 'k' → logprob: -2.379279851913452
    3. '_' → logprob: -3.754279851913452
    4. ' _' → logprob: -5.379279613494873
    5. '_k' → logprob: -8.504280090332031
    6. ' range' → logprob: -9.379280090332031
    7. ' ' → logprob: -10.129280090332031
    8. ' i' → logprob: -10.129280090332031
    9. 'i' → logprob: -10.379280090332031
    10. 'None' → logprob: -10.504280090332031

Token 3028: ' performance' (ID: 6198)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.5114953517913818
    2. 'k' → logprob: -1.1364953517913818
    3. ' k' → logprob: -3.386495351791382
    4. 'range' → logprob: -3.511495351791382
    5. 'raison' → logprob: -5.636495590209961
    6. 'for' → logprob: -6.136495590209961
    7. ' range' → logprob: -6.636495590209961
    8. 'ré' → logprob: -6.761495590209961
    9. ' for' → logprob: -6.886495590209961
    10. 'pr' → logprob: -6.886495590209961

Token 3029: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19983641803264618
    2. ' for' → logprob: -1.9498363733291626
    3. 'for' → logprob: -3.324836492538452
    4. '```' → logprob: -6.449836254119873
    5. '   ' → logprob: -8.074836730957031
    6. '
' → logprob: -8.199836730957031
    7. ',' → logprob: -8.574836730957031
    8. ' k' → logprob: -8.699836730957031
    9. ' range' → logprob: -9.324836730957031
    10. ':' → logprob: -9.949836730957031

Token 3030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015002441592514515
    2. '```' → logprob: -5.015002250671387
    3. ' for' → logprob: -5.140002250671387
    4. 'for' → logprob: -6.390002250671387
    5. '           ' → logprob: -8.265002250671387
    6. '   ' → logprob: -8.390002250671387
    7. '``' → logprob: -8.640002250671387
    8. ',' → logprob: -11.140002250671387
    9. '               ' → logprob: -11.265002250671387
    10. ':' → logprob: -12.390002250671387

Token 3031: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3352184593677521
    2. ' for' → logprob: -1.8352184295654297
    3. 'for' → logprob: -2.0852184295654297
    4. '```' → logprob: -7.33521842956543
    5. '           ' → logprob: -9.46021842956543
    6. 'k' → logprob: -9.46021842956543
    7. ' k' → logprob: -9.71021842956543
    8. '``' → logprob: -10.08521842956543
    9. '   ' → logprob: -10.58521842956543
    10. 'range' → logprob: -11.96021842956543

Token 3032: '_check' (ID: 15847)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.2007883671903983e-05
    2. '_K' → logprob: -11.500021934509277
    3. '_k' → logprob: -12.500021934509277
    4. '```' → logprob: -12.625021934509277
    5. ' K' → logprob: -13.250021934509277
    6. 'k' → logprob: -13.750021934509277
    7. '_range' → logprob: -15.000021934509277
    8. '_candidates' → logprob: -15.125021934509277
    9. '   ' → logprob: -15.250021934509277
    10. '=' → logprob: -15.500021934509277

Token 3033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.449624627828598
    2. ' =' → logprob: -1.0746246576309204
    3. '_k' → logprob: -4.824624538421631
    4. '_count' → logprob: -4.949624538421631
    5. '   ' → logprob: -6.574624538421631
    6. '_range' → logprob: -6.699624538421631
    7. '_num' → logprob: -6.949624538421631
    8. 'k' → logprob: -7.449624538421631
    9. '```' → logprob: -7.699624538421631
    10. '_tokens' → logprob: -9.074625015258789

Token 3034: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.04802339896559715
    2. '500' → logprob: -3.5480234622955322
    3. '200' → logprob: -4.173023223876953
    4. '10' → logprob: -6.798023223876953
    5. '300' → logprob: -6.798023223876953
    6. '150' → logprob: -9.173023223876953
    7. 'int' → logprob: -9.423023223876953
    8. ' ' → logprob: -9.548023223876953
    9. 'max' → logprob: -9.798023223876953
    10. '400' → logprob: -10.298023223876953

Token 3035: '2' (ID: 17)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03367704898118973
    2. '500' → logprob: -3.908677101135254
    3. '200' → logprob: -4.533677101135254
    4. '10' → logprob: -6.658677101135254
    5. '300' → logprob: -7.658677101135254
    6. 'k' → logprob: -8.408677101135254
    7. 'int' → logprob: -9.283677101135254
    8. 'min' → logprob: -9.783677101135254
    9. '50' → logprob: -10.033677101135254
    10. '150' → logprob: -10.033677101135254

Token 3036: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5660209059715271
    2. '00' → logprob: -1.4410209655761719
    3. '000' → logprob: -1.6910209655761719
    4. '50' → logprob: -5.941020965576172
    5. '1' → logprob: -6.066020965576172
    6. '*' → logprob: -7.066020965576172
    7. '
' → logprob: -7.191020965576172
    8. ',' → logprob: -7.441020965576172
    9. ' *' → logprob: -7.566020965576172
    10. '5' → logprob: -7.691020965576172

Token 3037: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4459298849105835
    2. '10' → logprob: -1.8209298849105835
    3. 'max' → logprob: -2.570930004119873
    4. '100' → logprob: -2.945930004119873
    5. '360' → logprob: -2.945930004119873
    6. '60' → logprob: -4.820930004119873
    7. 'k' → logprob: -6.570930004119873
    8. '500' → logprob: -6.945930004119873
    9. '50' → logprob: -7.070930004119873
    10. ' ' → logprob: -7.320930004119873

Token 3038: '360' (ID: 9870)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.671612024307251
    2. ' *' → logprob: -1.796612024307251
    3. '*' → logprob: -2.046612024307251
    4. '   ' → logprob: -2.796612024307251
    5. '```' → logprob: -3.421612024307251
    6. '<|end|>' → logprob: -3.796612024307251
    7. ',' → logprob: -4.296611785888672
    8. '       ' → logprob: -4.546611785888672
    9. 'import' → logprob: -4.546611785888672
    10. '000' → logprob: -5.046611785888672

Token 3039: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026562567800283432
    2. '000' → logprob: -4.276562690734863
    3. '00' → logprob: -4.401562690734863
    4. '   ' → logprob: -9.901562690734863
    5. ' ' → logprob: -12.526562690734863
    6. '```' → logprob: -12.651562690734863
    7. '       ' → logprob: -12.776562690734863
    8. '600' → logprob: -13.776562690734863
    9. '  ' → logprob: -14.026562690734863
    10. '900' → logprob: -14.401562690734863

Token 3040: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7597733736038208
    2. '       ' → logprob: -1.0097733736038208
    3. '
' → logprob: -1.8847733736038208
    4. 'for' → logprob: -5.634773254394531
    5. ' for' → logprob: -5.759773254394531
    6. '+' → logprob: -5.884773254394531
    7. ' +' → logprob: -6.384773254394531
    8. ',' → logprob: -7.009773254394531
    9. ':' → logprob: -7.259773254394531
    10. ':
' → logprob: -7.634773254394531

Token 3041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05081183835864067
    2. '   ' → logprob: -3.300811767578125
    3. '
' → logprob: -4.675811767578125
    4. ' for' → logprob: -6.300811767578125
    5. '```' → logprob: -6.925811767578125
    6. ',' → logprob: -9.050811767578125
    7. '        
' → logprob: -9.425811767578125
    8. '           ' → logprob: -9.675811767578125
    9. '<|end|>' → logprob: -9.800811767578125
    10. 'for' → logprob: -9.925811767578125

Token 3042: ' limit' (ID: 5967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002900570398196578
    2. 'for' → logprob: -5.87790060043335
    3. ' for' → logprob: -9.752900123596191
    4. '   ' → logprob: -10.752900123596191
    5. '           ' → logprob: -11.627900123596191
    6. '
' → logprob: -12.252900123596191
    7. '```' → logprob: -13.252900123596191
    8. '               ' → logprob: -15.127900123596191
    9. '        
' → logprob: -15.377900123596191
    10. 'k' → logprob: -16.752901077270508

Token 3043: '_k' (ID: 11637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18342003226280212
    2. '=' → logprob: -1.8084200620651245
    3. '   ' → logprob: -6.558420181274414
    4. '_num' → logprob: -7.058420181274414
    5. 's' → logprob: -7.433420181274414
    6. '_' → logprob: -8.558420181274414
    7. '_start' → logprob: -8.683420181274414
    8. 'for' → logprob: -9.558420181274414
    9. ',' → logprob: -9.808420181274414
    10. '_range' → logprob: -9.808420181274414

Token 3044: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326936483383179
    2. '=' → logprob: -0.7576936483383179
    3. '   ' → logprob: -10.88269329071045
    4. ',' → logprob: -11.13269329071045
    5. 'for' → logprob: -11.13269329071045
    6. 's' → logprob: -11.38269329071045
    7. '_range' → logprob: -11.50769329071045
    8. 'range' → logprob: -12.13269329071045
    9. '```' → logprob: -12.50769329071045
    10. ' for' → logprob: -12.75769329071045

Token 3045: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015087933279573917
    2. ' k' → logprob: -6.501508712768555
    3. '   ' → logprob: -12.001508712768555
    4. '       ' → logprob: -15.251508712768555
    5. ' ' → logprob: -17.001508712768555
    6. '	k' → logprob: -17.126508712768555
    7. '{k' → logprob: -17.501508712768555
    8. 'min' → logprob: -17.501508712768555
    9. '    ' → logprob: -18.001508712768555
    10. '     ' → logprob: -18.126508712768555

Token 3046: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0004155377100687474
    2. 'start' → logprob: -7.875415325164795
    3. '_limit' → logprob: -12.000415802001953
    4. 'k' → logprob: -12.375415802001953
    5. '   ' → logprob: -12.625415802001953
    6. '_max' → logprob: -12.750415802001953
    7. 'Start' → logprob: -12.750415802001953
    8. '[start' → logprob: -13.125415802001953
    9. 'max' → logprob: -13.250415802001953
    10. '	start' → logprob: -13.375415802001953

Token 3047: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6364935636520386
    2. ' +' → logprob: -0.7614935636520386
    3. '
' → logprob: -6.761493682861328
    4. ',' → logprob: -7.011493682861328
    5. '       ' → logprob: -7.761493682861328
    6. ';' → logprob: -8.011493682861328
    7. '<|end|>' → logprob: -8.136493682861328
    8. '   ' → logprob: -8.636493682861328
    9. '=' → logprob: -9.011493682861328
    10. ' for' → logprob: -9.136493682861328

Token 3048: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00017791526624932885
    2. ' max' → logprob: -8.875178337097168
    3. 'int' → logprob: -10.750178337097168
    4. '2' → logprob: -11.750178337097168
    5. '200' → logprob: -12.625178337097168
    6. '100' → logprob: -12.750178337097168
    7. '   ' → logprob: -14.375178337097168
    8. '500' → logprob: -14.375178337097168
    9. '20' → logprob: -15.250178337097168
    10. ' ' → logprob: -15.250178337097168

Token 3049: '_check' (ID: 15847)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001967457792488858
    2. '_check' → logprob: -8.75019645690918
    3. 'Check' → logprob: -10.25019645690918
    4. 'check' → logprob: -12.87519645690918
    5. ' K' → logprob: -16.37519645690918
    6. 'CHECK' → logprob: -16.62519645690918
    7. '```' → logprob: -17.75019645690918
    8. '_CHECK' → logprob: -18.00019645690918
    9. '`' → logprob: -18.12519645690918
    10. 'К' → logprob: -18.25019645690918

Token 3050: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6617329716682434
    2. '   ' → logprob: -1.4117329120635986
    3. ' for' → logprob: -2.4117329120635986
    4. '+' → logprob: -2.7867329120635986
    5. ':' → logprob: -3.1617329120635986
    6. 'for' → logprob: -4.411733150482178
    7. ' +' → logprob: -4.661733150482178
    8. '
' → logprob: -4.911733150482178
    9. '```' → logprob: -5.286733150482178
    10. ':
' → logprob: -5.661733150482178

Token 3051: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05502062290906906
    2. '   ' → logprob: -2.930020570755005
    3. ' for' → logprob: -9.430020332336426
    4. 'for' → logprob: -10.055020332336426
    5. '```' → logprob: -11.930020332336426
    6. '
' → logprob: -12.430020332336426
    7. '           ' → logprob: -12.555020332336426
    8. ')' → logprob: -14.930020332336426
    9. ',' → logprob: -15.305020332336426
    10. '    
' → logprob: -16.055021286010742

Token 3052: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1620662361383438
    2. 'for' (adapté à ' for') → logprob: -2.4120662212371826
    3. ' for' → logprob: -3.4120662212371826
    4. '           ' → logprob: -3.7870662212371826
    5. '```' → logprob: -5.537066459655762
    6. '   ' → logprob: -8.037066459655762
    7. '``' → logprob: -10.037066459655762
    8. '               ' → logprob: -10.162066459655762
    9. '                   ' → logprob: -13.287066459655762
    10. '	for' → logprob: -13.412066459655762

Token 3053: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804252669215202
    2. ' k' → logprob: -3.2880425453186035
    3. '   ' → logprob: -14.288042068481445
    4. '           ' → logprob: -15.538042068481445
    5. '       ' → logprob: -16.163042068481445
    6. '_k' → logprob: -16.538042068481445
    7. '	k' → logprob: -16.913042068481445
    8. '    ' → logprob: -17.413042068481445
    9. ' ' → logprob: -17.913042068481445
    10. '```' → logprob: -18.163042068481445

Token 3054: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011714138090610504
    2. 'in' → logprob: -6.751171588897705
    3. 'k' → logprob: -14.626171112060547
    4. '	in' → logprob: -15.126171112060547
    5. ' ' → logprob: -16.126171112060547
    6. '_in' → logprob: -16.251171112060547
    7. '=' → logprob: -16.751171112060547
    8. 'In' → logprob: -16.876171112060547
    9. ' ' → logprob: -17.126171112060547
    10. 'import' → logprob: -17.126171112060547

Token 3055: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015053401002660394
    2. ' range' → logprob: -6.501505374908447
    3. 'k' → logprob: -12.751504898071289
    4. '(range' → logprob: -17.87650489807129
    5. '	range' → logprob: -17.87650489807129
    6. ' k' → logprob: -18.00150489807129
    7. 'list' → logprob: -20.62650489807129
    8. '   ' → logprob: -21.50150489807129
    9. ' ' → logprob: -21.75150489807129
    10. 'rang' → logprob: -22.00150489807129

Token 3056: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00012976066500414163
    2. '(k' → logprob: -9.000129699707031
    3. ' k' → logprob: -12.000129699707031
    4. '{k' → logprob: -15.750129699707031
    5. '	k' → logprob: -16.87512969970703
    6. ',k' → logprob: -17.50012969970703
    7. '_k' → logprob: -18.62512969970703
    8. '           ' → logprob: -18.87512969970703
    9. '       ' → logprob: -19.00012969970703
    10. '   ' → logprob: -19.25012969970703

Token 3057: '_start' (ID: 10949)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02400202676653862
    2. '_k' → logprob: -4.3990020751953125
    3. '_start' → logprob: -4.7740020751953125
    4. ',k' → logprob: -6.1490020751953125
    5. ',' → logprob: -7.8990020751953125
    6. ' k' → logprob: -8.399002075195312
    7. '(k' → logprob: -9.024002075195312
    8. '[k' → logprob: -10.149002075195312
    9. 'start' → logprob: -10.899002075195312
    10. '```' → logprob: -10.899002075195312

Token 3058: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014191943046171218
    2. ',k' → logprob: -9.250142097473145
    3. ' ,' → logprob: -10.125142097473145
    4. '           ' → logprob: -13.250142097473145
    5. '       ' → logprob: -13.375142097473145
    6. ',
' → logprob: -13.875142097473145
    7. '   ' → logprob: -15.250142097473145
    8. ',len' → logprob: -15.375142097473145
    9. '+' → logprob: -16.125141143798828
    10. ';' → logprob: -16.625141143798828

Token 3059: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0009114635176956654
    2. ' limit' → logprob: -7.000911235809326
    3. 'k' → logprob: -18.250911712646484
    4. '(limit' → logprob: -19.125911712646484
    5. '           ' → logprob: -21.000911712646484
    6. '_limit' → logprob: -21.875911712646484
    7. '.limit' → logprob: -22.250911712646484
    8. '```' → logprob: -22.625911712646484
    9. '   ' → logprob: -22.750911712646484
    10. '               ' → logprob: -23.500911712646484

Token 3060: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -3.128163257315464e-07
    2. '       ' → logprob: -16.5
    3. '           ' → logprob: -17.375
    4. ')' → logprob: -17.5
    5. '```' → logprob: -18.125
    6. '               ' → logprob: -18.25
    7. '+' → logprob: -18.5
    8. '_check' → logprob: -18.5
    9. ',' → logprob: -18.625
    10. '   ' → logprob: -18.75

Token 3061: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07070334255695343
    2. '):' → logprob: -3.1957032680511475
    3. ',' → logprob: -4.570703506469727
    4. '):
' → logprob: -4.820703506469727
    5. ':
' → logprob: -6.195703506469727
    6. '<|end|>' → logprob: -6.570703506469727
    7. '       ' → logprob: -6.695703506469727
    8. '<|end|>' → logprob: -6.820703506469727
    9. '{' → logprob: -7.195703506469727
    10. '+' → logprob: -7.445703506469727

Token 3062: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027015688829123974
    2. '```' → logprob: -9.000269889831543
    3. '       ' → logprob: -9.125269889831543
    4. '               ' → logprob: -11.500269889831543
    5. '	       ' → logprob: -11.875269889831543
    6. '   ' → logprob: -13.000269889831543
    7. '``' → logprob: -13.125269889831543
    8. ':' → logprob: -13.375269889831543
    9. '         ' → logprob: -13.625269889831543
    10. '	   ' → logprob: -13.625269889831543

Token 3063: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10204128921031952
    2. 't' (adapté à ' t') → logprob: -2.477041244506836
    3. '               ' → logprob: -4.477041244506836
    4. ' t' → logprob: -6.727041244506836
    5. '```' → logprob: -8.602041244506836
    6. '        ' → logprob: -9.477041244506836
    7. 'if' → logprob: -9.727041244506836
    8. ' if' → logprob: -10.477041244506836
    9. ' ' → logprob: -10.477041244506836
    10. '`t' → logprob: -11.102041244506836

Token 3064: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24356426298618317
    2. '_val' → logprob: -2.3685643672943115
    3. '_num' → logprob: -2.6185643672943115
    4. '=' → logprob: -3.7435643672943115
    5. '_candidate' → logprob: -4.993564128875732
    6. '_n' → logprob: -5.243564128875732
    7. '           ' → logprob: -5.743564128875732
    8. '_' → logprob: -5.743564128875732
    9. '_t' → logprob: -6.743564128875732
    10. 't' → logprob: -6.868564128875732

Token 3065: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0032452051527798176
    2. '(k' → logprob: -6.3782453536987305
    3. ' k' → logprob: -6.5032453536987305
    4. ' (' → logprob: -11.12824535369873
    5. 'sign' → logprob: -11.12824535369873
    6. '(sign' → logprob: -11.87824535369873
    7. '(' → logprob: -12.75324535369873
    8. '   ' → logprob: -12.75324535369873
    9. ' ' → logprob: -15.25324535369873
    10. '           ' → logprob: -15.37824535369873

Token 3066: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7009756565093994
    2. ' *' → logprob: -0.7009756565093994
    3. '<|end|>' → logprob: -4.95097541809082
    4. '<|end|>' → logprob: -7.57597541809082
    5. '```' → logprob: -10.07597541809082
    6. '*(' → logprob: -10.20097541809082
    7. '`' → logprob: -10.70097541809082
    8. '*[' → logprob: -11.07597541809082
    9. '#' → logprob: -11.20097541809082
    10. '***' → logprob: -11.82597541809082

Token 3067: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.6327186226844788
    2. '(' → logprob: -0.7577186226844788
    3. ' (' → logprob: -9.132719039916992
    4. ' ' → logprob: -12.132719039916992
    5. '{' → logprob: -13.632719039916992
    6. '```' → logprob: -13.882719039916992
    7. '36' → logprob: -14.257719039916992
    8. '(abs' → logprob: -14.507719039916992
    9. 'abs' → logprob: -14.757719039916992
    10. '[' → logprob: -15.007719039916992

Token 3068: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.2014281451702118
    2. '(' → logprob: -1.7014281749725342
    3. ' (' → logprob: -11.326428413391113
    4. '{' → logprob: -13.826428413391113
    5. ' ' → logprob: -14.076428413391113
    6. '[' → logprob: -15.451428413391113
    7. '(
' → logprob: -15.951428413391113
    8. '```' → logprob: -16.326427459716797
    9. '((' → logprob: -16.451427459716797
    10. '180' → logprob: -16.451427459716797

Token 3069: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0789448693394661
    2. ' /' → logprob: -2.5789449214935303
    3. '/end' → logprob: -10.95394515991211
    4. '/
' → logprob: -11.20394515991211
    5. '/token' → logprob: -12.32894515991211
    6. '<|end|>' → logprob: -12.95394515991211
    7. '<|end|>' → logprob: -13.20394515991211
    8. '/d' → logprob: -13.45394515991211
    9. '...' → logprob: -13.45394515991211
    10. '/...' → logprob: -13.57894515991211

Token 3070: ' den' (ID: 1786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00026765360962599516
    2. 'den' → logprob: -8.25026798248291
    3. ' abs' → logprob: -12.12526798248291
    4. '(abs' → logprob: -13.87526798248291
    5. 'float' → logprob: -17.625267028808594
    6. '   ' → logprob: -19.500267028808594
    7. 'Abs' → logprob: -20.250267028808594
    8. ' den' → logprob: -20.375267028808594
    9. '.abs' → logprob: -20.625267028808594
    10. 'det' → logprob: -21.125267028808594

Token 3071: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016628718003630638
    2. '
' → logprob: -5.266628742218018
    3. ' if' → logprob: -5.266628742218018
    4. '<|end|>' → logprob: -5.766628742218018
    5. '            
' → logprob: -7.016628742218018
    6. 'if' → logprob: -7.641628742218018
    7. ' 
' → logprob: -7.766628742218018
    8. '<|end|>' → logprob: -8.14162826538086
    9. '  
' → logprob: -8.39162826538086
    10. ')' → logprob: -8.51662826538086

Token 3072: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003790760529227555
    2. '       ' → logprob: -8.000378608703613
    3. '	       ' → logprob: -11.125378608703613
    4. '<|end|>' → logprob: -11.375378608703613
    5. ' if' → logprob: -12.500378608703613
    6. '   ' → logprob: -12.625378608703613
    7. '	   ' → logprob: -12.875378608703613
    8. '               ' → logprob: -13.250378608703613
    9. '<|end|>' → logprob: -13.750378608703613
    10. 'if' → logprob: -14.250378608703613

Token 3073: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012715185061097145
    2. '       ' → logprob: -4.3877153396606445
    3. 'if' (adapté à ' if') → logprob: -9.012715339660645
    4. ' if' → logprob: -9.637715339660645
    5. '   ' → logprob: -12.262715339660645
    6. '               ' → logprob: -12.512715339660645
    7. '	       ' → logprob: -13.012715339660645
    8. '		' → logprob: -13.262715339660645
    9. '	   ' → logprob: -13.387715339660645
    10. '          ' → logprob: -14.262715339660645

Token 3074: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04378052055835724
    2. ' t' → logprob: -3.168780565261841
    3. 'check' → logprob: -7.668780326843262
    4. ' check' → logprob: -9.418780326843262
    5. '   ' → logprob: -9.918780326843262
    6. 'not' → logprob: -9.918780326843262
    7. 'frac' → logprob: -10.168780326843262
    8. ' not' → logprob: -10.293780326843262
    9. '    ' → logprob: -10.543780326843262
    10. 'abs' → logprob: -12.043780326843262

Token 3075: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6003019213676453
    2. ' >' → logprob: -1.35030198097229
    3. '>=' → logprob: -2.10030198097229
    4. ' >=' → logprob: -2.72530198097229
    5. ' <' → logprob: -6.600301742553711
    6. '<' → logprob: -6.600301742553711
    7. ' -' → logprob: -7.100301742553711
    8. '-' → logprob: -7.350301742553711
    9. '   ' → logprob: -11.350301742553711
    10. '*' → logprob: -11.725301742553711

Token 3076: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015299785882234573
    2. ' t' → logprob: -6.501530170440674
    3. '0' → logprob: -10.501529693603516
    4. '`t' → logprob: -16.376529693603516
    5. '	t' → logprob: -17.251529693603516
    6. '   ' → logprob: -17.376529693603516
    7. ')t' → logprob: -17.751529693603516
    8. '(t' → logprob: -17.876529693603516
    9. ' ' → logprob: -18.001529693603516
    10. '=t' → logprob: -18.501529693603516

Token 3077: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.688212614681106e-05
    2. '0' → logprob: -11.125017166137695
    3. ' t' → logprob: -13.125017166137695
    4. '`t' → logprob: -18.375017166137695
    5. '(t' → logprob: -18.875017166137695
    6. '   ' → logprob: -19.125017166137695
    7. '	t' → logprob: -19.625017166137695
    8. ')t' → logprob: -20.375017166137695
    9. '<t' → logprob: -20.625017166137695
    10. '$t' → logprob: -21.000017166137695

Token 3078: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7124816179275513
    2. ':' → logprob: -0.9624816179275513
    3. ':
' → logprob: -2.0874814987182617
    4. '           ' → logprob: -5.837481498718262
    5. ' continue' → logprob: -8.337481498718262
    6. 'continue' → logprob: -9.212481498718262
    7. ' or' → logprob: -9.587481498718262
    8. '                       ' → logprob: -9.712481498718262
    9. ':return' → logprob: -10.337481498718262
    10. '                   ' → logprob: -10.462481498718262

Token 3079: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.4868770196917467e-05
    2. ' continue' → logprob: -11.375024795532227
    3. 'continue' → logprob: -12.125024795532227
    4. '                   ' → logprob: -12.500024795532227
    5. '              ' → logprob: -13.625024795532227
    6. '           ' → logprob: -13.875024795532227
    7. '                ' → logprob: -14.875024795532227
    8. '	           ' → logprob: -15.000024795532227
    9. '                       ' → logprob: -15.250024795532227
    10. '   ' → logprob: -15.625024795532227

Token 3080: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06395943462848663
    2. '               ' → logprob: -2.8139593601226807
    3. ' continue' → logprob: -6.31395959854126
    4. 'break' → logprob: -8.813959121704102
    5. '	continue' → logprob: -11.063959121704102
    6. '                   ' → logprob: -11.563959121704102
    7. '_continue' → logprob: -13.063959121704102
    8. '```' → logprob: -13.813959121704102
    9. '			' → logprob: -14.688959121704102
    10. '           ' → logprob: -15.188959121704102

Token 3081: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014251544780563563
    2. '               ' → logprob: -9.000142097473145
    3. '```' → logprob: -12.500142097473145
    4. '            
' → logprob: -12.625142097473145
    5. '       ' → logprob: -12.750142097473145
    6. '<|end|>' → logprob: -12.875142097473145
    7. '
' → logprob: -13.375142097473145
    8. ',' → logprob: -13.625142097473145
    9. ' if' → logprob: -14.000142097473145
    10. '                   ' → logprob: -14.125142097473145

Token 3082: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037371189682744443
    2. '               ' → logprob: -8.500373840332031
    3. '```' → logprob: -9.250373840332031
    4. '       ' → logprob: -10.000373840332031
    5. ' if' → logprob: -11.125373840332031
    6. '<|end|>' → logprob: -12.625373840332031
    7. 'if' → logprob: -13.375373840332031
    8. '                   ' → logprob: -13.500373840332031
    9. '   ' → logprob: -13.625373840332031
    10. '            
' → logprob: -13.750373840332031

Token 3083: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035369666875340044
    2. '       ' → logprob: -8.000353813171387
    3. '               ' → logprob: -12.000353813171387
    4. 'if' (adapté à ' if') → logprob: -12.125353813171387
    5. '```' → logprob: -12.750353813171387
    6. ' if' → logprob: -13.500353813171387
    7. '   ' → logprob: -14.625353813171387
    8. '		' → logprob: -14.625353813171387
    9. '                   ' → logprob: -14.875353813171387
    10. '	       ' → logprob: -15.125353813171387

Token 3084: ' t' (ID: 260)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0018264309037476778
    2. ' check' → logprob: -6.751826286315918
    3. 'not' → logprob: -7.501826286315918
    4. 't' → logprob: -9.751826286315918
    5. ' not' → logprob: -10.376826286315918
    6. 'abs' → logprob: -12.126826286315918
    7. '   ' → logprob: -12.251826286315918
    8. '           ' → logprob: -14.126826286315918
    9. ' t' → logprob: -14.126826286315918
    10. 'k' → logprob: -14.376826286315918

Token 3085: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5285049080848694
    2. '>=' → logprob: -1.9035048484802246
    3. ' >' → logprob: -2.0285048484802246
    4. '>' → logprob: -2.7785048484802246
    5. ' <=' → logprob: -3.2785048484802246
    6. '<=' → logprob: -4.653504848480225
    7. ' ==' → logprob: -5.278504848480225
    8. '           ' → logprob: -5.278504848480225
    9. '==' → logprob: -5.278504848480225
    10. '   ' → logprob: -6.528504848480225

Token 3086: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0018006040481850505
    2. ' H' → logprob: -6.376800537109375
    3. '360' → logprob: -10.001800537109375
    4. '   ' → logprob: -11.126800537109375
    5. '(H' → logprob: -11.501800537109375
    6. 'limit' → logprob: -11.751800537109375
    7. '           ' → logprob: -11.876800537109375
    8. 'max' → logprob: -12.376800537109375
    9. ' ' → logprob: -12.626800537109375
    10. 't' → logprob: -13.626800537109375

Token 3087: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00016063073417171836
    2. '*' → logprob: -8.750160217285156
    3. ' *' → logprob: -14.375160217285156
    4. '   ' → logprob: -14.875160217285156
    5. '_' → logprob: -14.875160217285156
    6. '36' → logprob: -15.375160217285156
    7. '```' → logprob: -15.375160217285156
    8. ' ' → logprob: -16.000160217285156
    9. '\' → logprob: -17.375160217285156
    10. '`' → logprob: -17.625160217285156

Token 3088: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024013224174268544
    2. '00' → logprob: -8.375240325927734
    3. '000' → logprob: -12.000240325927734
    4. '   ' → logprob: -13.375240325927734
    5. '       ' → logprob: -14.000240325927734
    6. '```' → logprob: -15.000240325927734
    7. '           ' → logprob: -15.875240325927734
    8. '                               ' → logprob: -16.125240325927734
    9. ' ' → logprob: -16.750240325927734
    10. '...' → logprob: -17.000240325927734

Token 3089: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4236887991428375
    2. '               ' → logprob: -1.6736887693405151
    3. ':' → logprob: -2.1736888885498047
    4. ' and' → logprob: -3.5486888885498047
    5. '           ' → logprob: -4.298688888549805
    6. 'and' → logprob: -7.048688888549805
    7. '                       ' → logprob: -8.173688888549805
    8. '                   ' → logprob: -8.548688888549805
    9. '):
' → logprob: -9.548688888549805
    10. ':
' → logprob: -9.673688888549805

Token 3090: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036525758914649487
    2. ':' → logprob: -6.003652572631836
    3. ':
' → logprob: -7.003652572631836
    4. '                   ' → logprob: -9.753652572631836
    5. '```' → logprob: -10.128652572631836
    6. '           ' → logprob: -10.253652572631836
    7. '                               ' → logprob: -10.628652572631836
    8. ' continue' → logprob: -10.878652572631836
    9. ' and' → logprob: -11.003652572631836
    10. '                       ' → logprob: -11.128652572631836

Token 3091: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.38776135444641113
    2. '               ' → logprob: -1.1377613544464111
    3. ' break' → logprob: -7.637761116027832
    4. '           ' → logprob: -8.762761116027832
    5. '                   ' → logprob: -9.137761116027832
    6. '	break' → logprob: -9.137761116027832
    7. '```' → logprob: -11.137761116027832
    8. '                       ' → logprob: -11.762761116027832
    9. '			' → logprob: -12.262761116027832
    10. '_break' → logprob: -12.762761116027832

Token 3092: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.03821086138486862
    2. '               ' → logprob: -3.288210868835449
    3. ' break' → logprob: -9.41321086883545
    4. '                   ' → logprob: -9.91321086883545
    5. '	break' → logprob: -11.03821086883545
    6. '           ' → logprob: -11.16321086883545
    7. '			' → logprob: -12.41321086883545
    8. 'return' → logprob: -13.53821086883545
    9. '                       ' → logprob: -13.78821086883545
    10. '       ' → logprob: -15.16321086883545

Token 3093: ' reste' (ID: 26769)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06500879675149918
    2. '               ' → logprob: -2.8150088787078857
    3. '           ' → logprob: -6.440008640289307
    4. ' break' → logprob: -7.315008640289307
    5. '                   ' → logprob: -7.815008640289307
    6. '#' → logprob: -8.940009117126465
    7. 'continue' → logprob: -9.065009117126465
    8. '_break' → logprob: -10.315009117126465
    9. '	break' → logprob: -10.690009117126465
    10. ' ' → logprob: -10.940009117126465

Token 3094: ' dans' (ID: 2671)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.042261019349098206
    2. '               ' → logprob: -3.6672611236572266
    3. '           ' → logprob: -4.917261123657227
    4. '                   ' → logprob: -5.167261123657227
    5. 'à' → logprob: -7.417261123657227
    6. ' break' → logprob: -7.417261123657227
    7. '_break' → logprob: -8.292261123657227
    8. 'dans' → logprob: -8.542261123657227
    9. '-break' → logprob: -8.667261123657227
    10. '                       ' → logprob: -8.917261123657227

Token 3095: ' une' (ID: 2463)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.689382016658783
    2. 'break' → logprob: -1.4393820762634277
    3. 'continue' → logprob: -1.8143820762634277
    4. 'range' → logprob: -3.4393820762634277
    5. 'la' → logprob: -3.8143820762634277
    6. '360' → logprob: -4.189382076263428
    7. '```' → logprob: -5.314382076263428
    8. 'le' → logprob: -5.314382076263428
    9. '           ' → logprob: -5.439382076263428
    10. 'l' → logprob: -5.689382076263428

Token 3096: ' journée' (ID: 37156)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6346986293792725
    2. 'while' → logprob: -1.5096986293792725
    3. 'range' → logprob: -1.7596986293792725
    4. 'bou' → logprob: -3.5096986293792725
    5. 'break' → logprob: -4.009698867797852
    6. 'loop' → logprob: -4.384698867797852
    7. 'continu' → logprob: -5.884698867797852
    8. ' boucle' → logprob: -6.634698867797852
    9. '```' → logprob: -6.759698867797852
    10. 'b' → logprob: -7.009698867797852

Token 3097: ' modulo' (ID: 112372)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01891186274588108
    2. '                   ' → logprob: -4.643911838531494
    3. ':
' → logprob: -5.018911838531494
    4. ':' → logprob: -6.518911838531494
    5. '           ' → logprob: -7.018911838531494
    6. '                       ' → logprob: -10.143912315368652
    7. 'break' → logprob: -10.393912315368652
    8. ',' → logprob: -10.643912315368652
    9. '.' → logprob: -11.518912315368652
    10. '   ' → logprob: -12.768912315368652

Token 3098: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8833224773406982
    2. '360' → logprob: -1.3833224773406982
    3. 'continue' → logprob: -2.2583224773406982
    4. '               ' → logprob: -2.5083224773406982
    5. ' H' → logprob: -3.0083224773406982
    6. '                   ' → logprob: -3.7583224773406982
    7. 't' → logprob: -3.8833224773406982
    8. ' continue' → logprob: -4.258322715759277
    9. 'True' → logprob: -4.883322715759277
    10. '           ' → logprob: -5.258322715759277

Token 3099: ' heures' (ID: 34311)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5007033348083496
    2. '360' → logprob: -1.7507033348083496
    3. ':' → logprob: -1.8757033348083496
    4. '               ' → logprob: -3.6257033348083496
    5. '*' → logprob: -3.7507033348083496
    6. '           ' → logprob: -5.25070333480835
    7. '   ' → logprob: -6.12570333480835
    8. '       ' → logprob: -6.75070333480835
    9. '```' → logprob: -6.87570333480835
    10. ':
' → logprob: -7.25070333480835

Token 3100: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001402621390298009
    2. '                   ' → logprob: -7.626402854919434
    3. '           ' → logprob: -8.001402854919434
    4. 'break' → logprob: -8.001402854919434
    5. ':
' → logprob: -9.126402854919434
    6. ':' → logprob: -9.501402854919434
    7. ' break' → logprob: -10.376402854919434
    8. ',' → logprob: -10.876402854919434
    9. '```' → logprob: -12.876402854919434
    10. '.' → logprob: -13.501402854919434

Token 3101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006565583753399551
    2. '                   ' → logprob: -7.500656604766846
    3. ':' → logprob: -9.625656127929688
    4. ':
' → logprob: -10.625656127929688
    5. ',' → logprob: -12.250656127929688
    6. '           ' → logprob: -12.875656127929688
    7. '```' → logprob: -13.000656127929688
    8. '                       ' → logprob: -13.625656127929688
    9. '                ' → logprob: -14.750656127929688
    10. '			' → logprob: -15.000656127929688

Token 3102: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.1608988493680954
    2. '               ' → logprob: -1.9108988046646118
    3. ' break' → logprob: -7.910898685455322
    4. '           ' → logprob: -9.03589916229248
    5. '	break' → logprob: -9.28589916229248
    6. '                   ' → logprob: -10.03589916229248
    7. '```' → logprob: -10.41089916229248
    8. 'return' → logprob: -11.78589916229248
    9. '			' → logprob: -12.41089916229248
    10. '                       ' → logprob: -12.78589916229248

Token 3103: ' Comme' (ID: 53252)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023638736456632614
    2. 'break' → logprob: -4.398638725280762
    3. '                   ' → logprob: -4.898638725280762
    4. '           ' → logprob: -5.898638725280762
    5. 'continue' → logprob: -8.273638725280762
    6. ' break' → logprob: -8.523638725280762
    7. 'return' → logprob: -8.648638725280762
    8. '                       ' → logprob: -8.773638725280762
    9. '       ' → logprob: -10.773638725280762
    10. '#' → logprob: -11.023638725280762

Token 3104: ' on' (ID: 402)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.13997827470302582
    2. '           ' → logprob: -3.3899781703948975
    3. 'not' → logprob: -3.7649781703948975
    4. ' break' → logprob: -3.8899781703948975
    5. 't' → logprob: -4.264978408813477
    6. '               ' → logprob: -4.639978408813477
    7. 'continue' → logprob: -4.639978408813477
    8. 'True' → logprob: -4.764978408813477
    9. '                   ' → logprob: -5.514978408813477
    10. ' True' → logprob: -6.514978408813477

Token 3105: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.24627381563186646
    2. '               ' → logprob: -2.7462737560272217
    3. 've' → logprob: -2.7462737560272217
    4. 'cherche' → logprob: -3.7462737560272217
    5. '           ' → logprob: -3.8712737560272217
    6. 'do' → logprob: -4.996273994445801
    7. 'arr' → logprob: -5.371273994445801
    8. '#' → logprob: -5.621273994445801
    9. '                   ' → logprob: -5.746273994445801
    10. 'pe' → logprob: -5.871273994445801

Token 3106: ' premier' (ID: 15506)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.2601675987243652
    2. '               ' → logprob: -1.3851675987243652
    3. 't' → logprob: -1.8851675987243652
    4. 'continue' → logprob: -2.0101675987243652
    5. '                   ' → logprob: -2.1351675987243652
    6. '           ' → logprob: -4.135167598724365
    7. '#' → logprob: -4.760167598724365
    8. 'la' → logprob: -4.760167598724365
    9. '                       ' → logprob: -4.885167598724365
    10. 'le' → logprob: -5.135167598724365

Token 3107: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.9471954703330994
    2. 't' → logprob: -1.8221955299377441
    3. 'time' → logprob: -1.8221955299377441
    4. '_time' → logprob: -2.697195529937744
    5. ' temps' → logprob: -2.822195529937744
    6. '               ' → logprob: -2.947195529937744
    7. '           ' → logprob: -3.447195529937744
    8. '                   ' → logprob: -4.322195529937744
    9. ' time' → logprob: -4.572195529937744
    10. '_t' → logprob: -4.822195529937744

Token 3108: ' >=' (ID: 5064)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3702546954154968
    2. '                   ' → logprob: -1.9952547550201416
    3. ',' → logprob: -2.3702547550201416
    4. ':
' → logprob: -2.9952547550201416
    5. ':' → logprob: -3.9952547550201416
    6. 'continue' → logprob: -5.3702545166015625
    7. '                       ' → logprob: -5.9952545166015625
    8. '           ' → logprob: -6.7452545166015625
    9. 'à' → logprob: -7.3702545166015625
    10. ',
' → logprob: -7.3702545166015625

Token 3109: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -8.0536883615423e-05
    2. '0' → logprob: -10.500080108642578
    3. '#' → logprob: -11.125080108642578
    4. 'h' → logprob: -11.250080108642578
    5. ' t' → logprob: -11.500080108642578
    6. '           ' → logprob: -12.250080108642578
    7. '`t' → logprob: -12.625080108642578
    8. '(t' → logprob: -13.125080108642578
    9. '   ' → logprob: -14.000080108642578
    10. '
' → logprob: -14.125080108642578

Token 3110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05122317001223564
    2. '_num' → logprob: -3.0512232780456543
    3. 'num' → logprob: -6.051223278045654
    4. 't' → logprob: -9.551222801208496
    5. 'Num' → logprob: -10.301222801208496
    6. '
' → logprob: -10.301222801208496
    7. '           ' → logprob: -10.551222801208496
    8. '   ' → logprob: -11.051222801208496
    9. '```' → logprob: -11.301222801208496
    10. '       ' → logprob: -11.301222801208496

Token 3111: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057025469839572906
    2. '                   ' → logprob: -3.80702543258667
    3. ',' → logprob: -4.30702543258667
    4. ':' → logprob: -4.68202543258667
    5. ':
' → logprob: -4.68202543258667
    6. '           ' → logprob: -7.80702543258667
    7. 'continue' → logprob: -7.93202543258667
    8. '                       ' → logprob: -8.057025909423828
    9. '```' → logprob: -10.682025909423828
    10. ' continue' → logprob: -11.182025909423828

Token 3112: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5014212727546692
    2. 'la' → logprob: -1.8764212131500244
    3. 'H' → logprob: -2.2514212131500244
    4. 'le' → logprob: -2.8764212131500244
    5. 'continue' → logprob: -3.6264212131500244
    6. 'l' → logprob: -4.3764214515686035
    7. 'une' → logprob: -4.5014214515686035
    8. 't' → logprob: -4.5014214515686035
    9. '```' → logprob: -5.5014214515686035
    10. '360' → logprob: -5.7514214515686035

Token 3113: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.025477388873696327
    2. '0' → logprob: -3.900477409362793
    3. 't' → logprob: -5.775477409362793
    4. 'k' → logprob: -6.525477409362793
    5. '360' → logprob: -9.025477409362793
    6. 'limit' → logprob: -10.650477409362793
    7. '           ' → logprob: -10.775477409362793
    8. ' H' → logprob: -10.775477409362793
    9. '   ' → logprob: -10.900477409362793
    10. '(H' → logprob: -11.400477409362793

Token 3114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012104706838726997
    2. ',H' → logprob: -4.637104511260986
    3. ' ,' → logprob: -6.762104511260986
    4. 'H' → logprob: -7.637104511260986
    5. ',
' → logprob: -8.637104988098145
    6. '   ' → logprob: -8.762104988098145
    7. '+' → logprob: -9.387104988098145
    8. ' H' → logprob: -9.762104988098145
    9. '*' → logprob: -10.012104988098145
    10. '#' → logprob: -10.387104988098145

Token 3115: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.958325295476243e-05
    2. ' H' → logprob: -10.625079154968262
    3. '   ' → logprob: -10.875079154968262
    4. 't' → logprob: -11.000079154968262
    5. '360' → logprob: -12.250079154968262
    6. '       ' → logprob: -12.625079154968262
    7. '           ' → logprob: -13.125079154968262
    8. 'max' → logprob: -13.625079154968262
    9. ' ' → logprob: -13.750079154968262
    10. '     ' → logprob: -14.125079154968262

Token 3116: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.14971286058425903
    2. '*' → logprob: -2.0247128009796143
    3. ' *' → logprob: -5.399713039398193
    4. '   ' → logprob: -7.524713039398193
    5. ']' → logprob: -7.774713039398193
    6. ' ' → logprob: -7.774713039398193
    7. ')' → logprob: -8.024712562561035
    8. '36' → logprob: -8.774712562561035
    9. '```' → logprob: -8.899712562561035
    10. ']*' → logprob: -9.399712562561035

Token 3117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022085432428866625
    2. '00' → logprob: -6.127208709716797
    3. '000' → logprob: -11.127208709716797
    4. '
' → logprob: -13.002208709716797
    5. '   ' → logprob: -13.252208709716797
    6. ')' → logprob: -13.752208709716797
    7. '```' → logprob: -13.752208709716797
    8. ']' → logprob: -14.127208709716797
    9. '360' → logprob: -15.002208709716797
    10. ' ' → logprob: -15.252208709716797

Token 3118: ')
' (ID: 446)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4908914566040039
    2. '):
' → logprob: -1.240891456604004
    3. ']:' → logprob: -3.240891456604004
    4. ']' → logprob: -3.490891456604004
    5. '):' → logprob: -4.115891456604004
    6. ')' → logprob: -5.240891456604004
    7. ']
' → logprob: -6.365891456604004
    8. '],' → logprob: -6.865891456604004
    9. ']:

' → logprob: -6.865891456604004
    10. ']:
' → logprob: -7.865891456604004

Token 3119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006818146910518408
    2. '                   ' → logprob: -5.3818182945251465
    3. ':' → logprob: -7.0068182945251465
    4. ',' → logprob: -7.7568182945251465
    5. ':
' → logprob: -7.7568182945251465
    6. '           ' → logprob: -8.256817817687988
    7. '                       ' → logprob: -9.506817817687988
    8. '```' → logprob: -10.256817817687988
    9. 'continue' → logprob: -10.756817817687988
    10. ' continue' → logprob: -11.506817817687988

Token 3120: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004050514253322035
    2. '                   ' → logprob: -8.500405311584473
    3. 'break' → logprob: -8.875405311584473
    4. '           ' → logprob: -10.375405311584473
    5. 'continue' → logprob: -11.250405311584473
    6. ' break' → logprob: -12.250405311584473
    7. '       ' → logprob: -12.875405311584473
    8. '                       ' → logprob: -13.000405311584473
    9. '   ' → logprob: -13.125405311584473
    10. '                ' → logprob: -13.625405311584473

Token 3121: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01716952957212925
    2. 'break' → logprob: -4.89216947555542
    3. '                   ' → logprob: -5.51716947555542
    4. 'continue' → logprob: -6.01716947555542
    5. '           ' → logprob: -6.51716947555542
    6. 'if' → logprob: -7.64216947555542
    7. '                       ' → logprob: -7.76716947555542
    8. ' break' → logprob: -9.017169952392578
    9. '                               ' → logprob: -9.142169952392578
    10. ' continue' → logprob: -9.267169952392578

Token 3122: ' ne' (ID: 453)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6901683807373047
    2. '           ' → logprob: -1.4401683807373047
    3. 'continue' → logprob: -1.4401683807373047
    4. '       ' → logprob: -4.315168380737305
    5. ' continue' → logprob: -5.815168380737305
    6. ' ' → logprob: -6.065168380737305
    7. ' break' → logprob: -6.690168380737305
    8. '               ' → logprob: -6.690168380737305
    9. '#' → logprob: -6.940168380737305
    10. 'contin' → logprob: -7.565168380737305

Token 3123: ' considère' (ID: 176437)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8561868071556091
    2. 'break' → logprob: -0.9811868071556091
    3. '           ' → logprob: -2.481186866760254
    4. 'pas' → logprob: -2.731186866760254
    5. '       ' → logprob: -4.731186866760254
    6. '#' → logprob: -4.856186866760254
    7. '               ' → logprob: -4.856186866760254
    8. 'contin' → logprob: -4.981186866760254
    9. '_continue' → logprob: -5.981186866760254
    10. 'pour' → logprob: -6.356186866760254

Token 3124: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.43686577677726746
    2. '           ' → logprob: -1.9368658065795898
    3. '               ' → logprob: -2.06186580657959
    4. 'break' → logprob: -3.56186580657959
    5. ' pas' → logprob: -3.81186580657959
    6. '                   ' → logprob: -4.18686580657959
    7. 'continue' → logprob: -5.06186580657959
    8. '```' → logprob: -5.43686580657959
    9. ' break' → logprob: -6.56186580657959
    10. 't' → logprob: -6.81186580657959

Token 3125: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5020943880081177
    2. 'continue' → logprob: -1.6270943880081177
    3. 'break' → logprob: -3.377094268798828
    4. '```' → logprob: -3.377094268798828
    5. 'contin' → logprob: -3.752094268798828
    6. 'plus' → logprob: -4.002094268798828
    7. 'les' → logprob: -4.002094268798828
    8. 'le' → logprob: -4.127094268798828
    9. 'la' → logprob: -4.377094268798828
    10. 'k' → logprob: -4.877094268798828

Token 3126: ' plus' (ID: 2932)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6336743235588074
    2. '>' → logprob: -1.2586743831634521
    3. ' >' → logprob: -2.758674383163452
    4. '           ' → logprob: -2.883674383163452
    5. '>=' → logprob: -4.008674144744873
    6. 'continue' → logprob: -4.383674144744873
    7. ' >=' → logprob: -4.508674144744873
    8. '                   ' → logprob: -5.008674144744873
    9. '=' → logprob: -5.883674144744873
    10. ' continue' → logprob: -6.133674144744873

Token 3127: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.6617839932441711
    2. '>' → logprob: -0.7867839932441711
    3. '>=' → logprob: -4.2867841720581055
    4. 'large' → logprob: -5.5367841720581055
    5. '```' → logprob: -5.9117841720581055
    6. 'gr' → logprob: -6.0367841720581055
    7. 't' → logprob: -6.2867841720581055
    8. ' grand' → logprob: -7.4117841720581055
    9. '   ' → logprob: -7.9117841720581055
    10. 'de' → logprob: -8.036784172058105

Token 3128: ' que' (ID: 661)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0334002710878849
    2. '           ' → logprob: -4.533400058746338
    3. '                   ' → logprob: -4.908400058746338
    4. 'continue' → logprob: -4.908400058746338
    5. ':
' → logprob: -5.658400058746338
    6. '.' → logprob: -7.158400058746338
    7. ',' → logprob: -7.533400058746338
    8. ':' → logprob: -7.783400058746338
    9. ' continue' → logprob: -8.033400535583496
    10. ' than' → logprob: -8.158400535583496

Token 3129: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0005132370279170573
    2. ' H' → logprob: -7.625513076782227
    3. '360' → logprob: -11.125513076782227
    4. '   ' → logprob: -12.375513076782227
    5. ' ' → logprob: -13.750513076782227
    6. '           ' → logprob: -14.125513076782227
    7. ' ' → logprob: -14.125513076782227
    8. '	H' → logprob: -14.375513076782227
    9. 't' → logprob: -14.500513076782227
    10. '```' → logprob: -15.125513076782227

Token 3130: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00042768914136104286
    2. '*' → logprob: -7.875427722930908
    3. '```' → logprob: -11.25042724609375
    4. '_' → logprob: -12.00042724609375
    5. '36' → logprob: -12.00042724609375
    6. '   ' → logprob: -12.12542724609375
    7. ' *' → logprob: -12.37542724609375
    8. '#' → logprob: -12.87542724609375
    9. '**' → logprob: -13.37542724609375
    10. '60' → logprob: -13.50042724609375

Token 3131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000533136713784188
    2. '               ' → logprob: -7.875533103942871
    3. '00' → logprob: -9.500533103942871
    4. '           ' → logprob: -10.375533103942871
    5. '000' → logprob: -11.125533103942871
    6. '   ' → logprob: -11.375533103942871
    7. '       ' → logprob: -11.500533103942871
    8. '                   ' → logprob: -12.750533103942871
    9. ' ' → logprob: -13.250533103942871
    10. ')
' → logprob: -14.500533103942871

Token 3132: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04509931430220604
    2. ':
' → logprob: -3.5450992584228516
    3. ':' → logprob: -4.420099258422852
    4. '                   ' → logprob: -6.545099258422852
    5. '           ' → logprob: -6.670099258422852
    6. '                       ' → logprob: -8.670099258422852
    7. '.' → logprob: -9.795099258422852
    8. ',' → logprob: -9.920099258422852
    9. 'continue' → logprob: -9.920099258422852
    10. ' continue' → logprob: -10.045099258422852

Token 3133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030422434210777283
    2. '           ' → logprob: -6.128042221069336
    3. '                   ' → logprob: -7.503042221069336
    4. '                       ' → logprob: -9.128042221069336
    5. '```' → logprob: -9.378042221069336
    6. ':' → logprob: -9.878042221069336
    7. ',' → logprob: -11.128042221069336
    8. '       ' → logprob: -11.503042221069336
    9. ':
' → logprob: -11.878042221069336
    10. ' continue' → logprob: -12.378042221069336

Token 3134: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03060152754187584
    2. 'break' (adapté à ' break') → logprob: -3.5306015014648438
    3. '                   ' → logprob: -7.655601501464844
    4. ' break' → logprob: -8.155601501464844
    5. '           ' → logprob: -10.155601501464844
    6. '                       ' → logprob: -11.280601501464844
    7. 'continue' → logprob: -11.530601501464844
    8. 'return' → logprob: -11.780601501464844
    9. '       ' → logprob: -12.030601501464844
    10. '```' → logprob: -12.280601501464844

Token 3135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01592409610748291
    2. '```' → logprob: -4.765923976898193
    3. '               ' → logprob: -5.890923976898193
    4. '       ' → logprob: -6.265923976898193
    5. '<|end|>' → logprob: -7.140923976898193
    6. '		' → logprob: -7.765923976898193
    7. '            
' → logprob: -8.390924453735352
    8. '\' → logprob: -9.140924453735352
    9. '                   ' → logprob: -9.390924453735352
    10. '   ' → logprob: -9.390924453735352

Token 3136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005533903022296727
    2. '       ' → logprob: -8.125553131103516
    3. '               ' → logprob: -8.625553131103516
    4. '```' → logprob: -10.625553131103516
    5. '
' → logprob: -10.750553131103516
    6. '                   ' → logprob: -11.750553131103516
    7. '<|end|>' → logprob: -11.750553131103516
    8. '            
' → logprob: -12.000553131103516
    9. '          ' → logprob: -13.125553131103516
    10. '                       ' → logprob: -13.125553131103516

Token 3137: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004769022576510906
    2. '       ' → logprob: -5.3797688484191895
    3. 'if' (adapté à ' if') → logprob: -9.629769325256348
    4. ' if' → logprob: -10.004769325256348
    5. '	       ' → logprob: -10.879769325256348
    6. '               ' → logprob: -12.129769325256348
    7. '		' → logprob: -12.754769325256348
    8. '	   ' → logprob: -13.129769325256348
    9. '   ' → logprob: -13.504769325256348
    10. '          ' → logprob: -13.879769325256348

Token 3138: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.008622255176305771
    2. ' check' → logprob: -4.758622169494629
    3. 'not' → logprob: -12.758622169494629
    4. ' not' → logprob: -12.883622169494629
    5. '           ' → logprob: -13.258622169494629
    6. '   ' → logprob: -14.883622169494629
    7. '       ' → logprob: -16.508623123168945
    8. '               ' → logprob: -16.633623123168945
    9. '	check' → logprob: -17.383623123168945
    10. '(check' → logprob: -17.633623123168945

Token 3139: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.07227775454521179
    2. '(t' → logprob: -2.697277784347534
    3. 't' → logprob: -6.447277545928955
    4. '(' → logprob: -8.197278022766113
    5. ' (' → logprob: -8.447278022766113
    6. ')' → logprob: -9.197278022766113
    7. '   ' → logprob: -10.072278022766113
    8. '           ' → logprob: -10.697278022766113
    9. '(
' → logprob: -10.822278022766113
    10. '                   ' → logprob: -11.447278022766113

Token 3140: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.7491250875755213e-05
    2. 't' → logprob: -11.000027656555176
    3. '(' → logprob: -11.500027656555176
    4. ' (' → logprob: -14.875027656555176
    5. '           ' → logprob: -15.250027656555176
    6. '               ' → logprob: -17.50002670288086
    7. '(
' → logprob: -17.50002670288086
    8. '                   ' → logprob: -18.50002670288086
    9. '   ' → logprob: -18.75002670288086
    10. '```' → logprob: -19.25002670288086

Token 3141: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4317663013935089
    2. '):' → logprob: -1.0567662715911865
    3. ':' → logprob: -6.306766510009766
    4. ':
' → logprob: -7.931766510009766
    5. '               ' → logprob: -8.181766510009766
    6. '):
' → logprob: -8.181766510009766
    7. '           ' → logprob: -8.431766510009766
    8. ')' → logprob: -10.181766510009766
    9. '():
' → logprob: -11.431766510009766
    10. '=' → logprob: -11.806766510009766

Token 3142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012356207298580557
    2. '           ' → logprob: -10.125123977661133
    3. 'return' → logprob: -10.250123977661133
    4. '                   ' → logprob: -10.875123977661133
    5. '                       ' → logprob: -11.875123977661133
    6. '                               ' → logprob: -11.875123977661133
    7. '```' → logprob: -12.375123977661133
    8. ' return' → logprob: -12.750123977661133
    9. '              ' → logprob: -13.500123977661133
    10. '	           ' → logprob: -13.500123977661133

Token 3143: ' candidates' (ID: 18116)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2030976414680481
    2. '               ' → logprob: -1.7030975818634033
    3. '       ' → logprob: -6.703097820281982
    4. ' return' → logprob: -8.453097343444824
    5. '                   ' → logprob: -9.078097343444824
    6. '           ' → logprob: -9.453097343444824
    7. '#' → logprob: -10.828097343444824
    8. '   ' → logprob: -11.328097343444824
    9. 'candidate' → logprob: -11.578097343444824
    10. 'c' → logprob: -12.328097343444824

Token 3144: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004147849511355162
    2. '.' → logprob: -5.504148006439209
    3. '               ' → logprob: -10.37914752960205
    4. '                   ' → logprob: -11.12914752960205
    5. '           ' → logprob: -11.62914752960205
    6. '.add' → logprob: -12.62914752960205
    7. ' .' → logprob: -13.00414752960205
    8. '.insert' → logprob: -13.25414752960205
    9. '.setdefault' → logprob: -13.50414752960205
    10. '.app' → logprob: -13.87914752960205

Token 3145: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.002060330705717206
    2. '((' → logprob: -6.877060413360596
    3. '(' → logprob: -7.127060413360596
    4. 't' → logprob: -8.502059936523438
    5. '(k' → logprob: -10.877059936523438
    6. '(
' → logprob: -14.377059936523438
    7. '(round' → logprob: -14.502059936523438
    8. ' (' → logprob: -15.002059936523438
    9. 'k' → logprob: -15.252059936523438
    10. ' t' → logprob: -15.627059936523438

Token 3146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012144023785367608
    2. '<|end|>' → logprob: -7.251214504241943
    3. '               ' → logprob: -8.376214027404785
    4. '           ' → logprob: -9.376214027404785
    5. '<|end|>' → logprob: -10.001214027404785
    6. '                   ' → logprob: -10.251214027404785
    7. ')
' → logprob: -11.251214027404785
    8. ' )' → logprob: -11.251214027404785
    9. ',' → logprob: -11.626214027404785
    10. '.' → logprob: -11.751214027404785

Token 3147: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5831490159034729
    2. '           ' → logprob: -1.7081489562988281
    3. '       ' → logprob: -1.7081489562988281
    4. '               ' → logprob: -3.333148956298828
    5. '```' → logprob: -3.708148956298828
    6. '<|end|>' → logprob: -4.458148956298828
    7. '    
' → logprob: -5.958148956298828
    8. '                   ' → logprob: -6.208148956298828
    9. '
' → logprob: -7.458148956298828
    10. 'continue' → logprob: -7.833148956298828

Token 3148: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04460785537958145
    2. 'break' (adapté à ' break') → logprob: -3.1696078777313232
    3. 'continue' → logprob: -7.044607639312744
    4. '                   ' → logprob: -8.294608116149902
    5. '           ' → logprob: -8.544608116149902
    6. ' break' → logprob: -9.419608116149902
    7. '```' → logprob: -9.919608116149902
    8. '                ' → logprob: -10.544608116149902
    9. 'if' → logprob: -10.544608116149902
    10. '.' → logprob: -10.919608116149902

Token 3149: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3150: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3151: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.576965868473053
    2. '<|end|>' → logprob: -1.0769658088684082
    3. '           ' → logprob: -2.826965808868408
    4. '   ' → logprob: -4.326965808868408
    5. '               ' → logprob: -4.951965808868408
    6. '<|end|>' → logprob: -5.701965808868408
    7. 'continue' → logprob: -5.951965808868408
    8. ')' → logprob: -6.451965808868408
    9. '        ' → logprob: -6.701965808868408
    10. '  ' → logprob: -6.826965808868408

Token 3152: ' garde' (ID: 65309)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0689525380730629
    2. ' continue' → logprob: -3.5689525604248047
    3. '               ' → logprob: -4.443952560424805
    4. '           ' → logprob: -4.943952560424805
    5. '       ' → logprob: -5.318952560424805
    6. 'contin' → logprob: -5.943952560424805
    7. 'break' → logprob: -6.193952560424805
    8. '	continue' → logprob: -6.443952560424805
    9. ' continues' → logprob: -6.693952560424805
    10. '_continue' → logprob: -6.693952560424805

Token 3153: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3154: ' plus' (ID: 2932)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.2049209326505661
    2. 'token' → logprob: -2.829921007156372
    3. 'c' → logprob: -3.079921007156372
    4. 'first' → logprob: -3.704921007156372
    5. 'best' → logprob: -4.204920768737793
    6. 'lowest' → logprob: -5.204920768737793
    7. ' candidate' → logprob: -5.454920768737793
    8. ')' → logprob: -5.454920768737793
    9. 'k' → logprob: -5.829920768737793
    10. 'closest' → logprob: -5.954920768737793

Token 3155: ' petit' (ID: 20577)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.010001728311181068
    2. 'pet' → logprob: -4.7600016593933105
    3. 'prem' → logprob: -7.6350016593933105
    4. 'prox' → logprob: -7.6350016593933105
    5. '```' → logprob: -9.260002136230469
    6. '_pro' → logprob: -9.510002136230469
    7. ' proche' → logprob: -9.635002136230469
    8. 'court' → logprob: -10.010002136230469
    9. '   ' → logprob: -10.635002136230469
    10. 'près' → logprob: -10.760002136230469

Token 3156: ' k' (ID: 372)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.24157296121120453
    2. '<|end|>' → logprob: -1.9915729761123657
    3. 'candidate' → logprob: -2.741572856903076
    4. '<|end|>' → logprob: -5.616572856903076
    5. 'continue' → logprob: -5.866572856903076
    6. '_token' → logprob: -6.491572856903076
    7. '-token' → logprob: -6.491572856903076
    8. 'c' → logprob: -6.741572856903076
    9. ' token' → logprob: -7.241572856903076
    10. 't' → logprob: -7.366572856903076

Token 3157: ' produ' (ID: 2443)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3158: 'isant' (ID: 56111)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0068421801552176476
    2. 'isant' → logprob: -5.006842136383057
    3. 'isit' → logprob: -9.506842613220215
    4. 'is' → logprob: -10.756842613220215
    5. 'sit' → logprob: -11.006842613220215
    6. 'isent' → logprob: -11.881842613220215
    7. 's' → logprob: -12.756842613220215
    8. 'ira' → logprob: -13.881842613220215
    9. '   ' → logprob: -14.631842613220215
    10. 'i' → logprob: -14.756842613220215

Token 3159: ' solution' (ID: 7578)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.014615071006119251
    2. 'un' → logprob: -4.764615058898926
    3. ' une' → logprob: -5.639615058898926
    4. 'True' → logprob: -7.139615058898926
    5. 'valid' → logprob: -7.514615058898926
    6. 'solution' → logprob: -7.764615058898926
    7. 't' → logprob: -8.514615058898926
    8. ''une' → logprob: -8.889615058898926
    9. 'c' → logprob: -9.264615058898926
    10. '```' → logprob: -9.514615058898926

Token 3160: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4993429183959961
    2. '       ' → logprob: -1.749342918395996
    3. '<|end|>' → logprob: -2.249342918395996
    4. ')' → logprob: -2.749342918395996
    5. '           ' → logprob: -4.249342918395996
    6. ',' → logprob: -4.624342918395996
    7. '.' → logprob: -4.749342918395996
    8. '```' → logprob: -5.374342918395996
    9. ']' → logprob: -6.124342918395996
    10. '               ' → logprob: -6.749342918395996

Token 3162: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022387757897377014
    2. 'c' → logprob: -4.772387981414795
    3. 'if' (adapté à ' if') → logprob: -5.022387981414795
    4. '
' → logprob: -5.272387981414795
    5. '```' → logprob: -7.272387981414795
    6. '#' → logprob: -7.897387981414795
    7. '    
' → logprob: -8.147387504577637
    8. 'sorted' → logprob: -8.397387504577637
    9. ' if' → logprob: -9.272387504577637
    10. 'candidate' → logprob: -9.272387504577637

Token 3163: ' not' (ID: 625)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21415188908576965
    2. ' not' → logprob: -1.9641518592834473
    3. ' candidates' → logprob: -3.4641518592834473
    4. 'not' → logprob: -4.714151859283447
    5. 'len' → logprob: -4.839151859283447
    6. ' len' → logprob: -5.464151859283447
    7. ' c' → logprob: -9.464152336120605
    8. ' ' → logprob: -13.589152336120605
    9. '_candidates' → logprob: -13.839152336120605
    10. '   ' → logprob: -13.964152336120605

Token 3164: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170225441455841
    2. ' candidates' → logprob: -6.7511701583862305
    3. 'len' → logprob: -17.501171112060547
    4. '_candidates' → logprob: -19.376171112060547
    5. 'candidate' → logprob: -19.501171112060547
    6. ' c' → logprob: -19.626171112060547
    7. ' ' → logprob: -20.626171112060547
    8. '   ' → logprob: -21.126171112060547
    9. '```' → logprob: -21.251171112060547
    10. '	c' → logprob: -21.626171112060547

Token 3165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08948700875043869
    2. ':
' → logprob: -3.089487075805664
    3. '.append' → logprob: -3.339487075805664
    4. '.' → logprob: -6.464487075805664
    5. '=' → logprob: -6.839487075805664
    6. ':return' → logprob: -7.214487075805664
    7. '   ' → logprob: -7.464487075805664
    8. '==' → logprob: -8.089487075805664
    9. '.extend' → logprob: -8.964487075805664
    10. '.sort' → logprob: -9.339487075805664

Token 3166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011707604862749577
    2. '   ' → logprob: -4.511707782745361
    3. 'return' → logprob: -7.886707782745361
    4. ' return' → logprob: -9.261707305908203
    5. '```' → logprob: -9.386707305908203
    6. ',' → logprob: -10.761707305908203
    7. '[' → logprob: -10.886707305908203
    8. ':
' → logprob: -11.011707305908203
    9. ':' → logprob: -11.761707305908203
    10. ':return' → logprob: -12.136707305908203

Token 3167: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1294538974761963
    2. 'return' → logprob: -2.1294538974761963
    3. '   ' → logprob: -6.004453659057617
    4. ' return' → logprob: -10.129453659057617
    5. '
' → logprob: -12.254453659057617
    6. '#' (adapté à ' #') → logprob: -12.379453659057617
    7. '```' → logprob: -13.504453659057617
    8. '	return' → logprob: -13.629453659057617
    9. '{return' → logprob: -14.004453659057617
    10. '           ' → logprob: -14.379453659057617

Token 3168: ' Thé' (ID: 125531)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013537349179387093
    2. '       ' → logprob: -4.513537406921387
    3. '   ' → logprob: -6.013537406921387
    4. '#' → logprob: -10.513537406921387
    5. ' return' → logprob: -11.263537406921387
    6. 'None' → logprob: -15.138537406921387
    7. '           ' → logprob: -15.138537406921387
    8. '	return' → logprob: -15.263537406921387
    9. '
' → logprob: -16.63853645324707
    10. 'raise' → logprob: -16.88853645324707

Token 3169: 'ori' (ID: 6510)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6990504860877991
    2. 'return' → logprob: -1.1990504264831543
    3. 'orique' → logprob: -2.5740504264831543
    4. 'orie' → logprob: -3.4490504264831543
    5. 'None' → logprob: -3.6990504264831543
    6. 'def' → logprob: -4.074050426483154
    7. 'or' → logprob: -4.449050426483154
    8. 'raise' → logprob: -4.949050426483154
    9. 'ore' → logprob: -5.199050426483154
    10. '   ' → logprob: -5.574050426483154

Token 3170: 'quement' (ID: 42437)
  Prédit: 'quement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quement' → logprob: -0.1969131976366043
    2. 'me' → logprob: -2.196913242340088
    3. 'e' → logprob: -3.446913242340088
    4. 'que' → logprob: -3.821913242340088
    5. 'ème' → logprob: -4.696913242340088
    6. 're' → logprob: -6.196913242340088
    7. 'eme' → logprob: -6.696913242340088
    8. 'em' → logprob: -7.446913242340088
    9. 'iquement' → logprob: -8.69691276550293
    10. 'rie' → logprob: -8.69691276550293

Token 3171: ' ne' (ID: 453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4950602352619171
    2. 'return' → logprob: -0.9950602054595947
    3. ' return' → logprob: -4.620060443878174
    4. '#' → logprob: -4.995060443878174
    5. '   ' → logprob: -6.120060443878174
    6. ':' → logprob: -7.120060443878174
    7. ':return' → logprob: -7.995060443878174
    8. ',' → logprob: -8.620059967041016
    9. ':
' → logprob: -8.620059967041016
    10. '```' → logprob: -9.245059967041016

Token 3172: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03929709643125534
    2. ' return' → logprob: -3.289297103881836
    3. '#' → logprob: -7.414297103881836
    4. 'raise' → logprob: -7.664297103881836
    5. 'r' → logprob: -10.414297103881836
    6. 'pas' → logprob: -10.664297103881836
    7. ' raise' → logprob: -10.789297103881836
    8. '       ' → logprob: -10.914297103881836
    9. 'eturn' → logprob: -11.039297103881836
    10. ' retourne' → logprob: -11.539297103881836

Token 3173: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2131393551826477
    2. 'return' → logprob: -1.963139295578003
    3. '```' → logprob: -3.713139295578003
    4. ' pas' → logprob: -3.838139295578003
    5. ' return' → logprob: -6.213139533996582
    6. '_pas' → logprob: -6.588139533996582
    7. 'pass' → logprob: -6.963139533996582
    8. '       ' → logprob: -7.713139533996582
    9. ')' → logprob: -8.338139533996582
    10. '_return' → logprob: -8.588139533996582

Token 3174: ' arriver' (ID: 78302)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029998892918229103
    2. ' return' → logprob: -4.529998779296875
    3. 'pass' → logprob: -5.029998779296875
    4. 'pas' → logprob: -5.279998779296875
    5. '   ' → logprob: -5.654998779296875
    6. '```' → logprob: -6.779998779296875
    7. '       ' → logprob: -7.404998779296875
    8. 'raise' → logprob: -7.779998779296875
    9. ' pas' → logprob: -8.154998779296875
    10. 'r' → logprob: -8.404998779296875

Token 3175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027166729792952538
    2. '   ' → logprob: -4.652166843414307
    3. 'return' → logprob: -4.777166843414307
    4. ':
' → logprob: -5.152166843414307
    5. ' return' → logprob: -6.902166843414307
    6. '```' → logprob: -7.027166843414307
    7. ',' → logprob: -8.027166366577148
    8. 'None' → logprob: -8.277166366577148
    9. ':' → logprob: -8.902166366577148
    10. ':return' → logprob: -9.152166366577148

Token 3176: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47555407881736755
    2. '       ' → logprob: -0.9755541086196899
    3. '```' → logprob: -6.9755539894104
    4. ' return' → logprob: -8.600554466247559
    5. 'return' → logprob: -8.850554466247559
    6. '
' → logprob: -9.350554466247559
    7. '           ' → logprob: -10.600554466247559
    8. ',' → logprob: -10.850554466247559
    9. '        
' → logprob: -10.850554466247559
    10. '`' → logprob: -11.100554466247559

Token 3177: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04075212404131889
    2. '       ' → logprob: -3.9157521724700928
    3. ' return' → logprob: -4.165751934051514
    4. '   ' → logprob: -5.415751934051514
    5. 'raise' → logprob: -11.040752410888672
    6. '```' → logprob: -11.665752410888672
    7. '	return' → logprob: -12.040752410888672
    8. '
' → logprob: -12.165752410888672
    9. '#' → logprob: -12.915752410888672
    10. '{return' → logprob: -13.665752410888672

Token 3178: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.511406809295295e-06
    2. ' None' → logprob: -12.000006675720215
    3. '(None' → logprob: -15.500006675720215
    4. '0' → logprob: -16.7500057220459
    5. '   ' → logprob: -17.7500057220459
    6. 'none' → logprob: -18.1250057220459
    7. '_None' → logprob: -18.6250057220459
    8. ',None' → logprob: -19.3750057220459
    9. '=None' → logprob: -19.6250057220459
    10. '-' → logprob: -19.6250057220459

Token 3179: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16508102416992188
    2. '
' → logprob: -2.415081024169922
    3. 'None' → logprob: -3.040081024169922
    4. '    
' → logprob: -4.540081024169922
    5. '```' → logprob: -6.915081024169922
    6. 'return' → logprob: -7.540081024169922
    7. ')' → logprob: -7.665081024169922
    8. ' None' → logprob: -7.665081024169922
    9. 'c' → logprob: -8.165081024169922
    10. 'else' → logprob: -8.290081024169922

Token 3180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0929001569747925
    2. 'min' → logprob: -1.0929001569747925
    3. 'return' → logprob: -1.2179001569747925
    4. 'sorted' → logprob: -4.217900276184082
    5. 'c' → logprob: -5.342900276184082
    6. ' min' → logprob: -5.467900276184082
    7. ' return' → logprob: -5.717900276184082
    8. '
' → logprob: -6.217900276184082
    9. ',' → logprob: -6.467900276184082
    10. ' candidates' → logprob: -7.342900276184082

Token 3181: ' t' (ID: 260)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11987325549125671
    2. 'c' → logprob: -2.994873285293579
    3. 'return' → logprob: -2.994873285293579
    4. 't' (adapté à ' t') → logprob: -5.744873046875
    5. '   ' → logprob: -6.119873046875
    6. 'cand' → logprob: -6.494873046875
    7. 'candidate' → logprob: -6.494873046875
    8. 'res' → logprob: -6.744873046875
    9. 'result' → logprob: -6.869873046875
    10. ' min' → logprob: -7.369873046875

Token 3182: '_sol' (ID: 121444)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.5826598405838013
    2. '=' → logprob: -1.7076598405838013
    3. '_num' → logprob: -2.7076597213745117
    4. ' =' → logprob: -2.7076597213745117
    5. '_c' → logprob: -4.082659721374512
    6. ',' → logprob: -4.332659721374512
    7. 't' → logprob: -4.457659721374512
    8. '_' → logprob: -4.582659721374512
    9. '_tokens' → logprob: -4.707659721374512
    10. '_min' → logprob: -4.832659721374512

Token 3183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2820269465446472
    2. ' =' → logprob: -1.407027006149292
    3. '_candidates' → logprob: -8.532027244567871
    4. 's' → logprob: -9.157027244567871
    5. '=c' → logprob: -9.157027244567871
    6. '=int' → logprob: -9.657027244567871
    7. '_idx' → logprob: -9.907027244567871
    8. '=min' → logprob: -10.032027244567871
    9. ')' → logprob: -10.282027244567871
    10. '_index' → logprob: -10.532027244567871

Token 3184: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.941850526549388e-06
    2. ' min' → logprob: -11.750007629394531
    3. 'c' → logprob: -20.25000762939453
    4. 'minimum' → logprob: -21.12500762939453
    5. '(min' → logprob: -21.75000762939453
    6. '	min' → logprob: -22.75000762939453
    7. '[min' → logprob: -22.75000762939453
    8. '=min' → logprob: -23.87500762939453
    9. 'minimal' → logprob: -24.37500762939453
    10. '_min' → logprob: -25.00000762939453

Token 3185: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00036382899270392954
    2. 'c' → logprob: -8.500364303588867
    3. '(candidate' → logprob: -9.375364303588867
    4. '([' → logprob: -9.750364303588867
    5. '(' → logprob: -12.500364303588867
    6. '(t' → logprob: -12.500364303588867
    7. 'candidate' → logprob: -13.000364303588867
    8. '(
' → logprob: -13.000364303588867
    9. '_candidates' → logprob: -13.000364303588867
    10. '[c' → logprob: -13.125364303588867

Token 3186: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.028038430958986282
    2. 'c' → logprob: -4.153038501739502
    3. 'and' → logprob: -4.778038501739502
    4. '(c' → logprob: -6.778038501739502
    5. '[c' → logprob: -6.778038501739502
    6. 't' → logprob: -7.653038501739502
    7. '(t' → logprob: -7.903038501739502
    8. '[t' → logprob: -9.028038024902344
    9. '_candidates' → logprob: -9.403038024902344
    10. '[' → logprob: -10.028038024902344

Token 3187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011410178616642952
    2. '   ' → logprob: -4.886410236358643
    3. ',' → logprob: -6.261410236358643
    4. ' +' → logprob: -7.261410236358643
    5. '+' → logprob: -7.761410236358643
    6. ')
' → logprob: -7.886410236358643
    7. '<|end|>' → logprob: -8.761409759521484
    8. '<|end|>' → logprob: -9.386409759521484
    9. ' )' → logprob: -11.136409759521484
    10. ')+' → logprob: -11.261409759521484

Token 3188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002045221161097288
    2. '
' → logprob: -6.377045154571533
    3. '    
' → logprob: -8.752045631408691
    4. 'return' → logprob: -9.627045631408691
    5. ' return' → logprob: -10.377045631408691
    6. ',' → logprob: -10.752045631408691
    7. '```' → logprob: -11.127045631408691
    8. '<|end|>' → logprob: -11.252045631408691
    9. 'num' → logprob: -11.877045631408691
    10. '	return' → logprob: -12.002045631408691

Token 3189: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5780667066574097
    2. 'return' → logprob: -0.8280667066574097
    3. 'h' → logprob: -6.453066825866699
    4. 'num' → logprob: -7.953066825866699
    5. '```' → logprob: -9.0780668258667
    6. '#' (adapté à ' #') → logprob: -9.8280668258667
    7. ' return' → logprob: -10.9530668258667
    8. '
' → logprob: -12.5780668258667
    9. 't' → logprob: -12.7030668258667
    10. '`' → logprob: -13.8280668258667

Token 3190: ' normal' (ID: 6078)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0561942458152771
    2. 'h' → logprob: -2.931194305419922
    3. '   ' → logprob: -7.181194305419922
    4. '#' → logprob: -8.056194305419922
    5. 't' → logprob: -9.306194305419922
    6. 'num' → logprob: -9.556194305419922
    7. 'result' → logprob: -10.681194305419922
    8. ' return' → logprob: -10.806194305419922
    9. 'res' → logprob: -11.181194305419922
    10. 'ret' → logprob: -13.056194305419922

Token 3191: 'iser' (ID: 7466)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39864712953567505
    2. 'return' → logprob: -1.5236470699310303
    3. 'ized' → logprob: -2.3986470699310303
    4. 'ize' → logprob: -4.648647308349609
    5. '   ' → logprob: -5.148647308349609
    6. '_return' → logprob: -6.398647308349609
    7. ' return' → logprob: -7.023647308349609
    8. '#' → logprob: -7.398647308349609
    9. 'num' → logprob: -8.14864730834961
    10. 'def' → logprob: -8.52364730834961

Token 3192: ' temps' (ID: 11160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09120199829339981
    2. 'num' → logprob: -2.9662020206451416
    3. 'return' → logprob: -3.4662020206451416
    4. '   ' → logprob: -5.9662017822265625
    5. ',' → logprob: -7.9662017822265625
    6. ' t' → logprob: -8.216201782226562
    7. 'numer' → logprob: -8.716201782226562
    8. '
' → logprob: -8.966201782226562
    9. '_num' → logprob: -8.966201782226562
    10. 'res' → logprob: -9.216201782226562

Token 3193: ' modulo' (ID: 112372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9771183729171753
    2. '_num' → logprob: -1.6021183729171753
    3. 't' → logprob: -1.7271183729171753
    4. '   ' → logprob: -2.852118492126465
    5. 'return' → logprob: -2.852118492126465
    6. '_,' → logprob: -3.352118492126465
    7. 'num' → logprob: -3.602118492126465
    8. '=' → logprob: -3.852118492126465
    9. ' =' → logprob: -4.477118492126465
    10. '
' → logprob: -4.477118492126465

Token 3194: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10890799015760422
    2. '(H' → logprob: -2.35890793800354
    3. 't' → logprob: -4.858908176422119
    4. ' (' → logprob: -8.108907699584961
    5. ',' → logprob: -8.358907699584961
    6. ' H' → logprob: -9.108907699584961
    7. '(
' → logprob: -9.608907699584961
    8. '(' → logprob: -10.233907699584961
    9. '   ' → logprob: -10.358907699584961
    10. ',H' → logprob: -10.483907699584961

Token 3195: '360' (ID: 9870)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7745675444602966
    2. 't' → logprob: -1.2745676040649414
    3. 'return' → logprob: -2.1495676040649414
    4. '   ' → logprob: -3.0245676040649414
    5. 'num' → logprob: -3.7745676040649414
    6. '_num' → logprob: -4.274567604064941
    7. '(H' → logprob: -4.274567604064941
    8. '_,' → logprob: -4.399567604064941
    9. '```' → logprob: -5.399567604064941
    10. '
' → logprob: -5.524567604064941

Token 3196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3795937522663735e-05
    2. '000' → logprob: -11.37502384185791
    3. '00' → logprob: -11.62502384185791
    4. ' ' → logprob: -13.37502384185791
    5. '   ' → logprob: -13.50002384185791
    6. '360' → logprob: -16.000022888183594
    7. '०' → logprob: -16.375022888183594
    8. '```' → logprob: -16.375022888183594
    9. ')' → logprob: -17.250022888183594
    10. '٠' → logprob: -17.375022888183594

Token 3197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5247251391410828
    2. '
' → logprob: -1.1497251987457275
    3. ',' → logprob: -2.7747251987457275
    4. '_num' → logprob: -4.524724960327148
    5. 'num' → logprob: -4.649724960327148
    6. 't' → logprob: -5.774724960327148
    7. ' t' → logprob: -6.899724960327148
    8. 'return' → logprob: -6.899724960327148
    9. '    
' → logprob: -7.274724960327148
    10. ' ,' → logprob: -7.649724960327148

Token 3198: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6474321484565735
    2. '   ' → logprob: -0.8974321484565735
    3. 't' → logprob: -3.7724320888519287
    4. '
' → logprob: -4.022432327270508
    5. ',' → logprob: -4.272432327270508
    6. 'num' → logprob: -4.647432327270508
    7. '```' → logprob: -5.772432327270508
    8. ' return' → logprob: -7.272432327270508
    9. ',
' → logprob: -8.147432327270508
    10. '    
' → logprob: -8.522432327270508

Token 3199: ' t' (ID: 260)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13027383387088776
    2. 't' (adapté à ' t') → logprob: -2.5052738189697266
    3. '   ' → logprob: -3.8802738189697266
    4. 'num' → logprob: -4.130273818969727
    5. ' return' → logprob: -6.255273818969727
    6. '```' → logprob: -6.880273818969727
    7. 'total' → logprob: -8.255273818969727
    8. ' t' → logprob: -8.630273818969727
    9. '`t' → logprob: -9.255273818969727
    10. '`' → logprob: -9.380273818969727

Token 3200: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.019174445420503616
    2. '_num' → logprob: -4.144174575805664
    3. '=' → logprob: -6.894174575805664
    4. '_mod' → logprob: -7.144174575805664
    5. ',' → logprob: -7.894174575805664
    6. '_,' → logprob: -8.144174575805664
    7. ' =' → logprob: -8.394174575805664
    8. '%' → logprob: -9.144174575805664
    9. '_' → logprob: -9.144174575805664
    10. '%=' → logprob: -10.394174575805664

Token 3201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.818384051322937
    2. '%=' → logprob: -0.943384051322937
    3. ' %=' → logprob: -2.6933841705322266
    4. ' =' → logprob: -2.9433841705322266
    5. ',' → logprob: -3.0683841705322266
    6. '%' → logprob: -6.068384170532227
    7. ',t' → logprob: -9.318384170532227
    8. '%,' → logprob: -9.568384170532227
    9. ' %' → logprob: -9.818384170532227
    10. '=t' → logprob: -10.193384170532227

Token 3202: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -7.493430894101039e-05
    2. ' t' → logprob: -9.500075340270996
    3. '(t' → logprob: -18.75007438659668
    4. '`t' → logprob: -19.25007438659668
    5. '   ' → logprob: -20.12507438659668
    6. 'round' → logprob: -20.37507438659668
    7. 'float' → logprob: -21.87507438659668
    8. '	t' → logprob: -22.37507438659668
    9. ' ' → logprob: -23.25007438659668
    10. '```' → logprob: -23.50007438659668

Token 3203: '_sol' (ID: 121444)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9134243726730347
    2. ' %' → logprob: -0.9134243726730347
    3. '_sol' → logprob: -1.6634243726730347
    4. '<|end|>' → logprob: -5.788424491882324
    5. '<|end|>' → logprob: -6.663424491882324
    6. ')' → logprob: -7.038424491882324
    7. '_mod' → logprob: -7.413424491882324
    8. '
' → logprob: -7.913424491882324
    9. '_' → logprob: -8.038424491882324
    10. '_SOL' → logprob: -8.163424491882324

Token 3204: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16022564470767975
    2. '%' → logprob: -1.9102256298065186
    3. ' ' → logprob: -14.160225868225098
    4. '%s' → logprob: -16.16022491455078
    5. ' ' → logprob: -16.28522491455078
    6. ')' → logprob: -16.28522491455078
    7. ' %=' → logprob: -16.53522491455078
    8. '   ' → logprob: -16.66022491455078
    9. '%(' → logprob: -16.66022491455078
    10. '%i' → logprob: -17.16022491455078

Token 3205: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.13296093046665192
    2. 'H' → logprob: -2.1329610347747803
    3. '(' → logprob: -5.132960796356201
    4. ' (' → logprob: -9.13296127319336
    5. '360' → logprob: -12.88296127319336
    6. ' H' → logprob: -13.50796127319336
    7. '(int' → logprob: -13.75796127319336
    8. '`' → logprob: -14.63296127319336
    9. '(T' → logprob: -14.75796127319336
    10. '_H' → logprob: -15.13296127319336

Token 3206: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.14384809136390686
    2. '*' → logprob: -2.018848180770874
    3. '0' → logprob: -7.893847942352295
    4. '   ' → logprob: -8.643848419189453
    5. ' *' → logprob: -8.768848419189453
    6. '```' → logprob: -8.893848419189453
    7. '\' → logprob: -9.393848419189453
    8. '000' → logprob: -9.643848419189453
    9. '_' → logprob: -10.268848419189453
    10. '`' → logprob: -10.768848419189453

Token 3207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '00' → logprob: -13.875001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.375001907348633
    5. '000' → logprob: -15.750001907348633
    6. '360' → logprob: -18.250001907348633
    7. '       ' → logprob: -18.875001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '०' → logprob: -19.875001907348633
    10. '```' → logprob: -20.125001907348633

Token 3208: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20399843156337738
    2. '
' → logprob: -1.7039984464645386
    3. '    
' → logprob: -6.828998565673828
    4. '
' → logprob: -7.328998565673828
    5. 'return' → logprob: -7.953998565673828
    6. ' return' → logprob: -9.078998565673828
    7. '<|end|>' → logprob: -9.453998565673828
    8. '	return' → logprob: -9.703998565673828
    9. '  
' → logprob: -9.828998565673828
    10. '	
' → logprob: -9.828998565673828

Token 3209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3843318521976471
    2. '
' → logprob: -1.3843318223953247
    3. '```' → logprob: -3.0093319416046143
    4. 'return' → logprob: -4.259331703186035
    5. '    
' → logprob: -5.759331703186035
    6. ' return' → logprob: -7.884331703186035
    7. '``' → logprob: -8.009331703186035
    8. ',
' → logprob: -8.134331703186035
    9. '
' → logprob: -8.259331703186035
    10. '  
' → logprob: -8.259331703186035

Token 3210: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.000619388825725764
    2. '   ' → logprob: -7.500619411468506
    3. ' return' → logprob: -9.875618934631348
    4. '```' → logprob: -11.250618934631348
    5. 'h' → logprob: -13.250618934631348
    6. '	return' → logprob: -16.125619888305664
    7. '
' → logprob: -17.000619888305664
    8. 'import' → logprob: -17.000619888305664
    9. '    
' → logprob: -17.625619888305664
    10. '#' (adapté à ' #') → logprob: -18.125619888305664

Token 3211: ' convertir' (ID: 79223)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1360350251197815
    2. 'h' → logprob: -2.1360349655151367
    3. '   ' → logprob: -4.761034965515137
    4. '#' → logprob: -8.136034965515137
    5. ' return' → logprob: -9.386034965515137
    6. '```' → logprob: -10.011034965515137
    7. 'result' → logprob: -10.511034965515137
    8. 't' → logprob: -10.636034965515137
    9. 'he' → logprob: -11.511034965515137
    10. '
' → logprob: -12.511034965515137

Token 3212: ' en' (ID: 469)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3772865533828735
    2. '(*' → logprob: -1.6272865533828735
    3. '(H' → logprob: -1.7522865533828735
    4. 'frac' → logprob: -1.8772865533828735
    5. '   ' → logprob: -2.627286434173584
    6. 't' → logprob: -3.252286434173584
    7. 'H' → logprob: -3.252286434173584
    8. 'return' → logprob: -3.252286434173584
    9. '=' → logprob: -4.627286434173584
    10. '*h' → logprob: -4.752286434173584

Token 3213: ' fraction' (ID: 33763)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3999190032482147
    2. 'frac' → logprob: -1.149919033050537
    3. 'return' → logprob: -4.774919033050537
    4. '```' → logprob: -6.524919033050537
    5. '   ' → logprob: -7.649919033050537
    6. '*h' → logprob: -7.899919033050537
    7. '*' → logprob: -8.274918556213379
    8. 'hours' → logprob: -8.399918556213379
    9. '#' → logprob: -8.524918556213379
    10. '(h' → logprob: -8.524918556213379

Token 3214: ' irré' (ID: 172316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.94136643409729
    2. 't' → logprob: -1.69136643409729
    3. 'num' → logprob: -2.06636643409729
    4. 'return' → logprob: -2.56636643409729
    5. 's' → logprob: -3.06636643409729
    6. '   ' → logprob: -3.19136643409729
    7. '
' → logprob: -3.94136643409729
    8. 'h' → logprob: -4.191366195678711
    9. '_,' → logprob: -4.316366195678711
    10. '```' → logprob: -4.316366195678711

Token 3215: 'duct' (ID: 1132)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.200926423072815
    2. '       ' → logprob: -1.700926423072815
    3. 't' → logprob: -2.2009263038635254
    4. 'n' → logprob: -2.4509263038635254
    5. 's' → logprob: -2.5759263038635254
    6. 'f' → logprob: -3.5759263038635254
    7. 'frac' → logprob: -3.8259263038635254
    8. '(n' → logprob: -3.9509263038635254
    9. '(s' → logprob: -3.9509263038635254
    10. 'v' → logprob: -3.9509263038635254

Token 3216: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -7.028536492725834e-05
    2. 'b' → logprob: -10.250070571899414
    3. 'sible' → logprob: -11.750070571899414
    4. '```' → logprob: -12.000070571899414
    5. 'uble' → logprob: -12.375070571899414
    6. '}' → logprob: -12.500070571899414
    7. '``' → logprob: -13.375070571899414
    8. 't' → logprob: -13.500070571899414
    9. '{
' → logprob: -13.750070571899414
    10. 'e' → logprob: -14.000070571899414

Token 3217: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020844558253884315
    2. '
' → logprob: -4.395844459533691
    3. ',' → logprob: -5.645844459533691
    4. 'num' → logprob: -6.145844459533691
    5. 'import' → logprob: -7.020844459533691
    6. '_num' → logprob: -7.520844459533691
    7. '#' → logprob: -8.270844459533691
    8. 'from' → logprob: -8.645844459533691
    9. ' =' → logprob: -8.770844459533691
    10. '```' → logprob: -9.395844459533691

Token 3218: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4926079213619232
    2. '   ' → logprob: -0.9926079511642456
    3. 'num' → logprob: -4.992608070373535
    4. '```' → logprob: -5.117608070373535
    5. 'import' → logprob: -5.492608070373535
    6. 's' → logprob: -7.617608070373535
    7. 'return' → logprob: -8.367608070373535
    8. 'n' → logprob: -8.617608070373535
    9. '#' → logprob: -8.867608070373535
    10. 't' → logprob: -9.117608070373535

Token 3219: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.006577650085091591
    2. 'num' → logprob: -6.256577491760254
    3. '   ' → logprob: -6.631577491760254
    4. '#' (adapté à ' #') → logprob: -6.881577491760254
    5. 'import' → logprob: -7.006577491760254
    6. '```' → logprob: -7.506577491760254
    7. 'return' → logprob: -8.881577491760254
    8. 'frac' → logprob: -9.006577491760254
    9. 'for' → logprob: -9.006577491760254
    10. 't' → logprob: -9.131577491760254

Token 3220: ' On' (ID: 2160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06985428184270859
    2. 'h' → logprob: -3.194854259490967
    3. 'num' → logprob: -4.819854259490967
    4. '#' → logprob: -5.194854259490967
    5. 'import' → logprob: -5.444854259490967
    6. 'return' → logprob: -5.569854259490967
    7. '```' → logprob: -6.319854259490967
    8. 'n' → logprob: -7.569854259490967
    9. '   ' → logprob: -7.694854259490967
    10. 'den' → logprob: -7.819854259490967

Token 3221: ' approx' (ID: 33956)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5336290597915649
    2. 'from' → logprob: -1.533629059791565
    3. '#' → logprob: -2.4086289405822754
    4. 'num' → logprob: -3.0336289405822754
    5. 'return' → logprob: -3.7836289405822754
    6. '_num' → logprob: -4.283628940582275
    7. 'def' → logprob: -4.408628940582275
    8. '   ' → logprob: -5.533628940582275
    9. '```' → logprob: -6.408628940582275
    10. ' #' → logprob: -7.158628940582275

Token 3222: 'ime' (ID: 642)
  Prédit: 'imate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imate' → logprob: -0.19098587334156036
    2. 'ime' → logprob: -1.815985918045044
    3. 'imer' → logprob: -5.065985679626465
    4. 'im' → logprob: -6.690985679626465
    5. ')' → logprob: -6.815985679626465
    6. 'i' → logprob: -7.690985679626465
    7. '   ' → logprob: -8.440985679626465
    8. '}' → logprob: -8.565985679626465
    9. 'imately' → logprob: -8.690985679626465
    10. '       ' → logprob: -8.815985679626465

Token 3223: ' t' (ID: 260)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.398514747619629
    2. '(' → logprob: -1.773514747619629
    3. '   ' → logprob: -1.773514747619629
    4. 't' → logprob: -2.023514747619629
    5. ',' → logprob: -3.023514747619629
    6. ' t' → logprob: -3.148514747619629
    7. ' ' → logprob: -3.523514747619629
    8. '(
' → logprob: -3.648514747619629
    9. 'import' → logprob: -4.023514747619629
    10. '```' → logprob: -4.148514747619629

Token 3224: '_sol' (ID: 121444)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.5388743877410889
    2. '   ' → logprob: -2.413874387741089
    3. ',' → logprob: -2.538874387741089
    4. ' =' → logprob: -3.288874387741089
    5. '_,' → logprob: -3.288874387741089
    6. '_' → logprob: -3.413874387741089
    7. 'import' → logprob: -3.913874387741089
    8. '=' → logprob: -3.913874387741089
    9. 't' → logprob: -4.038874626159668
    10. '_n' → logprob: -4.163874626159668

Token 3225: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45223468542099
    2. '   ' → logprob: -2.2022347450256348
    3. ' (' → logprob: -2.8272347450256348
    4. '(
' → logprob: -2.8272347450256348
    5. '(int' → logprob: -3.8272347450256348
    6. 'import' → logprob: -3.9522347450256348
    7. ',
' → logprob: -4.077234745025635
    8. '(round' → logprob: -4.452234745025635
    9. '(' → logprob: -4.577234745025635
    10. '```' → logprob: -4.577234745025635

Token 3226: ' une' (ID: 2463)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0383152961730957
    2. 'Fraction' → logprob: -1.4133152961730957
    3. '0' → logprob: -2.0383152961730957
    4. ' fractions' → logprob: -2.6633152961730957
    5. '1' → logprob: -3.2883152961730957
    6. 'fra' → logprob: -3.9133152961730957
    7. 'fraction' → logprob: -3.9133152961730957
    8. ' t' → logprob: -4.163315296173096
    9. ' ' → logprob: -4.288315296173096
    10. '(' → logprob: -4.413315296173096

Token 3227: ' fraction' (ID: 33763)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.6035840511322021
    2. 'fraction' → logprob: -1.4785840511322021
    3. 'from' → logprob: -2.103584051132202
    4. '#' → logprob: -3.728584051132202
    5. '(' → logprob: -4.228584289550781
    6. 'num' → logprob: -4.603584289550781
    7. 'import' → logprob: -4.728584289550781
    8. 'fra' → logprob: -5.103584289550781
    9. 't' → logprob: -5.103584289550781
    10. '0' → logprob: -5.603584289550781

Token 3228: ' n' (ID: 297)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.15876753628253937
    2. 'import' → logprob: -2.2837674617767334
    3. ',' → logprob: -3.9087674617767334
    4. 't' → logprob: -5.0337677001953125
    5. '#' → logprob: -5.4087677001953125
    6. '
' → logprob: -5.9087677001953125
    7. ' =' → logprob: -6.4087677001953125
    8. '(' → logprob: -6.5337677001953125
    9. 'def' → logprob: -6.7837677001953125
    10. ' from' → logprob: -6.7837677001953125

Token 3229: '/d' (ID: 6662)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30923521518707275
    2. '/' → logprob: -2.434235095977783
    3. '<|end|>' → logprob: -3.059235095977783
    4. '=' → logprob: -3.309235095977783
    5. 'umerator' → logprob: -3.559235095977783
    6. 'umer' → logprob: -4.184235095977783
    7. ')' → logprob: -4.559235095977783
    8. '.' → logprob: -4.934235095977783
    9. '#' → logprob: -5.309235095977783
    10. 'um' → logprob: -5.309235095977783

Token 3230: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7624480128288269
    2. 'import' → logprob: -1.2624480724334717
    3. '   ' → logprob: -2.7624480724334717
    4. 'from' → logprob: -2.7624480724334717
    5. ' (' → logprob: -3.5124480724334717
    6. ',
' → logprob: -3.5124480724334717
    7. ' ,' → logprob: -4.512447834014893
    8. 'def' → logprob: -5.012447834014893
    9. ' from' → logprob: -5.262447834014893
    10. ' with' → logprob: -5.387447834014893

Token 3231: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9960935115814209
    2. ',' → logprob: -1.371093511581421
    3. 'import' → logprob: -2.371093511581421
    4. '   ' → logprob: -2.621093511581421
    5. ' from' → logprob: -2.996093511581421
    6. ' (' → logprob: -3.371093511581421
    7. ',
' → logprob: -3.621093511581421
    8. '
' → logprob: -3.871093511581421
    9. '(' → logprob: -4.24609375
    10. '```' → logprob: -4.87109375

Token 3232: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8371288776397705
    2. 'from' → logprob: -1.4621288776397705
    3. '   ' → logprob: -1.9621288776397705
    4. ',' → logprob: -3.0871288776397705
    5. ' from' → logprob: -3.3371288776397705
    6. ' (' → logprob: -3.8371288776397705
    7. '```' → logprob: -4.337128639221191
    8. '(' → logprob: -4.462128639221191
    9. ')' → logprob: -4.712128639221191
    10. '
' → logprob: -4.837128639221191

Token 3233: ' Pour' (ID: 13931)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.37998270988464355
    2. 'import' → logprob: -1.3799827098846436
    3. '   ' → logprob: -3.2549827098846436
    4. ' from' → logprob: -4.254982948303223
    5. '#' → logprob: -5.879982948303223
    6. '```' → logprob: -5.879982948303223
    7. 'def' → logprob: -6.754982948303223
    8. 'n' → logprob: -7.129982948303223
    9. 'return' → logprob: -7.254982948303223
    10. '
' → logprob: -7.379982948303223

Token 3234: ' conserver' (ID: 116877)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8604780435562134
    2. 'from' → logprob: -1.2354780435562134
    3. 'import' → logprob: -2.360477924346924
    4. 'i' → logprob: -2.610477924346924
    5. '#' → logprob: -3.110477924346924
    6. 'max' → logprob: -3.610477924346924
    7. 'def' → logprob: -3.985477924346924
    8. 'n' → logprob: -4.110477924346924
    9. 'limit' → logprob: -5.485477924346924
    10. ' i' → logprob: -6.735477924346924

Token 3235: ' exact' (ID: 6354)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7550763487815857
    2. '10' → logprob: -1.3800764083862305
    3. '1' → logprob: -2.5050764083862305
    4. 'den' → logprob: -2.6300764083862305
    5. 'n' → logprob: -3.0050764083862305
    6. '100' → logprob: -3.5050764083862305
    7. '#' → logprob: -4.6300764083862305
    8. 't' → logprob: -5.1300764083862305
    9. 'import' → logprob: -5.5050764083862305
    10. ' ' → logprob: -5.6300764083862305

Token 3236: 'itude' (ID: 5962)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6070969700813293
    2. 't' → logprob: -1.2320969104766846
    3. ',' → logprob: -3.8570969104766846
    4. 'import' → logprob: -3.8570969104766846
    5. 'ation' → logprob: -3.8570969104766846
    6. 'num' → logprob: -4.107097148895264
    7. ' ' → logprob: -4.232097148895264
    8. 'e' → logprob: -4.857097148895264
    9. '   ' → logprob: -4.982097148895264
    10. ')' → logprob: -5.232097148895264

Token 3237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8358548283576965
    2. 'import' → logprob: -1.8358547687530518
    3. 'from' → logprob: -1.9608547687530518
    4. '   ' → logprob: -2.3358547687530518
    5. ' from' → logprob: -2.5858547687530518
    6. ' n' → logprob: -4.085855007171631
    7. ',
' → logprob: -4.460855007171631
    8. 'n' → logprob: -4.835855007171631
    9. ' import' → logprob: -5.085855007171631
    10. 't' → logprob: -5.085855007171631

Token 3238: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7789265513420105
    2. 'from' → logprob: -1.0289266109466553
    3. 'n' → logprob: -2.9039266109466553
    4. ' from' → logprob: -3.2789266109466553
    5. '#' → logprob: -3.6539266109466553
    6. 'd' → logprob: -4.403926372528076
    7. ' n' → logprob: -4.403926372528076
    8. '   ' → logprob: -4.653926372528076
    9. ' #' → logprob: -4.778926372528076
    10. ' import' → logprob: -4.778926372528076

Token 3239: ' peut' (ID: 9216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11512666940689087
    2. 'from' → logprob: -2.365126609802246
    3. 'def' → logprob: -5.365126609802246
    4. '#' → logprob: -5.740126609802246
    5. '```' → logprob: -5.865126609802246
    6. 'cherche' → logprob: -6.740126609802246
    7. 'continue' → logprob: -6.740126609802246
    8. 'importe' → logprob: -6.990126609802246
    9. ' from' → logprob: -8.865126609802246
    10. '
' → logprob: -8.990126609802246

Token 3240: ' approx' (ID: 33956)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6624867916107178
    2. 'from' → logprob: -0.7874867916107178
    3. 'limit' → logprob: -4.412487030029297
    4. '#' → logprob: -5.412487030029297
    5. 'approx' → logprob: -5.912487030029297
    6. 'return' → logprob: -6.162487030029297
    7. 'try' → logprob: -6.287487030029297
    8. 'use' → logprob: -6.412487030029297
    9. '```' → logprob: -6.412487030029297
    10. 'continue' → logprob: -7.537487030029297

Token 3241: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.026826750487089157
    2. 'import' → logprob: -4.151826858520508
    3. 'imate' → logprob: -5.276826858520508
    4. 'ime' → logprob: -5.526826858520508
    5. '=' → logprob: -8.526826858520508
    6. 'im' → logprob: -8.651826858520508
    7. 'umer' → logprob: -8.776826858520508
    8. 'imator' → logprob: -8.776826858520508
    9. 'imiter' → logprob: -8.901826858520508
    10. 'def' → logprob: -9.026826858520508

Token 3242: ' avec' (ID: 3937)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.833748459815979
    2. 'from' → logprob: -1.833748459815979
    3. ' from' → logprob: -2.0837483406066895
    4. ' ' → logprob: -2.5837483406066895
    5. '   ' → logprob: -2.7087483406066895
    6. ' #' → logprob: -3.0837483406066895
    7. '#' → logprob: -3.2087483406066895
    8. ' t' → logprob: -3.3337483406066895
    9. ',' → logprob: -3.4587483406066895
    10. 't' → logprob: -3.4587483406066895

Token 3243: ' dé' (ID: 2393)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8357619643211365
    2. '100' → logprob: -2.0857620239257812
    3. 'den' → logprob: -2.2107620239257812
    4. '10' → logprob: -2.2107620239257812
    5. '1' → logprob: -2.5857620239257812
    6. '#' → logprob: -3.5857620239257812
    7. 'import' → logprob: -3.7107620239257812
    8. 'num' → logprob: -3.7107620239257812
    9. '```' → logprob: -4.085762023925781
    10. 'Fraction' → logprob: -4.335762023925781

Token 3244: 'nom' (ID: 16206)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06640137732028961
    2. 'import' → logprob: -3.191401481628418
    3. 'from' → logprob: -4.191401481628418
    4. '#' → logprob: -6.191401481628418
    5. '100' → logprob: -6.941401481628418
    6. '```' → logprob: -7.191401481628418
    7. 'fault' → logprob: -7.316401481628418
    8. 'n' → logprob: -7.316401481628418
    9. 'fra' → logprob: -7.441401481628418
    10. 'limit' → logprob: -7.691401481628418

Token 3245: 'inate' (ID: 5180)
  Prédit: 'ominator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.12655319273471832
    2. '/' → logprob: -3.0015532970428467
    3. '_' → logprob: -5.001553058624268
    4. 'n' → logprob: -5.001553058624268
    5. 'umerator' → logprob: -5.001553058624268
    6. '=' → logprob: -5.126553058624268
    7. 'ator' → logprob: -5.251553058624268
    8. '}' → logprob: -5.501553058624268
    9. 'import' → logprob: -5.876553058624268
    10. ')' → logprob: -5.876553058624268

Token 3246: 'ur' (ID: 330)
  Prédit: 'tor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tor' → logprob: -0.12603488564491272
    2. 'ur' → logprob: -2.62603497505188
    3. 'teur' → logprob: -3.12603497505188
    4. 't' → logprob: -7.001034736633301
    5. 'tion' → logprob: -8.2510347366333
    6. 'ator' → logprob: -8.3760347366333
    7. 'te' → logprob: -8.6260347366333
    8. '```' → logprob: -8.8760347366333
    9. 'r' → logprob: -9.3760347366333
    10. 'ateur' → logprob: -9.8760347366333

Token 3247: ' petit' (ID: 20577)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3500012755393982
    2. ' ' → logprob: -1.850001335144043
    3. '10' → logprob: -2.350001335144043
    4. '=' → logprob: -3.600001335144043
    5. ' =' → logprob: -4.975001335144043
    6. '1' → logprob: -5.850001335144043
    7. '```' → logprob: -6.100001335144043
    8. ',' → logprob: -6.600001335144043
    9. ' ' → logprob: -7.475001335144043
    10. '`' → logprob: -8.725001335144043

Token 3248: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20234639942646027
    2. 'import' → logprob: -2.9523463249206543
    3. '/' → logprob: -3.7023463249206543
    4. ')' → logprob: -3.9523463249206543
    5. '   ' → logprob: -4.327346324920654
    6. '<|end|>' → logprob: -4.452346324920654
    7. '(' → logprob: -4.577346324920654
    8. ' (' → logprob: -4.577346324920654
    9. '.' → logprob: -4.952346324920654
    10. 'def' → logprob: -5.452346324920654

Token 3249: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3479520082473755
    2. ',' → logprob: -1.3479520082473755
    3. 'from' → logprob: -1.7229520082473755
    4. ' (' → logprob: -1.8479520082473755
    5. 'def' → logprob: -3.347951889038086
    6. '   ' → logprob: -3.472951889038086
    7. 'import' → logprob: -3.597951889038086
    8. '(
' → logprob: -4.972951889038086
    9. ' ' → logprob: -5.222951889038086
    10. '`' → logprob: -5.347951889038086

Token 3250: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8035643696784973
    2. '   ' → logprob: -1.9285643100738525
    3. 'import' → logprob: -2.1785643100738525
    4. ',' → logprob: -2.8035643100738525
    5. ' from' → logprob: -3.1785643100738525
    6. ')' → logprob: -3.8035643100738525
    7. '(' → logprob: -3.9285643100738525
    8. ' (' → logprob: -3.9285643100738525
    9. ' ' → logprob: -4.178564548492432
    10. 'def' → logprob: -4.178564548492432

Token 3251: ' mais' (ID: 2899)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0757051408290863
    2. 'import' → logprob: -2.950705051422119
    3. '   ' → logprob: -4.700705051422119
    4. 'def' → logprob: -5.200705051422119
    5. 'max' → logprob: -6.075705051422119
    6. 'limit' → logprob: -6.325705051422119
    7. ' from' → logprob: -7.200705051422119
    8. '#' → logprob: -7.450705051422119
    9. 'return' → logprob: -8.325705528259277
    10. '```' → logprob: -9.700705528259277

Token 3252: ' problème' (ID: 35630)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.758355975151062
    2. 'from' → logprob: -1.008355975151062
    3. '#' → logprob: -2.5083560943603516
    4. '   ' → logprob: -3.7583560943603516
    5. 'n' → logprob: -4.258356094360352
    6. ',' → logprob: -5.008356094360352
    7. 't' → logprob: -5.008356094360352
    8. 'return' → logprob: -5.383356094360352
    9. ' from' → logprob: -5.508356094360352
    10. ' #' → logprob: -5.633356094360352

Token 3253: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0969915390014648
    2. 'import' → logprob: -1.3469915390014648
    3. 'from' → logprob: -1.7219915390014648
    4. '#' → logprob: -2.346991539001465
    5. 'def' → logprob: -3.346991539001465
    6. ',
' → logprob: -3.846991539001465
    7. 't' → logprob: -4.721991539001465
    8. ' from' → logprob: -5.096991539001465
    9. ' (' → logprob: -5.221991539001465
    10. ')' → logprob: -5.221991539001465

Token 3254: ''ex' (ID: 23472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6947056651115417
    2. ''' → logprob: -1.9447057247161865
    3. '<|end|>' → logprob: -2.9447057247161865
    4. ' ' → logprob: -3.1947057247161865
    5. 'import' → logprob: -3.1947057247161865
    6. ' #' → logprob: -3.5697057247161865
    7. ')' → logprob: -4.069705486297607
    8. 'return' → logprob: -4.069705486297607
    9. 'limit' → logprob: -4.444705486297607
    10. '.' → logprob: -4.569705486297607

Token 3255: 'act' (ID: 588)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2565199136734009
    2. 'act' → logprob: -1.6315199136734009
    3. 'pression' → logprob: -4.381519794464111
    4. 'pr' → logprob: -5.006519794464111
    5. '```' → logprob: -5.506519794464111
    6. '
' → logprob: -6.756519794464111
    7. '``' → logprob: -7.131519794464111
    8. 'pl' → logprob: -7.131519794464111
    9. 't' → logprob: -7.256519794464111
    10. 'port' → logprob: -7.631519794464111

Token 3256: 'itude' (ID: 5962)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3852965831756592
    2. ',' → logprob: -2.260296583175659
    3. ')' → logprob: -2.760296583175659
    4. '/' → logprob: -3.510296583175659
    5. 'e' → logprob: -3.760296583175659
    6. 'ation' → logprob: -4.135296821594238
    7. 'u' → logprob: -4.260296821594238
    8. ':' → logprob: -4.885296821594238
    9. '#' → logprob: -5.010296821594238
    10. 'import' → logprob: -5.135296821594238

Token 3257: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4091794192790985
    2. 'import' → logprob: -1.909179449081421
    3. ',' → logprob: -2.034179449081421
    4. 'def' → logprob: -4.159179210662842
    5. ',
' → logprob: -4.909179210662842
    6. '(' → logprob: -5.034179210662842
    7. '
' → logprob: -5.159179210662842
    8. '#' → logprob: -5.159179210662842
    9. ' from' → logprob: -5.909179210662842
    10. ')' → logprob: -6.284179210662842

Token 3258: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5225526094436646
    2. 'import' → logprob: -1.3975526094436646
    3. '   ' → logprob: -2.147552490234375
    4. ' from' → logprob: -4.022552490234375
    5. '```' → logprob: -5.272552490234375
    6. 'return' → logprob: -5.272552490234375
    7. 'n' → logprob: -5.897552490234375
    8. 'def' → logprob: -6.022552490234375
    9. ',' → logprob: -6.022552490234375
    10. '#' → logprob: -6.647552490234375

Token 3259: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3006915748119354
    2. 'import' → logprob: -1.8006916046142578
    3. '   ' → logprob: -2.925691604614258
    4. '#' (adapté à ' #') → logprob: -4.175691604614258
    5. 'def' → logprob: -4.550691604614258
    6. '```' → logprob: -5.050691604614258
    7. '
' → logprob: -5.800691604614258
    8. 'limit' → logprob: -6.800691604614258
    9. 'max' → logprob: -7.050691604614258
    10. ' from' → logprob: -7.425691604614258

Token 3260: ' Solution' (ID: 20858)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20215857028961182
    2. 'import' → logprob: -1.9521585702896118
    3. 'def' → logprob: -4.327158451080322
    4. '#' → logprob: -4.827158451080322
    5. ' from' → logprob: -5.202158451080322
    6. 'max' → logprob: -5.452158451080322
    7. '
' → logprob: -5.702158451080322
    8. '   ' → logprob: -6.077158451080322
    9. '```' → logprob: -6.327158451080322
    10. 'limit' → logprob: -7.202158451080322

Token 3261: ' plus' (ID: 2932)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.065814733505249
    2. 'from' → logprob: -1.065814733505249
    3. ':' → logprob: -1.815814733505249
    4. '```' → logprob: -3.315814733505249
    5. ',' → logprob: -3.690814733505249
    6. '#' → logprob: -3.940814733505249
    7. '   ' → logprob: -4.065814971923828
    8. ':
' → logprob: -4.440814971923828
    9. ' =' → logprob: -4.565814971923828
    10. '=' → logprob: -4.690814971923828

Token 3262: ' précise' (ID: 95250)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7852874994277954
    2. '#' → logprob: -1.1602874994277954
    3. 'num' → logprob: -2.785287380218506
    4. 'def' → logprob: -3.035287380218506
    5. '_num' → logprob: -3.035287380218506
    6. 'from' → logprob: -3.160287380218506
    7. '=' → logprob: -4.660287380218506
    8. ' =' → logprob: -5.285287380218506
    9. ' #' → logprob: -5.660287380218506
    10. '```' → logprob: -6.160287380218506

Token 3263: ' :' (ID: 712)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6817815899848938
    2. 'import' → logprob: -0.8067815899848938
    3. 'def' → logprob: -4.556781768798828
    4. '#' → logprob: -4.806781768798828
    5. ' from' → logprob: -4.806781768798828
    6. ',' → logprob: -4.931781768798828
    7. '```' → logprob: -5.556781768798828
    8. ':' → logprob: -5.556781768798828
    9. '
' → logprob: -5.681781768798828
    10. '   ' → logprob: -7.431781768798828

Token 3264: ' expr' (ID: 30206)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10881315171718597
    2. 'import' → logprob: -2.3588130474090576
    3. 'def' → logprob: -5.358813285827637
    4. '#' → logprob: -6.108813285827637
    5. '```' → logprob: -7.108813285827637
    6. 'return' → logprob: -7.608813285827637
    7. ' from' → logprob: -8.733813285827637
    8. '   ' → logprob: -9.608813285827637
    9. 't' → logprob: -10.358813285827637
    10. 'n' → logprob: -10.608813285827637

Token 3265: 'imer' (ID: 3747)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16502130031585693
    2. 'imer' → logprob: -2.6650214195251465
    3. 'ime' → logprob: -3.0400214195251465
    4. 't' → logprob: -4.4150214195251465
    5. 'n' → logprob: -5.2900214195251465
    6. '=' → logprob: -5.5400214195251465
    7. 'from' → logprob: -5.9150214195251465
    8. '#' → logprob: -6.1650214195251465
    9. 'def' → logprob: -6.4150214195251465
    10. 'r' → logprob: -6.6650214195251465

Token 3266: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3321516811847687
    2. 'from' → logprob: -1.5821516513824463
    3. '#' → logprob: -3.5821516513824463
    4. 'import' → logprob: -3.7071516513824463
    5. '1' → logprob: -5.082151889801025
    6. '```' → logprob: -5.082151889801025
    7. '(' → logprob: -6.207151889801025
    8. 'H' → logprob: -6.332151889801025
    9. '360' → logprob: -6.707151889801025
    10. 'num' → logprob: -6.707151889801025

Token 3267: '_sol' (ID: 121444)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.11948363482952118
    2. '_sol' → logprob: -2.994483709335327
    3. 'num' → logprob: -3.369483709335327
    4. '=' → logprob: -4.744483470916748
    5. '#' → logprob: -5.119483470916748
    6. ' =' → logprob: -5.994483470916748
    7. ',' → logprob: -6.244483470916748
    8. '_s' → logprob: -6.744483470916748
    9. 'import' → logprob: -6.869483470916748
    10. '_n' → logprob: -6.994483470916748

Token 3268: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8335320353507996
    2. '=' → logprob: -1.4585320949554443
    3. ' as' → logprob: -2.4585320949554443
    4. 'as' → logprob: -2.7085320949554443
    5. 'import' → logprob: -2.9585320949554443
    6. ' =' → logprob: -3.2085320949554443
    7. '```' → logprob: -3.5835320949554443
    8. '_num' → logprob: -3.8335320949554443
    9. '#' → logprob: -4.083531856536865
    10. '_as' → logprob: -5.458531856536865

Token 3269: ' base' (ID: 3611)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.6247736215591431
    2. 'fraction' → logprob: -1.374773621559143
    3. 'fra' → logprob: -1.624773621559143
    4. 'num' → logprob: -5.7497735023498535
    5. 'frac' → logprob: -6.1247735023498535
    6. '```' → logprob: -6.2497735023498535
    7. '#' → logprob: -6.4997735023498535
    8. 'continued' → logprob: -6.6247735023498535
    9. 'numer' → logprob: -6.8747735023498535
    10. 'r' → logprob: -7.7497735023498535

Token 3270: ' secondes' (ID: 109098)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.35232606530189514
    2. ' ' → logprob: -1.6023260354995728
    3. '2' → logprob: -3.1023261547088623
    4. '```' → logprob: -3.9773261547088623
    5. '   ' → logprob: -4.602325916290283
    6. 'import' → logprob: -5.352325916290283
    7. '
' → logprob: -5.727325916290283
    8. '16' → logprob: -6.477325916290283
    9. ' of' → logprob: -6.727325916290283
    10. '`' → logprob: -6.727325916290283

Token 3271: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4681991636753082
    2. 'import' → logprob: -1.8431991338729858
    3. '#' → logprob: -2.8431992530822754
    4. ',' → logprob: -3.3431992530822754
    5. '
' → logprob: -3.5931992530822754
    6. '<|end|>' → logprob: -4.218199253082275
    7. 'def' → logprob: -4.468199253082275
    8. ')' → logprob: -4.468199253082275
    9. 'num' → logprob: -4.593199253082275
    10. '```' → logprob: -4.593199253082275

Token 3272: ' fraction' (ID: 33763)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.7721919417381287
    2. '#' → logprob: -2.1471920013427734
    3. '0' → logprob: -2.5221920013427734
    4. 'num' → logprob: -2.7721920013427734
    5. 'micro' → logprob: -3.0221920013427734
    6. 't' → logprob: -3.0221920013427734
    7. 's' → logprob: -3.7721920013427734
    8. 're' → logprob: -4.147192001342773
    9. 'import' → logprob: -4.272192001342773
    10. 'milliseconds' → logprob: -4.397192001342773

Token 3273: ' à' (ID: 1221)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9445786476135254
    2. '   ' → logprob: -1.4445786476135254
    3. ',' → logprob: -1.8195786476135254
    4. '#' → logprob: -2.8195786476135254
    5. 'def' → logprob: -3.3195786476135254
    6. 'from' → logprob: -3.8195786476135254
    7. 'n' → logprob: -4.194578647613525
    8. 'num' → logprob: -4.319578647613525
    9. '```' → logprob: -4.444578647613525
    10. 'return' → logprob: -4.819578647613525

Token 3274: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.7437061667442322
    2. 'den' → logprob: -1.243706226348877
    3. '100' → logprob: -2.243706226348877
    4. 't' → logprob: -3.993706226348877
    5. 'float' → logprob: -4.118706226348877
    6. '10' → logprob: -4.243706226348877
    7. 'fraction' → logprob: -4.618706226348877
    8. 'l' → logprob: -4.743706226348877
    9. '```' → logprob: -4.868706226348877
    10. '1' → logprob: -5.118706226348877

Token 3275: ' des' (ID: 731)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5077522993087769
    2. '   ' → logprob: -1.5077522993087769
    3. 'def' → logprob: -1.7577522993087769
    4. 'import' → logprob: -1.7577522993087769
    5. '#' → logprob: -2.5077524185180664
    6. 'from' → logprob: -3.6327524185180664
    7. 'de' → logprob: -3.7577524185180664
    8. 's' → logprob: -4.007752418518066
    9. '(' → logprob: -4.007752418518066
    10. ' of' → logprob: -4.507752418518066

Token 3276: ' solutions' (ID: 9368)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3370410203933716
    2. 'fra' → logprob: -1.3370410203933716
    3. 'import' → logprob: -1.5870410203933716
    4. 'from' → logprob: -2.337040901184082
    5. 'continued' → logprob: -3.337040901184082
    6. 'fraction' → logprob: -3.587040901184082
    7. '#' → logprob: -3.712040901184082
    8. '```' → logprob: -4.337040901184082
    9. '0' → logprob: -4.962040901184082
    10. ' fractions' → logprob: -5.212040901184082

Token 3277: ' analy' (ID: 12610)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9175965785980225
    2. 'from' → logprob: -1.0425965785980225
    3. '   ' → logprob: -1.9175965785980225
    4. 'def' → logprob: -2.7925965785980225
    5. '#' → logprob: -4.042596817016602
    6. '```' → logprob: -5.042596817016602
    7. 'return' → logprob: -5.292596817016602
    8. '
' → logprob: -5.917596817016602
    9. 'n' → logprob: -5.917596817016602
    10. ' from' → logprob: -6.667596817016602

Token 3278: 'tiques' (ID: 60539)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9132024049758911
    2. ')' → logprob: -1.2882024049758911
    3. '   ' → logprob: -2.1632022857666016
    4. 'x' → logprob: -2.2882022857666016
    5. '       ' → logprob: -3.9132022857666016
    6. '#' → logprob: -4.413202285766602
    7. '0' → logprob: -4.663202285766602
    8. 'n' → logprob: -4.913202285766602
    9. 'r' → logprob: -5.038202285766602
    10. ']' → logprob: -5.163202285766602

Token 3279: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41396549344062805
    2. '#' → logprob: -2.4139654636383057
    3. ',' → logprob: -2.6639654636383057
    4. '
' → logprob: -3.0389654636383057
    5. 'import' → logprob: -3.0389654636383057
    6. '<|end|>' → logprob: -3.2889654636383057
    7. ')' → logprob: -4.163965702056885
    8. '```' → logprob: -5.288965702056885
    9. 'def' → logprob: -5.413965702056885
    10. 'from' → logprob: -5.788965702056885

Token 3280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2064958810806274
    2. ',' → logprob: -1.9564958810806274
    3. '```' → logprob: -2.206495761871338
    4. '#' → logprob: -2.581495761871338
    5. 'n' → logprob: -2.831495761871338
    6. 'return' → logprob: -3.081495761871338
    7. 'def' → logprob: -3.331495761871338
    8. 'import' → logprob: -3.331495761871338
    9. '`' → logprob: -3.456495761871338
    10. ')' → logprob: -3.581495761871338

Token 3281: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1049681901931763
    2. '#' (adapté à ' #') → logprob: -1.3549681901931763
    3. '   ' → logprob: -1.4799681901931763
    4. 'import' → logprob: -2.4799680709838867
    5. 'n' → logprob: -3.4799680709838867
    6. 'den' → logprob: -4.354968070983887
    7. '```' → logprob: -4.354968070983887
    8. ' #' → logprob: -4.854968070983887
    9. 'return' → logprob: -5.354968070983887
    10. ' from' → logprob: -5.354968070983887

Token 3282: ' Or' (ID: 2604)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.45436856150627136
    2. '#' → logprob: -1.5793685913085938
    3. 'import' → logprob: -2.4543685913085938
    4. 'def' → logprob: -3.4543685913085938
    5. 'max' → logprob: -4.454368591308594
    6. 'n' → logprob: -4.579368591308594
    7. 'den' → logprob: -5.329368591308594
    8. 'return' → logprob: -5.954368591308594
    9. 'limit' → logprob: -5.954368591308594
    10. 'for' → logprob: -6.204368591308594

Token 3283: ' t' (ID: 260)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08655471354722977
    2. '   ' → logprob: -3.336554765701294
    3. 'import' → logprob: -3.586554765701294
    4. 'return' → logprob: -5.086554527282715
    5. 'from' → logprob: -5.586554527282715
    6. '
' → logprob: -5.836554527282715
    7. 't' → logprob: -6.211554527282715
    8. ' #' → logprob: -6.836554527282715
    9. '```' → logprob: -6.836554527282715
    10. 'n' → logprob: -7.086554527282715

Token 3284: '_sol' (ID: 121444)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.16417239606380463
    2. '_sol' → logprob: -2.039172410964966
    3. 'num' → logprob: -5.164172172546387
    4. '#' → logprob: -5.164172172546387
    5. 'import' → logprob: -5.914172172546387
    6. '_den' → logprob: -6.289172172546387
    7. 'def' → logprob: -7.164172172546387
    8. '_n' → logprob: -7.289172172546387
    9. 'return' → logprob: -7.289172172546387
    10. '_' → logprob: -7.664172172546387

Token 3285: ' est' (ID: 893)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.21000877022743225
    2. ',' → logprob: -2.3350088596343994
    3. '_n' → logprob: -2.5850088596343994
    4. ' =' → logprob: -5.46000862121582
    5. '<|end|>' → logprob: -6.46000862121582
    6. '_fraction' → logprob: -6.58500862121582
    7. 'num' → logprob: -7.21000862121582
    8. '#' → logprob: -7.33500862121582
    9. '_den' → logprob: -7.46000862121582
    10. '   ' → logprob: -7.46000862121582

Token 3286: ' exactement' (ID: 108701)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.35287702083587646
    2. 't' → logprob: -1.2278770208358765
    3. 'int' → logprob: -6.227877140045166
    4. ' float' → logprob: -6.352877140045166
    5. 'round' → logprob: -7.977877140045166
    6. ' t' → logprob: -8.352876663208008
    7. 'fraction' → logprob: -9.727876663208008
    8. '0' → logprob: -11.227876663208008
    9. 'flo' → logprob: -11.727876663208008
    10. '```' → logprob: -11.852876663208008

Token 3287: ' k' (ID: 372)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3580562472343445
    2. '0' → logprob: -2.2330563068389893
    3. 'int' → logprob: -3.4830563068389893
    4. ' t' → logprob: -3.7330563068389893
    5. '(' → logprob: -3.7330563068389893
    6. '360' → logprob: -3.8580563068389893
    7. '(H' → logprob: -3.9830563068389893
    8. '(t' → logprob: -4.48305606842041
    9. ' (' → logprob: -4.60805606842041
    10. 'fraction' → logprob: -4.60805606842041

Token 3288: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.024225229397416115
    2. '*' → logprob: -3.8992252349853516
    3. ',' → logprob: -5.899225234985352
    4. '<|end|>' → logprob: -7.774225234985352
    5. ' ,' → logprob: -8.899225234985352
    6. '```' → logprob: -9.524225234985352
    7. '#' → logprob: -9.649225234985352
    8. '<|end|>' → logprob: -9.774225234985352
    9. ')' → logprob: -10.149225234985352
    10. ' #' → logprob: -10.274225234985352

Token 3289: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.228561349213123e-05
    2. '(' → logprob: -10.625052452087402
    3. '36' → logprob: -11.625052452087402
    4. '180' → logprob: -11.875052452087402
    5. 'Fraction' → logprob: -12.375052452087402
    6. '60' → logprob: -13.250052452087402
    7. 'frac' → logprob: -13.500052452087402
    8. '```' → logprob: -13.625052452087402
    9. ' ' → logprob: -14.000052452087402
    10. 'fraction' → logprob: -14.500052452087402

Token 3290: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.254730224609375
    2. ' /' → logprob: -1.504730224609375
    3. ' //' → logprob: -7.254730224609375
    4. '//' → logprob: -7.379730224609375
    5. '   ' → logprob: -8.004730224609375
    6. ',' → logprob: -8.254730224609375
    7. '/k' → logprob: -8.629730224609375
    8. '#' → logprob: -9.004730224609375
    9. ' ' → logprob: -9.004730224609375
    10. ' ' → logprob: -9.129730224609375

Token 3291: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.1507536619901657
    2. '(' → logprob: -2.0257537364959717
    3. 'abs' → logprob: -6.275753498077393
    4. '(int' → logprob: -6.275753498077393
    5. '(abs' → logprob: -6.650753498077393
    6. '1' → logprob: -7.275753498077393
    7. '((' → logprob: -7.400753498077393
    8. 'int' → logprob: -7.650753498077393
    9. '(H' → logprob: -8.02575397491455
    10. ' (' → logprob: -8.27575397491455

Token 3292: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012439955957233906
    2. 'num' → logprob: -5.512439727783203
    3. '#' → logprob: -5.887439727783203
    4. 'n' → logprob: -6.387439727783203
    5. 'k' → logprob: -6.512439727783203
    6. 'den' → logprob: -6.762439727783203
    7. 't' → logprob: -7.262439727783203
    8. '```' → logprob: -8.387439727783203
    9. 'return' → logprob: -9.387439727783203
    10. 'def' → logprob: -9.637439727783203

Token 3293: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2052752673625946
    2. 'num' → logprob: -3.080275297164917
    3. 't' → logprob: -3.455275297164917
    4. 'n' → logprob: -3.455275297164917
    5. 'k' → logprob: -3.580275297164917
    6. '#' → logprob: -4.330275058746338
    7. ' k' → logprob: -4.455275058746338
    8. ' n' → logprob: -4.830275058746338
    9. ' t' → logprob: -5.330275058746338
    10. ' num' → logprob: -5.455275058746338

Token 3294: ' calc' (ID: 25691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.577778160572052
    2. 'can' → logprob: -1.0777781009674072
    3. 'return' → logprob: -2.8277781009674072
    4. 'num' → logprob: -3.4527781009674072
    5. '   ' → logprob: -5.952778339385986
    6. '_num' → logprob: -6.327778339385986
    7. ' can' → logprob: -6.827778339385986
    8. '=' → logprob: -7.202778339385986
    9. ' #' → logprob: -7.827778339385986
    10. '_can' → logprob: -8.327777862548828

Token 3295: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0038208607584238052
    2. 'cule' → logprob: -6.378820896148682
    3. 'ul' → logprob: -7.253820896148682
    4. 'ulate' → logprob: -7.253820896148682
    5. 't' → logprob: -7.878820896148682
    6. '```' → logprob: -9.503820419311523
    7. '#' → logprob: -10.128820419311523
    8. 'u' → logprob: -10.503820419311523
    9. 'uler' → logprob: -10.753820419311523
    10. 'l' → logprob: -10.753820419311523

Token 3296: ' t' (ID: 260)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.696780800819397
    2. 'num' → logprob: -0.821780800819397
    3. '   ' → logprob: -3.1967806816101074
    4. 't' → logprob: -4.696780681610107
    5. 'k' → logprob: -5.321780681610107
    6. '```' → logprob: -6.446780681610107
    7. '
' → logprob: -6.696780681610107
    8. 'numer' → logprob: -7.071780681610107
    9. ' numerator' → logprob: -7.196780681610107
    10. '(n' → logprob: -7.446780681610107

Token 3297: '_sol' (ID: 121444)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.005401307251304388
    2. 'num' → logprob: -5.755401134490967
    3. '_sol' → logprob: -6.255401134490967
    4. '_den' → logprob: -9.505401611328125
    5. '   ' → logprob: -10.005401611328125
    6. '_n' → logprob: -10.255401611328125
    7. '#' → logprob: -10.380401611328125
    8. '```' → logprob: -10.505401611328125
    9. 'sol' → logprob: -10.880401611328125
    10. 't' → logprob: -11.630401611328125

Token 3298: ' fraction' (ID: 33763)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.19454313814640045
    2. '_n' → logprob: -2.0695431232452393
    3. '=' → logprob: -3.6945431232452393
    4. ' =' → logprob: -3.9445431232452393
    5. 'num' → logprob: -6.319543361663818
    6. '   ' → logprob: -6.444543361663818
    7. ',' → logprob: -7.069543361663818
    8. '```' → logprob: -7.069543361663818
    9. 'n' → logprob: -7.694543361663818
    10. 't' → logprob: -8.81954288482666

Token 3299: 'naire' (ID: 30464)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.2536196708679199
    2. '   ' → logprob: -2.75361967086792
    3. 'num' → logprob: -3.12861967086792
    4. ' =' → logprob: -3.50361967086792
    5. 'n' → logprob: -3.75361967086792
    6. '_n' → logprob: -4.00361967086792
    7. '=' → logprob: -4.25361967086792
    8. 't' → logprob: -4.75361967086792
    9. '(num' → logprob: -5.75361967086792
    10. '(n' → logprob: -5.87861967086792

Token 3300: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9831085801124573
    2. 'n' → logprob: -1.6081085205078125
    3. 'num' → logprob: -1.7331085205078125
    4. 't' → logprob: -2.1081085205078125
    5. 'k' → logprob: -3.1081085205078125
    6. ',' → logprob: -3.7331085205078125
    7. '#' → logprob: -3.8581085205078125
    8. '```' → logprob: -4.7331085205078125
    9. '_n' → logprob: -5.3581085205078125
    10. 'numer' → logprob: -5.6081085205078125

Token 3301: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6384497880935669
    2. 't' → logprob: -1.388449788093567
    3. 'return' → logprob: -2.3884496688842773
    4. '   ' → logprob: -3.5134496688842773
    5. 'num' → logprob: -3.8884496688842773
    6. 'def' → logprob: -4.013449668884277
    7. 'n' → logprob: -4.513449668884277
    8. 'from' → logprob: -4.638449668884277
    9. 'numer' → logprob: -4.888449668884277
    10. '(k' → logprob: -5.138449668884277

Token 3302: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09808681905269623
    2. 'from' → logprob: -3.3480868339538574
    3. 't' → logprob: -3.8480868339538574
    4. 'def' → logprob: -4.598086833953857
    5. '#' (adapté à ' #') → logprob: -4.973086833953857
    6. 'num' → logprob: -5.098086833953857
    7. '(k' → logprob: -5.723086833953857
    8. '```' → logprob: -6.098086833953857
    9. 'numer' → logprob: -6.348086833953857
    10. 'c' → logprob: -6.598086833953857

Token 3303: ' Trou' (ID: 58947)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3365769684314728
    2. 'from' → logprob: -2.2115769386291504
    3. 'num' → logprob: -2.8365769386291504
    4. 'n' → logprob: -2.8365769386291504
    5. 'den' → logprob: -3.9615769386291504
    6. 't' → logprob: -4.33657693862915
    7. '#' → logprob: -4.83657693862915
    8. '   ' → logprob: -5.46157693862915
    9. 'numer' → logprob: -5.46157693862915
    10. '```' → logprob: -5.46157693862915

Token 3304: 'v' (ID: 85)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09231143444776535
    2. 't' → logprob: -3.592311382293701
    3. 'n' → logprob: -4.092311382293701
    4. 'rn' → logprob: -4.592311382293701
    5. 'r' → logprob: -4.717311382293701
    6. 's' → logprob: -4.842311382293701
    7. 'urn' → logprob: -5.217311382293701
    8. '#' → logprob: -5.717311382293701
    9. 'num' → logprob: -5.717311382293701
    10. '_num' → logprob: -6.842311382293701

Token 3305: 'ons' (ID: 1808)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1240810826420784
    2. 'er' → logprob: -2.6240811347961426
    3. 'r' → logprob: -4.749081134796143
    4. 'u' → logprob: -4.874081134796143
    5. 're' → logprob: -4.999081134796143
    6. 'e' → logprob: -5.124081134796143
    7. 't' → logprob: -5.374081134796143
    8. 'return' → logprob: -5.749081134796143
    9. '       ' → logprob: -6.749081134796143
    10. 's' → logprob: -6.874081134796143

Token 3306: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4240915775299072
    2. 'n' → logprob: -1.5490915775299072
    3. 'den' → logprob: -1.6740915775299072
    4. 'num' → logprob: -1.9240915775299072
    5. '#' → logprob: -2.0490915775299072
    6. 't' → logprob: -3.2990915775299072
    7. '   ' → logprob: -4.424091339111328
    8. 'def' → logprob: -4.674091339111328
    9. 'for' → logprob: -4.674091339111328
    10. '```' → logprob: -5.174091339111328

Token 3307: ' et' (ID: 859)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.45799970626831055
    2. 'for' → logprob: -1.0829997062683105
    3. 't' → logprob: -4.8329997062683105
    4. '=' → logprob: -5.3329997062683105
    5. '#' → logprob: -5.4579997062683105
    6. '```' → logprob: -5.5829997062683105
    7. ' =' → logprob: -6.7079997062683105
    8. 'found' → logprob: -7.2079997062683105
    9. '_candidates' → logprob: -7.2079997062683105
    10. ' for' → logprob: -7.2079997062683105

Token 3308: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.1021677628159523
    2. 'sign' → logprob: -2.352167844772339
    3. 'abs' → logprob: -6.72716760635376
    4. ' den' → logprob: -8.102168083190918
    5. 'd' → logprob: -9.227168083190918
    6. '(' → logprob: -9.477168083190918
    7. '(sign' → logprob: -9.727168083190918
    8. 'limit' → logprob: -9.977168083190918
    9. ' sign' → logprob: -10.102168083190918
    10. '#' → logprob: -10.227168083190918

Token 3309: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4404822289943695
    2. 'k' → logprob: -2.1904821395874023
    3. '#' → logprob: -2.4404821395874023
    4. 'if' → logprob: -2.9404821395874023
    5. '=' → logprob: -3.6904821395874023
    6. 't' → logprob: -4.440482139587402
    7. ' for' → logprob: -4.815482139587402
    8. ' =' → logprob: -4.815482139587402
    9. '   ' → logprob: -4.940482139587402
    10. '```' → logprob: -5.065482139587402

Token 3310: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08329622447490692
    2. '#' → logprob: -3.708296298980713
    3. 'num' → logprob: -4.083296298980713
    4. '   ' → logprob: -4.333296298980713
    5. 'for' → logprob: -4.583296298980713
    6. 't' → logprob: -5.458296298980713
    7. 'n' → logprob: -5.958296298980713
    8. 'if' → logprob: -5.958296298980713
    9. 'den' → logprob: -5.958296298980713
    10. '```' → logprob: -7.458296298980713

Token 3311: '_sol' (ID: 121444)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.04767975956201553
    2. 'num' → logprob: -3.5476796627044678
    3. '_n' → logprob: -5.047679901123047
    4. '_sol' → logprob: -5.547679901123047
    5. '_k' → logprob: -5.547679901123047
    6. 'k' → logprob: -6.922679901123047
    7. '=' → logprob: -7.672679901123047
    8. '_frac' → logprob: -7.922679901123047
    9. ' =' → logprob: -8.172679901123047
    10. '_fraction' → logprob: -8.297679901123047

Token 3312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0842938423156738
    2. ',' → logprob: -1.4592938423156738
    3. 'k' → logprob: -1.8342938423156738
    4. '_num' → logprob: -2.459293842315674
    5. '#' → logprob: -2.959293842315674
    6. ' =' → logprob: -3.459293842315674
    7. '```' → logprob: -3.834293842315674
    8. '_den' → logprob: -3.959293842315674
    9. '_k' → logprob: -4.459293842315674
    10. 'num' → logprob: -4.459293842315674

Token 3313: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0864981859922409
    2. 'c' → logprob: -2.586498260498047
    3. '360' → logprob: -5.461498260498047
    4. 'sign' → logprob: -7.211498260498047
    5. '(k' → logprob: -7.336498260498047
    6. 'Fraction' → logprob: -7.586498260498047
    7. '(c' → logprob: -8.336498260498047
    8. '(' → logprob: -8.336498260498047
    9. 'abs' → logprob: -8.586498260498047
    10. '1' → logprob: -8.711498260498047

Token 3314: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2856169044971466
    2. '*' → logprob: -1.6606168746948242
    3. ' *' → logprob: -2.910616874694824
    4. '*,' → logprob: -6.410616874694824
    5. ' ,' → logprob: -6.410616874694824
    6. '*num' → logprob: -8.410616874694824
    7. '#' → logprob: -9.035616874694824
    8. '```' → logprob: -10.160616874694824
    9. '
' → logprob: -10.285616874694824
    10. ' #' → logprob: -10.410616874694824

Token 3315: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00037263904232531786
    2. 'Fraction' → logprob: -8.250372886657715
    3. '36' → logprob: -9.500372886657715
    4. 'num' → logprob: -11.500372886657715
    5. 'sign' → logprob: -11.625372886657715
    6. 'fraction' → logprob: -12.125372886657715
    7. 'den' → logprob: -12.375372886657715
    8. ' ' → logprob: -12.875372886657715
    9. '(' → logprob: -13.125372886657715
    10. '1' → logprob: -14.500372886657715

Token 3316: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3025704622268677
    2. ' /' → logprob: -1.9275704622268677
    3. ',' → logprob: -2.177570343017578
    4. '<|end|>' → logprob: -7.802570343017578
    5. ' ,' → logprob: -8.052570343017578
    6. '*' → logprob: -8.177570343017578
    7. '   ' → logprob: -8.427570343017578
    8. '/k' → logprob: -8.552570343017578
    9. ' *' → logprob: -8.927570343017578
    10. '//' → logprob: -8.927570343017578

Token 3317: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.008631349541246891
    2. 'abs' → logprob: -4.758631229400635
    3. ' den' → logprob: -11.633631706237793
    4. '(abs' → logprob: -12.633631706237793
    5. '(' → logprob: -13.133631706237793
    6. 'd' → logprob: -13.758631706237793
    7. ' abs' → logprob: -14.758631706237793
    8. 'sign' → logprob: -15.133631706237793
    9. 'det' → logprob: -15.258631706237793
    10. 'int' → logprob: -15.383631706237793

Token 3318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5876003503799438
    2. ':' → logprob: -1.3376003503799438
    3. '*' → logprob: -3.2126002311706543
    4. '```' → logprob: -3.3376002311706543
    5. '   ' → logprob: -3.5876002311706543
    6. '=' → logprob: -4.337600231170654
    7. ')' → logprob: -4.712600231170654
    8. '#' → logprob: -4.837600231170654
    9. '`' → logprob: -5.337600231170654
    10. '.' → logprob: -5.712600231170654

Token 3319: ' donc' (ID: 14206)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5183717012405396
    2. 'k' → logprob: -1.2683717012405396
    3. '   ' → logprob: -3.51837158203125
    4. ',' → logprob: -3.64337158203125
    5. ' den' → logprob: -4.14337158203125
    6. '`' → logprob: -4.51837158203125
    7. '```' → logprob: -5.14337158203125
    8. '    ' → logprob: -5.51837158203125
    9. 'den' → logprob: -5.51837158203125
    10. '_,' → logprob: -5.89337158203125

Token 3320: ' num' (ID: 2269)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018876999616622925
    2. 'num' → logprob: -4.393877029418945
    3. 'n' → logprob: -5.643877029418945
    4. 't' → logprob: -6.643877029418945
    5. 'den' → logprob: -7.518877029418945
    6. 'for' → logprob: -8.893877029418945
    7. '`' → logprob: -9.018877029418945
    8. '#' → logprob: -9.018877029418945
    9. 'numer' → logprob: -9.143877029418945
    10. ' k' → logprob: -9.393877029418945

Token 3321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2320784032344818
    2. ',' → logprob: -2.4820783138275146
    3. '=k' → logprob: -2.6070783138275146
    4. ' =' → logprob: -3.2320783138275146
    5. 'k' → logprob: -4.732078552246094
    6. ',k' → logprob: -7.107078552246094
    7. '=
' → logprob: -8.982078552246094
    8. '```' → logprob: -9.107078552246094
    9. '=n' → logprob: -9.357078552246094
    10. '=c' → logprob: -9.732078552246094

Token 3322: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004113780800253153
    2. 'c' → logprob: -5.879113674163818
    3. 'sign' → logprob: -7.379113674163818
    4. 'abs' → logprob: -8.754114151000977
    5. '(k' → logprob: -8.879114151000977
    6. 'den' → logprob: -9.629114151000977
    7. '1' → logprob: -9.879114151000977
    8. 'int' → logprob: -10.129114151000977
    9. ' k' → logprob: -10.504114151000977
    10. '(c' → logprob: -10.629114151000977

Token 3323: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.023697754368185997
    2. ',' → logprob: -3.898697853088379
    3. ' *' → logprob: -6.023697853088379
    4. '*,' → logprob: -7.398697853088379
    5. '```' → logprob: -9.898697853088379
    6. '*num' → logprob: -10.773697853088379
    7. '*k' → logprob: -11.273697853088379
    8. ' ,' → logprob: -11.898697853088379
    9. '`' → logprob: -12.273697853088379
    10. ',
' → logprob: -12.273697853088379

Token 3324: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -6.704273118884885e-07
    2. '36' → logprob: -15.500000953674316
    3. 'sign' → logprob: -15.750000953674316
    4. '180' → logprob: -16.875
    5. '(' → logprob: -17.125
    6. ' ' → logprob: -17.75
    7. 'den' → logprob: -18.125
    8. '720' → logprob: -18.75
    9. 'num' → logprob: -18.875
    10. 'int' → logprob: -18.875

Token 3325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09466371685266495
    2. '*' → logprob: -3.594663619995117
    3. '
' → logprob: -3.719663619995117
    4. '//' → logprob: -4.344663619995117
    5. '*num' → logprob: -4.594663619995117
    6. '<|end|>' → logprob: -5.594663619995117
    7. '   ' → logprob: -6.219663619995117
    8. ' ,' → logprob: -6.594663619995117
    9. ' *' → logprob: -6.594663619995117
    10. '```' → logprob: -6.594663619995117

Token 3326: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.009822790510952473
    2. ' den' → logprob: -4.634822845458984
    3. '   ' → logprob: -10.134822845458984
    4. 'sign' → logprob: -11.634822845458984
    5. '360' → logprob: -12.259822845458984
    6. 'abs' → logprob: -12.384822845458984
    7. ',' → logprob: -12.634822845458984
    8. '       ' → logprob: -14.009822845458984
    9. ' ' → logprob: -14.009822845458984
    10. '  ' → logprob: -14.759822845458984

Token 3327: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5104979872703552
    2. '=' → logprob: -1.010498046875
    3. ' =' → logprob: -4.135498046875
    4. '   ' → logprob: -4.760498046875
    5. '_,' → logprob: -5.385498046875
    6. '```' → logprob: -6.885498046875
    7. '*' → logprob: -7.135498046875
    8. '#' → logprob: -7.260498046875
    9. '_den' → logprob: -7.635498046875
    10. '
' → logprob: -7.760498046875

Token 3328: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.16118644177913666
    2. 'abs' → logprob: -1.9111864566802979
    3. 'int' → logprob: -7.536186218261719
    4. 'sign' → logprob: -8.661186218261719
    5. ' den' → logprob: -8.911186218261719
    6. ' abs' → logprob: -9.786186218261719
    7. '(abs' → logprob: -10.911186218261719
    8. '   ' → logprob: -11.161186218261719
    9. 'd' → logprob: -11.536186218261719
    10. '1' → logprob: -12.786186218261719

Token 3329: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8665133118629456
    2. '
' → logprob: -0.9915133118629456
    3. '   ' → logprob: -2.116513252258301
    4. ',
' → logprob: -3.491513252258301
    5. '```' → logprob: -3.616513252258301
    6. '_k' → logprob: -5.741513252258301
    7. 'k' → logprob: -5.741513252258301
    8. ',k' → logprob: -5.866513252258301
    9. 'if' → logprob: -5.991513252258301
    10. '
' → logprob: -6.241513252258301

Token 3330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.658115029335022
    2. ',' → logprob: -0.783115029335022
    3. 'k' → logprob: -4.783114910125732
    4. 'num' → logprob: -5.283114910125732
    5. 'return' → logprob: -5.658114910125732
    6. '```' → logprob: -6.158114910125732
    7. ',k' → logprob: -6.283114910125732
    8. ',
' → logprob: -7.033114910125732
    9. '_,' → logprob: -7.658114910125732
    10. 't' → logprob: -7.908114910125732

Token 3331: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2430049628019333
    2. 'k' → logprob: -2.4930050373077393
    3. 'num' → logprob: -2.4930050373077393
    4. 'return' → logprob: -3.1180050373077393
    5. '```' → logprob: -5.99300479888916
    6. 't' → logprob: -6.61800479888916
    7. 'for' → logprob: -6.61800479888916
    8. '#' (adapté à ' #') → logprob: -8.11800479888916
    9. '       ' → logprob: -8.49300479888916
    10. 'if' → logprob: -8.99300479888916

Token 3332: ' Trou' (ID: 58947)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5173786282539368
    2. 'k' → logprob: -1.142378568649292
    3. 'return' → logprob: -3.142378568649292
    4. 'if' → logprob: -4.267378807067871
    5. 't' → logprob: -4.642378807067871
    6. '   ' → logprob: -4.767378807067871
    7. 'for' → logprob: -5.142378807067871
    8. '#' → logprob: -5.767378807067871
    9. 'n' → logprob: -8.392378807067871
    10. 'numer' → logprob: -8.517378807067871

Token 3333: 'v' (ID: 85)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6381095051765442
    2. '_num' → logprob: -2.1381094455718994
    3. '   ' → logprob: -2.3881094455718994
    4. 'm' → logprob: -2.6381094455718994
    5. 'rn' → logprob: -2.6381094455718994
    6. 'num' → logprob: -3.0131094455718994
    7. 'n' → logprob: -4.1381096839904785
    8. 'r' → logprob: -4.2631096839904785
    9. 's' → logprob: -4.5131096839904785
    10. '       ' → logprob: -5.1381096839904785

Token 3334: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.04566535726189613
    2. 'er' → logprob: -3.7956652641296387
    3. 'e' → logprob: -4.170665264129639
    4. '   ' → logprob: -6.295665264129639
    5. 'rons' → logprob: -6.420665264129639
    6. 'illons' → logprob: -6.795665264129639
    7. 'k' → logprob: -7.670665264129639
    8. 'ez' → logprob: -7.795665264129639
    9. 'r' → logprob: -8.545665740966797
    10. 'ers' → logprob: -8.920665740966797

Token 3335: ' quelle' (ID: 47442)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12784495949745178
    2. 'best' → logprob: -3.127845048904419
    3. 'min' → logprob: -3.377845048904419
    4. 'num' → logprob: -3.877845048904419
    5. 't' → logprob: -5.25284481048584
    6. ' k' → logprob: -5.62784481048584
    7. 'for' → logprob: -5.87784481048584
    8. ' min' → logprob: -6.87784481048584
    9. ' best' → logprob: -6.87784481048584
    10. 'candidate' → logprob: -6.87784481048584

Token 3336: ' expression' (ID: 12973)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.1955149620771408
    2. '#' → logprob: -2.3205149173736572
    3. 'case' → logprob: -3.6955149173736572
    4. '   ' → logprob: -4.570515155792236
    5. 'option' → logprob: -4.695515155792236
    6. 'k' → logprob: -4.820515155792236
    7. 'fraction' → logprob: -5.445515155792236
    8. 'for' → logprob: -5.945515155792236
    9. 's' → logprob: -6.070515155792236
    10. 'if' → logprob: -6.195515155792236

Token 3337: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01133262924849987
    2. 'est' → logprob: -5.2613325119018555
    3. 'num' → logprob: -6.5113325119018555
    4. '#' → logprob: -6.8863325119018555
    5. 'for' → logprob: -6.8863325119018555
    6. 'used' → logprob: -7.6363325119018555
    7. 'is' → logprob: -7.6363325119018555
    8. 'k' → logprob: -7.6363325119018555
    9. 'sign' → logprob: -8.011332511901855
    10. 't' → logprob: -8.511332511901855

Token 3338: ' donné' (ID: 52079)
  Prédit: 'produ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'produ' → logprob: -0.863398015499115
    2. 'est' → logprob: -1.4883980751037598
    3. 't' → logprob: -1.7383980751037598
    4. 'pr' → logprob: -3.3633980751037598
    5. 'cor' → logprob: -3.4883980751037598
    6. 'a' → logprob: -3.6133980751037598
    7. 'ét' → logprob: -3.9883980751037598
    8. 'part' → logprob: -4.61339807510376
    9. 's' → logprob: -4.73839807510376
    10. 'd' → logprob: -4.86339807510376

Token 3339: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.44391998648643494
    2. 'k' → logprob: -1.3189200162887573
    3. 'le' → logprob: -3.0689198970794678
    4. 'la' → logprob: -3.8189198970794678
    5. 'for' → logprob: -5.068920135498047
    6. 'sign' → logprob: -5.818920135498047
    7. 'l' → logprob: -5.818920135498047
    8. '#' → logprob: -6.068920135498047
    9. '   ' → logprob: -6.318920135498047
    10. 'c' → logprob: -6.568920135498047

Token 3340: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.026841843500733376
    2. 't' → logprob: -3.901841878890991
    3. 'me' → logprob: -5.901841640472412
    4. 'val' → logprob: -6.276841640472412
    5. 'der' → logprob: -7.151841640472412
    6. 'plus' → logprob: -8.40184211730957
    7. 'ré' → logprob: -8.90184211730957
    8. 'candidate' → logprob: -9.15184211730957
    9. 'fraction' → logprob: -9.52684211730957
    10. '#' → logprob: -9.90184211730957

Token 3341: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.026366373524069786
    2. 'for' → logprob: -3.7763664722442627
    3. '   ' → logprob: -6.651366233825684
    4. '```' → logprob: -7.401366233825684
    5. '#' → logprob: -7.651366233825684
    6. 'sign' → logprob: -8.526366233825684
    7. ' if' → logprob: -8.526366233825684
    8. 'k' → logprob: -8.651366233825684
    9. 'num' → logprob: -9.026366233825684
    10. '``' → logprob: -11.651366233825684

Token 3342: '_sol' (ID: 121444)
  Prédit: '_sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sign' → logprob: -1.105892539024353
    2. '_num' → logprob: -1.480892539024353
    3. 'if' → logprob: -2.4808926582336426
    4. 'sign' → logprob: -2.6058926582336426
    5. 'num' → logprob: -2.7308926582336426
    6. '_candidates' → logprob: -2.7308926582336426
    7. 'for' → logprob: -3.8558926582336426
    8. '_type' → logprob: -4.105892658233643
    9. 's' → logprob: -4.480892658233643
    10. '_found' → logprob: -4.605892658233643

Token 3343: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2983837127685547
    2. '#' → logprob: -1.5483837127685547
    3. 'for' → logprob: -1.6733837127685547
    4. 'k' → logprob: -1.7983837127685547
    5. 'num' → logprob: -2.7983837127685547
    6. 'sign' → logprob: -2.9233837127685547
    7. '```' → logprob: -4.173383712768555
    8. '
' → logprob: -4.548383712768555
    9. '   ' → logprob: -4.673383712768555
    10. ' for' → logprob: -6.423383712768555

Token 3344: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4085666835308075
    2. '#' → logprob: -1.7835667133331299
    3. 'if' → logprob: -2.40856671333313
    4. 'for' → logprob: -2.65856671333313
    5. 'k' → logprob: -6.033566474914551
    6. '``' → logprob: -6.283566474914551
    7. '   ' → logprob: -6.533566474914551
    8. 'num' → logprob: -7.908566474914551
    9. ' for' → logprob: -8.15856647491455
    10. ' if' → logprob: -8.15856647491455

Token 3345: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12125233560800552
    2. 'if' → logprob: -2.6212522983551025
    3. '#' (adapté à ' #') → logprob: -3.3712522983551025
    4. '```' → logprob: -5.371252536773682
    5. 'found' → logprob: -6.871252536773682
    6. 'num' → logprob: -7.246252536773682
    7. 'k' → logprob: -7.496252536773682
    8. 't' → logprob: -9.621252059936523
    9. '   ' → logprob: -10.621252059936523
    10. '``' → logprob: -11.121252059936523

Token 3346: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2491677701473236
    2. 'if' → logprob: -1.624167799949646
    3. '#' → logprob: -4.6241679191589355
    4. '   ' → logprob: -4.7491679191589355
    5. 'k' → logprob: -5.7491679191589355
    6. 'num' → logprob: -7.8741679191589355
    7. 'found' → logprob: -7.8741679191589355
    8. '```' → logprob: -7.8741679191589355
    9. 'i' → logprob: -8.249167442321777
    10. 'idx' → logprob: -9.749167442321777

Token 3347: ' ça' (ID: 13590)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.03458823636174202
    2. 'k' → logprob: -3.90958833694458
    3. 'candidate' → logprob: -4.65958833694458
    4. ' sign' → logprob: -6.78458833694458
    5. 't' → logprob: -7.15958833694458
    6. 'c' → logprob: -7.65958833694458
    7. 'num' → logprob: -8.034587860107422
    8. 'i' → logprob: -8.784587860107422
    9. 'token' → logprob: -8.784587860107422
    10. 'solution' → logprob: -8.784587860107422

Token 3348: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32262998819351196
    2. 'for' → logprob: -1.3226299285888672
    3. ' if' → logprob: -6.072629928588867
    4. 'if' → logprob: -6.197629928588867
    5. '#' → logprob: -6.447629928588867
    6. '   ' → logprob: -6.822629928588867
    7. '
' → logprob: -7.322629928588867
    8. 'found' → logprob: -7.322629928588867
    9. ' found' → logprob: -8.072629928588867
    10. 'break' → logprob: -8.697629928588867

Token 3349: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16239047050476074
    2. 'if' → logprob: -2.6623904705047607
    3. '#' → logprob: -2.7873904705047607
    4. 'found' → logprob: -4.41239070892334
    5. 'pass' → logprob: -5.78739070892334
    6. 'break' → logprob: -6.03739070892334
    7. ' for' → logprob: -7.53739070892334
    8. 'import' → logprob: -8.28739070892334
    9. ' if' → logprob: -9.91239070892334
    10. 't' → logprob: -10.41239070892334

Token 3350: ' re' (ID: 322)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2667561769485474
    2. 'continue' → logprob: -1.2667561769485474
    3. '#' → logprob: -1.3917561769485474
    4. 'par' → logprob: -3.266756057739258
    5. 're' → logprob: -3.516756057739258
    6. 'repr' → logprob: -3.891756057739258
    7. 'ret' → logprob: -4.016756057739258
    8. 'for' → logprob: -4.266756057739258
    9. 'tr' → logprob: -4.641756057739258
    10. 'def' → logprob: -4.641756057739258

Token 3351: '-ex' (ID: 15801)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.4676542282104492
    2. 'cherche' → logprob: -1.3426542282104492
    3. 'tour' → logprob: -2.342654228210449
    4. 'tr' → logprob: -4.842654228210449
    5. 'search' → logprob: -5.967654228210449
    6. 'par' → logprob: -6.592654228210449
    7. 't' → logprob: -6.967654228210449
    8. 'cher' → logprob: -7.217654228210449
    9. 'return' → logprob: -7.592654228210449
    10. 'pr' → logprob: -7.717654228210449

Token 3352: 'plore' (ID: 130596)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.687745988368988
    2. 'ecute' → logprob: -1.8127460479736328
    3. 'plore' → logprob: -1.8127460479736328
    4. 'pr' → logprob: -2.312746047973633
    5. 'tour' → logprob: -4.562746047973633
    6. 'tr' → logprob: -4.937746047973633
    7. 'éc' → logprob: -4.937746047973633
    8. 'continue' → logprob: -5.312746047973633
    9. 'effect' → logprob: -6.062746047973633
    10. 'prec' → logprob: -6.062746047973633

Token 3353: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6392002105712891
    2. '   ' → logprob: -1.889200210571289
    3. 'if' → logprob: -2.139200210571289
    4. ' for' → logprob: -2.264200210571289
    5. 'c' → logprob: -2.889200210571289
    6. ' if' → logprob: -3.889200210571289
    7. '#' → logprob: -4.264200210571289
    8. '       ' → logprob: -5.139200210571289
    9. ' candidates' → logprob: -6.639200210571289
    10. 'sign' → logprob: -7.389200210571289

Token 3354: ' candidats' (ID: 100182)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1841966062784195
    2. 'c' → logprob: -1.9341965913772583
    3. 'if' → logprob: -4.809196472167969
    4. '#' → logprob: -5.184196472167969
    5. 'sign' → logprob: -5.184196472167969
    6. 'def' → logprob: -6.809196472167969
    7. 'solutions' → logprob: -6.809196472167969
    8. 'candidate' → logprob: -7.309196472167969
    9. 'indices' → logprob: -8.434196472167969
    10. 'results' → logprob: -8.559196472167969

Token 3355: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.120668649673462
    2. '#' → logprob: -1.495668649673462
    3. '   ' → logprob: -1.870668649673462
    4. ' for' → logprob: -2.245668649673462
    5. '```' → logprob: -2.995668649673462
    6. ' candidates' → logprob: -3.370668649673462
    7. 'if' → logprob: -4.120668411254883
    8. 'num' → logprob: -4.120668411254883
    9. '_candidates' → logprob: -4.745668411254883
    10. '[' → logprob: -4.870668411254883

Token 3356: ' fraction' (ID: 33763)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.8214922547340393
    2. 're' → logprob: -2.0714921951293945
    3. 'for' → logprob: -2.9464921951293945
    4. 'c' → logprob: -3.0714921951293945
    5. 'repr' → logprob: -3.3214921951293945
    6. 'v' → logprob: -3.4464921951293945
    7. 'reg' → logprob: -3.5714921951293945
    8. 'reverse' → logprob: -3.5714921951293945
    9. 'range' → logprob: -3.8214921951293945
    10. '#' → logprob: -3.8214921951293945

Token 3357: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7222104072570801
    2. 'for' → logprob: -1.34721040725708
    3. '#' → logprob: -3.09721040725708
    4. '       ' → logprob: -3.34721040725708
    5. '```' → logprob: -3.72221040725708
    6. ':' → logprob: -3.97221040725708
    7. 'num' → logprob: -4.09721040725708
    8. ')' → logprob: -4.09721040725708
    9. '[' → logprob: -4.22221040725708
    10. '(' → logprob: -4.47221040725708

Token 3358: ' retrouver' (ID: 53435)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11744287610054016
    2. 'token' → logprob: -3.7424428462982178
    3. 'None' → logprob: -4.367443084716797
    4. 'val' → logprob: -4.492443084716797
    5. 'identifier' → logprob: -4.742443084716797
    6. 't' → logprob: -4.867443084716797
    7. 'i' → logprob: -4.992443084716797
    8. 'v' → logprob: -5.117443084716797
    9. 'tr' → logprob: -5.367443084716797
    10. 'sign' → logprob: -5.617443084716797

Token 3359: ' fraction' (ID: 33763)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07155145704746246
    2. 'sign' → logprob: -3.196551561355591
    3. 'the' → logprob: -3.821551561355591
    4. 't' → logprob: -6.071551322937012
    5. 'le' → logprob: -6.946551322937012
    6. '(sign' → logprob: -7.446551322937012
    7. 'la' → logprob: -7.571551322937012
    8. '(k' → logprob: -7.696551322937012
    9. '(' → logprob: -7.821551322937012
    10. 'l' → logprob: -8.696551322937012

Token 3360: ' exacte' (ID: 188756)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1552591621875763
    2. '   ' → logprob: -2.780259132385254
    3. ' for' → logprob: -3.155259132385254
    4. 'if' → logprob: -5.030259132385254
    5. '```' → logprob: -5.030259132385254
    6. 'num' → logprob: -5.155259132385254
    7. 'found' → logprob: -5.280259132385254
    8. '#' → logprob: -5.530259132385254
    9. 'k' → logprob: -6.030259132385254
    10. '       ' → logprob: -6.405259132385254

Token 3361: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3019956350326538
    2. '   ' → logprob: -1.5519956350326538
    3. 'found' → logprob: -4.426995754241943
    4. 'best' → logprob: -4.426995754241943
    5. '#' → logprob: -5.426995754241943
    6. ' for' → logprob: -5.551995754241943
    7. 'k' → logprob: -5.551995754241943
    8. 'def' → logprob: -6.176995754241943
    9. 'num' → logprob: -6.176995754241943
    10. 'min' → logprob: -6.176995754241943

Token 3362: 'k' (ID: 74)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29008913040161133
    2. 'found' → logprob: -1.5400891304016113
    3. '#' → logprob: -4.540089130401611
    4. '   ' → logprob: -4.540089130401611
    5. 'best' → logprob: -5.540089130401611
    6. 'num' → logprob: -5.540089130401611
    7. 'k' → logprob: -5.915089130401611
    8. 'if' → logprob: -6.540089130401611
    9. 'def' → logprob: -6.665089130401611
    10. ' for' → logprob: -6.915089130401611

Token 3363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42395731806755066
    2. '_candidates' → logprob: -1.923957347869873
    3. '_found' → logprob: -2.798957347869873
    4. '_candidate' → logprob: -3.298957347869873
    5. 's' → logprob: -3.923957347869873
    6. '_,' → logprob: -4.423957347869873
    7. '_val' → logprob: -4.548957347869873
    8. '#' → logprob: -4.923957347869873
    9. '_num' → logprob: -5.048957347869873
    10. ')' → logprob: -5.298957347869873

Token 3364: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.024756496772170067
    2. 'sign' → logprob: -4.52475643157959
    3. 'abs' → logprob: -5.52475643157959
    4. '360' → logprob: -5.64975643157959
    5. ')' → logprob: -6.14975643157959
    6. ' den' → logprob: -6.77475643157959
    7. '[' → logprob: -6.89975643157959
    8. '#' → logprob: -7.77475643157959
    9. '(' → logprob: -8.52475643157959
    10. 'None' → logprob: -8.64975643157959

Token 3365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04418228566646576
    2. '):' → logprob: -4.169182300567627
    3. ')
' → logprob: -4.794182300567627
    4. '):
' → logprob: -4.794182300567627
    5. ',' → logprob: -5.794182300567627
    6. 's' → logprob: -6.169182300567627
    7. '),' → logprob: -6.544182300567627
    8. '   ' → logprob: -7.044182300567627
    9. '=' → logprob: -7.669182300567627
    10. 'def' → logprob: -7.919182300567627

Token 3366: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1262381225824356
    2. '   ' → logprob: -2.2512381076812744
    3. 'if' → logprob: -4.6262383460998535
    4. ' for' → logprob: -6.8762383460998535
    5. 'k' → logprob: -7.0012383460998535
    6. '```' → logprob: -7.2512383460998535
    7. '#' → logprob: -8.001237869262695
    8. 'found' → logprob: -8.251237869262695
    9. 'sign' → logprob: -8.876237869262695
    10. '       ' → logprob: -10.501237869262695

Token 3367: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22714278101921082
    2. '   ' → logprob: -2.352142810821533
    3. '```' → logprob: -2.477142810821533
    4. 'k' → logprob: -4.352142810821533
    5. '#' (adapté à ' #') → logprob: -5.602142810821533
    6. 'num' → logprob: -5.977142810821533
    7. 'found' → logprob: -6.727142810821533
    8. '``' → logprob: -6.852142810821533
    9. ' for' → logprob: -6.977142810821533
    10. 't' → logprob: -7.477142810821533

Token 3368: ' Toutefois' (ID: 135502)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012742014601826668
    2. 'k' → logprob: -5.012742042541504
    3. '   ' → logprob: -6.387742042541504
    4. '```' → logprob: -6.512742042541504
    5. 'found' → logprob: -7.387742042541504
    6. '#' → logprob: -7.387742042541504
    7. 'if' → logprob: -7.512742042541504
    8. ' for' → logprob: -8.137742042541504
    9. 'num' → logprob: -8.637742042541504
    10. 'from' → logprob: -8.762742042541504

Token 3369: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16103778779506683
    2. '   ' → logprob: -2.5360376834869385
    3. 'for' → logprob: -2.7860376834869385
    4. 'num' → logprob: -6.286037921905518
    5. '       ' → logprob: -6.411037921905518
    6. 'k' → logprob: -6.536037921905518
    7. ' for' → logprob: -6.911037921905518
    8. 'continue' → logprob: -7.161037921905518
    9. '...' → logprob: -8.16103744506836
    10. ' #' → logprob: -8.66103744506836

Token 3370: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4790225625038147
    2. 'for' → logprob: -0.9790225625038147
    3. 'return' → logprob: -6.72902250289917
    4. 'k' → logprob: -6.85402250289917
    5. 'pass' → logprob: -7.35402250289917
    6. 'num' → logprob: -7.72902250289917
    7. '   ' → logprob: -7.72902250289917
    8. 'def' → logprob: -8.354022979736328
    9. 'c' → logprob: -8.479022979736328
    10. 'found' → logprob: -8.604022979736328

Token 3371: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3526102304458618
    2. '#' → logprob: -1.3526102304458618
    3. 'repr' → logprob: -4.602610111236572
    4. 'return' → logprob: -4.727610111236572
    5. 'arr' → logprob: -5.852610111236572
    6. 'n' → logprob: -5.852610111236572
    7. 's' → logprob: -6.352610111236572
    8. 'resume' → logprob: -6.477610111236572
    9. 'p' → logprob: -6.727610111236572
    10. 'continu' → logprob: -7.102610111236572

Token 3372: ' approx' (ID: 33956)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.2305508255958557
    2. '#' → logprob: -2.105550765991211
    3. 'prendre' → logprob: -4.105550765991211
    4. 'contin' → logprob: -4.230550765991211
    5. 'faire' → logprob: -4.605550765991211
    6. 'return' → logprob: -4.605550765991211
    7. 'continue' → logprob: -5.105550765991211
    8. 'ré' → logprob: -5.355550765991211
    9. 'voir' → logprob: -5.980550765991211
    10. 'ret' → logprob: -6.105550765991211

Token 3373: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.0003718046355061233
    2. 'imiter' → logprob: -8.875371932983398
    3. 'imate' → logprob: -9.500371932983398
    4. 'import' → logprob: -9.750371932983398
    5. '   ' → logprob: -10.875371932983398
    6. '       ' → logprob: -10.875371932983398
    7. 'im' → logprob: -11.250371932983398
    8. 'imator' → logprob: -11.875371932983398
    9. '```' → logprob: -12.250371932983398
    10. '#' → logprob: -12.250371932983398

Token 3374: ' puisqu' (ID: 97464)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3214716911315918
    2. '...' → logprob: -2.571471691131592
    3. '#' → logprob: -2.696471691131592
    4. '<|end|>' → logprob: -2.821471691131592
    5. '       ' → logprob: -3.946471691131592
    6. 'num' → logprob: -4.946471691131592
    7. ')' → logprob: -4.946471691131592
    8. '    ' → logprob: -5.321471691131592
    9. '```' → logprob: -5.321471691131592
    10. ' ' → logprob: -5.946471691131592

Token 3375: ' on' (ID: 402)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2755604088306427
    2. 'not' → logprob: -2.4005603790283203
    3. 't' → logprob: -2.9005603790283203
    4. 'k' → logprob: -3.5255603790283203
    5. '#' → logprob: -3.7755603790283203
    6. ' not' → logprob: -5.02556037902832
    7. ' len' → logprob: -5.02556037902832
    8. 'le' → logprob: -5.40056037902832
    9. ' t' → logprob: -5.40056037902832
    10. 'la' → logprob: -5.52556037902832

Token 3376: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.056532375514507294
    2. 'know' → logprob: -4.306532382965088
    3. '#' → logprob: -5.056532382965088
    4. 'already' → logprob: -5.181532382965088
    5. 'have' → logprob: -5.306532382965088
    6. 'n' → logprob: -5.431532382965088
    7. 'cherche' → logprob: -5.806532382965088
    8. 'con' → logprob: -5.806532382965088
    9. 'arr' → logprob: -6.306532382965088
    10. 'poss' → logprob: -6.556532382965088

Token 3377: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.154152274131775
    2. 'k' → logprob: -1.779152274131775
    3. 'le' → logprob: -2.0291523933410645
    4. 'la' → logprob: -2.1541523933410645
    5. 'len' → logprob: -2.2791523933410645
    6. 't' → logprob: -2.6541523933410645
    7. 'c' → logprob: -3.7791523933410645
    8. 'dé' → logprob: -3.7791523933410645
    9. 'already' → logprob: -4.2791523933410645
    10. 'l' → logprob: -4.5291523933410645

Token 3378: ' fraction' (ID: 33763)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7891976237297058
    2. 'for' → logprob: -2.1641976833343506
    3. 'k' → logprob: -2.4141976833343506
    4. 'c' → logprob: -2.6641976833343506
    5. '```' → logprob: -3.0391976833343506
    6. 'continue' → logprob: -3.6641976833343506
    7. 'return' → logprob: -3.6641976833343506
    8. 'def' → logprob: -3.6641976833343506
    9. 'range' → logprob: -4.0391974449157715
    10. '...' → logprob: -4.2891974449157715

Token 3379: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1980609893798828
    2. ')' → logprob: -1.4480609893798828
    3. ',' → logprob: -2.573060989379883
    4. '<|end|>' → logprob: -2.573060989379883
    5. '/' → logprob: -2.823060989379883
    6. '#' → logprob: -3.073060989379883
    7. '...' → logprob: -3.448060989379883
    8. '_' → logprob: -3.948060989379883
    9. ' ' → logprob: -4.573060989379883
    10. '.' → logprob: -4.573060989379883

Token 3380: '_sol' (ID: 121444)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.34665918350219727
    2. '_sol' → logprob: -1.3466591835021973
    3. 'num' → logprob: -3.5966591835021973
    4. 'sol' → logprob: -6.471659183502197
    5. '_den' → logprob: -7.846659183502197
    6. '#' → logprob: -7.971659183502197
    7. '_type' → logprob: -8.221658706665039
    8. 'import' → logprob: -8.221658706665039
    9. '_nom' → logprob: -8.221658706665039
    10. '_s' → logprob: -8.346658706665039

Token 3381: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5285083055496216
    2. ',' → logprob: -2.028508186340332
    3. ')' → logprob: -2.528508186340332
    4. '#' → logprob: -3.278508186340332
    5. '_num' → logprob: -3.653508186340332
    6. '<|end|>' → logprob: -4.028508186340332
    7. '/' → logprob: -4.153508186340332
    8. ' ' → logprob: -4.153508186340332
    9. 'num' → logprob: -4.903508186340332
    10. '```' → logprob: -5.028508186340332

Token 3382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09454486519098282
    2. 'for' → logprob: -3.5945448875427246
    3. '```' → logprob: -3.7195448875427246
    4. '#' → logprob: -4.344544887542725
    5. 'k' → logprob: -4.969544887542725
    6. ' for' → logprob: -5.219544887542725
    7. 'if' → logprob: -5.844544887542725
    8. 'def' → logprob: -5.969544887542725
    9. ',' → logprob: -6.594544887542725
    10. '       ' → logprob: -6.719544887542725

Token 3383: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.404060423374176
    2. '   ' → logprob: -1.2790603637695312
    3. '```' → logprob: -3.6540603637695312
    4. 'k' → logprob: -4.404060363769531
    5. 'num' → logprob: -5.279060363769531
    6. '#' (adapté à ' #') → logprob: -5.529060363769531
    7. ' for' → logprob: -6.154060363769531
    8. 'found' → logprob: -6.779060363769531
    9. 'if' → logprob: -7.154060363769531
    10. 't' → logprob: -7.279060363769531

Token 3384: ' On' (ID: 2160)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2054888010025024
    2. 'for' → logprob: -1.5804888010025024
    3. '```' → logprob: -1.5804888010025024
    4. '   ' → logprob: -1.7054888010025024
    5. 'def' → logprob: -3.080488681793213
    6. 'num' → logprob: -3.955488681793213
    7. '#' → logprob: -4.455488681793213
    8. 'return' → logprob: -4.455488681793213
    9. 'if' → logprob: -5.455488681793213
    10. '       ' → logprob: -5.455488681793213

Token 3385: ' ret' (ID: 2881)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8395292162895203
    2. '#' → logprob: -1.339529275894165
    3. 'num' → logprob: -2.589529275894165
    4. 'for' → logprob: -2.839529275894165
    5. 'continue' → logprob: -2.839529275894165
    6. 'def' → logprob: -3.089529275894165
    7. '   ' → logprob: -3.839529275894165
    8. ' return' → logprob: -4.714529037475586
    9. '```' → logprob: -4.839529037475586
    10. '       ' → logprob: -5.339529037475586

Token 3386: 'ient' (ID: 773)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.0001049736310960725
    2. 'urne' → logprob: -10.125104904174805
    3. '   ' → logprob: -10.750104904174805
    4. '       ' → logprob: -11.125104904174805
    5. 'ur' → logprob: -11.625104904174805
    6. 'r' → logprob: -12.250104904174805
    7. 'urning' → logprob: -12.625104904174805
    8. '           ' → logprob: -13.375104904174805
    9. '
' → logprob: -13.500104904174805
    10. 'rn' → logprob: -13.625104904174805

Token 3387: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08365976065397263
    2. 't' → logprob: -2.5836596488952637
    3. 'num' → logprob: -6.083659648895264
    4. '(k' → logprob: -6.208659648895264
    5. ' k' → logprob: -8.708660125732422
    6. '(t' → logprob: -9.708660125732422
    7. '(' → logprob: -9.833660125732422
    8. ' t' → logprob: -10.083660125732422
    9. '   ' → logprob: -10.333660125732422
    10. ' (' → logprob: -10.333660125732422

Token 3388: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4406261742115021
    2. 'best' → logprob: -2.0656261444091797
    3. 'num' → logprob: -2.3156261444091797
    4. '#' → logprob: -2.9406261444091797
    5. 'for' → logprob: -3.6906261444091797
    6. 'def' → logprob: -4.31562614440918
    7. 'candidate' → logprob: -4.31562614440918
    8. 'min' → logprob: -5.19062614440918
    9. 'sign' → logprob: -5.19062614440918
    10. 't' → logprob: -5.31562614440918

Token 3389: ' fraction' (ID: 33763)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24275092780590057
    2. 'k' → logprob: -1.617750883102417
    3. 'num' → logprob: -4.742751121520996
    4. ',' → logprob: -5.367751121520996
    5. 'return' → logprob: -6.492751121520996
    6. '```' → logprob: -7.617751121520996
    7. 'import' → logprob: -8.492751121520996
    8. '`' → logprob: -8.617751121520996
    9. ' k' → logprob: -8.742751121520996
    10. '   ' → logprob: -8.867751121520996

Token 3390: 'nelle' (ID: 30805)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.545730710029602
    2. '_num' → logprob: -1.545730710029602
    3. 't' → logprob: -2.9207305908203125
    4. 'n' → logprob: -2.9207305908203125
    5. '(num' → logprob: -3.4207305908203125
    6. '(' → logprob: -3.7957305908203125
    7. '(n' → logprob: -4.4207305908203125
    8. '   ' → logprob: -4.5457305908203125
    9. '(k' → logprob: -5.4207305908203125
    10. '(
' → logprob: -6.1707305908203125

Token 3391: ' exacte' (ID: 188756)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.152562141418457
    2. 't' → logprob: -1.277562141418457
    3. 'k' → logprob: -1.902562141418457
    4. ',' → logprob: -2.152562141418457
    5. '(' → logprob: -3.027562141418457
    6. '(k' → logprob: -3.902562141418457
    7. '_num' → logprob: -4.152562141418457
    8. '=' → logprob: -4.152562141418457
    9. '(num' → logprob: -4.652562141418457
    10. '(
' → logprob: -5.277562141418457

Token 3392: ' utilisée' (ID: 106548)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04512152448296547
    2. 'k' → logprob: -3.670121431350708
    3. 'num' → logprob: -4.670121669769287
    4. 'return' → logprob: -5.920121669769287
    5. 't' → logprob: -6.170121669769287
    6. 'for' → logprob: -6.545121669769287
    7. 'if' → logprob: -6.795121669769287
    8. 'def' → logprob: -7.295121669769287
    9. '#' → logprob: -7.795121669769287
    10. '```' → logprob: -8.045121192932129

Token 3393: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40249040722846985
    2. 'k' → logprob: -1.7774903774261475
    3. 'for' → logprob: -2.7774903774261475
    4. 'num' → logprob: -2.7774903774261475
    5. 't' → logprob: -4.402490615844727
    6. 'if' → logprob: -4.652490615844727
    7. '#' → logprob: -5.027490615844727
    8. '```' → logprob: -5.277490615844727
    9. 'n' → logprob: -6.527490615844727
    10. ' for' → logprob: -7.152490615844727

Token 3394: '-dessus' (ID: 74812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4390558004379272
    2. 'rc' → logprob: -1.6890558004379272
    3. '       ' → logprob: -1.8140558004379272
    4. '#' → logprob: -2.189055919647217
    5. '=' → logprob: -2.689055919647217
    6. 'ycle' → logprob: -2.689055919647217
    7. '   ' → logprob: -3.439055919647217
    8. 'def' → logprob: -3.939055919647217
    9. 'cles' → logprob: -3.939055919647217
    10. 'for' → logprob: -4.064055919647217

Token 3395: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.107499860227108
    2. '```' → logprob: -2.857499837875366
    3. 'k' → logprob: -4.107500076293945
    4. 'num' → logprob: -4.732500076293945
    5. 'return' → logprob: -5.107500076293945
    6. 'for' → logprob: -5.357500076293945
    7. '``' → logprob: -6.107500076293945
    8. 't' → logprob: -6.232500076293945
    9. '       ' → logprob: -6.982500076293945
    10. '`' → logprob: -7.107500076293945

Token 3396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032872750889509916
    2. '```' → logprob: -6.503287315368652
    3. 'for' → logprob: -7.003287315368652
    4. 'def' → logprob: -8.503287315368652
    5. 'k' → logprob: -8.503287315368652
    6. 'return' → logprob: -8.628287315368652
    7. 'if' → logprob: -9.128287315368652
    8. '#' → logprob: -9.503287315368652
    9. 'num' → logprob: -9.753287315368652
    10. '       ' → logprob: -11.253287315368652

Token 3397: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2355337291955948
    2. 'if' → logprob: -2.3605337142944336
    3. 'return' → logprob: -3.3605337142944336
    4. 'num' → logprob: -3.4855337142944336
    5. 'k' → logprob: -4.110533714294434
    6. '   ' → logprob: -4.360533714294434
    7. '#' (adapté à ' #') → logprob: -4.610533714294434
    8. '```' → logprob: -4.735533714294434
    9. '       ' → logprob: -7.235533714294434
    10. 'n' → logprob: -7.735533714294434

Token 3398: ' Pr' (ID: 2284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03698914498090744
    2. '```' → logprob: -4.036989212036133
    3. 'def' → logprob: -5.161989212036133
    4. 'k' → logprob: -5.411989212036133
    5. 'for' → logprob: -6.161989212036133
    6. '#' → logprob: -6.286989212036133
    7. 'num' → logprob: -6.286989212036133
    8. 'return' → logprob: -6.661989212036133
    9. '       ' → logprob: -7.286989212036133
    10. 'if' → logprob: -7.911989212036133

Token 3399: 'éc' (ID: 5675)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -1.3476885557174683
    2. '#' → logprob: -1.7226885557174683
    3. 'int' → logprob: -1.8476885557174683
    4. 'esent' → logprob: -1.9726885557174683
    5. 'ec' → logprob: -2.597688674926758
    6. 'e' → logprob: -2.847688674926758
    7. 'oc' → logprob: -3.847688674926758
    8. 'op' → logprob: -4.097688674926758
    9. 'es' → logprob: -4.347688674926758
    10. 'o' → logprob: -4.347688674926758

Token 3400: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.0282526183873415
    2. 'cision' → logprob: -3.903252601623535
    3. '   ' → logprob: -5.403252601623535
    4. 'is' → logprob: -6.903252601623535
    5. 'ise' → logprob: -7.028252601623535
    6. '#' → logprob: -7.028252601623535
    7. 'isions' → logprob: -8.528252601623535
    8. 'c' → logprob: -10.153252601623535
    9. '=' → logprob: -10.403252601623535
    10. '       ' → logprob: -10.778252601623535

Token 3401: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7734252214431763
    2. '#' → logprob: -1.6484252214431763
    3. ' ' → logprob: -2.6484251022338867
    4. 'num' → logprob: -2.6484251022338867
    5. ' #' → logprob: -3.1484251022338867
    6. ',' → logprob: -3.5234251022338867
    7. '    ' → logprob: -3.8984251022338867
    8. 't' → logprob: -4.398425102233887
    9. ' if' → logprob: -4.648425102233887
    10. '<|end|>' → logprob: -4.773425102233887

Token 3402: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.330636739730835
    2. 'return' → logprob: -1.330636739730835
    3. 'num' → logprob: -2.205636739730835
    4. ' return' → logprob: -2.580636739730835
    5. ' if' → logprob: -2.830636739730835
    6. 'for' → logprob: -3.080636739730835
    7. 'if' → logprob: -3.205636739730835
    8. 'k' → logprob: -3.580636739730835
    9. ' for' → logprob: -3.705636739730835
    10. 't' → logprob: -3.705636739730835

Token 3403: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1299445629119873
    2. 'continue' → logprob: -2.6299445629119873
    3. '#' → logprob: -3.6299445629119873
    4. ' return' → logprob: -4.629944801330566
    5. ' #' → logprob: -5.629944801330566
    6. '   ' → logprob: -5.629944801330566
    7. ' continue' → logprob: -6.754944801330566
    8. 'def' → logprob: -7.504944801330566
    9. 'ret' → logprob: -7.754944801330566
    10. 'import' → logprob: -7.879944801330566

Token 3404: ' t' (ID: 260)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3153206706047058
    2. 'for' → logprob: -2.5653207302093506
    3. 'k' → logprob: -2.6903207302093506
    4. 'num' → logprob: -2.9403207302093506
    5. '#' → logprob: -3.6903207302093506
    6. '```' → logprob: -4.3153204917907715
    7. 'continue' → logprob: -4.3153204917907715
    8. 't' → logprob: -5.5653204917907715
    9. '           ' → logprob: -5.6903204917907715
    10. '       ' → logprob: -5.9403204917907715

Token 3405: '_sol' (ID: 121444)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.027076231315732002
    2. 'num' → logprob: -4.152076244354248
    3. '_sol' → logprob: -5.152076244354248
    4. '#' → logprob: -6.777076244354248
    5. '_den' → logprob: -7.277076244354248
    6. 'return' → logprob: -8.02707576751709
    7. '_' → logprob: -8.15207576751709
    8. '_frac' → logprob: -8.15207576751709
    9. '_n' → logprob: -8.27707576751709
    10. '_fraction' → logprob: -8.52707576751709

Token 3406: ' calcul' (ID: 7559)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.05090610682964325
    2. '_n' → logprob: -3.925906181335449
    3. ',' → logprob: -4.300906181335449
    4. 'num' → logprob: -5.425906181335449
    5. ' =' → logprob: -5.675906181335449
    6. '=' → logprob: -5.675906181335449
    7. '_fraction' → logprob: -6.550906181335449
    8. '_frac' → logprob: -7.175906181335449
    9. '_den' → logprob: -7.425906181335449
    10. '#' → logprob: -7.800906181335449

Token 3407: 'é' (ID: 377)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.46691688895225525
    2. '=' → logprob: -1.5919169187545776
    3. 'ated' → logprob: -2.841916799545288
    4. 'é' → logprob: -2.841916799545288
    5. 'e' → logprob: -3.716916799545288
    6. '_num' → logprob: -4.841917037963867
    7. '   ' → logprob: -5.091917037963867
    8. ' =' → logprob: -5.591917037963867
    9. '#' → logprob: -6.091917037963867
    10. ',' → logprob: -6.841917037963867

Token 3408: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1926715075969696
    2. ',' → logprob: -1.942671537399292
    3. 'as' → logprob: -4.942671298980713
    4. '_exact' → logprob: -5.692671298980713
    5. '```' → logprob: -5.692671298980713
    6. ' =' → logprob: -5.817671298980713
    7. ' as' → logprob: -6.067671298980713
    8. 'exact' → logprob: -6.067671298980713
    9. '_fraction' → logprob: -6.817671298980713
    10. '#' → logprob: -7.067671298980713

Token 3409: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2546551823616028
    2. 'c' → logprob: -1.629655122756958
    3. 't' → logprob: -5.254655361175537
    4. 'fraction' → logprob: -5.379655361175537
    5. '(k' → logprob: -5.629655361175537
    6. 'float' → logprob: -5.754655361175537
    7. ' candidates' → logprob: -6.129655361175537
    8. '360' → logprob: -6.379655361175537
    9. 'int' → logprob: -6.504655361175537
    10. 'Fraction' → logprob: -6.629655361175537

Token 3410: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4143952429294586
    2. ' *' → logprob: -1.5393952131271362
    3. '*' → logprob: -2.164395332336426
    4. ' ,' → logprob: -4.789395332336426
    5. '
' → logprob: -7.789395332336426
    6. ',
' → logprob: -8.664395332336426
    7. '*,' → logprob: -8.664395332336426
    8. '```' → logprob: -8.789395332336426
    9. '#' → logprob: -9.039395332336426
    10. '<|end|>' → logprob: -9.289395332336426

Token 3411: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00021295747137628496
    2. 'den' → logprob: -9.250212669372559
    3. ' ' → logprob: -9.625212669372559
    4. 'abs' → logprob: -11.375212669372559
    5. '36' → logprob: -11.625212669372559
    6. '1' → logprob: -11.625212669372559
    7. 'int' → logprob: -12.250212669372559
    8. 'sign' → logprob: -12.750212669372559
    9. 'num' → logprob: -13.125212669372559
    10. '180' → logprob: -13.250212669372559

Token 3412: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4690365493297577
    2. ' /' → logprob: -1.71903657913208
    3. '/' → logprob: -1.96903657913208
    4. ' //' → logprob: -3.84403657913208
    5. '//' → logprob: -4.46903657913208
    6. ' ,' → logprob: -4.96903657913208
    7. '   ' → logprob: -4.96903657913208
    8. '```' → logprob: -5.59403657913208
    9. '<|end|>' → logprob: -7.21903657913208
    10. '<|end|>' → logprob: -7.59403657913208

Token 3413: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.12728388607501984
    2. 'abs' → logprob: -2.127283811569214
    3. '(abs' → logprob: -8.877284049987793
    4. '(' → logprob: -9.627284049987793
    5. ' den' → logprob: -9.877284049987793
    6. 'sign' → logprob: -10.627284049987793
    7. ' abs' → logprob: -10.752284049987793
    8. '1' → logprob: -11.377284049987793
    9. 'det' → logprob: -12.377284049987793
    10. 'int' → logprob: -12.377284049987793

Token 3414: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2076631784439087
    2. ',' → logprob: -2.457663059234619
    3. 'num' → logprob: -3.207663059234619
    4. '
' → logprob: -3.832663059234619
    5. '_num' → logprob: -3.957663059234619
    6. ')' → logprob: -4.832663059234619
    7. '#' → logprob: -6.207663059234619
    8. ' num' → logprob: -7.082663059234619
    9. ',
' → logprob: -7.082663059234619
    10. ',num' → logprob: -7.082663059234619

Token 3415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03556567430496216
    2. 'k' → logprob: -4.0355658531188965
    3. 'num' → logprob: -4.9105658531188965
    4. '```' → logprob: -6.0355658531188965
    5. 'if' → logprob: -6.1605658531188965
    6. 't' → logprob: -6.4105658531188965
    7. 'return' → logprob: -6.9105658531188965
    8. ',' → logprob: -7.1605658531188965
    9. '       ' → logprob: -8.035565376281738
    10. 'for' → logprob: -8.285565376281738

Token 3416: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2826626300811768
    2. '   ' → logprob: -1.6576626300811768
    3. 'if' → logprob: -1.7826626300811768
    4. 'k' → logprob: -1.9076626300811768
    5. 'num' → logprob: -1.9076626300811768
    6. '#' (adapté à ' #') → logprob: -3.7826626300811768
    7. 'return' → logprob: -3.9076626300811768
    8. 't' → logprob: -4.657662391662598
    9. '```' → logprob: -4.657662391662598
    10. 'sign' → logprob: -6.532662391662598

Token 3417: ' On' (ID: 2160)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8473809957504272
    2. '   ' → logprob: -1.0973809957504272
    3. '#' → logprob: -2.972381114959717
    4. ')' → logprob: -3.347381114959717
    5. '```' → logprob: -3.722381114959717
    6. 'def' → logprob: -3.972381114959717
    7. 'num' → logprob: -4.347381114959717
    8. 'for' → logprob: -4.347381114959717
    9. 't' → logprob: -4.597381114959717
    10. 'if' → logprob: -4.722381114959717

Token 3418: ' essa' (ID: 19417)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1900718212127686
    2. 'num' → logprob: -1.1900718212127686
    3. '#' → logprob: -1.4400718212127686
    4. '   ' → logprob: -3.4400718212127686
    5. 'continue' → logprob: -3.4400718212127686
    6. 'for' → logprob: -3.5650718212127686
    7. '_num' → logprob: -4.065072059631348
    8. 'def' → logprob: -4.565072059631348
    9. ' return' → logprob: -5.190072059631348
    10. 'ret' → logprob: -5.315072059631348

Token 3419: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8760218024253845
    2. 'ie' → logprob: -1.0010218620300293
    3. 'ye' → logprob: -1.6260218620300293
    4. 'yer' → logprob: -4.751021862030029
    5. 'aye' → logprob: -4.751021862030029
    6. 'iye' → logprob: -7.001021862030029
    7. 'uie' → logprob: -8.376021385192871
    8. 'eye' → logprob: -9.501021385192871
    9. 'yre' → logprob: -9.626021385192871
    10. 'i' → logprob: -9.626021385192871

Token 3420: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0806305408477783
    2. ':' → logprob: -1.4556305408477783
    3. 'k' → logprob: -1.4556305408477783
    4. 'for' → logprob: -2.7056305408477783
    5. '```' → logprob: -3.2056305408477783
    6. '       ' → logprob: -3.5806305408477783
    7. 't' → logprob: -3.8306305408477783
    8. ' for' → logprob: -4.330630302429199
    9. ' k' → logprob: -4.455630302429199
    10. ':
' → logprob: -5.955630302429199

Token 3421: ' retrouver' (ID: 53435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15703405439853668
    2. 'return' → logprob: -2.907034158706665
    3. 'def' → logprob: -3.157034158706665
    4. '#' → logprob: -4.407033920288086
    5. 'min' → logprob: -4.407033920288086
    6. 'from' → logprob: -5.032033920288086
    7. ' for' → logprob: -5.157033920288086
    8. 'k' → logprob: -5.157033920288086
    9. 'found' → logprob: -6.282033920288086
    10. 'import' → logprob: -7.157033920288086

Token 3422: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09655946493148804
    2. 'k' → logprob: -3.346559524536133
    3. 'if' → logprob: -4.096559524536133
    4. ' for' → logprob: -4.221559524536133
    5. 'sign' → logprob: -4.221559524536133
    6. 'found' → logprob: -5.846559524536133
    7. '#' → logprob: -5.971559524536133
    8. 'best' → logprob: -6.471559524536133
    9. 't' → logprob: -7.221559524536133
    10. ' if' → logprob: -7.721559524536133

Token 3423: ' candidats' (ID: 100182)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06381215900182724
    2. 'num' → logprob: -3.813812255859375
    3. 'for' → logprob: -4.188812255859375
    4. '#' → logprob: -4.688812255859375
    5. 'best' → logprob: -4.938812255859375
    6. 'token' → logprob: -6.063812255859375
    7. 'sign' → logprob: -6.813812255859375
    8. 'from' → logprob: -7.188812255859375
    9. 'candidate' → logprob: -7.438812255859375
    10. 'fraction' → logprob: -7.563812255859375

Token 3424: ' trouv' (ID: 40254)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3599115014076233
    2. '   ' → logprob: -1.6099114418029785
    3. ' for' → logprob: -3.8599114418029785
    4. '#' → logprob: -3.8599114418029785
    5. '```' → logprob: -3.8599114418029785
    6. 'if' → logprob: -4.1099114418029785
    7. 'k' → logprob: -4.6099114418029785
    8. 'num' → logprob: -5.4849114418029785
    9. 'found' → logprob: -6.6099114418029785
    10. 't' → logprob: -6.6099114418029785

Token 3425: 'és' (ID: 1756)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.37172237038612366
    2. 'és' → logprob: -1.7467223405838013
    3. 'us' → logprob: -3.121722459793091
    4. '[k' → logprob: -3.246722459793091
    5. 'k' → logprob: -4.621722221374512
    6. 'ons' → logprob: -4.871722221374512
    7. 'ues' → logprob: -5.246722221374512
    8. '[' → logprob: -5.371722221374512
    9. 'r' → logprob: -5.496722221374512
    10. '[
' → logprob: -5.746722221374512

Token 3426: ' pré' (ID: 9424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1471149921417236
    2. '```' → logprob: -1.1471149921417236
    3. 'for' → logprob: -2.0221149921417236
    4. ' for' → logprob: -2.3971149921417236
    5. '       ' → logprob: -2.7721149921417236
    6. 'k' → logprob: -4.3971147537231445
    7. '#' → logprob: -4.5221147537231445
    8. '``' → logprob: -4.7721147537231445
    9. '           ' → logprob: -4.8971147537231445
    10. ',' → logprob: -5.0221147537231445

Token 3427: 'ced' (ID: 2050)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13450008630752563
    2. 'v' → logprob: -3.634500026702881
    3. 'vious' → logprob: -3.634500026702881
    4. 'm' → logprob: -3.759500026702881
    5. 'dict' → logprob: -4.384500026702881
    6. 'cis' → logprob: -4.509500026702881
    7. 'viously' → logprob: -5.509500026702881
    8. '       ' → logprob: -5.759500026702881
    9. '#' → logprob: -6.009500026702881
    10. 'd' → logprob: -6.009500026702881

Token 3428: 'emment' (ID: 58019)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7141817808151245
    2. 'd' → logprob: -1.3391817808151245
    3. 'ents' → logprob: -2.464181900024414
    4. 'e' → logprob: -3.214181900024414
    5. 'u' → logprob: -3.214181900024414
    6. 'ente' → logprob: -3.839181900024414
    7. ',' → logprob: -4.339181900024414
    8. '   ' → logprob: -5.214181900024414
    9. ']' → logprob: -5.214181900024414
    10. ')' → logprob: -5.339181900024414

Token 3429: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9623881578445435
    2. '```' → logprob: -1.0873881578445435
    3. '   ' → logprob: -2.212388038635254
    4. ' for' → logprob: -2.712388038635254
    5. '#' → logprob: -3.462388038635254
    6. 'k' → logprob: -4.212388038635254
    7. '       ' → logprob: -4.337388038635254
    8. ')' → logprob: -4.962388038635254
    9. 'num' → logprob: -4.962388038635254
    10. '``' → logprob: -4.962388038635254

Token 3430: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1083627939224243
    2. '```' → logprob: -1.3583627939224243
    3. ' for' → logprob: -1.9833627939224243
    4. 'for' → logprob: -2.3583626747131348
    5. '       ' → logprob: -2.3583626747131348
    6. 'k' → logprob: -3.6083626747131348
    7. ' k' → logprob: -3.9833626747131348
    8. '#' → logprob: -4.483362674713135
    9. '``' → logprob: -4.858362674713135
    10. '           ' → logprob: -5.608362674713135

Token 3431: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4530916213989258
    2. 'break' → logprob: -1.8280916213989258
    3. '#' → logprob: -1.9530916213989258
    4. '   ' → logprob: -3.828091621398926
    5. 'for' → logprob: -4.078091621398926
    6. 'tr' → logprob: -4.453091621398926
    7. 'ret' → logprob: -6.078091621398926
    8. 'cho' → logprob: -6.703091621398926
    9. 'select' → logprob: -6.703091621398926
    10. '```' → logprob: -6.953091621398926

Token 3432: ' retourne' (ID: 178818)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.46113863587379456
    2. 'return' → logprob: -1.5861386060714722
    3. 'continue' → logprob: -3.2111387252807617
    4. 'tr' → logprob: -3.3361387252807617
    5. 'break' → logprob: -3.7111387252807617
    6. 'repr' → logprob: -3.9611387252807617
    7. '#' → logprob: -4.461138725280762
    8. 'sort' → logprob: -5.211138725280762
    9. 'tri' → logprob: -5.836138725280762
    10. 'cherche' → logprob: -6.211138725280762

Token 3433: ' fraction' (ID: 33763)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.39087069034576416
    2. 't' → logprob: -1.1408706903457642
    3. '(k' → logprob: -5.890870571136475
    4. 'num' → logprob: -7.390870571136475
    5. ' k' → logprob: -8.890871047973633
    6. '(t' → logprob: -9.265871047973633
    7. '{k' → logprob: -9.515871047973633
    8. '   ' → logprob: -9.765871047973633
    9. '```' → logprob: -9.765871047973633
    10. ' t' → logprob: -9.890871047973633

Token 3434: ' exacte' (ID: 188756)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.539502501487732
    2. '   ' → logprob: -1.539502501487732
    3. '(
' → logprob: -1.789502501487732
    4. '(k' → logprob: -2.5395026206970215
    5. 'num' → logprob: -2.7895026206970215
    6. ')' → logprob: -2.7895026206970215
    7. 'k' → logprob: -2.9145026206970215
    8. ',' → logprob: -3.1645026206970215
    9. 'def' → logprob: -4.2895026206970215
    10. '(num' → logprob: -4.4145026206970215

Token 3435: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19391004741191864
    2. '```' → logprob: -2.3189101219177246
    3. 'for' → logprob: -2.9439101219177246
    4. '#' → logprob: -4.693910121917725
    5. 'def' → logprob: -5.193910121917725
    6. ' for' → logprob: -5.818910121917725
    7. 'k' → logprob: -6.318910121917725
    8. '       ' → logprob: -6.318910121917725
    9. 'num' → logprob: -6.568910121917725
    10. 'if' → logprob: -6.818910121917725

Token 3436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35382959246635437
    2. 'for' → logprob: -2.1038296222686768
    3. 'return' → logprob: -2.1038296222686768
    4. 'if' → logprob: -3.4788296222686768
    5. 'k' → logprob: -4.853829383850098
    6. 'def' → logprob: -4.853829383850098
    7. '```' → logprob: -5.603829383850098
    8. '#' → logprob: -6.478829383850098
    9. ' for' → logprob: -7.353829383850098
    10. 'from' → logprob: -8.103829383850098

Token 3437: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31420204043388367
    2. '   ' → logprob: -1.439202070236206
    3. 'if' → logprob: -4.564201831817627
    4. 'k' → logprob: -4.564201831817627
    5. '```' → logprob: -5.314201831817627
    6. '#' (adapté à ' #') → logprob: -5.939201831817627
    7. ' for' → logprob: -6.439201831817627
    8. 'def' → logprob: -7.189201831817627
    9. 'sign' → logprob: -7.314201831817627
    10. '``' → logprob: -8.314202308654785

Token 3438: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11274871975183487
    2. 'for' → logprob: -2.987748622894287
    3. 'def' → logprob: -3.362748622894287
    4. '#' → logprob: -4.862748622894287
    5. 'if' → logprob: -5.612748622894287
    6. '       ' → logprob: -5.862748622894287
    7. 'k' → logprob: -5.862748622894287
    8. '```' → logprob: -6.487748622894287
    9. ' for' → logprob: -7.237748622894287
    10. ')' → logprob: -7.237748622894287

Token 3439: ' vér' (ID: 42524)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2122366726398468
    2. '#' → logprob: -2.3372366428375244
    3. 'def' → logprob: -3.3372366428375244
    4. 'for' → logprob: -4.0872368812561035
    5. ' return' → logprob: -4.7122368812561035
    6. 'num' → logprob: -4.9622368812561035
    7. 'continue' → logprob: -5.0872368812561035
    8. '```' → logprob: -5.4622368812561035
    9. '   ' → logprob: -5.8372368812561035
    10. 'import' → logprob: -5.9622368812561035

Token 3440: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0732719823718071
    2. 'f' → logprob: -4.073271751403809
    3. 'rif' → logprob: -4.323271751403809
    4. 'if' → logprob: -4.448271751403809
    5. 'ite' → logprob: -4.448271751403809
    6. 'value' → logprob: -6.073271751403809
    7. 'tile' → logprob: -6.323271751403809
    8. 't' → logprob: -6.448271751403809
    9. 'def' → logprob: -6.948271751403809
    10. 'return' → logprob: -7.573271751403809

Token 3441: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2925157845020294
    2. 'if' → logprob: -1.667515754699707
    3. ' for' → logprob: -3.542515754699707
    4. 'k' → logprob: -4.667515754699707
    5. '   ' → logprob: -4.917515754699707
    6. ' if' → logprob: -5.292515754699707
    7. 't' → logprob: -5.417515754699707
    8. 'num' → logprob: -5.792515754699707
    9. '#' → logprob: -6.042515754699707
    10. 'c' → logprob: -6.667515754699707

Token 3442: ' form' (ID: 1625)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19716651737689972
    2. 'for' → logprob: -2.3221664428710938
    3. 'def' → logprob: -3.8221664428710938
    4. 't' → logprob: -3.9471664428710938
    5. '#' → logprob: -4.072166442871094
    6. 'k' → logprob: -5.447166442871094
    7. 'if' → logprob: -6.322166442871094
    8. 'found' → logprob: -6.322166442871094
    9. ' candidates' → logprob: -6.322166442871094
    10. 'import' → logprob: -6.447166442871094

Token 3443: 'ules' (ID: 3787)
  Prédit: 'ules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ules' → logprob: -0.039821334183216095
    2. 'ule' → logprob: -3.4148213863372803
    3. 't' → logprob: -6.664821147918701
    4. '#' → logprob: -6.789821147918701
    5. 'ula' → logprob: -6.914821147918701
    6. 'es' → logprob: -7.039821147918701
    7. 'e' → logprob: -7.289821147918701
    8. '```' → logprob: -8.53982162475586
    9. 'ulas' → logprob: -8.53982162475586
    10. 'ats' → logprob: -9.03982162475586

Token 3444: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25377607345581055
    2. 'for' → logprob: -1.6287760734558105
    3. '#' → logprob: -4.6287760734558105
    4. 'if' → logprob: -5.0037760734558105
    5. 'k' → logprob: -5.5037760734558105
    6. '```' → logprob: -5.7537760734558105
    7. ' for' → logprob: -6.7537760734558105
    8. 'def' → logprob: -7.0037760734558105
    9. 'num' → logprob: -7.0037760734558105
    10. '
' → logprob: -7.6287760734558105

Token 3445: ' k' (ID: 372)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5682953000068665
    2. 'abs' → logprob: -1.6932952404022217
    3. 'k' → logprob: -2.1932952404022217
    4. 'den' → logprob: -2.6932952404022217
    5. 't' → logprob: -4.068295478820801
    6. 'True' → logprob: -4.318295478820801
    7. 'c' → logprob: -4.568295478820801
    8. 'num' → logprob: -5.443295478820801
    9. 'len' → logprob: -5.568295478820801
    10. 'for' → logprob: -5.693295478820801

Token 3446: ' /' (ID: 820)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8974912166595459
    2. ' for' → logprob: -1.397491216659546
    3. '#' → logprob: -2.647491216659546
    4. 'k' → logprob: -3.022491216659546
    5. '```' → logprob: -3.147491216659546
    6. ' k' → logprob: -3.272491216659546
    7. '       ' → logprob: -3.397491216659546
    8. '   ' → logprob: -3.522491216659546
    9. '           ' → logprob: -3.647491216659546
    10. ' if' → logprob: -4.272491455078125

Token 3447: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.934399425983429
    2. 'range' → logprob: -2.309399366378784
    3. 'abs' → logprob: -2.434399366378784
    4. '2' → logprob: -2.434399366378784
    5. 'k' → logprob: -2.559399366378784
    6. 'len' → logprob: -3.059399366378784
    7. 'sign' → logprob: -3.059399366378784
    8. '[' → logprob: -3.684399366378784
    9. ' range' → logprob: -3.809399366378784
    10. ' k' → logprob: -4.059399604797363

Token 3448: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15491032600402832
    2. 'for' → logprob: -2.7799103260040283
    3. 'k' → logprob: -3.2799103260040283
    4. '#' → logprob: -4.029910087585449
    5. 'def' → logprob: -4.279910087585449
    6. '```' → logprob: -5.654910087585449
    7. 'num' → logprob: -5.779910087585449
    8. ' for' → logprob: -6.029910087585449
    9. 'if' → logprob: -7.154910087585449
    10. ')' → logprob: -7.904910087585449

Token 3449: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2616559267044067
    2. '   ' → logprob: -1.3866559267044067
    3. '```' → logprob: -1.6366559267044067
    4. ' for' → logprob: -2.136655807495117
    5. 'k' → logprob: -2.886655807495117
    6. '#' → logprob: -3.261655807495117
    7. '       ' → logprob: -3.761655807495117
    8. 'num' → logprob: -4.261655807495117
    9. '``' → logprob: -5.511655807495117
    10. ' k' → logprob: -5.511655807495117

Token 3450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052682675421237946
    2. 'for' → logprob: -3.177682638168335
    3. '```' → logprob: -5.677682876586914
    4. ' for' → logprob: -6.427682876586914
    5. 'k' → logprob: -6.802682876586914
    6. '#' → logprob: -7.052682876586914
    7. 'def' → logprob: -7.177682876586914
    8. '
' → logprob: -7.427682876586914
    9. 'num' → logprob: -8.052682876586914
    10. ')' → logprob: -8.552682876586914

Token 3451: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48456862568855286
    2. '   ' → logprob: -0.9845685958862305
    3. 'k' → logprob: -5.4845685958862305
    4. '```' → logprob: -5.9845685958862305
    5. ' for' → logprob: -6.9845685958862305
    6. 'if' → logprob: -7.1095685958862305
    7. '#' (adapté à ' #') → logprob: -7.1095685958862305
    8. '
' → logprob: -7.8595685958862305
    9. 'from' → logprob: -8.60956859588623
    10. '       ' → logprob: -8.85956859588623

Token 3452: ' Cher' (ID: 48756)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07577995955944061
    2. 'for' → logprob: -3.200779914855957
    3. '#' → logprob: -4.450779914855957
    4. '       ' → logprob: -5.200779914855957
    5. 'k' → logprob: -5.950779914855957
    6. ' for' → logprob: -5.950779914855957
    7. 'def' → logprob: -5.950779914855957
    8. '
' → logprob: -5.950779914855957
    9. '```' → logprob: -6.325779914855957
    10. ')' → logprob: -7.075779914855957

Token 3453: 'ch' (ID: 332)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13917163014411926
    2. 'k' → logprob: -2.139171600341797
    3. '       ' → logprob: -6.014171600341797
    4. ' ' → logprob: -6.264171600341797
    5. '    ' → logprob: -6.389171600341797
    6. '     ' → logprob: -6.639171600341797
    7. 'for' → logprob: -7.264171600341797
    8. '```' → logprob: -7.389171600341797
    9. '#' → logprob: -7.514171600341797
    10. 'che' → logprob: -7.639171600341797

Token 3454: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.02716011367738247
    2. 'k' → logprob: -4.527160167694092
    3. '   ' → logprob: -4.777160167694092
    4. 'er' → logprob: -5.527160167694092
    5. 'on' → logprob: -7.152160167694092
    6. 'e' → logprob: -7.277160167694092
    7. 't' → logprob: -7.527160167694092
    8. '           ' → logprob: -8.027159690856934
    9. 'os' → logprob: -8.527159690856934
    10. 'es' → logprob: -8.902159690856934

Token 3455: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.195691704750061
    2. ' for' → logprob: -1.445691704750061
    3. 'for' → logprob: -1.570691704750061
    4. ' k' → logprob: -2.9456915855407715
    5. 't' → logprob: -3.6956915855407715
    6. 'sign' → logprob: -3.6956915855407715
    7. 'best' → logprob: -3.9456915855407715
    8. '#' → logprob: -4.1956915855407715
    9. 'max' → logprob: -4.4456915855407715
    10. 'min' → logprob: -4.4456915855407715

Token 3456: ' fraction' (ID: 33763)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6875401139259338
    2. 'best' → logprob: -1.187540054321289
    3. 'for' → logprob: -2.687540054321289
    4. '#' → logprob: -3.312540054321289
    5. 'min' → logprob: -3.812540054321289
    6. 'sign' → logprob: -4.062540054321289
    7. 'def' → logprob: -4.187540054321289
    8. 'small' → logprob: -5.312540054321289
    9. 'plus' → logprob: -5.437540054321289
    10. 'candidate' → logprob: -5.437540054321289

Token 3457: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18401186168193817
    2. 'from' → logprob: -2.559011936187744
    3. 'k' → logprob: -3.934011936187744
    4. '#' → logprob: -4.059011936187744
    5. 'num' → logprob: -4.184011936187744
    6. 'import' → logprob: -4.309011936187744
    7. 'if' → logprob: -4.809011936187744
    8. 'def' → logprob: -5.684011936187744
    9. 't' → logprob: -5.809011936187744
    10. 'sign' → logprob: -6.184011936187744

Token 3458: '/d' (ID: 6662)
  Prédit: 'umerator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -1.319461703300476
    2. '=' → logprob: -1.569461703300476
    3. '_candidates' → logprob: -1.694461703300476
    4. ' =' → logprob: -2.3194618225097656
    5. ',' → logprob: -2.5694618225097656
    6. 'umer' → logprob: -2.6944618225097656
    7. 'um' → logprob: -3.1944618225097656
    8. '_num' → logprob: -4.444461822509766
    9. '_candidate' → logprob: -5.069461822509766
    10. '#' → logprob: -5.194461822509766

Token 3459: ' tal' (ID: 4858)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09793486446142197
    2. ' for' → logprob: -3.9729349613189697
    3. 'k' → logprob: -4.097934722900391
    4. 'n' → logprob: -4.472934722900391
    5. 'num' → logprob: -4.472934722900391
    6. '#' → logprob: -4.972934722900391
    7. '```' → logprob: -5.347934722900391
    8. 'import' → logprob: -5.597934722900391
    9. 'from' → logprob: -5.722934722900391
    10. '
' → logprob: -5.847934722900391

Token 3460: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.355839490890503
    2. 'k' → logprob: -2.105839490890503
    3. 'n' → logprob: -2.355839490890503
    4. 'nt' → logprob: -2.730839490890503
    5. 'ng' → logprob: -2.980839490890503
    6. 'king' → logprob: -2.980839490890503
    7. 'g' → logprob: -3.105839490890503
    8. ' =' → logprob: -3.230839490890503
    9. 't' → logprob: -3.605839490890503
    10. 'b' → logprob: -3.855839490890503

Token 3461: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5973981618881226
    2. 't' → logprob: -2.347398281097412
    3. '#' → logprob: -2.847398281097412
    4. 'abs' → logprob: -2.972398281097412
    5. '360' → logprob: -3.347398281097412
    6. 'num' → logprob: -3.472398281097412
    7. 'for' → logprob: -3.472398281097412
    8. 'n' → logprob: -3.722398281097412
    9. 'def' → logprob: -3.972398281097412
    10. '   ' → logprob: -4.097398281097412

Token 3462: '_sol' (ID: 121444)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8406404852867126
    2. ' =' → logprob: -1.3406405448913574
    3. '_num' → logprob: -1.9656405448913574
    4. '_sol' → logprob: -2.3406405448913574
    5. 'p' → logprob: -4.090640544891357
    6. 'ype' → logprob: -4.340640544891357
    7. 'num' → logprob: -4.465640544891357
    8. 's' → logprob: -4.965640544891357
    9. 'k' → logprob: -5.715640544891357
    10. 'r' → logprob: -5.840640544891357

Token 3463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764120221138
    2. '=' → logprob: -1.4514119625091553
    3. '_num' → logprob: -2.2014119625091553
    4. ',' → logprob: -3.0764119625091553
    5. '_n' → logprob: -4.451412200927734
    6. '_' → logprob: -4.951412200927734
    7. 'num' → logprob: -5.826412200927734
    8. ')' → logprob: -6.076412200927734
    9. '#' → logprob: -6.201412200927734
    10. 'def' → logprob: -6.326412200927734

Token 3464: ' n' (ID: 297)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21469947695732117
    2. 'k' → logprob: -1.9646995067596436
    3. '360' → logprob: -3.3396995067596436
    4. 't' → logprob: -5.2146992683410645
    5. 'None' → logprob: -6.0896992683410645
    6. '1' → logprob: -6.3396992683410645
    7. '0' → logprob: -6.4646992683410645
    8. 'lambda' → logprob: -6.8396992683410645
    9. '[' → logprob: -7.3396992683410645
    10. '(c' → logprob: -7.7146992683410645

Token 3465: '/d' (ID: 6662)
  Prédit: 'umer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umer' → logprob: -1.2072924375534058
    2. '_num' → logprob: -1.5822924375534058
    3. '*' → logprob: -2.0822925567626953
    4. 'um' → logprob: -2.0822925567626953
    5. 'umerator' → logprob: -2.2072925567626953
    6. ' =' → logprob: -3.3322925567626953
    7. ',' → logprob: -3.3322925567626953
    8. '/' → logprob: -3.8322925567626953
    9. '_den' → logprob: -4.707292556762695
    10. '=' → logprob: -4.957292556762695

Token 3466: '

' (ID: 279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6926718354225159
    2. ',' → logprob: -1.567671775817871
    3. ' =' → logprob: -1.567671775817871
    4. '/' → logprob: -3.192671775817871
    5. '<|end|>' → logprob: -4.942671775817871
    6. '_num' → logprob: -5.192671775817871
    7. '*' → logprob: -5.692671775817871
    8. '#' → logprob: -5.692671775817871
    9. ':' → logprob: -5.817671775817871
    10. ')' → logprob: -6.067671775817871

Token 3467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.242460235953331
    2. 'n' → logprob: -2.867460250854492
    3. '#' → logprob: -3.117460250854492
    4. ')' → logprob: -3.617460250854492
    5. ',' → logprob: -4.367460250854492
    6. 'def' → logprob: -4.867460250854492
    7. '(' → logprob: -4.867460250854492
    8. '```' → logprob: -4.992460250854492
    9. '`' → logprob: -5.117460250854492
    10. ':' → logprob: -5.242460250854492

Token 3468: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01883559301495552
    2. '   ' → logprob: -5.268835544586182
    3. 'if' → logprob: -5.518835544586182
    4. '#' (adapté à ' #') → logprob: -5.518835544586182
    5. 'from' → logprob: -6.518835544586182
    6. 'k' → logprob: -6.768835544586182
    7. 'return' → logprob: -6.893835544586182
    8. '```' → logprob: -7.643835544586182
    9. 'n' → logprob: -7.893835544586182
    10. 'best' → logprob: -8.64383602142334

Token 3469: ' En' (ID: 2130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34664493799209595
    2. 'for' → logprob: -1.9716448783874512
    3. 'k' → logprob: -2.721644878387451
    4. '#' → logprob: -4.096644878387451
    5. '```' → logprob: -4.096644878387451
    6. 'return' → logprob: -4.346644878387451
    7. 'def' → logprob: -4.471644878387451
    8. 'if' → logprob: -4.596644878387451
    9. ' for' → logprob: -5.721644878387451
    10. ')' → logprob: -5.971644878387451

Token 3470: ' effet' (ID: 24342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.638811469078064
    2. 'num' → logprob: -1.638811469078064
    3. 'def' → logprob: -2.1388115882873535
    4. 'return' → logprob: -3.0138115882873535
    5. 'for' → logprob: -3.6388115882873535
    6. 't' → logprob: -4.5138115882873535
    7. 'repr' → logprob: -4.7638115882873535
    8. 'from' → logprob: -5.0138115882873535
    9. '```' → logprob: -5.0138115882873535
    10. 'n' → logprob: -5.0138115882873535

Token 3471: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4577353894710541
    2. 'n' → logprob: -2.707735300064087
    3. '#' → logprob: -2.832735300064087
    4. ' if' → logprob: -2.957735300064087
    5. ' n' → logprob: -3.082735300064087
    6. ' for' → logprob: -3.582735300064087
    7. 'k' → logprob: -4.082735538482666
    8. ' k' → logprob: -4.457735538482666
    9. 't' → logprob: -4.582735538482666
    10. ' t' → logprob: -4.707735538482666

Token 3472: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6907932162284851
    2. 'return' → logprob: -1.6907932758331299
    3. ' #' → logprob: -2.56579327583313
    4. 'continue' → logprob: -2.69079327583313
    5. '   ' → logprob: -3.19079327583313
    6. ' continue' → logprob: -3.44079327583313
    7. ' return' → logprob: -3.56579327583313
    8. 'def' → logprob: -4.565793037414551
    9. '*' → logprob: -4.940793037414551
    10. '       ' → logprob: -5.065793037414551

Token 3473: ' calcul' (ID: 7559)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.578303337097168
    2. 't' → logprob: -1.703303337097168
    3. 'n' → logprob: -2.328303337097168
    4. 'c' → logprob: -2.703303337097168
    5. '#' → logprob: -3.703303337097168
    6. 'True' → logprob: -4.578303337097168
    7. 'num' → logprob: -4.578303337097168
    8. 'def' → logprob: -4.953303337097168
    9. 'for' → logprob: -5.328303337097168
    10. '   ' → logprob: -5.328303337097168

Token 3474: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6537225246429443
    2. 'te' → logprob: -1.2787225246429443
    3. 'tor' → logprob: -2.0287225246429443
    4. 'r' → logprob: -4.028722763061523
    5. 'tion' → logprob: -4.153722763061523
    6. 'ted' → logprob: -4.528722763061523
    7. 'n' → logprob: -5.278722763061523
    8. 'teur' → logprob: -5.903722763061523
    9. '   ' → logprob: -6.028722763061523
    10. 'e' → logprob: -6.278722763061523

Token 3475: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -1.0030750036239624
    2. '_num' → logprob: -1.5030750036239624
    3. '=' → logprob: -1.6280750036239624
    4. 's' → logprob: -2.378075122833252
    5. ' =' → logprob: -3.503075122833252
    6. ')' → logprob: -4.128075122833252
    7. 'num' → logprob: -4.503075122833252
    8. 'k' → logprob: -5.253075122833252
    9. ']' → logprob: -5.378075122833252
    10. '}' → logprob: -5.503075122833252

Token 3476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1461147665977478
    2. ' =' → logprob: -2.1461148262023926
    3. ',' → logprob: -4.396114826202393
    4. '=
' → logprob: -6.896114826202393
    5. '   ' → logprob: -6.896114826202393
    6. ')' → logprob: -7.021114826202393
    7. '#' → logprob: -7.896114826202393
    8. '=num' → logprob: -8.021114349365234
    9. '=k' → logprob: -8.146114349365234
    10. '.' → logprob: -8.271114349365234

Token 3477: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002252791542559862
    2. '360' → logprob: -6.752252578735352
    3. 'c' → logprob: -7.627252578735352
    4. '{k' → logprob: -9.252252578735352
    5. '(k' → logprob: -9.377252578735352
    6. 't' → logprob: -9.377252578735352
    7. ' k' → logprob: -9.752252578735352
    8. 'Fraction' → logprob: -10.252252578735352
    9. 'sign' → logprob: -10.627252578735352
    10. 'lambda' → logprob: -10.627252578735352

Token 3478: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04540305584669113
    2. '*' → logprob: -3.170403003692627
    3. '<|end|>' → logprob: -6.545403003692627
    4. ',' → logprob: -7.045403003692627
    5. '<|end|>' → logprob: -10.920403480529785
    6. '**' → logprob: -11.295403480529785
    7. '
' → logprob: -11.670403480529785
    8. '#' → logprob: -11.795403480529785
    9. '*[' → logprob: -12.170403480529785
    10. ' ,' → logprob: -12.420403480529785

Token 3479: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -8.65707261255011e-06
    2. '36' → logprob: -11.875008583068848
    3. ' ' → logprob: -14.000008583068848
    4. 'den' → logprob: -15.875008583068848
    5. '180' → logprob: -16.125009536743164
    6. '60' → logprob: -16.125009536743164
    7. '(' → logprob: -16.250009536743164
    8. '```' → logprob: -16.250009536743164
    9. '`' → logprob: -17.000009536743164
    10. '/' → logprob: -17.625009536743164

Token 3480: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.08382552117109299
    2. ' /' → logprob: -2.9588255882263184
    3. ',' → logprob: -4.333825588226318
    4. '//' → logprob: -4.583825588226318
    5. '<|end|>' → logprob: -6.458825588226318
    6. ' //' → logprob: -6.833825588226318
    7. '*' → logprob: -7.083825588226318
    8. '   ' → logprob: -7.208825588226318
    9. '<|end|>' → logprob: -8.70882511138916
    10. '```' → logprob: -8.83382511138916

Token 3481: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.055243540555238724
    2. 'abs' → logprob: -2.930243492126465
    3. '(abs' → logprob: -8.805243492126465
    4. '(' → logprob: -9.305243492126465
    5. ' den' → logprob: -10.305243492126465
    6. 'int' → logprob: -10.305243492126465
    7. 'sign' → logprob: -10.555243492126465
    8. ' abs' → logprob: -11.430243492126465
    9. 'd' → logprob: -12.930243492126465
    10. 'float' → logprob: -13.555243492126465

Token 3482: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4396345317363739
    2. ',' → logprob: -1.9396345615386963
    3. '
' → logprob: -2.8146345615386963
    4. ')' → logprob: -3.9396345615386963
    5. '<|end|>' → logprob: -3.9396345615386963
    6. '/' → logprob: -4.064634323120117
    7. ' ' → logprob: -4.439634323120117
    8. '<|end|>' → logprob: -4.689634323120117
    9. '#' → logprob: -4.814634323120117
    10. ':' → logprob: -4.939634323120117

Token 3483: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6407156586647034
    2. 'n' → logprob: -2.3907155990600586
    3. ' k' → logprob: -2.5157155990600586
    4. 'num' → logprob: -3.0157155990600586
    5. ')' → logprob: -3.2657155990600586
    6. '#' → logprob: -3.3907155990600586
    7. ',' → logprob: -3.5157155990600586
    8. 'return' → logprob: -3.7657155990600586
    9. '   ' → logprob: -3.7657155990600586
    10. 'den' → logprob: -4.140715599060059

Token 3484: ' entier' (ID: 80473)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9745397567749023
    2. '*' → logprob: -1.4745397567749023
    3. '=' → logprob: -2.3495397567749023
    4. ' =' → logprob: -2.5995397567749023
    5. ' *' → logprob: -2.8495397567749023
    6. '#' → logprob: -3.3495397567749023
    7. '_times' → logprob: -3.7245397567749023
    8. ',k' → logprob: -3.8495397567749023
    9. '*=' → logprob: -3.9745397567749023
    10. ' *=' → logprob: -4.599539756774902

Token 3485: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39518147706985474
    2. ')' → logprob: -1.77018141746521
    3. ',' → logprob: -3.02018141746521
    4. '*' → logprob: -3.64518141746521
    5. '
' → logprob: -4.020181655883789
    6. '<|end|>' → logprob: -4.645181655883789
    7. '#' → logprob: -5.270181655883789
    8. ' *' → logprob: -5.395181655883789
    9. ' ' → logprob: -5.395181655883789
    10. '.' → logprob: -5.520181655883789

Token 3486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12912634015083313
    2. ')' → logprob: -3.5041263103485107
    3. ',' → logprob: -4.00412654876709
    4. 'k' → logprob: -4.25412654876709
    5. '<|end|>' → logprob: -4.37912654876709
    6. '#' → logprob: -4.62912654876709
    7. 'def' → logprob: -5.37912654876709
    8. 'n' → logprob: -5.37912654876709
    9. ' ' → logprob: -5.50412654876709
    10. 'num' → logprob: -5.87912654876709

Token 3487: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6044821739196777
    2. '   ' → logprob: -1.2294821739196777
    3. 'k' → logprob: -2.4794821739196777
    4. 'if' → logprob: -3.1044821739196777
    5. 'return' → logprob: -4.479482173919678
    6. '#' (adapté à ' #') → logprob: -5.104482173919678
    7. 'n' → logprob: -5.229482173919678
    8. '```' → logprob: -5.604482173919678
    9. 'num' → logprob: -5.979482173919678
    10. '       ' → logprob: -6.604482173919678

Token 3488: ' On' (ID: 2160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.698971152305603
    2. '   ' → logprob: -2.0739712715148926
    3. '```' → logprob: -2.0739712715148926
    4. 'for' → logprob: -2.3239712715148926
    5. '#' → logprob: -2.6989712715148926
    6. 'k' → logprob: -3.6989712715148926
    7. 'def' → logprob: -4.698971271514893
    8. 'n' → logprob: -4.948971271514893
    9. '       ' → logprob: -5.073971271514893
    10. 'return' → logprob: -5.323971271514893

Token 3489: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8460737466812134
    2. '#' → logprob: -1.4710737466812134
    3. 'return' → logprob: -1.4710737466812134
    4. 'for' → logprob: -2.971073627471924
    5. 'import' → logprob: -4.221073627471924
    6. '   ' → logprob: -4.471073627471924
    7. 'def' → logprob: -4.596073627471924
    8. 'break' → logprob: -5.096073627471924
    9. 'try' → logprob: -5.846073627471924
    10. 'ret' → logprob: -6.346073627471924

Token 3490: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7759370803833008
    2. 'k' → logprob: -0.9009370803833008
    3. ' for' → logprob: -3.400937080383301
    4. 'n' → logprob: -3.400937080383301
    5. 't' → logprob: -4.025937080383301
    6. '#' → logprob: -4.400937080383301
    7. 'sign' → logprob: -5.150937080383301
    8. 'next' → logprob: -5.400937080383301
    9. 'max' → logprob: -5.650937080383301
    10. 'min' → logprob: -5.775937080383301

Token 3491: ' et' (ID: 859)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.044894814491272
    2. '_start' → logprob: -1.669894814491272
    3. ' =' → logprob: -1.919894814491272
    4. '=' → logprob: -2.0448946952819824
    5. '_candidates' → logprob: -2.6698946952819824
    6. 'for' → logprob: -3.4198946952819824
    7. '#' → logprob: -4.419894695281982
    8. '=k' → logprob: -4.419894695281982
    9. '0' → logprob: -4.794894695281982
    10. '_candidate' → logprob: -5.169894695281982

Token 3492: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0006481022574007511
    2. ' den' → logprob: -8.000648498535156
    3. 'sign' → logprob: -8.375648498535156
    4. '360' → logprob: -9.875648498535156
    5. 'd' → logprob: -10.875648498535156
    6. 'abs' → logprob: -12.625648498535156
    7. '#' → logprob: -13.625648498535156
    8. ' ' → logprob: -14.000648498535156
    9. 'def' → logprob: -14.375648498535156
    10. ' sign' → logprob: -14.375648498535156

Token 3493: ' parmi' (ID: 51713)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.158334732055664
    2. '<|end|>' → logprob: -1.908334732055664
    3. ':' → logprob: -2.408334732055664
    4. '[' → logprob: -2.533334732055664
    5. '=' → logprob: -2.908334732055664
    6. ',' → logprob: -3.158334732055664
    7. '```' → logprob: -3.283334732055664
    8. '#' → logprob: -3.283334732055664
    9. ' =' → logprob: -3.533334732055664
    10. 'for' → logprob: -4.283334732055664

Token 3494: ' candidats' (ID: 100182)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7415758967399597
    2. 'range' → logprob: -1.4915759563446045
    3. 'c' → logprob: -2.6165759563446045
    4. '[c' → logprob: -2.9915759563446045
    5. 'k' → logprob: -3.3665759563446045
    6. 'sign' → logprob: -3.4915759563446045
    7. '[k' → logprob: -3.6165759563446045
    8. '[(' → logprob: -3.7415759563446045
    9. '{' → logprob: -4.616575717926025
    10. '[
' → logprob: -4.866575717926025

Token 3495: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9417019486427307
    2. '```' → logprob: -1.816701889038086
    3. '   ' → logprob: -1.941701889038086
    4. 'for' → logprob: -2.191701889038086
    5. ')' → logprob: -2.816701889038086
    6. '<|end|>' → logprob: -3.441701889038086
    7. ' for' → logprob: -3.566701889038086
    8. '...' → logprob: -3.941701889038086
    9. 'k' → logprob: -3.941701889038086
    10. 'n' → logprob: -4.816701889038086

Token 3496: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4394744336605072
    2. '#' → logprob: -2.18947434425354
    3. 'for' → logprob: -2.56447434425354
    4. '   ' → logprob: -2.81447434425354
    5. '```' → logprob: -2.93947434425354
    6. ' for' → logprob: -4.314474582672119
    7. ':' → logprob: -5.064474582672119
    8. '0' → logprob: -5.314474582672119
    9. ']' → logprob: -5.939474582672119
    10. '...' → logprob: -5.939474582672119

Token 3497: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04787727817893028
    2. '   ' → logprob: -3.797877311706543
    3. '```' → logprob: -4.172877311706543
    4. '#' (adapté à ' #') → logprob: -5.922877311706543
    5. ' for' → logprob: -6.047877311706543
    6. 'k' → logprob: -6.297877311706543
    7. 'if' → logprob: -7.172877311706543
    8. '
' → logprob: -7.797877311706543
    9. 'sign' → logprob: -8.422877311706543
    10. 'return' → logprob: -8.922877311706543

Token 3498: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24522370100021362
    2. '#' → logprob: -2.3702237606048584
    3. '```' → logprob: -2.6202237606048584
    4. 'k' → logprob: -4.120223522186279
    5. ')' → logprob: -4.120223522186279
    6. '   ' → logprob: -5.245223522186279
    7. 'if' → logprob: -5.995223522186279
    8. 't' → logprob: -6.370223522186279
    9. 'def' → logprob: -6.495223522186279
    10. 'num' → logprob: -6.745223522186279

Token 3499: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9223247766494751
    2. '#' → logprob: -1.547324776649475
    3. 'return' → logprob: -2.0473246574401855
    4. 'continue' → logprob: -2.0473246574401855
    5. 'def' → logprob: -3.5473246574401855
    6. ' for' → logprob: -3.6723246574401855
    7. 'import' → logprob: -3.9223246574401855
    8. 'break' → logprob: -4.0473246574401855
    9. '```' → logprob: -4.4223246574401855
    10. '
' → logprob: -5.4223246574401855

Token 3500: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6084761619567871
    2. 'ifie' → logprob: -0.8584761619567871
    3. '#' → logprob: -5.233476161956787
    4. '```' → logprob: -5.483476161956787
    5. 'ra' → logprob: -6.108476161956787
    6. 'i' → logprob: -6.233476161956787
    7. 'def' → logprob: -6.233476161956787
    8. 'ify' → logprob: -6.358476161956787
    9. 'ifiez' → logprob: -6.483476161956787
    10. 'ife' → logprob: -6.858476161956787

Token 3501: ' si' (ID: 1784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8182802796363831
    2. ' for' → logprob: -1.4432802200317383
    3. 'k' → logprob: -1.6932802200317383
    4. '   ' → logprob: -2.6932802200317383
    5. ' k' → logprob: -3.6932802200317383
    6. '#' → logprob: -4.193280220031738
    7. 'import' → logprob: -5.193280220031738
    8. '```' → logprob: -5.318280220031738
    9. 'den' → logprob: -5.943280220031738
    10. 't' → logprob: -6.068280220031738

Token 3502: ' t' (ID: 260)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07639297842979431
    2. ' abs' → logprob: -3.326392889022827
    3. 'any' → logprob: -3.951392889022827
    4. 't' → logprob: -5.576393127441406
    5. 'c' → logprob: -5.701393127441406
    6. 'k' → logprob: -5.951393127441406
    7. 'frac' → logprob: -6.076393127441406
    8. ' any' → logprob: -6.951393127441406
    9. 'len' → logprob: -6.951393127441406
    10. 'check' → logprob: -7.076393127441406

Token 3503: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.39582642912864685
    2. 'ype' → logprob: -3.1458263397216797
    3. 's' → logprob: -3.2708263397216797
    4. ' >=' → logprob: -3.3958263397216797
    5. 'ol' → logprob: -3.5208263397216797
    6. '>=' → logprob: -3.6458263397216797
    7. ' =' → logprob: -3.7708263397216797
    8. '_num' → logprob: -3.7708263397216797
    9. ' <' → logprob: -3.8958263397216797
    10. ' in' → logprob: -4.52082633972168

Token 3504: ' proche' (ID: 61089)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2510564923286438
    2. '==' → logprob: -2.501056432723999
    3. ' <=' → logprob: -2.626056432723999
    4. '*' → logprob: -4.126056671142578
    5. ' in' → logprob: -4.376056671142578
    6. ' *' → logprob: -4.501056671142578
    7. ' >=' → logprob: -4.626056671142578
    8. '<=' → logprob: -5.001056671142578
    9. ' %' → logprob: -5.876056671142578
    10. '%' → logprob: -6.001056671142578

Token 3505: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8575981855392456
    2. '=' → logprob: -1.9825981855392456
    3. ',' → logprob: -2.357598304748535
    4. 't' → logprob: -2.357598304748535
    5. ')' → logprob: -2.607598304748535
    6. ' to' → logprob: -2.732598304748535
    7. '(' → logprob: -3.357598304748535
    8. ':' → logprob: -3.357598304748535
    9. ' =' → logprob: -3.607598304748535
    10. '<|end|>' → logprob: -3.607598304748535

Token 3506: ' k' (ID: 372)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9898785948753357
    2. 't' → logprob: -0.9898785948753357
    3. 'k' → logprob: -2.4898786544799805
    4. '0' → logprob: -2.6148786544799805
    5. 'round' → logprob: -2.7398786544799805
    6. 'float' → logprob: -4.1148786544799805
    7. 'int' → logprob: -4.4898786544799805
    8. 'candidate' → logprob: -5.9898786544799805
    9. ' candidates' → logprob: -6.8648786544799805
    10. '360' → logprob: -7.7398786544799805

Token 3507: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3195037841796875
    2. '*' → logprob: -1.3195037841796875
    3. ')' → logprob: -6.0695037841796875
    4. ',' → logprob: -6.9445037841796875
    5. ' ' → logprob: -7.3195037841796875
    6. '   ' → logprob: -8.194503784179688
    7. '#' → logprob: -9.069503784179688
    8. ']' → logprob: -9.069503784179688
    9. '+' → logprob: -9.194503784179688
    10. '**' → logprob: -9.319503784179688

Token 3508: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -10.250059127807617
    3. 'den' → logprob: -10.750059127807617
    4. '   ' → logprob: -14.125059127807617
    5. '  ' → logprob: -14.625059127807617
    6. '36' → logprob: -15.875059127807617
    7. '1' → logprob: -15.875059127807617
    8. '(' → logprob: -16.250059127807617
    9. 'int' → logprob: -16.250059127807617
    10. '180' → logprob: -16.375059127807617

Token 3509: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5798642635345459
    2. ' /' → logprob: -0.9548642635345459
    3. '<|end|>' → logprob: -3.829864263534546
    4. '<|end|>' → logprob: -3.954864263534546
    5. ',' → logprob: -5.454864501953125
    6. '   ' → logprob: -5.954864501953125
    7. ')' → logprob: -6.454864501953125
    8. '.' → logprob: -7.579864501953125
    9. ' and' → logprob: -7.704864501953125
    10. '%' → logprob: -7.829864501953125

Token 3510: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00013774730905424803
    2. 'abs' → logprob: -9.000137329101562
    3. ' den' → logprob: -12.625137329101562
    4. 'd' → logprob: -12.875137329101562
    5. 'int' → logprob: -13.000137329101562
    6. 'float' → logprob: -13.375137329101562
    7. 'sign' → logprob: -13.750137329101562
    8. '100' → logprob: -14.375137329101562
    9. '(' → logprob: -14.875137329101562
    10. '_den' → logprob: -15.125137329101562

Token 3511: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8843067288398743
    2. ')' → logprob: -1.3843066692352295
    3. '   ' → logprob: -1.6343066692352295
    4. '):' → logprob: -2.6343066692352295
    5. ',' → logprob: -4.509306907653809
    6. '```' → logprob: -4.634306907653809
    7. ':
' → logprob: -5.009306907653809
    8. '(' → logprob: -5.384306907653809
    9. '<|end|>' → logprob: -5.759306907653809
    10. 'for' → logprob: -5.884306907653809

Token 3512: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.596089780330658
    2. '0' → logprob: -1.9710898399353027
    3. 'abs' → logprob: -2.3460898399353027
    4. 'sign' → logprob: -2.5960898399353027
    5. 'i' → logprob: -3.2210898399353027
    6. '1' → logprob: -3.2210898399353027
    7. 'range' → logprob: -3.9710898399353027
    8. '#' → logprob: -4.596089839935303
    9. 't' → logprob: -5.096089839935303
    10. 'candidate' → logprob: -5.221089839935303

Token 3513: ' entier' (ID: 80473)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3514: ' proche' (ID: 61089)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6874393820762634
    2. '   ' → logprob: -1.4374394416809082
    3. ':' → logprob: -2.187439441680908
    4. '<|end|>' → logprob: -2.687439441680908
    5. '<|end|>' → logprob: -4.312439441680908
    6. ',' → logprob: -4.937439441680908
    7. '```' → logprob: -5.062439441680908
    8. '
' → logprob: -5.062439441680908
    9. '[' → logprob: -5.187439441680908
    10. ' ' → logprob: -5.187439441680908

Token 3515: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5694754123687744
    2. ')' → logprob: -1.8194754123687744
    3. '<|end|>' → logprob: -1.8194754123687744
    4. '```' → logprob: -2.8194754123687744
    5. '[' → logprob: -3.0694754123687744
    6. ' k' → logprob: -3.1944754123687744
    7. ' for' → logprob: -3.3194754123687744
    8. '...' → logprob: -3.4444754123687744
    9. '#' → logprob: -3.5694754123687744
    10. 'for' → logprob: -3.6944754123687744

Token 3516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1715826392173767
    2. ')' → logprob: -2.6715826988220215
    3. ' for' → logprob: -3.4215826988220215
    4. '       ' → logprob: -4.1715826988220215
    5. '           ' → logprob: -4.9215826988220215
    6. 'for' → logprob: -5.0465826988220215
    7. '#' → logprob: -5.1715826988220215
    8. '...' → logprob: -5.7965826988220215
    9. ':' → logprob: -5.9215826988220215
    10. '```' → logprob: -5.9215826988220215

Token 3517: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08487057685852051
    2. '   ' → logprob: -3.0848705768585205
    3. '       ' → logprob: -4.334870338439941
    4. ' for' → logprob: -4.459870338439941
    5. '```' → logprob: -5.084870338439941
    6. 'k' → logprob: -6.084870338439941
    7. '#' (adapté à ' #') → logprob: -7.459870338439941
    8. '           ' → logprob: -7.459870338439941
    9. '
' → logprob: -8.084870338439941
    10. 'if' → logprob: -8.459870338439941

Token 3518: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3715263307094574
    2. '       ' → logprob: -2.4965262413024902
    3. 'for' → logprob: -2.7465262413024902
    4. '```' → logprob: -2.7465262413024902
    5. ' for' → logprob: -2.8715262413024902
    6. 'k' → logprob: -4.49652624130249
    7. '           ' → logprob: -4.62152624130249
    8. '#' → logprob: -4.74652624130249
    9. ' k' → logprob: -5.99652624130249
    10. ' if' → logprob: -6.37152624130249

Token 3519: ' tente' (ID: 75234)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.34499821066856384
    2. '#' → logprob: -2.0949981212615967
    3. 'for' → logprob: -2.8449981212615967
    4. ' continue' → logprob: -3.8449981212615967
    5. 'cherche' → logprob: -4.469998359680176
    6. ' #' → logprob: -4.719998359680176
    7. ' for' → logprob: -4.969998359680176
    8. 'ret' → logprob: -4.969998359680176
    9. 'repr' → logprob: -5.219998359680176
    10. '```' → logprob: -5.219998359680176

Token 3520: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5807787775993347
    2. 'for' → logprob: -1.2057788372039795
    3. 'k' → logprob: -2.8307788372039795
    4. '   ' → logprob: -2.9557788372039795
    5. ' k' → logprob: -4.5807785987854
    6. '```' → logprob: -4.9557785987854
    7. '       ' → logprob: -5.4557785987854
    8. ':' → logprob: -6.4557785987854
    9. 'range' → logprob: -6.4557785987854
    10. '
' → logprob: -7.3307785987854

Token 3521: ' trouver' (ID: 23195)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.274693250656128
    2. 'for' → logprob: -1.524693250656128
    3. 'k' → logprob: -1.899693250656128
    4. 'import' → logprob: -2.274693250656128
    5. 'find' → logprob: -2.399693250656128
    6. '#' → logprob: -3.274693250656128
    7. 'continue' → logprob: -3.524693250656128
    8. 'abs' → logprob: -4.149693489074707
    9. 'min' → logprob: -4.524693489074707
    10. 'int' → logprob: -4.524693489074707

Token 3522: ' fraction' (ID: 33763)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04226582124829292
    2. 'for' → logprob: -3.5422658920288086
    3. ' for' → logprob: -5.917265892028809
    4. ' k' → logprob: -5.917265892028809
    5. 'sign' → logprob: -6.167265892028809
    6. 't' → logprob: -6.667265892028809
    7. 'n' → logprob: -7.042265892028809
    8. 'best' → logprob: -7.292265892028809
    9. '```' → logprob: -7.792265892028809
    10. '(k' → logprob: -8.167265892028809

Token 3523: ' simpl' (ID: 15693)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.9520047903060913
    2. '#' → logprob: -2.077004909515381
    3. ' for' → logprob: -2.077004909515381
    4. ' k' → logprob: -2.327004909515381
    5. ' 
' → logprob: -3.077004909515381
    6. '   ' → logprob: -3.202004909515381
    7. 'n' → logprob: -3.202004909515381
    8. '_' → logprob: -3.452004909515381
    9. ' #' → logprob: -3.452004909515381
    10. 'for' → logprob: -3.452004909515381

Token 3524: 'ifiée' (ID: 88506)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.002763864118605852
    2. 'if' → logprob: -7.002763748168945
    3. 'ify' → logprob: -7.252763748168945
    4. 'ification' → logprob: -7.877763748168945
    5. 'ifie' → logprob: -8.252763748168945
    6. 'ifié' → logprob: -8.377763748168945
    7. 'ifiée' → logprob: -9.752763748168945
    8. 'ified' → logprob: -9.877763748168945
    9. 'ifiez' → logprob: -10.002763748168945
    10. 'def' → logprob: -10.252763748168945

Token 3525: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1542940139770508
    2. 'k' → logprob: -1.7792940139770508
    3. 'for' → logprob: -1.7792940139770508
    4. ' for' → logprob: -2.529294013977051
    5. 'n' → logprob: -2.779294013977051
    6. '#' → logprob: -2.779294013977051
    7. 'def' → logprob: -3.029294013977051
    8. '```' → logprob: -3.654294013977051
    9. ' k' → logprob: -3.904294013977051
    10. 'num' → logprob: -4.654294013977051

Token 3526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0818629264831543
    2. '```' → logprob: -1.2068629264831543
    3. 'for' → logprob: -1.5818629264831543
    4. '#' → logprob: -3.4568629264831543
    5. 'k' → logprob: -3.4568629264831543
    6. 'def' → logprob: -3.8318629264831543
    7. ')' → logprob: -4.331862926483154
    8. '(' → logprob: -4.456862926483154
    9. '       ' → logprob: -5.081862926483154
    10. ' for' → logprob: -5.331862926483154

Token 3527: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061469413340091705
    2. '#' (adapté à ' #') → logprob: -3.686469316482544
    3. 'if' → logprob: -4.811469554901123
    4. 'k' → logprob: -4.936469554901123
    5. '   ' → logprob: -5.186469554901123
    6. 'best' → logprob: -5.311469554901123
    7. 'from' → logprob: -5.811469554901123
    8. 'num' → logprob: -6.936469554901123
    9. 'n' → logprob: -7.061469554901123
    10. 'def' → logprob: -7.561469554901123

Token 3528: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9307709336280823
    2. '   ' → logprob: -1.4307708740234375
    3. '#' → logprob: -1.5557708740234375
    4. 'k' → logprob: -2.5557708740234375
    5. 'if' → logprob: -3.9307708740234375
    6. '```' → logprob: -3.9307708740234375
    7. 'def' → logprob: -4.0557708740234375
    8. 'return' → logprob: -5.1807708740234375
    9. ' for' → logprob: -5.5557708740234375
    10. 't' → logprob: -6.0557708740234375

Token 3529: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4653141498565674
    2. 'if' → logprob: -1.4653141498565674
    3. 'for' → logprob: -1.9653141498565674
    4. ' if' → logprob: -2.7153141498565674
    5. 'k' → logprob: -2.7153141498565674
    6. '#' → logprob: -2.9653141498565674
    7. 's' → logprob: -3.5903141498565674
    8. '       ' → logprob: -3.5903141498565674
    9. 't' → logprob: -3.7153141498565674
    10. '```' → logprob: -3.9653141498565674

Token 3530: ' les' (ID: 1341)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.054588738828897476
    2. 'k' → logprob: -3.554588794708252
    3. 'candidate' → logprob: -4.679588794708252
    4. 'num' → logprob: -5.554588794708252
    5. 'c' → logprob: -5.554588794708252
    6. 't' → logprob: -6.554588794708252
    7. ' sign' → logprob: -7.054588794708252
    8. 'den' → logprob: -7.304588794708252
    9. 'fraction' → logprob: -7.304588794708252
    10. 'cand' → logprob: -7.304588794708252

Token 3531: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7109881639480591
    2. 'c' → logprob: -1.210988163948059
    3. 'sign' → logprob: -2.2109880447387695
    4. 'candidate' → logprob: -2.4609880447387695
    5. 'cand' → logprob: -4.7109880447387695
    6. 't' → logprob: -5.7109880447387695
    7. 'solutions' → logprob: -7.9609880447387695
    8. 'n' → logprob: -8.08598804473877
    9. '_candidates' → logprob: -8.08598804473877
    10. '_candidate' → logprob: -8.21098804473877

Token 3532: '2' (ID: 17)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22796370089054108
    2. 'c' → logprob: -1.9779636859893799
    3. 'candidate' → logprob: -3.47796368598938
    4. 'sign' → logprob: -3.97796368598938
    5. 'cand' → logprob: -4.477963924407959
    6. 't' → logprob: -6.852963924407959
    7. '#' → logprob: -7.977963924407959
    8. 'abs' → logprob: -8.2279634475708
    9. 'solutions' → logprob: -8.2279634475708
    10. '_candidates' → logprob: -8.6029634475708

Token 3533: ' den' (ID: 1786)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6916817426681519
    2. 'for' → logprob: -1.1916817426681519
    3. 'den' → logprob: -2.0666818618774414
    4. 'cases' → logprob: -3.8166818618774414
    5. ':' → logprob: -4.316681861877441
    6. '#' → logprob: -4.816681861877441
    7. 'if' → logprob: -4.941681861877441
    8. ']' → logprob: -6.316681861877441
    9. ' for' → logprob: -6.316681861877441
    10. ')' → logprob: -6.441681861877441

Token 3534: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.735510528087616
    2. 'for' → logprob: -1.2355105876922607
    3. '       ' → logprob: -2.1105105876922607
    4. '1' → logprob: -2.8605105876922607
    5. '```' → logprob: -4.110510349273682
    6. ' for' → logprob: -4.735510349273682
    7. ')' → logprob: -5.110510349273682
    8. ':' → logprob: -5.235510349273682
    9. '):
' → logprob: -5.610510349273682
    10. ':
' → logprob: -6.485510349273682

Token 3535: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40090009570121765
    2. 'for' → logprob: -1.27590012550354
    3. ' for' → logprob: -3.02590012550354
    4. '```' → logprob: -7.400899887084961
    5. '
' → logprob: -7.650899887084961
    6. 'if' → logprob: -8.025899887084961
    7. 'k' → logprob: -8.275899887084961
    8. '#' → logprob: -8.275899887084961
    9. 'den' → logprob: -9.025899887084961
    10. 'def' → logprob: -9.025899887084961

Token 3536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00559752993285656
    2. 'for' → logprob: -6.0055975914001465
    3. ' for' → logprob: -6.5055975914001465
    4. '```' → logprob: -6.5055975914001465
    5. '
' → logprob: -9.880597114562988
    6. '    
' → logprob: -11.380597114562988
    7. '#' → logprob: -11.380597114562988
    8. '       ' → logprob: -11.380597114562988
    9. 'import' → logprob: -11.755597114562988
    10. '``' → logprob: -11.880597114562988

Token 3537: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2645730972290039
    2. '   ' → logprob: -1.514573097229004
    3. ' for' → logprob: -5.264573097229004
    4. 'best' → logprob: -5.514573097229004
    5. '```' → logprob: -6.139573097229004
    6. 'found' → logprob: -8.264573097229004
    7. 'c' → logprob: -8.639573097229004
    8. 'min' → logprob: -8.639573097229004
    9. 'k' → logprob: -8.889573097229004
    10. '#' (adapté à ' #') → logprob: -9.139573097229004

Token 3538: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20466923713684082
    2. '```' → logprob: -2.329669237136841
    3. 'for' → logprob: -2.704669237136841
    4. ' for' → logprob: -4.079668998718262
    5. '       ' → logprob: -5.954668998718262
    6. '``' → logprob: -7.329668998718262
    7. 'k' → logprob: -8.829668998718262
    8. 'def' → logprob: -8.954668998718262
    9. 'if' → logprob: -9.204668998718262
    10. '#' → logprob: -9.329668998718262

Token 3539: ' cherche' (ID: 52345)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.714093029499054
    2. 'for' → logprob: -0.964093029499054
    3. '#' → logprob: -3.589092969894409
    4. '   ' → logprob: -3.964092969894409
    5. 'import' → logprob: -3.964092969894409
    6. 'expl' → logprob: -4.214093208312988
    7. ' for' → logprob: -4.589093208312988
    8. 'contin' → logprob: -4.714093208312988
    9. 'try' → logprob: -5.339093208312988
    10. '=' → logprob: -5.714093208312988

Token 3540: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7424963712692261
    2. 'k' → logprob: -1.367496371269226
    3. 'best' → logprob: -1.617496371269226
    4. ' for' → logprob: -3.9924964904785156
    5. 'max' → logprob: -4.617496490478516
    6. 'min' → logprob: -4.867496490478516
    7. 'possible' → logprob: -4.992496490478516
    8. 'sign' → logprob: -5.242496490478516
    9. 't' → logprob: -5.492496490478516
    10. 'def' → logprob: -5.492496490478516

Token 3541: ' entier' (ID: 80473)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9262039065361023
    2. 'for' → logprob: -1.051203966140747
    3. '   ' → logprob: -2.676203966140747
    4. ' =' → logprob: -3.301203966140747
    5. 'k' → logprob: -3.301203966140747
    6. 'range' → logprob: -3.551203966140747
    7. '=' → logprob: -4.176203727722168
    8. ' range' → logprob: -4.551203727722168
    9. '1' → logprob: -5.301203727722168
    10. '#' → logprob: -5.301203727722168

Token 3542: ' tel' (ID: 10716)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2413361668586731
    2. ' for' → logprob: -1.7413361072540283
    3. '   ' → logprob: -4.991336345672607
    4. '```' → logprob: -4.991336345672607
    5. 'range' → logprob: -5.366336345672607
    6. ':' → logprob: -5.366336345672607
    7. 'k' → logprob: -5.991336345672607
    8. '1' → logprob: -6.116336345672607
    9. ')' → logprob: -6.366336345672607
    10. '#' → logprob: -6.741336345672607

Token 3543: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7076833844184875
    2. '   ' → logprob: -1.3326833248138428
    3. 'que' → logprob: -1.7076833248138428
    4. '       ' → logprob: -3.9576833248138428
    5. ' que' → logprob: -4.082683563232422
    6. '#' → logprob: -5.207683563232422
    7. 'k' → logprob: -5.832683563232422
    8. 'def' → logprob: -6.082683563232422
    9. 'that' → logprob: -6.082683563232422
    10. 'range' → logprob: -6.082683563232422

Token 3544: ' |' (ID: 1022)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.22471854090690613
    2. 'True' → logprob: -2.2247185707092285
    3. 'k' → logprob: -3.3497185707092285
    4. 'any' → logprob: -3.8497185707092285
    5. ' abs' → logprob: -4.5997185707092285
    6. 't' → logprob: -4.8497185707092285
    7. '(abs' → logprob: -5.7247185707092285
    8. 'False' → logprob: -5.9747185707092285
    9. 'for' → logprob: -6.3497185707092285
    10. ' True' → logprob: -6.4747185707092285

Token 3545: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05000251904129982
    2. 'abs' → logprob: -3.6750025749206543
    3. 'k' → logprob: -4.050002574920654
    4. 'int' → logprob: -6.050002574920654
    5. '(abs' → logprob: -6.800002574920654
    6. '(k' → logprob: -7.425002574920654
    7. '(t' → logprob: -7.425002574920654
    8. ' t' → logprob: -7.550002574920654
    9. 'round' → logprob: -8.175002098083496
    10. 'den' → logprob: -9.300002098083496

Token 3546: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.0061300029046833515
    2. '_num' → logprob: -5.506130218505859
    3. '-sol' → logprob: -8.00613021850586
    4. 'sol' → logprob: -8.25613021850586
    5. '#' → logprob: -8.63113021850586
    6. '_s' → logprob: -8.63113021850586
    7. '_' → logprob: -8.75613021850586
    8. 'num' → logprob: -9.00613021850586
    9. '=' → logprob: -9.00613021850586
    10. 's' → logprob: -9.00613021850586

Token 3547: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8326432108879089
    2. ' *' → logprob: -0.8326432108879089
    3. ' -' → logprob: -2.0826432704925537
    4. '-' → logprob: -5.207643032073975
    5. '*k' → logprob: -10.582643508911133
    6. ' ' → logprob: -10.957643508911133
    7. '*t' → logprob: -10.957643508911133
    8. '*(' → logprob: -11.582643508911133
    9. '-k' → logprob: -11.832643508911133
    10. '*num' → logprob: -11.832643508911133

Token 3548: ' k' (ID: 372)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6949846148490906
    2. 'round' → logprob: -1.6949846744537354
    3. 'k' → logprob: -1.9449846744537354
    4. '(round' → logprob: -1.9449846744537354
    5. 'int' → logprob: -4.444984436035156
    6. '(k' → logprob: -5.069984436035156
    7. '(t' → logprob: -5.319984436035156
    8. '(int' → logprob: -5.944984436035156
    9. '0' → logprob: -6.194984436035156
    10. ' round' → logprob: -6.944984436035156

Token 3549: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.387029230594635
    2. ' *' → logprob: -1.1370291709899902
    3. '|' → logprob: -9.887029647827148
    4. '360' → logprob: -10.387029647827148
    5. ' ' → logprob: -11.637029647827148
    6. '*(' → logprob: -12.012029647827148
    7. ' |' → logprob: -12.137029647827148
    8. '*num' → logprob: -12.137029647827148
    9. '```' → logprob: -12.512029647827148
    10. ' ' → logprob: -12.512029647827148

Token 3550: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.0029198264237493277
    2. 'den' → logprob: -6.252919673919678
    3. ' ' → logprob: -7.002919673919678
    4. '(' → logprob: -10.502920150756836
    5. '   ' → logprob: -11.377920150756836
    6. '1' → logprob: -12.002920150756836
    7. ' den' → logprob: -12.377920150756836
    8. ' (' → logprob: -12.627920150756836
    9. '`' → logprob: -13.002920150756836
    10. '  ' → logprob: -13.065420150756836

Token 3551: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.029995771124958992
    2. ' /' → logprob: -3.5299956798553467
    3. '360' → logprob: -9.154995918273926
    4. '|' → logprob: -9.654995918273926
    5. '*' → logprob: -10.904995918273926
    6. '/div' → logprob: -11.404995918273926
    7. '   ' → logprob: -12.029995918273926
    8. ' ' → logprob: -12.279995918273926
    9. '/f' → logprob: -12.404995918273926
    10. '/(' → logprob: -12.529995918273926

Token 3552: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.024940812960267067
    2. 'abs' → logprob: -3.8999407291412354
    3. '360' → logprob: -5.5249409675598145
    4. '1' → logprob: -8.774940490722656
    5. ' den' → logprob: -9.399940490722656
    6. 'float' → logprob: -9.774940490722656
    7. '```' → logprob: -10.524940490722656
    8. '{' → logprob: -11.649940490722656
    9. '(' → logprob: -11.899940490722656
    10. '(abs' → logprob: -12.024940490722656

Token 3553: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0004882152716163546
    2. '*' → logprob: -8.37548828125
    3. ')' → logprob: -8.75048828125
    4. ' |' → logprob: -9.87548828125
    5. '/' → logprob: -11.50048828125
    6. 'abs' → logprob: -11.75048828125
    7. ')|' → logprob: -11.87548828125
    8. ' *' → logprob: -11.87548828125
    9. '|
' → logprob: -13.37548828125
    10. '#' → logprob: -13.62548828125

Token 3554: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.44518864154815674
    2. ' <=' → logprob: -1.3201886415481567
    3. '<' → logprob: -4.070188522338867
    4. ' ==' → logprob: -4.195188522338867
    5. '<=' → logprob: -4.320188522338867
    6. 'abs' → logprob: -4.820188522338867
    7. '=' → logprob: -5.195188522338867
    8. ')' → logprob: -5.445188522338867
    9. ' abs' → logprob: -5.445188522338867
    10. ' =' → logprob: -5.445188522338867

Token 3555: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3954463510308415e-05
    2. '0' → logprob: -10.125054359436035
    3. ' ' → logprob: -11.375054359436035
    4. '5' → logprob: -13.625054359436035
    5. '10' → logprob: -14.875054359436035
    6. '2' → logprob: -15.250054359436035
    7. 'eps' → logprob: -15.875054359436035
    8. '
' → logprob: -16.37505340576172
    9. 'e' → logprob: -17.00005340576172
    10. '#' → logprob: -17.12505340576172

Token 3556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034081125631928444
    2. '0' → logprob: -5.753407955169678
    3. '5' → logprob: -9.003408432006836
    4. '10' → logprob: -9.878408432006836
    5. '2' → logprob: -10.628408432006836
    6. ' ' → logprob: -10.878408432006836
    7. 'eps' → logprob: -13.253408432006836
    8. 'e' → logprob: -13.253408432006836
    9. 'epsilon' → logprob: -13.753408432006836
    10. '3' → logprob: -13.878408432006836

Token 3557: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0034587064292281866
    2. '000' → logprob: -6.128458499908447
    3. '0' → logprob: -7.003458499908447
    4. '```' → logprob: -9.503458976745605
    5. '-' → logprob: -9.753458976745605
    6. '#' → logprob: -9.753458976745605
    7. '
' → logprob: -10.128458976745605
    8. '10' → logprob: -11.003458976745605
    9. ':' → logprob: -11.253458976745605
    10. '100' → logprob: -11.253458976745605

Token 3558: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. '6' → logprob: -15.875
    3. '```' → logprob: -17.0
    4. ' -' → logprob: -17.25
    5. '12' → logprob: -17.25
    6. '−' → logprob: -17.25
    7. '{-' → logprob: -17.375
    8. '8' → logprob: -17.625
    9. '10' → logprob: -18.125
    10. '14' → logprob: -18.125

Token 3559: '13' (ID: 1311)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0812859535217285
    2. '12' → logprob: -1.3312859535217285
    3. '9' → logprob: -1.8312859535217285
    4. '8' → logprob: -2.4562859535217285
    5. '14' → logprob: -2.7062859535217285
    6. '7' → logprob: -3.3312859535217285
    7. '15' → logprob: -3.8312859535217285
    8. '-' → logprob: -4.8312859535217285
    9. '13' → logprob: -4.8312859535217285
    10. '6' → logprob: -5.3312859535217285

Token 3560: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7214967608451843
    2. '   ' → logprob: -0.9714967608451843
    3. ' for' → logprob: -2.221496820449829
    4. '```' → logprob: -4.22149658203125
    5. '       ' → logprob: -5.59649658203125
    6. 'import' → logprob: -5.97149658203125
    7. 'if' → logprob: -6.72149658203125
    8. 'k' → logprob: -7.47149658203125
    9. 'while' → logprob: -7.59649658203125
    10. '
' → logprob: -7.59649658203125

Token 3561: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43619024753570557
    2. '   ' → logprob: -1.3111902475357056
    3. ' for' → logprob: -2.561190128326416
    4. '```' → logprob: -5.186190128326416
    5. '
' → logprob: -7.186190128326416
    6. '#' → logprob: -8.936190605163574
    7. '       ' → logprob: -9.561190605163574
    8. '``' → logprob: -10.061190605163574
    9. 'import' → logprob: -10.561190605163574
    10. 'if' → logprob: -10.686190605163574

Token 3562: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22959662973880768
    2. 'for' (adapté à ' for') → logprob: -2.6045966148376465
    3. ' for' → logprob: -2.7295966148376465
    4. '```' → logprob: -2.7295966148376465
    5. '       ' → logprob: -7.8545966148376465
    6. '``' → logprob: -8.854597091674805
    7. '
' → logprob: -9.604597091674805
    8. 'while' → logprob: -10.979597091674805
    9. 'i' → logprob: -11.104597091674805
    10. ':' → logprob: -11.104597091674805

Token 3563: ' sign' (ID: 2232)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.5345651507377625
    2. 'sign' → logprob: -0.9095651507377625
    3. 'candidate' → logprob: -5.784564971923828
    4. ' sign' → logprob: -6.034564971923828
    5. 'd' → logprob: -6.534564971923828
    6. '(' → logprob: -6.659564971923828
    7. ' den' → logprob: -6.784564971923828
    8. '(sign' → logprob: -7.909564971923828
    9. '_den' → logprob: -8.034564971923828
    10. 'possible' → logprob: -8.284564971923828

Token 3564: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016106391325592995
    2. 'in' → logprob: -4.141106605529785
    3. ',' → logprob: -10.766106605529785
    4. '_in' → logprob: -10.891106605529785
    5. ' ' → logprob: -11.016106605529785
    6. '_' → logprob: -12.641106605529785
    7. ' ,' → logprob: -12.891106605529785
    8. '	in' → logprob: -12.891106605529785
    9. 's' → logprob: -13.141106605529785
    10. ' s' → logprob: -14.391106605529785

Token 3565: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -11.250029563903809
    3. '[-' → logprob: -11.500029563903809
    4. ' [' → logprob: -12.125029563903809
    5. ' [+' → logprob: -15.250029563903809
    6. '([' → logprob: -15.500029563903809
    7. '(+' → logprob: -15.625029563903809
    8. '[
' → logprob: -16.000030517578125
    9. '{' → logprob: -16.125030517578125
    10. '1' → logprob: -16.500030517578125

Token 3566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.500011444091797
    3. '+' → logprob: -13.750011444091797
    4. '   ' → logprob: -14.875011444091797
    5. '-' → logprob: -15.500011444091797
    6. 'True' → logprob: -17.875011444091797
    7. 'sign' → logprob: -18.000011444091797
    8. '0' → logprob: -18.250011444091797
    9. '  ' → logprob: -18.625011444091797
    10. '2' → logprob: -19.500011444091797

Token 3567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.375005722045898
    3. ',-' → logprob: -14.000005722045898
    4. '   ' → logprob: -15.750005722045898
    5. ',
' → logprob: -15.875005722045898
    6. '1' → logprob: -15.875005722045898
    7. ',+' → logprob: -16.5000057220459
    8. ',int' → logprob: -17.1250057220459
    9. ',#' → logprob: -17.3750057220459
    10. ',(' → logprob: -18.1250057220459

Token 3568: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002334568416699767
    2. ' -' → logprob: -9.00023365020752
    3. '1' → logprob: -9.12523365020752
    4. ' ' → logprob: -14.50023365020752
    5. '0' → logprob: -14.62523365020752
    6. '−' → logprob: -16.000232696533203
    7. ']' → logprob: -18.250232696533203
    8. '   ' → logprob: -18.250232696533203
    9. '```' → logprob: -18.625232696533203
    10. '2' → logprob: -18.625232696533203

Token 3569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. '-' → logprob: -10.500028610229492
    3. ' -' → logprob: -15.500028610229492
    4. ']' → logprob: -15.625028610229492
    5. ' ' → logprob: -16.500028610229492
    6. '```' → logprob: -17.000028610229492
    7. '2' → logprob: -17.125028610229492
    8. 'sign' → logprob: -18.250028610229492
    9. '0' → logprob: -18.687528610229492
    10. '(-' → logprob: -19.000028610229492

Token 3570: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.792923092842102
    2. ']:
' → logprob: -0.917923092842102
    3. '       ' → logprob: -2.4179229736328125
    4. ']:' → logprob: -3.1679229736328125
    5. '   ' → logprob: -4.5429229736328125
    6. ']:
' → logprob: -6.4179229736328125
    7. ':' → logprob: -6.5429229736328125
    8. ':
' → logprob: -6.9179229736328125
    9. ' ,' → logprob: -7.1679229736328125
    10. ']' → logprob: -7.5429229736328125

Token 3571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05614668130874634
    2. ':' → logprob: -3.0561466217041016
    3. '```' → logprob: -5.306146621704102
    4. '   ' → logprob: -6.181146621704102
    5. '	' → logprob: -9.306146621704102
    6. '	   ' → logprob: -9.681146621704102
    7. ' for' → logprob: -9.931146621704102
    8. ' :' → logprob: -10.056146621704102
    9. '<|end|>' → logprob: -10.181146621704102
    10. '[' → logprob: -10.556146621704102

Token 3572: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07555461674928665
    2. '   ' → logprob: -3.075554609298706
    3. 'if' (adapté à ' if') → logprob: -4.075554847717285
    4. ' if' → logprob: -5.200554847717285
    5. 'den' → logprob: -6.450554847717285
    6. 'for' → logprob: -6.450554847717285
    7. ' den' → logprob: -7.700554847717285
    8. ' for' → logprob: -8.450554847717285
    9. '```' → logprob: -8.825554847717285
    10. '_den' → logprob: -10.700554847717285

Token 3573: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.002341281156986952
    2. ' sign' → logprob: -6.252341270446777
    3. '(sign' → logprob: -8.002341270446777
    4. 'den' → logprob: -10.127341270446777
    5. ' (' → logprob: -11.502341270446777
    6. '(' → logprob: -11.627341270446777
    7. '   ' → logprob: -11.752341270446777
    8. ' ' → logprob: -12.377341270446777
    9. 'not' → logprob: -13.502341270446777
    10. ' den' → logprob: -13.752341270446777

Token 3574: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34846410155296326
    2. '==' → logprob: -1.2234641313552856
    3. ']==' → logprob: -12.223464012145996
    4. '==
' → logprob: -12.473464012145996
    5. ':' → logprob: -13.223464012145996
    6. '=' → logprob: -13.223464012145996
    7. '[' → logprob: -13.723464012145996
    8. '==-' → logprob: -13.723464012145996
    9. '```' → logprob: -13.973464012145996
    10. ']' → logprob: -14.223464012145996

Token 3575: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013417120499070734
    2. ' ' → logprob: -9.000134468078613
    3. '0' → logprob: -12.875134468078613
    4. '+' → logprob: -13.125134468078613
    5. '   ' → logprob: -13.125134468078613
    6. '-' → logprob: -13.562634468078613
    7. '=' → logprob: -14.500134468078613
    8. '2' → logprob: -15.187634468078613
    9. 'sign' → logprob: -15.437634468078613
    10. '  ' → logprob: -15.812634468078613

Token 3576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.500110626220703
    3. '   ' → logprob: -11.125110626220703
    4. '+' → logprob: -12.250110626220703
    5. '0' → logprob: -12.375110626220703
    6. '-' → logprob: -12.625110626220703
    7. '2' → logprob: -13.437610626220703
    8. 'True' → logprob: -13.750110626220703
    9. 'den' → logprob: -14.250110626220703
    10. '```' → logprob: -14.562610626220703

Token 3577: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08131427317857742
    2. ':' → logprob: -2.9563143253326416
    3. ' ==' → logprob: -3.9563143253326416
    4. '==' → logprob: -5.3313140869140625
    5. ':
' → logprob: -7.0813140869140625
    6. ' =' → logprob: -7.5813140869140625
    7. '       ' → logprob: -7.9563140869140625
    8. '=' → logprob: -8.206314086914062
    9. '        ' → logprob: -10.581314086914062
    10. ' :' → logprob: -10.831314086914062

Token 3578: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03494643047451973
    2. '       ' → logprob: -3.5349464416503906
    3. '```' → logprob: -5.659946441650391
    4. ':' → logprob: -6.534946441650391
    5. ':
' → logprob: -10.15994644165039
    6. '	       ' → logprob: -10.53494644165039
    7. '               ' → logprob: -10.65994644165039
    8. '         ' → logprob: -10.78494644165039
    9. ' den' → logprob: -10.90994644165039
    10. '#' → logprob: -11.15994644165039

Token 3579: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' (adapté à ' den') → logprob: -0.014224153012037277
    2. '           ' → logprob: -4.389224052429199
    3. ' den' → logprob: -6.514224052429199
    4. '               ' → logprob: -9.1392240524292
    5. 'if' → logprob: -10.3892240524292
    6. '       ' → logprob: -10.5142240524292
    7. 'd' → logprob: -11.1392240524292
    8. 'for' → logprob: -11.3892240524292
    9. '_den' → logprob: -11.6392240524292
    10. '   ' → logprob: -12.3892240524292

Token 3580: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02326679229736328
    2. ' =' → logprob: -3.7732667922973633
    3. '=_' → logprob: -11.648266792297363
    4. '_=' → logprob: -12.273266792297363
    5. '1' → logprob: -13.148266792297363
    6. '=num' → logprob: -13.648266792297363
    7. '=A' → logprob: -14.023266792297363
    8. '=user' → logprob: -14.398266792297363
    9. '=int' → logprob: -15.148266792297363
    10. '=B' → logprob: -15.148266792297363

Token 3581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4248970150947571
    2. '1' → logprob: -1.1748969554901123
    3. ' =' → logprob: -3.2998969554901123
    4. '=_' → logprob: -9.299897193908691
    5. '   ' → logprob: -9.674897193908691
    6. 's' → logprob: -10.549897193908691
    7. '```' → logprob: -10.549897193908691
    8. 'try' → logprob: -10.799897193908691
    9. '_=' → logprob: -11.049897193908691
    10. 'n' → logprob: -11.174897193908691

Token 3582: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.00017922651022672653
    2. 'int' → logprob: -9.375179290771484
    3. 'A' → logprob: -10.000179290771484
    4. 'abs' → logprob: -10.625179290771484
    5. ' den' → logprob: -10.875179290771484
    6. '   ' → logprob: -13.500179290771484
    7. '(' → logprob: -13.750179290771484
    8. 'float' → logprob: -14.125179290771484
    9. '  ' → logprob: -14.875179290771484
    10. '-den' → logprob: -14.875179290771484

Token 3583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047094907495193183
    2. ' =' → logprob: -8.875471115112305
    3. '   ' → logprob: -8.875471115112305
    4. '2' → logprob: -10.000471115112305
    5. '=' → logprob: -10.125471115112305
    6. 'den' → logprob: -10.500471115112305
    7. '       ' → logprob: -11.125471115112305
    8. 'if' → logprob: -11.750471115112305
    9. ':' → logprob: -11.875471115112305
    10. '           ' → logprob: -12.000471115112305

Token 3584: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4728342294692993
    2. ':' → logprob: -1.3478342294692993
    3. '       ' → logprob: -2.8478341102600098
    4. ':
' → logprob: -3.4728341102600098
    5. ',' → logprob: -3.9728341102600098
    6. '=' → logprob: -5.22283411026001
    7. '               ' → logprob: -6.97283411026001
    8. ' =' → logprob: -7.22283411026001
    9. '<|end|>' → logprob: -8.347834587097168
    10. '   ' → logprob: -8.472834587097168

Token 3585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6396566033363342
    2. '           ' → logprob: -0.7646566033363342
    3. ':' → logprob: -5.2646565437316895
    4. '```' → logprob: -7.1396565437316895
    5. 'continue' → logprob: -7.8896565437316895
    6. ',' → logprob: -8.139657020568848
    7. 'else' → logprob: -9.139657020568848
    8. ':
' → logprob: -9.889657020568848
    9. '               ' → logprob: -10.139657020568848
    10. ' continue' → logprob: -10.514657020568848

Token 3586: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2158931940793991
    2. 'else' (adapté à ' else') → logprob: -2.090893268585205
    3. '           ' → logprob: -2.965893268585205
    4. ':' → logprob: -4.090893268585205
    5. '```' → logprob: -6.715893268585205
    6. 'continue' → logprob: -7.590893268585205
    7. ' else' → logprob: -7.840893268585205
    8. ':
' → logprob: -9.715892791748047
    9. '        ' → logprob: -9.965892791748047
    10. '               ' → logprob: -10.090892791748047

Token 3587: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0071058208122849464
    2. ':' → logprob: -5.007105827331543
    3. '=' → logprob: -8.382105827331543
    4. ':
' → logprob: -10.257105827331543
    5. ' =' → logprob: -10.382105827331543
    6. '=True' → logprob: -11.007105827331543
    7. '```' → logprob: -11.132105827331543
    8. '          ' → logprob: -11.382105827331543
    9. '==' → logprob: -11.632105827331543
    10. ',' → logprob: -11.757105827331543

Token 3588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.076218025758862e-05
    2. 'den' → logprob: -9.625070571899414
    3. '               ' → logprob: -13.750070571899414
    4. '       ' → logprob: -14.125070571899414
    5. '#' → logprob: -14.375070571899414
    6. '   ' → logprob: -14.625070571899414
    7. ' den' → logprob: -14.625070571899414
    8. '		' → logprob: -15.375070571899414
    9. '          ' → logprob: -15.375070571899414
    10. '```' → logprob: -15.750070571899414

Token 3589: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' (adapté à ' den') → logprob: -0.0046769496984779835
    2. ' den' → logprob: -5.754676818847656
    3. '           ' → logprob: -6.504676818847656
    4. '```' → logprob: -13.754676818847656
    5. '               ' → logprob: -14.879676818847656
    6. '       ' → logprob: -15.879676818847656
    7. '   ' → logprob: -16.879676818847656
    8. '_den' → logprob: -17.004676818847656
    9. '#' → logprob: -17.504676818847656
    10. '``' → logprob: -17.504676818847656

Token 3590: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012227187864482403
    2. '=' → logprob: -4.8872270584106445
    3. '_=' → logprob: -5.3872270584106445
    4. ' =' → logprob: -10.637227058410645
    5. '=_' → logprob: -11.637227058410645
    6. '_,' → logprob: -14.262227058410645
    7. '_:' → logprob: -14.387227058410645
    8. '```' → logprob: -14.762227058410645
    9. '_
' → logprob: -15.262227058410645
    10. '_]' → logprob: -15.387227058410645

Token 3591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004360571503639221
    2. ' =' → logprob: -5.504360675811768
    3. ':' → logprob: -8.25436019897461
    4. '=True' → logprob: -12.50436019897461
    5. '=_' → logprob: -12.62936019897461
    6. '           ' → logprob: -12.87936019897461
    7. '*=' → logprob: -12.87936019897461
    8. '==' → logprob: -13.12936019897461
    9. '_=' → logprob: -13.12936019897461
    10. '=None' → logprob: -13.25436019897461

Token 3592: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -8.061054359131958e-06
    2. ' den' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.00000762939453
    4. '           ' → logprob: -18.25000762939453
    5. '       ' → logprob: -19.87500762939453
    6. '               ' → logprob: -20.37500762939453
    7. '-den' → logprob: -20.50000762939453
    8. 'det' → logprob: -21.00000762939453
    9. '                   ' → logprob: -21.00000762939453
    10. '  ' → logprob: -21.37500762939453

Token 3593: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. 'sign' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.50000286102295
    4. ' ' → logprob: -15.62500286102295
    5. '```' → logprob: -16.375001907348633
    6. '       ' → logprob: -17.125001907348633
    7. '-' → logprob: -17.625001907348633
    8. '``' → logprob: -17.625001907348633
    9. '+' → logprob: -17.625001907348633
    10. '...' → logprob: -18.125001907348633

Token 3594: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46714136004447937
    2. '       ' → logprob: -1.3421413898468018
    3. '           ' → logprob: -2.2171413898468018
    4. ':
' → logprob: -6.342141151428223
    5. '   ' → logprob: -6.967141151428223
    6. ',' → logprob: -9.092141151428223
    7. '               ' → logprob: -10.467141151428223
    8. ' for' → logprob: -10.842141151428223
    9. ':
' → logprob: -10.967141151428223
    10. ' :' → logprob: -11.092141151428223

Token 3595: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4135929048061371
    2. '           ' → logprob: -1.9135929346084595
    3. '       ' → logprob: -2.16359281539917
    4. ':
' → logprob: -2.66359281539917
    5. '   ' → logprob: -5.78859281539917
    6. ' for' → logprob: -6.78859281539917
    7. '[' → logprob: -7.66359281539917
    8. '	       ' → logprob: -8.288593292236328
    9. 'for' → logprob: -8.663593292236328
    10. ',' → logprob: -8.663593292236328

Token 3596: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2927282154560089
    2. '       ' → logprob: -1.5427281856536865
    3. '           ' → logprob: -4.042728424072266
    4. ' for' → logprob: -4.417728424072266
    5. 'if' (adapté à ' if') → logprob: -5.417728424072266
    6. 'max' → logprob: -5.667728424072266
    7. 'k' → logprob: -6.667728424072266
    8. '   ' → logprob: -7.167728424072266
    9. '```' → logprob: -8.667728424072266
    10. '#' → logprob: -8.917728424072266

Token 3597: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.005717016290873289
    2. 'abs' → logprob: -5.880716800689697
    3. ' den' → logprob: -5.880716800689697
    4. 'not' → logprob: -9.505717277526855
    5. ' abs' → logprob: -10.380717277526855
    6. 'sign' → logprob: -13.005717277526855
    7. ' not' → logprob: -13.505717277526855
    8. '0' → logprob: -13.505717277526855
    9. '   ' → logprob: -14.005717277526855
    10. ' ' → logprob: -14.380717277526855

Token 3598: '_' (ID: 62)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20181314647197723
    2. ' ==' → logprob: -1.9518131017684937
    3. '_' → logprob: -3.201813220977783
    4. '!=' → logprob: -10.451812744140625
    5. '_=' → logprob: -11.951812744140625
    6. ' !=' → logprob: -12.451812744140625
    7. '=' → logprob: -12.826812744140625
    8. '__' → logprob: -13.076812744140625
    9. '#' → logprob: -13.451812744140625
    10. '```' → logprob: -14.326812744140625

Token 3599: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03840601444244385
    2. ' ==' → logprob: -3.2884058952331543
    3. '!=' → logprob: -8.038406372070312
    4. ' !=' → logprob: -10.163406372070312
    5. '==
' → logprob: -13.413406372070312
    6. '```' → logprob: -14.288406372070312
    7. '==-' → logprob: -15.163406372070312
    8. '=' → logprob: -15.413406372070312
    9. ')==' → logprob: -15.538406372070312
    10. ']==' → logprob: -15.788406372070312

Token 3600: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '=' → logprob: -16.62500762939453
    4. '  ' → logprob: -18.37500762939453
    5. ' ' → logprob: -18.62500762939453
    6. '۰' → logprob: -19.00000762939453
    7. '1' → logprob: -19.00000762939453
    8. 'not' → logprob: -19.37500762939453
    9. '```' → logprob: -19.62500762939453
    10. '[' → logprob: -19.68750762939453

Token 3601: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '=' → logprob: -18.000001907348633
    4. '  ' → logprob: -18.375001907348633
    5. ' ' → logprob: -18.625001907348633
    6. '#' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '﻿' → logprob: -19.625001907348633
    9. '​' → logprob: -19.750001907348633
    10. '[' → logprob: -19.750001907348633

Token 3602: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0573740229010582
    2. ':
' → logprob: -2.9323740005493164
    3. '           ' → logprob: -6.057374000549316
    4. '       ' → logprob: -9.682374000549316
    5. '=' → logprob: -11.182374000549316
    6. ':return' → logprob: -11.182374000549316
    7. 'continue' → logprob: -11.932374000549316
    8. '==' → logprob: -11.932374000549316
    9. ':

' → logprob: -12.182374000549316
    10. ',' → logprob: -12.307374000549316

Token 3603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013791639357805252
    2. '       ' → logprob: -7.126379013061523
    3. ':' → logprob: -7.876379013061523
    4. '```' → logprob: -9.126379013061523
    5. '               ' → logprob: -10.626379013061523
    6. '	       ' → logprob: -10.626379013061523
    7. ' continue' → logprob: -11.501379013061523
    8. 'continue' → logprob: -12.001379013061523
    9. '#' → logprob: -12.251379013061523
    10. '          ' → logprob: -12.876379013061523

Token 3604: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.224981889128685
    2. 'continue' (adapté à ' continue') → logprob: -1.7249819040298462
    3. '       ' → logprob: -3.9749817848205566
    4. '               ' → logprob: -6.099981784820557
    5. ' continue' → logprob: -6.224981784820557
    6. '```' → logprob: -8.599982261657715
    7. '	continue' → logprob: -9.974982261657715
    8. '   ' → logprob: -10.099982261657715
    9. '	       ' → logprob: -12.099982261657715
    10. '_continue' → logprob: -12.474982261657715

Token 3605: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.786196975852363e-05
    2. '           ' → logprob: -10.625038146972656
    3. '```' → logprob: -11.625038146972656
    4. '   ' → logprob: -13.125038146972656
    5. '<|end|>' → logprob: -14.375038146972656
    6. ' for' → logprob: -14.375038146972656
    7. '        
' → logprob: -15.375038146972656
    8. '<|end|>' → logprob: -15.500038146972656
    9. '        ' → logprob: -15.750038146972656
    10. '>' → logprob: -16.250038146972656

Token 3606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006006922340020537
    2. '           ' → logprob: -8.125600814819336
    3. '   ' → logprob: -8.875600814819336
    4. '```' → logprob: -9.000600814819336
    5. ' for' → logprob: -10.250600814819336
    6. '
' → logprob: -13.375600814819336
    7. 'for' → logprob: -13.500600814819336
    8. ',' → logprob: -14.500600814819336
    9. '	   ' → logprob: -14.625600814819336
    10. '``' → logprob: -15.375600814819336

Token 3607: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1279081106185913
    2. '   ' → logprob: -2.127908229827881
    3. '```' → logprob: -7.877908229827881
    4. ' for' → logprob: -8.252907752990723
    5. 'for' → logprob: -8.627907752990723
    6. '           ' → logprob: -8.752907752990723
    7. '
' → logprob: -14.127907752990723
    8. 'from' → logprob: -14.502907752990723
    9. ' ' → logprob: -14.877907752990723
    10. '``' → logprob: -15.002907752990723

Token 3608: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12228718400001526
    2. '       ' → logprob: -2.6222872734069824
    3. 'k' → logprob: -4.247287273406982
    4. 'import' → logprob: -4.372287273406982
    5. 'best' → logprob: -5.122287273406982
    6. '   ' → logprob: -6.122287273406982
    7. 't' → logprob: -6.122287273406982
    8. 'from' → logprob: -6.247287273406982
    9. 'min' → logprob: -7.622287273406982
    10. 'epsilon' → logprob: -7.622287273406982

Token 3609: ' calc' (ID: 25691)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.9838733673095703
    2. 'for' → logprob: -1.6088733673095703
    3. '       ' → logprob: -1.7338733673095703
    4. 'try' → logprob: -2.6088733673095703
    5. 'continue' → logprob: -2.7338733673095703
    6. 'ess' → logprob: -3.2338733673095703
    7. '#' → logprob: -3.6088733673095703
    8. 'chercher' → logprob: -4.98387336730957
    9. 'essa' → logprob: -5.35887336730957
    10. ' for' → logprob: -5.60887336730957

Token 3610: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.023234643042087555
    2. 'cule' → logprob: -3.8982346057891846
    3. '       ' → logprob: -6.148234844207764
    4. '           ' → logprob: -8.648234367370605
    5. 'uler' → logprob: -9.148234367370605
    6. 'ulate' → logprob: -9.273234367370605
    7. 'ul' → logprob: -10.023234367370605
    8. 'cul' → logprob: -10.148234367370605
    9. 'ulé' → logprob: -11.398234367370605
    10. '               ' → logprob: -11.648234367370605

Token 3611: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1067383736371994
    2. 'for' → logprob: -2.731738328933716
    3. 'best' → logprob: -4.481738567352295
    4. '           ' → logprob: -4.731738567352295
    5. 'found' → logprob: -5.606738567352295
    6. 'min' → logprob: -5.981738567352295
    7. 'from' → logprob: -6.231738567352295
    8. 'possible' → logprob: -6.231738567352295
    9. 'approx' → logprob: -6.731738567352295
    10. 'candidate' → logprob: -6.856738567352295

Token 3612: ' appro' (ID: 3153)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05110219493508339
    2. ' k' → logprob: -3.9261021614074707
    3. ' =' → logprob: -4.926102161407471
    4. ' for' → logprob: -5.301102161407471
    5. ',' → logprob: -5.551102161407471
    6. '=' → logprob: -6.051102161407471
    7. '           ' → logprob: -6.051102161407471
    8. 'k' → logprob: -6.301102161407471
    9. '=int' → logprob: -6.426102161407471
    10. '_start' → logprob: -7.051102161407471

Token 3613: 'ché' (ID: 27299)
  Prédit: 'xim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xim' → logprob: -0.043624866753816605
    2. 'xi' → logprob: -4.4186248779296875
    3. 'x' → logprob: -4.7936248779296875
    4. 'ximately' → logprob: -5.0436248779296875
    5. 'xima' → logprob: -5.0436248779296875
    6. 'ché' → logprob: -6.1686248779296875
    7. '#' → logprob: -6.4186248779296875
    8. 'ks' → logprob: -7.1686248779296875
    9. 'xx' → logprob: -7.1686248779296875
    10. '```' → logprob: -7.4186248779296875

Token 3614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.413535475730896
    2. 'k' → logprob: -1.663535475730896
    3. ' k' → logprob: -2.6635355949401855
    4. '           ' → logprob: -3.1635355949401855
    5. '```' → logprob: -4.4135355949401855
    6. ',k' → logprob: -4.6635355949401855
    7. ',' → logprob: -5.5385355949401855
    8. 'from' → logprob: -6.1635355949401855
    9. 'int' → logprob: -6.4135355949401855
    10. 'import' → logprob: -6.5385355949401855

Token 3615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04685826227068901
    2. '           ' → logprob: -3.921858310699463
    3. 'int' → logprob: -4.796858310699463
    4. ' =' → logprob: -5.421858310699463
    5. '=int' → logprob: -5.796858310699463
    6. ' k' → logprob: -5.921858310699463
    7. 'k' → logprob: -5.921858310699463
    8. '=' → logprob: -6.796858310699463
    9. ',' → logprob: -6.796858310699463
    10. ' int' → logprob: -6.921858310699463

Token 3616: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7359357476234436
    2. 'k' (adapté à ' k') → logprob: -0.9859357476234436
    3. '       ' → logprob: -1.9859356880187988
    4. '           ' → logprob: -4.735935688018799
    5. '```' → logprob: -6.735935688018799
    6. '               ' → logprob: -8.735936164855957
    7. ' ' → logprob: -8.735936164855957
    8. '   ' → logprob: -9.985936164855957
    9. '``' → logprob: -10.110936164855957
    10. ' ' → logprob: -10.360936164855957

Token 3617: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760295987129211
    2. ' =' → logprob: -0.8260295987129211
    3. '=int' → logprob: -9.326029777526855
    4. 'int' → logprob: -15.576029777526855
    5. '=k' → logprob: -15.826029777526855
    6. '=_' → logprob: -15.951029777526855
    7. '```' → logprob: -16.32602882385254
    8. 's' → logprob: -16.32602882385254
    9. 'k' → logprob: -16.57602882385254
    10. '_=' → logprob: -16.82602882385254

Token 3618: 'approx' (ID: 76945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934265494346619
    2. ' =' → logprob: -0.6934265494346619
    3. '=int' → logprob: -8.193426132202148
    4. 'int' → logprob: -13.818426132202148
    5. '≈' → logprob: -15.068426132202148
    6. ' ' → logprob: -15.443426132202148
    7. '=float' → logprob: -15.568426132202148
    8. '=_' → logprob: -15.943426132202148
    9. '   ' → logprob: -15.943426132202148
    10. '_=' → logprob: -16.06842613220215

Token 3619: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142298936843872
    2. '=' → logprob: -1.701422929763794
    3. '=int' → logprob: -11.701422691345215
    4. '=k' → logprob: -14.576422691345215
    5. ',' → logprob: -15.576422691345215
    6. ')' → logprob: -15.701422691345215
    7. '   ' → logprob: -15.701422691345215
    8. '```' → logprob: -16.07642364501953
    9. ' =
' → logprob: -16.45142364501953
    10. '=
' → logprob: -16.57642364501953

Token 3620: ' t' (ID: 260)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22435055673122406
    2. 'round' → logprob: -1.7243505716323853
    3. 't' → logprob: -3.8493504524230957
    4. ' int' → logprob: -6.974350452423096
    5. ' round' → logprob: -8.724350929260254
    6. '(int' → logprob: -8.849350929260254
    7. '(round' → logprob: -9.474350929260254
    8. '(t' → logprob: -10.224350929260254
    9. ' t' → logprob: -10.974350929260254
    10. 'float' → logprob: -11.974350929260254

Token 3621: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.19639231264591217
    2. '0' → logprob: -1.946392297744751
    3. 'int' → logprob: -4.19639253616333
    4. '_num' → logprob: -4.32139253616333
    5. '=int' → logprob: -6.19639253616333
    6. '_int' → logprob: -6.82139253616333
    7. '_start' → logprob: -6.94639253616333
    8. ' int' → logprob: -7.19639253616333
    9. 't' → logprob: -7.32139253616333
    10. '[int' → logprob: -8.196392059326172

Token 3622: ' *' (ID: 425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34607982635498047
    2. ',' → logprob: -2.2210798263549805
    3. ' *' → logprob: -2.4710798263549805
    4. '=' → logprob: -2.7210798263549805
    5. '*' → logprob: -4.0960798263549805
    6. ')' → logprob: -5.2210798263549805
    7. '=int' → logprob: -6.2210798263549805
    8. ' #' → logprob: -6.5960798263549805
    9. ' /' → logprob: -6.8460798263549805
    10. ' ' → logprob: -6.9710798263549805

Token 3623: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.01239002961665392
    2. 'abs' → logprob: -4.51239013671875
    3. '(abs' → logprob: -7.13739013671875
    4. ' den' → logprob: -8.01239013671875
    5. '(' → logprob: -8.51239013671875
    6. ' abs' → logprob: -11.76239013671875
    7. 'sign' → logprob: -12.76239013671875
    8. ' (' → logprob: -13.38739013671875
    9. '```' → logprob: -14.38739013671875
    10. '(sign' → logprob: -14.63739013671875

Token 3624: '_' (ID: 62)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.43670058250427246
    2. ' //' → logprob: -1.4367005825042725
    3. '//' → logprob: -2.8117005825042725
    4. '/' → logprob: -3.3117005825042725
    5. '_' → logprob: -5.436700820922852
    6. '```' → logprob: -6.061700820922852
    7. ' *' → logprob: -6.186700820922852
    8. '*' → logprob: -6.436700820922852
    9. '360' → logprob: -6.436700820922852
    10. '<|end|>' → logprob: -6.811700820922852

Token 3625: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.9381346702575684
    2. '       ' → logprob: -1.5631346702575684
    3. '//' → logprob: -1.9381346702575684
    4. '<|end|>' → logprob: -2.3131346702575684
    5. '<|end|>' → logprob: -3.4381346702575684
    6. ',' → logprob: -3.4381346702575684
    7. ')' → logprob: -3.8131346702575684
    8. '           ' → logprob: -3.9381346702575684
    9. ' =' → logprob: -4.688134670257568
    10. '   ' → logprob: -4.813134670257568

Token 3626: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.125
    3. ' ' → logprob: -17.25
    4. '180' → logprob: -20.375
    5. '```' → logprob: -20.375
    6. '36' → logprob: -21.0
    7. '{' → logprob: -21.75
    8. '[' → logprob: -21.75
    9. '   ' → logprob: -22.375
    10. '_' → logprob: -23.125

Token 3627: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '(' → logprob: -16.75
    5. '180' → logprob: -16.875
    6. '`' → logprob: -18.25
    7. '120' → logprob: -18.75
    8. '36' → logprob: -19.5
    9. '``' → logprob: -19.625
    10. '[' → logprob: -19.625

Token 3628: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7430284023284912
    2. '       ' → logprob: -1.6180284023284912
    3. '   ' → logprob: -2.243028402328491
    4. '           ' → logprob: -2.743028402328491
    5. ')' → logprob: -2.868028402328491
    6. '\n' → logprob: -3.618028402328491
    7. '```' → logprob: -3.868028402328491
    8. 'int' → logprob: -4.61802864074707
    9. 'k' → logprob: -4.99302864074707
    10. '
' → logprob: -5.86802864074707

Token 3629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008270460180938244
    2. '```' → logprob: -5.508270263671875
    3. '           ' → logprob: -6.883270263671875
    4. ',' → logprob: -7.258270263671875
    5. ' k' → logprob: -7.383270263671875
    6. '`' → logprob: -8.008270263671875
    7. 'k' → logprob: -8.008270263671875
    8. ')' → logprob: -8.383270263671875
    9. '   ' → logprob: -8.633270263671875
    10. '``' → logprob: -9.133270263671875

Token 3630: ' k' (ID: 372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005832957685925066
    2. ' k' → logprob: -8.37558364868164
    3. 'k' (adapté à ' k') → logprob: -9.12558364868164
    4. '```' → logprob: -9.37558364868164
    5. '           ' → logprob: -9.50058364868164
    6. 'from' → logprob: -10.75058364868164
    7. 'import' → logprob: -10.75058364868164
    8. 'for' → logprob: -10.87558364868164
    9. ' for' → logprob: -11.37558364868164
    10. '               ' → logprob: -12.75058364868164

Token 3631: '_floor' (ID: 152330)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19169501960277557
    2. ' =' → logprob: -2.066694974899292
    3. '=int' → logprob: -3.066694974899292
    4. 'int' → logprob: -7.566695213317871
    5. '_start' → logprob: -8.691695213317871
    6. '_floor' → logprob: -8.691695213317871
    7. '=k' → logprob: -8.941695213317871
    8. '_int' → logprob: -9.566695213317871
    9. '+=' → logprob: -10.066695213317871
    10. '_=' → logprob: -10.566695213317871

Token 3632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25240635871887207
    2. '=' → logprob: -1.502406358718872
    3. '=int' → logprob: -7.752406120300293
    4. '=k' → logprob: -10.252406120300293
    5. 'k' → logprob: -11.752406120300293
    6. 'int' → logprob: -13.002406120300293
    7. '```' → logprob: -14.502406120300293
    8. ',k' → logprob: -14.877406120300293
    9. ',' → logprob: -15.127406120300293
    10. ' k' → logprob: -16.12740707397461

Token 3633: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '(int' → logprob: -18.250059127807617
    4. 'max' → logprob: -20.125059127807617
    5. '[int' → logprob: -20.375059127807617
    6. '	int' → logprob: -20.750059127807617
    7. 'math' → logprob: -22.000059127807617
    8. '=int' → logprob: -22.125059127807617
    9. 'import' → logprob: -22.750059127807617
    10. 'k' → logprob: -22.750059127807617

Token 3634: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.804671233519912e-05
    2. '(k' → logprob: -9.50008773803711
    3. 'round' → logprob: -11.25008773803711
    4. '(round' → logprob: -16.37508773803711
    5. ' k' → logprob: -17.00008773803711
    6. 'floor' → logprob: -17.25008773803711
    7. '	k' → logprob: -19.25008773803711
    8. '   ' → logprob: -19.87508773803711
    9. 'max' → logprob: -19.87508773803711
    10. '{k' → logprob: -20.37508773803711

Token 3635: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2669578194618225
    2. '(k' → logprob: -2.1419577598571777
    3. '_floor' → logprob: -2.3919577598571777
    4. 'k' → logprob: -3.7669577598571777
    5. ')' → logprob: -7.391957759857178
    6. 'floor' → logprob: -7.641957759857178
    7. '(' → logprob: -8.016958236694336
    8. ' k' → logprob: -8.516958236694336
    9. '```' → logprob: -8.766958236694336
    10. '_)' → logprob: -9.266958236694336

Token 3636: 'approx' (ID: 76945)
  Prédit: 'approx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.5303448438644409
    2. '_' → logprob: -0.9053448438644409
    3. 'k' → logprob: -5.1553449630737305
    4. 'floor' → logprob: -7.2803449630737305
    5. '_floor' → logprob: -7.6553449630737305
    6. 'loor' → logprob: -8.90534496307373
    7. 'apro' → logprob: -10.28034496307373
    8. ' approx' → logprob: -11.15534496307373
    9. '```' → logprob: -11.53034496307373
    10. 'Approx' → logprob: -11.65534496307373

Token 3637: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2893562912940979
    2. ')
' → logprob: -2.039356231689453
    3. '-' → logprob: -2.539356231689453
    4. ' -' → logprob: -3.539356231689453
    5. 'k' → logprob: -5.664356231689453
    6. '+' → logprob: -6.039356231689453
    7. '       ' → logprob: -6.914356231689453
    8. '<|end|>' → logprob: -7.289356231689453
    9. ' k' → logprob: -7.539356231689453
    10. ' =' → logprob: -7.539356231689453

Token 3638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00523186381906271
    2. ' if' → logprob: -6.005231857299805
    3. 'if' → logprob: -7.005231857299805
    4. 'k' → logprob: -7.505231857299805
    5. '           ' → logprob: -7.755231857299805
    6. '```' → logprob: -7.880231857299805
    7. 'for' → logprob: -8.880231857299805
    8. ' k' → logprob: -9.130231857299805
    9. ',' → logprob: -9.130231857299805
    10. ' for' → logprob: -9.880231857299805

Token 3639: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12899455428123474
    2. 'if' → logprob: -2.3789944648742676
    3. '       ' → logprob: -4.128994464874268
    4. '           ' → logprob: -4.503994464874268
    5. '```' → logprob: -7.753994464874268
    6. 'k' → logprob: -7.878994464874268
    7. ' for' → logprob: -8.503994941711426
    8. '               ' → logprob: -9.253994941711426
    9. ' if' → logprob: -9.628994941711426
    10. '                   ' → logprob: -11.378994941711426

Token 3640: '_k' (ID: 11637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09176421165466309
    2. '=' → logprob: -2.591764211654663
    3. 'for' → logprob: -5.091764450073242
    4. '.append' → logprob: -6.466764450073242
    5. ' for' → logprob: -6.716764450073242
    6. '=[' → logprob: -7.091764450073242
    7. ' in' → logprob: -7.591764450073242
    8. ':' → logprob: -7.591764450073242
    9. '```' → logprob: -7.966764450073242
    10. '       ' → logprob: -8.341764450073242

Token 3641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11396090686321259
    2. ' =' → logprob: -2.2389609813690186
    3. 'for' → logprob: -7.8639607429504395
    4. '=[' → logprob: -7.9889607429504395
    5. '=k' → logprob: -8.488961219787598
    6. '```' → logprob: -9.613961219787598
    7. 'k' → logprob: -10.113961219787598
    8. ' for' → logprob: -11.363961219787598
    9. '=[
' → logprob: -11.363961219787598
    10. '   ' → logprob: -11.488961219787598

Token 3642: ' [' (ID: 723)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -9.496052371105179e-05
    2. '[' → logprob: -10.00009536743164
    3. 'range' → logprob: -10.25009536743164
    4. '[c' → logprob: -12.37509536743164
    5. '[
' → logprob: -12.50009536743164
    6. ' [' → logprob: -12.50009536743164
    7. '[key' → logprob: -14.12509536743164
    8. '[list' → logprob: -14.12509536743164
    9. '[j' → logprob: -15.00009536743164
    10. '[i' → logprob: -15.87509536743164

Token 3643: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.60414821645827e-06
    2. ' k' → logprob: -12.625004768371582
    3. '           ' → logprob: -14.375004768371582
    4. '   ' → logprob: -15.500004768371582
    5. '               ' → logprob: -15.875004768371582
    6. '       ' → logprob: -16.750003814697266
    7. '	k' → logprob: -16.750003814697266
    8. '(k' → logprob: -17.000003814697266
    9. '                   ' → logprob: -17.125003814697266
    10. '[k' → logprob: -17.250003814697266

Token 3644: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.0017123052384704351
    2. 'k' → logprob: -7.251712322235107
    3. 'floor' → logprob: -7.251712322235107
    4. 'Floor' → logprob: -8.62671184539795
    5. '```' → logprob: -11.12671184539795
    6. '_F' → logprob: -11.12671184539795
    7. '_,' → logprob: -11.50171184539795
    8. ',' → logprob: -11.75171184539795
    9. '_' → logprob: -11.75171184539795
    10. ' k' → logprob: -12.00171184539795

Token 3645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00806235522031784
    2. ',k' → logprob: -5.508062362670898
    3. '           ' → logprob: -6.758062362670898
    4. '+' → logprob: -6.758062362670898
    5. ' +' → logprob: -7.383062362670898
    6. ' ,' → logprob: -7.758062362670898
    7. '               ' → logprob: -8.883062362670898
    8. '		' → logprob: -9.383062362670898
    9. 'k' → logprob: -9.883062362670898
    10. '+k' → logprob: -10.133062362670898

Token 3646: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0040835049003362656
    2. ' k' → logprob: -5.504083633422852
    3. '           ' → logprob: -12.254083633422852
    4. '(k' → logprob: -16.50408363342285
    5. ' ' → logprob: -16.75408363342285
    6. '	k' → logprob: -17.00408363342285
    7. '            ' → logprob: -17.62908363342285
    8. '               ' → logprob: -17.62908363342285
    9. '{k' → logprob: -18.25408363342285
    10. '          ' → logprob: -18.62908363342285

Token 3647: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -8.65707261255011e-06
    2. 'floor' → logprob: -12.375008583068848
    3. '_' → logprob: -12.625008583068848
    4. 'loor' → logprob: -14.375008583068848
    5. '+' → logprob: -15.250008583068848
    6. 'Floor' → logprob: -15.375008583068848
    7. 'ceil' → logprob: -18.000009536743164
    8. '```' → logprob: -18.375009536743164
    9. ' floor' → logprob: -18.750009536743164
    10. '.floor' → logprob: -18.875009536743164

Token 3648: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2067808359861374
    2. ' +' → logprob: -2.0817809104919434
    3. 'k' → logprob: -3.0817809104919434
    4. ',' → logprob: -4.456780910491943
    5. '_floor' → logprob: -5.581780910491943
    6. '           ' → logprob: -9.081780433654785
    7. '               ' → logprob: -9.456780433654785
    8. '       ' → logprob: -9.581780433654785
    9. '[' → logprob: -9.581780433654785
    10. '+k' → logprob: -9.706780433654785

Token 3649: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -17.875001907348633
    4. '```' → logprob: -21.250001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '-' → logprob: -21.625001907348633
    7. '[' → logprob: -22.375001907348633
    8. '  ' → logprob: -23.000001907348633
    9. '{' → logprob: -23.250001907348633
    10. '{
' → logprob: -23.500001907348633

Token 3650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.125
    3. ' ' → logprob: -17.25
    4. '-' → logprob: -21.5
    5. '[' → logprob: -22.125
    6. '
' → logprob: -22.25
    7. '```' → logprob: -22.5
    8. '2' → logprob: -22.625
    9. '   ' → logprob: -22.875
    10. 'from' → logprob: -23.875

Token 3651: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027559029404073954
    2. ']
' → logprob: -6.252756118774414
    3. ']' → logprob: -7.502756118774414
    4. '           ' → logprob: -9.252756118774414
    5. ',k' → logprob: -9.252756118774414
    6. ' ,' → logprob: -9.627756118774414
    7. '               ' → logprob: -11.877756118774414
    8. '       ' → logprob: -12.377756118774414
    9. ',
' → logprob: -12.752756118774414
    10. ']

' → logprob: -14.002756118774414

Token 3652: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004507731180638075
    2. '```' → logprob: -6.504507541656494
    3. '               ' → logprob: -6.754507541656494
    4. '       ' → logprob: -6.879507541656494
    5. 'for' → logprob: -8.004508018493652
    6. ' for' → logprob: -8.129508018493652
    7. '[' → logprob: -9.379508018493652
    8. '                   ' → logprob: -10.004508018493652
    9. '                       ' → logprob: -10.754508018493652
    10. ',' → logprob: -11.879508018493652

Token 3653: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26702526211738586
    2. '           ' → logprob: -1.5170252323150635
    3. ' for' → logprob: -4.642025470733643
    4. 'for' (adapté à ' for') → logprob: -5.392025470733643
    5. '               ' → logprob: -7.392025470733643
    6. '   ' → logprob: -9.392024993896484
    7. '```' → logprob: -9.517024993896484
    8. '                   ' → logprob: -11.392024993896484
    9. '                       ' → logprob: -13.517024993896484
    10. '	for' → logprob: -13.642024993896484

Token 3654: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0069991666823625565
    2. 'kc' → logprob: -6.0069990158081055
    3. 'kk' → logprob: -6.1319990158081055
    4. 'candidate' → logprob: -6.3819990158081055
    5. 'cand' → logprob: -7.6319990158081055
    6. 'ck' → logprob: -9.631999015808105
    7. 'ki' → logprob: -10.881999015808105
    8. 'kt' → logprob: -11.256999015808105
    9. ' k' → logprob: -11.381999015808105
    10. 'c' → logprob: -11.506999015808105

Token 3655: '_c' (ID: 1303)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3133258521556854
    2. 'in' → logprob: -1.3133258819580078
    3. 'k' → logprob: -10.313325881958008
    4. 'sign' → logprob: -11.938325881958008
    5. ' ' → logprob: -12.188325881958008
    6. '_' → logprob: -12.438325881958008
    7. 'c' → logprob: -12.813325881958008
    8. '_in' → logprob: -12.813325881958008
    9. 'candidate' → logprob: -12.813325881958008
    10. '	in' → logprob: -13.313325881958008

Token 3656: 'and' (ID: 427)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.442099690437317
    2. 'andidates' → logprob: -1.567099690437317
    3. '_' → logprob: -2.0670995712280273
    4. ' in' → logprob: -2.1920995712280273
    5. '_candidates' → logprob: -2.3170995712280273
    6. 'andidate' → logprob: -2.9420995712280273
    7. 'andidat' → logprob: -3.0670995712280273
    8. 'in' → logprob: -4.192099571228027
    9. '_c' → logprob: -4.442099571228027
    10. '```' → logprob: -4.817099571228027

Token 3657: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01605161465704441
    2. 'in' → logprob: -4.141051769256592
    3. 'k' → logprob: -11.266051292419434
    4. ' k' → logprob: -13.766051292419434
    5. '_in' → logprob: -14.141051292419434
    6. '	in' → logprob: -14.141051292419434
    7. 'n' → logprob: -14.266051292419434
    8. ' ' → logprob: -14.516051292419434
    9. ' в' → logprob: -15.766051292419434
    10. '       ' → logprob: -15.766051292419434

Token 3658: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06592973321676254
    2. '[c' → logprob: -2.815929651260376
    3. '[k' → logprob: -6.315929889678955
    4. '[' → logprob: -6.315929889678955
    5. 'range' → logprob: -8.190929412841797
    6. 'k' → logprob: -10.065929412841797
    7. ' candidates' → logprob: -11.315929412841797
    8. '(c' → logprob: -13.440929412841797
    9. ' [' → logprob: -13.440929412841797
    10. '[-' → logprob: -13.815929412841797

Token 3659: '_k' (ID: 11637)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1486007273197174
    2. '_candidates' → logprob: -3.3986008167266846
    3. '[k' → logprob: -4.0236005783081055
    4. '[c' → logprob: -4.0236005783081055
    5. '_k' → logprob: -4.3986005783081055
    6. 'c' → logprob: -4.5236005783081055
    7. '_c' → logprob: -4.7736005783081055
    8. '[
' → logprob: -5.1486005783081055
    9. 'k' → logprob: -5.2736005783081055
    10. ':' → logprob: -5.3986005783081055

Token 3660: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036432862281799316
    2. ':' → logprob: -3.9114327430725098
    3. ':
' → logprob: -4.28643274307251
    4. '```' → logprob: -6.78643274307251
    5. ' if' → logprob: -8.286433219909668
    6. '<|end|>' → logprob: -9.286433219909668
    7. ',' → logprob: -9.411433219909668
    8. '                           ' → logprob: -9.536433219909668
    9. '<|end|>' → logprob: -9.661433219909668
    10. '	       ' → logprob: -10.286433219909668

Token 3661: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004721445497125387
    2. '```' → logprob: -5.879721641540527
    3. '               ' → logprob: -6.504721641540527
    4. '                   ' → logprob: -8.629721641540527
    5. '                           ' → logprob: -9.504721641540527
    6. '                               ' → logprob: -9.879721641540527
    7. ' if' → logprob: -10.379721641540527
    8. '                       ' → logprob: -10.754721641540527
    9. '                                   ' → logprob: -10.879721641540527
    10. 'if' → logprob: -11.504721641540527

Token 3662: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016292067244648933
    2. '               ' → logprob: -4.641292095184326
    3. 'if' → logprob: -5.391292095184326
    4. ' if' → logprob: -6.391292095184326
    5. '                   ' → logprob: -8.891291618347168
    6. '```' → logprob: -9.266291618347168
    7. 't' → logprob: -10.766291618347168
    8. '                       ' → logprob: -11.641291618347168
    9. '                           ' → logprob: -12.766291618347168
    10. '``' → logprob: -13.141291618347168

Token 3663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.046223558485507965
    2. '=' → logprob: -3.2962236404418945
    3. '           ' → logprob: -4.9212236404418945
    4. '_num' → logprob: -7.6712236404418945
    5. '               ' → logprob: -9.671223640441895
    6. '_tokens' → logprob: -9.796223640441895
    7. 'num' → logprob: -10.171223640441895
    8. ',' → logprob: -10.296223640441895
    9. '=num' → logprob: -10.421223640441895
    10. '_candidates' → logprob: -10.421223640441895

Token 3664: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07261471450328827
    2. 'abs' → logprob: -3.0726146697998047
    3. ' k' → logprob: -4.072614669799805
    4. ' abs' → logprob: -5.072614669799805
    5. '(k' → logprob: -8.447614669799805
    6. '(abs' → logprob: -8.822614669799805
    7. 'sign' → logprob: -10.572614669799805
    8. ' (' → logprob: -11.322614669799805
    9. 'float' → logprob: -11.447614669799805
    10. '(' → logprob: -11.947614669799805

Token 3665: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00031615851912647486
    2. ' *' → logprob: -8.750316619873047
    3. '*' → logprob: -9.750316619873047
    4. '_' → logprob: -10.000316619873047
    5. '<|end|>' → logprob: -11.250316619873047
    6. '_tokens' → logprob: -11.625316619873047
    7. '_candidates' → logprob: -11.625316619873047
    8. ',' → logprob: -12.000316619873047
    9. '*c' → logprob: -12.375316619873047
    10. ' _' → logprob: -13.250316619873047

Token 3666: 'and' (ID: 427)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0035024303942918777
    2. '_' → logprob: -6.253502368927002
    3. 'and' → logprob: -6.628502368927002
    4. '*' → logprob: -8.87850284576416
    5. 'cand' → logprob: -10.50350284576416
    6. 'Cand' → logprob: -10.75350284576416
    7. '```' → logprob: -11.50350284576416
    8. '_*' → logprob: -12.37850284576416
    9. '   ' → logprob: -12.37850284576416
    10. '`' → logprob: -12.75350284576416

Token 3667: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05490044876933098
    2. '*' → logprob: -2.9299004077911377
    3. ',' → logprob: -11.804900169372559
    4. '```' → logprob: -12.054900169372559
    5. '360' → logprob: -13.179900169372559
    6. '*(' → logprob: -14.304900169372559
    7. ' ' → logprob: -14.554900169372559
    8. '#' → logprob: -14.554900169372559
    9. 'import' → logprob: -14.929900169372559
    10. '`' → logprob: -15.179900169372559

Token 3668: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.62500286102295
    3. '```' → logprob: -14.37500286102295
    4. '`' → logprob: -15.12500286102295
    5. ''' → logprob: -16.000001907348633
    6. '180' → logprob: -16.750001907348633
    7. '(' → logprob: -16.750001907348633
    8. '[' → logprob: -17.000001907348633
    9. 'token' → logprob: -17.000001907348633
    10. '<|end|>' → logprob: -17.750001907348633

Token 3669: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '[' → logprob: -16.875001907348633
    5. '`' → logprob: -17.250001907348633
    6. '```' → logprob: -17.375001907348633
    7. '36' → logprob: -18.000001907348633
    8. '180' → logprob: -18.375001907348633
    9. 'import' → logprob: -18.500001907348633
    10. ''' → logprob: -18.750001907348633

Token 3670: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5798146724700928
    2. '/' → logprob: -0.9548146724700928
    3. ',' → logprob: -2.9548146724700928
    4. '           ' → logprob: -6.204814910888672
    5. '```' → logprob: -7.954814910888672
    6. ' ,' → logprob: -8.579814910888672
    7. '<|end|>' → logprob: -9.204814910888672
    8. ' //' → logprob: -9.829814910888672
    9. '//' → logprob: -10.329814910888672
    10. '       ' → logprob: -10.829814910888672

Token 3671: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.029785899445414543
    2. 'abs' → logprob: -3.5297858715057373
    3. ' den' → logprob: -10.654786109924316
    4. '(abs' → logprob: -11.654786109924316
    5. ' abs' → logprob: -13.404786109924316
    6. '(' → logprob: -13.904786109924316
    7. 'float' → logprob: -14.404786109924316
    8. '_den' → logprob: -17.15478515625
    9. 'det' → logprob: -17.90478515625
    10. 'max' → logprob: -18.27978515625

Token 3672: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. '_
' → logprob: -15.125000953674316
    3. '_)' → logprob: -15.750000953674316
    4. '_
' → logprob: -15.875000953674316
    5. '_]' → logprob: -16.625001907348633
    6. ' _' → logprob: -16.625001907348633
    7. '_,' → logprob: -16.875001907348633
    8. '_[' → logprob: -17.500001907348633
    9. '_-' → logprob: -17.500001907348633
    10. '_=' → logprob: -19.000001907348633

Token 3673: '           ' (ID: 352)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2885655164718628
    2. '           ' → logprob: -1.7885655164718628
    3. '-' → logprob: -2.7885656356811523
    4. '```' → logprob: -5.288565635681152
    5. ' ==' → logprob: -5.913565635681152
    6. ',' → logprob: -6.288565635681152
    7. '<|end|>' → logprob: -6.288565635681152
    8. '               ' → logprob: -6.288565635681152
    9. '==' → logprob: -6.538565635681152
    10. ' <=' → logprob: -6.913565635681152

Token 3674: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3993111252784729
    2. 'if' (adapté à ' if') → logprob: -1.1493110656738281
    3. '           ' → logprob: -4.524311065673828
    4. '               ' → logprob: -6.899311065673828
    5. '```' → logprob: -7.899311065673828
    6. '                   ' → logprob: -10.024311065673828
    7. 'abs' → logprob: -10.149311065673828
    8. '                       ' → logprob: -10.524311065673828
    9. '                           ' → logprob: -11.649311065673828
    10. '``' → logprob: -12.149311065673828

Token 3675: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -7.493430894101039e-05
    2. ' abs' → logprob: -9.500075340270996
    3. '(abs' → logprob: -18.00007438659668
    4. '   ' → logprob: -18.50007438659668
    5. '           ' → logprob: -18.50007438659668
    6. '       ' → logprob: -21.00007438659668
    7. '               ' → logprob: -22.00007438659668
    8. '                   ' → logprob: -23.50007438659668
    9. '     ' → logprob: -23.75007438659668
    10. '         ' → logprob: -24.25007438659668

Token 3676: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0052398028783500195
    2. 'val' → logprob: -5.255239963531494
    3. '(t' → logprob: -12.380239486694336
    4. ' val' → logprob: -14.255239486694336
    5. '[val' → logprob: -14.380239486694336
    6. 't' → logprob: -15.005239486694336
    7. ',val' → logprob: -16.005239486694336
    8. '(' → logprob: -16.255239486694336
    9. '           ' → logprob: -16.880239486694336
    10. '	val' → logprob: -18.130239486694336

Token 3677: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519659698009491
    2. '-' → logprob: -1.5019659996032715
    3. '-t' → logprob: -10.626965522766113
    4. '-k' → logprob: -12.001965522766113
    5. '           ' → logprob: -13.001965522766113
    6. '<=' → logprob: -13.751965522766113
    7. '          ' → logprob: -14.501965522766113
    8. ' ' → logprob: -14.876965522766113
    9. ' <=' → logprob: -14.876965522766113
    10. '```' → logprob: -15.126965522766113

Token 3678: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.127333340875339e-06
    2. ' t' → logprob: -12.625003814697266
    3. '           ' → logprob: -14.500003814697266
    4. 'val' → logprob: -15.375003814697266
    5. '`t' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '                   ' → logprob: -19.375003814697266
    8. '               ' → logprob: -19.875003814697266
    9. '       ' → logprob: -20.125003814697266
    10. '          ' → logprob: -20.250003814697266

Token 3679: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -2.935296834039036e-06
    2. 'sol' → logprob: -12.87500286102295
    3. 'Sol' → logprob: -16.250003814697266
    4. '_s' → logprob: -17.375003814697266
    5. '_SOL' → logprob: -17.750003814697266
    6. '_' → logprob: -18.125003814697266
    7. '```' → logprob: -18.250003814697266
    8. '-sol' → logprob: -18.500003814697266
    9. '_solution' → logprob: -18.500003814697266
    10. '솔' → logprob: -19.125003814697266

Token 3680: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05244571343064308
    2. ' <' → logprob: -3.052445650100708
    3. ' <=' → logprob: -6.302445888519287
    4. '<' → logprob: -7.552445888519287
    5. '               ' → logprob: -7.677445888519287
    6. ')<' → logprob: -7.927445888519287
    7. '           ' → logprob: -8.552445411682129
    8. '                   ' → logprob: -8.802445411682129
    9. ')<=' → logprob: -9.052445411682129
    10. '<=' → logprob: -9.552445411682129

Token 3681: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2972813546657562
    2. ' <=' → logprob: -1.4222813844680786
    3. '<' → logprob: -4.422281265258789
    4. '<=' → logprob: -5.547281265258789
    5. '           ' → logprob: -10.922281265258789
    6. '               ' → logprob: -11.172281265258789
    7. ')' → logprob: -11.297281265258789
    8. ')<=' → logprob: -11.797281265258789
    9. '```' → logprob: -12.422281265258789
    10. ' ' → logprob: -12.547281265258789

Token 3682: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.500001907348633
    4. '```' → logprob: -19.375001907348633
    5. '           ' → logprob: -19.750001907348633
    6. '2' → logprob: -20.000001907348633
    7. '10' → logprob: -21.000001907348633
    8. '(' → logprob: -21.125001907348633
    9. '``' → logprob: -21.125001907348633
    10. '`' → logprob: -21.250001907348633

Token 3683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '(' → logprob: -17.625001907348633
    5. '2' → logprob: -17.625001907348633
    6. '```' → logprob: -18.125001907348633
    7. '`' → logprob: -18.625001907348633
    8. '5' → logprob: -19.000001907348633
    9. '10' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.250001907348633

Token 3684: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39010244607925415
    2. '3' → logprob: -1.1401023864746094
    3. 'e' → logprob: -5.765102386474609
    4. '4' → logprob: -9.89010238647461
    5. '{-' → logprob: -11.39010238647461
    6. '```' → logprob: -11.39010238647461
    7. '(-' → logprob: -12.39010238647461
    8. '^-' → logprob: -12.76510238647461
    9. '−' → logprob: -12.89010238647461
    10. '2' → logprob: -13.01510238647461

Token 3685: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '13' → logprob: -18.625
    3. '```' → logprob: -19.0
    4. '14' → logprob: -19.75
    5. ' -' → logprob: -19.875
    6. '−' → logprob: -20.625
    7. '**' → logprob: -20.75
    8. '\-' → logprob: -20.875
    9. '{-' → logprob: -21.0
    10. '^-' → logprob: -21.125

Token 3686: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.07077854126691818
    2. '12' → logprob: -2.8207786083221436
    3. '14' → logprob: -4.8207783699035645
    4. '11' → logprob: -8.070778846740723
    5. '10' → logprob: -8.195778846740723
    6. '15' → logprob: -9.195778846740723
    7. '9' → logprob: -10.820778846740723
    8. '8' → logprob: -14.070778846740723
    9. '-' → logprob: -14.695778846740723
    10. '16' → logprob: -15.508278846740723

Token 3687: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027917418628931046
    2. ':
' → logprob: -3.9029173851013184
    3. '               ' → logprob: -5.152917385101318
    4. ' and' → logprob: -7.027917385101318
    5. '           ' → logprob: -8.277917861938477
    6. '):' → logprob: -8.527917861938477
    7. '):
' → logprob: -10.402917861938477
    8. '                   ' → logprob: -10.652917861938477
    9. '                       ' → logprob: -10.777917861938477
    10. ' :' → logprob: -10.777917861938477

Token 3688: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.26935094594955444
    2. '0' → logprob: -3.019351005554199
    3. 'val' → logprob: -3.519351005554199
    4. '(k' → logprob: -3.519351005554199
    5. '(' → logprob: -3.644351005554199
    6. ' k' → logprob: -3.769351005554199
    7. 'no' → logprob: -3.769351005554199
    8. ' (' → logprob: -4.769351005554199
    9. 'check' → logprob: -4.769351005554199
    10. ' no' → logprob: -5.019351005554199

Token 3689: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1875571544806007e-05
    2. '>=' → logprob: -11.500011444091797
    3. 'in' → logprob: -15.000011444091797
    4. ' >=' → logprob: -15.125011444091797
    5. '#' → logprob: -15.500011444091797
    6. '>' → logprob: -15.750011444091797
    7. '<|end|>' → logprob: -16.125011444091797
    8. ' in' → logprob: -16.375011444091797
    9. 'c' → logprob: -16.375011444091797
    10. '_' → logprob: -16.750011444091797

Token 3690: 'and' (ID: 427)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.008055023849010468
    2. 'and' → logprob: -4.883055210113525
    3. 'cand' → logprob: -7.758055210113525
    4. 'c' → logprob: -12.008054733276367
    5. '>=' → logprob: -12.258054733276367
    6. '>' → logprob: -12.758054733276367
    7. '```' → logprob: -14.008054733276367
    8. 'andid' → logprob: -14.258054733276367
    9. '_' → logprob: -14.383054733276367
    10. 'Cand' → logprob: -14.383054733276367

Token 3691: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.06401434540748596
    2. '>=' → logprob: -2.814014434814453
    3. ' >' → logprob: -6.314014434814453
    4. '>' → logprob: -8.564014434814453
    5. ' !=' → logprob: -10.189014434814453
    6. '!=' → logprob: -13.689014434814453
    7. ' <=' → logprob: -13.689014434814453
    8. ' ' → logprob: -13.814014434814453
    9. ' ≥' → logprob: -14.689014434814453
    10. '[' → logprob: -15.189014434814453

Token 3692: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031880477908998728
    2. 't' → logprob: -6.253188133239746
    3. ' ' → logprob: -6.753188133239746
    4. ' t' → logprob: -9.628188133239746
    5. 'k' → logprob: -10.753188133239746
    6. '1' → logprob: -13.003188133239746
    7. '   ' → logprob: -14.878188133239746
    8. '(t' → logprob: -15.128188133239746
    9. ' k' → logprob: -15.190688133239746
    10. 'int' → logprob: -15.440688133239746

Token 3693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005707867676392198
    2. 't' → logprob: -7.500570774078369
    3. ' ' → logprob: -11.250571250915527
    4. 'k' → logprob: -13.125571250915527
    5. '1' → logprob: -14.250571250915527
    6. 'int' → logprob: -14.375571250915527
    7. ' t' → logprob: -14.375571250915527
    8. '(' → logprob: -15.125571250915527
    9. '(t' → logprob: -15.250571250915527
    10. '-' → logprob: -16.18807029724121

Token 3694: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.731650173664093
    2. '               ' → logprob: -1.2316501140594482
    3. ' and' → logprob: -2.1066501140594482
    4. ':' → logprob: -2.3566501140594482
    5. '           ' → logprob: -4.981650352478027
    6. 'and' → logprob: -7.231650352478027
    7. '              ' → logprob: -7.356650352478027
    8. '                   ' → logprob: -7.606650352478027
    9. ',' → logprob: -7.731650352478027
    10. '                       ' → logprob: -7.731650352478027

Token 3695: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.227250610711053e-05
    2. '                   ' → logprob: -11.375041961669922
    3. '```' → logprob: -11.500041961669922
    4. '              ' → logprob: -11.750041961669922
    5. '                               ' → logprob: -12.000041961669922
    6. '                       ' → logprob: -13.125041961669922
    7. '           ' → logprob: -13.750041961669922
    8. '                           ' → logprob: -13.875041961669922
    9. '                ' → logprob: -14.750041961669922
    10. ':' → logprob: -15.375041961669922

Token 3696: ' n' (ID: 297)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19749318063259125
    2. ' return' → logprob: -2.697493076324463
    3. 'return' → logprob: -2.822493076324463
    4. '               ' → logprob: -3.072493076324463
    5. '           ' → logprob: -5.447493076324463
    6. '       ' → logprob: -7.572493076324463
    7. '                       ' → logprob: -7.822493076324463
    8. '```' → logprob: -8.197493553161621
    9. '   ' → logprob: -8.322493553161621
    10. '                ' → logprob: -9.697493553161621

Token 3697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5143733024597168
    2. ' =' → logprob: -1.1393733024597168
    3. 'um' → logprob: -2.764373302459717
    4. ',' → logprob: -4.014373302459717
    5. 'u' → logprob: -8.264373779296875
    6. '=num' → logprob: -8.389373779296875
    7. 'umerator' → logprob: -9.139373779296875
    8. 'umer' → logprob: -9.264373779296875
    9. '=u' → logprob: -9.639373779296875
    10. '   ' → logprob: -9.639373779296875

Token 3698: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.52919222577475e-05
    2. ' k' → logprob: -9.500075340270996
    3. '                   ' → logprob: -15.125075340270996
    4. '               ' → logprob: -16.12507438659668
    5. '   ' → logprob: -18.75007438659668
    6. '                ' → logprob: -19.62507438659668
    7. '           ' → logprob: -19.87507438659668
    8. '	k' → logprob: -19.87507438659668
    9. '                       ' → logprob: -20.00007438659668
    10. '{k' → logprob: -20.37507438659668

Token 3699: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.3213025744771585e-05
    2. 'c' → logprob: -10.625033378601074
    3. '*' → logprob: -12.375033378601074
    4. '_' → logprob: -13.875033378601074
    5. '`' → logprob: -14.250033378601074
    6. 'cand' → logprob: -14.500033378601074
    7. '```' → logprob: -14.500033378601074
    8. ' ' → logprob: -14.875033378601074
    9. ' _' → logprob: -15.125033378601074
    10. ' =' → logprob: -15.500033378601074

Token 3700: 'and' (ID: 427)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.006819447036832571
    2. 'and' → logprob: -5.006819248199463
    3. 'cand' → logprob: -10.131819725036621
    4. ' cand' → logprob: -11.256819725036621
    5. 'c' → logprob: -11.256819725036621
    6. 'Cand' → logprob: -11.381819725036621
    7. '_' → logprob: -12.381819725036621
    8. '_s' → logprob: -12.506819725036621
    9. '_g' → logprob: -13.381819725036621
    10. '_candidates' → logprob: -13.506819725036621

Token 3701: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38863953948020935
    2. ' *' → logprob: -1.1386395692825317
    3. ',' → logprob: -6.388639450073242
    4. '360' → logprob: -10.263639450073242
    5. '```' → logprob: -10.513639450073242
    6. '               ' → logprob: -11.888639450073242
    7. '
' → logprob: -12.388639450073242
    8. 'import' → logprob: -13.138639450073242
    9. '`' → logprob: -13.263639450073242
    10. '**' → logprob: -13.638639450073242

Token 3702: ' ' (ID: 220)
  Prédit: '360'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '36' → logprob: -18.25
    4. '180' → logprob: -19.5
    5. '```' → logprob: -22.25
    6. '120' → logprob: -22.375
    7. '(' → logprob: -22.375
    8. '`' → logprob: -22.75
    9. '...' → logprob: -22.875
    10. ''' → logprob: -22.875

Token 3703: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: 0.0
    2. '180' → logprob: -19.25
    3. ' ' → logprob: -19.5
    4. '36' → logprob: -20.125
    5. '60' → logprob: -20.875
    6. '120' → logprob: -21.5
    7. '(' → logprob: -22.75
    8. ''' → logprob: -23.25
    9. '300' → logprob: -23.5
    10. '359' → logprob: -23.625

Token 3704: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16337503492832184
    2. '               ' → logprob: -1.9133750200271606
    3. ',
' → logprob: -6.538374900817871
    4. '<|end|>' → logprob: -7.663374900817871
    5. '                   ' → logprob: -7.788374900817871
    6. '```' → logprob: -8.538374900817871
    7. '           ' → logprob: -9.288374900817871
    8. '                ' → logprob: -9.413374900817871
    9. '
' → logprob: -9.663374900817871
    10. '              ' → logprob: -9.788374900817871

Token 3705: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005141015630215406
    2. '               ' → logprob: -5.505140781402588
    3. ',
' → logprob: -7.505140781402588
    4. ',d' → logprob: -8.005141258239746
    5. ' ,' → logprob: -9.505141258239746
    6. '                   ' → logprob: -10.130141258239746
    7. '```' → logprob: -10.505141258239746
    8. '`,' → logprob: -12.755141258239746
    9. '<|end|>' → logprob: -12.755141258239746
    10. ',n' → logprob: -13.005141258239746

Token 3706: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00014609156642109156
    2. ' d' → logprob: -9.00014591217041
    3. '               ' → logprob: -10.75014591217041
    4. '	d' → logprob: -14.12514591217041
    5. '                   ' → logprob: -15.62514591217041
    6. '```' → logprob: -16.375146865844727
    7. '       ' → logprob: -16.625146865844727
    8. ',d' → logprob: -17.000146865844727
    9. 'den' → logprob: -17.625146865844727
    10. '   ' → logprob: -18.250146865844727

Token 3707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. ',' → logprob: -16.27975082397461
    4. '=_' → logprob: -17.65475082397461
    5. '               ' → logprob: -17.65475082397461
    6. '=
' → logprob: -18.27975082397461
    7. '   ' → logprob: -18.40475082397461
    8. ' ' → logprob: -19.15475082397461
    9. '=int' → logprob: -19.77975082397461
    10. '=}' → logprob: -19.77975082397461

Token 3708: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.023758644238114357
    2. 'abs' → logprob: -3.89875864982605
    3. ' den' → logprob: -6.273758411407471
    4. 'int' → logprob: -6.898758411407471
    5. ' abs' → logprob: -8.148758888244629
    6. '               ' → logprob: -11.773758888244629
    7. '           ' → logprob: -12.273758888244629
    8. ' int' → logprob: -12.273758888244629
    9. '                   ' → logprob: -13.023758888244629
    10. 'sign' → logprob: -13.023758888244629

Token 3709: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.054500666621607e-06
    2. '_
' → logprob: -12.87500286102295
    3. '_
' → logprob: -16.000003814697266
    4. '_]' → logprob: -16.000003814697266
    5. '_=' → logprob: -16.250003814697266
    6. '_

' → logprob: -16.750003814697266
    7. '_:' → logprob: -16.875003814697266
    8. '_)' → logprob: -17.250003814697266
    9. '_-' → logprob: -18.125003814697266
    10. '_[' → logprob: -18.125003814697266

Token 3710: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009743517730385065
    2. '                   ' → logprob: -7.625974178314209
    3. '           ' → logprob: -9.125974655151367
    4. ' return' → logprob: -10.000974655151367
    5. '                ' → logprob: -10.125974655151367
    6. '
' → logprob: -10.125974655151367
    7. '              ' → logprob: -10.375974655151367
    8. '			' → logprob: -10.375974655151367
    9. '       ' → logprob: -10.625974655151367
    10. '<|end|>' → logprob: -10.750974655151367

Token 3711: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4793308675289154
    2. 'n' → logprob: -1.1043308973312378
    3. 'return' → logprob: -3.8543307781219482
    4. 'g' → logprob: -4.229331016540527
    5. ' n' → logprob: -4.854331016540527
    6. ' return' → logprob: -5.604331016540527
    7. '   ' → logprob: -7.104331016540527
    8. ' g' → logprob: -7.854331016540527
    9. 'num' → logprob: -8.229331016540527
    10. '#' (adapté à ' #') → logprob: -8.729331016540527

Token 3712: ' simpl' (ID: 15693)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5517204403877258
    2. 'return' → logprob: -1.426720380783081
    3. 'n' → logprob: -1.801720380783081
    4. '   ' → logprob: -4.92672061920166
    5. 'num' → logprob: -5.80172061920166
    6. 's' → logprob: -6.05172061920166
    7. '       ' → logprob: -6.30172061920166
    8. ' return' → logprob: -6.67672061920166
    9. 'break' → logprob: -7.17672061920166
    10. '#' → logprob: -7.17672061920166

Token 3713: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7787891030311584
    2. 'ify' → logprob: -0.9037891030311584
    3. 'ifier' → logprob: -2.9037890434265137
    4. '               ' → logprob: -3.5287890434265137
    5. 'n' → logprob: -4.278789043426514
    6. '                   ' → logprob: -4.278789043426514
    7. 'ifie' → logprob: -4.403789043426514
    8. 'ifiez' → logprob: -5.778789043426514
    9. '       ' → logprob: -6.528789043426514
    10. 'ificate' → logprob: -6.653789043426514

Token 3714: ' fraction' (ID: 33763)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0667441189289093
    2. 'n' → logprob: -3.191744089126587
    3. ',n' → logprob: -3.941744089126587
    4. ' n' → logprob: -6.316744327545166
    5. '               ' → logprob: -7.191744327545166
    6. ' ,' → logprob: -7.316744327545166
    7. '(n' → logprob: -7.566744327545166
    8. ',
' → logprob: -9.441743850708008
    9. '_n' → logprob: -9.816743850708008
    10. '_,' → logprob: -10.191743850708008

Token 3715: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06913299858570099
    2. '               ' → logprob: -2.9441330432891846
    3. 'n' → logprob: -5.0691328048706055
    4. '```' → logprob: -5.8191328048706055
    5. ' g' → logprob: -6.4441328048706055
    6. '   ' → logprob: -6.4441328048706055
    7. '       ' → logprob: -7.1941328048706055
    8. ',' → logprob: -8.319132804870605
    9. '           ' → logprob: -8.694132804870605
    10. ',g' → logprob: -8.819132804870605

Token 3716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00181928975507617
    2. 'n' → logprob: -6.376819133758545
    3. '```' → logprob: -10.376819610595703
    4. ',' → logprob: -11.001819610595703
    5. ' n' → logprob: -11.126819610595703
    6. '   ' → logprob: -11.501819610595703
    7. ',n' → logprob: -11.501819610595703
    8. '                   ' → logprob: -12.001819610595703
    9. '(n' → logprob: -12.126819610595703
    10. '              ' → logprob: -12.251819610595703

Token 3717: ' n' (ID: 297)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2879822254180908
    2. 'n' (adapté à ' n') → logprob: -1.5379822254180908
    3. '               ' → logprob: -3.412982225418091
    4. ' g' → logprob: -6.537981986999512
    5. ' n' → logprob: -7.412981986999512
    6. 'num' → logprob: -9.787981986999512
    7. '   ' → logprob: -9.787981986999512
    8. '```' → logprob: -9.787981986999512
    9. 'ng' → logprob: -10.037981986999512
    10. 'return' → logprob: -10.412981986999512

Token 3718: '_s' (ID: 1278)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004938178462907672
    2. ',g' → logprob: -8.125494003295898
    3. '=' → logprob: -9.250494003295898
    4. 'g' → logprob: -10.375494003295898
    5. ',d' → logprob: -10.625494003295898
    6. ',n' → logprob: -10.625494003295898
    7. ',k' → logprob: -11.500494003295898
    8. ' ,' → logprob: -12.250494003295898
    9. ',
' → logprob: -13.500494003295898
    10. 'n' → logprob: -13.625494003295898

Token 3719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034589044749736786
    2. '=' → logprob: -3.4095890522003174
    3. ',num' → logprob: -7.909588813781738
    4. '_,' → logprob: -8.034588813781738
    5. ',n' → logprob: -9.159588813781738
    6. '_num' → logprob: -10.409588813781738
    7. ',_' → logprob: -10.784588813781738
    8. ' =' → logprob: -10.909588813781738
    9. ' ,' → logprob: -10.909588813781738
    10. 'n' → logprob: -11.159588813781738

Token 3720: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00861456897109747
    2. ' d' → logprob: -4.758614540100098
    3. '   ' → logprob: -20.383615493774414
    4. '	d' → logprob: -21.258615493774414
    5. ' ' → logprob: -22.258615493774414
    6. '=' → logprob: -22.383615493774414
    7. 'n' → logprob: -22.508615493774414
    8. '```' → logprob: -22.883615493774414
    9. '       ' → logprob: -23.133615493774414
    10. ' =' → logprob: -23.133615493774414

Token 3721: '_s' (ID: 1278)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055630043148994446
    2. ',' → logprob: -3.5556299686431885
    3. ' =' → logprob: -3.6806299686431885
    4. '=s' → logprob: -8.93062973022461
    5. '```' → logprob: -10.43062973022461
    6. '_s' → logprob: -10.55562973022461
    7. 's' → logprob: -10.68062973022461
    8. ',s' → logprob: -10.93062973022461
    9. '<|end|>' → logprob: -10.93062973022461
    10. '_num' → logprob: -11.43062973022461

Token 3722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03558707609772682
    2. ',' → logprob: -3.4105870723724365
    3. ' =' → logprob: -6.285587310791016
    4. '=n' → logprob: -10.160587310791016
    5. ',n' → logprob: -10.660587310791016
    6. '=k' → logprob: -12.535587310791016
    7. '=s' → logprob: -12.910587310791016
    8. 'n' → logprob: -13.410587310791016
    9. '=
' → logprob: -13.660587310791016
    10. ' ,' → logprob: -13.910587310791016

Token 3723: ' simplify' (ID: 66240)
  Prédit: 'simpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simpl' → logprob: -0.00020497082732617855
    2. ' simplify' → logprob: -8.500205039978027
    3. 'n' → logprob: -13.625205039978027
    4. 'simple' → logprob: -15.875205039978027
    5. 's' → logprob: -16.75020408630371
    6. '(s' → logprob: -17.25020408630371
    7. 'simp' → logprob: -18.00020408630371
    8. '(n' → logprob: -18.00020408630371
    9. 'Simpl' → logprob: -19.25020408630371
    10. ' n' → logprob: -19.37520408630371

Token 3724: '_fraction' (ID: 151287)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2078104019165039
    2. '_fraction' → logprob: -1.707810401916504
    3. 'fraction' → logprob: -5.457810401916504
    4. 'n' → logprob: -6.207810401916504
    5. 'Fraction' → logprob: -9.707810401916504
    6. 'frac' → logprob: -11.207810401916504
    7. 'd' → logprob: -11.332810401916504
    8. '_n' → logprob: -12.582810401916504
    9. '_factor' → logprob: -13.457810401916504
    10. '```' → logprob: -13.457810401916504

Token 3725: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03804688900709152
    2. 'n' → logprob: -3.2880468368530273
    3. ' (' → logprob: -12.913046836853027
    4. ' n' → logprob: -13.038046836853027
    5. '(' → logprob: -14.538046836853027
    6. '(
' → logprob: -16.038047790527344
    7. '   ' → logprob: -16.288047790527344
    8. '_n' → logprob: -17.038047790527344
    9. '	n' → logprob: -17.038047790527344
    10. '               ' → logprob: -17.663047790527344

Token 3726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011021859245374799
    2. ',d' → logprob: -10.000110626220703
    3. ' ,' → logprob: -10.375110626220703
    4. '_,' → logprob: -11.625110626220703
    5. ',n' → logprob: -11.875110626220703
    6. 'd' → logprob: -12.000110626220703
    7. ',
' → logprob: -12.375110626220703
    8. '               ' → logprob: -13.500110626220703
    9. '`,' → logprob: -14.125110626220703
    10. 'n' → logprob: -14.250110626220703

Token 3727: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.7610454708337784e-05
    2. ' d' → logprob: -10.500027656555176
    3. '       ' → logprob: -20.87502670288086
    4. '   ' → logprob: -21.25002670288086
    5. '           ' → logprob: -21.62502670288086
    6. '               ' → logprob: -21.87502670288086
    7. '	d' → logprob: -22.12502670288086
    8. '                   ' → logprob: -23.00002670288086
    9. '          ' → logprob: -25.37502670288086
    10. '      ' → logprob: -25.50002670288086

Token 3728: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2567473351955414
    2. ',' → logprob: -2.381747245788574
    3. '               ' → logprob: -2.381747245788574
    4. '<|end|>' → logprob: -3.506747245788574
    5. ',
' → logprob: -6.131747245788574
    6. '),' → logprob: -6.506747245788574
    7. '#' → logprob: -6.881747245788574
    8. '<|end|>' → logprob: -7.131747245788574
    9. ')
' → logprob: -7.256747245788574
    10. '[' → logprob: -7.506747245788574

Token 3729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014284518547356129
    2. '```' → logprob: -6.751428604125977
    3. 'return' → logprob: -9.626428604125977
    4. ' return' → logprob: -9.626428604125977
    5. '                   ' → logprob: -10.251428604125977
    6. '<|end|>' → logprob: -10.751428604125977
    7. '       ' → logprob: -11.126428604125977
    8. '           ' → logprob: -11.376428604125977
    9. '		       ' → logprob: -11.751428604125977
    10. '	           ' → logprob: -12.126428604125977

Token 3730: ' h' (ID: 312)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06698518246412277
    2. 'return' → logprob: -2.9419851303100586
    3. ' return' → logprob: -4.441985130310059
    4. '```' → logprob: -8.816985130310059
    5. '       ' → logprob: -10.066985130310059
    6. 'n' → logprob: -10.816985130310059
    7. '{return' → logprob: -11.941985130310059
    8. '<|end|>' → logprob: -11.941985130310059
    9. '   ' → logprob: -12.191985130310059
    10. '	return' → logprob: -12.316985130310059

Token 3731: '_sol' (ID: 121444)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019062625942751765
    2. '_s' → logprob: -7.501906394958496
    3. ',s' → logprob: -7.751906394958496
    4. '=' → logprob: -7.751906394958496
    5. 's' → logprob: -9.251906394958496
    6. ' =' → logprob: -9.376906394958496
    7. '_,' → logprob: -9.751906394958496
    8. '   ' → logprob: -9.876906394958496
    9. '       ' → logprob: -10.001906394958496
    10. ',n' → logprob: -10.251906394958496

Token 3732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016109124990180135
    2. '=' → logprob: -6.62661075592041
    3. ' =' → logprob: -8.37661075592041
    4. ' ,' → logprob: -11.00161075592041
    5. '   ' → logprob: -11.62661075592041
    6. ',h' → logprob: -12.00161075592041
    7. ',num' → logprob: -12.37661075592041
    8. ',
' → logprob: -12.37661075592041
    9. 's' → logprob: -12.62661075592041
    10. '_,' → logprob: -13.25161075592041

Token 3733: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.575939953327179
    2. ' m' → logprob: -0.825939953327179
    3. ' s' → logprob: -15.575940132141113
    4. ' ' → logprob: -15.825940132141113
    5. '```' → logprob: -17.075939178466797
    6. 's' → logprob: -17.075939178466797
    7. '   ' → logprob: -17.575939178466797
    8. ' ' → logprob: -17.825939178466797
    9. '	m' → logprob: -17.950939178466797
    10. '    ' → logprob: -18.950939178466797

Token 3734: '_sol' (ID: 121444)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22060762345790863
    2. '_s' → logprob: -1.7206076383590698
    3. '_sol' → logprob: -4.095607757568359
    4. '_,' → logprob: -7.345607757568359
    5. 's' → logprob: -7.470607757568359
    6. ',s' → logprob: -7.845607757568359
    7. '_num' → logprob: -8.22060775756836
    8. ',num' → logprob: -8.47060775756836
    9. ',n' → logprob: -9.47060775756836
    10. '```' → logprob: -9.47060775756836

Token 3735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035155098885297775
    2. ' ,' → logprob: -8.500351905822754
    3. '_,' → logprob: -10.000351905822754
    4. ',s' → logprob: -10.000351905822754
    5. ',n' → logprob: -11.125351905822754
    6. '```' → logprob: -11.375351905822754
    7. '=' → logprob: -11.875351905822754
    8. '`,' → logprob: -11.875351905822754
    9. '_s' → logprob: -12.250351905822754
    10. ',
' → logprob: -12.750351905822754

Token 3736: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06471172720193863
    2. 's' → logprob: -2.814711809158325
    3. ' n' → logprob: -6.064711570739746
    4. ' s' → logprob: -7.814711570739746
    5. '   ' → logprob: -11.689711570739746
    6. ' ' → logprob: -12.564711570739746
    7. ' ' → logprob: -14.689711570739746
    8. '  ' → logprob: -15.064711570739746
    9. '	n' → logprob: -15.689711570739746
    10. 'ns' → logprob: -16.314712524414062

Token 3737: '_sec' (ID: 41702)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003124632057733834
    2. 's' → logprob: -8.250312805175781
    3. '_num' → logprob: -10.875312805175781
    4. '_,' → logprob: -11.250312805175781
    5. '_d' → logprob: -11.500312805175781
    6. 'd' → logprob: -12.250312805175781
    7. ',' → logprob: -13.250312805175781
    8. 'um' → logprob: -14.375312805175781
    9. '```' → logprob: -14.875312805175781
    10. 'u' → logprob: -15.000312805175781

Token 3738: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.6514931321144104
    2. '_s' → logprob: -1.4014930725097656
    3. ',' → logprob: -1.6514930725097656
    4. '_num' → logprob: -3.4014930725097656
    5. 'u' → logprob: -5.401493072509766
    6. '_,' → logprob: -6.901493072509766
    7. ',_' → logprob: -7.526493072509766
    8. 'umer' → logprob: -7.651493072509766
    9. 's' → logprob: -7.776493072509766
    10. '_um' → logprob: -8.901493072509766

Token 3739: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10020667314529419
    2. ' d' → logprob: -2.3502066135406494
    3. '	d' → logprob: -18.72520637512207
    4. '_d' → logprob: -20.47520637512207
    5. '   ' → logprob: -21.22520637512207
    6. ' ' → logprob: -21.72520637512207
    7. ' ' → logprob: -22.47520637512207
    8. ')d' → logprob: -23.35020637512207
    9. '```' → logprob: -23.60020637512207
    10. '     ' → logprob: -23.85020637512207

Token 3740: '_sec' (ID: 41702)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.896309739408025e-07
    2. 's' → logprob: -14.500000953674316
    3. '_' → logprob: -15.500000953674316
    4. '```' → logprob: -16.875
    5. ' _' → logprob: -18.625
    6. 'd' → logprob: -20.0
    7. '​' → logprob: -21.75
    8. '\' → logprob: -22.25
    9. '   ' → logprob: -22.625
    10. '_sr' → logprob: -22.875

Token 3741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1850486695766449
    2. ' =' → logprob: -2.0600485801696777
    3. ',' → logprob: -3.1850485801696777
    4. '_s' → logprob: -10.185049057006836
    5. '_,' → logprob: -10.685049057006836
    6. '```' → logprob: -11.310049057006836
    7. ' ,' → logprob: -11.560049057006836
    8. '=s' → logprob: -12.185049057006836
    9. ',s' → logprob: -12.185049057006836
    10. '_' → logprob: -12.310049057006836

Token 3742: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.3134216070175171
    2. ' frac' → logprob: -1.313421607017517
    3. '_frac' → logprob: -9.438421249389648
    4. 'fract' → logprob: -10.313421249389648
    5. 'simpl' → logprob: -11.313421249389648
    6. '(fr' → logprob: -11.438421249389648
    7. 'fraction' → logprob: -11.938421249389648
    8. 'Frac' → logprob: -12.313421249389648
    9. 'fr' → logprob: -12.688421249389648
    10. '   ' → logprob: -13.063421249389648

Token 3743: '_seconds' (ID: 83213)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.01846444606781006
    2. 'simpl' → logprob: -4.3934645652771
    3. '_num' → logprob: -5.7684645652771
    4. 's' → logprob: -6.1434645652771
    5. 'num' → logprob: -7.8934645652771
    6. '_sol' → logprob: -9.393464088439941
    7. 'n' → logprob: -10.518464088439941
    8. 'Simpl' → logprob: -10.643464088439941
    9. '(num' → logprob: -10.893464088439941
    10. '(n' → logprob: -11.018464088439941

Token 3744: '_to' (ID: 5089)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.060385845601558685
    2. '_s' → logprob: -3.0603859424591064
    3. 'simpl' → logprob: -5.685385704040527
    4. 's' → logprob: -5.935385704040527
    5. 'n' → logprob: -6.310385704040527
    6. '   ' → logprob: -7.310385704040527
    7. 'ify' → logprob: -7.560385704040527
    8. '       ' → logprob: -7.560385704040527
    9. '(s' → logprob: -7.685385704040527
    10. '```' → logprob: -7.935385704040527

Token 3745: '_h' (ID: 3434)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07053472846746445
    2. '(H' → logprob: -2.6955347061157227
    3. '_H' → logprob: -8.195534706115723
    4. 's' → logprob: -8.695534706115723
    5. '_h' → logprob: -9.445534706115723
    6. '_s' → logprob: -10.695534706115723
    7. '```' → logprob: -10.820534706115723
    8. '<H' → logprob: -11.945534706115723
    9. ' H' → logprob: -12.570534706115723
    10. '	H' → logprob: -12.945534706115723

Token 3746: '_m' (ID: 1285)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.04271002486348152
    2. '_fraction' → logprob: -4.417709827423096
    3. 'num' → logprob: -4.667709827423096
    4. '_num' → logprob: -5.042709827423096
    5. 'H' → logprob: -5.542709827423096
    6. '_' → logprob: -6.542709827423096
    7. '_s' → logprob: -6.667709827423096
    8. 'orizontal' → logprob: -7.042709827423096
    9. 'fraction' → logprob: -7.792709827423096
    10. 'd' → logprob: -7.917709827423096

Token 3747: '_n' (ID: 2170)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.7136343717575073
    2. '_d' → logprob: -1.5886343717575073
    3. '_num' → logprob: -1.7136343717575073
    4. 'd' → logprob: -3.213634490966797
    5. '_s' → logprob: -3.213634490966797
    6. 'num' → logprob: -3.588634490966797
    7. '_' → logprob: -5.338634490966797
    8. 's' → logprob: -5.963634490966797
    9. '_sol' → logprob: -6.088634490966797
    10. '(num' → logprob: -6.338634490966797

Token 3748: '_d' (ID: 1565)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.0516434907913208
    2. 'd' → logprob: -1.4266434907913208
    3. '(num' → logprob: -1.5516434907913208
    4. 'umer' → logprob: -2.4266433715820312
    5. '_num' → logprob: -3.4266433715820312
    6. 'umerator' → logprob: -3.9266433715820312
    7. '(n' → logprob: -4.176643371582031
    8. '_s' → logprob: -4.676643371582031
    9. 'umber' → logprob: -4.926643371582031
    10. 'num' → logprob: -5.051643371582031

Token 3749: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.001502598519437015
    2. 'H' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.751502990722656
    4. ' H' → logprob: -16.251502990722656
    5. '	H' → logprob: -17.001502990722656
    6. ' (' → logprob: -17.126502990722656
    7. '```' → logprob: -17.126502990722656
    8. '(' → logprob: -17.501502990722656
    9. '(
' → logprob: -18.501502990722656
    10. '               ' → logprob: -18.626502990722656

Token 3750: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02996198832988739
    2. 'n' → logprob: -3.9049620628356934
    3. '(n' → logprob: -5.029962062835693
    4. ',n' → logprob: -5.904962062835693
    5. ',
' → logprob: -9.904961585998535
    6. ' n' → logprob: -11.154961585998535
    7. ' ,' → logprob: -11.779961585998535
    8. ')' → logprob: -11.904961585998535
    9. '```' → logprob: -11.904961585998535
    10. '_,' → logprob: -12.279961585998535

Token 3751: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.2729995988775045e-06
    2. ' n' → logprob: -12.125006675720215
    3. '                               ' → logprob: -15.500006675720215
    4. '   ' → logprob: -16.1250057220459
    5. '                                ' → logprob: -16.8750057220459
    6. '	n' → logprob: -17.2500057220459
    7. '                   ' → logprob: -17.3750057220459
    8. '                          ' → logprob: -17.3750057220459
    9. '                              ' → logprob: -17.3750057220459
    10. '                       ' → logprob: -17.5000057220459

Token 3752: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.318681188422488e-05
    2. 's' → logprob: -12.25001335144043
    3. '_sol' → logprob: -13.25001335144043
    4. '_' → logprob: -13.25001335144043
    5. ' _' → logprob: -13.87501335144043
    6. '```' → logprob: -14.00001335144043
    7. '   ' → logprob: -14.12501335144043
    8. ')_' → logprob: -14.75001335144043
    9. '       ' → logprob: -15.12501335144043
    10. '           ' → logprob: -15.25001335144043

Token 3753: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7095666527748108
    2. 'd' → logprob: -0.8345666527748108
    3. ' d' → logprob: -2.709566593170166
    4. ',d' → logprob: -4.959566593170166
    5. ' ,' → logprob: -8.084567070007324
    6. '```' → logprob: -10.084567070007324
    7. '           ' → logprob: -10.459567070007324
    8. '                   ' → logprob: -10.709567070007324
    9. '               ' → logprob: -10.834567070007324
    10. '   ' → logprob: -10.959567070007324

Token 3754: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00023131117632146925
    2. ' d' → logprob: -8.375231742858887
    3. '   ' → logprob: -15.000231742858887
    4. '       ' → logprob: -16.75023078918457
    5. '           ' → logprob: -16.75023078918457
    6. ' ' → logprob: -16.87523078918457
    7. '```' → logprob: -17.25023078918457
    8. '     ' → logprob: -17.50023078918457
    9. '	d' → logprob: -17.75023078918457
    10. '_d' → logprob: -18.12523078918457

Token 3755: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00039588010986335576
    2. 'd' → logprob: -8.000395774841309
    3. 's' → logprob: -9.750395774841309
    4. '_d' → logprob: -13.625395774841309
    5. '```' → logprob: -14.750395774841309
    6. ' d' → logprob: -15.000395774841309
    7. '_sec' → logprob: -15.500395774841309
    8. '``' → logprob: -18.250396728515625
    9. 'с' → logprob: -18.625396728515625
    10. '_se' → logprob: -18.625396728515625

Token 3756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11371366679668427
    2. ')
' → logprob: -2.2387137413024902
    3. ',' → logprob: -7.23871374130249
    4. '   ' → logprob: -10.613713264465332
    5. '<|end|>' → logprob: -10.738713264465332
    6. ')return' → logprob: -11.113713264465332
    7. '),' → logprob: -11.613713264465332
    8. '               ' → logprob: -11.613713264465332
    9. '```' → logprob: -11.738713264465332
    10. '[' → logprob: -11.863713264465332

Token 3757: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00556848244741559
    2. '```' → logprob: -6.130568504333496
    3. '       ' → logprob: -6.880568504333496
    4. '           ' → logprob: -7.380568504333496
    5. 'return' → logprob: -7.380568504333496
    6. '                   ' → logprob: -7.505568504333496
    7. ' return' → logprob: -8.755568504333496
    8. '   ' → logprob: -8.880568504333496
    9. '
' → logprob: -9.380568504333496
    10. '                       ' → logprob: -10.255568504333496

Token 3758: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05563782900571823
    2. '               ' → logprob: -3.055637836456299
    3. ' return' → logprob: -5.055637836456299
    4. '	return' → logprob: -8.05563735961914
    5. '                   ' → logprob: -8.93063735961914
    6. '   ' → logprob: -9.18063735961914
    7. '           ' → logprob: -10.43063735961914
    8. '```' → logprob: -10.55563735961914
    9. '       ' → logprob: -10.68063735961914
    10. '                       ' → logprob: -11.55563735961914

Token 3759: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00015955790877342224
    2. ' h' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.25015926361084
    4. '(h' → logprob: -14.75015926361084
    5. 'H' → logprob: -17.375160217285156
    6. '	h' → logprob: -17.500160217285156
    7. ' (' → logprob: -18.375160217285156
    8. '"h' → logprob: -19.125160217285156
    9. '[h' → logprob: -19.125160217285156
    10. '```' → logprob: -19.250160217285156

Token 3760: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.04310641065239906
    2. ',' → logprob: -3.1681063175201416
    3. '_s' → logprob: -9.793106079101562
    4. '_,' → logprob: -10.918106079101562
    5. '_SOL' → logprob: -12.168106079101562
    6. '_solution' → logprob: -12.543106079101562
    7. ',_' → logprob: -12.543106079101562
    8. '`,' → logprob: -12.668106079101562
    9. ' ,' → logprob: -13.043106079101562
    10. 'Sol' → logprob: -13.168106079101562

Token 3761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015812745550647378
    2. ',m' → logprob: -8.875158309936523
    3. ',
' → logprob: -11.750158309936523
    4. ' ,' → logprob: -12.875158309936523
    5. '```' → logprob: -13.125158309936523
    6. '`,' → logprob: -13.250158309936523
    7. '<|end|>' → logprob: -14.000158309936523
    8. '',' → logprob: -14.125158309936523
    9. ',user' → logprob: -14.375158309936523
    10. '   ' → logprob: -14.875158309936523

Token 3762: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02324547804892063
    2. ' m' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.648244857788086
    4. '	m' → logprob: -20.398244857788086
    5. '```' → logprob: -21.023244857788086
    6. ' ' → logprob: -22.273244857788086
    7. ' ' → logprob: -22.648244857788086
    8. '​' → logprob: -22.773244857788086
    9. ' м' → logprob: -23.398244857788086
    10. '‌' → logprob: -23.398244857788086

Token 3763: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -4.8351892473874614e-05
    2. 'sol' → logprob: -10.875048637390137
    3. '_sec' → logprob: -11.250048637390137
    4. '_s' → logprob: -12.125048637390137
    5. ',' → logprob: -12.250048637390137
    6. 'n' → logprob: -13.625048637390137
    7. '_,' → logprob: -13.625048637390137
    8. 's' → logprob: -14.250048637390137
    9. '_sym' → logprob: -14.625048637390137
    10. '0' → logprob: -14.750048637390137

Token 3764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14372935891151428
    2. 'n' → logprob: -2.2687294483184814
    3. ' n' → logprob: -4.143729209899902
    4. ',n' → logprob: -4.893729209899902
    5. '`,' → logprob: -5.143729209899902
    6. ' ,' → logprob: -6.893729209899902
    7. '',' → logprob: -9.518729209899902
    8. '",' → logprob: -10.143729209899902
    9. '(n' → logprob: -10.393729209899902
    10. '`' → logprob: -10.518729209899902

Token 3765: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019286326132714748
    2. ' n' → logprob: -6.251928806304932
    3. '	n' → logprob: -18.751928329467773
    4. ' ' → logprob: -19.501928329467773
    5. ' ' → logprob: -20.251928329467773
    6. '_n' → logprob: -21.251928329467773
    7. '```' → logprob: -21.251928329467773
    8. '   ' → logprob: -21.376928329467773
    9. '(n' → logprob: -22.126928329467773
    10. '`' → logprob: -22.501928329467773

Token 3766: '_sec' (ID: 41702)
  Prédit: '_sec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -0.00019340807921253145
    2. ',' → logprob: -9.37519359588623
    3. ',_' → logprob: -10.37519359588623
    4. '```' → logprob: -10.37519359588623
    5. '_sep' → logprob: -11.50019359588623
    6. '_,' → logprob: -11.62519359588623
    7. '_s' → logprob: -11.75019359588623
    8. '_num' → logprob: -12.12519359588623
    9. '_se' → logprob: -13.00019359588623
    10. '_' → logprob: -13.25019359588623

Token 3767: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6023235321044922
    2. ' d' → logprob: -1.1023235321044922
    3. ',' → logprob: -2.227323532104492
    4. ',d' → logprob: -4.602323532104492
    5. '```' → logprob: -6.727323532104492
    6. '_d' → logprob: -7.602323532104492
    7. '`,' → logprob: -8.102323532104492
    8. ' ,' → logprob: -8.352323532104492
    9. '`' → logprob: -8.727323532104492
    10. '``' → logprob: -10.102323532104492

Token 3768: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010330495424568653
    2. ' d' → logprob: -6.876032829284668
    3. '```' → logprob: -15.626032829284668
    4. '	d' → logprob: -16.876033782958984
    5. ' ' → logprob: -17.126033782958984
    6. '   ' → logprob: -17.376033782958984
    7. '_d' → logprob: -17.876033782958984
    8. ' ' → logprob: -18.251033782958984
    9. '`' → logprob: -18.751033782958984
    10. '``' → logprob: -18.876033782958984

Token 3769: '_sec' (ID: 41702)
  Prédit: '_sec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -0.35401272773742676
    2. '_s' → logprob: -1.2290127277374268
    3. '```' → logprob: -5.479012489318848
    4. '_sol' → logprob: -7.354012489318848
    5. '_' → logprob: -8.854012489318848
    6. 'sec' → logprob: -8.979012489318848
    7. '_S' → logprob: -9.604012489318848
    8. '_se' → logprob: -9.604012489318848
    9. 's' → logprob: -9.854012489318848
    10. '``' → logprob: -10.104012489318848

Token 3770: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3771: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3772: ' #' (ID: 1069)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.013617188669741154
    2. '```' → logprob: -4.888617038726807
    3. '(None' → logprob: -6.388617038726807
    4. '#' (adapté à ' #') → logprob: -6.763617038726807
    5. ' None' → logprob: -6.888617038726807
    6. 'return' → logprob: -7.138617038726807
    7. '   ' → logprob: -7.388617038726807
    8. '<|end|>' → logprob: -8.763617515563965
    9. '
' → logprob: -9.138617515563965
    10. '\n' → logprob: -10.013617515563965

Token 3773: ' Par' (ID: 3371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004408516921103001
    2. '   ' → logprob: -6.004408359527588
    3. 'None' → logprob: -6.254408359527588
    4. ' return' → logprob: -12.004408836364746
    5. 'raise' → logprob: -13.129408836364746
    6. '#' → logprob: -14.879408836364746
    7. ' None' → logprob: -15.629408836364746
    8. '	return' → logprob: -16.12940788269043
    9. 'pass' → logprob: -16.62940788269043
    10. '```' → logprob: -16.87940788269043

Token 3774: ' sécurité' (ID: 32375)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24780991673469543
    2. 'def' → logprob: -2.247809886932373
    3. '#' → logprob: -2.747809886932373
    4. '   ' → logprob: -4.747809886932373
    5. 'else' → logprob: -4.872809886932373
    6. 'pass' → logprob: -5.122809886932373
    7. 'raise' → logprob: -5.372809886932373
    8. 't' → logprob: -5.497809886932373
    9. 'eturn' → logprob: -5.497809886932373
    10. 'r' → logprob: -5.622809886932373

Token 3775: ',' (ID: 11)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6372140049934387
    2. 'return' → logprob: -0.8872140049934387
    3. '   ' → logprob: -2.887213945388794
    4. ' return' → logprob: -6.262214183807373
    5. ' None' → logprob: -6.512214183807373
    6. '(None' → logprob: -8.262213706970215
    7. '```' → logprob: -10.512213706970215
    8. '0' → logprob: -11.512213706970215
    9. '
' → logprob: -12.762213706970215
    10. 'raise' → logprob: -13.012213706970215

Token 3776: ' si' (ID: 1784)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0054744635708630085
    2. '   ' → logprob: -5.50547456741333
    3. '#' → logprob: -6.88047456741333
    4. ' return' → logprob: -8.505474090576172
    5. 'None' → logprob: -8.755474090576172
    6. 'raise' → logprob: -13.005474090576172
    7. '```' → logprob: -13.255474090576172
    8. 'h' → logprob: -13.880474090576172
    9. 'import' → logprob: -14.505474090576172
    10. 'pass' → logprob: -14.630474090576172

Token 3777: ' pas' (ID: 2173)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12588807940483093
    2. 't' → logprob: -2.6258881092071533
    3. 'True' → logprob: -3.2508881092071533
    4. 'False' → logprob: -5.750887870788574
    5. ' None' → logprob: -6.000887870788574
    6. ' t' → logprob: -7.375887870788574
    7. '#' → logprob: -8.125887870788574
    8. ' True' → logprob: -8.375887870788574
    9. 'return' → logprob: -8.750887870788574
    10. 'not' → logprob: -9.125887870788574

Token 3778: ' trouvé' (ID: 60081)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08486958593130112
    2. ' return' → logprob: -2.834869623184204
    3. ' de' → logprob: -5.084869384765625
    4. 'de' → logprob: -5.334869384765625
    5. '#' → logprob: -5.459869384765625
    6. ' trouvé' → logprob: -5.959869384765625
    7. 'def' → logprob: -6.084869384765625
    8. 'found' → logprob: -7.709869384765625
    9. '_return' → logprob: -7.959869384765625
    10. 'r' → logprob: -8.584869384765625

Token 3779: ',' (ID: 11)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.45093512535095215
    2. 'return' → logprob: -1.7009351253509521
    3. '   ' → logprob: -1.9509351253509521
    4. '(None' → logprob: -4.075935363769531
    5. ' None' → logprob: -4.325935363769531
    6. ' return' → logprob: -4.825935363769531
    7. '(' → logprob: -10.575935363769531
    8. ',' → logprob: -10.825935363769531
    9. ' (' → logprob: -11.075935363769531
    10. ',None' → logprob: -11.325935363769531

Token 3780: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00022356293629854918
    2. '   ' → logprob: -8.500223159790039
    3. ' return' → logprob: -11.500223159790039
    4. '#' → logprob: -11.750223159790039
    5. 'h' → logprob: -14.000223159790039
    6. 'None' → logprob: -14.250223159790039
    7. 'raise' → logprob: -15.250223159790039
    8. 't' → logprob: -16.37522315979004
    9. 'import' → logprob: -16.50022315979004
    10. '	return' → logprob: -17.62522315979004

Token 3781: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3001643121242523
    2. '   ' → logprob: -1.4251643419265747
    3. 'raise' → logprob: -5.050164222717285
    4. ' return' → logprob: -5.300164222717285
    5. '#' → logprob: -5.675164222717285
    6. '```' → logprob: -6.425164222717285
    7. 'import' → logprob: -6.800164222717285
    8. 'continue' → logprob: -7.675164222717285
    9. '       ' → logprob: -8.300164222717285
    10. '    ' → logprob: -9.300164222717285

Token 3782: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.05368327349424362
    2. 'return' → logprob: -3.428683280944824
    3. 'i' → logprob: -4.803683280944824
    4. 't' → logprob: -5.303683280944824
    5. 'ir' → logprob: -5.428683280944824
    6. 'is' → logprob: -6.428683280944824
    7. '#' → logprob: -8.053683280944824
    8. 'n' → logprob: -9.178683280944824
    9. '   ' → logprob: -9.553683280944824
    10. '
' → logprob: -10.928683280944824

Token 3783: ' temps' (ID: 11160)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.21133461594581604
    2. 'h' → logprob: -2.336334705352783
    3. '   ' → logprob: -3.211334705352783
    4. ' frac' → logprob: -3.336334705352783
    5. ' h' → logprob: -4.711334705352783
    6. 'return' → logprob: -5.211334705352783
    7. 'int' → logprob: -6.836334705352783
    8. ' return' → logprob: -6.961334705352783
    9. '```' → logprob: -8.336334228515625
    10. '_frac' → logprob: -8.711334228515625

Token 3784: ' sous' (ID: 14487)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7120761871337891
    2. '   ' → logprob: -1.587076187133789
    3. ' t' → logprob: -2.087076187133789
    4. ',' → logprob: -2.587076187133789
    5. 'num' → logprob: -3.712076187133789
    6. 'int' → logprob: -3.837076187133789
    7. ' int' → logprob: -4.837076187133789
    8. 'h' → logprob: -4.837076187133789
    9. ' h' → logprob: -4.962076187133789
    10. ' en' → logprob: -5.087076187133789

Token 3785: ' forme' (ID: 27450)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.7966252565383911
    2. 'float' → logprob: -1.2966252565383911
    3. '#' → logprob: -1.7966252565383911
    4. 't' → logprob: -3.7966251373291016
    5. 'frac' → logprob: -3.9216251373291016
    6. 'int' → logprob: -4.421625137329102
    7. 'return' → logprob: -4.921625137329102
    8. 'forme' → logprob: -5.171625137329102
    9. 'form' → logprob: -5.296625137329102
    10. '```' → logprob: -5.546625137329102

Token 3786: ' déc' (ID: 8498)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28062349557876587
    2. '(' → logprob: -3.030623435974121
    3. '(h' → logprob: -3.030623435974121
    4. 'h' → logprob: -3.405623435974121
    5. 'return' → logprob: -3.655623435974121
    6. 'frac' → logprob: -3.655623435974121
    7. 'de' → logprob: -3.780623435974121
    8. '(n' → logprob: -4.405623435974121
    9. 'fraction' → logprob: -5.280623435974121
    10. 't' → logprob: -5.655623435974121

Token 3787: 'im' (ID: 321)
  Prédit: 'imal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.22603318095207214
    2. 'im' → logprob: -1.6010332107543945
    3. '```' → logprob: -8.226033210754395
    4. 'imals' → logprob: -9.101033210754395
    5. '   ' → logprob: -10.101033210754395
    6. '{
' → logprob: -10.726033210754395
    7. 'f' → logprob: -10.851033210754395
    8. '       ' → logprob: -11.226033210754395
    9. 'imate' → logprob: -11.351033210754395
    10. 'imali' → logprob: -11.351033210754395

Token 3788: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.05929907411336899
    2. 'al' → logprob: -2.9342989921569824
    3. 'imal' → logprob: -6.184298992156982
    4. 'im' → logprob: -6.684298992156982
    5. 'nale' → logprob: -7.309298992156982
    6. '```' → logprob: -9.30929946899414
    7. 'itale' → logprob: -9.43429946899414
    8. 'inal' → logprob: -10.30929946899414
    9. 'alee' → logprob: -10.43429946899414
    10. 'iale' → logprob: -10.55929946899414

Token 3789: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03365134820342064
    2. 'return' → logprob: -4.033651351928711
    3. 't' → logprob: -5.408651351928711
    4. 'import' → logprob: -5.408651351928711
    5. '```' → logprob: -5.658651351928711
    6. ' return' → logprob: -7.158651351928711
    7. '
' → logprob: -7.408651351928711
    8. ',' → logprob: -7.658651351928711
    9. 'h' → logprob: -8.158651351928711
    10. ' t' → logprob: -8.533651351928711

Token 3790: ' secondes' (ID: 109098)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.36576443910598755
    2. 'fraction' → logprob: -2.3657643795013428
    3. 'fra' → logprob: -2.6157643795013428
    4. 'float' → logprob: -2.8657643795013428
    5. 'seconds' → logprob: -3.1157643795013428
    6. 'second' → logprob: -4.240764617919922
    7. 'temps' → logprob: -5.240764617919922
    8. 'sec' → logprob: -5.490764617919922
    9. 'total' → logprob: -5.865764617919922
    10. 'fract' → logprob: -6.240764617919922

Token 3791: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061200447380542755
    2. 'return' → logprob: -6.131120204925537
    3. 't' → logprob: -6.756120204925537
    4. ' return' → logprob: -7.131120204925537
    5. '```' → logprob: -7.131120204925537
    6. '
' → logprob: -8.131119728088379
    7. 'import' → logprob: -8.506119728088379
    8. ' t' → logprob: -8.756119728088379
    9. 'h' → logprob: -9.131119728088379
    10. ',' → logprob: -9.506119728088379

Token 3792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07430948317050934
    2. 'return' → logprob: -2.6993095874786377
    3. ' return' → logprob: -5.574309349060059
    4. '```' → logprob: -8.199309349060059
    5. '       ' → logprob: -9.699309349060059
    6. '
' → logprob: -10.199309349060059
    7. '``' → logprob: -10.574309349060059
    8. 'h' → logprob: -10.699309349060059
    9. 't' → logprob: -10.699309349060059
    10. '    ' → logprob: -10.949309349060059

Token 3793: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5307783484458923
    2. 'return' → logprob: -1.030778408050537
    3. ' return' → logprob: -3.405778408050537
    4. 't' → logprob: -4.530778408050537
    5. 'h' → logprob: -5.155778408050537
    6. '```' → logprob: -6.405778408050537
    7. 'n' → logprob: -6.655778408050537
    8. ' t' → logprob: -7.280778408050537
    9. ' h' → logprob: -7.405778408050537
    10. 'import' → logprob: -7.780778408050537

Token 3794: ' En' (ID: 2130)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39912310242652893
    2. '   ' → logprob: -1.1491230726242065
    3. 'h' → logprob: -5.024123191833496
    4. 't' → logprob: -5.649123191833496
    5. 'import' → logprob: -7.274123191833496
    6. 'n' → logprob: -7.274123191833496
    7. ' return' → logprob: -7.524123191833496
    8. 'float' → logprob: -10.149123191833496
    9. '```' → logprob: -10.399123191833496
    10. 'from' → logprob: -11.149123191833496

Token 3795: ' utilisant' (ID: 92474)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17397993803024292
    2. 'h' → logprob: -1.9239799976348877
    3. '#' → logprob: -5.423979759216309
    4. '   ' → logprob: -6.298979759216309
    5. 'num' → logprob: -6.673979759216309
    6. 's' → logprob: -6.673979759216309
    7. 'n' → logprob: -6.923979759216309
    8. ' return' → logprob: -6.923979759216309
    9. 'fraction' → logprob: -7.548979759216309
    10. 'ret' → logprob: -8.548979759216309

Token 3796: ' approx' (ID: 33956)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.24418818950653076
    2. 'time' → logprob: -1.8691881895065308
    3. 'h' → logprob: -3.9941883087158203
    4. '   ' → logprob: -4.36918830871582
    5. 'float' → logprob: -4.74418830871582
    6. 'find' → logprob: -4.86918830871582
    7. 'int' → logprob: -5.61918830871582
    8. 'round' → logprob: -5.86918830871582
    9. 't' → logprob: -5.99418830871582
    10. 'angles' → logprob: -7.36918830871582

Token 3797: ' ration' (ID: 74749)
  Prédit: 'imation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imation' → logprob: -0.03606473654508591
    2. 'imate' → logprob: -3.786064624786377
    3. 'x' → logprob: -4.911064624786377
    4. '   ' → logprob: -5.911064624786377
    5. 'im' → logprob: -6.911064624786377
    6. 'import' → logprob: -7.411064624786377
    7. '       ' → logprob: -7.911064624786377
    8. 'imated' → logprob: -8.411065101623535
    9. 'imately' → logprob: -9.286065101623535
    10. 'imator' → logprob: -10.036065101623535

Token 3798: 'nelle' (ID: 30805)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10084488242864609
    2. 'nelle' → logprob: -2.8508448600769043
    3. 'nel' → logprob: -4.350844860076904
    4. 'nal' → logprob: -4.600844860076904
    5. 'nn' → logprob: -5.475844860076904
    6. 'on' → logprob: -6.225844860076904
    7. 'onnement' → logprob: -6.600844860076904
    8. '(n' → logprob: -6.975844860076904
    9. 'onn' → logprob: -6.975844860076904
    10. 'nement' → logprob: -7.350844860076904

Token 3799: ' avec' (ID: 3937)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9770414233207703
    2. '   ' → logprob: -1.477041482925415
    3. 'import' → logprob: -1.727041482925415
    4. 'n' → logprob: -2.102041482925415
    5. 't' → logprob: -3.477041482925415
    6. 'return' → logprob: -3.727041482925415
    7. 'h' → logprob: -4.852041244506836
    8. ' n' → logprob: -4.977041244506836
    9. ' from' → logprob: -5.102041244506836
    10. 'approx' → logprob: -5.477041244506836

Token 3800: ' dens' (ID: 42124)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.029419496655464172
    2. 'import' → logprob: -4.279419422149658
    3. 'fra' → logprob: -4.404419422149658
    4. 'Fraction' → logprob: -6.779419422149658
    5. 'def' → logprob: -7.904419422149658
    6. 'math' → logprob: -8.404419898986816
    7. 'frac' → logprob: -8.529419898986816
    8. '#' → logprob: -8.654419898986816
    9. 'fraction' → logprob: -9.279419898986816
    10. 't' → logprob: -9.529419898986816

Token 3801: 'ité' (ID: 3761)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25255945324897766
    2. 'ite' → logprob: -2.5025594234466553
    3. 'ity' → logprob: -2.7525594234466553
    4. 'ité' → logprob: -2.8775594234466553
    5. 'e' → logprob: -4.877559661865234
    6. 'from' → logprob: -5.627559661865234
    7. 'approx' → logprob: -5.627559661865234
    8. 'itaire' → logprob: -6.627559661865234
    9. 'it' → logprob: -6.877559661865234
    10. 'itie' → logprob: -7.627559661865234

Token 3802: ' ' (ID: 220)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5971361398696899
    2. 'import' → logprob: -0.8471361398696899
    3. ',' → logprob: -5.0971360206604
    4. ' from' → logprob: -5.2221360206604
    5. '   ' → logprob: -5.8471360206604
    6. '#' → logprob: -6.8471360206604
    7. 'limit' → logprob: -6.9721360206604
    8. 'None' → logprob: -7.0971360206604
    9. '0' → logprob: -7.3471360206604
    10. ' ' → logprob: -7.8471360206604

Token 3803: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.025671446695923805
    2. '10' → logprob: -4.275671482086182
    3. '(' → logprob: -5.275671482086182
    4. '1' → logprob: -5.275671482086182
    5. 'max' → logprob: -8.275671005249023
    6. '500' → logprob: -8.775671005249023
    7. 'limit' → logprob: -9.150671005249023
    8. '200' → logprob: -9.150671005249023
    9. '=' → logprob: -9.400671005249023
    10. '300' → logprob: -9.525671005249023

Token 3804: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24000902473926544
    2. ',' → logprob: -2.490009069442749
    3. '       ' → logprob: -2.615009069442749
    4. '10' → logprob: -4.36500883102417
    5. 'import' → logprob: -4.99000883102417
    6. '0' → logprob: -5.11500883102417
    7. '(' → logprob: -5.61500883102417
    8. 'return' → logprob: -5.86500883102417
    9. 'n' → logprob: -5.99000883102417
    10. '{' → logprob: -6.24000883102417

Token 3805: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.013325050473213196
    2. '3' → logprob: -5.013325214385986
    3. '-' → logprob: -5.763325214385986
    4. '7' → logprob: -6.763325214385986
    5. '**' → logprob: -7.138325214385986
    6. ' ' → logprob: -7.638325214385986
    7. '9' → logprob: -7.763325214385986
    8. ' -' → logprob: -8.763324737548828
    9. '```' → logprob: -9.013324737548828
    10. '(' → logprob: -9.763324737548828

Token 3806: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.34266728162765503
    2. 'from' → logprob: -1.3426673412322998
    3. '   ' → logprob: -3.7176673412323
    4. ' from' → logprob: -5.842667102813721
    5. '```' → logprob: -7.342667102813721
    6. 'return' → logprob: -7.717667102813721
    7. ' import' → logprob: -8.592667579650879
    8. '
' → logprob: -8.967667579650879
    9. 'n' → logprob: -8.967667579650879
    10. 'def' → logprob: -10.092667579650879

Token 3807: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2405737340450287
    2. 'n' → logprob: -2.7405736446380615
    3. 'import' → logprob: -2.8655736446380615
    4. 'return' → logprob: -2.9905736446380615
    5. '```' → logprob: -4.240573883056641
    6. ' return' → logprob: -4.365573883056641
    7. ' n' → logprob: -5.490573883056641
    8. '       ' → logprob: -5.990573883056641
    9. '``' → logprob: -6.365573883056641
    10. ' import' → logprob: -6.365573883056641

Token 3808: ' precision' (ID: 27303)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5024287104606628
    2. 'import' → logprob: -1.3774287700653076
    3. 'from' → logprob: -2.0024287700653076
    4. ' from' → logprob: -5.8774285316467285
    5. '```' → logprob: -5.8774285316467285
    6. ' import' → logprob: -6.8774285316467285
    7. 'n' → logprob: -7.8774285316467285
    8. '``' → logprob: -8.752429008483887
    9. '
' → logprob: -8.877429008483887
    10. '       ' → logprob: -9.627429008483887

Token 3809: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6727551221847534
    2. '=' → logprob: -0.9227551221847534
    3. '   ' → logprob: -2.672755241394043
    4. ',' → logprob: -4.047755241394043
    5. '_' → logprob: -6.047755241394043
    6. ' ' → logprob: -7.047755241394043
    7. '_,' → logprob: -7.672755241394043
    8. '```' → logprob: -7.922755241394043
    9. '       ' → logprob: -8.047755241394043
    10. ' ,' → logprob: -8.297755241394043

Token 3810: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10049876570701599
    2. '100' → logprob: -2.350498676300049
    3. 'int' → logprob: -8.350499153137207
    4. '1' → logprob: -9.850499153137207
    5. ' ' → logprob: -12.725499153137207
    6. '(' → logprob: -17.85049819946289
    7. '   ' → logprob: -17.85049819946289
    8. '[int' → logprob: -18.72549819946289
    9. ' int' → logprob: -18.97549819946289
    10. '=' → logprob: -20.22549819946289

Token 3811: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10322561860084534
    2. '100' → logprob: -2.3532257080078125
    3. 'int' → logprob: -5.8532257080078125
    4. '1' → logprob: -8.853225708007812
    5. ' ' → logprob: -14.728225708007812
    6. '(' → logprob: -14.978225708007812
    7. '9' → logprob: -15.978225708007812
    8. '[int' → logprob: -16.728225708007812
    9. ' int' → logprob: -17.853225708007812
    10. 'b' → logprob: -18.228225708007812

Token 3812: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.040455542504787445
    2. '9' → logprob: -3.2904555797576904
    3. ' **' → logprob: -6.165455341339111
    4. '^' → logprob: -8.54045581817627
    5. '   ' → logprob: -9.29045581817627
    6. '0' → logprob: -11.79045581817627
    7. '```' → logprob: -12.91545581817627
    8. '       ' → logprob: -13.16545581817627
    9. '_' → logprob: -13.16545581817627
    10. '*' → logprob: -13.16545581817627

Token 3813: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0206720617134124e-05
    2. '12' → logprob: -11.62501049041748
    3. '-' → logprob: -14.37501049041748
    4. '15' → logprob: -14.75001049041748
    5. '10' → logprob: -16.500009536743164
    6. '14' → logprob: -17.375009536743164
    7. '09' → logprob: -17.750009536743164
    8. '13' → logprob: -18.125009536743164
    9. '```' → logprob: -18.250009536743164
    10. 'nine' → logprob: -19.125009536743164

Token 3814: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.185085728764534
    2. '
' → logprob: -1.8100857734680176
    3. 'n' → logprob: -5.810085773468018
    4. ',' → logprob: -7.060085773468018
    5. ' n' → logprob: -8.06008529663086
    6. '    
' → logprob: -8.31008529663086
    7. ',
' → logprob: -8.81008529663086
    8. '_n' → logprob: -9.18508529663086
    9. 'num' → logprob: -9.43508529663086
    10. '```' → logprob: -9.43508529663086

Token 3815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20949138700962067
    2. 'n' → logprob: -1.8344913721084595
    3. ' n' → logprob: -4.20949125289917
    4. 'num' → logprob: -5.20949125289917
    5. '```' → logprob: -5.58449125289917
    6. ' num' → logprob: -6.33449125289917
    7. '
' → logprob: -6.70949125289917
    8. ',' → logprob: -6.95949125289917
    9. '``' → logprob: -7.95949125289917
    10. '_n' → logprob: -8.959491729736328

Token 3816: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10522334277629852
    2. 'n' (adapté à ' n') → logprob: -2.7302234172821045
    3. 'from' → logprob: -4.105223178863525
    4. 'num' → logprob: -4.230223178863525
    5. ' n' → logprob: -6.730223178863525
    6. 'import' → logprob: -7.355223178863525
    7. 'den' → logprob: -7.855223178863525
    8. 'approx' → logprob: -8.105223655700684
    9. '```' → logprob: -8.355223655700684
    10. 'frac' → logprob: -8.480223655700684

Token 3817: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5841838121414185
    2. '=' → logprob: -0.8341838121414185
    3. ',' → logprob: -4.834183692932129
    4. '=int' → logprob: -8.334183692932129
    5. ' ,' → logprob: -11.959183692932129
    6. '```' → logprob: -12.959183692932129
    7. 'int' → logprob: -13.084183692932129
    8. ' ' → logprob: -13.584183692932129
    9. '_num' → logprob: -14.209183692932129
    10. '=num' → logprob: -14.459183692932129

Token 3818: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.45848218582978e-06
    2. 'round' → logprob: -13.00000286102295
    3. ' int' → logprob: -16.000001907348633
    4. '(int' → logprob: -19.750001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '[int' → logprob: -22.125001907348633
    7. '	int' → logprob: -23.125001907348633
    8. 'min' → logprob: -23.625001907348633
    9. 't' → logprob: -23.875001907348633
    10. '=int' → logprob: -24.000001907348633

Token 3819: '(round' (ID: 75171)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9396938681602478
    2. 'round' → logprob: -1.1896939277648926
    3. '(t' → logprob: -1.4396939277648926
    4. '(round' → logprob: -2.6896939277648926
    5. ' round' → logprob: -11.314693450927734
    6. 'precision' → logprob: -11.564693450927734
    7. ' t' → logprob: -11.689693450927734
    8. '(' → logprob: -12.689693450927734
    9. 'int' → logprob: -13.189693450927734
    10. '(int' → logprob: -14.814693450927734

Token 3820: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.749814019713085e-06
    2. ' t' → logprob: -12.250006675720215
    3. '(t' → logprob: -13.500006675720215
    4. 'precision' → logprob: -14.875006675720215
    5. '   ' → logprob: -15.750006675720215
    6. 'prec' → logprob: -19.12500762939453
    7. '`t' → logprob: -19.12500762939453
    8. '    ' → logprob: -19.50000762939453
    9. '	t' → logprob: -20.25000762939453
    10. '(' → logprob: -20.50000762939453

Token 3821: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.0025943268556147814
    2. '_num' → logprob: -6.127594470977783
    3. ' _' → logprob: -8.002593994140625
    4. 'sol' → logprob: -10.627593994140625
    5. '_s' → logprob: -11.002593994140625
    6. '_' → logprob: -11.252593994140625
    7. 'num' → logprob: -12.002593994140625
    8. ')' → logprob: -13.127593994140625
    9. '_prec' → logprob: -13.252593994140625
    10. 't' → logprob: -13.627593994140625

Token 3822: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.015862150117754936
    2. '))' → logprob: -4.265861988067627
    3. '*' → logprob: -7.140861988067627
    4. ' ))' → logprob: -7.265861988067627
    5. ')' → logprob: -9.640862464904785
    6. '))
' → logprob: -10.265862464904785
    7. ' ' → logprob: -10.640862464904785
    8. ',' → logprob: -10.890862464904785
    9. ' ))
' → logprob: -11.140862464904785
    10. ' ,' → logprob: -11.265862464904785

Token 3823: ' precision' (ID: 27303)
  Prédit: 'precision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'precision' → logprob: -0.0007514976896345615
    2. ' precision' → logprob: -7.250751495361328
    3. '10' → logprob: -10.125751495361328
    4. '100' → logprob: -13.500751495361328
    5. '1' → logprob: -16.625751495361328
    6. ' ' → logprob: -16.875751495361328
    7. 'prec' → logprob: -17.750751495361328
    8. '   ' → logprob: -18.625751495361328
    9. '(' → logprob: -19.000751495361328
    10. '9' → logprob: -19.250751495361328

Token 3824: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10714756697416306
    2. ')' → logprob: -2.482147455215454
    3. '))
' → logprob: -4.232147693634033
    4. ' )
' → logprob: -6.107147693634033
    5. '))' → logprob: -7.107147693634033
    6. ')
' → logprob: -8.107147216796875
    7. '   ' → logprob: -9.607147216796875
    8. ' )' → logprob: -9.857147216796875
    9. ' ))
' → logprob: -10.482147216796875
    10. ',' → logprob: -11.232147216796875

Token 3825: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013810674427077174
    2. '   ' → logprob: -6.751380920410156
    3. ' d' → logprob: -8.501380920410156
    4. '```' → logprob: -11.876380920410156
    5. '	d' → logprob: -14.626380920410156
    6. ',' → logprob: -16.501380920410156
    7. '``' → logprob: -16.876380920410156
    8. 'return' → logprob: -16.876380920410156
    9. '       ' → logprob: -17.626380920410156
    10. '_d' → logprob: -17.751380920410156

Token 3826: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.49057072401046753
    2. ' d' → logprob: -0.9905707240104675
    3. '   ' → logprob: -4.365570545196533
    4. ',' → logprob: -5.740570545196533
    5. 'den' → logprob: -8.865571022033691
    6. '```' → logprob: -8.990571022033691
    7. ' den' → logprob: -9.615571022033691
    8. ' ,' → logprob: -10.115571022033691
    9. ' ' → logprob: -10.865571022033691
    10. ',d' → logprob: -11.490571022033691

Token 3827: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804321587085724
    2. ' =' → logprob: -3.288043260574341
    3. 'precision' → logprob: -13.788043022155762
    4. ',' → logprob: -15.038043022155762
    5. '=
' → logprob: -16.038043975830078
    6. ' precision' → logprob: -16.288043975830078
    7. ' ' → logprob: -16.413043975830078
    8. '   ' → logprob: -17.163043975830078
    9. '```' → logprob: -17.163043975830078
    10. '`' → logprob: -17.913043975830078

Token 3828: ' precision' (ID: 27303)
  Prédit: 'precision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'precision' → logprob: -2.5776860184123507e-06
    2. ' precision' → logprob: -13.00000286102295
    3. '10' → logprob: -15.25000286102295
    4. 'int' → logprob: -17.500001907348633
    5. 'prec' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.875001907348633
    7. 'pr' → logprob: -22.750001907348633
    8. 'accuracy' → logprob: -23.375001907348633
    9. '```' → logprob: -23.500001907348633
    10. ' précision' → logprob: -23.750001907348633

Token 3829: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.519062340259552
    2. '
' → logprob: -1.3940622806549072
    3. ',' → logprob: -1.8940622806549072
    4. 'n' → logprob: -6.644062519073486
    5. 'return' → logprob: -7.019062519073486
    6. '```' → logprob: -7.019062519073486
    7. ',
' → logprob: -7.144062519073486
    8. ',s' → logprob: -7.519062519073486
    9. ')' → logprob: -7.644062519073486
    10. 's' → logprob: -8.019062042236328

Token 3830: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19285701215267181
    2. '   ' → logprob: -1.817857027053833
    3. 's' → logprob: -5.192856788635254
    4. '```' → logprob: -5.192856788635254
    5. ' n' → logprob: -6.567856788635254
    6. ',' → logprob: -8.817856788635254
    7. '``' → logprob: -9.317856788635254
    8. '`s' → logprob: -9.942856788635254
    9. 'g' → logprob: -10.192856788635254
    10. '	n' → logprob: -10.192856788635254

Token 3831: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0008928788010962307
    2. '   ' → logprob: -7.6258931159973145
    3. '```' → logprob: -7.8758931159973145
    4. 's' → logprob: -11.000892639160156
    5. '``' → logprob: -12.750892639160156
    6. ' n' → logprob: -13.125892639160156
    7. '(n' → logprob: -14.125892639160156
    8. '#' → logprob: -14.125892639160156
    9. '
' → logprob: -14.625892639160156
    10. '`' → logprob: -14.875892639160156

Token 3832: '_s' (ID: 1278)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030551888048648834
    2. '=' → logprob: -5.878055095672607
    3. ',s' → logprob: -9.503055572509766
    4. ' ,' → logprob: -9.628055572509766
    5. ' =' → logprob: -9.753055572509766
    6. ',d' → logprob: -11.253055572509766
    7. '_s' → logprob: -11.378055572509766
    8. '_,' → logprob: -11.503055572509766
    9. 's' → logprob: -12.003055572509766
    10. '```' → logprob: -12.878055572509766

Token 3833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.888114098226652e-05
    2. '=' → logprob: -9.625088691711426
    3. ',d' → logprob: -11.750088691711426
    4. ',n' → logprob: -11.875088691711426
    5. ' ,' → logprob: -13.000088691711426
    6. ',num' → logprob: -13.250088691711426
    7. ',s' → logprob: -13.750088691711426
    8. ',
' → logprob: -13.875088691711426
    9. '_,' → logprob: -14.625088691711426
    10. '```' → logprob: -15.500088691711426

Token 3834: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005233763717114925
    2. ' d' → logprob: -5.2552337646484375
    3. 'def' → logprob: -19.755233764648438
    4. '	d' → logprob: -22.755233764648438
    5. '_d' → logprob: -23.130233764648438
    6. '#' → logprob: -23.630233764648438
    7. 's' → logprob: -23.755233764648438
    8. ' ' → logprob: -23.880233764648438
    9. 'n' → logprob: -24.255233764648438
    10. '   ' → logprob: -24.380233764648438

Token 3835: '_s' (ID: 1278)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03577388823032379
    2. ' =' → logprob: -3.410773992538452
    3. '=s' → logprob: -6.410773754119873
    4. '_s' → logprob: -7.660773754119873
    5. '=n' → logprob: -12.785774230957031
    6. 's' → logprob: -12.910774230957031
    7. '=num' → logprob: -13.410774230957031
    8. '=_' → logprob: -14.160774230957031
    9. '(s' → logprob: -14.410774230957031
    10. '=get' → logprob: -14.785774230957031

Token 3836: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012528501683846116
    2. ' =' → logprob: -6.7512526512146
    3. ',' → logprob: -9.501253128051758
    4. '=s' → logprob: -12.251253128051758
    5. '=n' → logprob: -12.751253128051758
    6. '=
' → logprob: -16.626253128051758
    7. ',n' → logprob: -16.751253128051758
    8. '   ' → logprob: -17.501253128051758
    9. '=num' → logprob: -17.876253128051758
    10. ',s' → logprob: -18.126253128051758

Token 3837: ' simplify' (ID: 66240)
  Prédit: 'simpl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simpl' → logprob: -1.306760805164231e-05
    2. ' simplify' → logprob: -11.25001335144043
    3. 'n' → logprob: -18.12501335144043
    4. 'simple' → logprob: -18.25001335144043
    5. 's' → logprob: -18.50001335144043
    6. 'simp' → logprob: -20.12501335144043
    7. 'Simpl' → logprob: -20.50001335144043
    8. 'smooth' → logprob: -21.50001335144043
    9. 'expand' → logprob: -21.62501335144043
    10. 'normalize' → logprob: -21.87501335144043

Token 3838: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.10056959837675095
    2. '(n' → logprob: -2.350569486618042
    3. 'fraction' → logprob: -8.475569725036621
    4. 'Fraction' → logprob: -8.850569725036621
    5. 'n' → logprob: -13.100569725036621
    6. '_f' → logprob: -13.350569725036621
    7. '(d' → logprob: -13.725569725036621
    8. '(num' → logprob: -13.850569725036621
    9. 'frac' → logprob: -14.100569725036621
    10. '_fragment' → logprob: -14.225569725036621

Token 3839: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.718606891809031e-05
    2. 'n' → logprob: -9.625066757202148
    3. '(' → logprob: -14.000066757202148
    4. '(
' → logprob: -16.12506675720215
    5. ' (' → logprob: -16.50006675720215
    6. '```' → logprob: -17.75006675720215
    7. ' n' → logprob: -17.87506675720215
    8. '	n' → logprob: -18.12506675720215
    9. '   ' → logprob: -18.75006675720215
    10. '[n' → logprob: -19.50006675720215

Token 3840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012108299415558577
    2. ',d' → logprob: -6.751210689544678
    3. 'd' → logprob: -10.751211166381836
    4. ' ,' → logprob: -11.001211166381836
    5. '   ' → logprob: -14.001211166381836
    6. '_,' → logprob: -14.626211166381836
    7. '```' → logprob: -15.001211166381836
    8. ' d' → logprob: -15.251211166381836
    9. ',n' → logprob: -15.751211166381836
    10. 'n' → logprob: -15.876211166381836

Token 3841: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.306760805164231e-05
    2. ' d' → logprob: -11.25001335144043
    3. '	d' → logprob: -20.62501335144043
    4. '   ' → logprob: -21.75001335144043
    5. '```' → logprob: -22.37501335144043
    6. '_d' → logprob: -24.00001335144043
    7. '           ' → logprob: -24.00001335144043
    8. '       ' → logprob: -24.37501335144043
    9. '$d' → logprob: -24.87501335144043
    10. ')d' → logprob: -25.00001335144043

Token 3842: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05828883498907089
    2. ',' → logprob: -2.933288812637329
    3. ',n' → logprob: -6.183289051055908
    4. ')
' → logprob: -7.558289051055908
    5. '(n' → logprob: -8.43328857421875
    6. '   ' → logprob: -9.18328857421875
    7. ')n' → logprob: -9.43328857421875
    8. '#' → logprob: -9.55828857421875
    9. '<|end|>' → logprob: -9.68328857421875
    10. 'n' → logprob: -9.68328857421875

Token 3843: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045408621430397034
    2. 'return' → logprob: -3.2954087257385254
    3. ' return' → logprob: -4.920408725738525
    4. '	return' → logprob: -10.795408248901367
    5. '```' → logprob: -10.920408248901367
    6. '   ' → logprob: -13.420408248901367
    7. ',' → logprob: -13.545408248901367
    8. '
' → logprob: -14.545408248901367
    9. '<|end|>' → logprob: -14.670408248901367
    10. '       ' → logprob: -14.795408248901367

Token 3844: ' h' (ID: 312)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007750605698674917
    2. '   ' → logprob: -5.882750511169434
    3. ' return' → logprob: -6.007750511169434
    4. '```' → logprob: -6.382750511169434
    5. 'h' (adapté à ' h') → logprob: -7.257750511169434
    6. '	return' → logprob: -10.257750511169434
    7. 's' → logprob: -10.882750511169434
    8. '``' → logprob: -11.632750511169434
    9. '`' → logprob: -12.257750511169434
    10. '       ' → logprob: -12.507750511169434

Token 3845: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.6000925302505493
    2. '_s' → logprob: -0.8500925302505493
    3. ',' → logprob: -3.8500924110412598
    4. '_,' → logprob: -6.85009241104126
    5. 's' → logprob: -7.47509241104126
    6. '_solution' → logprob: -8.725092887878418
    7. '_' → logprob: -8.725092887878418
    8. ',_' → logprob: -8.850092887878418
    9. '=' → logprob: -8.975092887878418
    10. '_solver' → logprob: -9.350092887878418

Token 3846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ' ,' → logprob: -12.250015258789062
    3. '=' → logprob: -12.625015258789062
    4. ',
' → logprob: -13.125015258789062
    5. ',d' → logprob: -13.125015258789062
    6. ',m' → logprob: -13.750015258789062
    7. ',n' → logprob: -14.125015258789062
    8. ',s' → logprob: -15.250015258789062
    9. '   ' → logprob: -15.625015258789062
    10. 's' → logprob: -15.875015258789062

Token 3847: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011047814972698689
    2. ' m' → logprob: -4.511047840118408
    3. '	m' → logprob: -19.13604736328125
    4. '_m' → logprob: -19.63604736328125
    5. ' м' → logprob: -20.38604736328125
    6. ' ' → logprob: -20.51104736328125
    7. '```' → logprob: -20.51104736328125
    8. '    ' → logprob: -21.01104736328125
    9. '   ' → logprob: -21.26104736328125
    10. 'м' → logprob: -21.38604736328125

Token 3848: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.05643020197749138
    2. '_s' → logprob: -2.9314301013946533
    3. ',' → logprob: -7.431430339813232
    4. '_,' → logprob: -7.681430339813232
    5. 's' → logprob: -8.681429862976074
    6. 'n' → logprob: -9.306429862976074
    7. '_n' → logprob: -9.931429862976074
    8. '_' → logprob: -10.181429862976074
    9. '_sec' → logprob: -10.181429862976074
    10. ',_' → logprob: -10.306429862976074

Token 3849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022473322227597237
    2. '_s' → logprob: -4.022473335266113
    3. '_sol' → logprob: -6.022473335266113
    4. '_,' → logprob: -6.772473335266113
    5. ',s' → logprob: -8.522473335266113
    6. 's' → logprob: -8.647473335266113
    7. '```' → logprob: -8.897473335266113
    8. ' ,' → logprob: -9.647473335266113
    9. ',_' → logprob: -9.647473335266113
    10. '=' → logprob: -10.522473335266113

Token 3850: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011703446507453918
    2. ' n' → logprob: -6.7511701583862305
    3. 'd' → logprob: -17.876171112060547
    4. ' ' → logprob: -18.001171112060547
    5. '```' → logprob: -18.126171112060547
    6. '   ' → logprob: -18.251171112060547
    7. 'frac' → logprob: -18.501171112060547
    8. '
' → logprob: -18.751171112060547
    9. '	n' → logprob: -18.876171112060547
    10. 's' → logprob: -19.126171112060547

Token 3851: '_sec' (ID: 41702)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.20151595771312714
    2. '_sec' → logprob: -1.7015159130096436
    3. 's' → logprob: -10.326516151428223
    4. '```' → logprob: -10.326516151428223
    5. '_sol' → logprob: -10.951516151428223
    6. '_' → logprob: -11.701516151428223
    7. ' _' → logprob: -13.076516151428223
    8. '_sd' → logprob: -13.576516151428223
    9. '_se' → logprob: -13.951516151428223
    10. '\' → logprob: -14.076516151428223

Token 3852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004682073777075857
    2. ',d' → logprob: -7.8754682540893555
    3. ',s' → logprob: -10.250468254089355
    4. ',n' → logprob: -10.625468254089355
    5. ' ,' → logprob: -11.625468254089355
    6. '`,' → logprob: -11.750468254089355
    7. '```' → logprob: -12.500468254089355
    8. '_,' → logprob: -12.875468254089355
    9. ',
' → logprob: -13.250468254089355
    10. '=' → logprob: -14.375468254089355

Token 3853: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014163628220558167
    2. ' d' → logprob: -4.264163494110107
    3. '```' → logprob: -17.389163970947266
    4. '   ' → logprob: -18.264163970947266
    5. '	d' → logprob: -18.264163970947266
    6. ' ' → logprob: -18.639163970947266
    7. '_d' → logprob: -19.014163970947266
    8. '[' → logprob: -19.639163970947266
    9. '           ' → logprob: -20.014163970947266
    10. '     ' → logprob: -20.264163970947266

Token 3854: '_sec' (ID: 41702)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.7848862373502925e-05
    2. 's' → logprob: -10.500027656555176
    3. 'd' → logprob: -16.625028610229492
    4. '```' → logprob: -17.000028610229492
    5. '   ' → logprob: -17.500028610229492
    6. '	s' → logprob: -18.500028610229492
    7. '=' → logprob: -18.875028610229492
    8. '_' → logprob: -19.375028610229492
    9. ' s' → logprob: -19.750028610229492
    10. '...' → logprob: -20.000028610229492

Token 3855: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010540490970015526
    2. ',' → logprob: -5.26054048538208
    3. ' =' → logprob: -5.26054048538208
    4. '   ' → logprob: -9.510540962219238
    5. '(' → logprob: -11.760540962219238
    6. ')' → logprob: -12.385540962219238
    7. '=
' → logprob: -12.510540962219238
    8. '(n' → logprob: -13.385540962219238
    9. '<|end|>' → logprob: -13.510540962219238
    10. ' return' → logprob: -13.510540962219238

Token 3856: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -4.4849443838757e-06
    2. ' frac' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.000003814697266
    4. 'frag' → logprob: -16.875003814697266
    5. 'return' → logprob: -17.000003814697266
    6. 'fract' → logprob: -17.000003814697266
    7. '_frac' → logprob: -17.375003814697266
    8. '```' → logprob: -18.125003814697266
    9. ' ' → logprob: -18.750003814697266
    10. 'Frac' → logprob: -19.125003814697266

Token 3857: '_seconds' (ID: 83213)
  Prédit: '_seconds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -5.5861724831629544e-05
    2. '_s' → logprob: -10.250056266784668
    3. 'seconds' → logprob: -11.000056266784668
    4. 'Seconds' → logprob: -13.750056266784668
    5. '_sec' → logprob: -14.125056266784668
    6. 's' → logprob: -14.625056266784668
    7. '_num' → logprob: -14.750056266784668
    8. '```' → logprob: -15.250056266784668
    9. '_SECONDS' → logprob: -15.375056266784668
    10. '_to' → logprob: -15.750056266784668

Token 3858: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.8921695047756657e-05
    2. 'to' → logprob: -12.000028610229492
    3. '_s' → logprob: -12.000028610229492
    4. '```' → logprob: -12.500028610229492
    5. '(num' → logprob: -12.750028610229492
    6. '_num' → logprob: -12.750028610229492
    7. 'To' → logprob: -13.000028610229492
    8. '   ' → logprob: -13.125028610229492
    9. '_t' → logprob: -14.500028610229492
    10. 'num' → logprob: -14.875028610229492

Token 3859: '_h' (ID: 3434)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.807431161403656
    2. 'h' → logprob: -2.057431221008301
    3. '_s' → logprob: -2.057431221008301
    4. 'simpl' → logprob: -2.182431221008301
    5. 'd' → logprob: -2.432431221008301
    6. '_h' → logprob: -3.182431221008301
    7. '_d' → logprob: -3.682431221008301
    8. 'frac' → logprob: -4.182431221008301
    9. 'n' → logprob: -4.682431221008301
    10. '_n' → logprob: -6.307431221008301

Token 3860: '_m' (ID: 1285)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5283134579658508
    2. 'd' → logprob: -1.028313398361206
    3. 's' → logprob: -4.028313636779785
    4. '_s' → logprob: -4.278313636779785
    5. '_m' → logprob: -4.778313636779785
    6. 'num' → logprob: -5.028313636779785
    7. 'm' → logprob: -5.403313636779785
    8. '_num' → logprob: -6.778313636779785
    9. '_den' → logprob: -8.403313636779785
    10. 'den' → logprob: -8.903313636779785

Token 3861: '_n' (ID: 2170)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3168701231479645
    2. '_d' → logprob: -1.316870093345642
    3. 's' → logprob: -5.941870212554932
    4. '_s' → logprob: -6.941870212554932
    5. 'den' → logprob: -12.691869735717773
    6. '```' → logprob: -13.816869735717773
    7. 'def' → logprob: -13.941869735717773
    8. '   ' → logprob: -14.441869735717773
    9. '_den' → logprob: -14.566869735717773
    10. 'num' → logprob: -14.566869735717773

Token 3862: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.12703163921833038
    2. 'd' → logprob: -2.1270315647125244
    3. 'um' → logprob: -9.502031326293945
    4. '_s' → logprob: -11.252031326293945
    5. 's' → logprob: -11.627031326293945
    6. '   ' → logprob: -13.002031326293945
    7. 'umer' → logprob: -14.002031326293945
    8. '```' → logprob: -14.502031326293945
    9. 'def' → logprob: -14.627031326293945
    10. 'u' → logprob: -14.627031326293945

Token 3863: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -8.256334695033729e-05
    2. 'H' → logprob: -9.500082969665527
    3. '(' → logprob: -11.875082969665527
    4. '```' → logprob: -14.625082969665527
    5. '(
' → logprob: -16.25008201599121
    6. '(P' → logprob: -17.25008201599121
    7. 'return' → logprob: -17.75008201599121
    8. ' (' → logprob: -17.87508201599121
    9. 'def' → logprob: -17.87508201599121
    10. '#' → logprob: -18.00008201599121

Token 3864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012690435396507382
    2. 'n' → logprob: -7.1262688636779785
    3. ',n' → logprob: -8.626269340515137
    4. ',H' → logprob: -9.376269340515137
    5. '(H' → logprob: -9.626269340515137
    6. ' n' → logprob: -10.126269340515137
    7. 'H' → logprob: -10.251269340515137
    8. '(n' → logprob: -10.626269340515137
    9. ' ,' → logprob: -10.751269340515137
    10. '   ' → logprob: -11.751269340515137

Token 3865: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3266110122203827
    2. 'H' → logprob: -1.326611042022705
    3. 'h' → logprob: -5.076611042022705
    4. 'd' → logprob: -5.826611042022705
    5. '   ' → logprob: -5.951611042022705
    6. '       ' → logprob: -7.576611042022705
    7. '10' → logprob: -8.076610565185547
    8. ' n' → logprob: -8.951610565185547
    9. '     ' → logprob: -9.326610565185547
    10. '    ' → logprob: -9.576610565185547

Token 3866: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.06629829853773117
    2. '_sec' → logprob: -3.941298246383667
    3. '_sol' → logprob: -3.941298246383667
    4. ',' → logprob: -4.191298484802246
    5. 's' → logprob: -4.691298484802246
    6. '_,' → logprob: -7.566298484802246
    7. '   ' → logprob: -8.316298484802246
    8. '```' → logprob: -9.566298484802246
    9. 'sol' → logprob: -10.691298484802246
    10. ')' → logprob: -10.941298484802246

Token 3867: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003015022724866867
    2. ',d' → logprob: -5.878015041351318
    3. 'd' → logprob: -9.12801456451416
    4. ' ,' → logprob: -9.37801456451416
    5. ' d' → logprob: -11.87801456451416
    6. '```' → logprob: -12.50301456451416
    7. '`,' → logprob: -12.75301456451416
    8. '_,' → logprob: -13.37801456451416
    9. '   ' → logprob: -15.12801456451416
    10. '[' → logprob: -15.37801456451416

Token 3868: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0024763736873865128
    2. ' d' → logprob: -6.002476215362549
    3. '           ' → logprob: -15.252476692199707
    4. '   ' → logprob: -15.877476692199707
    5. '       ' → logprob: -16.50247573852539
    6. '          ' → logprob: -16.87747573852539
    7. '```' → logprob: -17.25247573852539
    8. '               ' → logprob: -17.50247573852539
    9. '    ' → logprob: -17.62747573852539
    10. '	d' → logprob: -17.62747573852539

Token 3869: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0012035658583045006
    2. '_sec' → logprob: -7.126203536987305
    3. 's' → logprob: -8.126203536987305
    4. 'd' → logprob: -9.251203536987305
    5. 'sec' → logprob: -13.251203536987305
    6. '```' → logprob: -13.501203536987305
    7. '
' → logprob: -14.501203536987305
    8. '_d' → logprob: -14.751203536987305
    9. ')' → logprob: -14.876203536987305
    10. '_sc' → logprob: -14.876203536987305

Token 3870: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015500571578741074
    2. '   ' → logprob: -4.890500545501709
    3. ')
' → logprob: -5.265500545501709
    4. 'return' → logprob: -6.140500545501709
    5. ')return' → logprob: -8.265501022338867
    6. ' return' → logprob: -8.515501022338867
    7. ':return' → logprob: -10.640501022338867
    8. ',' → logprob: -11.140501022338867
    9. '```' → logprob: -11.265501022338867
    10. '	return' → logprob: -11.890501022338867

Token 3871: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014347654767334461
    2. 'return' → logprob: -4.264347553253174
    3. ' return' → logprob: -9.014348030090332
    4. '```' → logprob: -9.889348030090332
    5. '	return' → logprob: -11.514348030090332
    6. '       ' → logprob: -14.014348030090332
    7. ':return' → logprob: -14.889348030090332
    8. '``' → logprob: -16.014347076416016
    9. '`' → logprob: -16.014347076416016
    10. '   ' → logprob: -16.639347076416016

Token 3872: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018315812572836876
    2. '   ' → logprob: -4.01831579208374
    3. ' return' → logprob: -8.768316268920898
    4. '	return' → logprob: -11.518316268920898
    5. '```' → logprob: -14.893316268920898
    6. '{return' → logprob: -17.0183162689209
    7. ':return' → logprob: -17.3933162689209
    8. '       ' → logprob: -17.8933162689209
    9. '``' → logprob: -18.8933162689209
    10. '_return' → logprob: -19.0183162689209

Token 3873: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.8624639324116288e-06
    2. ' h' → logprob: -13.250001907348633
    3. '(h' → logprob: -21.000001907348633
    4. '   ' → logprob: -21.750001907348633
    5. '	h' → logprob: -22.125001907348633
    6. '<h' → logprob: -24.250001907348633
    7. '"h' → logprob: -25.000001907348633
    8. '```' → logprob: -25.875001907348633
    9. '*h' → logprob: -26.000001907348633
    10. '[h' → logprob: -26.125001907348633

Token 3874: '_sol' (ID: 121444)
  Prédit: '_sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sol' → logprob: -0.011354787275195122
    2. ',' → logprob: -4.511354923248291
    3. '_,' → logprob: -8.636354446411133
    4. '_s' → logprob: -9.636354446411133
    5. ',_' → logprob: -10.511354446411133
    6. '_solution' → logprob: -11.136354446411133
    7. '_SOL' → logprob: -12.386354446411133
    8. '_solver' → logprob: -12.511354446411133
    9. 'sol' → logprob: -12.886354446411133
    10. '_' → logprob: -13.011354446411133

Token 3875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010032468708232045
    2. ',m' → logprob: -9.250100135803223
    3. ',
' → logprob: -13.375100135803223
    4. ' ,' → logprob: -14.250100135803223
    5. '```' → logprob: -14.875100135803223
    6. ',user' → logprob: -15.000100135803223
    7. '`,' → logprob: -15.000100135803223
    8. '',' → logprob: -15.125100135803223
    9. '‌,' → logprob: -15.375100135803223
    10. '   ' → logprob: -16.37510108947754

Token 3876: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006715370807796717
    2. ' m' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.881715774536133
    4. '   ' → logprob: -18.131715774536133
    5. '```' → logprob: -18.881715774536133
    6. '0' → logprob: -19.256715774536133
    7. ' ' → logprob: -20.006715774536133
    8. '	m' → logprob: -20.381715774536133
    9. '     ' → logprob: -21.131715774536133
    10. '  ' → logprob: -21.131715774536133

Token 3877: '_sol' (ID: 121444)
  Prédit: '_sec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -0.12948553264141083
    2. '_sol' → logprob: -2.129485607147217
    3. '_s' → logprob: -6.004485607147217
    4. 'sec' → logprob: -10.254485130310059
    5. 'd' → logprob: -10.504485130310059
    6. 'sol' → logprob: -11.629485130310059
    7. '_d' → logprob: -12.129485130310059
    8. '_sep' → logprob: -12.754485130310059
    9. 's' → logprob: -13.254485130310059
    10. ',' → logprob: -14.129485130310059

Token 3878: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0286491010338068
    2. 'n' → logprob: -3.778649091720581
    3. 'd' → logprob: -5.27864933013916
    4. ',n' → logprob: -8.77864933013916
    5. ',d' → logprob: -9.40364933013916
    6. ' ,' → logprob: -10.90364933013916
    7. ' n' → logprob: -10.90364933013916
    8. ' d' → logprob: -11.90364933013916
    9. '_,' → logprob: -12.52864933013916
    10. '```' → logprob: -12.52864933013916

Token 3879: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.1008713702030946e-06
    2. ' d' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.625001907348633
    4. '```' → logprob: -19.750001907348633
    5. '	d' → logprob: -20.125001907348633
    6. '1' → logprob: -21.125001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '10' → logprob: -22.250001907348633
    9. 'n' → logprob: -22.250001907348633
    10. '``' → logprob: -22.750001907348633

Token 3880: '_sec' (ID: 41702)
  Prédit: '_sec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -0.28001436591148376
    2. '_s' → logprob: -1.5300143957138062
    3. '_d' → logprob: -3.6550142765045166
    4. '_den' → logprob: -6.905014514923096
    5. '_sd' → logprob: -7.655014514923096
    6. '```' → logprob: -9.280014038085938
    7. '_div' → logprob: -9.530014038085938
    8. '_sol' → logprob: -9.655014038085938
    9. 'd' → logprob: -10.530014038085938
    10. '_sep' → logprob: -11.155014038085938

Token 3881: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016069209203124046
    2. 'd' → logprob: -4.766069412231445
    3. '_d' → logprob: -5.641069412231445
    4. ',d' → logprob: -6.141069412231445
    5. '_,' → logprob: -7.266069412231445
    6. '_' → logprob: -7.516069412231445
    7. '```' → logprob: -8.141069412231445
    8. ',
' → logprob: -9.391069412231445
    9. ',_' → logprob: -9.891069412231445
    10. ' d' → logprob: -10.391069412231445

Token 3882: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00012403888104017824
    2. ' d' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.125123977661133
    4. ' ' → logprob: -16.000123977661133
    5. '```' → logprob: -16.875123977661133
    6. '
' → logprob: -17.000123977661133
    7. '	d' → logprob: -17.000123977661133
    8. '  ' → logprob: -17.125123977661133
    9. '    ' → logprob: -17.625123977661133
    10. '     ' → logprob: -17.750123977661133

Token 3883: '_sec' (ID: 41702)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.02655804343521595
    2. '_' → logprob: -4.026557922363281
    3. '_sec' → logprob: -5.401557922363281
    4. 's' → logprob: -6.151557922363281
    5. '```' → logprob: -7.026557922363281
    6. '_sol' → logprob: -8.401557922363281
    7. '1' → logprob: -8.651557922363281
    8. '2' → logprob: -9.401557922363281
    9. ' s' → logprob: -9.651557922363281
    10. '0' → logprob: -10.026557922363281

Token 3884: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3885: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0305991172790527
    2. '<|end|>' → logprob: -1.1555991172790527
    3. '```' → logprob: -1.5305991172790527
    4. '#' → logprob: -2.4055991172790527
    5. '\' → logprob: -5.405599117279053
    6. '(' → logprob: -5.530599117279053
    7. '<|end|>' → logprob: -6.155599117279053
    8. '\n' → logprob: -6.405599117279053
    9. 'def' → logprob: -7.030599117279053
    10. '[' → logprob: -7.155599117279053

Token 3886: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9399606585502625
    2. 'main' → logprob: -1.1899607181549072
    3. 'find' → logprob: -1.5649607181549072
    4. ' find' → logprob: -2.9399607181549072
    5. '_main' → logprob: -3.6899607181549072
    6. 'ind' → logprob: -4.689960479736328
    7. '_find' → logprob: -5.314960479736328
    8. 'solve' → logprob: -7.189960479736328
    9. 'def' → logprob: -7.314960479736328
    10. 'inder' → logprob: -7.939960479736328

Token 3887: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06202224642038345
    2. '():
' → logprob: -2.8120222091674805
    3. '()' → logprob: -11.06202220916748
    4. '(argv' → logprob: -11.81202220916748
    5. '():

' → logprob: -12.31202220916748
    6. '(' → logprob: -12.43702220916748
    7. ' ():' → logprob: -12.56202220916748
    8. '();' → logprob: -12.68702220916748
    9. '():
' → logprob: -12.93702220916748
    10. '(H' → logprob: -13.06202220916748

Token 3888: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011149685829877853
    2. '```' → logprob: -4.636149883270264
    3. 'def' → logprob: -7.136149883270264
    4. '(H' → logprob: -8.386149406433105
    5. '	H' → logprob: -9.261149406433105
    6. 'import' → logprob: -9.886149406433105
    7. '``' → logprob: -10.511149406433105
    8. '    
' → logprob: -10.761149406433105
    9. '	def' → logprob: -11.011149406433105
    10. '(' → logprob: -11.011149406433105

Token 3889: ' for' (ID: 395)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1124362051486969
    2. '   ' → logprob: -2.487436294555664
    3. 'n' → logprob: -4.862436294555664
    4. '```' → logprob: -4.987436294555664
    5. ' import' → logprob: -5.362436294555664
    6. 'H' → logprob: -5.737436294555664
    7. 'for' (adapté à ' for') → logprob: -8.112436294555664
    8. 'try' → logprob: -8.987436294555664
    9. ' H' → logprob: -9.362436294555664
    10. ' n' → logprob: -9.487436294555664

Token 3890: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.18237093091011047
    2. 'line' → logprob: -1.807370901107788
    3. ' ligne' → logprob: -7.182371139526367
    4. ' _' → logprob: -7.557371139526367
    5. '_line' → logprob: -8.182371139526367
    6. ' H' → logprob: -8.307371139526367
    7. 'ligne' → logprob: -8.307371139526367
    8. 'H' → logprob: -8.807371139526367
    9. '_' → logprob: -8.932371139526367
    10. 'i' → logprob: -9.057371139526367

Token 3891: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8162454962730408
    2. '():
' → logprob: -1.1912455558776855
    3. '():' → logprob: -2.3162455558776855
    4. '   ' → logprob: -3.3162455558776855
    5. 'in' → logprob: -3.9412455558776855
    6. '()' → logprob: -3.9412455558776855
    7. ',' → logprob: -4.5662455558776855
    8. '[]' → logprob: -4.5662455558776855
    9. '().' → logprob: -4.6912455558776855
    10. '[' → logprob: -5.0662455558776855

Token 3892: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006746512372046709
    2. ' sys' → logprob: -5.506746292114258
    3. 'input' → logprob: -6.131746292114258
    4. 'in' → logprob: -8.506746292114258
    5. 'import' → logprob: -9.256746292114258
    6. '=sys' → logprob: -9.631746292114258
    7. '(sys' → logprob: -10.256746292114258
    8. ' input' → logprob: -10.506746292114258
    9. ' in' → logprob: -10.756746292114258
    10. 'stdin' → logprob: -11.256746292114258

Token 3893: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.203602597117424
    2. '.stdin' → logprob: -2.5786025524139404
    3. '(stdin' → logprob: -3.0786025524139404
    4. '.readlines' → logprob: -3.5786025524139404
    5. 'stdin' → logprob: -4.0786027908325195
    6. '.' → logprob: -6.0786027908325195
    7. 'in' → logprob: -6.0786027908325195
    8. 'import' → logprob: -6.3286027908325195
    9. '().' → logprob: -6.4536027908325195
    10. '   ' → logprob: -6.5786027908325195

Token 3894: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.1704675406217575
    2. '().' → logprob: -2.4204676151275635
    3. '():' → logprob: -3.7954676151275635
    4. '   ' → logprob: -4.420467376708984
    5. ' in' → logprob: -4.920467376708984
    6. ':' → logprob: -5.170467376708984
    7. '()' → logprob: -5.545467376708984
    8. '       ' → logprob: -5.545467376708984
    9. '(line' → logprob: -5.795467376708984
    10. ':
' → logprob: -6.170467376708984

Token 3895: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005462417611852288
    2. '       ' → logprob: -7.875546455383301
    3. '```' → logprob: -8.7505464553833
    4. '   ' → logprob: -12.6255464553833
    5. '    
' → logprob: -13.5005464553833
    6. '``' → logprob: -13.8755464553833
    7. '`' → logprob: -15.3755464553833
    8. 'tokens' → logprob: -15.5005464553833
    9. ' if' → logprob: -15.5005464553833
    10. '    ' → logprob: -15.7505464553833

Token 3896: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011394861154258251
    2. '       ' → logprob: -5.01139497756958
    3. ' line' → logprob: -5.63639497756958
    4. 'line' → logprob: -7.51139497756958
    5. ' if' → logprob: -7.63639497756958
    6. '	line' → logprob: -10.511394500732422
    7. 'if' (adapté à ' if') → logprob: -10.761394500732422
    8. ' stripped' → logprob: -11.886394500732422
    9. '```' → logprob: -12.386394500732422
    10. '   ' → logprob: -12.511394500732422

Token 3897: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.45849424600601196
    2. 'not' → logprob: -1.9584941864013672
    3. ' line' → logprob: -1.9584941864013672
    4. 'line' → logprob: -2.458494186401367
    5. '   ' → logprob: -10.083494186401367
    6. '=line' → logprob: -11.333494186401367
    7. '#line' → logprob: -12.583494186401367
    8. '(line' → logprob: -13.333494186401367
    9. '	line' → logprob: -15.208494186401367
    10. '```' → logprob: -15.458494186401367

Token 3898: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.2904631197452545
    2. '.startswith' → logprob: -2.0404632091522217
    3. '==' → logprob: -2.2904632091522217
    4. '.' → logprob: -4.790462970733643
    5. ' ==' → logprob: -5.415462970733643
    6. 'startswith' → logprob: -5.665462970733643
    7. '.rstrip' → logprob: -6.915462970733643
    8. 'strip' → logprob: -7.040462970733643
    9. '```' → logprob: -7.165462970733643
    10. '   ' → logprob: -7.540462970733643

Token 3899: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.14129133522510529
    2. '()' → logprob: -2.141291379928589
    3. '==' → logprob: -4.26629114151001
    4. ' ==' → logprob: -8.891291618347168
    5. '()=="' → logprob: -9.766291618347168
    6. '():
' → logprob: -10.641291618347168
    7. '():' → logprob: -12.391291618347168
    8. '.startswith' → logprob: -14.391291618347168
    9. '().' → logprob: -14.391291618347168
    10. '()='' → logprob: -14.641291618347168

Token 3900: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012892660684883595
    2. ' ==' → logprob: -4.387892723083496
    3. '()==' → logprob: -8.012892723083496
    4. '==
' → logprob: -11.012892723083496
    5. '===' → logprob: -11.512892723083496
    6. '```' → logprob: -12.012892723083496
    7. '       ' → logprob: -12.637892723083496
    8. '()' → logprob: -12.762892723083496
    9. ')==' → logprob: -12.762892723083496
    10. '=='' → logprob: -13.012892723083496

Token 3901: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.9703682065010071
    2. '"' → logprob: -1.2203681468963623
    3. '"":' → logprob: -1.4703681468963623
    4. '""' → logprob: -2.4703681468963623
    5. ''' → logprob: -4.470368385314941
    6. ' "":
' → logprob: -9.595368385314941
    7. ''ex' → logprob: -11.220368385314941
    8. ' '':
' → logprob: -11.970368385314941
    9. ''end' → logprob: -13.720368385314941
    10. '"""' → logprob: -13.970368385314941

Token 3902: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3133976459503174
    2. '           ' → logprob: -1.3133976459503174
    3. '	       ' → logprob: -9.938397407531738
    4. ':' → logprob: -10.188397407531738
    5. '```' → logprob: -11.188397407531738
    6. ':
' → logprob: -11.438397407531738
    7. '		' → logprob: -12.313397407531738
    8. '	   ' → logprob: -12.313397407531738
    9. ',' → logprob: -12.313397407531738
    10. ' continue' → logprob: -12.938397407531738

Token 3903: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.25336939096450806
    2. '       ' → logprob: -1.5033693313598633
    3. 'continue' (adapté à ' continue') → logprob: -7.128369331359863
    4. '           ' → logprob: -8.003369331359863
    5. ' break' → logprob: -9.003369331359863
    6. 'return' → logprob: -9.253369331359863
    7. '	break' → logprob: -9.503369331359863
    8. '```' → logprob: -12.878369331359863
    9. '               ' → logprob: -13.128369331359863
    10. '   ' → logprob: -13.753369331359863

Token 3904: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012582694762386382
    2. '```' → logprob: -9.375125885009766
    3. '   ' → logprob: -10.625125885009766
    4. '<|end|>' → logprob: -12.500125885009766
    5. '        
' → logprob: -13.000125885009766
    6. '           ' → logprob: -13.000125885009766
    7. '	' → logprob: -13.375125885009766
    8. 'token' → logprob: -13.750125885009766
    9. 'tokens' → logprob: -14.000125885009766
    10. ',' → logprob: -14.125125885009766

Token 3905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001167364651337266
    2. '```' → logprob: -7.126167297363281
    3. '   ' → logprob: -8.001167297363281
    4. 'token' → logprob: -11.876167297363281
    5. 'tokens' → logprob: -12.001167297363281
    6. '<|end|>' → logprob: -12.751167297363281
    7. '	' → logprob: -13.126167297363281
    8. '           ' → logprob: -13.376167297363281
    9. ',' → logprob: -13.876167297363281
    10. '``' → logprob: -14.126167297363281

Token 3906: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.016374045982956886
    2. 'parts' → logprob: -4.516374111175537
    3. '   ' → logprob: -6.016374111175537
    4. '       ' → logprob: -6.391374111175537
    5. 'params' → logprob: -7.766374111175537
    6. 'tokens' → logprob: -7.891374111175537
    7. 'args' → logprob: -9.266373634338379
    8. 'n' → logprob: -9.266373634338379
    9. 'values' → logprob: -9.766373634338379
    10. 'L' → logprob: -9.891373634338379

Token 3907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03284751996397972
    2. '=' → logprob: -3.5328474044799805
    3. ' =' → logprob: -6.5328474044799805
    4. '_tokens' → logprob: -7.7828474044799805
    5. 'tokens' → logprob: -7.7828474044799805
    6. '_,' → logprob: -8.65784740447998
    7. ',num' → logprob: -9.15784740447998
    8. 'num' → logprob: -9.40784740447998
    9. 'token' → logprob: -9.40784740447998
    10. '_token' → logprob: -9.65784740447998

Token 3908: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1723192036151886
    2. 'm' → logprob: -2.797319173812866
    3. 't' → logprob: -2.797319173812866
    4. 's' → logprob: -3.797319173812866
    5. 'M' → logprob: -4.922319412231445
    6. 'rest' → logprob: -6.297319412231445
    7. 'n' → logprob: -6.797319412231445
    8. 'min' → logprob: -7.047319412231445
    9. 'start' → logprob: -7.047319412231445
    10. '=' → logprob: -8.297319412231445

Token 3909: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016951782628893852
    2. '_,' → logprob: -4.766951560974121
    3. '0' → logprob: -4.891951560974121
    4. ',num' → logprob: -7.891951560974121
    5. '_num' → logprob: -8.766951560974121
    6. ' ,' → logprob: -8.891951560974121
    7. '_' → logprob: -10.641951560974121
    8. 'num' → logprob: -11.391951560974121
    9. '_input' → logprob: -11.641951560974121
    10. ',int' → logprob: -11.766951560974121

Token 3910: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007099286303855479
    2. ' m' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.750709533691406
    4. ',' → logprob: -20.250709533691406
    5. ' ' → logprob: -20.625709533691406
    6. '    ' → logprob: -21.750709533691406
    7. '  ' → logprob: -21.750709533691406
    8. 'M' → logprob: -22.250709533691406
    9. 'м' → logprob: -22.375709533691406
    10. '	m' → logprob: -22.500709533691406

Token 3911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003183041699230671
    2. '_,' → logprob: -8.62531852722168
    3. '=' → logprob: -9.62531852722168
    4. ' ,' → logprob: -10.25031852722168
    5. '0' → logprob: -10.75031852722168
    6. 's' → logprob: -11.62531852722168
    7. ' =' → logprob: -12.50031852722168
    8. ',s' → logprob: -14.75031852722168
    9. '<|end|>' → logprob: -15.00031852722168
    10. ',num' → logprob: -15.25031852722168

Token 3912: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013294065138325095
    2. ' s' → logprob: -6.62632942199707
    3. '0' → logprob: -12.62632942199707
    4. ' ' → logprob: -16.37632942199707
    5. '_s' → logprob: -16.87632942199707
    6. '```' → logprob: -17.62632942199707
    7. 'int' → logprob: -17.87632942199707
    8. ',' → logprob: -18.25132942199707
    9. '   ' → logprob: -18.25132942199707
    10. '_' → logprob: -18.50132942199707

Token 3913: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023456037044525146
    2. ' =' → logprob: -3.77345609664917
    3. ',' → logprob: -8.523455619812012
    4. ')' → logprob: -12.398455619812012
    5. '   ' → logprob: -12.773455619812012
    6. '=
' → logprob: -13.398455619812012
    7. ')=' → logprob: -14.398455619812012
    8. '<|end|>' → logprob: -14.523455619812012
    9. '=line' → logprob: -14.648455619812012
    10. '=int' → logprob: -15.523455619812012

Token 3914: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.006746632046997547
    2. ' map' → logprob: -5.006746768951416
    3. '(map' → logprob: -10.881746292114258
    4. '[' → logprob: -11.756746292114258
    5. '[line' → logprob: -12.631746292114258
    6. 'line' → logprob: -14.006746292114258
    7. '	map' → logprob: -15.381746292114258
    8. 'list' → logprob: -15.631746292114258
    9. ' [' → logprob: -17.131746292114258
    10. '   ' → logprob: -17.506746292114258

Token 3915: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.288163083605468e-05
    2. 'int' → logprob: -9.875052452087402
    3. '(str' → logprob: -14.000052452087402
    4. '[int' → logprob: -15.250052452087402
    5. '=int' → logprob: -15.625052452087402
    6. '<int' → logprob: -17.00005340576172
    7. '(float' → logprob: -17.25005340576172
    8. ' int' → logprob: -17.87505340576172
    9. '	int' → logprob: -18.12505340576172
    10. '(' → logprob: -18.75005340576172

Token 3916: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.006129525601863861
    2. 'line' → logprob: -5.381129741668701
    3. '=line' → logprob: -7.506129741668701
    4. ')' → logprob: -8.381129264831543
    5. '[line' → logprob: -8.756129264831543
    6. ',line' → logprob: -8.881129264831543
    7. '#line' → logprob: -8.881129264831543
    8. '(' → logprob: -9.131129264831543
    9. ',' → logprob: -9.256129264831543
    10. ' line' → logprob: -10.131129264831543

Token 3917: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -4.961759259458631e-06
    2. ' line' → logprob: -12.250004768371582
    3. '(line' → logprob: -16.7500057220459
    4. '#line' → logprob: -19.2500057220459
    5. '[line' → logprob: -19.6250057220459
    6. '=line' → logprob: -19.7500057220459
    7. '	line' → logprob: -20.7500057220459
    8. '_line' → logprob: -21.6250057220459
    9. '   ' → logprob: -22.5000057220459
    10. ',line' → logprob: -23.1250057220459

Token 3918: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5655370950698853
    2. '.split' → logprob: -1.0655370950698853
    3. '.strip' → logprob: -2.5655369758605957
    4. '.' → logprob: -4.690536975860596
    5. '.rstrip' → logprob: -7.315536975860596
    6. '.readline' → logprob: -8.940537452697754
    7. ').' → logprob: -8.940537452697754
    8. '       ' → logprob: -8.940537452697754
    9. 'split' → logprob: -9.940537452697754
    10. '.replace' → logprob: -10.440537452697754

Token 3919: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04335026815533638
    2. ')' → logprob: -3.5433502197265625
    3. '())
' → logprob: -4.5433502197265625
    4. '()' → logprob: -5.9183502197265625
    5. ')
' → logprob: -9.418350219726562
    6. '(' → logprob: -10.668350219726562
    7. '()[' → logprob: -10.918350219726562
    8. '('' → logprob: -11.668350219726562
    9. '[' → logprob: -11.918350219726562
    10. '()
' → logprob: -11.918350219726562

Token 3920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003694205661304295
    2. '   ' → logprob: -8.50036907196045
    3. '<|end|>' → logprob: -8.87536907196045
    4. '        
' → logprob: -11.25036907196045
    5. '```' → logprob: -12.50036907196045
    6. '<|end|>' → logprob: -12.75036907196045
    7. '           ' → logprob: -13.75036907196045
    8. ',' → logprob: -13.87536907196045
    9. '続きを' → logprob: -14.62536907196045
    10. 'token' → logprob: -15.12536907196045

Token 3921: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3585731089115143
    2. 'result' → logprob: -1.358573079109192
    3. 'h' → logprob: -3.7335731983184814
    4. 'res' → logprob: -4.608572959899902
    5. '   ' → logprob: -5.233572959899902
    6. 'if' (adapté à ' if') → logprob: -5.483572959899902
    7. 'r' → logprob: -7.858572959899902
    8. ' result' → logprob: -8.733572959899902
    9. 'rés' → logprob: -9.233572959899902
    10. ' if' → logprob: -9.608572959899902

Token 3922: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01828092895448208
    2. ' H' → logprob: -4.018280982971191
    3. '   ' → logprob: -9.268280982971191
    4. '(H' → logprob: -10.393280982971191
    5. ' (' → logprob: -13.143280982971191
    6. 'h' → logprob: -13.393280982971191
    7. '(' → logprob: -13.393280982971191
    8. '       ' → logprob: -14.268280982971191
    9. ' ' → logprob: -15.643280982971191
    10. '  ' → logprob: -17.018280029296875

Token 3923: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020665442571043968
    2. ' ==' → logprob: -3.895665407180786
    3. '<=' → logprob: -10.145665168762207
    4. '!=' → logprob: -10.145665168762207
    5. '>' → logprob: -10.895665168762207
    6. ' !=' → logprob: -12.270665168762207
    7. '==
' → logprob: -12.395665168762207
    8. '   ' → logprob: -12.520665168762207
    9. '=' → logprob: -12.520665168762207
    10. '<' → logprob: -12.770665168762207

Token 3924: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '=' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.750001907348633
    5. 's' → logprob: -20.625001907348633
    6. '==' → logprob: -20.875001907348633
    7. '#' → logprob: -21.375001907348633
    8. '۰' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.500001907348633
    10. '```' → logprob: -21.500001907348633

Token 3925: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. 's' → logprob: -17.375
    4. '۰' → logprob: -19.25
    5. '#' → logprob: -20.0
    6. 'from' → logprob: -20.125
    7. 'import' → logprob: -20.125
    8. '<|end|>' → logprob: -20.5
    9. '<' → logprob: -20.625
    10. '=' → logprob: -20.75

Token 3926: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9099213480949402
    2. ':' → logprob: -1.284921407699585
    3. '           ' → logprob: -1.784921407699585
    4. ' and' → logprob: -2.534921407699585
    5. '       ' → logprob: -2.659921407699585
    6. '   ' → logprob: -6.534921169281006
    7. 'and' → logprob: -6.534921169281006
    8. ':return' → logprob: -8.284921646118164
    9. '               ' → logprob: -9.159921646118164
    10. '          ' → logprob: -9.534921646118164

Token 3927: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.8624639324116288e-06
    2. ' h' → logprob: -13.250001907348633
    3. '	h' → logprob: -20.625001907348633
    4. '   ' → logprob: -22.500001907348633
    5. '"h' → logprob: -24.125001907348633
    6. '<h' → logprob: -24.375001907348633
    7. '_h' → logprob: -24.500001907348633
    8. 'hh' → logprob: -24.875001907348633
    9. '  ' → logprob: -25.000001907348633
    10. 'hpp' → logprob: -25.375001907348633

Token 3928: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05929918587207794
    2. ' ==' → logprob: -2.9342992305755615
    3. ',' → logprob: -5.434298992156982
    4. '=' → logprob: -10.43429946899414
    5. '==
' → logprob: -12.30929946899414
    6. ' ,' → logprob: -13.05929946899414
    7. 'm' → logprob: -13.30929946899414
    8. '0' → logprob: -14.05929946899414
    9. '```' → logprob: -14.05929946899414
    10. ',m' → logprob: -14.18429946899414

Token 3929: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.68022444692906e-05
    2. ' ' → logprob: -10.000046730041504
    3. 'and' → logprob: -13.750046730041504
    4. ' and' → logprob: -15.625046730041504
    5. '   ' → logprob: -17.00004768371582
    6. '  ' → logprob: -18.87504768371582
    7. '<|end|>' → logprob: -19.87504768371582
    8. '```' → logprob: -20.12504768371582
    9. '    ' → logprob: -20.62504768371582
    10. '
' → logprob: -21.00004768371582

Token 3930: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -18.250017166137695
    4. 'and' → logprob: -18.875017166137695
    5. '   ' → logprob: -19.750017166137695
    6. 'm' → logprob: -19.750017166137695
    7. '  ' → logprob: -19.875017166137695
    8. '00' → logprob: -20.250017166137695
    9. ' and' → logprob: -20.875017166137695
    10. '=' → logprob: -22.000017166137695

Token 3931: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20144617557525635
    2. 'and' → logprob: -1.7014461755752563
    3. '       ' → logprob: -11.701446533203125
    4. '0' → logprob: -12.076446533203125
    5. '           ' → logprob: -12.201446533203125
    6. ',' → logprob: -12.451446533203125
    7. 'm' → logprob: -12.576446533203125
    8. ' ' → logprob: -13.076446533203125
    9. '   ' → logprob: -13.576446533203125
    10. '	and' → logprob: -13.826446533203125

Token 3932: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002613358374219388
    2. ' m' → logprob: -8.250261306762695
    3. '   ' → logprob: -20.375261306762695
    4. '	m' → logprob: -20.500261306762695
    5. '0' → logprob: -21.875261306762695
    6. 's' → logprob: -22.250261306762695
    7. ' ' → logprob: -22.625261306762695
    8. ' ' → logprob: -23.500261306762695
    9. '  ' → logprob: -23.625261306762695
    10. '    ' → logprob: -24.125261306762695

Token 3933: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20323210954666138
    2. ' ==' → logprob: -1.7032320499420166
    3. '0' → logprob: -6.328232288360596
    4. '=' → logprob: -11.578231811523438
    5. ' ' → logprob: -11.828231811523438
    6. ',' → logprob: -12.703231811523438
    7. '(' → logprob: -13.203231811523438
    8. 'and' → logprob: -13.578231811523438
    9. '```' → logprob: -13.578231811523438
    10. ')==' → logprob: -13.828231811523438

Token 3934: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -18.7500057220459
    4. 's' → logprob: -20.2500057220459
    5. '   ' → logprob: -20.2500057220459
    6. '00' → logprob: -20.8750057220459
    7. '  ' → logprob: -21.0000057220459
    8. 'and' → logprob: -21.2500057220459
    9. '=' → logprob: -22.1250057220459
    10. '۰' → logprob: -22.3750057220459

Token 3935: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. 's' → logprob: -17.87501335144043
    4. '<|end|>' → logprob: -18.87501335144043
    5. 'and' → logprob: -19.50001335144043
    6. '   ' → logprob: -20.12501335144043
    7. '```' → logprob: -20.37501335144043
    8. '  ' → logprob: -21.37501335144043
    9. '<|end|>' → logprob: -21.37501335144043
    10. '00' → logprob: -21.50001335144043

Token 3936: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16024595499038696
    2. 'and' → logprob: -1.9102458953857422
    3. '0' → logprob: -11.410245895385742
    4. '       ' → logprob: -12.410245895385742
    5. '==' → logprob: -12.910245895385742
    6. '           ' → logprob: -14.160245895385742
    7. ' ' → logprob: -14.160245895385742
    8. '```' → logprob: -14.160245895385742
    9. '=' → logprob: -14.285245895385742
    10. '	and' → logprob: -14.535245895385742

Token 3937: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00037085101939737797
    2. ' s' → logprob: -8.000370979309082
    3. '0' → logprob: -10.250370979309082
    4. ' ' → logprob: -18.375370025634766
    5. '   ' → logprob: -19.625370025634766
    6. '       ' → logprob: -22.250370025634766
    7. '_s' → logprob: -22.375370025634766
    8. '           ' → logprob: -22.750370025634766
    9. '     ' → logprob: -22.750370025634766
    10. '  ' → logprob: -23.125370025634766

Token 3938: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3486173152923584
    2. '==' → logprob: -1.2236173152923584
    3. '0' → logprob: -9.348617553710938
    4. '=' → logprob: -10.598617553710938
    5. ')==' → logprob: -11.348617553710938
    6. '_' → logprob: -11.723617553710938
    7. ' ' → logprob: -11.973617553710938
    8. '[' → logprob: -12.098617553710938
    9. ' ' → logprob: -12.598617553710938
    10. ')' → logprob: -12.598617553710938

Token 3939: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '00' → logprob: -19.125003814697266
    5. '۰' → logprob: -20.250003814697266
    6. '<|end|>' → logprob: -20.250003814697266
    7. '<|end|>' → logprob: -20.375003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '```' → logprob: -20.625003814697266
    10. '#' → logprob: -21.250003814697266

Token 3940: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.0
    4. '=' → logprob: -18.25
    5. '00' → logprob: -18.375
    6. '```' → logprob: -18.875
    7. '  ' → logprob: -19.0
    8. '-' → logprob: -19.125
    9. '#' → logprob: -19.125
    10. '1' → logprob: -19.75

Token 3941: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11807575076818466
    2. ':' → logprob: -2.4930758476257324
    3. '       ' → logprob: -3.6180758476257324
    4. '           ' → logprob: -6.368075847625732
    5. '   ' → logprob: -9.118075370788574
    6. '):
' → logprob: -10.993075370788574
    7. ':return' → logprob: -11.493075370788574
    8. ',' → logprob: -11.993075370788574
    9. '():
' → logprob: -12.493075370788574
    10. ':
' → logprob: -12.493075370788574

Token 3942: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5763365626335144
    2. '           ' → logprob: -0.8263365626335144
    3. '	       ' → logprob: -8.576336860656738
    4. '		' → logprob: -9.826336860656738
    5. '               ' → logprob: -10.326336860656738
    6. ':' → logprob: -10.826336860656738
    7. ':
' → logprob: -11.201336860656738
    8. '   ' → logprob: -11.326336860656738
    9. '	' → logprob: -11.576336860656738
    10. '<|end|>' → logprob: -11.701336860656738

Token 3943: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.23444388806819916
    2. '           ' → logprob: -1.7344439029693604
    3. 'return' → logprob: -4.109443664550781
    4. ' break' → logprob: -4.859443664550781
    5. '       ' → logprob: -5.109443664550781
    6. '	break' → logprob: -6.609443664550781
    7. '               ' → logprob: -7.984443664550781
    8. '	       ' → logprob: -8.109443664550781
    9. '		' → logprob: -8.609443664550781
    10. ' return' → logprob: -9.859443664550781

Token 3944: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03606289252638817
    2. '   ' → logprob: -3.4110629558563232
    3. '<|end|>' → logprob: -6.911062717437744
    4. '        
' → logprob: -7.411062717437744
    5. '```' → logprob: -7.411062717437744
    6. '
' → logprob: -9.036063194274902
    7. '    
' → logprob: -10.411063194274902
    8. '<|end|>' → logprob: -11.161063194274902
    9. '  
' → logprob: -12.286063194274902
    10. '           ' → logprob: -12.411063194274902

Token 3945: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22797061502933502
    2. '   ' → logprob: -1.6029706001281738
    3. '```' → logprob: -6.352970600128174
    4. '        
' → logprob: -7.977970600128174
    5. '<|end|>' → logprob: -8.352971076965332
    6. '
' → logprob: -8.852971076965332
    7. '    
' → logprob: -10.477971076965332
    8. '``' → logprob: -12.102971076965332
    9. '<|end|>' → logprob: -12.102971076965332
    10. '     ' → logprob: -12.227971076965332

Token 3946: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8975759148597717
    2. 'result' → logprob: -1.272575855255127
    3. 'h' → logprob: -1.522575855255127
    4. '       ' → logprob: -2.897575855255127
    5. 'res' (adapté à ' res') → logprob: -3.397575855255127
    6. 't' → logprob: -6.147575855255127
    7. ' result' → logprob: -7.147575855255127
    8. 'sol' → logprob: -7.522575855255127
    9. 'solution' → logprob: -7.647575855255127
    10. 'r' → logprob: -7.897575855255127

Token 3947: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25923725962638855
    2. ' =' → logprob: -1.509237289428711
    3. '   ' → logprob: -5.009237289428711
    4. '=res' → logprob: -8.884237289428711
    5. '_' → logprob: -9.134237289428711
    6. '_=' → logprob: -9.384237289428711
    7. 's' → logprob: -9.634237289428711
    8. '=_' → logprob: -10.009237289428711
    9. ',' → logprob: -10.134237289428711
    10. '    ' → logprob: -10.884237289428711

Token 3948: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -9.615255839889869e-05
    2. ' find' → logprob: -9.250096321105957
    3. '(find' → logprob: -20.12509536743164
    4. '	find' → logprob: -20.25009536743164
    5. '   ' → logprob: -21.87509536743164
    6. '=find' → logprob: -22.50009536743164
    7. '.find' → logprob: -24.37509536743164
    8. '_find' → logprob: -24.75009536743164
    9. '
' → logprob: -25.62509536743164
    10. '  ' → logprob: -26.12509536743164

Token 3949: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -5.2166411478538066e-05
    2. 'first' → logprob: -10.375052452087402
    3. 'First' → logprob: -11.500052452087402
    4. '_' → logprob: -12.375052452087402
    5. '_FIRST' → logprob: -13.000052452087402
    6. '```' → logprob: -14.000052452087402
    7. '_First' → logprob: -14.250052452087402
    8. 'res' → logprob: -14.625052452087402
    9. '(' → logprob: -14.750052452087402
    10. '_next' → logprob: -15.000052452087402

Token 3950: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.9160102712921798e-05
    2. 'time' → logprob: -10.625029563903809
    3. '_' → logprob: -13.375029563903809
    4. 'res' → logprob: -13.500029563903809
    5. '_res' → logprob: -13.875029563903809
    6. '_first' → logprob: -15.375029563903809
    7. 'Time' → logprob: -15.750029563903809
    8. '```' → logprob: -16.000028610229492
    9. '_times' → logprob: -16.125028610229492
    10. '`' → logprob: -16.750028610229492

Token 3951: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.3676733690081164e-05
    2. '(' → logprob: -10.75002384185791
    3. '(
' → logprob: -14.00002384185791
    4. 'H' → logprob: -14.00002384185791
    5. '<|end|>' → logprob: -15.25002384185791
    6. ' (' → logprob: -15.75002384185791
    7. '((' → logprob: -17.500022888183594
    8. '\(' → logprob: -17.750022888183594
    9. ')' → logprob: -17.750022888183594
    10. '(res' → logprob: -18.000022888183594

Token 3952: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ',h' → logprob: -10.875035285949707
    3. ' ,' → logprob: -12.000035285949707
    4. ',H' → logprob: -12.375035285949707
    5. ',res' → logprob: -12.625035285949707
    6. '       ' → logprob: -13.125035285949707
    7. ',
' → logprob: -14.375035285949707
    8. 'res' → logprob: -16.375036239624023
    9. '           ' → logprob: -16.375036239624023
    10. ')' → logprob: -16.375036239624023

Token 3953: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.896309739408025e-07
    2. ' h' → logprob: -14.125000953674316
    3. '	h' → logprob: -18.375
    4. '       ' → logprob: -18.625
    5. '_h' → logprob: -18.625
    6. '   ' → logprob: -20.75
    7. '<h' → logprob: -21.25
    8. '           ' → logprob: -21.5
    9. ',h' → logprob: -21.625
    10. '"h' → logprob: -22.0

Token 3954: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040183294913731515
    2. ',m' → logprob: -8.000401496887207
    3. ' ,' → logprob: -10.625401496887207
    4. ',res' → logprob: -10.875401496887207
    5. 'm' → logprob: -11.250401496887207
    6. 'res' → logprob: -12.375401496887207
    7. '       ' → logprob: -13.125401496887207
    8. '_,' → logprob: -13.625401496887207
    9. '0' → logprob: -14.000401496887207
    10. ',
' → logprob: -14.875401496887207

Token 3955: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.339278580620885e-06
    2. ' m' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.750001907348633
    4. '0' → logprob: -21.750001907348633
    5. 'м' → logprob: -22.125001907348633
    6. '       ' → logprob: -22.500001907348633
    7. ',' → logprob: -22.750001907348633
    8. '```' → logprob: -22.750001907348633
    9. '           ' → logprob: -23.000001907348633
    10. '    ' → logprob: -23.625001907348633

Token 3956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.288163083605468e-05
    2. ',s' → logprob: -10.250052452087402
    3. ' ,' → logprob: -12.000052452087402
    4. '_,' → logprob: -12.625052452087402
    5. ',res' → logprob: -12.625052452087402
    6. '0' → logprob: -13.250052452087402
    7. 's' → logprob: -13.750052452087402
    8. ',
' → logprob: -14.375052452087402
    9. '```' → logprob: -14.500052452087402
    10. '       ' → logprob: -15.250052452087402

Token 3957: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8624639324116288e-06
    2. ' s' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '```' → logprob: -18.375001907348633
    5. '       ' → logprob: -18.500001907348633
    6. '    ' → logprob: -19.500001907348633
    7. '0' → logprob: -20.000001907348633
    8. '     ' → logprob: -20.125001907348633
    9. '        ' → logprob: -20.750001907348633
    10. '           ' → logprob: -21.000001907348633

Token 3958: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0634695291519165
    2. ')' → logprob: -3.313469409942627
    3. '       ' → logprob: -3.688469409942627
    4. '[' → logprob: -10.563469886779785
    5. ')
' → logprob: -10.688469886779785
    6. '   ' → logprob: -11.188469886779785
    7. ',' → logprob: -11.813469886779785
    8. '```' → logprob: -11.813469886779785
    9. ')`
' → logprob: -12.938469886779785
    10. '()
' → logprob: -13.063469886779785

Token 3959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005643534241244197
    2. '```' → logprob: -7.8755645751953125
    3. '   ' → logprob: -8.875564575195312
    4. 'print' → logprob: -10.250564575195312
    5. 'if' → logprob: -12.500564575195312
    6. '``' → logprob: -13.000564575195312
    7. ' if' → logprob: -14.250564575195312
    8. '`' → logprob: -14.500564575195312
    9. '           ' → logprob: -14.750564575195312
    10. '        
' → logprob: -14.875564575195312

Token 3960: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18258307874202728
    2. 'print' → logprob: -1.9325830936431885
    3. 'if' (adapté à ' if') → logprob: -4.557582855224609
    4. ' if' → logprob: -5.057582855224609
    5. ' print' → logprob: -5.807582855224609
    6. '```' → logprob: -6.557582855224609
    7. '   ' → logprob: -7.182582855224609
    8. 'h' → logprob: -10.18258285522461
    9. ' h' → logprob: -11.55758285522461
    10. '``' → logprob: -11.68258285522461

Token 3961: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.4740893542766571
    2. 'res' → logprob: -0.9740893840789795
    3. '   ' → logprob: -11.474089622497559
    4. ' not' → logprob: -13.974089622497559
    5. '    ' → logprob: -14.974089622497559
    6. '(res' → logprob: -14.974089622497559
    7. 'not' → logprob: -15.349089622497559
    8. '	res' → logprob: -16.099088668823242
    9. '_res' → logprob: -17.974088668823242
    10. ' ' → logprob: -18.099088668823242

Token 3962: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06631748378276825
    2. '[' → logprob: -4.191317558288574
    3. ' ==' → logprob: -4.441317558288574
    4. 'is' → logprob: -4.566317558288574
    5. '==' → logprob: -4.816317558288574
    6. ':' → logprob: -5.066317558288574
    7. '<|end|>' → logprob: -5.816317558288574
    8. ' =' → logprob: -6.316317558288574
    9. ')' → logprob: -6.566317558288574
    10. '<|end|>' → logprob: -6.941317558288574

Token 3963: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.09529736638069153
    2. 'not' → logprob: -2.595297336578369
    3. ' not' → logprob: -4.595297336578369
    4. ' None' → logprob: -5.095297336578369
    5. '   ' → logprob: -9.970297813415527
    6. 'Not' → logprob: -13.720297813415527
    7. '(None' → logprob: -14.720297813415527
    8. '_None' → logprob: -14.845297813415527
    9. '=None' → logprob: -15.220297813415527
    10. '	not' → logprob: -16.47029685974121

Token 3964: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09030560404062271
    2. ':
' → logprob: -2.5903055667877197
    3. '           ' → logprob: -4.840305805206299
    4. ',' → logprob: -6.215305805206299
    5. '       ' → logprob: -7.090305805206299
    6. '<|end|>' → logprob: -8.84030532836914
    7. ' or' → logprob: -9.46530532836914
    8. '```' → logprob: -9.84030532836914
    9. '=' → logprob: -10.09030532836914
    10. '):
' → logprob: -10.34030532836914

Token 3965: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021124319173395634
    2. '       ' → logprob: -6.75211238861084
    3. '```' → logprob: -8.00211238861084
    4. '	       ' → logprob: -8.62711238861084
    5. 'print' → logprob: -8.75211238861084
    6. ',' → logprob: -9.25211238861084
    7. ' print' → logprob: -9.62711238861084
    8. 'continue' → logprob: -11.00211238861084
    9. ' continue' → logprob: -11.25211238861084
    10. '<|end|>' → logprob: -11.50211238861084

Token 3966: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17184628546237946
    2. '       ' → logprob: -2.171846389770508
    3. ' print' → logprob: -3.671846389770508
    4. 'continue' → logprob: -4.546846389770508
    5. '           ' → logprob: -5.046846389770508
    6. ' continue' → logprob: -7.046846389770508
    7. '```' → logprob: -8.546846389770508
    8. '	       ' → logprob: -8.671846389770508
    9. 'break' → logprob: -9.796846389770508
    10. '	print' → logprob: -9.796846389770508

Token 3967: ' En' (ID: 2130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014551159925758839
    2. '       ' → logprob: -4.264551162719727
    3. ' print' → logprob: -8.264551162719727
    4. '           ' → logprob: -9.514551162719727
    5. 'continue' → logprob: -9.889551162719727
    6. '```' → logprob: -12.764551162719727
    7. '	print' → logprob: -13.389551162719727
    8. '	       ' → logprob: -15.139551162719727
    9. '#print' → logprob: -15.264551162719727
    10. 'break' → logprob: -15.889551162719727

Token 3968: ' théorie' (ID: 155054)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020606936886906624
    2. '       ' → logprob: -4.020606994628906
    3. 'pass' → logprob: -6.895606994628906
    4. '```' → logprob: -8.270606994628906
    5. '           ' → logprob: -8.395606994628906
    6. '   ' → logprob: -8.645606994628906
    7. 'continue' → logprob: -8.770606994628906
    8. '#' → logprob: -8.895606994628906
    9. ' print' → logprob: -9.645606994628906
    10. 'pr' → logprob: -9.895606994628906

Token 3969: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3684629797935486
    2. '       ' → logprob: -1.3684630393981934
    3. '           ' → logprob: -3.2434630393981934
    4. 'continue' → logprob: -4.993463039398193
    5. '```' → logprob: -5.993463039398193
    6. ' print' → logprob: -6.243463039398193
    7. ',' → logprob: -6.618463039398193
    8. '#' → logprob: -7.118463039398193
    9. ':' → logprob: -7.743463039398193
    10. 'contin' → logprob: -8.993462562561035

Token 3970: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.132781744003296
    2. 'print' → logprob: -1.257781744003296
    3. '=' → logprob: -1.632781744003296
    4. 'pas' → logprob: -2.757781744003296
    5. 'x' → logprob: -3.507781744003296
    6. 'continue' → logprob: -4.007781982421875
    7. 'st' → logprob: -4.132781982421875
    8. 'est' → logprob: -4.257781982421875
    9. ' =' → logprob: -4.632781982421875
    10. '#print' → logprob: -4.757781982421875

Token 3971: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0012874980457127094
    2. '_pas' → logprob: -7.751287460327148
    3. ' pas' → logprob: -8.501287460327148
    4. 'return' → logprob: -8.751287460327148
    5. 'pass' → logprob: -9.126287460327148
    6. 'print' → logprob: -9.126287460327148
    7. '       ' → logprob: -9.376287460327148
    8. '           ' → logprob: -10.251287460327148
    9. 'Pas' → logprob: -10.501287460327148
    10. ' jamais' → logprob: -10.501287460327148

Token 3972: ' arriver' (ID: 78302)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.27406319975852966
    2. 'être' → logprob: -2.2740631103515625
    3. 'print' → logprob: -3.1490631103515625
    4. 'ex' → logprob: -3.7740631103515625
    5. 'sur' → logprob: -4.5240631103515625
    6. 'append' → logprob: -5.2740631103515625
    7. '```' → logprob: -5.2740631103515625
    8. 'avoir' → logprob: -5.5240631103515625
    9. 'pas' → logprob: -5.6490631103515625
    10. 'import' → logprob: -5.7740631103515625

Token 3973: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06367827951908112
    2. '       ' → logprob: -2.93867826461792
    3. 'print' → logprob: -5.06367826461792
    4. ',' → logprob: -6.56367826461792
    5. '```' → logprob: -7.06367826461792
    6. 'continue' → logprob: -10.188678741455078
    7. ' print' → logprob: -10.313678741455078
    8. '               ' → logprob: -10.438678741455078
    9. '         ' → logprob: -10.938678741455078
    10. '   ' → logprob: -11.938678741455078

Token 3974: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3875948488712311
    2. '       ' → logprob: -1.1375948190689087
    3. 'continue' → logprob: -8.137595176696777
    4. '```' → logprob: -8.387595176696777
    5. 'print' → logprob: -9.137595176696777
    6. '               ' → logprob: -10.387595176696777
    7. ' continue' → logprob: -10.762595176696777
    8. '   ' → logprob: -11.137595176696777
    9. '`' → logprob: -11.887595176696777
    10. ',' → logprob: -12.262595176696777

Token 3975: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4209913909435272
    2. '       ' → logprob: -1.9209914207458496
    3. '           ' → logprob: -2.0459914207458496
    4. 'continue' → logprob: -2.9209914207458496
    5. '```' → logprob: -4.42099142074585
    6. ' print' → logprob: -6.67099142074585
    7. ' continue' → logprob: -7.54599142074585
    8. '	       ' → logprob: -9.545990943908691
    9. '``' → logprob: -10.420990943908691
    10. '`' → logprob: -10.795990943908691

Token 3976: '("' (ID: 568)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9466784596443176
    2. '("' → logprob: -1.0716784000396729
    3. '0' → logprob: -2.071678400039673
    4. '-' → logprob: -2.821678400039673
    5. '"No' → logprob: -3.196678400039673
    6. 'Impossible' → logprob: -4.196678638458252
    7. '(' → logprob: -4.321678638458252
    8. '(-' → logprob: -5.321678638458252
    9. '('' → logprob: -5.821678638458252
    10. 'No' → logprob: -6.321678638458252

Token 3977: '0' (ID: 15)
  Prédit: 'Impossible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Impossible' → logprob: -0.3195347189903259
    2. 'No' → logprob: -2.3195347785949707
    3. 'im' → logprob: -2.5695347785949707
    4. 'auc' → logprob: -3.3195347785949707
    5. 'A' → logprob: -3.5695347785949707
    6. 'None' → logprob: -4.694534778594971
    7. '0' → logprob: -5.069534778594971
    8. 'Pas' → logprob: -5.069534778594971
    9. '"' → logprob: -5.944534778594971
    10. 'NO' → logprob: -6.444534778594971

Token 3978: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30432960391044617
    2. ':' → logprob: -1.9293296337127686
    3. '0' → logprob: -2.1793296337127686
    4. '00' → logprob: -6.1793293952941895
    5. ' :' → logprob: -6.8043293952941895
    6. '")' → logprob: -8.929329872131348
    7. '
' → logprob: -9.054329872131348
    8. '000' → logprob: -9.304329872131348
    9. ' ' → logprob: -9.304329872131348
    10. '  ' → logprob: -9.929329872131348

Token 3979: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. '1' → logprob: -11.75001335144043
    3. ' ' → logprob: -12.25001335144043
    4. '00' → logprob: -15.87501335144043
    5. '
' → logprob: -16.62501335144043
    6. ':' → logprob: -17.25001335144043
    7. '```' → logprob: -17.62501335144043
    8. '"' → logprob: -18.87501335144043
    9. '59' → logprob: -18.87501335144043
    10. '60' → logprob: -19.18751335144043

Token 3980: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02096422202885151
    2. ' ' → logprob: -3.8959641456604004
    3. '1' → logprob: -7.7709641456604
    4. '```' → logprob: -14.770964622497559
    5. '   ' → logprob: -17.145963668823242
    6. '<|end|>' → logprob: -18.020963668823242
    7. '00' → logprob: -18.145963668823242
    8. '``' → logprob: -18.145963668823242
    9. '<|end|>' → logprob: -18.270963668823242
    10. '  ' → logprob: -18.270963668823242

Token 3981: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.523127019405365
    2. '0' → logprob: -0.898127019405365
    3. ' ' → logprob: -12.898126602172852
    4. '```' → logprob: -15.398126602172852
    5. 's' → logprob: -15.773126602172852
    6. '``' → logprob: -16.14812660217285
    7. '`' → logprob: -16.39812660217285
    8. '"' → logprob: -16.52312660217285
    9. '   ' → logprob: -16.58562660217285
    10. '
' → logprob: -16.58562660217285

Token 3982: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08613274246454239
    2. '0' → logprob: -2.961132764816284
    3. '1' → logprob: -4.086132526397705
    4. '")' → logprob: -4.461132526397705
    5. '/' → logprob: -6.211132526397705
    6. '")
' → logprob: -9.211133003234863
    7. '\n' → logprob: -9.461133003234863
    8. ' /' → logprob: -9.586133003234863
    9. '"' → logprob: -10.211133003234863
    10. '<|end|>' → logprob: -10.211133003234863

Token 3983: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031174797913990915
    2. ' ' → logprob: -8.125311851501465
    3. '0' → logprob: -11.250311851501465
    4. '/' → logprob: -13.625311851501465
    5. '```' → logprob: -14.000311851501465
    6. '   ' → logprob: -15.750311851501465
    7. '"' → logprob: -16.87531089782715
    8. '  ' → logprob: -16.87531089782715
    9. '``' → logprob: -17.06281089782715
    10. '
' → logprob: -17.18781089782715

Token 3984: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005274311173707247
    2. '")
' → logprob: -5.255274295806885
    3. '")
' → logprob: -11.755274772644043
    4. '>' → logprob: -12.005274772644043
    5. '0' → logprob: -12.130274772644043
    6. '}")' → logprob: -12.255274772644043
    7. ')' → logprob: -12.505274772644043
    8. '>")
' → logprob: -12.755274772644043
    9. '"' → logprob: -12.880274772644043
    10. '```' → logprob: -13.380274772644043

Token 3985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006564741022884846
    2. '```' → logprob: -5.381564617156982
    3. '           ' → logprob: -6.256564617156982
    4. 'continue' → logprob: -11.75656509399414
    5. 'else' → logprob: -11.88156509399414
    6. '``' → logprob: -12.75656509399414
    7. '<|end|>' → logprob: -13.25656509399414
    8. '   ' → logprob: -13.38156509399414
    9. '`' → logprob: -14.13156509399414
    10. ' continue' → logprob: -14.25656509399414

Token 3986: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027005335316061974
    2. 'else' (adapté à ' else') → logprob: -3.652005434036255
    3. ' else' → logprob: -7.777005195617676
    4. '```' → logprob: -8.777005195617676
    5. '   ' → logprob: -9.152005195617676
    6. '           ' → logprob: -12.277005195617676
    7. 'continue' → logprob: -12.277005195617676
    8. ' ' → logprob: -12.652005195617676
    9. 'elif' → logprob: -12.652005195617676
    10. '<|end|>' → logprob: -12.652005195617676

Token 3987: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04342593997716904
    2. '       ' → logprob: -3.418426036834717
    3. '```' → logprob: -5.668426036834717
    4. ':' → logprob: -6.168426036834717
    5. ':
' → logprob: -6.543426036834717
    6. ',' → logprob: -6.543426036834717
    7. 'print' → logprob: -7.793426036834717
    8. ' print' → logprob: -8.043425559997559
    9. '	       ' → logprob: -9.418425559997559
    10. '               ' → logprob: -9.918425559997559

Token 3988: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005603004829026759
    2. '```' → logprob: -8.125560760498047
    3. '           ' → logprob: -9.000560760498047
    4. 'print' → logprob: -9.500560760498047
    5. 'h' → logprob: -10.750560760498047
    6. ' print' → logprob: -11.375560760498047
    7. '{' → logprob: -11.500560760498047
    8. ' h' → logprob: -11.875560760498047
    9. '(h' → logprob: -13.000560760498047
    10. '`' → logprob: -13.250560760498047

Token 3989: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3874017894268036
    2. 'h' → logprob: -1.137401819229126
    3. '           ' → logprob: -7.637401580810547
    4. ' print' → logprob: -10.512401580810547
    5. '```' → logprob: -11.637401580810547
    6. ' h' → logprob: -12.262401580810547
    7. '(h' → logprob: -12.387401580810547
    8. '       ' → logprob: -13.762401580810547
    9. 'hh' → logprob: -14.012401580810547
    10. '[h' → logprob: -15.387401580810547

Token 3990: '(*' (ID: 9000)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3097626268863678
    2. '(*' → logprob: -1.8097625970840454
    3. '(res' → logprob: -2.309762716293335
    4. '("{}' → logprob: -5.809762477874756
    5. '(' → logprob: -8.434762954711914
    6. '('{}' → logprob: -8.809762954711914
    7. '("{' → logprob: -10.434762954711914
    8. '("' → logprob: -13.309762954711914
    9. 'f' → logprob: -13.559762954711914
    10. '((*' → logprob: -14.059762954711914

Token 3991: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -19.375
    3. '(res' → logprob: -19.375
    4. 'tuple' → logprob: -22.125
    5. '(*' → logprob: -22.375
    6. '*' → logprob: -22.875
    7. '$res' → logprob: -23.25
    8. 'map' → logprob: -23.375
    9. '	res' → logprob: -23.875
    10. '_res' → logprob: -23.875

Token 3992: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.137130498653278e-05
    2. '<|end|>' → logprob: -9.875081062316895
    3. '()' → logprob: -12.000081062316895
    4. '   ' → logprob: -12.125081062316895
    5. ')
' → logprob: -12.500081062316895
    6. '())' → logprob: -12.500081062316895
    7. ',' → logprob: -12.750081062316895
    8. ' )' → logprob: -13.000081062316895
    9. '```' → logprob: -13.750081062316895
    10. '}' → logprob: -13.875081062316895

Token 3993: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3994: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.506661833962426e-05
    2. ' __' → logprob: -9.37508487701416
    3. 'name' → logprob: -16.000085830688477
    4. '___' → logprob: -17.625085830688477
    5. '/__' → logprob: -18.125085830688477
    6. '.__' → logprob: -18.375085830688477
    7. '```' → logprob: -19.750085830688477
    8. '_name' → logprob: -19.750085830688477
    9. '_' → logprob: -20.000085830688477
    10. '____' → logprob: -20.250085830688477

Token 3995: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008663220214657485
    2. '==' → logprob: -7.375866413116455
    3. ' ==' → logprob: -9.000865936279297
    4. '=="' → logprob: -10.000865936279297
    5. 'name' → logprob: -10.875865936279297
    6. 'if' → logprob: -11.250865936279297
    7. '__.__' → logprob: -11.875865936279297
    8. '__":
' → logprob: -12.000865936279297
    9. '__[' → logprob: -12.375865936279297
    10. '__
' → logprob: -12.500865936279297

Token 3996: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0008744205697439611
    2. '__.__' → logprob: -7.1258745193481445
    3. '=="' → logprob: -10.625874519348145
    4. '==' → logprob: -10.625874519348145
    5. '__":
' → logprob: -12.125874519348145
    6. '__["' → logprob: -12.250874519348145
    7. '__.' → logprob: -12.250874519348145
    8. '=='' → logprob: -13.750874519348145
    9. '__('' → logprob: -14.000874519348145
    10. '__
' → logprob: -14.250874519348145

Token 3997: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0051889317110180855
    2. '==' → logprob: -5.505188941955566
    3. '=='' → logprob: -7.755188941955566
    4. '=="' → logprob: -7.880188941955566
    5. '__.__' → logprob: -8.505188941955566
    6. '__('' → logprob: -11.130188941955566
    7. '```' → logprob: -11.130188941955566
    8. ' ==' → logprob: -11.505188941955566
    9. '__["' → logprob: -11.630188941955566
    10. '===' → logprob: -11.630188941955566

Token 3998: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008639389649033546
    2. ''' → logprob: -4.758639335632324
    3. '__' → logprob: -10.633639335632324
    4. ' "__' → logprob: -14.133639335632324
    5. ' '__' → logprob: -17.88364028930664
    6. '"name' → logprob: -18.38364028930664
    7. '"user' → logprob: -18.50864028930664
    8. ''"' → logprob: -19.00864028930664
    9. '("__' → logprob: -19.38364028930664
    10. 'main' → logprob: -19.50864028930664

Token 3999: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20708692073822021
    2. '__' → logprob: -1.7070869207382202
    3. '"' → logprob: -5.20708703994751
    4. ''' → logprob: -9.457086563110352
    5. '__":
' → logprob: -10.207086563110352
    6. 'python' → logprob: -10.457086563110352
    7. 'name' → logprob: -10.582086563110352
    8. '__
' → logprob: -13.332086563110352
    9. 'built' → logprob: -13.332086563110352
    10. '___' → logprob: -14.332086563110352

Token 4000: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.14406125247478485
    2. '__' → logprob: -2.019061326980591
    3. '__':
' → logprob: -6.644061088562012
    4. '__.__' → logprob: -10.894061088562012
    5. '__["' → logprob: -10.894061088562012
    6. '__
' → logprob: -11.394061088562012
    7. '__.' → logprob: -11.769061088562012
    8. '__:' → logprob: -12.269061088562012
    9. '__("' → logprob: -12.644061088562012
    10. '==' → logprob: -12.644061088562012

Token 4001: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02168913371860981
    2. '   ' → logprob: -3.8966891765594482
    3. '	main' → logprob: -7.021688938140869
    4. ' main' → logprob: -8.396689414978027
    5. '_main' → logprob: -11.521689414978027
    6. '  ' → logprob: -12.396689414978027
    7. '    
' → logprob: -12.646689414978027
    8. '(main' → logprob: -12.771689414978027
    9. ' ' → logprob: -13.271689414978027
    10. '```' → logprob: -13.646689414978027

Token 4002: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -21.5
    4. '_main' → logprob: -24.0
    5. '(main' → logprob: -25.125
    6. '.main' → logprob: -25.25
    7. '   ' → logprob: -25.75
    8. 'import' → logprob: -26.75
    9. '```' → logprob: -28.375
    10. 'Main' → logprob: -29.25

Token 4003: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4001
Tokens correctement prédits (1ère position, stricte): 1177
Tokens correctement prédits (1ère position, avec adaptation): 1249
Tokens correctement prédits (top 10): 2712
Précision stricte (1ère position): 29.42%
Précision adaptée (1ère position): 31.22%
Précision (top 10): 67.78%
================================================================================
