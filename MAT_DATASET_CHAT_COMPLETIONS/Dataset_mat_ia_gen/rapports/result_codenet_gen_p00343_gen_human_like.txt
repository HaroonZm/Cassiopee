================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def can_place(card, table):
    # On peut poser si card est contigu à une carte sur table (card-1 ou card+1)
    return (card - 1 in table) or (card + 1 in table)

def dfs(table, p_hand, o_hand, memo):
    # table: ensemble des cartes sur la table
    # p_hand: tuple des cartes du joueur p (le joueur dont c'est le tour)
    # o_hand: tuple des cartes de l'autre joueur
    # memo: dictionnaire pour mémoriser les états déjà calculés
    key = (tuple(sorted(table)), tuple(sorted(p_hand)), tuple(sorted(o_hand)))
    if key in memo:
        return memo[key]
    # Si joueur p n'a plus de cartes: il a gagné
    if len(p_hand) == 0:
        memo[key] = True
        return True
    # Chercher les cartes que p peut poser (doit poser si possible)
    playable = [c for c in p_hand if can_place(c, table)]
    if playable:
        # p doit poser un de ces cartes
        # p gagne si y a au moins un choix qui mène à sa victoire, quel que soit ce que fait l'adversaire ensuite
        for c in playable:
            new_table = table | {c}
            new_p_hand = tuple(x for x in p_hand if x != c)
            # Après que p ait joué, c'est au tour de o. Intervertir les rôles et mains
            # Pour p gagner, il faut que, pour tout choix de o, p puisse contrer
            res = dfs_after_opponent_turn(new_table, new_p_hand, o_hand, memo)
            if res:
                memo[key] = True
                return True
        memo[key] = False
        return False
    else:
        # p ne peut pas poser, on passe à o
        res = dfs_after_opponent_turn(table, p_hand, o_hand, memo)
        memo[key] = res
        return res

def dfs_after_opponent_turn(table, p_hand, o_hand, memo):
    # Tour de o (adversaire)
    # o essaie tout pour empêcher p de gagner
    playable_o = [c for c in o_hand if can_place(c, table)]
    if playable_o:
        # o peut jouer plusieurs cartes, il va jouer celle qui minimise chance de p de gagner
        # donc on doit tester tous les coups de o; p doit gagner quelle que soit la réponse de o
        for c in playable_o:
            new_table = table | {c}
            new_o_hand = tuple(x for x in o_hand if x != c)
            # Ensuite c'est de nouveau au tour de p
            res = dfs(new_table, p_hand, new_o_hand, memo)
            if not res:
                # Il existe un coup de o empêchant p de gagner
                return False
        # p gagne quel que soit le coup de o
        return True
    else:
        # o ne peut pas jouer, c'est à p de jouer
        return dfs(table, p_hand, o_hand, memo)

def main():
    input = sys.stdin.readline
    N = int(input())
    full_cards = set(range(1,14))
    full_cards.remove(7)
    for _ in range(N):
        p_cards = list(map(int, input().split()))
        p_set = set(p_cards)
        o_set = full_cards - p_set
        table = {7}
        memo = {}
        # Premier joueur est p (先手), avec p_set
        # On cherche si p a un chemin gagnant quel que soit ce que fait o (後手)
        if dfs(table, tuple(sorted(p_set)), tuple(sorted(o_set)), memo):
            print("yes")
        else:
            print("no")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5803260207176208
    2. '_limit' → logprob: -0.8303260207176208
    3. '_depth' → logprob: -5.580326080322266
    4. 'depth' → logprob: -7.955326080322266
    5. '_' → logprob: -9.705326080322266
    6. ' limit' → logprob: -10.080326080322266
    7. 'lim' → logprob: -10.705326080322266
    8. '(' → logprob: -11.205326080322266
    9. '_rate' → logprob: -11.205326080322266
    10. '_limits' → logprob: -11.330326080322266

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005465574562549591
    2. '\' → logprob: -6.380465507507324
    3. ')' → logprob: -6.505465507507324
    4. '```' → logprob: -7.130465507507324
    5. 'n' → logprob: -8.255465507507324
    6. '\n' → logprob: -8.880465507507324
    7. 'import' → logprob: -8.880465507507324
    8. '`' → logprob: -9.005465507507324
    9. ',' → logprob: -9.130465507507324
    10. 'a' → logprob: -9.130465507507324

Token 14: ' can' (ID: 665)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.1688832938671112
    2. ' dfs' → logprob: -2.1688833236694336
    3. ' ' → logprob: -3.5438833236694336
    4. ' fibonacci' → logprob: -4.918883323669434
    5. ' factor' → logprob: -5.793883323669434
    6. ' f' → logprob: -7.918883323669434
    7. ' fib' → logprob: -8.043883323669434
    8. ' solve' → logprob: -8.543883323669434
    9. ' foo' → logprob: -9.043883323669434
    10. ' recursive' → logprob: -9.043883323669434

Token 15: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05320006608963013
    2. ' _' → logprob: -3.3032000064849854
    3. ' ' → logprob: -4.6782002449035645
    4. '_continue' → logprob: -6.1782002449035645
    5. '_accept' → logprob: -6.9282002449035645
    6. '_space' → logprob: -8.303199768066406
    7. '_return' → logprob: -8.428199768066406
    8. '_call' → logprob: -8.803199768066406
    9. '_run' → logprob: -8.803199768066406
    10. '_save' → logprob: -8.803199768066406

Token 16: '(card' (ID: 51112)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07228551805019379
    2. '_tile' → logprob: -3.6972854137420654
    3. '(' → logprob: -4.1972856521606445
    4. '_space' → logprob: -5.4472856521606445
    5. '_piece' → logprob: -5.5722856521606445
    6. '_block' → logprob: -5.9472856521606445
    7. '_token' → logprob: -6.3222856521606445
    8. '_cell' → logprob: -6.4472856521606445
    9. '_parent' → logprob: -6.8222856521606445
    10. '_position' → logprob: -6.9472856521606445

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16515661776065826
    2. '):' → logprob: -2.040156602859497
    3. ')' → logprob: -4.290156841278076
    4. 's' → logprob: -5.040156841278076
    5. '_,' → logprob: -7.915156841278076
    6. '[' → logprob: -8.290156364440918
    7. ' ,' → logprob: -8.415156364440918
    8. '_positions' → logprob: -8.540156364440918
    9. '_' → logprob: -8.665156364440918
    10. '_at' → logprob: -9.165156364440918

Token 18: ' table' (ID: 3293)
  Prédit: ' board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.4735550284385681
    2. ' row' → logprob: -2.723555088043213
    3. ' positions' → logprob: -2.723555088043213
    4. ' cards' → logprob: -2.973555088043213
    5. ' deck' → logprob: -3.223555088043213
    6. ' hand' → logprob: -3.348555088043213
    7. ' stack' → logprob: -3.598555088043213
    8. ' position' → logprob: -4.348555088043213
    9. ' grid' → logprob: -4.598555088043213
    10. 'board' → logprob: -4.723555088043213

Token 19: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2711503505706787
    2. '):' → logprob: -1.5211503505706787
    3. ')' → logprob: -4.021150588989258
    4. '[' → logprob: -7.646150588989258
    5. ' ,' → logprob: -8.521150588989258
    6. ' ):' → logprob: -9.021150588989258
    7. ':' → logprob: -9.771150588989258
    8. '_positions' → logprob: -10.146150588989258
    9. '):
' → logprob: -10.771150588989258
    10. ' ' → logprob: -11.021150588989258

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18602778017520905
    2. '    ' → logprob: -2.436027765274048
    3. ':' → logprob: -2.936027765274048
    4. ' ' → logprob: -4.561028003692627
    5. '[' → logprob: -5.436028003692627
    6. '[]' → logprob: -5.436028003692627
    7. ' :' → logprob: -6.186028003692627
    8. '):' → logprob: -6.811028003692627
    9. '    
' → logprob: -6.936028003692627
    10. ''' → logprob: -7.436028003692627

Token 21: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7056998014450073
    2. ' ' → logprob: -1.7056998014450073
    3. ':' → logprob: -1.9556998014450073
    4. '    ' → logprob: -2.580699920654297
    5. ' for' → logprob: -3.830699920654297
    6. '[' → logprob: -4.330699920654297
    7. ' :' → logprob: -4.580699920654297
    8. ')' → logprob: -4.830699920654297
    9. '(' → logprob: -4.955699920654297
    10. ' if' → logprob: -5.080699920654297

Token 22: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8397046327590942
    2. ' return' → logprob: -1.2147046327590942
    3. ' for' → logprob: -2.4647045135498047
    4. '   ' → logprob: -2.7147045135498047
    5. '    ' → logprob: -3.3397045135498047
    6. ' if' → logprob: -3.7147045135498047
    7. 'return' → logprob: -4.214704513549805
    8. ' '' → logprob: -5.089704513549805
    9. ')' → logprob: -5.339704513549805
    10. ' not' → logprob: -5.464704513549805

Token 23: ' peut' (ID: 9216)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08670557290315628
    2. ' e' → logprob: -2.5867056846618652
    3. '_' → logprob: -5.836705684661865
    4. ' ' → logprob: -6.586705684661865
    5. ' card' → logprob: -6.961705684661865
    6. ' the' → logprob: -7.336705684661865
    7. ' table' → logprob: -7.836705684661865
    8. 'eline' → logprob: -7.961705684661865
    9. 'ly' → logprob: -8.086705207824707
    10. 'es' → logprob: -8.461705207824707

Token 24: ' poser' (ID: 73555)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0769623517990112
    2. ' placer' → logprob: -1.3269623517990112
    3. ' place' → logprob: -2.076962471008301
    4. ' mettre' → logprob: -2.951962471008301
    5. ' placing' → logprob: -4.076962471008301
    6. ' placed' → logprob: -4.076962471008301
    7. '   ' → logprob: -4.201962471008301
    8. ' ajouter' → logprob: -4.326962471008301
    9. ' ' → logprob: -4.451962471008301
    10. ' put' → logprob: -4.451962471008301

Token 25: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020298253744840622
    2. ' un' → logprob: -4.520298480987549
    3. ' une' → logprob: -6.395298480987549
    4. ' a' → logprob: -6.520298480987549
    5. ' le' → logprob: -6.770298480987549
    6. '   ' → logprob: -7.145298480987549
    7. '  ' → logprob: -7.520298480987549
    8. '_' → logprob: -7.520298480987549
    9. ',' → logprob: -8.02029800415039
    10. '(card' → logprob: -8.14529800415039

Token 26: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.14048369228839874
    2. ' not' → logprob: -2.5154836177825928
    3. 'card' → logprob: -3.3904836177825928
    4. ' len' → logprob: -4.640483856201172
    5. ' any' → logprob: -5.765483856201172
    6. ' all' → logprob: -6.640483856201172
    7. 'not' → logprob: -6.765483856201172
    8. 'len' → logprob: -7.265483856201172
    9. '(card' → logprob: -9.015483856201172
    10. 'any' → logprob: -9.515483856201172

Token 27: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13338957726955414
    2. ' not' → logprob: -2.258389472961426
    3. 'in' → logprob: -4.383389472961426
    4. '[' → logprob: -5.758389472961426
    5. 'not' → logprob: -6.258389472961426
    6. ' ==' → logprob: -7.008389472961426
    7. '==' → logprob: -7.133389472961426
    8. ' ' → logprob: -7.883389472961426
    9. ' is' → logprob: -8.258389472961426
    10. '.' → logprob: -9.008389472961426

Token 28: ' cont' (ID: 836)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.035136103630066
    2. ' in' → logprob: -1.285136103630066
    3. 'dans' → logprob: -1.535136103630066
    4. ' not' → logprob: -2.4101362228393555
    5. ' None' → logprob: -3.6601362228393555
    6. 'in' → logprob: -4.4101362228393555
    7. 'not' → logprob: -5.4101362228393555
    8. ' égal' → logprob: -5.7851362228393555
    9. 'vide' → logprob: -6.2851362228393555
    10. ' vide' → logprob: -6.2851362228393555

Token 29: 'igu' (ID: 12143)
  Prédit: 'enue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enue' → logprob: -0.7489170432090759
    2. 'inue' → logprob: -1.1239171028137207
    3. 'ained' → logprob: -1.8739171028137207
    4. 'in' → logprob: -3.9989171028137207
    5. 'enu' → logprob: -4.623917102813721
    6. 'en' → logprob: -5.248917102813721
    7. 'aine' → logprob: -5.623917102813721
    8. 'ent' → logprob: -5.873917102813721
    9. 'inu' → logprob: -6.748917102813721
    10. 'e' → logprob: -7.123917102813721

Token 30: ' à' (ID: 1221)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1288960576057434
    2. 'ue' → logprob: -2.2538959980010986
    3. 'u' → logprob: -4.253896236419678
    4. 'us' → logprob: -7.628896236419678
    5. 'uous' → logprob: -8.50389575958252
    6. 'ous' → logprob: -8.75389575958252
    7. 'ou' → logprob: -9.25389575958252
    8. 'ueuse' → logprob: -9.37889575958252
    9. '```' → logprob: -9.50389575958252
    10. 'üe' → logprob: -9.50389575958252

Token 31: ' une' (ID: 2463)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.19847767055034637
    2. ' une' → logprob: -2.6984777450561523
    3. ' at' → logprob: -3.6984777450561523
    4. ' ' → logprob: -3.8234777450561523
    5. ' un' → logprob: -3.9484777450561523
    6. ' any' → logprob: -4.073477745056152
    7. 'une' → logprob: -4.823477745056152
    8. 'au' → logprob: -5.698477745056152
    9. ' l' → logprob: -5.948477745056152
    10. ' a' → logprob: -6.073477745056152

Token 32: ' carte' (ID: 30276)
  Prédit: ' carte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carte' → logprob: -0.34627586603164673
    2. ' card' → logprob: -2.096275806427002
    3. ' case' → logprob: -2.346275806427002
    4. ' ' → logprob: -3.596275806427002
    5. 'élé' → logprob: -4.846275806427002
    6. '_' → logprob: -4.846275806427002
    7. ' or' → logprob: -5.096275806427002
    8. ' element' → logprob: -5.721275806427002
    9. ' ' → logprob: -6.783775806427002
    10. ' ou' → logprob: -6.971275806427002

Token 33: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5074481964111328
    2. '_' → logprob: -1.7574481964111328
    3. 's' → logprob: -2.007448196411133
    4. ',' → logprob: -2.257448196411133
    5. ' (' → logprob: -2.507448196411133
    6. ' or' → logprob: -2.507448196411133
    7. ''' → logprob: -3.882448196411133
    8. ' ou' → logprob: -4.007448196411133
    9. ' d' → logprob: -4.132448196411133
    10. '(s' → logprob: -4.507448196411133

Token 34: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.6697949767112732
    2. ' la' → logprob: -0.7947949767112732
    3. ' ' → logprob: -4.294795036315918
    4. 'table' → logprob: -4.669795036315918
    5. ' ' → logprob: -5.544795036315918
    6. ' le' → logprob: -6.169795036315918
    7. ' the' → logprob: -6.544795036315918
    8. 'la' → logprob: -6.919795036315918
    9. '(table' → logprob: -7.044795036315918
    10. 'l' → logprob: -7.419795036315918

Token 35: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05580131337046623
    2. ' or' → logprob: -3.6808013916015625
    3. ' ' → logprob: -4.3058013916015625
    4. ',' → logprob: -5.6808013916015625
    5. 'and' → logprob: -5.9308013916015625
    6. '   ' → logprob: -6.0558013916015625
    7. ')' → logprob: -6.9308013916015625
    8. ' if' → logprob: -7.1808013916015625
    9. '  ' → logprob: -7.5558013916015625
    10. ' ,' → logprob: -7.5558013916015625

Token 36: 'card' (ID: 7687)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2224442958831787
    2. ' )' → logprob: -1.7224442958831787
    3. ' or' → logprob: -4.472444534301758
    4. ' and' → logprob: -4.972444534301758
    5. ' ' → logprob: -6.847444534301758
    6. ',' → logprob: -7.972444534301758
    7. ' au' → logprob: -8.597444534301758
    8. ' in' → logprob: -8.847444534301758
    9. ' ),' → logprob: -8.972444534301758
    10. '),' → logprob: -8.972444534301758

Token 37: '-' (ID: 12)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022094419226050377
    2. ')' → logprob: -4.147094249725342
    3. ' and' → logprob: -5.772094249725342
    4. ' )' → logprob: -7.272094249725342
    5. ',' → logprob: -7.647094249725342
    6. '[' → logprob: -7.897094249725342
    7. ' ' → logprob: -7.897094249725342
    8. 'in' → logprob: -8.2720947265625
    9. '.' → logprob: -8.3970947265625
    10. ' is' → logprob: -8.8970947265625

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6824589371681213
    2. ')' → logprob: -1.8074588775634766
    3. ' ' → logprob: -2.3074588775634766
    4. ' in' → logprob: -2.8074588775634766
    5. ',' → logprob: -2.9324588775634766
    6. 's' → logprob: -3.5574588775634766
    7. '[' → logprob: -3.6824588775634766
    8. '+' → logprob: -4.557458877563477
    9. ' -' → logprob: -4.932458877563477
    10. '-' → logprob: -4.932458877563477

Token 39: ' ou' (ID: 2031)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7977295517921448
    2. ' or' → logprob: -1.0477294921875
    3. ')' → logprob: -1.6727294921875
    4. ' )' → logprob: -5.0477294921875
    5. 'in' → logprob: -6.4227294921875
    6. '==' → logprob: -7.0477294921875
    7. 'or' → logprob: -7.1727294921875
    8. ' ' → logprob: -7.1727294921875
    9. ' ==' → logprob: -8.0477294921875
    10. ',' → logprob: -8.7977294921875

Token 40: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.03399788588285446
    2. 'card' → logprob: -3.4089977741241455
    3. '(card' → logprob: -8.158997535705566
    4. ' ' → logprob: -10.783997535705566
    5. ' ' → logprob: -11.033997535705566
    6. ' carte' → logprob: -12.283997535705566
    7. '	card' → logprob: -12.408997535705566
    8. '_card' → logprob: -12.408997535705566
    9. '+' → logprob: -12.908997535705566
    10. ' cardinal' → logprob: -13.533997535705566

Token 41: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05088355392217636
    2. ' +' → logprob: -3.0508835315704346
    3. '-' → logprob: -6.300883769989014
    4. ')' → logprob: -8.925883293151855
    5. ' -' → logprob: -8.925883293151855
    6. ' ' → logprob: -10.175883293151855
    7. '1' → logprob: -10.550883293151855
    8. ',' → logprob: -10.925883293151855
    9. '+-' → logprob: -11.175883293151855
    10. 's' → logprob: -11.550883293151855

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026317255571484566
    2. ' ' → logprob: -3.6513173580169678
    3. ')' → logprob: -11.526317596435547
    4. '<|end|>' → logprob: -12.651317596435547
    5. ' )' → logprob: -13.776317596435547
    6. ' ' → logprob: -14.276317596435547
    7. '  ' → logprob: -14.401317596435547
    8. ',' → logprob: -15.651317596435547
    9. '<|end|>' → logprob: -15.651317596435547
    10. '```' → logprob: -15.651317596435547

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0320277065038681
    2. ' )' → logprob: -3.5320277214050293
    3. ' or' → logprob: -6.157027721405029
    4. '),' → logprob: -10.032027244567871
    5. ' and' → logprob: -10.407027244567871
    6. ' ' → logprob: -11.407027244567871
    7. ',' → logprob: -11.532027244567871
    8. ' ' → logprob: -11.532027244567871
    9. 'or' → logprob: -11.907027244567871
    10. '')' → logprob: -12.032027244567871

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.254127562046051
    2. ':' → logprob: -1.6291275024414062
    3. ' :' → logprob: -4.129127502441406
    4. ' and' → logprob: -6.004127502441406
    5. '):' → logprob: -6.129127502441406
    6. ':
' → logprob: -6.754127502441406
    7. ' ' → logprob: -6.754127502441406
    8. ')' → logprob: -7.129127502441406
    9. ',' → logprob: -7.129127502441406
    10. ' :
' → logprob: -7.129127502441406

Token 45: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6474074721336365
    2. ' for' → logprob: -1.2724075317382812
    3. ' return' → logprob: -1.7724075317382812
    4. 'return' (adapté à ' return') → logprob: -4.397407531738281
    5. ':' → logprob: -5.147407531738281
    6. ' ' → logprob: -6.272407531738281
    7. ':return' → logprob: -6.522407531738281
    8. 'for' → logprob: -6.897407531738281
    9. ' if' → logprob: -7.522407531738281
    10. '    ' → logprob: -7.522407531738281

Token 46: ' (' (ID: 350)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.27249065041542053
    2. ' card' → logprob: -1.5224906206130981
    3. 'any' → logprob: -4.897490501403809
    4. '(card' → logprob: -5.147490501403809
    5. 'card' → logprob: -5.397490501403809
    6. ' (' → logprob: -6.147490501403809
    7. '(any' → logprob: -8.272490501403809
    8. '(' → logprob: -10.522490501403809
    9. ' set' → logprob: -10.897490501403809
    10. ' len' → logprob: -10.897490501403809

Token 47: 'card' (ID: 7687)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.4424842298030853
    2. 'card' → logprob: -1.0674842596054077
    3. '(card' → logprob: -4.567484378814697
    4. ' any' → logprob: -6.317484378814697
    5. ' (' → logprob: -7.442484378814697
    6. 'any' → logprob: -7.567484378814697
    7. 'table' → logprob: -8.817483901977539
    8. ' table' → logprob: -9.317483901977539
    9. '   ' → logprob: -10.067483901977539
    10. '	card' → logprob: -10.567483901977539

Token 48: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2585335969924927
    2. ' -' → logprob: -1.5085335969924927
    3. ' in' → logprob: -5.133533477783203
    4. '+' → logprob: -8.008533477783203
    5. ' ' → logprob: -8.383533477783203
    6. ' +' → logprob: -9.633533477783203
    7. 'in' → logprob: -11.133533477783203
    8. '1' → logprob: -11.758533477783203
    9. ' ' → logprob: -11.821033477783203
    10. '  ' → logprob: -12.258533477783203

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2254183143377304
    2. ' ' → logprob: -1.6004183292388916
    3. ' ' → logprob: -12.725418090820312
    4. ')' → logprob: -13.975418090820312
    5. '<|end|>' → logprob: -14.350418090820312
    6. '<|end|>' → logprob: -15.600418090820312
    7. '۱' → logprob: -16.037918090820312
    8. '2' → logprob: -16.287918090820312
    9. '
' → logprob: -16.412918090820312
    10. '  ' → logprob: -16.662918090820312

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '<|end|>' → logprob: -15.500075340270996
    4. '   ' → logprob: -17.25007438659668
    5. '<|end|>' → logprob: -17.87507438659668
    6. '  ' → logprob: -17.87507438659668
    7. ')' → logprob: -18.00007438659668
    8. '```' → logprob: -18.75007438659668
    9. '
' → logprob: -18.87507438659668
    10. '१' → logprob: -19.31257438659668

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.069163478910923
    2. 'in' → logprob: -2.8191635608673096
    3. ')' → logprob: -4.9441633224487305
    4. ' ' → logprob: -10.44416332244873
    5. ' )' → logprob: -11.31916332244873
    6. '	in' → logprob: -13.69416332244873
    7. ' ' → logprob: -14.31916332244873
    8. '```' → logprob: -14.81916332244873
    9. ' в' → logprob: -15.19416332244873
    10. 'In' → logprob: -15.75666332244873

Token 52: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.5759459733963013
    2. 'table' → logprob: -0.8259459733963013
    3. ')table' → logprob: -12.200945854187012
    4. ')' → logprob: -14.325945854187012
    5. '	table' → logprob: -14.700945854187012
    6. ' ' → logprob: -16.075946807861328
    7. 't' → logprob: -16.575946807861328
    8. '(table' → logprob: -16.700946807861328
    9. ' ' → logprob: -16.825946807861328
    10. 'Table' → logprob: -17.450946807861328

Token 53: ')' (ID: 8)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1433475911617279
    2. ')' → logprob: -2.0183475017547607
    3. 'or' → logprob: -7.51834774017334
    4. ' )' → logprob: -9.01834774017334
    5. '   ' → logprob: -12.51834774017334
    6. ' ' → logprob: -12.76834774017334
    7. '	or' → logprob: -14.39334774017334
    8. '    ' → logprob: -14.76834774017334
    9. '),' → logprob: -16.143346786499023
    10. 's' → logprob: -16.518346786499023

Token 54: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00029852005536668
    2. 'or' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.625298500061035
    4. ')' → logprob: -14.500298500061035
    5. '	or' → logprob: -14.875298500061035
    6. ' and' → logprob: -16.00029945373535
    7. '   ' → logprob: -16.75029945373535
    8. ' ' → logprob: -16.75029945373535
    9. '    ' → logprob: -16.75029945373535
    10. '<|end|>' → logprob: -16.87529945373535

Token 55: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.006132364738732576
    2. '(card' → logprob: -5.13113260269165
    3. '(' → logprob: -8.506132125854492
    4. ' card' → logprob: -14.381132125854492
    5. ' ' → logprob: -14.881132125854492
    6. '(c' → logprob: -16.006132125854492
    7. ' ((' → logprob: -16.256132125854492
    8. '(car' → logprob: -16.381132125854492
    9. '(Card' → logprob: -16.506132125854492
    10. '(cards' → logprob: -16.756132125854492

Token 56: 'card' (ID: 7687)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.1132366731762886
    2. 'card' → logprob: -2.238236665725708
    3. '(card' → logprob: -7.863236904144287
    4. '	card' → logprob: -11.113236427307129
    5. '   ' → logprob: -11.488236427307129
    6. ' (' → logprob: -13.613236427307129
    7. ' ' → logprob: -13.738236427307129
    8. '.card' → logprob: -14.738236427307129
    9. ' ' → logprob: -15.113236427307129
    10. '_card' → logprob: -15.113236427307129

Token 57: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.033651694655418396
    2. '+' → logprob: -3.40865159034729
    3. ' ' → logprob: -12.533651351928711
    4. ' plus' → logprob: -13.783651351928711
    5. ' ' → logprob: -14.783651351928711
    6. ' -' → logprob: -15.158651351928711
    7. '1' → logprob: -16.15865135192871
    8. '   ' → logprob: -16.15865135192871
    9. ' +
' → logprob: -16.15865135192871
    10. ')' → logprob: -16.40865135192871

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42870280146598816
    2. '1' → logprob: -1.0537028312683105
    3. ' ' → logprob: -14.303702354431152
    4. '   ' → logprob: -14.928702354431152
    5. '```' → logprob: -14.928702354431152
    6. '<|end|>' → logprob: -14.928702354431152
    7. '2' → logprob: -15.741202354431152
    8. '  ' → logprob: -16.24120330810547
    9. '0' → logprob: -16.49120330810547
    10. ')' → logprob: -17.17870330810547

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -14.87508487701416
    4. '```' → logprob: -17.250085830688477
    5. '  ' → logprob: -18.750085830688477
    6. '<|end|>' → logprob: -19.125085830688477
    7. '۱' → logprob: -19.125085830688477
    8. '   ' → logprob: -19.250085830688477
    9. ' ' → logprob: -19.437585830688477
    10. '-' → logprob: -19.875085830688477

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04336932301521301
    2. 'in' → logprob: -3.1683692932128906
    3. ')' → logprob: -7.918369293212891
    4. ' ' → logprob: -12.79336929321289
    5. ' )' → logprob: -14.16836929321289
    6. '<|end|>' → logprob: -14.54336929321289
    7. '),' → logprob: -15.16836929321289
    8. '```' → logprob: -15.66836929321289
    9. '1' → logprob: -15.73086929321289
    10. '0' → logprob: -15.85586929321289

Token 61: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.25193890929222107
    2. 'table' → logprob: -1.5019389390945435
    3. ')table' → logprob: -11.876938819885254
    4. '	table' → logprob: -14.126938819885254
    5. 'tabl' → logprob: -15.126938819885254
    6. ' ' → logprob: -15.251938819885254
    7. ')' → logprob: -15.376938819885254
    8. '<table' → logprob: -15.501938819885254
    9. 't' → logprob: -15.626938819885254
    10. ' ' → logprob: -15.751938819885254

Token 62: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. ' )' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.12501335144043
    4. '))' → logprob: -14.25001335144043
    5. ')return' → logprob: -15.37501335144043
    6. ')
' → logprob: -15.62501335144043
    7. ')#' → logprob: -16.25001335144043
    8. '}' → logprob: -16.50001335144043
    9. ')}' → logprob: -16.62501335144043
    10. ')table' → logprob: -17.37501335144043

Token 63: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' dfs' (ID: 51252)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2291799932718277
    2. ' place' → logprob: -2.479180097579956
    3. ' dfs' → logprob: -2.854180097579956
    4. ' solve' → logprob: -3.979180097579956
    5. ' is' → logprob: -4.104179859161377
    6. ' play' → logprob: -4.854179859161377
    7. ' back' → logprob: -4.979179859161377
    8. ' main' → logprob: -5.854179859161377
    9. ' valid' → logprob: -6.104179859161377
    10. ' possible' → logprob: -6.479179859161377

Token 65: '(table' (ID: 28523)
  Prédit: '(card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.41486990451812744
    2. '(' → logprob: -1.4148699045181274
    3. '(cards' → logprob: -3.039869785308838
    4. '(table' → logprob: -3.789869785308838
    5. ' (' → logprob: -5.039869785308838
    6. '(deck' → logprob: -5.164869785308838
    7. '(current' → logprob: -5.414869785308838
    8. '(depth' → logprob: -5.664869785308838
    9. '(stack' → logprob: -6.039869785308838
    10. '(node' → logprob: -7.539869785308838

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015835431404411793
    2. '):' → logprob: -6.501583576202393
    3. ' ,' → logprob: -10.376583099365234
    4. '):
' → logprob: -11.001583099365234
    5. ':' → logprob: -11.376583099365234
    6. '   ' → logprob: -12.751583099365234
    7. ')' → logprob: -12.876583099365234
    8. ',p' → logprob: -13.501583099365234
    9. ',current' → logprob: -13.626583099365234
    10. ',n' → logprob: -13.876583099365234

Token 67: ' p' (ID: 275)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.753752589225769
    2. ' remaining' → logprob: -1.503752589225769
    3. 'cards' → logprob: -2.0037527084350586
    4. ' hand' → logprob: -2.7537527084350586
    5. 'remaining' → logprob: -3.1287527084350586
    6. ' deck' → logprob: -4.128752708435059
    7. 'deck' → logprob: -5.003752708435059
    8. ' used' → logprob: -5.253752708435059
    9. ' card' → logprob: -5.503752708435059
    10. ' unused' → logprob: -5.628752708435059

Token 68: '_hand' (ID: 49730)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.3503432273864746
    2. 'layer' → logprob: -1.9753432273864746
    3. 'layers' → logprob: -3.1003432273864746
    4. 'oss' → logprob: -3.6003432273864746
    5. 'lay' → logprob: -3.8503432273864746
    6. 'osition' → logprob: -4.100343227386475
    7. 'ile' → logprob: -4.225343227386475
    8. 'laces' → logprob: -5.225343227386475
    9. 'lace' → logprob: -5.350343227386475
    10. '1' → logprob: -5.600343227386475

Token 69: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8740004301071167
    2. ')' → logprob: -1.1240004301071167
    3. ',' → logprob: -2.2490005493164062
    4. 'and' → logprob: -2.3740005493164062
    5. 's' → logprob: -2.9990005493164062
    6. '):
' → logprob: -5.749000549316406
    7. 'd' → logprob: -5.874000549316406
    8. '),' → logprob: -6.874000549316406
    9. 'le' → logprob: -7.624000549316406
    10. '):

' → logprob: -8.374000549316406

Token 70: ' o' (ID: 293)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.278221845626831
    2. ' hand' → logprob: -1.778221845626831
    3. 'hand' → logprob: -1.778221845626831
    4. ' p' → logprob: -2.028221845626831
    5. ' ' → logprob: -4.02822208404541
    6. 'depth' → logprob: -4.02822208404541
    7. '0' → logprob: -4.27822208404541
    8. '1' → logprob: -4.27822208404541
    9. 'hands' → logprob: -4.27822208404541
    10. 'visited' → logprob: -4.40322208404541

Token 71: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.006448438391089439
    2. 'hand' → logprob: -5.381448268890381
    3. 'pp' → logprob: -7.131448268890381
    4. 'ponent' → logprob: -8.006448745727539
    5. 'p' → logprob: -8.756448745727539
    6. 'n' → logprob: -9.506448745727539
    7. 'ut' → logprob: -10.131448745727539
    8. 's' → logprob: -10.131448745727539
    9. '_' → logprob: -10.256448745727539
    10. 'pos' → logprob: -10.256448745727539

Token 72: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041748370975255966
    2. ',' → logprob: -3.541748285293579
    3. '):
' → logprob: -4.791748523712158
    4. 's' → logprob: -6.041748523712158
    5. 't' → logprob: -7.541748523712158
    6. ')' → logprob: -8.541748046875
    7. '):

' → logprob: -9.041748046875
    8. '):
' → logprob: -9.916748046875
    9. 'u' → logprob: -10.041748046875
    10. 'd' → logprob: -10.166748046875

Token 73: ' memo' (ID: 46393)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -1.6158957481384277
    2. ' memo' → logprob: -1.7408957481384277
    3. ' depth' → logprob: -2.4908957481384277
    4. ' cache' → logprob: -2.7408957481384277
    5. 'visited' → logprob: -2.8658957481384277
    6. ' p' → logprob: -2.9908957481384277
    7. ' turn' → logprob: -2.9908957481384277
    8. ' player' → logprob: -3.1158957481384277
    9. ' used' → logprob: -3.1158957481384277
    10. ' ' → logprob: -3.3658957481384277

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024189415853470564
    2. '):
' → logprob: -6.5024189949035645
    3. ',' → logprob: -8.002418518066406
    4. '):
' → logprob: -8.877418518066406
    5. ')' → logprob: -9.002418518066406
    6. '):

' → logprob: -9.127418518066406
    7. '={}' → logprob: -9.377418518066406
    8. '=' → logprob: -9.627418518066406
    9. ':' → logprob: -11.252418518066406
    10. ' ):' → logprob: -11.502418518066406

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1153261810541153
    2. ':' → logprob: -2.240326166152954
    3. '):' → logprob: -6.615326404571533
    4. '<|end|>' → logprob: -7.490326404571533
    5. ' :' → logprob: -8.865325927734375
    6. ')' → logprob: -9.240325927734375
    7. ',' → logprob: -9.615325927734375
    8. '    
' → logprob: -9.615325927734375
    9. '<|end|>' → logprob: -10.115325927734375
    10. '       ' → logprob: -10.615325927734375

Token 76: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3474462330341339
    2. '   ' → logprob: -1.5974462032318115
    3. '):' → logprob: -3.9724462032318115
    4. ')' → logprob: -4.097446441650391
    5. 'key' → logprob: -4.097446441650391
    6. 'if' → logprob: -4.097446441650391
    7. ' key' → logprob: -4.472446441650391
    8. ' if' → logprob: -4.847446441650391
    9. ',' → logprob: -6.972446441650391
    10. ' :' → logprob: -7.597446441650391

Token 77: ' table' (ID: 3293)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06458701938390732
    2. 'if' → logprob: -3.314587116241455
    3. '   ' → logprob: -4.064587116241455
    4. ' key' → logprob: -4.814587116241455
    5. 'key' → logprob: -7.439587116241455
    6. '    ' → logprob: -9.689586639404297
    7. 'state' → logprob: -9.939586639404297
    8. ' """' → logprob: -9.939586639404297
    9. ' state' → logprob: -10.689586639404297
    10. 'def' → logprob: -10.939586639404297

Token 78: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4322730600833893
    2. '=' → logprob: -1.557273030281067
    3. '_key' → logprob: -2.0572731494903564
    4. '_tuple' → logprob: -5.307272911071777
    5. '_f' → logprob: -6.432272911071777
    6. ')' → logprob: -6.807272911071777
    7. 'key' → logprob: -6.932272911071777
    8. ',' → logprob: -7.057272911071777
    9. 'fro' → logprob: -7.682272911071777
    10. '.add' → logprob: -7.932272911071777

Token 79: ' ensemble' (ID: 33081)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.2619364559650421
    2. 'tuple' → logprob: -2.5119364261627197
    3. 'fro' → logprob: -3.1369364261627197
    4. ' fro' → logprob: -3.1369364261627197
    5. ' set' → logprob: -3.6369364261627197
    6. ' list' → logprob: -4.636936664581299
    7. 'set' → logprob: -4.761936664581299
    8. ' a' → logprob: -4.761936664581299
    9. 'list' → logprob: -5.386936664581299
    10. ' Tuple' → logprob: -6.386936664581299

Token 80: ' des' (ID: 731)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9112523198127747
    2. ' de' → logprob: -1.4112522602081299
    3. ')' → logprob: -1.5362522602081299
    4. ' des' → logprob: -3.03625226020813
    5. '[int' → logprob: -3.16125226020813
    6. ',' → logprob: -3.91125226020813
    7. ' d' → logprob: -5.036252498626709
    8. '()' → logprob: -5.786252498626709
    9. '<int' → logprob: -5.786252498626709
    10. ' )' → logprob: -5.911252498626709

Token 81: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.14133203029632568
    2. 'cart' → logprob: -3.0163321495056152
    3. 'int' → logprob: -3.5163321495056152
    4. 'cards' → logprob: -4.141332149505615
    5. ' int' → logprob: -4.141332149505615
    6. 'ent' → logprob: -4.641332149505615
    7. ' cards' → logprob: -5.641332149505615
    8. ' integers' → logprob: -6.266332149505615
    9. ' ent' → logprob: -6.391332149505615
    10. 'ints' → logprob: -7.391332149505615

Token 82: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3685562312602997
    2. ',' → logprob: -1.618556261062622
    3. '   ' → logprob: -2.743556261062622
    4. '<|end|>' → logprob: -3.493556261062622
    5. ' if' → logprob: -5.493556022644043
    6. ' (' → logprob: -5.993556022644043
    7. ' )' → logprob: -6.618556022644043
    8. '),' → logprob: -6.868556022644043
    9. '<|end|>' → logprob: -6.993556022644043
    10. '  ' → logprob: -7.118556022644043

Token 83: ' la' (ID: 557)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.8167556524276733
    2. ' la' → logprob: -1.3167556524276733
    3. ' table' → logprob: -1.5667556524276733
    4. 'la' → logprob: -2.566755771636963
    5. '```' → logprob: -6.691755771636963
    6. 'le' → logprob: -7.191755771636963
    7. '<|end|>' → logprob: -7.691755771636963
    8. ' ' → logprob: -7.816755771636963
    9. '_table' → logprob: -7.941755771636963
    10. 'the' → logprob: -8.191755294799805

Token 84: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.2066555768251419
    2. ' table' → logprob: -1.7066556215286255
    3. '_table' → logprob: -5.581655502319336
    4. '_' → logprob: -7.831655502319336
    5. '	table' → logprob: -9.081655502319336
    6. '<table' → logprob: -9.206655502319336
    7. 'plate' → logprob: -9.206655502319336
    8. ' ' → logprob: -9.394155502319336
    9. '```' → logprob: -9.394155502319336
    10. ' ' → logprob: -9.644155502319336

Token 85: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6099912524223328
    2. '<|end|>' → logprob: -0.9849912524223328
    3. ',' → logprob: -2.9849913120269775
    4. '<|end|>' → logprob: -3.9849913120269775
    5. '   ' → logprob: -4.484991073608398
    6. ' )' → logprob: -7.484991073608398
    7. ':' → logprob: -7.859991073608398
    8. '),' → logprob: -8.359991073608398
    9. ' ,' → logprob: -8.859991073608398
    10. '):' → logprob: -8.859991073608398

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047787394374608994
    2. '<|end|>' → logprob: -3.5477874279022217
    3. ',' → logprob: -4.922787189483643
    4. ' if' → logprob: -5.672787189483643
    5. '    
' → logprob: -6.047787189483643
    6. ')' → logprob: -6.922787189483643
    7. ' ' → logprob: -7.172787189483643
    8. '<|end|>' → logprob: -7.422787189483643
    9. '    ' → logprob: -7.547787189483643
    10. '  ' → logprob: -7.547787189483643

Token 87: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.328794002532959
    2. 'if' → logprob: -2.078794002532959
    3. 'key' → logprob: -2.578794002532959
    4. ' if' → logprob: -3.328794002532959
    5. 'state' → logprob: -3.453794002532959
    6. ' key' → logprob: -4.703794002532959
    7. '  ' → logprob: -7.453794002532959
    8. '    
' → logprob: -8.078794479370117
    9. ' ' → logprob: -8.078794479370117
    10. ',' → logprob: -8.203794479370117

Token 88: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.363350749015808
    2. ' if' → logprob: -1.363350749015808
    3. ' key' → logprob: -1.488350749015808
    4. 'key' → logprob: -1.613350749015808
    5. 'state' → logprob: -3.8633508682250977
    6. 'p' → logprob: -3.9883508682250977
    7. ' p' → logprob: -4.988350868225098
    8. ' state' → logprob: -5.113350868225098
    9. '   ' → logprob: -5.988350868225098
    10. ' clé' → logprob: -6.488350868225098

Token 89: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.040583983063697815
    2. '_' → logprob: -3.290584087371826
    3. ' _' → logprob: -7.790584087371826
    4. '   ' → logprob: -8.040583610534668
    5. 'def' → logprob: -8.290583610534668
    6. '_s' → logprob: -8.665583610534668
    7. ''' → logprob: -9.040583610534668
    8. 'hand' → logprob: -9.165583610534668
    9. ' hand' → logprob: -9.415583610534668
    10. ''s' → logprob: -9.415583610534668

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03649744763970375
    2. ' :' → logprob: -3.4114973545074463
    3. ',' → logprob: -6.911497592926025
    4. ' and' → logprob: -7.161497592926025
    5. '   ' → logprob: -7.911497592926025
    6. '  ' → logprob: -8.786497116088867
    7. ' =' → logprob: -8.911497116088867
    8. ' ' → logprob: -9.536497116088867
    9. ' et' → logprob: -9.536497116088867
    10. ' ,' → logprob: -9.661497116088867

Token 91: ' tuple' (ID: 31311)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.17332829535007477
    2. 'set' → logprob: -2.173328399658203
    3. ' tuple' → logprob: -4.173328399658203
    4. ' ensemble' → logprob: -4.173328399658203
    5. 'ensemble' → logprob: -4.798328399658203
    6. ' fro' → logprob: -6.173328399658203
    7. ' list' → logprob: -7.423328399658203
    8. ' ' → logprob: -7.673328399658203
    9. ' joueur' → logprob: -7.673328399658203
    10. ' liste' → logprob: -7.798328399658203

Token 92: ' des' (ID: 731)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5163348317146301
    2. ' des' → logprob: -1.0163347721099854
    3. ' de' → logprob: -3.7663347721099854
    4. '<|end|>' → logprob: -4.5163350105285645
    5. ' d' → logprob: -6.6413350105285645
    6. 'd' → logprob: -6.8913350105285645
    7. ')' → logprob: -7.1413350105285645
    8. 'des' → logprob: -7.1413350105285645
    9. '<|end|>' → logprob: -7.5163350105285645
    10. ' (' → logprob: -7.5163350105285645

Token 93: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.1048910841345787
    2. 'cart' → logprob: -2.354891061782837
    3. 'cards' → logprob: -5.979891300201416
    4. ' cards' → logprob: -7.229891300201416
    5. 'car' → logprob: -7.729891300201416
    6. ' cartas' → logprob: -8.104890823364258
    7. '_cart' → logprob: -8.604890823364258
    8. ' cart' → logprob: -8.604890823364258
    9. 'sorted' → logprob: -9.354890823364258
    10. ' sorted' → logprob: -10.104890823364258

Token 94: ' du' (ID: 1462)
  Prédit: ' restantes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' restantes' → logprob: -1.0232319831848145
    2. 'dans' → logprob: -1.8982319831848145
    3. 'sur' → logprob: -2.5232319831848145
    4. '   ' → logprob: -2.7732319831848145
    5. ' dans' → logprob: -2.7732319831848145
    6. ')' → logprob: -3.0232319831848145
    7. ',' → logprob: -3.7732319831848145
    8. 'def' → logprob: -3.7732319831848145
    9. ' de' → logprob: -3.8982319831848145
    10. 'pos' → logprob: -4.1482319831848145

Token 95: ' joueur' (ID: 72629)
  Prédit: ' joueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joueur' → logprob: -0.08741012960672379
    2. 'jou' → logprob: -3.2124102115631104
    3. 'player' → logprob: -3.9624102115631104
    4. ' player' → logprob: -4.837409973144531
    5. '_player' → logprob: -5.212409973144531
    6. ' ' → logprob: -5.587409973144531
    7. '_j' → logprob: -6.212409973144531
    8. 'p' → logprob: -6.462409973144531
    9. '_p' → logprob: -7.212409973144531
    10. '_' → logprob: -7.337409973144531

Token 96: ' p' (ID: 275)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6585111618041992
    2. '   ' → logprob: -1.4085111618041992
    3. ' ,' → logprob: -2.408511161804199
    4. ')' → logprob: -2.533511161804199
    5. '<|end|>' → logprob: -3.408511161804199
    6. 's' → logprob: -5.033511161804199
    7. 'def' → logprob: -5.658511161804199
    8. ' ' → logprob: -6.158511161804199
    9. ''s' → logprob: -6.158511161804199
    10. ' )' → logprob: -6.158511161804199

Token 97: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1171993613243103
    2. '   ' → logprob: -2.367199420928955
    3. ',' → logprob: -4.617199420928955
    4. '<|end|>' → logprob: -5.742199420928955
    5. ' )' → logprob: -6.492199420928955
    6. ' ' → logprob: -7.492199420928955
    7. '):' → logprob: -7.992199420928955
    8. '  ' → logprob: -8.117198944091797
    9. ':' → logprob: -8.367198944091797
    10. '<|end|>' → logprob: -8.367198944091797

Token 98: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027287840843200684
    2. ' )' → logprob: -3.9022879600524902
    3. ' ' → logprob: -6.27728796005249
    4. ',' → logprob: -6.52728796005249
    5. ''' → logprob: -6.52728796005249
    6. '')' → logprob: -7.52728796005249
    7. ' ,' → logprob: -7.77728796005249
    8. '  ' → logprob: -8.652287483215332
    9. '),' → logprob: -9.277287483215332
    10. ' '' → logprob: -9.277287483215332

Token 99: ' joueur' (ID: 72629)
  Prédit: ' joueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joueur' → logprob: -0.18080805242061615
    2. 'jou' → logprob: -2.8058080673217773
    3. ' prochain' → logprob: -3.3058080673217773
    4. 'player' → logprob: -4.930808067321777
    5. ' tour' → logprob: -4.930808067321777
    6. 's' → logprob: -5.055808067321777
    7. ')' → logprob: -5.305808067321777
    8. 'pro' → logprob: -5.430808067321777
    9. 'tour' → logprob: -5.555808067321777
    10. ' next' → logprob: -5.555808067321777

Token 100: ' dont' (ID: 11562)
  Prédit: ' actuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' actuel' → logprob: -0.8422756791114807
    2. '1' → logprob: -1.717275619506836
    3. ' courant' → logprob: -2.092275619506836
    4. ')' → logprob: -2.592275619506836
    5. ' ' → logprob: -2.717275619506836
    6. 'current' → logprob: -3.342275619506836
    7. ' current' → logprob: -3.467275619506836
    8. 'cour' → logprob: -3.967275619506836
    9. ' cour' → logprob: -5.342275619506836
    10. '   ' → logprob: -5.592275619506836

Token 101: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6198617815971375
    2. 'c' → logprob: -0.8698617815971375
    3. 'le' → logprob: -3.9948618412017822
    4. 'on' → logprob: -4.369861602783203
    5. ' on' → logprob: -4.994861602783203
    6. ''on' → logprob: -6.494861602783203
    7. '   ' → logprob: -6.994861602783203
    8. '```' → logprob: -7.494861602783203
    9. ' le' → logprob: -7.869861602783203
    10. 'tour' → logprob: -8.619861602783203

Token 102: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9023160338401794
    2. 'urrent' → logprob: -1.2773160934448242
    3. ''est' → logprob: -2.277316093444824
    4. 'est' → logprob: -2.527316093444824
    5. 'on' → logprob: -3.652316093444824
    6. 'a' → logprob: -3.902316093444824
    7. 'ode' → logprob: -4.152316093444824
    8. '`' → logprob: -4.902316093444824
    9. '_code' → logprob: -4.902316093444824
    10. '_current' → logprob: -5.027316093444824

Token 103: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5514597296714783
    2. ' le' → logprob: -1.176459789276123
    3. 'au' → logprob: -3.301459789276123
    4. 't' → logprob: -3.551459789276123
    5. '   ' → logprob: -4.676459789276123
    6. ' au' → logprob: -4.801459789276123
    7. 'tour' → logprob: -4.926459789276123
    8. '  ' → logprob: -5.426459789276123
    9. '	' → logprob: -6.051459789276123
    10. ' tour' → logprob: -6.051459789276123

Token 104: ' tour' (ID: 6970)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.005193909164518118
    2. 't' → logprob: -5.880193710327148
    3. ' tour' → logprob: -6.880193710327148
    4. 'to' → logprob: -7.380193710327148
    5. 'def' → logprob: -8.130193710327148
    6. 'turn' → logprob: -8.755193710327148
    7. 'toc' → logprob: -10.005193710327148
    8. 'toi' → logprob: -10.005193710327148
    9. '```' → logprob: -10.380193710327148
    10. '   ' → logprob: -10.880193710327148

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001441303757019341
    2. ' )' → logprob: -6.876441478729248
    3. '   ' → logprob: -8.00144100189209
    4. ',' → logprob: -10.87644100189209
    5. '')' → logprob: -11.12644100189209
    6. ')
' → logprob: -11.25144100189209
    7. ' ' → logprob: -11.75144100189209
    8. 'def' → logprob: -12.75144100189209
    9. '),' → logprob: -12.75144100189209
    10. '  ' → logprob: -13.12644100189209

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02409234456717968
    2. ')' → logprob: -4.274092197418213
    3. ',' → logprob: -5.774092197418213
    4. '):' → logprob: -6.024092197418213
    5. '<|end|>' → logprob: -6.274092197418213
    6. ':' → logprob: -6.649092197418213
    7. '):
' → logprob: -8.274092674255371
    8. '<|end|>' → logprob: -8.399092674255371
    9. '  ' → logprob: -9.649092674255371
    10. '[' → logprob: -9.774092674255371

Token 107: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21044427156448364
    2. ')' → logprob: -2.335444211959839
    3. ',' → logprob: -3.210444211959839
    4. '):' → logprob: -4.585444450378418
    5. ' ' → logprob: -4.710444450378418
    6. ':' → logprob: -4.835444450378418
    7. ' if' → logprob: -5.460444450378418
    8. '[' → logprob: -5.835444450378418
    9. ' ,' → logprob: -6.085444450378418
    10. '),' → logprob: -6.210444450378418

Token 108: ' o' (ID: 293)
  Prédit: ' o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.25264203548431396
    2. 'o' → logprob: -1.502642035484314
    3. '   ' → logprob: -8.002641677856445
    4. '_o' → logprob: -9.002641677856445
    5. '	o' → logprob: -9.377641677856445
    6. ' p' → logprob: -9.752641677856445
    7. ' ' → logprob: -10.377641677856445
    8. '_' → logprob: -11.252641677856445
    9. ' ' → logprob: -11.252641677856445
    10. '    ' → logprob: -11.502641677856445

Token 109: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -1.4140441635390744e-05
    2. ''_' → logprob: -11.875014305114746
    3. '_' → logprob: -12.875014305114746
    4. 'hand' → logprob: -13.125014305114746
    5. '_HAND' → logprob: -14.000014305114746
    6. 'Hand' → logprob: -15.250014305114746
    7. ' hand' → logprob: -15.500014305114746
    8. ' _' → logprob: -15.750014305114746
    9. '_h' → logprob: -15.750014305114746
    10. '"_' → logprob: -15.750014305114746

Token 110: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004601015243679285
    2. '=' → logprob: -8.500459671020508
    3. ' :' → logprob: -8.750459671020508
    4. ',' → logprob: -10.125459671020508
    5. ' =' → logprob: -10.500459671020508
    6. '):' → logprob: -10.625459671020508
    7. '<|end|>' → logprob: -13.125459671020508
    8. '=None' → logprob: -13.500459671020508
    9. 'def' → logprob: -14.500459671020508
    10. ')' → logprob: -14.500459671020508

Token 111: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.12698101997375488
    2. ' tuple' → logprob: -2.126981019973755
    3. '(tuple' → logprob: -10.626980781555176
    4. 'uple' → logprob: -11.126980781555176
    5. 'tu' → logprob: -11.626980781555176
    6. ' ' → logprob: -13.376980781555176
    7. 'Tuple' → logprob: -13.876980781555176
    8. ' tuples' → logprob: -14.251980781555176
    9. '_tuple' → logprob: -14.376980781555176
    10. ' tu' → logprob: -14.376980781555176

Token 112: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03860686346888542
    2. 'des' → logprob: -3.288606882095337
    3. ' of' → logprob: -8.538606643676758
    4. '_des' → logprob: -8.913606643676758
    5. '<|end|>' → logprob: -9.538606643676758
    6. 'def' → logprob: -9.663606643676758
    7. ' ' → logprob: -10.788606643676758
    8. '  ' → logprob: -11.288606643676758
    9. '(des' → logprob: -11.663606643676758
    10. '```' → logprob: -11.788606643676758

Token 113: ' cartes' (ID: 70753)
  Prédit: 'cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cart' → logprob: -0.0007298283162526786
    2. ' cartes' → logprob: -7.625730037689209
    3. 'car' → logprob: -9.12572956085205
    4. 'cards' → logprob: -9.62572956085205
    5. '_cart' → logprob: -10.75072956085205
    6. 'o' → logprob: -11.12572956085205
    7. 'jou' → logprob: -11.37572956085205
    8. ' cart' → logprob: -12.00072956085205
    9. '(cart' → logprob: -12.62572956085205
    10. 'l' → logprob: -13.62572956085205

Token 114: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.150001883506775
    2. 'des' → logprob: -1.150001883506775
    3. ' du' → logprob: -1.400001883506775
    4. 'du' → logprob: -2.2750020027160645
    5. ' de' → logprob: -5.1500020027160645
    6. '#' → logprob: -5.7750020027160645
    7. 'de' → logprob: -6.1500020027160645
    8. ' ' → logprob: -6.1500020027160645
    9. '_des' → logprob: -6.7750020027160645
    10. 'd' → logprob: -7.5250020027160645

Token 115: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05497075617313385
    2. ' l' → logprob: -2.9299707412719727
    3. 'jou' → logprob: -11.179970741271973
    4. ' joueur' → logprob: -11.304970741271973
    5. ' ' → logprob: -11.429970741271973
    6. '	l' → logprob: -11.929970741271973
    7. '(l' → logprob: -11.929970741271973
    8. ''l' → logprob: -11.929970741271973
    9. '  ' → logprob: -12.304970741271973
    10. ' advers' → logprob: -12.804970741271973

Token 116: ''autre' (ID: 52145)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.03917181119322777
    2. ' joueur' → logprob: -4.0391716957092285
    3. ''autre' → logprob: -4.1641716957092285
    4. 'ad' → logprob: -6.2891716957092285
    5. 'aut' → logprob: -6.4141716957092285
    6. 'p' → logprob: -7.2891716957092285
    7. 'player' → logprob: -7.7891716957092285
    8. 'o' → logprob: -8.539172172546387
    9. 'op' → logprob: -9.289172172546387
    10. ''ad' → logprob: -9.539172172546387

Token 117: ' joueur' (ID: 72629)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.3033088147640228
    2. ' joueur' → logprob: -1.6783088445663452
    3. ')' → logprob: -3.3033087253570557
    4. 'jou' → logprob: -4.678308963775635
    5. ',' → logprob: -5.178308963775635
    6. 'hand' → logprob: -5.303308963775635
    7. ' player' → logprob: -5.303308963775635
    8. '<|end|>' → logprob: -5.553308963775635
    9. '_hand' → logprob: -6.303308963775635
    10. '_player' → logprob: -6.553308963775635

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009375413879752159
    2. '):' → logprob: -5.38437557220459
    3. ')' → logprob: -5.88437557220459
    4. ':' → logprob: -6.63437557220459
    5. '<|end|>' → logprob: -8.25937557220459
    6. '):
' → logprob: -9.13437557220459
    7. ',' → logprob: -9.50937557220459
    8. ' if' → logprob: -10.13437557220459
    9. '<|end|>' → logprob: -10.13437557220459
    10. 'if' → logprob: -10.50937557220459

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034654809860512614
    2. ' if' → logprob: -9.000346183776855
    3. 'if' → logprob: -9.750346183776855
    4. ':' → logprob: -10.125346183776855
    5. ')' → logprob: -10.375346183776855
    6. ',' → logprob: -10.625346183776855
    7. '<|end|>' → logprob: -10.750346183776855
    8. 'token' → logprob: -10.875346183776855
    9. '    
' → logprob: -11.875346183776855
    10. '):' → logprob: -12.750346183776855

Token 120: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7360290288925171
    2. '   ' → logprob: -1.361029028892517
    3. 'if' → logprob: -1.611029028892517
    4. 'state' → logprob: -3.1110291481018066
    5. ' key' → logprob: -4.486029148101807
    6. ' if' → logprob: -4.736029148101807
    7. 'memo' → logprob: -9.361028671264648
    8. ' state' → logprob: -9.861028671264648
    9. 'next' → logprob: -9.861028671264648
    10. ')' → logprob: -9.986028671264648

Token 121: ' memo' (ID: 46393)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.31791695952415466
    2. 'if' → logprob: -2.0679168701171875
    3. 'state' → logprob: -2.0679168701171875
    4. ' key' → logprob: -4.5679168701171875
    5. '   ' → logprob: -5.5679168701171875
    6. 'memo' → logprob: -6.0679168701171875
    7. ' if' → logprob: -6.4429168701171875
    8. '#' → logprob: -7.1929168701171875
    9. ' state' → logprob: -7.8179168701171875
    10. 'player' → logprob: -10.817916870117188

Token 122: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33041709661483765
    2. '.setdefault' → logprob: -2.0804171562194824
    3. '=' → logprob: -2.5804171562194824
    4. ')' → logprob: -3.4554171562194824
    5. '[(' → logprob: -4.205417156219482
    6. ':' → logprob: -4.955417156219482
    7. ' key' → logprob: -5.205417156219482
    8. '   ' → logprob: -5.330417156219482
    9. '.' → logprob: -5.455417156219482
    10. ',' → logprob: -5.705417156219482

Token 123: ' diction' (ID: 155259)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.15764375030994415
    2. ' dict' → logprob: -2.5326437950134277
    3. 'dict' → logprob: -3.1576437950134277
    4. ' {}' → logprob: -3.7826437950134277
    5. ' dictionary' → logprob: -7.532643795013428
    6. '={}' → logprob: -8.40764331817627
    7. ' {})' → logprob: -8.78264331817627
    8. '{' → logprob: -10.03264331817627
    9. '{})' → logprob: -10.28264331817627
    10. ' {(' → logprob: -10.28264331817627

Token 124: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.05251981317996979
    2. 'ary' → logprob: -3.0525197982788086
    3. 'aire' → logprob: -5.552519798278809
    4. 'naires' → logprob: -10.927519798278809
    5. 'n' → logprob: -11.052519798278809
    6. 'na' → logprob: -12.802519798278809
    7. '{' → logprob: -12.927519798278809
    8. '{"' → logprob: -12.927519798278809
    9. '```' → logprob: -13.677519798278809
    10. 'airy' → logprob: -14.302519798278809

Token 125: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10549145191907883
    2. ')' → logprob: -3.6054913997650146
    3. '<|end|>' → logprob: -3.6054913997650146
    4. ',' → logprob: -4.730491638183594
    5. '.setdefault' → logprob: -4.730491638183594
    6. ' =' → logprob: -4.730491638183594
    7. '.keys' → logprob: -5.480491638183594
    8. '<|end|>' → logprob: -5.855491638183594
    9. '):' → logprob: -6.230491638183594
    10. ':' → logprob: -6.605491638183594

Token 126: ' mém' (ID: 136981)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.6980530023574829
    2. 'memo' → logprob: -1.073053002357483
    3. ' mém' → logprob: -2.0730528831481934
    4. ' memor' → logprob: -4.073052883148193
    5. ' la' → logprob: -4.698052883148193
    6. 'memor' → logprob: -5.698052883148193
    7. ' stock' → logprob: -6.073052883148193
    8. ' mem' → logprob: -7.073052883148193
    9. 'mem' → logprob: -7.448052883148193
    10. 'm' → logprob: -7.698052883148193

Token 127: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0014366621617227793
    2. 'oir' → logprob: -7.251436710357666
    3. 'o' → logprob: -7.626436710357666
    4. 'oire' → logprob: -9.751436233520508
    5. 'ois' → logprob: -9.751436233520508
    6. '```' → logprob: -10.626436233520508
    7. 'mor' → logprob: -10.626436233520508
    8. '{' → logprob: -11.126436233520508
    9. 'ory' → logprob: -11.501436233520508
    10. 'oris' → logprob: -11.751436233520508

Token 128: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.02137400582432747
    2. 'isation' → logprob: -3.896373987197876
    3. 'izer' → logprob: -7.646374225616455
    4. 'ization' → logprob: -8.021373748779297
    5. 'er' → logprob: -12.146373748779297
    6. 'ation' → logprob: -12.396373748779297
    7. 'isé' → logprob: -12.646373748779297
    8. '#' → logprob: -13.021373748779297
    9. 'ise' → logprob: -13.146373748779297
    10. 'is' → logprob: -13.271373748779297

Token 129: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5345587730407715
    2. ')' → logprob: -1.1595587730407715
    3. ' les' → logprob: -3.0345587730407715
    4. '<|end|>' → logprob: -4.1595587730407715
    5. ' states' → logprob: -5.0345587730407715
    6. 'les' → logprob: -5.7845587730407715
    7. 'states' → logprob: -5.7845587730407715
    8. 'des' → logprob: -6.1595587730407715
    9. '   ' → logprob: -6.2845587730407715
    10. ' the' → logprob: -6.4095587730407715

Token 130: ' états' (ID: 184259)
  Prédit: ' résultats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultats' → logprob: -0.6641141772270203
    2. ' états' → logprob: -0.7891141772270203
    3. 'rés' → logprob: -4.039113998413086
    4. 'result' → logprob: -5.289113998413086
    5. ' result' → logprob: -6.039113998413086
    6. ' states' → logprob: -6.664113998413086
    7. ' results' → logprob: -7.664113998413086
    8. 'positions' → logprob: -7.789113998413086
    9. 'results' → logprob: -7.914113998413086
    10. 'ét' → logprob: -7.914113998413086

Token 131: ' déjà' (ID: 21229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5905113816261292
    2. '):' → logprob: -0.8405113816261292
    3. '):
' → logprob: -4.840511322021484
    4. ')' → logprob: -5.465511322021484
    5. ':' → logprob: -6.465511322021484
    6. ',' → logprob: -7.590511322021484
    7. ' if' → logprob: -9.590511322021484
    8. 'if' → logprob: -10.465511322021484
    9. '{' → logprob: -10.590511322021484
    10. '<|end|>' → logprob: -11.090511322021484

Token 132: ' calcul' (ID: 7559)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9204851984977722
    2. 'vis' → logprob: -1.295485258102417
    3. 'expl' → logprob: -1.420485258102417
    4. 'vus' → logprob: -3.420485258102417
    5. 'visit' → logprob: -4.295485019683838
    6. 'v' → logprob: -4.670485019683838
    7. 'vist' → logprob: -4.795485019683838
    8. 'vu' → logprob: -5.170485019683838
    9. ' visited' → logprob: -5.795485019683838
    10. 'trait' → logprob: -6.170485019683838

Token 133: 'és' (ID: 1756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17067550122737885
    2. '):
' → logprob: -2.29567551612854
    3. '   ' → logprob: -4.045675277709961
    4. '=' → logprob: -4.545675277709961
    5. '):' → logprob: -4.795675277709961
    6. '{' → logprob: -5.920675277709961
    7. 'ated' → logprob: -6.170675277709961
    8. '}' → logprob: -6.170675277709961
    9. '):

' → logprob: -6.295675277709961
    10. ')
' → logprob: -6.295675277709961

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032922595273703337
    2. ':' → logprob: -6.128292083740234
    3. ' if' → logprob: -7.878292083740234
    4. 'if' → logprob: -8.003292083740234
    5. ')' → logprob: -8.878292083740234
    6. '<|end|>' → logprob: -9.878292083740234
    7. '):' → logprob: -10.003292083740234
    8. ',' → logprob: -10.003292083740234
    9. 'token' → logprob: -11.128292083740234
    10. '<|end|>' → logprob: -11.253292083740234

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02723401039838791
    2. ':' → logprob: -4.152234077453613
    3. '):' → logprob: -4.652234077453613
    4. '):
' → logprob: -7.902234077453613
    5. 'if' → logprob: -8.027234077453613
    6. ')' → logprob: -8.277234077453613
    7. ',' → logprob: -8.652234077453613
    8. '    
' → logprob: -9.277234077453613
    9. ':
' → logprob: -9.777234077453613
    10. '():' → logprob: -9.777234077453613

Token 136: ' key' (ID: 2140)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0692079067230225
    2. 'key' (adapté à ' key') → logprob: -1.0692079067230225
    3. 'state' → logprob: -1.6942079067230225
    4. ' key' → logprob: -2.3192079067230225
    5. 'if' → logprob: -3.6942079067230225
    6. ' if' → logprob: -5.444208145141602
    7. ' state' → logprob: -6.194208145141602
    8. '    
' → logprob: -9.694208145141602
    9. 'next' → logprob: -11.444208145141602
    10. 'token' → logprob: -11.569208145141602

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777611732483
    2. '=' → logprob: -0.9740777611732483
    3. ' =(' → logprob: -15.474078178405762
    4. ')' → logprob: -16.099077224731445
    5. ' =
' → logprob: -16.474077224731445
    6. '=(' → logprob: -16.599077224731445
    7. '=
' → logprob: -16.849077224731445
    8. ')=' → logprob: -16.974077224731445
    9. '＝' → logprob: -17.099077224731445
    10. ',' → logprob: -17.224077224731445

Token 138: ' (' (ID: 350)
  Prédit: '(table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.30992430448532104
    2. '(tuple' → logprob: -2.059924364089966
    3. '(f' → logprob: -2.809924364089966
    4. ' (' → logprob: -2.809924364089966
    5. '(' → logprob: -4.309924125671387
    6. '(key' → logprob: -5.684924125671387
    7. '(hash' → logprob: -7.684924125671387
    8. '(sorted' → logprob: -8.309924125671387
    9. '(len' → logprob: -8.434924125671387
    10. '(p' → logprob: -8.434924125671387

Token 139: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.33461809158325195
    2. 'fro' → logprob: -1.459618091583252
    3. 'table' → logprob: -2.959618091583252
    4. 'key' → logprob: -9.459617614746094
    5. ' tuple' → logprob: -9.709617614746094
    6. '(tuple' → logprob: -10.334617614746094
    7. ' fro' → logprob: -11.209617614746094
    8. 'p' → logprob: -11.334617614746094
    9. '   ' → logprob: -11.709617614746094
    10. 'f' → logprob: -12.209617614746094

Token 140: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.02399574965238571
    2. '(table' → logprob: -3.7739956378936768
    3. 'sorted' → logprob: -7.273995876312256
    4. 'table' → logprob: -9.898995399475098
    5. '(' → logprob: -12.648995399475098
    6. ' sorted' → logprob: -13.398995399475098
    7. ')' → logprob: -14.648995399475098
    8. '(sort' → logprob: -15.523995399475098
    9. '   ' → logprob: -16.398996353149414
    10. '(
' → logprob: -16.398996353149414

Token 141: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.00038825106457807124
    2. 'table' → logprob: -7.875388145446777
    3. '(list' → logprob: -12.375388145446777
    4. ' table' → logprob: -13.000388145446777
    5. ')table' → logprob: -14.375388145446777
    6. '(' → logprob: -15.125388145446777
    7. '((' → logprob: -15.625388145446777
    8. ' (' → logprob: -15.750388145446777
    9. '	table' → logprob: -16.125389099121094
    10. '<table' → logprob: -16.625389099121094

Token 142: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.0007519744685851038
    2. '))' → logprob: -7.750751972198486
    3. ' ' → logprob: -8.500752449035645
    4. ')),
' → logprob: -9.250752449035645
    5. '()' → logprob: -11.625752449035645
    6. ')' → logprob: -12.500752449035645
    7. '))),' → logprob: -13.000752449035645
    8. ')),
' → logprob: -13.125752449035645
    9. '),' → logprob: -13.625752449035645
    10. ',' → logprob: -14.000752449035645

Token 143: ' tuple' (ID: 31311)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07165088504552841
    2. 'tuple' → logprob: -2.696650981903076
    3. ' p' → logprob: -7.196650981903076
    4. ' tuple' → logprob: -7.321650981903076
    5. '   ' → logprob: -8.321650505065918
    6. '       ' → logprob: -11.321650505065918
    7. '           ' → logprob: -11.571650505065918
    8. ' ' → logprob: -11.821650505065918
    9. '(tuple' → logprob: -11.946650505065918
    10. '    ' → logprob: -12.321650505065918

Token 144: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.31369325518608093
    2. '(p' → logprob: -1.3136932849884033
    3. 'sorted' → logprob: -7.813693046569824
    4. 'p' → logprob: -10.813693046569824
    5. '(' → logprob: -12.313693046569824
    6. ' sorted' → logprob: -14.188693046569824
    7. '((' → logprob: -14.688693046569824
    8. '(sort' → logprob: -15.188693046569824
    9. '(s' → logprob: -15.438693046569824
    10. ' p' → logprob: -16.06369400024414

Token 145: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00020628207130357623
    2. 'p' → logprob: -8.500205993652344
    3. '(' → logprob: -13.500205993652344
    4. '((' → logprob: -14.500205993652344
    5. ' p' → logprob: -14.875205993652344
    6. '   ' → logprob: -15.500205993652344
    7. ' (' → logprob: -16.000205993652344
    8. '(
' → logprob: -17.500205993652344
    9. '	p' → logprob: -17.750205993652344
    10. '```' → logprob: -17.875205993652344

Token 146: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -3.128163257315464e-07
    2. 'hand' → logprob: -15.75
    3. ')_' → logprob: -17.0
    4. '(hand' → logprob: -17.125
    5. ' _' → logprob: -17.875
    6. '_HAND' → logprob: -18.875
    7. '_' → logprob: -19.0
    8. '\' → logprob: -19.0
    9. '_h' → logprob: -19.25
    10. '   ' → logprob: -19.375

Token 147: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -10.500051498413086
    3. '))' → logprob: -11.125051498413086
    4. '),' → logprob: -12.000051498413086
    5. ')' → logprob: -13.125051498413086
    6. ')),
' → logprob: -14.125051498413086
    7. ',' → logprob: -15.250051498413086
    8. '))),' → logprob: -16.250051498413086
    9. '')),' → logprob: -17.750051498413086
    10. ')),
' → logprob: -17.750051498413086

Token 148: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.018151231110095978
    2. ' tuple' → logprob: -4.01815128326416
    3. '(tuple' → logprob: -14.01815128326416
    4. '   ' → logprob: -15.89315128326416
    5. '       ' → logprob: -16.518150329589844
    6. 'tu' → logprob: -16.643150329589844
    7. ' ' → logprob: -16.893150329589844
    8. '  ' → logprob: -17.268150329589844
    9. '           ' → logprob: -17.643150329589844
    10. '    ' → logprob: -17.893150329589844

Token 149: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -4.596781946020201e-05
    2. 'sorted' → logprob: -10.000045776367188
    3. '(o' → logprob: -14.500045776367188
    4. '(s' → logprob: -17.625045776367188
    5. '_sorted' → logprob: -19.125045776367188
    6. '(' → logprob: -19.250045776367188
    7. 'o' → logprob: -19.250045776367188
    8. '.sorted' → logprob: -19.500045776367188
    9. ' sorted' → logprob: -20.125045776367188
    10. 'Sorted' → logprob: -21.000045776367188

Token 150: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -4.584861744660884e-05
    2. 'o' → logprob: -10.000045776367188
    3. '(' → logprob: -15.500045776367188
    4. '	o' → logprob: -16.375045776367188
    5. ' o' → logprob: -17.000045776367188
    6. ' (' → logprob: -17.375045776367188
    7. '{o' → logprob: -17.750045776367188
    8. '[o' → logprob: -18.625045776367188
    9. '=o' → logprob: -19.000045776367188
    10. '/o' → logprob: -20.250045776367188

Token 151: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -4.7159857786027715e-05
    2. 'hand' → logprob: -10.000046730041504
    3. 'o' → logprob: -14.000046730041504
    4. '_h' → logprob: -15.000046730041504
    5. 'Hand' → logprob: -16.00004768371582
    6. '_' → logprob: -16.25004768371582
    7. ' _' → logprob: -16.75004768371582
    8. '   ' → logprob: -17.00004768371582
    9. '_HAND' → logprob: -17.12504768371582
    10. ')_' → logprob: -17.37504768371582

Token 152: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08012223988771439
    2. ')))' → logprob: -2.830122232437134
    3. '))
' → logprob: -4.080122470855713
    4. ')))
' → logprob: -6.955122470855713
    5. ')' → logprob: -10.330121994018555
    6. ' ))' → logprob: -10.455121994018555
    7. '))

' → logprob: -10.705121994018555
    8. '),' → logprob: -11.080121994018555
    9. '))
' → logprob: -11.705121994018555
    10. ' ))
' → logprob: -12.455121994018555

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007933051674626768
    2. ')' → logprob: -7.87579345703125
    3. ' if' → logprob: -9.00079345703125
    4. ':' → logprob: -9.25079345703125
    5. '<|end|>' → logprob: -9.25079345703125
    6. 'if' → logprob: -9.62579345703125
    7. '    
' → logprob: -11.25079345703125
    8. '):' → logprob: -12.37579345703125
    9. '<|end|>' → logprob: -12.37579345703125
    10. '
' → logprob: -12.75079345703125

Token 154: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6998538970947266
    2. '   ' → logprob: -1.0748538970947266
    3. 'if' (adapté à ' if') → logprob: -1.8248538970947266
    4. '<|end|>' → logprob: -8.449853897094727
    5. ')' → logprob: -8.699853897094727
    6. ':' → logprob: -9.199853897094727
    7. ' ' → logprob: -9.824853897094727
    8. '	if' → logprob: -9.824853897094727
    9. '
' → logprob: -10.074853897094727
    10. '<|end|>' → logprob: -10.199853897094727

Token 155: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.07889044284820557
    2. 'key' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.453890800476074
    4. 'Key' → logprob: -17.078889846801758
    5. '(key' → logprob: -17.203889846801758
    6. ' not' → logprob: -17.203889846801758
    7. '	key' → logprob: -17.203889846801758
    8. 'len' → logprob: -17.453889846801758
    9. ' len' → logprob: -17.828889846801758
    10. ' ' → logprob: -17.953889846801758

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0699981302022934
    2. 'in' → logprob: -2.694998025894165
    3. 'not' → logprob: -10.194997787475586
    4. ' not' → logprob: -10.819997787475586
    5. ')' → logprob: -12.944997787475586
    6. ' ' → logprob: -14.444997787475586
    7. '==' → logprob: -14.944997787475586
    8. '[' → logprob: -15.194997787475586
    9. 'import' → logprob: -16.319997787475586
    10. ':' → logprob: -16.319997787475586

Token 157: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.02324839122593403
    2. ' memo' → logprob: -3.7732484340667725
    3. '   ' → logprob: -13.898248672485352
    4. 'm' → logprob: -14.023248672485352
    5. ' ' → logprob: -14.523248672485352
    6. 'mem' → logprob: -15.898248672485352
    7. '.memo' → logprob: -16.14824867248535
    8. '  ' → logprob: -16.39824867248535
    9. 'memory' → logprob: -16.52324867248535
    10. ' meme' → logprob: -16.89824867248535

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005126188509166241
    2. ':
' → logprob: -5.380125999450684
    3. ':return' → logprob: -7.630125999450684
    4. '   ' → logprob: -11.255125999450684
    5. ' :' → logprob: -12.130125999450684
    6. '):' → logprob: -14.380125999450684
    7. ':
' → logprob: -14.755125999450684
    8. '):
' → logprob: -15.505125999450684
    9. ' :
' → logprob: -15.505125999450684
    10. ':

' → logprob: -16.005126953125

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009717502631247044
    2. 'return' → logprob: -5.5097174644470215
    3. ' return' → logprob: -5.7597174644470215
    4. '   ' → logprob: -6.0097174644470215
    5. '	return' → logprob: -11.63471794128418
    6. '	' → logprob: -13.38471794128418
    7. '   ' → logprob: -13.63471794128418
    8. ':return' → logprob: -13.75971794128418
    9. ' ' → logprob: -14.00971794128418
    10. ' ' → logprob: -14.38471794128418

Token 160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49905404448509216
    2. ' return' → logprob: -1.2490540742874146
    3. '       ' → logprob: -2.374053955078125
    4. '   ' → logprob: -4.374053955078125
    5. '
' → logprob: -8.624053955078125
    6. '	return' → logprob: -8.749053955078125
    7. ':return' → logprob: -9.999053955078125
    8. '           ' → logprob: -11.624053955078125
    9. 'eturn' → logprob: -12.374053955078125
    10. ')return' → logprob: -13.124053955078125

Token 161: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.009778991341590881
    2. ' memo' → logprob: -4.63477897644043
    3. 'm' → logprob: -11.00977897644043
    4. 'False' → logprob: -12.25977897644043
    5. ' False' → logprob: -14.38477897644043
    6. ' ' → logprob: -14.75977897644043
    7. '   ' → logprob: -15.13477897644043
    8. 'True' → logprob: -15.25977897644043
    9. 'mem' → logprob: -16.00977897644043
    10. '0' → logprob: -17.00977897644043

Token 162: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. '[' → logprob: -16.875
    3. 'key' → logprob: -18.375
    4. '(key' → logprob: -18.625
    5. '```' → logprob: -21.375
    6. '[val' → logprob: -21.5
    7. ',key' → logprob: -21.875
    8. '$key' → logprob: -21.875
    9. '
' → logprob: -22.0
    10. '[
' → logprob: -22.0

Token 163: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2044333517551422
    2. ']' → logprob: -1.9544333219528198
    3. ')' → logprob: -3.2044334411621094
    4. ')]' → logprob: -5.954433441162109
    5. '])]' → logprob: -10.20443344116211
    6. ')])' → logprob: -10.95443344116211
    7. '[' → logprob: -12.70443344116211
    8. ']+' → logprob: -13.32943344116211
    9. ']))' → logprob: -13.70443344116211
    10. '],' → logprob: -13.70443344116211

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018046455457806587
    2. '    
' → logprob: -4.6430463790893555
    3. '
' → logprob: -5.2680463790893555
    4. '<|end|>' → logprob: -6.3930463790893555
    5. '  
' → logprob: -7.6430463790893555
    6. ')' → logprob: -7.8930463790893555
    7. ' 
' → logprob: -8.768046379089355
    8. ':' → logprob: -9.518046379089355
    9. ' if' → logprob: -9.518046379089355
    10. '   
' → logprob: -9.893046379089355

Token 165: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020641859620809555
    2. '   ' → logprob: -4.770641803741455
    3. ' if' → logprob: -4.770641803741455
    4. 'for' → logprob: -5.895641803741455
    5. '#' (adapté à ' #') → logprob: -8.520642280578613
    6. 'possible' → logprob: -8.520642280578613
    7. '    
' → logprob: -9.020642280578613
    8. 'moves' → logprob: -9.645642280578613
    9. ' for' → logprob: -10.020642280578613
    10. '  
' → logprob: -11.145642280578613

Token 166: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07389196008443832
    2. ' if' → logprob: -2.8238918781280518
    3. 'for' → logprob: -4.948892116546631
    4. '#' → logprob: -6.198892116546631
    5. 'possible' → logprob: -6.823892116546631
    6. '   ' → logprob: -7.323892116546631
    7. ' for' → logprob: -7.823892116546631
    8. ' possible' → logprob: -8.948891639709473
    9. '
' → logprob: -9.073891639709473
    10. 'moves' → logprob: -9.448891639709473

Token 167: ' joueur' (ID: 72629)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7711884379386902
    2. ' not' → logprob: -0.8961884379386902
    3. 'len' → logprob: -2.146188497543335
    4. ' len' → logprob: -4.396188259124756
    5. 'all' → logprob: -10.521188735961914
    6. 'p' → logprob: -10.521188735961914
    7. 'can' → logprob: -10.646188735961914
    8. ' p' → logprob: -10.896188735961914
    9. ' all' → logprob: -10.896188735961914
    10. '#' → logprob: -12.271188735961914

Token 168: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6574838757514954
    2. 'not' → logprob: -2.0324838161468506
    3. 'len' → logprob: -2.1574838161468506
    4. 'pas' → logprob: -2.4074838161468506
    5. ' not' → logprob: -2.5324838161468506
    6. 'def' → logprob: -4.40748405456543
    7. 'n' → logprob: -4.65748405456543
    8. ' p' → logprob: -4.78248405456543
    9. '_p' → logprob: -5.53248405456543
    10. 'ne' → logprob: -5.78248405456543

Token 169: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03586118295788765
    2. ' n' → logprob: -4.160861015319824
    3. 'a' → logprob: -4.285861015319824
    4. 'has' → logprob: -6.410861015319824
    5. 'ne' → logprob: -6.785861015319824
    6. '_hand' → logprob: -7.035861015319824
    7. 'hand' → logprob: -8.035861015319824
    8. 'n't' → logprob: -8.285861015319824
    9. 'est' → logprob: -8.910861015319824
    10. ''s' → logprob: -9.035861015319824

Token 170: ''a' (ID: 10443)
  Prédit: ''a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.5253571271896362
    2. 'a' → logprob: -1.7753571271896362
    3. ''est' → logprob: -2.275357246398926
    4. ''' → logprob: -2.650357246398926
    5. ''ont' → logprob: -4.275357246398926
    6. 'e' → logprob: -4.400357246398926
    7. 'o' → logprob: -4.775357246398926
    8. 'on' → logprob: -4.775357246398926
    9. 'pas' → logprob: -5.150357246398926
    10. ''on' → logprob: -6.025357246398926

Token 171: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.03245258703827858
    2. 'pas' → logprob: -3.5324525833129883
    3. ' plus' → logprob: -6.032452583312988
    4. ' pas' → logprob: -9.532452583312988
    5. 'no' → logprob: -9.657452583312988
    6. 'auc' → logprob: -10.032452583312988
    7. 'r' → logprob: -10.532452583312988
    8. 'more' → logprob: -10.657452583312988
    9. 'p' → logprob: -11.282452583312988
    10. 'pl' → logprob: -11.407452583312988

Token 172: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.10175061970949173
    2. ' de' → logprob: -2.351750612258911
    3. 'def' → logprob: -7.10175085067749
    4. ' aucune' → logprob: -7.47675085067749
    5. '_de' → logprob: -10.726750373840332
    6. 'd' → logprob: -10.851750373840332
    7. 'pas' → logprob: -11.226750373840332
    8. 'cards' → logprob: -11.226750373840332
    9. 'p' → logprob: -11.351750373840332
    10. 'auc' → logprob: -11.726750373840332

Token 173: ' cartes' (ID: 70753)
  Prédit: 'cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cart' → logprob: -0.5586309432983398
    2. ' cartes' → logprob: -0.9336309432983398
    3. 'car' → logprob: -3.80863094329834
    4. ' carte' → logprob: -4.80863094329834
    5. 'cards' → logprob: -6.30863094329834
    6. 'p' → logprob: -6.80863094329834
    7. 'main' → logprob: -7.68363094329834
    8. ' main' → logprob: -7.93363094329834
    9. ' cart' → logprob: -8.05863094329834
    10. ' p' → logprob: -8.68363094329834

Token 174: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20538556575775146
    2. ':' → logprob: -2.205385684967041
    3. ' or' → logprob: -3.205385684967041
    4. 'if' → logprob: -4.455385684967041
    5. ' and' → logprob: -4.830385684967041
    6. ' if' → logprob: -4.955385684967041
    7. 'and' → logprob: -5.830385684967041
    8. '==' → logprob: -5.955385684967041
    9. 'or' → logprob: -7.080385684967041
    10. ',' → logprob: -7.455385684967041

Token 175: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3391374945640564
    2. ' if' → logprob: -1.5891375541687012
    3. ' return' → logprob: -2.964137554168701
    4. 'return' → logprob: -3.964137554168701
    5. 'if' → logprob: -4.464137554168701
    6. '       ' → logprob: -6.964137554168701
    7. ' memo' → logprob: -8.589137077331543
    8. 'memo' → logprob: -8.714137077331543
    9. '    ' → logprob: -9.589137077331543
    10. ' ' → logprob: -11.214137077331543

Token 176: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9721106290817261
    2. ' a' → logprob: -1.097110629081726
    3. '#' → logprob: -2.7221107482910156
    4. 'a' → logprob: -2.8471107482910156
    5. ' return' → logprob: -2.9721107482910156
    6. ' gagne' → logprob: -2.9721107482910156
    7. '   ' → logprob: -3.8471107482910156
    8. ' est' → logprob: -4.722110748291016
    9. ' n' → logprob: -5.222110748291016
    10. ' has' → logprob: -5.597110748291016

Token 177: ' gagné' (ID: 150990)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.013707260601222515
    2. ' gagné' → logprob: -4.388707160949707
    3. ' perdu' → logprob: -7.638707160949707
    4. 'per' → logprob: -7.888707160949707
    5. 'win' → logprob: -9.388707160949707
    6. ' g' → logprob: -9.513707160949707
    7. ' gagn' → logprob: -10.013707160949707
    8. ' réussi' → logprob: -10.638707160949707
    9. 'gain' → logprob: -11.388707160949707
    10. ' ' → logprob: -11.513707160949707

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011434458196163177
    2. ' if' → logprob: -4.511434555053711
    3. 'if' → logprob: -8.011434555053711
    4. '       ' → logprob: -10.386434555053711
    5. ',' → logprob: -11.511434555053711
    6. '    ' → logprob: -12.511434555053711
    7. ' ' → logprob: -12.636434555053711
    8. '  ' → logprob: -13.011434555053711
    9. ' and' → logprob: -13.636434555053711
    10. '    
' → logprob: -14.011434555053711

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08910948783159256
    2. ' if' → logprob: -2.589109420776367
    3. 'if' → logprob: -4.589109420776367
    4. ',' → logprob: -13.839109420776367
    5. '	if' → logprob: -13.964109420776367
    6. '   ' → logprob: -14.089109420776367
    7. '    
' → logprob: -14.214109420776367
    8. ' ' → logprob: -14.339109420776367
    9. '    ' → logprob: -14.964109420776367
    10. ')' → logprob: -15.214109420776367

Token 180: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10628409683704376
    2. ' if' → logprob: -2.3562841415405273
    3. '   ' → logprob: -5.106284141540527
    4. ' ' → logprob: -14.731284141540527
    5. '	if' → logprob: -15.606284141540527
    6. '```' → logprob: -16.98128318786621
    7. '  ' → logprob: -17.73128318786621
    8. 'If' → logprob: -18.10628318786621
    9. '   ' → logprob: -18.35628318786621
    10. '       ' → logprob: -18.85628318786621

Token 181: ' len' (ID: 4631)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6456923484802246
    2. 'len' → logprob: -1.1456923484802246
    3. ' not' → logprob: -1.8956923484802246
    4. ' len' → logprob: -4.895692348480225
    5. '(len' → logprob: -13.395692825317383
    6. ' ' → logprob: -13.770692825317383
    7. '   ' → logprob: -14.020692825317383
    8. '!' → logprob: -16.020692825317383
    9. '	not' → logprob: -16.145692825317383
    10. '	len' → logprob: -16.520692825317383

Token 182: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.875003814697266
    3. 'p' → logprob: -14.125003814697266
    4. ' (' → logprob: -17.750003814697266
    5. '(
' → logprob: -18.625003814697266
    6. '((' → logprob: -19.875003814697266
    7. ')' → logprob: -20.500003814697266
    8. '```' → logprob: -20.625003814697266
    9. 'def' → logprob: -20.875003814697266
    10. '(pr' → logprob: -21.000003814697266

Token 183: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -9.088346359931165e-07
    2. 'hand' → logprob: -15.250000953674316
    3. ')_' → logprob: -15.500000953674316
    4. ')' → logprob: -15.875000953674316
    5. '_h' → logprob: -16.625
    6. ' _' → logprob: -17.0
    7. '_p' → logprob: -17.375
    8. '_' → logprob: -17.375
    9. '_HAND' → logprob: -17.625
    10. '(hand' → logprob: -18.125

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002661147154867649
    2. ')==' → logprob: -6.002661228179932
    3. '==' → logprob: -8.627660751342773
    4. ' ==' → logprob: -12.127660751342773
    5. ' )' → logprob: -14.127660751342773
    6. ']==' → logprob: -16.252660751342773
    7. '0' → logprob: -16.752660751342773
    8. '[' → logprob: -17.252660751342773
    9. '）' → logprob: -17.502660751342773
    10. '=' → logprob: -18.377660751342773

Token 185: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2528684139251709
    2. ' ==' → logprob: -1.502868413925171
    3. ')' → logprob: -7.62786865234375
    4. ')==' → logprob: -7.75286865234375
    5. '()==' → logprob: -11.75286865234375
    6. '0' → logprob: -12.00286865234375
    7. '=' → logprob: -12.37786865234375
    8. ']==' → logprob: -13.00286865234375
    9. '==
' → logprob: -14.25286865234375
    10. ' ' → logprob: -14.37786865234375

Token 186: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '=' → logprob: -17.75170135498047
    4. '```' → logprob: -18.12670135498047
    5. ' ' → logprob: -18.25170135498047
    6. '00' → logprob: -18.37670135498047
    7. '1' → logprob: -18.50170135498047
    8. '  ' → logprob: -19.00170135498047
    9. '   ' → logprob: -19.12670135498047
    10. '000' → logprob: -19.12670135498047

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -17.75000762939453
    4. '1' → logprob: -18.87500762939453
    5. '```' → logprob: -19.00000762939453
    6. '00' → logprob: -19.12500762939453
    7. '=' → logprob: -19.25000762939453
    8. ')' → logprob: -19.81250762939453
    9. '000' → logprob: -19.87500762939453
    10. '০' → logprob: -20.06250762939453

Token 188: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5763390064239502
    2. ':' → logprob: -0.8263390064239502
    3. '   ' → logprob: -8.576338768005371
    4. ':return' → logprob: -8.576338768005371
    5. '):
' → logprob: -11.826338768005371
    6. ' :
' → logprob: -12.201338768005371
    7. '       ' → logprob: -12.826338768005371
    8. ':
' → logprob: -13.201338768005371
    9. '):' → logprob: -13.576338768005371
    10. ' :' → logprob: -13.701338768005371

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02915172651410103
    2. 'return' → logprob: -4.154151916503906
    3. '   ' → logprob: -4.654151916503906
    4. ' return' → logprob: -5.654151916503906
    5. '
' → logprob: -13.779151916503906
    6. '	return' → logprob: -13.779151916503906
    7. ':return' → logprob: -14.029151916503906
    8. '           ' → logprob: -14.404151916503906
    9. ' ' → logprob: -14.654151916503906
    10. '        
' → logprob: -14.779151916503906

Token 190: ' memo' (ID: 46393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14870254695415497
    2. ' return' → logprob: -2.023702621459961
    3. '   ' → logprob: -5.148702621459961
    4. '       ' → logprob: -8.648702621459961
    5. ' ' → logprob: -11.523702621459961
    6. 'memo' (adapté à ' memo') → logprob: -11.648702621459961
    7. ' memo' → logprob: -13.023702621459961
    8. '	return' → logprob: -13.398702621459961
    9. '
' → logprob: -13.648702621459961
    10. '    ' → logprob: -13.773702621459961

Token 191: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0028168857097625732
    2. '[' → logprob: -5.877816677093506
    3. '[(' → logprob: -12.627817153930664
    4. 'True' → logprob: -12.752817153930664
    5. 'key' → logprob: -13.127817153930664
    6. '[p' → logprob: -13.127817153930664
    7. 'return' → logprob: -14.627817153930664
    8. '=True' → logprob: -15.502817153930664
    9. '[k' → logprob: -15.627817153930664
    10. '[val' → logprob: -16.002817153930664

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02340014837682247
    2. '=' → logprob: -3.898400068283081
    3. ' =' → logprob: -6.39840030670166
    4. ']=' → logprob: -6.89840030670166
    5. ' ]' → logprob: -8.89840030670166
    6. ')' → logprob: -10.77340030670166
    7. '=True' → logprob: -11.14840030670166
    8. 'True' → logprob: -12.64840030670166
    9. 'return' → logprob: -12.89840030670166
    10. '[' → logprob: -13.64840030670166

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150994554162025
    2. ' =' → logprob: -4.018150806427002
    3. '=True' → logprob: -14.14315128326416
    4. ' ' → logprob: -15.64315128326416
    5. '[' → logprob: -16.018150329589844
    6. 'return' → logprob: -16.393150329589844
    7. '   ' → logprob: -17.268150329589844
    8. '=
' → logprob: -17.643150329589844
    9. '
' → logprob: -19.518150329589844
    10. '=False' → logprob: -19.768150329589844

Token 194: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.1424973713001236e-05
    2. ' True' → logprob: -10.500031471252441
    3. '1' → logprob: -12.625031471252441
    4. '(True' → logprob: -15.500031471252441
    5. '0' → logprob: -15.750031471252441
    6. '"' → logprob: -16.500030517578125
    7. 'False' → logprob: -16.750030517578125
    8. 'true' → logprob: -19.000030517578125
    9. 'Tr' → logprob: -19.125030517578125
    10. '   ' → logprob: -19.500030517578125

Token 195: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014731991104781628
    2. '   ' → logprob: -6.626473426818848
    3. 'return' → logprob: -9.626473426818848
    4. '<|end|>' → logprob: -10.126473426818848
    5. ' return' → logprob: -11.001473426818848
    6. '
' → logprob: -12.501473426818848
    7. '<|end|>' → logprob: -12.626473426818848
    8. '	' → logprob: -12.626473426818848
    9. '           ' → logprob: -13.001473426818848
    10. ' and' → logprob: -13.126473426818848

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014840320218354464
    2. '   ' → logprob: -6.626483917236328
    3. 'return' → logprob: -9.751483917236328
    4. '<|end|>' → logprob: -9.751483917236328
    5. ' return' → logprob: -11.001483917236328
    6. '<|end|>' → logprob: -12.001483917236328
    7. '	' → logprob: -12.126483917236328
    8. '	return' → logprob: -13.126483917236328
    9. '           ' → logprob: -13.501483917236328
    10. '	   ' → logprob: -13.626483917236328

Token 197: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05229287967085838
    2. '       ' → logprob: -3.302292823791504
    3. ' return' → logprob: -4.302292823791504
    4. '   ' → logprob: -7.427292823791504
    5. '	return' → logprob: -11.177292823791504
    6. ':return' → logprob: -13.302292823791504
    7. '
' → logprob: -14.052292823791504
    8. 'eturn' → logprob: -14.427292823791504
    9. ' ' → logprob: -15.052292823791504
    10. '{return' → logprob: -15.552292823791504

Token 198: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. '(True' → logprob: -19.375335693359375
    4. 'memo' → logprob: -22.375335693359375
    5. 'true' → logprob: -22.625335693359375
    6. 'False' → logprob: -24.000335693359375
    7. '=True' → logprob: -24.625335693359375
    8. '   ' → logprob: -25.625335693359375
    9. ' ' → logprob: -26.125335693359375
    10. '
' → logprob: -26.125335693359375

Token 199: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4712642729282379
    2. '   ' → logprob: -1.0962642431259155
    3. '#' → logprob: -3.971264362335205
    4. 'for' → logprob: -4.596264362335205
    5. '    
' → logprob: -5.221264362335205
    6. '
' → logprob: -5.221264362335205
    7. ' if' → logprob: -6.971264362335205
    8. 'next' → logprob: -7.721264362335205
    9. '  
' → logprob: -8.596263885498047
    10. ' for' → logprob: -9.721263885498047

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5832324624061584
    2. 'if' → logprob: -1.0832324028015137
    3. '    
' → logprob: -3.4582324028015137
    4. '
' → logprob: -3.5832324028015137
    5. 'next' → logprob: -4.083232402801514
    6. 'for' → logprob: -4.208232402801514
    7. '#' → logprob: -5.333232402801514
    8. ' if' → logprob: -5.958232402801514
    9. '  
' → logprob: -6.708232402801514
    10. '```' → logprob: -7.208232402801514

Token 201: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12913943827152252
    2. ' for' → logprob: -2.5041394233703613
    3. '   ' → logprob: -4.004139423370361
    4. '
' → logprob: -4.629139423370361
    5. '    
' → logprob: -4.629139423370361
    6. '  
' → logprob: -7.254139423370361
    7. '#' (adapté à ' #') → logprob: -8.00413990020752
    8. ' 
' → logprob: -8.50413990020752
    9. 'possible' → logprob: -8.50413990020752
    10. 'next' → logprob: -9.62913990020752

Token 202: ' Cher' (ID: 48756)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04368215426802635
    2. '#' → logprob: -3.168682098388672
    3. 'p' → logprob: -8.543682098388672
    4. 'possible' → logprob: -9.043682098388672
    5. 'current' → logprob: -9.293682098388672
    6. 'if' → logprob: -9.418682098388672
    7. 'next' → logprob: -9.668682098388672
    8. ' for' → logprob: -10.043682098388672
    9. '   ' → logprob: -10.293682098388672
    10. '    
' → logprob: -10.918682098388672

Token 203: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.030403243377804756
    2. 'er' → logprob: -3.6554031372070312
    3. '   ' → logprob: -5.530403137207031
    4. 'ker' → logprob: -10.155403137207031
    5. 'rer' → logprob: -11.030403137207031
    6. '#' → logprob: -11.030403137207031
    7. 'r' → logprob: -11.155403137207031
    8. 'cker' → logprob: -11.280403137207031
    9. 'che' → logprob: -11.655403137207031
    10. 'cer' → logprob: -12.655403137207031

Token 204: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4080057442188263
    2. ' for' → logprob: -1.158005714416504
    3. 'possible' → logprob: -4.658005714416504
    4. ' une' → logprob: -6.033005714416504
    5. ' next' → logprob: -6.283005714416504
    6. ' possible' → logprob: -6.533005714416504
    7. 'une' → logprob: -7.033005714416504
    8. ' un' → logprob: -7.783005714416504
    9. 'next' → logprob: -8.158005714416504
    10. 'pos' → logprob: -8.158005714416504

Token 205: ' cartes' (ID: 70753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5116395950317383
    2. 'possible' → logprob: -1.7616395950317383
    3. 'card' → logprob: -2.6366395950317383
    4. ' for' → logprob: -2.7616395950317383
    5. 'next' → logprob: -3.3866395950317383
    6. 'poss' → logprob: -4.136639595031738
    7. 'pos' → logprob: -4.761639595031738
    8. 'cart' → logprob: -5.261639595031738
    9. 'cards' → logprob: -5.386639595031738
    10. 'p' → logprob: -5.386639595031738

Token 206: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5488389730453491
    2. ' for' → logprob: -2.0488390922546387
    3. 'poss' → logprob: -2.6738390922546387
    4. 'possible' → logprob: -2.6738390922546387
    5. '   ' → logprob: -3.4238390922546387
    6. ' possibles' → logprob: -3.6738390922546387
    7. 'pos' → logprob: -3.7988390922546387
    8. 'dans' → logprob: -4.423839092254639
    9. ' disponibles' → logprob: -4.673839092254639
    10. ' in' → logprob: -4.798839092254639

Token 207: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03151162341237068
    2. 'on' → logprob: -4.1565117835998535
    3. ' p' → logprob: -4.9065117835998535
    4. 'player' → logprob: -5.7815117835998535
    5. 'le' → logprob: -6.5315117835998535
    6. 'def' → logprob: -6.6565117835998535
    7. ' on' → logprob: -7.1565117835998535
    8. ''on' → logprob: -8.281511306762695
    9. ' joueur' → logprob: -8.656511306762695
    10. '```' → logprob: -9.156511306762695

Token 208: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.029474589973688126
    2. '_pe' → logprob: -4.15447473526001
    3. 'can' → logprob: -4.52947473526001
    4. ' peut' → logprob: -7.77947473526001
    5. 'p' → logprob: -8.029474258422852
    6. '```' → logprob: -8.279474258422852
    7. '_p' → logprob: -8.404474258422852
    8. '_can' → logprob: -8.654474258422852
    9. ' ' → logprob: -9.029474258422852
    10. '   ' → logprob: -9.279474258422852

Token 209: ' poser' (ID: 73555)
  Prédit: 'poser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poser' → logprob: -0.07395639270544052
    2. 'jou' → logprob: -3.3239564895629883
    3. ' poser' → logprob: -4.198956489562988
    4. 'placer' → logprob: -4.573956489562988
    5. 'pose' → logprob: -5.198956489562988
    6. ' jouer' → logprob: -5.948956489562988
    7. 'pos' → logprob: -6.948956489562988
    8. 'play' → logprob: -7.573956489562988
    9. 'mettre' → logprob: -8.698956489562988
    10. ' pose' → logprob: -10.823956489562988

Token 210: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2570154070854187
    2. ' for' → logprob: -2.0070154666900635
    3. 'possible' → logprob: -3.2570154666900635
    4. 'for' → logprob: -3.6320154666900635
    5. ' possible' → logprob: -4.007015228271484
    6. 'available' → logprob: -5.882015228271484
    7. ' available' → logprob: -6.007015228271484
    8. ' possibles' → logprob: -7.007015228271484
    9. '    
' → logprob: -7.132015228271484
    10. ':' → logprob: -7.257015228271484

Token 211: 'do' (ID: 2408)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.677495002746582
    2. '[pos' → logprob: -1.177495002746582
    3. '[c' → logprob: -2.052495002746582
    4. 'possible' → logprob: -4.052495002746582
    5. '[' → logprob: -4.427495002746582
    6. 'for' → logprob: -5.302495002746582
    7. 'c' → logprob: -5.302495002746582
    8. 'pos' → logprob: -5.427495002746582
    9. 'card' → logprob: -6.052495002746582
    10. '[p' → logprob: -6.427495002746582

Token 212: 'it' (ID: 278)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5264919996261597
    2. 'it' → logprob: -1.6514919996261597
    3. 'nt' → logprob: -2.276492118835449
    4. 'ing' → logprob: -2.401492118835449
    5. 'ne' → logprob: -2.526492118835449
    6. '   ' → logprob: -3.026492118835449
    7. 't' → logprob: -3.401492118835449
    8. 'i' → logprob: -3.401492118835449
    9. '_c' → logprob: -3.651492118835449
    10. 'card' → logprob: -4.151492118835449

Token 213: ' poser' (ID: 73555)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.662415087223053
    2. ' not' → logprob: -2.537415027618408
    3. ' in' → logprob: -2.787415027618408
    4. 'not' → logprob: -3.037415027618408
    5. ' for' → logprob: -3.162415027618408
    6. ')' → logprob: -3.162415027618408
    7. 'be' → logprob: -3.412415027618408
    8. 'for' → logprob: -3.787415027618408
    9. '   ' → logprob: -4.037415027618408
    10. ' return' → logprob: -4.412415027618408

Token 214: ' si' (ID: 1784)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.416158527135849
    2. ')' → logprob: -2.166158437728882
    3. 'card' → logprob: -3.666158437728882
    4. ' any' → logprob: -3.666158437728882
    5. 'pos' → logprob: -3.791158437728882
    6. 'next' → logprob: -4.166158676147461
    7. 'for' → logprob: -4.416158676147461
    8. '=' → logprob: -4.541158676147461
    9. ' =' → logprob: -4.666158676147461
    10. 'une' → logprob: -4.666158676147461

Token 215: ' possible' (ID: 4149)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9529278874397278
    2. ' len' → logprob: -1.452927827835083
    3. ' any' → logprob: -2.327927827835083
    4. 'can' → logprob: -2.577927827835083
    5. 'any' → logprob: -3.202927827835083
    6. 'p' → logprob: -3.827927827835083
    7. ' not' → logprob: -3.952927827835083
    8. ' can' → logprob: -3.952927827835083
    9. ' card' → logprob: -4.077928066253662
    10. ' p' → logprob: -4.327928066253662

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014155867509543896
    2. ')
' → logprob: -4.639155864715576
    3. '):' → logprob: -5.889155864715576
    4. '):
' → logprob: -7.264155864715576
    5. '   ' → logprob: -8.139156341552734
    6. 'possible' → logprob: -8.264156341552734
    7. ' for' → logprob: -9.139156341552734
    8. 'for' → logprob: -9.389156341552734
    9. ')
' → logprob: -10.014156341552734
    10. ' possible' → logprob: -10.639156341552734

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8954203724861145
    2. ' for' → logprob: -1.1454203128814697
    3. 'possible' → logprob: -2.1454203128814697
    4. ' possible' → logprob: -2.6454203128814697
    5. 'for' → logprob: -3.3954203128814697
    6. ' next' → logprob: -4.395420551300049
    7. ' can' → logprob: -5.520420551300049
    8. ' valid' → logprob: -5.520420551300049
    9. ' possibles' → logprob: -5.770420551300049
    10. ' moves' → logprob: -5.770420551300049

Token 218: ' playable' (ID: 131447)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3356671631336212
    2. ' possible' → logprob: -1.5856671333312988
    3. ' moves' → logprob: -4.460667133331299
    4. ' playable' → logprob: -4.585667133331299
    5. ' valid' → logprob: -4.835667133331299
    6. 'poss' → logprob: -4.835667133331299
    7. ' possibles' → logprob: -4.960667133331299
    8. ' can' → logprob: -5.085667133331299
    9. 'moves' → logprob: -5.210667133331299
    10. 'pos' → logprob: -5.585667133331299

Token 219: ' =' (ID: 314)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.46502259373664856
    2. ' =' → logprob: -1.4650225639343262
    3. '=' → logprob: -1.9650225639343262
    4. 's' → logprob: -7.590022563934326
    5. 'cards' → logprob: -9.965023040771484
    6. '_' → logprob: -10.090023040771484
    7. '=[]' → logprob: -11.090023040771484
    8. '=_' → logprob: -11.840023040771484
    9. 'Cards' → logprob: -12.215023040771484
    10. 'able' → logprob: -12.340023040771484

Token 220: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05304518714547157
    2. '[p' → logprob: -3.3030452728271484
    3. '[t' → logprob: -5.303045272827148
    4. '[i' → logprob: -6.178045272827148
    5. '[list' → logprob: -6.303045272827148
    6. '[a' → logprob: -7.053045272827148
    7. ' [' → logprob: -7.178045272827148
    8. '[item' → logprob: -7.178045272827148
    9. '[pos' → logprob: -7.553045272827148
    10. '[c' → logprob: -7.553045272827148

Token 221: 'c' (ID: 66)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.03810954466462135
    2. 'c' → logprob: -3.288109540939331
    3. ' card' → logprob: -9.66310977935791
    4. ' c' → logprob: -13.66310977935791
    5. 'x' → logprob: -13.78810977935791
    6. '(card' → logprob: -14.16310977935791
    7. 'cards' → logprob: -14.78810977935791
    8. '	card' → logprob: -15.16310977935791
    9. '_card' → logprob: -15.41310977935791
    10. 'Card' → logprob: -15.66310977935791

Token 222: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009765060618519783
    2. 'for' → logprob: -4.634765148162842
    3. ' ' → logprob: -12.509764671325684
    4. ' in' → logprob: -12.634764671325684
    5. 'card' → logprob: -13.509764671325684
    6. '
' → logprob: -15.384764671325684
    7. ' c' → logprob: -15.759764671325684
    8. 'c' → logprob: -16.134765625
    9. ' card' → logprob: -16.509765625
    10. ' 
' → logprob: -16.634765625

Token 223: ' c' (ID: 274)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.35423794388771057
    2. ' c' → logprob: -1.4792379140853882
    3. 'p' → logprob: -3.2292380332946777
    4. 'c' → logprob: -3.4792380332946777
    5. ' in' → logprob: -11.22923755645752
    6. '_c' → logprob: -11.35423755645752
    7. '_p' → logprob: -11.60423755645752
    8. '_' → logprob: -12.35423755645752
    9. ' ' → logprob: -12.41673755645752
    10. ' ' → logprob: -12.60423755645752

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3850979804992676
    2. 'in' → logprob: -1.3850979804992676
    3. 'p' → logprob: -3.0100979804992676
    4. ' p' → logprob: -4.010097980499268
    5. 'c' → logprob: -6.635097980499268
    6. ' c' → logprob: -8.38509750366211
    7. '_p' → logprob: -8.76009750366211
    8. ' ' → logprob: -9.63509750366211
    9. '_hand' → logprob: -10.88509750366211
    10. ' _' → logprob: -11.13509750366211

Token 225: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0067167943343520164
    2. ' p' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.25671672821045
    4. '
' → logprob: -15.50671672821045
    5. '   ' → logprob: -15.63171672821045
    6. 'c' → logprob: -17.006717681884766
    7. '	p' → logprob: -17.006717681884766
    8. '_p' → logprob: -17.069217681884766
    9. 'range' → logprob: -17.069217681884766
    10. '  ' → logprob: -17.194217681884766

Token 226: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -2.2200749754119897e-06
    2. 'hand' → logprob: -13.125001907348633
    3. 'Hand' → logprob: -17.500001907348633
    4. 'c' → logprob: -17.625001907348633
    5. ' _' → logprob: -17.625001907348633
    6. '_HAND' → logprob: -17.750001907348633
    7. '_h' → logprob: -18.000001907348633
    8. '_' → logprob: -18.500001907348633
    9. '\' → logprob: -18.500001907348633
    10. '```' → logprob: -18.625001907348633

Token 227: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.001505578518845141
    2. 'if' → logprob: -6.501505374908447
    3. ' ' → logprob: -13.376505851745605
    4. '   ' → logprob: -13.501505851745605
    5. '    ' → logprob: -15.876505851745605
    6. '  ' → logprob: -16.50150489807129
    7. '	if' → logprob: -17.37650489807129
    8. '
' → logprob: -17.62650489807129
    9. '       ' → logprob: -18.00150489807129
    10. '        ' → logprob: -18.37650489807129

Token 228: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.005239445250481367
    2. ' can' → logprob: -5.255239486694336
    3. 'c' → logprob: -12.380239486694336
    4. '(can' → logprob: -13.880239486694336
    5. '	can' → logprob: -16.005239486694336
    6. ' c' → logprob: -16.130239486694336
    7. '   ' → logprob: -16.505239486694336
    8. ' ' → logprob: -16.505239486694336
    9. '
' → logprob: -17.005239486694336
    10. '  ' → logprob: -17.630239486694336

Token 229: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -2.1008713702030946e-06
    2. ' _' → logprob: -14.250001907348633
    3. '_' → logprob: -14.375001907348633
    4. 'place' → logprob: -15.125001907348633
    5. '_can' → logprob: -15.625001907348633
    6. '_put' → logprob: -16.125001907348633
    7. '_places' → logprob: -16.125001907348633
    8. '_play' → logprob: -17.125001907348633
    9. '_have' → logprob: -17.375001907348633
    10. '_raise' → logprob: -17.750001907348633

Token 230: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.704065213445574e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -13.875046730041504
    4. 'c' → logprob: -14.750046730041504
    5. '(card' → logprob: -15.875046730041504
    6. '(
' → logprob: -17.00004768371582
    7. ')' → logprob: -17.62504768371582
    8. ')c' → logprob: -18.00004768371582
    9. '©' → logprob: -18.37504768371582
    10. '
' → logprob: -18.37504768371582

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012015394167974591
    2. ' ,' → logprob: -7.001201629638672
    3. ',c' → logprob: -8.251201629638672
    4. 'c' → logprob: -12.126201629638672
    5. '(table' → logprob: -12.126201629638672
    6. 'table' → logprob: -12.501201629638672
    7. ',
' → logprob: -12.501201629638672
    8. ' c' → logprob: -12.626201629638672
    9. ',set' → logprob: -13.126201629638672
    10. ')' → logprob: -13.126201629638672

Token 232: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.008727321401238441
    2. ' table' → logprob: -4.758727550506592
    3. 'set' → logprob: -9.258727073669434
    4. ' set' → logprob: -11.633727073669434
    5. '   ' → logprob: -13.008727073669434
    6. '{' → logprob: -13.758727073669434
    7. ' ' → logprob: -13.883727073669434
    8. '(table' → logprob: -14.008727073669434
    9. '	table' → logprob: -14.133727073669434
    10. '
' → logprob: -14.758727073669434

Token 233: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.6060808522743173e-05
    2. ')' → logprob: -11.500025749206543
    3. ' )' → logprob: -12.000025749206543
    4. ')]
' → logprob: -12.250025749206543
    5. ']' → logprob: -13.250025749206543
    6. ')]

' → logprob: -13.375025749206543
    7. '   ' → logprob: -13.625025749206543
    8. ')]
' → logprob: -15.750025749206543
    9. '))' → logprob: -16.25002670288086
    10. ')])' → logprob: -16.87502670288086

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15489572286605835
    2. ' if' → logprob: -2.029895782470703
    3. 'if' → logprob: -4.779895782470703
    4. '
' → logprob: -6.654895782470703
    5. ' for' → logprob: -7.154895782470703
    6. '<|end|>' → logprob: -7.279895782470703
    7. '    
' → logprob: -8.029895782470703
    8. '  
' → logprob: -8.904895782470703
    9. ' 
' → logprob: -9.029895782470703
    10. ')' → logprob: -9.404895782470703

Token 235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19370843470096588
    2. ' if' → logprob: -1.8187084197998047
    3. '   ' → logprob: -4.318708419799805
    4. '
' → logprob: -8.943708419799805
    5. ':' → logprob: -9.068708419799805
    6. '    
' → logprob: -9.193708419799805
    7. 'If' → logprob: -10.193708419799805
    8. ')' → logprob: -10.818708419799805
    9. ' ' → logprob: -10.818708419799805
    10. '	if' → logprob: -10.818708419799805

Token 236: ' playable' (ID: 131447)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.41109558939933777
    2. ' len' → logprob: -2.03609561920166
    3. 'len' → logprob: -2.53609561920166
    4. 'not' → logprob: -2.78609561920166
    5. ' playable' → logprob: -2.91109561920166
    6. 'play' → logprob: -4.53609561920166
    7. ' ' → logprob: -8.97359561920166
    8. 'played' → logprob: -9.09859561920166
    9. ' play' → logprob: -9.66109561920166
    10. 'Playable' → logprob: -9.91109561920166

Token 237: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6007573008537292
    2. ':' → logprob: -0.9757573008537292
    3. ' ==' → logprob: -2.600757360458374
    4. ' :' → logprob: -8.350757598876953
    5. '=' → logprob: -9.475757598876953
    6. '):' → logprob: -9.850757598876953
    7. ')' → logprob: -10.225757598876953
    8. ')==' → logprob: -10.850757598876953
    9. '!=' → logprob: -11.100757598876953
    10. 'else' → logprob: -12.225757598876953

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18704718351364136
    2. ':' → logprob: -2.437047243118286
    3. ' for' → logprob: -3.312047243118286
    4. ':
' → logprob: -3.312047243118286
    5. '   ' → logprob: -4.812047004699707
    6. 'for' → logprob: -7.437047004699707
    7. '
' → logprob: -7.562047004699707
    8. '):
' → logprob: -7.687047004699707
    9. ',' → logprob: -8.937047004699707
    10. '):' → logprob: -9.187047004699707

Token 239: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23482128977775574
    2. 'for' → logprob: -1.6098213195800781
    3. '       ' → logprob: -4.734821319580078
    4. '   ' → logprob: -7.859821319580078
    5. '
' → logprob: -8.734821319580078
    6. '	for' → logprob: -11.734821319580078
    7. '        
' → logprob: -11.734821319580078
    8. '    
' → logprob: -12.609821319580078
    9. ' ' → logprob: -12.609821319580078
    10. '  
' → logprob: -12.734821319580078

Token 240: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11324743926525116
    2. ' for' → logprob: -2.2382473945617676
    3. '       ' → logprob: -7.863247394561768
    4. '   ' → logprob: -10.863247871398926
    5. '
' → logprob: -11.488247871398926
    6. 'return' → logprob: -12.363247871398926
    7. '           ' → logprob: -13.613247871398926
    8. '#' → logprob: -13.613247871398926
    9. '        
' → logprob: -13.738247871398926
    10. '	for' → logprob: -14.363247871398926

Token 241: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3602105677127838
    2. '_hand' → logprob: -1.4852105379104614
    3. ' for' → logprob: -2.735210657119751
    4. '   ' → logprob: -5.360210418701172
    5. 'hand' → logprob: -6.610210418701172
    6. 'def' → logprob: -6.985210418701172
    7. ' hand' → logprob: -7.860210418701172
    8. 'or' → logprob: -7.985210418701172
    9. '_for' → logprob: -8.110210418701172
    10. 'and' → logprob: -8.110210418701172

Token 242: ' poser' (ID: 73555)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16326022148132324
    2. ' for' → logprob: -2.6632602214813232
    3. 'all' → logprob: -3.1632602214813232
    4. '       ' → logprob: -4.538260459899902
    5. ' all' → logprob: -4.538260459899902
    6. '   ' → logprob: -4.788260459899902
    7. 'poser' → logprob: -5.538260459899902
    8. 'forcer' → logprob: -7.038260459899902
    9. 'pos' → logprob: -7.413260459899902
    10. 'pose' → logprob: -7.663260459899902

Token 243: ' un' (ID: 537)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.359746515750885
    2. 'for' → logprob: -1.3597464561462402
    3. '       ' → logprob: -3.1097464561462402
    4. '           ' → logprob: -8.234746932983398
    5. '
' → logprob: -8.484746932983398
    6. '   ' → logprob: -9.609746932983398
    7. ',' → logprob: -9.734746932983398
    8. ':
' → logprob: -9.859746932983398
    9. ':' → logprob: -10.484746932983398
    10. '):
' → logprob: -11.109746932983398

Token 244: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2694282531738281
    2. 'e' → logprob: -2.644428253173828
    3. 'card' → logprob: -2.769428253173828
    4. ' c' → logprob: -3.894428253173828
    5. ' card' → logprob: -4.144428253173828
    6. ' des' → logprob: -4.519428253173828
    7. 'token' → logprob: -4.519428253173828
    8. ' for' → logprob: -4.644428253173828
    9. 'play' → logprob: -5.269428253173828
    10. 'for' → logprob: -5.269428253173828

Token 245: ' ces' (ID: 10532)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.25166022777557373
    2. ' playable' → logprob: -2.2516603469848633
    3. 'ces' → logprob: -2.7516603469848633
    4. ' ces' → logprob: -3.5016603469848633
    5. ' play' → logprob: -4.001660346984863
    6. 'jou' → logprob: -6.501660346984863
    7. '(play' → logprob: -6.626660346984863
    8. 's' → logprob: -7.376660346984863
    9. 'ses' → logprob: -8.376660346984863
    10. 'Playable' → logprob: -8.626660346984863

Token 246: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.8529804944992065
    2. ' cards' → logprob: -1.6029804944992065
    3. 'cards' → logprob: -1.9779804944992065
    4. 'cart' → logprob: -2.352980613708496
    5. 'c' → logprob: -2.477980613708496
    6. 'play' → logprob: -3.477980613708496
    7. ' playable' → logprob: -4.852980613708496
    8. ' ' → logprob: -5.477980613708496
    9. ' c' → logprob: -6.102980613708496
    10. ' play' → logprob: -6.352980613708496

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1513904631137848
    2. ' for' → logprob: -2.026390552520752
    3. '   ' → logprob: -5.776390552520752
    4. 'for' → logprob: -6.526390552520752
    5. ',' → logprob: -6.776390552520752
    6. ':' → logprob: -7.026390552520752
    7. ':
' → logprob: -7.151390552520752
    8. '
' → logprob: -7.276390552520752
    9. '           ' → logprob: -9.651390075683594
    10. ' and' → logprob: -9.901390075683594

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23056352138519287
    2. ' for' → logprob: -1.6055635213851929
    3. '   ' → logprob: -5.980563640594482
    4. 'for' → logprob: -7.105563640594482
    5. ':' → logprob: -7.355563640594482
    6. '
' → logprob: -7.730563640594482
    7. ',' → logprob: -8.355563163757324
    8. ':
' → logprob: -8.605563163757324
    9. '        
' → logprob: -9.730563163757324
    10. ' and' → logprob: -10.105563163757324

Token 249: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048623472452163696
    2. ' for' → logprob: -3.048623561859131
    3. '   ' → logprob: -10.548623085021973
    4. '       ' → logprob: -11.798623085021973
    5. '
' → logprob: -13.298623085021973
    6. 'return' → logprob: -15.423623085021973
    7. '```' → logprob: -16.29862403869629
    8. '	for' → logprob: -16.54862403869629
    9. '    
' → logprob: -16.67362403869629
    10. '        
' → logprob: -17.04862403869629

Token 250: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16033592820167542
    2. ' for' → logprob: -1.910335898399353
    3. '   ' → logprob: -9.285335540771484
    4. '       ' → logprob: -10.910335540771484
    5. '
' → logprob: -15.785335540771484
    6. '	for' → logprob: -15.910335540771484
    7. '  ' → logprob: -16.035335540771484
    8. 'return' → logprob: -16.285335540771484
    9. '        
' → logprob: -16.660335540771484
    10. '    
' → logprob: -16.785335540771484

Token 251: ' gagne' (ID: 141776)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3949914574623108
    2. ' for' → logprob: -1.144991397857666
    3. '_hand' → logprob: -5.144991397857666
    4. '   ' → logprob: -7.394991397857666
    5. ' hand' → logprob: -7.644991397857666
    6. '       ' → logprob: -8.644991874694824
    7. 'def' → logprob: -8.769991874694824
    8. 'or' → logprob: -9.144991874694824
    9. 'hand' → logprob: -9.144991874694824
    10. 's' → logprob: -9.269991874694824

Token 252: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.045752815902233124
    2. ' for' → logprob: -3.295752763748169
    3. 'if' → logprob: -5.795753002166748
    4. 'for' → logprob: -6.545753002166748
    5. '       ' → logprob: -7.170753002166748
    6. '   ' → logprob: -7.170753002166748
    7. ' only' → logprob: -7.420753002166748
    8. ' =' → logprob: -8.04575252532959
    9. ' True' → logprob: -8.54575252532959
    10. ':' → logprob: -9.17075252532959

Token 253: ' y' (ID: 342)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.20141547918319702
    2. 'any' → logprob: -1.7014155387878418
    3. '   ' → logprob: -13.326415061950684
    4. '    ' → logprob: -15.576415061950684
    5. ' ' → logprob: -16.201416015625
    6. ' all' → logprob: -16.951416015625
    7. '  ' → logprob: -16.951416015625
    8. '_any' → logprob: -17.451416015625
    9. ' cualquier' → logprob: -17.951416015625
    10. 'all' → logprob: -18.326416015625

Token 254: ' a' (ID: 261)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.5682076811790466
    2. ' any' → logprob: -1.9432077407836914
    3. '```' → logprob: -2.3182077407836914
    4. 'ields' → logprob: -2.6932077407836914
    5. ' for' → logprob: -3.3182077407836914
    6. 'ield' → logprob: -4.193207740783691
    7. 'eux' → logprob: -4.568207740783691
    8. 'for' → logprob: -4.818207740783691
    9. 'ou' → logprob: -4.943207740783691
    10. 'a' → logprob: -5.193207740783691

Token 255: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.01769399084150791
    2. ' at' → logprob: -4.767693996429443
    3. ' any' → logprob: -4.892693996429443
    4. ' a' → logprob: -7.392693996429443
    5. 'au' → logprob: -7.517693996429443
    6. ' un' → logprob: -8.892693519592285
    7. ' ' → logprob: -9.142693519592285
    8. 'any' → logprob: -10.767693519592285
    9. ''au' → logprob: -11.017693519592285
    10. ' one' → logprob: -11.267693519592285

Token 256: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.40250399708747864
    2. ' moins' → logprob: -1.1525039672851562
    3. '```' → logprob: -4.902503967285156
    4. 'n' → logprob: -5.652503967285156
    5. '
' → logprob: -6.902503967285156
    6. 'une' → logprob: -7.652503967285156
    7. 'au' → logprob: -7.777503967285156
    8. 'u' → logprob: -8.152503967285156
    9. 'mo' → logprob: -8.152503967285156
    10. ' moindre' → logprob: -8.277503967285156

Token 257: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.058341383934021
    2. 'une' → logprob: -1.183341383934021
    3. ' une' → logprob: -1.558341383934021
    4. 'un' → logprob: -2.4333415031433105
    5. ' one' → logprob: -3.0583415031433105
    6. ''une' → logprob: -8.058341026306152
    7. '```' → logprob: -8.308341026306152
    8. 'one' → logprob: -8.433341026306152
    9. ''un' → logprob: -8.433341026306152
    10. ' ' → logprob: -8.433341026306152

Token 258: ' choix' (ID: 28642)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9247270822525024
    2. 'play' → logprob: -1.0497270822525024
    3. ' coup' → logprob: -1.6747270822525024
    4. ' playable' → logprob: -4.174726963043213
    5. 'move' → logprob: -4.549726963043213
    6. ' c' → logprob: -4.924726963043213
    7. ' move' → logprob: -5.174726963043213
    8. ' choix' → logprob: -5.174726963043213
    9. 'card' → logprob: -5.924726963043213
    10. ' ' → logprob: -5.924726963043213

Token 259: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2411065101623535
    2. ' c' → logprob: -1.4911065101623535
    3. ' in' → logprob: -1.8661065101623535
    4. '       ' → logprob: -2.4911065101623535
    5. ' qui' → logprob: -3.1161065101623535
    6. ' that' → logprob: -3.4911065101623535
    7. ' de' → logprob: -3.6161065101623535
    8. 'c' → logprob: -3.7411065101623535
    9. '   ' → logprob: -3.8661065101623535
    10. ' pour' → logprob: -3.9911065101623535

Token 260: ' mène' (ID: 193135)
  Prédit: ' leads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leads' → logprob: -1.1835746765136719
    2. 'perm' → logprob: -1.1835746765136719
    3. ' permet' → logprob: -2.308574676513672
    4. ' mène' → logprob: -2.433574676513672
    5. 'm' → logprob: -3.183574676513672
    6. '   ' → logprob: -3.808574676513672
    7. 'allows' → logprob: -3.808574676513672
    8. '```' → logprob: -3.933574676513672
    9. ' garantit' → logprob: -4.433574676513672
    10. 'return' → logprob: -4.683574676513672

Token 261: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.31059589982032776
    2. 'à' → logprob: -1.6855958700180054
    3. ' to' → logprob: -3.435595989227295
    4. ' au' → logprob: -3.935595989227295
    5. 'to' → logprob: -4.310595989227295
    6. 'au' → logprob: -4.810595989227295
    7. ' True' → logprob: -5.435595989227295
    8. ' ' → logprob: -6.310595989227295
    9. '```' → logprob: -6.685595989227295
    10. ' a' → logprob: -8.435595512390137

Token 262: ' sa' (ID: 880)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3134903609752655
    2. ' True' → logprob: -1.313490390777588
    3. 'la' → logprob: -9.56348991394043
    4. 'vict' → logprob: -10.06348991394043
    5. ' victoire' → logprob: -10.43848991394043
    6. 'v' → logprob: -10.68848991394043
    7. ' la' → logprob: -10.68848991394043
    8. ' victory' → logprob: -11.06348991394043
    9. 'un' → logprob: -11.93848991394043
    10. ' une' → logprob: -12.31348991394043

Token 263: ' victoire' (ID: 96596)
  Prédit: ' victoire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' victoire' → logprob: -0.05647707358002663
    2. 'vic' → logprob: -3.4314770698547363
    3. 'vict' → logprob: -3.8064770698547363
    4. 'gain' → logprob: -8.806477546691895
    5. ' victory' → logprob: -10.056477546691895
    6. 'v' → logprob: -10.181477546691895
    7. 'g' → logprob: -10.681477546691895
    8. 'win' → logprob: -11.181477546691895
    9. ' vic' → logprob: -11.181477546691895
    10. 'succ' → logprob: -11.681477546691895

Token 264: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3968408703804016
    2. '   ' → logprob: -1.3968408107757568
    3. '       ' → logprob: -3.146840810775757
    4. ':' → logprob: -4.021841049194336
    5. 'for' → logprob: -5.021841049194336
    6. ',' → logprob: -5.646841049194336
    7. ' if' → logprob: -5.646841049194336
    8. ' and' → logprob: -6.646841049194336
    9. ' :' → logprob: -7.396841049194336
    10. ' =' → logprob: -7.646841049194336

Token 265: ' quel' (ID: 10613)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4000220000743866
    2. '   ' → logprob: -1.900022029876709
    3. '       ' → logprob: -1.900022029876709
    4. 'for' → logprob: -3.650022029876709
    5. '	for' → logprob: -6.775022029876709
    6. '    
' → logprob: -7.025022029876709
    7. '	' → logprob: -8.27502155303955
    8. '    ' → logprob: -8.52502155303955
    9. ' ' → logprob: -8.52502155303955
    10. '
' → logprob: -8.52502155303955

Token 266: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4687967896461487
    2. 'que' → logprob: -1.218796730041504
    3. 'qu' → logprob: -2.843796730041504
    4. 'ques' → logprob: -4.343796730041504
    5. ' qu' → logprob: -6.218796730041504
    6. 'con' → logprob: -6.218796730041504
    7. 'quel' → logprob: -6.468796730041504
    8. '   ' → logprob: -6.718796730041504
    9. '```' → logprob: -8.343796730041504
    10. '       ' → logprob: -9.093796730041504

Token 267: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.18375061452388763
    2. 'so' → logprob: -1.8087506294250488
    3. '       ' → logprob: -6.433750629425049
    4. '   ' → logprob: -7.433750629425049
    5. '_so' → logprob: -7.558750629425049
    6. '     ' → logprob: -7.933750629425049
    7. 'ce' → logprob: -8.30875015258789
    8. ' ' → logprob: -8.55875015258789
    9. '```' → logprob: -9.18375015258789
    10. ' ce' → logprob: -9.43375015258789

Token 268: ' ce' (ID: 2357)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.314491629600525
    2. 'l' → logprob: -1.439491629600525
    3. ' le' → logprob: -1.439491629600525
    4. 'le' → logprob: -1.439491629600525
    5. ' celui' → logprob: -4.3144917488098145
    6. 'cel' → logprob: -5.4394917488098145
    7. ' ' → logprob: -7.5644917488098145
    8. ' ce' → logprob: -7.8144917488098145
    9. ' la' → logprob: -7.8144917488098145
    10. ' o' → logprob: -8.189491271972656

Token 269: ' que' (ID: 661)
  Prédit: ' choix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choix' → logprob: -0.6282601952552795
    2. 'cho' → logprob: -0.8782601952552795
    3. 'o' → logprob: -4.003260135650635
    4. 'l' → logprob: -4.878260135650635
    5. 'c' → logprob: -5.003260135650635
    6. 'choice' → logprob: -5.628260135650635
    7. 'play' → logprob: -6.503260135650635
    8. '```' → logprob: -6.753260135650635
    9. 's' → logprob: -6.878260135650635
    10. ' choice' → logprob: -6.878260135650635

Token 270: ' fait' (ID: 7473)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4003109037876129
    2. 'l' → logprob: -2.02531099319458
    3. ' fasse' → logprob: -2.52531099319458
    4. 'f' → logprob: -3.02531099319458
    5. ' fait' → logprob: -3.77531099319458
    6. ' chois' → logprob: -4.65031099319458
    7. ' ' → logprob: -5.02531099319458
    8. ' joue' → logprob: -5.02531099319458
    9. 'fait' → logprob: -5.27531099319458
    10. ' f' → logprob: -5.52531099319458

Token 271: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.051594581454992294
    2. 'l' → logprob: -3.0515944957733154
    3. ' o' → logprob: -6.0515947341918945
    4. 'o' → logprob: -8.051594734191895
    5. ' ' → logprob: -8.426594734191895
    6. '   ' → logprob: -10.301594734191895
    7. '  ' → logprob: -10.551594734191895
    8. '    ' → logprob: -10.676594734191895
    9. '     ' → logprob: -11.551594734191895
    10. ' ' → logprob: -12.801594734191895

Token 272: ''ad' (ID: 36162)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.11659494787454605
    2. ' o' → logprob: -2.4915950298309326
    3. 'p' → logprob: -4.4915947914123535
    4. ''autre' → logprob: -5.6165947914123535
    5. ''o' → logprob: -5.7415947914123535
    6. ' p' → logprob: -5.9915947914123535
    7. 'l' → logprob: -6.4915947914123535
    8. ' joueur' → logprob: -6.9915947914123535
    9. 'op' → logprob: -7.2415947914123535
    10. ' opponent' → logprob: -7.3665947914123535

Token 273: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.2144983559846878
    2. 'v' → logprob: -2.089498281478882
    3. 'verse' → logprob: -2.964498281478882
    4. 'p' → logprob: -5.714498519897461
    5. ' vers' → logprob: -5.714498519897461
    6. 'ver' → logprob: -6.214498519897461
    7. ' p' → logprob: -6.589498519897461
    8. '
' → logprob: -6.839498519897461
    9. '   ' → logprob: -7.339498519897461
    10. 'd' → logprob: -7.776998519897461

Token 274: 'aire' (ID: 8189)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.1870174407958984
    2. 'oi' → logprob: -1.3120174407958984
    3. 'oint' → logprob: -1.9370174407958984
    4. 'ant' → logprob: -2.6870174407958984
    5. 'u' → logprob: -3.0620174407958984
    6. 'p' → logprob: -3.0620174407958984
    7. 'o' → logprob: -3.1870174407958984
    8. 'il' → logprob: -4.437017440795898
    9. 'unt' → logprob: -4.437017440795898
    10. 'd' → logprob: -5.312017440795898

Token 275: ' ensuite' (ID: 39713)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25937172770500183
    2. '   ' → logprob: -1.7593717575073242
    3. ':
' → logprob: -3.634371757507324
    4. ',' → logprob: -4.259371757507324
    5. '.' → logprob: -5.634371757507324
    6. '       ' → logprob: -6.134371757507324
    7. ' :' → logprob: -6.384371757507324
    8. ' for' → logprob: -6.384371757507324
    9. ' :
' → logprob: -6.884371757507324
    10. '<|end|>' → logprob: -7.259371757507324

Token 276: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22167490422725677
    2. '   ' → logprob: -1.846674919128418
    3. '       ' → logprob: -3.721674919128418
    4. 'for' → logprob: -4.221674919128418
    5. ':' → logprob: -7.846674919128418
    6. '    
' → logprob: -7.971674919128418
    7. ',' → logprob: -8.346674919128418
    8. '<|end|>' → logprob: -8.596674919128418
    9. '
' → logprob: -8.721674919128418
    10. '	for' → logprob: -8.971674919128418

Token 277: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8521608114242554
    2. '       ' → logprob: -1.2271608114242554
    3. ' for' → logprob: -1.3521608114242554
    4. '<|end|>' → logprob: -4.602160930633545
    5. 'for' → logprob: -5.227160930633545
    6. ':' → logprob: -6.102160930633545
    7. ')' → logprob: -7.227160930633545
    8. '<|end|>' → logprob: -7.477160930633545
    9. '
' → logprob: -7.602160930633545
    10. '        
' → logprob: -8.102160453796387

Token 278: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31777605414390564
    2. 'for' (adapté à ' for') → logprob: -1.317776083946228
    3. '   ' → logprob: -5.442776203155518
    4. '       ' → logprob: -8.69277572631836
    5. '	for' → logprob: -12.31777572631836
    6. '
' → logprob: -13.19277572631836
    7. '    
' → logprob: -13.69277572631836
    8. '        
' → logprob: -14.31777572631836
    9. '  ' → logprob: -15.69277572631836
    10. ' 
' → logprob: -15.81777572631836

Token 279: ' c' (ID: 274)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.2035130262374878
    2. ' card' → logprob: -1.8285130262374878
    3. 'c' → logprob: -3.8285131454467773
    4. ' c' → logprob: -6.453513145446777
    5. 'play' → logprob: -9.953513145446777
    6. 'i' → logprob: -10.703513145446777
    7. ' i' → logprob: -11.203513145446777
    8. ' play' → logprob: -11.328513145446777
    9. ' move' → logprob: -11.328513145446777
    10. '   ' → logprob: -11.453513145446777

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001100683817639947
    2. 'in' → logprob: -6.876100540161133
    3. ' ' → logprob: -10.126100540161133
    4. '  ' → logprob: -11.626100540161133
    5. '_in' → logprob: -12.501100540161133
    6. 's' → logprob: -12.626100540161133
    7. ',' → logprob: -12.876100540161133
    8. '<|end|>' → logprob: -13.251100540161133
    9. ' i' → logprob: -13.376100540161133
    10. '_' → logprob: -14.001100540161133

Token 281: ' playable' (ID: 131447)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.001940057729370892
    2. ' playable' → logprob: -6.2519402503967285
    3. 'played' → logprob: -12.37693977355957
    4. 'Playable' → logprob: -12.37693977355957
    5. '   ' → logprob: -14.50193977355957
    6. ' play' → logprob: -14.75193977355957
    7. 'pay' → logprob: -15.25193977355957
    8. ' ' → logprob: -15.25193977355957
    9. 'player' → logprob: -15.37693977355957
    10. 'playing' → logprob: -15.37693977355957

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008730276487767696
    2. ':
' → logprob: -4.758730411529541
    3. ' :' → logprob: -9.883729934692383
    4. '):' → logprob: -10.883729934692383
    5. '):
' → logprob: -11.008729934692383
    6. ',' → logprob: -11.258729934692383
    7. ' :
' → logprob: -11.883729934692383
    8. '   ' → logprob: -12.633729934692383
    9. ':
' → logprob: -12.883729934692383
    10. ')' → logprob: -13.383729934692383

Token 283: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012558390386402607
    2. ' new' → logprob: -4.887558460235596
    3. ':' → logprob: -7.137558460235596
    4. '           ' → logprob: -7.387558460235596
    5. '        
' → logprob: -7.387558460235596
    6. '<|end|>' → logprob: -7.387558460235596
    7. ':
' → logprob: -8.262557983398438
    8. '   ' → logprob: -8.387557983398438
    9. ',' → logprob: -8.512557983398438
    10. ' 
' → logprob: -8.637557983398438

Token 284: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3162272572517395
    2. 'new' (adapté à ' new') → logprob: -1.3162271976470947
    3. '           ' → logprob: -6.816227436065674
    4. 'next' → logprob: -7.566227436065674
    5. ' next' → logprob: -7.816227436065674
    6. '               ' → logprob: -8.316226959228516
    7. ' p' → logprob: -8.566226959228516
    8. 'p' → logprob: -8.566226959228516
    9. '   ' → logprob: -8.816226959228516
    10. 'n' → logprob: -10.566226959228516

Token 285: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.00016957100888248533
    2. '_p' → logprob: -9.62516975402832
    3. 'table' → logprob: -9.62516975402832
    4. '_hand' → logprob: -10.62516975402832
    5. '_' → logprob: -11.75016975402832
    6. '   ' → logprob: -13.62516975402832
    7. ' =' → logprob: -14.00016975402832
    8. '_c' → logprob: -14.62516975402832
    9. '_card' → logprob: -14.62516975402832
    10. '_tables' → logprob: -14.62516975402832

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020849853754044
    2. ' =' → logprob: -2.3502085208892822
    3. '=set' → logprob: -13.850208282470703
    4. 'add' → logprob: -15.100208282470703
    5. 'table' → logprob: -15.350208282470703
    6. '.add' → logprob: -16.100208282470703
    7. ',' → logprob: -16.725208282470703
    8. ')' → logprob: -16.850208282470703
    9. 's' → logprob: -17.100208282470703
    10. ' ' → logprob: -17.100208282470703

Token 287: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.017773866653442383
    2. ' table' → logprob: -4.142773628234863
    3. 'set' → logprob: -6.642773628234863
    4. ' set' → logprob: -7.767773628234863
    5. '   ' → logprob: -12.767773628234863
    6. ' ' → logprob: -12.892773628234863
    7. '{' → logprob: -13.142773628234863
    8. '	table' → logprob: -13.642773628234863
    9. 'tuple' → logprob: -14.392773628234863
    10. 'tab' → logprob: -15.017773628234863

Token 288: ' |' (ID: 1022)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.6657547354698181
    2. ' |' → logprob: -1.415754795074463
    3. '|' → logprob: -1.665754795074463
    4. '.copy' → logprob: -2.915754795074463
    5. '.' → logprob: -8.915754318237305
    6. 'union' → logprob: -10.790754318237305
    7. ' .' → logprob: -13.540754318237305
    8. '.|' → logprob: -13.790754318237305
    9. ' ' → logprob: -14.165754318237305
    10. '   ' → logprob: -14.290754318237305

Token 289: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.008617172949016094
    2. ' {' → logprob: -4.758617401123047
    3. '{s' → logprob: -14.133617401123047
    4. 'set' → logprob: -14.383617401123047
    5. '{i' → logprob: -14.508617401123047
    6. '{x' → logprob: -15.133617401123047
    7. '{id' → logprob: -15.383617401123047
    8. '{name' → logprob: -16.258617401123047
    9. ' set' → logprob: -16.383617401123047
    10. '{text' → logprob: -16.508617401123047

Token 290: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.2729995988775045e-06
    2. ' c' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.3750057220459
    4. '	c' → logprob: -19.7500057220459
    5. ')c' → logprob: -22.3750057220459
    6. '_c' → logprob: -23.0000057220459
    7. '
' → logprob: -23.3750057220459
    8. '  ' → logprob: -23.5000057220459
    9. '(c' → logprob: -24.0000057220459
    10. '           ' → logprob: -24.0000057220459

Token 291: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.16028830409049988
    2. '}
' → logprob: -1.9102883338928223
    3. '}
' → logprob: -10.535287857055664
    4. ' }' → logprob: -11.160287857055664
    5. ' }
' → logprob: -11.160287857055664
    6. '           ' → logprob: -11.910287857055664
    7. '}

' → logprob: -13.160287857055664
    8. '       ' → logprob: -15.660287857055664
    9. ',' → logprob: -16.035287857055664
    10. '               ' → logprob: -16.535287857055664

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02024555765092373
    2. ' new' → logprob: -4.770245552062988
    3. '            
' → logprob: -5.645245552062988
    4. '
' → logprob: -5.895245552062988
    5. 'new' → logprob: -6.270245552062988
    6. 'p' → logprob: -6.520245552062988
    7. ' p' → logprob: -6.645245552062988
    8. '   ' → logprob: -9.270245552062988
    9. ' 
' → logprob: -9.270245552062988
    10. ',' → logprob: -9.270245552062988

Token 293: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.06499125808477402
    2. 'p' → logprob: -2.8149912357330322
    3. ' new' → logprob: -6.314991474151611
    4. 'remaining' → logprob: -7.439991474151611
    5. '           ' → logprob: -7.814991474151611
    6. '   ' → logprob: -9.814990997314453
    7. 'next' → logprob: -10.439990997314453
    8. '               ' → logprob: -10.439990997314453
    9. ' p' → logprob: -10.439990997314453
    10. '            
' → logprob: -11.189990997314453

Token 294: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0036404537968337536
    2. 'p' → logprob: -5.628640651702881
    3. '_' → logprob: -10.378640174865723
    4. '_hand' → logprob: -12.253640174865723
    5. '_player' → logprob: -14.128640174865723
    6. '   ' → logprob: -14.378640174865723
    7. '_d' → logprob: -14.628640174865723
    8. '```' → logprob: -14.753640174865723
    9. '_py' → logprob: -15.003640174865723
    10. ' p' → logprob: -15.128640174865723

Token 295: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -6.988221684878226e-06
    2. 'hand' → logprob: -12.000006675720215
    3. '_' → logprob: -14.625006675720215
    4. '   ' → logprob: -16.00000762939453
    5. '_h' → logprob: -16.75000762939453
    6. ' _' → logprob: -18.00000762939453
    7. '```' → logprob: -18.00000762939453
    8. ' hand' → logprob: -18.25000762939453
    9. ' =' → logprob: -18.50000762939453
    10. '\' → logprob: -18.50000762939453

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. '=(' → logprob: -17.10020637512207
    4. ' ' → logprob: -17.22520637512207
    5. 'remove' → logprob: -17.47520637512207
    6. 'tuple' → logprob: -17.85020637512207
    7. '=
' → logprob: -17.85020637512207
    8. ' =(' → logprob: -17.85020637512207
    9. ',' → logprob: -18.10020637512207
    10. '_tuple' → logprob: -18.35020637512207

Token 297: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.001937558175995946
    2. ' tuple' → logprob: -6.251937389373779
    3. '(tuple' → logprob: -12.126937866210938
    4. 'p' → logprob: -12.626937866210938
    5. '   ' → logprob: -16.376937866210938
    6. 'tu' → logprob: -17.501937866210938
    7. ' p' → logprob: -17.876937866210938
    8. ' ' → logprob: -18.001937866210938
    9. 't' → logprob: -18.126937866210938
    10. 'Tuple' → logprob: -18.501937866210938

Token 298: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6392297148704529
    2. '(card' → logprob: -0.8892297148704529
    3. '([' → logprob: -3.5142297744750977
    4. 'x' → logprob: -4.139229774475098
    5. '(sorted' → logprob: -5.014229774475098
    6. 'card' → logprob: -5.139229774475098
    7. '(c' → logprob: -6.639229774475098
    8. '(' → logprob: -7.514229774475098
    9. '[x' → logprob: -8.014229774475098
    10. '[' → logprob: -8.014229774475098

Token 299: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00408053956925869
    2. 'for' → logprob: -5.504080772399902
    3. ' ' → logprob: -13.379080772399902
    4. 'x' → logprob: -15.629080772399902
    5. ' if' → logprob: -15.754080772399902
    6. '	for' → logprob: -16.379079818725586
    7. 'if' → logprob: -16.754079818725586
    8. ' 
' → logprob: -17.254079818725586
    9. 'f' → logprob: -17.504079818725586
    10. '   ' → logprob: -17.504079818725586

Token 300: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09818959981203079
    2. 'p' → logprob: -2.47318959236145
    3. ' x' → logprob: -4.848189830780029
    4. ' p' → logprob: -6.598189830780029
    5. ' in' → logprob: -14.098189353942871
    6. ' ' → logprob: -14.473189353942871
    7. 'in' → logprob: -15.473189353942871
    8. '(x' → logprob: -15.973189353942871
    9. '	x' → logprob: -16.348190307617188
    10. '   ' → logprob: -16.910690307617188

Token 301: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6351491212844849
    2. ' in' → logprob: -0.7601491212844849
    3. 'x' → logprob: -6.010149002075195
    4. ' x' → logprob: -9.635149002075195
    5. ' ' → logprob: -11.510149002075195
    6. 'p' → logprob: -11.510149002075195
    7. '  ' → logprob: -13.885149002075195
    8. ' p' → logprob: -14.260149002075195
    9. '   ' → logprob: -14.697649002075195
    10. '_in' → logprob: -14.697649002075195

Token 302: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0013260759878903627
    2. ' p' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.376325607299805
    4. ' ' → logprob: -16.751325607299805
    5. 'new' → logprob: -17.626325607299805
    6. '	p' → logprob: -18.876325607299805
    7. '  ' → logprob: -19.251325607299805
    8. 'x' → logprob: -19.376325607299805
    9. 'py' → logprob: -19.376325607299805
    10. '_p' → logprob: -19.563825607299805

Token 303: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -9.984787902794778e-05
    2. 'hand' → logprob: -9.250100135803223
    3. 'and' → logprob: -13.000100135803223
    4. 'Hand' → logprob: -15.000100135803223
    5. '_HAND' → logprob: -15.375100135803223
    6. '   ' → logprob: -15.625100135803223
    7. '
' → logprob: -16.375099182128906
    8. 'p' → logprob: -16.375099182128906
    9. '_h' → logprob: -16.500099182128906
    10. '_and' → logprob: -16.625099182128906

Token 304: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16022585332393646
    2. 'if' → logprob: -1.9102258682250977
    3. '	if' → logprob: -13.410225868225098
    4. ' ' → logprob: -15.910225868225098
    5. 'If' → logprob: -18.03522491455078
    6. '   ' → logprob: -18.28522491455078
    7. '  ' → logprob: -18.41022491455078
    8. '            ' → logprob: -18.41022491455078
    9. '           ' → logprob: -18.53522491455078
    10. ' если' → logprob: -18.66022491455078

Token 305: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '(x' → logprob: -20.005233764648438
    4. '	x' → logprob: -20.130233764648438
    5. ' ' → logprob: -21.255233764648438
    6. '   ' → logprob: -21.505233764648438
    7. ')x' → logprob: -22.130233764648438
    8. '
' → logprob: -22.505233764648438
    9. '<x' → logprob: -22.505233764648438
    10. '[x' → logprob: -22.630233764648438

Token 306: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.20142892003059387
    2. ' !=' → logprob: -1.7014288902282715
    3. '()!=' → logprob: -11.82642936706543
    4. ')!=' → logprob: -12.70142936706543
    5. 'x' → logprob: -12.82642936706543
    6. ']!=' → logprob: -13.70142936706543
    7. '!==' → logprob: -14.20142936706543
    8. ' x' → logprob: -15.07642936706543
    9. '!=(' → logprob: -15.57642936706543
    10. '!='' → logprob: -15.57642936706543

Token 307: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018150413408875465
    2. ' c' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.518150329589844
    4. '	c' → logprob: -16.018150329589844
    5. '   ' → logprob: -16.393150329589844
    6. ')c' → logprob: -17.143150329589844
    7. ' ' → logprob: -17.518150329589844
    8. '```' → logprob: -17.643150329589844
    9. '  ' → logprob: -17.768150329589844
    10. '<c' → logprob: -18.643150329589844

Token 308: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014184900559484959
    2. ')' → logprob: -4.264184951782227
    3. ')
' → logprob: -11.014184951782227
    4. '           ' → logprob: -12.764184951782227
    5. ' )
' → logprob: -13.139184951782227
    6. ')

' → logprob: -16.264184951782227
    7. ' )' → logprob: -18.514184951782227
    8. '       ' → logprob: -18.764184951782227
    9. '   ' → logprob: -18.889184951782227
    10. '())
' → logprob: -19.264184951782227

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008145124302245677
    2. 'new' → logprob: -7.375814437866211
    3. ' new' → logprob: -8.875814437866211
    4. '
' → logprob: -10.250814437866211
    5. '            
' → logprob: -11.625814437866211
    6. ',' → logprob: -13.875814437866211
    7. '          ' → logprob: -14.000814437866211
    8. '   ' → logprob: -14.750814437866211
    9. '<|end|>' → logprob: -15.500814437866211
    10. '  
' → logprob: -15.875814437866211

Token 310: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.15675127506256104
    2. '           ' → logprob: -2.5317511558532715
    3. ' new' → logprob: -2.9067511558532715
    4. 'for' → logprob: -4.7817511558532715
    5. ' for' → logprob: -6.2817511558532715
    6. 'if' → logprob: -7.5317511558532715
    7. ' if' → logprob: -10.03175163269043
    8. 'result' → logprob: -10.90675163269043
    9. '   ' → logprob: -11.40675163269043
    10. ' ' → logprob: -11.40675163269043

Token 311: ' Après' (ID: 47562)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.027614209800958633
    2. ' new' → logprob: -4.277614116668701
    3. 'if' → logprob: -4.902614116668701
    4. 'for' → logprob: -5.527614116668701
    5. 'result' → logprob: -6.777614116668701
    6. 'res' → logprob: -8.52761459350586
    7. 'win' → logprob: -8.65261459350586
    8. 'op' → logprob: -9.15261459350586
    9. ' for' → logprob: -9.65261459350586
    10. ' if' → logprob: -9.77761459350586

Token 312: ' que' (ID: 661)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5308932662010193
    2. '#' → logprob: -1.405893325805664
    3. ' new' → logprob: -3.405893325805664
    4. 'if' → logprob: -4.280893325805664
    5. 'dfs' → logprob: -4.280893325805664
    6. 'result' → logprob: -4.530893325805664
    7. 'c' → logprob: -4.655893325805664
    8. 'all' → logprob: -4.780893325805664
    9. 'that' → logprob: -4.780893325805664
    10. 'res' → logprob: -5.280893325805664

Token 313: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8429083228111267
    2. '#' → logprob: -1.7179083824157715
    3. 'new' → logprob: -1.8429083824157715
    4. 'dfs' → logprob: -2.7179083824157715
    5. 'l' → logprob: -3.0929083824157715
    6. 'p' → logprob: -3.3429083824157715
    7. 'can' → logprob: -4.3429083824157715
    8. '   ' → logprob: -4.5929083824157715
    9. 'le' → logprob: -4.5929083824157715
    10. ' new' → logprob: -4.8429083824157715

Token 314: ' ait' (ID: 43015)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.7655240297317505
    2. ' joue' → logprob: -1.3905240297317505
    3. 'jou' → logprob: -2.015523910522461
    4. 'place' → logprob: -2.765523910522461
    5. 'a' → logprob: -3.890523910522461
    6. 'plays' → logprob: -4.265523910522461
    7. 'places' → logprob: -4.890523910522461
    8. ' plays' → logprob: -5.140523910522461
    9. 'poses' → logprob: -5.140523910522461
    10. '#' → logprob: -5.890523910522461

Token 315: ' joué' (ID: 117143)
  Prédit: ' joué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joué' → logprob: -0.31902292370796204
    2. 'posé' → logprob: -1.9440228939056396
    3. ' posé' → logprob: -2.6940228939056396
    4. 'jou' → logprob: -3.0690228939056396
    5. 'pos' → logprob: -4.819023132324219
    6. ' placé' → logprob: -5.569023132324219
    7. 'plac' → logprob: -6.569023132324219
    8. 'pose' → logprob: -6.694023132324219
    9. 'poser' → logprob: -8.069023132324219
    10. 'play' → logprob: -8.444023132324219

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.437107115983963
    2. '           ' → logprob: -1.1871070861816406
    3. 'if' → logprob: -4.062107086181641
    4. 'result' → logprob: -4.437107086181641
    5. 'new' → logprob: -5.187107086181641
    6. ' if' → logprob: -5.437107086181641
    7. '#' → logprob: -6.062107086181641
    8. ' new' → logprob: -6.062107086181641
    9. 'res' → logprob: -7.312107086181641
    10. 'le' → logprob: -7.562107086181641

Token 317: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22456295788288116
    2. 'result' → logprob: -2.099562883377075
    3. ' if' → logprob: -3.724562883377075
    4. 'win' → logprob: -3.849562883377075
    5. 'res' → logprob: -4.724563121795654
    6. '#' → logprob: -4.849563121795654
    7. '           ' → logprob: -5.849563121795654
    8. 'vict' → logprob: -6.099563121795654
    9. ' result' → logprob: -6.349563121795654
    10. ' #' → logprob: -6.474563121795654

Token 318: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9155144095420837
    2. 'o' → logprob: -1.4155144691467285
    3. 'est' → logprob: -2.4155144691467285
    4. ''est' → logprob: -2.9155144691467285
    5. 'l' → logprob: -3.1655144691467285
    6. ' #' → logprob: -3.5405144691467285
    7. ',' → logprob: -3.5405144691467285
    8. ' new' → logprob: -3.6655144691467285
    9. 'new' → logprob: -4.4155144691467285
    10. 'rés' → logprob: -4.5405144691467285

Token 319: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.49448591470718384
    2. ' au' → logprob: -1.244485855102539
    3. 'l' → logprob: -3.119485855102539
    4. 'o' → logprob: -3.619485855102539
    5. ' o' → logprob: -4.619485855102539
    6. ' l' → logprob: -4.619485855102539
    7. 'le' → logprob: -5.369485855102539
    8. 'à' → logprob: -5.619485855102539
    9. ' à' → logprob: -6.369485855102539
    10. ' le' → logprob: -7.369485855102539

Token 320: ' tour' (ID: 6970)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.004164353013038635
    2. ' tour' → logprob: -5.754164218902588
    3. 'o' → logprob: -7.754164218902588
    4. 't' → logprob: -8.504164695739746
    5. 'au' → logprob: -8.629164695739746
    6. 'turn' → logprob: -9.754164695739746
    7. '```' → logprob: -9.879164695739746
    8. 'aut' → logprob: -10.754164695739746
    9. '
' → logprob: -11.879164695739746
    10. 'tou' → logprob: -12.004164695739746

Token 321: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.09277057647705078
    2. ' de' → logprob: -2.592770576477051
    3. 'o' → logprob: -4.967770576477051
    4. '   ' → logprob: -5.717770576477051
    5. 'd' → logprob: -6.842770576477051
    6. 'du' → logprob: -7.467770576477051
    7. 'del' → logprob: -7.592770576477051
    8. ' o' → logprob: -7.717770576477051
    9. '           ' → logprob: -8.46777057647705
    10. 'def' → logprob: -8.84277057647705

Token 322: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.07352243363857269
    2. 'dfs' → logprob: -2.9485223293304443
    3. ' o' → logprob: -4.698522567749023
    4. ' dfs' → logprob: -5.448522567749023
    5. 'the' → logprob: -6.323522567749023
    6. 'l' → logprob: -7.198522567749023
    7. 'def' → logprob: -7.198522567749023
    8. '
' → logprob: -7.823522567749023
    9. ''o' → logprob: -8.073522567749023
    10. 'd' → logprob: -8.448522567749023

Token 323: '.' (ID: 13)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.009622922167181969
    2. 'hand' → logprob: -5.259623050689697
    3. 'def' → logprob: -6.759623050689697
    4. '   ' → logprob: -7.134623050689697
    5. ' hand' → logprob: -7.634623050689697
    6. ''s' → logprob: -7.634623050689697
    7. 'Hand' → logprob: -7.634623050689697
    8. ' ' → logprob: -8.634622573852539
    9. '_HAND' → logprob: -9.009622573852539
    10. 'dfs' → logprob: -9.384622573852539

Token 324: ' Inter' (ID: 5605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8585414290428162
    2. 'if' → logprob: -0.9835414290428162
    3. ' if' → logprob: -2.233541488647461
    4. 'for' → logprob: -3.233541488647461
    5. 'result' → logprob: -3.608541488647461
    6. ' for' → logprob: -3.858541488647461
    7. ' result' → logprob: -6.358541488647461
    8. 'new' → logprob: -6.483541488647461
    9. 'win' → logprob: -6.983541488647461
    10. ' new' → logprob: -7.233541488647461

Token 325: 'vert' (ID: 2339)
  Prédit: 'nal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nal' → logprob: -1.3505356311798096
    2. 'val' → logprob: -1.4755356311798096
    3. 'face' → logprob: -1.7255356311798096
    4. 'preter' → logprob: -2.1005356311798096
    5. '   ' → logprob: -3.4755356311798096
    6. 'result' → logprob: -3.6005356311798096
    7. 'return' → logprob: -3.6005356311798096
    8. 'mediate' → logprob: -3.7255356311798096
    9. 'ne' → logprob: -4.4755353927612305
    10. 'n' → logprob: -4.4755353927612305

Token 326: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09627389907836914
    2. 'cer' → logprob: -2.971273899078369
    3. '(p' → logprob: -3.596273899078369
    4. 'ser' → logprob: -4.846273899078369
    5. 'rer' → logprob: -6.971273899078369
    6. 'p' → logprob: -7.471273899078369
    7. 'ter' → logprob: -7.971273899078369
    8. '(new' → logprob: -7.971273899078369
    9. 'ce' → logprob: -8.221273422241211
    10. 'ence' → logprob: -8.346273422241211

Token 327: ' les' (ID: 1341)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.30518245697021484
    2. 'les' → logprob: -2.430182456970215
    3. 'dfs' → logprob: -2.680182456970215
    4. 'o' → logprob: -3.055182456970215
    5. 'new' → logprob: -3.930182456970215
    6. 'd' → logprob: -4.680182456970215
    7. ' les' → logprob: -4.680182456970215
    8. 'le' → logprob: -5.055182456970215
    9. ' p' → logprob: -5.555182456970215
    10. 'roles' → logprob: -6.430182456970215

Token 328: ' rô' (ID: 98138)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.30491602420806885
    2. 'p' → logprob: -1.5549160242080688
    3. 'roles' → logprob: -3.6799159049987793
    4. 'args' → logprob: -4.679915904998779
    5. 'hands' → logprob: -4.929915904998779
    6. 'hand' → logprob: -6.179915904998779
    7. 'arguments' → logprob: -6.304915904998779
    8. ' roles' → logprob: -6.679915904998779
    9. 'players' → logprob: -6.804915904998779
    10. '_hand' → logprob: -6.929915904998779

Token 329: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.05219468101859093
    2. 'oles' → logprob: -3.552194595336914
    3. 'es' → logprob: -4.552194595336914
    4. ' les' → logprob: -5.802194595336914
    5. 'ô' → logprob: -5.927194595336914
    6. ' roles' → logprob: -7.427194595336914
    7. 'o' → logprob: -7.552194595336914
    8. 'e' → logprob: -7.802194595336914
    9. 'cles' → logprob: -7.802194595336914
    10. '\' → logprob: -7.927194595336914

Token 330: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01194486953318119
    2. 'result' → logprob: -4.636944770812988
    3. ' result' → logprob: -6.261944770812988
    4. '            
' → logprob: -9.386944770812988
    5. 'new' → logprob: -10.136944770812988
    6. ',' → logprob: -10.261944770812988
    7. '       ' → logprob: -11.261944770812988
    8. ' new' → logprob: -11.386944770812988
    9. ' for' → logprob: -11.386944770812988
    10. '
' → logprob: -11.636944770812988

Token 331: ' mains' (ID: 50381)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.746300458908081
    2. 'dfs' → logprob: -1.621300458908081
    3. 'res' → logprob: -1.746300458908081
    4. 'return' → logprob: -2.246300458908081
    5. 'ret' → logprob: -3.996300458908081
    6. '           ' → logprob: -4.49630069732666
    7. ' dfs' → logprob: -5.37130069732666
    8. 'retval' → logprob: -5.74630069732666
    9. 'not' → logprob: -6.37130069732666
    10. ' result' → logprob: -6.49630069732666

Token 332: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020530331879854202
    2. 'result' → logprob: -4.0205302238464355
    3. ' result' → logprob: -6.6455302238464355
    4. '            
' → logprob: -7.8955302238464355
    5. '
' → logprob: -8.395530700683594
    6. '       ' → logprob: -9.645530700683594
    7. '```' → logprob: -9.645530700683594
    8. 'new' → logprob: -9.770530700683594
    9. ',' → logprob: -10.270530700683594
    10. ' to' → logprob: -10.395530700683594

Token 333: '           ' (ID: 352)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4108070135116577
    2. '           ' → logprob: -1.2858070135116577
    3. ' result' → logprob: -3.4108071327209473
    4. ' if' → logprob: -4.660807132720947
    5. 'if' → logprob: -4.785807132720947
    6. 'res' → logprob: -5.285807132720947
    7. 'return' → logprob: -6.785807132720947
    8. 'answer' → logprob: -7.535807132720947
    9. '```' → logprob: -7.785807132720947
    10. '
' → logprob: -7.910807132720947

Token 334: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13846108317375183
    2. 'result' → logprob: -2.388461112976074
    3. 'res' → logprob: -3.513461112976074
    4. ' if' → logprob: -5.638461112976074
    5. 'win' → logprob: -5.888461112976074
    6. '           ' → logprob: -7.013461112976074
    7. 'won' → logprob: -8.513461112976074
    8. ' result' → logprob: -9.763461112976074
    9. 'winner' → logprob: -9.763461112976074
    10. 'vict' → logprob: -10.013461112976074

Token 335: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4207577407360077
    2. 'res' → logprob: -1.79575777053833
    3. 'result' → logprob: -1.92075777053833
    4. 'win' → logprob: -3.92075777053833
    5. ' if' → logprob: -5.67075777053833
    6. '           ' → logprob: -6.17075777053833
    7. 'won' → logprob: -6.29575777053833
    8. ' res' → logprob: -6.54575777053833
    9. ' result' → logprob: -7.29575777053833
    10. 'op' → logprob: -7.42075777053833

Token 336: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1380459070205688
    2. 'not' → logprob: -1.2630459070205688
    3. 'o' → logprob: -2.1380457878112793
    4. 'new' → logprob: -2.6380457878112793
    5. ' not' → logprob: -3.3880457878112793
    6. 'dfs' → logprob: -3.5130457878112793
    7. 'result' → logprob: -3.6380457878112793
    8. 'all' → logprob: -3.7630457878112793
    9. 'res' → logprob: -4.263045787811279
    10. 'each' → logprob: -4.388045787811279

Token 337: ' gagner' (ID: 64227)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.20576933026313782
    2. ',' → logprob: -2.8307693004608154
    3. 'eturn' → logprob: -3.9557693004608154
    4. ''s' → logprob: -4.2057695388793945
    5. 'hand' → logprob: -4.5807695388793945
    6. 'result' → logprob: -4.5807695388793945
    7. 's' → logprob: -4.5807695388793945
    8. 'return' → logprob: -5.2057695388793945
    9. 'def' → logprob: -5.2057695388793945
    10. 'r' → logprob: -5.3307695388793945

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26893818378448486
    2. '           ' → logprob: -1.6439381837844849
    3. ':' → logprob: -3.6439380645751953
    4. ':
' → logprob: -5.268938064575195
    5. ' ,' → logprob: -6.143938064575195
    6. '
' → logprob: -6.143938064575195
    7. 'if' → logprob: -6.768938064575195
    8. '               ' → logprob: -6.768938064575195
    9. '   ' → logprob: -6.893938064575195
    10. ' if' → logprob: -7.018938064575195

Token 339: ' il' (ID: 1793)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0073680877685546875
    2. ' not' → logprob: -5.132368087768555
    3. 'all' → logprob: -7.007368087768555
    4. 'dfs' → logprob: -7.632368087768555
    5. 'any' → logprob: -11.382368087768555
    6. ' all' → logprob: -11.382368087768555
    7. ' dfs' → logprob: -12.007368087768555
    8. '   ' → logprob: -12.257368087768555
    9. 'for' → logprob: -12.507368087768555
    10. 'result' → logprob: -13.507368087768555

Token 340: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.10378151386976242
    2. ' must' → logprob: -2.6037814617156982
    3. 'must' → logprob: -4.228781700134277
    4. ' doit' → logprob: -4.978781700134277
    5. 'f' → logprob: -6.103781700134277
    6. ' faudra' → logprob: -8.103781700134277
    7. ' ne' → logprob: -8.228781700134277
    8. ' should' → logprob: -9.728781700134277
    9. ' faudrait' → logprob: -9.728781700134277
    10. ' suff' → logprob: -9.978781700134277

Token 341: ' que' (ID: 661)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.5333296656608582
    2. ' dfs' → logprob: -1.908329725265503
    3. 'not' → logprob: -2.158329725265503
    4. 'all' → logprob: -2.658329725265503
    5. ' not' → logprob: -2.783329725265503
    6. ' all' → logprob: -4.158329486846924
    7. 'that' → logprob: -6.658329486846924
    8. 'any' → logprob: -8.158329963684082
    9. ' that' → logprob: -8.658329963684082
    10. ' any' → logprob: -10.158329963684082

Token 342: ',' (ID: 11)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6513580679893494
    2. 'dfs' → logprob: -0.9013580679893494
    3. ' not' → logprob: -3.026358127593994
    4. ' dfs' → logprob: -3.901358127593994
    5. 'all' → logprob: -5.651358127593994
    6. ' all' → logprob: -7.901358127593994
    7. '
' → logprob: -11.276357650756836
    8. 'df' → logprob: -11.651357650756836
    9. 'd' → logprob: -12.151357650756836
    10. '```' → logprob: -12.651357650756836

Token 343: ' pour' (ID: 1930)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09230881929397583
    2. ' not' → logprob: -3.092308759689331
    3. 'all' → logprob: -3.717308759689331
    4. 'dfs' → logprob: -4.84230899810791
    5. ' dfs' → logprob: -5.46730899810791
    6. 'for' → logprob: -5.59230899810791
    7. ' all' → logprob: -6.09230899810791
    8. ' for' → logprob: -8.59230899810791
    9. ' tous' → logprob: -9.71730899810791
    10. 'forall' → logprob: -10.09230899810791

Token 344: ' tout' (ID: 5501)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.7199255228042603
    2. 't' → logprob: -1.8449255228042603
    3. ' all' → logprob: -1.8449255228042603
    4. ' tous' → logprob: -2.0949254035949707
    5. ' every' → logprob: -2.4699254035949707
    6. 'all' → logprob: -2.7199254035949707
    7. 'tout' → logprob: -2.7199254035949707
    8. 'every' → logprob: -3.0949254035949707
    9. ' _' → logprob: -3.5949254035949707
    10. ' toutes' → logprob: -3.7199254035949707

Token 345: ' choix' (ID: 28642)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.0606812238693237
    2. ' new' → logprob: -1.5606812238693237
    3. ' o' → logprob: -1.9356812238693237
    4. ' choix' → logprob: -2.4356813430786133
    5. 'c' → logprob: -2.5606813430786133
    6. 'new' → logprob: -2.9356813430786133
    7. ' c' → logprob: -3.6856813430786133
    8. 'choice' → logprob: -4.810681343078613
    9. ' choice' → logprob: -5.060681343078613
    10. 'cho' → logprob: -5.185681343078613

Token 346: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0886273980140686
    2. ' d' → logprob: -3.213627338409424
    3. ' ' → logprob: -4.463627338409424
    4. '   ' → logprob: -4.713627338409424
    5. 'de' → logprob: -4.713627338409424
    6. ' possible' → logprob: -4.963627338409424
    7. 's' → logprob: -6.463627338409424
    8. 'd' → logprob: -6.463627338409424
    9. '  ' → logprob: -6.963627338409424
    10. ' of' → logprob: -7.088627338409424

Token 347: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.8346949815750122
    2. 'l' → logprob: -1.2096949815750122
    3. 'c' → logprob: -1.8346949815750122
    4. 'new' → logprob: -2.9596948623657227
    5. ' o' → logprob: -4.084694862365723
    6. ' new' → logprob: -4.959694862365723
    7. ' l' → logprob: -5.209694862365723
    8. ' la' → logprob: -5.709694862365723
    9. 'the' → logprob: -5.834694862365723
    10. 'op' → logprob: -5.834694862365723

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5576938390731812
    2. '_hand' → logprob: -2.3076939582824707
    3. '   ' → logprob: -2.4326939582824707
    4. ' de' → logprob: -3.1826939582824707
    5. '           ' → logprob: -3.4326939582824707
    6. ' ' → logprob: -3.6826939582824707
    7. 'possible' → logprob: -3.8076939582824707
    8. ''s' → logprob: -3.8076939582824707
    9. ' possible' → logprob: -4.057693958282471
    10. ' dans' → logprob: -4.182693958282471

Token 349: ' p' (ID: 275)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3639642000198364
    2. 'not' → logprob: -1.3639642000198364
    3. ' dfs' → logprob: -3.113964080810547
    4. ' not' → logprob: -5.363964080810547
    5. '   ' → logprob: -8.863964080810547
    6. 'there' → logprob: -9.613964080810547
    7. 'the' → logprob: -9.863964080810547
    8. 'can' → logprob: -11.363964080810547
    9. '           ' → logprob: -11.863964080810547
    10. 'd' → logprob: -11.863964080810547

Token 350: ' puisse' (ID: 77890)
  Prédit: ' gagne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gagne' → logprob: -0.19492144882678986
    2. ' puisse' → logprob: -2.1949214935302734
    3. 'g' → logprob: -3.6949214935302734
    4. '_hand' → logprob: -4.944921493530273
    5. '   ' → logprob: -5.194921493530273
    6. 'dfs' → logprob: -5.444921493530273
    7. ' gagn' → logprob: -5.444921493530273
    8. ' ait' → logprob: -6.819921493530273
    9. ' hand' → logprob: -6.819921493530273
    10. '```' → logprob: -7.069921493530273

Token 351: ' contr' (ID: 6030)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.30004218220710754
    2. ' gagner' → logprob: -2.050042152404785
    3. 'win' → logprob: -2.675042152404785
    4. ' continuer' → logprob: -4.300042152404785
    5. 'contin' → logprob: -4.550042152404785
    6. ' win' → logprob: -4.675042152404785
    7. 'jou' → logprob: -5.300042152404785
    8. ' garantir' → logprob: -5.800042152404785
    9. 'maint' → logprob: -5.800042152404785
    10. 'return' → logprob: -6.175042152404785

Token 352: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.018744919449090958
    2. 'e' → logprob: -4.018744945526123
    3. 'ar' → logprob: -9.768744468688965
    4. '```' → logprob: -9.768744468688965
    5. 'eper' → logprob: -10.268744468688965
    6. '   ' → logprob: -10.268744468688965
    7. 'érer' → logprob: -10.643744468688965
    8. '
' → logprob: -10.768744468688965
    9. 'oler' → logprob: -10.768744468688965
    10. 'ô' → logprob: -10.893744468688965

Token 353: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.685285210609436
    2. ',' → logprob: -1.060285210609436
    3. '   ' → logprob: -3.5602850914001465
    4. ' (' → logprob: -3.9352850914001465
    5. '               ' → logprob: -3.9352850914001465
    6. '(True' → logprob: -4.3102850914001465
    7. '       ' → logprob: -5.3102850914001465
    8. ':' → logprob: -5.3102850914001465
    9. ' True' → logprob: -5.3102850914001465
    10. ' ,' → logprob: -5.4352850914001465

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026224706321954727
    2. '               ' → logprob: -4.401224613189697
    3. ',' → logprob: -5.151224613189697
    4. ':' → logprob: -6.026224613189697
    5. '<|end|>' → logprob: -6.276224613189697
    6. ' for' → logprob: -6.901224613189697
    7. ':
' → logprob: -7.526224613189697
    8. '<|end|>' → logprob: -7.776224613189697
    9. '   ' → logprob: -8.401225090026855
    10. '       ' → logprob: -8.401225090026855

Token 355: ' res' (ID: 694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09433280676603317
    2. 'if' → logprob: -3.094332695007324
    3. ' if' → logprob: -3.844332695007324
    4. ' for' → logprob: -4.719332695007324
    5. 'for' → logprob: -5.094332695007324
    6. '   ' → logprob: -5.594332695007324
    7. 'all' → logprob: -6.594332695007324
    8. 'result' → logprob: -7.469332695007324
    9. '            
' → logprob: -7.594332695007324
    10. '       ' → logprob: -8.219332695007324

Token 356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16042976081371307
    2. ' =' → logprob: -1.9104297161102295
    3. '=True' → logprob: -9.660429954528809
    4. '   ' → logprob: -9.785429954528809
    5. '=False' → logprob: -10.285429954528809
    6. '           ' → logprob: -10.535429954528809
    7. '       ' → logprob: -11.660429954528809
    8. '          ' → logprob: -13.160429954528809
    9. 's' → logprob: -13.410429954528809
    10. '=
' → logprob: -13.535429954528809

Token 357: ' dfs' (ID: 51252)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.028360622003674507
    2. 'not' → logprob: -4.028360843658447
    3. 'True' → logprob: -5.028360843658447
    4. 'False' → logprob: -6.028360843658447
    5. 'dfs' → logprob: -6.903360843658447
    6. ' all' → logprob: -9.153360366821289
    7. 'any' → logprob: -9.528360366821289
    8. ' not' → logprob: -12.403360366821289
    9. ' True' → logprob: -12.403360366821289
    10. '   ' → logprob: -12.653360366821289

Token 358: '_after' (ID: 46788)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0001382241171086207
    2. '(
' → logprob: -9.750138282775879
    3. '(' → logprob: -10.000138282775879
    4. '(set' → logprob: -11.125138282775879
    5. 'new' → logprob: -11.375138282775879
    6. ' (' → logprob: -13.375138282775879
    7. '(n' → logprob: -13.750138282775879
    8. '   ' → logprob: -13.750138282775879
    9. '(f' → logprob: -13.875138282775879
    10. '((' → logprob: -14.000138282775879

Token 359: '_op' (ID: 20111)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.06997156143188477
    2. '(' → logprob: -3.5699715614318848
    3. '(c' → logprob: -5.319971561431885
    4. '_move' → logprob: -5.569971561431885
    5. '_play' → logprob: -5.569971561431885
    6. '(op' → logprob: -5.694971561431885
    7. ' (' → logprob: -5.944971561431885
    8. '(d' → logprob: -5.944971561431885
    9. 's' → logprob: -6.194971561431885
    10. '((' → logprob: -6.444971561431885

Token 360: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.015061021782457829
    2. 'p' → logprob: -4.390060901641846
    3. 'pone' → logprob: -7.390060901641846
    4. '(p' → logprob: -8.265061378479004
    5. 'onent' → logprob: -8.640061378479004
    6. 'pon' → logprob: -8.640061378479004
    7. '(' → logprob: -8.890061378479004
    8. 'layer' → logprob: -8.890061378479004
    9. 'pos' → logprob: -9.265061378479004
    10. 't' → logprob: -9.515061378479004

Token 361: '_turn' (ID: 89223)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0011336666066199541
    2. ' (' → logprob: -7.501133441925049
    3. '(' → logprob: -8.501133918762207
    4. '((' → logprob: -9.501133918762207
    5. 'w' → logprob: -9.751133918762207
    6. '(table' → logprob: -9.751133918762207
    7. '           ' → logprob: -10.126133918762207
    8. 'new' → logprob: -10.501133918762207
    9. '(
' → logprob: -11.376133918762207
    10. '(w' → logprob: -11.626133918762207

Token 362: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0005000127712264657
    2. ' (' → logprob: -8.500499725341797
    3. '(' → logprob: -9.125499725341797
    4. '           ' → logprob: -10.000499725341797
    5. '((' → logprob: -10.000499725341797
    6. 'w' → logprob: -10.375499725341797
    7. 'new' → logprob: -11.250499725341797
    8. '=new' → logprob: -12.000499725341797
    9. '   ' → logprob: -12.250499725341797
    10. '(
' → logprob: -12.375499725341797

Token 363: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.005812536925077438
    2. 'table' → logprob: -5.505812644958496
    3. '_p' → logprob: -6.880812644958496
    4. 'p' → logprob: -8.130812644958496
    5. 'new' → logprob: -8.755812644958496
    6. '
' → logprob: -9.880812644958496
    7. 'c' → logprob: -10.755812644958496
    8. '   ' → logprob: -10.880812644958496
    9. '_t' → logprob: -11.005812644958496
    10. 'o' → logprob: -11.255812644958496

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015998471528291702
    2. '(new' → logprob: -4.515998363494873
    3. ',new' → logprob: -5.390998363494873
    4. ' ,' → logprob: -8.515998840332031
    5. 'new' → logprob: -9.390998840332031
    6. '           ' → logprob: -10.140998840332031
    7. ' new' → logprob: -10.390998840332031
    8. '=new' → logprob: -12.015998840332031
    9. '   ' → logprob: -12.265998840332031
    10. ',
' → logprob: -12.640998840332031

Token 365: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.022368289530277252
    2. ' new' → logprob: -4.147368431091309
    3. 'c' → logprob: -6.022368431091309
    4. 'o' → logprob: -6.647368431091309
    5. 'tuple' → logprob: -7.022368431091309
    6. 'fro' → logprob: -7.147368431091309
    7. '   ' → logprob: -7.772368431091309
    8. '
' → logprob: -9.272368431091309
    9. ' tuple' → logprob: -9.397368431091309
    10. ' ' → logprob: -9.897368431091309

Token 366: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.2541637122631073
    2. 'p' → logprob: -1.7541637420654297
    3. '_hand' → logprob: -3.1291637420654297
    4. 'hand' → logprob: -5.00416374206543
    5. 'o' → logprob: -7.50416374206543
    6. 'new' → logprob: -9.37916374206543
    7. '_table' → logprob: -10.25416374206543
    8. 'table' → logprob: -10.37916374206543
    9. 'h' → logprob: -10.50416374206543
    10. 'c' → logprob: -10.62916374206543

Token 367: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.0031911435071378946
    2. 'hand' → logprob: -5.753190994262695
    3. 'and' → logprob: -12.003190994262695
    4. ' hand' → logprob: -13.753190994262695
    5. 'new' → logprob: -13.753190994262695
    6. '   ' → logprob: -14.003190994262695
    7. '
' → logprob: -14.253190994262695
    8. '_' → logprob: -14.378190994262695
    9. 'Hand' → logprob: -14.503190994262695
    10. '```' → logprob: -14.628190994262695

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058523546904325485
    2. ' ,' → logprob: -5.255852222442627
    3. ',new' → logprob: -7.880852222442627
    4. '           ' → logprob: -8.630852699279785
    5. ',c' → logprob: -10.505852699279785
    6. ',o' → logprob: -11.880852699279785
    7. '          ' → logprob: -12.380852699279785
    8. ',p' → logprob: -12.380852699279785
    9. ',
' → logprob: -12.880852699279785
    10. '            ' → logprob: -13.130852699279785

Token 369: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.003946013282984495
    2. ' o' → logprob: -5.753945827484131
    3. 'tuple' → logprob: -7.628945827484131
    4. 'new' → logprob: -9.253946304321289
    5. 'c' → logprob: -10.128946304321289
    6. '   ' → logprob: -10.253946304321289
    7. ' tuple' → logprob: -10.253946304321289
    8. '(o' → logprob: -11.003946304321289
    9. 'p' → logprob: -11.128946304321289
    10. '
' → logprob: -11.503946304321289

Token 370: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -2.141186450899113e-05
    2. '_' → logprob: -11.375020980834961
    3. ' _' → logprob: -13.000020980834961
    4. '_h' → logprob: -13.000020980834961
    5. 'hand' → logprob: -13.250020980834961
    6. ',' → logprob: -14.750020980834961
    7. ',_' → logprob: -14.875020980834961
    8. '_HAND' → logprob: -15.000020980834961
    9. 'o' → logprob: -15.125020980834961
    10. '\' → logprob: -15.250020980834961

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003383033908903599
    2. ' ,' → logprob: -6.503383159637451
    3. ',m' → logprob: -7.003383159637451
    4. '           ' → logprob: -7.878383159637451
    5. ')' → logprob: -8.128382682800293
    6. ')
' → logprob: -8.753382682800293
    7. ',new' → logprob: -9.753382682800293
    8. '   ' → logprob: -10.628382682800293
    9. '       ' → logprob: -11.378382682800293
    10. ',d' → logprob: -11.753382682800293

Token 372: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.001179512357339263
    2. ' memo' → logprob: -6.7511796951293945
    3. 'm' → logprob: -12.876179695129395
    4. '   ' → logprob: -13.251179695129395
    5. 'mem' → logprob: -13.626179695129395
    6. ' ' → logprob: -13.626179695129395
    7. '
' → logprob: -14.626179695129395
    8. 'new' → logprob: -15.376179695129395
    9. '  ' → logprob: -15.501179695129395
    10. 'dfs' → logprob: -15.626179695129395

Token 373: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2328663021326065
    2. ')' → logprob: -1.7328662872314453
    3. '           ' → logprob: -3.4828662872314453
    4. ')
' → logprob: -8.732866287231445
    5. ' )
' → logprob: -10.732866287231445
    6. '       ' → logprob: -10.732866287231445
    7. '   ' → logprob: -11.232866287231445
    8. ')

' → logprob: -11.857866287231445
    9. '          ' → logprob: -11.857866287231445
    10. ')`
' → logprob: -12.482866287231445

Token 374: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9701276421546936
    2. '           ' → logprob: -1.0951275825500488
    3. '   ' → logprob: -1.5951275825500488
    4. '<|end|>' → logprob: -3.470127582550049
    5. '       ' → logprob: -4.345127582550049
    6. '
' → logprob: -4.470127582550049
    7. 'def' → logprob: -4.720127582550049
    8. '    
' → logprob: -5.970127582550049
    9. ')
' → logprob: -6.220127582550049
    10. '            
' → logprob: -6.345127582550049

Token 375: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05616820976138115
    2. 'if' (adapté à ' if') → logprob: -3.4311683177948
    3. ' if' → logprob: -3.8061683177948
    4. '   ' → logprob: -10.806168556213379
    5. '       ' → logprob: -11.306168556213379
    6. 'memo' → logprob: -13.306168556213379
    7. ' memo' → logprob: -14.431168556213379
    8. '               ' → logprob: -14.681168556213379
    9. ' ' → logprob: -14.806168556213379
    10. '          ' → logprob: -14.931168556213379

Token 376: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.048587825149297714
    2. 'res' → logprob: -3.0485877990722656
    3. '(res' → logprob: -15.923587799072266
    4. '	res' → logprob: -16.548587799072266
    5. ' ' → logprob: -16.798587799072266
    6. '               ' → logprob: -16.798587799072266
    7. '           ' → logprob: -17.923587799072266
    8. '_res' → logprob: -18.048587799072266
    9. ' ' → logprob: -18.298587799072266
    10. '            ' → logprob: -18.673587799072266

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010929559357464314
    2. '):' → logprob: -5.135929584503174
    3. ':
' → logprob: -5.510929584503174
    4. '):
' → logprob: -7.385929584503174
    5. '==' → logprob: -8.260929107666016
    6. ' :' → logprob: -10.510929107666016
    7. ':return' → logprob: -11.260929107666016
    8. '=' → logprob: -11.760929107666016
    9. ' ==' → logprob: -12.010929107666016
    10. ')' → logprob: -12.010929107666016

Token 378: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024219141341745853
    2. '           ' → logprob: -6.252421855926514
    3. '):
' → logprob: -8.502422332763672
    4. ':
' → logprob: -8.877422332763672
    5. '                   ' → logprob: -10.752422332763672
    6. '
' → logprob: -10.877422332763672
    7. ' return' → logprob: -10.877422332763672
    8. ':' → logprob: -11.127422332763672
    9. ')' → logprob: -11.252422332763672
    10. ' :
' → logprob: -11.377422332763672

Token 379: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.020367741584777832
    2. ' memo' → logprob: -4.020367622375488
    3. '               ' → logprob: -6.145367622375488
    4. '           ' → logprob: -9.895367622375488
    5. '                   ' → logprob: -11.770367622375488
    6. '   ' → logprob: -12.145367622375488
    7. 'memory' → logprob: -12.770367622375488
    8. 'return' → logprob: -13.145367622375488
    9. '
' → logprob: -13.770367622375488
    10. '.memo' → logprob: -14.645367622375488

Token 380: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.3856492842023727e-06
    2. '[(' → logprob: -14.125000953674316
    3. '[' → logprob: -14.750000953674316
    4. 'key' → logprob: -16.125001907348633
    5. '[
' → logprob: -17.500001907348633
    6. ' key' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.250001907348633
    8. '	key' → logprob: -18.750001907348633
    9. '[token' → logprob: -18.750001907348633
    10. ',key' → logprob: -18.875001907348633

Token 381: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05003392696380615
    2. '=' → logprob: -3.6750340461730957
    3. ' =' → logprob: -3.9250340461730957
    4. ']=' → logprob: -5.800034046173096
    5. ' ]' → logprob: -7.300034046173096
    6. ')' → logprob: -12.800033569335938
    7. '[' → logprob: -13.425033569335938
    8. ' =
' → logprob: -13.925033569335938
    9. '   ' → logprob: -14.050033569335938
    10. ']
' → logprob: -14.175033569335938

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692894041538239
    2. ' =' → logprob: -2.1269290447235107
    3. '   ' → logprob: -15.00192928314209
    4. '=
' → logprob: -15.00192928314209
    5. ' ' → logprob: -15.87692928314209
    6. ' =
' → logprob: -16.376928329467773
    7. '=True' → logprob: -17.126928329467773
    8. '           ' → logprob: -17.376928329467773
    9. '       ' → logprob: -18.001928329467773
    10. 'return' → logprob: -18.126928329467773

Token 383: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -6.2729995988775045e-06
    2. ' True' → logprob: -12.000006675720215
    3. '   ' → logprob: -22.6250057220459
    4. 'true' → logprob: -23.6250057220459
    5. '(True' → logprob: -23.8750057220459
    6. '=True' → logprob: -25.6250057220459
    7. 'TRUE' → logprob: -26.5000057220459
    8. 'False' → logprob: -26.5000057220459
    9. '1' → logprob: -28.6250057220459
    10. '
' → logprob: -29.0000057220459

Token 384: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.771655115589965e-05
    2. '           ' → logprob: -12.250018119812012
    3. '
' → logprob: -12.625018119812012
    4. '                
' → logprob: -12.875018119812012
    5. 'return' → logprob: -13.500018119812012
    6. '                   ' → logprob: -13.875018119812012
    7. ' return' → logprob: -14.125018119812012
    8. '			' → logprob: -14.250018119812012
    9. '    
' → logprob: -14.375018119812012
    10. '                ' → logprob: -14.375018119812012

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.375538163818419e-05
    2. '           ' → logprob: -10.500083923339844
    3. '                
' → logprob: -10.875083923339844
    4. '                   ' → logprob: -11.750083923339844
    5. 'return' → logprob: -11.750083923339844
    6. '			' → logprob: -12.625083923339844
    7. '              ' → logprob: -12.750083923339844
    8. '                ' → logprob: -12.750083923339844
    9. '<|end|>' → logprob: -12.875083923339844
    10. '               
' → logprob: -13.125083923339844

Token 386: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21302787959575653
    2. 'return' (adapté à ' return') → logprob: -1.713027834892273
    3. ' return' → logprob: -4.4630279541015625
    4. '                   ' → logprob: -11.463027954101562
    5. '	return' → logprob: -12.963027954101562
    6. '           ' → logprob: -13.088027954101562
    7. ':return' → logprob: -13.588027954101562
    8. '
' → logprob: -13.838027954101562
    9. '   ' → logprob: -14.213027954101562
    10. 'eturn' → logprob: -14.713027954101562

Token 387: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -19.626928329467773
    4. 'False' → logprob: -21.626928329467773
    5. 'true' → logprob: -22.001928329467773
    6. '=True' → logprob: -22.126928329467773
    7. ' ' → logprob: -23.251928329467773
    8. 'res' → logprob: -24.001928329467773
    9. '
' → logprob: -24.626928329467773
    10. 'Tr' → logprob: -24.876928329467773

Token 388: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012535669840872288
    2. '       ' → logprob: -4.387535572052002
    3. '           ' → logprob: -11.13753604888916
    4. 'continue' → logprob: -12.63753604888916
    5. '```' → logprob: -13.51253604888916
    6. 'm' → logprob: -13.76253604888916
    7. '    ' → logprob: -14.26253604888916
    8. '     ' → logprob: -14.38753604888916
    9. '  ' → logprob: -14.76253604888916
    10. ' ' → logprob: -14.88753604888916

Token 389: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012035686522722244
    2. '       ' → logprob: -4.512035846710205
    3. '           ' → logprob: -7.012035846710205
    4. '
' → logprob: -11.137035369873047
    5. '    ' → logprob: -11.387035369873047
    6. '    
' → logprob: -11.387035369873047
    7. '```' → logprob: -11.387035369873047
    8. '               ' → logprob: -11.762035369873047
    9. '  ' → logprob: -12.012035369873047
    10. '     ' → logprob: -12.387035369873047

Token 390: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023077428340911865
    2. '       ' → logprob: -6.377307891845703
    3. 'continue' → logprob: -8.502307891845703
    4. 'memo' (adapté à ' memo') → logprob: -8.877307891845703
    5. '           ' → logprob: -9.752307891845703
    6. '```' → logprob: -10.252307891845703
    7. 'False' → logprob: -10.252307891845703
    8. '  ' → logprob: -10.627307891845703
    9. ' memo' → logprob: -10.627307891845703
    10. ' continue' → logprob: -11.377307891845703

Token 391: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. '[user' → logprob: -17.25
    4. '[k' → logprob: -18.375
    5. 'key' → logprob: -18.5
    6. '[token' → logprob: -18.875
    7. '[
' → logprob: -20.25
    8. '[val' → logprob: -20.625
    9. '[node' → logprob: -20.875
    10. ' [' → logprob: -21.0

Token 392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.400597482919693
    2. '=' → logprob: -1.1505974531173706
    3. ']=' → logprob: -4.40059757232666
    4. ' =' → logprob: -6.65059757232666
    5. '[' → logprob: -9.77559757232666
    6. ')' → logprob: -12.52559757232666
    7. ' ]' → logprob: -13.02559757232666
    8. ')=' → logprob: -13.27559757232666
    9. '[
' → logprob: -13.40059757232666
    10. '   ' → logprob: -13.90059757232666

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001584850688232109
    2. ' =' → logprob: -8.750158309936523
    3. '=False' → logprob: -19.250158309936523
    4. '[' → logprob: -22.125158309936523
    5. ']=' → logprob: -22.250158309936523
    6. '=
' → logprob: -22.375158309936523
    7. '＝' → logprob: -22.500158309936523
    8. '   ' → logprob: -22.625158309936523
    9. ']' → logprob: -23.250158309936523
    10. ' ' → logprob: -23.750158309936523

Token 394: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. '(False' → logprob: -21.62502670288086
    4. '=False' → logprob: -21.75002670288086
    5. 'false' → logprob: -23.62502670288086
    6. '_false' → logprob: -24.37502670288086
    7. '.False' → logprob: -24.87502670288086
    8. '   ' → logprob: -26.50002670288086
    9. '_FALSE' → logprob: -27.12502670288086
    10. 'FALSE' → logprob: -27.25002670288086

Token 395: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020938136731274426
    2. '       ' → logprob: -8.62520980834961
    3. '	return' → logprob: -11.00020980834961
    4. '<|end|>' → logprob: -12.37520980834961
    5. '    
' → logprob: -12.50020980834961
    6. 'return' → logprob: -13.50020980834961
    7. '   ' → logprob: -13.62520980834961
    8. '
' → logprob: -15.00020980834961
    9. ' return' → logprob: -15.50020980834961
    10. '<|end|>' → logprob: -15.87520980834961

Token 396: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004365440458059311
    2. '	return' → logprob: -5.50436544418335
    3. '    
' → logprob: -9.254364967346191
    4. '       ' → logprob: -10.004364967346191
    5. '<|end|>' → logprob: -10.504364967346191
    6. 'return' → logprob: -11.379364967346191
    7. '   ' → logprob: -11.379364967346191
    8. '	' → logprob: -11.504364967346191
    9. '	continue' → logprob: -11.754364967346191
    10. '```' → logprob: -11.754364967346191

Token 397: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006030588410794735
    2. 'return' (adapté à ' return') → logprob: -5.256030559539795
    3. '   ' → logprob: -7.631030559539795
    4. ' return' → logprob: -8.131031036376953
    5. '	return' → logprob: -11.131031036376953
    6. '	' → logprob: -14.381031036376953
    7. '<|end|>' → logprob: -15.006031036376953
    8. 'def' → logprob: -15.256031036376953
    9. ' ' → logprob: -15.381031036376953
    10. '           ' → logprob: -15.506031036376953

Token 398: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -14.75
    3. 'false' → logprob: -22.375
    4. '(False' → logprob: -22.5
    5. '_false' → logprob: -23.75
    6. '=False' → logprob: -24.625
    7. 'True' → logprob: -25.875
    8. '.False' → logprob: -26.0
    9. 'memo' → logprob: -26.125
    10. 'FALSE' → logprob: -27.125

Token 399: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12813623249530792
    2. '
' → logprob: -2.128136157989502
    3. '

' → logprob: -7.628136157989502
    4. '<|end|>' → logprob: -8.75313663482666
    5. '```' → logprob: -8.87813663482666
    6. '   ' → logprob: -9.12813663482666
    7. '    
' → logprob: -9.25313663482666
    8. ' def' → logprob: -9.62813663482666
    9. ')' → logprob: -9.62813663482666
    10. '  
' → logprob: -10.87813663482666

Token 400: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12790894508361816
    2. '
' → logprob: -2.127908945083618
    3. '```' → logprob: -7.377908706665039
    4. '

' → logprob: -8.752908706665039
    5. '    
' → logprob: -9.877908706665039
    6. '
' → logprob: -10.627908706665039
    7. ' def' → logprob: -10.627908706665039
    8. ')' → logprob: -10.752908706665039
    9. '  
' → logprob: -10.877908706665039
    10. '\' → logprob: -11.252908706665039

Token 401: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13715238869190216
    2. 'def' → logprob: -2.1371524333953857
    3. 'else' (adapté à ' else') → logprob: -5.012152194976807
    4. '   ' → logprob: -6.137152194976807
    5. '    
' → logprob: -7.137152194976807
    6. '

' → logprob: -8.012152671813965
    7. '  
' → logprob: -9.262152671813965
    8. '```' → logprob: -9.762152671813965
    9. ')' → logprob: -11.012152671813965
    10. ' else' → logprob: -11.512152671813965

Token 402: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16418777406215668
    2. ':' → logprob: -1.9141877889633179
    3. '   ' → logprob: -5.664187908172607
    4. '       ' → logprob: -7.914187908172607
    5. ':return' → logprob: -10.66418743133545
    6. '):
' → logprob: -11.16418743133545
    7. '
' → logprob: -11.41418743133545
    8. ',' → logprob: -11.53918743133545
    9. ':

' → logprob: -11.66418743133545
    10. '    
' → logprob: -11.78918743133545

Token 403: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3840062916278839
    2. '#' → logprob: -1.2590062618255615
    3. '       ' → logprob: -3.7590062618255615
    4. 'def' → logprob: -4.634006500244141
    5. 'return' → logprob: -7.134006500244141
    6. 'if' → logprob: -7.384006500244141
    7. 'res' → logprob: -8.88400650024414
    8. ' #' → logprob: -9.00900650024414
    9. 'memo' → logprob: -9.63400650024414
    10. '```' → logprob: -10.00900650024414

Token 404: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5703597068786621
    2. 'res' → logprob: -1.945359706878662
    3. 'return' → logprob: -2.320359706878662
    4. 'def' → logprob: -2.570359706878662
    5. 'if' → logprob: -2.695359706878662
    6. 'memo' → logprob: -3.570359706878662
    7. '       ' → logprob: -4.695359706878662
    8. '   ' → logprob: -4.820359706878662
    9. 'result' → logprob: -6.820359706878662
    10. ' #' → logprob: -6.945359706878662

Token 405: ' p' (ID: 275)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7723300457000732
    2. 'if' → logprob: -1.5223300457000732
    3. 'res' → logprob: -1.6473300457000732
    4. 'return' → logprob: -2.6473300457000732
    5. 'memo' → logprob: -3.0223300457000732
    6. 'def' → logprob: -5.647330284118652
    7. '   ' → logprob: -6.897330284118652
    8. 'new' → logprob: -6.897330284118652
    9. 'for' → logprob: -7.147330284118652
    10. '       ' → logprob: -7.647330284118652

Token 406: ' ne' (ID: 453)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.57481849193573
    2. 'per' → logprob: -2.0748186111450195
    3. 'pass' → logprob: -2.0748186111450195
    4. 'passes' → logprob: -2.4498186111450195
    5. '#' → logprob: -3.4498186111450195
    6. 'has' → logprob: -4.3248186111450195
    7. 'def' → logprob: -4.5748186111450195
    8. '_pass' → logprob: -5.0748186111450195
    9. 'n' → logprob: -5.3248186111450195
    10. 'can't' → logprob: -5.5748186111450195

Token 407: ' peut' (ID: 9216)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6525317430496216
    2. 'pe' → logprob: -1.0275317430496216
    3. ' peut' → logprob: -2.402531623840332
    4. 'p' → logprob: -4.277531623840332
    5. ' pas' → logprob: -5.277531623840332
    6. 'a' → logprob: -5.652531623840332
    7. '_pe' → logprob: -6.027531623840332
    8. 'can' → logprob: -6.652531623840332
    9. ' peux' → logprob: -6.902531623840332
    10. '_pas' → logprob: -7.527531623840332

Token 408: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0711107850074768
    2. ' pas' → logprob: -2.696110725402832
    3. '_pas' → logprob: -7.071110725402832
    4. 'plus' → logprob: -9.571110725402832
    5. 'pass' → logprob: -9.821110725402832
    6. 'not' → logprob: -9.821110725402832
    7. ' rien' → logprob: -10.321110725402832
    8. 'jou' → logprob: -10.321110725402832
    9. '_pass' → logprob: -10.446110725402832
    10. 'pos' → logprob: -11.696110725402832

Token 409: ' poser' (ID: 73555)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.13658955693244934
    2. '       ' → logprob: -3.261589527130127
    3. 'pas' → logprob: -3.261589527130127
    4. 'jou' → logprob: -3.261589527130127
    5. 'play' → logprob: -5.011589527130127
    6. '#' → logprob: -6.886589527130127
    7. ' jouer' → logprob: -6.886589527130127
    8. '_pass' → logprob: -7.011589527130127
    9. 'return' → logprob: -7.011589527130127
    10. 'poser' → logprob: -7.511589527130127

Token 410: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7729984521865845
    2. 'return' → logprob: -1.0229984521865845
    3. '#' → logprob: -2.022998332977295
    4. '
' → logprob: -3.897998332977295
    5. 'res' → logprob: -4.522998332977295
    6. ' return' → logprob: -4.897998332977295
    7. 'new' → logprob: -5.772998332977295
    8. 'if' → logprob: -6.772998332977295
    9. '        
' → logprob: -7.022998332977295
    10. ' #' → logprob: -7.647998332977295

Token 411: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5921807289123535
    2. 'res' → logprob: -0.9671807289123535
    3. 'memo' → logprob: -3.4671807289123535
    4. '       ' → logprob: -3.8421807289123535
    5. 'new' → logprob: -5.0921807289123535
    6. 'return' → logprob: -5.3421807289123535
    7. 'result' → logprob: -6.3421807289123535
    8. 'if' → logprob: -7.8421807289123535
    9. 'mem' → logprob: -7.9671807289123535
    10. ' #' → logprob: -8.342180252075195

Token 412: ' passe' (ID: 22210)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8492534756660461
    2. ' return' → logprob: -1.0992534160614014
    3. '       ' → logprob: -1.5992534160614014
    4. '   ' → logprob: -4.0992536544799805
    5. '#' → logprob: -4.2242536544799805
    6. 'eturn' → logprob: -5.8492536544799805
    7. ' #' → logprob: -6.5992536544799805
    8. '
' → logprob: -7.8492536544799805
    9. 'else' → logprob: -8.72425365447998
    10. '    ' → logprob: -8.72425365447998

Token 413: ' à' (ID: 1221)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -1.2039059400558472
    2. ' au' → logprob: -1.4539059400558472
    3. 'à' → logprob: -2.3289060592651367
    4. 'le' → logprob: -2.4539060592651367
    5. ' à' → logprob: -2.7039060592651367
    6. 'turn' → logprob: -2.8289060592651367
    7. ' la' → logprob: -3.2039060592651367
    8. 'tour' → logprob: -3.8289060592651367
    9. ' le' → logprob: -3.9539060592651367
    10. '#' → logprob: -3.9539060592651367

Token 414: ' o' (ID: 293)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.017803842201828957
    2. ' dfs' → logprob: -4.26780366897583
    3. 'not' → logprob: -6.14280366897583
    4. 'False' → logprob: -6.76780366897583
    5. ' not' → logprob: -9.267804145812988
    6. '#' → logprob: -9.892804145812988
    7. '   ' → logprob: -10.392804145812988
    8. 'res' → logprob: -10.392804145812988
    9. 'o' → logprob: -10.517804145812988
    10. 'd' → logprob: -10.642804145812988

Token 415: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09478527307510376
    2. '   ' → logprob: -4.094785213470459
    3. ')' → logprob: -4.719785213470459
    4. '
' → logprob: -4.719785213470459
    5. '        
' → logprob: -4.969785213470459
    6. ':' → logprob: -5.219785213470459
    7. ',' → logprob: -5.344785213470459
    8. '_' → logprob: -5.344785213470459
    9. '()' → logprob: -5.469785213470459
    10. '_turn' → logprob: -5.969785213470459

Token 416: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11259928345680237
    2. '	return' → logprob: -2.8625993728637695
    3. 'return' → logprob: -3.4875993728637695
    4. ' return' → logprob: -4.4875993728637695
    5. '       ' → logprob: -5.6125993728637695
    6. '
' → logprob: -6.1125993728637695
    7. '    
' → logprob: -6.9875993728637695
    8. '	
' → logprob: -8.98759937286377
    9. '```' → logprob: -9.36259937286377
    10. '	' → logprob: -9.48759937286377

Token 417: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007980050519108772
    2. '       ' → logprob: -5.882979869842529
    3. 'res' (adapté à ' res') → logprob: -5.882979869842529
    4. 'def' → logprob: -7.382979869842529
    5. '   ' → logprob: -7.507979869842529
    6. '
' → logprob: -7.632979869842529
    7. 'result' → logprob: -7.882979869842529
    8. ' return' → logprob: -8.257980346679688
    9. '        
' → logprob: -10.132980346679688
    10. '```' → logprob: -10.882980346679688

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=
' → logprob: -18.413042068481445
    4. '＝' → logprob: -18.788042068481445
    5. '=d' → logprob: -19.413042068481445
    6. '=sys' → logprob: -19.913042068481445
    7. '=

' → logprob: -19.913042068481445
    8. ' ' → logprob: -20.163042068481445
    9. '   ' → logprob: -20.163042068481445
    10. '=}' → logprob: -20.413042068481445

Token 419: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0013350016670301557
    2. ' dfs' → logprob: -6.626335144042969
    3. 'df' → logprob: -12.251335144042969
    4. 'not' → logprob: -13.126335144042969
    5. 'd' → logprob: -14.126335144042969
    6. 'dfa' → logprob: -15.001335144042969
    7. ' not' → logprob: -15.251335144042969
    8. 'DFS' → logprob: -15.501335144042969
    9. '
' → logprob: -15.501335144042969
    10. '   ' → logprob: -15.626335144042969

Token 420: '_after' (ID: 46788)
  Prédit: '(table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.00710724014788866
    2. '_after' → logprob: -5.257107257843018
    3. '(' → logprob: -7.257107257843018
    4. '(new' → logprob: -7.507107257843018
    5. ' (' → logprob: -7.882107257843018
    6. '(after' → logprob: -9.63210678100586
    7. '(d' → logprob: -9.88210678100586
    8. 'after' → logprob: -10.25710678100586
    9. '(t' → logprob: -11.25710678100586
    10. '   ' → logprob: -11.88210678100586

Token 421: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -5.200166469876422e-06
    2. 'op' → logprob: -12.500004768371582
    3. '_o' → logprob: -14.375004768371582
    4. '_operator' → logprob: -15.375004768371582
    5. '(op' → logprob: -15.625004768371582
    6. '_' → logprob: -16.3750057220459
    7. 'o' → logprob: -16.6250057220459
    8. 'Opponent' → logprob: -16.6250057220459
    9. '```' → logprob: -17.5000057220459
    10. '_oc' → logprob: -17.5000057220459

Token 422: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.2346026599407196
    2. 'op' → logprob: -1.984602689743042
    3. '_op' → logprob: -2.734602689743042
    4. 'onent' → logprob: -5.734602451324463
    5. 'o' → logprob: -6.359602451324463
    6. 'on' → logprob: -7.484602451324463
    7. 'p' → logprob: -7.734602451324463
    8. 'opp' → logprob: -8.234602928161621
    9. '(op' → logprob: -8.984602928161621
    10. '_' → logprob: -9.609602928161621

Token 423: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -2.0219828002154827e-05
    2. '_op' → logprob: -11.750020027160645
    3. 'turn' → logprob: -11.875020027160645
    4. '_table' → logprob: -14.000020027160645
    5. '(turn' → logprob: -14.000020027160645
    6. '_after' → logprob: -14.625020027160645
    7. '```' → logprob: -14.625020027160645
    8. '_' → logprob: -15.125020027160645
    9. 'table' → logprob: -15.375020027160645
    10. ''_' → logprob: -15.500020027160645

Token 424: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -13.500001907348633
    3. '(' → logprob: -14.125001907348633
    4. 'table' → logprob: -17.000001907348633
    5. '(t' → logprob: -17.750001907348633
    6. '(tab' → logprob: -17.750001907348633
    7. ')table' → logprob: -18.125001907348633
    8. '(
' → logprob: -18.625001907348633
    9. '(TABLE' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.875001907348633

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001049736310960725
    2. ' ,' → logprob: -9.250104904174805
    3. '(table' → logprob: -12.750104904174805
    4. ',p' → logprob: -13.375104904174805
    5. ',
' → logprob: -13.500104904174805
    6. ',new' → logprob: -13.875104904174805
    7. '   ' → logprob: -15.125104904174805
    8. ')' → logprob: -15.125104904174805
    9. '       ' → logprob: -15.125104904174805
    10. ',s' → logprob: -15.625104904174805

Token 426: ' p' (ID: 275)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.10446872562170029
    2. 'p' → logprob: -2.354468822479248
    3. ' o' → logprob: -5.604468822479248
    4. ' p' → logprob: -7.729468822479248
    5. '   ' → logprob: -9.10446834564209
    6. '
' → logprob: -12.72946834564209
    7. ' ' → logprob: -12.72946834564209
    8. 'tuple' → logprob: -12.97946834564209
    9. '	o' → logprob: -12.97946834564209
    10. '  ' → logprob: -13.22946834564209

Token 427: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -4.246537173457909e-06
    2. 'hand' → logprob: -12.500003814697266
    3. ',' → logprob: -15.000003814697266
    4. ',_' → logprob: -17.125003814697266
    5. '_HAND' → logprob: -17.250003814697266
    6. 'o' → logprob: -17.250003814697266
    7. 'p' → logprob: -17.875003814697266
    8. '_h' → logprob: -18.000003814697266
    9. 'Hand' → logprob: -18.750003814697266
    10. ' hand' → logprob: -19.000003814697266

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047821682528592646
    2. ' ,' → logprob: -8.00047779083252
    3. ',o' → logprob: -8.87547779083252
    4. 'o' → logprob: -13.75047779083252
    5. ',
' → logprob: -13.75047779083252
    6. ' o' → logprob: -14.87547779083252
    7. '   ' → logprob: -16.375478744506836
    8. ',p' → logprob: -16.500478744506836
    9. ')' → logprob: -16.750478744506836
    10. '       ' → logprob: -17.625478744506836

Token 429: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.306760805164231e-05
    2. ' o' → logprob: -11.25001335144043
    3. '	o' → logprob: -18.37501335144043
    4. '(o' → logprob: -20.25001335144043
    5. '   ' → logprob: -20.37501335144043
    6. ''o' → logprob: -21.00001335144043
    7. 'O' → logprob: -21.37501335144043
    8. '{o' → logprob: -21.87501335144043
    9. 'tuple' → logprob: -21.87501335144043
    10. '_o' → logprob: -22.62501335144043

Token 430: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.0004324573092162609
    2. 'hand' → logprob: -7.75043249130249
    3. 'o' → logprob: -13.375432014465332
    4. 'Hand' → logprob: -16.37543296813965
    5. '_' → logprob: -16.87543296813965
    6. '_HAND' → logprob: -17.37543296813965
    7. '_h' → logprob: -17.75043296813965
    8. 'h' → logprob: -18.25043296813965
    9. ' _' → logprob: -18.37543296813965
    10. ' hand' → logprob: -18.37543296813965

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004508562386035919
    2. ',m' → logprob: -5.5045084953308105
    3. ' ,' → logprob: -7.7545084953308105
    4. 'm' → logprob: -14.004508972167969
    5. ' memo' → logprob: -15.379508972167969
    6. 'memo' → logprob: -16.37950897216797
    7. ')' → logprob: -17.00450897216797
    8. ',
' → logprob: -17.12950897216797
    9. '   ' → logprob: -17.75450897216797
    10. '),' → logprob: -18.12950897216797

Token 432: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.018165744841098785
    2. ' memo' → logprob: -4.018165588378906
    3. 'm' → logprob: -11.143165588378906
    4. ' ' → logprob: -14.768165588378906
    5. '   ' → logprob: -14.893165588378906
    6. 'mem' → logprob: -15.143165588378906
    7. '     ' → logprob: -16.768165588378906
    8. ')' → logprob: -17.268165588378906
    9. '    ' → logprob: -17.393165588378906
    10. 'memory' → logprob: -17.518165588378906

Token 433: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01815614476799965
    2. ')' → logprob: -4.018156051635742
    3. '   ' → logprob: -12.268156051635742
    4. ')
' → logprob: -13.768156051635742
    5. ')

' → logprob: -15.268156051635742
    6. ' )
' → logprob: -15.768156051635742
    7. ',' → logprob: -16.893156051635742
    8. ')`
' → logprob: -17.643156051635742
    9. '):
' → logprob: -18.143156051635742
    10. ' ' → logprob: -18.768156051635742

Token 434: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08248643577098846
    2. ')' → logprob: -2.707486391067505
    3. '```' → logprob: -5.957486629486084
    4. '<|end|>' → logprob: -5.957486629486084
    5. '
' → logprob: -6.207486629486084
    6. ')
' → logprob: -6.957486629486084
    7. ':' → logprob: -7.332486629486084
    8. '    
' → logprob: -7.457486629486084
    9. '<|end|>' → logprob: -7.832486629486084
    10. 'return' → logprob: -7.957486629486084

Token 435: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.028167197480797768
    2. '   ' → logprob: -4.278167247772217
    3. ' memo' → logprob: -4.278167247772217
    4. '       ' → logprob: -10.778166770935059
    5. 'return' → logprob: -11.653166770935059
    6. ' ' → logprob: -13.278166770935059
    7. '
' → logprob: -13.653166770935059
    8. 'memory' → logprob: -13.653166770935059
    9. '    
' → logprob: -13.903166770935059
    10. '  ' → logprob: -14.278166770935059

Token 436: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0002798087371047586
    2. '=' → logprob: -8.750279426574707
    3. '[' → logprob: -9.250279426574707
    4. 'key' → logprob: -11.000279426574707
    5. '_key' → logprob: -12.500279426574707
    6. ' =' → logprob: -14.250279426574707
    7. '[
' → logprob: -14.875279426574707
    8. ' key' → logprob: -14.875279426574707
    9. '[...]' → logprob: -15.250279426574707
    10. ',key' → logprob: -15.500279426574707

Token 437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.582379937171936
    2. ')' → logprob: -1.207379937171936
    3. '=' → logprob: -1.957379937171936
    4. '   ' → logprob: -7.8323798179626465
    5. ']=' → logprob: -7.8323798179626465
    6. ' =' → logprob: -8.207380294799805
    7. ')=' → logprob: -9.082380294799805
    8. '[' → logprob: -11.082380294799805
    9. ' )' → logprob: -11.832380294799805
    10. ' ]' → logprob: -12.332380294799805

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031808018684387207
    2. ' =' → logprob: -5.753180980682373
    3. '   ' → logprob: -12.878180503845215
    4. '=
' → logprob: -14.628180503845215
    5. '=m' → logprob: -16.00318145751953
    6. 'return' → logprob: -17.75318145751953
    7. '=

' → logprob: -18.75318145751953
    8. ')' → logprob: -19.00318145751953
    9. ' ' → logprob: -19.62818145751953
    10. ')=' → logprob: -19.75318145751953

Token 439: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004078878089785576
    2. ' res' → logprob: -5.5040788650512695
    3. 'return' → logprob: -14.62907886505127
    4. ' return' → logprob: -19.379079818725586
    5. '	res' → logprob: -19.504079818725586
    6. '(res' → logprob: -19.879079818725586
    7. '_res' → logprob: -19.879079818725586
    8. '$res' → logprob: -19.879079818725586
    9. '=res' → logprob: -20.004079818725586
    10. 'result' → logprob: -20.129079818725586

Token 440: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002382664941251278
    2. 'def' → logprob: -6.752382755279541
    3. 'memo' → logprob: -7.627382755279541
    4. 'return' → logprob: -7.877382755279541
    5. '       ' → logprob: -8.127382278442383
    6. ' memo' → logprob: -10.377382278442383
    7. ' return' → logprob: -11.752382278442383
    8. 'm' → logprob: -11.752382278442383
    9. '    
' → logprob: -14.002382278442383
    10. '```' → logprob: -14.502382278442383

Token 441: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018234115093946457
    2. 'return' → logprob: -4.1432342529296875
    3. '       ' → logprob: -6.2682342529296875
    4. ' return' → logprob: -8.893234252929688
    5. '	return' → logprob: -9.268234252929688
    6. '```' → logprob: -10.268234252929688
    7. ':return' → logprob: -10.768234252929688
    8. 'def' → logprob: -12.518234252929688
    9. ')return' → logprob: -13.018234252929688
    10. '<|end|>' → logprob: -13.643234252929688

Token 442: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011643871665000916
    2. ' return' → logprob: -4.511643886566162
    3. '   ' → logprob: -7.761643886566162
    4. '       ' → logprob: -9.011643409729004
    5. '	return' → logprob: -10.136643409729004
    6. ':return' → logprob: -12.386643409729004
    7. '
' → logprob: -13.011643409729004
    8. '```' → logprob: -14.511643409729004
    9. ' ' → logprob: -14.761643409729004
    10. 'eturn' → logprob: -14.886643409729004

Token 443: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.306760805164231e-05
    2. ' res' → logprob: -11.25001335144043
    3. 're' → logprob: -19.87501335144043
    4. 'ress' → logprob: -21.37501335144043
    5. 'rec' → logprob: -21.50001335144043
    6. 'False' → logprob: -21.87501335144043
    7. '   ' → logprob: -22.00001335144043
    8. '	res' → logprob: -22.00001335144043
    9. 'ret' → logprob: -22.12501335144043
    10. 'memo' → logprob: -22.12501335144043

Token 444: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13203595578670502
    2. '
' → logprob: -2.382035970687866
    3. '(
' → logprob: -4.257035732269287
    4. '```' → logprob: -5.382035732269287
    5. '('\' → logprob: -5.507035732269287
    6. '\' → logprob: -5.757035732269287
    7. '(' → logprob: -6.132035732269287
    8. '(def' → logprob: -7.507035732269287
    9. ' def' → logprob: -7.507035732269287
    10. '

' → logprob: -7.757035732269287

Token 445: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004120669327676296
    2. '
' → logprob: -6.504120826721191
    3. '```' → logprob: -6.879120826721191
    4. '(' → logprob: -8.254120826721191
    5. ':def' → logprob: -8.254120826721191
    6. ' def' → logprob: -8.379120826721191
    7. '('\' → logprob: -8.504120826721191
    8. '(
' → logprob: -9.004120826721191
    9. '(def' → logprob: -9.129120826721191
    10. '\' → logprob: -9.379120826721191

Token 446: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.4020240604877472
    2. 'dfs' → logprob: -1.1520240306854248
    3. 'def' → logprob: -4.277024269104004
    4. ' def' → logprob: -7.527024269104004
    5. 'after' → logprob: -8.277024269104004
    6. '_after' → logprob: -8.652024269104004
    7. 'df' → logprob: -9.652024269104004
    8. ' after' → logprob: -9.777024269104004
    9. 'After' → logprob: -10.652024269104004
    10. '_' → logprob: -11.527024269104004

Token 447: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -3.128163257315464e-07
    2. '_before' → logprob: -17.0
    3. '_for' → logprob: -17.625
    4. 'after' → logprob: -17.75
    5. '_from' → logprob: -17.875
    6. '_at' → logprob: -18.0
    7. '_a' → logprob: -18.0
    8. '_AFTER' → logprob: -18.0
    9. '_under' → logprob: -18.375
    10. '_' → logprob: -18.375

Token 448: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -2.4868770196917467e-05
    2. 'op' → logprob: -10.625024795532227
    3. '(op' → logprob: -15.125024795532227
    4. '_operator' → logprob: -16.250024795532227
    5. 'Opponent' → logprob: -17.500024795532227
    6. 'def' → logprob: -18.000024795532227
    7. '(_' → logprob: -18.125024795532227
    8. '```' → logprob: -18.500024795532227
    9. ''op' → logprob: -18.875024795532227
    10. '_OP' → logprob: -19.375024795532227

Token 449: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -2.570319702499546e-05
    2. 'p' → logprob: -10.750025749206543
    3. 'onn' → logprob: -13.500025749206543
    4. 'pon' → logprob: -14.750025749206543
    5. '``' → logprob: -15.000025749206543
    6. '_' → logprob: -15.125025749206543
    7. '```' → logprob: -15.500025749206543
    8. 'onent' → logprob: -15.625025749206543
    9. '\' → logprob: -15.750025749206543
    10. 'ponents' → logprob: -15.750025749206543

Token 450: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -2.4272752852994017e-05
    2. '(turn' → logprob: -11.87502384185791
    3. '(table' → logprob: -12.25002384185791
    4. '(_' → logprob: -12.62502384185791
    5. '_hand' → logprob: -13.12502384185791
    6. '```' → logprob: -13.25002384185791
    7. ''_' → logprob: -13.75002384185791
    8. 'turn' → logprob: -14.12502384185791
    9. '
' → logprob: -14.75002384185791
    10. '_t' → logprob: -14.75002384185791

Token 451: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.0015633042203262448
    2. '(new' → logprob: -6.50156307220459
    3. '(' → logprob: -9.87656307220459
    4. ' (' → logprob: -11.62656307220459
    5. '(t' → logprob: -14.87656307220459
    6. '(tab' → logprob: -15.37656307220459
    7. '(
' → logprob: -17.251564025878906
    8. '(tree' → logprob: -17.501564025878906
    9. '(TABLE' → logprob: -17.751564025878906
    10. '(Table' → logprob: -17.876564025878906

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.861651490908116e-05
    2. ' ,' → logprob: -9.875068664550781
    3. ',p' → logprob: -11.000068664550781
    4. ',
' → logprob: -15.625068664550781
    5. '   ' → logprob: -16.37506866455078
    6. 'p' → logprob: -17.87506866455078
    7. '_,' → logprob: -18.00006866455078
    8. ',new' → logprob: -18.12506866455078
    9. ',t' → logprob: -18.12506866455078
    10. ' p' → logprob: -18.25006866455078

Token 453: ' p' (ID: 275)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.8422674536705017
    2. ' o' → logprob: -1.4672675132751465
    3. 'p' → logprob: -1.7172675132751465
    4. ' p' → logprob: -1.8422675132751465
    5. '   ' → logprob: -8.717267036437988
    6. ' new' → logprob: -9.092267036437988
    7. ' ' → logprob: -9.529767036437988
    8. 'new' → logprob: -9.529767036437988
    9. '
' → logprob: -10.029767036437988
    10. '	o' → logprob: -10.779767036437988

Token 454: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.0025619841180741787
    2. ',' → logprob: -6.002562046051025
    3. 'hand' → logprob: -10.127561569213867
    4. ',_' → logprob: -11.002561569213867
    5. '_,' → logprob: -11.502561569213867
    6. ' ,' → logprob: -11.627561569213867
    7. '_HAND' → logprob: -12.877561569213867
    8. '_h' → logprob: -13.252561569213867
    9. 'o' → logprob: -13.877561569213867
    10. 'def' → logprob: -14.002561569213867

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.455048449221067e-05
    2. ' ,' → logprob: -9.875054359436035
    3. ',
' → logprob: -13.250054359436035
    4. ',o' → logprob: -13.875054359436035
    5. ',p' → logprob: -15.250054359436035
    6. '   ' → logprob: -16.50005531311035
    7. 'o' → logprob: -18.37505531311035
    8. 's' → logprob: -18.37505531311035
    9. 'p' → logprob: -18.37505531311035
    10. '_,' → logprob: -18.62505531311035

Token 456: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.016045041382312775
    2. ' o' → logprob: -4.141045093536377
    3. '   ' → logprob: -12.391044616699219
    4. '	o' → logprob: -13.016044616699219
    5. 'p' → logprob: -13.141044616699219
    6. ' ' → logprob: -13.766044616699219
    7. '
' → logprob: -14.891044616699219
    8. '  ' → logprob: -15.391044616699219
    9. '    ' → logprob: -15.391044616699219
    10. 'def' → logprob: -16.64104461669922

Token 457: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -3.15441757265944e-05
    2. 'hand' → logprob: -10.500031471252441
    3. '_HAND' → logprob: -13.500031471252441
    4. ',' → logprob: -14.250031471252441
    5. ',_' → logprob: -14.500031471252441
    6. '_h' → logprob: -14.750031471252441
    7. ' _' → logprob: -15.250031471252441
    8. 'and' → logprob: -15.375031471252441
    9. ' hand' → logprob: -15.625031471252441
    10. 'Hand' → logprob: -16.500032424926758

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ' ,' → logprob: -11.375019073486328
    3. ',m' → logprob: -12.000019073486328
    4. '   ' → logprob: -14.250019073486328
    5. ',
' → logprob: -15.875019073486328
    6. '):' → logprob: -16.000019073486328
    7. '):
' → logprob: -17.500019073486328
    8. ',p' → logprob: -17.625019073486328
    9. 'm' → logprob: -18.125019073486328
    10. ' ' → logprob: -19.375019073486328

Token 459: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.05537788197398186
    2. ' memo' → logprob: -2.930377960205078
    3. '   ' → logprob: -8.055377960205078
    4. ' ' → logprob: -9.305377960205078
    5. 'm' → logprob: -10.430377960205078
    6. ')' → logprob: -11.055377960205078
    7. '  ' → logprob: -11.430377960205078
    8. 'def' → logprob: -11.805377960205078
    9. 'mem' → logprob: -11.930377960205078
    10. '
' → logprob: -13.055377960205078

Token 460: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0380612351000309
    2. '):
' → logprob: -3.2880611419677734
    3. '):
' → logprob: -11.288061141967773
    4. ')' → logprob: -12.288061141967773
    5. '   ' → logprob: -13.163061141967773
    6. '):

' → logprob: -14.538061141967773
    7. ':' → logprob: -16.163061141967773
    8. ' ):' → logprob: -16.163061141967773
    9. ')：' → logprob: -17.788061141967773
    10. '）：' → logprob: -18.538061141967773

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.906711546937004e-05
    2. ' playable' → logprob: -11.125048637390137
    3. '```' → logprob: -11.500048637390137
    4. 'def' → logprob: -12.625048637390137
    5. '(play' → logprob: -12.625048637390137
    6. ' for' → logprob: -12.875048637390137
    7. '   ' → logprob: -12.875048637390137
    8. '	play' → logprob: -13.125048637390137
    9. 'tokens' → logprob: -13.875048637390137
    10. 'Playable' → logprob: -14.000048637390137

Token 462: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02547995001077652
    2. '#' (adapté à ' #') → logprob: -3.775480031967163
    3. 'for' → logprob: -7.400479793548584
    4. 'play' → logprob: -7.650479793548584
    5. '```' → logprob: -8.150480270385742
    6. ' #' → logprob: -8.400480270385742
    7. ' for' → logprob: -8.650480270385742
    8. ' playable' → logprob: -9.275480270385742
    9. 'op' → logprob: -9.525480270385742
    10. 'if' → logprob: -9.775480270385742

Token 463: ' Tour' (ID: 14349)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.273811012506485
    2. '#' → logprob: -1.7738109827041626
    3. 'op' → logprob: -3.398811101913452
    4. '   ' → logprob: -3.898811101913452
    5. 'o' → logprob: -4.648810863494873
    6. 'def' → logprob: -6.773810863494873
    7. 'for' → logprob: -7.023810863494873
    8. 'table' → logprob: -7.148810863494873
    9. 'opp' → logprob: -7.148810863494873
    10. ' playable' → logprob: -7.648810863494873

Token 464: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.217586949467659
    2. ' de' → logprob: -2.4675869941711426
    3. '=' → logprob: -2.8425869941711426
    4. 'de' → logprob: -3.2175869941711426
    5. '   ' → logprob: -5.092586994171143
    6. ' =' → logprob: -5.842586994171143
    7. 'o' → logprob: -7.092586994171143
    8. 'd' → logprob: -7.842586994171143
    9. ' o' → logprob: -7.967586994171143
    10. '  ' → logprob: -8.342586517333984

Token 465: ' o' (ID: 293)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.16197772324085236
    2. 'o' → logprob: -2.286977767944336
    3. 'def' → logprob: -3.161977767944336
    4. ' dfs' → logprob: -6.036977767944336
    5. 'the' → logprob: -6.911977767944336
    6. 'lambda' → logprob: -7.161977767944336
    7. 'l' → logprob: -7.411977767944336
    8. '#' → logprob: -8.286977767944336
    9. ' o' → logprob: -8.536977767944336
    10. 'p' → logprob: -9.161977767944336

Token 466: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009568398236297071
    2. ':' → logprob: -7.250957012176514
    3. ':
' → logprob: -9.875956535339355
    4. ' playable' → logprob: -9.875956535339355
    5. 'def' → logprob: -10.625956535339355
    6. ',' → logprob: -11.000956535339355
    7. '    
' → logprob: -11.000956535339355
    8. '
' → logprob: -11.250956535339355
    9. '(play' → logprob: -11.875956535339355
    10. '#' → logprob: -11.875956535339355

Token 467: 'ad' (ID: 324)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.8201314210891724
    2. '   ' → logprob: -0.9451314210891724
    3. ' table' → logprob: -2.070131301879883
    4. 'def' → logprob: -4.695131301879883
    5. ')' → logprob: -4.820131301879883
    6. '#' → logprob: -4.945131301879883
    7. ' p' → logprob: -5.070131301879883
    8. ' #' → logprob: -5.820131301879883
    9. ' o' → logprob: -6.445131301879883
    10. 'p' → logprob: -6.820131301879883

Token 468: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.003478432074189186
    2. ' vers' → logprob: -6.253478527069092
    3. 'verse' → logprob: -7.753478527069092
    4. 'ver' → logprob: -8.878478050231934
    5. ')' → logprob: -9.003478050231934
    6. 'v' → logprob: -9.003478050231934
    7. 'ves' → logprob: -9.003478050231934
    8. 'o' → logprob: -9.503478050231934
    9. 'ivers' → logprob: -9.878478050231934
    10. '{'' → logprob: -10.128478050231934

Token 469: 'aire' (ID: 8189)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3678000569343567
    2. 'ant' → logprob: -2.617799997329712
    3. '   ' → logprob: -2.992799997329712
    4. ')' → logprob: -3.117799997329712
    5. 'oint' → logprob: -3.492799997329712
    6. 'ient' → logprob: -3.867799997329712
    7. 'o' → logprob: -3.867799997329712
    8. 'enant' → logprob: -4.117800235748291
    9. 'def' → logprob: -4.367800235748291
    10. '_ent' → logprob: -4.992800235748291

Token 470: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3702320456504822
    2. '):
' → logprob: -1.495232105255127
    3. ')' → logprob: -2.495232105255127
    4. '   ' → logprob: -6.370232105255127
    5. ' ):' → logprob: -7.995232105255127
    6. ',' → logprob: -8.245231628417969
    7. ' ):
' → logprob: -9.120231628417969
    8. ' )' → logprob: -9.245231628417969
    9. '):
' → logprob: -9.370231628417969
    10. '):

' → logprob: -9.370231628417969

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016706773021724075
    2. '#' → logprob: -10.250166893005371
    3. '
' → logprob: -10.500166893005371
    4. '   ' → logprob: -10.625166893005371
    5. ' playable' → logprob: -10.625166893005371
    6. '    
' → logprob: -11.375166893005371
    7. 'play' → logprob: -11.625166893005371
    8. 'if' → logprob: -12.125166893005371
    9. 'def' → logprob: -12.375166893005371
    10. 'possible' → logprob: -12.750166893005371

Token 472: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014279029332101345
    2. 'play' → logprob: -4.514278888702393
    3. 'def' → logprob: -6.764278888702393
    4. '#' (adapté à ' #') → logprob: -7.389278888702393
    5. ' playable' → logprob: -7.889278888702393
    6. 'for' → logprob: -8.76427936553955
    7. ' for' → logprob: -8.88927936553955
    8. 'if' → logprob: -9.01427936553955
    9. '
' → logprob: -9.01427936553955
    10. '    
' → logprob: -9.26427936553955

Token 473: ' o' (ID: 293)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.10526368767023087
    2. '#' → logprob: -2.3552637100219727
    3. '   ' → logprob: -6.105263710021973
    4. 'op' → logprob: -6.980263710021973
    5. 'key' → logprob: -7.480263710021973
    6. 'o' → logprob: -7.730263710021973
    7. 'def' → logprob: -7.855263710021973
    8. 'if' → logprob: -9.355263710021973
    9. ' playable' → logprob: -9.605263710021973
    10. 'for' → logprob: -10.105263710021973

Token 474: ' essa' (ID: 19417)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.0413823127746582
    2. '_hand' → logprob: -1.4163823127746582
    3. '_play' → logprob: -2.291382312774658
    4. 'def' → logprob: -2.791382312774658
    5. 'plays' → logprob: -2.916382312774658
    6. '_can' → logprob: -3.041382312774658
    7. 'play' → logprob: -3.791382312774658
    8. 'hand' → logprob: -4.291382312774658
    9. 'possible' → logprob: -4.666382312774658
    10. 'cannot' → logprob: -4.916382312774658

Token 475: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0017759765032678843
    2. 'ye' → logprob: -6.626775741577148
    3. 'y' → logprob: -8.376775741577148
    4. 'aye' → logprob: -9.001775741577148
    5. 'e' → logprob: -10.626775741577148
    6. 'uie' → logprob: -11.251775741577148
    7. '
' → logprob: -11.626775741577148
    8. 'iye' → logprob: -12.001775741577148
    9. 'i' → logprob: -12.251775741577148
    10. 'aie' → logprob: -12.501775741577148

Token 476: ' tout' (ID: 5501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4455232620239258
    2. '  ' → logprob: -1.6955232620239258
    3. 'de' → logprob: -3.195523262023926
    4. ' ' → logprob: -3.570523262023926
    5. ' de' → logprob: -3.945523262023926
    6. 'for' → logprob: -3.945523262023926
    7. ':' → logprob: -4.195523262023926
    8. 'd' → logprob: -4.320523262023926
    9. 't' → logprob: -4.695523262023926
    10. ' for' → logprob: -5.195523262023926

Token 477: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2475319504737854
    2. 'es' → logprob: -2.7475318908691406
    3. ':' → logprob: -3.1225318908691406
    4. ' for' → logprob: -3.1225318908691406
    5. ' possible' → logprob: -4.747531890869141
    6. 'for' → logprob: -4.747531890869141
    7. ' de' → logprob: -4.747531890869141
    8. 'poss' → logprob: -5.122531890869141
    9. 'possible' → logprob: -5.247531890869141
    10. ' les' → logprob: -5.622531890869141

Token 478: ' empêcher' (ID: 184771)
  Prédit: ' empêcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empêcher' → logprob: -0.12986238300800323
    2. ' blo' → logprob: -3.8798623085021973
    3. ' perdre' → logprob: -4.004862308502197
    4. ' ne' → logprob: -4.254862308502197
    5. ' empe' → logprob: -4.254862308502197
    6. 'emp' → logprob: -4.504862308502197
    7. ' éviter' → logprob: -5.004862308502197
    8. 'ne' → logprob: -5.254862308502197
    9. 'blo' → logprob: -5.629862308502197
    10. ' ' → logprob: -5.879862308502197

Token 479: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5333541035652161
    2. ' que' → logprob: -1.2833540439605713
    3. ' p' → logprob: -2.0333540439605713
    4. ' that' → logprob: -6.28335428237915
    5. 'def' → logprob: -6.65835428237915
    6. 'que' → logprob: -7.15835428237915
    7. ' le' → logprob: -7.53335428237915
    8. 'that' → logprob: -8.283353805541992
    9. 'le' → logprob: -9.033353805541992
    10. '   ' → logprob: -9.283353805541992

Token 480: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23475444316864014
    2. 'def' → logprob: -2.1097545623779297
    3. ':' → logprob: -2.7347545623779297
    4. ' for' → logprob: -4.35975456237793
    5. ' de' → logprob: -6.23475456237793
    6. ' def' → logprob: -6.35975456237793
    7. ',' → logprob: -6.48475456237793
    8. ':
' → logprob: -7.10975456237793
    9. 's' → logprob: -7.35975456237793
    10. 'for' → logprob: -7.48475456237793

Token 481: ' gagner' (ID: 64227)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04379032924771309
    2. ' gagner' → logprob: -3.168790340423584
    3. 'win' → logprob: -7.168790340423584
    4. 'gan' → logprob: -12.543789863586426
    5. ' win' → logprob: -12.668789863586426
    6. '
' → logprob: -13.043789863586426
    7. ' ' → logprob: -13.293789863586426
    8. '_g' → logprob: -13.418789863586426
    9. 'p' → logprob: -13.668789863586426
    10. 'winning' → logprob: -13.668789863586426

Token 482: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000983743229880929
    2. 'def' → logprob: -7.625983715057373
    3. 'for' → logprob: -8.875984191894531
    4. ' for' → logprob: -9.000984191894531
    5. ':' → logprob: -9.625984191894531
    6. '```' → logprob: -10.250984191894531
    7. '
' → logprob: -10.875984191894531
    8. ',' → logprob: -11.000984191894531
    9. ' playable' → logprob: -11.125984191894531
    10. ':
' → logprob: -11.250984191894531

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005452767014503479
    2. 'play' → logprob: -5.505452632904053
    3. ' if' → logprob: -7.880452632904053
    4. ' playable' → logprob: -8.130453109741211
    5. 'if' → logprob: -8.755453109741211
    6. ' for' → logprob: -8.755453109741211
    7. 'for' → logprob: -9.505453109741211
    8. '```' → logprob: -9.880453109741211
    9. ' ' → logprob: -10.380453109741211
    10. ' play' → logprob: -10.505453109741211

Token 484: ' playable' (ID: 131447)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.6366774439811707
    2. '   ' → logprob: -1.3866775035858154
    3. 'for' → logprob: -2.2616775035858154
    4. 'def' → logprob: -3.0116775035858154
    5. 'op' → logprob: -3.7616775035858154
    6. 'o' → logprob: -3.7616775035858154
    7. ' for' → logprob: -5.136677265167236
    8. ' playable' → logprob: -5.386677265167236
    9. 'if' → logprob: -6.011677265167236
    10. '#' → logprob: -6.261677265167236

Token 485: '_o' (ID: 28960)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889143377542496
    2. '=' → logprob: -2.5788915157318115
    3. '   ' → logprob: -14.32889175415039
    4. '=[' → logprob: -14.70389175415039
    5. ' =[' → logprob: -15.32889175415039
    6. ' ' → logprob: -15.57889175415039
    7. ' ' → logprob: -16.57889175415039
    8. '＝' → logprob: -16.70389175415039
    9. '  ' → logprob: -16.95389175415039
    10. '=[]' → logprob: -17.32889175415039

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889077812433243
    2. '=' → logprob: -2.578890800476074
    3. '   ' → logprob: -15.078890800476074
    4. ' ' → logprob: -15.328890800476074
    5. ' =[' → logprob: -15.453890800476074
    6. '=[' → logprob: -15.578890800476074
    7. ' ' → logprob: -17.078889846801758
    8. ')' → logprob: -17.578889846801758
    9. '  ' → logprob: -17.828889846801758
    10. '_' → logprob: -18.078889846801758

Token 487: ' [' (ID: 723)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.4743267297744751
    2. ' [' → logprob: -0.9743267297744751
    3. '[' → logprob: -8.474327087402344
    4. '[x' → logprob: -10.849327087402344
    5. '[o' → logprob: -10.974327087402344
    6. '[a' → logprob: -12.974327087402344
    7. '{' → logprob: -14.974327087402344
    8. '[t' → logprob: -15.099327087402344
    9. '[e' → logprob: -15.349327087402344
    10. '[p' → logprob: -15.599327087402344

Token 488: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.522638169466518e-05
    2. ' c' → logprob: -10.625024795532227
    3. 'o' → logprob: -14.375024795532227
    4. '(c' → logprob: -15.500024795532227
    5. '   ' → logprob: -17.250024795532227
    6. '
' → logprob: -17.500024795532227
    7. ']' → logprob: -17.750024795532227
    8. '```' → logprob: -18.375024795532227
    9. 'x' → logprob: -18.625024795532227
    10. ')c' → logprob: -18.875024795532227

Token 489: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005234356038272381
    2. 'for' → logprob: -5.255234241485596
    3. ' in' → logprob: -15.130234718322754
    4. '	for' → logprob: -15.755234718322754
    5. ' ' → logprob: -16.005233764648438
    6. ' ' → logprob: -17.255233764648438
    7. 'c' → logprob: -18.880233764648438
    8. '   ' → logprob: -19.005233764648438
    9. ' для' → logprob: -19.630233764648438
    10. '  ' → logprob: -19.630233764648438

Token 490: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20194357633590698
    2. 'c' → logprob: -1.9519436359405518
    3. ' o' → logprob: -3.3269436359405518
    4. 'o' → logprob: -5.326943397521973
    5. ' in' → logprob: -10.326943397521973
    6. ' ' → logprob: -11.076943397521973
    7. '_c' → logprob: -11.514443397521973
    8. '_' → logprob: -11.701943397521973
    9. '_o' → logprob: -12.014443397521973
    10. 'in' → logprob: -12.264443397521973

Token 491: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5243780016899109
    2. 'in' → logprob: -0.8993780016899109
    3. 'o' → logprob: -6.774377822875977
    4. ' o' → logprob: -10.149377822875977
    5. '_o' → logprob: -10.524377822875977
    6. 'i' → logprob: -11.524377822875977
    7. ' ' → logprob: -11.774377822875977
    8. 'import' → logprob: -11.774377822875977
    9. '  ' → logprob: -12.649377822875977
    10. 'c' → logprob: -12.774377822875977

Token 492: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.2254786491394043
    2. ' o' → logprob: -1.6004786491394043
    3. '   ' → logprob: -10.725479125976562
    4. ' ' → logprob: -11.350479125976562
    5. 'p' → logprob: -12.225479125976562
    6. '	o' → logprob: -12.225479125976562
    7. '_o' → logprob: -12.475479125976562
    8. '  ' → logprob: -12.600479125976562
    9. '
' → logprob: -13.162979125976562
    10. '(o' → logprob: -13.287979125976562

Token 493: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -2.5822400857578032e-05
    2. '_o' → logprob: -11.000025749206543
    3. 'o' → logprob: -12.625025749206543
    4. '_can' → logprob: -13.000025749206543
    5. '_h' → logprob: -13.875025749206543
    6. 'hand' → logprob: -14.125025749206543
    7. ' _' → logprob: -14.625025749206543
    8. ' o' → logprob: -15.500025749206543
    9. 'Hand' → logprob: -15.500025749206543
    10. '_play' → logprob: -15.625025749206543

Token 494: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.004078401252627373
    2. 'if' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.379077911376953
    4. '	if' → logprob: -19.129077911376953
    5. '   ' → logprob: -19.254077911376953
    6. '    ' → logprob: -19.504077911376953
    7. 'If' → logprob: -19.879077911376953
    8. ' ' → logprob: -20.004077911376953
    9. ' in' → logprob: -20.129077911376953
    10. 's' → logprob: -20.629077911376953

Token 495: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6931484341621399
    2. 'can' → logprob: -0.6931484341621399
    3. '(can' → logprob: -14.818148612976074
    4. '	can' → logprob: -14.818148612976074
    5. 'c' → logprob: -15.568148612976074
    6. ' not' → logprob: -16.568147659301758
    7. ' ' → logprob: -16.568147659301758
    8. '.can' → logprob: -16.818147659301758
    9. ' c' → logprob: -17.068147659301758
    10. '_can' → logprob: -17.193147659301758

Token 496: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -3.292907877039397e-06
    2. 'place' → logprob: -13.25000286102295
    3. '_' → logprob: -14.62500286102295
    4. '_can' → logprob: -14.87500286102295
    5. '_places' → logprob: -15.12500286102295
    6. ' _' → logprob: -16.250003814697266
    7. '_play' → logprob: -17.000003814697266
    8. 'can' → logprob: -17.375003814697266
    9. '_put' → logprob: -17.625003814697266
    10. '_have' → logprob: -17.625003814697266

Token 497: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00012356207298580557
    2. ' (' → logprob: -9.000123977661133
    3. '(' → logprob: -16.125123977661133
    4. 'c' → logprob: -18.500123977661133
    5. ' ' → logprob: -18.875123977661133
    6. '(
' → logprob: -19.125123977661133
    7. '
' → logprob: -19.750123977661133
    8. '©' → logprob: -19.750123977661133
    9. '

' → logprob: -19.875123977661133
    10. '```' → logprob: -20.000123977661133

Token 498: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0022749120835214853
    2. ',' → logprob: -6.252274990081787
    3. ' (' → logprob: -8.252274513244629
    4. ',c' → logprob: -10.127274513244629
    5. '(' → logprob: -10.377274513244629
    6. ')' → logprob: -11.877274513244629
    7. ' ,' → logprob: -13.127274513244629
    8. 'c' → logprob: -13.252274513244629
    9. ' ' → logprob: -14.252274513244629
    10. '(
' → logprob: -14.627274513244629

Token 499: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.03894229605793953
    2. ' table' → logprob: -3.288942337036133
    3. 'c' → logprob: -7.163942337036133
    4. '(table' → logprob: -9.288942337036133
    5. ' c' → logprob: -10.663942337036133
    6. 'card' → logprob: -11.913942337036133
    7. ' ' → logprob: -13.038942337036133
    8. '<table' → logprob: -15.288942337036133
    9. ' card' → logprob: -15.413942337036133
    10. '
' → logprob: -15.413942337036133

Token 500: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013485688250511885
    2. ')]
' → logprob: -6.626348495483398
    3. ' )' → logprob: -11.501348495483398
    4. ')' → logprob: -11.751348495483398
    5. ')]

' → logprob: -13.001348495483398
    6. ']' → logprob: -13.876348495483398
    7. ')]
' → logprob: -14.126348495483398
    8. '')]' → logprob: -15.876348495483398
    9. '   ' → logprob: -16.0013484954834
    10. '}]' → logprob: -16.5013484954834

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13228577375411987
    2. ':' → logprob: -2.2572858333587646
    3. ':
' → logprob: -4.7572855949401855
    4. ' if' → logprob: -4.8822855949401855
    5. ' for' → logprob: -6.6322855949401855
    6. '```' → logprob: -7.5072855949401855
    7. '       ' → logprob: -7.7572855949401855
    8. '<|end|>' → logprob: -8.632286071777344
    9. '  ' → logprob: -9.132286071777344
    10. '
' → logprob: -9.257286071777344

Token 502: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008784037083387375
    2. 'for' → logprob: -5.00878381729126
    3. ' if' → logprob: -6.50878381729126
    4. '   ' → logprob: -7.50878381729126
    5. ' for' → logprob: -10.758784294128418
    6. '```' → logprob: -12.008784294128418
    7. '	if' → logprob: -15.383784294128418
    8. 'If' → logprob: -16.8837833404541
    9. 'def' → logprob: -17.1337833404541
    10. ':' → logprob: -17.1337833404541

Token 503: ' playable' (ID: 131447)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.041459400206804276
    2. ' playable' → logprob: -3.541459321975708
    3. 'not' → logprob: -4.791459560394287
    4. ' not' → logprob: -5.791459560394287
    5. ' play' → logprob: -8.666459083557129
    6. 'played' → logprob: -10.166459083557129
    7. 'len' → logprob: -11.166459083557129
    8. 'Playable' → logprob: -11.416459083557129
    9. '(play' → logprob: -11.416459083557129
    10. '  ' → logprob: -11.666459083557129

Token 504: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.00016086915275081992
    2. ':' → logprob: -9.375161170959473
    3. '):' → logprob: -10.625161170959473
    4. '_e' → logprob: -11.375161170959473
    5. '_a' → logprob: -12.000161170959473
    6. '):
' → logprob: -12.125161170959473
    7. ')' → logprob: -12.375161170959473
    8. '_u' → logprob: -12.500161170959473
    9. '_:' → logprob: -12.875161170959473
    10. '   ' → logprob: -13.000161170959473

Token 505: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008572661899961531
    2. ':
' → logprob: -7.125857353210449
    3. '==' → logprob: -10.25085735321045
    4. '):' → logprob: -11.87585735321045
    5. ' ==' → logprob: -12.62585735321045
    6. ' :' → logprob: -12.62585735321045
    7. '=' → logprob: -12.87585735321045
    8. '   ' → logprob: -14.12585735321045
    9. '):
' → logprob: -15.25085735321045
    10. '[' → logprob: -16.375856399536133

Token 506: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41598567366600037
    2. ':
' → logprob: -1.6659857034683228
    3. '       ' → logprob: -1.9159857034683228
    4. '   ' → logprob: -5.540985584259033
    5. ' for' → logprob: -9.540986061096191
    6. '):
' → logprob: -10.540986061096191
    7. '```' → logprob: -10.915986061096191
    8. 'for' → logprob: -11.790986061096191
    9. ',' → logprob: -12.040986061096191
    10. ' :
' → logprob: -12.290986061096191

Token 507: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1811378300189972
    2. 'for' → logprob: -2.431137800216675
    3. '       ' → logprob: -2.556137800216675
    4. '	for' → logprob: -10.181138038635254
    5. '   ' → logprob: -10.431138038635254
    6. '
' → logprob: -10.556138038635254
    7. '           ' → logprob: -11.056138038635254
    8. '#' (adapté à ' #') → logprob: -11.806138038635254
    9. '```' → logprob: -11.806138038635254
    10. ':
' → logprob: -12.306138038635254

Token 508: ' o' (ID: 293)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5237076878547668
    2. 'for' → logprob: -0.8987076878547668
    3. '   ' → logprob: -8.023707389831543
    4. '       ' → logprob: -8.523707389831543
    5. '	for' → logprob: -11.148707389831543
    6. '
' → logprob: -11.273707389831543
    7. 'def' → logprob: -11.273707389831543
    8. '```' → logprob: -12.023707389831543
    9. '#' → logprob: -12.398707389831543
    10. '           ' → logprob: -12.523707389831543

Token 509: ' peut' (ID: 9216)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7764695882797241
    2. 'for' → logprob: -1.5264695882797241
    3. ':' → logprob: -1.9014695882797241
    4. '   ' → logprob: -3.6514697074890137
    5. ' doit' → logprob: -3.6514697074890137
    6. ' tries' → logprob: -3.7764697074890137
    7. ' must' → logprob: -3.9014697074890137
    8. 's' → logprob: -4.151469707489014
    9. 'def' → logprob: -4.526469707489014
    10. ' joue' → logprob: -5.026469707489014

Token 510: ' jouer' (ID: 48012)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5908330678939819
    2. 'poser' → logprob: -1.340833067893982
    3. 'for' → logprob: -2.7158331871032715
    4. '       ' → logprob: -3.3408331871032715
    5. ' poser' → logprob: -3.4658331871032715
    6. ' jouer' → logprob: -4.0908331871032715
    7. '           ' → logprob: -4.5908331871032715
    8. ' pos' → logprob: -5.4658331871032715
    9. 'pose' → logprob: -5.5908331871032715
    10. '   ' → logprob: -6.0908331871032715

Token 511: ' plusieurs' (ID: 20875)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3444972038269043
    2. ' for' → logprob: -1.5944972038269043
    3. ':' → logprob: -2.8444972038269043
    4. ':
' → logprob: -3.7194972038269043
    5. '           ' → logprob: -5.719497203826904
    6. 'for' → logprob: -6.219497203826904
    7. '   ' → logprob: -8.219497680664062
    8. ',' → logprob: -9.594497680664062
    9. '#' → logprob: -9.719497680664062
    10. '):
' → logprob: -10.219497680664062

Token 512: ' cartes' (ID: 70753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6323544383049011
    2. ':' → logprob: -2.132354497909546
    3. ' options' → logprob: -2.507354497909546
    4. ' cartes' → logprob: -2.632354497909546
    5. ' c' → logprob: -2.757354497909546
    6. 'for' → logprob: -3.257354497909546
    7. ' ' → logprob: -3.507354497909546
    8. 'c' → logprob: -3.757354497909546
    9. ' choix' → logprob: -4.632354259490967
    10. ' choices' → logprob: -5.257354259490967

Token 513: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14640755951404572
    2. ':
' → logprob: -3.0214076042175293
    3. ' for' → logprob: -3.1464076042175293
    4. ':' → logprob: -3.1464076042175293
    5. ',' → logprob: -7.896407604217529
    6. 'for' → logprob: -8.521407127380371
    7. '           ' → logprob: -8.771407127380371
    8. '   ' → logprob: -8.771407127380371
    9. '
' → logprob: -9.021407127380371
    10. ';' → logprob: -9.271407127380371

Token 514: ' il' (ID: 1793)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005507307127118111
    2. 'for' → logprob: -5.380507469177246
    3. '   ' → logprob: -7.505507469177246
    4. '	for' → logprob: -8.380507469177246
    5. '       ' → logprob: -9.505507469177246
    6. ' pour' → logprob: -11.130507469177246
    7. '
' → logprob: -11.755507469177246
    8. '           ' → logprob: -13.005507469177246
    9. '  ' → logprob: -14.130507469177246
    10. ' ' → logprob: -14.380507469177246

Token 515: ' va' (ID: 3423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6963490843772888
    2. 'for' → logprob: -1.1963491439819336
    3. 's' → logprob: -2.9463491439819336
    4. '       ' → logprob: -3.0713491439819336
    5. ' must' → logprob: -3.6963491439819336
    6. '   ' → logprob: -3.9463491439819336
    7. ' doit' → logprob: -4.321349143981934
    8. 'do' → logprob: -4.821349143981934
    9. ' faut' → logprob: -4.946349143981934
    10. 'n' → logprob: -5.821349143981934

Token 516: ' jouer' (ID: 48012)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3948889374732971
    2. ' for' → logprob: -2.0198888778686523
    3. ' essayer' → logprob: -2.1448888778686523
    4. 'try' → logprob: -2.7698888778686523
    5. ' try' → logprob: -5.144888877868652
    6. 'tries' → logprob: -6.644888877868652
    7. 'forcer' → logprob: -7.019888877868652
    8. 'attempt' → logprob: -7.644888877868652
    9. ' vouloir' → logprob: -7.644888877868652
    10. 'trying' → logprob: -7.644888877868652

Token 517: ' celle' (ID: 31790)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.3957524299621582
    2. ' for' → logprob: -1.5207524299621582
    3. ' chacune' → logprob: -1.7707524299621582
    4. ' to' → logprob: -1.8957524299621582
    5. ' une' → logprob: -2.895752429962158
    6. 'pour' → logprob: -3.395752429962158
    7. ' ' → logprob: -4.145752429962158
    8. 'for' → logprob: -4.270752429962158
    9. ' un' → logprob: -4.270752429962158
    10. ' toutes' → logprob: -4.395752429962158

Token 518: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.11787404119968414
    2. 's' → logprob: -2.3678741455078125
    3. 'qui' → logprob: -4.4928741455078125
    4. ' s' → logprob: -5.2428741455078125
    5. ' qu' → logprob: -8.742874145507812
    6. '(s' → logprob: -8.742874145507812
    7. '   ' → logprob: -8.742874145507812
    8. ' ' → logprob: -8.867874145507812
    9. ' that' → logprob: -9.367874145507812
    10. ' pour' → logprob: -9.492874145507812

Token 519: ' minimise' (ID: 148032)
  Prédit: ' emp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' emp' → logprob: -0.7008311748504639
    2. 'emp' → logprob: -1.0758311748504639
    3. ' rend' → logprob: -3.450831174850464
    4. ' permet' → logprob: -3.700831174850464
    5. ' maximise' → logprob: -4.200831413269043
    6. ' empêcher' → logprob: -4.200831413269043
    7. 'per' → logprob: -4.575831413269043
    8. 'max' → logprob: -4.950831413269043
    9. ' peut' → logprob: -5.200831413269043
    10. ' fait' → logprob: -5.325831413269043

Token 520: ' chance' (ID: 8058)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0837043821811676
    2. ' les' → logprob: -3.5837044715881348
    3. 's' → logprob: -4.458704471588135
    4. '   ' → logprob: -4.833704471588135
    5. 'la' → logprob: -5.333704471588135
    6. ' le' → logprob: -5.458704471588135
    7. ' s' → logprob: -5.458704471588135
    8. ' the' → logprob: -5.708704471588135
    9. ' ses' → logprob: -5.708704471588135
    10. ' sa' → logprob: -5.958704471588135

Token 521: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17458780109882355
    2. ' de' → logprob: -1.9245878458023071
    3. '   ' → logprob: -4.674587726593018
    4. ' s' → logprob: -6.424587726593018
    5. 'de' → logprob: -6.799587726593018
    6. '_s' → logprob: -7.299587726593018
    7. '       ' → logprob: -7.674587726593018
    8. 'd' → logprob: -8.674588203430176
    9. '(s' → logprob: -8.674588203430176
    10. ' d' → logprob: -8.799588203430176

Token 522: ' p' (ID: 275)
  Prédit: ' victoire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' victoire' → logprob: -0.10465104877948761
    2. 'p' → logprob: -2.7296509742736816
    3. 'vict' → logprob: -4.354650974273682
    4. 'vic' → logprob: -4.479650974273682
    5. ' p' → logprob: -4.854650974273682
    6. ' réussite' → logprob: -7.604650974273682
    7. 'v' → logprob: -8.60465145111084
    8. ' True' → logprob: -8.85465145111084
    9. ' la' → logprob: -8.85465145111084
    10. 'la' → logprob: -8.85465145111084

Token 523: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11795815825462341
    2. ' de' → logprob: -2.7429580688476562
    3. '(s' → logprob: -3.9929580688476562
    4. ' s' → logprob: -5.117958068847656
    5. 'def' → logprob: -5.367958068847656
    6. '   ' → logprob: -5.492958068847656
    7. '_s' → logprob: -5.742958068847656
    8. ' d' → logprob: -5.867958068847656
    9. 'd' → logprob: -6.992958068847656
    10. 'de' → logprob: -7.117958068847656

Token 524: ' gagner' (ID: 64227)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1645226627588272
    2. ' gagner' → logprob: -2.039522647857666
    3. 'win' → logprob: -4.414522647857666
    4. ' victoire' → logprob: -4.914522647857666
    5. 'vict' → logprob: -7.039522647857666
    6. ' win' → logprob: -7.539522647857666
    7. 'vic' → logprob: -8.039523124694824
    8. 'gain' → logprob: -8.789523124694824
    9. '勝' → logprob: -10.164523124694824
    10. 'winning' → logprob: -10.664523124694824

Token 525: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09034231305122375
    2. ' for' → logprob: -2.5903422832489014
    3. ':' → logprob: -5.7153425216674805
    4. '   ' → logprob: -6.2153425216674805
    5. '
' → logprob: -6.7153425216674805
    6. ',' → logprob: -7.0903425216674805
    7. 'for' → logprob: -7.0903425216674805
    8. ':
' → logprob: -7.5903425216674805
    9. '           ' → logprob: -7.7153425216674805
    10. '(' → logprob: -7.7153425216674805

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14266304671764374
    2. ' for' → logprob: -2.26766300201416
    3. 'for' → logprob: -4.26766300201416
    4. ':' → logprob: -4.89266300201416
    5. '           ' → logprob: -5.51766300201416
    6. ':
' → logprob: -6.01766300201416
    7. '
' → logprob: -7.89266300201416
    8. '```' → logprob: -8.26766300201416
    9. '   ' → logprob: -8.51766300201416
    10. '):
' → logprob: -9.14266300201416

Token 527: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13132244348526
    2. 'for' → logprob: -2.1313223838806152
    3. ' res' → logprob: -7.131322383880615
    4. 'res' → logprob: -7.256322383880615
    5. ' best' → logprob: -7.256322383880615
    6. '       ' → logprob: -7.506322383880615
    7. ' result' → logprob: -7.631322383880615
    8. 'result' → logprob: -8.131322860717773
    9. 'best' → logprob: -8.631322860717773
    10. 'min' → logprob: -9.131322860717773

Token 528: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3871764838695526
    2. ' for' → logprob: -1.137176513671875
    3. '       ' → logprob: -8.512176513671875
    4. '   ' → logprob: -10.137176513671875
    5. 'res' → logprob: -11.387176513671875
    6. 'return' → logprob: -11.387176513671875
    7. 'result' → logprob: -11.512176513671875
    8. 'min' → logprob: -11.762176513671875
    9. '           ' → logprob: -12.387176513671875
    10. 'best' → logprob: -12.512176513671875

Token 529: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08205043524503708
    2. 'for' → logprob: -2.582050323486328
    3. ' not' → logprob: -6.957050323486328
    4. ' return' → logprob: -7.207050323486328
    5. ' all' → logprob: -8.082050323486328
    6. '
' → logprob: -8.082050323486328
    7. 'return' → logprob: -8.707050323486328
    8. '   ' → logprob: -8.832050323486328
    9. 'not' → logprob: -8.957050323486328
    10. ' res' → logprob: -9.082050323486328

Token 530: ' doit' (ID: 21822)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30077770352363586
    2. 'for' → logprob: -1.4257776737213135
    3. ' return' → logprob: -4.925777912139893
    4. '   ' → logprob: -5.425777912139893
    5. 'return' → logprob: -6.300777912139893
    6. '       ' → logprob: -6.425777912139893
    7. 'def' → logprob: -6.550777912139893
    8. ' continue' → logprob: -7.550777912139893
    9. ' must' → logprob: -7.925777912139893
    10. ' doit' → logprob: -8.050777435302734

Token 531: ' tester' (ID: 51819)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.42300066351890564
    2. ' return' → logprob: -1.298000693321228
    3. ' for' → logprob: -4.298000812530518
    4. 'for' → logprob: -4.298000812530518
    5. 'voir' → logprob: -4.298000812530518
    6. ' vérifier' → logprob: -4.673000812530518
    7. ' voir' → logprob: -5.673000812530518
    8. ' check' → logprob: -5.798000812530518
    9. 'v' → logprob: -5.923000812530518
    10. ' retourner' → logprob: -6.173000812530518

Token 532: ' tous' (ID: 10688)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5840675234794617
    2. 'for' → logprob: -1.4590675830841064
    3. ' all' → logprob: -2.0840675830841064
    4. ' if' → logprob: -3.8340675830841064
    5. ' toutes' → logprob: -3.9590675830841064
    6. 'all' → logprob: -4.209067344665527
    7. ' tous' → logprob: -4.584067344665527
    8. ' each' → logprob: -4.959067344665527
    9. ' chaque' → logprob: -5.709067344665527
    10. 'if' → logprob: -6.209067344665527

Token 533: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.35273489356040955
    2. 'les' → logprob: -1.227734923362732
    3. 'c' → logprob: -6.1027350425720215
    4. 's' → logprob: -6.4777350425720215
    5. 'ces' → logprob: -8.727734565734863
    6. ' c' → logprob: -9.602734565734863
    7. 'ses' → logprob: -9.727734565734863
    8. ' ces' → logprob: -10.727734565734863
    9. ' ' → logprob: -10.977734565734863
    10. ' ' → logprob: -11.227734565734863

Token 534: ' coups' (ID: 98942)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05398815497756004
    2. ' c' → logprob: -4.053987979888916
    3. 'plays' → logprob: -4.303987979888916
    4. ' coups' → logprob: -4.428987979888916
    5. 'poss' → logprob: -5.678987979888916
    6. ' plays' → logprob: -6.803987979888916
    7. 'cards' → logprob: -6.803987979888916
    8. 'for' → logprob: -7.428987979888916
    9. 'play' → logprob: -7.678987979888916
    10. ' choix' → logprob: -7.803987979888916

Token 535: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2942318916320801
    2. ' for' → logprob: -1.54423189163208
    3. 'for' → logprob: -4.16923189163208
    4. ' possible' → logprob: -5.04423189163208
    5. ',' → logprob: -5.29423189163208
    6. ' and' → logprob: -5.41923189163208
    7. ' et' → logprob: -5.91923189163208
    8. ' pour' → logprob: -6.41923189163208
    9. ' possibles' → logprob: -6.41923189163208
    10. 'possible' → logprob: -6.66923189163208

Token 536: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.07550652325153351
    2. ' o' → logprob: -2.7005064487457275
    3. ' playable' → logprob: -5.700506687164307
    4. 'l' → logprob: -6.950506687164307
    5. 'play' → logprob: -7.825506687164307
    6. ' l' → logprob: -8.075506210327148
    7. 'jou' → logprob: -8.700506210327148
    8. ' play' → logprob: -9.200506210327148
    9. ' ' → logprob: -9.700506210327148
    10. '	o' → logprob: -10.575506210327148

Token 537: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03417428582906723
    2. ' for' → logprob: -3.7841742038726807
    3. ',' → logprob: -5.53417444229126
    4. ' and' → logprob: -5.65917444229126
    5. '           ' → logprob: -6.65917444229126
    6. 'for' → logprob: -7.28417444229126
    7. ':' → logprob: -7.65917444229126
    8. '   ' → logprob: -8.659173965454102
    9. ' et' → logprob: -8.909173965454102
    10. ' pour' → logprob: -9.034173965454102

Token 538: ' p' (ID: 275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02189372107386589
    2. 'for' → logprob: -4.146893501281738
    3. '       ' → logprob: -5.146893501281738
    4. '           ' → logprob: -11.396893501281738
    5. '   ' → logprob: -11.771893501281738
    6. '	for' → logprob: -12.646893501281738
    7. ' ' → logprob: -14.021893501281738
    8. ' ' → logprob: -14.271893501281738
    9. ' return' → logprob: -15.896893501281738
    10. ' results' → logprob: -16.146894454956055

Token 539: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7746821641921997
    2. '_hand' → logprob: -1.0246821641921997
    3. ' for' → logprob: -2.89968204498291
    4. 'wins' → logprob: -3.89968204498291
    5. ' gagne' → logprob: -4.77468204498291
    6. 'oss' → logprob: -4.77468204498291
    7. 's' → logprob: -5.02468204498291
    8. 'hand' → logprob: -5.39968204498291
    9. '_win' → logprob: -5.39968204498291
    10. 'must' → logprob: -5.39968204498291

Token 540: ' gagner' (ID: 64227)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.595601499080658
    2. ' all' → logprob: -1.0956015586853027
    3. 'dfs' → logprob: -3.3456015586853027
    4. ' dfs' → logprob: -3.5956015586853027
    5. ' pouvoir' → logprob: -4.220601558685303
    6. ' be' → logprob: -5.470601558685303
    7. 'être' → logprob: -5.845601558685303
    8. 'can' → logprob: -5.970601558685303
    9. 's' → logprob: -6.095601558685303
    10. 'able' → logprob: -6.470601558685303

Token 541: ' quelle' (ID: 47442)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4058470129966736
    2. ' for' → logprob: -1.7808470726013184
    3. ' only' → logprob: -2.2808470726013184
    4. 'if' → logprob: -3.9058470726013184
    5. 'for' → logprob: -4.155847072601318
    6. 'only' → logprob: -4.280847072601318
    7. ' at' → logprob: -5.530847072601318
    8. ' si' → logprob: -6.530847072601318
    9. ' uniquement' → logprob: -6.655847072601318
    10. ' pour' → logprob: -6.905847072601318

Token 542: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.14300759136676788
    2. 'que' → logprob: -2.018007516860962
    3. 'ques' → logprob: -8.518007278442383
    4. 'qu' → logprob: -10.518007278442383
    5. ' qu' → logprob: -10.768007278442383
    6. 'fois' → logprob: -11.143007278442383
    7. ' that' → logprob: -11.143007278442383
    8. 'that' → logprob: -11.143007278442383
    9. '   ' → logprob: -12.393007278442383
    10. 'con' → logprob: -12.518007278442383

Token 543: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.5357463359832764
    2. ' ce' → logprob: -1.5357463359832764
    3. 'ce' → logprob: -1.7857463359832764
    4. 'so' → logprob: -4.6607465744018555
    5. ' soient' → logprob: -5.0357465744018555
    6. 'fois' → logprob: -5.9107465744018555
    7. 'c' → logprob: -6.0357465744018555
    8. ' ' → logprob: -6.0357465744018555
    9. 'cel' → logprob: -6.2857465744018555
    10. '```' → logprob: -6.7857465744018555

Token 544: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8761001229286194
    2. 'la' → logprob: -1.2511000633239746
    3. 'c' → logprob: -2.1261000633239746
    4. 'l' → logprob: -2.7511000633239746
    5. ' ' → logprob: -2.8761000633239746
    6. 'le' → logprob: -4.126100063323975
    7. '
' → logprob: -5.126100063323975
    8. ' l' → logprob: -5.251100063323975
    9. '   ' → logprob: -5.376100063323975
    10. ' le' → logprob: -5.626100063323975

Token 545: ' réponse' (ID: 50332)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.23259198665618896
    2. 'ré' → logprob: -2.2325921058654785
    3. 'c' → logprob: -3.6075921058654785
    4. 'cho' → logprob: -3.7325921058654785
    5. ' carte' → logprob: -4.3575921058654785
    6. ' réponse' → logprob: -4.4825921058654785
    7. 'card' → logprob: -4.9825921058654785
    8. '
' → logprob: -6.1075921058654785
    9. 'cou' → logprob: -6.3575921058654785
    10. 'jou' → logprob: -6.4825921058654785

Token 546: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030767787247896194
    2. 'for' → logprob: -3.7807676792144775
    3. '       ' → logprob: -5.655767917633057
    4. '   ' → logprob: -5.780767917633057
    5. ':' → logprob: -7.655767917633057
    6. ' pour' → logprob: -9.155767440795898
    7. ':
' → logprob: -9.780767440795898
    8. ' (' → logprob: -10.530767440795898
    9. 'def' → logprob: -10.655767440795898
    10. '	for' → logprob: -10.780767440795898

Token 547: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.23010069131851196
    2. 'l' → logprob: -1.7301006317138672
    3. ' o' → logprob: -3.730100631713867
    4. ' l' → logprob: -5.480100631713867
    5. 'p' → logprob: -10.105100631713867
    6. 'op' → logprob: -10.480100631713867
    7. '	o' → logprob: -11.355100631713867
    8. ''o' → logprob: -11.730100631713867
    9. '```' → logprob: -11.855100631713867
    10. ' ' → logprob: -12.355100631713867

Token 548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023084042593836784
    2. ' for' → logprob: -3.8980839252471924
    3. ':' → logprob: -7.1480841636657715
    4. '   ' → logprob: -7.5230841636657715
    5. ',' → logprob: -7.7730841636657715
    6. '
' → logprob: -8.773083686828613
    7. 'for' → logprob: -9.273083686828613
    8. '           ' → logprob: -9.398083686828613
    9. '<|end|>' → logprob: -9.398083686828613
    10. ':
' → logprob: -10.023083686828613

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5788341760635376
    2. ' for' → logprob: -0.9538341760635376
    3. 'for' → logprob: -2.953834056854248
    4. '   ' → logprob: -6.328834056854248
    5. 'def' → logprob: -8.953834533691406
    6. '	for' → logprob: -10.328834533691406
    7. '           ' → logprob: -10.453834533691406
    8. ',' → logprob: -11.078834533691406
    9. ' ' → logprob: -11.703834533691406
    10. '        
' → logprob: -11.703834533691406

Token 550: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20349708199501038
    2. ' for' → logprob: -1.703497052192688
    3. '       ' → logprob: -6.203496932983398
    4. '   ' → logprob: -9.953496932983398
    5. '	for' → logprob: -11.953496932983398
    6. '           ' → logprob: -13.328496932983398
    7. '
' → logprob: -13.453496932983398
    8. 'return' → logprob: -13.703496932983398
    9. ' ' → logprob: -14.578496932983398
    10. '        
' → logprob: -15.828496932983398

Token 551: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14270316064357758
    2. ' c' → logprob: -2.017703056335449
    3. 'o' → logprob: -11.14270305633545
    4. ' ' → logprob: -12.64270305633545
    5. ' o' → logprob: -12.89270305633545
    6. '	c' → logprob: -13.51770305633545
    7. ' ' → logprob: -14.01770305633545
    8. '_c' → logprob: -14.14270305633545
    9. 'card' → logprob: -14.26770305633545
    10. '   ' → logprob: -14.39270305633545

Token 552: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00044151677866466343
    2. 'in' → logprob: -7.750441551208496
    3. 's' → logprob: -12.500441551208496
    4. ' ' → logprob: -12.750441551208496
    5. 'c' → logprob: -14.125441551208496
    6. 'import' → logprob: -14.750441551208496
    7. '  ' → logprob: -15.062941551208496
    8. 'play' → logprob: -15.187941551208496
    9. '   ' → logprob: -15.687941551208496
    10. 'Playable' → logprob: -15.750441551208496

Token 553: ' playable' (ID: 131447)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.0024779161904007196
    2. ' playable' → logprob: -6.002478122711182
    3. ' play' → logprob: -13.127477645874023
    4. 'Playable' → logprob: -16.002477645874023
    5. 'played' → logprob: -16.627477645874023
    6. '(play' → logprob: -16.752477645874023
    7. '_play' → logprob: -17.877477645874023
    8. '-play' → logprob: -18.502477645874023
    9. '.play' → logprob: -18.627477645874023
    10. '  ' → logprob: -18.877477645874023

Token 554: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -1.6286106983898208e-05
    2. 'o' → logprob: -11.125016212463379
    3. '_play' → logprob: -14.750016212463379
    4. 'O' → logprob: -15.125016212463379
    5. '{o' → logprob: -15.250016212463379
    6. ' o' → logprob: -15.500016212463379
    7. ':' → logprob: -15.875016212463379
    8. '   ' → logprob: -16.500017166137695
    9. '_hand' → logprob: -16.500017166137695
    10. '	o' → logprob: -16.625017166137695

Token 555: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1277509480714798
    2. ':' → logprob: -2.127750873565674
    3. '   ' → logprob: -8.127751350402832
    4. '           ' → logprob: -8.627751350402832
    5. '):
' → logprob: -9.252751350402832
    6. ',' → logprob: -9.502751350402832
    7. '       ' → logprob: -9.752751350402832
    8. ' :
' → logprob: -9.752751350402832
    9. ':
' → logprob: -10.377751350402832
    10. ':

' → logprob: -11.752751350402832

Token 556: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5332391262054443
    2. '       ' → logprob: -1.1582391262054443
    3. '
' → logprob: -2.9082391262054443
    4. '<|end|>' → logprob: -3.5332391262054443
    5. '   ' → logprob: -5.033239364624023
    6. '```' → logprob: -6.033239364624023
    7. '<|end|>' → logprob: -6.158239364624023
    8. ' new' → logprob: -6.658239364624023
    9. '{
' → logprob: -7.783239364624023
    10. '	       ' → logprob: -7.783239364624023

Token 557: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.12568414211273193
    2. 'new' (adapté à ' new') → logprob: -2.2506842613220215
    3. '           ' → logprob: -4.3756842613220215
    4. '   ' → logprob: -9.625683784484863
    5. '               ' → logprob: -10.000683784484863
    6. '       ' → logprob: -10.000683784484863
    7. 'New' → logprob: -11.250683784484863
    8. '	new' → logprob: -11.750683784484863
    9. '```' → logprob: -12.125683784484863
    10. '_new' → logprob: -12.375683784484863

Token 558: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -3.810037742368877e-05
    2. '_o' → logprob: -10.750038146972656
    3. '_' → logprob: -11.125038146972656
    4. 'o' → logprob: -14.125038146972656
    5. 'table' → logprob: -14.500038146972656
    6. '_tables' → logprob: -16.250038146972656
    7. '_t' → logprob: -16.750038146972656
    8. '_op' → logprob: -16.750038146972656
    9. 'Table' → logprob: -16.875038146972656
    10. '_hand' → logprob: -17.000038146972656

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888978719711304
    2. '=' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.828889846801758
    4. '|' → logprob: -18.703889846801758
    5. ' ' → logprob: -19.203889846801758
    6. ' new' → logprob: -19.578889846801758
    7. 'new' → logprob: -19.703889846801758
    8. ' |=' → logprob: -19.703889846801758
    9. ' =
' → logprob: -19.828889846801758
    10. '```' → logprob: -19.828889846801758

Token 560: ' table' (ID: 3293)
  Prédit: ' table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' table' → logprob: -0.3868713676929474
    2. 'table' → logprob: -1.136871337890625
    3. '(table' → logprob: -15.761871337890625
    4. '	table' → logprob: -15.886871337890625
    5. '<table' → logprob: -18.761871337890625
    6. ' ' → logprob: -19.011871337890625
    7. 't' → logprob: -19.011871337890625
    8. ')table' → logprob: -19.011871337890625
    9. ' tableau' → logprob: -19.386871337890625
    10. '$table' → logprob: -19.386871337890625

Token 561: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.25193077325820923
    2. '|' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.501931190490723
    4. ' ' → logprob: -16.001930236816406
    5. '.union' → logprob: -17.126930236816406
    6. '|{
' → logprob: -17.501930236816406
    7. '{|' → logprob: -18.126930236816406
    8. '{' → logprob: -18.501930236816406
    9. '```' → logprob: -19.001930236816406
    10. '	' → logprob: -19.126930236816406

Token 562: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2519405782222748
    2. ' {' → logprob: -1.5019406080245972
    3. '{x' → logprob: -12.376940727233887
    4. '{s' → logprob: -12.626940727233887
    5. '{o' → logprob: -13.501940727233887
    6. '{id' → logprob: -13.876940727233887
    7. '{return' → logprob: -14.751940727233887
    8. '{sub' → logprob: -14.876940727233887
    9. '{name' → logprob: -14.876940727233887
    10. '{i' → logprob: -15.251940727233887

Token 563: 'c' (ID: 66)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.029782891273498535
    2. 'c' → logprob: -3.529782772064209
    3. ' {' → logprob: -10.529783248901367
    4. ' c' → logprob: -12.404783248901367
    5. '(c' → logprob: -14.154783248901367
    6. '<c' → logprob: -15.279783248901367
    7. '[c' → logprob: -15.654783248901367
    8. '   ' → logprob: -15.904783248901367
    9. '	c' → logprob: -15.904783248901367
    10. '%c' → logprob: -16.779783248901367

Token 564: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3885341286659241
    2. '}
' → logprob: -1.1385340690612793
    3. '           ' → logprob: -6.513534069061279
    4. '}
' → logprob: -8.888534545898438
    5. ' }
' → logprob: -11.388534545898438
    6. 'new' → logprob: -11.513534545898438
    7. ' }' → logprob: -12.138534545898438
    8. '       ' → logprob: -12.388534545898438
    9. '               ' → logprob: -12.888534545898438
    10. '}

' → logprob: -13.888534545898438

Token 565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019167302176356316
    2. ' new' → logprob: -4.394167423248291
    3. 'new' → logprob: -5.019167423248291
    4. '          ' → logprob: -11.769166946411133
    5. '<|end|>' → logprob: -11.894166946411133
    6. '_new' → logprob: -13.769166946411133
    7. '<|end|>' → logprob: -13.769166946411133
    8. '		' → logprob: -13.894166946411133
    9. '   ' → logprob: -14.019166946411133
    10. ',new' → logprob: -14.019166946411133

Token 566: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.24407356977462769
    2. ' new' → logprob: -1.6190736293792725
    3. '           ' → logprob: -3.9940736293792725
    4. ' ' → logprob: -10.869073867797852
    5. '	new' → logprob: -11.619073867797852
    6. '_new' → logprob: -12.119073867797852
    7. '```' → logprob: -12.369073867797852
    8. '<|end|>' → logprob: -12.369073867797852
    9. 'New' → logprob: -12.619073867797852
    10. '<|end|>' → logprob: -13.369073867797852

Token 567: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.1853550374507904
    2. '_p' → logprob: -2.0603549480438232
    3. 'o' → logprob: -3.1853549480438232
    4. 'p' → logprob: -8.185355186462402
    5. '_op' → logprob: -9.810355186462402
    6. '_hand' → logprob: -9.935355186462402
    7. '_' → logprob: -11.810355186462402
    8. '```' → logprob: -12.435355186462402
    9. ' o' → logprob: -12.810355186462402
    10. ''_' → logprob: -13.060355186462402

Token 568: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -1.6240566083070007e-06
    2. 'hand' → logprob: -13.875001907348633
    3. '_h' → logprob: -16.125001907348633
    4. '=' → logprob: -16.250001907348633
    5. '_' → logprob: -16.500001907348633
    6. ''_' → logprob: -16.750001907348633
    7. ' =' → logprob: -17.000001907348633
    8. '_new' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.625001907348633
    10. ' _' → logprob: -17.625001907348633

Token 569: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. '   ' → logprob: -16.91022491455078
    4. ' ' → logprob: -17.41022491455078
    5. 'new' → logprob: -19.16022491455078
    6. '  ' → logprob: -19.78522491455078
    7. '    ' → logprob: -19.91022491455078
    8. ')' → logprob: -20.28522491455078
    9. 's' → logprob: -20.41022491455078
    10. '           ' → logprob: -20.41022491455078

Token 570: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00012356207298580557
    2. ' tuple' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.250123977661133
    4. 'tu' → logprob: -17.375123977661133
    5. '(tuple' → logprob: -18.500123977661133
    6. '       ' → logprob: -20.125123977661133
    7. '           ' → logprob: -20.125123977661133
    8. 't' → logprob: -20.750123977661133
    9. ' ' → logprob: -21.000123977661133
    10. '  ' → logprob: -21.250123977661133

Token 571: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006717386189848185
    2. 'x' → logprob: -5.006717205047607
    3. '(' → logprob: -13.256717681884766
    4. '[x' → logprob: -16.506717681884766
    5. '(
' → logprob: -16.756717681884766
    6. '([' → logprob: -17.256717681884766
    7. ' x' → logprob: -17.881717681884766
    8. '	x' → logprob: -19.881717681884766
    9. '(sorted' → logprob: -20.256717681884766
    10. '$x' → logprob: -20.256717681884766

Token 572: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038046542555093765
    2. 'for' → logprob: -3.2880465984344482
    3. '(x' → logprob: -12.788046836853027
    4. 'x' → logprob: -14.038046836853027
    5. ' ' → logprob: -14.913046836853027
    6. '	for' → logprob: -15.163046836853027
    7. 'f' → logprob: -15.913046836853027
    8. '   ' → logprob: -16.03804588317871
    9. '1' → logprob: -16.03804588317871
    10. 'y' → logprob: -16.28804588317871

Token 573: ' x' (ID: 1215)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0008056987426243722
    2. ' o' → logprob: -7.125805854797363
    3. 'x' → logprob: -13.875805854797363
    4. '   ' → logprob: -15.875805854797363
    5. ' ' → logprob: -17.125804901123047
    6. '_o' → logprob: -17.125804901123047
    7. '	o' → logprob: -17.250804901123047
    8. '  ' → logprob: -17.500804901123047
    9. 'in' → logprob: -17.750804901123047
    10. ' in' → logprob: -17.750804901123047

Token 574: ' in' (ID: 306)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.4858579933643341
    2. ' in' → logprob: -1.3608579635620117
    3. 'in' → logprob: -2.2358579635620117
    4. ' o' → logprob: -3.8608579635620117
    5. 'x' → logprob: -7.985857963562012
    6. ' x' → logprob: -10.110857963562012
    7. ' ' → logprob: -11.610857963562012
    8. 'for' → logprob: -11.610857963562012
    9. '_o' → logprob: -11.610857963562012
    10. '  ' → logprob: -12.735857963562012

Token 575: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0002966127940453589
    2. ' o' → logprob: -8.125296592712402
    3. ' ' → logprob: -15.625296592712402
    4. '   ' → logprob: -15.750296592712402
    5. 'x' → logprob: -16.50029754638672
    6. '	o' → logprob: -16.62529754638672
    7. 'ot' → logprob: -17.62529754638672
    8. '_o' → logprob: -17.62529754638672
    9. 'c' → logprob: -18.25029754638672
    10. '  ' → logprob: -18.25029754638672

Token 576: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.16127663850784302
    2. 'o' → logprob: -1.9112765789031982
    3. 'hand' → logprob: -7.411276817321777
    4. '_o' → logprob: -8.286276817321777
    5. ' o' → logprob: -9.536276817321777
    6. 'Hand' → logprob: -10.286276817321777
    7. 'if' → logprob: -10.536276817321777
    8. '_h' → logprob: -11.661276817321777
    9. '   ' → logprob: -11.786276817321777
    10. 'for' → logprob: -12.286276817321777

Token 577: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.029752222821116447
    2. 'if' → logprob: -3.529752254486084
    3. '           ' → logprob: -13.904751777648926
    4. '            ' → logprob: -15.279751777648926
    5. '	if' → logprob: -15.904751777648926
    6. '               ' → logprob: -16.029752731323242
    7. '          ' → logprob: -16.279752731323242
    8. '                ' → logprob: -16.779752731323242
    9. 'If' → logprob: -17.029752731323242
    10. '              ' → logprob: -17.154752731323242

Token 578: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '(x' → logprob: -18.503177642822266
    4. '   ' → logprob: -18.753177642822266
    5. '	x' → logprob: -18.878177642822266
    6. ' ' → logprob: -20.253177642822266
    7. '  ' → logprob: -20.253177642822266
    8. '$x' → logprob: -21.128177642822266
    9. '    ' → logprob: -21.628177642822266
    10. '"x' → logprob: -21.753177642822266

Token 579: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.02975071594119072
    2. '!=' → logprob: -3.5297508239746094
    3. '()!=' → logprob: -16.27975082397461
    4. ')!=' → logprob: -16.52975082397461
    5. '!=(' → logprob: -16.77975082397461
    6. ' not' → logprob: -17.15475082397461
    7. '!='' → logprob: -17.52975082397461
    8. ' ' → logprob: -17.90475082397461
    9. ' ' → logprob: -18.15475082397461
    10. '!=-' → logprob: -18.65475082397461

Token 580: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. '	c' → logprob: -17.258615493774414
    4. ')c' → logprob: -18.008615493774414
    5. ' ' → logprob: -19.633615493774414
    6. '_c' → logprob: -19.758615493774414
    7. '<c' → logprob: -21.008615493774414
    8. 'x' → logprob: -21.008615493774414
    9. '   ' → logprob: -21.258615493774414
    10. '  ' → logprob: -21.633615493774414

Token 581: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.027201535180211067
    2. '           ' → logprob: -3.9022016525268555
    3. ')' → logprob: -5.0272016525268555
    4. ')
' → logprob: -9.527201652526855
    5. ' )
' → logprob: -12.902201652526855
    6. '):
' → logprob: -13.402201652526855
    7. '       ' → logprob: -13.902201652526855
    8. '          ' → logprob: -14.152201652526855
    9. ')

' → logprob: -14.777201652526855
    10. '               ' → logprob: -15.152201652526855

Token 582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005127601907588542
    2. 'new' → logprob: -8.750513076782227
    3. '
' → logprob: -9.250513076782227
    4. 'res' → logprob: -9.375513076782227
    5. ' new' → logprob: -9.750513076782227
    6. '            
' → logprob: -10.375513076782227
    7. '```' → logprob: -10.625513076782227
    8. ' res' → logprob: -10.750513076782227
    9. '   ' → logprob: -11.375513076782227
    10. 'return' → logprob: -11.625513076782227

Token 583: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.48413559794425964
    2. '           ' → logprob: -1.484135627746582
    3. ' res' → logprob: -1.859135627746582
    4. 'result' → logprob: -7.109135627746582
    5. '```' → logprob: -8.609135627746582
    6. 'new' → logprob: -8.734135627746582
    7. ' new' → logprob: -10.234135627746582
    8. ' result' → logprob: -10.984135627746582
    9. '            
' → logprob: -11.609135627746582
    10. 'next' → logprob: -11.734135627746582

Token 584: ' Ensuite' (ID: 113884)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0003978992172051221
    2. 'result' → logprob: -8.750397682189941
    3. 'if' → logprob: -9.250397682189941
    4. '           ' → logprob: -9.750397682189941
    5. 'new' → logprob: -9.750397682189941
    6. ' res' → logprob: -10.875397682189941
    7. 'ret' → logprob: -12.625397682189941
    8. 'next' → logprob: -13.875397682189941
    9. '            
' → logprob: -14.375397682189941
    10. 'r' → logprob: -14.750397682189941

Token 585: ' c' (ID: 274)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.18358036875724792
    2. ' res' → logprob: -2.0585803985595703
    3. '           ' → logprob: -3.4335803985595703
    4. 'return' → logprob: -5.93358039855957
    5. '
' → logprob: -6.30858039855957
    6. 'result' → logprob: -6.30858039855957
    7. ' return' → logprob: -7.68358039855957
    8. '            
' → logprob: -8.93358039855957
    9. '```' → logprob: -8.93358039855957
    10. 'new' → logprob: -9.05858039855957

Token 586: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.9914855360984802
    2. '=' → logprob: -1.366485595703125
    3. ' =' → logprob: -1.866485595703125
    4. '#' → logprob: -2.116485595703125
    5. 'res' → logprob: -3.366485595703125
    6. 'result' → logprob: -3.991485595703125
    7. 'return' → logprob: -3.991485595703125
    8. 'rés' → logprob: -4.741485595703125
    9. 'def' → logprob: -5.866485595703125
    10. ',' → logprob: -6.116485595703125

Token 587: ' de' (ID: 334)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0572589747607708
    2. ' dfs' → logprob: -2.9322590827941895
    3. 'p' → logprob: -6.3072590827941895
    4. ' p' → logprob: -8.182258605957031
    5. ' au' → logprob: -8.932258605957031
    6. 'au' → logprob: -9.807258605957031
    7. 'le' → logprob: -11.182258605957031
    8. 'la' → logprob: -11.307258605957031
    9. ' la' → logprob: -11.682258605957031
    10. ' ' → logprob: -11.682258605957031

Token 588: ' nouveau' (ID: 23184)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1054627075791359
    2. ' dfs' → logprob: -2.3554627895355225
    3. 'p' → logprob: -5.355462551116943
    4. ' p' → logprob: -7.730462551116943
    5. 'return' → logprob: -10.105463027954102
    6. ' return' → logprob: -11.480463027954102
    7. ' retour' → logprob: -12.355463027954102
    8. 'df' → logprob: -12.355463027954102
    9. ' ' → logprob: -12.355463027954102
    10. ' nouveau' → logprob: -13.105463027954102

Token 589: ' au' (ID: 2791)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.015903325751423836
    2. 'p' → logprob: -4.515903472900391
    3. ' dfs' → logprob: -5.390903472900391
    4. ' p' → logprob: -8.64090347290039
    5. 'au' → logprob: -10.14090347290039
    6. 'le' → logprob: -11.39090347290039
    7. ' au' → logprob: -11.51590347290039
    8. 'turn' → logprob: -11.76590347290039
    9. 'the' → logprob: -12.14090347290039
    10. 'l' → logprob: -12.26590347290039

Token 590: ' tour' (ID: 6970)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.02979700267314911
    2. 'p' → logprob: -3.654797077178955
    3. ' dfs' → logprob: -5.779797077178955
    4. ' p' → logprob: -8.029796600341797
    5. 'def' → logprob: -9.779796600341797
    6. 'd' → logprob: -12.029796600341797
    7. 'df' → logprob: -12.154796600341797
    8. '
' → logprob: -13.904796600341797
    9. 'dos' → logprob: -14.154796600341797
    10. 'player' → logprob: -14.279796600341797

Token 591: ' de' (ID: 334)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5388574004173279
    2. 'dfs' → logprob: -1.4138574600219727
    3. 'def' → logprob: -2.0388574600219727
    4. ' p' → logprob: -4.163857460021973
    5. '           ' → logprob: -4.663857460021973
    6. ' dfs' → logprob: -5.413857460021973
    7. 'de' → logprob: -5.538857460021973
    8. '(p' → logprob: -5.913857460021973
    9. ' de' → logprob: -6.038857460021973
    10. 'd' → logprob: -6.163857460021973

Token 592: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005960084032267332
    2. ' p' → logprob: -5.255959987640381
    3. 'dfs' → logprob: -7.255959987640381
    4. ' dfs' → logprob: -11.505960464477539
    5. 'def' → logprob: -12.005960464477539
    6. 'can' → logprob: -13.130960464477539
    7. ' can' → logprob: -14.255960464477539
    8. 'd' → logprob: -15.005960464477539
    9. '
' → logprob: -15.880960464477539
    10. '_p' → logprob: -15.880960464477539

Token 593: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007613136898726225
    2. 'res' → logprob: -5.632613182067871
    3. ' res' → logprob: -6.132613182067871
    4. 'return' → logprob: -7.382613182067871
    5. 'result' → logprob: -7.882613182067871
    6. '   ' → logprob: -8.507613182067871
    7. ' return' → logprob: -8.882613182067871
    8. '       ' → logprob: -9.382613182067871
    9. ',' → logprob: -9.757613182067871
    10. '            
' → logprob: -9.882613182067871

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3640212416648865
    2. ' res' → logprob: -1.4890213012695312
    3. 'res' → logprob: -2.6140213012695312
    4. '   ' → logprob: -5.989021301269531
    5. 'result' → logprob: -7.114021301269531
    6. 'return' → logprob: -7.114021301269531
    7. ' return' → logprob: -7.614021301269531
    8. ' result' → logprob: -8.114021301269531
    9. '       ' → logprob: -8.489021301269531
    10. '```' → logprob: -8.614021301269531

Token 595: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.013132935389876366
    2. ' res' → logprob: -5.2631330490112305
    3. 'if' → logprob: -5.7631330490112305
    4. 'result' → logprob: -6.1381330490112305
    5. '           ' → logprob: -6.2631330490112305
    6. ' if' → logprob: -7.8881330490112305
    7. 'return' → logprob: -8.51313304901123
    8. 'ret' → logprob: -10.13813304901123
    9. 'r' → logprob: -11.63813304901123
    10. ' result' → logprob: -11.63813304901123

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.438261985778809
    4. '   ' → logprob: -15.563261985778809
    5. '           ' → logprob: -18.063262939453125
    6. '    ' → logprob: -18.188262939453125
    7. '  ' → logprob: -18.313262939453125
    8. ' ' → logprob: -18.563262939453125
    9. '＝' → logprob: -18.563262939453125
    10. '	' → logprob: -19.313262939453125

Token 597: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.06196948140859604
    2. ' dfs' → logprob: -2.811969518661499
    3. 'df' → logprob: -14.061969757080078
    4. '   ' → logprob: -14.311969757080078
    5. 'd' → logprob: -15.436969757080078
    6. ' ' → logprob: -15.936969757080078
    7. 'ds' → logprob: -17.936969757080078
    8. 'DFS' → logprob: -17.936969757080078
    9. 'dfa' → logprob: -18.311969757080078
    10. '  ' → logprob: -18.436969757080078

Token 598: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.4877583086490631
    2. '(table' → logprob: -0.9877582788467407
    3. '_after' → logprob: -4.362758159637451
    4. '(' → logprob: -7.237758159637451
    5. ' (' → logprob: -9.86275863647461
    6. '(after' → logprob: -10.36275863647461
    7. 'new' → logprob: -10.98775863647461
    8. 'After' → logprob: -11.86275863647461
    9. '_new' → logprob: -12.73775863647461
    10. 'after' → logprob: -13.11275863647461

Token 599: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -2.2246291337069124e-05
    2. '(new' → logprob: -11.500021934509277
    3. 'table' → logprob: -12.125021934509277
    4. '(table' → logprob: -12.125021934509277
    5. 'new' → logprob: -14.500021934509277
    6. '_TABLE' → logprob: -16.000022888183594
    7. '_new' → logprob: -16.250022888183594
    8. '_' → logprob: -16.375022888183594
    9. '(_' → logprob: -16.500022888183594
    10. 'Table' → logprob: -17.000022888183594

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007978630252182484
    2. '(new' → logprob: -5.132978439331055
    3. ',new' → logprob: -6.757978439331055
    4. ' ,' → logprob: -7.507978439331055
    5. '(' → logprob: -9.382978439331055
    6. ' (' → logprob: -9.382978439331055
    7. '           ' → logprob: -9.757978439331055
    8. ',p' → logprob: -9.757978439331055
    9. '(p' → logprob: -10.382978439331055
    10. '(table' → logprob: -12.257978439331055

Token 601: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005257833749055862
    2. 'o' → logprob: -5.755257606506348
    3. ' p' → logprob: -6.255257606506348
    4. '   ' → logprob: -9.380257606506348
    5. ' o' → logprob: -11.130257606506348
    6. 'tuple' → logprob: -11.255257606506348
    7. 'new' → logprob: -11.255257606506348
    8. '
' → logprob: -11.630257606506348
    9. ' ' → logprob: -12.380257606506348
    10. '  ' → logprob: -12.630257606506348

Token 602: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -7.64839569455944e-05
    2. 'hand' → logprob: -9.625076293945312
    3. 'new' → logprob: -11.750076293945312
    4. 'o' → logprob: -14.750076293945312
    5. 'Hand' → logprob: -14.750076293945312
    6. '_HAND' → logprob: -14.875076293945312
    7. '_new' → logprob: -15.625076293945312
    8. '_h' → logprob: -15.875076293945312
    9. '   ' → logprob: -15.875076293945312
    10. '```' → logprob: -16.000076293945312

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014692727709189057
    2. ',new' → logprob: -6.751469135284424
    3. ' ,' → logprob: -8.501469612121582
    4. 'new' → logprob: -9.501469612121582
    5. ' new' → logprob: -11.126469612121582
    6. '           ' → logprob: -12.501469612121582
    7. ',
' → logprob: -13.501469612121582
    8. '          ' → logprob: -15.876469612121582
    9. '       ' → logprob: -15.876469612121582
    10. '   ' → logprob: -16.001468658447266

Token 604: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00023119196703191847
    2. ' new' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.12523078918457
    4. '           ' → logprob: -15.75023078918457
    5. '	new' → logprob: -16.50023078918457
    6. '    ' → logprob: -17.12523078918457
    7. '               ' → logprob: -17.12523078918457
    8. 'New' → logprob: -17.37523078918457
    9. ' ' → logprob: -17.62523078918457
    10. '       ' → logprob: -17.87523078918457

Token 605: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.0053924149833619595
    2. '_hand' → logprob: -5.255392551422119
    3. '_' → logprob: -9.255392074584961
    4. 'o' → logprob: -9.755392074584961
    5. '_h' → logprob: -12.505392074584961
    6. ' _' → logprob: -15.505392074584961
    7. '_a' → logprob: -15.880392074584961
    8. '_and' → logprob: -15.880392074584961
    9. '_op' → logprob: -16.13039207458496
    10. '_or' → logprob: -16.25539207458496

Token 606: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.004369597882032394
    2. 'hand' → logprob: -5.504369735717773
    3. 'and' → logprob: -8.254369735717773
    4. 'new' → logprob: -11.379369735717773
    5. '_h' → logprob: -12.129369735717773
    6. '_and' → logprob: -12.254369735717773
    7. '_new' → logprob: -12.754369735717773
    8. '_' → logprob: -13.129369735717773
    9. ' _' → logprob: -13.879369735717773
    10. '_HAND' → logprob: -14.379369735717773

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01734832301735878
    2. ',m' → logprob: -4.142348289489746
    3. ' ,' → logprob: -6.642348289489746
    4. 'm' → logprob: -12.392348289489746
    5. '   ' → logprob: -13.392348289489746
    6. '           ' → logprob: -14.017348289489746
    7. 'memo' → logprob: -14.392348289489746
    8. ')' → logprob: -15.017348289489746
    9. ' memo' → logprob: -15.017348289489746
    10. '  ' → logprob: -15.267348289489746

Token 608: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.01106998510658741
    2. ' memo' → logprob: -4.5110697746276855
    3. 'm' → logprob: -10.761070251464844
    4. 'memory' → logprob: -14.886070251464844
    5. 'mem' → logprob: -15.011070251464844
    6. ')' → logprob: -16.386070251464844
    7. ' ' → logprob: -16.636070251464844
    8. '.memo' → logprob: -16.886070251464844
    9. 'Memo' → logprob: -17.886070251464844
    10. ' memoir' → logprob: -18.511070251464844

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011101586744189262
    2. ')
' → logprob: -4.511101722717285
    3. '           ' → logprob: -9.886101722717285
    4. ')
' → logprob: -13.386101722717285
    5. '   ' → logprob: -14.636101722717285
    6. '       ' → logprob: -15.386101722717285
    7. ' )' → logprob: -15.386101722717285
    8. '):
' → logprob: -16.01110076904297
    9. '          ' → logprob: -16.13610076904297
    10. ')

' → logprob: -16.76110076904297

Token 610: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043579499470070004
    2. ' if' → logprob: -8.250435829162598
    3. '<|end|>' → logprob: -9.250435829162598
    4. '       ' → logprob: -10.625435829162598
    5. '   ' → logprob: -11.250435829162598
    6. '		' → logprob: -11.500435829162598
    7. '<|end|>' → logprob: -11.875435829162598
    8. '               ' → logprob: -12.500435829162598
    9. '
' → logprob: -12.750435829162598
    10. '	       ' → logprob: -13.000435829162598

Token 611: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002951793372631073
    2. ' if' → logprob: -6.252951622009277
    3. '		' → logprob: -7.377951622009277
    4. '               ' → logprob: -9.127951622009277
    5. '
' → logprob: -9.377951622009277
    6. '<|end|>' → logprob: -10.002951622009277
    7. '	       ' → logprob: -10.377951622009277
    8. 'if' (adapté à ' if') → logprob: -10.627951622009277
    9. '   ' → logprob: -11.252951622009277
    10. '       ' → logprob: -11.502951622009277

Token 612: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5759792923927307
    2. ' not' → logprob: -0.8259792923927307
    3. '   ' → logprob: -10.825979232788086
    4. ' res' → logprob: -11.325979232788086
    5. 'res' → logprob: -12.325979232788086
    6. '!' → logprob: -12.700979232788086
    7. '(not' → logprob: -16.075979232788086
    8. ' ' → logprob: -16.200979232788086
    9. '	not' → logprob: -16.450979232788086
    10. '```' → logprob: -17.450979232788086

Token 613: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.12692810595035553
    2. ' res' → logprob: -2.1269280910491943
    3. '(res' → logprob: -16.626928329467773
    4. '	res' → logprob: -18.001928329467773
    5. '_res' → logprob: -19.001928329467773
    6. '
' → logprob: -19.126928329467773
    7. '$res' → logprob: -19.501928329467773
    8. 'ress' → logprob: -20.001928329467773
    9. ' ' → logprob: -20.001928329467773
    10. 'resi' → logprob: -21.126928329467773

Token 614: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4769246578216553
    2. ':' → logprob: -0.9769246578216553
    3. '               ' → logprob: -6.976924896240234
    4. '           ' → logprob: -7.601924896240234
    5. '):
' → logprob: -7.601924896240234
    6. ':return' → logprob: -7.601924896240234
    7. ' :
' → logprob: -9.476924896240234
    8. '<|end|>' → logprob: -9.476924896240234
    9. '       ' → logprob: -9.601924896240234
    10. '():
' → logprob: -9.601924896240234

Token 615: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011617878044489771
    2. ':
' → logprob: -9.375116348266602
    3. ' return' → logprob: -11.250116348266602
    4. '           ' → logprob: -11.875116348266602
    5. ':' → logprob: -12.125116348266602
    6. ':return' → logprob: -13.625116348266602
    7. 'return' → logprob: -13.875116348266602
    8. '):
' → logprob: -13.875116348266602
    9. '                   ' → logprob: -14.000116348266602
    10. ' :
' → logprob: -14.625116348266602

Token 616: ' #' (ID: 1069)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.40167567133903503
    2. '               ' → logprob: -1.1516757011413574
    3. ' memo' → logprob: -4.901675701141357
    4. 'return' → logprob: -5.401675701141357
    5. '                   ' → logprob: -6.401675701141357
    6. '           ' → logprob: -7.401675701141357
    7. 'False' → logprob: -8.2766752243042
    8. '   ' → logprob: -9.7766752243042
    9. 'm' → logprob: -10.0266752243042
    10. ' return' → logprob: -10.1516752243042

Token 617: ' Il' (ID: 5329)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.09805440902709961
    2. '               ' → logprob: -2.9730544090270996
    3. ' memo' → logprob: -3.2230544090270996
    4. '                   ' → logprob: -6.2230544090271
    5. '           ' → logprob: -8.473054885864258
    6. 'return' → logprob: -8.723054885864258
    7. '   ' → logprob: -10.598054885864258
    8. '                ' → logprob: -11.723054885864258
    9. ' return' → logprob: -12.348054885864258
    10. 'm' → logprob: -12.473054885864258

Token 618: ' existe' (ID: 19498)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10712668299674988
    2. '               ' → logprob: -2.8571267127990723
    3. 'return' → logprob: -3.2321267127990723
    4. '                   ' → logprob: -6.107126712799072
    5. '           ' → logprob: -6.857126712799072
    6. '   ' → logprob: -7.357126712799072
    7. ' ' → logprob: -8.482126235961914
    8. ')' → logprob: -8.982126235961914
    9. '                ' → logprob: -9.482126235961914
    10. ':return' → logprob: -10.107126235961914

Token 619: ' un' (ID: 537)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.3633917570114136
    2. ' True' → logprob: -1.3633917570114136
    3. 'False' → logprob: -1.9883917570114136
    4. '               ' → logprob: -2.113391876220703
    5. 'c' → logprob: -2.738391876220703
    6. '                   ' → logprob: -2.738391876220703
    7. ' c' → logprob: -2.863391876220703
    8. ' False' → logprob: -3.738391876220703
    9. '=True' → logprob: -5.613391876220703
    10. ')' → logprob: -5.863391876220703

Token 620: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05481570586562157
    2. 'cho' → logprob: -3.8048157691955566
    3. 'op' → logprob: -4.429815769195557
    4. ' coup' → logprob: -5.429815769195557
    5. 'ad' → logprob: -5.929815769195557
    6. 'move' → logprob: -5.929815769195557
    7. ' choix' → logprob: -6.179815769195557
    8. ' advers' → logprob: -6.679815769195557
    9. ')' → logprob: -6.929815769195557
    10. '```' → logprob: -7.304815769195557

Token 621: ' de' (ID: 334)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.0368053913116455
    2. '                   ' → logprob: -1.6618053913116455
    3. '               ' → logprob: -1.9118053913116455
    4. '<|end|>' → logprob: -2.5368053913116455
    5. ' that' → logprob: -2.6618053913116455
    6. ' c' → logprob: -3.2868053913116455
    7. '           ' → logprob: -3.5368053913116455
    8. ' que' → logprob: -3.9118053913116455
    9. '                ' → logprob: -4.536805152893066
    10. '<|end|>' → logprob: -5.036805152893066

Token 622: ' o' (ID: 293)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13400781154632568
    2. ' c' → logprob: -2.7590079307556152
    3. 'o' → logprob: -2.8840079307556152
    4. ' o' → logprob: -5.134007930755615
    5. ' ' → logprob: -10.134007453918457
    6. ')' → logprob: -10.384007453918457
    7. 'new' → logprob: -10.384007453918457
    8. ' new' → logprob: -10.759007453918457
    9. '
' → logprob: -11.259007453918457
    10. '<|end|>' → logprob: -11.321507453918457

Token 623: ' empê' (ID: 192030)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.06111275777220726
    2. 'qui' → logprob: -3.186112642288208
    3. ' that' → logprob: -5.186112880706787
    4. ' ' → logprob: -6.061112880706787
    5. '               ' → logprob: -6.311112880706787
    6. '           ' → logprob: -6.936112880706787
    7. '   ' → logprob: -6.936112880706787
    8. ' empê' → logprob: -6.936112880706787
    9. 'that' → logprob: -7.186112880706787
    10. '                   ' → logprob: -7.311112880706787

Token 624: 'chant' (ID: 15311)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.10109477490186691
    2. 'chant' → logprob: -2.3510947227478027
    3. 'cher' → logprob: -8.351095199584961
    4. 'ché' → logprob: -8.351095199584961
    5. 'chent' → logprob: -9.351095199584961
    6. 'çant' → logprob: -9.476095199584961
    7. '#' → logprob: -9.976095199584961
    8. 'ce' → logprob: -10.101095199584961
    9. 'ch' → logprob: -10.476095199584961
    10. 'e' → logprob: -10.851095199584961

Token 625: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048641640692949295
    2. ' p' → logprob: -3.0486416816711426
    3. ' le' → logprob: -10.673641204833984
    4. 'le' → logprob: -10.798641204833984
    5. 'memo' → logprob: -12.673641204833984
    6. ' ' → logprob: -13.423641204833984
    7. ' True' → logprob: -13.548641204833984
    8. '   ' → logprob: -13.548641204833984
    9. 'True' → logprob: -14.423641204833984
    10. ' la' → logprob: -14.673641204833984

Token 626: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.127707839012146
    2. 'de' → logprob: -2.2527079582214355
    3. '               ' → logprob: -4.3777079582214355
    4. 'd' → logprob: -6.8777079582214355
    5. '                   ' → logprob: -8.377707481384277
    6. '   ' → logprob: -8.502707481384277
    7. ' d' → logprob: -8.502707481384277
    8. 'def' → logprob: -8.627707481384277
    9. '           ' → logprob: -9.127707481384277
    10. '_de' → logprob: -9.502707481384277

Token 627: ' gagner' (ID: 64227)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.018638452515006065
    2. ' gagner' → logprob: -4.018638610839844
    3. 'win' → logprob: -7.643638610839844
    4. 'gan' → logprob: -13.143638610839844
    5. ' win' → logprob: -13.143638610839844
    6. 'winning' → logprob: -13.518638610839844
    7. ' g' → logprob: -14.268638610839844
    8. 'wins' → logprob: -14.643638610839844
    9. 'vict' → logprob: -14.768638610839844
    10. 'gain' → logprob: -14.768638610839844

Token 628: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026377519592642784
    2. '                   ' → logprob: -3.6513774394989014
    3. '           ' → logprob: -10.40137767791748
    4. ',' → logprob: -10.52637767791748
    5. ':
' → logprob: -11.90137767791748
    6. ' return' → logprob: -12.65137767791748
    7. '                ' → logprob: -12.90137767791748
    8. '   ' → logprob: -13.52637767791748
    9. '                       ' → logprob: -13.65137767791748
    10. 'return' → logprob: -13.65137767791748

Token 629: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.56102097814437e-05
    2. '                   ' → logprob: -10.125045776367188
    3. '           ' → logprob: -12.750045776367188
    4. ' return' → logprob: -14.250045776367188
    5. ',' → logprob: -14.500045776367188
    6. '                ' → logprob: -14.875045776367188
    7. '              ' → logprob: -15.375045776367188
    8. ':' → logprob: -15.625045776367188
    9. ':
' → logprob: -15.750045776367188
    10. 'return' → logprob: -15.875045776367188

Token 630: ' return' (ID: 622)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.15558959543704987
    2. '               ' → logprob: -2.0305895805358887
    3. 'return' (adapté à ' return') → logprob: -4.905589580535889
    4. ' memo' → logprob: -5.655589580535889
    5. '                   ' → logprob: -6.905589580535889
    6. '           ' → logprob: -7.280589580535889
    7. '   ' → logprob: -8.905590057373047
    8. ' return' → logprob: -10.405590057373047
    9. '                ' → logprob: -11.030590057373047
    10. '       ' → logprob: -11.155590057373047

Token 631: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. '(False' → logprob: -19.875709533691406
    4. 'True' → logprob: -20.750709533691406
    5. 'false' → logprob: -21.875709533691406
    6. '=False' → logprob: -23.000709533691406
    7. 'F' → logprob: -24.000709533691406
    8. '_false' → logprob: -24.000709533691406
    9. '.False' → logprob: -25.250709533691406
    10. 'FALSE' → logprob: -26.000709533691406

Token 632: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12597531080245972
    2. '   ' → logprob: -3.1259753704071045
    3. '<|end|>' → logprob: -3.5009753704071045
    4. '    
' → logprob: -3.8759753704071045
    5. '
' → logprob: -4.500975131988525
    6. '        
' → logprob: -5.250975131988525
    7. '  
' → logprob: -6.375975131988525
    8. ' return' → logprob: -6.750975131988525
    9. '   
' → logprob: -6.875975131988525
    10. '\n' → logprob: -7.625975131988525

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01417996734380722
    2. '   ' → logprob: -4.2641801834106445
    3. '           ' → logprob: -12.389180183410645
    4. '      ' → logprob: -12.764180183410645
    5. 'return' → logprob: -12.764180183410645
    6. '     ' → logprob: -13.639180183410645
    7. '    ' → logprob: -13.764180183410645
    8. '
' → logprob: -13.889180183410645
    9. ' return' → logprob: -14.014180183410645
    10. 'continue' → logprob: -14.764180183410645

Token 634: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4066290557384491
    2. '       ' → logprob: -1.2816290855407715
    3. 'memo' → logprob: -3.1566290855407715
    4. ' memo' → logprob: -5.2816290855407715
    5. ' True' → logprob: -5.9066290855407715
    6. '
' → logprob: -6.2816290855407715
    7. 'True' → logprob: -6.2816290855407715
    8. '```' → logprob: -6.6566290855407715
    9. '           ' → logprob: -8.406628608703613
    10. '        
' → logprob: -9.281628608703613

Token 635: ' p' (ID: 275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14392614364624023
    2. 'memo' → logprob: -2.3939261436462402
    3. ' return' → logprob: -4.14392614364624
    4. '#' → logprob: -4.64392614364624
    5. '   ' → logprob: -4.64392614364624
    6. '       ' → logprob: -5.26892614364624
    7. ' memo' → logprob: -6.01892614364624
    8. ' #' → logprob: -10.268926620483398
    9. ' ' → logprob: -11.518926620483398
    10. '           ' → logprob: -11.643926620483398

Token 636: ' gagne' (ID: 141776)
  Prédit: ' gagne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gagne' → logprob: -0.34174448251724243
    2. ' can' → logprob: -2.4667444229125977
    3. 'g' → logprob: -3.5917444229125977
    4. 'can' → logprob: -3.5917444229125977
    5. ' wins' → logprob: -3.7167444229125977
    6. ' peut' → logprob: -3.8417444229125977
    7. 'wins' → logprob: -3.9667444229125977
    8. ' gagner' → logprob: -4.341744422912598
    9. 'est' → logprob: -4.466744422912598
    10. 'rem' → logprob: -4.466744422912598

Token 637: ' quel' (ID: 10613)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07834333181381226
    2. '       ' → logprob: -3.328343391418457
    3. '    
' → logprob: -3.828343391418457
    4. '<|end|>' → logprob: -4.953343391418457
    5. '        
' → logprob: -5.828343391418457
    6. '
' → logprob: -6.078343391418457
    7. '  
' → logprob: -6.203343391418457
    8. '\n' → logprob: -7.453343391418457
    9. ' return' → logprob: -7.578343391418457
    10. 'return' → logprob: -7.578343391418457

Token 638: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.22585584223270416
    2. 'que' → logprob: -1.600855827331543
    3. 'ques' → logprob: -8.850855827331543
    4. '   ' → logprob: -9.600855827331543
    5. 'quel' → logprob: -10.225855827331543
    6. '       ' → logprob: -10.475855827331543
    7. '```' → logprob: -10.600855827331543
    8. 'ue' → logprob: -11.100855827331543
    9. 'u' → logprob: -11.475855827331543
    10. 'con' → logprob: -11.600855827331543

Token 639: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.5879864692687988
    2. 'so' → logprob: -0.8379864692687988
    3. '```' → logprob: -5.337986469268799
    4. 'ce' → logprob: -6.212986469268799
    5. ' ' → logprob: -6.962986469268799
    6. 'que' → logprob: -7.337986469268799
    7. ' ' → logprob: -7.587986469268799
    8. '       ' → logprob: -7.587986469268799
    9. 's' → logprob: -7.837986469268799
    10. '   ' → logprob: -8.08798599243164

Token 640: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5605350136756897
    2. ' le' → logprob: -1.310534954071045
    3. ' ce' → logprob: -2.060534954071045
    4. 'ce' → logprob: -3.810534954071045
    5. 'c' → logprob: -6.310534954071045
    6. 'l' → logprob: -6.435534954071045
    7. ' ' → logprob: -6.435534954071045
    8. ' what' → logprob: -6.560534954071045
    9. 'what' → logprob: -6.935534954071045
    10. 'la' → logprob: -7.435534954071045

Token 641: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1303035467863083
    2. ' coup' → logprob: -2.7553036212921143
    3. 'cho' → logprob: -3.0053036212921143
    4. 'jeu' → logprob: -5.505303382873535
    5. ' choix' → logprob: -6.255303382873535
    6. 'cou' → logprob: -6.755303382873535
    7. 'jou' → logprob: -7.505303382873535
    8. ' ' → logprob: -8.255303382873535
    9. 'tour' → logprob: -8.380303382873535
    10. 'move' → logprob: -8.880303382873535

Token 642: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2831469476222992
    2. '   ' → logprob: -1.6581469774246216
    3. ' joué' → logprob: -4.033146858215332
    4. '       ' → logprob: -4.283146858215332
    5. 'de' → logprob: -4.783146858215332
    6. '    ' → logprob: -5.033146858215332
    7. ' que' → logprob: -5.908146858215332
    8. ' ' → logprob: -6.283146858215332
    9. ' possible' → logprob: -6.408146858215332
    10. '  ' → logprob: -6.783146858215332

Token 643: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.282100647687912
    2. ' o' → logprob: -1.4071006774902344
    3. 'l' → logprob: -7.157100677490234
    4. 'op' → logprob: -9.657100677490234
    5. '	o' → logprob: -10.032100677490234
    6. ' l' → logprob: -10.657100677490234
    7. ' ' → logprob: -10.782100677490234
    8. ''o' → logprob: -12.282100677490234
    9. '```' → logprob: -12.282100677490234
    10. ' advers' → logprob: -13.907100677490234

Token 644: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.252114862203598
    2. '   ' → logprob: -1.5021148920059204
    3. 'memo' → logprob: -10.502115249633789
    4. '           ' → logprob: -10.627115249633789
    5. '    
' → logprob: -10.627115249633789
    6. '        
' → logprob: -10.627115249633789
    7. ',' → logprob: -10.877115249633789
    8. ' memo' → logprob: -11.127115249633789
    9. '
' → logprob: -11.252115249633789
    10. ' ' → logprob: -11.752115249633789

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5762879252433777
    2. '   ' → logprob: -0.8262879252433777
    3. '```' → logprob: -9.326288223266602
    4. 'return' → logprob: -9.576288223266602
    5. ' return' → logprob: -9.701288223266602
    6. 'memo' → logprob: -10.451288223266602
    7. ' ' → logprob: -10.701288223266602
    8. '
' → logprob: -10.951288223266602
    9. ' memo' → logprob: -11.076288223266602
    10. '           ' → logprob: -11.451288223266602

Token 646: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15369068086147308
    2. 'return' (adapté à ' return') → logprob: -2.9036905765533447
    3. 'memo' → logprob: -3.2786905765533447
    4. ' return' → logprob: -3.4036905765533447
    5. ' memo' → logprob: -4.403690814971924
    6. '   ' → logprob: -5.528690814971924
    7. '           ' → logprob: -8.653690338134766
    8. ' True' → logprob: -9.028690338134766
    9. '
' → logprob: -9.903690338134766
    10. 'True' → logprob: -10.153690338134766

Token 647: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.061967797577381134
    2. ' True' → logprob: -2.8119678497314453
    3. '(True' → logprob: -16.311967849731445
    4. '   ' → logprob: -17.436967849731445
    5. 'true' → logprob: -18.936967849731445
    6. ' ' → logprob: -18.936967849731445
    7. '  ' → logprob: -19.811967849731445
    8. 'False' → logprob: -20.186967849731445
    9. '=True' → logprob: -20.186967849731445
    10. ' ' → logprob: -20.686967849731445

Token 648: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1229742094874382
    2. '<|end|>' → logprob: -2.747974157333374
    3. 'else' → logprob: -3.497974157333374
    4. 'return' → logprob: -4.372974395751953
    5. '```' → logprob: -6.372974395751953
    6. ')' → logprob: -6.497974395751953
    7. '
' → logprob: -6.747974395751953
    8. ' else' → logprob: -6.997974395751953
    9. '    
' → logprob: -6.997974395751953
    10. '...' → logprob: -7.122974395751953

Token 649: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 650: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.325065016746521
    2. '   ' → logprob: -1.325065016746521
    3. ' else' → logprob: -4.4500651359558105
    4. '
' → logprob: -10.575064659118652
    5. 'return' → logprob: -10.950064659118652
    6. '	else' → logprob: -12.575064659118652
    7. '```' → logprob: -12.575064659118652
    8. '    
' → logprob: -13.075064659118652
    9. 'elif' → logprob: -13.325064659118652
    10. '       ' → logprob: -13.575064659118652

Token 651: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2898032069206238
    2. ':
' → logprob: -2.2898032665252686
    3. '   ' → logprob: -2.5398032665252686
    4. ':' → logprob: -2.6648032665252686
    5. '):
' → logprob: -7.5398030281066895
    6. ':return' → logprob: -7.9148030281066895
    7. ',' → logprob: -8.414803504943848
    8. '{' → logprob: -8.664803504943848
    9. '	' → logprob: -9.164803504943848
    10. 'return' → logprob: -9.289803504943848

Token 652: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13647973537445068
    2. 'return' → logprob: -2.1364798545837402
    3. ' return' → logprob: -5.01147985458374
    4. '       ' → logprob: -6.26147985458374
    5. '#' → logprob: -7.01147985458374
    6. '```' → logprob: -11.011479377746582
    7. '   ' → logprob: -11.886479377746582
    8. '	return' → logprob: -12.261479377746582
    9. ' ' → logprob: -12.761479377746582
    10. ' #' → logprob: -13.261479377746582

Token 653: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008069098927080631
    2. ' return' → logprob: -5.008069038391113
    3. '   ' → logprob: -7.133069038391113
    4. '       ' → logprob: -7.633069038391113
    5. '#' (adapté à ' #') → logprob: -10.383069038391113
    6. '
' → logprob: -10.383069038391113
    7. '```' → logprob: -12.258069038391113
    8. '	return' → logprob: -13.383069038391113
    9. '{return' → logprob: -13.883069038391113
    10. '        
' → logprob: -14.758069038391113

Token 654: ' o' (ID: 293)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.062104370445013046
    2. '#' → logprob: -2.8121044635772705
    3. ' return' → logprob: -8.937104225158691
    4. '   ' → logprob: -13.187104225158691
    5. ' #' → logprob: -13.562104225158691
    6. 'new' → logprob: -14.312104225158691
    7. 'res' → logprob: -14.562104225158691
    8. '       ' → logprob: -14.812104225158691
    9. '
' → logprob: -15.437104225158691
    10. 'memo' → logprob: -16.437105178833008

Token 655: ' ne' (ID: 453)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.5555794835090637
    2. 'ne' → logprob: -1.430579423904419
    3. '#' → logprob: -2.680579423904419
    4. ' cannot' → logprob: -3.055579423904419
    5. ' ne' → logprob: -3.430579423904419
    6. 'return' → logprob: -4.430579662322998
    7. 'n' → logprob: -4.930579662322998
    8. '_ne' → logprob: -5.930579662322998
    9. 'can't' → logprob: -5.930579662322998
    10. 'can' → logprob: -6.305579662322998

Token 656: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.08024238049983978
    2. ' peux' → logprob: -3.080242395401001
    3. 'pe' → logprob: -4.205242156982422
    4. 'can' → logprob: -4.580242156982422
    5. ' can' → logprob: -5.830242156982422
    6. '_pe' → logprob: -6.205242156982422
    7. '_can' → logprob: -7.830242156982422
    8. 'p' → logprob: -9.205242156982422
    9. ')' → logprob: -9.955242156982422
    10. 'return' → logprob: -10.080242156982422

Token 657: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.03376614674925804
    2. 'pas' → logprob: -3.408766031265259
    3. '_pas' → logprob: -9.53376579284668
    4. ' plus' → logprob: -10.53376579284668
    5. ' ' → logprob: -11.78376579284668
    6. 'plus' → logprob: -11.78376579284668
    7. ' not' → logprob: -13.78376579284668
    8. ' rien' → logprob: -13.78376579284668
    9. 'p' → logprob: -13.90876579284668
    10. '   ' → logprob: -14.65876579284668

Token 658: ' jouer' (ID: 48012)
  Prédit: ' jouer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jouer' → logprob: -0.7115750908851624
    2. 'jou' → logprob: -1.5865750312805176
    3. 'pas' → logprob: -1.8365750312805176
    4. 'poser' → logprob: -2.3365750312805176
    5. ' pas' → logprob: -3.9615750312805176
    6. 'play' → logprob: -4.711575031280518
    7. 'pass' → logprob: -4.836575031280518
    8. ' play' → logprob: -5.086575031280518
    9. '       ' → logprob: -6.461575031280518
    10. ' poser' → logprob: -6.711575031280518

Token 659: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1870589405298233
    2. 'return' → logprob: -2.312058925628662
    3. ' return' → logprob: -2.937058925628662
    4. '
' → logprob: -4.562058925628662
    5. '   ' → logprob: -5.437058925628662
    6. ',' → logprob: -6.062058925628662
    7. '        
' → logprob: -7.062058925628662
    8. '	return' → logprob: -9.06205940246582
    9. '  
' → logprob: -9.31205940246582
    10. '    
' → logprob: -9.43705940246582

Token 660: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006732541602104902
    2. ' return' → logprob: -5.00673246383667
    3. '   ' → logprob: -11.381732940673828
    4. '#' → logprob: -12.881732940673828
    5. '       ' → logprob: -12.881732940673828
    6. 'new' → logprob: -14.881732940673828
    7. 'res' → logprob: -15.506732940673828
    8. ' ' → logprob: -16.756732940673828
    9. 'result' → logprob: -16.756732940673828
    10. '	return' → logprob: -17.756732940673828

Token 661: ''est' (ID: 6616)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31233060359954834
    2. 'eturn' → logprob: -2.062330722808838
    3. ' return' → logprob: -3.062330722808838
    4. '       ' → logprob: -3.187330722808838
    5. '   ' → logprob: -3.312330722808838
    6. '#' → logprob: -4.187330722808838
    7. 'est' → logprob: -8.18733024597168
    8. '
' → logprob: -8.56233024597168
    9. '           ' → logprob: -8.56233024597168
    10. ''est' → logprob: -8.81233024597168

Token 662: ' à' (ID: 1221)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.5233449935913086
    2. 'au' → logprob: -1.0233449935913086
    3. 'p' → logprob: -3.1483449935913086
    4. ' ' → logprob: -6.773344993591309
    5. ' True' → logprob: -6.773344993591309
    6. ' p' → logprob: -6.898344993591309
    7. 'le' → logprob: -7.273344993591309
    8. 'True' → logprob: -8.148344993591309
    9. ' le' → logprob: -9.023344993591309
    10. 'à' → logprob: -9.148344993591309

Token 663: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010334034450352192
    2. ' p' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.251033782958984
    4. '	p' → logprob: -15.751033782958984
    5. 'c' → logprob: -17.001033782958984
    6. '(p' → logprob: -17.001033782958984
    7. 'True' → logprob: -17.751033782958984
    8. ''p' → logprob: -17.751033782958984
    9. 't' → logprob: -17.876033782958984
    10. '(' → logprob: -18.126033782958984

Token 664: ' de' (ID: 334)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.6154857277870178
    2. 'return' → logprob: -1.615485668182373
    3. 'def' → logprob: -2.240485668182373
    4. '   ' → logprob: -2.740485668182373
    5. '  ' → logprob: -3.990485668182373
    6. ' de' → logprob: -4.240485668182373
    7. ' ' → logprob: -4.365485668182373
    8. 'turn' → logprob: -4.490485668182373
    9. ' return' → logprob: -5.115485668182373
    10. ' tour' → logprob: -5.615485668182373

Token 665: ' jouer' (ID: 48012)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.0004676113894674927
    2. ' jouer' → logprob: -8.250467300415039
    3. 'play' → logprob: -9.000467300415039
    4. 'tour' → logprob: -10.250467300415039
    5. 'pass' → logprob: -10.500467300415039
    6. '```' → logprob: -11.625467300415039
    7. 'j' → logprob: -12.250467300415039
    8. '   ' → logprob: -13.250467300415039
    9. 'p' → logprob: -13.875467300415039
    10. 'player' → logprob: -14.500467300415039

Token 666: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.45899713039398193
    2. '
' → logprob: -1.458997130393982
    3. ' return' → logprob: -2.4589972496032715
    4. '   ' → logprob: -3.4589972496032715
    5. '       ' → logprob: -4.3339972496032715
    6. '    
' → logprob: -6.4589972496032715
    7. '\n' → logprob: -6.9589972496032715
    8. '  
' → logprob: -6.9589972496032715
    9. '```' → logprob: -7.0839972496032715
    10. '        
' → logprob: -7.2089972496032715

Token 667: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5585523247718811
    2. 'return' → logprob: -1.6835522651672363
    3. '   ' → logprob: -1.8085522651672363
    4. ' return' → logprob: -2.8085522651672363
    5. '       ' → logprob: -4.933552265167236
    6. '\n' → logprob: -5.308552265167236
    7. '```' → logprob: -6.308552265167236
    8. '	return' → logprob: -6.433552265167236
    9. '    
' → logprob: -6.683552265167236
    10. '  
' → logprob: -7.308552265167236

Token 668: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002338144404347986
    2. '   ' → logprob: -8.75023365020752
    3. ' return' → logprob: -9.50023365020752
    4. '
' → logprob: -15.25023365020752
    5. 'res' → logprob: -16.125234603881836
    6. '```' → logprob: -17.625234603881836
    7. '       ' → logprob: -17.750234603881836
    8. '	return' → logprob: -19.250234603881836
    9. '    
' → logprob: -19.500234603881836
    10. ' ' → logprob: -20.000234603881836

Token 669: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00012403888104017824
    2. ' dfs' → logprob: -9.000123977661133
    3. 'True' → logprob: -15.125123977661133
    4. 'df' → logprob: -15.250123977661133
    5. 'False' → logprob: -18.750123977661133
    6. 'DFS' → logprob: -18.750123977661133
    7. 'd' → logprob: -19.250123977661133
    8. '   ' → logprob: -19.375123977661133
    9. 'dfa' → logprob: -20.250123977661133
    10. 'None' → logprob: -20.625123977661133

Token 670: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.0002988776541315019
    2. '(' → logprob: -8.125298500061035
    3. ' (' → logprob: -13.875298500061035
    4. '_after' → logprob: -14.125298500061035
    5. ')table' → logprob: -15.375298500061035
    6. '(t' → logprob: -15.625298500061035
    7. 'After' → logprob: -15.875298500061035
    8. '(after' → logprob: -16.00029945373535
    9. '(
' → logprob: -16.12529945373535
    10. '(tree' → logprob: -16.62529945373535

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ',p' → logprob: -10.500042915344238
    3. ' ,' → logprob: -11.125042915344238
    4. ',
' → logprob: -16.500041961669922
    5. ')' → logprob: -16.875041961669922
    6. 'p' → logprob: -16.875041961669922
    7. '‌,' → logprob: -17.375041961669922
    8. '<|end|>' → logprob: -17.375041961669922
    9. '   ' → logprob: -18.250041961669922
    10. '(p' → logprob: -18.500041961669922

Token 672: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007101670489646494
    2. ' p' → logprob: -7.2507100105285645
    3. 'o' → logprob: -16.125709533691406
    4. '   ' → logprob: -16.750709533691406
    5. '	p' → logprob: -17.875709533691406
    6. '_p' → logprob: -18.375709533691406
    7. ' ' → logprob: -18.625709533691406
    8. '(p' → logprob: -19.000709533691406
    9. '<p' → logprob: -19.375709533691406
    10. ')' → logprob: -19.625709533691406

Token 673: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.015028859488666058
    2. 'p' → logprob: -4.265028953552246
    3. 'hand' → logprob: -7.265028953552246
    4. ',' → logprob: -9.390028953552246
    5. ' p' → logprob: -9.890028953552246
    6. '_p' → logprob: -11.015028953552246
    7. ',p' → logprob: -12.515028953552246
    8. 'Hand' → logprob: -12.640028953552246
    9. '   ' → logprob: -13.140028953552246
    10. '_h' → logprob: -13.515028953552246

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005302758072502911
    2. ' ,' → logprob: -8.125530242919922
    3. ',o' → logprob: -8.375530242919922
    4. '   ' → logprob: -14.250530242919922
    5. ',p' → logprob: -14.500530242919922
    6. 'o' → logprob: -14.500530242919922
    7. ',user' → logprob: -14.875530242919922
    8. ',
' → logprob: -15.125530242919922
    9. '  ' → logprob: -15.250530242919922
    10. ',u' → logprob: -15.750530242919922

Token 675: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0001239196863025427
    2. ' o' → logprob: -9.000123977661133
    3. '	o' → logprob: -15.625123977661133
    4. '   ' → logprob: -16.250123977661133
    5. '(o' → logprob: -16.375123977661133
    6. 'tuple' → logprob: -16.875123977661133
    7. 'O' → logprob: -17.375123977661133
    8. '{o' → logprob: -17.875123977661133
    9. 'p' → logprob: -18.250123977661133
    10. 'oops' → logprob: -18.375123977661133

Token 676: '_hand' (ID: 49730)
  Prédit: '_hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.014181956648826599
    2. 'hand' → logprob: -4.264182090759277
    3. 'h' → logprob: -11.514182090759277
    4. 'Hand' → logprob: -12.264182090759277
    5. '_h' → logprob: -13.139182090759277
    6. '_HAND' → logprob: -13.889182090759277
    7. ' hand' → logprob: -14.764182090759277
    8. 'HAND' → logprob: -15.889182090759277
    9. '-hand' → logprob: -16.13918113708496
    10. 'hands' → logprob: -16.51418113708496

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01821749098598957
    2. ',m' → logprob: -4.01821756362915
    3. ' ,' → logprob: -9.643217086791992
    4. 'm' → logprob: -13.518217086791992
    5. ')' → logprob: -14.518217086791992
    6. '   ' → logprob: -15.018217086791992
    7. '[m' → logprob: -15.393217086791992
    8. '<m' → logprob: -16.768217086791992
    9. ' ' → logprob: -17.643217086791992
    10. '```' → logprob: -17.643217086791992

Token 678: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0007117166533134878
    2. ' memo' → logprob: -7.250711917877197
    3. 'm' → logprob: -13.500711441040039
    4. 'memory' → logprob: -15.750711441040039
    5. 'mem' → logprob: -15.875711441040039
    6. ')' → logprob: -17.12571144104004
    7. '.memo' → logprob: -18.62571144104004
    8. ' ' → logprob: -19.37571144104004
    9. ' memoir' → logprob: -19.87571144104004
    10. 'mime' → logprob: -20.37571144104004

Token 679: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ' )' → logprob: -13.125004768371582
    3. '))' → logprob: -14.000004768371582
    4. ')
' → logprob: -14.125004768371582
    5. '   ' → logprob: -15.125004768371582
    6. ')}' → logprob: -15.875004768371582
    7. ')return' → logprob: -16.000003814697266
    8. ')`' → logprob: -16.375003814697266
    9. '())' → logprob: -16.500003814697266
    10. ')#' → logprob: -16.500003814697266

Token 680: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 681: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4574453830718994
    2. ' main' → logprob: -1.0824453830718994
    3. 'can' → logprob: -4.45744514465332
    4. 'play' → logprob: -5.45744514465332
    5. 'solve' → logprob: -5.58244514465332
    6. 'simulate' → logprob: -5.95744514465332
    7. ' can' → logprob: -6.95744514465332
    8. 'possible' → logprob: -7.08244514465332
    9. ' solve' → logprob: -7.08244514465332
    10. ' play' → logprob: -7.08244514465332

Token 682: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000353100651409477
    2. '():
' → logprob: -8.00035285949707
    3. ' ():' → logprob: -11.75035285949707
    4. '()' → logprob: -12.12535285949707
    5. '(' → logprob: -12.62535285949707
    6. '_' → logprob: -14.50035285949707
    7. '():
' → logprob: -15.25035285949707
    8. '():

' → logprob: -16.50035285949707
    9. '()>' → logprob: -16.75035285949707
    10. ':' → logprob: -16.87535285949707

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05090395361185074
    2. ' input' → logprob: -3.8009040355682373
    3. ' line' → logprob: -4.800903797149658
    4. ' hand' → logprob: -4.925903797149658
    5. ' import' → logprob: -6.175903797149658
    6. ' n' → logprob: -6.425903797149658
    7. 'n' → logprob: -6.425903797149658
    8. 'import' → logprob: -6.550903797149658
    9. 'input' → logprob: -6.800903797149658
    10. '```' → logprob: -7.050903797149658

Token 684: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3764101564884186
    2. 'n' → logprob: -1.3764101266860962
    3. ' import' → logprob: -3.3764102458953857
    4. 'import' → logprob: -4.501410007476807
    5. '   ' → logprob: -4.876410007476807
    6. ' input' → logprob: -5.501410007476807
    7. ' N' → logprob: -6.251410007476807
    8. 'N' → logprob: -7.251410007476807
    9. ' deck' → logprob: -8.126410484313965
    10. 'input' (adapté à ' input') → logprob: -8.251410484313965

Token 685: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.16430552303791046
    2. '()' → logprob: -2.1643054485321045
    3. '_data' → logprob: -4.039305686950684
    4. '_lines' → logprob: -4.414305686950684
    5. '_' → logprob: -5.789305686950684
    6. 's' → logprob: -6.414305686950684
    7. '_cards' → logprob: -6.789305686950684
    8. '_str' → logprob: -8.164305686950684
    9. '=' → logprob: -8.164305686950684
    10. '_l' → logprob: -9.039305686950684

Token 686: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6239021420478821
    2. 'input' → logprob: -0.8739021420478821
    3. ' sys' → logprob: -3.4989020824432373
    4. 'sys' → logprob: -4.123902320861816
    5. ' lambda' → logprob: -8.498902320861816
    6. 'lambda' → logprob: -8.623902320861816
    7. '(input' → logprob: -11.373902320861816
    8. 'open' → logprob: -12.248902320861816
    9. '=input' → logprob: -12.373902320861816
    10. 'int' → logprob: -12.623902320861816

Token 687: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.015316285192966461
    2. '.readline' → logprob: -4.265316486358643
    3. '.' → logprob: -7.390316486358643
    4. '().' → logprob: -8.140316009521484
    5. 'stdin' → logprob: -9.140316009521484
    6. '(stdin' → logprob: -9.890316009521484
    7. '.stdout' → logprob: -10.390316009521484
    8. '.argv' → logprob: -11.265316009521484
    9. '.setdefault' → logprob: -11.515316009521484
    10. '.std' → logprob: -11.640316009521484

Token 688: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0362781286239624
    2. 'read' → logprob: -3.411278247833252
    3. '_read' → logprob: -6.911278247833252
    4. '=' → logprob: -7.911278247833252
    5. '.readlines' → logprob: -8.036277770996094
    6. '.read' → logprob: -8.411277770996094
    7. '<|end|>' → logprob: -8.536277770996094
    8. '.' → logprob: -9.286277770996094
    9. '
' → logprob: -9.911277770996094
    10. 'def' → logprob: -10.411277770996094

Token 689: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8223697543144226
    2. '()' → logprob: -1.0723698139190674
    3. '   ' → logprob: -1.5723698139190674
    4. '()
' → logprob: -4.572369575500488
    5. '()\' → logprob: -8.697369575500488
    6. 'def' → logprob: -9.072369575500488
    7. '
' → logprob: -9.447369575500488
    8. '())' → logprob: -9.947369575500488
    9. '    
' → logprob: -11.322369575500488
    10. '()

' → logprob: -11.572369575500488

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03018755093216896
    2. 'n' → logprob: -3.5301876068115234
    3. ' n' → logprob: -8.530187606811523
    4. 't' → logprob: -9.280187606811523
    5. '(n' → logprob: -10.155187606811523
    6. '
' → logprob: -10.530187606811523
    7. '	n' → logprob: -10.655187606811523
    8. '```' → logprob: -10.780187606811523
    9. '    
' → logprob: -11.280187606811523
    10. 'num' → logprob: -11.405187606811523

Token 691: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05451468750834465
    2. '   ' → logprob: -3.1795146465301514
    3. 'N' (adapté à ' N') → logprob: -4.5545148849487305
    4. 't' → logprob: -7.3045148849487305
    5. 'T' → logprob: -9.17951488494873
    6. ' n' → logprob: -9.80451488494873
    7. 'num' → logprob: -9.80451488494873
    8. '
' → logprob: -10.80451488494873
    9. '    
' → logprob: -12.17951488494873
    10. '```' → logprob: -12.42951488494873

Token 692: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3564215898513794
    2. '=' → logprob: -1.7314215898513794
    3. ',' → logprob: -2.10642147064209
    4. ' ,' → logprob: -7.48142147064209
    5. '   ' → logprob: -7.98142147064209
    6. '=int' → logprob: -9.10642147064209
    7. ' ' → logprob: -9.98142147064209
    8. '    ' → logprob: -10.85642147064209
    9. ')' → logprob: -11.73142147064209
    10. '  ' → logprob: -12.23142147064209

Token 693: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008614808320999146
    2. ' int' → logprob: -4.758615016937256
    3. '[int' → logprob: -16.133615493774414
    4. ' ' → logprob: -16.258615493774414
    5. '(int' → logprob: -17.383615493774414
    6. '=int' → logprob: -17.758615493774414
    7. '  ' → logprob: -17.883615493774414
    8. '<int' → logprob: -18.258615493774414
    9. '10' → logprob: -18.508615493774414
    10. '	int' → logprob: -18.758615493774414

Token 694: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006742723751813173
    2. '()' → logprob: -6.00674295425415
    3. 'input' → logprob: -6.38174295425415
    4. '(sys' → logprob: -6.50674295425415
    5. '(' → logprob: -6.88174295425415
    6. '('' → logprob: -11.131742477416992
    7. ' (' → logprob: -11.381742477416992
    8. 'sys' → logprob: -11.881742477416992
    9. ' input' → logprob: -12.506742477416992
    10. ' ()' → logprob: -12.881742477416992

Token 695: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003240101272240281
    2. '().' → logprob: -6.25324010848999
    3. '()' → logprob: -6.75324010848999
    4. '())
' → logprob: -8.878239631652832
    5. ')' → logprob: -12.878239631652832
    6. '(' → logprob: -14.753239631652832
    7. ' ())' → logprob: -14.878239631652832
    8. '()
' → logprob: -15.003239631652832
    9. '())

' → logprob: -15.253239631652832
    10. '())
' → logprob: -15.378239631652832

Token 696: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5581640601158142
    2. '   ' → logprob: -1.808164119720459
    3. 'table' → logprob: -2.183164119720459
    4. 'initial' → logprob: -3.308164119720459
    5. 'A' → logprob: -3.933164119720459
    6. 'hand' → logprob: -4.308164119720459
    7. 'P' → logprob: -4.433164119720459
    8. ' p' → logprob: -4.683164119720459
    9. 'for' → logprob: -5.058164119720459
    10. 'hands' → logprob: -5.058164119720459

Token 697: ' full' (ID: 3149)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.219129279255867
    2. 'hands' → logprob: -2.8441293239593506
    3. 'P' → logprob: -3.5941293239593506
    4. 'initial' → logprob: -3.5941293239593506
    5. 'cards' → logprob: -3.9691293239593506
    6. 'table' → logprob: -4.2191290855407715
    7. '   ' → logprob: -4.3441290855407715
    8. 'player' → logprob: -4.3441290855407715
    9. 'for' → logprob: -4.5941290855407715
    10. 'hand' → logprob: -6.0941290855407715

Token 698: '_cards' (ID: 101651)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.05544476583600044
    2. '_set' → logprob: -3.5554447174072266
    3. '_de' → logprob: -4.805444717407227
    4. '_h' → logprob: -5.180444717407227
    5. '_table' → logprob: -5.305444717407227
    6. '_line' → logprob: -6.305444717407227
    7. '_cards' → logprob: -6.680444717407227
    8. ' =' → logprob: -7.055444717407227
    9. 'hand' → logprob: -7.305444717407227
    10. '=' → logprob: -7.430444717407227

Token 699: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325386554002762
    2. '=' → logprob: -3.773253917694092
    3. '_' → logprob: -12.523253440856934
    4. ' ' → logprob: -13.648253440856934
    5. '_set' → logprob: -14.273253440856934
    6. ' ' → logprob: -14.773253440856934
    7. '=set' → logprob: -14.898253440856934
    8. 's' → logprob: -15.148253440856934
    9. '   ' → logprob: -15.148253440856934
    10. ' =[' → logprob: -15.148253440856934

Token 700: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.43229806423187256
    2. ' set' → logprob: -1.0572980642318726
    3. '{' → logprob: -5.807298183441162
    4. ' {' → logprob: -7.807298183441162
    5. '(set' → logprob: -9.682297706604004
    6. 'list' → logprob: -9.932297706604004
    7. ' list' → logprob: -10.557297706604004
    8. 'tuple' → logprob: -11.682297706604004
    9. ' tuple' → logprob: -12.057297706604004
    10. 'range' → logprob: -12.182297706604004

Token 701: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0001410850090906024
    2. '()' → logprob: -9.000141143798828
    3. 'range' → logprob: -11.500141143798828
    4. '(' → logprob: -12.750141143798828
    5. '(i' → logprob: -13.125141143798828
    6. '(int' → logprob: -13.500141143798828
    7. '()
' → logprob: -15.125141143798828
    8. '([' → logprob: -15.750141143798828
    9. '(map' → logprob: -15.750141143798828
    10. ' range' → logprob: -15.875141143798828

Token 702: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000146687583765015
    2. '(N' → logprob: -8.875146865844727
    3. ' (' → logprob: -12.125146865844727
    4. '1' → logprob: -13.750146865844727
    5. '(-' → logprob: -15.125146865844727
    6. ' ' → logprob: -17.500146865844727
    7. '(
' → logprob: -17.500146865844727
    8. '((' → logprob: -17.500146865844727
    9. '(n' → logprob: -17.500146865844727
    10. '   ' → logprob: -18.500146865844727

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043448375072330236
    2. 'N' → logprob: -8.375434875488281
    3. '-' → logprob: -9.750434875488281
    4. '2' → logprob: -10.000434875488281
    5. '(' → logprob: -10.000434875488281
    6. '10' → logprob: -11.125434875488281
    7. '0' → logprob: -11.500434875488281
    8. '3' → logprob: -11.875434875488281
    9. '5' → logprob: -12.750434875488281
    10. '-N' → logprob: -13.000434875488281

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006746663711965084
    2. ' ,' → logprob: -7.500674724578857
    3. ',N' → logprob: -9.1256742477417
    4. '1' → logprob: -12.0006742477417
    5. 'N' → logprob: -12.6256742477417
    6. ',
' → logprob: -13.6256742477417
    7. '   ' → logprob: -14.1256742477417
    8. '2' → logprob: -15.5006742477417
    9. '(' → logprob: -15.6256742477417
    10. '(N' → logprob: -16.000675201416016

Token 705: '14' (ID: 1265)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27293291687965393
    2. 'N' → logprob: -1.5229328870773315
    3. '10' → logprob: -5.397933006286621
    4. '3' → logprob: -5.522933006286621
    5. '4' → logprob: -5.522933006286621
    6. ' N' → logprob: -6.397933006286621
    7. ' ' → logprob: -6.647933006286621
    8. '5' → logprob: -7.397933006286621
    9. '11' → logprob: -7.522933006286621
    10. '51' → logprob: -7.522933006286621

Token 706: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.013287634588778019
    2. '+' → logprob: -4.513287544250488
    3. '))
' → logprob: -6.888287544250488
    4. ' +' → logprob: -7.638287544250488
    5. ' ))' → logprob: -7.763287544250488
    6. '1' → logprob: -8.513287544250488
    7. '7' → logprob: -9.388287544250488
    8. ')' → logprob: -11.388287544250488
    9. ' ))
' → logprob: -12.638287544250488
    10. '))

' → logprob: -13.263287544250488

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2596343457698822
    2. 'p' → logprob: -1.5096343755722046
    3. 'player' → logprob: -5.759634494781494
    4. ' p' → logprob: -6.384634494781494
    5. 'hand' → logprob: -7.509634494781494
    6. 'hands' → logprob: -7.509634494781494
    7. 'P' → logprob: -7.759634494781494
    8. 'for' → logprob: -8.759634017944336
    9. 'table' → logprob: -8.759634017944336
    10. '    
' → logprob: -8.884634017944336

Token 708: ' full' (ID: 3149)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05856633558869362
    2. '   ' → logprob: -4.058566570281982
    3. 'player' → logprob: -4.433566570281982
    4. 'for' → logprob: -4.808566570281982
    5. 'cards' → logprob: -5.308566570281982
    6. 'hands' → logprob: -5.433566570281982
    7. 'hand' → logprob: -5.683566570281982
    8. 'table' → logprob: -6.558566570281982
    9. 'initial' → logprob: -6.933566570281982
    10. 'a' → logprob: -7.433566570281982

Token 709: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00019614976190496236
    2. '_hand' → logprob: -9.87519645690918
    3. '_set' → logprob: -10.87519645690918
    4. '_' → logprob: -11.00019645690918
    5. '_card' → logprob: -11.12519645690918
    6. 'cards' → logprob: -11.12519645690918
    7. '```' → logprob: -11.37519645690918
    8. ' =' → logprob: -11.50019645690918
    9. '_sets' → logprob: -11.87519645690918
    10. ')_' → logprob: -12.12519645690918

Token 710: '.remove' (ID: 7986)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16704177856445312
    2. '=' → logprob: -2.042041778564453
    3. ' -=' → logprob: -4.667041778564453
    4. '.remove' → logprob: -5.417041778564453
    5. '.' → logprob: -5.542041778564453
    6. ' -' → logprob: -5.667041778564453
    7. '.update' → logprob: -6.792041778564453
    8. '-' → logprob: -7.542041778564453
    9. '-=' → logprob: -8.167041778564453
    10. ' |=' → logprob: -8.417041778564453

Token 711: '(' (ID: 7)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.621411919593811
    2. '(' → logprob: -0.996411919593811
    3. '1' → logprob: -2.8714118003845215
    4. '(N' → logprob: -3.3714118003845215
    5. 'N' → logprob: -6.6214118003845215
    6. '13' → logprob: -7.8714118003845215
    7. '6' → logprob: -8.12141227722168
    8. '10' → logprob: -8.99641227722168
    9. '8' → logprob: -9.12141227722168
    10. '2' → logprob: -9.12141227722168

Token 712: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6955127120018005
    2. 'N' → logprob: -0.8205127120018005
    3. '1' → logprob: -2.8205127716064453
    4. '10' → logprob: -7.820512771606445
    5. ' ' → logprob: -8.445512771606445
    6. '8' → logprob: -8.820512771606445
    7. '2' → logprob: -9.195512771606445
    8. '5' → logprob: -9.570512771606445
    9. '6' → logprob: -9.570512771606445
    10. '13' → logprob: -9.570512771606445

Token 713: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003119863977190107
    2. ')
' → logprob: -8.125311851501465
    3. ' )' → logprob: -11.875311851501465
    4. '7' → logprob: -12.250311851501465
    5. '   ' → logprob: -12.875311851501465
    6. ' ' → logprob: -15.125311851501465
    7. '<|end|>' → logprob: -15.375311851501465
    8. ')

' → logprob: -15.500311851501465
    9. ')
' → logprob: -16.12531280517578
    10. '#' → logprob: -16.50031280517578

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4259745478630066
    2. 'table' → logprob: -1.4259746074676514
    3. 'p' → logprob: -3.3009746074676514
    4. 'initial' → logprob: -3.4259746074676514
    5. 'hand' → logprob: -4.550974369049072
    6. 'player' → logprob: -5.425974369049072
    7. 'start' → logprob: -5.675974369049072
    8. 'for' → logprob: -5.925974369049072
    9. '7' → logprob: -6.050974369049072
    10. 'first' → logprob: -6.175974369049072

Token 715: ' for' (ID: 395)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.7527947425842285
    2. 'initial' → logprob: -1.8777947425842285
    3. 'p' → logprob: -2.5027947425842285
    4. 'hand' → logprob: -2.5027947425842285
    5. '   ' → logprob: -2.6277947425842285
    6. 'first' → logprob: -3.0027947425842285
    7. 'deck' → logprob: -4.2527947425842285
    8. 'line' → logprob: -4.3777947425842285
    9. 'player' → logprob: -4.8777947425842285
    10. 'cards' → logprob: -4.8777947425842285

Token 716: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004091458860784769
    2. '_' → logprob: -5.504091262817383
    3. ' i' → logprob: -12.004091262817383
    4. '_i' → logprob: -12.879091262817383
    5. ' ' → logprob: -13.629091262817383
    6. ' player' → logprob: -14.379091262817383
    7. '_hand' → logprob: -14.754091262817383
    8. '_case' → logprob: -15.254091262817383
    9. '_player' → logprob: -15.379091262817383
    10. ' hand' → logprob: -15.504091262817383

Token 717: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0029009245336055756
    2. 'in' → logprob: -5.877901077270508
    3. ' ' → logprob: -9.502901077270508
    4. 's' → logprob: -12.127901077270508
    5. '  ' → logprob: -12.502901077270508
    6. ' _' → logprob: -13.002901077270508
    7. '
' → logprob: -13.127901077270508
    8. 'range' → logprob: -13.752901077270508
    9. '```' → logprob: -13.877901077270508
    10. '    ' → logprob: -14.002901077270508

Token 718: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47410765290260315
    2. ' range' → logprob: -0.9741076231002808
    3. 'input' → logprob: -11.09910774230957
    4. ' ' → logprob: -12.47410774230957
    5. 'N' → logprob: -12.72410774230957
    6. ' input' → logprob: -12.97410774230957
    7. '[' → logprob: -14.09910774230957
    8. '(range' → logprob: -14.47410774230957
    9. '  ' → logprob: -14.59910774230957
    10. '   ' → logprob: -14.59910774230957

Token 719: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.39857760071754456
    2. ' (' → logprob: -1.7735775709152222
    3. '(' → logprob: -1.8985775709152222
    4. '(int' → logprob: -5.148577690124512
    5. ' N' → logprob: -6.523577690124512
    6. 'N' → logprob: -7.148577690124512
    7. '   ' → logprob: -7.773577690124512
    8. '(
' → logprob: -8.398577690124512
    9. '(n' → logprob: -9.023577690124512
    10. '(T' → logprob: -9.523577690124512

Token 720: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04015417769551277
    2. '):' → logprob: -3.290154218673706
    3. '   ' → logprob: -6.415153980255127
    4. ':' → logprob: -8.790154457092285
    5. ')' → logprob: -8.915154457092285
    6. ':
' → logprob: -9.165154457092285
    7. '():
' → logprob: -10.415154457092285
    8. ' ):
' → logprob: -11.040154457092285
    9. '):
' → logprob: -11.665154457092285
    10. ',' → logprob: -11.790154457092285

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3223993480205536
    2. '   ' → logprob: -1.322399377822876
    3. ' hand' → logprob: -6.197399139404297
    4. 'hand' → logprob: -6.197399139404297
    5. '	   ' → logprob: -6.322399139404297
    6. 'p' → logprob: -7.697399139404297
    7. '    
' → logprob: -7.697399139404297
    8. '        
' → logprob: -7.947399139404297
    9. '```' → logprob: -8.322399139404297
    10. 't' → logprob: -8.572399139404297

Token 722: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -1.1131941080093384
    2. ' p' → logprob: -1.1131941080093384
    3. ' line' → logprob: -2.863193988800049
    4. ' cards' → logprob: -3.113193988800049
    5. 'line' → logprob: -3.238193988800049
    6. 'cards' → logprob: -3.363193988800049
    7. 'hand' → logprob: -3.738193988800049
    8. ' hand' → logprob: -4.113193988800049
    9. 'n' → logprob: -4.488193988800049
    10. '7' → logprob: -4.738193988800049

Token 723: '_cards' (ID: 101651)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.006904575042426586
    2. '_cards' → logprob: -5.256904602050781
    3. '1' → logprob: -6.881904602050781
    4. 'hand' → logprob: -7.506904602050781
    5. ' hand' → logprob: -11.381904602050781
    6. 'a' → logprob: -11.631904602050781
    7. '_' → logprob: -11.631904602050781
    8. '7' → logprob: -11.756904602050781
    9. 'cards' → logprob: -12.006904602050781
    10. '_input' → logprob: -12.006904602050781

Token 724: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25205934047698975
    2. '=' → logprob: -1.5020593404769897
    3. ',' → logprob: -9.252058982849121
    4. '   ' → logprob: -11.377058982849121
    5. ' ' → logprob: -12.627058982849121
    6. '=list' → logprob: -13.002058982849121
    7. '=input' → logprob: -13.127058982849121
    8. '=line' → logprob: -13.127058982849121
    9. 'p' → logprob: -13.252058982849121
    10. 's' → logprob: -13.377058982849121

Token 725: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4589969515800476
    2. 'set' → logprob: -1.3339970111846924
    3. 'tuple' → logprob: -2.7089970111846924
    4. ' list' → logprob: -3.5839970111846924
    5. ' tuple' → logprob: -5.458996772766113
    6. 'sorted' → logprob: -5.708996772766113
    7. ' set' → logprob: -5.958996772766113
    8. ' sorted' → logprob: -9.458996772766113
    9. '[' → logprob: -10.708996772766113
    10. '[list' → logprob: -11.333996772766113

Token 726: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.750003814697266
    3. 'map' → logprob: -14.500003814697266
    4. '(int' → logprob: -15.250003814697266
    5. '(sorted' → logprob: -16.750003814697266
    6. '()' → logprob: -18.750003814697266
    7. '(input' → logprob: -18.875003814697266
    8. '	map' → logprob: -19.125003814697266
    9. '.map' → logprob: -19.375003814697266
    10. ' (' → logprob: -19.625003814697266

Token 727: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030084028840065002
    2. 'int' → logprob: -3.5300841331481934
    3. '   ' → logprob: -9.030083656311035
    4. '(' → logprob: -9.905083656311035
    5. '(input' → logprob: -10.405083656311035
    6. 'str' → logprob: -10.530083656311035
    7. 'input' → logprob: -10.655083656311035
    8. '(str' → logprob: -10.655083656311035
    9. '```' → logprob: -11.030083656311035
    10. '[int' → logprob: -11.280083656311035

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6696167588233948
    2. ',input' → logprob: -0.9196167588233948
    3. '(input' → logprob: -2.41961669921875
    4. '   ' → logprob: -8.41961669921875
    5. '(' → logprob: -9.29461669921875
    6. 'input' → logprob: -9.54461669921875
    7. ' ,' → logprob: -10.79461669921875
    8. '(),' → logprob: -11.04461669921875
    9. '       ' → logprob: -11.29461669921875
    10. '           ' → logprob: -11.29461669921875

Token 729: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003178071230649948
    2. ' input' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.503177642822266
    4. '(input' → logprob: -17.378177642822266
    5. '	input' → logprob: -17.378177642822266
    6. '       ' → logprob: -17.628177642822266
    7. '           ' → logprob: -17.628177642822266
    8. ',input' → logprob: -17.878177642822266
    9. '_input' → logprob: -18.378177642822266
    10. '<input' → logprob: -18.878177642822266

Token 730: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '()
' → logprob: -16.750001907348633
    5. '.readline' → logprob: -17.375001907348633
    6. '(' → logprob: -17.875001907348633
    7. '()))' → logprob: -18.250001907348633
    8. '.split' → logprob: -18.750001907348633
    9. '()[' → logprob: -18.875001907348633
    10. ' ().' → logprob: -19.125001907348633

Token 731: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023297889158129692
    2. 'strip' → logprob: -3.7732977867126465
    3. 'read' → logprob: -10.648298263549805
    4. 'rstrip' → logprob: -10.648298263549805
    5. ' split' → logprob: -12.648298263549805
    6. '(split' → logprob: -13.523298263549805
    7. ' strip' → logprob: -15.648298263549805
    8. '().' → logprob: -15.898298263549805
    9. 'sys' → logprob: -17.273298263549805
    10. ' readline' → logprob: -17.523298263549805

Token 732: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1143687441945076
    2. '()))
' → logprob: -2.2393686771392822
    3. '))' → logprob: -7.114368915557861
    4. '()' → logprob: -7.364368915557861
    5. '(' → logprob: -10.614368438720703
    6. '()))
' → logprob: -11.114368438720703
    7. '))
' → logprob: -11.364368438720703
    8. '()[' → logprob: -11.614368438720703
    9. '       ' → logprob: -11.989368438720703
    10. '()))

' → logprob: -12.239368438720703

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00103042705450207
    2. '	' → logprob: -7.501030445098877
    3. '<|end|>' → logprob: -8.251029968261719
    4. '```' → logprob: -10.001029968261719
    5. 'p' → logprob: -10.501029968261719
    6. '   ' → logprob: -10.751029968261719
    7. '	o' → logprob: -10.876029968261719
    8. 'o' → logprob: -11.001029968261719
    9. '        
' → logprob: -11.251029968261719
    10. '	   ' → logprob: -11.501029968261719

Token 734: ' p' (ID: 275)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.006099192891269922
    2. '       ' → logprob: -5.256099224090576
    3. 'table' → logprob: -8.256098747253418
    4. 'full' → logprob: -8.631098747253418
    5. ' o' → logprob: -9.006098747253418
    6. 't' → logprob: -9.506098747253418
    7. '
' → logprob: -10.006098747253418
    8. 'all' → logprob: -10.006098747253418
    9. 'initial' → logprob: -11.006098747253418
    10. '7' → logprob: -11.131098747253418

Token 735: '_set' (ID: 5451)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.007676079869270325
    2. '_hand' → logprob: -4.882676124572754
    3. '_card' → logprob: -11.132676124572754
    4. '_' → logprob: -11.382676124572754
    5. '```' → logprob: -11.757676124572754
    6. '_tokens' → logprob: -12.132676124572754
    7. 'cards' → logprob: -12.257676124572754
    8. ''_' → logprob: -12.757676124572754
    9. 'hand' → logprob: -12.882676124572754
    10. '._' → logprob: -13.132676124572754

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009762110188603401
    2. '=' → logprob: -4.634762287139893
    3. '=set' → logprob: -12.509761810302734
    4. '   ' → logprob: -13.759761810302734
    5. ' ' → logprob: -14.634761810302734
    6. ' =
' → logprob: -14.884761810302734
    7. ',' → logprob: -15.759761810302734
    8. 'p' → logprob: -15.884761810302734
    9. ' ' → logprob: -16.259761810302734
    10. '```' → logprob: -16.384761810302734

Token 737: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.011799032799899578
    2. ' set' → logprob: -4.511798858642578
    3. 'fro' → logprob: -7.261798858642578
    4. 'tuple' → logprob: -10.636798858642578
    5. ' fro' → logprob: -11.386798858642578
    6. '{' → logprob: -12.011798858642578
    7. '   ' → logprob: -12.261798858642578
    8. '(set' → logprob: -13.511798858642578
    9. ' tuple' → logprob: -14.386798858642578
    10. '	set' → logprob: -15.011798858642578

Token 738: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.875000953674316
    3. 'p' → logprob: -15.250000953674316
    4. '(
' → logprob: -16.5
    5. '()' → logprob: -16.75
    6. '   ' → logprob: -17.375
    7. '()
' → logprob: -17.625
    8. '       ' → logprob: -18.25
    9. '([' → logprob: -18.5
    10. '((' → logprob: -18.875

Token 739: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0033052158541977406
    2. '(p' → logprob: -5.753305435180664
    3. '(cards' → logprob: -9.128305435180664
    4. 'p' → logprob: -12.503305435180664
    5. '(_' → logprob: -12.753305435180664
    6. ')' → logprob: -13.003305435180664
    7. '(' → logprob: -13.378305435180664
    8. 'cards' → logprob: -13.503305435180664
    9. '_chars' → logprob: -14.128305435180664
    10. '   ' → logprob: -14.128305435180664

Token 740: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.39856716990470886
    2. ')' → logprob: -1.3985671997070312
    3. '       ' → logprob: -2.5235671997070312
    4. '())
' → logprob: -7.023567199707031
    5. '()
' → logprob: -8.148567199707031
    6. '()' → logprob: -8.523567199707031
    7. '())' → logprob: -9.773567199707031
    8. ' )
' → logprob: -9.898567199707031
    9. '<|end|>' → logprob: -10.523567199707031
    10. ')
' → logprob: -10.773567199707031

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010597254149615765
    2. '
' → logprob: -8.126059532165527
    3. 'o' → logprob: -8.376059532165527
    4. '	' → logprob: -8.876059532165527
    5. '<|end|>' → logprob: -9.001059532165527
    6. ' o' → logprob: -9.751059532165527
    7. '   ' → logprob: -10.126059532165527
    8. '	o' → logprob: -10.126059532165527
    9. 'table' → logprob: -11.001059532165527
    10. 'full' → logprob: -11.126059532165527

Token 742: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' (adapté à ' o') → logprob: -0.0069479066878557205
    2. ' o' → logprob: -5.631947994232178
    3. '       ' → logprob: -6.381947994232178
    4. 't' → logprob: -7.756947994232178
    5. 'table' → logprob: -7.756947994232178
    6. 'all' → logprob: -8.25694751739502
    7. 'full' → logprob: -8.38194751739502
    8. 's' → logprob: -10.13194751739502
    9. 'initial' → logprob: -10.13194751739502
    10. 'for' → logprob: -10.63194751739502

Token 743: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0386493019759655
    2. '_cards' → logprob: -3.538649320602417
    3. '_hand' → logprob: -4.788649082183838
    4. '_' → logprob: -8.038649559020996
    5. 'set' → logprob: -9.413649559020996
    6. '_s' → logprob: -10.913649559020996
    7. ' _' → logprob: -10.913649559020996
    8. 'et' → logprob: -11.038649559020996
    9. ' =' → logprob: -11.663649559020996
    10. '```' → logprob: -11.788649559020996

Token 744: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018156498670578003
    2. '=' → logprob: -4.0181565284729
    3. '<|end|>' → logprob: -12.518156051635742
    4. ' ' → logprob: -13.518156051635742
    5. ' =
' → logprob: -15.018156051635742
    6. '<|end|>' → logprob: -15.518156051635742
    7. '   ' → logprob: -15.893156051635742
    8. ' ' → logprob: -15.893156051635742
    9. 'p' → logprob: -16.018156051635742
    10. '=set' → logprob: -16.268156051635742

Token 745: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.27709877490997314
    2. ' full' → logprob: -1.6520987749099731
    3. 'set' → logprob: -3.2770986557006836
    4. ' set' → logprob: -4.402098655700684
    5. '{' → logprob: -8.152098655700684
    6. '(full' → logprob: -10.152098655700684
    7. ' ' → logprob: -10.652098655700684
    8. ' {' → logprob: -11.527098655700684
    9. '   ' → logprob: -11.902098655700684
    10. 'Full' → logprob: -12.839598655700684

Token 746: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -9.93710636976175e-05
    2. 'set' → logprob: -10.875099182128906
    3. 'range' → logprob: -10.875099182128906
    4. 'cards' → logprob: -11.125099182128906
    5. '```' → logprob: -11.500099182128906
    6. 'Cards' → logprob: -11.875099182128906
    7. '_set' → logprob: -11.875099182128906
    8. '   ' → logprob: -12.625099182128906
    9. '{' → logprob: -12.625099182128906
    10. '(range' → logprob: -13.125099182128906

Token 747: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41623812913894653
    2. '-' → logprob: -1.2912380695343018
    3. ' =' → logprob: -3.0412380695343018
    4. '=' → logprob: -4.041238307952881
    5. ' ' → logprob: -9.916237831115723
    6. '   ' → logprob: -10.541237831115723
    7. ' -=' → logprob: -11.166237831115723
    8. '.copy' → logprob: -11.166237831115723
    9. '-=' → logprob: -11.291237831115723
    10. 'difference' → logprob: -11.541237831115723

Token 748: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011118445545434952
    2. ' p' → logprob: -4.511118412017822
    3. 'set' → logprob: -10.01111888885498
    4. ' set' → logprob: -10.63611888885498
    5. '{' → logprob: -13.63611888885498
    6. ' ' → logprob: -15.88611888885498
    7. '   ' → logprob: -16.011117935180664
    8. '	p' → logprob: -16.136117935180664
    9. '<p' → logprob: -16.761117935180664
    10. '(p' → logprob: -18.136117935180664

Token 749: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00044926130794920027
    2. 'set' → logprob: -7.875449180603027
    3. '_cards' → logprob: -9.875449180603027
    4. 'p' → logprob: -11.375449180603027
    5. '_sets' → logprob: -12.500449180603027
    6. 'cards' → logprob: -13.500449180603027
    7. 'Set' → logprob: -15.125449180603027
    8. 'et' → logprob: -15.250449180603027
    9. ' p' → logprob: -16.000450134277344
    10. '_SET' → logprob: -16.000450134277344

Token 750: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000377645599655807
    2. '<|end|>' → logprob: -8.625377655029297
    3. '        
' → logprob: -9.625377655029297
    4. '
' → logprob: -10.250377655029297
    5. 'table' → logprob: -10.500377655029297
    6. '   ' → logprob: -10.875377655029297
    7. '```' → logprob: -11.000377655029297
    8. ',' → logprob: -11.750377655029297
    9. ' table' → logprob: -12.125377655029297
    10. '<|end|>' → logprob: -13.125377655029297

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014054712373763323
    2. 'table' → logprob: -7.876405239105225
    3. '   ' → logprob: -8.001405715942383
    4. '
' → logprob: -8.751405715942383
    5. 'memo' → logprob: -8.751405715942383
    6. '        
' → logprob: -8.876405715942383
    7. '```' → logprob: -9.751405715942383
    8. '<|end|>' → logprob: -10.001405715942383
    9. '	' → logprob: -10.501405715942383
    10. ' table' → logprob: -10.751405715942383

Token 752: ' table' (ID: 3293)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9542763233184814
    2. 'table' (adapté à ' table') → logprob: -0.9542763233184814
    3. 'initial' → logprob: -2.7042763233184814
    4. 'result' → logprob: -2.9542763233184814
    5. 'memo' → logprob: -3.0792763233184814
    6. 'if' → logprob: -3.8292763233184814
    7. 'print' → logprob: -4.079276084899902
    8. 'start' → logprob: -4.704276084899902
    9. '#' → logprob: -5.204276084899902
    10. ' table' → logprob: -5.829276084899902

Token 753: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021346807479858
    2. '=' → logprob: -2.3502135276794434
    3. '{' → logprob: -12.850213050842285
    4. ' ={' → logprob: -13.350213050842285
    5. '=set' → logprob: -14.100213050842285
    6. '={' → logprob: -14.100213050842285
    7. '<|end|>' → logprob: -14.850213050842285
    8. ' ' → logprob: -15.725213050842285
    9. 's' → logprob: -16.1002140045166
    10. '={'' → logprob: -16.4752140045166

Token 754: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.5048530030981055e-06
    2. ' {' → logprob: -14.000001907348633
    3. 'set' → logprob: -14.250001907348633
    4. '{o' → logprob: -20.500001907348633
    5. '{s' → logprob: -20.500001907348633
    6. '{sub' → logprob: -21.375001907348633
    7. '{text' → logprob: -21.750001907348633
    8. ' ' → logprob: -22.375001907348633
    9. '```' → logprob: -22.625001907348633
    10. '{-' → logprob: -22.750001907348633

Token 755: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '6' → logprob: -18.375
    4. '```' → logprob: -18.75
    5. '{' → logprob: -19.0
    6. '   ' → logprob: -19.125
    7. '}' → logprob: -21.125
    8. '۷' → logprob: -21.375
    9. '  ' → logprob: -21.5
    10. '٧' → logprob: -21.9375

Token 756: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0016407847870141268
    2. '}
' → logprob: -6.501640796661377
    3. ' }' → logprob: -9.376640319824219
    4. ',' → logprob: -10.251640319824219
    5. '<|end|>' → logprob: -11.751640319824219
    6. '<|end|>' → logprob: -12.501640319824219
    7. '}

' → logprob: -13.251640319824219
    8. ')' → logprob: -13.876640319824219
    9. '7' → logprob: -13.876640319824219
    10. '}
' → logprob: -13.876640319824219

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01306070201098919
    2. 'p' → logprob: -5.263060569763184
    3. 'memo' → logprob: -5.888060569763184
    4. '   ' → logprob: -6.138060569763184
    5. '```' → logprob: -7.013060569763184
    6. 'result' → logprob: -7.888060569763184
    7. ' p' → logprob: -8.013060569763184
    8. ',' → logprob: -8.388060569763184
    9. '        
' → logprob: -8.638060569763184
    10. 'if' → logprob: -8.763060569763184

Token 758: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.2494920939207077
    2. 'p' → logprob: -2.6244921684265137
    3. 'print' → logprob: -2.6244921684265137
    4. 'result' → logprob: -2.7494921684265137
    5. '       ' → logprob: -4.749492168426514
    6. 'if' → logprob: -6.624492168426514
    7. 'res' → logprob: -7.624492168426514
    8. 'sys' → logprob: -8.124491691589355
    9. 'can' → logprob: -8.499491691589355
    10. '   ' → logprob: -8.624491691589355

Token 759: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020640453323721886
    2. '=' → logprob: -3.8956403732299805
    3. '={}' → logprob: -9.27064037322998
    4. ' ={' → logprob: -13.27064037322998
    5. '={' → logprob: -13.77064037322998
    6. '={}
' → logprob: -14.14564037322998
    7. '.setdefault' → logprob: -15.27064037322998
    8. '<|end|>' → logprob: -15.52064037322998
    9. '={},' → logprob: -16.520641326904297
    10. ' ' → logprob: -16.520641326904297

Token 760: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.650518920039758e-06
    2. 'dict' → logprob: -12.875003814697266
    3. '{}
' → logprob: -14.625003814697266
    4. ' {}' → logprob: -14.750003814697266
    5. '={}' → logprob: -16.000003814697266
    6. '{})' → logprob: -18.375003814697266
    7. '{}

' → logprob: -18.750003814697266
    8. '{},' → logprob: -18.875003814697266
    9. ' dict' → logprob: -19.000003814697266
    10. '{}\' → logprob: -20.000003814697266

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012221322394907475
    2. 'result' → logprob: -7.751222133636475
    3. 'def' → logprob: -8.251221656799316
    4. '<|end|>' → logprob: -8.626221656799316
    5. '```' → logprob: -8.751221656799316
    6. 'res' → logprob: -10.001221656799316
    7. '   ' → logprob: -10.126221656799316
    8. '        
' → logprob: -10.126221656799316
    9. 'next' → logprob: -11.251221656799316
    10. 'p' → logprob: -11.376221656799316

Token 762: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13670268654823303
    2. 'print' → logprob: -2.8867027759552
    3. 'res' → logprob: -3.1367027759552
    4. 'if' → logprob: -4.136702537536621
    5. '       ' → logprob: -5.511702537536621
    6. 'can' → logprob: -5.511702537536621
    7. 'win' → logprob: -6.511702537536621
    8. ' result' → logprob: -6.636702537536621
    9. 'p' → logprob: -7.886702537536621
    10. '   ' → logprob: -8.011702537536621

Token 763: ' Premier' (ID: 27686)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3316725790500641
    2. 'res' → logprob: -1.3316725492477417
    3. 'p' → logprob: -4.956672668457031
    4. 'if' → logprob: -5.706672668457031
    5. 'print' → logprob: -5.706672668457031
    6. 'can' → logprob: -5.831672668457031
    7. 'answer' → logprob: -7.456672668457031
    8. 'ans' → logprob: -7.956672668457031
    9. 'winner' → logprob: -8.456672668457031
    10. 'win' → logprob: -8.831672668457031

Token 764: ' joueur' (ID: 72629)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6168509721755981
    2. 'res' → logprob: -1.7418509721755981
    3. 'tour' → logprob: -1.9918509721755981
    4. 'turn' → logprob: -2.7418508529663086
    5. 'token' → logprob: -3.7418508529663086
    6. 'player' → logprob: -3.9918508529663086
    7. 'move' → logprob: -4.491850852966309
    8. 'c' → logprob: -5.366850852966309
    9. 'rés' → logprob: -5.366850852966309
    10. '=True' → logprob: -5.491850852966309

Token 765: ' est' (ID: 893)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8283278346061707
    2. '       ' → logprob: -1.0783278942108154
    3. 'res' → logprob: -2.0783278942108154
    4. ' (' → logprob: -4.078327655792236
    5. ' =' → logprob: -4.453327655792236
    6. ' result' → logprob: -4.453327655792236
    7. '=' → logprob: -4.828327655792236
    8. 's' → logprob: -5.078327655792236
    9. '=True' → logprob: -5.203327655792236
    10. '(' → logprob: -5.578327655792236

Token 766: ' p' (ID: 275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3730924427509308
    2. 'p' → logprob: -1.9980924129486084
    3. '0' → logprob: -2.6230924129486084
    4. ' p' → logprob: -3.4980924129486084
    5. 'True' → logprob: -3.7480924129486084
    6. '(' → logprob: -3.9980924129486084
    7. ' True' → logprob: -4.2480926513671875
    8. ' (' → logprob: -5.6230926513671875
    9. 'player' → logprob: -6.1230926513671875
    10. ' ' → logprob: -6.2480926513671875

Token 767: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08683465421199799
    2. 'res' → logprob: -2.961834669113159
    3. 'result' → logprob: -3.586834669113159
    4. ' res' → logprob: -7.08683443069458
    5. '<|end|>' → logprob: -7.33683443069458
    6. '   ' → logprob: -7.83683443069458
    7. ' result' → logprob: -7.83683443069458
    8. ',' → logprob: -8.086834907531738
    9. '```' → logprob: -8.586834907531738
    10. 'p' → logprob: -8.586834907531738

Token 768: '先' (ID: 12231)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.39724001288414
    2. 'True' → logprob: -1.3972400426864624
    3. ' True' → logprob: -3.897239923477173
    4. 'player' → logprob: -3.897239923477173
    5. ' p' → logprob: -4.147240161895752
    6. 'le' → logprob: -4.897240161895752
    7. '#' → logprob: -5.397240161895752
    8. '       ' → logprob: -5.897240161895752
    9. 'def' → logprob: -7.022240161895752
    10. '0' → logprob: -7.022240161895752

Token 769: '手' (ID: 6034)
  Prédit: '手'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '手' → logprob: -0.04643797129392624
    2. 'jou' → logprob: -4.046437740325928
    3. 'p' → logprob: -4.546437740325928
    4. 'player' → logprob: -5.796437740325928
    5. ' joueur' → logprob: -6.546437740325928
    6. '```' → logprob: -6.671437740325928
    7. '攻' → logprob: -6.796437740325928
    8. 'def' → logprob: -6.921437740325928
    9. 'hand' → logprob: -7.296437740325928
    10. '`' → logprob: -7.421437740325928

Token 770: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10483773797750473
    2. ')
' → logprob: -2.729837656021118
    3. '),' → logprob: -3.604837656021118
    4. '       ' → logprob: -5.979837894439697
    5. ',' → logprob: -6.479837894439697
    6. '）' → logprob: -7.604837894439697
    7. ')，' → logprob: -7.729837894439697
    8. ')
' → logprob: -8.354837417602539
    9. '#' → logprob: -8.479837417602539
    10. '=' → logprob: -8.854837417602539

Token 771: ' avec' (ID: 3937)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.47299402952194214
    2. 'result' → logprob: -1.097994089126587
    3. 'print' → logprob: -3.347994089126587
    4. '       ' → logprob: -5.222993850708008
    5. ' res' → logprob: -6.347993850708008
    6. ' result' → logprob: -7.722993850708008
    7. 'can' → logprob: -8.597993850708008
    8. 'p' → logprob: -9.847993850708008
    9. ' print' → logprob: -9.847993850708008
    10. 'if' → logprob: -10.097993850708008

Token 772: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07215721160173416
    2. 'tuple' → logprob: -2.697157144546509
    3. ' tuple' → logprob: -6.822157382965088
    4. ' p' → logprob: -7.197157382965088
    5. '(tuple' → logprob: -8.19715690612793
    6. '(' → logprob: -9.94715690612793
    7. '(p' → logprob: -10.32215690612793
    8. 'the' → logprob: -11.94715690612793
    9. '7' → logprob: -13.07215690612793
    10. 'table' → logprob: -13.19715690612793

Token 773: '_set' (ID: 5451)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.24005374312400818
    2. '_hand' → logprob: -1.6150537729263306
    3. 'hand' → logprob: -5.115053653717041
    4. 'p' → logprob: -6.115053653717041
    5. 'tuple' → logprob: -6.240053653717041
    6. '_set' → logprob: -6.865053653717041
    7. '_tuple' → logprob: -7.490053653717041
    8. 'cards' → logprob: -7.615053653717041
    9. '_p' → logprob: -7.740053653717041
    10. '手' → logprob: -7.740053653717041

Token 774: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010216512717306614
    2. 'result' → logprob: -5.63521671295166
    3. ',' → logprob: -5.88521671295166
    4. 'res' → logprob: -6.38521671295166
    5. '
' → logprob: -7.88521671295166
    6. '        
' → logprob: -8.26021671295166
    7. '   ' → logprob: -8.51021671295166
    8. ' result' → logprob: -8.63521671295166
    9. ' res' → logprob: -8.88521671295166
    10. ')' → logprob: -9.01021671295166

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00558566814288497
    2. '<|end|>' → logprob: -5.880585670471191
    3. '```' → logprob: -6.630585670471191
    4. 'result' → logprob: -7.255585670471191
    5. '        
' → logprob: -8.755585670471191
    6. ',' → logprob: -9.380585670471191
    7. '<|end|>' → logprob: -9.505585670471191
    8. ')' → logprob: -9.630585670471191
    9. ' result' → logprob: -9.880585670471191
    10. 'print' → logprob: -10.005585670471191

Token 776: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8158028721809387
    2. 'result' → logprob: -0.8158028721809387
    3. 'res' → logprob: -2.190802812576294
    4. 'if' → logprob: -6.190803050994873
    5. 'can' → logprob: -7.440803050994873
    6. '       ' → logprob: -8.565802574157715
    7. ' result' → logprob: -8.815802574157715
    8. ' print' → logprob: -8.815802574157715
    9. 'win' → logprob: -9.440802574157715
    10. 'winner' → logprob: -9.690802574157715

Token 777: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1654115617275238
    2. 'res' → logprob: -2.5404114723205566
    3. 'print' → logprob: -2.7904114723205566
    4. 'if' → logprob: -5.415411472320557
    5. 'win' → logprob: -6.290411472320557
    6. 'can' → logprob: -6.415411472320557
    7. '       ' → logprob: -6.665411472320557
    8. 'winner' → logprob: -7.040411472320557
    9. 'p' → logprob: -7.415411472320557
    10. ' result' → logprob: -8.415411949157715

Token 778: ' cherche' (ID: 52345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.073409803211689
    2. '       ' → logprob: -2.8234097957611084
    3. ' print' → logprob: -6.0734100341796875
    4. '   ' → logprob: -6.0734100341796875
    5. 'v' → logprob: -7.0734100341796875
    6. '#' → logprob: -7.0734100341796875
    7. 'result' → logprob: -7.1984100341796875
    8. 'voit' → logprob: -7.3234100341796875
    9. 'continue' → logprob: -7.4484100341796875
    10. '```' → logprob: -7.8234100341796875

Token 779: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5498607754707336
    2. 'print' → logprob: -1.1748607158660889
    3. 'if' → logprob: -2.299860715866089
    4. 'la' → logprob: -5.674860954284668
    5. 'à' → logprob: -6.174860954284668
    6. '
' → logprob: -6.549860954284668
    7. '   ' → logprob: -6.924860954284668
    8. 'le' → logprob: -7.049860954284668
    9. ' if' → logprob: -7.049860954284668
    10. 'res' → logprob: -7.299860954284668

Token 780: ' p' (ID: 275)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.16060134768486023
    2. 'dfs' → logprob: -1.9106013774871826
    3. 'can' → logprob: -8.410601615905762
    4. ' can' → logprob: -9.910601615905762
    5. 'True' → logprob: -10.535601615905762
    6. ' True' → logprob: -10.535601615905762
    7. '   ' → logprob: -11.035601615905762
    8. ' not' → logprob: -12.660601615905762
    9. 'p' → logprob: -12.785601615905762
    10. 'not' → logprob: -12.785601615905762

Token 781: ' a' (ID: 261)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.480693519115448
    2. 'g' → logprob: -1.2306935787200928
    3. ' gagne' → logprob: -3.6056935787200928
    4. 'est' → logprob: -4.230693340301514
    5. 'a' → logprob: -4.605693340301514
    6. 'can' → logprob: -4.855693340301514
    7. '_pe' → logprob: -4.980693340301514
    8. 'va' → logprob: -4.980693340301514
    9. '_g' → logprob: -5.855693340301514
    10. '_a' → logprob: -6.355693340301514

Token 782: ' un' (ID: 537)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.0669746398925781
    2. 'une' → logprob: -1.1919746398925781
    3. 'a' → logprob: -1.6919746398925781
    4. 'un' → logprob: -2.566974639892578
    5. 'le' → logprob: -2.941974639892578
    6. 'les' → logprob: -4.316974639892578
    7. ' une' → logprob: -5.816974639892578
    8. ' la' → logprob: -6.066974639892578
    9. ' a' → logprob: -6.316974639892578
    10. 'win' → logprob: -6.566974639892578

Token 783: ' chemin' (ID: 45035)
  Prédit: 'winning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winning' → logprob: -0.2531222105026245
    2. 'g' → logprob: -3.003122329711914
    3. 'c' → logprob: -3.628122329711914
    4. '```' → logprob: -3.628122329711914
    5. 'win' → logprob: -3.753122329711914
    6. ' winning' → logprob: -3.878122329711914
    7. 'che' → logprob: -4.003122329711914
    8. 's' → logprob: -4.378122329711914
    9. 'forced' → logprob: -5.128122329711914
    10. ' ' → logprob: -5.378122329711914

Token 784: ' gagn' (ID: 58408)
  Prédit: 'vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.8195804357528687
    2. 'pour' → logprob: -1.3195804357528687
    3. 'de' → logprob: -1.9445804357528687
    4. 'to' → logprob: -2.319580554962158
    5. ' vers' → logprob: -3.819580554962158
    6. ' to' → logprob: -4.819580554962158
    7. '   ' → logprob: -4.944580554962158
    8. '       ' → logprob: -5.444580554962158
    9. '```' → logprob: -6.569580554962158
    10. ' de' → logprob: -6.819580554962158

Token 785: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3395552933216095
    2. 'ante' → logprob: -1.339555263519287
    3. 'oire' → logprob: -4.089555263519287
    4. 'oir' → logprob: -6.089555263519287
    5. 'atoire' → logprob: -6.589555263519287
    6. 'toire' → logprob: -7.089555263519287
    7. 'nant' → logprob: -7.089555263519287
    8. '
' → logprob: -7.964555263519287
    9. 'able' → logprob: -8.089555740356445
    10. 'oi' → logprob: -8.464555740356445

Token 786: ' quel' (ID: 10613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01660890318453312
    2. '```' → logprob: -4.766608715057373
    3. '<|end|>' → logprob: -5.266608715057373
    4. 'print' → logprob: -6.891608715057373
    5. '        
' → logprob: -7.516608715057373
    6. '   ' → logprob: -7.766608715057373
    7. 'result' → logprob: -8.891609191894531
    8. '<|end|>' → logprob: -8.891609191894531
    9. '``' → logprob: -9.141609191894531
    10. ',' → logprob: -9.516609191894531

Token 787: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.03379622846841812
    2. ' que' → logprob: -3.4087963104248047
    3. 'ques' → logprob: -9.408796310424805
    4. 'quel' → logprob: -10.908796310424805
    5. 'qu' → logprob: -11.033796310424805
    6. 'con' → logprob: -11.158796310424805
    7. '   ' → logprob: -11.908796310424805
    8. '```' → logprob: -12.533796310424805
    9. ' ' → logprob: -13.033796310424805
    10. 'quee' → logprob: -13.533796310424805

Token 788: ' soit' (ID: 17293)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.9919506311416626
    2. 'ce' → logprob: -1.2419506311416626
    3. 'so' → logprob: -1.3669506311416626
    4. '   ' → logprob: -3.491950511932373
    5. '       ' → logprob: -4.116950511932373
    6. '```' → logprob: -4.241950511932373
    7. ' soit' → logprob: -4.491950511932373
    8. 'c' → logprob: -6.116950511932373
    9. 'cela' → logprob: -6.241950511932373
    10. '#' → logprob: -6.866950511932373

Token 789: ' ce' (ID: 2357)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23343490064144135
    2. ' l' → logprob: -2.7334349155426025
    3. ' ce' → logprob: -2.9834349155426025
    4. 'le' → logprob: -3.2334349155426025
    5. 'ce' → logprob: -3.4834349155426025
    6. 'la' → logprob: -4.858434677124023
    7. 'les' → logprob: -5.608434677124023
    8. ' ' → logprob: -6.358434677124023
    9. 'what' → logprob: -6.733434677124023
    10. 'o' → logprob: -6.858434677124023

Token 790: ' que' (ID: 661)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.772083580493927
    2. 'que' → logprob: -1.0220835208892822
    3. 'ad' → logprob: -2.5220835208892822
    4. 'c' → logprob: -3.1470835208892822
    5. ' coup' → logprob: -4.397083759307861
    6. 'ce' → logprob: -4.647083759307861
    7. 'op' → logprob: -5.397083759307861
    8. 'jeu' → logprob: -5.397083759307861
    9. 'cou' → logprob: -6.147083759307861
    10. ' choix' → logprob: -6.272083759307861

Token 791: ' fait' (ID: 7473)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.48789191246032715
    2. 'fait' → logprob: -1.4878919124603271
    3. 'f' → logprob: -2.237891912460327
    4. 'o' → logprob: -3.612891912460327
    5. ' fait' → logprob: -4.737892150878906
    6. ' l' → logprob: -5.112892150878906
    7. 'jou' → logprob: -5.237892150878906
    8. '  ' → logprob: -7.112892150878906
    9. ' ' → logprob: -7.112892150878906
    10. ' joue' → logprob: -7.112892150878906

Token 792: ' o' (ID: 293)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2524941563606262
    2. 'o' → logprob: -1.7524940967559814
    3. ' l' → logprob: -3.3774940967559814
    4. ' o' → logprob: -4.2524943351745605
    5. '       ' → logprob: -7.7524943351745605
    6. '	o' → logprob: -8.377493858337402
    7. '```' → logprob: -8.752493858337402
    8. ' ' → logprob: -9.002493858337402
    9. '   ' → logprob: -9.002493858337402
    10. 'op' → logprob: -9.002493858337402

Token 793: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004977479111403227
    2. '   ' → logprob: -8.125497817993164
    3. '<|end|>' → logprob: -9.125497817993164
    4. 'print' → logprob: -10.000497817993164
    5. 'result' → logprob: -11.375497817993164
    6. '        
' → logprob: -11.500497817993164
    7. '<|end|>' → logprob: -11.750497817993164
    8. '```' → logprob: -12.000497817993164
    9. ',' → logprob: -13.000497817993164
    10. '	' → logprob: -13.750497817993164

Token 794: '後' (ID: 27379)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8606345653533936
    2. ' print' → logprob: -1.1106345653533936
    3. '       ' → logprob: -1.9856345653533936
    4. ')' → logprob: -3.1106345653533936
    5. ' dfs' → logprob: -4.235634803771973
    6. 'dfs' → logprob: -4.360634803771973
    7. '   ' → logprob: -5.235634803771973
    8. ' res' → logprob: -5.360634803771973
    9. '           ' → logprob: -5.360634803771973
    10. ' True' → logprob: -5.610634803771973

Token 795: '手' (ID: 6034)
  Prédit: '手'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '手' → logprob: -0.00020890454470645636
    2. '攻' → logprob: -9.375208854675293
    3. '続' → logprob: -9.750208854675293
    4. '```' → logprob: -10.500208854675293
    5. 'p' → logprob: -11.250208854675293
    6. 'hand' → logprob: -11.875208854675293
    7. '番' → logprob: -12.875208854675293
    8. '先' → logprob: -13.250208854675293
    9. '``' → logprob: -13.375208854675293
    10. '者' → logprob: -13.500208854675293

Token 796: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.596707284450531
    2. ')
' → logprob: -0.846707284450531
    3. '       ' → logprob: -4.096707344055176
    4. '   ' → logprob: -6.471707344055176
    5. ')
' → logprob: -6.971707344055176
    6. ').' → logprob: -7.846707344055176
    7. '）' → logprob: -8.096707344055176
    8. ').
' → logprob: -9.096707344055176
    9. '）
' → logprob: -9.096707344055176
    10. ')

' → logprob: -9.346707344055176

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053020622581243515
    2. 'print' → logprob: -5.8803019523620605
    3. 'result' → logprob: -6.7553019523620605
    4. '   ' → logprob: -7.1303019523620605
    5. '```' → logprob: -7.8803019523620605
    6. '<|end|>' → logprob: -9.380302429199219
    7. '        
' → logprob: -11.005302429199219
    8. 'res' → logprob: -11.755302429199219
    9. 'rest' → logprob: -11.755302429199219
    10. ' print' → logprob: -12.255302429199219

Token 798: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38298195600509644
    2. 'print' → logprob: -1.3829820156097412
    3. 'res' → logprob: -2.757982015609741
    4. '       ' → logprob: -6.382981777191162
    5. ' result' → logprob: -7.507981777191162
    6. '   ' → logprob: -8.13298225402832
    7. 'win' → logprob: -8.38298225402832
    8. 'can' → logprob: -8.38298225402832
    9. 'if' (adapté à ' if') → logprob: -8.75798225402832
    10. 'winner' → logprob: -8.75798225402832

Token 799: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.22545219957828522
    2. ' dfs' → logprob: -1.600452184677124
    3. '   ' → logprob: -10.350452423095703
    4. ' ' → logprob: -13.350452423095703
    5. 'can' → logprob: -13.350452423095703
    6. 'df' → logprob: -13.475452423095703
    7. '
' → logprob: -14.725452423095703
    8. ' can' → logprob: -14.725452423095703
    9. 'DFS' → logprob: -14.725452423095703
    10. '  ' → logprob: -14.850452423095703

Token 800: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -0.0007181499968282878
    2. '({' → logprob: -7.250718116760254
    3. ' (' → logprob: -12.250718116760254
    4. '(' → logprob: -13.125718116760254
    5. '{' → logprob: -15.250718116760254
    6. '```' → logprob: -15.250718116760254
    7. '   ' → logprob: -15.500718116760254
    8. '(t' → logprob: -15.875718116760254
    9. ')table' → logprob: -16.12571907043457
    10. '(set' → logprob: -16.37571907043457

Token 801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017913209740072489
    2. ',p' → logprob: -6.626791477203369
    3. '(p' → logprob: -7.876791477203369
    4. ' ,' → logprob: -9.626791000366211
    5. '(' → logprob: -11.501791000366211
    6. ',
' → logprob: -12.251791000366211
    7. 'p' → logprob: -13.376791000366211
    8. ',(' → logprob: -14.001791000366211
    9. '，' → logprob: -14.501791000366211
    10. '   ' → logprob: -14.751791000366211

Token 802: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.005319616291671991
    2. 'p' → logprob: -5.380319595336914
    3. ' tuple' → logprob: -7.755319595336914
    4. 'fro' → logprob: -8.380319595336914
    5. '(tuple' → logprob: -11.005319595336914
    6. '   ' → logprob: -11.255319595336914
    7. '       ' → logprob: -12.380319595336914
    8. 'tu' → logprob: -13.255319595336914
    9. 't' → logprob: -14.005319595336914
    10. ' p' → logprob: -14.005319595336914

Token 803: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00878545269370079
    2. 'sorted' → logprob: -4.883785247802734
    3. '(p' → logprob: -6.758785247802734
    4. 'p' → logprob: -11.133785247802734
    5. '(' → logprob: -13.133785247802734
    6. ' sorted' → logprob: -14.383785247802734
    7. '(s' → logprob: -15.383785247802734
    8. '(sort' → logprob: -15.633785247802734
    9. '(
' → logprob: -16.258785247802734
    10. '.sorted' → logprob: -16.258785247802734

Token 804: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0003811025235336274
    2. 'p' → logprob: -7.875380992889404
    3. 'list' → logprob: -15.000381469726562
    4. '(list' → logprob: -15.250381469726562
    5. '(' → logprob: -15.875381469726562
    6. ' p' → logprob: -16.125381469726562
    7. '(
' → logprob: -16.625381469726562
    8. '((' → logprob: -17.250381469726562
    9. ' (' → logprob: -17.500381469726562
    10. '
' → logprob: -17.625381469726562

Token 805: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.598092684522271e-05
    2. '_cards' → logprob: -9.875056266784668
    3. 'set' → logprob: -13.000056266784668
    4. '_hand' → logprob: -14.125056266784668
    5. 'cards' → logprob: -14.750056266784668
    6. '_sets' → logprob: -14.875056266784668
    7. 'p' → logprob: -15.500056266784668
    8. '
' → logprob: -15.625056266784668
    9. '   ' → logprob: -15.875056266784668
    10. 'Set' → logprob: -16.12505531311035

Token 806: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.0009543364867568016
    2. '),' → logprob: -7.1259541511535645
    3. ' ' → logprob: -9.250954627990723
    4. '       ' → logprob: -10.500954627990723
    5. '   ' → logprob: -11.500954627990723
    6. '))' → logprob: -12.125954627990723
    7. ')' → logprob: -12.625954627990723
    8. '  ' → logprob: -13.375954627990723
    9. '      ' → logprob: -13.500954627990723
    10. '    ' → logprob: -14.000954627990723

Token 807: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0007106438861228526
    2. ' tuple' → logprob: -7.250710487365723
    3. '(tuple' → logprob: -14.375710487365723
    4. 'tu' → logprob: -16.25071144104004
    5. '       ' → logprob: -17.00071144104004
    6. '           ' → logprob: -17.75071144104004
    7. '   ' → logprob: -17.87571144104004
    8. '_tuple' → logprob: -17.87571144104004
    9. 'Tuple' → logprob: -18.87571144104004
    10. '  ' → logprob: -18.87571144104004

Token 808: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0009114635176956654
    2. 'sorted' → logprob: -7.000911235809326
    3. '.sorted' → logprob: -18.125911712646484
    4. '_sorted' → logprob: -18.375911712646484
    5. ' sorted' → logprob: -19.250911712646484
    6. '(' → logprob: -19.625911712646484
    7. 'Sorted' → logprob: -19.875911712646484
    8. '0' → logprob: -21.625911712646484
    9. '```' → logprob: -21.625911712646484
    10. '2' → logprob: -21.750911712646484

Token 809: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -0.3915612995624542
    2. 'o' → logprob: -1.1415612697601318
    3. 'sorted' → logprob: -5.891561508178711
    4. '(sorted' → logprob: -6.266561508178711
    5. ' o' → logprob: -12.141561508178711
    6. '{o' → logprob: -12.391561508178711
    7. '	o' → logprob: -12.891561508178711
    8. '[o' → logprob: -13.391561508178711
    9. '   ' → logprob: -14.141561508178711
    10. ''o' → logprob: -14.391561508178711

Token 810: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0008213033434003592
    2. 'o' → logprob: -7.125821113586426
    3. '(o' → logprob: -11.375821113586426
    4. '_o' → logprob: -12.875821113586426
    5. 'set' → logprob: -13.500821113586426
    6. '_s' → logprob: -15.750821113586426
    7. '_sets' → logprob: -15.750821113586426
    8. '_(' → logprob: -15.875821113586426
    9. '_' → logprob: -15.875821113586426
    10. '(_' → logprob: -15.875821113586426

Token 811: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00010795372509164736
    2. ' ),' → logprob: -9.625107765197754
    3. ')),' → logprob: -10.250107765197754
    4. '   ' → logprob: -13.250107765197754
    5. ')' → logprob: -13.375107765197754
    6. ',),' → logprob: -13.625107765197754
    7. '       ' → logprob: -14.125107765197754
    8. ',' → logprob: -15.125107765197754
    9. '    ' → logprob: -15.750107765197754
    10. ')，' → logprob: -16.12510871887207

Token 812: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.03371693566441536
    2. ' memo' → logprob: -3.408716917037964
    3. '{}' → logprob: -10.033717155456543
    4. '{})' → logprob: -12.158717155456543
    5. ' ' → logprob: -12.283717155456543
    6. 'mem' → logprob: -12.533717155456543
    7. 'memory' → logprob: -12.908717155456543
    8. 'm' → logprob: -13.033717155456543
    9. '     ' → logprob: -13.283717155456543
    10. '   ' → logprob: -13.658717155456543

Token 813: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3874342143535614
    2. '):
' → logprob: -1.1374342441558838
    3. ')' → logprob: -7.887434005737305
    4. '):
' → logprob: -9.012434005737305
    5. ')==' → logprob: -10.512434005737305
    6. ' ):' → logprob: -11.262434005737305
    7. ')：' → logprob: -11.512434005737305
    8. ' ):
' → logprob: -12.387434005737305
    9. ')>' → logprob: -12.762434005737305
    10. '   ' → logprob: -12.887434005737305

Token 814: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00612075999379158
    2. 'print' → logprob: -5.131120681762695
    3. ' print' → logprob: -8.756120681762695
    4. '       ' → logprob: -10.756120681762695
    5. '	       ' → logprob: -11.631120681762695
    6. '		' → logprob: -13.756120681762695
    7. '            
' → logprob: -14.256120681762695
    8. '	print' → logprob: -14.631120681762695
    9. '          ' → logprob: -14.756120681762695
    10. '```' → logprob: -15.006120681762695

Token 815: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08556888997554779
    2. '           ' → logprob: -2.585568904876709
    3. ' print' → logprob: -5.085568904876709
    4. '       ' → logprob: -7.710568904876709
    5. '	print' → logprob: -11.58556842803955
    6. '	       ' → logprob: -12.08556842803955
    7. '               ' → logprob: -12.58556842803955
    8. '   ' → logprob: -13.08556842803955
    9. '		' → logprob: -13.46056842803955
    10. '```' → logprob: -14.08556842803955

Token 816: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01842477172613144
    2. '('' → logprob: -4.143424987792969
    3. '(' → logprob: -6.268424987792969
    4. '"' → logprob: -8.018424987792969
    5. 'Yes' → logprob: -9.893424987792969
    6. '("+' → logprob: -10.643424987792969
    7. '(+' → logprob: -11.143424987792969
    8. 'YES' → logprob: -11.268424987792969
    9. '1' → logprob: -11.393424987792969
    10. '(True' → logprob: -11.768424987792969

Token 817: 'yes' (ID: 6763)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.7164936065673828
    2. 'YES' → logprob: -0.8414936065673828
    3. '先' → logprob: -3.841493606567383
    4. 'Oui' → logprob: -3.966493606567383
    5. 'O' → logprob: -4.966493606567383
    6. '"' → logprob: -5.341493606567383
    7. 'L' → logprob: -5.466493606567383
    8. 'S' → logprob: -5.591493606567383
    9. 'G' → logprob: -6.216493606567383
    10. 'o' → logprob: -6.341493606567383

Token 818: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.25207409262657166
    2. '")' → logprob: -1.502074122428894
    3. '")
' → logprob: -8.877074241638184
    4. 'else' → logprob: -13.252074241638184
    5. 'e' → logprob: -14.377074241638184
    6. ')
' → logprob: -14.627074241638184
    7. ')' → logprob: -14.627074241638184
    8. '"' → logprob: -15.127074241638184
    9. '")

' → logprob: -15.252074241638184
    10. '')
' → logprob: -15.252074241638184

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001522718113847077
    2. 'else' → logprob: -6.501522541046143
    3. ' else' → logprob: -11.5015230178833
    4. '           ' → logprob: -12.2515230178833
    5. '   ' → logprob: -13.1265230178833
    6. '```' → logprob: -13.7515230178833
    7. '<|end|>' → logprob: -13.7515230178833
    8. '	' → logprob: -15.1265230178833
    9. '	else' → logprob: -15.1265230178833
    10. ' ' → logprob: -15.8765230178833

Token 820: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5908536911010742
    2. 'else' (adapté à ' else') → logprob: -0.8408536911010742
    3. ' else' → logprob: -4.215853691101074
    4. '	else' → logprob: -10.965853691101074
    5. '   ' → logprob: -11.215853691101074
    6. '```' → logprob: -12.590853691101074
    7. '           ' → logprob: -12.840853691101074
    8. '	' → logprob: -12.965853691101074
    9. 'elif' → logprob: -13.590853691101074
    10. '<|end|>' → logprob: -14.340853691101074

Token 821: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7713850736618042
    2. '           ' → logprob: -0.7713850736618042
    3. ':
' → logprob: -2.6463851928710938
    4. '():
' → logprob: -6.646385192871094
    5. ' :' → logprob: -7.396385192871094
    6. ' print' → logprob: -7.771385192871094
    7. '("' → logprob: -8.021385192871094
    8. '       ' → logprob: -8.146385192871094
    9. '():' → logprob: -8.396385192871094
    10. ' :
' → logprob: -8.396385192871094

Token 822: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20364393293857574
    2. ' print' → logprob: -2.078644037246704
    3. 'print' → logprob: -2.828644037246704
    4. '	       ' → logprob: -10.328643798828125
    5. '               ' → logprob: -12.078643798828125
    6. '	print' → logprob: -12.203643798828125
    7. '		' → logprob: -12.578643798828125
    8. '       ' → logprob: -13.453643798828125
    9. '```' → logprob: -13.578643798828125
    10. '   ' → logprob: -14.078643798828125

Token 823: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005308231338858604
    2. ' print' → logprob: -5.255308151245117
    3. '           ' → logprob: -9.505308151245117
    4. '	print' → logprob: -17.380308151245117
    5. '```' → logprob: -19.255308151245117
    6. '       ' → logprob: -19.505308151245117
    7. '.print' → logprob: -20.255308151245117
    8. '            ' → logprob: -20.505308151245117
    9. '(print' → logprob: -20.755308151245117
    10. '               ' → logprob: -20.755308151245117

Token 824: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0040854052640497684
    2. '(' → logprob: -5.504085540771484
    3. '"' → logprob: -12.879085540771484
    4. '('' → logprob: -13.004085540771484
    5. ' ("' → logprob: -13.629085540771484
    6. '(
' → logprob: -15.379085540771484
    7. '("""' → logprob: -15.629085540771484
    8. '("\' → logprob: -16.004085540771484
    9. '("("' → logprob: -16.629085540771484
    10. '(""' → logprob: -17.004085540771484

Token 825: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -7.896309739408025e-07
    2. ' no' → logprob: -14.625000953674316
    3. '"' → logprob: -15.625000953674316
    4. 'No' → logprob: -18.0
    5. '	no' → logprob: -19.375
    6. '"No' → logprob: -19.5
    7. '(no' → logprob: -19.75
    8. 'NO' → logprob: -20.25
    9. '")' → logprob: -21.0
    10. '   ' → logprob: -21.25

Token 826: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08028958737850189
    2. ')' → logprob: -2.580289602279663
    3. ')")' → logprob: -6.580289363861084
    4. '}")' → logprob: -12.330289840698242
    5. '")
' → logprob: -12.830289840698242
    6. '")}' → logprob: -13.205289840698242
    7. '')' → logprob: -14.955289840698242
    8. '`)' → logprob: -15.080289840698242
    9. '```' → logprob: -15.080289840698242
    10. ')")
' → logprob: -15.205289840698242

Token 827: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003252342576161027
    2. '```' → logprob: -6.2532525062561035
    3. '<|end|>' → logprob: -7.5032525062561035
    4. ' if' → logprob: -7.6282525062561035
    5. 'main' → logprob: -8.378252029418945
    6. '#' → logprob: -10.878252029418945
    7. '__' → logprob: -11.378252029418945
    8. '<|end|>' → logprob: -12.003252029418945
    9. '...' → logprob: -12.253252029418945
    10. '
' → logprob: -12.753252029418945

Token 828: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12693366408348083
    2. ' __' → logprob: -2.1269335746765137
    3. 'name' → logprob: -12.626934051513672
    4. '_name' → logprob: -14.001934051513672
    5. ' ' → logprob: -14.876934051513672
    6. '/__' → logprob: -15.001934051513672
    7. '___' → logprob: -15.626934051513672
    8. '_' → logprob: -15.751934051513672
    9. '﻿' → logprob: -15.876934051513672
    10. 'Name' → logprob: -16.376934051513672

Token 829: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0695682093501091
    2. ' ==' → logprob: -3.069568157196045
    3. '==' → logprob: -4.069568157196045
    4. 'name' → logprob: -6.444568157196045
    5. '=="' → logprob: -7.069568157196045
    6. ' __' → logprob: -7.319568157196045
    7. '_name' → logprob: -9.194568634033203
    8. 'main' → logprob: -9.194568634033203
    9. '=='' → logprob: -9.444568634033203
    10. '```' → logprob: -10.194568634033203

Token 830: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08329721540212631
    2. '==' → logprob: -2.9582972526550293
    3. '=="' → logprob: -3.7082972526550293
    4. ' ==' → logprob: -6.458297252655029
    5. '=='' → logprob: -6.458297252655029
    6. '()=="' → logprob: -9.833296775817871
    7. '```' → logprob: -10.083296775817871
    8. '==="' → logprob: -10.083296775817871
    9. '__":
' → logprob: -10.333296775817871
    10. '__('' → logprob: -10.333296775817871

Token 831: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5613781809806824
    2. ' ==' → logprob: -1.0613782405853271
    3. '=="' → logprob: -2.811378240585327
    4. '__' → logprob: -3.811378240585327
    5. '=='' → logprob: -6.686378002166748
    6. '()==' → logprob: -10.561378479003906
    7. '```' → logprob: -11.061378479003906
    8. '==
' → logprob: -11.186378479003906
    9. '__.__' → logprob: -11.936378479003906
    10. '.__' → logprob: -11.936378479003906

Token 832: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47414839267730713
    2. ''' → logprob: -0.9741483926773071
    3. '__' → logprob: -9.599148750305176
    4. ' "__' → logprob: -12.724148750305176
    5. ' '__' → logprob: -15.099148750305176
    6. '   ' → logprob: -15.974148750305176
    7. '"name' → logprob: -17.09914779663086
    8. '('__' → logprob: -17.09914779663086
    9. '("__' → logprob: -17.34914779663086
    10. ''"' → logprob: -17.72414779663086

Token 833: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.431207682704553e-05
    2. '__' → logprob: -9.875054359436035
    3. 'name' → logprob: -13.500054359436035
    4. '_main' → logprob: -14.375054359436035
    5. ' main' → logprob: -14.875054359436035
    6. 'built' → logprob: -15.625054359436035
    7. '__":
' → logprob: -16.12505340576172
    8. 'm' → logprob: -17.37505340576172
    9. '主' → logprob: -17.75005340576172
    10. '__':
' → logprob: -17.75005340576172

Token 834: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.025665175169706345
    2. '__' → logprob: -4.025665283203125
    3. '__':
' → logprob: -4.900665283203125
    4. '():
' → logprob: -11.025665283203125
    5. '__["' → logprob: -11.525665283203125
    6. '__.' → logprob: -12.650665283203125
    7. '__()
' → logprob: -12.900665283203125
    8. '__:' → logprob: -12.900665283203125
    9. '__.__' → logprob: -13.150665283203125
    10. '_' → logprob: -13.775665283203125

Token 835: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00020342117932159454
    2. '   ' → logprob: -9.125203132629395
    3. '	main' → logprob: -9.625203132629395
    4. ' main' → logprob: -10.500203132629395
    5. '_main' → logprob: -15.000203132629395
    6. '(main' → logprob: -15.500203132629395
    7. '__' → logprob: -16.25020408630371
    8. '    
' → logprob: -16.50020408630371
    9. 'Main' → logprob: -16.87520408630371
    10. ' ' → logprob: -17.00020408630371

Token 836: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. '	main' → logprob: -22.25
    4. '.main' → logprob: -26.25
    5. '_main' → logprob: -26.875
    6. '(main' → logprob: -27.125
    7. 'import' → logprob: -27.375
    8. '   ' → logprob: -27.375
    9. '```' → logprob: -28.25
    10. 'Main' → logprob: -29.25

Token 837: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 835
Tokens correctement prédits (1ère position, stricte): 307
Tokens correctement prédits (1ère position, avec adaptation): 328
Tokens correctement prédits (top 10): 628
Précision stricte (1ère position): 36.77%
Précision adaptée (1ère position): 39.28%
Précision (top 10): 75.21%
================================================================================
