================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Ball:
    def __init__(self, number: int):
        self.number = number

    def __lt__(self, other: 'Ball') -> bool:
        return self.number < other.number

    def __repr__(self) -> str:
        return f"Ball({self.number})"


class Tube:
    def __init__(self, name: str):
        self.name = name
        self.stack: list[Ball] = []

    def can_place(self, ball: Ball) -> bool:
        # A ball can be placed if the stack is empty or the top ball number is greater than the new ball
        if not self.stack:
            return True
        return self.stack[-1] > ball

    def place(self, ball: Ball):
        if not self.can_place(ball):
            raise ValueError(f"Cannot place {ball} on tube {self.name} due to ordering constraints.")
        self.stack.append(ball)

    def __repr__(self) -> str:
        return f"Tube({self.name}, stack={self.stack})"


class Board:
    def __init__(self):
        # Although in the problem the board rotates left or right (to put balls in either tube B or C),
        # we model this as an abstraction layer for future extensibility.
        self.left_tube = Tube('B')
        self.right_tube = Tube('C')

    def drop_ball(self, ball: Ball) -> bool:
        """
        Decide which tube to put the ball in.
        Returns True if placed successfully, False otherwise.

        The heuristic tries to place in left tube first, if possible, else right tube.
        """
        if self.left_tube.can_place(ball):
            self.left_tube.place(ball)
            return True
        elif self.right_tube.can_place(ball):
            self.right_tube.place(ball)
            return True
        else:
            return False

    def reset(self):
        self.left_tube = Tube('B')
        self.right_tube = Tube('C')


class BallContainerSimulator:
    def __init__(self):
        self.board = Board()

    def simulate(self, balls: list[int]) -> str:
        self.board.reset()
        ball_objects = [Ball(num) for num in balls]

        for ball in ball_objects:
            if not self.board.drop_ball(ball):
                return "NO"
        return "YES"


class InputParser:
    def __init__(self, input_lines: list[str]):
        self.lines = input_lines
        self.index = 0

    def next_line(self) -> str:
        if self.index >= len(self.lines):
            raise StopIteration
        line = self.lines[self.index].strip()
        self.index += 1
        return line

    def parse(self) -> tuple[int, list[list[int]]]:
        n = int(self.next_line())
        data_sets = []
        for _ in range(n):
            data = list(map(int, self.next_line().split()))
            data_sets.append(data)
        return n, data_sets


def main():
    import sys
    parser = InputParser(sys.stdin.read().strip().split('\n'))
    n, data_sets = parser.parse()

    simulator = BallContainerSimulator()
    for data_set in data_sets:
        print(simulator.simulate(data_set))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Ball' (ID: 17943)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35758480429649353
    2. ':' → logprob: -1.232584834098816
    3. '   ' → logprob: -5.7325849533081055
    4. '```' → logprob: -6.2325849533081055
    5. '\' → logprob: -6.3575849533081055
    6. '():' → logprob: -7.2325849533081055
    7. '()' → logprob: -8.482584953308105
    8. ':
' → logprob: -8.607584953308105
    9. '(
' → logprob: -8.607584953308105
    10. ''' → logprob: -8.732584953308105

Token 4: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6068369746208191
    2. '(' → logprob: -2.106837034225464
    3. '    ' → logprob: -2.731837034225464
    4. '\' → logprob: -2.981837034225464
    5. '```' → logprob: -2.981837034225464
    6. '(space' → logprob: -3.356837034225464
    7. ''' → logprob: -3.606837034225464
    8. '   ' → logprob: -3.606837034225464
    9. '`' → logprob: -3.981837034225464
    10. ' (' → logprob: -4.606836795806885

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025457637384533882
    2. ' init' → logprob: -5.150457859039307
    3. ' __' → logprob: -5.775457859039307
    4. ' def' → logprob: -6.025457859039307
    5. ' ' → logprob: -6.025457859039307
    6. ' )' → logprob: -6.525457859039307
    7. '    ' → logprob: -6.525457859039307
    8. ')' → logprob: -6.775457859039307
    9. '__' → logprob: -6.900457859039307
    10. ' calculate' → logprob: -7.400457859039307

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1888679839321412e-05
    2. ' init' → logprob: -11.000021934509277
    3. '_init' → logprob: -12.500021934509277
    4. 'ini' → logprob: -14.375021934509277
    5. 'i' → logprob: -14.625021934509277
    6. '_' → logprob: -16.12502098083496
    7. '	init' → logprob: -16.62502098083496
    8. 'in' → logprob: -16.75002098083496
    9. '_i' → logprob: -17.37502098083496
    10. 'int' → logprob: -18.12502098083496

Token 7: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9071843028068542
    2. '(' → logprob: -1.157184362411499
    3. '__(' → logprob: -1.532184362411499
    4. '_' → logprob: -2.782184362411499
    5. '__(
' → logprob: -7.15718412399292
    6. '__((' → logprob: -7.28218412399292
    7. '_(' → logprob: -7.90718412399292
    8. '__('' → logprob: -8.032184600830078
    9. ' (' → logprob: -8.032184600830078
    10. '(self' → logprob: -8.157184600830078

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021769083105027676
    2. ' self' → logprob: -7.252176761627197
    3. ')' → logprob: -7.627176761627197
    4. '(self' → logprob: -7.752176761627197
    5. 's' → logprob: -8.002177238464355
    6. ' ' → logprob: -9.127177238464355
    7. ' )' → logprob: -9.502177238464355
    8. '_self' → logprob: -11.627177238464355
    9. 'space' → logprob: -12.627177238464355
    10. '(' → logprob: -12.877177238464355

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25849273800849915
    2. ',' → logprob: -2.3834927082061768
    3. '(' → logprob: -2.7584927082061768
    4. '<|end|>' → logprob: -3.5084927082061768
    5. 'self' → logprob: -4.258492946624756
    6. ' ' → logprob: -4.883492946624756
    7. ' )' → logprob: -5.008492946624756
    8. '_' → logprob: -5.008492946624756
    9. 's' → logprob: -6.633492946624756
    10. ' (' → logprob: -7.008492946624756

Token 10: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6860576272010803
    2. ' self' → logprob: -1.5610575675964355
    3. 'color' → logprob: -1.9360575675964355
    4. ' color' → logprob: -3.0610575675964355
    5. 'position' → logprob: -3.9360575675964355
    6. ' position' → logprob: -4.0610575675964355
    7. ' x' → logprob: -4.4360575675964355
    8. ' )' → logprob: -4.4360575675964355
    9. 'radius' → logprob: -4.6860575675964355
    10. ')' → logprob: -4.8110575675964355

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4308016002178192
    2. ')' → logprob: -1.1808016300201416
    3. ',' → logprob: -3.1808016300201416
    4. ':' → logprob: -6.6808013916015625
    5. '):
' → logprob: -9.930801391601562
    6. ' ,' → logprob: -10.930801391601562
    7. '.' → logprob: -11.180801391601562
    8. '),' → logprob: -11.305801391601562
    9. '_' → logprob: -11.805801391601562
    10. '   ' → logprob: -11.805801391601562

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3393611907958984
    2. 'int' → logprob: -1.4643611907958984
    3. ' int' → logprob: -1.5893611907958984
    4. ')' → logprob: -1.8393611907958984
    5. ' )' → logprob: -1.9643611907958984
    6. 's' → logprob: -6.839361190795898
    7. 'i' → logprob: -7.464361190795898
    8. '  ' → logprob: -7.839361190795898
    9. ' ,' → logprob: -8.464361190795898
    10. ':int' → logprob: -8.714361190795898

Token 13: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2588319778442383
    2. '):' → logprob: -1.5088319778442383
    3. ',' → logprob: -5.008831977844238
    4. '),' → logprob: -9.758831977844238
    5. ':' → logprob: -10.008831977844238
    6. '):
' → logprob: -10.258831977844238
    7. ')>' → logprob: -11.258831977844238
    8. '   ' → logprob: -11.758831977844238
    9. ' )' → logprob: -12.133831977844238
    10. ')">' → logprob: -12.508831977844238

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18607281148433685
    2. ' ' → logprob: -2.436072826385498
    3. '    ' → logprob: -3.186072826385498
    4. '   ' → logprob: -3.936072826385498
    5. '\' → logprob: -5.436072826385498
    6. '        ' → logprob: -5.561072826385498
    7. '     ' → logprob: -6.686072826385498
    8. 'n' → logprob: -6.811072826385498
    9. '        
' → logprob: -6.811072826385498
    10. '<|end|>' → logprob: -6.811072826385498

Token 15: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6685428023338318
    2. 's' → logprob: -1.5435428619384766
    3. '       ' → logprob: -2.0435428619384766
    4. ' ' → logprob: -2.5435428619384766
    5. ' self' → logprob: -3.6685428619384766
    6. '        ' → logprob: -4.668542861938477
    7. '   ' → logprob: -4.918542861938477
    8. '_' → logprob: -4.918542861938477
    9. '    ' → logprob: -5.793542861938477
    10. ''s' → logprob: -6.543542861938477

Token 16: '.number' (ID: 25737)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0017637170385569334
    2. '.number' → logprob: -6.626763820648193
    3. ' .' → logprob: -8.251763343811035
    4. ' ' → logprob: -9.251763343811035
    5. 'number' → logprob: -11.001763343811035
    6. '.ball' → logprob: -11.626763343811035
    7. ')' → logprob: -11.751763343811035
    8. '._' → logprob: -12.251763343811035
    9. ' number' → logprob: -12.376763343811035
    10. '.n' → logprob: -12.501763343811035

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523361325263977
    2. '=' → logprob: -0.898361325263977
    3. ' ' → logprob: -8.773361206054688
    4. '.' → logprob: -10.023361206054688
    5. ' is' → logprob: -12.273361206054688
    6. ' =
' → logprob: -12.398361206054688
    7. ')' → logprob: -12.398361206054688
    8. '<|end|>' → logprob: -12.773361206054688
    9. 'space' → logprob: -12.898361206054688
    10. '    ' → logprob: -13.148361206054688

Token 18: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.1002078503370285
    2. 'number' → logprob: -2.350207805633545
    3. ' ' → logprob: -14.600208282470703
    4. '	number' → logprob: -15.225208282470703
    5. ' ' → logprob: -15.350208282470703
    6. 'n' → logprob: -16.225208282470703
    7. '_number' → logprob: -16.600208282470703
    8. '(number' → logprob: -16.725208282470703
    9. '[number' → logprob: -17.725208282470703
    10. ' n' → logprob: -18.100208282470703

Token 19: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9618192315101624
    2. '\' → logprob: -1.4618191719055176
    3. '\n' → logprob: -1.8368191719055176
    4. '<|end|>' → logprob: -1.8368191719055176
    5. '
' → logprob: -4.086819171905518
    6. ' ' → logprob: -4.711819171905518
    7. '```' → logprob: -4.711819171905518
    8. '   ' → logprob: -5.086819171905518
    9. ':' → logprob: -5.461819171905518
    10. '' → logprob: -5.586819171905518

Token 20: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5470041632652283
    2. '.' → logprob: -1.297004222869873
    3. '   ' → logprob: -3.672004222869873
    4. '\' → logprob: -3.797004222869873
    5. '\n' → logprob: -3.922004222869873
    6. '```' → logprob: -4.297004222869873
    7. ' 
' → logprob: -4.422004222869873
    8. '    
' → logprob: -4.797004222869873
    9. ' ' → logprob: -4.922004222869873
    10. '<|end|>' → logprob: -5.297004222869873

Token 21: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.038519006222486496
    2. 'd' → logprob: -3.2885189056396484
    3. '   ' → logprob: -8.413518905639648
    4. ' def' → logprob: -9.288518905639648
    5. '```' → logprob: -9.288518905639648
    6. '@' → logprob: -10.663518905639648
    7. 'a' → logprob: -11.413518905639648
    8. ' ' → logprob: -11.538518905639648
    9. '\' → logprob: -12.413518905639648
    10. '#' → logprob: -12.538518905639648

Token 22: ' __' (ID: 2516)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.686715841293335
    2. ' ' → logprob: -1.436715841293335
    3. ' get' → logprob: -1.936715841293335
    4. ' move' → logprob: -3.061715841293335
    5. ' spin' → logprob: -4.061716079711914
    6. ' play' → logprob: -4.436716079711914
    7. ' is' → logprob: -5.311716079711914
    8. ' throw' → logprob: -5.311716079711914
    9. 'space' → logprob: -5.561716079711914
    10. ' ' → logprob: -5.811716079711914

Token 23: 'lt' (ID: 3199)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6988174915313721
    2. 'repr' → logprob: -1.073817491531372
    3. '_' → logprob: -2.448817491531372
    4. 'eq' → logprob: -3.198817491531372
    5. 'init' → logprob: -3.698817491531372
    6. 'r' → logprob: -5.698817253112793
    7. 'i' → logprob: -5.948817253112793
    8. 's' → logprob: -6.448817253112793
    9. '_str' → logprob: -7.823817253112793
    10. 're' → logprob: -8.323817253112793

Token 24: '__(' (ID: 8241)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5842373967170715
    2. '__' → logprob: -1.4592373371124268
    3. '__(' → logprob: -1.5842373371124268
    4. '(' → logprob: -5.959237575531006
    5. '_(' → logprob: -6.209237575531006
    6. '__('' → logprob: -8.834237098693848
    7. '__((' → logprob: -9.334237098693848
    8. '___' → logprob: -9.834237098693848
    9. '__(
' → logprob: -10.209237098693848
    10. '_^(' → logprob: -11.709237098693848

Token 25: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006745471036992967
    2. ' self' → logprob: -7.500674724578857
    3. 'other' → logprob: -9.3756742477417
    4. 's' → logprob: -10.5006742477417
    5. 'sel' → logprob: -12.2506742477417
    6. 'se' → logprob: -13.7506742477417
    7. ' ' → logprob: -13.8756742477417
    8. ' other' → logprob: -14.2506742477417
    9. 'o' → logprob: -14.3756742477417
    10. '   ' → logprob: -15.1256742477417

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22863344848155975
    2. ' ,' → logprob: -1.6036334037780762
    3. ' ' → logprob: -6.103633403778076
    4. ')' → logprob: -7.478633403778076
    5. ' )' → logprob: -7.978633403778076
    6. '<|end|>' → logprob: -11.353633880615234
    7. '  ' → logprob: -11.603633880615234
    8. 'other' → logprob: -11.603633880615234
    9. '_' → logprob: -12.228633880615234
    10. '(' → logprob: -12.353633880615234

Token 27: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.02028796821832657
    2. 'other' → logprob: -4.020287990570068
    3. ' o' → logprob: -6.270287990570068
    4. ' self' → logprob: -8.77028751373291
    5. 'self' → logprob: -10.39528751373291
    6. 'o' → logprob: -10.52028751373291
    7. ' ' → logprob: -11.27028751373291
    8. ' oth' → logprob: -11.89528751373291
    9. ' ' → logprob: -12.52028751373291
    10. ' space' → logprob: -13.39528751373291

Token 28: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2879132926464081
    2. '):' → logprob: -1.4129133224487305
    3. ' )' → logprob: -5.4129133224487305
    4. ' ):' → logprob: -6.2879133224487305
    5. ',' → logprob: -8.53791332244873
    6. '.' → logprob: -9.16291332244873
    7. ':' → logprob: -9.53791332244873
    8. ' ' → logprob: -11.66291332244873
    9. ')>' → logprob: -12.28791332244873
    10. '),' → logprob: -12.28791332244873

Token 29: ' '' (ID: 461)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.489921897649765
    2. ')' → logprob: -1.6149219274520874
    3. ' ' → logprob: -2.114921808242798
    4. ' Ball' → logprob: -2.864921808242798
    5. 'Ball' → logprob: -5.114922046661377
    6. ' ' → logprob: -6.614922046661377
    7. '  ' → logprob: -7.614922046661377
    8. ' ):' → logprob: -7.989922046661377
    9. ' '' → logprob: -8.114921569824219
    10. ''' → logprob: -8.364921569824219

Token 30: 'Ball' (ID: 35006)
  Prédit: 'Ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ball' → logprob: -0.004960254766047001
    2. 'B' → logprob: -6.004960060119629
    3. 'Bal' → logprob: -6.129960060119629
    4. 'Ba' → logprob: -8.254960060119629
    5. ' Ball' → logprob: -11.004960060119629
    6. ' ' → logprob: -12.504960060119629
    7. 'Bat' → logprob: -12.629960060119629
    8. ')' → logprob: -12.754960060119629
    9. 'Balancer' → logprob: -12.879960060119629
    10. 'Balls' → logprob: -13.129960060119629

Token 31: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3519587218761444
    2. ''):' → logprob: -1.3519587516784668
    3. ')' → logprob: -3.351958751678467
    4. '):' → logprob: -6.226958751678467
    5. ''' → logprob: -7.351958751678467
    6. ':' → logprob: -8.351958274841309
    7. '':' → logprob: -11.101958274841309
    8. ' ')' → logprob: -11.226958274841309
    9. ''):
' → logprob: -11.351958274841309
    10. ')':' → logprob: -11.601958274841309

Token 32: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011189528740942478
    2. '):' → logprob: -5.1361894607543945
    3. '(' → logprob: -5.5111894607543945
    4. '<|end|>' → logprob: -8.011189460754395
    5. ')' → logprob: -8.511189460754395
    6. ':
' → logprob: -8.636189460754395
    7. '(self' → logprob: -9.011189460754395
    8. '():' → logprob: -9.761189460754395
    9. ':return' → logprob: -9.761189460754395
    10. ':**' → logprob: -9.886189460754395

Token 33: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.007807011716067791
    2. 'bool' → logprob: -4.882806777954102
    3. ' ' → logprob: -9.007806777954102
    4. '  ' → logprob: -10.507806777954102
    5. '   ' → logprob: -11.132806777954102
    6. ' ' → logprob: -11.632806777954102
    7. '	bool' → logprob: -11.757806777954102
    8. '<bool' → logprob: -12.632806777954102
    9. ' int' → logprob: -13.007806777954102
    10. ' b' → logprob: -13.007806777954102

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003122247871942818
    2. '):' → logprob: -8.375311851501465
    3. '():' → logprob: -10.625311851501465
    4. ':**' → logprob: -10.625311851501465
    5. ':return' → logprob: -11.250311851501465
    6. ':
' → logprob: -11.625311851501465
    7. ' :' → logprob: -11.750311851501465
    8. '<|end|>' → logprob: -13.625311851501465
    9. '>:' → logprob: -14.250311851501465
    10. ')' → logprob: -15.375311851501465

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1044776439666748
    2. ' return' → logprob: -3.229477643966675
    3. 'return' → logprob: -3.979477643966675
    4. '        ' → logprob: -4.104477882385254
    5. ' ' → logprob: -4.354477882385254
    6. '    ' → logprob: -4.979477882385254
    7. '   ' → logprob: -6.354477882385254
    8. ' ' → logprob: -6.979477882385254
    9. '      ' → logprob: -7.854477882385254
    10. '  ' → logprob: -8.604477882385254

Token 36: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2838651239871979
    2. '       ' → logprob: -2.158865213394165
    3. 'self' → logprob: -2.533865213394165
    4. ' return' → logprob: -3.033865213394165
    5. ' self' → logprob: -5.658864974975586
    6. '   ' → logprob: -8.408864974975586
    7. 'r' → logprob: -8.658864974975586
    8. ' ' → logprob: -9.908864974975586
    9. '    ' → logprob: -10.033864974975586
    10. 'ret' → logprob: -10.408864974975586

Token 37: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03804275393486023
    2. 'self' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.038043022155762
    4. ' True' → logprob: -15.413043022155762
    5. ' abs' → logprob: -16.288042068481445
    6. ' ' → logprob: -17.413042068481445
    7. 'abs' → logprob: -17.538042068481445
    8. '	self' → logprob: -17.663042068481445
    9. '(self' → logprob: -17.788042068481445
    10. '    ' → logprob: -18.288042068481445

Token 38: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.005249056499451399
    2. '.' → logprob: -5.2552490234375
    3. '.n' → logprob: -12.0052490234375
    4. ' .' → logprob: -12.5052490234375
    5. 'number' → logprob: -13.0052490234375
    6. '.num' → logprob: -13.6302490234375
    7. '.<' → logprob: -15.0052490234375
    8. '.user' → logprob: -15.2552490234375
    9. '<number' → logprob: -15.2552490234375
    10. '.value' → logprob: -15.6302490234375

Token 39: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0007332704844884574
    2. '<' → logprob: -7.250733375549316
    3. ' ' → logprob: -10.750733375549316
    4. '<|end|>' → logprob: -14.750733375549316
    5. '.' → logprob: -14.875733375549316
    6. ' >' → logprob: -15.250733375549316
    7. '  ' → logprob: -16.000732421875
    8. ' ' → logprob: -16.000732421875
    9. ' <
' → logprob: -16.000732421875
    10. ' <",' → logprob: -16.625732421875

Token 40: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.00018006093159783632
    2. 'other' → logprob: -8.6251802444458
    3. '(other' → logprob: -16.125179290771484
    4. ' ' → logprob: -16.250179290771484
    5. ' ' → logprob: -16.750179290771484
    6. ' o' → logprob: -16.875179290771484
    7. '.other' → logprob: -16.875179290771484
    8. ' oth' → logprob: -17.250179290771484
    9. ' self' → logprob: -18.250179290771484
    10. ' the' → logprob: -18.875179290771484

Token 41: '.number' (ID: 25737)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08909333497285843
    2. '.number' → logprob: -2.4640934467315674
    3. '.other' → logprob: -9.589093208312988
    4. ' .' → logprob: -10.089093208312988
    5. ''.' → logprob: -11.714093208312988
    6. '.
' → logprob: -11.964093208312988
    7. '.period' → logprob: -12.089093208312988
    8. '"."' → logprob: -12.214093208312988
    9. '.<' → logprob: -12.839093208312988
    10. '.

' → logprob: -13.214093208312988

Token 42: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.8230947256088257
    2. ' ' → logprob: -1.8230947256088257
    3. '
' → logprob: -1.8230947256088257
    4. '.' → logprob: -1.9480947256088257
    5. 'd' → logprob: -2.1980948448181152
    6. '#' → logprob: -2.6980948448181152
    7. ' 
' → logprob: -3.1980948448181152
    8. 'n' → logprob: -3.1980948448181152
    9. '<|end|>' → logprob: -3.6980948448181152
    10. 'a' → logprob: -3.8230948448181152

Token 44: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6512739062309265
    2. ' ' → logprob: -2.2762739658355713
    3. 'n' → logprob: -2.4012739658355713
    4. 'b' → logprob: -2.6512739658355713
    5. '
' → logprob: -2.7762739658355713
    6. '#' → logprob: -2.9012739658355713
    7. 'd' → logprob: -3.7762739658355713
    8. ' 
' → logprob: -4.401273727416992
    9. '    ' → logprob: -5.276273727416992
    10. '.' → logprob: -5.276273727416992

Token 45: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014217807911336422
    2. '__' → logprob: -4.264217853546143
    3. '_' → logprob: -10.764217376708984
    4. ' ' → logprob: -11.139217376708984
    5. ' ' → logprob: -11.514217376708984
    6. ' _' → logprob: -12.764217376708984
    7. ' def' → logprob: -12.764217376708984
    8. 'def' → logprob: -13.889217376708984
    9. ' ___' → logprob: -15.014217376708984
    10. ' ```' → logprob: -15.389217376708984

Token 46: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.020549828186631203
    2. 'gt' → logprob: -4.270549774169922
    3. 'repr' → logprob: -5.645549774169922
    4. 'le' → logprob: -6.020549774169922
    5. 'str' → logprob: -7.895549774169922
    6. 'add' → logprob: -11.145549774169922
    7. 'lt' → logprob: -12.145549774169922
    8. 'init' → logprob: -12.645549774169922
    9. 'hash' → logprob: -13.145549774169922
    10. 'e' → logprob: -13.395549774169922

Token 47: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2112172693014145
    2. '__(' → logprob: -1.7112172842025757
    3. '__('' → logprob: -5.086217403411865
    4. '__(
' → logprob: -6.211217403411865
    5. '__((' → logprob: -7.086217403411865
    6. '(' → logprob: -8.086216926574707
    7. '_' → logprob: -8.586216926574707
    8. '__("' → logprob: -9.711216926574707
    9. '___' → logprob: -9.836216926574707
    10. '__(*' → logprob: -10.086216926574707

Token 48: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9862216504407115e-05
    2. ')' → logprob: -10.875020027160645
    3. '
' → logprob: -15.125020027160645
    4. ' self' → logprob: -15.250020027160645
    5. '

' → logprob: -17.000019073486328
    6. 's' → logprob: -17.125019073486328
    7. '(self' → logprob: -17.250019073486328
    8. ' ' → logprob: -17.375019073486328
    9. '    
' → logprob: -17.625019073486328
    10. 'sel' → logprob: -17.750019073486328

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035720306914299726
    2. '):' → logprob: -6.3785719871521
    3. '__' → logprob: -7.1285719871521
    4. '(' → logprob: -8.378572463989258
    5. '<|end|>' → logprob: -8.378572463989258
    6. ' )' → logprob: -8.878572463989258
    7. 'self' → logprob: -9.753572463989258
    8. '__)' → logprob: -10.003572463989258
    9. ',' → logprob: -10.128572463989258
    10. '<|end|>' → logprob: -10.128572463989258

Token 50: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011275229975581169
    2. '(' → logprob: -5.011275291442871
    3. ' :' → logprob: -6.136275291442871
    4. '():' → logprob: -7.261275291442871
    5. '(self' → logprob: -7.636275291442871
    6. '):' → logprob: -7.761275291442871
    7. ':return' → logprob: -8.011275291442871
    8. '(
' → logprob: -9.136275291442871
    9. ':
' → logprob: -9.511275291442871
    10. 'self' → logprob: -10.136275291442871

Token 51: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.03367244079709053
    2. 'str' → logprob: -3.408672332763672
    3. ' ' → logprob: -11.283672332763672
    4. ''' → logprob: -11.783672332763672
    5. ' '' → logprob: -12.533672332763672
    6. ''s' → logprob: -14.158672332763672
    7. '	str' → logprob: -14.283672332763672
    8. '   ' → logprob: -15.158672332763672
    9. ' ' → logprob: -15.783672332763672
    10. 'stri' → logprob: -15.783672332763672

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03051621839404106
    2. '(' → logprob: -4.155516147613525
    3. '(self' → logprob: -4.905516147613525
    4. '       ' → logprob: -5.405516147613525
    5. ':
' → logprob: -6.655516147613525
    6. '(
' → logprob: -7.905516147613525
    7. '):' → logprob: -8.655516624450684
    8. ':return' → logprob: -8.780516624450684
    9. '():' → logprob: -8.905516624450684
    10. '   ' → logprob: -9.155516624450684

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005213716998696327
    2. ' f' → logprob: -5.755213737487793
    3. 'return' → logprob: -7.380213737487793
    4. 'f' → logprob: -7.505213737487793
    5. ' return' → logprob: -7.880213737487793
    6. ''' → logprob: -8.005213737487793
    7. '   ' → logprob: -9.755213737487793
    8. '"' → logprob: -11.255213737487793
    9. '      ' → logprob: -11.255213737487793
    10. ' ' → logprob: -11.505213737487793

Token 54: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06483206152915955
    2. 'return' (adapté à ' return') → logprob: -2.8148319721221924
    3. '       ' → logprob: -5.9398322105407715
    4. '   ' → logprob: -8.939831733703613
    5. ' f' → logprob: -10.314831733703613
    6. ' return' → logprob: -11.189831733703613
    7. ''f' → logprob: -11.314831733703613
    8. 're' → logprob: -11.439831733703613
    9. ''' → logprob: -11.564831733703613
    10. 'r' → logprob: -12.314831733703613

Token 55: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.10041607916355133
    2. 'f' → logprob: -2.3504161834716797
    3. ''' → logprob: -9.22541618347168
    4. ''f' → logprob: -9.35041618347168
    5. ' ' → logprob: -11.72541618347168
    6. ' ' → logprob: -12.10041618347168
    7. '"' → logprob: -12.60041618347168
    8. '	f' → logprob: -13.35041618347168
    9. ' F' → logprob: -13.35041618347168
    10. ' '' → logprob: -13.47541618347168

Token 56: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43478769063949585
    2. ''' → logprob: -1.0597877502441406
    3. '"B' → logprob: -5.309787750244141
    4. 'f' → logprob: -7.059787750244141
    5. ''s' → logprob: -9.80978775024414
    6. ''f' → logprob: -9.93478775024414
    7. '"<' → logprob: -10.18478775024414
    8. '"'' → logprob: -10.55978775024414
    9. ''<' → logprob: -10.55978775024414
    10. ''"' → logprob: -11.30978775024414

Token 57: 'Ball' (ID: 35006)
  Prédit: 'Ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ball' → logprob: -3.726595241460018e-05
    2. '<' → logprob: -11.25003719329834
    3. '"' → logprob: -11.37503719329834
    4. 'Balls' → logprob: -12.37503719329834
    5. ''' → logprob: -13.25003719329834
    6. ' Ball' → logprob: -13.75003719329834
    7. '<B' → logprob: -14.37503719329834
    8. 'BALL' → logprob: -14.62503719329834
    9. 'Bal' → logprob: -14.62503719329834
    10. 'B' → logprob: -14.62503719329834

Token 58: '({' (ID: 3972)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.24981780350208282
    2. '({' → logprob: -1.7498178482055664
    3. '(' → logprob: -3.1248178482055664
    4. '(number' → logprob: -5.749817848205566
    5. '(self' → logprob: -10.249817848205566
    6. '("{' → logprob: -11.124817848205566
    7. '('{' → logprob: -11.249817848205566
    8. '(n' → logprob: -11.499817848205566
    9. '(#' → logprob: -11.624817848205566
    10. '(num' → logprob: -11.749817848205566

Token 59: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7954958821064793e-05
    2. '{' → logprob: -11.000018119812012
    3. ' self' → logprob: -14.000018119812012
    4. 'sel' → logprob: -15.250018119812012
    5. ')' → logprob: -17.750017166137695
    6. ' ' → logprob: -18.375017166137695
    7. 's' → logprob: -18.625017166137695
    8. '$self' → logprob: -18.875017166137695
    9. 'se' → logprob: -19.000017166137695
    10. '[self' → logprob: -19.125017166137695

Token 60: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0031964892987161875
    2. '.' → logprob: -5.753196716308594
    3. '.num' → logprob: -11.503196716308594
    4. ' .' → logprob: -12.128196716308594
    5. '.n' → logprob: -13.503196716308594
    6. 'number' → logprob: -14.628196716308594
    7. ').' → logprob: -14.753196716308594
    8. '.numero' → logprob: -14.753196716308594
    9. '.code' → logprob: -15.878196716308594
    10. '.token' → logprob: -16.128196716308594

Token 61: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.412971168756485
    2. ')' → logprob: -1.1629711389541626
    3. ')"' → logprob: -3.787971258163452
    4. ')}' → logprob: -6.287971019744873
    5. '}")' → logprob: -7.662971019744873
    6. ')")' → logprob: -7.912971019744873
    7. '}' → logprob: -8.162971496582031
    8. '")' → logprob: -10.287971496582031
    9. '}"' → logprob: -10.537971496582031
    10. ')">' → logprob: -10.787971496582031

Token 62: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.051461994647979736
    2. '<|end|>' → logprob: -3.801461935043335
    3. '```' → logprob: -4.176462173461914
    4. '\n' → logprob: -5.426462173461914
    5. ')' → logprob: -5.801462173461914
    6. '
' → logprob: -6.426462173461914
    7. '"""' → logprob: -7.051462173461914
    8. '"
' → logprob: -7.551462173461914
    9. '`' → logprob: -7.676462173461914
    10. '")' → logprob: -8.051462173461914

Token 63: 'class' (ID: 1444)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038015902042388916
    2. 'd' → logprob: -4.663015842437744
    3. '#' → logprob: -5.038015842437744
    4. '[' → logprob: -5.038015842437744
    5. 'class' → logprob: -5.413015842437744
    6. 'def' → logprob: -5.913015842437744
    7. 'n' → logprob: -6.288015842437744
    8. 'a' → logprob: -6.288015842437744
    9. 'c' → logprob: -6.788015842437744
    10. '```' → logprob: -7.163015842437744

Token 64: ' Tube' (ID: 55385)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4787474274635315
    2. ' Box' → logprob: -2.2287473678588867
    3. ' Container' → logprob: -2.2287473678588867
    4. ' Player' → logprob: -2.6037473678588867
    5. ' Dice' → logprob: -4.478747367858887
    6. ' ' → logprob: -4.603747367858887
    7. ' Bingo' → logprob: -4.853747367858887
    8. ' Play' → logprob: -5.103747367858887
    9. ' Ball' → logprob: -5.103747367858887
    10. ' Toy' → logprob: -5.228747367858887

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013798571308143437
    2. '(' → logprob: -10.125138282775879
    3. ' :' → logprob: -10.250138282775879
    4. '):' → logprob: -10.375138282775879
    5. '():' → logprob: -11.250138282775879
    6. ':**' → logprob: -12.125138282775879
    7. '<|end|>' → logprob: -12.125138282775879
    8. ':
' → logprob: -13.250138282775879
    9. '>:' → logprob: -13.500138282775879
    10. '```' → logprob: -13.750138282775879

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09719893336296082
    2. ':' → logprob: -2.597198963165283
    3. '(' → logprob: -4.597198963165283
    4. ' def' → logprob: -5.347198963165283
    5. 'def' → logprob: -6.597198963165283
    6. '<|end|>' → logprob: -7.097198963165283
    7. ':
' → logprob: -7.972198963165283
    8. '    ' → logprob: -9.222198486328125
    9. '  ' → logprob: -9.347198486328125
    10. '[' → logprob: -9.722198486328125

Token 67: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7624139785766602
    2. '   ' → logprob: -1.2624139785766602
    3. 'def' (adapté à ' def') → logprob: -1.3874139785766602
    4. '    ' → logprob: -7.51241397857666
    5. '    
' → logprob: -9.51241397857666
    6. ' ' → logprob: -10.51241397857666
    7. '	def' → logprob: -10.51241397857666
    8. ' 
' → logprob: -10.63741397857666
    9. ' (' → logprob: -11.51241397857666
    10. 'de' → logprob: -11.76241397857666

Token 68: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0010126839624717832
    2. ' ' → logprob: -7.376012802124023
    3. ' _' → logprob: -9.001012802124023
    4. '__' → logprob: -9.001012802124023
    5. ' init' → logprob: -9.251012802124023
    6. '_init' → logprob: -10.626012802124023
    7. ' ___' → logprob: -12.251012802124023
    8. '_' → logprob: -12.501012802124023
    9. '  ' → logprob: -12.626012802124023
    10. ' ' → logprob: -13.001012802124023

Token 69: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0002108118060277775
    2. 'i' → logprob: -8.625210762023926
    3. 'in' → logprob: -10.500210762023926
    4. 'ini' → logprob: -12.875210762023926
    5. 'def' → logprob: -15.125210762023926
    6. '_init' → logprob: -15.250210762023926
    7. '_i' → logprob: -15.750210762023926
    8. '```' → logprob: -16.000211715698242
    9. 'int' → logprob: -16.250211715698242
    10. '__' → logprob: -16.875211715698242

Token 70: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02157830446958542
    2. '(' → logprob: -4.646578311920166
    3. '__' → logprob: -5.271578311920166
    4. ' (' → logprob: -5.896578311920166
    5. '__(
' → logprob: -6.021578311920166
    6. '(self' → logprob: -6.771578311920166
    7. '__((' → logprob: -8.771577835083008
    8. '_' → logprob: -9.896577835083008
    9. '_(' → logprob: -10.646577835083008
    10. ' ' → logprob: -11.396577835083008

Token 71: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014704519708175212
    2. ' self' → logprob: -9.000146865844727
    3. ')' → logprob: -10.750146865844727
    4. '       ' → logprob: -14.375146865844727
    5. '   ' → logprob: -15.000146865844727
    6. '0' → logprob: -15.000146865844727
    7. '):
' → logprob: -15.500146865844727
    8. 'elf' → logprob: -15.750146865844727
    9. '
' → logprob: -16.250146865844727
    10. '```' → logprob: -16.500146865844727

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006301430985331535
    2. ' ,' → logprob: -5.506301403045654
    3. 'self' → logprob: -6.256301403045654
    4. ')' → logprob: -9.256301879882812
    5. '):' → logprob: -9.631301879882812
    6. '(self' → logprob: -10.256301879882812
    7. ' self' → logprob: -10.256301879882812
    8. '   ' → logprob: -10.756301879882812
    9. ',self' → logprob: -11.131301879882812
    10. ' ' → logprob: -11.506301879882812

Token 73: ' name' (ID: 1308)
  Prédit: ' balls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' balls' → logprob: -1.2783437967300415
    2. ' capacity' → logprob: -1.5283437967300415
    3. ' self' → logprob: -1.9033437967300415
    4. 'self' → logprob: -1.9033437967300415
    5. 'balls' → logprob: -2.778343677520752
    6. 'capacity' → logprob: -2.903343677520752
    7. ')' → logprob: -3.153343677520752
    8. ' contents' → logprob: -3.403343677520752
    9. 'contents' → logprob: -5.028343677520752
    10. ' )' → logprob: -6.403343677520752

Token 74: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11252493411302567
    2. ':' → logprob: -2.36252498626709
    3. '):' → logprob: -4.48752498626709
    4. ')' → logprob: -7.61252498626709
    5. ' ,' → logprob: -8.11252498626709
    6. '=' → logprob: -9.48752498626709
    7. '   ' → logprob: -10.11252498626709
    8. ' ' → logprob: -11.11252498626709
    9. ' :' → logprob: -11.36252498626709
    10. ' ):' → logprob: -11.36252498626709

Token 75: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.34884536266326904
    2. 'str' → logprob: -1.223845362663269
    3. ')' → logprob: -8.098845481872559
    4. ' ' → logprob: -10.098845481872559
    5. '[str' → logprob: -11.223845481872559
    6. 'int' → logprob: -11.473845481872559
    7. ' )' → logprob: -11.973845481872559
    8. '   ' → logprob: -12.223845481872559
    9. ':str' → logprob: -12.348845481872559
    10. 's' → logprob: -13.098845481872559

Token 76: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011338404379785061
    2. '):' → logprob: -4.511338233947754
    3. ')' → logprob: -8.761338233947754
    4. ' ,' → logprob: -9.636338233947754
    5. ':' → logprob: -10.011338233947754
    6. '   ' → logprob: -11.136338233947754
    7. '       ' → logprob: -12.886338233947754
    8. ' ):' → logprob: -12.886338233947754
    9. ' ' → logprob: -13.511338233947754
    10. '  ' → logprob: -15.136338233947754

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002479700604453683
    2. 'self' → logprob: -6.127479553222656
    3. ' self' → logprob: -9.127479553222656
    4. '   ' → logprob: -10.252479553222656
    5. ' ' → logprob: -10.502479553222656
    6. ',' → logprob: -10.752479553222656
    7. '      ' → logprob: -10.877479553222656
    8. ')' → logprob: -11.127479553222656
    9. '        ' → logprob: -11.377479553222656
    10. '     ' → logprob: -11.502479553222656

Token 78: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14584589004516602
    2. ' self' → logprob: -2.020845890045166
    3. '       ' → logprob: -5.770845890045166
    4. ' ' → logprob: -11.020845413208008
    5. ' ' → logprob: -11.020845413208008
    6. '        ' → logprob: -12.395845413208008
    7. 'super' → logprob: -13.020845413208008
    8. 's' → logprob: -13.020845413208008
    9. '   ' → logprob: -13.145845413208008
    10. '	self' → logprob: -13.270845413208008

Token 79: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.47504404187202454
    2. '.' → logprob: -0.9750440120697021
    3. ' .' → logprob: -7.725044250488281
    4. '.t' → logprob: -8.725044250488281
    5. '.names' → logprob: -9.725044250488281
    6. '.user' → logprob: -9.725044250488281
    7. '.n' → logprob: -9.975044250488281
    8. 'name' → logprob: -10.100044250488281
    9. '.current' → logprob: -10.975044250488281
    10. '.b' → logprob: -11.725044250488281

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04313632473349571
    2. '=' → logprob: -3.1681363582611084
    3. ' ' → logprob: -9.043136596679688
    4. ')' → logprob: -11.793136596679688
    5. ':' → logprob: -12.543136596679688
    6. '<|end|>' → logprob: -13.168136596679688
    7. ' =)' → logprob: -14.168136596679688
    8. '   ' → logprob: -14.418136596679688
    9. '  ' → logprob: -14.543136596679688
    10. '    ' → logprob: -14.543136596679688

Token 81: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.1270175725221634
    2. 'name' → logprob: -2.1270174980163574
    3. ' ' → logprob: -9.627017974853516
    4. ' ' → logprob: -12.127017974853516
    5. '"' → logprob: -12.252017974853516
    6. '	name' → logprob: -12.377017974853516
    7. '"name' → logprob: -12.502017974853516
    8. ' "' → logprob: -13.252017974853516
    9. ''name' → logprob: -14.127017974853516
    10. ' '' → logprob: -14.252017974853516

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003340736962854862
    2. '
' → logprob: -6.003340721130371
    3. '<|end|>' → logprob: -7.628340721130371
    4. 'self' → logprob: -8.253340721130371
    5. ',' → logprob: -10.628340721130371
    6. '```' → logprob: -11.003340721130371
    7. ' self' → logprob: -11.253340721130371
    8. '        
' → logprob: -11.378340721130371
    9. '   ' → logprob: -11.503340721130371
    10. '  
' → logprob: -12.003340721130371

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03524189069867134
    2. 'self' → logprob: -3.4102418422698975
    3. ' self' → logprob: -6.785242080688477
    4. '```' → logprob: -8.910242080688477
    5. '   ' → logprob: -9.535242080688477
    6. '
' → logprob: -10.035242080688477
    7. ',' → logprob: -10.285242080688477
    8. ' ' → logprob: -10.410242080688477
    9. '<|end|>' → logprob: -10.535242080688477
    10. '        
' → logprob: -11.535242080688477

Token 84: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022157974541187286
    2. ' self' → logprob: -4.147158145904541
    3. '       ' → logprob: -5.272158145904541
    4. '[]' → logprob: -7.022158145904541
    5. '[]
' → logprob: -10.647157669067383
    6. '   ' → logprob: -11.272157669067383
    7. ' []' → logprob: -11.397157669067383
    8. ' ' → logprob: -12.147157669067383
    9. '[]

' → logprob: -12.897157669067383
    10. '	self' → logprob: -13.022157669067383

Token 85: '.stack' (ID: 45133)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.46606579422950745
    2. ' .' → logprob: -1.466065764427185
    3. '.' → logprob: -2.0910658836364746
    4. '.contents' → logprob: -4.216065883636475
    5. '.ball' → logprob: -7.091065883636475
    6. '.stack' → logprob: -7.591065883636475
    7. '.items' → logprob: -7.716065883636475
    8. '._' → logprob: -8.091065406799316
    9. '.s' → logprob: -8.341065406799316
    10. '_b' → logprob: -8.966065406799316

Token 86: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038787275552749634
    2. '=' → logprob: -3.288787364959717
    3. '=[]' → logprob: -7.288787364959717
    4. ':' → logprob: -10.288786888122559
    5. '[:]' → logprob: -11.413786888122559
    6. '[]' → logprob: -12.163786888122559
    7. ' ' → logprob: -12.538786888122559
    8. ' []' → logprob: -12.913786888122559
    9. ')' → logprob: -14.038786888122559
    10. '<|end|>' → logprob: -14.038786888122559

Token 87: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5888978838920593
    2. 'list' → logprob: -0.8388978838920593
    3. ' []' → logprob: -4.588897705078125
    4. '[]' → logprob: -5.963897705078125
    5. 'List' → logprob: -9.213897705078125
    6. '   ' → logprob: -11.213897705078125
    7. ' ' → logprob: -11.338897705078125
    8. '[list' → logprob: -12.088897705078125
    9. ' List' → logprob: -12.463897705078125
    10. '	list' → logprob: -13.088897705078125

Token 88: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11255285143852234
    2. '[int' → logprob: -2.4875528812408447
    3. '[B' → logprob: -3.9875528812408447
    4. ' =' → logprob: -6.612552642822266
    5. '<|end|>' → logprob: -6.862552642822266
    6. '=[]' → logprob: -7.112552642822266
    7. '=' → logprob: -7.237552642822266
    8. '[]' → logprob: -7.737552642822266
    9. '[
' → logprob: -8.987552642822266
    10. '[str' → logprob: -9.487552642822266

Token 89: 'Ball' (ID: 35006)
  Prédit: 'Ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ball' → logprob: -0.0007101670489646494
    2. ' Ball' → logprob: -7.2507100105285645
    3. 'int' → logprob: -17.000709533691406
    4. 'B' → logprob: -17.375709533691406
    5. ']' → logprob: -17.625709533691406
    6. ' ' → logprob: -17.875709533691406
    7. 'Balls' → logprob: -17.875709533691406
    8. '   ' → logprob: -18.500709533691406
    9. '_ball' → logprob: -18.625709533691406
    10. '  ' → logprob: -18.750709533691406

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1472419600977446e-06
    2. ']=' → logprob: -14.250000953674316
    3. ' ]' → logprob: -15.500000953674316
    4. '[' → logprob: -15.625000953674316
    5. ')' → logprob: -16.875001907348633
    6. ']
' → logprob: -16.875001907348633
    7. ')]' → logprob: -18.000001907348633
    8. '`]' → logprob: -18.125001907348633
    9. '])' → logprob: -18.500001907348633
    10. '']' → logprob: -18.625001907348633

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006866451818495989
    2. '=' → logprob: -5.006866455078125
    3. ' ' → logprob: -9.381866455078125
    4. '=[]' → logprob: -10.006866455078125
    5. '<|end|>' → logprob: -11.256866455078125
    6. '[' → logprob: -12.756866455078125
    7. '  ' → logprob: -13.256866455078125
    8. ' =[' → logprob: -13.756866455078125
    9. ']' → logprob: -14.131866455078125
    10. ')' → logprob: -14.381866455078125

Token 92: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06199704483151436
    2. ' []' → logprob: -2.8119969367980957
    3. '[]
' → logprob: -11.561997413635254
    4. ' ' → logprob: -11.686997413635254
    5. '[]}' → logprob: -12.311997413635254
    6. '[]>' → logprob: -12.811997413635254
    7. '[' → logprob: -13.936997413635254
    8. '   ' → logprob: -14.311997413635254
    9. '[]"' → logprob: -14.686997413635254
    10. ' []
' → logprob: -14.811997413635254

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027246540412306786
    2. '
' → logprob: -4.902246475219727
    3. '<|end|>' → logprob: -4.902246475219727
    4. '    
' → logprob: -5.027246475219727
    5. 'def' → logprob: -6.027246475219727
    6. ' def' → logprob: -6.902246475219727
    7. '<|end|>' → logprob: -7.277246475219727
    8. ' ' → logprob: -7.902246475219727
    9. ' 
' → logprob: -8.152246475219727
    10. '       ' → logprob: -8.777246475219727

Token 94: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00911356694996357
    2. '   ' → logprob: -5.134113788604736
    3. ' def' → logprob: -5.759113788604736
    4. ' ' → logprob: -11.134113311767578
    5. '    
' → logprob: -12.384113311767578
    6. 'd' → logprob: -12.884113311767578
    7. '	def' → logprob: -13.759113311767578
    8. 'de' → logprob: -13.884113311767578
    9. '
' → logprob: -14.384113311767578
    10. ' 
' → logprob: -14.509113311767578

Token 95: ' can' (ID: 665)
  Prédit: ' push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.002191660227254033
    2. 'push' → logprob: -6.627191543579102
    3. ' is' → logprob: -8.127191543579102
    4. ' add' → logprob: -8.252191543579102
    5. '_push' → logprob: -9.252191543579102
    6. ' def' → logprob: -9.502191543579102
    7. ' ' → logprob: -10.002191543579102
    8. '	push' → logprob: -10.877191543579102
    9. ' empty' → logprob: -11.127191543579102
    10. ' pus' → logprob: -11.252191543579102

Token 96: '_place' (ID: 81501)
  Prédit: '_push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_push' → logprob: -0.2650214433670044
    2. '_add' → logprob: -1.5150214433670044
    3. '_' → logprob: -5.015021324157715
    4. '_put' → logprob: -6.640021324157715
    5. '_p' → logprob: -6.890021324157715
    6. '_append' → logprob: -6.890021324157715
    7. '_pop' → logprob: -7.390021324157715
    8. '_insert' → logprob: -7.515021324157715
    9. '_enqueue' → logprob: -8.015021324157715
    10. '_fill' → logprob: -8.265021324157715

Token 97: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00766222458332777
    2. '(' → logprob: -4.882662296295166
    3. '(
' → logprob: -11.007661819458008
    4. '_ball' → logprob: -11.382661819458008
    5. 'self' → logprob: -11.757661819458008
    6. ' (' → logprob: -12.007661819458008
    7. '(s' → logprob: -12.632661819458008
    8. '_' → logprob: -12.882661819458008
    9. '(ball' → logprob: -13.507661819458008
    10. ' self' → logprob: -13.757661819458008

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014491249807178974
    2. ' ,' → logprob: -4.514491081237793
    3. ')' → logprob: -6.514491081237793
    4. 'self' → logprob: -6.639491081237793
    5. '(self' → logprob: -7.639491081237793
    6. ' )' → logprob: -9.764491081237793
    7. ' self' → logprob: -10.264491081237793
    8. ',self' → logprob: -10.514491081237793
    9. ' ' → logprob: -10.764491081237793
    10. '_ball' → logprob: -12.389491081237793

Token 99: ' ball' (ID: 7880)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7953691482543945
    2. 'ball' → logprob: -1.5453691482543945
    3. ' self' → logprob: -1.6703691482543945
    4. ' ball' → logprob: -1.9203691482543945
    5. '   ' → logprob: -7.9203691482543945
    6. '_ball' → logprob: -9.420369148254395
    7. ')' → logprob: -9.545369148254395
    8. '	self' → logprob: -11.295369148254395
    9. '       ' → logprob: -11.545369148254395
    10. '.ball' → logprob: -11.545369148254395

Token 100: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.341087570646778e-05
    2. ')' → logprob: -9.750093460083008
    3. ' :' → logprob: -10.625093460083008
    4. '):' → logprob: -11.750093460083008
    5. ' )' → logprob: -14.125093460083008
    6. ',' → logprob: -14.375093460083008
    7. '   ' → logprob: -14.500093460083008
    8. ' ' → logprob: -14.875093460083008
    9. 'self' → logprob: -15.375093460083008
    10. ' ):' → logprob: -15.750093460083008

Token 101: ' Ball' (ID: 17943)
  Prédit: ' Ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ball' → logprob: -0.052450016140937805
    2. 'Ball' → logprob: -3.052449941635132
    3. ' )' → logprob: -6.427450180053711
    4. ' ' → logprob: -6.552450180053711
    5. ')' → logprob: -7.552450180053711
    6. ' ball' → logprob: -8.677450180053711
    7. ' '' → logprob: -9.927450180053711
    8. '  ' → logprob: -10.552450180053711
    9. ' ' → logprob: -11.052450180053711
    10. '_ball' → logprob: -12.052450180053711

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. ' )' → logprob: -11.12502384185791
    3. '):' → logprob: -12.12502384185791
    4. ')->' → logprob: -12.75002384185791
    5. '`)' → logprob: -15.12502384185791
    6. '   ' → logprob: -15.87502384185791
    7. '')' → logprob: -16.250022888183594
    8. '):
' → logprob: -17.500022888183594
    9. ')
' → logprob: -18.125022888183594
    10. ':' → logprob: -18.500022888183594

Token 103: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007998737506568432
    2. '->' → logprob: -5.132998943328857
    3. ' ->' → logprob: -6.632998943328857
    4. ':' → logprob: -7.632998943328857
    5. ')->' → logprob: -8.2579984664917
    6. '):' → logprob: -12.7579984664917
    7. '   ' → logprob: -12.8829984664917
    8. '>' → logprob: -14.1329984664917
    9. ' )' → logprob: -14.1329984664917
    10. '       ' → logprob: -15.2579984664917

Token 104: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.5766594409942627
    2. 'bool' → logprob: -0.8266594409942627
    3. 'True' → logprob: -8.201659202575684
    4. ')' → logprob: -9.076659202575684
    5. ' True' → logprob: -9.076659202575684
    6. 'None' → logprob: -9.576659202575684
    7. '   ' → logprob: -10.201659202575684
    8. '(bool' → logprob: -10.701659202575684
    9. 'return' → logprob: -10.826659202575684
    10. ' None' → logprob: -11.201659202575684

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038527094875462353
    2. ':
' → logprob: -8.125385284423828
    3. '):' → logprob: -10.250385284423828
    4. '<|end|>' → logprob: -10.375385284423828
    5. '       ' → logprob: -11.500385284423828
    6. ')' → logprob: -12.625385284423828
    7. '   ' → logprob: -13.125385284423828
    8. ':return' → logprob: -13.500385284423828
    9. ',' → logprob: -13.625385284423828
    10. '):
' → logprob: -13.625385284423828

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038896226324141026
    2. ' if' → logprob: -6.253889560699463
    3. ' return' → logprob: -6.378889560699463
    4. 'return' → logprob: -9.003890037536621
    5. 'if' → logprob: -10.128890037536621
    6. '        
' → logprob: -10.878890037536621
    7. '        ' → logprob: -11.128890037536621
    8. '   ' → logprob: -11.628890037536621
    9. ' 
' → logprob: -11.878890037536621
    10. '
' → logprob: -11.878890037536621

Token 107: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2873672544956207
    2. ' if' → logprob: -2.037367343902588
    3. 'return' → logprob: -2.287367343902588
    4. '       ' → logprob: -4.662367343902588
    5. ' return' → logprob: -4.787367343902588
    6. '#' (adapté à ' #') → logprob: -9.91236686706543
    7. 'not' → logprob: -10.78736686706543
    8. ' not' → logprob: -13.28736686706543
    9. 'len' → logprob: -13.28736686706543
    10. '   ' → logprob: -13.41236686706543

Token 108: ' A' (ID: 355)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6367859244346619
    2. ' not' → logprob: -1.6367859840393066
    3. ' return' → logprob: -1.7617859840393066
    4. 'if' → logprob: -3.2617859840393066
    5. 'return' → logprob: -3.2617859840393066
    6. 'not' → logprob: -3.6367859840393066
    7. ' len' → logprob: -7.136785984039307
    8. 'If' → logprob: -8.636785507202148
    9. '       ' → logprob: -9.011785507202148
    10. 'True' → logprob: -9.011785507202148

Token 109: ' ball' (ID: 7880)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.29458382725715637
    2. ' return' → logprob: -3.294583797454834
    3. 'ball' → logprob: -3.294583797454834
    4. 'ss' → logprob: -3.419583797454834
    5. ' not' → logprob: -3.669583797454834
    6. 't' → logprob: -4.044583797454834
    7. 'll' → logprob: -4.294583797454834
    8. ' if' → logprob: -4.294583797454834
    9. ' ny' → logprob: -4.669583797454834
    10. ' ball' → logprob: -4.794583797454834

Token 110: ' can' (ID: 665)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9520544409751892
    2. ' can' → logprob: -1.327054500579834
    3. ' is' → logprob: -1.827054500579834
    4. 's' → logprob: -2.077054500579834
    5. 'if' → logprob: -4.577054500579834
    6. ' must' → logprob: -4.577054500579834
    7. ' has' → logprob: -5.077054500579834
    8. '   ' → logprob: -5.702054500579834
    9. ' that' → logprob: -5.827054500579834
    10. 'def' → logprob: -5.827054500579834

Token 111: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.030415616929531097
    2. ' not' → logprob: -3.9054155349731445
    3. ' only' → logprob: -5.5304155349731445
    4. 'not' → logprob: -5.7804155349731445
    5. ' if' → logprob: -6.2804155349731445
    6. 'be' → logprob: -7.7804155349731445
    7. '   ' → logprob: -9.030415534973145
    8. ' always' → logprob: -9.655415534973145
    9. 'if' → logprob: -9.780415534973145
    10. 'only' → logprob: -10.155415534973145

Token 112: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.160579115152359
    2. 'placed' → logprob: -1.9105790853500366
    3. ' self' → logprob: -9.035578727722168
    4. 'self' → logprob: -9.910578727722168
    5. 'len' → logprob: -9.910578727722168
    6. '   ' → logprob: -10.035578727722168
    7. ' not' → logprob: -10.785578727722168
    8. 'not' → logprob: -11.160578727722168
    9. '[]' → logprob: -11.410578727722168
    10. '    ' → logprob: -11.785578727722168

Token 113: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0011222377652302384
    2. '       ' → logprob: -7.25112247467041
    3. ' on' → logprob: -8.50112247467041
    4. 'if' → logprob: -9.37612247467041
    5. ' only' → logprob: -9.62612247467041
    6. '   ' → logprob: -10.75112247467041
    7. ' in' → logprob: -11.00112247467041
    8. '           ' → logprob: -12.37612247467041
    9. '    ' → logprob: -12.75112247467041
    10. ' ' → logprob: -13.00112247467041

Token 114: ' the' (ID: 290)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4887789785861969
    2. ' not' → logprob: -0.9887789487838745
    3. 'len' → logprob: -4.738779067993164
    4. ' len' → logprob: -5.738779067993164
    5. '(len' → logprob: -6.738779067993164
    6. '(not' → logprob: -6.988779067993164
    7. 'self' → logprob: -7.863779067993164
    8. ' self' → logprob: -9.613779067993164
    9. '       ' → logprob: -10.488779067993164
    10. '   ' → logprob: -11.238779067993164

Token 115: ' stack' (ID: 10825)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8572643995285034
    2. 'len' → logprob: -0.9822643995285034
    3. 'not' → logprob: -1.8572643995285034
    4. ' len' → logprob: -3.482264518737793
    5. ' stack' → logprob: -4.982264518737793
    6. 'stack' → logprob: -5.107264518737793
    7. 'length' → logprob: -8.232264518737793
    8. '(len' → logprob: -8.232264518737793
    9. ' length' → logprob: -8.982264518737793
    10. ')' → logprob: -9.232264518737793

Token 116: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4970131814479828
    2. ' and' → logprob: -1.2470132112503052
    3. 'and' → logprob: -2.3720130920410156
    4. 'is' → logprob: -5.247013092041016
    5. '==' → logprob: -5.997013092041016
    6. '   ' → logprob: -7.122013092041016
    7. 'empty' → logprob: -7.372013092041016
    8. 'isempty' → logprob: -7.872013092041016
    9. '<|end|>' → logprob: -8.122013092041016
    10. '.is' → logprob: -8.872013092041016

Token 117: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.4742250144481659
    2. 'empty' → logprob: -0.9742250442504883
    3. '_empty' → logprob: -9.349225044250488
    4. 'Empty' → logprob: -10.474225044250488
    5. ' []' → logprob: -12.099225044250488
    6. ' either' → logprob: -12.099225044250488
    7. '[]' → logprob: -12.099225044250488
    8. '   ' → logprob: -12.349225044250488
    9. ' not' → logprob: -12.599225044250488
    10. '.empty' → logprob: -13.099225044250488

Token 118: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0003391574718989432
    2. 'or' → logprob: -8.75033950805664
    3. '       ' → logprob: -9.12533950805664
    4. '()' → logprob: -10.62533950805664
    5. '    ' → logprob: -11.12533950805664
    6. '   ' → logprob: -11.37533950805664
    7. ')' → logprob: -12.12533950805664
    8. '        ' → logprob: -12.37533950805664
    9. ',' → logprob: -12.50033950805664
    10. ' ' → logprob: -12.87533950805664

Token 119: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3168494701385498
    2. 'self' → logprob: -1.3168494701385498
    3. ' the' → logprob: -6.441849708557129
    4. '(self' → logprob: -7.191849708557129
    5. ' ball' → logprob: -7.441849708557129
    6. ' (' → logprob: -8.191849708557129
    7. 'ball' → logprob: -9.191849708557129
    8. 'the' → logprob: -9.441849708557129
    9. ' all' → logprob: -9.691849708557129
    10. '       ' → logprob: -10.316849708557129

Token 120: ' top' (ID: 2344)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6075452566146851
    2. ' stack' → logprob: -1.107545256614685
    3. 'self' → logprob: -2.8575453758239746
    4. ' self' → logprob: -3.6075453758239746
    5. ' last' → logprob: -4.357545375823975
    6. ' ball' → logprob: -4.357545375823975
    7. 'ball' → logprob: -5.357545375823975
    8. '.stack' → logprob: -5.857545375823975
    9. 'last' → logprob: -5.982545375823975
    10. '   ' → logprob: -6.357545375823975

Token 121: ' ball' (ID: 7880)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8680746555328369
    2. ' and' → logprob: -1.368074655532837
    3. ' ' → logprob: -1.618074655532837
    4. ' of' → logprob: -3.243074655532837
    5. 'and' → logprob: -3.743074655532837
    6. '    ' → logprob: -3.868074655532837
    7. '   ' → logprob: -5.118074417114258
    8. ' is' → logprob: -5.243074417114258
    9. '().' → logprob: -5.618074417114258
    10. '()==' → logprob: -5.868074417114258

Token 122: ' number' (ID: 2086)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4634658098220825
    2. ' is' → logprob: -1.9634658098220825
    3. ' has' → logprob: -2.088465690612793
    4. ' .' → logprob: -2.838465690612793
    5. '().' → logprob: -4.213465690612793
    6. ' and' → logprob: -4.338465690612793
    7. '.is' → logprob: -5.338465690612793
    8. '.has' → logprob: -5.588465690612793
    9. '.number' → logprob: -5.588465690612793
    10. 'and' → logprob: -6.338465690612793

Token 123: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01631552167236805
    2. ' >=' → logprob: -4.641315460205078
    3. '>=' → logprob: -5.891315460205078
    4. '>' → logprob: -6.391315460205078
    5. 'is' → logprob: -6.766315460205078
    6. ' <=' → logprob: -8.141315460205078
    7. ' >' → logprob: -8.391315460205078
    8. ' ' → logprob: -8.516315460205078
    9. '<=' → logprob: -9.141315460205078
    10. '==' → logprob: -10.391315460205078

Token 124: ' greater' (ID: 10740)
  Prédit: ' greater'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' greater' → logprob: -0.960980236530304
    2. 'greater' → logprob: -1.2109801769256592
    3. '>=' → logprob: -1.5859801769256592
    4. ' >=' → logprob: -2.585980176925659
    5. 'ball' → logprob: -4.210980415344238
    6. ' ball' → logprob: -4.335980415344238
    7. '   ' → logprob: -5.710980415344238
    8. '>' → logprob: -6.460980415344238
    9. ' ' → logprob: -7.085980415344238
    10. ' less' → logprob: -7.085980415344238

Token 125: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.18691043555736542
    2. ' or' → logprob: -1.9369103908538818
    3. 'than' → logprob: -4.061910629272461
    4. '=' → logprob: -5.686910629272461
    5. 'or' → logprob: -5.811910629272461
    6. '   ' → logprob: -6.811910629272461
    7. ' ' → logprob: -7.811910629272461
    8. '_than' → logprob: -8.061910629272461
    9. '    ' → logprob: -8.561910629272461
    10. ',' → logprob: -8.936910629272461

Token 126: ' the' (ID: 290)
  Prédit: ' ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.22755350172519684
    2. 'ball' → logprob: -1.6025534868240356
    3. ' the' → logprob: -6.227553367614746
    4. 'the' → logprob: -9.602553367614746
    5. '(ball' → logprob: -10.227553367614746
    6. ' ' → logprob: -11.352553367614746
    7. '.ball' → logprob: -11.352553367614746
    8. '_ball' → logprob: -11.727553367614746
    9. ' ' → logprob: -12.352553367614746
    10. '
' → logprob: -12.602553367614746

Token 127: ' new' (ID: 620)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.4289379417896271
    2. ' ball' → logprob: -1.0539379119873047
    3. '(ball' → logprob: -9.178937911987305
    4. '.ball' → logprob: -9.678937911987305
    5. ' ' → logprob: -10.178937911987305
    6. '_ball' → logprob: -10.678937911987305
    7. ' ' → logprob: -13.803937911987305
    8. ')' → logprob: -13.928937911987305
    9. 'b' → logprob: -14.053937911987305
    10. '-ball' → logprob: -14.178937911987305

Token 128: ' ball' (ID: 7880)
  Prédit: ' ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.4382922649383545
    2. ' ' → logprob: -1.4382922649383545
    3. 'ball' → logprob: -2.5632922649383545
    4. '_ball' → logprob: -4.188292503356934
    5. '.ball' → logprob: -4.563292503356934
    6. '(ball' → logprob: -4.563292503356934
    7. '<|end|>' → logprob: -6.563292503356934
    8. '1' → logprob: -7.313292503356934
    9. '_' → logprob: -7.813292503356934
    10. '.' → logprob: -7.938292503356934

Token 129: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2899464964866638
    2. '.number' → logprob: -1.4149465560913086
    3. ''s' → logprob: -5.914946556091309
    4. '   ' → logprob: -6.039946556091309
    5. ' number' → logprob: -6.539946556091309
    6. 'number' → logprob: -7.039946556091309
    7. ')' → logprob: -7.664946556091309
    8. ' .' → logprob: -7.914946556091309
    9. ' ' → logprob: -9.039946556091309
    10. ' or' → logprob: -9.414946556091309

Token 130: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4506676197052002
    2. '   ' → logprob: -2.0756676197052
    3. '       ' → logprob: -2.0756676197052
    4. ' or' → logprob: -2.5756676197052
    5. '    ' → logprob: -4.325667381286621
    6. ':' → logprob: -4.950667381286621
    7. ' ' → logprob: -5.200667381286621
    8. ',' → logprob: -6.075667381286621
    9. '  ' → logprob: -6.825667381286621
    10. 'and' → logprob: -6.825667381286621

Token 131: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12760008871555328
    2. 'if' (adapté à ' if') → logprob: -2.3776001930236816
    3. '       ' → logprob: -3.8776001930236816
    4. 'return' → logprob: -5.377600193023682
    5. ' return' → logprob: -6.502600193023682
    6. '   ' → logprob: -8.627599716186523
    7. ' or' → logprob: -12.502599716186523
    8. '        
' → logprob: -12.627599716186523
    9. '	if' → logprob: -12.752599716186523
    10. '    ' → logprob: -13.127599716186523

Token 132: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016860593110322952
    2. 'not' → logprob: -4.141860485076904
    3. ' len' → logprob: -7.141860485076904
    4. ' self' → logprob: -10.891860961914062
    5. 'len' → logprob: -11.891860961914062
    6. '   ' → logprob: -12.516860961914062
    7. 'self' → logprob: -13.016860961914062
    8. ' ' → logprob: -13.266860961914062
    9. '	not' → logprob: -13.891860961914062
    10. ' ' → logprob: -14.641860961914062

Token 133: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1797523945569992
    2. 'self' → logprob: -1.8047523498535156
    3. ' ' → logprob: -12.804752349853516
    4. '	self' → logprob: -13.679752349853516
    5. '   ' → logprob: -13.679752349853516
    6. ' ' → logprob: -13.804752349853516
    7. '(self' → logprob: -15.179752349853516
    8. '_self' → logprob: -15.679752349853516
    9. '
' → logprob: -15.867252349853516
    10. '  ' → logprob: -15.867252349853516

Token 134: '.stack' (ID: 45133)
  Prédit: '.stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -0.00599717115983367
    2. '.' → logprob: -5.130997180938721
    3. ' .' → logprob: -9.630996704101562
    4. 'stack' → logprob: -13.630996704101562
    5. '.s' → logprob: -15.005996704101562
    6. '.chain' → logprob: -15.755996704101562
    7. ').' → logprob: -15.880996704101562
    8. '   ' → logprob: -16.005996704101562
    9. '.space' → logprob: -16.005996704101562
    10. '	stack' → logprob: -16.005996704101562

Token 135: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002184045733883977
    2. ':' → logprob: -6.37718391418457
    3. 'or' → logprob: -7.75218391418457
    4. ')' → logprob: -10.62718391418457
    5. ' ' → logprob: -11.62718391418457
    6. '	or' → logprob: -12.25218391418457
    7. '   ' → logprob: -12.50218391418457
    8. ':return' → logprob: -13.12718391418457
    9. '[' → logprob: -14.12718391418457
    10. ':
' → logprob: -14.12718391418457

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.025724172592163
    2. ' or' → logprob: -1.150724172592163
    3. ':' → logprob: -1.400724172592163
    4. '       ' → logprob: -2.775724172592163
    5. ':
' → logprob: -4.275724411010742
    6. ':return' → logprob: -6.525724411010742
    7. ' return' → logprob: -7.900724411010742
    8. 'return' → logprob: -8.275724411010742
    9. '   ' → logprob: -8.525724411010742
    10. '               ' → logprob: -10.275724411010742

Token 137: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31932970881462097
    2. 'return' (adapté à ' return') → logprob: -1.3193297386169434
    3. '           ' → logprob: -5.319329738616943
    4. ' True' → logprob: -7.444329738616943
    5. '               ' → logprob: -8.194329261779785
    6. 'True' → logprob: -9.444329261779785
    7. ' 
' → logprob: -9.444329261779785
    8. '
' → logprob: -9.569329261779785
    9. '       ' → logprob: -10.444329261779785
    10. ' true' → logprob: -11.444329261779785

Token 138: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020667314529419
    2. ' True' → logprob: -2.3502066135406494
    3. '(True' → logprob: -18.85020637512207
    4. '   ' → logprob: -19.60020637512207
    5. ' Tru' → logprob: -20.72520637512207
    6. '       ' → logprob: -21.35020637512207
    7. 'true' → logprob: -21.35020637512207
    8. '=True' → logprob: -21.60020637512207
    9. 'Tr' → logprob: -21.72520637512207
    10. 'False' → logprob: -22.35020637512207

Token 139: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.350647509098053
    2. '
' → logprob: -1.2256474494934082
    3. '        
' → logprob: -6.225647449493408
    4. '    
' → logprob: -9.850647926330566
    5. '  
' → logprob: -10.225647926330566
    6. ' 
' → logprob: -10.475647926330566
    7. '
' → logprob: -10.725647926330566
    8. '       
' → logprob: -11.225647926330566
    9. '<|end|>' → logprob: -11.850647926330566
    10. '            
' → logprob: -11.975647926330566

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015066476771607995
    2. '
' → logprob: -7.251506805419922
    3. '        
' → logprob: -7.251506805419922
    4. ' 
' → logprob: -10.751506805419922
    5. '    
' → logprob: -10.876506805419922
    6. '   ' → logprob: -11.626506805419922
    7. '  
' → logprob: -12.001506805419922
    8. ' if' → logprob: -12.251506805419922
    9. '      ' → logprob: -12.376506805419922
    10. '       
' → logprob: -12.376506805419922

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6442152857780457
    2. '       ' → logprob: -1.2692153453826904
    3. ' return' → logprob: -1.6442153453826904
    4. '
' → logprob: -7.769215106964111
    5. '   ' → logprob: -9.14421558380127
    6. '        
' → logprob: -9.39421558380127
    7. ' if' → logprob: -10.14421558380127
    8. '	return' → logprob: -11.26921558380127
    9. '    
' → logprob: -11.51921558380127
    10. 'if' → logprob: -12.01921558380127

Token 142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3161838948726654
    2. ' self' → logprob: -1.3161839246749878
    3. 'ball' → logprob: -6.316184043884277
    4. ' ball' → logprob: -6.816184043884277
    5. '   ' → logprob: -12.191184043884277
    6. '	self' → logprob: -12.691184043884277
    7. ' ' → logprob: -13.441184043884277
    8. '(self' → logprob: -14.316184043884277
    9. ' ' → logprob: -14.316184043884277
    10. ' not' → logprob: -14.441184043884277

Token 143: '.stack' (ID: 45133)
  Prédit: '.stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -8.792751032160595e-05
    2. '.' → logprob: -9.62508773803711
    3. ' .' → logprob: -11.75008773803711
    4. '.top' → logprob: -12.37508773803711
    5. '.number' → logprob: -13.25008773803711
    6. '.ball' → logprob: -13.37508773803711
    7. 'stack' → logprob: -13.50008773803711
    8. '	stack' → logprob: -14.00008773803711
    9. ').' → logprob: -14.12508773803711
    10. '   ' → logprob: -14.62508773803711

Token 144: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. ' and' → logprob: -14.125000953674316
    3. 'and' → logprob: -16.25
    4. '   ' → logprob: -18.5
    5. '[' → logprob: -18.75
    6. ' [-' → logprob: -19.125
    7. '][-' → logprob: -20.0
    8. '```' → logprob: -20.25
    9. '[
' → logprob: -20.75
    10. '.' → logprob: -21.0

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.875004768371582
    4. '.' → logprob: -15.500004768371582
    5. 'len' → logprob: -16.7500057220459
    6. '-' → logprob: -17.3750057220459
    7. '```' → logprob: -17.7500057220459
    8. '  ' → logprob: -17.9375057220459
    9. '0' → logprob: -18.0625057220459
    10. '       ' → logprob: -18.0625057220459

Token 146: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.23263761401176453
    2. '>' → logprob: -2.107637643814087
    3. '.' → logprob: -3.232637643814087
    4. '.number' → logprob: -3.232637643814087
    5. '>.' → logprob: -5.732637405395508
    6. ' .' → logprob: -6.232637405395508
    7. ' <' → logprob: -6.607637405395508
    8. ' ' → logprob: -8.857637405395508
    9. ').' → logprob: -9.107637405395508
    10. '   ' → logprob: -9.482637405395508

Token 147: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17918790876865387
    2. '.number' → logprob: -2.6791880130767822
    3. ' >' → logprob: -2.8041880130767822
    4. '.' → logprob: -3.4291880130767822
    5. '<' → logprob: -6.804187774658203
    6. '>.' → logprob: -7.304187774658203
    7. 'number' → logprob: -8.429187774658203
    8. '.ball' → logprob: -9.304187774658203
    9. '<number' → logprob: -9.429187774658203
    10. ' <' → logprob: -9.429187774658203

Token 148: ' ball' (ID: 7880)
  Prédit: ' ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.2519356608390808
    2. 'ball' → logprob: -1.5019357204437256
    3. ' ' → logprob: -13.501935958862305
    4. '(ball' → logprob: -13.626935958862305
    5. '.ball' → logprob: -13.626935958862305
    6. '   ' → logprob: -14.251935958862305
    7. '_ball' → logprob: -14.626935958862305
    8. ' ' → logprob: -14.876935958862305
    9. 'Ball' → logprob: -15.251935958862305
    10. '    ' → logprob: -15.251935958862305

Token 149: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4066269099712372
    2. '   ' → logprob: -1.1566269397735596
    3. ' def' → logprob: -4.7816267013549805
    4. '    
' → logprob: -5.0316267013549805
    5. '
' → logprob: -6.5316267013549805
    6. '<|end|>' → logprob: -6.6566267013549805
    7. '```' → logprob: -7.7816267013549805
    8. '  
' → logprob: -8.03162670135498
    9. '	def' → logprob: -8.28162670135498
    10. '<|end|>' → logprob: -8.40662670135498

Token 152: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.41342976689338684
    2. 'place' → logprob: -1.2884297370910645
    3. 'def' → logprob: -3.4134297370910645
    4. ' def' → logprob: -3.7884297370910645
    5. ' can' → logprob: -6.2884297370910645
    6. 'can' → logprob: -6.5384297370910645
    7. 'push' → logprob: -6.5384297370910645
    8. '_place' → logprob: -7.5384297370910645
    9. ' push' → logprob: -7.6634297370910645
    10. 'pop' → logprob: -7.9134297370910645

Token 153: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018167849630117416
    2. '(' → logprob: -4.018167972564697
    3. ' (' → logprob: -11.143167495727539
    4. '(
' → logprob: -13.393167495727539
    5. '(ball' → logprob: -13.768167495727539
    6. 'self' → logprob: -14.893167495727539
    7. '_ball' → logprob: -16.01816749572754
    8. '_' → logprob: -16.51816749572754
    9. '(sel' → logprob: -16.51816749572754
    10. '(s' → logprob: -16.89316749572754

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007843759376555681
    2. 'self' → logprob: -7.375784397125244
    3. ' ,' → logprob: -9.250783920288086
    4. ')' → logprob: -10.125783920288086
    5. '(self' → logprob: -11.875783920288086
    6. ',self' → logprob: -12.250783920288086
    7. 'ball' → logprob: -12.750783920288086
    8. '(ball' → logprob: -13.375783920288086
    9. '.ball' → logprob: -13.375783920288086
    10. '   ' → logprob: -13.875783920288086

Token 155: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.13005247712135315
    2. ' ball' → logprob: -2.1300525665283203
    3. 'self' → logprob: -6.00505256652832
    4. ' self' → logprob: -7.38005256652832
    5. '   ' → logprob: -11.63005256652832
    6. '_ball' → logprob: -12.38005256652832
    7. '.ball' → logprob: -12.75505256652832
    8. '(ball' → logprob: -12.75505256652832
    9. ' ' → logprob: -13.00505256652832
    10. '       ' → logprob: -13.50505256652832

Token 156: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5005235075950623
    2. ')' → logprob: -1.625523567199707
    3. '):' → logprob: -1.625523567199707
    4. 'self' → logprob: -9.500523567199707
    5. '):
' → logprob: -10.000523567199707
    6. ',' → logprob: -11.125523567199707
    7. '   ' → logprob: -11.375523567199707
    8. ' )' → logprob: -12.250523567199707
    9. ' ):' → logprob: -12.250523567199707
    10. ' ' → logprob: -12.750523567199707

Token 157: ' Ball' (ID: 17943)
  Prédit: ' ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.3850652277469635
    2. ' Ball' → logprob: -1.2600651979446411
    3. ')' → logprob: -4.135065078735352
    4. 'Ball' → logprob: -4.260065078735352
    5. 'ball' → logprob: -5.385065078735352
    6. ' )' → logprob: -6.885065078735352
    7. '_ball' → logprob: -9.385065078735352
    8. ' ' → logprob: -10.010065078735352
    9. ' ' → logprob: -10.760065078735352
    10. '(ball' → logprob: -11.135065078735352

Token 158: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760555267333984
    2. '):' → logprob: -0.8260555267333984
    3. ':' → logprob: -9.701055526733398
    4. '):
' → logprob: -10.201055526733398
    5. '   ' → logprob: -11.826055526733398
    6. ')->' → logprob: -12.076055526733398
    7. ' )' → logprob: -13.201055526733398
    8. ' ):' → logprob: -13.701055526733398
    9. '):
' → logprob: -14.451055526733398
    10. '       ' → logprob: -14.576055526733398

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018077615823131055
    2. ' self' → logprob: -9.125181198120117
    3. ' if' → logprob: -10.250181198120117
    4. 'self' → logprob: -10.500181198120117
    5. '   ' → logprob: -11.875181198120117
    6. 'if' → logprob: -14.625181198120117
    7. '	self' → logprob: -14.625181198120117
    8. '#' → logprob: -15.125181198120117
    9. '(self' → logprob: -16.125181198120117
    10. '        
' → logprob: -16.125181198120117

Token 160: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3101944029331207
    2. ' self' → logprob: -1.5601943731307983
    3. 'self' → logprob: -2.935194492340088
    4. ' if' → logprob: -5.685194492340088
    5. 'if' (adapté à ' if') → logprob: -9.56019401550293
    6. '	self' → logprob: -12.06019401550293
    7. ' ' → logprob: -12.56019401550293
    8. '   ' → logprob: -14.06019401550293
    9. ' assert' → logprob: -14.81019401550293
    10. '        
' → logprob: -14.81019401550293

Token 161: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3582638204097748
    2. ' not' → logprob: -1.7332638502120972
    3. 'self' → logprob: -2.1082637310028076
    4. 'not' → logprob: -5.858263969421387
    5. '   ' → logprob: -9.733263969421387
    6. ' ' → logprob: -10.608263969421387
    7. '	self' → logprob: -12.233263969421387
    8. ' ' → logprob: -12.608263969421387
    9. '  ' → logprob: -13.233263969421387
    10. '(self' → logprob: -13.358263969421387

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20144705474376678
    2. ' self' → logprob: -1.7014470100402832
    3. '   ' → logprob: -10.951447486877441
    4. ' isinstance' → logprob: -11.451447486877441
    5. ' ' → logprob: -13.451447486877441
    6. '	self' → logprob: -13.576447486877441
    7. '       ' → logprob: -13.951447486877441
    8. '  ' → logprob: -14.076447486877441
    9. '(self' → logprob: -14.951447486877441
    10. '    ' → logprob: -15.451447486877441

Token 163: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -0.005236837547272444
    2. '.stack' → logprob: -5.255236625671387
    3. 'can' → logprob: -13.880236625671387
    4. 'stack' → logprob: -14.005236625671387
    5. '.Can' → logprob: -14.630236625671387
    6. '.place' → logprob: -15.005236625671387
    7. '.' → logprob: -15.505236625671387
    8. ' .' → logprob: -16.380237579345703
    9. '   ' → logprob: -16.880237579345703
    10. '	can' → logprob: -17.005237579345703

Token 164: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -1.1041145626222715e-05
    2. '_' → logprob: -11.750011444091797
    3. 'place' → logprob: -12.750011444091797
    4. '_put' → logprob: -17.000011444091797
    5. 'Place' → logprob: -17.750011444091797
    6. ' place' → logprob: -18.000011444091797
    7. ' _' → logprob: -18.250011444091797
    8. '_places' → logprob: -18.750011444091797
    9. '_PLACE' → logprob: -19.000011444091797
    10. '_
' → logprob: -19.500011444091797

Token 165: '(ball' (ID: 170062)
  Prédit: '(ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -0.00861729308962822
    2. '(' → logprob: -4.758617401123047
    3. '(b' → logprob: -13.633617401123047
    4. ' (' → logprob: -14.383617401123047
    5. '(self' → logprob: -15.008617401123047
    6. '(
' → logprob: -15.133617401123047
    7. '(bank' → logprob: -16.508617401123047
    8. ')' → logprob: -17.008617401123047
    9. '(box' → logprob: -17.258617401123047
    10. '()' → logprob: -17.258617401123047

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3136507570743561
    2. '):
' → logprob: -1.3136507272720337
    3. ')' → logprob: -8.438651084899902
    4. '(ball' → logprob: -9.938651084899902
    5. '):
' → logprob: -10.313651084899902
    6. '):

' → logprob: -10.563651084899902
    7. '   ' → logprob: -10.813651084899902
    8. '       ' → logprob: -10.938651084899902
    9. ' ):' → logprob: -11.063651084899902
    10. ' ):
' → logprob: -12.313651084899902

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004740447038784623
    2. ':
' → logprob: -8.125473976135254
    3. ':' → logprob: -8.875473976135254
    4. ' raise' → logprob: -11.500473976135254
    5. '
' → logprob: -12.250473976135254
    6. '():
' → logprob: -12.375473976135254
    7. ',' → logprob: -12.625473976135254
    8. '       ' → logprob: -12.750473976135254
    9. '          ' → logprob: -12.750473976135254
    10. 'raise' → logprob: -13.125473976135254

Token 168: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.04949665442109108
    2. 'raise' (adapté à ' raise') → logprob: -3.049496650695801
    3. '           ' → logprob: -7.424496650695801
    4. '	raise' → logprob: -8.1744966506958
    5. ' return' → logprob: -11.2994966506958
    6. '
' → logprob: -11.6744966506958
    7. '_raise' → logprob: -12.6744966506958
    8. 'Raise' → logprob: -13.2994966506958
    9. 'return' → logprob: -13.4244966506958
    10. '       ' → logprob: -14.0494966506958

Token 169: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.2014198750257492
    2. ' Value' → logprob: -1.7014198303222656
    3. 'Exception' → logprob: -12.326419830322266
    4. ' Exception' → logprob: -14.076419830322266
    5. '	Value' → logprob: -15.076419830322266
    6. 'Runtime' → logprob: -15.201419830322266
    7. '(Value' → logprob: -15.201419830322266
    8. '.Value' → logprob: -16.201419830322266
    9. '_Value' → logprob: -16.201419830322266
    10. '<Value' → logprob: -16.326419830322266

Token 170: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.06200891733169556
    2. 'rror' → logprob: -2.812008857727051
    3. 'ror' → logprob: -10.81200885772705
    4. 'Value' → logprob: -11.43700885772705
    5. 'r' → logprob: -12.93700885772705
    6. 'n' → logprob: -13.18700885772705
    7. 'alue' → logprob: -13.56200885772705
    8. 'error' → logprob: -13.68700885772705
    9. 'rr' → logprob: -13.81200885772705
    10. 'nd' → logprob: -14.06200885772705

Token 171: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004210651386529207
    2. '(f' → logprob: -5.504210472106934
    3. '(' → logprob: -9.004210472106934
    4. '('' → logprob: -11.629210472106934
    5. '(
' → logprob: -14.879210472106934
    6. '("'' → logprob: -17.50421142578125
    7. '()' → logprob: -17.87921142578125
    8. 'f' → logprob: -18.00421142578125
    9. '(

' → logprob: -19.25421142578125
    10. '"' → logprob: -19.25421142578125

Token 172: '"' (ID: 1)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4396067261695862
    2. ' f' → logprob: -2.0646066665649414
    3. '"' → logprob: -2.3146066665649414
    4. '("' → logprob: -2.5646066665649414
    5. 'Cannot' → logprob: -3.9396066665649414
    6. '(' → logprob: -4.064606666564941
    7. ' Cannot' → logprob: -4.314606666564941
    8. 'f' → logprob: -6.814606666564941
    9. ')' → logprob: -7.189606666564941
    10. ' cannot' → logprob: -8.064606666564941

Token 173: 'Cannot' (ID: 35044)
  Prédit: 'Cannot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cannot' → logprob: -0.009141792543232441
    2. ' Cannot' → logprob: -4.75914192199707
    3. 'Can't' → logprob: -8.13414192199707
    4. '"' → logprob: -9.13414192199707
    5. 'Invalid' → logprob: -9.63414192199707
    6. ' Can't' → logprob: -10.38414192199707
    7. 'Can' → logprob: -11.38414192199707
    8. 'Ball' → logprob: -12.00914192199707
    9. ' cannot' → logprob: -12.38414192199707
    10. 'Impossible' → logprob: -13.13414192199707

Token 174: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.0036479379050433636
    2. 'place' → logprob: -5.628647804260254
    3. '_place' → logprob: -10.878647804260254
    4. '.place' → logprob: -11.253647804260254
    5. ' put' → logprob: -12.253647804260254
    6. 'Place' → logprob: -12.378647804260254
    7. '<|end|>' → logprob: -13.003647804260254
    8. '(place' → logprob: -13.753647804260254
    9. ' ' → logprob: -14.003647804260254
    10. '-place' → logprob: -14.378647804260254

Token 175: ' {' (ID: 354)
  Prédit: ' ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.05513501912355423
    2. ' {' → logprob: -3.0551350116729736
    3. ' Ball' → logprob: -5.680135250091553
    4. '{' → logprob: -6.180135250091553
    5. 'Ball' → logprob: -7.805135250091553
    6. 'ball' → logprob: -7.805135250091553
    7. ' the' → logprob: -9.055134773254395
    8. '_ball' → logprob: -9.805134773254395
    9. '(ball' → logprob: -10.305134773254395
    10. ' a' → logprob: -12.055134773254395

Token 176: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.07952392101287842
    2. ' ball' → logprob: -2.579524040222168
    3. '{' → logprob: -7.954524040222168
    4. '(ball' → logprob: -9.204524040222168
    5. ' {' → logprob: -9.454524040222168
    6. '.ball' → logprob: -9.579524040222168
    7. '_ball' → logprob: -11.704524040222168
    8. '}' → logprob: -12.079524040222168
    9. 'Ball' → logprob: -12.204524040222168
    10. ')' → logprob: -12.329524040222168

Token 177: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00039504567394033074
    2. ')' → logprob: -9.000394821166992
    3. ' }' → logprob: -9.375394821166992
    4. '}")' → logprob: -9.875394821166992
    5. ' on' → logprob: -10.000394821166992
    6. 'on' → logprob: -10.125394821166992
    7. ' in' → logprob: -10.750394821166992
    8. ' ' → logprob: -11.625394821166992
    9. 'in' → logprob: -12.250394821166992
    10. '})' → logprob: -12.500394821166992

Token 178: ' on' (ID: 402)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6210685968399048
    2. ' on' → logprob: -0.9960685968399048
    3. 'on' → logprob: -2.4960684776306152
    4. ' in' → logprob: -4.996068477630615
    5. ')' → logprob: -6.371068477630615
    6. ' ' → logprob: -7.371068477630615
    7. 'in' → logprob: -7.621068477630615
    8. ':' → logprob: -7.746068477630615
    9. '{' → logprob: -8.746068954467773
    10. ' because' → logprob: -8.871068954467773

Token 179: ' tube' (ID: 22143)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.01596093364059925
    2. ' self' → logprob: -4.515961170196533
    3. '{' → logprob: -5.765961170196533
    4. ' the' → logprob: -6.640961170196533
    5. ' top' → logprob: -8.515960693359375
    6. 'self' → logprob: -8.890960693359375
    7. ' ' → logprob: -9.390960693359375
    8. ' a' → logprob: -11.140960693359375
    9. ')' → logprob: -12.015960693359375
    10. 'the' → logprob: -12.640960693359375

Token 180: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.32485491037368774
    2. '{' → logprob: -1.324854850769043
    3. ' '{' → logprob: -4.824854850769043
    4. ''{' → logprob: -5.699854850769043
    5. '"{' → logprob: -9.449854850769043
    6. 'self' → logprob: -10.949854850769043
    7. ''' → logprob: -11.324854850769043
    8. ' '' → logprob: -11.574854850769043
    9. '{name' → logprob: -11.699854850769043
    10. ' self' → logprob: -11.699854850769043

Token 181: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23134201765060425
    2. '{' → logprob: -1.856342077255249
    3. ' self' → logprob: -3.231342077255249
    4. ' {' → logprob: -4.73134183883667
    5. ''{' → logprob: -6.98134183883667
    6. ''' → logprob: -8.481342315673828
    7. '"{' → logprob: -9.106342315673828
    8. ' '{' → logprob: -9.231342315673828
    9. '   ' → logprob: -9.356342315673828
    10. ''s' → logprob: -9.606342315673828

Token 182: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -8.900034299585968e-05
    2. '.' → logprob: -9.500088691711426
    3. 'name' → logprob: -11.750088691711426
    4. ' .' → logprob: -12.500088691711426
    5. ').' → logprob: -14.000088691711426
    6. '   ' → logprob: -14.375088691711426
    7. ' ' → logprob: -15.500088691711426
    8. ')' → logprob: -15.500088691711426
    9. '}.' → logprob: -15.875088691711426
    10. 'ame' → logprob: -16.125089645385742

Token 183: '}' (ID: 92)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.5047234296798706
    2. '")' → logprob: -1.2547234296798706
    3. '}")
' → logprob: -3.12972354888916
    4. '}' → logprob: -3.75472354888916
    5. ' }' → logprob: -3.75472354888916
    6. '.")' → logprob: -5.25472354888916
    7. '       ' → logprob: -6.12972354888916
    8. '')' → logprob: -6.25472354888916
    9. '.' → logprob: -6.37972354888916
    10. ')' → logprob: -6.37972354888916

Token 184: ' due' (ID: 5192)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.17756332457065582
    2. '")' → logprob: -2.927563428878784
    3. '.")
' → logprob: -3.052563428878784
    4. ' because' → logprob: -3.427563428878784
    5. '       ' → logprob: -4.177563190460205
    6. ' ")
' → logprob: -5.552563190460205
    7. '   ' → logprob: -5.677563190460205
    8. ')")
' → logprob: -6.552563190460205
    9. '.")' → logprob: -6.927563190460205
    10. '!")
' → logprob: -7.052563190460205

Token 185: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.38886651396751404
    2. 'to' → logprob: -1.1388665437698364
    3. ')' → logprob: -7.138866424560547
    4. '_to' → logprob: -7.763866424560547
    5. '"' → logprob: -8.013866424560547
    6. '   ' → logprob: -9.388866424560547
    7. ' ' → logprob: -9.513866424560547
    8. ' "' → logprob: -10.138866424560547
    9. '<|end|>' → logprob: -10.138866424560547
    10. 'To' → logprob: -10.388866424560547

Token 186: ' ordering' (ID: 30931)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.8283831477165222
    2. ' stack' → logprob: -1.703383207321167
    3. ' order' → logprob: -2.328383207321167
    4. '"' → logprob: -2.578383207321167
    5. ' number' → logprob: -2.953383207321167
    6. ' color' → logprob: -3.578383207321167
    7. ' the' → logprob: -3.703383207321167
    8. ' ordering' → logprob: -3.953383207321167
    9. ' space' → logprob: -3.953383207321167
    10. ' "' → logprob: -4.703382968902588

Token 187: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.668737530708313
    2. '")' → logprob: -1.918737530708313
    3. ' violation' → logprob: -2.5437374114990234
    4. ')' → logprob: -2.5437374114990234
    5. ' rules' → logprob: -2.6687374114990234
    6. ' constraint' → logprob: -2.6687374114990234
    7. '")
' → logprob: -5.043737411499023
    8. ' rule' → logprob: -5.043737411499023
    9. ' error' → logprob: -5.293737411499023
    10. ')
' → logprob: -5.543737411499023

Token 188: '.")
' (ID: 27834)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.41363683342933655
    2. '.")
' → logprob: -1.4136368036270142
    3. '       ' → logprob: -2.7886369228363037
    4. ')")
' → logprob: -4.163636684417725
    5. '")' → logprob: -4.288636684417725
    6. ')' → logprob: -6.413636684417725
    7. '.")' → logprob: -6.663636684417725
    8. ')
' → logprob: -7.038636684417725
    9. '   ' → logprob: -8.163637161254883
    10. '}")
' → logprob: -8.538637161254883

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003338717622682452
    2. '
' → logprob: -6.128338813781738
    3. 'self' → logprob: -7.128338813781738
    4. ' self' → logprob: -8.503338813781738
    5. '        
' → logprob: -9.003338813781738
    6. '```' → logprob: -12.128338813781738
    7. '
' → logprob: -12.503338813781738
    8. '   ' → logprob: -12.753338813781738
    9. '	self' → logprob: -13.503338813781738
    10. '	' → logprob: -13.628338813781738

Token 190: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004317010752856731
    2. 'self' (adapté à ' self') → logprob: -5.629316806793213
    3. ' self' → logprob: -7.254316806793213
    4. '   ' → logprob: -12.254317283630371
    5. '
' → logprob: -12.754317283630371
    6. '        
' → logprob: -13.754317283630371
    7. '	self' → logprob: -15.004317283630371
    8. '           ' → logprob: -15.129317283630371
    9. '	' → logprob: -16.004316329956055
    10. '      ' → logprob: -17.254316329956055

Token 191: '.stack' (ID: 45133)
  Prédit: '.stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -0.000432695698691532
    2. '.' → logprob: -7.75043249130249
    3. ' .' → logprob: -13.250432968139648
    4. '.place' → logprob: -15.875432968139648
    5. '.queue' → logprob: -17.62543296813965
    6. 'stack' → logprob: -17.62543296813965
    7. '.st' → logprob: -18.37543296813965
    8. '.s' → logprob: -18.37543296813965
    9. '.Stack' → logprob: -18.37543296813965
    10. '​.' → logprob: -18.37543296813965

Token 192: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7120533811976202e-05
    2. '.' → logprob: -11.000017166137695
    3. '.app' → logprob: -15.250017166137695
    4. ' .' → logprob: -17.000017166137695
    5. '.ap' → logprob: -17.000017166137695
    6. '.push' → logprob: -17.875017166137695
    7. 'append' → logprob: -18.125017166137695
    8. ').' → logprob: -18.625017166137695
    9. '.insert' → logprob: -18.625017166137695
    10. '.extend' → logprob: -18.875017166137695

Token 193: '(ball' (ID: 170062)
  Prédit: '(ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -0.011048528365790844
    2. '(' → logprob: -4.511048316955566
    3. '(b' → logprob: -14.761048316955566
    4. '(
' → logprob: -16.386049270629883
    5. '(bank' → logprob: -16.511049270629883
    6. '(B' → logprob: -16.886049270629883
    7. '(bar' → logprob: -17.886049270629883
    8. '(balance' → logprob: -17.886049270629883
    9. ' (' → logprob: -18.011049270629883
    10. '(book' → logprob: -18.511049270629883

Token 194: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')
' → logprob: -11.125019073486328
    3. '<|end|>' → logprob: -13.125019073486328
    4. ')

' → logprob: -14.125019073486328
    5. ')return' → logprob: -14.250019073486328
    6. ' )' → logprob: -14.750019073486328
    7. '   ' → logprob: -17.500019073486328
    8. '```' → logprob: -17.500019073486328
    9. '}' → logprob: -17.500019073486328
    10. '<|end|>' → logprob: -17.625019073486328

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49679914116859436
    2. 'def' → logprob: -0.996799111366272
    3. ' def' → logprob: -4.371798992156982
    4. '
' → logprob: -5.121798992156982
    5. '<|end|>' → logprob: -6.121798992156982
    6. '    
' → logprob: -7.371798992156982
    7. '	def' → logprob: -7.746798992156982
    8. '```' → logprob: -8.24679946899414
    9. '<|end|>' → logprob: -9.12179946899414
    10. ' ' → logprob: -9.49679946899414

Token 196: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0010192327899858356
    2. ' def' → logprob: -7.12601900100708
    3. '   ' → logprob: -8.626019477844238
    4. '
' → logprob: -11.001019477844238
    5. '    
' → logprob: -11.251019477844238
    6. '	def' → logprob: -13.126019477844238
    7. '        
' → logprob: -13.626019477844238
    8. 'from' → logprob: -14.501019477844238
    9. 'class' → logprob: -14.751019477844238
    10. ' 
' → logprob: -15.126019477844238

Token 197: ' __' (ID: 2516)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.3108142614364624
    2. ' pop' → logprob: -1.5608142614364624
    3. ' remove' → logprob: -3.685814380645752
    4. 'remove' → logprob: -4.185814380645752
    5. ' is' → logprob: -4.935814380645752
    6. 'is' → logprob: -5.560814380645752
    7. 'top' → logprob: -5.560814380645752
    8. ' top' → logprob: -7.060814380645752
    9. '__' → logprob: -8.435813903808594
    10. 'peek' → logprob: -8.560813903808594

Token 198: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.10040690749883652
    2. 'len' → logprob: -2.6004068851470947
    3. 'str' → logprob: -3.8504068851470947
    4. 'lt' → logprob: -11.350406646728516
    5. 'bool' → logprob: -12.475406646728516
    6. 'rep' → logprob: -15.850406646728516
    7. 'iter' → logprob: -15.975406646728516
    8. 'eq' → logprob: -16.225406646728516
    9. 're' → logprob: -16.725406646728516
    10. 'getitem' → logprob: -16.850406646728516

Token 199: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00016897499153856188
    2. '__' → logprob: -9.625168800354004
    3. '(self' → logprob: -9.625168800354004
    4. '__(
' → logprob: -10.250168800354004
    5. '__('' → logprob: -14.375168800354004
    6. '__((' → logprob: -15.500168800354004
    7. '_(' → logprob: -15.500168800354004
    8. '(' → logprob: -15.750168800354004
    9. 'self' → logprob: -16.00016975402832
    10. '__("' → logprob: -16.00016975402832

Token 200: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.526570384972729e-05
    2. ')' → logprob: -9.875055313110352
    3. ' self' → logprob: -12.875055313110352
    4. '       ' → logprob: -14.875055313110352
    5. '   ' → logprob: -14.875055313110352
    6. '(self' → logprob: -14.875055313110352
    7. ' ' → logprob: -16.12505531311035
    8. '
' → logprob: -16.62505531311035
    9. '  ' → logprob: -17.75005531311035
    10. 's' → logprob: -18.12505531311035

Token 201: ')' (ID: 8)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.025694916024804115
    2. '__' → logprob: -3.9006948471069336
    3. '__)' → logprob: -5.525694847106934
    4. 'self' → logprob: -7.900694847106934
    5. '(self' → logprob: -8.025694847106934
    6. '__(
' → logprob: -8.650694847106934
    7. ')' → logprob: -8.900694847106934
    8. '__('' → logprob: -9.900694847106934
    9. ')__' → logprob: -10.525694847106934
    10. '__[' → logprob: -10.525694847106934

Token 202: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010350722586736083
    2. 'self' → logprob: -7.251035213470459
    3. '(' → logprob: -8.7510347366333
    4. '       ' → logprob: -9.1260347366333
    5. '   ' → logprob: -10.3760347366333
    6. ' self' → logprob: -11.2510347366333
    7. '(
' → logprob: -11.8760347366333
    8. ' (' → logprob: -13.3760347366333
    9. '->' → logprob: -13.6260347366333
    10. 'return' → logprob: -14.3760347366333

Token 203: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2519300878047943
    2. 'str' → logprob: -1.5019301176071167
    3. ' ' → logprob: -14.251930236816406
    4. '[str' → logprob: -16.251930236816406
    5. '	str' → logprob: -16.376930236816406
    6. '   ' → logprob: -16.626930236816406
    7. 's' → logprob: -17.001930236816406
    8. 'f' → logprob: -17.126930236816406
    9. '(str' → logprob: -17.251930236816406
    10. '"' → logprob: -18.626930236816406

Token 204: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00840251799672842
    2. '(' → logprob: -5.508402347564697
    3. '       ' → logprob: -5.758402347564697
    4. '(
' → logprob: -7.008402347564697
    5. '   ' → logprob: -9.008402824401855
    6. 'self' → logprob: -9.133402824401855
    7. ':
' → logprob: -11.508402824401855
    8. ' self' → logprob: -12.633402824401855
    9. '(s' → logprob: -12.633402824401855
    10. ':' → logprob: -12.883402824401855

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008998962119221687
    2. 'return' → logprob: -4.758998870849609
    3. ' return' → logprob: -8.25899887084961
    4. 'f' → logprob: -9.13399887084961
    5. ' f' → logprob: -11.00899887084961
    6. '   ' → logprob: -14.50899887084961
    7. '           ' → logprob: -16.00899887084961
    8. '	return' → logprob: -16.00899887084961
    9. '     ' → logprob: -16.13399887084961
    10. '      ' → logprob: -16.50899887084961

Token 206: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.735823392868042
    2. 'return' (adapté à ' return') → logprob: -1.235823392868042
    3. '       ' → logprob: -1.485823392868042
    4. ' f' → logprob: -5.735823631286621
    5. ' return' → logprob: -7.235823631286621
    6. '   ' → logprob: -10.860823631286621
    7. '"' → logprob: -13.235823631286621
    8. '           ' → logprob: -13.485823631286621
    9. '      ' → logprob: -13.610823631286621
    10. 'repr' → logprob: -13.985823631286621

Token 207: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0380416102707386
    2. 'f' → logprob: -3.288041591644287
    3. '	f' → logprob: -16.663042068481445
    4. ' ' → logprob: -16.663042068481445
    5. '   ' → logprob: -16.913042068481445
    6. ' repr' → logprob: -17.038042068481445
    7. '       ' → logprob: -17.538042068481445
    8. '"' → logprob: -17.788042068481445
    9. '(f' → logprob: -18.788042068481445
    10. ''f' → logprob: -18.788042068481445

Token 208: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006044335197657347
    2. '"' → logprob: -5.756044387817383
    3. ' f' → logprob: -6.381044387817383
    4. '"T' → logprob: -7.381044387817383
    5. 'Tube' → logprob: -7.756044387817383
    6. '"{' → logprob: -10.256044387817383
    7. '(f' → logprob: -10.756044387817383
    8. ''T' → logprob: -11.006044387817383
    9. ' Tube' → logprob: -11.881044387817383
    10. '<T' → logprob: -12.006044387817383

Token 209: 'Tube' (ID: 13151)
  Prédit: 'Tube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tube' → logprob: -0.013997425325214863
    2. '"' → logprob: -5.138997554779053
    3. 'f' → logprob: -5.138997554779053
    4. '{' → logprob: -6.388997554779053
    5. '"{' → logprob: -8.263997077941895
    6. ''T' → logprob: -9.513997077941895
    7. 'Tub' → logprob: -10.388997077941895
    8. ''{' → logprob: -10.638997077941895
    9. ' f' → logprob: -11.138997077941895
    10. ''' → logprob: -11.263997077941895

Token 210: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -9.93710636976175e-05
    2. '(' → logprob: -10.250099182128906
    3. '('{' → logprob: -10.250099182128906
    4. '(self' → logprob: -11.125099182128906
    5. '{' → logprob: -11.750099182128906
    6. '("{' → logprob: -12.500099182128906
    7. '(name' → logprob: -13.625099182128906
    8. '(f' → logprob: -13.875099182128906
    9. '(({' → logprob: -16.375099182128906
    10. '({
' → logprob: -16.875099182128906

Token 211: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001105762057704851
    2. 'repr' → logprob: -9.125110626220703
    3. '{' → logprob: -14.125110626220703
    4. ' self' → logprob: -14.375110626220703
    5. 'f' → logprob: -16.625110626220703
    6. ' repr' → logprob: -17.125110626220703
    7. '(self' → logprob: -17.625110626220703
    8. '```' → logprob: -17.750110626220703
    9. '[self' → logprob: -17.875110626220703
    10. 're' → logprob: -18.250110626220703

Token 212: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -13.125004768371582
    3. 'self' → logprob: -13.125004768371582
    4. ' .' → logprob: -14.750004768371582
    5. 'name' → logprob: -14.750004768371582
    6. '}.' → logprob: -17.2500057220459
    7. '{name' → logprob: -17.3750057220459
    8. ''.' → logprob: -18.1250057220459
    9. '.self' → logprob: -18.2500057220459
    10. '     ' → logprob: -18.5000057220459

Token 213: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3133153021335602
    2. '},' → logprob: -1.3133152723312378
    3. '",' → logprob: -11.438315391540527
    4. 'self' → logprob: -11.688315391540527
    5. '',' → logprob: -11.813315391540527
    6. ' ,' → logprob: -11.813315391540527
    7. '},{' → logprob: -12.313315391540527
    8. '),' → logprob: -12.438315391540527
    9. '{' → logprob: -12.438315391540527
    10. '   ' → logprob: -13.688315391540527

Token 214: ' stack' (ID: 10825)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4290910065174103
    2. ' self' → logprob: -1.054090976715088
    3. 'stack' → logprob: -8.804091453552246
    4. ' stack' → logprob: -9.429091453552246
    5. ' {' → logprob: -9.929091453552246
    6. '[self' → logprob: -10.054091453552246
    7. '{' → logprob: -10.179091453552246
    8. '[' → logprob: -11.304091453552246
    9. ' [' → logprob: -12.054091453552246
    10. ' ' → logprob: -12.679091453552246

Token 215: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.041269876062870026
    2. '=self' → logprob: -3.2912697792053223
    3. '=' → logprob: -6.041269779205322
    4. 'self' → logprob: -7.791269779205322
    5. '{' → logprob: -7.916269779205322
    6. '=[' → logprob: -10.16627025604248
    7. '[self' → logprob: -11.66627025604248
    8. '=}' → logprob: -11.79127025604248
    9. '=f' → logprob: -12.04127025604248
    10. ')' → logprob: -13.54127025604248

Token 216: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.310693111619912e-05
    2. '[self' → logprob: -10.375042915344238
    3. ' self' → logprob: -11.625042915344238
    4. '[' → logprob: -13.250042915344238
    5. 'repr' → logprob: -13.750042915344238
    6. '	self' → logprob: -18.375043869018555
    7. '{' → logprob: -19.000043869018555
    8. '(self' → logprob: -19.375043869018555
    9. '```' → logprob: -19.375043869018555
    10. '   ' → logprob: -20.000043869018555

Token 217: '.stack' (ID: 45133)
  Prédit: '.stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -0.0004155377100687474
    2. 'self' → logprob: -8.000415802001953
    3. '})' → logprob: -10.250415802001953
    4. '.self' → logprob: -10.500415802001953
    5. 'stack' → logprob: -12.375415802001953
    6. '[self' → logprob: -13.000415802001953
    7. '.' → logprob: -13.125415802001953
    8. '}' → logprob: -13.250415802001953
    9. '[' → logprob: -13.375415802001953
    10. '}.' → logprob: -13.875415802001953

Token 218: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002436070004478097
    2. ')"' → logprob: -6.75243616104126
    3. '})' → logprob: -6.75243616104126
    4. ')`' → logprob: -10.127435684204102
    5. ')")' → logprob: -10.252435684204102
    6. ')}' → logprob: -11.752435684204102
    7. '}' → logprob: -12.377435684204102
    8. '")' → logprob: -12.752435684204102
    9. '))' → logprob: -13.252435684204102
    10. '}")' → logprob: -13.877435684204102

Token 219: '"


' (ID: 36470)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21053119003772736
    2. '
' → logprob: -1.960531234741211
    3. 'def' → logprob: -3.835531234741211
    4. '<|end|>' → logprob: -4.085531234741211
    5. '<|end|>' → logprob: -4.835531234741211
    6. 'class' → logprob: -6.835531234741211
    7. '    
' → logprob: -6.835531234741211
    8. '```' → logprob: -9.085531234741211
    9. '

' → logprob: -9.710531234741211
    10. ' def' → logprob: -9.835531234741211

Token 220: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04866480827331543
    2. 'def' → logprob: -3.0486648082733154
    3. 'from' → logprob: -10.298665046691895
    4. '   ' → logprob: -10.673665046691895
    5. 'ball' → logprob: -11.548665046691895
    6. '#' → logprob: -12.673665046691895
    7. '```' → logprob: -12.798665046691895
    8. 'import' → logprob: -13.548665046691895
    9. ' class' → logprob: -14.173665046691895
    10. '
' → logprob: -14.548665046691895

Token 221: ' Board' (ID: 10837)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.6861494779586792
    2. ' Game' → logprob: -1.6861494779586792
    3. 'Tube' → logprob: -2.5611495971679688
    4. 'Ball' → logprob: -2.8111495971679688
    5. 'Stack' → logprob: -3.3111495971679688
    6. ' Tube' → logprob: -3.5611495971679688
    7. 'Puzzle' → logprob: -3.6861495971679688
    8. ' Ball' → logprob: -4.436149597167969
    9. ' Puzzle' → logprob: -4.561149597167969
    10. ' Tower' → logprob: -4.561149597167969

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011797507759183645
    2. ':
' → logprob: -6.7511796951293945
    3. '):' → logprob: -12.001179695129395
    4. ':

' → logprob: -14.001179695129395
    5. '():' → logprob: -14.251179695129395
    6. '>:' → logprob: -14.376179695129395
    7. ' :' → logprob: -14.876179695129395
    8. '<|end|>' → logprob: -15.001179695129395
    9. ':**' → logprob: -15.501179695129395
    10. ':def' → logprob: -15.626179695129395

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01670258305966854
    2. ':' → logprob: -4.266702651977539
    3. ':
' → logprob: -6.141702651977539
    4. '(' → logprob: -9.016702651977539
    5. 'def' → logprob: -9.016702651977539
    6. ' def' → logprob: -9.516702651977539
    7. '  ' → logprob: -11.016702651977539
    8. '    ' → logprob: -12.016702651977539
    9. '<|end|>' → logprob: -12.141702651977539
    10. 'class' → logprob: -12.266702651977539

Token 224: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05173993483185768
    2. 'def' (adapté à ' def') → logprob: -3.0517399311065674
    3. ' def' → logprob: -5.8017401695251465
    4. ':' → logprob: -9.051739692687988
    5. 'class' → logprob: -12.926739692687988
    6. '   ' → logprob: -13.301739692687988
    7. ')' → logprob: -14.051739692687988
    8. '	def' → logprob: -14.176739692687988
    9. '```' → logprob: -14.551739692687988
    10. '):' → logprob: -14.551739692687988

Token 225: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009221878834068775
    2. '__' → logprob: -5.009222030639648
    3. '   ' → logprob: -7.259222030639648
    4. ' init' → logprob: -7.509222030639648
    5. 'init' → logprob: -7.634222030639648
    6. '_init' → logprob: -7.884222030639648
    7. ' def' → logprob: -9.384222030639648
    8. '```' → logprob: -9.759222030639648
    9. '  ' → logprob: -10.009222030639648
    10. ' ' → logprob: -10.259222030639648

Token 226: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00012833021173719317
    2. 'def' → logprob: -9.500128746032715
    3. ' init' → logprob: -10.625128746032715
    4. 'class' → logprob: -11.250128746032715
    5. '_init' → logprob: -11.750128746032715
    6. '__' → logprob: -12.125128746032715
    7. '   ' → logprob: -14.125128746032715
    8. '```' → logprob: -14.750128746032715
    9. '(init' → logprob: -15.000128746032715
    10. '-init' → logprob: -15.250128746032715

Token 227: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000206401280593127
    2. '__' → logprob: -9.000205993652344
    3. '(self' → logprob: -9.500205993652344
    4. '__(
' → logprob: -11.875205993652344
    5. '_(' → logprob: -14.000205993652344
    6. '__((' → logprob: -15.875205993652344
    7. '   ' → logprob: -16.250205993652344
    8. 'self' → logprob: -17.125205993652344
    9. '(' → logprob: -17.500205993652344
    10. ' (' → logprob: -17.500205993652344

Token 228: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002165299083571881
    2. ' self' → logprob: -8.500216484069824
    3. '   ' → logprob: -11.875216484069824
    4. '(self' → logprob: -13.250216484069824
    5. ',' → logprob: -13.625216484069824
    6. '
' → logprob: -14.250216484069824
    7. '__(' → logprob: -14.375216484069824
    8. ' ' → logprob: -14.625216484069824
    9. '       ' → logprob: -14.875216484069824
    10. ')' → logprob: -15.125216484069824

Token 229: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004801057279109955
    2. 'self' → logprob: -5.379801273345947
    3. '(self' → logprob: -9.754800796508789
    4. ' ,' → logprob: -9.879800796508789
    5. ' self' → logprob: -10.879800796508789
    6. '__,' → logprob: -11.254800796508789
    7. '   ' → logprob: -11.629800796508789
    8. '__(' → logprob: -11.754800796508789
    9. ',self' → logprob: -11.754800796508789
    10. '       ' → logprob: -12.004800796508789

Token 230: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030347732827067375
    2. ' self' → logprob: -3.5303478240966797
    3. '       ' → logprob: -7.90534782409668
    4. '   ' → logprob: -8.40534782409668
    5. '```' → logprob: -13.65534782409668
    6. ' ' → logprob: -13.90534782409668
    7. ')' → logprob: -14.28034782409668
    8. '    ' → logprob: -15.03034782409668
    9. '  ' → logprob: -15.03034782409668
    10. '	self' → logprob: -15.15534782409668

Token 231: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018150020623579621
    2. ' self' → logprob: -6.626814842224121
    3. '       ' → logprob: -7.626814842224121
    4. '   ' → logprob: -13.751814842224121
    5. '#' (adapté à ' #') → logprob: -15.126814842224121
    6. 'from' → logprob: -15.626814842224121
    7. '	self' → logprob: -17.001815795898438
    8. 'pass' → logprob: -17.376815795898438
    9. '(self' → logprob: -17.376815795898438
    10. 'super' → logprob: -17.376815795898438

Token 232: ' Although' (ID: 14036)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020210994989611208
    2. '#' → logprob: -8.875202178955078
    3. ' self' → logprob: -10.250202178955078
    4. '       ' → logprob: -10.875202178955078
    5. 'pass' → logprob: -12.750202178955078
    6. 'Initialize' → logprob: -13.875202178955078
    7. 'from' → logprob: -14.375202178955078
    8. 'super' → logprob: -14.375202178955078
    9. '   ' → logprob: -14.500202178955078
    10. 't' → logprob: -15.125202178955078

Token 233: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14603854715824127
    2. 'not' → logprob: -2.77103853225708
    3. ' not' → logprob: -2.89603853225708
    4. ' self' → logprob: -4.27103853225708
    5. 'the' → logprob: -6.39603853225708
    6. ' the' → logprob: -8.021039009094238
    7. 'there' → logprob: -8.146039009094238
    8. '       ' → logprob: -8.396039009094238
    9. ' there' → logprob: -8.521039009094238
    10. '   ' → logprob: -8.646039009094238

Token 234: ' the' (ID: 290)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.9685783386230469
    2. 'the' → logprob: -0.9685783386230469
    3. 'self' → logprob: -1.4685783386230469
    4. 'your' → logprob: -5.968578338623047
    5. ' this' → logprob: -6.593578338623047
    6. '#' → logprob: -6.843578338623047
    7. ' the' → logprob: -7.093578338623047
    8. 'typing' → logprob: -7.218578338623047
    9. '__' → logprob: -7.343578338623047
    10. 'Python' → logprob: -7.468578338623047

Token 235: ' problem' (ID: 4792)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8411641120910645
    2. '__' → logprob: -2.0911641120910645
    3. 'initial' → logprob: -2.5911641120910645
    4. ' provided' → logprob: -2.9661641120910645
    5. 'original' → logprob: -3.0911641120910645
    6. 'provided' → logprob: -3.2161641120910645
    7. ' given' → logprob: -3.3411641120910645
    8. ' current' → logprob: -3.3411641120910645
    9. 'previous' → logprob: -3.7161641120910645
    10. 'code' → logprob: -3.7161641120910645

Token 236: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5950603485107422
    2. '       ' → logprob: -1.5950603485107422
    3. ',' → logprob: -1.9700603485107422
    4. 'self' → logprob: -2.720060348510742
    5. ' self' → logprob: -3.595060348510742
    6. 'def' → logprob: -6.470060348510742
    7. ' ' → logprob: -6.720060348510742
    8. ')' → logprob: -6.845060348510742
    9. ':' → logprob: -6.845060348510742
    10. 'class' → logprob: -6.970060348510742

Token 237: ' board' (ID: 6796)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0055700540542603
    2. ' tubes' → logprob: -1.1305700540542603
    3. 'self' → logprob: -1.5055700540542603
    4. ' code' → logprob: -4.005569934844971
    5. ' self' → logprob: -4.130569934844971
    6. ' initial' → logprob: -4.255569934844971
    7. ' balls' → logprob: -5.380569934844971
    8. 'class' → logprob: -5.505569934844971
    9. '   ' → logprob: -5.630569934844971
    10. 'initial' → logprob: -5.630569934844971

Token 238: ' rotates' (ID: 155086)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.4535793662071228
    2. 'has' → logprob: -2.2035794258117676
    3. '       ' → logprob: -2.5785794258117676
    4. 'self' → logprob: -2.9535794258117676
    5. ' contains' → logprob: -3.7035794258117676
    6. ' consists' → logprob: -3.8285794258117676
    7. '   ' → logprob: -3.8285794258117676
    8. ' can' → logprob: -4.453579425811768
    9. ' self' → logprob: -4.828579425811768
    10. ' will' → logprob: -5.078579425811768

Token 239: ' left' (ID: 3561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6356062293052673
    2. 'self' → logprob: -1.885606288909912
    3. ' the' → logprob: -2.260606288909912
    4. ' self' → logprob: -2.385606288909912
    5. '   ' → logprob: -3.260606288909912
    6. ' around' → logprob: -3.760606288909912
    7. '       ' → logprob: -4.385606288909912
    8. 'the' → logprob: -4.510606288909912
    9. ' ,' → logprob: -4.760606288909912
    10. ' clockwise' → logprob: -5.010606288909912

Token 240: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6556932926177979
    2. ' and' → logprob: -2.030693292617798
    3. 'and' → logprob: -2.280693292617798
    4. '   ' → logprob: -2.530693292617798
    5. 'self' → logprob: -3.280693292617798
    6. ' by' → logprob: -3.530693292617798
    7. 'def' → logprob: -3.655693292617798
    8. 'wards' → logprob: -3.655693292617798
    9. '       ' → logprob: -4.655693054199219
    10. '90' → logprob: -4.905693054199219

Token 241: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006038885097950697
    2. ' right' → logprob: -5.131038665771484
    3. 'ight' → logprob: -10.131038665771484
    4. '#' → logprob: -11.256038665771484
    5. '	right' → logprob: -11.506038665771484
    6. 'def' → logprob: -11.756038665771484
    7. ',right' → logprob: -12.131038665771484
    8. '   ' → logprob: -12.506038665771484
    9. '.right' → logprob: -12.506038665771484
    10. ' ' → logprob: -12.756038665771484

Token 242: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07423587888479233
    2. '       ' → logprob: -2.9492359161376953
    3. '   ' → logprob: -4.699235916137695
    4. 'self' → logprob: -5.199235916137695
    5. ' self' → logprob: -6.824235916137695
    6. 'def' → logprob: -7.199235916137695
    7. ',
' → logprob: -7.574235916137695
    8. ' to' → logprob: -7.824235916137695
    9. ' ,' → logprob: -7.824235916137695
    10. ' at' → logprob: -8.199235916137695

Token 243: 'to' (ID: 935)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1675550788640976
    2. ')' → logprob: -2.542555093765259
    3. '),' → logprob: -3.542555093765259
    4. '#' → logprob: -3.917555093765259
    5. ' self' → logprob: -4.29255485534668
    6. '       ' → logprob: -4.91755485534668
    7. '...' → logprob: -6.54255485534668
    8. '   ' → logprob: -7.54255485534668
    9. 'the' → logprob: -7.66755485534668
    10. 'def' → logprob: -8.16755485534668

Token 244: ' put' (ID: 3006)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2917155027389526
    2. 'simulate' → logprob: -1.9167155027389526
    3. 'move' → logprob: -2.166715621948242
    4. 'allow' → logprob: -2.541715621948242
    5. 'rotate' → logprob: -2.666715621948242
    6. ' the' → logprob: -3.541715621948242
    7. 'ach' → logprob: -3.791715621948242
    8. ')' → logprob: -3.916715621948242
    9. 'change' → logprob: -4.166715621948242
    10. 'shift' → logprob: -4.416715621948242

Token 245: ' balls' (ID: 32657)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5933541059494019
    2. ' tubes' → logprob: -1.5933541059494019
    3. 'the' → logprob: -2.2183542251586914
    4. ' balls' → logprob: -2.8433542251586914
    5. 't' → logprob: -4.093354225158691
    6. ' a' → logprob: -4.718354225158691
    7. 'self' → logprob: -4.718354225158691
    8. 'balls' → logprob: -4.843354225158691
    9. 'a' → logprob: -4.968354225158691
    10. ' all' → logprob: -5.593354225158691

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5040285587310791
    2. 'in' → logprob: -1.504028558731079
    3. ' into' → logprob: -2.504028558731079
    4. ' on' → logprob: -3.254028558731079
    5. 'into' → logprob: -3.754028558731079
    6. 'on' → logprob: -4.2540283203125
    7. 'from' → logprob: -5.7540283203125
    8. '),' → logprob: -6.0040283203125
    9. ')' → logprob: -6.3790283203125
    10. ' inside' → logprob: -7.2540283203125

Token 247: ' either' (ID: 4784)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6829884052276611
    2. 't' → logprob: -1.8079884052276611
    3. 'self' → logprob: -1.8079884052276611
    4. 'the' → logprob: -1.9329884052276611
    5. ' tubes' → logprob: -2.557988405227661
    6. ' the' → logprob: -2.932988405227661
    7. ' a' → logprob: -3.432988405227661
    8. 'different' → logprob: -3.557988405227661
    9. ' self' → logprob: -4.057988166809082
    10. ' different' → logprob: -4.057988166809082

Token 248: ' tube' (ID: 22143)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.9229096174240112
    2. ' direction' → logprob: -1.9229096174240112
    3. 'self' → logprob: -2.297909736633301
    4. 'the' → logprob: -2.422909736633301
    5. 'tube' → logprob: -3.297909736633301
    6. 'a' → logprob: -3.297909736633301
    7. ' the' → logprob: -3.672909736633301
    8. 'hand' → logprob: -3.922909736633301
    9. 'list' → logprob: -4.172909736633301
    10. '#' → logprob: -4.172909736633301

Token 249: ' B' (ID: 418)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.25125810503959656
    2. 's' → logprob: -2.376258134841919
    3. ',' → logprob: -2.626258134841919
    4. '   ' → logprob: -4.00125789642334
    5. '       ' → logprob: -4.50125789642334
    6. '),
' → logprob: -4.75125789642334
    7. '):
' → logprob: -5.00125789642334
    8. ')' → logprob: -5.25125789642334
    9. ' or' → logprob: -6.75125789642334
    10. '):' → logprob: -6.75125789642334

Token 250: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.19034609198570251
    2. ',' → logprob: -2.1903460025787354
    3. '),' → logprob: -3.0653460025787354
    4. 'or' → logprob: -5.3153462409973145
    5. '):
' → logprob: -6.1903462409973145
    6. ' and' → logprob: -6.1903462409973145
    7. '):' → logprob: -6.4403462409973145
    8. ')' → logprob: -6.6903462409973145
    9. 'A' → logprob: -7.4403462409973145
    10. ' ),' → logprob: -7.8153462409973145

Token 251: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7284590005874634
    2. 'C' → logprob: -1.2284590005874634
    3. 'tube' → logprob: -2.103458881378174
    4. 'Tube' → logprob: -2.978458881378174
    5. ' tube' → logprob: -3.478458881378174
    6. ')' → logprob: -5.228458881378174
    7. ' A' → logprob: -5.353458881378174
    8. ' C' → logprob: -6.353458881378174
    9. 'self' → logprob: -6.353458881378174
    10. '#' → logprob: -6.478458881378174

Token 252: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08216091245412827
    2. ')' → logprob: -2.7071609497070312
    3. ',' → logprob: -5.207160949707031
    4. '       ' → logprob: -6.332160949707031
    5. '   ' → logprob: -6.457160949707031
    6. '):
' → logprob: -7.332160949707031
    7. '):' → logprob: -7.332160949707031
    8. '),
' → logprob: -7.582160949707031
    9. ')
' → logprob: -7.832160949707031
    10. ' ),' → logprob: -7.832160949707031

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016651934012770653
    2. 'self' → logprob: -4.3916521072387695
    3. ' self' → logprob: -5.5166521072387695
    4. '#' → logprob: -9.51665210723877
    5. '   ' → logprob: -10.64165210723877
    6. ' the' → logprob: -12.89165210723877
    7. '        ' → logprob: -13.14165210723877
    8. 'we' → logprob: -13.26665210723877
    9. '      ' → logprob: -13.39165210723877
    10. ' we' → logprob: -13.51665210723877

Token 254: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02362895756959915
    2. 'self' → logprob: -4.023629188537598
    3. ' self' → logprob: -5.273629188537598
    4. '#' (adapté à ' #') → logprob: -8.398629188537598
    5. '   ' → logprob: -10.273629188537598
    6. ')' → logprob: -11.523629188537598
    7. '        ' → logprob: -11.648629188537598
    8. '      ' → logprob: -11.773629188537598
    9. ' the' → logprob: -11.898629188537598
    10. ' ' → logprob: -12.148629188537598

Token 255: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06549137085676193
    2. ' self' → logprob: -2.9404914379119873
    3. '       ' → logprob: -4.815491199493408
    4. '#' → logprob: -6.065491199493408
    5. 'pass' → logprob: -9.690491676330566
    6. '   ' → logprob: -11.440491676330566
    7. 'we' → logprob: -11.565491676330566
    8. 'import' → logprob: -11.565491676330566
    9. '	self' → logprob: -12.065491676330566
    10. '```' → logprob: -12.440491676330566

Token 256: ' model' (ID: 2359)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4121732711791992
    2. ' have' → logprob: -1.4121732711791992
    3. '   ' → logprob: -2.662173271179199
    4. ' need' → logprob: -5.537173271179199
    5. ' might' → logprob: -5.537173271179199
    6. ' will' → logprob: -5.912173271179199
    7. ' may' → logprob: -6.162173271179199
    8. 'have' → logprob: -6.162173271179199
    9. ' are' → logprob: -6.662173271179199
    10. ' continue' → logprob: -6.787173271179199

Token 257: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6947963833808899
    2. ' self' → logprob: -1.3197963237762451
    3. '       ' → logprob: -2.194796323776245
    4. 'self' → logprob: -2.319796323776245
    5. '   ' → logprob: -4.319796562194824
    6. 'the' → logprob: -5.819796562194824
    7. ' it' → logprob: -6.069796562194824
    8. ' ' → logprob: -6.444796562194824
    9. ' a' → logprob: -6.694796562194824
    10. ' them' → logprob: -7.444796562194824

Token 258: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.5731287598609924
    2. ' the' → logprob: -0.9481287598609924
    3. ' self' → logprob: -4.073128700256348
    4. 'self' → logprob: -5.323128700256348
    5. ' rotation' → logprob: -5.323128700256348
    6. ' with' → logprob: -5.448128700256348
    7. 'the' → logprob: -5.573128700256348
    8. 'as' → logprob: -5.698128700256348
    9. ' rotations' → logprob: -5.823128700256348
    10. ' to' → logprob: -5.948128700256348

Token 259: ' an' (ID: 448)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36563804745674133
    2. ' a' → logprob: -1.740638017654419
    3. 'rot' → logprob: -3.615638017654419
    4. 'self' → logprob: -3.740638017654419
    5. ' having' → logprob: -3.990638017654419
    6. ' moving' → logprob: -4.740638256072998
    7. 'moving' → logprob: -4.740638256072998
    8. ' three' → logprob: -4.990638256072998
    9. 'having' → logprob: -4.990638256072998
    10. 'three' → logprob: -5.115638256072998

Token 260: ' abstraction' (ID: 129564)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.8237739205360413
    2. ' attribute' → logprob: -1.4487738609313965
    3. ' internal' → logprob: -2.0737738609313965
    4. 'array' → logprob: -2.9487738609313965
    5. ' list' → logprob: -3.1987738609313965
    6. 'attribute' → logprob: -3.8237738609313965
    7. 'internal' → logprob: -3.9487738609313965
    8. ' explicit' → logprob: -4.8237738609313965
    9. ' initial' → logprob: -4.9487738609313965
    10. ' abstraction' → logprob: -4.9487738609313965

Token 261: ' layer' (ID: 10261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.551114559173584
    2. ',' → logprob: -1.926114559173584
    3. '   ' → logprob: -2.176114559173584
    4. ' of' → logprob: -2.801114559173584
    5. ' that' → logprob: -3.551114559173584
    6. ' to' → logprob: -3.926114559173584
    7. ':' → logprob: -3.926114559173584
    8. '.' → logprob: -4.051114559173584
    9. ' for' → logprob: -4.801114559173584
    10. ' with' → logprob: -6.176114559173584

Token 262: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29082024097442627
    2. '   ' → logprob: -1.9158202409744263
    3. ',' → logprob: -2.7908201217651367
    4. ' to' → logprob: -3.9158201217651367
    5. ' that' → logprob: -4.540820121765137
    6. ' for' → logprob: -5.415820121765137
    7. '.' → logprob: -5.665820121765137
    8. ':' → logprob: -6.165820121765137
    9. ' of' → logprob: -7.415820121765137
    10. ' with' → logprob: -7.665820121765137

Token 263: ' future' (ID: 5277)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8809431791305542
    2. ' the' → logprob: -2.0059432983398438
    3. 'self' → logprob: -2.3809432983398438
    4. 'rot' → logprob: -2.6309432983398438
    5. ' now' → logprob: -2.7559432983398438
    6. 'man' → logprob: -3.3809432983398438
    7. 'now' → logprob: -3.6309432983398438
    8. 'moving' → logprob: -3.7559432983398438
    9. ' moving' → logprob: -4.255943298339844
    10. 'a' → logprob: -4.505943298339844

Token 264: ' extens' (ID: 34241)
  Prédit: ' expansions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expansions' → logprob: -1.4739441871643066
    2. 'exp' → logprob: -1.5989441871643066
    3. ' expansion' → logprob: -1.9739441871643066
    4. 'extensions' → logprob: -1.9739441871643066
    5. ' extensions' → logprob: -2.7239441871643066
    6. ' use' → logprob: -3.3489441871643066
    7. 'expand' → logprob: -3.8489441871643066
    8. ' functionality' → logprob: -3.8489441871643066
    9. ' rotations' → logprob: -4.098944187164307
    10. 'moves' → logprob: -4.473944187164307

Token 265: 'ibility' (ID: 4295)
  Prédit: 'ensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensions' → logprob: -0.47887372970581055
    2. 'ension' → logprob: -1.2288737297058105
    3. 'ions' → logprob: -3.1038737297058105
    4. 'ion' → logprob: -3.4788737297058105
    5. 'e' → logprob: -6.2288737297058105
    6. 'ens' → logprob: -6.4788737297058105
    7. 'ibility' → logprob: -6.6038737297058105
    8. 'p' → logprob: -6.7288737297058105
    9. 'ensible' → logprob: -6.8538737297058105
    10. 'ending' → logprob: -7.1038737297058105

Token 266: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1517418473958969
    2. ',' → logprob: -2.7767417430877686
    3. '   ' → logprob: -2.9017417430877686
    4. ')' → logprob: -4.276741981506348
    5. '<|end|>' → logprob: -5.651741981506348
    6. '.' → logprob: -6.026741981506348
    7. '):' → logprob: -6.651741981506348
    8. ':' → logprob: -7.776741981506348
    9. '
' → logprob: -7.776741981506348
    10. 'import' → logprob: -8.151741981506348

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003009041247423738
    2. 'self' → logprob: -8.500301361083984
    3. ' self' → logprob: -9.500301361083984
    4. '   ' → logprob: -11.250301361083984
    5. '
' → logprob: -12.000301361083984
    6. 'class' → logprob: -13.875301361083984
    7. '        
' → logprob: -14.000301361083984
    8. '```' → logprob: -14.750301361083984
    9. '           ' → logprob: -15.500301361083984
    10. '      ' → logprob: -15.750301361083984

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0030368936713784933
    2. '       ' → logprob: -6.003036975860596
    3. ' self' → logprob: -7.503036975860596
    4. '   ' → logprob: -11.878036499023438
    5. 'def' → logprob: -13.628036499023438
    6. '
' → logprob: -15.003036499023438
    7. '	self' → logprob: -15.128036499023438
    8. '#' → logprob: -15.753036499023438
    9. 'super' → logprob: -15.753036499023438
    10. 'from' → logprob: -15.878036499023438

Token 269: '.left' (ID: 15388)
  Prédit: '.t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.002817597473040223
    2. 't' → logprob: -6.377817630767822
    3. '.' → logprob: -7.002817630767822
    4. ' .' → logprob: -9.252817153930664
    5. 'T' → logprob: -10.752817153930664
    6. 'class' → logprob: -10.752817153930664
    7. 'def' → logprob: -10.877817153930664
    8. '._' → logprob: -11.127817153930664
    9. '.name' → logprob: -11.752817153930664
    10. '.T' → logprob: -12.252817153930664

Token 270: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.3290404677391052
    2. ' =' → logprob: -1.95404052734375
    3. ',' → logprob: -2.20404052734375
    4. '_name' → logprob: -4.57904052734375
    5. '=' → logprob: -4.95404052734375
    6. ':' → logprob: -5.32904052734375
    7. '_side' → logprob: -7.07904052734375
    8. '_index' → logprob: -7.20404052734375
    9. ' ,' → logprob: -7.57904052734375
    10. '_rotation' → logprob: -7.57904052734375

Token 271: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.08973135054111481
    2. 'ubes' → logprob: -2.464731454849243
    3. 'ub' → logprob: -7.839731216430664
    4. '   ' → logprob: -9.402231216430664
    5. '_' → logprob: -10.589731216430664
    6. '```' → logprob: -10.964731216430664
    7. '#' → logprob: -11.027231216430664
    8. 'ubs' → logprob: -11.277231216430664
    9. 'tube' → logprob: -11.339731216430664
    10. 'ext' → logprob: -11.402231216430664

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21493807435035706
    2. ':' → logprob: -1.7149380445480347
    3. '=' → logprob: -4.339938163757324
    4. ' :' → logprob: -8.589938163757324
    5. ',' → logprob: -8.964938163757324
    6. '   ' → logprob: -9.964938163757324
    7. ' ' → logprob: -10.839938163757324
    8. ')' → logprob: -12.339938163757324
    9. '  ' → logprob: -13.089938163757324
    10. 's' → logprob: -13.464938163757324

Token 273: ' Tube' (ID: 55385)
  Prédit: 'Tube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tube' → logprob: -0.16023112833499908
    2. ' Tube' → logprob: -1.910231113433838
    3. 'Tub' → logprob: -12.410231590270996
    4. ' Tub' → logprob: -13.535231590270996
    5. '   ' → logprob: -14.285231590270996
    6. ' ' → logprob: -15.535231590270996
    7. 'None' → logprob: -15.660231590270996
    8. 'T' → logprob: -15.785231590270996
    9. 'tube' → logprob: -15.785231590270996
    10. ' tube' → logprob: -16.16023063659668

Token 274: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4740917682647705
    2. '("' → logprob: -0.9740917682647705
    3. '(' → logprob: -11.224091529846191
    4. '"' → logprob: -15.349091529846191
    5. ''' → logprob: -15.474091529846191
    6. ' ("' → logprob: -15.474091529846191
    7. '(('' → logprob: -15.474091529846191
    8. 'A' → logprob: -15.974091529846191
    9. '(
' → logprob: -16.099092483520508
    10. '"A' → logprob: -16.349092483520508

Token 275: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0341537781059742
    2. 'B' → logprob: -3.784153699874878
    3. 'left' → logprob: -4.909153938293457
    4. 'Left' → logprob: -5.909153938293457
    5. 'L' → logprob: -7.784153938293457
    6. ''' → logprob: -9.409153938293457
    7. ''A' → logprob: -9.409153938293457
    8. ' A' → logprob: -9.534153938293457
    9. 'LEFT' → logprob: -10.534153938293457
    10. 'a' → logprob: -11.159153938293457

Token 276: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10070110857486725
    2. '')
' → logprob: -2.350701093673706
    3. ')' → logprob: -8.475701332092285
    4. '')
' → logprob: -8.725701332092285
    5. '')

' → logprob: -9.600701332092285
    6. ''' → logprob: -10.350701332092285
    7. '")' → logprob: -11.850701332092285
    8. ' ')' → logprob: -12.600701332092285
    9. ')
' → logprob: -12.725701332092285
    10. 'B' → logprob: -13.475701332092285

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04060756415128708
    2. 'self' → logprob: -3.290607452392578
    3. ' self' → logprob: -6.665607452392578
    4. '   ' → logprob: -6.790607452392578
    5. '
' → logprob: -8.915607452392578
    6. ' ' → logprob: -11.790607452392578
    7. '        
' → logprob: -12.165607452392578
    8. '           ' → logprob: -12.290607452392578
    9. '     ' → logprob: -13.540607452392578
    10. '      ' → logprob: -13.665607452392578

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006797884125262499
    2. '       ' → logprob: -7.375679969787598
    3. ' self' → logprob: -9.875679969787598
    4. '   ' → logprob: -14.000679969787598
    5. 'right' → logprob: -14.500679969787598
    6. 'left' → logprob: -16.62567901611328
    7. '           ' → logprob: -16.75067901611328
    8. '	self' → logprob: -16.75067901611328
    9. ' ' → logprob: -16.87567901611328
    10. '
' → logprob: -17.12567901611328

Token 279: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.4874957799911499
    2. 'right' → logprob: -1.11249577999115
    3. ' right' → logprob: -3.3624958992004395
    4. '.' → logprob: -4.1124958992004395
    5. ' .' → logprob: -5.3624958992004395
    6. '.center' → logprob: -7.6124958992004395
    7. '_right' → logprob: -8.237495422363281
    8. '.middle' → logprob: -8.737495422363281
    9. '._' → logprob: -9.737495422363281
    10. 'middle' → logprob: -9.987495422363281

Token 280: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -7.107425062713446e-06
    2. 'Tube' → logprob: -13.500006675720215
    3. '_' → logprob: -13.625006675720215
    4. ' _' → logprob: -13.625006675720215
    5. ''_' → logprob: -14.125006675720215
    6. ')' → logprob: -14.500006675720215
    7. 't' → logprob: -15.000006675720215
    8. '   ' → logprob: -15.250006675720215
    9. ')_' → logprob: -15.375006675720215
    10. '_s' → logprob: -15.500006675720215

Token 281: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.0007537625497207046
    2. 'tube' → logprob: -7.250753879547119
    3. 'Tube' → logprob: -11.500753402709961
    4. '_t' → logprob: -11.750753402709961
    5. 'ub' → logprob: -12.000753402709961
    6. 't' → logprob: -12.000753402709961
    7. ' tube' → logprob: -12.750753402709961
    8. '   ' → logprob: -13.000753402709961
    9. 'u' → logprob: -13.125753402709961
    10. '_' → logprob: -13.375753402709961

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.286764532327652
    2. '=' → logprob: -1.4117645025253296
    3. '('' → logprob: -5.286764621734619
    4. ' ('' → logprob: -8.036764144897461
    5. '=('' → logprob: -9.286764144897461
    6. '(' → logprob: -9.536764144897461
    7. ' ' → logprob: -10.786764144897461
    8. '   ' → logprob: -11.911764144897461
    9. ' (' → logprob: -12.161764144897461
    10. ')' → logprob: -12.286764144897461

Token 283: ' Tube' (ID: 55385)
  Prédit: 'Tube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tube' → logprob: -0.16024312376976013
    2. ' Tube' → logprob: -1.9102431535720825
    3. 'Tub' → logprob: -11.535243034362793
    4. ' Tub' → logprob: -12.160243034362793
    5. '   ' → logprob: -13.535243034362793
    6. ' tube' → logprob: -13.785243034362793
    7. ' ' → logprob: -14.160243034362793
    8. 'tube' → logprob: -15.285243034362793
    9. '  ' → logprob: -15.785243034362793
    10. '    ' → logprob: -15.910243034362793

Token 284: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0052725342102348804
    2. '(' → logprob: -5.255272388458252
    3. ' ('' → logprob: -10.38027286529541
    4. ' (' → logprob: -12.88027286529541
    5. '(
' → logprob: -13.00527286529541
    6. ''' → logprob: -13.13027286529541
    7. '(('' → logprob: -15.13027286529541
    8. '("' → logprob: -15.25527286529541
    9. ''s' → logprob: -16.505271911621094
    10. '   ' → logprob: -16.755271911621094

Token 285: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004099416080862284
    2. ''C' → logprob: -5.504099369049072
    3. ''' → logprob: -11.12909984588623
    4. ' C' → logprob: -12.87909984588623
    5. '"C' → logprob: -13.62909984588623
    6. '')' → logprob: -14.12909984588623
    7. 'B' → logprob: -14.25409984588623
    8. ')' → logprob: -14.50409984588623
    9. 'A' → logprob: -15.75409984588623
    10. ' '' → logprob: -16.129098892211914

Token 286: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.038295309990644455
    2. ')' → logprob: -3.288295269012451
    3. '       ' → logprob: -8.78829574584961
    4. '   ' → logprob: -9.41329574584961
    5. '')
' → logprob: -11.78829574584961
    6. '")' → logprob: -12.03829574584961
    7. ''' → logprob: -12.53829574584961
    8. ')'' → logprob: -14.41329574584961
    9. '```' → logprob: -14.91329574584961
    10. '')"' → logprob: -15.28829574584961

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03676338121294975
    2. '<|end|>' → logprob: -3.6617634296417236
    3. 'def' → logprob: -4.7867631912231445
    4. '       ' → logprob: -6.9117631912231445
    5. '
' → logprob: -7.9117631912231445
    6. '<|end|>' → logprob: -8.536763191223145
    7. ')' → logprob: -8.911763191223145
    8. ' def' → logprob: -9.161763191223145
    9. 'class' → logprob: -9.661763191223145
    10. '    
' → logprob: -9.911763191223145

Token 288: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.022403612732887268
    2. '   ' → logprob: -4.022403717041016
    3. ' def' → logprob: -5.522403717041016
    4. 'self' → logprob: -9.397403717041016
    5. 'class' → logprob: -9.772403717041016
    6. ')' → logprob: -9.897403717041016
    7. '
' → logprob: -10.647403717041016
    8. '	def' → logprob: -11.772403717041016
    9. '    
' → logprob: -12.272403717041016
    10. ' ' → logprob: -12.272403717041016

Token 289: ' drop' (ID: 9440)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -1.1840531826019287
    2. 'move' → logprob: -1.9340531826019287
    3. 'rotate' → logprob: -2.0590531826019287
    4. 'put' → logprob: -2.4340531826019287
    5. ' place' → logprob: -2.4340531826019287
    6. 'can' → logprob: -3.3090531826019287
    7. ' move' → logprob: -3.3090531826019287
    8. 'left' → logprob: -3.6840531826019287
    9. 'add' → logprob: -3.8090531826019287
    10. '__' → logprob: -4.059053421020508

Token 290: '_ball' (ID: 138751)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14949658513069153
    2. '(' → logprob: -2.024496555328369
    3. '_ball' → logprob: -5.399496555328369
    4. 'self' → logprob: -7.274496555328369
    5. ' (' → logprob: -7.399496555328369
    6. '_' → logprob: -7.524496555328369
    7. '_(' → logprob: -9.024497032165527
    8. 'ball' → logprob: -9.149497032165527
    9. '   ' → logprob: -9.649497032165527
    10. '()' → logprob: -10.149497032165527

Token 291: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002814386272802949
    2. '(' → logprob: -5.877814292907715
    3. 'self' → logprob: -12.377814292907715
    4. '(
' → logprob: -12.627814292907715
    5. ' (' → logprob: -13.502814292907715
    6. '   ' → logprob: -15.127814292907715
    7. '       ' → logprob: -15.877814292907715
    8. '(s' → logprob: -16.50281524658203
    9. '(sel' → logprob: -17.50281524658203
    10. ' self' → logprob: -17.62781524658203

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020413640595506877
    2. 'self' → logprob: -8.625204086303711
    3. ' ,' → logprob: -11.250204086303711
    4. '(self' → logprob: -11.750204086303711
    5. ')' → logprob: -13.500204086303711
    6. '       ' → logprob: -13.875204086303711
    7. '   ' → logprob: -14.250204086303711
    8. ',self' → logprob: -15.375204086303711
    9. ',
' → logprob: -15.875204086303711
    10. ' self' → logprob: -16.25020408630371

Token 293: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.11300332099199295
    2. 'self' → logprob: -2.9880032539367676
    3. ' ball' → logprob: -2.9880032539367676
    4. ' self' → logprob: -5.113003253936768
    5. '   ' → logprob: -11.488003730773926
    6. ' ' → logprob: -11.738003730773926
    7. 'number' → logprob: -11.863003730773926
    8. ')' → logprob: -12.238003730773926
    9. 'tube' → logprob: -12.488003730773926
    10. 'b' → logprob: -12.800503730773926

Token 294: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5781195163726807
    2. '):' → logprob: -1.3281195163726807
    3. ',' → logprob: -1.9531195163726807
    4. ')' → logprob: -3.4531195163726807
    5. '):
' → logprob: -8.078119277954102
    6. '   ' → logprob: -8.953119277954102
    7. 'self' → logprob: -9.328119277954102
    8. '       ' → logprob: -10.703119277954102
    9. ' ):' → logprob: -10.953119277954102
    10. '):
' → logprob: -12.203119277954102

Token 295: ' Ball' (ID: 17943)
  Prédit: 'Ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ball' → logprob: -0.38743817806243896
    2. ' Ball' → logprob: -1.137438178062439
    3. ')' → logprob: -8.01243782043457
    4. ' ball' → logprob: -9.13743782043457
    5. 'ball' → logprob: -9.63743782043457
    6. 'self' → logprob: -10.38743782043457
    7. ' self' → logprob: -11.51243782043457
    8. ' )' → logprob: -12.26243782043457
    9. '_ball' → logprob: -12.51243782043457
    10. ' ' → logprob: -13.01243782043457

Token 296: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4854506552219391
    2. ')' → logprob: -1.6104506254196167
    3. '):' → logprob: -1.7354506254196167
    4. '):
' → logprob: -4.860450744628906
    5. '   ' → logprob: -7.610450744628906
    6. ' )' → logprob: -9.985450744628906
    7. '):
' → logprob: -10.235450744628906
    8. ':' → logprob: -10.360450744628906
    9. '       ' → logprob: -10.360450744628906
    10. ' ,' → logprob: -10.485450744628906

Token 297: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029617754742503166
    2. '):' → logprob: -4.279617786407471
    3. ':
' → logprob: -4.779617786407471
    4. ')' → logprob: -6.029617786407471
    5. '):
' → logprob: -6.279617786407471
    6. '(self' → logprob: -7.029617786407471
    7. '       ' → logprob: -7.654617786407471
    8. ',' → logprob: -7.779617786407471
    9. '   ' → logprob: -8.154617309570312
    10. ' ->' → logprob: -8.279617309570312

Token 298: ' bool' (ID: 3792)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.18146489560604095
    2. 'bool' → logprob: -2.306464910507202
    3. ' None' → logprob: -2.806464910507202
    4. ' bool' → logprob: -5.431464672088623
    5. 'str' → logprob: -7.306464672088623
    6. 'int' → logprob: -7.556464672088623
    7. 'list' → logprob: -9.181465148925781
    8. ' str' → logprob: -9.306465148925781
    9. 'Tube' → logprob: -10.306465148925781
    10. '   ' → logprob: -10.931465148925781

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0056475442834198475
    2. ':
' → logprob: -5.380647659301758
    3. '):' → logprob: -7.255647659301758
    4. '       ' → logprob: -9.005647659301758
    5. '():' → logprob: -9.630647659301758
    6. '   ' → logprob: -9.880647659301758
    7. '):
' → logprob: -10.005647659301758
    8. '(self' → logprob: -11.255647659301758
    9. ')' → logprob: -11.755647659301758
    10. ',' → logprob: -12.130647659301758

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003888470819219947
    2. ' if' → logprob: -8.750389099121094
    3. '   ' → logprob: -9.625389099121094
    4. '#' → logprob: -10.000389099121094
    5. ':' → logprob: -10.500389099121094
    6. '
' → logprob: -11.250389099121094
    7. ')' → logprob: -11.375389099121094
    8. ' 
' → logprob: -11.750389099121094
    9. '        
' → logprob: -11.750389099121094
    10. ',' → logprob: -12.000389099121094

Token 301: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0296896696090698
    2. ' if' → logprob: -1.0296896696090698
    3. 'if' → logprob: -1.9046896696090698
    4. ' for' → logprob: -2.6546897888183594
    5. 'try' → logprob: -3.5296897888183594
    6. '#' → logprob: -4.154689788818359
    7. 'for' → logprob: -4.404689788818359
    8. ' try' → logprob: -4.779689788818359
    9. ' #' → logprob: -7.529689788818359
    10. '```' → logprob: -8.77968978881836

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8073318600654602
    2. '#' → logprob: -1.1823318004608154
    3. ' if' → logprob: -2.3073318004608154
    4. 'if' → logprob: -3.0573318004608154
    5. ' self' → logprob: -3.0573318004608154
    6. 'self' → logprob: -3.4323318004608154
    7. ' #' → logprob: -4.0573320388793945
    8. 'try' → logprob: -6.0573320388793945
    9. '        ' → logprob: -7.3073320388793945
    10. ' try' → logprob: -7.5573320388793945

Token 303: ' Decide' (ID: 145367)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37119653820991516
    2. 'try' → logprob: -1.4961965084075928
    3. 'Try' → logprob: -3.2461965084075928
    4. 'if' → logprob: -4.121196746826172
    5. '"""' → logprob: -4.246196746826172
    6. '       ' → logprob: -4.496196746826172
    7. 'Attempt' → logprob: -5.996196746826172
    8. '"""
' → logprob: -6.621196746826172
    9. 'for' → logprob: -7.746196746826172
    10. 'Choose' → logprob: -8.371196746826172

Token 304: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.6257996559143066
    2. ' whether' → logprob: -1.0007996559143066
    3. ' where' → logprob: -2.8757996559143066
    4. ' if' → logprob: -3.3757996559143066
    5. ' to' → logprob: -5.625799655914307
    6. ' on' → logprob: -6.500799655914307
    7. '       ' → logprob: -7.125799655914307
    8. 'whether' → logprob: -7.875799655914307
    9. 'which' → logprob: -8.750799179077148
    10. ' what' → logprob: -9.250799179077148

Token 305: ' tube' (ID: 22143)
  Prédit: 'tube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tube' → logprob: -0.3888900876045227
    2. ' tube' → logprob: -1.138890027999878
    3. 't' → logprob: -6.263890266418457
    4. 'Tube' → logprob: -9.263890266418457
    5. ' of' → logprob: -12.138890266418457
    6. 'side' → logprob: -12.388890266418457
    7. '   ' → logprob: -12.763890266418457
    8. ' Tube' → logprob: -13.388890266418457
    9. '_t' → logprob: -14.138890266418457
    10. ' tub' → logprob: -14.263890266418457

Token 306: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0003199730417691171
    2. 'to' → logprob: -8.250320434570312
    3. ':' → logprob: -11.250320434570312
    4. ' (' → logprob: -11.375320434570312
    5. ' for' → logprob: -12.000320434570312
    6. '(self' → logprob: -12.000320434570312
    7. '       ' → logprob: -12.250320434570312
    8. ' the' → logprob: -12.500320434570312
    9. ' should' → logprob: -12.500320434570312
    10. '_to' → logprob: -13.250320434570312

Token 307: ' put' (ID: 3006)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.03802875429391861
    2. 'put' → logprob: -4.163028717041016
    3. 'drop' → logprob: -4.163028717041016
    4. ' place' → logprob: -5.163028717041016
    5. 'use' → logprob: -8.288028717041016
    6. ' drop' → logprob: -9.413028717041016
    7. 'try' → logprob: -10.163028717041016
    8. 'choose' → logprob: -11.038028717041016
    9. 'accept' → logprob: -11.163028717041016
    10. 'take' → logprob: -11.413028717041016

Token 308: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.001973361475393176
    2. 'the' → logprob: -6.8769731521606445
    3. ' ball' → logprob: -7.2519731521606445
    4. '(ball' → logprob: -9.501973152160645
    5. 'ball' → logprob: -9.876973152160645
    6. ' this' → logprob: -10.126973152160645
    7. '       ' → logprob: -10.501973152160645
    8. ' it' → logprob: -11.001973152160645
    9. ' (' → logprob: -12.751973152160645
    10. 'self' → logprob: -12.751973152160645

Token 309: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.6931670904159546
    2. ' ball' → logprob: -0.6931670904159546
    3. ' next' → logprob: -12.193166732788086
    4. '(ball' → logprob: -12.443166732788086
    5. ' new' → logprob: -12.943166732788086
    6. '_ball' → logprob: -13.318166732788086
    7. '.ball' → logprob: -13.693166732788086
    8. 'next' → logprob: -13.943166732788086
    9. 'new' → logprob: -14.193166732788086
    10. ' ' → logprob: -14.193166732788086

Token 310: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2228393852710724
    2. ' in' → logprob: -2.09783935546875
    3. ' into' → logprob: -3.09783935546875
    4. '.' → logprob: -3.84783935546875
    5. '       ' → logprob: -5.22283935546875
    6. ' on' → logprob: -6.84783935546875
    7. ',' → logprob: -6.97283935546875
    8. ' if' → logprob: -7.09783935546875
    9. ' to' → logprob: -7.34783935546875
    10. ' based' → logprob: -8.34783935546875

Token 311: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5511130690574646
    2. ':' → logprob: -1.8011131286621094
    3. '(self' → logprob: -2.1761131286621094
    4. ',' → logprob: -2.4261131286621094
    5. '(' → logprob: -3.9261131286621094
    6. ' (' → logprob: -4.301113128662109
    7. '.' → logprob: -5.051113128662109
    8. '
' → logprob: -5.676113128662109
    9. ' based' → logprob: -5.926113128662109
    10. ' if' → logprob: -6.301113128662109

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11826248466968536
    2. '        ' → logprob: -3.493262529373169
    3. ' 
' → logprob: -3.743262529373169
    4. '        
' → logprob: -3.993262529373169
    5. '\n' → logprob: -4.99326229095459
    6. '"""' → logprob: -4.99326229095459
    7. ' ' → logprob: -5.24326229095459
    8. '<|end|>' → logprob: -5.36826229095459
    9. '#' → logprob: -5.86826229095459
    10. '```' → logprob: -6.11826229095459

Token 313: ' Returns' (ID: 9609)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8305314779281616
    2. '       ' → logprob: -1.4555314779281616
    3. ' ' → logprob: -1.5805314779281616
    4. '        ' → logprob: -3.205531597137451
    5. ' if' → logprob: -3.455531597137451
    6. '        
' → logprob: -4.205531597137451
    7. '<|end|>' → logprob: -4.455531597137451
    8. '
' → logprob: -4.830531597137451
    9. '#' → logprob: -5.705531597137451
    10. '\n' → logprob: -5.830531597137451

Token 314: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.008643055334687233
    2. 'True' → logprob: -4.75864315032959
    3. ' False' → logprob: -10.50864315032959
    4. 'False' → logprob: -13.63364315032959
    5. ' ' → logprob: -17.633642196655273
    6. ' None' → logprob: -18.633642196655273
    7. ' ' → logprob: -18.758642196655273
    8. ' bool' → logprob: -19.383642196655273
    9. '_true' → logprob: -19.758642196655273
    10. '=True' → logprob: -19.758642196655273

Token 315: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0028383955359458923
    2. ' or' → logprob: -7.252838611602783
    3. ',' → logprob: -7.502838611602783
    4. ' for' → logprob: -7.502838611602783
    5. 'if' → logprob: -8.002838134765625
    6. '       ' → logprob: -8.627838134765625
    7. ' to' → logprob: -9.252838134765625
    8. ' ' → logprob: -9.377838134765625
    9. '   ' → logprob: -10.252838134765625
    10. ' and' → logprob: -10.377838134765625

Token 316: ' placed' (ID: 12989)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.28193989396095276
    2. 'self' → logprob: -1.4069398641586304
    3. ' the' → logprob: -7.90693998336792
    4. ' placed' → logprob: -8.906939506530762
    5. 'True' → logprob: -9.156939506530762
    6. 'the' → logprob: -9.781939506530762
    7. 'placed' → logprob: -10.156939506530762
    8. ' successfully' → logprob: -10.656939506530762
    9. ' True' → logprob: -10.656939506530762
    10. ' it' → logprob: -11.781939506530762

Token 317: ' successfully' (ID: 12836)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07302412390708923
    2. ' ,' → logprob: -3.073024034500122
    3. '.' → logprob: -4.573024272918701
    4. ' successfully' → logprob: -4.573024272918701
    5. ' in' → logprob: -6.323024272918701
    6. ' at' → logprob: -6.823024272918701
    7. ' ' → logprob: -8.198023796081543
    8. ' and' → logprob: -9.323023796081543
    9. ' correctly' → logprob: -9.948023796081543
    10. ' .' → logprob: -10.073023796081543

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012477317359298468
    2. '       ' → logprob: -7.376247882843018
    3. ' ,' → logprob: -8.00124740600586
    4. ' else' → logprob: -9.75124740600586
    5. ',
' → logprob: -9.75124740600586
    6. ' and' → logprob: -10.12624740600586
    7. '.' → logprob: -10.12624740600586
    8. ';' → logprob: -10.62624740600586
    9. '```' → logprob: -11.62624740600586
    10. '        ' → logprob: -11.62624740600586

Token 319: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.20280170440673828
    2. 'False' → logprob: -1.7028017044067383
    3. ' else' → logprob: -6.952801704406738
    4. '        ' → logprob: -8.327801704406738
    5. '       ' → logprob: -8.952801704406738
    6. 'else' → logprob: -10.327801704406738
    7. ' and' → logprob: -12.202801704406738
    8. ' ' → logprob: -12.577801704406738
    9. '    ' → logprob: -12.577801704406738
    10. ' 
' → logprob: -12.952801704406738

Token 320: ' otherwise' (ID: 10275)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48717841506004333
    2. '.' → logprob: -1.8621784448623657
    3. '       ' → logprob: -2.612178325653076
    4. ' or' → logprob: -2.737178325653076
    5. '<|end|>' → logprob: -2.862178325653076
    6. ' else' → logprob: -4.737178325653076
    7. '        ' → logprob: -5.487178325653076
    8. ' to' → logprob: -5.862178325653076
    9. '```' → logprob: -5.862178325653076
    10. '   ' → logprob: -6.237178325653076

Token 321: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19494204223155975
    2. ':' → logprob: -1.8199419975280762
    3. ',' → logprob: -5.194941997528076
    4. '.' → logprob: -5.194941997528076
    5. '   ' → logprob: -7.069941997528076
    6. ':
' → logprob: -7.069941997528076
    7. '):' → logprob: -7.569941997528076
    8. ')' → logprob: -7.944941997528076
    9. '        
' → logprob: -7.944941997528076
    10. '
' → logprob: -8.194942474365234

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005387356504797935
    2. '
' → logprob: -8.12553882598877
    3. '        
' → logprob: -9.12553882598877
    4. '```' → logprob: -9.87553882598877
    5. ')' → logprob: -10.87553882598877
    6. '        ' → logprob: -11.37553882598877
    7. '"""' → logprob: -11.50053882598877
    8. ' 
' → logprob: -11.50053882598877
    9. ' if' → logprob: -11.62553882598877
    10. '#' → logprob: -12.62553882598877

Token 323: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4276069402694702
    2. ' if' → logprob: -1.4276069402694702
    3. 'if' → logprob: -2.4276070594787598
    4. '#' → logprob: -4.80260705947876
    5. ' left' → logprob: -5.92760705947876
    6. '
' → logprob: -6.17760705947876
    7. 'left' → logprob: -6.30260705947876
    8. '"""' → logprob: -6.55260705947876
    9. 'If' → logprob: -7.55260705947876
    10. ' """
' → logprob: -7.67760705947876

Token 324: ' heuristic' (ID: 146226)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.293460488319397
    2. ' ball' → logprob: -1.418460488319397
    3. ' next' → logprob: -2.0434603691101074
    4. 'def' → logprob: -2.7934603691101074
    5. 'ball' → logprob: -3.1684603691101074
    6. ' logic' → logprob: -3.2934603691101074
    7. '       ' → logprob: -3.7934603691101074
    8. ' def' → logprob: -3.7934603691101074
    9. 'next' → logprob: -4.168460369110107
    10. ' best' → logprob: -4.293460369110107

Token 325: ' tries' (ID: 30519)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007138020358979702
    2. ':' → logprob: -5.257138252258301
    3. ' for' → logprob: -6.632138252258301
    4. '   ' → logprob: -9.2571382522583
    5. '       ' → logprob: -9.2571382522583
    6. ' ' → logprob: -9.7571382522583
    7. ' to' → logprob: -9.7571382522583
    8. 'is' → logprob: -9.8821382522583
    9. '    ' → logprob: -10.3821382522583
    10. ' was' → logprob: -10.6321382522583

Token 326: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9304344654083252
    2. 'left' → logprob: -1.3054344654083252
    3. ' left' → logprob: -1.9304344654083252
    4. 'to' → logprob: -2.305434465408325
    5. '   ' → logprob: -3.555434465408325
    6. ' the' → logprob: -3.680434465408325
    7. ' placing' → logprob: -4.430434226989746
    8. ' both' → logprob: -4.930434226989746
    9. ' first' → logprob: -5.430434226989746
    10. 'the' → logprob: -5.805434226989746

Token 327: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.3160552680492401
    2. ' place' → logprob: -1.3160552978515625
    3. 'put' → logprob: -5.9410552978515625
    4. 'first' → logprob: -10.066055297851562
    5. ' put' → logprob: -10.191055297851562
    6. 'try' → logprob: -11.191055297851562
    7. '_place' → logprob: -11.316055297851562
    8. ' first' → logprob: -11.566055297851562
    9. 'choose' → logprob: -12.066055297851562
    10. 'insert' → logprob: -12.441055297851562

Token 328: ' in' (ID: 306)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10693807154893875
    2. ' in' → logprob: -2.731938123703003
    3. 'the' → logprob: -3.856938123703003
    4. 'in' → logprob: -4.231937885284424
    5. ' into' → logprob: -8.731938362121582
    6. ' first' → logprob: -8.731938362121582
    7. 'ball' → logprob: -9.356938362121582
    8. ' it' → logprob: -9.606938362121582
    9. ' on' → logprob: -9.731938362121582
    10. ' ball' → logprob: -9.731938362121582

Token 329: ' left' (ID: 3561)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062254250049591064
    2. ' self' → logprob: -2.8122541904449463
    3. ' the' → logprob: -8.312253952026367
    4. 'the' → logprob: -10.437253952026367
    5. '       ' → logprob: -12.562253952026367
    6. '(self' → logprob: -13.187253952026367
    7. 'left' → logprob: -13.437253952026367
    8. '[self' → logprob: -13.562253952026367
    9. ')' → logprob: -14.312253952026367
    10. '=self' → logprob: -14.437253952026367

Token 330: ' tube' (ID: 22143)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.35837464465294e-05
    2. 'tube' → logprob: -11.375043869018555
    3. '_' → logprob: -11.500043869018555
    4. ' tube' → logprob: -11.500043869018555
    5. ')' → logprob: -12.625043869018555
    6. ' _' → logprob: -13.000043869018555
    7. 't' → logprob: -13.375043869018555
    8. 'Tube' → logprob: -13.750043869018555
    9. '   ' → logprob: -13.875043869018555
    10. '

' → logprob: -14.625043869018555

Token 331: ' first' (ID: 1577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030135618522763252
    2. ' or' → logprob: -3.6551356315612793
    3. 'if' → logprob: -6.405135631561279
    4. ' and' → logprob: -7.280135631561279
    5. '       ' → logprob: -7.905135631561279
    6. '   ' → logprob: -8.280135154724121
    7. ' first' → logprob: -8.530135154724121
    8. ' (' → logprob: -8.780135154724121
    9. ',' → logprob: -8.905135154724121
    10. '.' → logprob: -9.405135154724121

Token 332: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40405383706092834
    2. ',' → logprob: -1.529053807258606
    3. ' if' → logprob: -2.4040539264678955
    4. '.' → logprob: -4.029053688049316
    5. ':' → logprob: -5.279053688049316
    6. ' (' → logprob: -7.279053688049316
    7. ' or' → logprob: -7.654053688049316
    8. ' and' → logprob: -8.654053688049316
    9. ';' → logprob: -8.904053688049316
    10. '   ' → logprob: -8.904053688049316

Token 333: ' if' (ID: 538)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.0019383925246074796
    2. '       ' → logprob: -6.626938343048096
    3. 'then' → logprob: -8.251938819885254
    4. ' and' → logprob: -8.876938819885254
    5. ' if' → logprob: -9.626938819885254
    6. ' else' → logprob: -10.001938819885254
    7. '    ' → logprob: -10.376938819885254
    8. ' self' → logprob: -11.001938819885254
    9. '   ' → logprob: -11.126938819885254
    10. ' return' → logprob: -11.876938819885254

Token 334: ' possible' (ID: 4149)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08523276448249817
    2. 'self' → logprob: -2.585232734680176
    3. ' not' → logprob: -5.085232734680176
    4. 'not' → logprob: -9.710232734680176
    5. ' True' → logprob: -10.960232734680176
    6. ' ' → logprob: -11.335232734680176
    7. 'True' → logprob: -11.585232734680176
    8. ' the' → logprob: -11.960232734680176
    9. ' ' → logprob: -12.460232734680176
    10. '    ' → logprob: -12.585232734680176

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4539365768432617
    2. '       ' → logprob: -1.2039365768432617
    3. ':' → logprob: -3.3289365768432617
    4. '.' → logprob: -3.8289365768432617
    5. ' and' → logprob: -6.203936576843262
    6. '):' → logprob: -6.453936576843262
    7. ')' → logprob: -6.828936576843262
    8. ' if' → logprob: -7.078936576843262
    9. ' or' → logprob: -7.703936576843262
    10. ';' → logprob: -8.453936576843262

Token 336: ' else' (ID: 1203)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.0191526859998703
    2. ' else' → logprob: -4.394152641296387
    3. ' and' → logprob: -6.144152641296387
    4. '        ' → logprob: -6.394152641296387
    5. ' ' → logprob: -6.644152641296387
    6. 'else' → logprob: -7.769152641296387
    7. 'then' → logprob: -7.894152641296387
    8. '    ' → logprob: -8.519152641296387
    9. '       ' → logprob: -8.519152641296387
    10. ' if' → logprob: -9.894152641296387

Token 337: ' right' (ID: 1849)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5748692750930786
    2. ' tries' → logprob: -1.3248692750930786
    3. ' place' → logprob: -2.699869155883789
    4. ' right' → logprob: -2.824869155883789
    5. ' places' → logprob: -4.324869155883789
    6. 'in' → logprob: -4.824869155883789
    7. 'right' → logprob: -4.824869155883789
    8. ' try' → logprob: -4.949869155883789
    9. 'place' → logprob: -5.574869155883789
    10. 'try' → logprob: -6.574869155883789

Token 338: ' tube' (ID: 22143)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.018975384533405304
    2. ' tube' → logprob: -4.393975257873535
    3. 'tube' → logprob: -5.268975257873535
    4. ')' → logprob: -7.518975257873535
    5. ':' → logprob: -8.268975257873535
    6. '.' → logprob: -8.393975257873535
    7. '):' → logprob: -9.643975257873535
    8. '_' → logprob: -9.768975257873535
    9. '   ' → logprob: -10.643975257873535
    10. 'Tube' → logprob: -10.643975257873535

Token 339: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10977977514266968
    2. '):' → logprob: -2.8597798347473145
    3. '.' → logprob: -3.4847798347473145
    4. '       ' → logprob: -4.7347798347473145
    5. ',' → logprob: -5.9847798347473145
    6. '):
' → logprob: -6.3597798347473145
    7. ':
' → logprob: -6.7347798347473145
    8. ')' → logprob: -7.2347798347473145
    9. '   ' → logprob: -7.6097798347473145
    10. ').' → logprob: -8.234779357910156

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001170132018160075
    2. '
' → logprob: -10.000117301940918
    3. '```' → logprob: -10.375117301940918
    4. '        
' → logprob: -11.125117301940918
    5. '   ' → logprob: -11.375117301940918
    6. ')' → logprob: -12.375117301940918
    7. '"""' → logprob: -12.375117301940918
    8. '"""
' → logprob: -14.125117301940918
    9. '           ' → logprob: -14.250117301940918
    10. ')
' → logprob: -14.375117301940918

Token 341: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012749579036608338
    2. '   ' → logprob: -9.875127792358398
    3. '        
' → logprob: -10.750127792358398
    4. '
' → logprob: -10.875127792358398
    5. '```' → logprob: -11.375127792358398
    6. ')' → logprob: -11.750127792358398
    7. 'if' → logprob: -12.750127792358398
    8. ' if' → logprob: -12.875127792358398
    9. '<|end|>' → logprob: -12.875127792358398
    10. '        ' → logprob: -13.250127792358398

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.451116051815916e-05
    2. 'if' → logprob: -11.250024795532227
    3. '   ' → logprob: -12.000024795532227
    4. '        
' → logprob: -12.750024795532227
    5. '```' → logprob: -14.000024795532227
    6. ' if' → logprob: -14.250024795532227
    7. '
' → logprob: -14.875024795532227
    8. '           ' → logprob: -15.625024795532227
    9. '    
' → logprob: -16.375024795532227
    10. '      ' → logprob: -16.375024795532227

Token 343: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0033856455702334642
    2. '       ' → logprob: -6.003385543823242
    3. ' if' → logprob: -7.003385543823242
    4. 'try' → logprob: -14.253385543823242
    5. '```' → logprob: -16.878385543823242
    6. 'If' → logprob: -17.503385543823242
    7. '	if' → logprob: -17.503385543823242
    8. 'for' → logprob: -17.878385543823242
    9. '   ' → logprob: -18.253385543823242
    10. '
' → logprob: -19.003385543823242

Token 344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048289015889168
    2. ' self' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.386048316955566
    4. '(self' → logprob: -15.761048316955566
    5. '	self' → logprob: -16.26104736328125
    6. ' ' → logprob: -17.51104736328125
    7. 'Self' → logprob: -18.13604736328125
    8. '  ' → logprob: -19.01104736328125
    9. '       ' → logprob: -19.01104736328125
    10. 'not' → logprob: -19.13604736328125

Token 345: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.3856492842023727e-06
    2. 'left' → logprob: -13.875000953674316
    3. '.right' → logprob: -15.000000953674316
    4. '.can' → logprob: -16.750001907348633
    5. '.' → logprob: -18.375001907348633
    6. ' .' → logprob: -19.500001907348633
    7. '	left' → logprob: -20.000001907348633
    8. '[left' → logprob: -20.000001907348633
    9. ').' → logprob: -20.750001907348633
    10. '.le' → logprob: -21.250001907348633

Token 346: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.334533878136426e-05
    2. '.can' → logprob: -10.625042915344238
    3. '._' → logprob: -12.375042915344238
    4. '_.' → logprob: -12.375042915344238
    5. '.t' → logprob: -12.500042915344238
    6. 't' → logprob: -13.125042915344238
    7. '.' → logprob: -13.625042915344238
    8. '_can' → logprob: -13.750042915344238
    9. 'can' → logprob: -14.000042915344238
    10. 'tube' → logprob: -15.250042915344238

Token 347: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -3.523948907968588e-05
    2. 'tube' → logprob: -10.375035285949707
    3. 'ub' → logprob: -13.750035285949707
    4. '_' → logprob: -14.500035285949707
    5. 't' → logprob: -14.500035285949707
    6. '   ' → logprob: -15.375035285949707
    7. 'u' → logprob: -15.500035285949707
    8. '_t' → logprob: -15.625035285949707
    9. 'ubes' → logprob: -15.750035285949707
    10. ' tube' → logprob: -15.875035285949707

Token 348: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -16.25
    3. '.Can' → logprob: -16.375
    4. ' .' → logprob: -17.625
    5. ').' → logprob: -18.625
    6. 'can' → logprob: -19.5
    7. '   ' → logprob: -19.5
    8. '.stack' → logprob: -19.625
    9. '	can' → logprob: -19.875
    10. '.place' → logprob: -19.875

Token 349: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.625005722045898
    3. '_put' → logprob: -13.125005722045898
    4. ' _' → logprob: -15.375005722045898
    5. '_places' → logprob: -16.5000057220459
    6. 'place' → logprob: -16.5000057220459
    7. ' place' → logprob: -17.5000057220459
    8. 'Place' → logprob: -17.6250057220459
    9. '_PLACE' → logprob: -18.0000057220459
    10. '_append' → logprob: -18.3750057220459

Token 350: '(ball' (ID: 170062)
  Prédit: '(ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -17.250003814697266
    4. '(b' → logprob: -17.500003814697266
    5. '(bank' → logprob: -19.625003814697266
    6. '(card' → logprob: -19.875003814697266
    7. '(board' → logprob: -20.500003814697266
    8. ')' → logprob: -20.500003814697266
    9. '(B' → logprob: -20.625003814697266
    10. '(
' → logprob: -20.875003814697266

Token 351: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5762413740158081
    2. '):' → logprob: -0.8262413740158081
    3. ')' → logprob: -8.826241493225098
    4. ' ):' → logprob: -10.076241493225098
    5. ' ):
' → logprob: -10.076241493225098
    6. '):
' → logprob: -10.326241493225098
    7. '   ' → logprob: -11.451241493225098
    8. '       ' → logprob: -11.576241493225098
    9. '):

' → logprob: -11.576241493225098
    10. '(ball' → logprob: -12.951241493225098

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003995680599473417
    2. ':' → logprob: -8.125399589538574
    3. '       ' → logprob: -10.000399589538574
    4. ':
' → logprob: -10.250399589538574
    5. '[' → logprob: -12.250399589538574
    6. '               ' → logprob: -12.875399589538574
    7. '          ' → logprob: -13.000399589538574
    8. ' and' → logprob: -13.375399589538574
    9. '            
' → logprob: -13.750399589538574
    10. '	       ' → logprob: -13.750399589538574

Token 353: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025633685290813446
    2. ' self' → logprob: -4.025633811950684
    3. '           ' → logprob: -4.900633811950684
    4. '               ' → logprob: -12.025633811950684
    5. '       ' → logprob: -12.900633811950684
    6. '	self' → logprob: -13.525633811950684
    7. '   ' → logprob: -13.900633811950684
    8. '(self' → logprob: -14.150633811950684
    9. '
' → logprob: -14.275633811950684
    10. '[self' → logprob: -14.650633811950684

Token 354: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.1279553291387856e-05
    2. '.' → logprob: -12.250011444091797
    3. 'left' → logprob: -13.125011444091797
    4. '.right' → logprob: -13.250011444091797
    5. ' .' → logprob: -13.375011444091797
    6. '.place' → logprob: -14.625011444091797
    7. '.Left' → logprob: -15.375011444091797
    8. '.drop' → logprob: -15.625011444091797
    9. '[left' → logprob: -17.125011444091797
    10. ' left' → logprob: -17.250011444091797

Token 355: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.3663626305060461e-05
    2. '._' → logprob: -11.25001335144043
    3. 'tube' → logprob: -16.12501335144043
    4. '   ' → logprob: -16.25001335144043
    5. ' _' → logprob: -16.87501335144043
    6. 't' → logprob: -16.87501335144043
    7. '       ' → logprob: -17.12501335144043
    8. 'Tube' → logprob: -17.12501335144043
    9. '_' → logprob: -17.12501335144043
    10. '```' → logprob: -17.37501335144043

Token 356: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.002841491252183914
    2. 'tube' → logprob: -5.877841472625732
    3. 't' → logprob: -11.25284194946289
    4. 'ub' → logprob: -11.62784194946289
    5. 'u' → logprob: -12.50284194946289
    6. '_t' → logprob: -13.00284194946289
    7. '   ' → logprob: -13.25284194946289
    8. ' tube' → logprob: -13.25284194946289
    9. 'ubes' → logprob: -14.25284194946289
    10. '_' → logprob: -14.62784194946289

Token 357: '.place' (ID: 50295)
  Prédit: '.place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.place' → logprob: -0.00012582694762386382
    2. '.' → logprob: -9.000125885009766
    3. '.put' → logprob: -13.500125885009766
    4. '.stack' → logprob: -14.500125885009766
    5. ' .' → logprob: -14.625125885009766
    6. '.push' → logprob: -17.500125885009766
    7. '.append' → logprob: -17.625125885009766
    8. '.Place' → logprob: -18.375125885009766
    9. '.insert' → logprob: -18.625125885009766
    10. 'place' → logprob: -18.625125885009766

Token 358: '(ball' (ID: 170062)
  Prédit: '(ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -0.0009118211455643177
    2. '(' → logprob: -7.000911712646484
    3. '(b' → logprob: -14.750911712646484
    4. '(
' → logprob: -16.750911712646484
    5. '(card' → logprob: -19.125911712646484
    6. '(bank' → logprob: -19.250911712646484
    7. '(

' → logprob: -19.375911712646484
    8. '()' → logprob: -19.625911712646484
    9. '(bot' → logprob: -20.125911712646484
    10. '(bar' → logprob: -20.250911712646484

Token 359: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12797324359416962
    2. ')
' → logprob: -2.1279733180999756
    3. ')
' → logprob: -6.8779730796813965
    4. ')

' → logprob: -12.002973556518555
    5. '       ' → logprob: -12.377973556518555
    6. ')return' → logprob: -13.377973556518555
    7. '   ' → logprob: -14.377973556518555
    8. ')`
' → logprob: -14.502973556518555
    9. ')`' → logprob: -14.877973556518555
    10. '           ' → logprob: -15.127973556518555

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.371605948312208e-05
    2. '
' → logprob: -10.000053405761719
    3. '       ' → logprob: -11.875053405761719
    4. '               ' → logprob: -14.250053405761719
    5. 'return' → logprob: -15.000053405761719
    6. '            
' → logprob: -15.500053405761719
    7. '		' → logprob: -16.87505340576172
    8. '
' → logprob: -17.12505340576172
    9. '   ' → logprob: -17.37505340576172
    10. '[' → logprob: -17.50005340576172

Token 361: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027240974828600883
    2. 'return' (adapté à ' return') → logprob: -3.7772409915924072
    3. ' return' → logprob: -5.527240753173828
    4. '
' → logprob: -11.652240753173828
    5. '{return' → logprob: -14.777240753173828
    6. '	return' → logprob: -15.152240753173828
    7. '               ' → logprob: -15.152240753173828
    8. ' True' → logprob: -15.277240753173828
    9. 'True' → logprob: -15.777240753173828
    10. '		' → logprob: -16.027240753173828

Token 362: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.575939416885376
    2. 'True' → logprob: -0.825939416885376
    3. '(True' → logprob: -20.450939178466797
    4. '=True' → logprob: -22.825939178466797
    5. 'true' → logprob: -24.450939178466797
    6. '           ' → logprob: -24.575939178466797
    7. 'False' → logprob: -25.075939178466797
    8. ' ' → logprob: -25.325939178466797
    9. ' Tru' → logprob: -25.700939178466797
    10. '   ' → logprob: -25.700939178466797

Token 363: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.41129949549213e-05
    2. '
' → logprob: -9.875083923339844
    3. '        
' → logprob: -10.625083923339844
    4. '   ' → logprob: -12.750083923339844
    5. '      ' → logprob: -13.500083923339844
    6. '  
' → logprob: -13.750083923339844
    7. '\n' → logprob: -14.500083923339844
    8. '    
' → logprob: -14.500083923339844
    9. '<|end|>' → logprob: -15.125083923339844
    10. '        ' → logprob: -15.250083923339844

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.537180211627856e-05
    2. '
' → logprob: -10.250045776367188
    3. '        
' → logprob: -11.750045776367188
    4. '   ' → logprob: -14.000045776367188
    5. 'elif' → logprob: -15.000045776367188
    6. '      ' → logprob: -15.125045776367188
    7. 'if' → logprob: -15.250045776367188
    8. '    
' → logprob: -16.125045776367188
    9. '  
' → logprob: -16.625045776367188
    10. '       
' → logprob: -16.750045776367188

Token 365: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2670780122280121
    2. '       ' → logprob: -1.5170780420303345
    3. 'elif' (adapté à ' elif') → logprob: -4.642077922821045
    4. ' if' → logprob: -5.267077922821045
    5. '
' → logprob: -9.017078399658203
    6. ' elif' → logprob: -9.392078399658203
    7. '   ' → logprob: -11.017078399658203
    8. '        
' → logprob: -11.767078399658203
    9. 'else' → logprob: -11.892078399658203
    10. '	if' → logprob: -14.767078399658203

Token 366: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0031797364354133606
    2. 'self' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.128179550170898
    4. ' ' → logprob: -17.7531795501709
    5. '	self' → logprob: -18.1281795501709
    6. ' space' → logprob: -18.6281795501709
    7. '(self' → logprob: -19.6281795501709
    8. ' not' → logprob: -19.7531795501709
    9. '[self' → logprob: -20.0031795501709
    10. '=self' → logprob: -20.6281795501709

Token 367: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -4.656383680412546e-05
    2. 'right' → logprob: -10.000046730041504
    3. ' .' → logprob: -14.500046730041504
    4. '.' → logprob: -14.500046730041504
    5. ' right' → logprob: -16.000045776367188
    6. '.r' → logprob: -17.625045776367188
    7. '	right' → logprob: -17.625045776367188
    8. '[right' → logprob: -18.000045776367188
    9. '.left' → logprob: -18.750045776367188
    10. '
' → logprob: -19.500045776367188

Token 368: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: 0.0
    2. '._' → logprob: -18.25
    3. ')_' → logprob: -19.625
    4. ' _' → logprob: -20.0
    5. 'Tube' → logprob: -20.5
    6. '_' → logprob: -20.75
    7. 'tube' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '_to' → logprob: -21.5
    10. '##_' → logprob: -21.625

Token 369: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.08986930549144745
    2. 'tube' → logprob: -2.714869260787964
    3. '_t' → logprob: -3.964869260787964
    4. 't' → logprob: -7.214869499206543
    5. 'ub' → logprob: -10.964869499206543
    6. '   ' → logprob: -13.214869499206543
    7. 'Tube' → logprob: -13.714869499206543
    8. 'ubes' → logprob: -13.714869499206543
    9. ' tube' → logprob: -13.964869499206543
    10. 'u' → logprob: -14.089869499206543

Token 370: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -16.625001907348633
    4. '.Can' → logprob: -16.875001907348633
    5. '	can' → logprob: -17.750001907348633
    6. '_can' → logprob: -17.875001907348633
    7. 'can' → logprob: -18.250001907348633
    8. ' can' → logprob: -18.500001907348633
    9. '.has' → logprob: -19.875001907348633
    10. '.should' → logprob: -20.125001907348633

Token 371: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.011052886955440044
    2. 'place' → logprob: -4.511053085327148
    3. ' place' → logprob: -13.636053085327148
    4. '_' → logprob: -13.761053085327148
    5. 'Place' → logprob: -14.011053085327148
    6. '-place' → logprob: -14.636053085327148
    7. '.place' → logprob: -15.136053085327148
    8. 't' → logprob: -15.511053085327148
    9. 'can' → logprob: -15.636053085327148
    10. '   ' → logprob: -16.13605308532715

Token 372: '(ball' (ID: 170062)
  Prédit: '(ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -3.292907877039397e-06
    2. ' (' → logprob: -12.87500286102295
    3. '(' → logprob: -14.75000286102295
    4. '(b' → logprob: -15.62500286102295
    5. '(B' → logprob: -17.000003814697266
    6. '.ball' → logprob: -18.500003814697266
    7. 'ball' → logprob: -19.000003814697266
    8. ' ' → logprob: -19.125003814697266
    9. '(bit' → logprob: -19.125003814697266
    10. '   ' → logprob: -19.250003814697266

Token 373: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37381285429000854
    2. '):' → logprob: -1.2488129138946533
    3. ')' → logprob: -4.498812675476074
    4. ',' → logprob: -5.248812675476074
    5. 'ball' → logprob: -5.623812675476074
    6. '(ball' → logprob: -5.748812675476074
    7. '       ' → logprob: -7.873812675476074
    8. '):

' → logprob: -7.998812675476074
    9. '   ' → logprob: -7.998812675476074
    10. '):
' → logprob: -8.123812675476074

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002524053445085883
    2. 'self' → logprob: -6.002523899078369
    3. ' self' → logprob: -10.502524375915527
    4. '       ' → logprob: -11.502524375915527
    5. '               ' → logprob: -11.752524375915527
    6. '(self' → logprob: -13.627524375915527
    7. '   ' → logprob: -14.502524375915527
    8. '          ' → logprob: -15.002524375915527
    9. '	       ' → logprob: -15.752524375915527
    10. '[self' → logprob: -15.877524375915527

Token 375: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0490717887878418
    2. ' self' → logprob: -3.049071788787842
    3. '           ' → logprob: -7.799071788787842
    4. '       ' → logprob: -9.549072265625
    5. '	self' → logprob: -14.049072265625
    6. '               ' → logprob: -14.424072265625
    7. ' ' → logprob: -15.049072265625
    8. '[self' → logprob: -15.174072265625
    9. '   ' → logprob: -15.299072265625
    10. '(self' → logprob: -15.299072265625

Token 376: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00026181264547631145
    2. 'right' → logprob: -8.250262260437012
    3. '.left' → logprob: -15.125262260437012
    4. '.' → logprob: -15.875262260437012
    5. ' .' → logprob: -16.875261306762695
    6. '	right' → logprob: -17.125261306762695
    7. '[right' → logprob: -17.375261306762695
    8. '.r' → logprob: -17.375261306762695
    9. '_right' → logprob: -18.000261306762695
    10. ' right' → logprob: -18.750261306762695

Token 377: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.2842308680992573e-05
    2. 'right' → logprob: -11.250022888183594
    3. '._' → logprob: -11.875022888183594
    4. '.right' → logprob: -13.750022888183594
    5. '_right' → logprob: -14.000022888183594
    6. 't' → logprob: -14.875022888183594
    7. '```' → logprob: -15.375022888183594
    8. '_place' → logprob: -16.125022888183594
    9. '.t' → logprob: -16.500022888183594
    10. 'tube' → logprob: -17.000022888183594

Token 378: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.0010737768607214093
    2. 'tube' → logprob: -6.876073837280273
    3. 'ub' → logprob: -11.251073837280273
    4. 'u' → logprob: -11.876073837280273
    5. 't' → logprob: -12.126073837280273
    6. 'be' → logprob: -12.876073837280273
    7. '   ' → logprob: -12.876073837280273
    8. 'r' → logprob: -13.876073837280273
    9. 'ibe' → logprob: -13.876073837280273
    10. '_' → logprob: -13.876073837280273

Token 379: '.place' (ID: 50295)
  Prédit: '.place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.place' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -14.375000953674316
    3. 'place' → logprob: -14.375000953674316
    4. ' .' → logprob: -16.000001907348633
    5. '_place' → logprob: -17.250001907348633
    6. '.put' → logprob: -17.500001907348633
    7. ' place' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '```' → logprob: -18.375001907348633
    10. ').' → logprob: -18.500001907348633

Token 380: '(ball' (ID: 170062)
  Prédit: '(ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. '(b' → logprob: -18.875
    4. 'ball' → logprob: -19.625
    5. '(
' → logprob: -19.625
    6. ' (' → logprob: -20.25
    7. '(bank' → logprob: -21.0
    8. '(bar' → logprob: -21.625
    9. '.ball' → logprob: -21.625
    10. '(card' → logprob: -22.125

Token 381: ')
' (ID: 446)
  Prédit: '(ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -0.042114730924367905
    2. ')' → logprob: -3.542114734649658
    3. 'ball' → logprob: -4.917114734649658
    4. ')
' → logprob: -5.417114734649658
    5. ' ball' → logprob: -8.5421142578125
    6. ',' → logprob: -9.0421142578125
    7. '           ' → logprob: -9.1671142578125
    8. ')(' → logprob: -10.4171142578125
    9. '.ball' → logprob: -10.4171142578125
    10. '       ' → logprob: -10.7921142578125

Token 382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030566859641112387
    2. 'return' → logprob: -8.125306129455566
    3. ' return' → logprob: -12.750306129455566
    4. 'True' → logprob: -12.875306129455566
    5. '               ' → logprob: -13.625306129455566
    6. '
' → logprob: -13.750306129455566
    7. '       ' → logprob: -14.375306129455566
    8. '(True' → logprob: -14.625306129455566
    9. ':return' → logprob: -16.00030517578125
    10. '   ' → logprob: -16.12530517578125

Token 383: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0018796122167259455
    2. '           ' → logprob: -6.751879692077637
    3. ' return' → logprob: -7.251879692077637
    4. '   ' → logprob: -16.37687873840332
    5. '       ' → logprob: -16.62687873840332
    6. 'True' → logprob: -16.87687873840332
    7. '
' → logprob: -17.25187873840332
    8. '	return' → logprob: -17.25187873840332
    9. 'eturn' → logprob: -18.37687873840332
    10. '{return' → logprob: -18.75187873840332

Token 384: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.339278580620885e-06
    2. ' True' → logprob: -13.000001907348633
    3. 'False' → logprob: -17.500001907348633
    4. '(True' → logprob: -23.125001907348633
    5. '=True' → logprob: -23.250001907348633
    6. 'true' → logprob: -24.750001907348633
    7. '_true' → logprob: -25.875001907348633
    8. '.True' → logprob: -27.375001907348633
    9. 'Truth' → logprob: -27.500001907348633
    10. 'TRUE' → logprob: -27.500001907348633

Token 385: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.803360495017841e-05
    2. 'return' → logprob: -9.875078201293945
    3. '
' → logprob: -10.875078201293945
    4. '	' → logprob: -12.750078201293945
    5. ' return' → logprob: -13.500078201293945
    6. '   ' → logprob: -13.750078201293945
    7. '        
' → logprob: -14.250078201293945
    8. '<|end|>' → logprob: -15.000078201293945
    9. '	return' → logprob: -15.375078201293945
    10. 'False' → logprob: -15.625078201293945

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.300083648762666e-05
    2. 'return' → logprob: -9.875053405761719
    3. '
' → logprob: -14.125053405761719
    4. 'else' → logprob: -15.125053405761719
    5. ' return' → logprob: -16.00005340576172
    6. 'False' → logprob: -16.25005340576172
    7. '        
' → logprob: -16.62505340576172
    8. '	' → logprob: -16.87505340576172
    9. '```' → logprob: -17.62505340576172
    10. '   ' → logprob: -17.75005340576172

Token 387: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.161540687084198
    2. 'return' → logprob: -1.9115407466888428
    3. 'else' (adapté à ' else') → logprob: -6.661540508270264
    4. ' return' → logprob: -11.036540985107422
    5. 'False' → logprob: -11.411540985107422
    6. '
' → logprob: -12.036540985107422
    7. '   ' → logprob: -13.161540985107422
    8. 'false' → logprob: -14.286540985107422
    9. ' else' → logprob: -14.536540985107422
    10. '	return' → logprob: -16.161540985107422

Token 388: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14052875339984894
    2. '       ' → logprob: -2.140528678894043
    3. '
' → logprob: -4.515528678894043
    4. ':
' → logprob: -6.265528678894043
    5. 'return' → logprob: -8.015528678894043
    6. ':' → logprob: -8.640528678894043
    7. ' return' → logprob: -10.015528678894043
    8. ':return' → logprob: -10.390528678894043
    9. '               ' → logprob: -10.765528678894043
    10. '	       ' → logprob: -11.265528678894043

Token 389: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0647079274058342
    2. 'return' → logprob: -2.8147079944610596
    3. '           ' → logprob: -5.9397077560424805
    4. ' return' → logprob: -9.43970775604248
    5. '   ' → logprob: -11.31470775604248
    6. '```' → logprob: -12.06470775604248
    7. 'False' → logprob: -13.06470775604248
    8. '               ' → logprob: -13.31470775604248
    9. '	return' → logprob: -13.93970775604248
    10. '{return' → logprob: -14.06470775604248

Token 390: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.061676347395405e-05
    2. ' return' → logprob: -10.00005054473877
    3. 'False' → logprob: -12.25005054473877
    4. '       ' → logprob: -15.12505054473877
    5. 'false' → logprob: -18.000051498413086
    6. '
' → logprob: -18.375051498413086
    7. '           ' → logprob: -18.500051498413086
    8. '   ' → logprob: -20.125051498413086
    9. ' False' → logprob: -20.750051498413086
    10. '```' → logprob: -20.750051498413086

Token 391: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. '(False' → logprob: -24.12502098083496
    4. 'false' → logprob: -25.25002098083496
    5. '=False' → logprob: -25.87502098083496
    6. '_false' → logprob: -26.75002098083496
    7. 'True' → logprob: -27.37502098083496
    8. 'None' → logprob: -27.75002098083496
    9. '.False' → logprob: -28.50002098083496
    10. 'F' → logprob: -29.87502098083496

Token 392: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.028860267251729965
    2. '<|end|>' → logprob: -3.653860330581665
    3. '
' → logprob: -7.278860092163086
    4. 'class' → logprob: -7.403860092163086
    5. '#' → logprob: -7.903860092163086
    6. '```' → logprob: -8.153860092163086
    7. '   ' → logprob: -8.528860092163086
    8. ' def' → logprob: -8.528860092163086
    9. '<|end|>' → logprob: -9.153860092163086
    10. ')' → logprob: -10.653860092163086

Token 395: ' reset' (ID: 12820)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20178596675395966
    2. ' __' → logprob: -1.701785922050476
    3. 'repr' → logprob: -8.576786041259766
    4. 'def' → logprob: -9.326786041259766
    5. 'reset' → logprob: -10.326786041259766
    6. '_repr' → logprob: -10.826786041259766
    7. ' def' → logprob: -11.076786041259766
    8. ' repr' → logprob: -12.076786041259766
    9. 'can' → logprob: -12.576786041259766
    10. ' reset' → logprob: -12.951786041259766

Token 396: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00872944574803114
    2. '()' → logprob: -4.758729457855225
    3. '(' → logprob: -9.383728981018066
    4. 'self' → logprob: -10.633728981018066
    5. '()
' → logprob: -13.133728981018066
    6. ' (' → logprob: -13.883728981018066
    7. '_' → logprob: -14.633728981018066
    8. '(s' → logprob: -14.633728981018066
    9. '_self' → logprob: -14.883728981018066
    10. '(
' → logprob: -15.133728981018066

Token 397: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22176170349121094
    2. ')' → logprob: -1.846761703491211
    3. '):
' → logprob: -3.221761703491211
    4. 'self' → logprob: -6.971761703491211
    5. '(self' → logprob: -8.221761703491211
    6. '   ' → logprob: -10.971761703491211
    7. '):

' → logprob: -11.221761703491211
    8. ',' → logprob: -11.721761703491211
    9. '       ' → logprob: -12.471761703491211
    10. ')
' → logprob: -12.846761703491211

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001277257571928203
    2. 'self' → logprob: -7.876277446746826
    3. '(self' → logprob: -8.001276969909668
    4. '()
' → logprob: -8.751276969909668
    5. ' self' → logprob: -9.126276969909668
    6. '
' → logprob: -9.126276969909668
    7. '   ' → logprob: -9.126276969909668
    8. '()' → logprob: -9.751276969909668
    9. '```' → logprob: -12.501276969909668
    10. '(' → logprob: -12.751276969909668

Token 399: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17233507335186005
    2. '       ' → logprob: -1.9223350286483765
    3. ' self' → logprob: -4.422335147857666
    4. '   ' → logprob: -10.547334671020508
    5. '	self' → logprob: -12.922334671020508
    6. '(self' → logprob: -13.297334671020508
    7. 'def' → logprob: -14.422334671020508
    8. '```' → logprob: -14.797334671020508
    9. ' ' → logprob: -16.422334671020508
    10. '[self' → logprob: -16.672334671020508

Token 400: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00011319868644932285
    2. '.' → logprob: -9.625113487243652
    3. '.right' → logprob: -10.125113487243652
    4. '   ' → logprob: -13.000113487243652
    5. ' .' → logprob: -13.625113487243652
    6. 'left' → logprob: -14.000113487243652
    7. '.__' → logprob: -14.500113487243652
    8. '       ' → logprob: -14.625113487243652
    9. ').' → logprob: -15.375113487243652
    10. '.py' → logprob: -15.375113487243652

Token 401: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.9361264946837764e-07
    2. '._' → logprob: -16.375
    3. '=_' → logprob: -17.875
    4. '_' → logprob: -18.375
    5. '   ' → logprob: -18.375
    6. '=' → logprob: -18.625
    7. '\' → logprob: -18.75
    8. 't' → logprob: -18.875
    9. ' _' → logprob: -19.25
    10. '```' → logprob: -19.75

Token 402: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.002051766263321042
    2. 'tube' → logprob: -6.252051830291748
    3. 't' → logprob: -9.87705135345459
    4. '_t' → logprob: -10.62705135345459
    5. 'ub' → logprob: -11.12705135345459
    6. '   ' → logprob: -11.25205135345459
    7. 'u' → logprob: -12.25205135345459
    8. '_' → logprob: -12.87705135345459
    9. ' tube' → logprob: -13.50205135345459
    10. 'ubes' → logprob: -13.50205135345459

Token 403: ' =' (ID: 314)
  Prédit: '.stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -0.00021188464597798884
    2. '.' → logprob: -9.250211715698242
    3. '=' → logprob: -9.250211715698242
    4. ' =' → logprob: -11.250211715698242
    5. ' .' → logprob: -12.250211715698242
    6. '.clear' → logprob: -14.000211715698242
    7. '=.' → logprob: -14.875211715698242
    8. '.reset' → logprob: -15.625211715698242
    9. '   ' → logprob: -16.500211715698242
    10. 'stack' → logprob: -16.500211715698242

Token 404: ' Tube' (ID: 55385)
  Prédit: 'Tube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tube' → logprob: -0.47408327460289
    2. ' Tube' → logprob: -0.9740833044052124
    3. ' Tub' → logprob: -12.474082946777344
    4. 'Tub' → logprob: -13.099082946777344
    5. ' tube' → logprob: -15.849082946777344
    6. 'tube' → logprob: -16.724082946777344
    7. 'T' → logprob: -17.224082946777344
    8. '   ' → logprob: -18.099082946777344
    9. ' ' → logprob: -18.349082946777344
    10. 'Tape' → logprob: -18.349082946777344

Token 405: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.512236498361744e-07
    2. ''' → logprob: -15.125000953674316
    3. '(' → logprob: -15.750000953674316
    4. '(('' → logprob: -17.125
    5. '(B' → logprob: -17.875
    6. '("' → logprob: -18.5
    7. ' ('' → logprob: -19.75
    8. ''S' → logprob: -20.5
    9. ''s' → logprob: -20.625
    10. '(`' → logprob: -21.125

Token 406: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00012868782505393028
    2. ''' → logprob: -9.000128746032715
    3. 'A' → logprob: -12.500128746032715
    4. ' B' → logprob: -13.500128746032715
    5. '"B' → logprob: -16.1251277923584
    6. '	B' → logprob: -17.0001277923584
    7. '')' → logprob: -17.2501277923584
    8. ''A' → logprob: -17.6251277923584
    9. '`' → logprob: -17.8751277923584
    10. '   ' → logprob: -18.1876277923584

Token 407: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.0029635541141033173
    2. '')' → logprob: -5.877963542938232
    3. ')
' → logprob: -8.87796401977539
    4. '')
' → logprob: -11.12796401977539
    5. '")
' → logprob: -13.25296401977539
    6. ')' → logprob: -13.37796401977539
    7. '')

' → logprob: -14.37796401977539
    8. ''
' → logprob: -15.12796401977539
    9. ''' → logprob: -15.87796401977539
    10. ' ')
' → logprob: -16.00296401977539

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015953186666592956
    2. '   ' → logprob: -6.876595497131348
    3. '
' → logprob: -7.626595497131348
    4. 'self' → logprob: -10.126595497131348
    5. '           ' → logprob: -11.626595497131348
    6. '```' → logprob: -11.626595497131348
    7. '<|end|>' → logprob: -12.251595497131348
    8. ')' → logprob: -12.876595497131348
    9. '	' → logprob: -13.251595497131348
    10. '      ' → logprob: -14.126595497131348

Token 409: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.4140441635390744e-05
    2. '       ' → logprob: -11.750014305114746
    3. ' self' → logprob: -12.000014305114746
    4. '   ' → logprob: -18.00001335144043
    5. '	self' → logprob: -19.12501335144043
    6. '(self' → logprob: -20.37501335144043
    7. '           ' → logprob: -21.12501335144043
    8. '[self' → logprob: -22.00001335144043
    9. 'Self' → logprob: -22.00001335144043
    10. '=self' → logprob: -22.50001335144043

Token 410: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.018188340589404106
    2. 'right' → logprob: -4.0181884765625
    3. '.' → logprob: -10.3931884765625
    4. ' .' → logprob: -12.1431884765625
    5. ' right' → logprob: -13.7681884765625
    6. '.left' → logprob: -14.0181884765625
    7. '	right' → logprob: -15.1431884765625
    8. '_right' → logprob: -16.8931884765625
    9. '.r' → logprob: -17.3931884765625
    10. '   ' → logprob: -17.3931884765625

Token 411: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.008129963040119e-06
    2. '```' → logprob: -13.500003814697266
    3. '   ' → logprob: -13.750003814697266
    4. ' _' → logprob: -15.125003814697266
    5. ')_' → logprob: -15.375003814697266
    6. '\' → logprob: -15.750003814697266
    7. '._' → logprob: -15.750003814697266
    8. '_' → logprob: -15.875003814697266
    9. '=' → logprob: -16.125003814697266
    10. '=_' → logprob: -16.375003814697266

Token 412: 'ube' (ID: 4502)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.038167838007211685
    2. 'ube' → logprob: -3.288167953491211
    3. 'Tube' → logprob: -9.663167953491211
    4. 'tube' → logprob: -9.788167953491211
    5. 't' → logprob: -12.788167953491211
    6. 'ub' → logprob: -13.413167953491211
    7. '   ' → logprob: -14.663167953491211
    8. ' tube' → logprob: -15.163167953491211
    9. 'UBE' → logprob: -15.288167953491211
    10. 'u' → logprob: -15.663167953491211

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. ')' → logprob: -15.626928329467773
    4. ' ' → logprob: -16.626928329467773
    5. '   ' → logprob: -16.751928329467773
    6. '=T' → logprob: -17.001928329467773
    7. '(' → logprob: -17.751928329467773
    8. '()' → logprob: -18.001928329467773
    9. '=
' → logprob: -18.876928329467773
    10. '＝' → logprob: -18.876928329467773

Token 414: ' Tube' (ID: 55385)
  Prédit: 'Tube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tube' → logprob: -0.006716079078614712
    2. ' Tube' → logprob: -5.006716251373291
    3. 'Tub' → logprob: -14.506715774536133
    4. ' tube' → logprob: -17.131715774536133
    5. 'tube' → logprob: -17.506715774536133
    6. '   ' → logprob: -17.506715774536133
    7. ' Tub' → logprob: -17.631715774536133
    8. 'T' → logprob: -18.381715774536133
    9. ' ' → logprob: -19.006715774536133
    10. 'Tape' → logprob: -19.506715774536133

Token 415: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. ''' → logprob: -16.12500762939453
    4. ' ('' → logprob: -16.37500762939453
    5. '(
' → logprob: -16.75000762939453
    6. '("' → logprob: -17.50000762939453
    7. '(('' → logprob: -17.50000762939453
    8. '(C' → logprob: -18.37500762939453
    9. ''C' → logprob: -19.12500762939453
    10. ''s' → logprob: -20.12500762939453

Token 416: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0002624086628202349
    2. ''C' → logprob: -8.250262260437012
    3. ''' → logprob: -14.000262260437012
    4. ' C' → logprob: -15.750262260437012
    5. '"C' → logprob: -16.250263214111328
    6. '')' → logprob: -17.500263214111328
    7. ')' → logprob: -19.625263214111328
    8. '`' → logprob: -19.625263214111328
    9. '   ' → logprob: -19.750263214111328
    10. '```' → logprob: -20.500263214111328

Token 417: '')


' (ID: 45781)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04864221438765526
    2. '')' → logprob: -3.048642158508301
    3. ')
' → logprob: -10.7986421585083
    4. '<|end|>' → logprob: -11.4236421585083
    5. '")' → logprob: -11.9236421585083
    6. '()' → logprob: -12.1736421585083
    7. '   ' → logprob: -12.4236421585083
    8. '')
' → logprob: -12.4236421585083
    9. '       ' → logprob: -13.7986421585083
    10. '`)' → logprob: -14.1736421585083

Token 418: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2623025178909302
    2. 'class' → logprob: -1.7623025178909302
    3. '<|end|>' → logprob: -3.0123023986816406
    4. '#' → logprob: -5.012302398681641
    5. '```' → logprob: -6.387302398681641
    6. 'from' → logprob: -7.512302398681641
    7. '<|end|>' → logprob: -7.637302398681641
    8. 'ball' → logprob: -8.01230239868164
    9. '   ' → logprob: -10.26230239868164
    10. '[' → logprob: -11.01230239868164

Token 419: ' Ball' (ID: 17943)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.21242426335811615
    2. 'Solver' → logprob: -2.4624242782592773
    3. 'Solution' → logprob: -3.8374242782592773
    4. 'Player' → logprob: -3.8374242782592773
    5. ' Game' → logprob: -4.087424278259277
    6. 'Stack' → logprob: -4.212424278259277
    7. 'Ball' → logprob: -4.337424278259277
    8. ' Solver' → logprob: -5.712424278259277
    9. 'Puzzle' → logprob: -5.837424278259277
    10. 'Queue' → logprob: -6.587424278259277

Token 420: 'Container' (ID: 5626)
  Prédit: 'Stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Stack' → logprob: -0.6106278896331787
    2. 'Sorter' → logprob: -2.2356278896331787
    3. 'Generator' → logprob: -2.8606278896331787
    4. 'Queue' → logprob: -3.2356278896331787
    5. 'Game' → logprob: -3.3606278896331787
    6. 's' → logprob: -3.3606278896331787
    7. ':' → logprob: -3.6106278896331787
    8. 'Picker' → logprob: -3.6106278896331787
    9. 'Drop' → logprob: -4.110628128051758
    10. 'Sequence' → logprob: -4.110628128051758

Token 421: 'Simulator' (ID: 120745)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015205761883407831
    2. ':
' → logprob: -6.50152063369751
    3. '(' → logprob: -12.251520156860352
    4. '(list' → logprob: -12.876520156860352
    5. '(object' → logprob: -13.001520156860352
    6. ':

' → logprob: -13.251520156860352
    7. '(B' → logprob: -13.626520156860352
    8. '<|end|>' → logprob: -13.751520156860352
    9. ':list' → logprob: -14.376520156860352
    10. '):' → logprob: -14.626520156860352

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013500562636181712
    2. ':
' → logprob: -9.00013542175293
    3. '(' → logprob: -12.12513542175293
    4. ' :' → logprob: -12.75013542175293
    5. ':def' → logprob: -14.12513542175293
    6. '():' → logprob: -14.50013542175293
    7. '):' → logprob: -15.00013542175293
    8. '>:' → logprob: -15.12513542175293
    9. ':**' → logprob: -15.12513542175293
    10. '<|end|>' → logprob: -15.50013542175293

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008805541321635246
    2. ' def' → logprob: -4.758805751800537
    3. 'def' → logprob: -9.258805274963379
    4. 'class' → logprob: -9.758805274963379
    5. ' class' → logprob: -10.383805274963379
    6. '	def' → logprob: -12.883805274963379
    7. '   ' → logprob: -14.008805274963379
    8. ':' → logprob: -14.383805274963379
    9. '<|end|>' → logprob: -15.133805274963379
    10. '```' → logprob: -15.133805274963379

Token 424: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.32044827938079834
    2. 'def' (adapté à ' def') → logprob: -1.3204482793807983
    3. 'class' → logprob: -5.195448398590088
    4. '   ' → logprob: -6.445448398590088
    5. ' class' → logprob: -11.32044792175293
    6. '```' → logprob: -11.57044792175293
    7. '__' → logprob: -12.82044792175293
    8. ' __' → logprob: -12.82044792175293
    9. 'import' → logprob: -13.32044792175293
    10. 'from' → logprob: -13.69544792175293

Token 425: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11303749680519104
    2. '__' → logprob: -2.863037586212158
    3. 'init' → logprob: -3.113037586212158
    4. '_init' → logprob: -5.488037586212158
    5. ' init' → logprob: -7.238037586212158
    6. ' def' → logprob: -8.113037109375
    7. 'def' → logprob: -8.863037109375
    8. '```' → logprob: -11.738037109375
    9. '_' → logprob: -12.488037109375
    10. ' ' → logprob: -12.488037109375

Token 426: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.375
    3. ' init' → logprob: -17.5
    4. '_init' → logprob: -18.875
    5. '(init' → logprob: -19.375
    6. 'ini' → logprob: -20.75
    7. '	init' → logprob: -21.375
    8. 'inite' → logprob: -21.625
    9. 'int' → logprob: -22.0
    10. '-init' → logprob: -22.625

Token 427: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005570820067077875
    2. '__' → logprob: -7.500556945800781
    3. '__(
' → logprob: -12.500556945800781
    4. '__((' → logprob: -15.125556945800781
    5. '__('' → logprob: -17.37555694580078
    6. '__("' → logprob: -18.00055694580078
    7. '__[' → logprob: -18.37555694580078
    8. '_(' → logprob: -18.62555694580078
    9. '(self' → logprob: -18.87555694580078
    10. '__(*' → logprob: -19.00055694580078

Token 428: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.195421494543552e-05
    2. ' self' → logprob: -9.75007152557373
    3. '
' → logprob: -11.75007152557373
    4. ')' → logprob: -13.12507152557373
    5. '(self' → logprob: -13.12507152557373
    6. '   ' → logprob: -14.00007152557373
    7. ')(' → logprob: -14.87507152557373
    8. '):
' → logprob: -16.250072479248047
    9. '       ' → logprob: -16.250072479248047
    10. '```' → logprob: -16.500072479248047

Token 429: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.79696124792099
    2. 'self' → logprob: -0.92196124792099
    3. '(self' → logprob: -2.0469613075256348
    4. ',' → logprob: -4.296961307525635
    5. ')(' → logprob: -6.671961307525635
    6. '       ' → logprob: -6.671961307525635
    7. '   ' → logprob: -6.671961307525635
    8. ' self' → logprob: -6.796961307525635
    9. ' (' → logprob: -6.921961307525635
    10. '__(
' → logprob: -7.046961307525635

Token 430: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005579386837780476
    2. '       ' → logprob: -5.505579471588135
    3. ' self' → logprob: -6.505579471588135
    4. '   ' → logprob: -12.380578994750977
    5. '(self' → logprob: -15.380578994750977
    6. '	self' → logprob: -15.755578994750977
    7. ' ' → logprob: -16.505578994750977
    8. '
' → logprob: -16.880578994750977
    9. '           ' → logprob: -17.005578994750977
    10. '```' → logprob: -17.380578994750977

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005987849435769022
    2. '       ' → logprob: -7.500598907470703
    3. ' self' → logprob: -10.000598907470703
    4. '   ' → logprob: -15.625598907470703
    5. '
' → logprob: -16.000598907470703
    6. 'class' → logprob: -16.875598907470703
    7. 'super' → logprob: -17.000598907470703
    8. '(self' → logprob: -17.625598907470703
    9. 'from' → logprob: -19.000598907470703
    10. '#' → logprob: -19.000598907470703

Token 432: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.0017088521271944046
    2. '.ball' → logprob: -7.001708984375
    3. '.b' → logprob: -7.501708984375
    4. '.stack' → logprob: -9.626708984375
    5. 'board' → logprob: -10.251708984375
    6. '.current' → logprob: -10.501708984375
    7. 'class' → logprob: -11.251708984375
    8. '.queue' → logprob: -11.626708984375
    9. '.initial' → logprob: -11.751708984375
    10. ' .' → logprob: -11.876708984375

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165744185447693
    2. '=' → logprob: -4.264165878295898
    3. ':' → logprob: -13.264165878295898
    4. ' ' → logprob: -15.014165878295898
    5. '   ' → logprob: -16.1391658782959
    6. ')' → logprob: -17.1391658782959
    7. '  ' → logprob: -17.6391658782959
    8. '.' → logprob: -17.7641658782959
    9. ' =
' → logprob: -18.3891658782959
    10. '    ' → logprob: -18.7641658782959

Token 434: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.005233882926404476
    2. ' Board' → logprob: -5.2552337646484375
    3. 'Ball' → logprob: -16.380233764648438
    4. '(Board' → logprob: -19.005233764648438
    5. '   ' → logprob: -19.505233764648438
    6. '_board' → logprob: -20.880233764648438
    7. 'Box' → logprob: -20.880233764648438
    8. ' ' → logprob: -20.880233764648438
    9. 'board' → logprob: -20.880233764648438
    10. 'B' → logprob: -21.380233764648438

Token 435: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8840031027793884
    2. '       ' → logprob: -1.2590031623840332
    3. '
' → logprob: -1.6340031623840332
    4. '<|end|>' → logprob: -2.759003162384033
    5. '()' → logprob: -3.759003162384033
    6. '()
' → logprob: -4.634003162384033
    7. 'def' → logprob: -5.009003162384033
    8. '(' → logprob: -6.384003162384033
    9. '<|end|>' → logprob: -6.759003162384033
    10. '(
' → logprob: -7.259003162384033

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007098094210959971
    2. 'def' → logprob: -7.3757100105285645
    3. '
' → logprob: -9.875709533691406
    4. ' def' → logprob: -11.125709533691406
    5. '       ' → logprob: -11.250709533691406
    6. '    
' → logprob: -13.375709533691406
    7. '```' → logprob: -13.875709533691406
    8. '<|end|>' → logprob: -14.250709533691406
    9. '	def' → logprob: -14.875709533691406
    10. 'self' → logprob: -15.625709533691406

Token 437: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.36574100604048e-06
    2. ' def' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.625004768371582
    4. 'from' → logprob: -16.375003814697266
    5. '
' → logprob: -19.000003814697266
    6. 'class' → logprob: -20.375003814697266
    7. '	def' → logprob: -21.125003814697266
    8. '```' → logprob: -22.000003814697266
    9. ' ' → logprob: -22.750003814697266
    10. '    
' → logprob: -22.750003814697266

Token 438: ' simulate' (ID: 66687)
  Prédit: 'drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'drop' → logprob: -0.5686228275299072
    2. ' drop' → logprob: -1.0686228275299072
    3. 'simulate' → logprob: -3.1936228275299072
    4. ' simulate' → logprob: -4.068622589111328
    5. 'reset' → logprob: -4.318622589111328
    6. ' reset' → logprob: -5.068622589111328
    7. ' run' → logprob: -5.193622589111328
    8. 'run' → logprob: -5.818622589111328
    9. 'def' → logprob: -6.693622589111328
    10. 'process' → logprob: -7.443622589111328

Token 439: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006799210328608751
    2. '(' → logprob: -5.006799221038818
    3. ' (' → logprob: -10.00679874420166
    4. '_drop' → logprob: -10.50679874420166
    5. '_ball' → logprob: -12.00679874420166
    6. '_(' → logprob: -13.63179874420166
    7. 'self' → logprob: -14.25679874420166
    8. '_next' → logprob: -14.38179874420166
    9. '_sequence' → logprob: -14.63179874420166
    10. '(
' → logprob: -14.75679874420166

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.086377814412117
    2. '(self' → logprob: -3.2113778591156006
    3. 'self' → logprob: -4.2113776206970215
    4. '_sequence' → logprob: -4.5863776206970215
    5. '_' → logprob: -5.5863776206970215
    6. '_drop' → logprob: -5.8363776206970215
    7. ' ,' → logprob: -6.4613776206970215
    8. ')' → logprob: -6.7113776206970215
    9. ')(' → logprob: -6.8363776206970215
    10. '_ball' → logprob: -6.8363776206970215

Token 441: ' balls' (ID: 32657)
  Prédit: 'balls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balls' → logprob: -0.08100264519453049
    2. ' balls' → logprob: -2.706002712249756
    3. 'self' → logprob: -4.956002712249756
    4. 'ball' → logprob: -5.831002712249756
    5. ' self' → logprob: -6.956002712249756
    6. ' ball' → logprob: -10.581002235412598
    7. '   ' → logprob: -10.831002235412598
    8. ' sequence' → logprob: -12.331002235412598
    9. '       ' → logprob: -12.456002235412598
    10. ')' → logprob: -12.456002235412598

Token 442: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.796184723294573e-06
    2. '):' → logprob: -12.375005722045898
    3. 'self' → logprob: -14.750005722045898
    4. ' :' → logprob: -14.750005722045898
    5. '   ' → logprob: -14.875005722045898
    6. '       ' → logprob: -15.875005722045898
    7. '):
' → logprob: -16.0000057220459
    8. ':list' → logprob: -16.1250057220459
    9. '```' → logprob: -17.2500057220459
    10. ')' → logprob: -17.2500057220459

Token 443: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20147815346717834
    2. ' list' → logprob: -1.701478123664856
    3. '[list' → logprob: -10.451478004455566
    4. 'List' → logprob: -10.826478004455566
    5. '       ' → logprob: -11.701478004455566
    6. '   ' → logprob: -12.576478004455566
    7. ')' → logprob: -12.576478004455566
    8. ':list' → logprob: -14.951478004455566
    9. '           ' → logprob: -15.951478004455566
    10. '(list' → logprob: -16.076478958129883

Token 444: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.036524842376821e-05
    2. '[int' → logprob: -10.125040054321289
    3. ')' → logprob: -16.37504005432129
    4. '[
' → logprob: -16.50004005432129
    5. ':' → logprob: -17.50004005432129
    6. ' [' → logprob: -18.12504005432129
    7. 'Ball' → logprob: -18.87504005432129
    8. '):
' → logprob: -18.87504005432129
    9. '   ' → logprob: -18.87504005432129
    10. '):' → logprob: -19.37504005432129

Token 445: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001316904672421515
    2. ']):
' → logprob: -6.751317024230957
    3. '[int' → logprob: -9.501317024230957
    4. ')' → logprob: -10.126317024230957
    5. ']' → logprob: -11.376317024230957
    6. '[' → logprob: -11.376317024230957
    7. ' ])' → logprob: -12.626317024230957
    8. ']):' → logprob: -13.001317024230957
    9. '):
' → logprob: -13.501317024230957
    10. '],' → logprob: -13.626317024230957

Token 446: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8303951025009155
    2. ' ->' → logprob: -1.2053951025009155
    3. '->' → logprob: -1.4553951025009155
    4. ':
' → logprob: -4.330395221710205
    5. ')' → logprob: -4.830395221710205
    6. '   ' → logprob: -5.330395221710205
    7. '       ' → logprob: -5.580395221710205
    8. ')->' → logprob: -6.705395221710205
    9. '()' → logprob: -9.830394744873047
    10. '[' → logprob: -10.455394744873047

Token 447: ' str' (ID: 989)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.024720674380660057
    2. 'list' → logprob: -3.8997206687927246
    3. ' bool' → logprob: -5.649720668792725
    4. 'None' → logprob: -8.149721145629883
    5. 'tuple' → logprob: -8.899721145629883
    6. ' list' → logprob: -9.149721145629883
    7. 'int' → logprob: -9.649721145629883
    8. 'str' → logprob: -10.524721145629883
    9. 'dict' → logprob: -11.899721145629883
    10. ' None' → logprob: -12.649721145629883

Token 448: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9273456335067749
    2. '       ' → logprob: -1.427345633506775
    3. '(self' → logprob: -1.552345633506775
    4. ':' → logprob: -1.927345633506775
    5. '   ' → logprob: -5.9273457527160645
    6. '(' → logprob: -6.5523457527160645
    7. '(
' → logprob: -6.9273457527160645
    8. '        
' → logprob: -7.3023457527160645
    9. '):
' → logprob: -7.6773457527160645
    10. '():
' → logprob: -7.9273457527160645

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010807292710524052
    2. 'result' → logprob: -10.250107765197754
    3. '
' → logprob: -10.375107765197754
    4. '        
' → logprob: -11.500107765197754
    5. '```' → logprob: -12.250107765197754
    6. ' for' → logprob: -12.500107765197754
    7. '"' → logprob: -13.000107765197754
    8. ' result' → logprob: -13.125107765197754
    9. 'output' → logprob: -13.250107765197754
    10. '\n' → logprob: -13.250107765197754

Token 450: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5308301448822021
    2. '       ' → logprob: -1.2808301448822021
    3. 'self' (adapté à ' self') → logprob: -2.405830144882202
    4. ' for' → logprob: -3.280830144882202
    5. 'result' → logprob: -6.030830383300781
    6. ' self' → logprob: -6.405830383300781
    7. '```' → logprob: -7.405830383300781
    8. '
' → logprob: -7.530830383300781
    9. '#' → logprob: -8.530830383300781
    10. 'current' → logprob: -8.905830383300781

Token 451: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.0002099773846566677
    2. '.reset' → logprob: -9.00020980834961
    3. '.' → logprob: -9.50020980834961
    4. ' .' → logprob: -12.25020980834961
    5. 'board' → logprob: -12.75020980834961
    6. '`.' → logprob: -13.50020980834961
    7. '	board' → logprob: -13.75020980834961
    8. '   ' → logprob: -15.25020980834961
    9. '.ball' → logprob: -15.87520980834961
    10. ').' → logprob: -16.00020980834961

Token 452: '.reset' (ID: 25315)
  Prédit: '.reset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reset' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -14.625000953674316
    3. '.restart' → logprob: -14.625000953674316
    4. ' .' → logprob: -16.875001907348633
    5. '.Reset' → logprob: -19.125001907348633
    6. 'reset' → logprob: -19.500001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '.reload' → logprob: -20.375001907348633
    9. '.refresh' → logprob: -21.000001907348633
    10. '	reset' → logprob: -21.250001907348633

Token 453: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1150897964835167
    2. '
' → logprob: -2.2400898933410645
    3. 'for' → logprob: -6.8650898933410645
    4. '()
' → logprob: -7.4900898933410645
    5. ' for' → logprob: -7.4900898933410645
    6. '()' → logprob: -10.490089416503906
    7. '        
' → logprob: -10.490089416503906
    8. '   ' → logprob: -10.615089416503906
    9. '
' → logprob: -11.365089416503906
    10. '  
' → logprob: -13.240089416503906

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029064998030662537
    2. 'for' → logprob: -3.779064893722534
    3. ' for' → logprob: -5.404065132141113
    4. '
' → logprob: -6.654065132141113
    5. '   ' → logprob: -11.779065132141113
    6. '        
' → logprob: -12.154065132141113
    7. '```' → logprob: -13.779065132141113
    8. '	for' → logprob: -14.529065132141113
    9. '    
' → logprob: -14.779065132141113
    10. '  
' → logprob: -16.029064178466797

Token 455: ' ball' (ID: 7880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044223200529813766
    2. ' for' → logprob: -7.750442028045654
    3. '       ' → logprob: -11.375442504882812
    4. 'result' → logprob: -16.500442504882812
    5. '   ' → logprob: -17.875442504882812
    6. '
' → logprob: -18.125442504882812
    7. '```' → logprob: -18.375442504882812
    8. '        
' → logprob: -18.750442504882812
    9. '``' → logprob: -20.250442504882812
    10. '	for' → logprob: -20.625442504882812

Token 456: '_objects' (ID: 59877)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.051271192729473114
    2. '_objects' → logprob: -3.9262712001800537
    3. '_sequence' → logprob: -4.801270961761475
    4. '_list' → logprob: -4.801270961761475
    5. '_s' → logprob: -5.801270961761475
    6. '_container' → logprob: -6.176270961761475
    7. '_objs' → logprob: -6.676270961761475
    8. '_number' → logprob: -6.801270961761475
    9. ' =' → logprob: -6.926270961761475
    10. '_set' → logprob: -7.301270961761475

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004080062732100487
    2. '=' → logprob: -5.504080295562744
    3. ':' → logprob: -14.004079818725586
    4. 's' → logprob: -14.129079818725586
    5. '=[]' → logprob: -17.379079818725586
    6. ' =[' → logprob: -17.754079818725586
    7. ' ' → logprob: -17.879079818725586
    8. '[:]' → logprob: -17.879079818725586
    9. '=[' → logprob: -18.504079818725586
    10. '   ' → logprob: -18.879079818725586

Token 458: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07975158095359802
    2. ' [' → logprob: -2.579751491546631
    3. '[B' → logprob: -7.079751491546631
    4. '[list' → logprob: -11.954751968383789
    5. '[self' → logprob: -12.079751968383789
    6. '[List' → logprob: -12.454751968383789
    7. '[int' → logprob: -13.829751968383789
    8. '[b' → logprob: -13.954751968383789
    9. '   ' → logprob: -14.329751968383789
    10. '[class' → logprob: -14.829751968383789

Token 459: 'Ball' (ID: 35006)
  Prédit: 'Ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ball' → logprob: -4.320199877838604e-07
    2. ' Ball' → logprob: -14.75
    3. '   ' → logprob: -23.375
    4. 'Balls' → logprob: -24.0
    5. 'Bird' → logprob: -24.5
    6. '_ball' → logprob: -24.75
    7. 'Bill' → logprob: -25.125
    8. '       ' → logprob: -25.375
    9. 'Basket' → logprob: -25.875
    10. '
' → logprob: -26.125

Token 460: '(num' (ID: 15828)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.8171573281288147
    2. '(n' → logprob: -1.06715726852417
    3. '(num' → logprob: -1.56715726852417
    4. '(b' → logprob: -5.31715726852417
    5. '(ball' → logprob: -7.69215726852417
    6. '(i' → logprob: -8.192157745361328
    7. '(' → logprob: -10.567157745361328
    8. 'number' → logprob: -11.817157745361328
    9. 'num' → logprob: -11.942157745361328
    10. '(x' → logprob: -11.942157745361328

Token 461: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12088300287723541
    2. '(num' → logprob: -2.370882987976074
    3. '(n' → logprob: -4.870882987976074
    4. '=' → logprob: -4.995882987976074
    5. '=num' → logprob: -6.370882987976074
    6. '(b' → logprob: -6.495882987976074
    7. '(ball' → logprob: -6.495882987976074
    8. '(number' → logprob: -7.245882987976074
    9. '(i' → logprob: -9.120882987976074
    10. 'for' → logprob: -9.245882987976074

Token 462: ' for' (ID: 395)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.20427028834819794
    2. '(ball' → logprob: -2.079270362854004
    3. ' for' → logprob: -4.079270362854004
    4. '(number' → logprob: -4.204270362854004
    5. 'for' → logprob: -4.204270362854004
    6. '(n' → logprob: -5.204270362854004
    7. '(' → logprob: -5.579270362854004
    8. '(b' → logprob: -5.954270362854004
    9. ' (' → logprob: -8.079270362854004
    10. '(i' → logprob: -8.329270362854004

Token 463: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0067154900170862675
    2. ' num' → logprob: -5.006715297698975
    3. '	num' → logprob: -16.256715774536133
    4. ' ' → logprob: -18.881715774536133
    5. '_num' → logprob: -18.881715774536133
    6. '(num' → logprob: -19.131715774536133
    7. 'n' → logprob: -19.631715774536133
    8. ' ' → logprob: -19.756715774536133
    9. 'number' → logprob: -20.131715774536133
    10. ',num' → logprob: -20.256715774536133

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027775276452302933
    2. 'in' → logprob: -3.777775287628174
    3. 'num' → logprob: -5.527775287628174
    4. ' num' → logprob: -7.527775287628174
    5. ':num' → logprob: -13.402774810791016
    6. ',num' → logprob: -13.652774810791016
    7. ' ' → logprob: -13.902774810791016
    8. '(num' → logprob: -14.402774810791016
    9. 'ball' → logprob: -14.527774810791016
    10. '_num' → logprob: -14.652774810791016

Token 465: ' balls' (ID: 32657)
  Prédit: 'balls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balls' → logprob: -0.0017151589272543788
    2. ' balls' → logprob: -6.376715183258057
    3. 'ball' → logprob: -11.251714706420898
    4. '   ' → logprob: -17.5017147064209
    5. 'b' → logprob: -17.8767147064209
    6. 'Balls' → logprob: -18.1267147064209
    7. ' ' → logprob: -19.1267147064209
    8. '```' → logprob: -19.5017147064209
    9. 'bars' → logprob: -19.6267147064209
    10. 'numbers' → logprob: -19.6267147064209

Token 466: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008160584256984293
    2. '       ' → logprob: -7.7508158683776855
    3. ']
' → logprob: -8.500816345214844
    4. ' ]' → logprob: -8.625816345214844
    5. ']

' → logprob: -14.125816345214844
    6. '   ' → logprob: -14.250816345214844
    7. ']
' → logprob: -14.500816345214844
    8. ' ]
' → logprob: -15.500816345214844
    9. ')' → logprob: -15.750816345214844
    10. ')]' → logprob: -16.375816345214844

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15318359434604645
    2. 'for' → logprob: -2.403183698654175
    3. ' for' → logprob: -3.028183698654175
    4. '
' → logprob: -5.778183460235596
    5. '```' → logprob: -10.028183937072754
    6. '        
' → logprob: -10.153183937072754
    7. '   ' → logprob: -11.778183937072754
    8. '	for' → logprob: -13.028183937072754
    9. '<|end|>' → logprob: -13.278183937072754
    10. '' → logprob: -13.778183937072754

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.6240566083070007e-06
    2. '       ' → logprob: -13.750001907348633
    3. ' for' → logprob: -14.500001907348633
    4. 'result' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '```' → logprob: -19.625001907348633
    7. '        
' → logprob: -20.875001907348633
    8. '
' → logprob: -20.875001907348633
    9. 'results' → logprob: -21.000001907348633
    10. '``' → logprob: -22.000001907348633

Token 469: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.1426982879638672
    2. ' ball' → logprob: -2.017698287963867
    3. 'num' → logprob: -11.142698287963867
    4. '   ' → logprob: -12.517698287963867
    5. ' ' → logprob: -13.517698287963867
    6. 'b' → logprob: -13.892698287963867
    7. ' num' → logprob: -13.892698287963867
    8. '(ball' → logprob: -14.892698287963867
    9. '  ' → logprob: -15.142698287963867
    10. 'number' → logprob: -15.392698287963867

Token 470: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054892659187316895
    2. 'in' → logprob: -2.9298925399780273
    3. '_in' → logprob: -12.804892539978027
    4. '	in' → logprob: -12.929892539978027
    5. ' ' → logprob: -13.429892539978027
    6. ')' → logprob: -13.804892539978027
    7. ',' → logprob: -14.929892539978027
    8. '```' → logprob: -14.929892539978027
    9. 'import' → logprob: -15.054892539978027
    10. '   ' → logprob: -15.304892539978027

Token 471: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.0001234428636962548
    2. ' ball' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.750123977661133
    4. '(ball' → logprob: -20.125123977661133
    5. ' ' → logprob: -20.250123977661133
    6. '.ball' → logprob: -21.125123977661133
    7. 'balls' → logprob: -21.375123977661133
    8. '           ' → logprob: -22.000123977661133
    9. '_ball' → logprob: -22.125123977661133
    10. '  ' → logprob: -22.125123977661133

Token 472: '_objects' (ID: 59877)
  Prédit: '_objects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_objects' → logprob: -7.896309739408025e-07
    2. 's' → logprob: -15.375000953674316
    3. '_object' → logprob: -15.500000953674316
    4. 'Objects' → logprob: -15.750000953674316
    5. '_' → logprob: -16.375
    6. 'objects' → logprob: -16.625
    7. '_objs' → logprob: -17.625
    8. '.objects' → logprob: -18.5
    9. ':' → logprob: -19.25
    10. '_.' → logprob: -19.5

Token 473: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07028640061616898
    2. ':
' → logprob: -2.695286512374878
    3. '       ' → logprob: -8.445286750793457
    4. '           ' → logprob: -9.945286750793457
    5. ',' → logprob: -10.695286750793457
    6. '):
' → logprob: -10.820286750793457
    7. '<|end|>' → logprob: -11.570286750793457
    8. '):' → logprob: -11.820286750793457
    9. '<|end|>' → logprob: -12.070286750793457
    10. ':

' → logprob: -12.320286750793457

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002574590500444174
    2. ' if' → logprob: -6.252574443817139
    3. 'if' → logprob: -7.377574443817139
    4. '```' → logprob: -11.127574920654297
    5. '
' → logprob: -13.127574920654297
    6. '            
' → logprob: -13.252574920654297
    7. '          ' → logprob: -14.127574920654297
    8. '       ' → logprob: -14.252574920654297
    9. '	       ' → logprob: -16.002574920654297
    10. '   ' → logprob: -16.127574920654297

Token 475: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006984845269471407
    2. ' if' → logprob: -5.006984710693359
    3. '           ' → logprob: -8.25698471069336
    4. 'success' → logprob: -12.25698471069336
    5. 'placed' → logprob: -12.50698471069336
    6. '```' → logprob: -13.88198471069336
    7. '
' → logprob: -15.00698471069336
    8. '       ' → logprob: -16.00698471069336
    9. ' placed' → logprob: -16.88198471069336
    10. 'result' → logprob: -17.50698471069336

Token 476: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.38687410950660706
    2. 'not' → logprob: -1.1368740797042847
    3. '
' → logprob: -13.636874198913574
    4. '           ' → logprob: -14.136874198913574
    5. '!' → logprob: -15.011874198913574
    6. '   ' → logprob: -15.261874198913574
    7. '(not' → logprob: -15.636874198913574
    8. 'self' → logprob: -15.761874198913574
    9. '       ' → logprob: -16.136873245239258
    10. '	not' → logprob: -16.636873245239258

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234002135694027
    2. ' self' → logprob: -5.2552337646484375
    3. '(self' → logprob: -15.505233764648438
    4. '           ' → logprob: -17.255233764648438
    5. '       ' → logprob: -18.505233764648438
    6. '[self' → logprob: -18.880233764648438
    7. '	self' → logprob: -19.255233764648438
    8. '   ' → logprob: -19.505233764648438
    9. ' ' → logprob: -19.630233764648438
    10. '`' → logprob: -19.880233764648438

Token 478: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -1.2664456789934775e-06
    2. 'board' → logprob: -14.500000953674316
    3. '.' → logprob: -15.375000953674316
    4. '.ball' → logprob: -15.500000953674316
    5. ' .' → logprob: -15.750000953674316
    6. '	board' → logprob: -16.125001907348633
    7. '.b' → logprob: -18.000001907348633
    8. '(board' → logprob: -18.250001907348633
    9. ' board' → logprob: -18.375001907348633
    10. '.bo' → logprob: -19.500001907348633

Token 479: '.drop' (ID: 35232)
  Prédit: '.drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.drop' → logprob: -1.0206720617134124e-05
    2. 'drop' → logprob: -11.62501049041748
    3. '.' → logprob: -13.75001049041748
    4. ' drop' → logprob: -16.250009536743164
    5. ' .' → logprob: -17.125009536743164
    6. '.dropout' → logprob: -17.500009536743164
    7. '.Drop' → logprob: -18.250009536743164
    8. '   ' → logprob: -18.625009536743164
    9. 'DROP' → logprob: -19.375009536743164
    10. '-drop' → logprob: -19.375009536743164

Token 480: '_ball' (ID: 138751)
  Prédit: '_ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ball' → logprob: -2.2200749754119897e-06
    2. '(ball' → logprob: -13.125001907348633
    3. 'ball' → logprob: -16.000001907348633
    4. '_' → logprob: -16.625001907348633
    5. '(_' → logprob: -17.375001907348633
    6. '_b' → logprob: -17.875001907348633
    7. '_bal' → logprob: -18.125001907348633
    8. '```' → logprob: -19.000001907348633
    9. ' _' → logprob: -19.125001907348633
    10. '(' → logprob: -19.500001907348633

Token 481: '(ball' (ID: 170062)
  Prédit: '(ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ball' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. '(b' → logprob: -17.375001907348633
    4. ' (' → logprob: -18.750001907348633
    5. '(
' → logprob: -20.000001907348633
    6. 'ball' → logprob: -21.125001907348633
    7. '(bar' → logprob: -21.125001907348633
    8. '(bank' → logprob: -21.625001907348633
    9. '.ball' → logprob: -21.875001907348633
    10. '(box' → logprob: -22.000001907348633

Token 482: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741263687610626
    2. '):
' → logprob: -0.9741263389587402
    3. ')' → logprob: -10.599126815795898
    4. '):
' → logprob: -10.974126815795898
    5. '(ball' → logprob: -12.724126815795898
    6. ':' → logprob: -13.349126815795898
    7. '):

' → logprob: -13.849126815795898
    8. ' ):' → logprob: -14.224126815795898
    9. ' ):
' → logprob: -14.974126815795898
    10. '           ' → logprob: -15.474126815795898

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0039008883759379387
    2. ' return' → logprob: -6.12890100479126
    3. '           ' → logprob: -6.75390100479126
    4. 'return' → logprob: -7.62890100479126
    5. '
' → logprob: -9.878900527954102
    6. ' raise' → logprob: -12.878900527954102
    7. 'raise' → logprob: -13.128900527954102
    8. '                
' → logprob: -13.253900527954102
    9. '                   ' → logprob: -13.753900527954102
    10. '            
' → logprob: -14.253900527954102

Token 484: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.479493111371994
    2. 'return' (adapté à ' return') → logprob: -0.9794931411743164
    3. '               ' → logprob: -5.354493141174316
    4. '                   ' → logprob: -7.479493141174316
    5. '           ' → logprob: -9.354493141174316
    6. 'raise' → logprob: -11.854493141174316
    7. 'break' → logprob: -12.229493141174316
    8. ' break' → logprob: -12.229493141174316
    9. ' raise' → logprob: -13.229493141174316
    10. '   ' → logprob: -13.604493141174316

Token 485: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007601061835885048
    2. '"No' → logprob: -5.132601261138916
    3. ''' → logprob: -6.632601261138916
    4. ' "' → logprob: -8.757600784301758
    5. '"N' → logprob: -10.257600784301758
    6. '"A' → logprob: -10.757600784301758
    7. '"The' → logprob: -11.007600784301758
    8. '"-' → logprob: -11.507600784301758
    9. '"C' → logprob: -11.507600784301758
    10. '"M' → logprob: -11.632600784301758

Token 486: 'NO' (ID: 14695)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.20507699251174927
    2. 'NO' → logprob: -2.4550769329071045
    3. 'Cannot' → logprob: -4.205077171325684
    4. 'im' → logprob: -4.330077171325684
    5. 'Impossible' → logprob: -4.455077171325684
    6. 'Game' → logprob: -4.580077171325684
    7. 'NG' → logprob: -4.955077171325684
    8. 'no' → logprob: -5.205077171325684
    9. 'False' → logprob: -5.580077171325684
    10. 'KO' → logprob: -5.705077171325684

Token 487: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0654015988111496
    2. '\n' → logprob: -2.940401554107666
    3. '"
' → logprob: -4.565401554107666
    4. ' "' → logprob: -10.065402030944824
    5. '"
' → logprob: -11.315402030944824
    6. '"\' → logprob: -13.190402030944824
    7. ' "
' → logprob: -14.565402030944824
    8. '"

' → logprob: -15.065402030944824
    9. ''' → logprob: -15.565402030944824
    10. '\' → logprob: -15.940402030944824

Token 488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013154871703591198
    2. '
' → logprob: -9.250131607055664
    3. '        
' → logprob: -10.375131607055664
    4. '    
' → logprob: -13.375131607055664
    5. '  
' → logprob: -14.625131607055664
    6. '      ' → logprob: -14.625131607055664
    7. ' return' → logprob: -15.250131607055664
    8. '"' → logprob: -15.250131607055664
    9. '   ' → logprob: -15.375131607055664
    10. '       
' → logprob: -15.375131607055664

Token 489: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5762202739715576
    2. 'return' (adapté à ' return') → logprob: -0.8262202739715576
    3. ' return' → logprob: -8.201220512390137
    4. '	return' → logprob: -12.951220512390137
    5. '
' → logprob: -13.076220512390137
    6. '   ' → logprob: -13.326220512390137
    7. '```' → logprob: -16.20121955871582
    8. 'eturn' → logprob: -17.07621955871582
    9. '           ' → logprob: -17.07621955871582
    10. '        
' → logprob: -17.32621955871582

Token 490: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023245595395565033
    2. ' "' → logprob: -3.7732455730438232
    3. ''' → logprob: -16.273244857788086
    4. '
' → logprob: -17.523244857788086
    5. '   ' → logprob: -17.773244857788086
    6. ' ' → logprob: -17.898244857788086
    7. '"No' → logprob: -18.023244857788086
    8. '("' → logprob: -18.148244857788086
    9. '	' → logprob: -18.648244857788086
    10. '"A' → logprob: -18.773244857788086

Token 491: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.023248156532645226
    2. '"' → logprob: -3.7732481956481934
    3. 'Yes' → logprob: -13.648247718811035
    4. ''' → logprob: -13.898247718811035
    5. 'OK' → logprob: -15.398247718811035
    6. ' YES' → logprob: -16.14824867248535
    7. '\"' → logprob: -16.77324867248535
    8. '""' → logprob: -18.02324867248535
    9. 'yes' → logprob: -18.39824867248535
    10. 'YE' → logprob: -18.39824867248535

Token 492: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24086827039718628
    2. '
' → logprob: -2.490868330001831
    3. '<|end|>' → logprob: -2.615868330001831
    4. '\n' → logprob: -2.990868330001831
    5. '```' → logprob: -4.865868091583252
    6. '

' → logprob: -9.74086856842041
    7. '<|end|>' → logprob: -10.36586856842041
    8. '"
' → logprob: -11.11586856842041
    9. '")' → logprob: -11.49086856842041
    10. ''' → logprob: -11.74086856842041

Token 493: 'class' (ID: 1444)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.14022262394428253
    2. '#' → logprob: -2.1402225494384766
    3. 'ball' → logprob: -5.515222549438477
    4. 'if' → logprob: -5.515222549438477
    5. 'def' → logprob: -5.765222549438477
    6. 'b' → logprob: -8.265222549438477
    7. 'from' → logprob: -8.265222549438477
    8. '<|end|>' → logprob: -8.390222549438477
    9. '[' → logprob: -8.640222549438477
    10. 'a' → logprob: -8.765222549438477

Token 494: ' Input' (ID: 10090)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.44366255402565
    2. 'Ball' → logprob: -1.8186625242233276
    3. 'Test' → logprob: -3.193662643432617
    4. 'Solver' → logprob: -3.318662643432617
    5. 'Game' → logprob: -3.443662643432617
    6. 'Tube' → logprob: -3.943662643432617
    7. ' Solution' → logprob: -4.068662643432617
    8. 'Container' → logprob: -4.693662643432617
    9. 'Input' → logprob: -5.193662643432617
    10. 'Simulator' → logprob: -5.193662643432617

Token 495: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.6497447490692139
    2. 'Handler' → logprob: -1.0247447490692139
    3. 'Parser' → logprob: -2.774744749069214
    4. 'Processor' → logprob: -3.149744749069214
    5. 'Data' → logprob: -5.149744987487793
    6. 'Output' → logprob: -5.899744987487793
    7. ':' → logprob: -5.899744987487793
    8. 'Manager' → logprob: -7.774744987487793
    9. 'Provider' → logprob: -7.899744987487793
    10. 'Validator' → logprob: -8.149744987487793

Token 496: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005616117268800735
    2. ':
' → logprob: -7.500561714172363
    3. ':def' → logprob: -12.250561714172363
    4. '):' → logprob: -14.000561714172363
    5. '():' → logprob: -14.125561714172363
    6. ' :' → logprob: -14.250561714172363
    7. '<|end|>' → logprob: -14.500561714172363
    8. ':

' → logprob: -15.250561714172363
    9. ':**' → logprob: -15.625561714172363
    10. '>:' → logprob: -15.625561714172363

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01523527316749096
    2. ' def' → logprob: -4.390235424041748
    3. ' class' → logprob: -6.765235424041748
    4. 'def' → logprob: -7.640235424041748
    5. 'class' → logprob: -7.640235424041748
    6. '<|end|>' → logprob: -8.01523494720459
    7. '```' → logprob: -9.26523494720459
    8. ':' → logprob: -9.64023494720459
    9. '    
' → logprob: -10.89023494720459
    10. '	def' → logprob: -11.26523494720459

Token 498: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08547718077898026
    2. ' def' → logprob: -2.835477113723755
    3. '@' → logprob: -3.835477113723755
    4. '   ' → logprob: -6.710477352142334
    5. ' @' → logprob: -7.835477352142334
    6. 'class' → logprob: -11.085476875305176
    7. '@dat' → logprob: -11.585476875305176
    8. 'from' → logprob: -12.835476875305176
    9. 'import' → logprob: -13.335476875305176
    10. '```' → logprob: -14.085476875305176

Token 499: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.3590618073940277
    2. ' def' → logprob: -1.48406183719635
    3. 'def' → logprob: -2.6090617179870605
    4. 'classmethod' → logprob: -6.8590617179870605
    5. ' __' → logprob: -9.109062194824219
    6. ' static' → logprob: -10.234062194824219
    7. 'static' → logprob: -10.359062194824219
    8. 'int' → logprob: -10.484062194824219
    9. 'init' → logprob: -10.859062194824219
    10. '__' → logprob: -10.984062194824219

Token 500: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00025073037249967456
    2. 'new' → logprob: -8.625250816345215
    3. 'staticmethod' → logprob: -10.500250816345215
    4. 'f' → logprob: -11.000250816345215
    5. 'def' → logprob: -11.625250816345215
    6. '__' → logprob: -11.750250816345215
    7. '```' → logprob: -12.500250816345215
    8. 'it' → logprob: -13.375250816345215
    9. 'class' → logprob: -13.875250816345215
    10. 'iter' → logprob: -14.125250816345215

Token 501: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20618650317192078
    2. '__(' → logprob: -1.7061865329742432
    3. '__(
' → logprob: -5.706186294555664
    4. '(' → logprob: -7.206186294555664
    5. 'self' → logprob: -8.331186294555664
    6. '__' → logprob: -9.456186294555664
    7. '(
' → logprob: -9.706186294555664
    8. ' (' → logprob: -9.831186294555664
    9. '   ' → logprob: -9.956186294555664
    10. '__((' → logprob: -10.456186294555664

Token 502: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006915230304002762
    2. ')' → logprob: -5.006915092468262
    3. '):
' → logprob: -9.131915092468262
    4. ' self' → logprob: -10.381915092468262
    5. '
' → logprob: -10.756915092468262
    6. '   ' → logprob: -11.006915092468262
    7. '(self' → logprob: -11.756915092468262
    8. '):' → logprob: -12.506915092468262
    9. ')(' → logprob: -12.881915092468262
    10. '	self' → logprob: -12.881915092468262

Token 503: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20658113062381744
    2. ',' → logprob: -2.7065811157226562
    3. '):
' → logprob: -2.7065811157226562
    4. 'self' → logprob: -2.9565811157226562
    5. '(self' → logprob: -7.581581115722656
    6. ':' → logprob: -8.831581115722656
    7. '():' → logprob: -8.956581115722656
    8. ')' → logprob: -9.081581115722656
    9. '   ' → logprob: -9.706581115722656
    10. '):
' → logprob: -10.331581115722656

Token 504: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17601469159126282
    2. ' input' → logprob: -1.9260146617889404
    3. ')' → logprob: -5.4260149002075195
    4. 'data' → logprob: -5.6760149002075195
    5. 'raw' → logprob: -6.4260149002075195
    6. 'lines' → logprob: -6.4260149002075195
    7. ' lines' → logprob: -6.9260149002075195
    8. ' raw' → logprob: -7.3010149002075195
    9. 'text' → logprob: -7.5510149002075195
    10. 'self' → logprob: -7.6760149002075195

Token 505: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.7557901740074158
    2. '_str' → logprob: -0.7557901740074158
    3. '_string' → logprob: -3.2557902336120605
    4. '_text' → logprob: -4.0057902336120605
    5. '_lines' → logprob: -5.8807902336120605
    6. ':' → logprob: -7.8807902336120605
    7. 'str' → logprob: -8.005789756774902
    8. 'data' → logprob: -8.255789756774902
    9. ':str' → logprob: -9.755789756774902
    10. '_strings' → logprob: -10.130789756774902

Token 506: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002570664044469595
    2. '):' → logprob: -6.502570629119873
    3. '):
' → logprob: -6.877570629119873
    4. '=None' → logprob: -10.877571105957031
    5. ' :' → logprob: -12.377571105957031
    6. ':list' → logprob: -12.377571105957031
    7. '   ' → logprob: -12.752571105957031
    8. '=' → logprob: -12.877571105957031
    9. ')' → logprob: -13.627571105957031
    10. ' ):' → logprob: -14.502571105957031

Token 507: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.007686366327106953
    2. ' list' → logprob: -4.882686138153076
    3. ')' → logprob: -10.382686614990234
    4. 'List' → logprob: -10.507686614990234
    5. '):
' → logprob: -11.507686614990234
    6. '   ' → logprob: -12.507686614990234
    7. '[list' → logprob: -12.632686614990234
    8. 'None' → logprob: -13.882686614990234
    9. ':list' → logprob: -14.257686614990234
    10. '):' → logprob: -14.257686614990234

Token 508: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.128163257315464e-07
    2. 'str' → logprob: -15.5
    3. ':str' → logprob: -17.0
    4. '):
' → logprob: -18.25
    5. '):' → logprob: -19.875
    6. ')' → logprob: -20.25
    7. '[
' → logprob: -20.375
    8. '(str' → logprob: -20.5
    9. ':' → logprob: -20.5
    10. '[' → logprob: -20.625

Token 509: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.12652084231376648
    2. ']):
' → logprob: -2.501520872116089
    3. '):' → logprob: -3.376520872116089
    4. ']' → logprob: -6.75152063369751
    5. '):
' → logprob: -7.00152063369751
    6. ')' → logprob: -8.376521110534668
    7. '])' → logprob: -8.501521110534668
    8. ']:' → logprob: -9.001521110534668
    9. ':' → logprob: -10.751521110534668
    10. '']):
' → logprob: -10.751521110534668

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21258947253227234
    2. '   ' → logprob: -1.8375895023345947
    3. 'def' → logprob: -3.9625895023345947
    4. 'self' → logprob: -4.587589263916016
    5. ' def' → logprob: -7.462589263916016
    6. ' self' → logprob: -7.587589263916016
    7. '	self' → logprob: -7.712589263916016
    8. '	def' → logprob: -8.087589263916016
    9. '<|end|>' → logprob: -8.087589263916016
    10. '    
' → logprob: -9.212589263916016

Token 511: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000913370808120817
    2. '       ' → logprob: -7.250913143157959
    3. ' self' → logprob: -8.500913619995117
    4. '	self' → logprob: -16.375913619995117
    5. '   ' → logprob: -17.625913619995117
    6. '(self' → logprob: -18.375913619995117
    7. '[self' → logprob: -19.000913619995117
    8. 'def' → logprob: -19.250913619995117
    9. ' ' → logprob: -19.750913619995117
    10. '=self' → logprob: -20.500913619995117

Token 512: '.lines' (ID: 96601)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.13470211625099182
    2. '.lines' → logprob: -2.134702205657959
    3. 'input' → logprob: -4.884702205657959
    4. 'lines' → logprob: -8.6347017288208
    5. ' input' → logprob: -13.2597017288208
    6. '	lines' → logprob: -13.6347017288208
    7. '.inputs' → logprob: -14.2597017288208
    8. '.raw' → logprob: -14.8847017288208
    9. ' lines' → logprob: -15.5097017288208
    10. '.line' → logprob: -16.009702682495117

Token 513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519392669200897
    2. ' =' → logprob: -1.501939296722412
    3. '   ' → logprob: -12.251938819885254
    4. '=self' → logprob: -13.376938819885254
    5. '<|end|>' → logprob: -14.001938819885254
    6. '    ' → logprob: -14.126938819885254
    7. ' ' → logprob: -14.876938819885254
    8. 'self' → logprob: -14.876938819885254
    9. '        ' → logprob: -15.251938819885254
    10. ' =
' → logprob: -15.376938819885254

Token 514: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007106438861228526
    2. ' input' → logprob: -7.250710487365723
    3. 'iter' → logprob: -14.375710487365723
    4. '[input' → logprob: -17.75071144104004
    5. '   ' → logprob: -18.00071144104004
    6. 'list' → logprob: -18.50071144104004
    7. '	input' → logprob: -18.75071144104004
    8. '[' → logprob: -19.25071144104004
    9. ' iter' → logprob: -19.25071144104004
    10. '(input' → logprob: -19.37571144104004

Token 515: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.1008713702030946e-06
    2. 'lines' → logprob: -13.750001907348633
    3. 's' → logprob: -15.125001907348633
    4. 'Lines' → logprob: -15.375001907348633
    5. '_tokens' → logprob: -15.625001907348633
    6. '```' → logprob: -16.500001907348633
    7. '_LINES' → logprob: -16.875001907348633
    8. '[' → logprob: -16.875001907348633
    9. '_strings' → logprob: -17.625001907348633
    10. '_' → logprob: -18.000001907348633

Token 516: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2837062180042267
    2. '   ' → logprob: -1.6587061882019043
    3. 'def' → logprob: -3.2837061882019043
    4. '<|end|>' → logprob: -4.533706188201904
    5. '    
' → logprob: -5.783706188201904
    6. ' def' → logprob: -6.158706188201904
    7. '<|end|>' → logprob: -6.533706188201904
    8. '	def' → logprob: -7.658706188201904
    9. '[' → logprob: -7.908706188201904
    10. '

' → logprob: -8.283706665039062

Token 517: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07388541847467422
    2. 'def' → logprob: -3.198885440826416
    3. '       ' → logprob: -4.448885440826416
    4. '
' → logprob: -4.448885440826416
    5. ' def' → logprob: -5.198885440826416
    6. '	def' → logprob: -7.573885440826416
    7. '<|end|>' → logprob: -7.698885440826416
    8. '    
' → logprob: -8.073884963989258
    9. '  ' → logprob: -9.698884963989258
    10. ' ' → logprob: -10.448884963989258

Token 518: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006073133088648319
    2. ' self' → logprob: -6.381072998046875
    3. 'def' → logprob: -6.506072998046875
    4. '
' → logprob: -6.756072998046875
    5. '       ' → logprob: -6.881072998046875
    6. '   ' → logprob: -7.381072998046875
    7. '	self' → logprob: -10.131072998046875
    8. '0' → logprob: -12.006072998046875
    9. ' def' → logprob: -13.006072998046875
    10. '@property' → logprob: -13.506072998046875

Token 519: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0418844148516655
    2. 'current' → logprob: -3.291884422302246
    3. '.index' → logprob: -6.291884422302246
    4. '_index' → logprob: -6.791884422302246
    5. '.current' → logprob: -7.291884422302246
    6. ' index' → logprob: -9.666884422302246
    7. '_current' → logprob: -9.916884422302246
    8. 'pointer' → logprob: -10.666884422302246
    9. 'pos' → logprob: -11.291884422302246
    10. 'position' → logprob: -11.291884422302246

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22589708864688873
    2. ' =' → logprob: -1.6008970737457275
    3. ' +=' → logprob: -8.225896835327148
    4. '+=' → logprob: -8.475896835327148
    5. '<|end|>' → logprob: -12.475896835327148
    6. ' ' → logprob: -12.850896835327148
    7. '_=' → logprob: -15.100896835327148
    8. '_' → logprob: -15.600896835327148
    9. '<|end|>' → logprob: -15.850896835327148
    10. ' -=' → logprob: -16.10089683532715

Token 521: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.50002098083496
    4. '۰' → logprob: -20.50002098083496
    5. '  ' → logprob: -21.87502098083496
    6. '=' → logprob: -22.50002098083496
    7. '<|end|>' → logprob: -22.62502098083496
    8. '       ' → logprob: -23.62502098083496
    9. '`' → logprob: -23.62502098083496
    10. '```' → logprob: -23.62502098083496

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.500036239624023
    4. '۰' → logprob: -17.500036239624023
    5. '1' → logprob: -17.750036239624023
    6. '```' → logprob: -19.187536239624023
    7. '  ' → logprob: -19.375036239624023
    8. '<|end|>' → logprob: -19.562536239624023
    9. '=' → logprob: -19.625036239624023
    10. '০' → logprob: -20.000036239624023

Token 523: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03119046241044998
    2. '<|end|>' → logprob: -4.281190395355225
    3. 'def' → logprob: -4.656190395355225
    4. ' def' → logprob: -5.906190395355225
    5. '   ' → logprob: -6.031190395355225
    6. '    
' → logprob: -7.031190395355225
    7. '<|end|>' → logprob: -7.156190395355225
    8. '

' → logprob: -8.406190872192383
    9. '  
' → logprob: -9.031190872192383
    10. '	def' → logprob: -9.406190872192383

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.188086986541748
    2. ' def' → logprob: -1.188086986541748
    3. 'def' → logprob: -1.313086986541748
    4. '
' → logprob: -2.188086986541748
    5. '    
' → logprob: -4.938086986541748
    6. '<|end|>' → logprob: -6.938086986541748
    7. '	def' → logprob: -7.813086986541748
    8. ' 
' → logprob: -8.188087463378906
    9. '  
' → logprob: -8.938087463378906
    10. '<|end|>' → logprob: -9.313087463378906

Token 525: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.73446003627032e-05
    2. ' def' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.875097274780273
    4. '	def' → logprob: -15.625097274780273
    5. '
' → logprob: -19.000097274780273
    6. '```' → logprob: -20.875097274780273
    7. '    
' → logprob: -21.750097274780273
    8. 'de' → logprob: -21.875097274780273
    9. ':def' → logprob: -22.125097274780273
    10. 'Def' → logprob: -22.125097274780273

Token 526: ' next' (ID: 2613)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.29180797934532166
    2. 'next' → logprob: -1.541808009147644
    3. 'read' → logprob: -3.2918078899383545
    4. 'parse' → logprob: -6.791808128356934
    5. ' has' → logprob: -7.541808128356934
    6. ' next' → logprob: -9.166808128356934
    7. 'get' → logprob: -9.666808128356934
    8. '__' → logprob: -10.666808128356934
    9. '_next' → logprob: -10.666808128356934
    10. 'def' → logprob: -10.791808128356934

Token 527: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5978689789772034
    2. '_token' → logprob: -0.8478689789772034
    3. '()' → logprob: -4.347868919372559
    4. '(self' → logprob: -4.847868919372559
    5. '(' → logprob: -7.722868919372559
    6. '_' → logprob: -8.472868919372559
    7. '_value' → logprob: -9.597868919372559
    8. 'line' → logprob: -9.847868919372559
    9. '_int' → logprob: -9.972868919372559
    10. 'token' → logprob: -10.597868919372559

Token 528: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00287358439527452
    2. '()' → logprob: -6.377873420715332
    3. '(' → logprob: -6.752873420715332
    4. 'self' → logprob: -13.252873420715332
    5. '(
' → logprob: -14.252873420715332
    6. '():' → logprob: -15.377873420715332
    7. ' (' → logprob: -15.377873420715332
    8. '(s' → logprob: -16.12787437438965
    9. '()(' → logprob: -16.37787437438965
    10. '()
' → logprob: -17.62787437438965

Token 529: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03663996234536171
    2. '):' → logprob: -3.536639928817749
    3. 'self' → logprob: -5.786640167236328
    4. '(self' → logprob: -5.911640167236328
    5. '):
' → logprob: -7.161640167236328
    6. ')->' → logprob: -8.161640167236328
    7. ')(' → logprob: -11.786640167236328
    8. ' )' → logprob: -12.411640167236328
    9. '   ' → logprob: -13.036640167236328
    10. 's' → logprob: -13.161640167236328

Token 530: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03878474980592728
    2. '->' → logprob: -3.7887847423553467
    3. 'self' → logprob: -5.163784980773926
    4. '(' → logprob: -5.163784980773926
    5. '()' → logprob: -6.038784980773926
    6. ' ->' → logprob: -7.288784980773926
    7. ')' → logprob: -7.788784980773926
    8. '()->' → logprob: -9.038784980773926
    9. ':' → logprob: -9.163784980773926
    10. '():' → logprob: -9.288784980773926

Token 531: ' str' (ID: 989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.031070750206708908
    2. 'str' → logprob: -4.031070709228516
    3. ' self' → logprob: -4.406070709228516
    4. ' str' → logprob: -7.406070709228516
    5. 'return' → logprob: -11.656070709228516
    6. '(self' → logprob: -12.406070709228516
    7. '[str' → logprob: -12.906070709228516
    8. 'int' → logprob: -13.031070709228516
    9. '<|end|>' → logprob: -13.031070709228516
    10. '(str' → logprob: -13.531070709228516

Token 532: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01884659379720688
    2. '()' → logprob: -4.51884651184082
    3. '():' → logprob: -5.89384651184082
    4. '(' → logprob: -6.39384651184082
    5. '():
' → logprob: -6.76884651184082
    6. '       ' → logprob: -6.89384651184082
    7. 'self' → logprob: -7.51884651184082
    8. '   ' → logprob: -7.89384651184082
    9. '(
' → logprob: -9.51884651184082
    10. ':' → logprob: -9.51884651184082

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019140059128403664
    2. 'return' → logprob: -4.019140243530273
    3. ' return' → logprob: -7.769140243530273
    4. 'self' → logprob: -8.519140243530273
    5. '<|end|>' → logprob: -8.644140243530273
    6. '   ' → logprob: -9.894140243530273
    7. '        
' → logprob: -9.894140243530273
    8. '```' → logprob: -11.519140243530273
    9. '<|end|>' → logprob: -12.019140243530273
    10. ':return' → logprob: -12.144140243530273

Token 534: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.001563065918162465
    2. ' line' → logprob: -6.50156307220459
    3. 'self' → logprob: -10.50156307220459
    4. '       ' → logprob: -10.75156307220459
    5. 'if' (adapté à ' if') → logprob: -11.87656307220459
    6. 'result' → logprob: -12.37656307220459
    7. '   ' → logprob: -15.12656307220459
    8. '	line' → logprob: -15.25156307220459
    9. ' if' → logprob: -15.62656307220459
    10. 'l' → logprob: -18.126562118530273

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020710527896881
    2. ' self' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.225207328796387
    4. '       ' → logprob: -16.72520637512207
    5. '	self' → logprob: -16.72520637512207
    6. ' ' → logprob: -17.35020637512207
    7. ' ' → logprob: -17.72520637512207
    8. ' not' → logprob: -18.22520637512207
    9. '(self' → logprob: -18.60020637512207
    10. '
' → logprob: -18.85020637512207

Token 536: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.03515925258398056
    2. 'index' → logprob: -3.5351593494415283
    3. '.' → logprob: -5.535159111022949
    4. 'self' → logprob: -7.035159111022949
    5. '_index' → logprob: -8.03515911102295
    6. ' index' → logprob: -9.16015911102295
    7. ' .' → logprob: -10.03515911102295
    8. '@index' → logprob: -10.16015911102295
    9. '.has' → logprob: -11.28515911102295
    10. '	index' → logprob: -12.03515911102295

Token 537: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.635691225528717
    2. ' >=' → logprob: -0.885691225528717
    3. '<' → logprob: -3.0106911659240723
    4. ' <' → logprob: -4.760691165924072
    5. '<len' → logprob: -9.13569164276123
    6. ' ' → logprob: -10.01069164276123
    7. '==' → logprob: -11.88569164276123
    8. '   ' → logprob: -12.13569164276123
    9. ']>=' → logprob: -12.88569164276123
    10. ')>=' → logprob: -13.01069164276123

Token 538: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.5491004129871726e-05
    2. ' len' → logprob: -10.000045776367188
    3. '(len' → logprob: -22.125045776367188
    4. '	len' → logprob: -22.375045776367188
    5. '   ' → logprob: -22.625045776367188
    6. '=len' → logprob: -23.625045776367188
    7. '       ' → logprob: -24.875045776367188
    8. '<len' → logprob: -25.000045776367188
    9. 'length' → logprob: -25.125045776367188
    10. ',len' → logprob: -25.125045776367188

Token 539: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00027825910365208983
    2. 'self' → logprob: -8.25027847290039
    3. '(' → logprob: -11.25027847290039
    4. ' self' → logprob: -12.50027847290039
    5. '(
' → logprob: -16.00027847290039
    6. ' (' → logprob: -16.75027847290039
    7. '
' → logprob: -17.37527847290039
    8. 's' → logprob: -17.87527847290039
    9. '[self' → logprob: -18.25027847290039
    10. '	self' → logprob: -18.50027847290039

Token 540: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00012439649435691535
    2. 'lines' → logprob: -9.125123977661133
    3. 'self' → logprob: -11.500123977661133
    4. '(lines' → logprob: -13.000123977661133
    5. ' lines' → logprob: -13.875123977661133
    6. '.' → logprob: -14.000123977661133
    7. '	lines' → logprob: -14.250123977661133
    8. ' .' → logprob: -15.375123977661133
    9. '.self' → logprob: -15.875123977661133
    10. '_lines' → logprob: -16.125123977661133

Token 541: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024634839966893196
    2. '):' → logprob: -4.149634838104248
    3. ':
' → logprob: -4.899634838104248
    4. ':' → logprob: -7.024634838104248
    5. ')' → logprob: -9.149635314941406
    6. '   ' → logprob: -9.649635314941406
    7. '():
' → logprob: -10.774635314941406
    8. '):
' → logprob: -11.524635314941406
    9. ':return' → logprob: -11.649635314941406
    10. '       ' → logprob: -12.024635314941406

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04301563277840614
    2. 'return' → logprob: -4.293015480041504
    3. '
' → logprob: -4.668015480041504
    4. '       ' → logprob: -4.793015480041504
    5. ' return' → logprob: -4.793015480041504
    6. ' raise' → logprob: -6.793015480041504
    7. 'raise' → logprob: -7.668015480041504
    8. ':
' → logprob: -8.793015480041504
    9. '   ' → logprob: -9.168015480041504
    10. '0' → logprob: -9.293015480041504

Token 543: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -1.0668786764144897
    2. ' raise' → logprob: -1.5668786764144897
    3. '''
' → logprob: -1.5668786764144897
    4. '""' → logprob: -2.1918787956237793
    5. '"\' → logprob: -2.9418787956237793
    6. '"' → logprob: -3.0668787956237793
    7. ''\' → logprob: -4.191878795623779
    8. 'return' → logprob: -5.441878795623779
    9. '''' → logprob: -5.566878795623779
    10. '"""
' → logprob: -6.941878795623779

Token 544: ' Stop' (ID: 22535)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.06431273370981216
    2. 'Stop' → logprob: -3.064312696456909
    3. ' Index' → logprob: -4.314312934875488
    4. 'EOF' → logprob: -6.314312934875488
    5. ' Stop' → logprob: -7.814312934875488
    6. ' EOF' → logprob: -11.564312934875488
    7. 'Value' → logprob: -12.939312934875488
    8. '(Index' → logprob: -14.939312934875488
    9. 'Exception' → logprob: -16.564311981201172
    10. 'Runtime' → logprob: -17.189311981201172

Token 545: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -1.3856492842023727e-06
    2. 'Iterator' → logprob: -13.750000953674316
    3. '
' → logprob: -16.375001907348633
    4. 'iteration' → logprob: -16.500001907348633
    5. 'Iter' → logprob: -16.750001907348633
    6. 'Async' → logprob: -17.375001907348633
    7. 'Exception' → logprob: -17.375001907348633
    8. 'Execution' → logprob: -17.625001907348633
    9. ' iteration' → logprob: -17.750001907348633
    10. 'Error' → logprob: -18.000001907348633

Token 546: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10476280748844147
    2. '()
' → logprob: -2.4797627925872803
    3. '()' → logprob: -4.854763031005859
    4. '       ' → logprob: -4.979763031005859
    5. '        
' → logprob: -7.229763031005859
    6. '  
' → logprob: -8.85476303100586
    7. '    
' → logprob: -10.35476303100586
    8. '   ' → logprob: -10.97976303100586
    9. ' 
' → logprob: -10.97976303100586
    10. '(self' → logprob: -10.97976303100586

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09716400504112244
    2. '
' → logprob: -2.4721639156341553
    3. '        
' → logprob: -5.222164154052734
    4. '    
' → logprob: -6.597164154052734
    5. '()
' → logprob: -7.597164154052734
    6. '  
' → logprob: -8.097164154052734
    7. '   ' → logprob: -8.347164154052734
    8. 'self' → logprob: -8.847164154052734
    9. '(self' → logprob: -9.597164154052734
    10. 'return' → logprob: -9.722164154052734

Token 548: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.03838811814785004
    2. ' line' → logprob: -3.2883880138397217
    3. 'result' → logprob: -8.1633882522583
    4. '       ' → logprob: -9.9133882522583
    5. ' result' → logprob: -11.9133882522583
    6. '   ' → logprob: -13.0383882522583
    7. '
' → logprob: -13.6633882522583
    8. '	line' → logprob: -13.6633882522583
    9. 'res' → logprob: -15.5383882522583
    10. 'current' → logprob: -15.9133882522583

Token 549: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9279531240463257
    2. ' =' → logprob: -1.1779531240463257
    3. '<|end|>' → logprob: -1.3029531240463257
    4. '<|end|>' → logprob: -4.302953243255615
    5. ' ' → logprob: -5.552953243255615
    6. '   ' → logprob: -6.552953243255615
    7. ' +=' → logprob: -7.052953243255615
    8. '       ' → logprob: -7.177953243255615
    9. '+=' → logprob: -7.677953243255615
    10. '()' → logprob: -7.677953243255615

Token 550: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011047935113310814
    2. ' self' → logprob: -4.511047840118408
    3. '       ' → logprob: -17.63604736328125
    4. '(self' → logprob: -18.01104736328125
    5. '	self' → logprob: -18.38604736328125
    6. '   ' → logprob: -18.51104736328125
    7. '[self' → logprob: -19.76104736328125
    8. '           ' → logprob: -20.51104736328125
    9. '=self' → logprob: -20.51104736328125
    10. ' ' → logprob: -20.63604736328125

Token 551: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -4.584861744660884e-05
    2. 'lines' → logprob: -10.000045776367188
    3. '	lines' → logprob: -15.375045776367188
    4. '.' → logprob: -16.250045776367188
    5. '(lines' → logprob: -17.375045776367188
    6. ' lines' → logprob: -18.500045776367188
    7. '_lines' → logprob: -19.125045776367188
    8. 'Lines' → logprob: -20.125045776367188
    9. 'LINES' → logprob: -20.875045776367188
    10. '.layers' → logprob: -21.125045776367188

Token 552: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -3.070975071750581e-05
    2. 'self' → logprob: -10.875030517578125
    3. '[' → logprob: -11.375030517578125
    4. ' self' → logprob: -15.125030517578125
    5. '[
' → logprob: -18.375030517578125
    6. '   ' → logprob: -18.750030517578125
    7. '	self' → logprob: -18.875030517578125
    8. '       ' → logprob: -19.000030517578125
    9. '(self' → logprob: -19.125030517578125
    10. ' [' → logprob: -19.500030517578125

Token 553: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.011063028126955032
    2. 'index' → logprob: -4.511063098907471
    3. '[index' → logprob: -11.511062622070312
    4. '.' → logprob: -13.636062622070312
    5. 'self' → logprob: -13.761062622070312
    6. '	index' → logprob: -13.761062622070312
    7. ' index' → logprob: -14.261062622070312
    8. ':index' → logprob: -14.761062622070312
    9. '.lines' → logprob: -15.136062622070312
    10. '_index' → logprob: -15.636062622070312

Token 554: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16732700169086456
    2. ']
' → logprob: -2.5423269271850586
    3. ')' → logprob: -2.6673269271850586
    4. ')
' → logprob: -5.667326927185059
    5. '<|end|>' → logprob: -6.417326927185059
    6. '<|end|>' → logprob: -7.667326927185059
    7. '       ' → logprob: -9.667326927185059
    8. '
' → logprob: -9.792326927185059
    9. '}' → logprob: -10.042326927185059
    10. '   ' → logprob: -10.292326927185059

Token 555: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.836499985889532e-05
    2. 'rstrip' → logprob: -9.7500581741333
    3. 'pop' → logprob: -17.625059127807617
    4. ' strip' → logprob: -18.125059127807617
    5. 'split' → logprob: -18.375059127807617
    6. 'str' → logprob: -19.250059127807617
    7. '.strip' → logprob: -19.750059127807617
    8. '_strip' → logprob: -20.250059127807617
    9. '
' → logprob: -20.750059127807617
    10. 'replace' → logprob: -21.125059127807617

Token 556: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11304537951946259
    2. '()
' → logprob: -2.8630454540252686
    3. '<|end|>' → logprob: -3.4880454540252686
    4. ')' → logprob: -4.8630452156066895
    5. '<|end|>' → logprob: -5.6130452156066895
    6. '(
' → logprob: -6.1130452156066895
    7. '
' → logprob: -6.8630452156066895
    8. '(' → logprob: -6.9880452156066895
    9. '       ' → logprob: -7.1130452156066895
    10. '\n' → logprob: -7.4880452156066895

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009944136254489422
    2. 'self' → logprob: -4.634943962097168
    3. '
' → logprob: -9.384943962097168
    4. '<|end|>' → logprob: -10.634943962097168
    5. ' self' → logprob: -10.759943962097168
    6. '   ' → logprob: -11.009943962097168
    7. '           ' → logprob: -11.884943962097168
    8. '        
' → logprob: -12.134943962097168
    9. '```' → logprob: -12.259943962097168
    10. '\' → logprob: -12.259943962097168

Token 558: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.945094355614856e-05
    2. ' self' → logprob: -9.750069618225098
    3. '       ' → logprob: -11.500069618225098
    4. '
' → logprob: -14.250069618225098
    5. '	self' → logprob: -15.875069618225098
    6. '```' → logprob: -17.25006866455078
    7. '   ' → logprob: -17.37506866455078
    8. '\' → logprob: -17.50006866455078
    9. '(self' → logprob: -18.00006866455078
    10. '[self' → logprob: -18.50006866455078

Token 559: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.02975974604487419
    2. '.index' → logprob: -3.529759645462036
    3. ' index' → logprob: -11.779759407043457
    4. '_index' → logprob: -14.404759407043457
    5. '=index' → logprob: -14.529759407043457
    6. '	index' → logprob: -15.654759407043457
    7. '.' → logprob: -16.279760360717773
    8. 'increment' → logprob: -16.904760360717773
    9. ':index' → logprob: -17.029760360717773
    10. ' .' → logprob: -17.154760360717773

Token 560: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011706985533237457
    2. ' +=' → logprob: -6.751170635223389
    3. '+' → logprob: -15.001171112060547
    4. '=' → logprob: -16.376171112060547
    5. ']+=' → logprob: -16.876171112060547
    6. '   ' → logprob: -19.126171112060547
    7. '+="' → logprob: -19.251171112060547
    8. '+='' → logprob: -19.376171112060547
    9. '+=(' → logprob: -20.501171112060547
    10. '```' → logprob: -20.626171112060547

Token 561: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '１' → logprob: -23.625
    4. '```' → logprob: -23.875
    5. '
' → logprob: -24.125
    6. '   ' → logprob: -24.625
    7. '۱' → logprob: -24.875
    8. '১' → logprob: -27.0
    9. '`' → logprob: -27.125
    10. '१' → logprob: -27.25

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '１' → logprob: -24.125
    4. '
' → logprob: -24.5
    5. '```' → logprob: -24.5
    6. '۱' → logprob: -25.25
    7. '   ' → logprob: -25.75
    8. '0' → logprob: -27.0
    9. '१' → logprob: -27.125
    10. '১' → logprob: -27.125

Token 563: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4763714075088501
    2. '       ' → logprob: -0.9763714075088501
    3. '
' → logprob: -6.8513712882995605
    4. ' return' → logprob: -7.1013712882995605
    5. '	return' → logprob: -8.351371765136719
    6. '   ' → logprob: -9.601371765136719
    7. '	' → logprob: -10.101371765136719
    8. '        
' → logprob: -10.851371765136719
    9. '<|end|>' → logprob: -11.226371765136719
    10. '{return' → logprob: -11.726371765136719

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06263334304094315
    2. 'return' → logprob: -2.8126332759857178
    3. ' return' → logprob: -8.062633514404297
    4. '
' → logprob: -8.562633514404297
    5. '   ' → logprob: -9.562633514404297
    6. '	return' → logprob: -10.187633514404297
    7. '        
' → logprob: -11.062633514404297
    8. '	' → logprob: -11.312633514404297
    9. '```' → logprob: -11.312633514404297
    10. '<|end|>' → logprob: -12.937633514404297

Token 565: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001996066712308675
    2. '       ' → logprob: -8.750199317932129
    3. ' return' → logprob: -10.125199317932129
    4. '	return' → logprob: -14.000199317932129
    5. '   ' → logprob: -16.125200271606445
    6. '```' → logprob: -16.500200271606445
    7. ':return' → logprob: -17.000200271606445
    8. '
' → logprob: -17.750200271606445
    9. 'eturn' → logprob: -18.000200271606445
    10. '{return' → logprob: -18.125200271606445

Token 566: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.935296834039036e-06
    2. ' line' → logprob: -12.75000286102295
    3. '(line' → logprob: -21.250003814697266
    4. '#line' → logprob: -21.375003814697266
    5. '	line' → logprob: -21.375003814697266
    6. '[line' → logprob: -22.250003814697266
    7. 'lin' → logprob: -22.750003814697266
    8. '   ' → logprob: -23.250003814697266
    9. 'layer' → logprob: -23.375003814697266
    10. '=line' → logprob: -23.625003814697266

Token 567: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 568: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06555434316396713
    2. '   ' → logprob: -3.06555438041687
    3. 'class' → logprob: -4.690554141998291
    4. '```' → logprob: -5.565554141998291
    5. 'from' → logprob: -6.065554141998291
    6. '
' → logprob: -7.440554141998291
    7. '<|end|>' → logprob: -7.565554141998291
    8. ' def' → logprob: -8.81555461883545
    9. '	def' → logprob: -9.06555461883545
    10. 'import' → logprob: -9.94055461883545

Token 569: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.787507714354433e-05
    2. 'from' → logprob: -10.37504768371582
    3. 'class' → logprob: -11.37504768371582
    4. ' def' → logprob: -12.62504768371582
    5. '   ' → logprob: -13.37504768371582
    6. '```' → logprob: -15.50004768371582
    7. '	def' → logprob: -16.62504768371582
    8. '
' → logprob: -17.50004768371582
    9. 'import' → logprob: -18.25004768371582
    10. '    
' → logprob: -19.00004768371582

Token 570: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.17724557220935822
    2. 'next' → logprob: -2.177245616912842
    3. 'has' → logprob: -3.052245616912842
    4. 'read' → logprob: -6.677245616912842
    5. '__' → logprob: -7.927245616912842
    6. 'reset' → logprob: -9.927245140075684
    7. 'peek' → logprob: -10.052245140075684
    8. ' parse' → logprob: -10.177245140075684
    9. 'get' → logprob: -11.052245140075684
    10. 'try' → logprob: -11.677245140075684

Token 571: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026997558772563934
    2. '_int' → logprob: -5.2769975662231445
    3. '_number' → logprob: -5.4019975662231445
    4. '(' → logprob: -6.0269975662231445
    5. '_test' → logprob: -6.0269975662231445
    6. 'self' → logprob: -6.1519975662231445
    7. '_' → logprob: -6.5269975662231445
    8. '()' → logprob: -6.6519975662231445
    9. '_next' → logprob: -6.7769975662231445
    10. '_self' → logprob: -6.7769975662231445

Token 572: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20117276906967163
    2. ')_' → logprob: -2.7011728286743164
    3. '_num' → logprob: -3.7011728286743164
    4. 'self' → logprob: -3.8261728286743164
    5. '_number' → logprob: -4.076172828674316
    6. '_ball' → logprob: -4.951172828674316
    7. '_input' → logprob: -5.076172828674316
    8. '_test' → logprob: -5.451172828674316
    9. '_array' → logprob: -5.576172828674316
    10. '_next' → logprob: -5.701172828674316

Token 573: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021456200629472733
    2. '->' → logprob: -6.377145767211914
    3. ' ->' → logprob: -8.002145767211914
    4. 'self' → logprob: -10.002145767211914
    5. '(' → logprob: -10.252145767211914
    6. '   ' → logprob: -12.002145767211914
    7. '[self' → logprob: -12.377145767211914
    8. '()' → logprob: -12.502145767211914
    9. ':' → logprob: -12.502145767211914
    10. '       ' → logprob: -12.877145767211914

Token 574: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7425297498703003
    2. 'tuple' → logprob: -0.8675297498703003
    3. ' tuple' → logprob: -3.11752986907959
    4. 'int' → logprob: -3.11752986907959
    5. ' list' → logprob: -4.24252986907959
    6. 'dict' → logprob: -8.24252986907959
    7. '(tuple' → logprob: -8.24252986907959
    8. '(list' → logprob: -8.49252986907959
    9. 'None' → logprob: -8.74252986907959
    10. ' int' → logprob: -8.74252986907959

Token 575: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.012412987649440765
    2. '(int' → logprob: -4.762413024902344
    3. '[' → logprob: -5.762413024902344
    4. '[
' → logprob: -8.512413024902344
    5. '[list' → logprob: -8.762413024902344
    6. 'int' → logprob: -9.387413024902344
    7. ':
' → logprob: -10.012413024902344
    8. '()' → logprob: -10.012413024902344
    9. ':' → logprob: -10.262413024902344
    10. '   ' → logprob: -10.637413024902344

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004965558764524758
    2. ',int' → logprob: -7.6254963874816895
    3. ',list' → logprob: -13.125496864318848
    4. ',List' → logprob: -13.125496864318848
    5. ' ,' → logprob: -13.250496864318848
    6. '[int' → logprob: -13.875496864318848
    7. 'int' → logprob: -14.500496864318848
    8. ',
' → logprob: -14.500496864318848
    9. ',float' → logprob: -15.125496864318848
    10. ',bool' → logprob: -15.250496864318848

Token 577: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.010296630673110485
    2. 'int' → logprob: -4.635296821594238
    3. ' list' → logprob: -7.885296821594238
    4. 'List' → logprob: -9.635296821594238
    5. '[list' → logprob: -10.010296821594238
    6. '...' → logprob: -10.510296821594238
    7. '   ' → logprob: -11.385296821594238
    8. '[int' → logprob: -12.385296821594238
    9. ']' → logprob: -12.885296821594238
    10. 'str' → logprob: -12.885296821594238

Token 578: '[list' (ID: 141696)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.088346359931165e-07
    2. 'int' → logprob: -14.375000953674316
    3. ',int' → logprob: -16.5
    4. ']int' → logprob: -16.625
    5. '<int' → logprob: -18.125
    6. '[list' → logprob: -18.25
    7. ']:' → logprob: -18.875
    8. '[' → logprob: -19.75
    9. ']' → logprob: -20.0
    10. '[Int' → logprob: -20.0

Token 579: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00034237600630149245
    2. 'int' → logprob: -8.00034236907959
    3. ']int' → logprob: -12.75034236907959
    4. '<int' → logprob: -12.87534236907959
    5. '[' → logprob: -14.75034236907959
    6. '   ' → logprob: -15.37534236907959
    7. ']]' → logprob: -15.62534236907959
    8. '	int' → logprob: -15.87534236907959
    9. ',int' → logprob: -16.625343322753906
    10. '[
' → logprob: -16.750343322753906

Token 580: ']]' (ID: 8928)
  Prédit: ']]:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.07894663512706757
    2. ']]' → logprob: -2.578946590423584
    3. ']' → logprob: -11.078947067260742
    4. '[' → logprob: -11.203947067260742
    5. '],' → logprob: -11.328947067260742
    6. ']]]' → logprob: -12.203947067260742
    7. ']]
' → logprob: -13.203947067260742
    8. ']],' → logprob: -13.953947067260742
    9. ']):
' → logprob: -14.203947067260742
    10. ']]

' → logprob: -14.203947067260742

Token 581: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06707391142845154
    2. ':
' → logprob: -3.3170738220214844
    3. ']:
' → logprob: -3.9420738220214844
    4. ':' → logprob: -5.192073822021484
    5. ']:' → logprob: -6.317073822021484
    6. '):
' → logprob: -7.442073822021484
    7. '[' → logprob: -7.942073822021484
    8. '():
' → logprob: -8.067073822021484
    9. '[int' → logprob: -8.817073822021484
    10. '   ' → logprob: -9.067073822021484

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028923710342496634
    2. '   ' → logprob: -7.12789249420166
    3. '(' → logprob: -7.37789249420166
    4. '(
' → logprob: -8.12789249420166
    5. '```' → logprob: -8.75289249420166
    6. ':' → logprob: -8.87789249420166
    7. '        
' → logprob: -8.87789249420166
    8. ',' → logprob: -9.25289249420166
    9. 'n' → logprob: -9.62789249420166
    10. '():' → logprob: -9.75289249420166

Token 583: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5158801674842834
    2. 't' → logprob: -1.3908801078796387
    3. 'T' → logprob: -2.6408801078796387
    4. ' n' → logprob: -3.2658801078796387
    5. ' t' → logprob: -3.3908801078796387
    6. ' T' → logprob: -4.765880107879639
    7. 'num' → logprob: -7.390880107879639
    8. '       ' → logprob: -7.765880107879639
    9. '   ' → logprob: -7.890880107879639
    10. 'N' → logprob: -7.890880107879639

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33631017804145813
    2. '=' → logprob: -1.4613101482391357
    3. ',' → logprob: -2.9613101482391357
    4. '=int' → logprob: -7.461310386657715
    5. '   ' → logprob: -8.336310386657715
    6. ' ,' → logprob: -8.461310386657715
    7. 's' → logprob: -8.461310386657715
    8. 'um' → logprob: -8.586310386657715
    9. ' ' → logprob: -9.336310386657715
    10. '_cases' → logprob: -9.586310386657715

Token 585: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01814994215965271
    2. ' int' → logprob: -4.0181498527526855
    3. '       ' → logprob: -18.143150329589844
    4. '   ' → logprob: -18.768150329589844
    5. ' ' → logprob: -19.893150329589844
    6. '[int' → logprob: -20.018150329589844
    7. '(int' → logprob: -20.268150329589844
    8. '<int' → logprob: -20.268150329589844
    9. '	int' → logprob: -20.393150329589844
    10. '=int' → logprob: -20.768150329589844

Token 586: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. 'self' → logprob: -16.62502098083496
    4. '(
' → logprob: -18.37502098083496
    5. ' (' → logprob: -19.87502098083496
    6. '(s' → logprob: -20.50002098083496
    7. '[self' → logprob: -20.62502098083496
    8. '(this' → logprob: -21.12502098083496
    9. '((' → logprob: -21.37502098083496
    10. '(sel' → logprob: -21.75002098083496

Token 587: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0002251125843031332
    2. 'next' → logprob: -8.500225067138672
    3. '.' → logprob: -11.250225067138672
    4. '(next' → logprob: -12.500225067138672
    5. ' .' → logprob: -13.000225067138672
    6. ' next' → logprob: -13.750225067138672
    7. '.lines' → logprob: -14.250225067138672
    8. '().' → logprob: -14.375225067138672
    9. 'self' → logprob: -15.750225067138672
    10. '[next' → logprob: -17.250225067138672

Token 588: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0013172623002901673
    2. '()' → logprob: -6.751317024230957
    3. 'line' → logprob: -9.501317024230957
    4. '(' → logprob: -10.376317024230957
    5. ')' → logprob: -11.251317024230957
    6. '_lines' → logprob: -11.876317024230957
    7. '())' → logprob: -12.126317024230957
    8. '()
' → logprob: -13.001317024230957
    9. '(line' → logprob: -13.251317024230957
    10. '_LINE' → logprob: -13.251317024230957

Token 589: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015128388768061996
    2. '()' → logprob: -6.7515130043029785
    3. '())
' → logprob: -8.00151252746582
    4. ')' → logprob: -12.12651252746582
    5. '())

' → logprob: -14.25151252746582
    6. '().' → logprob: -14.37651252746582
    7. '()
' → logprob: -14.75151252746582
    8. '())
' → logprob: -15.25151252746582
    9. ' ())' → logprob: -15.50151252746582
    10. '(' → logprob: -16.00151252746582

Token 590: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2939107418060303
    2. '       ' → logprob: -1.6689107418060303
    3. ' lists' → logprob: -1.9189107418060303
    4. ' ,' → logprob: -2.6689107418060303
    5. 'm' → logprob: -2.9189107418060303
    6. ' lines' → logprob: -3.2939107418060303
    7. ' 
' → logprob: -3.7939107418060303
    8. '
' → logprob: -4.043910980224609
    9. '<|end|>' → logprob: -4.043910980224609
    10. '[' → logprob: -4.168910980224609

Token 591: ' data' (ID: 1238)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.4667752981185913
    2. 'cases' → logprob: -1.5917752981185913
    3. 'test' → logprob: -1.9667752981185913
    4. 'tests' → logprob: -2.091775417327881
    5. 'groups' → logprob: -2.841775417327881
    6. 'containers' → logprob: -3.216775417327881
    7. 'results' → logprob: -3.466775417327881
    8. 't' → logprob: -3.591775417327881
    9. ' test' → logprob: -3.716775417327881
    10. 'b' → logprob: -3.966775417327881

Token 592: '_sets' (ID: 56707)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5498246550559998
    2. '=' → logprob: -1.0498247146606445
    3. 's' → logprob: -3.0498247146606445
    4. '_lists' → logprob: -4.4248247146606445
    5. '_sets' → logprob: -5.1748247146606445
    6. '_batches' → logprob: -5.9248247146606445
    7. '_arrays' → logprob: -6.5498247146606445
    8. '_sequences' → logprob: -6.9248247146606445
    9. '=[]' → logprob: -7.5498247146606445
    10. ':' → logprob: -7.6748247146606445

Token 593: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02329357899725437
    2. ' =' → logprob: -3.7732934951782227
    3. '=[]' → logprob: -10.148293495178223
    4. ':' → logprob: -11.648293495178223
    5. '=[]
' → logprob: -15.398293495178223
    6. '[]' → logprob: -17.02329444885254
    7. ',' → logprob: -18.02329444885254
    8. '.append' → logprob: -18.52329444885254
    9. '=[]
' → logprob: -18.52329444885254
    10. '＝' → logprob: -19.02329444885254

Token 594: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005394780542701483
    2. '[]
' → logprob: -5.25539493560791
    3. ' []' → logprob: -8.75539493560791
    4. '[]

' → logprob: -12.88039493560791
    5. '[' → logprob: -14.75539493560791
    6. ' []
' → logprob: -15.38039493560791
    7. '[]"' → logprob: -16.505393981933594
    8. '[]}' → logprob: -16.755393981933594
    9. '[])' → logprob: -17.880393981933594
    10. '[],' → logprob: -18.380393981933594

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11124434322118759
    2. ' for' → logprob: -2.9862444400787354
    3. 'for' → logprob: -3.1112444400787354
    4. '	for' → logprob: -5.611244201660156
    5. '	' → logprob: -5.861244201660156
    6. '   ' → logprob: -6.236244201660156
    7. '	   ' → logprob: -7.236244201660156
    8. '
' → logprob: -7.611244201660156
    9. '<|end|>' → logprob: -8.361244201660156
    10. 'while' → logprob: -9.236244201660156

Token 596: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00027218335890211165
    2. '       ' → logprob: -8.250271797180176
    3. ' for' → logprob: -12.000271797180176
    4. 'while' → logprob: -12.375271797180176
    5. '
' → logprob: -15.375271797180176
    6. '	for' → logprob: -15.500271797180176
    7. '        
' → logprob: -17.250272750854492
    8. '```' → logprob: -18.125272750854492
    9. '   ' → logprob: -18.750272750854492
    10. 'For' → logprob: -19.875272750854492

Token 597: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2113979209971149e-05
    2. ' _' → logprob: -11.375012397766113
    3. '_range' → logprob: -15.250012397766113
    4. '_i' → logprob: -15.500012397766113
    5. '_
' → logprob: -16.500011444091797
    6. '_

' → logprob: -17.625011444091797
    7. '_=' → logprob: -18.125011444091797
    8. 'i' → logprob: -18.375011444091797
    9. 'range' → logprob: -19.375011444091797
    10. '_in' → logprob: -19.625011444091797

Token 598: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02639528177678585
    2. 'range' → logprob: -4.276395320892334
    3. 'in' → logprob: -4.526395320892334
    4. ' range' → logprob: -6.651395320892334
    5. '_' → logprob: -10.776394844055176
    6. ' ' → logprob: -10.776394844055176
    7. '  ' → logprob: -13.276394844055176
    8. ' _' → logprob: -13.776394844055176
    9. 'i' → logprob: -15.026394844055176
    10. '   ' → logprob: -15.276394844055176

Token 599: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008065330912359059
    2. ' range' → logprob: -7.1258063316345215
    3. '_' → logprob: -14.37580680847168
    4. '   ' → logprob: -14.87580680847168
    5. ' ' → logprob: -15.50080680847168
    6. '	range' → logprob: -15.62580680847168
    7. '
' → logprob: -15.87580680847168
    8. '  ' → logprob: -16.12580680847168
    9. '_range' → logprob: -16.50080680847168
    10. 'r' → logprob: -16.50080680847168

Token 600: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4076366126537323
    2. 'n' → logprob: -1.1576366424560547
    3. ' n' → logprob: -3.9076366424560547
    4. '(' → logprob: -8.157636642456055
    5. ' (' → logprob: -9.157636642456055
    6. '	n' → logprob: -10.032636642456055
    7. '   ' → logprob: -11.782636642456055
    8. '_n' → logprob: -11.907636642456055
    9. ' ' → logprob: -12.657636642456055
    10. '(
' → logprob: -12.907636642456055

Token 601: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0808442234992981
    2. '):
' → logprob: -2.5808441638946533
    3. ':' → logprob: -6.580844402313232
    4. ' ):' → logprob: -8.455843925476074
    5. ',' → logprob: -8.830843925476074
    6. '       ' → logprob: -9.705843925476074
    7. ')' → logprob: -10.205843925476074
    8. '():' → logprob: -10.205843925476074
    9. '   ' → logprob: -10.955843925476074
    10. '):
' → logprob: -11.205843925476074

Token 602: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005352786974981427
    2. '       ' → logprob: -8.125535011291504
    3. '   ' → logprob: -9.500535011291504
    4. '<|end|>' → logprob: -10.125535011291504
    5. '```' → logprob: -10.625535011291504
    6. ',' → logprob: -10.625535011291504
    7. '            
' → logprob: -11.750535011291504
    8. '<|end|>' → logprob: -11.750535011291504
    9. ' lines' → logprob: -12.125535011291504
    10. ')' → logprob: -12.250535011291504

Token 603: ' data' (ID: 1238)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7106630206108093
    2. 'm' → logprob: -0.7106630206108093
    3. 'size' → logprob: -5.335662841796875
    4. '   ' → logprob: -6.085662841796875
    5. 'num' → logprob: -6.085662841796875
    6. ' k' → logprob: -6.335662841796875
    7. '           ' → logprob: -6.460662841796875
    8. 't' → logprob: -6.960662841796875
    9. 'length' → logprob: -7.210662841796875
    10. '               ' → logprob: -7.460662841796875

Token 604: ' =' (ID: 314)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.08324159681797028
    2. ' =' → logprob: -4.2082414627075195
    3. '_size' → logprob: -4.4582414627075195
    4. '_line' → logprob: -4.5832414627075195
    5. '_sets' → logprob: -4.5832414627075195
    6. '_count' → logprob: -4.8332414627075195
    7. 'set' → logprob: -5.2082414627075195
    8. '=' → logprob: -5.2082414627075195
    9. '_len' → logprob: -5.4582414627075195
    10. '_length' → logprob: -5.9582414627075195

Token 605: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.039972078055143356
    2. '[list' → logprob: -3.2899720668792725
    3. ' list' → logprob: -6.289972305297852
    4. '[int' → logprob: -10.164972305297852
    5. '[self' → logprob: -11.289972305297852
    6. '   ' → logprob: -11.539972305297852
    7. '           ' → logprob: -12.414972305297852
    8. ' [' → logprob: -13.039972305297852
    9. '[next' → logprob: -13.539972305297852
    10. '[' → logprob: -13.539972305297852

Token 606: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.0868278524139896e-05
    2. 'map' → logprob: -10.00006103515625
    3. '[int' → logprob: -11.37506103515625
    4. '[' → logprob: -13.12506103515625
    5. '(' → logprob: -13.75006103515625
    6. ' map' → logprob: -15.12506103515625
    7. '(
' → logprob: -15.75006103515625
    8. '	map' → logprob: -16.00006103515625
    9. '.map' → logprob: -16.00006103515625
    10. '(int' → logprob: -16.62506103515625

Token 607: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00047869363334029913
    2. 'int' → logprob: -7.750478744506836
    3. '(' → logprob: -10.000478744506836
    4. '(
' → logprob: -13.875478744506836
    5. '[int' → logprob: -14.375478744506836
    6. '(lambda' → logprob: -14.500478744506836
    7. ' int' → logprob: -15.500478744506836
    8. '<int' → logprob: -16.375478744506836
    9. '   ' → logprob: -16.500478744506836
    10. '(str' → logprob: -16.750478744506836

Token 608: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10200921446084976
    2. '(self' → logprob: -2.3520092964172363
    3. ',self' → logprob: -6.727009296417236
    4. 'self' → logprob: -7.477009296417236
    5. '(' → logprob: -10.852008819580078
    6. ' ,' → logprob: -11.352008819580078
    7. ' self' → logprob: -13.102008819580078
    8. ',
' → logprob: -14.352008819580078
    9. '```' → logprob: -14.352008819580078
    10. '   ' → logprob: -14.727008819580078

Token 609: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.7159857786027715e-05
    2. ' self' → logprob: -10.000046730041504
    3. '           ' → logprob: -14.125046730041504
    4. '(self' → logprob: -14.250046730041504
    5. '               ' → logprob: -15.750046730041504
    6. '   ' → logprob: -16.87504768371582
    7. '       ' → logprob: -17.50004768371582
    8. '                   ' → logprob: -18.62504768371582
    9. '[self' → logprob: -18.75004768371582
    10. ')' → logprob: -18.87504768371582

Token 610: '.next' (ID: 6689)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32639384269714355
    2. '(self' → logprob: -1.7013938426971436
    3. ' self' → logprob: -3.3263938426971436
    4. ' .' → logprob: -3.7013938426971436
    5. '.next' → logprob: -3.7013938426971436
    6. '.split' → logprob: -6.076394081115723
    7. 'next' → logprob: -6.201394081115723
    8. '.' → logprob: -6.201394081115723
    9. ')' → logprob: -6.701394081115723
    10. '.self' → logprob: -7.201394081115723

Token 611: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0039634667336940765
    2. 'line' → logprob: -5.628963470458984
    3. '.readline' → logprob: -8.878963470458984
    4. '.next' → logprob: -9.378963470458984
    5. 'next' → logprob: -10.378963470458984
    6. 'self' → logprob: -10.753963470458984
    7. '.line' → logprob: -11.128963470458984
    8. '().' → logprob: -11.253963470458984
    9. '(self' → logprob: -11.628963470458984
    10. '.' → logprob: -11.628963470458984

Token 612: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.750001907348633
    3. ' ().' → logprob: -14.500001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '()
' → logprob: -18.125001907348633
    6. '.split' → logprob: -18.375001907348633
    7. ' .' → logprob: -18.500001907348633
    8. '.' → logprob: -18.750001907348633
    9. '(' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.500001907348633

Token 613: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007156503852456808
    2. 'strip' → logprob: -7.250715732574463
    3. ' split' → logprob: -12.250715255737305
    4. '(split' → logprob: -14.000715255737305
    5. '.split' → logprob: -16.125715255737305
    6. 'rstrip' → logprob: -16.500715255737305
    7. ' strip' → logprob: -19.000715255737305
    8. 'spl' → logprob: -20.250715255737305
    9. '().' → logprob: -20.375715255737305
    10. 'str' → logprob: -20.875715255737305

Token 614: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004930123686790466
    2. '()))
' → logprob: -5.504930019378662
    3. '()' → logprob: -7.129930019378662
    4. '(','' → logprob: -11.25493049621582
    5. '))' → logprob: -12.00493049621582
    6. '(' → logprob: -12.00493049621582
    7. '())' → logprob: -12.12993049621582
    8. '('' → logprob: -12.12993049621582
    9. '()))

' → logprob: -12.25493049621582
    10. '())))' → logprob: -12.37993049621582

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004343645414337516
    2. ')' → logprob: -8.500433921813965
    3. '[' → logprob: -9.125433921813965
    4. '
' → logprob: -10.500433921813965
    5. ')
' → logprob: -11.625433921813965
    6. 'self' → logprob: -11.750433921813965
    7. 'return' → logprob: -11.750433921813965
    8. '(' → logprob: -11.875433921813965
    9. '[:-' → logprob: -12.125433921813965
    10. '               ' → logprob: -12.250433921813965

Token 616: ' data' (ID: 1238)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4199464023113251
    2. 'data' (adapté à ' data') → logprob: -1.2949464321136475
    3. ' data' → logprob: -2.9199464321136475
    4. 'm' → logprob: -4.919946193695068
    5. 'length' → logprob: -6.169946193695068
    6. '       ' → logprob: -6.544946193695068
    7. 'n' → logprob: -6.794946193695068
    8. 'k' → logprob: -7.294946193695068
    9. '   ' → logprob: -7.669946193695068
    10. 't' → logprob: -8.169946670532227

Token 617: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.03196697309613228
    2. '.append' → logprob: -3.5319669246673584
    3. 's' → logprob: -6.9069671630859375
    4. 'sets' → logprob: -8.031967163085938
    5. '=' → logprob: -8.406967163085938
    6. 'data' → logprob: -9.031967163085938
    7. '.extend' → logprob: -9.031967163085938
    8. '_data' → logprob: -9.406967163085938
    9. '.' → logprob: -9.906967163085938
    10. '=[]' → logprob: -10.281967163085938

Token 618: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.297462171758525e-05
    2. '.' → logprob: -10.375033378601074
    3. '.app' → logprob: -14.500033378601074
    4. '.extend' → logprob: -14.750033378601074
    5. ' .' → logprob: -14.875033378601074
    6. '.ap' → logprob: -15.375033378601074
    7. ').' → logprob: -16.375032424926758
    8. 'append' → logprob: -16.625032424926758
    9. '.push' → logprob: -18.375032424926758
    10. '.insert' → logprob: -18.875032424926758

Token 619: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.00012368128227535635
    2. 'data' → logprob: -9.000123977661133
    3. '(list' → logprob: -16.250123977661133
    4. '(' → logprob: -16.750123977661133
    5. '[data' → logprob: -17.875123977661133
    6. ' data' → logprob: -18.000123977661133
    7. '=data' → logprob: -18.250123977661133
    8. '(
' → logprob: -18.375123977661133
    9. '([' → logprob: -18.625123977661133
    10. '   ' → logprob: -19.750123977661133

Token 620: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04468366131186485
    2. ')
' → logprob: -3.1696836948394775
    3. '       ' → logprob: -6.544683456420898
    4. ')return' → logprob: -8.669683456420898
    5. '
' → logprob: -9.919683456420898
    6. 'return' → logprob: -11.044683456420898
    7. '<|end|>' → logprob: -12.419683456420898
    8. ' )' → logprob: -14.294683456420898
    9. '<|end|>' → logprob: -14.669683456420898
    10. '   ' → logprob: -14.794683456420898

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012434307485818863
    2. 'return' → logprob: -4.512434482574463
    3. '
' → logprob: -7.137434482574463
    4. ' return' → logprob: -8.012434005737305
    5. '	' → logprob: -8.887434005737305
    6. '   ' → logprob: -10.262434005737305
    7. '	return' → logprob: -10.387434005737305
    8. '        
' → logprob: -10.512434005737305
    9. '<|end|>' → logprob: -11.637434005737305
    10. '[' → logprob: -13.012434005737305

Token 622: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0202734787017107
    2. 'return' (adapté à ' return') → logprob: -4.020273685455322
    3. ' return' → logprob: -6.270273685455322
    4. '   ' → logprob: -8.895273208618164
    5. '	return' → logprob: -9.895273208618164
    6. '	' → logprob: -10.395273208618164
    7. '
' → logprob: -12.395273208618164
    8. '```' → logprob: -13.645273208618164
    9. '      ' → logprob: -13.895273208618164
    10. '           ' → logprob: -13.895273208618164

Token 623: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004112473223358393
    2. 'len' → logprob: -6.004112243652344
    3. ' n' → logprob: -6.504112243652344
    4. '(len' → logprob: -9.629112243652344
    5. '(n' → logprob: -9.629112243652344
    6. ' len' → logprob: -12.004112243652344
    7. ' (' → logprob: -15.379112243652344
    8. '	n' → logprob: -16.504112243652344
    9. '(' → logprob: -16.629112243652344
    10. '   ' → logprob: -17.004112243652344

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034774013329297304
    2. ',data' → logprob: -8.125348091125488
    3. 'data' → logprob: -10.000348091125488
    4. ' ,' → logprob: -12.750348091125488
    5. ',
' → logprob: -13.375348091125488
    6. '   ' → logprob: -13.750348091125488
    7. ' data' → logprob: -15.500348091125488
    8. '`,' → logprob: -15.875348091125488
    9. '‌,' → logprob: -16.625347137451172
    10. '```' → logprob: -16.750347137451172

Token 625: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.005233763717114925
    2. ' data' → logprob: -5.2552337646484375
    3. '	data' → logprob: -18.755233764648438
    4. '   ' → logprob: -18.880233764648438
    5. '```' → logprob: -19.505233764648438
    6. '
' → logprob: -19.630233764648438
    7. '[' → logprob: -19.755233764648438
    8. 'Data' → logprob: -19.880233764648438
    9. '[data' → logprob: -20.005233764648438
    10. ' ' → logprob: -20.505233764648438

Token 626: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.00037013579276390374
    2. 's' → logprob: -8.250370025634766
    3. '_' → logprob: -9.875370025634766
    4. 'sets' → logprob: -11.125370025634766
    5. '_s' → logprob: -11.625370025634766
    6. 'data' → logprob: -12.125370025634766
    7. '_set' → logprob: -12.375370025634766
    8. 'ets' → logprob: -12.750370025634766
    9. 'Sets' → logprob: -12.875370025634766
    10. 'n' → logprob: -13.250370025634766

Token 627: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02152673341333866
    2. '<|end|>' → logprob: -4.27152681350708
    3. 'if' → logprob: -5.39652681350708
    4. '```' → logprob: -6.64652681350708
    5. 'import' → logprob: -7.64652681350708
    6. '
' → logprob: -7.77152681350708
    7. 'from' → logprob: -7.89652681350708
    8. 'class' → logprob: -9.146526336669922
    9. '#' → logprob: -9.646526336669922
    10. '<|end|>' → logprob: -10.021526336669922

Token 628: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3869872987270355
    2. 'if' → logprob: -1.136987328529358
    3. '```' → logprob: -9.386987686157227
    4. 'from' → logprob: -10.511987686157227
    5. 'import' → logprob: -12.261987686157227
    6. 'class' → logprob: -15.261987686157227
    7. '
' → logprob: -16.011987686157227
    8. ' if' → logprob: -16.136987686157227
    9. '#' → logprob: -16.511987686157227
    10. '``' → logprob: -17.511987686157227

Token 629: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12694227695465088
    2. ' main' → logprob: -2.1269421577453613
    3. 'run' → logprob: -11.75194263458252
    4. ' run' → logprob: -12.62694263458252
    5. 'process' → logprob: -13.25194263458252
    6. 'solve' → logprob: -14.25194263458252
    7. ' solve' → logprob: -15.12694263458252
    8. 'simulate' → logprob: -16.126941680908203
    9. '	main' → logprob: -16.376941680908203
    10. ' process' → logprob: -16.501941680908203

Token 630: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.458980300929397e-05
    2. '():
' → logprob: -9.87508487701416
    3. '()' → logprob: -10.75008487701416
    4. ' ():' → logprob: -11.37508487701416
    5. '(' → logprob: -15.75008487701416
    6. '():
' → logprob: -16.750083923339844
    7. '()>' → logprob: -17.250083923339844
    8. '_' → logprob: -18.250083923339844
    9. '():

' → logprob: -18.500083923339844
    10. '().' → logprob: -18.625083923339844

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044735413044691086
    2. 'import' → logprob: -3.4197354316711426
    3. ' import' → logprob: -4.794735431671143
    4. ' parser' → logprob: -6.169735431671143
    5. ' input' → logprob: -8.169734954833984
    6. 'parser' → logprob: -8.294734954833984
    7. 'input' → logprob: -9.169734954833984
    8. '   ' → logprob: -11.669734954833984
    9. ' lines' → logprob: -12.294734954833984
    10. '	import' → logprob: -12.794734954833984

Token 632: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.05242716521024704
    2. ' import' → logprob: -3.302427053451538
    3. 'parser' → logprob: -4.427427291870117
    4. 'input' → logprob: -6.677427291870117
    5. ' parser' → logprob: -7.177427291870117
    6. '   ' → logprob: -8.677427291870117
    7. ' input' → logprob: -9.677427291870117
    8. 'n' → logprob: -10.177427291870117
    9. ' n' → logprob: -11.052427291870117
    10. 'ip' → logprob: -11.427427291870117

Token 633: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006715370807796717
    2. ' sys' → logprob: -5.006715297698975
    3. '	sys' → logprob: -18.131715774536133
    4. '=sys' → logprob: -18.256715774536133
    5. '(sys' → logprob: -19.381715774536133
    6. '```' → logprob: -20.756715774536133
    7. '.sys' → logprob: -21.381715774536133
    8. '_sys' → logprob: -21.506715774536133
    9. 'io' → logprob: -21.881715774536133
    10. 'stdin' → logprob: -23.256715774536133

Token 634: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015189596451818943
    2. '
' → logprob: -4.7651896476745605
    3. 'input' → logprob: -5.5151896476745605
    4. '    
' → logprob: -6.3901896476745605
    5. ' input' → logprob: -7.8901896476745605
    6. ' lines' → logprob: -7.8901896476745605
    7. 'for' → logprob: -10.390189170837402
    8. '	lines' → logprob: -11.015189170837402
    9. 'lines' → logprob: -11.140189170837402
    10. 'data' → logprob: -11.390189170837402

Token 635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03495275601744652
    2. 'input' → logprob: -3.6599526405334473
    3. ' input' → logprob: -4.909952640533447
    4. ' lines' → logprob: -6.909952640533447
    5. 'lines' → logprob: -8.534953117370605
    6. '	lines' → logprob: -11.659953117370605
    7. 'parser' → logprob: -11.784953117370605
    8. 'inputs' → logprob: -11.909953117370605
    9. '	input' → logprob: -11.909953117370605
    10. '    
' → logprob: -12.159953117370605

Token 636: ' parser' (ID: 14216)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4489878714084625
    2. ' input' → logprob: -1.4489878416061401
    3. '   ' → logprob: -2.1989879608154297
    4. ' lines' → logprob: -4.69898796081543
    5. 'lines' → logprob: -5.57398796081543
    6. 'parser' (adapté à ' parser') → logprob: -6.07398796081543
    7. ' parser' → logprob: -7.19898796081543
    8. 'inputs' → logprob: -10.69898796081543
    9. 'data' → logprob: -11.19898796081543
    10. '	input' → logprob: -12.94898796081543

Token 637: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699414312839508
    2. '=' → logprob: -2.694941520690918
    3. ' =
' → logprob: -13.819941520690918
    4. ' ' → logprob: -14.069941520690918
    5. 'parser' → logprob: -14.194941520690918
    6. '_parser' → logprob: -14.319941520690918
    7. '=input' → logprob: -14.944941520690918
    8. '.' → logprob: -15.319941520690918
    9. '=parse' → logprob: -15.694941520690918
    10. ' ' → logprob: -15.819941520690918

Token 638: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.5048530030981055e-06
    2. ' Input' → logprob: -13.500001907348633
    3. 'input' → logprob: -21.625001907348633
    4. '	Input' → logprob: -22.000001907348633
    5. '_input' → logprob: -22.375001907348633
    6. '<Input' → logprob: -22.750001907348633
    7. 'Parser' → logprob: -23.000001907348633
    8. '\Input' → logprob: -23.250001907348633
    9. '_Input' → logprob: -23.500001907348633
    10. ' input' → logprob: -24.875001907348633

Token 639: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'parser' → logprob: -16.5
    3. '_parser' → logprob: -19.125
    4. '.Parser' → logprob: -19.875
    5. '(Parser' → logprob: -20.25
    6. ' Parser' → logprob: -20.375
    7. 'Parse' → logprob: -21.25
    8. '-parser' → logprob: -21.875
    9. 'Processor' → logprob: -22.0
    10. ' parser' → logprob: -22.125

Token 640: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0004319804720580578
    2. '([' → logprob: -8.000432014465332
    3. 'sys' → logprob: -9.750432014465332
    4. '(list' → logprob: -10.250432014465332
    5. '   ' → logprob: -13.875432014465332
    6. ' sys' → logprob: -13.875432014465332
    7. ' (' → logprob: -15.250432014465332
    8. '(' → logprob: -15.250432014465332
    9. '	sys' → logprob: -15.625432014465332
    10. '=sys' → logprob: -15.625432014465332

Token 641: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001519026467576623
    2. '.argv' → logprob: -6.501519203186035
    3. '.' → logprob: -11.126519203186035
    4. ' .' → logprob: -14.001519203186035
    5. '.stdout' → logprob: -14.376519203186035
    6. 'stdin' → logprob: -15.376519203186035
    7. '.std' → logprob: -15.501519203186035
    8. '.stderr' → logprob: -18.00151824951172
    9. '(stdin' → logprob: -18.50151824951172
    10. '.modules' → logprob: -18.75151824951172

Token 642: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.13802441954612732
    2. ')' → logprob: -2.13802433013916
    3. '.readline' → logprob: -4.76302433013916
    4. '.' → logprob: -6.01302433013916
    5. '.read' → logprob: -10.51302433013916
    6. ')
' → logprob: -12.01302433013916
    7. '.)' → logprob: -12.51302433013916
    8. ' .' → logprob: -12.76302433013916
    9. ' )' → logprob: -13.01302433013916
    10. ').' → logprob: -13.76302433013916

Token 643: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2127087504486553e-05
    2. '()' → logprob: -10.750021934509277
    3. ' ().' → logprob: -15.000021934509277
    4. '())' → logprob: -15.250021934509277
    5. '(' → logprob: -17.250022888183594
    6. '()
' → logprob: -17.625022888183594
    7. 'lines' → logprob: -19.875022888183594
    8. '()))' → logprob: -20.000022888183594
    9. '()).' → logprob: -20.250022888183594
    10. '().
' → logprob: -20.375022888183594

Token 644: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.048719197511672974
    2. 'strip' → logprob: -3.0487191677093506
    3. 'decode' → logprob: -9.04871940612793
    4. ' split' → logprob: -12.54871940612793
    5. '().' → logprob: -12.79871940612793
    6. '(split' → logprob: -12.92371940612793
    7. 'rstrip' → logprob: -13.29871940612793
    8. ')' → logprob: -13.42371940612793
    9. '```' → logprob: -14.17371940612793
    10. 'lines' → logprob: -14.42371940612793

Token 645: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.47495681833243e-05
    2. '()' → logprob: -10.625024795532227
    3. '()
' → logprob: -15.375024795532227
    4. '())' → logprob: -15.875024795532227
    5. ' ().' → logprob: -17.375024795532227
    6. '(' → logprob: -17.875024795532227
    7. '(),' → logprob: -18.000024795532227
    8. '   ' → logprob: -18.250024795532227
    9. '()).' → logprob: -18.625024795532227
    10. '('\' → logprob: -18.625024795532227

Token 646: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. '(split' → logprob: -19.625
    4. 'spl' → logprob: -20.75
    5. 'strip' → logprob: -21.125
    6. '   ' → logprob: -21.75
    7. '.split' → logprob: -21.75
    8. '```' → logprob: -22.0
    9. 'replace' → logprob: -23.125
    10. 'rstrip' → logprob: -23.5

Token 647: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.01111773680895567
    2. 'lines' → logprob: -4.511117935180664
    3. '("\' → logprob: -10.011117935180664
    4. '()' → logprob: -10.886117935180664
    5. '())' → logprob: -12.136117935180664
    6. '())
' → logprob: -15.011117935180664
    7. ''\' → logprob: -15.136117935180664
    8. '()\' → logprob: -15.261117935180664
    9. '()
' → logprob: -16.386117935180664
    10. '(' → logprob: -16.886117935180664

Token 648: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.023484917357563972
    2. ''\' → logprob: -4.273484706878662
    3. 'n' → logprob: -4.773484706878662
    4. 'lines' → logprob: -7.273484706878662
    5. 'newline' → logprob: -9.77348518371582
    6. '
' → logprob: -10.27348518371582
    7. '"\' → logprob: -10.64848518371582
    8. '('\' → logprob: -11.52348518371582
    9. ')' → logprob: -12.77348518371582
    10. '\' → logprob: -12.89848518371582

Token 649: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.24549689888954163
    2. ''))
' → logprob: -1.7454968690872192
    3. '))' → logprob: -3.245496988296509
    4. ')' → logprob: -6.24549674987793
    5. '))
' → logprob: -6.37049674987793
    6. '   ' → logprob: -8.37049674987793
    7. '')' → logprob: -8.99549674987793
    8. ''))
' → logprob: -9.49549674987793
    9. '"))' → logprob: -9.74549674987793
    10. '       ' → logprob: -11.37049674987793

Token 650: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14209090173244476
    2. 'n' → logprob: -2.2670907974243164
    3. ' for' → logprob: -4.267090797424316
    4. 'for' → logprob: -4.517090797424316
    5. ' n' → logprob: -5.642090797424316
    6. 'num' → logprob: -9.267090797424316
    7. 'results' → logprob: -9.642090797424316
    8. 'data' → logprob: -10.017090797424316
    9. '    
' → logprob: -10.017090797424316
    10. '
' → logprob: -10.142090797424316

Token 651: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0018010808853432536
    2. 'num' → logprob: -6.876801013946533
    3. '_,' → logprob: -8.001801490783691
    4. 't' → logprob: -8.626801490783691
    5. '   ' → logprob: -8.626801490783691
    6. 'count' → logprob: -11.001801490783691
    7. 'for' → logprob: -11.126801490783691
    8. 'try' → logprob: -11.501801490783691
    9. 'number' → logprob: -11.626801490783691
    10. 'T' → logprob: -12.251801490783691

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010115911572938785
    2. ',n' → logprob: -10.375101089477539
    3. ' ,' → logprob: -10.500101089477539
    4. '=' → logprob: -11.000101089477539
    5. ',data' → logprob: -11.875101089477539
    6. ',num' → logprob: -12.000101089477539
    7. '‌,' → logprob: -12.875101089477539
    8. '<|end|>' → logprob: -13.250101089477539
    9. ',...' → logprob: -14.500101089477539
    10. ',result' → logprob: -14.625101089477539

Token 653: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.01336162444204092
    2. ' data' → logprob: -4.38836145401001
    3. 'datasets' → logprob: -7.13836145401001
    4. ' datasets' → logprob: -10.388361930847168
    5. 'ball' → logprob: -11.763361930847168
    6. 'balls' → logprob: -12.513361930847168
    7. '   ' → logprob: -12.638361930847168
    8. 'sets' → logprob: -12.763361930847168
    9. 'dataset' → logprob: -12.888361930847168
    10. 'datas' → logprob: -13.513361930847168

Token 654: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -1.1637164789135568e-05
    2. '   ' → logprob: -11.625011444091797
    3. 'sets' → logprob: -14.125011444091797
    4. '_' → logprob: -15.000011444091797
    5. '_s' → logprob: -15.000011444091797
    6. ',' → logprob: -15.125011444091797
    7. 's' → logprob: -16.000011444091797
    8. ' sets' → logprob: -16.125011444091797
    9. '```' → logprob: -16.125011444091797
    10. '_lists' → logprob: -16.250011444091797

Token 655: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194334983825684
    2. '=' → logprob: -1.5019433498382568
    3. '<|end|>' → logprob: -11.876943588256836
    4. 'for' → logprob: -13.251943588256836
    5. ' for' → logprob: -13.376943588256836
    6. ' ' → logprob: -14.376943588256836
    7. '<|end|>' → logprob: -14.501943588256836
    8. '=data' → logprob: -14.751943588256836
    9. ',' → logprob: -15.126943588256836
    10. '=[]' → logprob: -15.251943588256836

Token 656: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.048587486147880554
    2. ' parser' → logprob: -3.0485875606536865
    3. '(parser' → logprob: -17.548587799072266
    4. '	parser' → logprob: -17.548587799072266
    5. 'parse' → logprob: -17.673587799072266
    6. 'Parser' → logprob: -18.423587799072266
    7. 'parsed' → logprob: -20.298587799072266
    8. '_parser' → logprob: -20.673587799072266
    9. '/parser' → logprob: -21.048587799072266
    10. '.parser' → logprob: -21.048587799072266

Token 657: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.009920056909322739
    2. '=parse' → logprob: -5.009920120239258
    3. ' =' → logprob: -5.884920120239258
    4. '=' → logprob: -8.134920120239258
    5. 'parse' → logprob: -9.759920120239258
    6. '.' → logprob: -9.759920120239258
    7. '_parse' → logprob: -12.134920120239258
    8. '.Parse' → logprob: -14.009920120239258
    9. '.next' → logprob: -14.009920120239258
    10. ' .' → logprob: -14.509920120239258

Token 658: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06637058407068253
    2. 'for' → logprob: -2.8163704872131348
    3. '
' → logprob: -5.566370487213135
    4. ' for' → logprob: -7.691370487213135
    5. '    
' → logprob: -9.191370964050293
    6. '	for' → logprob: -12.316370964050293
    7. '<|end|>' → logprob: -12.566370964050293
    8. '```' → logprob: -13.566370964050293
    9. '
' → logprob: -15.566370964050293
    10. '       ' → logprob: -16.191370010375977

Token 659: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22048312425613403
    2. '   ' → logprob: -1.7204830646514893
    3. ' for' → logprob: -3.9704830646514893
    4. '
' → logprob: -10.97048282623291
    5. 'results' → logprob: -12.59548282623291
    6. 'sim' → logprob: -13.34548282623291
    7. '    
' → logprob: -13.47048282623291
    8. '```' → logprob: -14.47048282623291
    9. 'result' → logprob: -15.22048282623291
    10. '  ' → logprob: -16.220483779907227

Token 660: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.5782752633094788
    2. 'for' → logprob: -0.8282752633094788
    3. 'results' → logprob: -6.078275203704834
    4. ' for' → logprob: -11.203275680541992
    5. 'result' → logprob: -11.578275680541992
    6. '   ' → logprob: -12.078275680541992
    7. ' simulator' → logprob: -12.453275680541992
    8. 'simulation' → logprob: -13.453275680541992
    9. 'simulate' → logprob: -13.703275680541992
    10. 'outputs' → logprob: -13.703275680541992

Token 661: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010334034450352192
    2. '=' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.126033782958984
    4. ':' → logprob: -15.876033782958984
    5. '.' → logprob: -16.376033782958984
    6. '   ' → logprob: -16.626033782958984
    7. '<|end|>' → logprob: -17.376033782958984
    8. '  ' → logprob: -17.501033782958984
    9. 's' → logprob: -18.251033782958984
    10. '	' → logprob: -18.376033782958984

Token 662: ' Ball' (ID: 17943)
  Prédit: 'Ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ball' → logprob: -0.006715370807796717
    2. ' Ball' → logprob: -5.006715297698975
    3. ' ' → logprob: -20.131715774536133
    4. '_ball' → logprob: -20.381715774536133
    5. 'Balls' → logprob: -21.631715774536133
    6. '   ' → logprob: -22.006715774536133
    7. '```' → logprob: -22.256715774536133
    8. ' ball' → logprob: -22.881715774536133
    9. 'Bal' → logprob: -23.256715774536133
    10. 'ball' → logprob: -23.381715774536133

Token 663: 'Container' (ID: 5626)
  Prédit: 'Container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Container' → logprob: -3.128163257315464e-07
    2. 'container' → logprob: -15.125
    3. '_container' → logprob: -18.875
    4. 'Ball' → logprob: -19.375
    5. 'Containers' → logprob: -19.75
    6. ' Container' → logprob: -19.875
    7. 'Simulator' → logprob: -20.375
    8. '_CONTAINER' → logprob: -20.625
    9. '-container' → logprob: -20.75
    10. 'Cont' → logprob: -21.125

Token 664: 'Simulator' (ID: 120745)
  Prédit: 'Simulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -1.9361264946837764e-07
    2. ' Simulator' → logprob: -16.625
    3. 'imulator' → logprob: -17.875
    4. 'sim' → logprob: -19.75
    5. 'Sim' → logprob: -20.75
    6. 's' → logprob: -21.625
    7. 'Animator' → logprob: -22.0
    8. '_sim' → logprob: -22.125
    9. ' simulator' → logprob: -22.125
    10. 'Sampler' → logprob: -22.5

Token 665: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035360404290258884
    2. 'for' → logprob: -6.128536224365234
    3. '
' → logprob: -7.378536224365234
    4. ' for' → logprob: -7.503536224365234
    5. '<|end|>' → logprob: -8.878536224365234
    6. '    
' → logprob: -10.503536224365234
    7. '<|end|>' → logprob: -12.503536224365234
    8. '[' → logprob: -14.253536224365234
    9. '	for' → logprob: -14.878536224365234
    10. '       ' → logprob: -14.878536224365234

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3132905662059784
    2. 'for' → logprob: -1.3132905960083008
    3. ' for' → logprob: -10.5632905960083
    4. '	for' → logprob: -13.9382905960083
    5. '
' → logprob: -14.0632905960083
    6. '```' → logprob: -14.0632905960083
    7. '    
' → logprob: -15.0632905960083
    8. 'results' → logprob: -16.063289642333984
    9. 'result' → logprob: -17.438289642333984
    10. '       ' → logprob: -17.938289642333984

Token 667: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.292907877039397e-06
    2. 'results' → logprob: -13.00000286102295
    3. ' for' → logprob: -14.50000286102295
    4. '
' → logprob: -15.50000286102295
    5. '   ' → logprob: -15.62500286102295
    6. '	for' → logprob: -19.250003814697266
    7. '    
' → logprob: -19.625003814697266
    8. '```' → logprob: -19.750003814697266
    9. 'result' → logprob: -20.125003814697266
    10. 'outputs' → logprob: -20.250003814697266

Token 668: ' data' (ID: 1238)
  Prédit: 'balls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'balls' → logprob: -0.16435649991035461
    2. 'data' → logprob: -1.9143564701080322
    3. ' balls' → logprob: -6.039356708526611
    4. ' data' → logprob: -7.164356708526611
    5. '   ' → logprob: -7.789356708526611
    6. 'dataset' → logprob: -8.289356231689453
    7. 'ball' → logprob: -8.789356231689453
    8. 'i' → logprob: -9.414356231689453
    9. 'sequence' → logprob: -11.789356231689453
    10. 'numbers' → logprob: -11.914356231689453

Token 669: '_set' (ID: 5451)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001616034540347755
    2. 'in' → logprob: -6.62661600112915
    3. '       ' → logprob: -8.626616477966309
    4. '   ' → logprob: -9.626616477966309
    5. '_set' → logprob: -10.751616477966309
    6. '_in' → logprob: -12.001616477966309
    7. '_' → logprob: -12.126616477966309
    8. 's' → logprob: -12.626616477966309
    9. 'set' → logprob: -13.501616477966309
    10. '    ' → logprob: -13.751616477966309

Token 670: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000913370808120817
    2. 'in' → logprob: -7.000913143157959
    3. ' ' → logprob: -14.625913619995117
    4. '    ' → logprob: -14.875913619995117
    5. '	in' → logprob: -15.125913619995117
    6. '   ' → logprob: -15.625913619995117
    7. '[' → logprob: -15.625913619995117
    8. ',' → logprob: -15.750913619995117
    9. '_' → logprob: -16.000913619995117
    10. '_in' → logprob: -16.000913619995117

Token 671: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0019293478690087795
    2. ' data' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.25192928314209
    4. '
' → logprob: -15.37692928314209
    5. '[data' → logprob: -16.751930236816406
    6. '(data' → logprob: -17.126930236816406
    7. '	data' → logprob: -17.626930236816406
    8. ' ' → logprob: -18.126930236816406
    9. 'Data' → logprob: -18.126930236816406
    10. '[' → logprob: -18.501930236816406

Token 672: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.00011355629976605996
    2. 's' → logprob: -9.500113487243652
    3. '_set' → logprob: -10.375113487243652
    4. 'sets' → logprob: -13.000113487243652
    5. '   ' → logprob: -13.375113487243652
    6. ':
' → logprob: -13.750113487243652
    7. '       ' → logprob: -14.125113487243652
    8. 'Sets' → logprob: -14.250113487243652
    9. '_s' → logprob: -14.625113487243652
    10. '_' → logprob: -15.500113487243652

Token 673: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5605688095092773
    2. ':
' → logprob: -0.9355688095092773
    3. '       ' → logprob: -3.3105688095092773
    4. '):
' → logprob: -9.060568809509277
    5. '():
' → logprob: -10.310568809509277
    6. '   ' → logprob: -10.560568809509277
    7. ',' → logprob: -10.685568809509277
    8. '<|end|>' → logprob: -10.935568809509277
    9. '<|end|>' → logprob: -10.935568809509277
    10. ':

' → logprob: -12.185568809509277

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6776029699249193e-05
    2. '<|end|>' → logprob: -11.50002670288086
    3. '<|end|>' → logprob: -12.62502670288086
    4. 'result' → logprob: -13.37502670288086
    5. ' if' → logprob: -13.50002670288086
    6. '```' → logprob: -13.75002670288086
    7. '        
' → logprob: -13.75002670288086
    8. '   ' → logprob: -13.75002670288086
    9. ' for' → logprob: -13.87502670288086
    10. '
' → logprob: -14.12502670288086

Token 675: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.37976208329200745
    2. 'print' (adapté à ' print') → logprob: -1.629762053489685
    3. '       ' → logprob: -2.1297621726989746
    4. ' result' → logprob: -7.004762172698975
    5. ' print' → logprob: -9.004761695861816
    6. 'answer' → logprob: -9.504761695861816
    7. '           ' → logprob: -11.504761695861816
    8. 'output' → logprob: -11.879761695861816
    9. 'if' → logprob: -12.129761695861816
    10. '   ' → logprob: -12.754761695861816

Token 676: '(sim' (ID: 95789)
  Prédit: '(sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sim' → logprob: -1.27099974633893e-05
    2. 'sim' → logprob: -11.625012397766113
    3. '(' → logprob: -12.500012397766113
    4. ' simulator' → logprob: -17.87501335144043
    5. 'Simulator' → logprob: -19.25001335144043
    6. '("' → logprob: -19.62501335144043
    7. '_sim' → logprob: -20.00001335144043
    8. '(
' → logprob: -20.25001335144043
    9. '((' → logprob: -20.87501335144043
    10. ' sim' → logprob: -21.00001335144043

Token 677: 'ulator' (ID: 16381)
  Prédit: 'ulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulator' → logprob: -0.05838442221283913
    2. 'ulate' → logprob: -2.933384418487549
    3. 'ator' → logprob: -6.058384418487549
    4. 'ate' → logprob: -6.933384418487549
    5. 'ul' → logprob: -9.683384895324707
    6. 'lator' → logprob: -9.808384895324707
    7. 'uator' → logprob: -10.808384895324707
    8. '(sim' → logprob: -11.683384895324707
    9. '(' → logprob: -12.058384895324707
    10. '   ' → logprob: -12.183384895324707

Token 678: '.sim' (ID: 58713)
  Prédit: '.sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sim' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.500000953674316
    3. 'simulate' → logprob: -16.5
    4. ' .' → logprob: -17.125
    5. ').' → logprob: -19.125
    6. '.run' → logprob: -19.5
    7. '.solve' → logprob: -19.625
    8. '.s' → logprob: -19.625
    9. '.evaluate' → logprob: -20.25
    10. '.predict' → logprob: -20.875

Token 679: 'ulate' (ID: 10111)
  Prédit: 'ulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.00012558852904476225
    2. 'ate' → logprob: -9.000125885009766
    3. 'ul' → logprob: -13.125125885009766
    4. 'uate' → logprob: -16.375125885009766
    5. 'ule' → logprob: -17.750125885009766
    6. 'ulat' → logprob: -18.250125885009766
    7. '```' → logprob: -18.375125885009766
    8. 'olate' → logprob: -18.500125885009766
    9. 'late' → logprob: -19.000125885009766
    10. 'ute' → logprob: -19.375125885009766

Token 680: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.375004768371582
    3. 'data' → logprob: -15.500004768371582
    4. ')data' → logprob: -17.625003814697266
    5. '(dat' → logprob: -18.500003814697266
    6. ' (' → logprob: -18.500003814697266
    7. '[data' → logprob: -19.000003814697266
    8. ')' → logprob: -19.125003814697266
    9. '(
' → logprob: -19.750003814697266
    10. ')(' → logprob: -19.750003814697266

Token 681: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.2664456789934775e-06
    2. 'set' → logprob: -14.000000953674316
    3. '_sets' → logprob: -15.750000953674316
    4. 'Set' → logprob: -16.750001907348633
    5. '_SET' → logprob: -16.875001907348633
    6. '_Set' → logprob: -17.750001907348633
    7. ')' → logprob: -18.125001907348633
    8. ')set' → logprob: -18.250001907348633
    9. '_' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.875001907348633

Token 682: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10841789096593857
    2. ')' → logprob: -2.4834179878234863
    3. '()))' → logprob: -4.483417987823486
    4. '())' → logprob: -4.858417987823486
    5. '))
' → logprob: -8.983417510986328
    6. '()' → logprob: -9.983417510986328
    7. ' ))' → logprob: -10.858417510986328
    8. '()))
' → logprob: -11.233417510986328
    9. '(' → logprob: -11.608417510986328
    10. ')))' → logprob: -11.733417510986328

Token 683: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.630610641877865e-06
    2. ' if' → logprob: -12.625006675720215
    3. '```' → logprob: -12.750006675720215
    4. '
' → logprob: -15.375006675720215
    5. '#' → logprob: -15.875006675720215
    6. '<|end|>' → logprob: -17.7500057220459
    7. 'main' → logprob: -19.2500057220459
    8. '\' → logprob: -19.2500057220459
    9. 'If' → logprob: -19.2500057220459
    10. '[' → logprob: -19.7500057220459

Token 684: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47410082817077637
    2. '__' → logprob: -0.9741008281707764
    3. '_name' → logprob: -11.724101066589355
    4. 'name' → logprob: -11.849101066589355
    5. '_' → logprob: -11.974101066589355
    6. '___' → logprob: -13.474101066589355
    7. ' name' → logprob: -15.349101066589355
    8. 'Name' → logprob: -15.474101066589355
    9. '/__' → logprob: -16.22410011291504
    10. ' ' → logprob: -16.47410011291504

Token 685: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0023103614803403616
    2. ' __' → logprob: -7.002310276031494
    3. ' ==' → logprob: -7.502310276031494
    4. '==' → logprob: -7.627310276031494
    5. '__.__' → logprob: -9.252310752868652
    6. 'name' → logprob: -9.877310752868652
    7. '.__' → logprob: -9.877310752868652
    8. '__.' → logprob: -10.127310752868652
    9. 'main' → logprob: -10.252310752868652
    10. '[' → logprob: -11.252310752868652

Token 686: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.3080716346157715e-05
    2. '==' → logprob: -10.875022888183594
    3. '__.__' → logprob: -12.750022888183594
    4. ' ==' → logprob: -14.125022888183594
    5. '___' → logprob: -16.000022888183594
    6. '____' → logprob: -16.125022888183594
    7. '__.' → logprob: -16.125022888183594
    8. '=="' → logprob: -16.375022888183594
    9. '__[' → logprob: -17.500022888183594
    10. '```' → logprob: -17.500022888183594

Token 687: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31725263595581055
    2. '==' → logprob: -1.3172526359558105
    3. ' ==' → logprob: -5.8172526359558105
    4. '=="' → logprob: -7.0672526359558105
    5. '=='' → logprob: -8.942253112792969
    6. '_' → logprob: -11.817253112792969
    7. '=' → logprob: -12.317253112792969
    8. '__.__' → logprob: -12.317253112792969
    9. '___' → logprob: -13.067253112792969
    10. '===' → logprob: -13.442253112792969

Token 688: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4741040766239166
    2. ''' → logprob: -0.9741040468215942
    3. '__' → logprob: -11.099103927612305
    4. ' "__' → logprob: -11.724103927612305
    5. ' '__' → logprob: -13.474103927612305
    6. ''"' → logprob: -14.349103927612305
    7. '"'' → logprob: -15.224103927612305
    8. '"user' → logprob: -15.224103927612305
    9. ''_' → logprob: -15.349103927612305
    10. ''name' → logprob: -15.599103927612305

Token 689: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.474223792552948
    2. 'main' → logprob: -0.974223792552948
    3. '"' → logprob: -9.099224090576172
    4. ''' → logprob: -10.724224090576172
    5. 'name' → logprob: -12.099224090576172
    6. '_main' → logprob: -12.724224090576172
    7. ' main' → logprob: -13.474224090576172
    8. '___' → logprob: -13.724224090576172
    9. '__":
' → logprob: -14.224224090576172
    10. 'built' → logprob: -15.224224090576172

Token 690: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011313535273075104
    2. '__' → logprob: -4.511313438415527
    3. '__':
' → logprob: -8.261313438415527
    4. '__.' → logprob: -12.386313438415527
    5. '__
' → logprob: -13.636313438415527
    6. '__.__' → logprob: -13.886313438415527
    7. '__["' → logprob: -14.761313438415527
    8. '__:' → logprob: -15.386313438415527
    9. '__
' → logprob: -15.886313438415527
    10. '.' → logprob: -16.636314392089844

Token 691: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12951558828353882
    2. '__' → logprob: -2.1295156478881836
    3. '"' → logprob: -6.379515647888184
    4. ''' → logprob: -7.379515647888184
    5. ' main' → logprob: -8.754515647888184
    6. '   ' → logprob: -9.254515647888184
    7. ' __' → logprob: -12.629515647888184
    8. ' ' → logprob: -13.379515647888184
    9. '_main' → logprob: -13.379515647888184
    10. '	main' → logprob: -13.754515647888184

Token 692: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -21.125
    4. '   ' → logprob: -22.875
    5. 'import' → logprob: -24.25
    6. '.main' → logprob: -24.75
    7. '(main' → logprob: -25.125
    8. '_main' → logprob: -25.875
    9. '
' → logprob: -26.375
    10. '__' → logprob: -27.125

Token 693: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009875539690256119
    2. '()
' → logprob: -7.750987529754639
    3. '(' → logprob: -7.875987529754639
    4. '```' → logprob: -9.750988006591797
    5. '<|end|>' → logprob: -9.875988006591797
    6. '
' → logprob: -10.500988006591797
    7. '()\' → logprob: -11.625988006591797
    8. '(
' → logprob: -11.875988006591797
    9. ' ()' → logprob: -12.625988006591797
    10. '#' → logprob: -12.625988006591797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 691
Tokens correctement prédits (1ère position, stricte): 323
Tokens correctement prédits (1ère position, avec adaptation): 362
Tokens correctement prédits (top 10): 596
Précision stricte (1ère position): 46.74%
Précision adaptée (1ère position): 52.39%
Précision (top 10): 86.25%
================================================================================
