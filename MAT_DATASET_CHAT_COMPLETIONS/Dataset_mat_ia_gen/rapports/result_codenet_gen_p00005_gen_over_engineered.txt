================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from typing import Tuple, Iterator, List

class IntegerPair:
    def __init__(self, a: int, b: int):
        self._a = a
        self._b = b
    
    @property
    def a(self) -> int:
        return self._a
    
    @property
    def b(self) -> int:
        return self._b

class MathUtils:
    @staticmethod
    def gcd(x: int, y: int) -> int:
        # Euclidean algorithm with type checking for future extensions
        a, b = abs(x), abs(y)
        while b != 0:
            a, b = b, a % b
        return a
    
    @staticmethod
    def lcm(x: int, y: int, gcd_value: int = None) -> int:
        # Calculate LCM using GCD; gcd_value can be precomputed for optimization
        if gcd_value is None:
            gcd_value = MathUtils.gcd(x, y)
        return (x // gcd_value) * y

class InputProvider:
    # Abstract input source, facilitating future input types (e.g. file, network)
    def __init__(self, source=sys.stdin):
        self.source = source
    
    def lines(self) -> Iterator[str]:
        for line in self.source:
            yield line.strip()

class DataParser:
    @staticmethod
    def parse_line_to_integer_pair(line: str) -> IntegerPair:
        parts = line.split()
        if len(parts) != 2:
            raise ValueError(f"Expected exactly two integers per line, got: {line}")
        a, b = map(int, parts)
        return IntegerPair(a, b)

class OutputHandler:
    # Abstract output manager for potential future extensions (logging, file output, etc.)
    def __init__(self, output=sys.stdout):
        self.output = output
    
    def print_result(self, gcd_value: int, lcm_value: int):
        print(f"{gcd_value} {lcm_value}", file=self.output)

class GcdLcmProcessor:
    # Encapsulated logic handling the problem solution
    def __init__(self, input_provider: InputProvider, output_handler: OutputHandler):
        self.input_provider = input_provider
        self.output_handler = output_handler
    
    def process(self):
        for line in self.input_provider.lines():
            if not line:
                continue  # skip empty lines
            pair = DataParser.parse_line_to_integer_pair(line)
            gcd_val = MathUtils.gcd(pair.a, pair.b)
            lcm_val = MathUtils.lcm(pair.a, pair.b, gcd_val)
            self.output_handler.print_result(gcd_val, lcm_val)

def main():
    input_provider = InputProvider()
    output_handler = OutputHandler()
    processor = GcdLcmProcessor(input_provider, output_handler)
    processor.process()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4366624355316162
    2. '.' → logprob: -1.1866624355316162
    3. 'import' → logprob: -4.061662673950195
    4. '\' → logprob: -4.436662673950195
    5. 'newline' → logprob: -5.061662673950195
    6. '<|end|>' → logprob: -5.561662673950195
    7. '
' → logprob: -5.936662673950195
    8. '```' → logprob: -6.561662673950195
    9. '' → logprob: -7.061662673950195
    10. '<|end|>' → logprob: -7.186662673950195

Token 4: ' typing' (ID: 34152)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.552763044834137
    2. 'import' → logprob: -0.927763044834137
    3. '.' → logprob: -3.677762985229492
    4. '.import' → logprob: -6.552762985229492
    5. '```' → logprob: -6.677762985229492
    6. '_import' → logprob: -7.552762985229492
    7. '<|end|>' → logprob: -8.927762985229492
    8. ' as' → logprob: -9.552762985229492
    9. '[' → logprob: -9.552762985229492
    10. '_' → logprob: -9.802762985229492

Token 6: ' Tuple' (ID: 50841)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.1929784119129181
    2. ' Any' → logprob: -1.9429783821105957
    3. 'Any' → logprob: -4.067978382110596
    4. 'List' → logprob: -4.317978382110596
    5. ' Optional' → logprob: -7.067978382110596
    6. ' Union' → logprob: -7.817978382110596
    7. ' Generator' → logprob: -8.442978858947754
    8. ' ' → logprob: -9.817978858947754
    9. 'Optional' → logprob: -10.192978858947754
    10. ' Iterable' → logprob: -10.192978858947754

Token 7: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2744899094104767
    2. '\n' → logprob: -1.8994898796081543
    3. '
' → logprob: -3.1494898796081543
    4. '```' → logprob: -3.8994898796081543
    5. 'import' → logprob: -4.399489879608154
    6. ',' → logprob: -4.899489879608154
    7. '\' → logprob: -6.149489879608154
    8. 'def' → logprob: -6.524489879608154
    9. ',

' → logprob: -7.149489879608154
    10. '


' → logprob: -7.524489879608154

Token 8: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6444917321205139
    2. ' List' → logprob: -0.8944917321205139
    3. 'Any' → logprob: -3.269491672515869
    4. 'Optional' → logprob: -4.894491672515869
    5. ' Optional' → logprob: -5.144491672515869
    6. ' Any' → logprob: -5.144491672515869
    7. 'Union' → logprob: -5.394491672515869
    8. ' Union' → logprob: -5.769491672515869
    9. 'Named' → logprob: -8.144492149353027
    10. 'Iterable' → logprob: -8.144492149353027

Token 9: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.671587347984314
    2. '```' → logprob: -1.671587347984314
    3. '
' → logprob: -1.921587347984314
    4. '\n' → logprob: -2.0465874671936035
    5. ',' → logprob: -4.9215874671936035
    6. '\' → logprob: -5.5465874671936035
    7. 'import' → logprob: -5.5465874671936035
    8. 'def' → logprob: -5.6715874671936035
    9. '``' → logprob: -6.7965874671936035
    10. '`' → logprob: -7.0465874671936035

Token 10: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.13920564949512482
    2. ' Iterable' → logprob: -2.8892056941986084
    3. 'List' → logprob: -3.6392056941986084
    4. 'Iterable' → logprob: -4.264205455780029
    5. ' Optional' → logprob: -4.639205455780029
    6. ' Generator' → logprob: -4.764205455780029
    7. ' Any' → logprob: -5.389205455780029
    8. ' Callable' → logprob: -5.639205455780029
    9. ' Union' → logprob: -6.139205455780029
    10. 'Any' → logprob: -6.764205455780029

Token 11: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7706198692321777
    2. '```' → logprob: -1.3956198692321777
    3. ',' → logprob: -2.1456198692321777
    4. '

' → logprob: -2.6456198692321777
    5. 'import' → logprob: -3.2706198692321777
    6. '\' → logprob: -4.020619869232178
    7. '
' → logprob: -4.520619869232178
    8. '<|end|>' → logprob: -4.645619869232178
    9. 'def' → logprob: -5.145619869232178
    10. '``' → logprob: -5.645619869232178

Token 12: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12971621751785278
    2. '```' → logprob: -2.754716157913208
    3. 'd' → logprob: -3.004716157913208
    4. '\' → logprob: -6.129716396331787
    5. '`' → logprob: -6.254716396331787
    6. 'class' → logprob: -6.379716396331787
    7. 'de' → logprob: -6.879716396331787
    8. '``' → logprob: -7.629716396331787
    9. 'import' → logprob: -8.004715919494629
    10. '\n' → logprob: -8.254715919494629

Token 13: ' Integer' (ID: 6611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11845956742763519
    2. ' My' → logprob: -3.118459463119507
    3. ' Space' → logprob: -3.743459463119507
    4. ' Parser' → logprob: -3.868459463119507
    5. ' Data' → logprob: -4.618459701538086
    6. ' Calculator' → logprob: -6.493459701538086
    7. ' User' → logprob: -6.743459701538086
    8. ' Vector' → logprob: -6.743459701538086
    9. ' Token' → logprob: -7.118459701538086
    10. ' Processor' → logprob: -7.243459701538086

Token 14: 'Pair' (ID: 15573)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018482012674212456
    2. '(' → logprob: -7.501848220825195
    3. ',' → logprob: -8.251848220825195
    4. 'Field' → logprob: -8.376848220825195
    5. '():' → logprob: -9.001848220825195
    6. 'Validator' → logprob: -9.001848220825195
    7. ' :' → logprob: -9.251848220825195
    8. 'Parser' → logprob: -10.001848220825195
    9. '):' → logprob: -10.001848220825195
    10. '>:' → logprob: -10.376848220825195

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0069300392642617226
    2. '(' → logprob: -5.006929874420166
    3. ' :' → logprob: -9.381930351257324
    4. '(:' → logprob: -9.756930351257324
    5. '():' → logprob: -10.381930351257324
    6. '```' → logprob: -12.006930351257324
    7. ':
' → logprob: -12.131930351257324
    8. ':**' → logprob: -12.131930351257324
    9. '[' → logprob: -12.381930351257324
    10. '):' → logprob: -13.006930351257324

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027480611577630043
    2. '   ' → logprob: -4.402480602264404
    3. '(' → logprob: -4.527480602264404
    4. '():' → logprob: -7.027480602264404
    5. '(object' → logprob: -7.152480602264404
    6. ' :' → logprob: -7.277480602264404
    7. ' (' → logprob: -7.777480602264404
    8. '```' → logprob: -8.277481079101562
    9. '<|end|>' → logprob: -8.652481079101562
    10. '):' → logprob: -8.902481079101562

Token 17: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.34247633814811707
    2. 'def' (adapté à ' def') → logprob: -1.3424763679504395
    3. '   ' → logprob: -3.5924763679504395
    4. '__' → logprob: -7.7174763679504395
    5. 'class' → logprob: -7.8424763679504395
    6. ' __' → logprob: -8.217475891113281
    7. '```' → logprob: -9.342475891113281
    8. ' ' → logprob: -11.092475891113281
    9. '    
' → logprob: -11.717475891113281
    10. '(' → logprob: -11.842475891113281

Token 18: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0735473558306694
    2. ' init' → logprob: -3.19854736328125
    3. '_init' → logprob: -4.57354736328125
    4. 'init' → logprob: -4.69854736328125
    5. ' def' → logprob: -5.44854736328125
    6. ' _' → logprob: -5.94854736328125
    7. '__' → logprob: -6.19854736328125
    8. '_' → logprob: -7.07354736328125
    9. ' ' → logprob: -8.19854736328125
    10. 'def' → logprob: -8.82354736328125

Token 19: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -18.0
    3. ' init' → logprob: -19.375
    4. 'int' → logprob: -20.5
    5. 'in' → logprob: -21.0
    6. '_init' → logprob: -21.375
    7. 'inite' → logprob: -22.375
    8. '```' → logprob: -22.75
    9. '	init' → logprob: -23.625
    10. 'inti' → logprob: -24.125

Token 20: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005866578314453363
    2. '__' → logprob: -5.255866527557373
    3. '__(
' → logprob: -8.130867004394531
    4. '__((' → logprob: -8.755867004394531
    5. '(self' → logprob: -8.880867004394531
    6. '(' → logprob: -10.880867004394531
    7. '__(*' → logprob: -11.630867004394531
    8. '__('' → logprob: -11.880867004394531
    9. '__("' → logprob: -13.880867004394531
    10. '```' → logprob: -13.880867004394531

Token 21: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020413640595506877
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -15.000204086303711
    4. '	self' → logprob: -16.12520408630371
    5. ')' → logprob: -16.62520408630371
    6. ',self' → logprob: -16.87520408630371
    7. '   ' → logprob: -17.75020408630371
    8. 's' → logprob: -17.87520408630371
    9. ' ' → logprob: -18.12520408630371
    10. '0' → logprob: -18.12520408630371

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.883260190486908
    2. '(self' → logprob: -1.2582602500915527
    3. 'self' → logprob: -1.8832602500915527
    4. ' (' → logprob: -2.8832602500915527
    5. '(' → logprob: -3.1332602500915527
    6. ' ,' → logprob: -3.8832602500915527
    7. ' ' → logprob: -4.508260250091553
    8. ' self' → logprob: -4.883260250091553
    9. ')' → logprob: -5.258260250091553
    10. ' )' → logprob: -5.758260250091553

Token 23: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4942401349544525
    2. ' self' → logprob: -0.9942401647567749
    3. ' first' → logprob: -4.7442402839660645
    4. 'first' → logprob: -4.9942402839660645
    5. 'a' → logprob: -6.3692402839660645
    6. ' a' → logprob: -6.8692402839660645
    7. 'x' → logprob: -7.2442402839660645
    8. ' x' → logprob: -7.8692402839660645
    9. ' left' → logprob: -8.244239807128906
    10. 'left' → logprob: -8.619239807128906

Token 24: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01362142525613308
    2. ' ,' → logprob: -4.5136213302612305
    3. ':' → logprob: -6.0136213302612305
    4. ',b' → logprob: -9.76362133026123
    5. ':int' → logprob: -10.63862133026123
    6. ')' → logprob: -11.76362133026123
    7. ',a' → logprob: -11.88862133026123
    8. 'a' → logprob: -11.88862133026123
    9. ',int' → logprob: -12.26362133026123
    10. ' ' → logprob: -12.38862133026123

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759568214416504
    2. 'int' → logprob: -0.8259568214416504
    3. ' ' → logprob: -11.325956344604492
    4. ':int' → logprob: -13.450956344604492
    5. '[int' → logprob: -13.825956344604492
    6. '=int' → logprob: -13.950956344604492
    7. '<int' → logprob: -14.200956344604492
    8. '  ' → logprob: -15.075956344604492
    9. '	int' → logprob: -15.325956344604492
    10. ',int' → logprob: -15.825956344604492

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024096666311379522
    2. ' ,' → logprob: -8.37524127960205
    3. ',a' → logprob: -12.25024127960205
    4. ',int' → logprob: -12.62524127960205
    5. ')' → logprob: -14.37524127960205
    6. 'a' → logprob: -14.50024127960205
    7. ',b' → logprob: -15.00024127960205
    8. ':' → logprob: -15.00024127960205
    9. '‌,' → logprob: -15.75024127960205
    10. ' ' → logprob: -16.000240325927734

Token 27: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16024057567119598
    2. 'b' → logprob: -1.9102405309677124
    3. ' ' → logprob: -11.410240173339844
    4. 'a' → logprob: -12.910240173339844
    5. ' ' → logprob: -13.285240173339844
    6. ' a' → logprob: -14.410240173339844
    7. '	b' → logprob: -16.160240173339844
    8. 'space' → logprob: -16.410240173339844
    9. ')' → logprob: -16.535240173339844
    10. ',' → logprob: -16.660240173339844

Token 28: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025558266788721085
    2. '):' → logprob: -3.7755582332611084
    3. ')' → logprob: -6.1505584716796875
    4. ':int' → logprob: -9.025558471679688
    5. ' ):' → logprob: -10.150558471679688
    6. ' :' → logprob: -11.525558471679688
    7. ' )' → logprob: -13.025558471679688
    8. ' ' → logprob: -13.150558471679688
    9. '):
' → logprob: -13.775558471679688
    10. '   ' → logprob: -14.150558471679688

Token 29: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.386886328458786
    2. 'int' → logprob: -1.1368863582611084
    3. ':int' → logprob: -12.261886596679688
    4. '=int' → logprob: -12.761886596679688
    5. '[int' → logprob: -13.261886596679688
    6. '<int' → logprob: -13.386886596679688
    7. ' ' → logprob: -13.886886596679688
    8. ' ' → logprob: -13.886886596679688
    9. ')' → logprob: -14.011886596679688
    10. '	int' → logprob: -14.636886596679688

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003635707776993513
    2. ')' → logprob: -5.628635883331299
    3. ':' → logprob: -10.50363540649414
    4. ' ):' → logprob: -12.00363540649414
    5. '):
' → logprob: -13.62863540649414
    6. '   ' → logprob: -14.50363540649414
    7. ' ' → logprob: -16.75363540649414
    8. ''):' → logprob: -16.75363540649414
    9. ',' → logprob: -16.87863540649414
    10. ')->' → logprob: -17.12863540649414

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000783899100497365
    2. 'self' → logprob: -7.750783920288086
    3. ')' → logprob: -8.625783920288086
    4. ' self' → logprob: -10.000783920288086
    5. ',' → logprob: -10.750783920288086
    6. '):' → logprob: -11.000783920288086
    7. 'a' → logprob: -11.125783920288086
    8. '   ' → logprob: -11.125783920288086
    9. '      ' → logprob: -11.250783920288086
    10. ' )' → logprob: -11.375783920288086

Token 32: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.33078572154045105
    2. ' self' → logprob: -1.5807857513427734
    3. '       ' → logprob: -2.5807857513427734
    4. ' ' → logprob: -9.330785751342773
    5. '   ' → logprob: -11.580785751342773
    6. ' ' → logprob: -12.080785751342773
    7. '	self' → logprob: -12.830785751342773
    8. '        ' → logprob: -13.455785751342773
    9. '(self' → logprob: -13.580785751342773
    10. '_self' → logprob: -13.955785751342773

Token 33: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02343204990029335
    2. '.a' → logprob: -3.7734320163726807
    3. ' .' → logprob: -8.648431777954102
    4. 'a' → logprob: -12.273431777954102
    5. '._' → logprob: -12.648431777954102
    6. ' ' → logprob: -14.648431777954102
    7. '   ' → logprob: -14.648431777954102
    8. ' a' → logprob: -14.773431777954102
    9. '    ' → logprob: -15.148431777954102
    10. '.__' → logprob: -15.648431777954102

Token 34: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8624639324116288e-06
    2. '_a' → logprob: -13.375001907348633
    3. ' a' → logprob: -15.375001907348633
    4. 'value' → logprob: -17.875001907348633
    5. '_' → logprob: -18.250001907348633
    6. '	a' → logprob: -19.250001907348633
    7. 'а' → logprob: -20.125001907348633
    8. ' ' → logprob: -20.500001907348633
    9. '```' → logprob: -20.625001907348633
    10. '.a' → logprob: -21.000001907348633

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.524346649646759
    2. '=' → logprob: -0.899346649646759
    3. ' ' → logprob: -7.649346828460693
    4. ',' → logprob: -7.899346828460693
    5. ' a' → logprob: -9.274346351623535
    6. ' ,' → logprob: -9.524346351623535
    7. '_' → logprob: -9.649346351623535
    8. '<|end|>' → logprob: -10.024346351623535
    9. ')' → logprob: -10.149346351623535
    10. '  ' → logprob: -11.274346351623535

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889000326395035
    2. ' a' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.703889846801758
    4. '	a' → logprob: -16.078889846801758
    5. ' ' → logprob: -17.078889846801758
    6. '_a' → logprob: -17.828889846801758
    7. ')a' → logprob: -19.578889846801758
    8. '  ' → logprob: -19.953889846801758
    9. ''a' → logprob: -20.328889846801758
    10. '   ' → logprob: -20.578889846801758

Token 37: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061883650720119476
    2. '<|end|>' → logprob: -3.5618836879730225
    3. ' ' → logprob: -5.186883449554443
    4. '\n' → logprob: -5.436883449554443
    5. '   ' → logprob: -5.436883449554443
    6. '        
' → logprob: -5.811883449554443
    7. ' 
' → logprob: -5.811883449554443
    8. '    ' → logprob: -6.311883449554443
    9. '\' → logprob: -6.311883449554443
    10. '    
' → logprob: -6.436883449554443

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04264959320425987
    2. '<|end|>' → logprob: -3.792649507522583
    3. ' ' → logprob: -5.292649745941162
    4. ' 
' → logprob: -5.667649745941162
    5. '        ' → logprob: -6.042649745941162
    6. '        
' → logprob: -6.167649745941162
    7. '
' → logprob: -6.417649745941162
    8. '    
' → logprob: -6.542649745941162
    9. '  
' → logprob: -7.542649745941162
    10. 'self' → logprob: -7.542649745941162

Token 39: ' self' (ID: 1051)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5465027689933777
    2. '       ' → logprob: -1.4215028285980225
    3. 'self' (adapté à ' self') → logprob: -1.9215028285980225
    4. ' ' → logprob: -3.9215028285980225
    5. ' self' → logprob: -5.171502590179443
    6. '        ' → logprob: -6.671502590179443
    7. '   ' → logprob: -6.796502590179443
    8. '
' → logprob: -6.921502590179443
    9. '        
' → logprob: -6.921502590179443
    10. ' 
' → logprob: -7.046502590179443

Token 40: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.719330906867981
    2. '_' → logprob: -0.719330906867981
    3. '._' → logprob: -4.344330787658691
    4. ' .' → logprob: -4.844330787658691
    5. ' _' → logprob: -6.094330787658691
    6. ' ' → logprob: -6.219330787658691
    7. '    ' → logprob: -7.719330787658691
    8. ',' → logprob: -9.469330787658691
    9. ')' → logprob: -9.969330787658691
    10. '   ' → logprob: -10.344330787658691

Token 41: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.896309739408025e-07
    2. '_b' → logprob: -14.375000953674316
    3. ' b' → logprob: -15.625000953674316
    4. 'a' → logprob: -19.5
    5. '	b' → logprob: -19.625
    6. ' б' → logprob: -20.25
    7. 'б' → logprob: -20.625
    8. '.b' → logprob: -20.875
    9. '<|end|>' → logprob: -21.0
    10. '>b' → logprob: -21.125

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018207889050245285
    2. '=' → logprob: -4.018208026885986
    3. ' ' → logprob: -10.018207550048828
    4. ')' → logprob: -12.518207550048828
    5. '_' → logprob: -12.768207550048828
    6. '<|end|>' → logprob: -12.893207550048828
    7. ' ' → logprob: -14.143207550048828
    8. ' =)' → logprob: -14.268207550048828
    9. '<|end|>' → logprob: -14.643207550048828
    10. '    ' → logprob: -14.768207550048828

Token 43: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25193020701408386
    2. ' b' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.501930236816406
    4. ' ' → logprob: -14.751930236816406
    5. '	b' → logprob: -15.501930236816406
    6. ' б' → logprob: -17.251930236816406
    7. '_b' → logprob: -18.501930236816406
    8. '   ' → logprob: -18.501930236816406
    9. '>b' → logprob: -18.689430236816406
    10. ')b' → logprob: -18.689430236816406

Token 44: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7952805757522583
    2. '   ' → logprob: -1.0452805757522583
    3. '    
' → logprob: -1.7952805757522583
    4. '<|end|>' → logprob: -3.9202804565429688
    5. ' 
' → logprob: -5.795280456542969
    6. '        
' → logprob: -6.170280456542969
    7. '  
' → logprob: -6.670280456542969
    8. '<|end|>' → logprob: -7.170280456542969
    9. '    ' → logprob: -7.295280456542969
    10. ' ' → logprob: -7.420280456542969

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46300554275512695
    2. 'def' → logprob: -1.588005542755127
    3. ' def' → logprob: -2.088005542755127
    4. '@property' → logprob: -3.213005542755127
    5. ' @' → logprob: -6.463005542755127
    6. ' ' → logprob: -8.588005065917969
    7. '    
' → logprob: -8.713005065917969
    8. '@' → logprob: -9.088005065917969
    9. '    ' → logprob: -10.713005065917969
    10. ' property' → logprob: -11.588005065917969

Token 46: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25242912769317627
    2. '@property' → logprob: -1.5024291276931763
    3. ' def' → logprob: -8.002429008483887
    4. '   ' → logprob: -9.002429008483887
    5. '@' (adapté à ' @') → logprob: -10.377429008483887
    6. ' @' → logprob: -12.002429008483887
    7. ' ' → logprob: -12.627429008483887
    8. 'property' → logprob: -14.002429008483887
    9. 'de' → logprob: -15.377429008483887
    10. '```' → logprob: -16.252429962158203

Token 47: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.0005504102446138859
    2. 'proper' → logprob: -7.625550270080566
    3. 'pro' → logprob: -10.000550270080566
    4. 'staticmethod' → logprob: -11.750550270080566
    5. 'classmethod' → logprob: -11.875550270080566
    6. 'pr' → logprob: -13.750550270080566
    7. 'prop' → logprob: -15.000550270080566
    8. ' property' → logprob: -15.500550270080566
    9. '@property' → logprob: -15.500550270080566
    10. 'p' → logprob: -15.750550270080566

Token 48: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10703564435243607
    2. ' def' → logprob: -2.3570356369018555
    3. '   ' → logprob: -5.2320356369018555
    4. '
' → logprob: -8.107035636901855
    5. '    
' → logprob: -8.357035636901855
    6. '(' → logprob: -8.482035636901855
    7. ' ' → logprob: -8.982035636901855
    8. '_' → logprob: -9.232035636901855
    9. '    ' → logprob: -9.232035636901855
    10. '<|end|>' → logprob: -9.482035636901855

Token 49: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012354647042229772
    2. ' def' → logprob: -7.001235485076904
    3. '   ' → logprob: -9.001235008239746
    4. '
' → logprob: -9.126235008239746
    5. '_def' → logprob: -10.501235008239746
    6. '    
' → logprob: -10.751235008239746
    7. '(' → logprob: -10.876235008239746
    8. 'a' → logprob: -11.876235008239746
    9. '	def' → logprob: -12.751235008239746
    10. '('' → logprob: -13.251235008239746

Token 50: ' def' (ID: 1056)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07972923666238785
    2. 'def' (adapté à ' def') → logprob: -2.5797293186187744
    3. ' def' → logprob: -7.329729080200195
    4. ' a' → logprob: -8.829729080200195
    5. '
' → logprob: -11.079729080200195
    6. '   ' → logprob: -11.579729080200195
    7. 'b' → logprob: -12.704729080200195
    8. '_a' → logprob: -12.704729080200195
    9. ''a' → logprob: -13.079729080200195
    10. '    
' → logprob: -13.204729080200195

Token 51: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17992448806762695
    2. 'a' → logprob: -1.804924488067627
    3. ' sum' → logprob: -9.429924011230469
    4. ' first' → logprob: -10.179924011230469
    5. ' ' → logprob: -10.304924011230469
    6. 'sum' → logprob: -11.804924011230469
    7. '_a' → logprob: -12.054924011230469
    8. '	a' → logprob: -12.429924011230469
    9. 'first' → logprob: -13.054924011230469
    10. 'A' → logprob: -14.054924011230469

Token 52: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20894396305084229
    2. '(' → logprob: -1.9589439630508423
    3. '<|end|>' → logprob: -3.7089438438415527
    4. '():' → logprob: -4.458943843841553
    5. ':' → logprob: -5.583943843841553
    6. '<|end|>' → logprob: -6.458943843841553
    7. '   ' → logprob: -6.583943843841553
    8. 'self' → logprob: -6.708943843841553
    9. ')' → logprob: -6.708943843841553
    10. '()' → logprob: -7.083943843841553

Token 53: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3909357488155365
    2. ')' → logprob: -1.1409357786178589
    3. '):
' → logprob: -5.640935897827148
    4. ' ):' → logprob: -8.015935897827148
    5. ' )' → logprob: -9.765935897827148
    6. '   ' → logprob: -10.515935897827148
    7. 'self' → logprob: -10.515935897827148
    8. ')return' → logprob: -11.265935897827148
    9. '       ' → logprob: -11.640935897827148
    10. ':' → logprob: -11.765935897827148

Token 54: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5264157056808472
    2. '():' → logprob: -1.9014157056808472
    3. '->' → logprob: -2.1514158248901367
    4. '(self' → logprob: -2.6514158248901367
    5. '(' → logprob: -3.1514158248901367
    6. ' ->' → logprob: -5.026415824890137
    7. ':return' → logprob: -5.151415824890137
    8. '       ' → logprob: -5.151415824890137
    9. ')' → logprob: -5.901415824890137
    10. 'self' → logprob: -5.901415824890137

Token 55: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1602243334054947
    2. 'int' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.53522491455078
    4. '	int' → logprob: -17.16022491455078
    5. ':int' → logprob: -17.28522491455078
    6. '[int' → logprob: -17.53522491455078
    7. '   ' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.03522491455078
    9. '(int' → logprob: -18.41022491455078
    10. '<int' → logprob: -18.53522491455078

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006746663711965084
    2. ':return' → logprob: -8.0006742477417
    3. '():' → logprob: -8.7506742477417
    4. ':
' → logprob: -9.3756742477417
    5. '):' → logprob: -9.8756742477417
    6. '       ' → logprob: -11.1256742477417
    7. '.' → logprob: -12.2506742477417
    8. 'return' → logprob: -12.3756742477417
    9. '   ' → logprob: -12.3756742477417
    10. '<|end|>' → logprob: -12.6256742477417

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009941066382452846
    2. 'return' → logprob: -7.1259942054748535
    3. ' return' → logprob: -8.625993728637695
    4. '   ' → logprob: -12.250993728637695
    5. ' ' → logprob: -13.750993728637695
    6. '	' → logprob: -14.000993728637695
    7. '    ' → logprob: -14.125993728637695
    8. ':return' → logprob: -14.125993728637695
    9. '```' → logprob: -15.125993728637695
    10. 'self' → logprob: -15.125993728637695

Token 58: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0031856747809797525
    2. '       ' → logprob: -6.003185749053955
    3. ' return' → logprob: -7.253185749053955
    4. 'self' → logprob: -14.628185272216797
    5. '```' → logprob: -14.753185272216797
    6. '	return' → logprob: -14.878185272216797
    7. ':return' → logprob: -15.878185272216797
    8. '   ' → logprob: -16.003185272216797
    9. 'eturn' → logprob: -16.253185272216797
    10. '{return' → logprob: -16.253185272216797

Token 59: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931476593017578
    2. 'self' → logprob: -0.6931476593017578
    3. '       ' → logprob: -14.693147659301758
    4. ' ' → logprob: -16.693147659301758
    5. '	self' → logprob: -16.818147659301758
    6. '   ' → logprob: -17.568147659301758
    7. '_self' → logprob: -17.568147659301758
    8. '(self' → logprob: -17.818147659301758
    9. ' ' → logprob: -19.193147659301758
    10. '    ' → logprob: -20.943147659301758

Token 60: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.6550729419104755e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -13.875036239624023
    4. '   ' → logprob: -16.000036239624023
    5. '.__' → logprob: -17.625036239624023
    6. ')._' → logprob: -17.750036239624023
    7. ' ' → logprob: -18.125036239624023
    8. '->_' → logprob: -18.875036239624023
    9. ']._' → logprob: -19.125036239624023
    10. '       ' → logprob: -19.625036239624023

Token 61: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. '_a' → logprob: -14.125000953674316
    3. 'b' → logprob: -18.5
    4. '	a' → logprob: -18.875
    5. '.a' → logprob: -19.125
    6. '_' → logprob: -19.375
    7. 'а' → logprob: -20.375
    8. ''a' → logprob: -21.0
    9. '-a' → logprob: -22.0
    10. '"a' → logprob: -22.25

Token 62: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.36853185296058655
    2. '   ' → logprob: -1.3685318231582642
    3. '
' → logprob: -3.4935319423675537
    4. '```' → logprob: -5.368531703948975
    5. '<|end|>' → logprob: -5.493531703948975
    6. '\n' → logprob: -5.493531703948975
    7. ' 
' → logprob: -5.993531703948975
    8. '   
' → logprob: -6.243531703948975
    9. '  
' → logprob: -6.368531703948975
    10. '    ' → logprob: -6.993531703948975

Token 63: '   ' (ID: 271)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -0.22333621978759766
    2. '@' → logprob: -2.2233362197875977
    3. '   ' → logprob: -2.8483362197875977
    4. '    
' → logprob: -3.4733362197875977
    5. ' @' → logprob: -6.473336219787598
    6. '
' → logprob: -7.848336219787598
    7. ' ' → logprob: -7.973336219787598
    8. '        
' → logprob: -8.473336219787598
    9. '  
' → logprob: -9.348336219787598
    10. ' 
' → logprob: -9.348336219787598

Token 64: ' @' (ID: 759)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -0.014166207052767277
    2. '@' (adapté à ' @') → logprob: -4.264166355133057
    3. ' @' → logprob: -13.014165878295898
    4. 'b' → logprob: -16.0141658782959
    5. '   ' → logprob: -16.1391658782959
    6. '@index' → logprob: -16.6391658782959
    7. '@return' → logprob: -16.6391658782959
    8. 'property' → logprob: -17.6391658782959
    9. ' ' → logprob: -17.8891658782959
    10. '@end' → logprob: -18.2641658782959

Token 65: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.00010723850573413074
    2. 'b' → logprob: -9.500106811523438
    3. 'a' → logprob: -10.875106811523438
    4. '@property' → logprob: -11.375106811523438
    5. ' property' → logprob: -14.000106811523438
    6. '.property' → logprob: -14.125106811523438
    7. 'staticmethod' → logprob: -15.625106811523438
    8. '_property' → logprob: -15.875106811523438
    9. 'classmethod' → logprob: -16.625106811523438
    10. '	property' → logprob: -17.000106811523438

Token 66: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5562432408332825
    2. ' def' → logprob: -0.9312432408332825
    3. '
' → logprob: -4.181243419647217
    4. '   ' → logprob: -4.556243419647217
    5. '<|end|>' → logprob: -5.056243419647217
    6. '<|end|>' → logprob: -9.056242942810059
    7. '    
' → logprob: -9.181242942810059
    8. ' 
' → logprob: -10.806242942810059
    9. '	def' → logprob: -10.806242942810059
    10. '  
' → logprob: -10.806242942810059

Token 67: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05345378443598747
    2. ' def' → logprob: -3.0534536838531494
    3. '   ' → logprob: -5.4284539222717285
    4. ' ' → logprob: -8.92845344543457
    5. '
' → logprob: -9.30345344543457
    6. '    
' → logprob: -9.55345344543457
    7. '<|end|>' → logprob: -9.55345344543457
    8. '  ' → logprob: -10.67845344543457
    9. '	def' → logprob: -11.30345344543457
    10. ' 
' → logprob: -11.42845344543457

Token 68: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11491861939430237
    2. ' def' → logprob: -2.3649187088012695
    3. 'b' → logprob: -4.3649187088012695
    4. '   ' → logprob: -6.3649187088012695
    5. ' b' → logprob: -9.11491870880127
    6. ' ' → logprob: -10.23991870880127
    7. '_b' → logprob: -11.98991870880127
    8. '  ' → logprob: -12.23991870880127
    9. '
' → logprob: -13.23991870880127
    10. '	def' → logprob: -13.36491870880127

Token 69: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07152670621871948
    2. 'b' → logprob: -2.6965267658233643
    3. '_b' → logprob: -7.071526527404785
    4. ' _' → logprob: -8.321526527404785
    5. ' ' → logprob: -8.446526527404785
    6. '_' → logprob: -8.446526527404785
    7. ' ' → logprob: -9.821526527404785
    8. 'space' → logprob: -12.321526527404785
    9. ' б' → logprob: -13.321526527404785
    10. ' space' → logprob: -13.946526527404785

Token 70: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025152405723929405
    2. '<|end|>' → logprob: -4.400152206420898
    3. '(' → logprob: -5.650152206420898
    4. '()' → logprob: -6.150152206420898
    5. '<|end|>' → logprob: -6.275152206420898
    6. '   ' → logprob: -6.900152206420898
    7. 'return' → logprob: -6.900152206420898
    8. 'self' → logprob: -7.275152206420898
    9. ')' → logprob: -7.275152206420898
    10. '       ' → logprob: -7.775152206420898

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022761584841646254
    2. ')return' → logprob: -8.500227928161621
    3. '):' → logprob: -11.500227928161621
    4. '):
' → logprob: -13.125227928161621
    5. ')
' → logprob: -13.125227928161621
    6. '(self' → logprob: -13.250227928161621
    7. ' )' → logprob: -13.375227928161621
    8. '   ' → logprob: -13.500227928161621
    9. '<|end|>' → logprob: -13.500227928161621
    10. ')_' → logprob: -14.375227928161621

Token 72: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0757282972335815
    2. '       ' → logprob: -1.3257282972335815
    3. '(self' → logprob: -1.8257282972335815
    4. '   ' → logprob: -2.325728416442871
    5. ')' → logprob: -3.075728416442871
    6. ':return' → logprob: -3.575728416442871
    7. ' return' → logprob: -4.450728416442871
    8. ' ' → logprob: -4.575728416442871
    9. 'return' → logprob: -4.575728416442871
    10. ' ->' → logprob: -5.075728416442871

Token 73: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889033854007721
    2. ' int' → logprob: -2.578890323638916
    3. 'self' → logprob: -15.203890800476074
    4. ' ' → logprob: -16.203889846801758
    5. ' self' → logprob: -16.328889846801758
    6. '<int' → logprob: -16.828889846801758
    7. ':int' → logprob: -18.328889846801758
    8. '[int' → logprob: -18.828889846801758
    9. '_int' → logprob: -19.203889846801758
    10. '(int' → logprob: -19.328889846801758

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27290061116218567
    2. ':
' → logprob: -1.7729005813598633
    3. '       ' → logprob: -2.7729005813598633
    4. ':return' → logprob: -5.272900581359863
    5. 'return' → logprob: -7.647900581359863
    6. '
' → logprob: -8.397900581359863
    7. '():
' → logprob: -9.022900581359863
    8. '():' → logprob: -9.272900581359863
    9. '):
' → logprob: -9.272900581359863
    10. '   ' → logprob: -9.272900581359863

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020600629970431328
    2. 'return' → logprob: -4.14560079574585
    3. ' return' → logprob: -5.39560079574585
    4. ':return' → logprob: -12.145600318908691
    5. '   ' → logprob: -12.520600318908691
    6. 'self' → logprob: -12.895600318908691
    7. '```' → logprob: -12.895600318908691
    8. ' ' → logprob: -13.270600318908691
    9. '	return' → logprob: -13.645600318908691
    10. '      ' → logprob: -14.770600318908691

Token 76: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005986657342873514
    2. ' return' → logprob: -7.500598430633545
    3. '       ' → logprob: -10.000598907470703
    4. 'self' → logprob: -16.500598907470703
    5. ':return' → logprob: -17.250598907470703
    6. '	return' → logprob: -17.625598907470703
    7. '{return' → logprob: -17.875598907470703
    8. '```' → logprob: -18.000598907470703
    9. '   ' → logprob: -18.250598907470703
    10. ' ' → logprob: -20.000598907470703

Token 77: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740802049636841
    2. 'self' → logprob: -0.9740802049636841
    3. '_self' → logprob: -12.974080085754395
    4. ' ' → logprob: -14.974080085754395
    5. ' _' → logprob: -15.474080085754395
    6. '   ' → logprob: -16.22408103942871
    7. ' ' → logprob: -16.47408103942871
    8. '_' → logprob: -16.97408103942871
    9. '	self' → logprob: -16.97408103942871
    10. '(self' → logprob: -17.09908103942871

Token 78: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0793476402759552
    2. '.' → logprob: -2.579347610473633
    3. '_' → logprob: -8.079347610473633
    4. '.b' → logprob: -10.079347610473633
    5. '_.' → logprob: -10.079347610473633
    6. '.`' → logprob: -10.704347610473633
    7. '._
' → logprob: -11.454347610473633
    8. '.
' → logprob: -11.454347610473633
    9. '_b' → logprob: -12.204347610473633
    10. '._

' → logprob: -12.454347610473633

Token 79: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. '_b' → logprob: -16.0
    3. 'a' → logprob: -16.5
    4. '_' → logprob: -18.25
    5. '	b' → logprob: -18.25
    6. 'б' → logprob: -18.5
    7. ' b' → logprob: -19.0
    8. ''b' → logprob: -19.125
    9. 'ب' → logprob: -20.1875
    10. '```' → logprob: -20.25

Token 80: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1420886218547821
    2. '    
' → logprob: -2.2670886516571045
    3. '<|end|>' → logprob: -4.392088413238525
    4. '   ' → logprob: -4.642088413238525
    5. ' 
' → logprob: -5.767088413238525
    6. '  
' → logprob: -7.142088413238525
    7. '\n' → logprob: -7.517088413238525
    8. '

' → logprob: -7.767088413238525
    9. '   
' → logprob: -8.017088890075684
    10. '<|end|>' → logprob: -8.267088890075684

Token 81: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6419646739959717
    2. '    
' → logprob: -1.1419646739959717
    3. '   ' → logprob: -2.0169646739959717
    4. ' 
' → logprob: -4.641964912414551
    5. ' ' → logprob: -5.516964912414551
    6. '   
' → logprob: -6.016964912414551
    7. '  
' → logprob: -6.141964912414551
    8. '<|end|>' → logprob: -7.141964912414551
    9. '

' → logprob: -7.641964912414551
    10. '     
' → logprob: -8.01696491241455

Token 82: ' Math' (ID: 7268)
  Prédit: ' Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Integer' → logprob: -0.14592202007770538
    2. ' Pair' → logprob: -2.7709219455718994
    3. ' List' → logprob: -3.1459219455718994
    4. ' ' → logprob: -4.1459221839904785
    5. ' Tuple' → logprob: -4.5209221839904785
    6. ' Triple' → logprob: -6.8959221839904785
    7. ' Iterable' → logprob: -7.1459221839904785
    8. ' Iterator' → logprob: -7.1459221839904785
    9. ' Inte' → logprob: -8.64592170715332
    10. ' Trip' → logprob: -9.14592170715332

Token 83: 'Utils' (ID: 5687)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6688489317893982
    2. '.' → logprob: -0.9188489317893982
    3. 'Operations' → logprob: -3.043848991394043
    4. 'Operator' → logprob: -4.418848991394043
    5. 'Operation' → logprob: -5.043848991394043
    6. 'S' → logprob: -5.418848991394043
    7. 'Helper' → logprob: -6.293848991394043
    8. 'Util' → logprob: -6.543848991394043
    9. 'Operators' → logprob: -6.543848991394043
    10. ',' → logprob: -6.918848991394043

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.1782583391759545e-05
    2. ':
' → logprob: -11.875031471252441
    3. '(' → logprob: -12.000031471252441
    4. ' :' → logprob: -12.250031471252441
    5. '.' → logprob: -12.750031471252441
    6. '<|end|>' → logprob: -12.750031471252441
    7. '():' → logprob: -13.000031471252441
    8. '):' → logprob: -13.125031471252441
    9. ':**' → logprob: -13.500031471252441
    10. ')' → logprob: -14.500031471252441

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055021412670612335
    2. '    
' → logprob: -3.4300215244293213
    3. '@' → logprob: -4.055021286010742
    4. ':' → logprob: -6.805021286010742
    5. ' 
' → logprob: -7.430021286010742
    6. ' @' → logprob: -7.680021286010742
    7. 'def' → logprob: -8.055021286010742
    8. '_' → logprob: -8.180021286010742
    9. ' ' → logprob: -8.305021286010742
    10. ' def' → logprob: -9.305021286010742

Token 86: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8447068333625793
    2. ' @' → logprob: -0.8447068333625793
    3. ' ' → logprob: -2.7197067737579346
    4. ' def' → logprob: -3.0947067737579346
    5. '@' (adapté à ' @') → logprob: -4.594707012176514
    6. '    ' → logprob: -5.094707012176514
    7. 'def' → logprob: -5.219707012176514
    8. '    
' → logprob: -5.594707012176514
    9. '  ' → logprob: -7.469707012176514
    10. ' static' → logprob: -7.594707012176514

Token 87: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0026710189413279295
    2. 'classmethod' → logprob: -7.002671241760254
    3. 'static' → logprob: -7.127671241760254
    4. 'sta' → logprob: -7.627671241760254
    5. 'st' → logprob: -8.627671241760254
    6. 'property' → logprob: -8.752671241760254
    7. 'stat' → logprob: -9.127671241760254
    8. 's' → logprob: -10.752671241760254
    9. 'dat' → logprob: -13.877671241760254
    10. 'stas' → logprob: -16.877670288085938

Token 88: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38743826746940613
    2. '(' → logprob: -1.3874382972717285
    3. 'def' → logprob: -2.8874382972717285
    4. '.' → logprob: -4.3874382972717285
    5. ' ' → logprob: -7.0124382972717285
    6. '   ' → logprob: -7.7624382972717285
    7. ')' → logprob: -8.13743782043457
    8. '.def' → logprob: -8.26243782043457
    9. '(def' → logprob: -8.26243782043457
    10. '()' → logprob: -8.51243782043457

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5845497846603394
    2. '   ' → logprob: -1.3345497846603394
    3. 'def' → logprob: -1.9595497846603394
    4. ' def' → logprob: -3.334549903869629
    5. '(' → logprob: -7.584549903869629
    6. '(
' → logprob: -7.584549903869629
    7. '(def' → logprob: -7.709549903869629
    8. '    
' → logprob: -7.834549903869629
    9. '()
' → logprob: -8.584549903869629
    10. '()' → logprob: -8.959549903869629

Token 90: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005935082212090492
    2. ' def' → logprob: -5.130935192108154
    3. '
' → logprob: -12.630934715270996
    4. 'd' → logprob: -13.880934715270996
    5. ' ' → logprob: -14.005934715270996
    6. '   ' → logprob: -14.755934715270996
    7. 'de' → logprob: -15.130934715270996
    8. '```' → logprob: -15.630934715270996
    9. 'add' → logprob: -15.880934715270996
    10. 'g' → logprob: -16.255935668945312

Token 91: ' gcd' (ID: 106918)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.45581671595573425
    2. ' gcd' → logprob: -1.0808167457580566
    3. ' sum' → logprob: -4.830816745758057
    4. 'g' → logprob: -5.455816745758057
    5. ' compute' → logprob: -6.080816745758057
    6. ' calculate' → logprob: -6.080816745758057
    7. ' greatest' → logprob: -6.205816745758057
    8. ' find' → logprob: -6.330816745758057
    9. ' g' → logprob: -6.705816745758057
    10. ' generate' → logprob: -6.955816745758057

Token 92: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002214250387623906
    2. '(a' → logprob: -6.127214431762695
    3. ' (' → logprob: -10.877214431762695
    4. '<|end|>' → logprob: -13.002214431762695
    5. '(x' → logprob: -13.127214431762695
    6. '(
' → logprob: -13.502214431762695
    7. ')' → logprob: -14.752214431762695
    8. '(A' → logprob: -14.752214431762695
    9. '```' → logprob: -15.002214431762695
    10. 'a' → logprob: -15.127214431762695

Token 93: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011849920265376568
    2. ' ,' → logprob: -6.751184940338135
    3. ')' → logprob: -12.126185417175293
    4. ',x' → logprob: -12.626185417175293
    5. ',int' → logprob: -13.126185417175293
    6. ',
' → logprob: -13.626185417175293
    7. ',a' → logprob: -14.501185417175293
    8. ':' → logprob: -15.251185417175293
    9. ',)' → logprob: -15.251185417175293
    10. '<|end|>' → logprob: -15.251185417175293

Token 94: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.48783761262893677
    2. ' int' → logprob: -0.9878376126289368
    3. ' ' → logprob: -5.612837791442871
    4. ' )' → logprob: -5.612837791442871
    5. '<|end|>' → logprob: -5.737837791442871
    6. ')' → logprob: -6.237837791442871
    7. ',' → logprob: -7.987837791442871
    8. ' x' → logprob: -7.987837791442871
    9. ' ,' → logprob: -9.612837791442871
    10. ',int' → logprob: -9.737837791442871

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ' ,' → logprob: -10.625024795532227
    3. '‌,' → logprob: -15.875024795532227
    4. ',
' → logprob: -16.250024795532227
    5. ',int' → logprob: -16.250024795532227
    6. ',y' → logprob: -16.375024795532227
    7. ')' → logprob: -16.625024795532227
    8. ',

' → logprob: -16.875024795532227
    9. '<|end|>' → logprob: -17.500024795532227
    10. ',x' → logprob: -17.625024795532227

Token 96: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3869091868400574
    2. ' y' → logprob: -1.1369092464447021
    3. ' ' → logprob: -11.261909484863281
    4. '   ' → logprob: -11.511909484863281
    5. '	y' → logprob: -12.136909484863281
    6. '    ' → logprob: -12.636909484863281
    7. ')' → logprob: -12.761909484863281
    8. '  ' → logprob: -13.511909484863281
    9. ''y' → logprob: -15.511909484863281
    10. ' ' → logprob: -15.511909484863281

Token 97: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3980655074119568
    2. ')' → logprob: -1.3980655670166016
    3. '):' → logprob: -2.5230655670166016
    4. ' )' → logprob: -7.648065567016602
    5. ':int' → logprob: -8.148065567016602
    6. ' ):' → logprob: -8.898065567016602
    7. ' :' → logprob: -9.523065567016602
    8. ',' → logprob: -10.148065567016602
    9. ')->' → logprob: -10.898065567016602
    10. '   ' → logprob: -10.898065567016602

Token 98: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5233049392700195
    2. 'int' → logprob: -0.8983049392700195
    3. ')' → logprob: -9.02330493927002
    4. ' )' → logprob: -10.77330493927002
    5. ' ' → logprob: -11.27330493927002
    6. ':int' → logprob: -11.89830493927002
    7. '	int' → logprob: -12.02330493927002
    8. '[int' → logprob: -12.39830493927002
    9. '   ' → logprob: -13.02330493927002
    10. '(int' → logprob: -13.39830493927002

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036655968870036304
    2. ' )' → logprob: -8.1253662109375
    3. '):' → logprob: -9.6253662109375
    4. ')->' → logprob: -13.5003662109375
    5. ':' → logprob: -13.7503662109375
    6. '   ' → logprob: -14.1253662109375
    7. '')' → logprob: -14.7503662109375
    8. ' ' → logprob: -15.7503662109375
    9. ' ):' → logprob: -15.7503662109375
    10. '`)' → logprob: -15.7503662109375

Token 100: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1802004724740982
    2. ' ->' → logprob: -2.0552005767822266
    3. ')' → logprob: -3.6802005767822266
    4. '->' → logprob: -4.555200576782227
    5. ')->' → logprob: -7.680200576782227
    6. '):' → logprob: -7.930200576782227
    7. ' :' → logprob: -8.430200576782227
    8. ':return' → logprob: -10.930200576782227
    9. '   ' → logprob: -11.430200576782227
    10. '>' → logprob: -11.805200576782227

Token 101: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759413838386536
    2. 'int' → logprob: -0.8259413838386536
    3. '	int' → logprob: -13.45094108581543
    4. '[int' → logprob: -15.70094108581543
    5. ' ' → logprob: -16.32594108581543
    6. ':int' → logprob: -16.45094108581543
    7. ' ' → logprob: -16.70094108581543
    8. '<int' → logprob: -16.82594108581543
    9. ']int' → logprob: -17.32594108581543
    10. ' in' → logprob: -17.45094108581543

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011861803941428661
    2. '):' → logprob: -6.876186370849609
    3. ' :' → logprob: -9.00118637084961
    4. ':
' → logprob: -10.75118637084961
    5. ':return' → logprob: -12.50118637084961
    6. '():' → logprob: -13.12618637084961
    7. ':**' → logprob: -14.37618637084961
    8. '>:' → logprob: -14.62618637084961
    9. ',' → logprob: -14.75118637084961
    10. ' ):' → logprob: -15.25118637084961

Token 103: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3017965257167816
    2. '       ' → logprob: -1.551796555519104
    3. '    ' → logprob: -4.4267964363098145
    4. ':' → logprob: -4.6767964363098145
    5. '        ' → logprob: -5.1767964363098145
    6. '1' → logprob: -5.4267964363098145
    7. '   ' → logprob: -5.4267964363098145
    8. ' 
' → logprob: -6.3017964363098145
    9. ' :' → logprob: -6.4267964363098145
    10. ' )' → logprob: -6.8017964363098145

Token 104: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.104758620262146
    2. 'while' → logprob: -2.3547587394714355
    3. '       ' → logprob: -5.4797587394714355
    4. ' if' → logprob: -8.229758262634277
    5. 'if' → logprob: -9.479758262634277
    6. '0' → logprob: -11.729758262634277
    7. '   ' → logprob: -11.854758262634277
    8. ' ' → logprob: -12.604758262634277
    9. '	while' → logprob: -13.104758262634277
    10. '        ' → logprob: -13.354758262634277

Token 105: ' Eu' (ID: 10237)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.10461196303367615
    2. 'while' → logprob: -2.354611873626709
    3. ' if' → logprob: -6.479611873626709
    4. 'w' → logprob: -7.479611873626709
    5. ' w' → logprob: -7.604611873626709
    6. '       ' → logprob: -7.854611873626709
    7. '   ' → logprob: -7.854611873626709
    8. ' ' → logprob: -8.104612350463867
    9. 'if' → logprob: -8.229612350463867
    10. 'While' → logprob: -8.729612350463867

Token 106: 'clidean' (ID: 116188)
  Prédit: 'clidean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -0.7936741709709167
    2. 'clid' → logprob: -0.7936741709709167
    3. 'c' → logprob: -3.1686742305755615
    4. 'cl' → logprob: -3.4186742305755615
    5. '       ' → logprob: -4.543673992156982
    6. '   ' → logprob: -5.168673992156982
    7. 'l' → logprob: -6.668673992156982
    8. ' ' → logprob: -6.918673992156982
    9. '        ' → logprob: -7.043673992156982
    10. 'd' → logprob: -8.16867446899414

Token 107: ' algorithm' (ID: 22184)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1551328897476196
    2. ' algorithm' → logprob: -1.2801328897476196
    3. ':' → logprob: -2.03013277053833
    4. '_' → logprob: -2.40513277053833
    5. '   ' → logprob: -2.65513277053833
    6. '```' → logprob: -4.15513277053833
    7. '_algorithm' → logprob: -4.28013277053833
    8. ''' → logprob: -4.40513277053833
    9. 'algorithm' → logprob: -4.78013277053833
    10. ' while' → logprob: -4.90513277053833

Token 108: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2722209393978119
    2. ':' → logprob: -1.5222209692001343
    3. ':
' → logprob: -5.147221088409424
    4. ' :' → logprob: -5.897221088409424
    5. '        
' → logprob: -6.272221088409424
    6. '
' → logprob: -6.397221088409424
    7. '        ' → logprob: -6.522221088409424
    8. '   ' → logprob: -6.522221088409424
    9. '<|end|>' → logprob: -7.147221088409424
    10. '):' → logprob: -7.397221088409424

Token 109: ' type' (ID: 1490)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.11918814480304718
    2. 'while' → logprob: -2.494188070297241
    3. ' a' → logprob: -3.869188070297241
    4. ' ' → logprob: -6.24418830871582
    5. ' x' → logprob: -6.36918830871582
    6. ' recursion' → logprob: -6.61918830871582
    7. 'a' → logprob: -7.36918830871582
    8. ' space' → logprob: -7.61918830871582
    9. ' abs' → logprob: -7.74418830871582
    10. ' iteration' → logprob: -8.24418830871582

Token 110: ' checking' (ID: 19141)
  Prédit: ' hints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hints' → logprob: -0.7070149183273315
    2. ' hint' → logprob: -1.7070149183273315
    3. ' checking' → logprob: -1.8320149183273315
    4. ' annotations' → logprob: -2.832015037536621
    5. 'Hint' → logprob: -3.582015037536621
    6. ' check' → logprob: -4.332015037536621
    7. 'Hints' → logprob: -4.332015037536621
    8. ':' → logprob: -4.707015037536621
    9. ' ' → logprob: -4.707015037536621
    10. ' Hint' → logprob: -4.832015037536621

Token 111: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4023576080799103
    2. ':' → logprob: -1.402357578277588
    3. ' 
' → logprob: -3.652357578277588
    4. '
' → logprob: -4.152357578277588
    5. ':
' → logprob: -4.152357578277588
    6. '        
' → logprob: -5.152357578277588
    7. '   ' → logprob: -5.527357578277588
    8. '<|end|>' → logprob: -5.527357578277588
    9. ' ' → logprob: -5.652357578277588
    10. '    
' → logprob: -6.152357578277588

Token 112: ' future' (ID: 5277)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6175370216369629
    2. ' int' → logprob: -2.117537021636963
    3. 'x' → logprob: -2.367537021636963
    4. ' isinstance' → logprob: -3.117537021636963
    5. 'int' → logprob: -3.492537021636963
    6. ' integers' → logprob: -3.617537021636963
    7. 'while' → logprob: -3.742537021636963
    8. ' while' → logprob: -3.867537021636963
    9. ' y' → logprob: -3.867537021636963
    10. ' both' → logprob: -4.117537021636963

Token 113: ' extensions' (ID: 34511)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -1.1389293670654297
    2. ' safety' → logprob: -1.3889293670654297
    3. ' optimization' → logprob: -2.8889293670654297
    4. ' compatibility' → logprob: -3.1389293670654297
    5. ' robustness' → logprob: -3.3889293670654297
    6. ' integers' → logprob: -3.7639293670654297
    7. ' ' → logprob: -3.7639293670654297
    8. ' improvements' → logprob: -3.8889293670654297
    9. ' correctness' → logprob: -4.01392936706543
    10. ' type' → logprob: -4.01392936706543

Token 114: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4205915927886963
    2. ':' → logprob: -1.2955915927886963
    3. ' ' → logprob: -3.9205915927886963
    4. ' :' → logprob: -4.295591354370117
    5. ':
' → logprob: -4.670591354370117
    6. '   ' → logprob: -5.170591354370117
    7. ' 
' → logprob: -5.420591354370117
    8. '        ' → logprob: -5.670591354370117
    9. '        
' → logprob: -5.670591354370117
    10. '<|end|>' → logprob: -6.170591354370117

Token 115: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25986579060554504
    2. '       ' → logprob: -1.6348657608032227
    3. ' ' → logprob: -4.259865760803223
    4. '<|end|>' → logprob: -5.009865760803223
    5. '   ' → logprob: -5.509865760803223
    6. ':
' → logprob: -5.634865760803223
    7. ' :' → logprob: -5.884865760803223
    8. ',' → logprob: -7.759865760803223
    9. '
' → logprob: -8.134865760803223
    10. '<|end|>' → logprob: -8.384865760803223

Token 116: ' a' (ID: 261)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.298407644033432
    2. 'while' → logprob: -1.4234076738357544
    3. ' if' → logprob: -4.673407554626465
    4. '       ' → logprob: -5.298407554626465
    5. 'if' → logprob: -6.173407554626465
    6. '        ' → logprob: -8.298407554626465
    7. '        
' → logprob: -8.423407554626465
    8. ' x' → logprob: -9.798407554626465
    9. 'x' → logprob: -9.798407554626465
    10. 'wh' → logprob: -10.548407554626465

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04948939383029938
    2. ' =' → logprob: -3.2994894981384277
    3. ' ,' → logprob: -4.799489498138428
    4. ' ' → logprob: -5.924489498138428
    5. '=' → logprob: -7.924489498138428
    6. ',b' → logprob: -9.67448902130127
    7. ' %=' → logprob: -10.29948902130127
    8. ',a' → logprob: -12.54948902130127
    9. '   ' → logprob: -13.42448902130127
    10. ':' → logprob: -13.54948902130127

Token 118: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07657375186681747
    2. 'b' → logprob: -2.7015738487243652
    3. ' ' → logprob: -5.201573848724365
    4. '<|end|>' → logprob: -6.826573848724365
    5. ' 
' → logprob: -12.201573371887207
    6. '<|end|>' → logprob: -12.326573371887207
    7. ' ' → logprob: -12.451573371887207
    8. '	b' → logprob: -13.451573371887207
    9. ' =' → logprob: -13.451573371887207
    10. '    ' → logprob: -13.826573371887207

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016043050214648247
    2. '=' → logprob: -4.141043186187744
    3. ',' → logprob: -12.016042709350586
    4. ' ' → logprob: -13.141042709350586
    5. ' =
' → logprob: -14.766042709350586
    6. ')' → logprob: -16.141042709350586
    7. '=int' → logprob: -16.266042709350586
    8. '   ' → logprob: -16.891042709350586
    9. ' ,' → logprob: -17.266042709350586
    10. '=a' → logprob: -17.266042709350586

Token 120: ' abs' (ID: 8443)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11569184064865112
    2. 'x' → logprob: -2.240691900253296
    3. ' max' → logprob: -6.740691661834717
    4. ' abs' → logprob: -6.740691661834717
    5. 'abs' → logprob: -8.740692138671875
    6. ' ' → logprob: -9.240692138671875
    7. ' y' → logprob: -9.365692138671875
    8. 'max' → logprob: -9.490692138671875
    9. ' (' → logprob: -10.490692138671875
    10. '(x' → logprob: -10.865692138671875

Token 121: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1269417703151703
    2. '(' → logprob: -2.126941680908203
    3. '(
' → logprob: -11.876941680908203
    4. 'x' → logprob: -12.251941680908203
    5. '(s' → logprob: -14.251941680908203
    6. '(a' → logprob: -15.126941680908203
    7. ' (' → logprob: -15.126941680908203
    8. '(

' → logprob: -15.376941680908203
    9. '(y' → logprob: -15.876941680908203
    10. ' ' → logprob: -16.501941680908203

Token 122: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005571560002863407
    2. ' ),' → logprob: -5.380571365356445
    3. ')' → logprob: -7.005571365356445
    4. ',' → logprob: -10.380571365356445
    5. ' ' → logprob: -11.505571365356445
    6. ' ,' → logprob: -13.755571365356445
    7. ' )' → logprob: -13.880571365356445
    8. '),(' → logprob: -15.505571365356445
    9. ',),' → logprob: -15.880571365356445
    10. '```' → logprob: -16.380571365356445

Token 123: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.57597815990448
    2. 'abs' → logprob: -0.82597815990448
    3. ' ' → logprob: -11.07597827911377
    4. ' ' → logprob: -11.32597827911377
    5. '(abs' → logprob: -12.45097827911377
    6. '.abs' → logprob: -12.82597827911377
    7. '_abs' → logprob: -13.95097827911377
    8. '    ' → logprob: -14.20097827911377
    9. 'y' → logprob: -14.51347827911377
    10. '  ' → logprob: -14.57597827911377

Token 124: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0040952586568892
    2. '(' → logprob: -5.504095077514648
    3. 'y' → logprob: -11.254095077514648
    4. '(
' → logprob: -13.879095077514648
    5. ')' → logprob: -14.504095077514648
    6. '<|end|>' → logprob: -14.504095077514648
    7. '(b' → logprob: -14.629095077514648
    8. ' (' → logprob: -14.754095077514648
    9. ' y' → logprob: -15.879095077514648
    10. '(x' → logprob: -16.12909507751465

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039031609892845154
    2. ')
' → logprob: -3.289031505584717
    3. ' )' → logprob: -7.539031505584717
    4. '       ' → logprob: -8.164031982421875
    5. ' )
' → logprob: -10.039031982421875
    6. 'while' → logprob: -10.289031982421875
    7. '
' → logprob: -10.539031982421875
    8. '<|end|>' → logprob: -10.914031982421875
    9. '   ' → logprob: -11.039031982421875
    10. ')
' → logprob: -12.039031982421875

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32432299852371216
    2. '
' → logprob: -2.5743229389190674
    3. ' 
' → logprob: -2.6993229389190674
    4. 'while' → logprob: -3.1993229389190674
    5. ' while' → logprob: -3.3243229389190674
    6. '        
' → logprob: -3.4493229389190674
    7. ' ' → logprob: -4.9493231773376465
    8. '<|end|>' → logprob: -5.0743231773376465
    9. '	while' → logprob: -5.5743231773376465
    10. '  
' → logprob: -6.4493231773376465

Token 127: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16383607685565948
    2. ' while' → logprob: -2.4138360023498535
    3. '       ' → logprob: -2.7888360023498535
    4. '	while' → logprob: -9.038836479187012
    5. '   ' → logprob: -11.663836479187012
    6. '        
' → logprob: -11.913836479187012
    7. '
' → logprob: -12.038836479187012
    8. 'wh' → logprob: -12.163836479187012
    9. ' 
' → logprob: -12.663836479187012
    10. 'While' → logprob: -14.038836479187012

Token 128: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.026302389800548553
    2. 'b' → logprob: -3.6513023376464844
    3. '	b' → logprob: -14.026302337646484
    4. ' ' → logprob: -14.276302337646484
    5. ' ' → logprob: -15.651302337646484
    6. ' a' → logprob: -16.276302337646484
    7. 'a' → logprob: -16.276302337646484
    8. '_b' → logprob: -16.401302337646484
    9. ' б' → logprob: -16.901302337646484
    10. '(b' → logprob: -17.901302337646484

Token 129: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.04432450234889984
    2. '!=' → logprob: -3.1693243980407715
    3. ':' → logprob: -6.7943243980407715
    4. '>' → logprob: -8.91932487487793
    5. ' >' → logprob: -9.79432487487793
    6. ')!=' → logprob: -12.79432487487793
    7. '!='' → logprob: -13.16932487487793
    8. '!="' → logprob: -13.29432487487793
    9. '<|end|>' → logprob: -13.66932487487793
    10. ' and' → logprob: -13.79432487487793

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740802049636841
    2. ' ' → logprob: -0.9740802049636841
    3. ' ' → logprob: -12.974080085754395
    4. '  ' → logprob: -14.849080085754395
    5. '   ' → logprob: -15.599080085754395
    6. ' 
' → logprob: -16.09908103942871
    7. '	' → logprob: -16.09908103942871
    8. '۰' → logprob: -17.28658103942871
    9. ' ' → logprob: -17.47408103942871
    10. '  
' → logprob: -17.53658103942871

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.626928329467773
    4. '  ' → logprob: -17.001928329467773
    5. ' ' → logprob: -17.626928329467773
    6. '۰' → logprob: -19.001928329467773
    7. '０' → logprob: -19.251928329467773
    8. '	' → logprob: -19.564428329467773
    9. '```' → logprob: -19.626928329467773
    10. '00' → logprob: -19.939428329467773

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2812826335430145
    2. ':
' → logprob: -1.406282663345337
    3. ' :
' → logprob: -10.531282424926758
    4. '<|end|>' → logprob: -10.531282424926758
    5. ' :' → logprob: -10.781282424926758
    6. '       ' → logprob: -10.781282424926758
    7. ':

' → logprob: -11.281282424926758
    8. ',' → logprob: -12.156282424926758
    9. ' and' → logprob: -12.281282424926758
    10. '):
' → logprob: -12.406282424926758

Token 133: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.160245418548584
    2. ':' → logprob: -1.410245418548584
    3. '
' → logprob: -1.410245418548584
    4. '       ' → logprob: -2.285245418548584
    5. '<|end|>' → logprob: -2.910245418548584
    6. '           ' → logprob: -4.160245418548584
    7. '<|end|>' → logprob: -5.160245418548584
    8. ' ' → logprob: -5.160245418548584
    9. ' 
' → logprob: -5.660245418548584
    10. ' :
' → logprob: -6.160245418548584

Token 134: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5759705305099487
    2. ' a' → logprob: -0.8259705305099487
    3. '	a' → logprob: -10.700970649719238
    4. ' ' → logprob: -13.075970649719238
    5. 'temp' → logprob: -13.450970649719238
    6. ' temp' → logprob: -13.825970649719238
    7. '           ' → logprob: -13.825970649719238
    8. '    ' → logprob: -14.575970649719238
    9. ' t' → logprob: -14.825970649719238
    10. 't' → logprob: -14.950970649719238

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023798657639417797
    2. '%' → logprob: -9.375238418579102
    3. ' ,' → logprob: -9.500238418579102
    4. ',b' → logprob: -10.000238418579102
    5. '%b' → logprob: -11.250238418579102
    6. '%,' → logprob: -12.000238418579102
    7. ' %=' → logprob: -12.375238418579102
    8. '%=' → logprob: -12.500238418579102
    9. '=' → logprob: -13.250238418579102
    10. ' %' → logprob: -13.500238418579102

Token 136: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.17986203730106354
    2. 'b' → logprob: -1.8048620223999023
    3. ' ' → logprob: -9.304862022399902
    4. '<|end|>' → logprob: -10.804862022399902
    5. '    ' → logprob: -12.929862022399902
    6. '%b' → logprob: -14.179862022399902
    7. ' ' → logprob: -14.554862022399902
    8. '	b' → logprob: -14.554862022399902
    9. '        ' → logprob: -15.304862022399902
    10. '=b' → logprob: -15.679862022399902

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858986660838127
    2. '=' → logprob: -3.0485899448394775
    3. ' ' → logprob: -13.298589706420898
    4. ')' → logprob: -15.923589706420898
    5. ',' → logprob: -16.1735897064209
    6. ' %=' → logprob: -16.4235897064209
    7. '=b' → logprob: -16.5485897064209
    8. '%=' → logprob: -16.6735897064209
    9. '[' → logprob: -16.6735897064209
    10. 'b' → logprob: -16.9235897064209

Token 138: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4287104606628418
    2. 'b' → logprob: -1.0537104606628418
    3. ' ' → logprob: -11.8037109375
    4. ' ' → logprob: -14.5537109375
    5. '	b' → logprob: -14.8037109375
    6. ')b' → logprob: -15.1787109375
    7. '(b' → logprob: -15.5537109375
    8. '>b' → logprob: -16.1787109375
    9. '    ' → logprob: -16.1787109375
    10. '<|end|>' → logprob: -16.3037109375

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020092912018299103
    2. ' ,' → logprob: -6.252009391784668
    3. 'a' → logprob: -9.877009391784668
    4. ' ' → logprob: -11.252009391784668
    5. ' a' → logprob: -11.377009391784668
    6. ',a' → logprob: -12.502009391784668
    7. ',
' → logprob: -14.127009391784668
    8. '%' → logprob: -15.877009391784668
    9. ' ,
' → logprob: -16.87700843811035
    10. ' %' → logprob: -16.87700843811035

Token 140: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5231326222419739
    2. 'a' → logprob: -0.8981326222419739
    3. ' ' → logprob: -12.14813232421875
    4. '	a' → logprob: -12.89813232421875
    5. ' ' → logprob: -13.89813232421875
    6. '```' → logprob: -16.33563232421875
    7. '_a' → logprob: -17.46063232421875
    8. '   ' → logprob: -17.46063232421875
    9. '>a' → logprob: -17.58563232421875
    10. '  ' → logprob: -17.71063232421875

Token 141: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03812319412827492
    2. '%' → logprob: -3.28812313079834
    3. ' ' → logprob: -9.66312313079834
    4. 'a' → logprob: -11.66312313079834
    5. ' ' → logprob: -12.16312313079834
    6. ' a' → logprob: -12.91312313079834
    7. '%b' → logprob: -13.66312313079834
    8. '%i' → logprob: -15.91312313079834
    9. ' %
' → logprob: -16.038124084472656
    10. '%e' → logprob: -16.413124084472656

Token 142: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020678490400314
    2. ' b' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.72520637512207
    4. '	b' → logprob: -17.35020637512207
    5. ' ' → logprob: -18.22520637512207
    6. '<|end|>' → logprob: -19.35020637512207
    7. ' б' → logprob: -19.97520637512207
    8. '_b' → logprob: -20.35020637512207
    9. '>b' → logprob: -20.60020637512207
    10. '%b' → logprob: -20.60020637512207

Token 143: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08936068415641785
    2. '<|end|>' → logprob: -3.7143607139587402
    3. ' 
' → logprob: -3.8393607139587402
    4. '
' → logprob: -4.58936071395874
    5. '       ' → logprob: -4.58936071395874
    6. '        ' → logprob: -4.83936071395874
    7. '  ' → logprob: -6.83936071395874
    8. '    ' → logprob: -6.96436071395874
    9. '6' → logprob: -7.21436071395874
    10. '2' → logprob: -7.33936071395874

Token 144: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7329755425453186
    2. '       ' → logprob: -1.2329754829406738
    3. ' 
' → logprob: -2.607975482940674
    4. '\n' → logprob: -3.232975482940674
    5. 'return' → logprob: -3.357975482940674
    6. '<|end|>' → logprob: -3.357975482940674
    7. '        
' → logprob: -4.357975482940674
    8. ' return' → logprob: -4.732975482940674
    9. 'newline' → logprob: -5.232975482940674
    10. '    
' → logprob: -5.732975482940674

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15334314107894897
    2. ' return' → logprob: -2.0283432006835938
    3. '   ' → logprob: -5.778343200683594
    4. '       ' → logprob: -5.903343200683594
    5. 'a' → logprob: -6.653343200683594
    6. '
' → logprob: -7.028343200683594
    7. 'eturn' → logprob: -7.028343200683594
    8. ' a' → logprob: -7.653343200683594
    9. ' ' → logprob: -7.653343200683594
    10. ' 
' → logprob: -8.028343200683594

Token 146: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078639671206474
    2. ' a' → logprob: -5.5040788650512695
    3. '	a' → logprob: -16.254077911376953
    4. ' ' → logprob: -16.379077911376953
    5. '_a' → logprob: -17.254077911376953
    6. ' ' → logprob: -17.379077911376953
    7. '   ' → logprob: -19.879077911376953
    8. 'а' → logprob: -20.629077911376953
    9. '  ' → logprob: -20.879077911376953
    10. 'abs' → logprob: -21.504077911376953

Token 147: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0900387316942215
    2. '<|end|>' → logprob: -2.840038776397705
    3. '

' → logprob: -4.465038776397705
    4. '    
' → logprob: -4.965038776397705
    5. '   ' → logprob: -5.715038776397705
    6. ' 
' → logprob: -5.840038776397705
    7. '\n' → logprob: -6.590038776397705
    8. '
    
' → logprob: -7.840038776397705
    9. '  
' → logprob: -8.090038299560547
    10. ' 

' → logprob: -8.715038299560547

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23486511409282684
    2. '@' → logprob: -1.6098650693893433
    3. '    
' → logprob: -4.734865188598633
    4. '
' → logprob: -7.609865188598633
    5. ' @' → logprob: -10.609865188598633
    6. '        
' → logprob: -10.734865188598633
    7. 'def' → logprob: -10.984865188598633
    8. '```' → logprob: -11.109865188598633
    9. '    
    
' → logprob: -11.984865188598633
    10. ' 
' → logprob: -12.359865188598633

Token 149: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -4.334533878136426e-05
    2. ' @' → logprob: -10.125042915344238
    3. 'def' → logprob: -12.875042915344238
    4. '   ' → logprob: -14.875042915344238
    5. '@
' → logprob: -16.375043869018555
    6. '    
' → logprob: -16.750043869018555
    7. 'staticmethod' → logprob: -16.875043869018555
    8. 'class' → logprob: -16.875043869018555
    9. '
' → logprob: -17.125043869018555
    10. '@g' → logprob: -17.875043869018555

Token 150: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -1.318681188422488e-05
    2. 'classmethod' → logprob: -11.37501335144043
    3. 'dat' → logprob: -13.87501335144043
    4. 'property' → logprob: -14.37501335144043
    5. 'static' → logprob: -16.50001335144043
    6. 'st' → logprob: -18.62501335144043
    7. 'stat' → logprob: -19.62501335144043
    8. 'sta' → logprob: -21.62501335144043
    9. 'l' → logprob: -21.75001335144043
    10. 's' → logprob: -22.00001335144043

Token 151: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5013205409049988
    2. '
' → logprob: -1.5013206005096436
    3. 'def' → logprob: -2.1263206005096436
    4. '   ' → logprob: -3.0013206005096436
    5. '    
' → logprob: -7.3763203620910645
    6. ' 
' → logprob: -7.3763203620910645
    7. '(' → logprob: -8.126320838928223
    8. '(
' → logprob: -8.626320838928223
    9. ':' → logprob: -9.001320838928223
    10. '	def' → logprob: -9.001320838928223

Token 152: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4745967388153076
    2. 'def' → logprob: -0.9745967388153076
    3. '
' → logprob: -8.224596977233887
    4. '   ' → logprob: -8.349596977233887
    5. '(def' → logprob: -12.474596977233887
    6. '	def' → logprob: -12.724596977233887
    7. ':' → logprob: -13.599596977233887
    8. '(' → logprob: -13.599596977233887
    9. ':def' → logprob: -13.599596977233887
    10. ' 
' → logprob: -13.724596977233887

Token 153: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12693703174591064
    2. ' def' → logprob: -2.126936912536621
    3. 'l' → logprob: -12.876936912536621
    4. '
' → logprob: -13.126936912536621
    5. '   ' → logprob: -13.251936912536621
    6. ' 
' → logprob: -14.751936912536621
    7. 'div' → logprob: -14.751936912536621
    8. 'g' → logprob: -15.126936912536621
    9. 'de' → logprob: -15.376936912536621
    10. 'f' → logprob: -15.501936912536621

Token 154: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.02103998325765133
    2. 'l' → logprob: -3.8960399627685547
    3. ' def' → logprob: -9.146039962768555
    4. ' simplify' → logprob: -9.396039962768555
    5. ' reduce' → logprob: -9.646039962768555
    6. ' is' → logprob: -10.396039962768555
    7. 'def' → logprob: -10.521039962768555
    8. '_l' → logprob: -10.521039962768555
    9. ' gcd' → logprob: -10.771039962768555
    10. ' factorial' → logprob: -10.896039962768555

Token 155: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.19653315842151642
    2. 'c' → logprob: -1.821533203125
    3. '   ' → logprob: -4.196533203125
    4. 'cms' → logprob: -7.821533203125
    5. 'a' → logprob: -8.446533203125
    6. '  ' → logprob: -8.821533203125
    7. '	c' → logprob: -8.821533203125
    8. '       ' → logprob: -9.446533203125
    9. ' ' → logprob: -9.446533203125
    10. 'e' → logprob: -9.821533203125

Token 156: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2016538381576538
    2. '(x' → logprob: -1.7016538381576538
    3. ' (' → logprob: -8.576653480529785
    4. '(a' → logprob: -10.451653480529785
    5. '(
' → logprob: -11.451653480529785
    6. '(s' → logprob: -12.701653480529785
    7. '(i' → logprob: -13.076653480529785
    8. ')' → logprob: -13.951653480529785
    9. '(

' → logprob: -14.076653480529785
    10. '(y' → logprob: -14.201653480529785

Token 157: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005961391143500805
    2. ' ,' → logprob: -5.1309614181518555
    3. ',y' → logprob: -10.755961418151855
    4. '<|end|>' → logprob: -12.380961418151855
    5. ',
' → logprob: -13.380961418151855
    6. ' ' → logprob: -13.380961418151855
    7. ')' → logprob: -13.755961418151855
    8. ',x' → logprob: -13.880961418151855
    9. ':' → logprob: -14.505961418151855
    10. '   ' → logprob: -14.755961418151855

Token 158: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07925117760896683
    2. ' int' → logprob: -2.579251289367676
    3. ' y' → logprob: -8.704251289367676
    4. ' ' → logprob: -9.329251289367676
    5. 'y' → logprob: -10.329251289367676
    6. ':int' → logprob: -11.079251289367676
    7. '(int' → logprob: -11.204251289367676
    8. ' x' → logprob: -11.704251289367676
    9. ',int' → logprob: -11.954251289367676
    10. ')' → logprob: -12.204251289367676

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000239536224398762
    2. ' ,' → logprob: -8.375239372253418
    3. ',y' → logprob: -12.125239372253418
    4. ' ' → logprob: -14.000239372253418
    5. ',
' → logprob: -14.125239372253418
    6. ')' → logprob: -14.750239372253418
    7. 'y' → logprob: -14.875239372253418
    8. '<|end|>' → logprob: -15.125239372253418
    9. ',b' → logprob: -15.375239372253418
    10. '‌,' → logprob: -15.625239372253418

Token 160: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47409483790397644
    2. ' y' → logprob: -0.9740948677062988
    3. '<|end|>' → logprob: -11.59909439086914
    4. ' ' → logprob: -11.97409439086914
    5. '	y' → logprob: -13.59909439086914
    6. ')' → logprob: -15.22409439086914
    7. '  ' → logprob: -15.47409439086914
    8. ')y' → logprob: -15.72409439086914
    9. '   ' → logprob: -15.97409439086914
    10. ''y' → logprob: -16.22409439086914

Token 161: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02126348577439785
    2. ')' → logprob: -3.896263599395752
    3. ' :' → logprob: -8.146263122558594
    4. '):' → logprob: -8.396263122558594
    5. ':int' → logprob: -9.021263122558594
    6. ' )' → logprob: -9.896263122558594
    7. '   ' → logprob: -11.146263122558594
    8. ',' → logprob: -11.646263122558594
    9. ' ):' → logprob: -12.646263122558594
    10. ' ' → logprob: -13.396263122558594

Token 162: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10074863582849503
    2. ' int' → logprob: -2.3507485389709473
    3. ')' → logprob: -7.725748538970947
    4. ' )' → logprob: -10.475749015808105
    5. ' ' → logprob: -10.975749015808105
    6. ':int' → logprob: -11.350749015808105
    7. '[int' → logprob: -11.350749015808105
    8. ')>' → logprob: -12.100749015808105
    9. '(int' → logprob: -12.350749015808105
    10. '   ' → logprob: -12.600749015808105

Token 163: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.684157026233152e-05
    2. ' )' → logprob: -9.750077247619629
    3. '   ' → logprob: -11.500077247619629
    4. '`)' → logprob: -12.125077247619629
    5. ':' → logprob: -14.250077247619629
    6. ')`' → logprob: -15.000077247619629
    7. '')' → logprob: -15.125077247619629
    8. '```' → logprob: -15.125077247619629
    9. ',' → logprob: -15.250077247619629
    10. '):' → logprob: -15.375077247619629

Token 164: ' gcd' (ID: 106918)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6789515614509583
    2. ' )' → logprob: -0.8039515614509583
    3. ' z' → logprob: -3.6789515018463135
    4. ' /' → logprob: -4.678951740264893
    5. '):' → logprob: -6.678951740264893
    6. ' ):' → logprob: -6.928951740264893
    7. ' ' → logprob: -7.053951740264893
    8. 'z' → logprob: -7.053951740264893
    9. '   ' → logprob: -7.428951740264893
    10. ' 
' → logprob: -7.616451740264893

Token 165: '_value' (ID: 6734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11320378631353378
    2. '=None' → logprob: -3.363203763961792
    3. '_val' → logprob: -3.738203763961792
    4. ')' → logprob: -3.863203763961792
    5. '_value' → logprob: -4.113204002380371
    6. '):' → logprob: -5.238204002380371
    7. '=' → logprob: -6.113204002380371
    8. ':int' → logprob: -6.613204002380371
    9. 'value' → logprob: -7.113204002380371
    10. 'val' → logprob: -7.863204002380371

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00476700346916914
    2. ')' → logprob: -6.004766941070557
    3. '):' → logprob: -6.629766941070557
    4. '=None' → logprob: -7.379766941070557
    5. '=' → logprob: -8.379767417907715
    6. ':int' → logprob: -9.129767417907715
    7. ' :' → logprob: -12.754767417907715
    8. ' ' → logprob: -13.754767417907715
    9. ' ):' → logprob: -15.004767417907715
    10. ' )' → logprob: -15.004767417907715

Token 167: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.44845566153526306
    2. 'None' → logprob: -1.0734556913375854
    3. ')' → logprob: -4.323455810546875
    4. ' None' → logprob: -6.198455810546875
    5. 'Optional' → logprob: -6.448455810546875
    6. '=None' → logprob: -6.698455810546875
    7. ' int' → logprob: -7.323455810546875
    8. '1' → logprob: -8.198455810546875
    9. '0' → logprob: -8.448455810546875
    10. '   ' → logprob: -9.573455810546875

Token 168: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006941864266991615
    2. '=None' → logprob: -5.631941795349121
    3. '=' → logprob: -5.756941795349121
    4. ':' → logprob: -9.256941795349121
    5. ' =' → logprob: -10.381941795349121
    6. '):' → logprob: -11.256941795349121
    7. ' )' → logprob: -11.256941795349121
    8. ' ' → logprob: -11.381941795349121
    9. 'None' → logprob: -12.506941795349121
    10. '   ' → logprob: -13.506941795349121

Token 169: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.02425292320549488
    2. ' None' → logprob: -4.024252891540527
    3. '1' → logprob: -5.149252891540527
    4. '0' → logprob: -8.774252891540527
    5. '-' → logprob: -10.024252891540527
    6. '   ' → logprob: -10.899252891540527
    7. ' ' → logprob: -11.149252891540527
    8. ')' → logprob: -11.149252891540527
    9. '=None' → logprob: -11.274252891540527
    10. ' -' → logprob: -12.024252891540527

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007616918068379164
    2. '):' → logprob: -4.882616996765137
    3. '):
' → logprob: -12.007616996765137
    4. ' )' → logprob: -13.007616996765137
    5. ')->' → logprob: -13.507616996765137
    6. ':' → logprob: -15.007616996765137
    7. '   ' → logprob: -15.257616996765137
    8. ' ' → logprob: -16.00761604309082
    9. ' ):' → logprob: -16.25761604309082
    10. '=None' → logprob: -16.88261604309082

Token 171: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013479728950187564
    2. ')' → logprob: -7.37634801864624
    3. '):' → logprob: -8.126347541809082
    4. '->' → logprob: -8.376347541809082
    5. ' ->' → logprob: -9.251347541809082
    6. ')->' → logprob: -9.751347541809082
    7. '   ' → logprob: -11.126347541809082
    8. ' :' → logprob: -11.126347541809082
    9. ':
' → logprob: -12.126347541809082
    10. ':return' → logprob: -13.126347541809082

Token 172: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.089021697640419
    2. ' int' → logprob: -2.464021682739258
    3. 'None' → logprob: -10.339021682739258
    4. ' None' → logprob: -10.589021682739258
    5. '   ' → logprob: -11.839021682739258
    6. '[int' → logprob: -12.339021682739258
    7. ' ' → logprob: -12.464021682739258
    8. '(int' → logprob: -13.089021682739258
    9. '0' → logprob: -13.839021682739258
    10. '	int' → logprob: -13.964021682739258

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012761499965563416
    2. ':
' → logprob: -9.125127792358398
    3. ' :' → logprob: -11.000127792358398
    4. '):' → logprob: -14.000127792358398
    5. ':return' → logprob: -14.250127792358398
    6. ':def' → logprob: -15.500127792358398
    7. '   ' → logprob: -16.1251277923584
    8. ':
' → logprob: -16.6251277923584
    9. '():' → logprob: -16.8751277923584
    10. ':

' → logprob: -17.1251277923584

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7071092128753662
    2. '   ' → logprob: -1.2071092128753662
    3. ' ' → logprob: -2.332109212875366
    4. '    ' → logprob: -2.957109212875366
    5. ':' → logprob: -3.207109212875366
    6. ' if' → logprob: -4.457109451293945
    7. 'if' → logprob: -6.582109451293945
    8. '  ' → logprob: -6.832109451293945
    9. ' :' → logprob: -6.832109451293945
    10. '     ' → logprob: -7.332109451293945

Token 175: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3238352835178375
    2. ' if' → logprob: -1.3238352537155151
    3. '       ' → logprob: -4.573835372924805
    4. '   ' → logprob: -8.823835372924805
    5. 'return' → logprob: -10.573835372924805
    6. '    ' → logprob: -12.073835372924805
    7. ' ' → logprob: -12.448835372924805
    8. ' return' → logprob: -12.573835372924805
    9. '	if' → logprob: -12.698835372924805
    10. '        
' → logprob: -13.198835372924805

Token 176: ' Calculate' (ID: 38942)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009153862483799458
    2. ' if' → logprob: -7.25091552734375
    3. '       ' → logprob: -8.62591552734375
    4. 'return' → logprob: -10.75091552734375
    5. 'i' → logprob: -12.87591552734375
    6. '   ' → logprob: -13.62591552734375
    7. '	if' → logprob: -15.37591552734375
    8. '
' → logprob: -15.50091552734375
    9. 'If' → logprob: -15.75091552734375
    10. '"""' → logprob: -16.00091552734375

Token 177: ' L' (ID: 451)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3361140489578247
    2. '(x' → logprob: -1.4611140489578247
    3. ' x' → logprob: -3.336113929748535
    4. 'x' → logprob: -4.211113929748535
    5. '(' → logprob: -6.836113929748535
    6. '0' → logprob: -6.961113929748535
    7. '   ' → logprob: -8.086113929748535
    8. 'return' → logprob: -8.711113929748535
    9. ' return' → logprob: -8.961113929748535
    10. ' abs' → logprob: -9.336113929748535

Token 178: 'CM' (ID: 14170)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10658986866474152
    2. 'CM' → logprob: -2.7315897941589355
    3. '   ' → logprob: -3.8565897941589355
    4. ' C' → logprob: -4.4815897941589355
    5. 'cm' → logprob: -6.2315897941589355
    6. '       ' → logprob: -7.8565897941589355
    7. 'c' → logprob: -8.606590270996094
    8. 'M' → logprob: -8.731590270996094
    9. ',' → logprob: -8.981590270996094
    10. ' if' → logprob: -9.606590270996094

Token 179: ' using' (ID: 2360)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0158991813659668
    2. '(' → logprob: -1.1408991813659668
    3. ':' → logprob: -1.5158991813659668
    4. '       ' → logprob: -2.640899181365967
    5. ' if' → logprob: -4.765899181365967
    6. ' (' → logprob: -5.140899181365967
    7. '   ' → logprob: -5.265899181365967
    8. ',' → logprob: -5.765899181365967
    9. '(
' → logprob: -6.015899181365967
    10. ':
' → logprob: -7.265899181365967

Token 180: ' G' (ID: 499)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09205901622772217
    2. '(x' → logprob: -2.7170591354370117
    3. ' x' → logprob: -4.342059135437012
    4. 'x' → logprob: -5.967059135437012
    5. '(' → logprob: -6.342059135437012
    6. ' abs' → logprob: -6.342059135437012
    7. '(abs' → logprob: -7.342059135437012
    8. 'abs' → logprob: -7.717059135437012
    9. ' gcd' → logprob: -7.842059135437012
    10. '(g' → logprob: -7.967059135437012

Token 181: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.5862014889717102
    2. 'C' → logprob: -1.2112014293670654
    3. 'cd' → logprob: -1.9612014293670654
    4. 'c' → logprob: -7.2112016677856445
    5. '   ' → logprob: -7.9612016677856445
    6. 'Cd' → logprob: -8.086201667785645
    7. ' C' → logprob: -8.086201667785645
    8. 'D' → logprob: -8.211201667785645
    9. '_cd' → logprob: -8.211201667785645
    10. ' gcd' → logprob: -8.211201667785645

Token 182: ';' (ID: 26)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21668943762779236
    2. '       ' → logprob: -2.091689348220825
    3. ' if' → logprob: -3.591689348220825
    4. ':
' → logprob: -4.091689586639404
    5. '(x' → logprob: -4.716689586639404
    6. ',' → logprob: -5.341689586639404
    7. '(' → logprob: -5.466689586639404
    8. '   ' → logprob: -5.841689586639404
    9. 'if' → logprob: -6.216689586639404
    10. ' :' → logprob: -7.216689586639404

Token 183: ' gcd' (ID: 106918)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38742178678512573
    2. 'if' → logprob: -1.1374218463897705
    3. '       ' → logprob: -7.512421607971191
    4. 'return' → logprob: -12.887421607971191
    5. ' return' → logprob: -14.012421607971191
    6. '	if' → logprob: -14.887421607971191
    7. '        ' → logprob: -15.887421607971191
    8. '   ' → logprob: -16.012422561645508
    9. 'n' → logprob: -16.387422561645508
    10. '
' → logprob: -16.887422561645508

Token 184: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00028505371301434934
    2. '_' → logprob: -9.250285148620605
    3. 'value' → logprob: -9.500285148620605
    4. '=' → logprob: -9.625285148620605
    5. '=None' → logprob: -11.125285148620605
    6. ' =' → logprob: -11.750285148620605
    7. 'if' → logprob: -12.000285148620605
    8. '_val' → logprob: -12.250285148620605
    9. ' if' → logprob: -12.750285148620605
    10. ' is' → logprob: -13.125285148620605

Token 185: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7893848419189453
    2. ' if' → logprob: -1.2893848419189453
    3. '=' → logprob: -1.9143848419189453
    4. 'if' → logprob: -2.4143848419189453
    5. ' or' → logprob: -3.6643848419189453
    6. ' =' → logprob: -5.664384841918945
    7. 'or' → logprob: -6.289384841918945
    8. 'is' → logprob: -6.789384841918945
    9. ' ' → logprob: -7.164384841918945
    10. '   ' → logprob: -8.164384841918945

Token 186: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.335754930973053
    2. ' None' → logprob: -1.5857548713684082
    3. 'None' → logprob: -2.585754871368408
    4. ' ' → logprob: -5.835754871368408
    5. '=None' → logprob: -6.335754871368408
    6. 'be' → logprob: -8.710755348205566
    7. ' if' → logprob: -9.085755348205566
    8. ' not' → logprob: -10.835755348205566
    9. ' provide' → logprob: -10.960755348205566
    10. ')' → logprob: -11.585755348205566

Token 187: ' pre' (ID: 876)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5931937098503113
    2. 'None' → logprob: -0.8431937098503113
    3. ' provided' → logprob: -4.468193531036377
    4. ' passed' → logprob: -5.968193531036377
    5. 'provided' → logprob: -6.218193531036377
    6. ' given' → logprob: -7.718193531036377
    7. ' used' → logprob: -7.843193531036377
    8. 'passed' → logprob: -8.843194007873535
    9. ' supplied' → logprob: -10.343194007873535
    10. '=None' → logprob: -11.218194007873535

Token 188: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.6460930109024048
    2. 'provided' → logprob: -0.7710930109024048
    3. 'cal' → logprob: -6.271092891693115
    4. 'passed' → logprob: -6.271092891693115
    5. 'vided' → logprob: -6.771092891693115
    6. '
' → logprob: -6.896092891693115
    7. '```' → logprob: -7.021092891693115
    8. '_pro' → logprob: -7.021092891693115
    9. ' provided' → logprob: -7.146092891693115
    10. '-pro' → logprob: -7.146092891693115

Token 189: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5672130584716797
    2. '       ' → logprob: -0.9422130584716797
    3. 'if' → logprob: -3.6922130584716797
    4. ':' → logprob: -4.81721305847168
    5. '   ' → logprob: -5.31721305847168
    6. ' and' → logprob: -6.44221305847168
    7. ' or' → logprob: -6.56721305847168
    8. ',' → logprob: -7.44221305847168
    9. ':
' → logprob: -8.19221305847168
    10. ')' → logprob: -8.44221305847168

Token 190: ' optimization' (ID: 34658)
  Prédit: 'optimization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimization' → logprob: -0.43200793862342834
    2. ' optimization' → logprob: -2.0570080280303955
    3. 'performance' → logprob: -2.4320080280303955
    4. 'eff' → logprob: -2.4320080280303955
    5. ' efficiency' → logprob: -3.6820080280303955
    6. ' performance' → logprob: -4.057007789611816
    7. 'optim' → logprob: -6.807007789611816
    8. ' None' → logprob: -7.057007789611816
    9. 'reuse' → logprob: -7.557007789611816
    10. 'None' → logprob: -8.057007789611816

Token 191: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12508712708950043
    2. '       ' → logprob: -2.875087022781372
    3. ':
' → logprob: -3.250087022781372
    4. ' :' → logprob: -4.625087261199951
    5. '   ' → logprob: -5.000087261199951
    6. ' if' → logprob: -5.750087261199951
    7. ' :
' → logprob: -6.875087261199951
    8. '):' → logprob: -7.375087261199951
    9. ',' → logprob: -7.875087261199951
    10. '):
' → logprob: -8.375086784362793

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0519295334815979
    2. ' if' → logprob: -3.676929473876953
    3. ':' → logprob: -4.426929473876953
    4. '   ' → logprob: -5.051929473876953
    5. 'if' → logprob: -5.051929473876953
    6. ':
' → logprob: -8.426929473876953
    7. ' :' → logprob: -9.051929473876953
    8. '    ' → logprob: -10.301929473876953
    9. '      ' → logprob: -10.676929473876953
    10. ' ' → logprob: -10.801929473876953

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0021975983399897814
    2. ' if' → logprob: -6.502197742462158
    3. '       ' → logprob: -7.502197742462158
    4. 'return' → logprob: -8.877197265625
    5. 'g' → logprob: -13.627197265625
    6. '   ' → logprob: -13.627197265625
    7. '	if' → logprob: -14.502197265625
    8. ' return' → logprob: -15.752197265625
    9. '        
' → logprob: -16.127197265625
    10. 'If' → logprob: -16.377197265625

Token 194: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.013427266851067543
    2. 'g' → logprob: -4.388427257537842
    3. ' g' → logprob: -7.763427257537842
    4. '	g' → logprob: -8.763427734375
    5. ' ' → logprob: -9.013427734375
    6. ' not' → logprob: -9.638427734375
    7. ' x' → logprob: -9.888427734375
    8. ' ' → logprob: -10.388427734375
    9. 'x' → logprob: -10.638427734375
    10. '   ' → logprob: -11.450927734375

Token 195: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00016349162615370005
    2. '_' → logprob: -8.750163078308105
    3. '_val' → logprob: -12.500163078308105
    4. '_v' → logprob: -14.000163078308105
    5. ' _' → logprob: -15.375163078308105
    6. '_va' → logprob: -16.125164031982422
    7. '_Value' → logprob: -17.750164031982422
    8. '_values' → logprob: -18.000164031982422
    9. 'value' → logprob: -18.250164031982422
    10. '_VALUE' → logprob: -18.250164031982422

Token 196: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.029763920232653618
    2. 'is' → logprob: -3.52976393699646
    3. ' ' → logprob: -11.279764175415039
    4. ' i' → logprob: -14.779764175415039
    5. '	is' → logprob: -16.02976417541504
    6. ')' → logprob: -16.40476417541504
    7. 'i' → logprob: -16.52976417541504
    8. ' ' → logprob: -17.27976417541504
    9. ' )' → logprob: -17.52976417541504
    10. ')is' → logprob: -17.52976417541504

Token 197: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4740849733352661
    2. ' None' → logprob: -0.9740849733352661
    3. ' not' → logprob: -12.724084854125977
    4. 'N' → logprob: -13.474084854125977
    5. '_None' → logprob: -13.724084854125977
    6. 'not' → logprob: -14.099084854125977
    7. '   ' → logprob: -14.849084854125977
    8. ' ' → logprob: -14.974084854125977
    9. 'No' → logprob: -15.349084854125977
    10. '=None' → logprob: -15.349084854125977

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018185647204518318
    2. ':
' → logprob: -4.018185615539551
    3. ' :' → logprob: -11.26818561553955
    4. '       ' → logprob: -11.26818561553955
    5. ':return' → logprob: -12.51818561553955
    6. ':
' → logprob: -13.64318561553955
    7. '):' → logprob: -13.89318561553955
    8. '           ' → logprob: -14.01818561553955
    9. ':

' → logprob: -14.14318561553955
    10. '   ' → logprob: -14.14318561553955

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0553593635559082
    2. 'g' → logprob: -1.3053593635559082
    3. '       ' → logprob: -1.3053593635559082
    4. ' gcd' → logprob: -2.805359363555908
    5. 'return' → logprob: -3.180359363555908
    6. ' return' → logprob: -5.555359363555908
    7. '        ' → logprob: -6.430359363555908
    8. ' g' → logprob: -7.930359363555908
    9. '_g' → logprob: -8.05535888671875
    10. '   ' → logprob: -8.18035888671875

Token 200: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009616006282158196
    2. '       ' → logprob: -7.375961780548096
    3. '           ' → logprob: -9.000961303710938
    4. ' gcd' → logprob: -9.000961303710938
    5. '   ' → logprob: -10.250961303710938
    6. '_g' → logprob: -11.125961303710938
    7. '	g' → logprob: -11.375961303710938
    8. ' g' → logprob: -12.250961303710938
    9. 'gv' → logprob: -12.375961303710938
    10. 'return' → logprob: -12.750961303710938

Token 201: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.009554794058203697
    2. '_' → logprob: -5.134554862976074
    3. '_val' → logprob: -5.759554862976074
    4. '(x' → logprob: -8.759554862976074
    5. 'value' → logprob: -9.134554862976074
    6. '=' → logprob: -9.759554862976074
    7. ' =' → logprob: -10.259554862976074
    8. '(' → logprob: -10.384554862976074
    9. '_=' → logprob: -10.509554862976074
    10. '_x' → logprob: -10.509554862976074

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740819036960602
    2. '=' → logprob: -0.9740818738937378
    3. ' ' → logprob: -12.599081993103027
    4. '=

' → logprob: -14.599081993103027
    5. ':' → logprob: -15.349081993103027
    6. '   ' → logprob: -15.474081993103027
    7. '＝' → logprob: -16.09908103942871
    8. ',' → logprob: -16.22408103942871
    9. ' =
' → logprob: -16.59908103942871
    10. 's' → logprob: -17.09908103942871

Token 203: ' Math' (ID: 7268)
  Prédit: 'Math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Math' → logprob: -9.627176768844947e-05
    2. ' Math' → logprob: -9.250096321105957
    3. 'Mat' → logprob: -17.00009536743164
    4. '   ' → logprob: -17.37509536743164
    5. '[Math' → logprob: -18.37509536743164
    6. 'Integer' → logprob: -19.25009536743164
    7. 'math' → logprob: -19.37509536743164
    8. '
' → logprob: -19.62509536743164
    9. '(Math' → logprob: -19.87509536743164
    10. '=Math' → logprob: -20.25009536743164

Token 204: 'Utils' (ID: 5687)
  Prédit: 'Utils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Utils' → logprob: -5.676981345459353e-06
    2. 'Util' → logprob: -12.500005722045898
    3. 'utils' → logprob: -14.625005722045898
    4. 'Ut' → logprob: -14.875005722045898
    5. ' Utils' → logprob: -15.000005722045898
    6. 'U' → logprob: -15.250005722045898
    7. '.Utils' → logprob: -15.875005722045898
    8. '_utils' → logprob: -16.1250057220459
    9. 'Utilities' → logprob: -17.0000057220459
    10. '.' → logprob: -17.6250057220459

Token 205: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0005066845333203673
    2. '.' → logprob: -7.62550687789917
    3. 'g' → logprob: -11.000506401062012
    4. ' gcd' → logprob: -14.250506401062012
    5. ' .' → logprob: -14.500506401062012
    6. '{}.' → logprob: -15.250506401062012
    7. '​.' → logprob: -16.000507354736328
    8. '().' → logprob: -16.750507354736328
    9. '.gms' → logprob: -16.750507354736328
    10. '.gdx' → logprob: -17.000507354736328

Token 206: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00037716879160143435
    2. 'c' → logprob: -8.00037670135498
    3. 'cdn' → logprob: -10.87537670135498
    4. '```' → logprob: -12.62537670135498
    5. 'cdf' → logprob: -12.81287670135498
    6. '	cd' → logprob: -13.31287670135498
    7. 'cf' → logprob: -13.68787670135498
    8. '
' → logprob: -14.50037670135498
    9. 'cmath' → logprob: -14.50037670135498
    10. 'cdr' → logprob: -14.62537670135498

Token 207: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. 'x' → logprob: -15.625204086303711
    4. '(
' → logprob: -16.25020408630371
    5. ' (' → logprob: -18.37520408630371
    6. '(

' → logprob: -20.37520408630371
    7. '```' → logprob: -20.75020408630371
    8. '((' → logprob: -20.87520408630371
    9. '(
' → logprob: -21.87520408630371
    10. '()' → logprob: -21.87520408630371

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007299474673345685
    2. ',y' → logprob: -7.500730037689209
    3. ' ,' → logprob: -8.75072956085205
    4. 'y' → logprob: -11.25072956085205
    5. ',
' → logprob: -12.50072956085205
    6. ',x' → logprob: -14.87572956085205
    7. ')' → logprob: -15.00072956085205
    8. ' y' → logprob: -15.37572956085205
    9. ',b' → logprob: -15.37572956085205
    10. '       ' → logprob: -15.50072956085205

Token 209: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003178071230649948
    2. ' y' → logprob: -5.753178119659424
    3. ')y' → logprob: -16.378177642822266
    4. '	y' → logprob: -16.628177642822266
    5. '       ' → logprob: -16.878177642822266
    6. '   ' → logprob: -16.878177642822266
    7. '    ' → logprob: -18.128177642822266
    8. ')' → logprob: -18.253177642822266
    9. ' ' → logprob: -18.503177642822266
    10. '           ' → logprob: -18.878177642822266

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16153347492218018
    2. ')
' → logprob: -1.9115334749221802
    3. '       ' → logprob: -6.661533355712891
    4. ')
' → logprob: -10.78653335571289
    5. ')

' → logprob: -12.16153335571289
    6. ' )' → logprob: -13.91153335571289
    7. ')return' → logprob: -14.03653335571289
    8. ' )
' → logprob: -14.41153335571289
    9. ')\
' → logprob: -15.16153335571289
    10. '   ' → logprob: -15.41153335571289

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009475805796682835
    2. 'return' → logprob: -5.1344757080078125
    3. ' return' → logprob: -5.7594757080078125
    4. '   ' → logprob: -8.884475708007812
    5. '
' → logprob: -9.009475708007812
    6. '        
' → logprob: -9.134475708007812
    7. '    
' → logprob: -11.634475708007812
    8. '	return' → logprob: -13.009475708007812
    9. ' 
' → logprob: -13.134475708007812
    10. '      ' → logprob: -13.509475708007812

Token 212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024453350342810154
    2. '       ' → logprob: -6.252445220947266
    3. ' return' → logprob: -7.752445220947266
    4. 'result' → logprob: -10.502445220947266
    5. 'if' → logprob: -10.627445220947266
    6. '        
' → logprob: -10.877445220947266
    7. '
' → logprob: -11.127445220947266
    8. '	return' → logprob: -14.252445220947266
    9. '   ' → logprob: -15.877445220947266
    10. ':return' → logprob: -16.127445220947266

Token 213: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6774855256080627
    2. ' (' → logprob: -0.9274855256080627
    3. 'x' → logprob: -3.302485466003418
    4. ' x' → logprob: -3.677485466003418
    5. ' abs' → logprob: -4.052485466003418
    6. 'abs' → logprob: -4.302485466003418
    7. '(abs' → logprob: -5.802485466003418
    8. '(' → logprob: -8.177485466003418
    9. ' ' → logprob: -8.552485466003418
    10. '   ' → logprob: -10.177485466003418

Token 214: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017876329366117716
    2. ' x' → logprob: -6.7517876625061035
    3. 'abs' → logprob: -7.5017876625061035
    4. '(x' → logprob: -9.751787185668945
    5. ' abs' → logprob: -12.501787185668945
    6. ' (' → logprob: -13.751787185668945
    7. '(abs' → logprob: -13.751787185668945
    8. '   ' → logprob: -14.126787185668945
    9. '	x' → logprob: -16.251787185668945
    10. ' ' → logprob: -16.251787185668945

Token 215: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.036287784576416016
    2. '*' → logprob: -3.536287784576416
    3. ' //' → logprob: -5.286287784576416
    4. ' ' → logprob: -6.661287784576416
    5. '//' → logprob: -8.786287307739258
    6. ' ' → logprob: -10.911287307739258
    7. ')' → logprob: -13.536287307739258
    8. '*b' → logprob: -14.161287307739258
    9. '**' → logprob: -14.911287307739258
    10. '```' → logprob: -15.036287307739258

Token 216: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.016045158728957176
    2. ' gcd' → logprob: -4.141045093536377
    3. ' ' → logprob: -12.266045570373535
    4. '	g' → logprob: -13.516045570373535
    5. ' g' → logprob: -13.766045570373535
    6. '   ' → logprob: -13.766045570373535
    7. 'b' → logprob: -14.516045570373535
    8. '  ' → logprob: -14.516045570373535
    9. '/g' → logprob: -15.016045570373535
    10. '(g' → logprob: -15.516045570373535

Token 217: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.180258191714529e-06
    2. 'value' → logprob: -11.750008583068848
    3. 'alue' → logprob: -15.750008583068848
    4. 'Value' → logprob: -16.50000762939453
    5. '_VALUE' → logprob: -17.12500762939453
    6. '-value' → logprob: -18.50000762939453
    7. '_values' → logprob: -18.62500762939453
    8. '_Value' → logprob: -18.62500762939453
    9. '_' → logprob: -18.87500762939453
    10. ''value' → logprob: -18.87500762939453

Token 218: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2704254388809204
    2. ' *' → logprob: -1.5204254388809204
    3. ' )' → logprob: -4.645425319671631
    4. '*' → logprob: -4.770425319671631
    5. ')*' → logprob: -8.645425796508789
    6. ' ' → logprob: -10.020425796508789
    7. '*)' → logprob: -10.895425796508789
    8. ' *)' → logprob: -13.020425796508789
    9. '*y' → logprob: -13.770425796508789
    10. '   ' → logprob: -14.395425796508789

Token 219: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.693165123462677
    2. ' *' → logprob: -0.693165123462677
    3. '*y' → logprob: -11.318164825439453
    4. ' ' → logprob: -12.693164825439453
    5. ' ' → logprob: -13.443164825439453
    6. '**' → logprob: -14.443164825439453
    7. '*b' → logprob: -15.443164825439453
    8. ' **' → logprob: -16.318164825439453
    9. '*
' → logprob: -16.568164825439453
    10. '   ' → logprob: -16.693164825439453

Token 220: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.038138002157211304
    2. ' y' → logprob: -3.288137912750244
    3. '(y' → logprob: -9.288138389587402
    4. ' (' → logprob: -12.913138389587402
    5. '(' → logprob: -14.788138389587402
    6. ' ' → logprob: -14.913138389587402
    7. '	y' → logprob: -15.038138389587402
    8. 'b' → logprob: -15.163138389587402
    9. '   ' → logprob: -15.913138389587402
    10. 'abs' → logprob: -16.038137435913086

Token 221: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2419224977493286
    2. '<|end|>' → logprob: -1.6169224977493286
    3. 'class' → logprob: -4.991922378540039
    4. '

' → logprob: -4.991922378540039
    5. '<|end|>' → logprob: -6.491922378540039
    6. '\n' → logprob: -8.616922378540039
    7. '  
' → logprob: -8.741922378540039
    8. '```' → logprob: -8.991922378540039
    9. ' 
' → logprob: -9.116922378540039
    10. '    
' → logprob: -9.116922378540039

Token 222: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' Input' (ID: 10090)
  Prédit: ' Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Integer' → logprob: -0.8231076598167419
    2. ' Fraction' → logprob: -1.4481077194213867
    3. 'Integer' → logprob: -1.9481077194213867
    4. 'Fraction' → logprob: -2.0731077194213867
    5. ' Rational' → logprob: -4.323107719421387
    6. ' Pair' → logprob: -4.948107719421387
    7. ' Solution' → logprob: -5.073107719421387
    8. ' Number' → logprob: -5.323107719421387
    9. ' Math' → logprob: -5.448107719421387
    10. 'Solution' → logprob: -5.948107719421387

Token 224: 'Provider' (ID: 5999)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.1370893120765686
    2. 'Handler' → logprob: -2.262089252471924
    3. 'Parser' → logprob: -4.387089252471924
    4. 'Processor' → logprob: -4.762089252471924
    5. 'Provider' → logprob: -6.762089252471924
    6. 'Data' → logprob: -7.137089252471924
    7. 'Helper' → logprob: -8.387089729309082
    8. 'Iterator' → logprob: -9.012089729309082
    9. ':' → logprob: -9.262089729309082
    10. 'Manager' → logprob: -9.512089729309082

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003184363478794694
    2. ':
' → logprob: -5.7531843185424805
    3. ' :' → logprob: -13.50318431854248
    4. ':

' → logprob: -13.75318431854248
    5. '():' → logprob: -13.87818431854248
    6. '(' → logprob: -14.00318431854248
    7. '(object' → logprob: -14.50318431854248
    8. ',' → logprob: -15.50318431854248
    9. '(List' → logprob: -15.50318431854248
    10. ':def' → logprob: -15.62818431854248

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005839215125888586
    2. ' def' → logprob: -5.7558393478393555
    3. 'def' → logprob: -6.0058393478393555
    4. ':' → logprob: -9.255839347839355
    5. '@' → logprob: -9.380839347839355
    6. ' @' → logprob: -12.755839347839355
    7. 'import' → logprob: -12.755839347839355
    8. '    
' → logprob: -13.130839347839355
    9. ':def' → logprob: -13.505839347839355
    10. '   ' → logprob: -14.005839347839355

Token 227: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6026818156242371
    2. '@' → logprob: -1.1026818752288818
    3. ' def' → logprob: -2.227681875228882
    4. ' @' → logprob: -4.352681636810303
    5. 'import' → logprob: -11.352682113647461
    6. '@property' → logprob: -12.227682113647461
    7. '   ' → logprob: -12.602682113647461
    8. 'staticmethod' → logprob: -13.352682113647461
    9. '@param' → logprob: -13.477682113647461
    10. '__' → logprob: -14.477682113647461

Token 228: ' Abstract' (ID: 17413)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6565713286399841
    2. 'def' → logprob: -1.531571388244629
    3. ' def' → logprob: -1.906571388244629
    4. ' @' → logprob: -2.156571388244629
    5. 'import' → logprob: -7.656571388244629
    6. '   ' → logprob: -9.531571388244629
    7. 'from' → logprob: -9.656571388244629
    8. 'class' → logprob: -9.906571388244629
    9. 'staticmethod' → logprob: -10.281571388244629
    10. '@property' → logprob: -10.906571388244629

Token 229: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19816854596138
    2. '    ' → logprob: -2.9481685161590576
    3. ' ' → logprob: -3.1981685161590576
    4. ' def' → logprob: -3.3231685161590576
    5. 'def' → logprob: -3.6981685161590576
    6. '  ' → logprob: -4.698168754577637
    7. 'class' → logprob: -5.073168754577637
    8. ' pass' → logprob: -5.198168754577637
    9. ' class' → logprob: -6.573168754577637
    10. '    
' → logprob: -7.448168754577637

Token 230: ' source' (ID: 4256)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6220059990882874
    2. '()' → logprob: -1.2470059394836426
    3. ' method' → logprob: -3.2470059394836426
    4. ' def' → logprob: -3.2470059394836426
    5. 'class' → logprob: -3.8720059394836426
    6. '_iterator' → logprob: -3.9970059394836426
    7. 'method' → logprob: -4.497005939483643
    8. ':' → logprob: -4.622005939483643
    9. ' class' → logprob: -4.622005939483643
    10. '_reader' → logprob: -5.372005939483643

Token 231: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3138667643070221
    2. ':' → logprob: -1.4388667345046997
    3. ' def' → logprob: -4.56386661529541
    4. '    
' → logprob: -4.81386661529541
    5. 'def' → logprob: -4.93886661529541
    6. ':
' → logprob: -5.43886661529541
    7. '():' → logprob: -8.18886661529541
    8. '<|end|>' → logprob: -8.31386661529541
    9. ' :' → logprob: -8.43886661529541
    10. '    ' → logprob: -8.56386661529541

Token 232: ' facilitating' (ID: 97471)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49937304854393005
    2. ' def' → logprob: -1.3743730783462524
    3. '   ' → logprob: -2.124372959136963
    4. ' pass' → logprob: -4.749372959136963
    5. 'pass' → logprob: -4.874372959136963
    6. 'class' → logprob: -6.499372959136963
    7. '...' → logprob: -7.374372959136963
    8. '#' → logprob: -7.999372959136963
    9. ' not' → logprob: -8.124373435974121
    10. '
' → logprob: -8.624373435974121

Token 233: ' future' (ID: 5277)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.45394033193588257
    2. 'def' → logprob: -1.0789403915405273
    3. ' an' → logprob: -5.078940391540527
    4. ' reading' → logprob: -5.328940391540527
    5. ' the' → logprob: -5.703940391540527
    6. ' iteration' → logprob: -5.828940391540527
    7. ' sys' → logprob: -6.453940391540527
    8. ' input' → logprob: -6.953940391540527
    9. 'sys' → logprob: -7.078940391540527
    10. 'reading' → logprob: -7.453940391540527

Token 234: ' input' (ID: 3422)
  Prédit: ' enhancements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' enhancements' → logprob: -0.7929546236991882
    2. 'def' → logprob: -1.792954683303833
    3. 'extensions' → logprob: -2.042954683303833
    4. ' extensions' → logprob: -3.167954683303833
    5. ' iterations' → logprob: -3.292954683303833
    6. ' expansions' → logprob: -3.667954683303833
    7. ' def' → logprob: -3.917954683303833
    8. ' iteration' → logprob: -4.167954444885254
    9. ' additions' → logprob: -4.417954444885254
    10. 'iterations' → logprob: -4.417954444885254

Token 235: ' types' (ID: 6009)
  Prédit: ' methods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' methods' → logprob: -0.18770278990268707
    2. 'def' → logprob: -2.9377028942108154
    3. 'methods' → logprob: -2.9377028942108154
    4. ' handling' → logprob: -3.9377028942108154
    5. ' processing' → logprob: -4.562702655792236
    6. '()' → logprob: -4.812702655792236
    7. ' def' → logprob: -5.062702655792236
    8. ' reading' → logprob: -5.437702655792236
    9. 'method' → logprob: -5.687702655792236
    10. ' retrieval' → logprob: -5.937702655792236

Token 236: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12184719741344452
    2. ':' → logprob: -2.371847152709961
    3. ':
' → logprob: -3.996847152709961
    4. '    
' → logprob: -6.371847152709961
    5. '<|end|>' → logprob: -7.621847152709961
    6. '
' → logprob: -7.996847152709961
    7. 'def' → logprob: -8.621847152709961
    8. '<|end|>' → logprob: -9.621847152709961
    9. ' def' → logprob: -10.246847152709961
    10. '):
' → logprob: -10.371847152709961

Token 237: 'e' (ID: 68)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018427345901727676
    2. '   ' → logprob: -4.89342737197876
    3. '):
' → logprob: -5.39342737197876
    4. 'def' → logprob: -6.01842737197876
    5. ' )' → logprob: -6.51842737197876
    6. ' def' → logprob: -7.01842737197876
    7. '):' → logprob: -7.39342737197876
    8. ')
' → logprob: -7.76842737197876
    9. '  ' → logprob: -10.018426895141602
    10. '...' → logprob: -10.518426895141602

Token 238: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.020319733768701553
    2. 'g' → logprob: -4.895319938659668
    3. 'num' → logprob: -5.270319938659668
    4. 'x' → logprob: -6.645319938659668
    5. 'xp' → logprob: -6.895319938659668
    6. 'n' → logprob: -7.145319938659668
    7. 'nc' → logprob: -7.395319938659668
    8. 'm' → logprob: -7.520319938659668
    9. 'nh' → logprob: -7.645319938659668
    10. 'ol' → logprob: -7.895319938659668

Token 239: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3258303701877594
    2. '):' → logprob: -1.700830340385437
    3. ':' → logprob: -3.4508304595947266
    4. '):
' → logprob: -3.8258304595947266
    5. ' )' → logprob: -4.075830459594727
    6. ',' → logprob: -4.325830459594727
    7. 'import' → logprob: -6.075830459594727
    8. ' ):' → logprob: -6.200830459594727
    9. '=' → logprob: -6.575830459594727
    10. ')
' → logprob: -6.700830459594727

Token 240: ' file' (ID: 1974)
  Prédit: ' file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.3176793158054352
    2. 'file' → logprob: -2.0676794052124023
    3. 'stdin' → logprob: -2.6926794052124023
    4. ' files' → logprob: -2.9426794052124023
    5. 'files' → logprob: -4.817679405212402
    6. ' stdin' → logprob: -5.817679405212402
    7. ' command' → logprob: -5.817679405212402
    8. ' console' → logprob: -6.442679405212402
    9. ' CLI' → logprob: -6.442679405212402
    10. 'console' → logprob: -6.567679405212402

Token 241: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31457749009132385
    2. ',' → logprob: -1.3145774602890015
    3. ' or' → logprob: -8.189577102661133
    4. 'input' → logprob: -8.189577102661133
    5. '):' → logprob: -8.939577102661133
    6. ' )' → logprob: -9.064577102661133
    7. '):
' → logprob: -9.189577102661133
    8. ' ,' → logprob: -9.314577102661133
    9. ')
' → logprob: -9.689577102661133
    10. 'source' → logprob: -9.814577102661133

Token 242: ' network' (ID: 5402)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.5359888672828674
    2. ' stdin' → logprob: -1.0359888076782227
    3. 'console' → logprob: -4.285988807678223
    4. ' network' → logprob: -4.535988807678223
    5. 'string' → logprob: -4.785988807678223
    6. ' console' → logprob: -4.910988807678223
    7. 'network' → logprob: -5.285988807678223
    8. 'socket' → logprob: -5.535988807678223
    9. ' string' → logprob: -5.785988807678223
    10. ' socket' → logprob: -6.285988807678223

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09376562386751175
    2. '):' → logprob: -2.4687657356262207
    3. '):
' → logprob: -5.968765735626221
    4. ',' → logprob: -6.343765735626221
    5. ')
' → logprob: -8.593765258789062
    6. 'source' → logprob: -9.343765258789062
    7. ' )' → logprob: -9.718765258789062
    8. 'input' → logprob: -10.093765258789062
    9. ' input' → logprob: -10.843765258789062
    10. ').' → logprob: -10.968765258789062

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014703295193612576
    2. 'def' → logprob: -5.014703273773193
    3. ' def' → logprob: -5.389703273773193
    4. '    
' → logprob: -5.889703273773193
    5. ':' → logprob: -7.764703273773193
    6. '    ' → logprob: -9.514703750610352
    7. ' ' → logprob: -10.514703750610352
    8. '  ' → logprob: -10.889703750610352
    9. '
' → logprob: -11.264703750610352
    10. ' 
' → logprob: -11.389703750610352

Token 245: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5284721851348877
    2. 'def' (adapté à ' def') → logprob: -0.9034721851348877
    3. '@' → logprob: -5.653471946716309
    4. '   ' → logprob: -6.903471946716309
    5. ' @' → logprob: -7.153471946716309
    6. ' pass' → logprob: -11.028471946716309
    7. ' ' → logprob: -11.528471946716309
    8. '
' → logprob: -12.528471946716309
    9. 'pass' → logprob: -12.528471946716309
    10. '    
' → logprob: -12.903471946716309

Token 246: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.7987945675849915
    2. 'read' → logprob: -1.5487945079803467
    3. ' read' → logprob: -1.6737945079803467
    4. '__' → logprob: -2.5487945079803467
    5. ' readline' → logprob: -3.1737945079803467
    6. ' get' → logprob: -3.7987945079803467
    7. 'get' → logprob: -5.798794746398926
    8. ' provide' → logprob: -6.548794746398926
    9. '_read' → logprob: -6.923794746398926
    10. 'provide' → logprob: -7.423794746398926

Token 247: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003215261036530137
    2. 'iter' → logprob: -5.753215312957764
    3. 'next' → logprob: -10.878214836120605
    4. 'call' → logprob: -11.378214836120605
    5. ' init' → logprob: -12.253214836120605
    6. 'enter' → logprob: -14.003214836120605
    7. 'new' → logprob: -14.628214836120605
    8. 'read' → logprob: -15.253214836120605
    9. '_init' → logprob: -15.628214836120605
    10. 'ini' → logprob: -15.628214836120605

Token 248: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.578425943851471
    2. '(self' → logprob: -0.828425943851471
    3. ' (' → logprob: -6.078425884246826
    4. '(' → logprob: -9.203426361083984
    5. '__' → logprob: -10.203426361083984
    6. '__(
' → logprob: -10.578426361083984
    7. '_(' → logprob: -10.828426361083984
    8. '__((' → logprob: -13.453426361083984
    9. 'self' → logprob: -13.703426361083984
    10. ' ' → logprob: -14.203426361083984

Token 249: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002198313595727086
    2. ')' → logprob: -6.377198219299316
    3. '):
' → logprob: -7.752198219299316
    4. ' self' → logprob: -10.377198219299316
    5. '):' → logprob: -11.252198219299316
    6. '
' → logprob: -11.252198219299316
    7. '   ' → logprob: -12.877198219299316
    8. '(self' → logprob: -13.752198219299316
    9. 'source' → logprob: -13.752198219299316
    10. '	self' → logprob: -13.752198219299316

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5635210871696472
    2. '):' → logprob: -0.9385210871696472
    3. '):
' → logprob: -3.313521146774292
    4. 'self' → logprob: -6.813520908355713
    5. ')' → logprob: -6.938520908355713
    6. ' ):' → logprob: -7.188520908355713
    7. ',input' → logprob: -9.063521385192871
    8. ' ,' → logprob: -9.063521385192871
    9. '   ' → logprob: -10.063521385192871
    10. ' ):
' → logprob: -11.063521385192871

Token 251: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.31830599904060364
    2. ' source' → logprob: -1.9433059692382812
    3. 'input' → logprob: -2.3183059692382812
    4. ' input' → logprob: -3.9433059692382812
    5. 'data' → logprob: -5.443305969238281
    6. ' lines' → logprob: -6.193305969238281
    7. ' data' → logprob: -6.443305969238281
    8. 'stream' → logprob: -6.693305969238281
    9. 'lines' → logprob: -7.193305969238281
    10. 'inputs' → logprob: -8.068305969238281

Token 252: '=sys' (ID: 149200)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3737194836139679
    2. ':' → logprob: -1.2487194538116455
    3. '):
' → logprob: -4.123719692230225
    4. ' ):' → logprob: -5.498719692230225
    5. ')' → logprob: -6.123719692230225
    6. '=None' → logprob: -6.373719692230225
    7. '=' → logprob: -7.873719692230225
    8. ' :' → logprob: -8.248719215393066
    9. ' ):
' → logprob: -9.998719215393066
    10. ' )' → logprob: -10.373719215393066

Token 253: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004733294772449881
    2. 'stdin' → logprob: -8.000473022460938
    3. '.' → logprob: -9.750473022460938
    4. ')' → logprob: -10.125473022460938
    5. ' stdin' → logprob: -11.000473022460938
    6. ' .' → logprob: -11.750473022460938
    7. '.argv' → logprob: -11.875473022460938
    8. '.stdout' → logprob: -12.750473022460938
    9. '.std' → logprob: -13.875473022460938
    10. '(stdin' → logprob: -14.250473022460938

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1611037403345108
    2. '):
' → logprob: -1.9111037254333496
    3. ',' → logprob: -7.78610372543335
    4. ')' → logprob: -8.536104202270508
    5. ' ):' → logprob: -8.536104202270508
    6. ' ):
' → logprob: -10.661104202270508
    7. '   ' → logprob: -11.036104202270508
    8. '):
' → logprob: -11.286104202270508
    9. ':' → logprob: -12.036104202270508
    10. '.readline' → logprob: -12.411104202270508

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001577698567416519
    2. ' self' → logprob: -9.375157356262207
    3. 'self' → logprob: -9.750157356262207
    4. '   ' → logprob: -11.500157356262207
    5. '<|end|>' → logprob: -13.875157356262207
    6. '      ' → logprob: -14.125157356262207
    7. '	self' → logprob: -14.125157356262207
    8. '	' → logprob: -14.250157356262207
    9. ',' → logprob: -15.375157356262207
    10. '     ' → logprob: -15.500157356262207

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07990951836109161
    2. ' self' → logprob: -2.579909563064575
    3. '       ' → logprob: -7.079909324645996
    4. 'source' → logprob: -9.079909324645996
    5. '   ' → logprob: -9.954909324645996
    6. ' source' → logprob: -11.704909324645996
    7. '_source' → logprob: -12.579909324645996
    8. '	self' → logprob: -12.829909324645996
    9. '_self' → logprob: -15.579909324645996
    10. '        
' → logprob: -15.829909324645996

Token 257: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.20169945061206818
    2. '._' → logprob: -1.7016994953155518
    3. '.' → logprob: -8.951699256896973
    4. 'source' → logprob: -9.201699256896973
    5. '_source' → logprob: -10.201699256896973
    6. ' .' → logprob: -11.826699256896973
    7. '	source' → logprob: -12.826699256896973
    8. ' source' → logprob: -13.326699256896973
    9. '.readline' → logprob: -13.326699256896973
    10. '.Source' → logprob: -14.076699256896973

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03878716006875038
    2. ' =' → logprob: -3.2887871265411377
    3. '.' → logprob: -7.288787364959717
    4. '.readline' → logprob: -10.663786888122559
    5. '.=' → logprob: -11.288786888122559
    6. ' ' → logprob: -11.788786888122559
    7. '.read' → logprob: -12.413786888122559
    8. '_' → logprob: -12.913786888122559
    9. '=input' → logprob: -13.163786888122559
    10. '   ' → logprob: -13.538786888122559

Token 259: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.0040785204619169235
    2. ' source' → logprob: -5.504078388214111
    3. '	source' → logprob: -16.504077911376953
    4. '[source' → logprob: -18.629077911376953
    5. '(source' → logprob: -18.754077911376953
    6. ' ' → logprob: -20.004077911376953
    7. '_source' → logprob: -20.504077911376953
    8. 'ource' → logprob: -20.879077911376953
    9. '/source' → logprob: -21.504077911376953
    10. 's' → logprob: -21.504077911376953

Token 260: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15241549909114838
    2. '   ' → logprob: -2.2774155139923096
    3. '    
' → logprob: -3.4024155139923096
    4. '<|end|>' → logprob: -5.7774152755737305
    5. 'def' → logprob: -6.4024152755737305
    6. '

' → logprob: -8.02741527557373
    7. '<|end|>' → logprob: -9.27741527557373
    8. '        
' → logprob: -9.52741527557373
    9. ' 
' → logprob: -9.65241527557373
    10. '  
' → logprob: -9.65241527557373

Token 261: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002309527015313506
    2. '   ' → logprob: -6.502309322357178
    3. ' def' → logprob: -7.127309322357178
    4. '
' → logprob: -12.502309799194336
    5. '	def' → logprob: -15.752309799194336
    6. ' ' → logprob: -16.127309799194336
    7. '    
' → logprob: -18.252309799194336
    8. 'de' → logprob: -18.377309799194336
    9. '

' → logprob: -18.377309799194336
    10. '  ' → logprob: -18.752309799194336

Token 262: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.684157026233152e-05
    2. ' def' → logprob: -9.500077247619629
    3. '
' → logprob: -14.125077247619629
    4. '   ' → logprob: -15.125077247619629
    5. '

' → logprob: -15.500077247619629
    6. 'iterator' → logprob: -15.750077247619629
    7. 'buffer' → logprob: -15.875077247619629
    8. '_iterator' → logprob: -16.000076293945312
    9. '_def' → logprob: -16.250076293945312
    10. '_iter' → logprob: -17.500076293945312

Token 263: ' lines' (ID: 8698)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.08290567249059677
    2. ' readline' → logprob: -2.5829057693481445
    3. ' read' → logprob: -6.2079057693481445
    4. '__' → logprob: -6.8329057693481445
    5. '.readline' → logprob: -7.2079057693481445
    6. ' __' → logprob: -8.707905769348145
    7. 'input' → logprob: -12.582905769348145
    8. '_read' → logprob: -13.582905769348145
    9. '.readlines' → logprob: -13.832905769348145
    10. 'line' → logprob: -13.832905769348145

Token 264: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002224364085122943
    2. '():' → logprob: -6.377224445343018
    3. '()' → logprob: -7.752224445343018
    4. '(' → logprob: -9.37722396850586
    5. '()(' → logprob: -12.87722396850586
    6. '():
' → logprob: -13.00222396850586
    7. 'self' → logprob: -13.50222396850586
    8. ' (' → logprob: -14.75222396850586
    9. '(s' → logprob: -15.62722396850586
    10. ' ()' → logprob: -16.25222396850586

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5291649699211121
    2. '):' → logprob: -1.2791650295257568
    3. '):
' → logprob: -2.029165029525757
    4. '()' → logprob: -7.904164791107178
    5. '()):
' → logprob: -8.529165267944336
    6. 'self' → logprob: -8.654165267944336
    7. '())' → logprob: -9.404165267944336
    8. ' )' → logprob: -9.654165267944336
    9. '():' → logprob: -9.654165267944336
    10. '(self' → logprob: -9.779165267944336

Token 266: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002097564283758402
    2. '->' → logprob: -7.0020976066589355
    3. ' ->' → logprob: -7.6270976066589355
    4. '(' → logprob: -8.627097129821777
    5. '()' → logprob: -8.877097129821777
    6. '():' → logprob: -9.002097129821777
    7. 'self' → logprob: -9.127097129821777
    8. ':' → logprob: -9.877097129821777
    9. '()->' → logprob: -10.252097129821777
    10. ')' → logprob: -10.502097129821777

Token 267: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.06203031167387962
    2. ' Iterator' → logprob: -2.81203031539917
    3. 'iter' → logprob: -10.437029838562012
    4. 'Iterable' → logprob: -11.437029838562012
    5. '	Iterator' → logprob: -11.562029838562012
    6. ' iter' → logprob: -12.687029838562012
    7. '_iterator' → logprob: -12.937029838562012
    8. 'Iter' → logprob: -13.187029838562012
    9. 'List' → logprob: -13.562029838562012
    10. 'map' → logprob: -13.562029838562012

Token 268: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.000659419281873852
    2. ':' → logprob: -7.375659465789795
    3. '[' → logprob: -10.500658988952637
    4. '[int' → logprob: -13.125658988952637
    5. ':str' → logprob: -13.875658988952637
    6. '(str' → logprob: -14.125658988952637
    7. ':
' → logprob: -14.250658988952637
    8. 'str' → logprob: -14.875658988952637
    9. '():' → logprob: -15.375658988952637
    10. ' ' → logprob: -15.375658988952637

Token 269: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.32229509949684143
    2. ']:
' → logprob: -1.322295069694519
    3. '):
' → logprob: -5.697295188903809
    4. ']' → logprob: -5.947295188903809
    5. '):' → logprob: -5.947295188903809
    6. '   ' → logprob: -8.947295188903809
    7. ']:
' → logprob: -9.697295188903809
    8. '():
' → logprob: -9.822295188903809
    9. '"]:' → logprob: -10.447295188903809
    10. ':' → logprob: -10.572295188903809

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02376830391585827
    2. ' for' → logprob: -3.773768186569214
    3. 'for' → logprob: -7.773768424987793
    4. '    ' → logprob: -10.273768424987793
    5. '   ' → logprob: -11.023768424987793
    6. ' while' → logprob: -11.648768424987793
    7. ':' → logprob: -11.648768424987793
    8. '        ' → logprob: -11.898768424987793
    9. ' ' → logprob: -12.148768424987793
    10. ' readline' → logprob: -12.148768424987793

Token 271: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04118270054459572
    2. ' for' → logprob: -3.41618275642395
    3. '       ' → logprob: -5.416182518005371
    4. 'return' → logprob: -6.166182518005371
    5. 'yield' → logprob: -7.166182518005371
    6. 'while' → logprob: -9.541182518005371
    7. ' return' → logprob: -9.916182518005371
    8. '   ' → logprob: -10.166182518005371
    9. ' yield' → logprob: -10.791182518005371
    10. '        
' → logprob: -12.291182518005371

Token 272: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1602402776479721
    2. 'line' → logprob: -1.9102402925491333
    3. '	line' → logprob: -11.285240173339844
    4. 'self' → logprob: -14.035240173339844
    5. '_line' → logprob: -14.035240173339844
    6. '(line' → logprob: -14.785240173339844
    7. 'l' → logprob: -15.035240173339844
    8. 'Line' → logprob: -15.285240173339844
    9. 'lin' → logprob: -15.285240173339844
    10. '#line' → logprob: -15.410240173339844

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004099654499441385
    2. 'in' → logprob: -5.5040998458862305
    3. ' ' → logprob: -11.12909984588623
    4. '	in' → logprob: -13.00409984588623
    5. 'line' → logprob: -14.00409984588623
    6. 's' → logprob: -14.00409984588623
    7. ' ' → logprob: -14.37909984588623
    8. '_in' → logprob: -14.62909984588623
    9. ' i' → logprob: -15.37909984588623
    10. '_' → logprob: -15.50409984588623

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008615515194833279
    2. ' self' → logprob: -4.758615493774414
    3. '(self' → logprob: -15.008615493774414
    4. 'iter' → logprob: -15.258615493774414
    5. '	self' → logprob: -15.633615493774414
    6. 'map' → logprob: -16.258615493774414
    7. 'sel' → logprob: -16.508615493774414
    8. 'sys' → logprob: -18.258615493774414
    9. '[self' → logprob: -18.883615493774414
    10. ' ' → logprob: -18.883615493774414

Token 275: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0024813658092170954
    2. 'source' → logprob: -6.002481460571289
    3. 'n' → logprob: -12.502481460571289
    4. '.' → logprob: -14.627481460571289
    5. '	source' → logprob: -14.627481460571289
    6. 'ource' → logprob: -15.252481460571289
    7. ' source' → logprob: -15.252481460571289
    8. '(source' → logprob: -15.627481460571289
    9. 's' → logprob: -16.50248146057129
    10. '.lines' → logprob: -17.00248146057129

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5438451766967773
    2. ' in' → logprob: -1.5438451766967773
    3. '.readline' → logprob: -2.1688451766967773
    4. 'in' → logprob: -2.4188451766967773
    5. ':
' → logprob: -6.668845176696777
    6. ' readline' → logprob: -7.793845176696777
    7. '.' → logprob: -8.168845176696777
    8. '.readlines' → logprob: -8.668845176696777
    9. '   ' → logprob: -9.168845176696777
    10. '.rstrip' → logprob: -9.293845176696777

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057936668395996094
    2. ' yield' → logprob: -3.307936668395996
    3. 'yield' → logprob: -3.932936668395996
    4. '	yield' → logprob: -9.807936668395996
    5. 'Yield' → logprob: -10.182936668395996
    6. '        ' → logprob: -12.182936668395996
    7. '       ' → logprob: -12.432936668395996
    8. '          ' → logprob: -12.807936668395996
    9. '            
' → logprob: -12.807936668395996
    10. '            ' → logprob: -12.932936668395996

Token 278: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.0771445706486702
    2. 'yield' (adapté à ' yield') → logprob: -3.0771446228027344
    3. '           ' → logprob: -3.5771446228027344
    4. '	yield' → logprob: -8.577144622802734
    5. 'Yield' → logprob: -12.452144622802734
    6. '               ' → logprob: -12.452144622802734
    7. '
' → logprob: -13.577144622802734
    8. ' if' → logprob: -16.452144622802734
    9. '.strip' → logprob: -16.577144622802734
    10. '       ' → logprob: -16.827144622802734

Token 279: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.38687121868133545
    2. ' line' → logprob: -1.1368712186813354
    3. '	line' → logprob: -16.636871337890625
    4. '(line' → logprob: -16.886871337890625
    5. '#line' → logprob: -18.011871337890625
    6. ' ' → logprob: -18.761871337890625
    7. '=line' → logprob: -18.761871337890625
    8. '   ' → logprob: -19.386871337890625
    9. '[line' → logprob: -19.636871337890625
    10. 'lin' → logprob: -20.886871337890625

Token 280: '.strip' (ID: 40613)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006665678229182959
    2. '()
' → logprob: -7.500666618347168
    3. '()\' → logprob: -9.750666618347168
    4. '<|end|>' → logprob: -10.125666618347168
    5. '()

' → logprob: -11.750666618347168
    6. '(' → logprob: -13.625666618347168
    7. '())' → logprob: -14.000666618347168
    8. '```' → logprob: -14.000666618347168
    9. 'newline' → logprob: -14.000666618347168
    10. '()`' → logprob: -14.125666618347168

Token 282: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.6100132496794686e-05
    2. '
' → logprob: -10.375056266784668
    3. 'def' → logprob: -11.625056266784668
    4. ' class' → logprob: -12.250056266784668
    5. 'from' → logprob: -12.750056266784668
    6. '<|end|>' → logprob: -13.000056266784668
    7. 'import' → logprob: -13.125056266784668
    8. '    
' → logprob: -13.375056266784668
    9. '```' → logprob: -13.875056266784668
    10. '  
' → logprob: -14.250056266784668

Token 283: ' Data' (ID: 4833)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.6514139771461487
    2. 'Solution' → logprob: -2.026413917541504
    3. ' Solution' → logprob: -2.401413917541504
    4. ' Output' → logprob: -2.776413917541504
    5. 'Integer' → logprob: -3.276413917541504
    6. 'Processor' → logprob: -3.651413917541504
    7. 'Solver' → logprob: -4.026413917541504
    8. 'Pair' → logprob: -4.026413917541504
    9. ' Solver' → logprob: -4.151413917541504
    10. 'Data' → logprob: -4.401413917541504

Token 284: 'Parser' (ID: 9231)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.30939236283302307
    2. 'Provider' → logprob: -1.6843923330307007
    3. 'Reader' → logprob: -3.0593924522399902
    4. 'Parser' → logprob: -4.05939245223999
    5. 'Source' → logprob: -5.05939245223999
    6. 'Loader' → logprob: -5.43439245223999
    7. 'Collector' → logprob: -6.43439245223999
    8. 'Set' → logprob: -7.05939245223999
    9. 'Fetcher' → logprob: -7.18439245223999
    10. 'Handler' → logprob: -7.93439245223999

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006180775817483664
    2. ':
' → logprob: -7.500617980957031
    3. '<|end|>' → logprob: -10.875617980957031
    4. ' :' → logprob: -11.375617980957031
    5. '(object' → logprob: -11.500617980957031
    6. '():' → logprob: -11.875617980957031
    7. '(' → logprob: -12.000617980957031
    8. '):' → logprob: -13.250617980957031
    9. ':**' → logprob: -13.375617980957031
    10. ':def' → logprob: -14.000617980957031

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028935596346855164
    2. ' def' → logprob: -5.877893447875977
    3. 'def' → logprob: -9.627893447875977
    4. '    
' → logprob: -11.377893447875977
    5. '    ' → logprob: -12.377893447875977
    6. 'class' → logprob: -12.627893447875977
    7. '
' → logprob: -13.502893447875977
    8. ' class' → logprob: -14.627893447875977
    9. '	def' → logprob: -14.627893447875977
    10. '   ' → logprob: -15.127893447875977

Token 287: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.424689918756485
    2. 'def' → logprob: -1.6746898889541626
    3. '   ' → logprob: -2.674690008163452
    4. ' @' → logprob: -2.799690008163452
    5. '@' (adapté à ' @') → logprob: -3.549690008163452
    6. 'staticmethod' → logprob: -8.799690246582031
    7. '@param' → logprob: -12.674690246582031
    8. '@property' → logprob: -12.799690246582031
    9. ' ' → logprob: -12.799690246582031
    10. 'class' → logprob: -13.424690246582031

Token 288: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -4.60414821645827e-06
    2. 'classmethod' → logprob: -12.500004768371582
    3. 'static' → logprob: -14.000004768371582
    4. 'dat' → logprob: -17.875003814697266
    5. 'property' → logprob: -18.750003814697266
    6. ' static' → logprob: -22.375003814697266
    7. 'st' → logprob: -23.125003814697266
    8. 'Static' → logprob: -24.125003814697266
    9. '_static' → logprob: -24.500003814697266
    10. 'stat' → logprob: -24.750003814697266

Token 289: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2609938681125641
    2. ' def' → logprob: -2.0109939575195312
    3. '
' → logprob: -2.6359939575195312
    4. '   ' → logprob: -3.7609939575195312
    5. '(' → logprob: -8.385993957519531
    6. '    
' → logprob: -8.385993957519531
    7. '.def' → logprob: -9.135993957519531
    8. ' ' → logprob: -9.385993957519531
    9. '(def' → logprob: -9.510993957519531
    10. '	def' → logprob: -9.635993957519531

Token 290: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049071673303842545
    2. ' def' → logprob: -3.049071788787842
    3. '
' → logprob: -8.299071311950684
    4. '   ' → logprob: -8.424071311950684
    5. '(' → logprob: -12.299071311950684
    6. '(def' → logprob: -12.424071311950684
    7. '	def' → logprob: -12.799071311950684
    8. '_def' → logprob: -13.799071311950684
    9. '('' → logprob: -14.424071311950684
    10. ' ' → logprob: -14.549071311950684

Token 291: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004078758880496025
    2. ' def' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.62907886505127
    4. 'from' → logprob: -16.129077911376953
    5. '
' → logprob: -17.254077911376953
    6. 'class' → logprob: -18.504077911376953
    7. '	def' → logprob: -18.879077911376953
    8. 'List' → logprob: -19.379077911376953
    9. 'classmethod' → logprob: -20.504077911376953
    10. ' ' → logprob: -20.629077911376953

Token 292: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.079053595662117
    2. ' parse' → logprob: -2.5790536403656006
    3. 'read' → logprob: -9.45405387878418
    4. 'from' → logprob: -9.70405387878418
    5. ' read' → logprob: -11.82905387878418
    6. 'pairs' → logprob: -12.32905387878418
    7. ' from' → logprob: -12.70405387878418
    8. 'pair' → logprob: -12.82905387878418
    9. 'split' → logprob: -13.32905387878418
    10. 'def' → logprob: -13.95405387878418

Token 293: '_line' (ID: 14418)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.7501273155212402
    2. '(input' → logprob: -0.8751273155212402
    3. '(line' → logprob: -2.6251273155212402
    4. '(pair' → logprob: -4.12512731552124
    5. '(data' → logprob: -4.87512731552124
    6. '(integer' → logprob: -5.62512731552124
    7. '(s' → logprob: -6.87512731552124
    8. '(str' → logprob: -6.87512731552124
    9. '(raw' → logprob: -7.12512731552124
    10. '(' → logprob: -7.25012731552124

Token 294: '_to' (ID: 5089)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -3.881560041918419e-05
    2. ' (' → logprob: -11.000039100646973
    3. '(lines' → logprob: -11.125039100646973
    4. '(text' → logprob: -12.625039100646973
    5. '(input' → logprob: -13.500039100646973
    6. '(' → logprob: -13.625039100646973
    7. '(s' → logprob: -14.000039100646973
    8. '(data' → logprob: -15.750039100646973
    9. '(raw' → logprob: -16.500038146972656
    10. '(tokens' → logprob: -17.000038146972656

Token 295: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -1.1143907308578491
    2. '_int' → logprob: -1.9893907308578491
    3. 'ints' → logprob: -2.1143908500671387
    4. '_list' → logprob: -2.6143908500671387
    5. 'Integer' → logprob: -2.7393908500671387
    6. '_in' → logprob: -2.8643908500671387
    7. '_pair' → logprob: -2.8643908500671387
    8. '_tuple' → logprob: -2.8643908500671387
    9. 'int' → logprob: -2.9893908500671387
    10. 'inte' → logprob: -4.739390850067139

Token 296: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.34577861428260803
    2. 'pair' → logprob: -1.3457785844802856
    3. '_pairs' → logprob: -4.345778465270996
    4. '_tuple' → logprob: -4.970778465270996
    5. 's' → logprob: -5.345778465270996
    6. '_list' → logprob: -5.720778465270996
    7. 'pairs' → logprob: -6.470778465270996
    8. 'Pair' → logprob: -6.595778465270996
    9. 'tuple' → logprob: -7.595778465270996
    10. 'list' → logprob: -9.095778465270996

Token 297: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.5941604690160602e-05
    2. '(s' → logprob: -11.125025749206543
    3. '(text' → logprob: -11.625025749206543
    4. ' (' → logprob: -13.875025749206543
    5. '(input' → logprob: -14.250025749206543
    6. '(lines' → logprob: -15.500025749206543
    7. '(data' → logprob: -15.625025749206543
    8. '(' → logprob: -15.750025749206543
    9. '(raw' → logprob: -17.37502670288086
    10. ' line' → logprob: -18.87502670288086

Token 298: ':' (ID: 25)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.4318509101867676
    2. ')' → logprob: -1.6818509101867676
    3. ':' → logprob: -1.8068509101867676
    4. ',' → logprob: -8.68185043334961
    5. '   ' → logprob: -9.18185043334961
    6. '=line' → logprob: -9.43185043334961
    7. ' )' → logprob: -10.30685043334961
    8. '[line' → logprob: -10.43185043334961
    9. ' line' → logprob: -10.68185043334961
    10. ' (' → logprob: -11.30685043334961

Token 299: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.016058653593063354
    2. ' str' → logprob: -4.141058444976807
    3. '[str' → logprob: -11.516058921813965
    4. ')' → logprob: -11.641058921813965
    5. '
' → logprob: -13.016058921813965
    6. '(str' → logprob: -13.891058921813965
    7. '   ' → logprob: -14.016058921813965
    8. ' ' → logprob: -14.641058921813965
    9. '	str' → logprob: -15.266058921813965
    10. '=str' → logprob: -15.766058921813965

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')->' → logprob: -17.25
    4. '")' → logprob: -17.625
    5. '`)' → logprob: -17.75
    6. '')' → logprob: -17.75
    7. ':' → logprob: -17.75
    8. '):' → logprob: -18.0
    9. ',)' → logprob: -18.625
    10. '   ' → logprob: -18.875

Token 301: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5174881219863892
    2. ' ->' → logprob: -1.3924881219863892
    3. ':' → logprob: -2.5174880027770996
    4. ')' → logprob: -3.1424880027770996
    5. '(' → logprob: -3.8924880027770996
    6. '()' → logprob: -5.0174880027771
    7. '   ' → logprob: -5.7674880027771
    8. '()->' → logprob: -7.6424880027771
    9. ')->' → logprob: -7.7674880027771
    10. '>' → logprob: -8.017488479614258

Token 302: ' Integer' (ID: 6611)
  Prédit: 'Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.20173227787017822
    2. ' Integer' → logprob: -1.7017322778701782
    3. 'Tuple' → logprob: -8.451732635498047
    4. ' Tuple' → logprob: -9.201732635498047
    5. 'List' → logprob: -13.701732635498047
    6. 'Optional' → logprob: -13.701732635498047
    7. '	Integer' → logprob: -13.826732635498047
    8. ' ' → logprob: -15.076732635498047
    9. ' Optional' → logprob: -15.201732635498047
    10. ' List' → logprob: -15.701732635498047

Token 303: 'Pair' (ID: 15573)
  Prédit: 'Pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -1.3856492842023727e-06
    2. 'P' → logprob: -14.625000953674316
    3. 'Pa' → logprob: -15.125000953674316
    4. '_pair' → logprob: -15.500000953674316
    5. ' Pair' → logprob: -15.875000953674316
    6. 'Pai' → logprob: -16.250001907348633
    7. '_PAIR' → logprob: -16.625001907348633
    8. 'PAIR' → logprob: -17.750001907348633
    9. 'Peer' → logprob: -17.875001907348633
    10. 'pair' → logprob: -18.000001907348633

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.537528932094574
    2. '(' → logprob: -1.1625289916992188
    3. '(line' → logprob: -2.2875289916992188
    4. '   ' → logprob: -8.037528991699219
    5. '(
' → logprob: -8.412528991699219
    6. '():' → logprob: -8.412528991699219
    7. ':
' → logprob: -8.912528991699219
    8. '(lines' → logprob: -9.162528991699219
    9. '):' → logprob: -9.162528991699219
    10. ' :' → logprob: -9.287528991699219

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015067668864503503
    2. 'tokens' → logprob: -6.876506805419922
    3. ' parts' → logprob: -8.626506805419922
    4. ' tokens' → logprob: -9.126506805419922
    5. 'parts' → logprob: -9.751506805419922
    6. 'a' → logprob: -11.001506805419922
    7. 's' → logprob: -11.251506805419922
    8. ':' → logprob: -11.376506805419922
    9. '#' → logprob: -11.751506805419922
    10. '=' → logprob: -11.876506805419922

Token 306: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.23659619688987732
    2. 'parts' (adapté à ' parts') → logprob: -1.6115962266921997
    3. ' a' → logprob: -5.86159610748291
    4. 'a' → logprob: -6.36159610748291
    5. 'tokens' → logprob: -6.36159610748291
    6. ' tokens' → logprob: -6.48659610748291
    7. '       ' → logprob: -6.73659610748291
    8. 'x' → logprob: -7.73659610748291
    9. ' x' → logprob: -7.98659610748291
    10. ' values' → logprob: -8.11159610748291

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859054833650589
    2. '=' → logprob: -3.048590660095215
    3. '=line' → logprob: -13.673590660095215
    4. '[' → logprob: -14.173590660095215
    5. ' ' → logprob: -15.423590660095215
    6. ' =[' → logprob: -15.423590660095215
    7. '	' → logprob: -15.673590660095215
    8. '＝' → logprob: -15.673590660095215
    9. '.' → logprob: -15.798590660095215
    10. '   ' → logprob: -15.923590660095215

Token 308: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06196858361363411
    2. ' line' → logprob: -2.8119685649871826
    3. 'list' → logprob: -14.186968803405762
    4. '[line' → logprob: -15.686968803405762
    5. ' list' → logprob: -17.311967849731445
    6. '[' → logprob: -17.811967849731445
    7. '	line' → logprob: -18.311967849731445
    8. '(line' → logprob: -20.436967849731445
    9. ' [' → logprob: -20.811967849731445
    10. '=line' → logprob: -21.311967849731445

Token 309: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.12451714277267456
    2. '.' → logprob: -2.6245172023773193
    3. '.strip' → logprob: -3.1245172023773193
    4. ' .' → logprob: -7.37451696395874
    5. '().' → logprob: -11.749517440795898
    6. '.rstrip' → logprob: -12.249517440795898
    7. 'split' → logprob: -12.874517440795898
    8. '.s' → logprob: -14.999517440795898
    9. '.Split' → logprob: -15.374517440795898
    10. '   ' → logprob: -15.874517440795898

Token 310: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006520323222503066
    2. '('' → logprob: -7.375651836395264
    3. '(' → logprob: -10.875652313232422
    4. '("' → logprob: -12.125652313232422
    5. '()
' → logprob: -14.875652313232422
    6. '())' → logprob: -15.375652313232422
    7. '()]' → logprob: -15.750652313232422
    8. ' ()' → logprob: -16.000652313232422
    9. '()"' → logprob: -16.750652313232422
    10. '()

' → logprob: -16.875652313232422

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49383825063705444
    2. '[' → logprob: -1.1188383102416992
    3. ',' → logprob: -3.868838310241699
    4. 'if' → logprob: -4.118838310241699
    5. ' if' → logprob: -4.118838310241699
    6. 'return' → logprob: -5.618838310241699
    7. ' ,' → logprob: -6.868838310241699
    8. ' ' → logprob: -6.993838310241699
    9. '        
' → logprob: -7.118838310241699
    10. '0' → logprob: -7.368838310241699

Token 312: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08285267651081085
    2. 'return' → logprob: -2.582852602005005
    3. ' return' → logprob: -6.082852840423584
    4. ' a' → logprob: -6.832852840423584
    5. 'if' (adapté à ' if') → logprob: -7.707852840423584
    6. '       ' → logprob: -8.957852363586426
    7. ' if' → logprob: -11.332852363586426
    8. 'int' → logprob: -12.582852363586426
    9. '   ' → logprob: -14.582852363586426
    10. '        
' → logprob: -14.832852363586426

Token 313: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0015030752401798964
    2. 'len' → logprob: -6.501502990722656
    3. ' not' → logprob: -14.126502990722656
    4. '(len' → logprob: -17.626502990722656
    5. '	len' → logprob: -17.751502990722656
    6. ' ' → logprob: -18.501502990722656
    7. ' parts' → logprob: -19.501502990722656
    8. 'not' → logprob: -20.876502990722656
    9. '   ' → logprob: -21.001502990722656
    10. '  ' → logprob: -22.001502990722656

Token 314: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -8.41129949549213e-05
    2. ' parts' → logprob: -9.750083923339844
    3. '(' → logprob: -10.875083923339844
    4. 'parts' → logprob: -12.125083923339844
    5. ' (' → logprob: -13.500083923339844
    6. ' ' → logprob: -16.625083923339844
    7. ' <' → logprob: -17.625083923339844
    8. ')' → logprob: -17.875083923339844
    9. '(points' → logprob: -18.625083923339844
    10. '(
' → logprob: -18.750083923339844

Token 315: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.251484215259552
    2. ' <' → logprob: -2.1264841556549072
    3. ')' → logprob: -2.8764841556549072
    4. '!=' → logprob: -3.2514841556549072
    5. '<' → logprob: -5.126484394073486
    6. ' ==' → logprob: -7.251484394073486
    7. ' )' → logprob: -7.751484394073486
    8. '==' → logprob: -7.876484394073486
    9. '<|end|>' → logprob: -8.876483917236328
    10. ' >=' → logprob: -9.126483917236328

Token 316: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3240388035774231
    2. '!=' → logprob: -1.4490387439727783
    3. '<' → logprob: -3.8240387439727783
    4. ' <' → logprob: -3.9490387439727783
    5. '==' → logprob: -7.699038982391357
    6. ' ==' → logprob: -8.4490385055542
    7. '>=' → logprob: -9.6990385055542
    8. ' ' → logprob: -10.3240385055542
    9. ' >=' → logprob: -10.3240385055542
    10. '<int' → logprob: -10.4490385055542

Token 317: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '۲' → logprob: -18.377185821533203
    4. '  ' → logprob: -19.064685821533203
    5. '   ' → logprob: -19.252185821533203
    6. '<|end|>' → logprob: -19.689685821533203
    7. '```' → logprob: -19.752185821533203
    8. '２' → logprob: -19.939685821533203
    9. '=' → logprob: -20.189685821533203
    10. ' ' → logprob: -20.377185821533203

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '۲' → logprob: -17.00010871887207
    4. '
' → logprob: -18.25010871887207
    5. '```' → logprob: -18.50010871887207
    6. '<|end|>' → logprob: -18.56260871887207
    7. '２' → logprob: -18.68760871887207
    8. 'two' → logprob: -19.50010871887207
    9. '  ' → logprob: -19.50010871887207
    10. '২' → logprob: -19.62510871887207

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02404463104903698
    2. ' or' → logprob: -4.274044513702393
    3. ':
' → logprob: -4.649044513702393
    4. ' :' → logprob: -8.89904499053955
    5. ':return' → logprob: -9.27404499053955
    6. ' and' → logprob: -11.39904499053955
    7. ' :
' → logprob: -12.27404499053955
    8. '       ' → logprob: -12.77404499053955
    9. '):' → logprob: -12.77404499053955
    10. ' ' → logprob: -12.89904499053955

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006009375676512718
    2. 'raise' → logprob: -5.756009578704834
    3. ' raise' → logprob: -6.006009578704834
    4. 'return' → logprob: -8.881009101867676
    5. '            ' → logprob: -9.131009101867676
    6. ' return' → logprob: -9.756009101867676
    7. '          ' → logprob: -11.131009101867676
    8. '        ' → logprob: -11.506009101867676
    9. '               ' → logprob: -11.881009101867676
    10. '       ' → logprob: -12.131009101867676

Token 321: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.03833121061325073
    2. ' raise' → logprob: -3.2883312702178955
    3. 'return' → logprob: -8.288331031799316
    4. '           ' → logprob: -10.288331031799316
    5. '	raise' → logprob: -13.038331031799316
    6. ' return' → logprob: -14.163331031799316
    7. '       ' → logprob: -14.413331031799316
    8. '
' → logprob: -15.538331031799316
    9. 'Raise' → logprob: -15.663331031799316
    10. '_raise' → logprob: -15.788331031799316

Token 322: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.07889022678136826
    2. 'Value' → logprob: -2.578890323638916
    3. '	Value' → logprob: -15.328889846801758
    4. '(Value' → logprob: -16.328889846801758
    5. ' ' → logprob: -16.953889846801758
    6. 'value' → logprob: -17.328889846801758
    7. '_value' → logprob: -17.953889846801758
    8. '   ' → logprob: -18.078889846801758
    9. '_Value' → logprob: -18.203889846801758
    10. '<Value' → logprob: -18.453889846801758

Token 323: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.04859691113233566
    2. 'rror' → logprob: -3.0485968589782715
    3. 'Value' → logprob: -12.42359733581543
    4. 'rr' → logprob: -13.17359733581543
    5. 'r' → logprob: -13.79859733581543
    6. 'SError' → logprob: -14.29859733581543
    7. 'ror' → logprob: -14.42359733581543
    8. 'd' → logprob: -15.04859733581543
    9. 'LError' → logprob: -15.42359733581543
    10. 'n' → logprob: -15.92359733581543

Token 324: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002494683489203453
    2. '(' → logprob: -6.002494812011719
    3. '('' → logprob: -11.002494812011719
    4. '(f' → logprob: -13.252494812011719
    5. '(
' → logprob: -14.377494812011719
    6. '("'' → logprob: -16.50249481201172
    7. '()' → logprob: -17.25249481201172
    8. '("")' → logprob: -18.50249481201172
    9. '(

' → logprob: -19.00249481201172
    10. '(",' → logprob: -19.25249481201172

Token 325: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.022259050980210304
    2. '("' → logprob: -3.897258996963501
    3. ''' → logprob: -7.52225923538208
    4. 'Invalid' → logprob: -8.147258758544922
    5. '")' → logprob: -8.397258758544922
    6. ')' → logprob: -8.647258758544922
    7. '(f' → logprob: -8.897258758544922
    8. 'Expected' → logprob: -9.647258758544922
    9. '('' → logprob: -9.647258758544922
    10. ' f' → logprob: -9.772258758544922

Token 326: 'Expected' (ID: 28041)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5938005447387695
    2. 'Invalid' → logprob: -0.9688005447387695
    3. ''' → logprob: -3.4688005447387695
    4. 'Expected' → logprob: -3.8438005447387695
    5. 'Input' → logprob: -4.3438005447387695
    6. 'Line' → logprob: -6.9688005447387695
    7. 'Unexpected' → logprob: -7.3438005447387695
    8. 'f' → logprob: -7.4688005447387695
    9. 'Incorrect' → logprob: -8.71880054473877
    10. 'Malformed' → logprob: -9.59380054473877

Token 327: ' exactly' (ID: 9707)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.17309482395648956
    2. ' exactly' → logprob: -2.9230947494506836
    3. ' ' → logprob: -3.1730947494506836
    4. '2' → logprob: -3.4230947494506836
    5. 'two' → logprob: -3.6730947494506836
    6. '"' → logprob: -5.423094749450684
    7. ''' → logprob: -8.048094749450684
    8. 'exact' → logprob: -8.048094749450684
    9. ' a' → logprob: -9.673094749450684
    10. ' line' → logprob: -10.048094749450684

Token 328: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3920552730560303
    2. ' two' → logprob: -1.3920552730560303
    3. ' ' → logprob: -2.6420552730560303
    4. 'two' → logprob: -5.392055511474609
    5. '"' → logprob: -14.14205551147461
    6. 'Two' → logprob: -14.14205551147461
    7. '_two' → logprob: -16.39205551147461
    8. ''' → logprob: -16.51705551147461
    9. ' a' → logprob: -16.51705551147461
    10. '1' → logprob: -16.89205551147461

Token 329: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.014678152278065681
    2. ' tokens' → logprob: -4.514678001403809
    3. ' parts' → logprob: -6.514678001403809
    4. ' values' → logprob: -7.139678001403809
    5. ' numbers' → logprob: -7.389678001403809
    6. 'inte' → logprob: -8.139678001403809
    7. ' integer' → logprob: -8.389678001403809
    8. 'tokens' → logprob: -9.014678001403809
    9. ' elements' → logprob: -9.889678001403809
    10. ' items' → logprob: -11.264678001403809

Token 330: ' per' (ID: 777)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008350263349711895
    2. ' in' → logprob: -5.883350372314453
    3. ' for' → logprob: -6.258350372314453
    4. '")' → logprob: -6.383350372314453
    5. ' but' → logprob: -7.008350372314453
    6. ' to' → logprob: -7.258350372314453
    7. '"' → logprob: -9.258350372314453
    8. ' per' → logprob: -9.383350372314453
    9. ' separated' → logprob: -10.258350372314453
    10. ',"' → logprob: -10.633350372314453

Token 331: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.016460824757814407
    2. 'line' → logprob: -4.14146089553833
    3. ' input' → logprob: -7.89146089553833
    4. ' token' → logprob: -10.391460418701172
    5. 'input' → logprob: -11.516460418701172
    6. 'token' → logprob: -11.891460418701172
    7. ' ' → logprob: -13.141460418701172
    8. ' tokens' → logprob: -14.016460418701172
    9. ' string' → logprob: -15.016460418701172
    10. ' a' → logprob: -15.016460418701172

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008668818511068821
    2. '")' → logprob: -4.758668899536133
    3. ' but' → logprob: -11.133668899536133
    4. ' ,' → logprob: -11.258668899536133
    5. '.")' → logprob: -11.258668899536133
    6. '.' → logprob: -12.383668899536133
    7. ')' → logprob: -13.008668899536133
    8. '",' → logprob: -13.508668899536133
    9. '")
' → logprob: -13.758668899536133
    10. ':' → logprob: -13.883668899536133

Token 333: ' got' (ID: 3508)
  Prédit: ' got'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' got' → logprob: -0.07189109176397324
    2. ' but' → logprob: -2.8218910694122314
    3. ' found' → logprob: -4.6968913078308105
    4. 'got' → logprob: -7.4468913078308105
    5. ' received' → logprob: -8.946890830993652
    6. 'but' → logprob: -11.071890830993652
    7. ' f' → logprob: -11.321890830993652
    8. ',' → logprob: -12.571890830993652
    9. ' not' → logprob: -12.946890830993652
    10. 'found' → logprob: -14.196890830993652

Token 334: ':' (ID: 25)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.13864125311374664
    2. '{' → logprob: -2.513641357421875
    3. ' '{' → logprob: -3.763641357421875
    4. ':' → logprob: -4.138641357421875
    5. ' '' → logprob: -5.763641357421875
    6. ''{' → logprob: -6.138641357421875
    7. ' len' → logprob: -6.763641357421875
    8. ' parts' → logprob: -7.013641357421875
    9. ' ' → logprob: -7.263641357421875
    10. ''' → logprob: -7.263641357421875

Token 335: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0362282320857048
    2. ' {' → logprob: -3.9112281799316406
    3. ''{' → logprob: -4.411228179931641
    4. ' '{' → logprob: -6.411228179931641
    5. 'line' → logprob: -6.786228179931641
    6. ' line' → logprob: -7.536228179931641
    7. ''' → logprob: -9.53622817993164
    8. '[line' → logprob: -11.66122817993164
    9. '"{' → logprob: -12.16122817993164
    10. '(line' → logprob: -12.16122817993164

Token 336: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.002526553114876151
    2. '{' → logprob: -6.502526760101318
    3. 'parts' → logprob: -7.002526760101318
    4. ' line' → logprob: -9.37752628326416
    5. 'len' → logprob: -10.75252628326416
    6. ' {' → logprob: -13.62752628326416
    7. ' parts' → logprob: -13.87752628326416
    8. '	line' → logprob: -13.87752628326416
    9. 'lines' → logprob: -14.00252628326416
    10. '#line' → logprob: -14.25252628326416

Token 337: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.14226245880126953
    2. ')")' → logprob: -2.8922624588012695
    3. '")' → logprob: -3.0172624588012695
    4. '}")
' → logprob: -3.7672624588012695
    5. ')")
' → logprob: -5.8922624588012695
    6. ' }' → logprob: -6.7672624588012695
    7. '")
' → logprob: -7.2672624588012695
    8. ')' → logprob: -8.76726245880127
    9. '')' → logprob: -9.14226245880127
    10. '}' → logprob: -9.89226245880127

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004925616085529327
    2. 'return' → logprob: -5.629925727844238
    3. ' return' → logprob: -7.254925727844238
    4. '        
' → logprob: -8.754925727844238
    5. 'a' → logprob: -9.004925727844238
    6. ',' → logprob: -9.129925727844238
    7. ' a' → logprob: -9.504925727844238
    8. '
' → logprob: -10.254925727844238
    9. '   ' → logprob: -10.754925727844238
    10. '  
' → logprob: -11.129925727844238

Token 339: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0580490417778492
    2. 'return' → logprob: -3.183048963546753
    3. ' a' → logprob: -4.558049201965332
    4. ' return' → logprob: -5.683049201965332
    5. '       ' → logprob: -7.183049201965332
    6. 'try' → logprob: -8.683049201965332
    7. 'x' → logprob: -9.308049201965332
    8. ' try' → logprob: -11.683049201965332
    9. 'int' → logprob: -12.308049201965332
    10. ' x' → logprob: -12.433049201965332

Token 340: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5332675576210022
    2. ' =' → logprob: -1.5332674980163574
    3. '=int' → logprob: -1.7832674980163574
    4. ',' → logprob: -3.5332674980163574
    5. ',int' → logprob: -9.033267974853516
    6. 'int' → logprob: -9.783267974853516
    7. '=
' → logprob: -12.783267974853516
    8. '=

' → logprob: -12.908267974853516
    9. '=Integer' → logprob: -13.658267974853516
    10. ' int' → logprob: -13.658267974853516

Token 341: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22559130191802979
    2. 'b' → logprob: -1.6005913019180298
    3. 'int' → logprob: -9.725591659545898
    4. ' ' → logprob: -9.975591659545898
    5. ' parts' → logprob: -10.600591659545898
    6. ' 
' → logprob: -10.725591659545898
    7. ' int' → logprob: -11.975591659545898
    8. ' =' → logprob: -12.100591659545898
    9. 'parts' → logprob: -12.100591659545898
    10. ' ' → logprob: -12.975591659545898

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759438872337341
    2. ' =' → logprob: -0.8259438872337341
    3. '=int' → logprob: -12.825943946838379
    4. ',' → logprob: -13.325943946838379
    5. ' ' → logprob: -15.950943946838379
    6. '＝' → logprob: -17.825942993164062
    7. 'int' → logprob: -18.325942993164062
    8. '=

' → logprob: -18.325942993164062
    9. '=
' → logprob: -18.825942993164062
    10. '=Integer' → logprob: -19.200942993164062

Token 343: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6748285293579102
    2. ' map' → logprob: -0.9248285293579102
    3. 'int' → logprob: -2.42482852935791
    4. ' int' → logprob: -5.17482852935791
    5. '[int' → logprob: -12.42482852935791
    6. '(map' → logprob: -13.29982852935791
    7. '(int' → logprob: -14.92482852935791
    8. ' ' → logprob: -15.54982852935791
    9. '   ' → logprob: -16.674827575683594
    10. '[' → logprob: -17.174827575683594

Token 344: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004079470410943031
    2. 'int' → logprob: -5.504079341888428
    3. ' int' → logprob: -14.379079818725586
    4. '(' → logprob: -15.254079818725586
    5. '[int' → logprob: -15.629079818725586
    6. '<int' → logprob: -16.379079818725586
    7. '=int' → logprob: -17.129079818725586
    8. ',int' → logprob: -17.879079818725586
    9. ':int' → logprob: -18.379079818725586
    10. '(
' → logprob: -18.504079818725586

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31473231315612793
    2. '(parts' → logprob: -1.314732313156128
    3. 'parts' → logprob: -6.564732551574707
    4. ' ,' → logprob: -10.564732551574707
    5. ' parts' → logprob: -10.564732551574707
    6. '(' → logprob: -12.064732551574707
    7. ')' → logprob: -13.814732551574707
    8. ',
' → logprob: -15.189732551574707
    9. '   ' → logprob: -15.189732551574707
    10. ' ' → logprob: -15.439732551574707

Token 346: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.012520482763648033
    2. ' parts' → logprob: -4.3875203132629395
    3. '(parts' → logprob: -11.512520790100098
    4. ')' → logprob: -15.262520790100098
    5. '   ' → logprob: -15.637520790100098
    6. '
' → logprob: -16.38751983642578
    7. '.parts' → logprob: -16.63751983642578
    8. ' ' → logprob: -16.63751983642578
    9. '_parts' → logprob: -17.13751983642578
    10. '           ' → logprob: -17.13751983642578

Token 347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -12.000008583068848
    3. ' )' → logprob: -13.875008583068848
    4. ')return' → logprob: -14.625008583068848
    5. '[' → logprob: -15.625008583068848
    6. '),' → logprob: -16.62500762939453
    7. ')}' → logprob: -17.12500762939453
    8. ')#' → logprob: -17.12500762939453
    9. '<|end|>' → logprob: -17.37500762939453
    10. '   ' → logprob: -17.37500762939453

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006395269301719964
    2. 'return' → logprob: -7.62563943862915
    3. ' return' → logprob: -9.250639915466309
    4. '
' → logprob: -10.375639915466309
    5. '<|end|>' → logprob: -11.125639915466309
    6. '        
' → logprob: -13.000639915466309
    7. '   ' → logprob: -13.250639915466309
    8. ')return' → logprob: -13.625639915466309
    9. ')' → logprob: -14.250639915466309
    10. '  
' → logprob: -14.500639915466309

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011478892527520657
    2. '       ' → logprob: -4.511478900909424
    3. ' return' → logprob: -7.761478900909424
    4. '   ' → logprob: -12.636478424072266
    5. '
' → logprob: -13.761478424072266
    6. '	return' → logprob: -14.386478424072266
    7. '{return' → logprob: -17.261478424072266
    8. ':return' → logprob: -17.511478424072266
    9. '        
' → logprob: -17.636478424072266
    10. '```' → logprob: -17.761478424072266

Token 350: ' Integer' (ID: 6611)
  Prédit: 'Integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -0.2014133334159851
    2. ' Integer' → logprob: -1.7014133930206299
    3. '	Integer' → logprob: -17.701414108276367
    4. '_Integer' → logprob: -19.326414108276367
    5. '=Integer' → logprob: -21.076414108276367
    6. '<Integer' → logprob: -21.326414108276367
    7. '(Integer' → logprob: -21.326414108276367
    8. '.Integer' → logprob: -21.826414108276367
    9. ',Integer' → logprob: -21.951414108276367
    10. '_integer' → logprob: -22.451414108276367

Token 351: 'Pair' (ID: 15573)
  Prédit: 'Pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -3.128163257315464e-07
    2. 'P' → logprob: -16.625
    3. 'Pa' → logprob: -16.75
    4. 'Pairs' → logprob: -17.75
    5. 'Pai' → logprob: -18.125
    6. ' Pair' → logprob: -18.375
    7. 'Integer' → logprob: -19.25
    8. 'Peer' → logprob: -19.5
    9. 'pair' → logprob: -19.75
    10. '_pair' → logprob: -19.875

Token 352: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -12.000007629394531
    3. 'a' → logprob: -13.375007629394531
    4. '(
' → logprob: -16.37500762939453
    5. ' (' → logprob: -21.50000762939453
    6. '(A' → logprob: -21.62500762939453
    7. '(
' → logprob: -22.87500762939453
    8. '(

' → logprob: -23.62500762939453
    9. ' a' → logprob: -23.87500762939453
    10. '((' → logprob: -23.87500762939453

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006759305950254202
    2. ',b' → logprob: -5.006759166717529
    3. ' ,' → logprob: -10.131759643554688
    4. 'b' → logprob: -12.506759643554688
    5. ',
' → logprob: -15.256759643554688
    6. ',B' → logprob: -16.631759643554688
    7. ',a' → logprob: -16.756759643554688
    8. ',p' → logprob: -16.881759643554688
    9. ' b' → logprob: -17.631759643554688
    10. '‌,' → logprob: -18.006759643554688

Token 354: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ')b' → logprob: -20.889163970947266
    4. '	b' → logprob: -22.139163970947266
    5. ' ' → logprob: -22.514163970947266
    6. ' ' → logprob: -22.639163970947266
    7. '   ' → logprob: -22.889163970947266
    8. '    ' → logprob: -23.264163970947266
    9. '       ' → logprob: -23.764163970947266
    10. ' б' → logprob: -24.389163970947266

Token 355: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.25
    3. ' )' → logprob: -18.75
    4. '   ' → logprob: -19.25
    5. ')return' → logprob: -20.0
    6. '))' → logprob: -20.25
    7. ')`' → logprob: -20.375
    8. '       ' → logprob: -20.625
    9. ')a' → logprob: -21.0
    10. '),' → logprob: -21.0

Token 356: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.0948158382670954e-05
    2. 'def' → logprob: -11.000030517578125
    3. '```' → logprob: -11.625030517578125
    4. '<|end|>' → logprob: -13.000030517578125
    5. '
' → logprob: -13.750030517578125
    6. ' class' → logprob: -14.000030517578125
    7. '#' → logprob: -15.000030517578125
    8. '@dat' → logprob: -15.000030517578125
    9. 'import' → logprob: -15.875030517578125
    10. 'from' → logprob: -16.375030517578125

Token 357: ' Output' (ID: 18315)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.2442517280578613
    2. 'Solution' → logprob: -1.9942517280578613
    3. ' Math' → logprob: -2.6192517280578613
    4. ' Output' → logprob: -2.7442517280578613
    5. 'Math' → logprob: -2.8692517280578613
    6. 'Output' → logprob: -3.1192517280578613
    7. ' L' → logprob: -3.2442517280578613
    8. ' Result' → logprob: -3.2442517280578613
    9. 'LC' → logprob: -3.2442517280578613
    10. ' Data' → logprob: -3.4942517280578613

Token 358: 'Handler' (ID: 4139)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.7810906171798706
    2. 'Provider' → logprob: -0.9060906171798706
    3. 'Handler' → logprob: -2.03109073638916
    4. 'Builder' → logprob: -6.28109073638916
    5. 'Processor' → logprob: -6.53109073638916
    6. 'ter' → logprob: -7.15609073638916
    7. 'Formatter' → logprob: -7.40609073638916
    8. 'Printer' → logprob: -7.65609073638916
    9. 'Manager' → logprob: -7.78109073638916
    10. 'Generator' → logprob: -7.90609073638916

Token 359: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0205531008541584
    2. ':
' → logprob: -3.8955531120300293
    3. ':def' → logprob: -12.270552635192871
    4. ':

' → logprob: -12.895552635192871
    5. ' :' → logprob: -14.020552635192871
    6. '<|end|>' → logprob: -14.645552635192871
    7. ':void' → logprob: -14.895552635192871
    8. '):' → logprob: -15.020552635192871
    9. ':**' → logprob: -15.270552635192871
    10. '():' → logprob: -15.520552635192871

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014202340971678495
    2. 'def' → logprob: -7.376420021057129
    3. ' def' → logprob: -7.626420021057129
    4. ':' → logprob: -9.251420021057129
    5. 'staticmethod' → logprob: -9.376420021057129
    6. 'class' → logprob: -10.501420021057129
    7. '```' → logprob: -10.501420021057129
    8. '@' → logprob: -11.001420021057129
    9. 'classmethod' → logprob: -11.001420021057129
    10. '    
' → logprob: -11.501420021057129

Token 361: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.38814371824264526
    2. ' @' → logprob: -1.13814377784729
    3. '   ' → logprob: -6.763143539428711
    4. 'staticmethod' → logprob: -10.013143539428711
    5. ' def' → logprob: -10.263143539428711
    6. 'def' → logprob: -10.263143539428711
    7. 'class' → logprob: -13.638143539428711
    8. ' ' → logprob: -15.888143539428711
    9. '
' → logprob: -16.26314353942871
    10. 'classmethod' → logprob: -16.26314353942871

Token 362: ' Abstract' (ID: 17413)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.46332812309265137
    2. '@' → logprob: -1.0883281230926514
    3. ' @' → logprob: -3.4633281230926514
    4. 'def' → logprob: -6.7133283615112305
    5. ' class' → logprob: -7.5883283615112305
    6. 'staticmethod' → logprob: -7.7133283615112305
    7. '   ' → logprob: -7.8383283615112305
    8. ' def' → logprob: -9.21332836151123
    9. 'import' → logprob: -10.83832836151123
    10. '
' → logprob: -11.96332836151123

Token 363: ' output' (ID: 4733)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.47891002893447876
    2. 'class' → logprob: -1.103909969329834
    3. ' output' → logprob: -3.103909969329834
    4. 'output' → logprob: -5.728909969329834
    5. 'Output' → logprob: -7.978909969329834
    6. ' handler' → logprob: -8.978910446166992
    7. ' method' → logprob: -9.353910446166992
    8. ' interface' → logprob: -9.603910446166992
    9. 'def' → logprob: -10.103910446166992
    10. '
' → logprob: -10.353910446166992

Token 364: ' manager' (ID: 10470)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25634872913360596
    2. ' class' → logprob: -2.2563486099243164
    3. 'source' → logprob: -3.1313486099243164
    4. ' source' → logprob: -3.5063486099243164
    5. 'Handler' → logprob: -4.131348609924316
    6. ':' → logprob: -4.756348609924316
    7. '
' → logprob: -5.006348609924316
    8. 'handler' → logprob: -5.506348609924316
    9. ' handler' → logprob: -5.631348609924316
    10. ':
' → logprob: -5.631348609924316

Token 365: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.803308367729187
    2. '   ' → logprob: -1.303308367729187
    3. ':
' → logprob: -1.303308367729187
    4. ' :
' → logprob: -5.928308486938477
    5. '<|end|>' → logprob: -6.178308486938477
    6. '
' → logprob: -6.428308486938477
    7. 'class' → logprob: -7.178308486938477
    8. ' :' → logprob: -7.428308486938477
    9. ',' → logprob: -8.553308486938477
    10. ' def' → logprob: -8.803308486938477

Token 366: ' potential' (ID: 6451)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'different' → logprob: -1.2270619869232178
    2. 'handling' → logprob: -1.7270619869232178
    3. 'writing' → logprob: -1.9770619869232178
    4. ' handling' → logprob: -2.3520619869232178
    5. 'var' → logprob: -2.6020619869232178
    6. 'printing' → logprob: -2.8520619869232178
    7. 'print' → logprob: -3.1020619869232178
    8. 'flex' → logprob: -3.2270619869232178
    9. ' printing' → logprob: -3.8520619869232178
    10. ' different' → logprob: -3.9770619869232178

Token 367: ' future' (ID: 5277)
  Prédit: 'future'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'future' → logprob: -0.5804682970046997
    2. ' future' → logprob: -1.8304682970046997
    3. 'ext' → logprob: -2.45546817779541
    4. 'extensions' → logprob: -3.45546817779541
    5. 'different' → logprob: -3.83046817779541
    6. ' extens' → logprob: -3.95546817779541
    7. ' extensions' → logprob: -3.95546817779541
    8. ' extension' → logprob: -4.20546817779541
    9. 'extension' → logprob: -4.20546817779541
    10. 'flex' → logprob: -4.45546817779541

Token 368: ' extensions' (ID: 34511)
  Prédit: 'extensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extensions' → logprob: -0.339177668094635
    2. ' extensions' → logprob: -1.9641776084899902
    3. 'output' → logprob: -2.7141776084899902
    4. 'exp' → logprob: -3.7141776084899902
    5. 'extension' → logprob: -4.33917760848999
    6. 'use' → logprob: -5.08917760848999
    7. ' enhancements' → logprob: -5.21417760848999
    8. ' expansions' → logprob: -5.21417760848999
    9. ' expansion' → logprob: -5.33917760848999
    10. ' output' → logprob: -5.33917760848999

Token 369: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16994225978851318
    2. ':
' → logprob: -2.7949423789978027
    3. '
' → logprob: -3.2949423789978027
    4. 'class' → logprob: -3.9199423789978027
    5. ' def' → logprob: -4.044942378997803
    6. ':' → logprob: -4.169942378997803
    7. 'def' → logprob: -5.919942378997803
    8. '<|end|>' → logprob: -6.794942378997803
    9. ' class' → logprob: -7.669942378997803
    10. '    
' → logprob: -8.919941902160645

Token 370: 'logging' (ID: 62519)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3796468675136566
    2. 'output' → logprob: -2.6296467781066895
    3. 'e' → logprob: -2.7546467781066895
    4. 'sys' → logprob: -3.3796467781066895
    5. 'class' → logprob: -3.7546467781066895
    6. ' e' → logprob: -4.0046467781066895
    7. 'print' → logprob: -4.0046467781066895
    8. '):
' → logprob: -4.1296467781066895
    9. ' output' → logprob: -4.3796467781066895
    10. ')
' → logprob: -4.7546467781066895

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06694794446229935
    2. ')' → logprob: -3.8169479370117188
    3. ' or' → logprob: -3.9419479370117188
    4. ' and' → logprob: -4.816947937011719
    5. '):
' → logprob: -4.941947937011719
    6. ')
' → logprob: -5.816947937011719
    7. '):' → logprob: -5.816947937011719
    8. ' ,' → logprob: -7.191947937011719
    9. 'output' → logprob: -8.316947937011719
    10. ' output' → logprob: -8.441947937011719

Token 372: ' file' (ID: 1974)
  Prédit: ' file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.6195511817932129
    2. 'file' → logprob: -1.619551181793213
    3. 'debug' → logprob: -2.119551181793213
    4. ' printing' → logprob: -3.119551181793213
    5. ' debugging' → logprob: -3.744551181793213
    6. 'console' → logprob: -3.994551181793213
    7. 'printing' → logprob: -4.244551181793213
    8. 'print' → logprob: -5.244551181793213
    9. ' console' → logprob: -5.369551181793213
    10. ' buffering' → logprob: -5.494551181793213

Token 373: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.48088520765304565
    2. ')' → logprob: -1.2308852672576904
    3. ',' → logprob: -2.8558852672576904
    4. ')
' → logprob: -3.7308852672576904
    5. ' output' → logprob: -4.980885028839111
    6. '):
' → logprob: -7.605885028839111
    7. 'writing' → logprob: -8.73088550567627
    8. 'handling' → logprob: -8.73088550567627
    9. 'out' → logprob: -8.98088550567627
    10. 'outputs' → logprob: -8.98088550567627

Token 374: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4389936327934265
    2. ')
' → logprob: -1.1889936923980713
    3. '):
' → logprob: -3.3139936923980713
    4. ',' → logprob: -4.938993453979492
    5. '):' → logprob: -4.938993453979492
    6. '   ' → logprob: -10.438993453979492
    7. ')

' → logprob: -11.188993453979492
    8. '):

' → logprob: -11.188993453979492
    9. ' )
' → logprob: -11.438993453979492
    10. ')
' → logprob: -12.063993453979492

Token 375: ' etc' (ID: 5178)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.39210566878318787
    2. 'stream' → logprob: -2.1421055793762207
    3. 'stdout' → logprob: -2.5171055793762207
    4. ')' → logprob: -3.1421055793762207
    5. 'network' → logprob: -3.8921055793762207
    6. ' console' → logprob: -3.8921055793762207
    7. ' etc' → logprob: -4.767105579376221
    8. ' stream' → logprob: -5.267105579376221
    9. 'print' → logprob: -5.642105579376221
    10. 'stderr' → logprob: -5.767105579376221

Token 376: '.)
' (ID: 32616)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2524402439594269
    2. ')' → logprob: -1.5024402141571045
    3. '):
' → logprob: -8.127440452575684
    4. '   ' → logprob: -9.002440452575684
    5. ' )
' → logprob: -9.877440452575684
    6. '):' → logprob: -11.127440452575684
    7. ')
' → logprob: -11.377440452575684
    8. ')

' → logprob: -11.877440452575684
    9. ' )' → logprob: -13.002440452575684
    10. 'class' → logprob: -13.127440452575684

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020140063017606735
    2. ' def' → logprob: -4.020140171051025
    3. 'def' → logprob: -6.270140171051025
    4. 'class' → logprob: -9.895139694213867
    5. '
' → logprob: -10.895139694213867
    6. '    
' → logprob: -11.520139694213867
    7. ' class' → logprob: -12.270139694213867
    8. ' ' → logprob: -12.395139694213867
    9. '	def' → logprob: -12.770139694213867
    10. '  ' → logprob: -13.145139694213867

Token 378: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3868764638900757
    2. ' def' → logprob: -1.1368764638900757
    3. '   ' → logprob: -12.136876106262207
    4. '	def' → logprob: -16.761877059936523
    5. '
' → logprob: -16.886877059936523
    6. 'class' → logprob: -17.386877059936523
    7. '@' → logprob: -18.636877059936523
    8. ' ' → logprob: -19.636877059936523
    9. 'de' → logprob: -20.011877059936523
    10. ':def' → logprob: -20.511877059936523

Token 379: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00477187242358923
    2. '__' → logprob: -5.504771709442139
    3. ' def' → logprob: -7.379771709442139
    4. 'def' → logprob: -10.004772186279297
    5. ' write' → logprob: -11.254772186279297
    6. 'write' → logprob: -12.504772186279297
    7. 'init' → logprob: -12.629772186279297
    8. ' init' → logprob: -13.629772186279297
    9. '_init' → logprob: -13.754772186279297
    10. '_write' → logprob: -14.504772186279297

Token 380: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.125
    3. 'def' → logprob: -19.625
    4. '```' → logprob: -20.5
    5. '_init' → logprob: -21.5
    6. '	init' → logprob: -21.75
    7. '(init' → logprob: -21.75
    8. 'ini' → logprob: -21.75
    9. 'call' → logprob: -22.625
    10. '`' → logprob: -23.125

Token 381: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004670153430197388
    2. '__' → logprob: -8.125467300415039
    3. '(self' → logprob: -9.250467300415039
    4. '__(
' → logprob: -9.750467300415039
    5. '_(' → logprob: -11.375467300415039
    6. '(' → logprob: -13.125467300415039
    7. '__((' → logprob: -13.375467300415039
    8. ' (' → logprob: -14.750467300415039
    9. '__("' → logprob: -14.750467300415039
    10. '_' → logprob: -15.375467300415039

Token 382: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000428761966759339
    2. ')' → logprob: -7.875428676605225
    3. ' self' → logprob: -10.125429153442383
    4. '):
' → logprob: -13.000429153442383
    5. 'sys' → logprob: -13.250429153442383
    6. '):' → logprob: -13.375429153442383
    7. '(self' → logprob: -14.000429153442383
    8. '
' → logprob: -14.000429153442383
    9. '	self' → logprob: -14.625429153442383
    10. 'source' → logprob: -15.250429153442383

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035285637713968754
    2. 'self' → logprob: -6.003528594970703
    3. '):' → logprob: -7.128528594970703
    4. ')' → logprob: -9.253528594970703
    5. '):
' → logprob: -9.378528594970703
    6. ',self' → logprob: -10.503528594970703
    7. ' ,' → logprob: -10.753528594970703
    8. '(self' → logprob: -11.503528594970703
    9. ' self' → logprob: -11.753528594970703
    10. '):
' → logprob: -14.253528594970703

Token 384: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.6798918843269348
    2. 'source' → logprob: -1.42989182472229
    3. 'destination' → logprob: -1.80489182472229
    4. 'stream' → logprob: -2.67989182472229
    5. 'dest' → logprob: -4.929892063140869
    6. 'sys' → logprob: -5.554892063140869
    7. ' output' → logprob: -6.054892063140869
    8. 'target' → logprob: -6.054892063140869
    9. 'out' → logprob: -6.554892063140869
    10. ' destination' → logprob: -6.554892063140869

Token 385: '=sys' (ID: 149200)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3820767402648926
    2. '=sys' → logprob: -1.3820767402648926
    3. '):
' → logprob: -3.0070767402648926
    4. '=None' → logprob: -4.257076740264893
    5. ')' → logprob: -6.382076740264893
    6. '=' → logprob: -7.757076740264893
    7. ':' → logprob: -7.882076740264893
    8. '_stream' → logprob: -8.757076263427734
    9. '_source' → logprob: -9.632076263427734
    10. 'sys' → logprob: -10.757076263427734

Token 386: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -2.236549335066229e-05
    2. 'stdout' → logprob: -10.875021934509277
    3. '.stderr' → logprob: -12.875021934509277
    4. '.' → logprob: -14.625021934509277
    5. '.stdin' → logprob: -16.000022888183594
    6. '.std' → logprob: -16.250022888183594
    7. ' stdout' → logprob: -17.375022888183594
    8. '_stdout' → logprob: -17.500022888183594
    9. '.__' → logprob: -17.625022888183594
    10. '(stdout' → logprob: -18.000022888183594

Token 387: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48299992084503174
    2. '):
' → logprob: -0.9829999208450317
    3. ')' → logprob: -4.732999801635742
    4. '):
' → logprob: -10.107999801635742
    5. ',' → logprob: -11.232999801635742
    6. '   ' → logprob: -11.482999801635742
    7. ' ):' → logprob: -12.107999801635742
    8. '):

' → logprob: -12.107999801635742
    9. ' ):
' → logprob: -12.482999801635742
    10. ')
' → logprob: -14.357999801635742

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4009592533111572
    2. 'self' → logprob: -1.1509592533111572
    3. ' self' → logprob: -4.275959014892578
    4. '   ' → logprob: -10.025959014892578
    5. '	self' → logprob: -10.525959014892578
    6. 'import' → logprob: -11.525959014892578
    7. '(self' → logprob: -13.025959014892578
    8. '
' → logprob: -13.275959014892578
    9. '﻿' → logprob: -13.900959014892578
    10. '[self' → logprob: -14.025959014892578

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00012987985974177718
    2. 'output' → logprob: -9.000129699707031
    3. ' self' → logprob: -12.000129699707031
    4. '       ' → logprob: -15.500129699707031
    5. '   ' → logprob: -19.12512969970703
    6. '_output' → logprob: -19.25012969970703
    7. '	self' → logprob: -19.62512969970703
    8. 'import' → logprob: -20.25012969970703
    9. ' output' → logprob: -20.25012969970703
    10. '=self' → logprob: -21.50012969970703

Token 390: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.002463763812556863
    2. '.write' → logprob: -7.1274638175964355
    3. '._' → logprob: -7.3774638175964355
    4. '.stdout' → logprob: -7.5024638175964355
    5. '.' → logprob: -8.002463340759277
    6. '.source' → logprob: -9.627463340759277
    7. 'output' → logprob: -9.877463340759277
    8. '.out' → logprob: -10.877463340759277
    9. '_output' → logprob: -13.377463340759277
    10. '.target' → logprob: -13.752463340759277

Token 391: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2805345356464386
    2. '.write' → logprob: -1.5305345058441162
    3. '=' → logprob: -3.655534505844116
    4. ' =' → logprob: -6.280534744262695
    5. '.=' → logprob: -8.530534744262695
    6. '.append' → logprob: -10.155534744262695
    7. ')' → logprob: -10.155534744262695
    8. '.print' → logprob: -10.405534744262695
    9. '<|end|>' → logprob: -10.405534744262695
    10. ' .' → logprob: -10.405534744262695

Token 392: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0019286326132714748
    2. ' output' → logprob: -6.251928806304932
    3. '	output' → logprob: -20.626928329467773
    4. '(output' → logprob: -21.876928329467773
    5. '$output' → logprob: -22.876928329467773
    6. 'out' → logprob: -23.126928329467773
    7. '.output' → logprob: -23.751928329467773
    8. ' ' → logprob: -24.126928329467773
    9. '_output' → logprob: -24.751928329467773
    10. 'Output' → logprob: -25.626928329467773

Token 393: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.3878808617591858
    2. '
' → logprob: -1.262880802154541
    3. '   ' → logprob: -3.262880802154541
    4. '  
' → logprob: -9.2628812789917
    5. '   
' → logprob: -9.3878812789917
    6. ' 
' → logprob: -9.5128812789917
    7. '        
' → logprob: -9.6378812789917
    8. 'def' → logprob: -10.6378812789917
    9. '<|end|>' → logprob: -10.8878812789917
    10. '     
' → logprob: -11.0128812789917

Token 394: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016294879838824272
    2. '   ' → logprob: -4.516294956207275
    3. ' def' → logprob: -5.266294956207275
    4. '
' → logprob: -9.641294479370117
    5. '	def' → logprob: -12.266294479370117
    6. ' ' → logprob: -14.266294479370117
    7. 'de' → logprob: -16.516294479370117
    8. '  ' → logprob: -16.766294479370117
    9. '_def' → logprob: -16.766294479370117
    10. '    
' → logprob: -16.891294479370117

Token 395: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.688212614681106e-05
    2. ' def' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. '	def' → logprob: -18.625017166137695
    5. '
' → logprob: -19.625017166137695
    6. '_def' → logprob: -20.375017166137695
    7. 'write' → logprob: -21.000017166137695
    8. ' ' → logprob: -21.250017166137695
    9. '  ' → logprob: -22.375017166137695
    10. '    
' → logprob: -22.375017166137695

Token 396: ' print' (ID: 2123)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.0001414426224073395
    2. 'print' → logprob: -10.000141143798828
    3. '.write' → logprob: -10.000141143798828
    4. ' write' → logprob: -10.000141143798828
    5. 'w' → logprob: -12.625141143798828
    6. 'println' → logprob: -13.500141143798828
    7. ' writ' → logprob: -15.500141143798828
    8. '_write' → logprob: -15.625141143798828
    9. 'def' → logprob: -16.375141143798828
    10. '	write' → logprob: -18.250141143798828

Token 397: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021282510831952095
    2. '()' → logprob: -4.14628267288208
    3. '("")' → logprob: -6.64628267288208
    4. '(line' → logprob: -7.02128267288208
    5. '<|end|>' → logprob: -7.64628267288208
    6. '(self' → logprob: -7.77128267288208
    7. '(f' → logprob: -7.89628267288208
    8. '_line' → logprob: -7.89628267288208
    9. '(*' → logprob: -8.396282196044922
    10. '('' → logprob: -9.146282196044922

Token 398: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01426669955253601
    2. '(' → logprob: -4.264266490936279
    3. '(s' → logprob: -9.639266967773438
    4. ' (' → logprob: -10.889266967773438
    5. '(f' → logprob: -11.514266967773438
    6. '(value' → logprob: -12.639266967773438
    7. '(
' → logprob: -13.389266967773438
    8. '(result' → logprob: -13.514266967773438
    9. '(line' → logprob: -13.889266967773438
    10. '(data' → logprob: -14.639266967773438

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.004696090007201e-05
    2. ' ,' → logprob: -9.625069618225098
    3. ')' → logprob: -12.750069618225098
    4. '   ' → logprob: -14.500069618225098
    5. '       ' → logprob: -15.625069618225098
    6. 's' → logprob: -15.875069618225098
    7. '):' → logprob: -16.250070571899414
    8. ',line' → logprob: -16.875070571899414
    9. ',value' → logprob: -17.000070571899414
    10. '    ' → logprob: -17.125070571899414

Token 400: ' gcd' (ID: 106918)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06833058595657349
    2. 'value' → logprob: -3.5683305263519287
    3. ' result' → logprob: -3.8183305263519287
    4. 'text' → logprob: -4.943330764770508
    5. 'message' → logprob: -5.318330764770508
    6. 's' → logprob: -6.443330764770508
    7. ' value' → logprob: -6.693330764770508
    8. ' s' → logprob: -8.068330764770508
    9. 'data' → logprob: -8.443330764770508
    10. ' text' → logprob: -8.693330764770508

Token 401: '_value' (ID: 6734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4117373824119568
    2. ')' → logprob: -2.0367374420166016
    3. '(' → logprob: -2.5367374420166016
    4. '_value' → logprob: -2.9117374420166016
    5. '=' → logprob: -3.9117374420166016
    6. '_result' → logprob: -4.286737442016602
    7. ' ,' → logprob: -4.411737442016602
    8. 's' → logprob: -5.661737442016602
    9. '(self' → logprob: -5.661737442016602
    10. ':' → logprob: -5.786737442016602

Token 402: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09090346843004227
    2. ',' → logprob: -2.4659035205841064
    3. ':int' → logprob: -6.340903282165527
    4. ' :' → logprob: -9.215903282165527
    5. ' ,' → logprob: -9.840903282165527
    6. ',g' → logprob: -11.215903282165527
    7. ':g' → logprob: -11.715903282165527
    8. ')' → logprob: -12.215903282165527
    9. '   ' → logprob: -12.215903282165527
    10. ':,' → logprob: -12.715903282165527

Token 403: ' int' (ID: 677)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.718071460723877
    2. ')' → logprob: -1.093071460723877
    3. ' gcd' → logprob: -2.218071460723877
    4. ' )' → logprob: -4.218071460723877
    5. 'str' → logprob: -4.468071460723877
    6. 'int' → logprob: -4.718071460723877
    7. ' ' → logprob: -5.093071460723877
    8. '   ' → logprob: -5.218071460723877
    9. 'end' → logprob: -5.343071460723877
    10. ',' → logprob: -5.468071460723877

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003048378275707364
    2. ')' → logprob: -8.37530517578125
    3. ' ,' → logprob: -9.62530517578125
    4. '):' → logprob: -12.00030517578125
    5. '   ' → logprob: -14.50030517578125
    6. ',
' → logprob: -14.87530517578125
    7. ' ' → logprob: -15.12530517578125
    8. ',g' → logprob: -15.50030517578125
    9. ',int' → logprob: -15.62530517578125
    10. '):
' → logprob: -16.37530517578125

Token 405: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20182707905769348
    2. ' l' → logprob: -1.701827049255371
    3. 'lc' → logprob: -7.951827049255371
    4. ' lc' → logprob: -10.951827049255371
    5. ' ' → logprob: -11.576827049255371
    6. '   ' → logprob: -11.576827049255371
    7. '    ' → logprob: -12.451827049255371
    8. 'lcd' → logprob: -12.701827049255371
    9. '	l' → logprob: -12.826827049255371
    10. ')' → logprob: -13.326827049255371

Token 406: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.771655115589965e-05
    2. ' cm' → logprob: -11.375018119812012
    3. 'c' → logprob: -12.375018119812012
    4. 'm' → logprob: -14.000018119812012
    5. 'cms' → logprob: -15.125018119812012
    6. 'CM' → logprob: -16.250017166137695
    7. '_cm' → logprob: -16.250017166137695
    8. '   ' → logprob: -16.375017166137695
    9. '```' → logprob: -16.375017166137695
    10. 'cd' → logprob: -16.500017166137695

Token 407: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.7146746763028204e-05
    2. 'value' → logprob: -10.37503719329834
    3. ')' → logprob: -13.37503719329834
    4. '_' → logprob: -13.87503719329834
    5. 'alue' → logprob: -14.25003719329834
    6. 'Value' → logprob: -14.50003719329834
    7. ',' → logprob: -14.50003719329834
    8. ':' → logprob: -14.62503719329834
    9. '_VALUE' → logprob: -15.25003719329834
    10. '):' → logprob: -15.62503719329834

Token 408: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.641300618648529
    2. ')' → logprob: -0.891300618648529
    3. ':' → logprob: -2.891300678253174
    4. '):
' → logprob: -5.016300678253174
    5. ',' → logprob: -7.016300678253174
    6. '   ' → logprob: -8.891300201416016
    7. ' ):' → logprob: -9.766300201416016
    8. '):
' → logprob: -10.641300201416016
    9. ' )' → logprob: -11.641300201416016
    10. ' ' → logprob: -12.516300201416016

Token 409: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009759039618074894
    2. ' int' → logprob: -4.634758949279785
    3. ':int' → logprob: -13.759758949279785
    4. '   ' → logprob: -14.634758949279785
    5. ' ' → logprob: -14.759758949279785
    6. ')' → logprob: -14.884758949279785
    7. '	int' → logprob: -15.884758949279785
    8. '[int' → logprob: -16.0097599029541
    9. 'str' → logprob: -16.1347599029541
    10. '=int' → logprob: -16.6347599029541

Token 410: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2595941722393036
    2. ')' → logprob: -1.759594202041626
    3. '):' → logprob: -2.884594202041626
    4. '):
' → logprob: -8.134593963623047
    5. '   ' → logprob: -8.884593963623047
    6. ',' → logprob: -9.009593963623047
    7. ' ):
' → logprob: -9.884593963623047
    8. ' )' → logprob: -11.009593963623047
    9. ' ):' → logprob: -11.634593963623047
    10. '
' → logprob: -12.884593963623047

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7491250875755213e-05
    2. 'self' → logprob: -10.750027656555176
    3. ' self' → logprob: -12.125027656555176
    4. '```' → logprob: -14.625027656555176
    5. '           ' → logprob: -17.37502670288086
    6. '	' → logprob: -17.62502670288086
    7. '    ' → logprob: -17.62502670288086
    8. '      ' → logprob: -17.62502670288086
    9. '   ' → logprob: -18.00002670288086
    10. ',' → logprob: -18.00002670288086

Token 412: ' print' (ID: 2123)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25511306524276733
    2. 'print' (adapté à ' print') → logprob: -1.505113124847412
    3. '       ' → logprob: -6.255113124847412
    4. ' self' → logprob: -6.880113124847412
    5. ' print' → logprob: -8.380112648010254
    6. '           ' → logprob: -14.380112648010254
    7. '   ' → logprob: -16.88011360168457
    8. ' ' → logprob: -17.63011360168457
    9. 'output' → logprob: -17.63011360168457
    10. 'for' → logprob: -17.88011360168457

Token 413: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.16027691960334778
    2. '(g' → logprob: -1.9102768898010254
    3. '(' → logprob: -9.910277366638184
    4. 'f' → logprob: -13.035277366638184
    5. 'g' → logprob: -14.410277366638184
    6. '((' → logprob: -16.535276412963867
    7. '("' → logprob: -16.785276412963867
    8. '(
' → logprob: -16.910276412963867
    9. '(G' → logprob: -17.160276412963867
    10. '(F' → logprob: -17.660276412963867

Token 414: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.584855854511261
    2. 'G' → logprob: -0.834855854511261
    3. '"{' → logprob: -4.959856033325195
    4. '"G' → logprob: -6.584856033325195
    5. '"' → logprob: -8.084856033325195
    6. 'g' → logprob: -9.209856033325195
    7. 'The' → logprob: -10.709856033325195
    8. ''{' → logprob: -11.459856033325195
    9. 'Result' → logprob: -11.959856033325195
    10. ' G' → logprob: -12.084856033325195

Token 415: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.704273118884885e-07
    2. ' gcd' → logprob: -15.250000953674316
    3. '   ' → logprob: -16.125
    4. '	g' → logprob: -16.75
    5. ''g' → logprob: -16.75
    6. '(g' → logprob: -16.875
    7. ' ' → logprob: -17.375
    8. 'gcc' → logprob: -17.5
    9. ':g' → logprob: -17.75
    10. '```' → logprob: -18.125

Token 416: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0013552368618547916
    2. 'c' → logprob: -6.751355171203613
    3. 'd' → logprob: -8.626355171203613
    4. 'g' → logprob: -13.626355171203613
    5. 'ct' → logprob: -13.626355171203613
    6. 'cf' → logprob: -14.001355171203613
    7. '_cd' → logprob: -14.001355171203613
    8. 'CD' → logprob: -15.126355171203613
    9. ' gcd' → logprob: -15.126355171203613
    10. 'print' → logprob: -15.501355171203613

Token 417: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.3856492842023727e-06
    2. 'alue' → logprob: -14.000000953674316
    3. 'value' → logprob: -15.375000953674316
    4. '}' → logprob: -15.875000953674316
    5. '_' → logprob: -16.500001907348633
    6. '_val' → logprob: -18.125001907348633
    7. '}_' → logprob: -18.500001907348633
    8. '_result' → logprob: -18.500001907348633
    9. '(value' → logprob: -18.750001907348633
    10. 'Value' → logprob: -19.000001907348633

Token 418: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -7.255023956531659e-05
    2. ' }' → logprob: -9.625072479248047
    3. '}{' → logprob: -12.000072479248047
    4. ' {' → logprob: -15.625072479248047
    5. '{' → logprob: -16.375072479248047
    6. ' ' → logprob: -16.750072479248047
    7. '},' → logprob: -17.500072479248047
    8. '()}' → logprob: -18.000072479248047
    9. ')' → logprob: -18.250072479248047
    10. '},{' → logprob: -18.375072479248047

Token 419: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0021948604844510555
    2. '{' → logprob: -6.127194881439209
    3. ' ' → logprob: -12.00219440460205
    4. '}' → logprob: -13.50219440460205
    5. ' {(' → logprob: -14.00219440460205
    6. '<|end|>' → logprob: -14.50219440460205
    7. '",{' → logprob: -15.75219440460205
    8. ' {}' → logprob: -15.87719440460205
    9. ' ' → logprob: -16.127195358276367
    10. ' {'' → logprob: -16.252195358276367

Token 420: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.088346359931165e-07
    2. ' l' → logprob: -14.625000953674316
    3. 'lc' → logprob: -14.750000953674316
    4. '   ' → logprob: -18.625
    5. '	l' → logprob: -18.625
    6. 'lcd' → logprob: -19.375
    7. ' ' → logprob: -20.0
    8. 'LC' → logprob: -20.375
    9. '_l' → logprob: -20.625
    10. '  ' → logprob: -20.75

Token 421: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.041567590087652206
    2. 'c' → logprob: -3.29156756401062
    3. 'm' → logprob: -5.666567802429199
    4. '<|end|>' → logprob: -10.5415678024292
    5. '_cm' → logprob: -11.1665678024292
    6. ' cm' → logprob: -12.1665678024292
    7. 'CM' → logprob: -12.4165678024292
    8. 'cms' → logprob: -13.0415678024292
    9. ')' → logprob: -13.0415678024292
    10. '_c' → logprob: -13.2915678024292

Token 422: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.3902033970225602e-05
    2. 'value' → logprob: -11.500014305114746
    3. 'alue' → logprob: -13.125014305114746
    4. '_' → logprob: -14.625014305114746
    5. '}_' → logprob: -14.875014305114746
    6. '_val' → logprob: -15.125014305114746
    7. 'u' → logprob: -15.250014305114746
    8. 'm' → logprob: -15.875014305114746
    9. '}' → logprob: -16.50001335144043
    10. 'Value' → logprob: -17.12501335144043

Token 423: '}",' (ID: 20115)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3134952485561371
    2. '",' → logprob: -1.3134952783584595
    3. '}")' → logprob: -9.438495635986328
    4. '}",' → logprob: -9.563495635986328
    5. '"' → logprob: -10.563495635986328
    6. '}' → logprob: -10.688495635986328
    7. ')' → logprob: -11.063495635986328
    8. '"}' → logprob: -11.188495635986328
    9. '")
' → logprob: -12.688495635986328
    10. ')",' → logprob: -13.688495635986328

Token 424: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.0011709370883181691
    2. ' file' → logprob: -6.751171112060547
    3. 'flush' → logprob: -14.251171112060547
    4. 'end' → logprob: -18.001171112060547
    5. 'fil' → logprob: -18.751171112060547
    6. '   ' → logprob: -18.751171112060547
    7. ' ' → logprob: -19.126171112060547
    8. ',file' → logprob: -19.501171112060547
    9. '    ' → logprob: -19.751171112060547
    10. '	file' → logprob: -19.876171112060547

Token 425: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760014653205872
    2. '=self' → logprob: -0.8260014653205872
    3. 'self' → logprob: -9.701001167297363
    4. '=
' → logprob: -14.326001167297363
    5. '=}' → logprob: -16.45100212097168
    6. '=

' → logprob: -16.95100212097168
    7. '=sys' → logprob: -17.45100212097168
    8. ' self' → logprob: -17.70100212097168
    9. ' =' → logprob: -17.82600212097168
    10. '=s' → logprob: -17.95100212097168

Token 426: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -3.0590548703912646e-05
    2. 'output' → logprob: -10.625030517578125
    3. '.' → logprob: -12.125030517578125
    4. '.out' → logprob: -15.125030517578125
    5. '.stdout' → logprob: -15.375030517578125
    6. '.outputs' → logprob: -16.625030517578125
    7. '	output' → logprob: -16.750030517578125
    8. ').' → logprob: -17.125030517578125
    9. '.input' → logprob: -17.375030517578125
    10. '$output' → logprob: -17.500030517578125

Token 427: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.00000286102295
    4. ',' → logprob: -17.750001907348633
    5. ')return' → logprob: -17.875001907348633
    6. ')

' → logprob: -18.500001907348633
    7. ')}' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.875001907348633
    9. ')`' → logprob: -19.250001907348633
    10. '<|end|>' → logprob: -19.625001907348633

Token 428: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029002929106354713
    2. 'if' → logprob: -4.029003143310547
    3. 'class' → logprob: -4.529003143310547
    4. 'for' → logprob: -13.154003143310547
    5. 'import' → logprob: -14.779003143310547
    6. '```' → logprob: -15.529003143310547
    7. '#' → logprob: -15.654003143310547
    8. ' if' → logprob: -16.404003143310547
    9. ' def' → logprob: -18.279003143310547
    10. ' class' → logprob: -18.279003143310547

Token 429: ' G' (ID: 499)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.34258586168289185
    2. 'Main' → logprob: -2.092585802078247
    3. ' Solution' → logprob: -2.217585802078247
    4. 'Problem' → logprob: -4.217586040496826
    5. 'Processor' → logprob: -4.467586040496826
    6. 'Solver' → logprob: -4.842586040496826
    7. ' Main' → logprob: -4.967586040496826
    8. 'Application' → logprob: -6.092586040496826
    9. 'LC' → logprob: -6.092586040496826
    10. 'G' → logprob: -6.217586040496826

Token 430: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.26178178191185
    2. 'CD' → logprob: -1.7617818117141724
    3. 'reat' → logprob: -2.886781692504883
    4. 'C' → logprob: -6.761781692504883
    5. 'reater' → logprob: -7.511781692504883
    6. 'cm' → logprob: -8.386781692504883
    7. 'c' → logprob: -8.636781692504883
    8. 'eneral' → logprob: -9.011781692504883
    9. 'reate' → logprob: -9.261781692504883
    10. 'Cd' → logprob: -9.636781692504883

Token 431: 'L' (ID: 43)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.0922996923327446
    2. 'L' → logprob: -2.842299699783325
    3. 'Processor' → logprob: -4.342299461364746
    4. 'Solver' → logprob: -4.717299461364746
    5. 'Computer' → logprob: -5.092299461364746
    6. 'Pair' → logprob: -6.967299461364746
    7. 'LC' → logprob: -8.342299461364746
    8. 'C' → logprob: -8.717299461364746
    9. 'Lc' → logprob: -9.217299461364746
    10. 'Executor' → logprob: -10.092299461364746

Token 432: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.6776029699249193e-05
    2. 'CM' → logprob: -11.00002670288086
    3. 'c' → logprob: -12.50002670288086
    4. 'Cm' → logprob: -12.62502670288086
    5. 'cms' → logprob: -13.87502670288086
    6. 'cd' → logprob: -14.12502670288086
    7. ' cm' → logprob: -14.12502670288086
    8. 'C' → logprob: -15.12502670288086
    9. 'm' → logprob: -17.12502670288086
    10. '   ' → logprob: -17.50002670288086

Token 433: 'Processor' (ID: 22334)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.009735665284097195
    2. 'Solver' → logprob: -4.884735584259033
    3. 'Processor' → logprob: -6.259735584259033
    4. 'Computer' → logprob: -8.509736061096191
    5. 'Finder' → logprob: -12.759736061096191
    6. 'Service' → logprob: -13.009736061096191
    7. ' Calculator' → logprob: -13.259736061096191
    8. 'Handler' → logprob: -14.134736061096191
    9. 'Calcul' → logprob: -14.259736061096191
    10. 'calculator' → logprob: -14.259736061096191

Token 434: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003049570368602872
    2. ':
' → logprob: -8.12530517578125
    3. ' :' → logprob: -13.12530517578125
    4. '(' → logprob: -13.25030517578125
    5. ':def' → logprob: -13.37530517578125
    6. '():' → logprob: -14.25030517578125
    7. '<|end|>' → logprob: -14.25030517578125
    8. '):' → logprob: -14.75030517578125
    9. ':

' → logprob: -14.87530517578125
    10. 'def' → logprob: -15.25030517578125

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021929678041487932
    2. ' def' → logprob: -6.252192974090576
    3. 'def' → logprob: -8.252192497253418
    4. 'staticmethod' → logprob: -14.002192497253418
    5. '	def' → logprob: -14.502192497253418
    6. '   ' → logprob: -14.627192497253418
    7. ' @' → logprob: -14.877192497253418
    8. ':' → logprob: -14.877192497253418
    9. 'classmethod' → logprob: -15.002192497253418
    10. '    
' → logprob: -15.502192497253418

Token 436: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.05535554513335228
    2. 'def' → logprob: -3.0553555488586426
    3. ' def' → logprob: -5.305355548858643
    4. ' @' → logprob: -6.805355548858643
    5. '   ' → logprob: -7.305355548858643
    6. 'staticmethod' → logprob: -14.305355072021484
    7. ' ' → logprob: -17.055355072021484
    8. '@property' → logprob: -18.180355072021484
    9. '	def' → logprob: -18.555355072021484
    10. '@param' → logprob: -18.680355072021484

Token 437: ' Enc' (ID: 26858)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6214404106140137
    2. ' def' → logprob: -1.3714404106140137
    3. '@' → logprob: -1.6214404106140137
    4. ' @' → logprob: -4.496440410614014
    5. '   ' → logprob: -8.621440887451172
    6. 'staticmethod' → logprob: -9.121440887451172
    7. 'class' → logprob: -10.996440887451172
    8. '@property' → logprob: -12.371440887451172
    9. '
' → logprob: -12.746440887451172
    10. 'classmethod' → logprob: -12.996440887451172

Token 438: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.006717974785715342
    2. 'apsulation' → logprob: -5.006718158721924
    3. 'oded' → logprob: -13.256717681884766
    4. 'ap' → logprob: -14.881717681884766
    5. 'l' → logprob: -16.506717681884766
    6. 'odable' → logprob: -16.756717681884766
    7. 'apsed' → logprob: -17.006717681884766
    8. 'oding' → logprob: -17.131717681884766
    9. 'om' → logprob: -17.131717681884766
    10. 'odes' → logprob: -17.256717681884766

Token 439: 'ulated' (ID: 13314)
  Prédit: 'ulates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulates' → logprob: -0.12822285294532776
    2. 'ulating' → logprob: -2.128222942352295
    3. 'ulate' → logprob: -7.753222942352295
    4. 'u' → logprob: -8.003222465515137
    5. 'uling' → logprob: -8.253222465515137
    6. 'ulation' → logprob: -9.253222465515137
    7. '   ' → logprob: -9.503222465515137
    8. 'ul' → logprob: -10.628222465515137
    9. 'class' → logprob: -10.628222465515137
    10. 'ules' → logprob: -11.003222465515137

Token 440: ' logic' (ID: 18485)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.23120485246181488
    2. 'def' → logprob: -1.606204867362976
    3. '   ' → logprob: -5.981204986572266
    4. 'class' → logprob: -6.606204986572266
    5. ' class' → logprob: -7.856204986572266
    6. ':
' → logprob: -7.981204986572266
    7. ' logic' → logprob: -8.231204986572266
    8. ' @' → logprob: -8.481204986572266
    9. ':' → logprob: -8.481204986572266
    10. ' processor' → logprob: -8.481204986572266

Token 441: ' handling' (ID: 17491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16461913287639618
    2. ':' → logprob: -1.9146190881729126
    3. ' for' → logprob: -6.289618968963623
    4. ':
' → logprob: -6.789618968963623
    5. 'def' → logprob: -7.414618968963623
    6. ' def' → logprob: -7.789618968963623
    7. '(' → logprob: -9.164619445800781
    8. ',' → logprob: -9.539619445800781
    9. ' to' → logprob: -9.664619445800781
    10. 'for' → logprob: -10.914619445800781

Token 442: ' the' (ID: 290)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31619900465011597
    2. 'def' → logprob: -1.9411990642547607
    3. '   ' → logprob: -2.0661990642547607
    4. ':' → logprob: -7.941198825836182
    5. ' input' → logprob: -9.31619930267334
    6. ':
' → logprob: -9.44119930267334
    7. '	def' → logprob: -9.56619930267334
    8. ' Integer' → logprob: -9.94119930267334
    9. 'Input' → logprob: -10.06619930267334
    10. ' Input' → logprob: -10.19119930267334

Token 443: ' problem' (ID: 4792)
  Prédit: 'processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'processing' → logprob: -0.1800839900970459
    2. 'core' → logprob: -2.430083990097046
    3. 'com' → logprob: -4.180084228515625
    4. 'main' → logprob: -4.430084228515625
    5. 'cal' → logprob: -4.555084228515625
    6. 'process' → logprob: -4.680084228515625
    7. ' processing' → logprob: -5.305084228515625
    8. 'ent' → logprob: -5.430084228515625
    9. 'input' → logprob: -5.555084228515625
    10. 'reading' → logprob: -5.805084228515625

Token 444: ' solution' (ID: 7578)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0324878953397274
    2. ':' → logprob: -3.5324878692626953
    3. ':
' → logprob: -6.782487869262695
    4. '    
' → logprob: -7.032487869262695
    5. 'def' → logprob: -8.282487869262695
    6. ' def' → logprob: -8.532487869262695
    7. '
' → logprob: -9.657487869262695
    8. ',' → logprob: -9.907487869262695
    9. '    ' → logprob: -10.532487869262695
    10. '(' → logprob: -10.657487869262695

Token 445: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24237912893295288
    2. ':
' → logprob: -2.1173791885375977
    3. '   ' → logprob: -2.3673791885375977
    4. 'def' → logprob: -7.367379188537598
    5. ' def' → logprob: -8.117379188537598
    6. ',' → logprob: -8.867379188537598
    7. ':def' → logprob: -10.617379188537598
    8. '	def' → logprob: -10.992379188537598
    9. '(' → logprob: -11.617379188537598
    10. ' :
' → logprob: -11.742379188537598

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03669672831892967
    2. ' def' → logprob: -3.661696672439575
    3. 'def' → logprob: -4.786696910858154
    4. '	def' → logprob: -7.411696910858154
    5. ':' → logprob: -7.536696910858154
    6. '    
' → logprob: -8.036696434020996
    7. '
' → logprob: -8.036696434020996
    8. ':
' → logprob: -8.911696434020996
    9. ',' → logprob: -10.661696434020996
    10. '  ' → logprob: -11.411696434020996

Token 447: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17793308198451996
    2. ' def' → logprob: -1.9279330968856812
    3. '@' → logprob: -4.177933216094971
    4. '   ' → logprob: -6.802933216094971
    5. ' @' → logprob: -6.802933216094971
    6. ' ' → logprob: -13.552932739257812
    7. '	def' → logprob: -15.177932739257812
    8. 'staticmethod' → logprob: -16.427932739257812
    9. '  ' → logprob: -16.552932739257812
    10. '    ' → logprob: -17.552932739257812

Token 448: ' __' (ID: 2516)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3622002601623535
    2. ' __' → logprob: -1.4872002601623535
    3. 'process' → logprob: -2.7372002601623535
    4. '__' → logprob: -4.4872002601623535
    5. ' compute' → logprob: -6.6122002601623535
    6. ' def' → logprob: -8.487199783325195
    7. ' calculate' → logprob: -8.987199783325195
    8. ' run' → logprob: -10.362199783325195
    9. '_process' → logprob: -10.487199783325195
    10. ' solve' → logprob: -10.487199783325195

Token 449: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.127333340875339e-06
    2. ' init' → logprob: -12.750003814697266
    3. '__' → logprob: -14.500003814697266
    4. '_init' → logprob: -15.375003814697266
    5. '   ' → logprob: -15.500003814697266
    6. '```' → logprob: -15.750003814697266
    7. 'def' → logprob: -17.250003814697266
    8. 'process' → logprob: -17.375003814697266
    9. 'new' → logprob: -17.375003814697266
    10. '	init' → logprob: -17.875003814697266

Token 450: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3971852958202362
    2. ' (' → logprob: -1.1471853256225586
    3. '(' → logprob: -4.772185325622559
    4. '__(' → logprob: -6.522185325622559
    5. '_(' → logprob: -9.397185325622559
    6. 'self' → logprob: -10.022185325622559
    7. ' self' → logprob: -10.147185325622559
    8. '_' → logprob: -10.272185325622559
    9. '   ' → logprob: -10.647185325622559
    10. '__(
' → logprob: -10.772185325622559

Token 451: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003697781648952514
    2. ')' → logprob: -8.375370025634766
    3. ' self' → logprob: -9.000370025634766
    4. '   ' → logprob: -11.750370025634766
    5. '):
' → logprob: -12.125370025634766
    6. '
' → logprob: -14.250370025634766
    7. '(self' → logprob: -14.500370025634766
    8. '       ' → logprob: -15.000370025634766
    9. '	self' → logprob: -15.625370025634766
    10. ',' → logprob: -15.875370025634766

Token 452: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33258575201034546
    2. ',' → logprob: -1.3325858116149902
    3. ' self' → logprob: -4.45758581161499
    4. '(self' → logprob: -5.08258581161499
    5. '   ' → logprob: -7.70758581161499
    6. ')' → logprob: -8.332585334777832
    7. ',self' → logprob: -8.332585334777832
    8. ' (' → logprob: -8.582585334777832
    9. '):
' → logprob: -9.082585334777832
    10. '       ' → logprob: -10.332585334777832

Token 453: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001417142222635448
    2. ' input' → logprob: -6.62641716003418
    3. 'inputs' → logprob: -10.75141716003418
    4. ')' → logprob: -10.87641716003418
    5. 'data' → logprob: -11.25141716003418
    6. 'pairs' → logprob: -11.62641716003418
    7. 'provider' → logprob: -12.12641716003418
    8. 'integer' → logprob: -12.37641716003418
    9. 'reader' → logprob: -12.50141716003418
    10. 'output' → logprob: -12.50141716003418

Token 454: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -0.0006766928127035499
    2. '_source' → logprob: -7.50067663192749
    3. '_handler' → logprob: -9.375677108764648
    4. ':' → logprob: -10.375677108764648
    5. 'Provider' → logprob: -13.000677108764648
    6. 'provider' → logprob: -13.375677108764648
    7. '_reader' → logprob: -13.375677108764648
    8. '_:' → logprob: -14.375677108764648
    9. ' provider' → logprob: -15.125677108764648
    10. '_' → logprob: -15.375677108764648

Token 455: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12389131635427475
    2. '):' → logprob: -2.7488913536071777
    3. ',' → logprob: -2.9988913536071777
    4. ' :' → logprob: -6.248891353607178
    5. ' ):' → logprob: -7.873891353607178
    6. '):
' → logprob: -8.49889087677002
    7. ' ,' → logprob: -9.49889087677002
    8. ')' → logprob: -9.62389087677002
    9. '=None' → logprob: -12.37389087677002
    10. '   ' → logprob: -12.49889087677002

Token 456: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.004078997299075127
    2. ' Input' → logprob: -5.5040788650512695
    3. 'input' → logprob: -14.75407886505127
    4. '	Input' → logprob: -16.129079818725586
    5. ' input' → logprob: -16.379079818725586
    6. '_input' → logprob: -17.754079818725586
    7. '_Input' → logprob: -18.379079818725586
    8. ' ' → logprob: -18.504079818725586
    9. '\Input' → logprob: -19.129079818725586
    10. '<Input' → logprob: -19.254079818725586

Token 457: 'Provider' (ID: 5999)
  Prédit: 'Provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Provider' → logprob: -0.0017850141739472747
    2. '_provider' → logprob: -6.376784801483154
    3. ' Provider' → logprob: -9.626785278320312
    4. '_PROVIDER' → logprob: -11.751785278320312
    5. '.Provider' → logprob: -13.126785278320312
    6. ')' → logprob: -13.626785278320312
    7. 'Source' → logprob: -13.626785278320312
    8. 'Handler' → logprob: -13.876785278320312
    9. '_' → logprob: -14.501785278320312
    10. '):
' → logprob: -14.626785278320312

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10053261369466782
    2. '):' → logprob: -2.3505325317382812
    3. ')' → logprob: -8.350532531738281
    4. '):
' → logprob: -10.350532531738281
    5. ' ,' → logprob: -10.725532531738281
    6. ' ):' → logprob: -11.225532531738281
    7. '   ' → logprob: -11.475532531738281
    8. ',input' → logprob: -11.725532531738281
    9. ',
' → logprob: -13.850532531738281
    10. ':' → logprob: -14.225532531738281

Token 459: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.1602357029914856
    2. ' output' → logprob: -1.9102356433868408
    3. 'data' → logprob: -11.910235404968262
    4. ' data' → logprob: -12.910235404968262
    5. ' ' → logprob: -14.160235404968262
    6. '   ' → logprob: -14.285235404968262
    7. 'parser' → logprob: -14.660235404968262
    8. '	output' → logprob: -15.785235404968262
    9. 'Output' → logprob: -16.285236358642578
    10. 'input' → logprob: -16.410236358642578

Token 460: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -6.670925358776003e-05
    2. '_provider' → logprob: -9.750066757202148
    3. 'Handler' → logprob: -12.375066757202148
    4. '_manager' → logprob: -13.875066757202148
    5. '_writer' → logprob: -14.250066757202148
    6. ')' → logprob: -14.750066757202148
    7. '_output' → logprob: -15.000066757202148
    8. '_handle' → logprob: -15.250066757202148
    9. '_Handler' → logprob: -15.500066757202148
    10. '):
' → logprob: -15.625066757202148

Token 461: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10168322175741196
    2. '):
' → logprob: -2.6016831398010254
    3. '):' → logprob: -3.8516831398010254
    4. ' :' → logprob: -7.351683139801025
    5. ')' → logprob: -7.851683139801025
    6. '   ' → logprob: -9.351683616638184
    7. ' ):' → logprob: -9.726683616638184
    8. ' ):
' → logprob: -9.851683616638184
    9. '):
' → logprob: -10.601683616638184
    10. '):

' → logprob: -10.726683616638184

Token 462: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.01417032815515995
    2. ' Output' → logprob: -4.264170169830322
    3. ' output' → logprob: -12.38917064666748
    4. 'output' → logprob: -13.26417064666748
    5. '   ' → logprob: -14.76417064666748
    6. ')' → logprob: -14.88917064666748
    7. '	Output' → logprob: -15.63917064666748
    8. ' ' → logprob: -16.889169692993164
    9. '):
' → logprob: -17.639169692993164
    10. '_output' → logprob: -17.764169692993164

Token 463: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.0019245869480073452
    2. '):
' → logprob: -6.501924514770508
    3. '):' → logprob: -8.501924514770508
    4. '_handler' → logprob: -8.876924514770508
    5. 'handler' → logprob: -10.501924514770508
    6. '_Handler' → logprob: -10.751924514770508
    7. ':' → logprob: -11.876924514770508
    8. ')' → logprob: -11.876924514770508
    9. '   ' → logprob: -12.376924514770508
    10. ' Handler' → logprob: -12.501924514770508

Token 464: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07903563976287842
    2. '):
' → logprob: -2.579035758972168
    3. ',' → logprob: -9.329035758972168
    4. ' ):' → logprob: -10.704035758972168
    5. ')' → logprob: -10.829035758972168
    6. '   ' → logprob: -11.704035758972168
    7. '):
' → logprob: -12.579035758972168
    8. ' ):
' → logprob: -13.204035758972168
    9. ':' → logprob: -14.579035758972168
    10. '):

' → logprob: -15.454035758972168

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006843181326985359
    2. 'self' → logprob: -7.6256842613220215
    3. ' self' → logprob: -8.75068473815918
    4. '   ' → logprob: -10.75068473815918
    5. '	self' → logprob: -11.75068473815918
    6. 'def' → logprob: -12.37568473815918
    7. '	' → logprob: -13.12568473815918
    8. ',' → logprob: -14.25068473815918
    9. '        
' → logprob: -15.12568473815918
    10. '      ' → logprob: -15.25068473815918

Token 466: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0044005634263157845
    2. ' self' → logprob: -6.004400730133057
    3. '       ' → logprob: -6.254400730133057
    4. '	self' → logprob: -14.254400253295898
    5. '   ' → logprob: -14.629400253295898
    6. '(self' → logprob: -18.3794002532959
    7. '
' → logprob: -19.1294002532959
    8. '_self' → logprob: -19.2544002532959
    9. '	' → logprob: -19.5044002532959
    10. '        ' → logprob: -19.7544002532959

Token 467: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.001225466257892549
    2. '.' → logprob: -6.751225471496582
    3. '._' → logprob: -10.001225471496582
    4. 'input' → logprob: -12.376225471496582
    5. '.output' → logprob: -13.501225471496582
    6. ' .' → logprob: -13.626225471496582
    7. '.import' → logprob: -14.251225471496582
    8. '.inputs' → logprob: -14.251225471496582
    9. '.INPUT' → logprob: -14.501225471496582
    10. '.Input' → logprob: -15.376225471496582

Token 468: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -1.6166903151315637e-05
    2. '_' → logprob: -11.250016212463379
    3. '_handler' → logprob: -13.250016212463379
    4. '_pro' → logprob: -14.625016212463379
    5. ' _' → logprob: -14.875016212463379
    6. '_controller' → logprob: -16.125015258789062
    7. '_source' → logprob: -16.125015258789062
    8. 's' → logprob: -17.125015258789062
    9. '_manager' → logprob: -17.500015258789062
    10. 'Provider' → logprob: -17.750015258789062

Token 469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.281171590089798
    2. '=' → logprob: -1.4061715602874756
    3. '   ' → logprob: -11.406171798706055
    4. '=input' → logprob: -13.031171798706055
    5. ',' → logprob: -13.281171798706055
    6. '    ' → logprob: -13.531171798706055
    7. ' ' → logprob: -13.906171798706055
    8. ')' → logprob: -14.531171798706055
    9. '<|end|>' → logprob: -14.531171798706055
    10. '       ' → logprob: -14.531171798706055

Token 470: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602250337600708
    2. ' input' → logprob: -1.9102250337600708
    3. 'output' → logprob: -15.285224914550781
    4. 'Input' → logprob: -15.410224914550781
    5. 'import' → logprob: -15.535224914550781
    6. '	input' → logprob: -16.41022491455078
    7. '<input' → logprob: -16.78522491455078
    8. '=input' → logprob: -16.91022491455078
    9. '(input' → logprob: -17.28522491455078
    10. '_input' → logprob: -17.41022491455078

Token 471: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -1.7432603272027336e-06
    2. 'provider' → logprob: -13.750001907348633
    3. '_handler' → logprob: -15.125001907348633
    4. 'Provider' → logprob: -15.625001907348633
    5. '_' → logprob: -15.875001907348633
    6. '_pro' → logprob: -16.875001907348633
    7. '_PROVIDER' → logprob: -16.875001907348633
    8. ' _' → logprob: -18.125001907348633
    9. '_controller' → logprob: -19.375001907348633
    10. ' provider' → logprob: -19.500001907348633

Token 472: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03275638446211815
    2. '
' → logprob: -4.157756328582764
    3. '    
' → logprob: -4.282756328582764
    4. '   ' → logprob: -6.282756328582764
    5. '<|end|>' → logprob: -7.532756328582764
    6. '        
' → logprob: -8.657756805419922
    7. '        ' → logprob: -10.157756805419922
    8. 'def' → logprob: -10.532756805419922
    9. ' 
' → logprob: -10.657756805419922
    10. '    ' → logprob: -11.032756805419922

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10096245259046555
    2. 'self' → logprob: -2.3509624004364014
    3. ' self' → logprob: -7.2259626388549805
    4. '   ' → logprob: -10.97596263885498
    5. '
' → logprob: -12.22596263885498
    6. '	self' → logprob: -12.60096263885498
    7. 'output' → logprob: -13.97596263885498
    8. 'def' → logprob: -14.85096263885498
    9. '      ' → logprob: -14.97596263885498
    10. ' ' → logprob: -15.72596263885498

Token 474: ' self' (ID: 1051)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0026855177711695433
    2. 'self' (adapté à ' self') → logprob: -6.002685546875
    3. ' output' → logprob: -8.502685546875
    4. '.output' → logprob: -12.127685546875
    5. ' self' → logprob: -13.752685546875
    6. '       ' → logprob: -15.502685546875
    7. '_output' → logprob: -15.877685546875
    8. '
' → logprob: -16.127685546875
    9. 'input' → logprob: -17.502685546875
    10. '	output' → logprob: -17.627685546875

Token 475: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0017832369776442647
    2. 'output' → logprob: -6.37678337097168
    3. '.' → logprob: -10.12678337097168
    4. '.input' → logprob: -10.62678337097168
    5. '._' → logprob: -11.75178337097168
    6. ' .' → logprob: -12.62678337097168
    7. '_output' → logprob: -12.75178337097168
    8. ' output' → logprob: -14.37678337097168
    9. '.handler' → logprob: -14.62678337097168
    10. '	output' → logprob: -15.12678337097168

Token 476: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -6.630610641877865e-06
    2. '_handle' → logprob: -13.000006675720215
    3. '_' → logprob: -13.250006675720215
    4. 'Handler' → logprob: -14.500006675720215
    5. '_provider' → logprob: -14.625006675720215
    6. 'handler' → logprob: -14.750006675720215
    7. '   ' → logprob: -15.625006675720215
    8. '_hand' → logprob: -15.625006675720215
    9. '_manager' → logprob: -15.750006675720215
    10. '_output' → logprob: -16.2500057220459

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1661003977060318
    2. '=' → logprob: -1.9161003828048706
    3. '.' → logprob: -5.54110050201416
    4. '.print' → logprob: -7.04110050201416
    5. '_' → logprob: -8.66610050201416
    6. '<|end|>' → logprob: -8.79110050201416
    7. ' ' → logprob: -9.16610050201416
    8. 'import' → logprob: -9.29110050201416
    9. '.output' → logprob: -9.54110050201416
    10. 'print' → logprob: -9.54110050201416

Token 478: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.06196802109479904
    2. ' output' → logprob: -2.8119680881500244
    3. '	output' → logprob: -14.936967849731445
    4. '(output' → logprob: -16.936967849731445
    5. 'out' → logprob: -17.311967849731445
    6. ' ' → logprob: -18.436967849731445
    7. '$output' → logprob: -18.561967849731445
    8. 'input' → logprob: -18.686967849731445
    9. '_output' → logprob: -18.936967849731445
    10. 'Output' → logprob: -19.061967849731445

Token 479: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.00465523824095726
    2. '_provider' → logprob: -5.379655361175537
    3. 'Handler' → logprob: -11.629654884338379
    4. '._' → logprob: -11.754654884338379
    5. '   ' → logprob: -11.879654884338379
    6. '_' → logprob: -12.879654884338379
    7. '.' → logprob: -13.004654884338379
    8. 'handler' → logprob: -13.254654884338379
    9. '_HANDLER' → logprob: -14.004654884338379
    10. '_handle' → logprob: -14.254654884338379

Token 480: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26724329590797424
    2. '    
' → logprob: -1.7672432661056519
    3. '   ' → logprob: -2.7672433853149414
    4. '

' → logprob: -8.267243385314941
    5. '        
' → logprob: -8.892243385314941
    6. '  
' → logprob: -9.017243385314941
    7. 'def' → logprob: -9.017243385314941
    8. '   
' → logprob: -9.267243385314941
    9. '<|end|>' → logprob: -9.642243385314941
    10. '	
' → logprob: -10.892243385314941

Token 481: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07074610888957977
    2. '   ' → logprob: -3.0707461833953857
    3. ' def' → logprob: -3.8207461833953857
    4. '	def' → logprob: -13.320746421813965
    5. '
' → logprob: -13.695746421813965
    6. ' ' → logprob: -14.695746421813965
    7. 'd' → logprob: -16.19574546813965
    8. '    
' → logprob: -16.32074546813965
    9. 'de' → logprob: -16.32074546813965
    10. '@' → logprob: -16.69574546813965

Token 482: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.000001907348633
    3. '
' → logprob: -21.500001907348633
    4. 'd' → logprob: -21.625001907348633
    5. '    
' → logprob: -23.125001907348633
    6. '   ' → logprob: -23.625001907348633
    7. 'de' → logprob: -23.750001907348633
    8. '	def' → logprob: -24.500001907348633
    9. ' 
' → logprob: -25.000001907348633
    10. ' ' → logprob: -25.500001907348633

Token 483: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.1271975040435791
    2. ' process' → logprob: -2.127197504043579
    3. 'run' → logprob: -8.752197265625
    4. ' run' → logprob: -9.127197265625
    5. '_process' → logprob: -13.877197265625
    6. 'rocess' → logprob: -14.502197265625
    7. '.process' → logprob: -14.877197265625
    8. ' proces' → logprob: -15.127197265625
    9. 'proces' → logprob: -15.127197265625
    10. '	process' → logprob: -16.377197265625

Token 484: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017202798277139664
    2. '(' → logprob: -5.017202854156494
    3. '_line' → logprob: -5.392202854156494
    4. '_' → logprob: -6.017202854156494
    5. '()' → logprob: -6.142202854156494
    6. '_input' → logprob: -7.517202854156494
    7. '_lines' → logprob: -7.767202854156494
    8. '_(' → logprob: -8.767202377319336
    9. '_all' → logprob: -10.017202377319336
    10. '_pairs' → logprob: -10.392202377319336

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08144855499267578
    2. '_' → logprob: -2.831448554992676
    3. '_lines' → logprob: -4.581448554992676
    4. '):
' → logprob: -5.081448554992676
    5. '_input' → logprob: -6.706448554992676
    6. ')' → logprob: -7.456448554992676
    7. '_line' → logprob: -7.581448554992676
    8. ')_' → logprob: -8.456448554992676
    9. ',' → logprob: -9.331448554992676
    10. ' ):' → logprob: -9.706448554992676

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021697305142879486
    2. ' for' → logprob: -4.271697521209717
    3. 'for' → logprob: -4.896697521209717
    4. '   ' → logprob: -11.021697044372559
    5. '    ' → logprob: -12.146697044372559
    6. '	' → logprob: -12.771697044372559
    7. '      ' → logprob: -13.146697044372559
    8. '	for' → logprob: -13.396697044372559
    9. '    ' → logprob: -13.521697044372559
    10. '	   ' → logprob: -13.771697044372559

Token 487: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011978477705270052
    2. ' for' → logprob: -6.751197814941406
    3. '       ' → logprob: -10.501197814941406
    4. 'lines' → logprob: -16.126197814941406
    5. 'try' → logprob: -17.376197814941406
    6. ' lines' → logprob: -17.501197814941406
    7. '   ' → logprob: -18.751197814941406
    8. '	for' → logprob: -18.751197814941406
    9. ' ' → logprob: -19.876197814941406
    10. '
' → logprob: -20.876197814941406

Token 488: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.029750952497124672
    2. ' line' → logprob: -3.5297510623931885
    3. '	line' → logprob: -15.02975082397461
    4. 'lin' → logprob: -16.40475082397461
    5. '(line' → logprob: -16.90475082397461
    6. '_line' → logprob: -17.02975082397461
    7. 'raw' → logprob: -17.27975082397461
    8. 'input' → logprob: -18.65475082397461
    9. '#line' → logprob: -19.02975082397461
    10. ',line' → logprob: -19.02975082397461

Token 489: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004624510649591684
    2. 'in' → logprob: -5.379624366760254
    3. '	in' → logprob: -13.504624366760254
    4. ' ' → logprob: -13.879624366760254
    5. ' ' → logprob: -14.254624366760254
    6. 's' → logprob: -15.004624366760254
    7. '  ' → logprob: -16.12962532043457
    8. '_' → logprob: -16.12962532043457
    9. 'import' → logprob: -16.12962532043457
    10. '    ' → logprob: -16.25462532043457

Token 490: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0380416102707386
    2. ' self' → logprob: -3.288041591644287
    3. '	self' → logprob: -16.663042068481445
    4. '(self' → logprob: -16.913042068481445
    5. 'this' → logprob: -17.538042068481445
    6. '=self' → logprob: -18.538042068481445
    7. '[self' → logprob: -18.663042068481445
    8. 's' → logprob: -18.788042068481445
    9. 'Self' → logprob: -19.538042068481445
    10. ':self' → logprob: -19.663042068481445

Token 491: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.875036239624023
    3. 'input' → logprob: -11.000036239624023
    4. ' .' → logprob: -15.125036239624023
    5. '.output' → logprob: -17.125036239624023
    6. '\.' → logprob: -17.250036239624023
    7. '
' → logprob: -17.375036239624023
    8. ' input' → logprob: -17.500036239624023
    9. '	input' → logprob: -17.500036239624023
    10. '.
' → logprob: -17.750036239624023

Token 492: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -1.6240566083070007e-06
    2. 'provider' → logprob: -14.000001907348633
    3. '_PROVIDER' → logprob: -15.125001907348633
    4. 'Provider' → logprob: -16.125001907348633
    5. '_handler' → logprob: -16.125001907348633
    6. '_processor' → logprob: -16.625001907348633
    7. '_pro' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.625001907348633
    9. '       ' → logprob: -17.750001907348633
    10. '           ' → logprob: -17.750001907348633

Token 493: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -6.515961285913363e-05
    2. '.' → logprob: -10.125064849853516
    3. ' .' → logprob: -10.750064849853516
    4. '	lines' → logprob: -13.250064849853516
    5. '.readlines' → logprob: -13.875064849853516
    6. '.
' → logprob: -15.250064849853516
    7. '(lines' → logprob: -15.250064849853516
    8. ' lines' → logprob: -16.375064849853516
    9. '.links' → logprob: -16.375064849853516
    10. 'lines' → logprob: -17.000064849853516

Token 494: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0911504253745079
    2. '():' → logprob: -2.4661505222320557
    3. '():
' → logprob: -6.591150283813477
    4. ':
' → logprob: -7.216150283813477
    5. ' :' → logprob: -9.716150283813477
    6. '):' → logprob: -10.591150283813477
    7. '()' → logprob: -11.716150283813477
    8. '():
' → logprob: -12.591150283813477
    9. '       ' → logprob: -13.341150283813477
    10. ' ():' → logprob: -14.091150283813477

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034364692866802216
    2. ':' → logprob: -3.409364700317383
    3. ':
' → logprob: -8.284364700317383
    4. '       ' → logprob: -8.659364700317383
    5. ',' → logprob: -9.534364700317383
    6. '          ' → logprob: -10.159364700317383
    7. ' :' → logprob: -10.409364700317383
    8. ' if' → logprob: -10.534364700317383
    9. '            
' → logprob: -10.534364700317383
    10. '<|end|>' → logprob: -11.284364700317383

Token 496: ' if' (ID: 538)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.1510675549507141
    2. 'try' → logprob: -2.2760674953460693
    3. '           ' → logprob: -4.151067733764648
    4. ' pair' → logprob: -4.651067733764648
    5. 'integer' → logprob: -5.026067733764648
    6. ' try' → logprob: -6.151067733764648
    7. '               ' → logprob: -6.526067733764648
    8. 'ip' → logprob: -6.901067733764648
    9. 'if' (adapté à ' if') → logprob: -7.651067733764648
    10. 'int' → logprob: -8.651067733764648

Token 497: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0061512114480137825
    2. 'not' → logprob: -5.38115119934082
    3. ' line' → logprob: -6.50615119934082
    4. 'line' → logprob: -10.25615119934082
    5. ' ' → logprob: -16.00615119934082
    6. ' no' → logprob: -16.63115119934082
    7. '#line' → logprob: -17.00615119934082
    8. ' ' → logprob: -17.00615119934082
    9. '	not' → logprob: -17.00615119934082
    10. '=line' → logprob: -17.25615119934082

Token 498: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.38687223196029663
    2. ' line' → logprob: -1.1368722915649414
    3. '	line' → logprob: -14.011872291564941
    4. '#line' → logprob: -15.511872291564941
    5. '(line' → logprob: -16.136871337890625
    6. '=line' → logprob: -16.886871337890625
    7. '[line' → logprob: -17.011871337890625
    8. 'Line' → logprob: -18.011871337890625
    9. '_line' → logprob: -18.636871337890625
    10. ' ' → logprob: -18.636871337890625

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16683244705200195
    2. '.strip' → logprob: -2.041832447052002
    3. ':
' → logprob: -3.916832447052002
    4. '.' → logprob: -5.666832447052002
    5. ' or' → logprob: -8.666831970214844
    6. '<|end|>' → logprob: -8.666831970214844
    7. ' :' → logprob: -10.416831970214844
    8. '.startswith' → logprob: -10.666831970214844
    9. '.rstrip' → logprob: -10.916831970214844
    10. '.trim' → logprob: -11.041831970214844

Token 500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05529092624783516
    2. ':' → logprob: -3.180290937423706
    3. ':
' → logprob: -4.430290699005127
    4. '           ' → logprob: -8.305291175842285
    5. ' continue' → logprob: -11.555291175842285
    6. ',' → logprob: -11.680291175842285
    7. ' or' → logprob: -11.930291175842285
    8. 'continue' → logprob: -11.930291175842285
    9. ':return' → logprob: -12.055291175842285
    10. '              ' → logprob: -12.180291175842285

Token 501: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05382685735821724
    2. 'break' → logprob: -3.5538268089294434
    3. ' continue' → logprob: -3.8038268089294434
    4. 'continue' (adapté à ' continue') → logprob: -6.553826808929443
    5. '               ' → logprob: -9.928827285766602
    6. ' return' → logprob: -10.803827285766602
    7. 'return' → logprob: -11.928827285766602
    8. '           ' → logprob: -13.803827285766602
    9. '	break' → logprob: -14.053827285766602
    10. '                   ' → logprob: -14.303827285766602

Token 502: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031117575708776712
    2. '
' → logprob: -6.128111839294434
    3. '            
' → logprob: -7.128111839294434
    4. '    
' → logprob: -9.878111839294434
    5. '       ' → logprob: -11.253111839294434
    6. ' 
' → logprob: -11.628111839294434
    7. ',' → logprob: -11.628111839294434
    8. '        
' → logprob: -11.878111839294434
    9. '  
' → logprob: -11.878111839294434
    10. '          ' → logprob: -12.378111839294434

Token 503: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03459134325385094
    2. '
' → logprob: -3.5345914363861084
    3. 'pair' → logprob: -6.034591197967529
    4. '       ' → logprob: -6.909591197967529
    5. '            
' → logprob: -7.284591197967529
    6. 'try' → logprob: -7.909591197967529
    7. ' pair' → logprob: -9.284591674804688
    8. 'Integer' → logprob: -9.284591674804688
    9. 'p' → logprob: -9.909591674804688
    10. ' try' → logprob: -10.409591674804688

Token 504: ' skip' (ID: 16677)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.09773163497447968
    2. 'break' → logprob: -2.472731590270996
    3. '           ' → logprob: -4.972731590270996
    4. ' try' → logprob: -6.597731590270996
    5. 'try' → logprob: -8.722731590270996
    6. ' continue' → logprob: -8.847731590270996
    7. 'continue' → logprob: -9.472731590270996
    8. '
' → logprob: -10.597731590270996
    9. 'return' → logprob: -10.847731590270996
    10. ' return' → logprob: -11.097731590270996

Token 505: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.2537192106246948
    2. ' empty' → logprob: -1.7537192106246948
    3. '
' → logprob: -3.2537193298339844
    4. '<|end|>' → logprob: -4.628719329833984
    5. '            
' → logprob: -6.878719329833984
    6. 'blank' → logprob: -7.753719329833984
    7. '
            
' → logprob: -8.628719329833984
    8. ' blank' → logprob: -8.753719329833984
    9. ' lines' → logprob: -8.753719329833984
    10. '           ' → logprob: -8.878719329833984

Token 506: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.11358363926410675
    2. 'lines' → logprob: -2.363583564758301
    3. '<|end|>' → logprob: -4.363583564758301
    4. 'line' → logprob: -7.988583564758301
    5. ' line' → logprob: -9.4885835647583
    6. '
' → logprob: -9.7385835647583
    7. '_lines' → logprob: -10.3635835647583
    8. '<|end|>' → logprob: -10.7385835647583
    9. '	lines' → logprob: -11.7385835647583
    10. '(lines' → logprob: -12.1135835647583

Token 507: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028696097433567047
    2. '
' → logprob: -8.875287055969238
    3. '            
' → logprob: -9.000287055969238
    4. '       ' → logprob: -12.000287055969238
    5. ',' → logprob: -12.250287055969238
    6. '          ' → logprob: -12.625287055969238
    7. '    
' → logprob: -13.250287055969238
    8. '               ' → logprob: -14.000287055969238
    9. '        
' → logprob: -14.375287055969238
    10. '		' → logprob: -14.500287055969238

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008904983988031745
    2. '       ' → logprob: -7.375890731811523
    3. '            
' → logprob: -8.875890731811523
    4. ' try' → logprob: -9.750890731811523
    5. '          ' → logprob: -11.250890731811523
    6. '        
' → logprob: -12.000890731811523
    7. ',' → logprob: -12.125890731811523
    8. '   ' → logprob: -12.250890731811523
    9. '               ' → logprob: -12.375890731811523
    10. 'try' → logprob: -12.625890731811523

Token 509: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' (adapté à ' pair') → logprob: -0.02821425162255764
    2. '           ' → logprob: -4.278214454650879
    3. ' pair' → logprob: -5.278214454650879
    4. 'try' → logprob: -5.403214454650879
    5. 'integer' → logprob: -5.528214454650879
    6. 'pairs' → logprob: -9.403214454650879
    7. 'ip' → logprob: -9.528214454650879
    8. 'int' → logprob: -9.778214454650879
    9. ' try' → logprob: -9.903214454650879
    10. ' integer' → logprob: -10.403214454650879

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00014060820103622973
    2. '=' → logprob: -8.875140190124512
    3. ':' → logprob: -14.375140190124512
    4. ' ' → logprob: -16.250141143798828
    5. ' =
' → logprob: -18.875141143798828
    6. '<|end|>' → logprob: -19.000141143798828
    7. ')' → logprob: -19.250141143798828
    8. 's' → logprob: -19.375141143798828
    9. '	' → logprob: -19.875141143798828
    10. '.' → logprob: -20.000141143798828

Token 511: ' Data' (ID: 4833)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.03804149478673935
    2. ' Data' → logprob: -3.288041591644287
    3. '	Data' → logprob: -17.913042068481445
    4. ' data' → logprob: -20.538042068481445
    5. '_Data' → logprob: -20.663042068481445
    6. 'Dat' → logprob: -20.663042068481445
    7. '\Data' → logprob: -20.788042068481445
    8. '<Data' → logprob: -20.788042068481445
    9. '(Data' → logprob: -22.038042068481445
    10. '@Data' → logprob: -22.538042068481445

Token 512: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.0280383548888494e-06
    2. 'Parse' → logprob: -14.125000953674316
    3. 'Pair' → logprob: -15.625000953674316
    4. 'Parsed' → logprob: -18.000001907348633
    5. 'parser' → logprob: -18.250001907348633
    6. 'Processor' → logprob: -18.625001907348633
    7. '.Parser' → logprob: -19.875001907348633
    8. 'Parsing' → logprob: -19.875001907348633
    9. ' Parser' → logprob: -19.875001907348633
    10. '_parser' → logprob: -19.875001907348633

Token 513: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.0005549400229938328
    2. '.' → logprob: -7.500555038452148
    3. ' .' → logprob: -14.000555038452148
    4. '.decode' → logprob: -14.125555038452148
    5. 'parse' → logprob: -16.12555503845215
    6. '.deserialize' → logprob: -16.25055503845215
    7. '   ' → logprob: -16.75055503845215
    8. '.convert' → logprob: -17.50055503845215
    9. '.process' → logprob: -18.00055503845215
    10. '=parse' → logprob: -18.25055503845215

Token 514: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: 0.0
    2. '_l' → logprob: -18.875
    3. '_Line' → logprob: -18.875
    4. 'Line' → logprob: -19.0
    5. '_' → logprob: -19.25
    6. 'line' → logprob: -19.375
    7. '_LINE' → logprob: -20.0
    8. '_lin' → logprob: -20.75
    9. '```' → logprob: -22.25
    10. '\' → logprob: -22.5

Token 515: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -18.375
    3. '_t' → logprob: -20.125
    4. '_' → logprob: -20.625
    5. 'To' → logprob: -21.375
    6. ' _' → logprob: -21.625
    7. '_TO' → logprob: -21.75
    8. '
' → logprob: -21.875
    9. '_
' → logprob: -22.0
    10. '```' → logprob: -22.0

Token 516: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.2520393431186676
    2. 'integer' → logprob: -1.5020393133163452
    3. 'Integer' → logprob: -9.127038955688477
    4. ' integer' → logprob: -14.252038955688477
    5. 'teger' → logprob: -15.127038955688477
    6. '_INTEGER' → logprob: -15.377038955688477
    7. '_Integer' → logprob: -15.627038955688477
    8. '(integer' → logprob: -16.752038955688477
    9. 'INTEGER' → logprob: -17.002038955688477
    10. 'int' → logprob: -17.752038955688477

Token 517: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.014567844569683075
    2. 'Pair' → logprob: -4.264567852020264
    3. 'pair' → logprob: -7.889567852020264
    4. '_' → logprob: -11.514567375183105
    5. '_pairs' → logprob: -11.514567375183105
    6. '_PAIR' → logprob: -12.764567375183105
    7. ' pair' → logprob: -13.139567375183105
    8. '_p' → logprob: -13.514567375183105
    9. '_
' → logprob: -14.889567375183105
    10. ' _' → logprob: -15.139567375183105

Token 518: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0019326817709952593
    2. '(pair' → logprob: -6.251932621002197
    3. '(' → logprob: -12.501933097839355
    4. '(
' → logprob: -15.751933097839355
    5. ' (' → logprob: -17.25193214416504
    6. '(Line' → logprob: -17.37693214416504
    7. '[line' → logprob: -17.75193214416504
    8. '#line' → logprob: -17.87693214416504
    9. '(row' → logprob: -18.37693214416504
    10. '=line' → logprob: -18.62693214416504

Token 519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6599672436714172
    2. '           ' → logprob: -1.0349671840667725
    3. ')
' → logprob: -2.2849671840667725
    4. '
' → logprob: -3.7849671840667725
    5. '            
' → logprob: -6.034967422485352
    6. '<|end|>' → logprob: -7.784967422485352
    7. '       ' → logprob: -8.909967422485352
    8. ',' → logprob: -9.284967422485352
    9. '    
' → logprob: -9.909967422485352
    10. '        
' → logprob: -9.909967422485352

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035106997936964035
    2. 'g' → logprob: -3.410106897354126
    3. ' gcd' → logprob: -6.660107135772705
    4. '       ' → logprob: -9.910106658935547
    5. '
' → logprob: -10.035106658935547
    6. '            
' → logprob: -11.035106658935547
    7. 'a' → logprob: -11.410106658935547
    8. '          ' → logprob: -11.535106658935547
    9. 'gc' → logprob: -11.535106658935547
    10. '               ' → logprob: -11.660106658935547

Token 521: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0282337237149477
    2. ' gcd' → logprob: -3.653233766555786
    3. '           ' → logprob: -6.278233528137207
    4. ' g' → logprob: -10.903233528137207
    5. 'gc' → logprob: -10.903233528137207
    6. '_g' → logprob: -12.153233528137207
    7. 'gcc' → logprob: -13.528233528137207
    8. '       ' → logprob: -13.778233528137207
    9. 'result' → logprob: -13.778233528137207
    10. 'gd' → logprob: -13.903233528137207

Token 522: '_val' (ID: 13694)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.954393079970032e-05
    2. '_' → logprob: -10.125049591064453
    3. '_val' → logprob: -11.625049591064453
    4. '_v' → logprob: -15.750049591064453
    5. ' =' → logprob: -16.125049591064453
    6. 'value' → logprob: -16.500049591064453
    7. '=' → logprob: -16.625049591064453
    8. 'Value' → logprob: -18.000049591064453
    9. '_=' → logprob: -18.000049591064453
    10. '=_' → logprob: -18.500049591064453

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8431589007377625
    2. '=' → logprob: -1.0931589603424072
    3. 'ue' → logprob: -1.4681589603424072
    4. 'u' → logprob: -6.218158721923828
    5. '       ' → logprob: -6.718158721923828
    6. '_value' → logprob: -7.718158721923828
    7. ',' → logprob: -8.593158721923828
    8. '   ' → logprob: -8.843158721923828
    9. 'ues' → logprob: -10.468158721923828
    10. 'e' → logprob: -10.718158721923828

Token 524: ' Math' (ID: 7268)
  Prédit: 'Math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Math' → logprob: -7.941850526549388e-06
    2. ' Math' → logprob: -11.750007629394531
    3. '           ' → logprob: -18.25000762939453
    4. '               ' → logprob: -22.25000762939453
    5. '(Math' → logprob: -22.50000762939453
    6. 'Mat' → logprob: -22.87500762939453
    7. '[Math' → logprob: -23.25000762939453
    8. '=Math' → logprob: -23.25000762939453
    9. '   ' → logprob: -23.37500762939453
    10. '
' → logprob: -23.50000762939453

Token 525: 'Utils' (ID: 5687)
  Prédit: 'Utils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Utils' → logprob: -6.630610641877865e-06
    2. 'Util' → logprob: -12.250006675720215
    3. 'utils' → logprob: -13.875006675720215
    4. 'U' → logprob: -15.000006675720215
    5. 'Ut' → logprob: -15.625006675720215
    6. '_utils' → logprob: -16.2500057220459
    7. '.Utils' → logprob: -16.3750057220459
    8. ' Utils' → logprob: -16.6250057220459
    9. 'Math' → logprob: -17.2500057220459
    10. '(Utils' → logprob: -17.2500057220459

Token 526: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0001105762057704851
    2. '.' → logprob: -9.125110626220703
    3. ' .' → logprob: -13.875110626220703
    4. '().' → logprob: -16.000110626220703
    5. '(g' → logprob: -16.250110626220703
    6. 'g' → logprob: -16.625110626220703
    7. '​.' → logprob: -16.750110626220703
    8. '```' → logprob: -16.875110626220703
    9. '   ' → logprob: -17.000110626220703
    10. ').' → logprob: -17.375110626220703

Token 527: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -4.320199877838604e-07
    2. 'c' → logprob: -15.5
    3. 'cdn' → logprob: -16.125
    4. 'd' → logprob: -16.375
    5. 'sd' → logprob: -17.75
    6. 'CD' → logprob: -17.875
    7. '{' → logprob: -18.375
    8. '
' → logprob: -18.5
    9. 'dc' → logprob: -18.5
    10. 'id' → logprob: -19.125

Token 528: '(pair' (ID: 84884)
  Prédit: '(pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -2.6656825866666622e-05
    2. 'pair' → logprob: -10.62502670288086
    3. '(' → logprob: -13.12502670288086
    4. '(
' → logprob: -16.12502670288086
    5. ' pair' → logprob: -16.12502670288086
    6. '(pa' → logprob: -16.62502670288086
    7. '<pair' → logprob: -17.25002670288086
    8. ' (' → logprob: -19.25002670288086
    9. '((' → logprob: -19.25002670288086
    10. '(part' → logprob: -19.37502670288086

Token 529: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0034512223210185766
    2. '.' → logprob: -5.753451347351074
    3. 'a' → logprob: -8.878451347351074
    4. ' .' → logprob: -9.628451347351074
    5. '._' → logprob: -10.503451347351074
    6. ').' → logprob: -11.503451347351074
    7. ')' → logprob: -11.753451347351074
    8. '(a' → logprob: -12.378451347351074
    9. '_a' → logprob: -12.628451347351074
    10. '.b' → logprob: -13.128451347351074

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028493450372479856
    2. ' ,' → logprob: -8.500285148620605
    3. ',p' → logprob: -9.625285148620605
    4. ',
' → logprob: -12.125285148620605
    5. 'pair' → logprob: -12.125285148620605
    6. '(pair' → logprob: -13.125285148620605
    7. ')' → logprob: -14.250285148620605
    8. ' pair' → logprob: -14.625285148620605
    9. ',b' → logprob: -14.750285148620605
    10. '<|end|>' → logprob: -15.250285148620605

Token 531: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.00280558317899704
    2. ' pair' → logprob: -5.877805709838867
    3. '(pair' → logprob: -15.002805709838867
    4. '           ' → logprob: -16.627805709838867
    5. '   ' → logprob: -17.002805709838867
    6. '
' → logprob: -17.002805709838867
    7. 'pairs' → logprob: -17.377805709838867
    8. 'partner' → logprob: -17.502805709838867
    9. 'peer' → logprob: -17.502805709838867
    10. 'p' → logprob: -17.502805709838867

Token 532: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00034654809860512614
    2. 'b' → logprob: -8.000346183776855
    3. '.' → logprob: -11.500346183776855
    4. ')' → logprob: -14.625346183776855
    5. ' .' → logprob: -16.000347137451172
    6. '	b' → logprob: -16.125347137451172
    7. '_b' → logprob: -16.250347137451172
    8. ' b' → logprob: -16.875347137451172
    9. ')b' → logprob: -17.125347137451172
    10. ').' → logprob: -17.375347137451172

Token 533: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5182355642318726
    2. ')' → logprob: -1.0182355642318726
    3. '           ' → logprob: -3.143235683441162
    4. ' )
' → logprob: -11.018235206604004
    5. ')
' → logprob: -11.268235206604004
    6. '
' → logprob: -12.393235206604004
    7. ')

' → logprob: -12.518235206604004
    8. ',' → logprob: -12.893235206604004
    9. '       ' → logprob: -13.018235206604004
    10. ' )' → logprob: -13.018235206604004

Token 534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006395607255399227
    2. ' l' → logprob: -5.6313958168029785
    3. 'l' → logprob: -6.5063958168029785
    4. '
' → logprob: -6.7563958168029785
    5. '            
' → logprob: -9.50639533996582
    6. '		' → logprob: -10.75639533996582
    7. '               ' → logprob: -12.00639533996582
    8. '       ' → logprob: -12.38139533996582
    9. '
' → logprob: -12.50639533996582
    10. '          ' → logprob: -12.75639533996582

Token 535: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.1619243025779724
    2. ' l' → logprob: -1.9119243621826172
    3. '           ' → logprob: -6.411924362182617
    4. 'lc' → logprob: -9.911924362182617
    5. ' lc' → logprob: -12.911924362182617
    6. '   ' → logprob: -13.786924362182617
    7. '	l' → logprob: -14.411924362182617
    8. '       ' → logprob: -14.536924362182617
    9. '               ' → logprob: -14.786924362182617
    10. 'lcd' → logprob: -14.786924362182617

Token 536: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.875000953674316
    3. ' cm' → logprob: -15.250000953674316
    4. 'c' → logprob: -15.375000953674316
    5. 'val' → logprob: -15.500000953674316
    6. 'cms' → logprob: -16.750001907348633
    7. 'm' → logprob: -17.000001907348633
    8. '#' → logprob: -17.625001907348633
    9. 'l' → logprob: -17.875001907348633
    10. '
' → logprob: -18.000001907348633

Token 537: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.9160102712921798e-05
    2. '_' → logprob: -10.500029563903809
    3. '_value' → logprob: -14.750029563903809
    4. '_va' → logprob: -15.000029563903809
    5. '_v' → logprob: -15.125029563903809
    6. '=_' → logprob: -15.375029563903809
    7. 'val' → logprob: -16.250028610229492
    8. ' _' → logprob: -16.250028610229492
    9. ' =' → logprob: -16.500028610229492
    10. '=' → logprob: -16.750028610229492

Token 538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.201414108276367
    4. '    ' → logprob: -18.076414108276367
    5. '   ' → logprob: -18.076414108276367
    6. ':' → logprob: -18.576414108276367
    7. ',' → logprob: -18.826414108276367
    8. '＝' → logprob: -19.076414108276367
    9. '	' → logprob: -19.326414108276367
    10. '            ' → logprob: -19.451414108276367

Token 539: ' Math' (ID: 7268)
  Prédit: 'Math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Math' → logprob: -0.10020667314529419
    2. ' Math' → logprob: -2.3502066135406494
    3. ' math' → logprob: -17.85020637512207
    4. '           ' → logprob: -18.47520637512207
    5. 'math' → logprob: -18.85020637512207
    6. '   ' → logprob: -18.85020637512207
    7. ' ' → logprob: -19.35020637512207
    8. 'M' → logprob: -19.60020637512207
    9. 'Mat' → logprob: -19.60020637512207
    10. '    ' → logprob: -20.10020637512207

Token 540: 'Utils' (ID: 5687)
  Prédit: 'Utils'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Utils' → logprob: -1.0564331205387134e-05
    2. 'utils' → logprob: -12.25001049041748
    3. 'c' → logprob: -13.12501049041748
    4. 'Math' → logprob: -13.12501049041748
    5. 'cm' → logprob: -14.12501049041748
    6. 'Util' → logprob: -14.87501049041748
    7. ' Utils' → logprob: -15.25001049041748
    8. '_utils' → logprob: -15.37501049041748
    9. '(Utils' → logprob: -17.375011444091797
    10. 'm' → logprob: -17.750011444091797

Token 541: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -3.011373155459296e-05
    2. '.' → logprob: -10.500030517578125
    3. '.linalg' → logprob: -14.250030517578125
    4. ' .' → logprob: -15.250030517578125
    5. '.ll' → logprob: -15.375030517578125
    6. '·l' → logprob: -15.375030517578125
    7. '․' → logprob: -15.750030517578125
    8. '._' → logprob: -16.000030517578125
    9. '.fml' → logprob: -16.125030517578125
    10. '.liferay' → logprob: -16.250030517578125

Token 542: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.5451681974809617e-05
    2. 'c' → logprob: -11.500015258789062
    3. 'm' → logprob: -12.250015258789062
    4. ' cm' → logprob: -15.625015258789062
    5. 'cms' → logprob: -15.875015258789062
    6. '   ' → logprob: -16.125015258789062
    7. '
' → logprob: -17.750015258789062
    8. 'sm' → logprob: -18.625015258789062
    9. 'l' → logprob: -18.875015258789062
    10. 'cd' → logprob: -18.875015258789062

Token 543: '(pair' (ID: 84884)
  Prédit: '(pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -1.2664456789934775e-06
    2. 'pair' → logprob: -14.375000953674316
    3. '(' → logprob: -14.500000953674316
    4. '(
' → logprob: -17.500001907348633
    5. ' pair' → logprob: -17.750001907348633
    6. ' (' → logprob: -18.375001907348633
    7. '(part' → logprob: -18.625001907348633
    8. '<pair' → logprob: -18.750001907348633
    9. '(pa' → logprob: -21.750001907348633
    10. '(pool' → logprob: -22.000001907348633

Token 544: '.a' (ID: 8772)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.004758460912853479
    2. 'pair' → logprob: -6.129758358001709
    3. 'val' → logprob: -6.379758358001709
    4. ' pair' → logprob: -8.629758834838867
    5. ')' → logprob: -8.754758834838867
    6. 'a' → logprob: -9.004758834838867
    7. '_val' → logprob: -9.129758834838867
    8. ',' → logprob: -9.379758834838867
    9. '(' → logprob: -9.754758834838867
    10. '<pair' → logprob: -10.504758834838867

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003110327525064349
    2. ' ,' → logprob: -8.500310897827148
    3. '(pair' → logprob: -9.250310897827148
    4. ',p' → logprob: -12.250310897827148
    5. 'pair' → logprob: -12.500310897827148
    6. ' pair' → logprob: -13.375310897827148
    7. '           ' → logprob: -14.500310897827148
    8. ',
' → logprob: -14.625310897827148
    9. '(),' → logprob: -14.875310897827148
    10. ')' → logprob: -17.00031089782715

Token 546: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.005234356038272381
    2. ' pair' → logprob: -5.255234241485596
    3. '(pair' → logprob: -14.255234718322754
    4. '<pair' → logprob: -18.630233764648438
    5. '_pair' → logprob: -18.755233764648438
    6. 'peer' → logprob: -19.005233764648438
    7. '           ' → logprob: -19.255233764648438
    8. 'Pair' → logprob: -19.630233764648438
    9. 'pairs' → logprob: -20.005233764648438
    10. ' ' → logprob: -20.130233764648438

Token 547: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0019581327214837074
    2. 'b' → logprob: -6.75195837020874
    3. ',' → logprob: -7.50195837020874
    4. ',b' → logprob: -9.376957893371582
    5. 'val' → logprob: -9.626957893371582
    6. '_val' → logprob: -10.251957893371582
    7. 'Val' → logprob: -10.626957893371582
    8. '```' → logprob: -12.376957893371582
    9. '   ' → logprob: -12.626957893371582
    10. ' ' → logprob: -12.751957893371582

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014185652835294604
    2. ',g' → logprob: -6.876418590545654
    3. ' ,' → logprob: -7.876418590545654
    4. 'g' → logprob: -12.251418113708496
    5. ')' → logprob: -14.251418113708496
    6. ',p' → logprob: -15.626418113708496
    7. ',
' → logprob: -15.626418113708496
    8. '   ' → logprob: -16.626419067382812
    9. '```' → logprob: -16.876419067382812
    10. '(g' → logprob: -17.126419067382812

Token 549: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0036366537678986788
    2. ' gcd' → logprob: -5.628636837005615
    3. '   ' → logprob: -10.753636360168457
    4. 'gc' → logprob: -12.628636360168457
    5. 'gcc' → logprob: -12.753636360168457
    6. 'gd' → logprob: -12.753636360168457
    7. '	g' → logprob: -13.253636360168457
    8. '       ' → logprob: -13.878636360168457
    9. '           ' → logprob: -14.378636360168457
    10. '     ' → logprob: -14.753636360168457

Token 550: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.005538607947528362
    2. '_value' → logprob: -5.255538463592529
    3. 'val' → logprob: -8.880538940429688
    4. '_' → logprob: -9.630538940429688
    5. 'value' → logprob: -9.755538940429688
    6. '_v' → logprob: -10.755538940429688
    7. '_va' → logprob: -11.755538940429688
    8. 'Val' → logprob: -12.880538940429688
    9. ')' → logprob: -13.380538940429688
    10. '__' → logprob: -14.255538940429688

Token 551: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07945071160793304
    2. ')' → logprob: -2.5794506072998047
    3. 'g' → logprob: -7.704450607299805
    4. '   ' → logprob: -10.704450607299805
    5. '=' → logprob: -10.704450607299805
    6. ' )
' → logprob: -10.704450607299805
    7. ')

' → logprob: -10.954450607299805
    8. '=g' → logprob: -11.579450607299805
    9. ')
' → logprob: -11.579450607299805
    10. '_)
' → logprob: -13.704450607299805

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9862216504407115e-05
    2. '
' → logprob: -11.000020027160645
    3. '            
' → logprob: -13.375020027160645
    4. '       ' → logprob: -14.250020027160645
    5. '          ' → logprob: -15.750020027160645
    6. ' self' → logprob: -15.750020027160645
    7. 'self' → logprob: -15.875020027160645
    8. '               ' → logprob: -16.250019073486328
    9. '		' → logprob: -16.500019073486328
    10. '   ' → logprob: -17.000019073486328

Token 553: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5131021738052368
    2. 'self' (adapté à ' self') → logprob: -1.0131021738052368
    3. ' self' → logprob: -3.2631020545959473
    4. '       ' → logprob: -13.138102531433105
    5. '   ' → logprob: -14.013102531433105
    6. '	self' → logprob: -14.888102531433105
    7. ' ' → logprob: -15.138102531433105
    8. '          ' → logprob: -15.513102531433105
    9. '		' → logprob: -16.63810157775879
    10. '               ' → logprob: -16.76310157775879

Token 554: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.7432603272027336e-06
    2. 'output' → logprob: -13.375001907348633
    3. '.input' → logprob: -16.625001907348633
    4. '	output' → logprob: -18.250001907348633
    5. '.' → logprob: -18.500001907348633
    6. '_output' → logprob: -18.625001907348633
    7. '$output' → logprob: -19.375001907348633
    8. ' .' → logprob: -19.500001907348633
    9. '.outputs' → logprob: -20.375001907348633
    10. '._' → logprob: -20.875001907348633

Token 555: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.9361264946837764e-07
    2. '_handle' → logprob: -17.0
    3. '_hand' → logprob: -17.125
    4. '_output' → logprob: -18.375
    5. '_controller' → logprob: -19.0
    6. '_manager' → logprob: -19.5
    7. '_writer' → logprob: -19.625
    8. '_HANDLER' → logprob: -20.375
    9. '_handlers' → logprob: -20.375
    10. '_Handler' → logprob: -21.0

Token 556: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -5.955703818472102e-05
    2. '.' → logprob: -9.750059127807617
    3. 'print' → logprob: -14.125059127807617
    4. ' .' → logprob: -15.500059127807617
    5. '.println' → logprob: -16.000059127807617
    6. '.
' → logprob: -17.750059127807617
    7. '.p' → logprob: -17.875059127807617
    8. '.pr' → logprob: -18.500059127807617
    9. '._' → logprob: -18.875059127807617
    10. '.save' → logprob: -19.250059127807617

Token 557: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. 'result' → logprob: -16.375
    4. '_res' → logprob: -17.125
    5. '__' → logprob: -17.75
    6. '_r' → logprob: -18.0
    7. ' _' → logprob: -18.5
    8. '_results' → logprob: -19.5
    9. '_RESULT' → logprob: -19.875
    10. 's' → logprob: -20.0

Token 558: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.00023739055905025452
    2. '(' → logprob: -8.375237464904785
    3. '(
' → logprob: -12.000237464904785
    4. 'g' → logprob: -14.750237464904785
    5. ' (' → logprob: -16.25023651123047
    6. '(f' → logprob: -17.12523651123047
    7. '(

' → logprob: -17.62523651123047
    8. '```' → logprob: -17.75023651123047
    9. '()' → logprob: -18.75023651123047
    10. '(c' → logprob: -18.87523651123047

Token 559: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00016432604752480984
    2. 'c' → logprob: -8.750164031982422
    3. 'd' → logprob: -12.625164031982422
    4. '   ' → logprob: -15.000164031982422
    5. '```' → logprob: -15.000164031982422
    6. '
' → logprob: -15.375164031982422
    7. 'cdf' → logprob: -15.750164031982422
    8. 'cdn' → logprob: -15.750164031982422
    9. 'id' → logprob: -16.000164031982422
    10. '_cd' → logprob: -16.125164031982422

Token 560: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.375000953674316
    3. 'val' → logprob: -14.875000953674316
    4. '_value' → logprob: -15.625000953674316
    5. '_va' → logprob: -17.375001907348633
    6. ')_' → logprob: -17.625001907348633
    7. '_VAL' → logprob: -17.750001907348633
    8. '_v' → logprob: -18.000001907348633
    9. '_,' → logprob: -18.125001907348633
    10. ',_' → logprob: -18.125001907348633

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ',l' → logprob: -12.000007629394531
    3. ' ,' → logprob: -14.000007629394531
    4. ',
' → logprob: -14.375007629394531
    5. '‌,' → logprob: -17.50000762939453
    6. ',ll' → logprob: -17.62500762939453
    7. ',",' → logprob: -18.12500762939453
    8. ',

' → logprob: -18.37500762939453
    9. ',\
' → logprob: -18.87500762939453
    10. ',p' → logprob: -19.50000762939453

Token 562: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.018150877207517624
    2. 'l' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.14315128326416
    4. '	l' → logprob: -16.143150329589844
    5. 'lc' → logprob: -16.268150329589844
    6. ')' → logprob: -17.768150329589844
    7. 'space' → logprob: -18.268150329589844
    8. ' ' → logprob: -18.268150329589844
    9. '    ' → logprob: -18.768150329589844
    10. '_l' → logprob: -19.018150329589844

Token 563: 'cm' (ID: 7871)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5883475542068481
    2. 'cm' → logprob: -1.0883475542068481
    3. '_val' → logprob: -2.4633474349975586
    4. 'c' → logprob: -3.8383474349975586
    5. 'val' → logprob: -6.838347434997559
    6. 'Val' → logprob: -10.213347434997559
    7. 'l' → logprob: -10.588347434997559
    8. '```' → logprob: -10.588347434997559
    9. 'cl' → logprob: -10.963347434997559
    10. '_cm' → logprob: -11.213347434997559

Token 564: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -9.126521035796031e-05
    2. 'val' → logprob: -9.375091552734375
    3. 'al' → logprob: -12.750091552734375
    4. ')' → logprob: -13.500091552734375
    5. '_' → logprob: -14.875091552734375
    6. '_value' → logprob: -14.875091552734375
    7. '_)' → logprob: -15.250091552734375
    8. ')_' → logprob: -15.250091552734375
    9. 'alue' → logprob: -16.000091552734375
    10. '_VAL' → logprob: -16.125091552734375

Token 565: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003888470819219947
    2. ')
' → logprob: -7.8753886222839355
    3. ' )' → logprob: -12.500389099121094
    4. '()' → logprob: -13.875389099121094
    5. '<|end|>' → logprob: -13.875389099121094
    6. '())' → logprob: -14.250389099121094
    7. '
' → logprob: -14.250389099121094
    8. '```' → logprob: -14.625389099121094
    9. ')

' → logprob: -14.750389099121094
    10. '(' → logprob: -16.250389099121094

Token 566: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003027148311957717
    2. '#' → logprob: -5.878026962280273
    3. '```' → logprob: -8.878026962280273
    4. ' if' → logprob: -10.003026962280273
    5. '
' → logprob: -10.753026962280273
    6. '#if' → logprob: -12.253026962280273
    7. '<|end|>' → logprob: -12.378026962280273
    8. 'i' → logprob: -12.753026962280273
    9. 'def' → logprob: -13.253026962280273
    10. '    
' → logprob: -14.253026962280273

Token 567: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -3.650518920039758e-06
    2. 'main' → logprob: -13.250003814697266
    3. '_main' → logprob: -14.000003814697266
    4. ' run' → logprob: -14.250003814697266
    5. ' __' → logprob: -16.000003814697266
    6. ' solve' → logprob: -16.375003814697266
    7. '	main' → logprob: -16.500003814697266
    8. ' ma' → logprob: -18.625003814697266
    9. ' mains' → logprob: -19.000003814697266
    10. ' _' → logprob: -19.125003814697266

Token 568: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.546478935983032e-05
    2. '():
' → logprob: -11.500025749206543
    3. ' ():' → logprob: -11.625025749206543
    4. '()' → logprob: -12.000025749206543
    5. ':' → logprob: -16.750024795532227
    6. '()>' → logprob: -16.875024795532227
    7. '(' → logprob: -16.875024795532227
    8. '():
' → logprob: -17.000024795532227
    9. '_' → logprob: -17.500024795532227
    10. '(":' → logprob: -18.625024795532227

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029840858653187752
    2. ' input' → logprob: -3.6548409461975098
    3. ' import' → logprob: -6.15484094619751
    4. 'input' → logprob: -7.15484094619751
    5. 'import' → logprob: -7.77984094619751
    6. ' ip' → logprob: -9.404840469360352
    7. '   ' → logprob: -9.404840469360352
    8. '	input' → logprob: -11.154840469360352
    9. '	import' → logprob: -11.779840469360352
    10. '	ip' → logprob: -12.404840469360352

Token 570: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.3496088981628418
    2. ' input' → logprob: -1.2246088981628418
    3. 'ip' → logprob: -7.974608898162842
    4. '   ' → logprob: -8.224609375
    5. 'import' → logprob: -8.224609375
    6. ' ip' → logprob: -8.724609375
    7. 'inp' → logprob: -9.974609375
    8. ' inp' → logprob: -10.474609375
    9. ' import' → logprob: -10.849609375
    10. 'in' → logprob: -11.849609375

Token 571: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -0.0005100222188048065
    2. '_' → logprob: -7.625510215759277
    3. '_pro' → logprob: -11.750510215759277
    4. '_source' → logprob: -12.000510215759277
    5. '_handler' → logprob: -12.375510215759277
    6. '_reader' → logprob: -13.875510215759277
    7. '_processor' → logprob: -14.125510215759277
    8. '_p' → logprob: -14.875510215759277
    9. '_=' → logprob: -15.000510215759277
    10. '_controller' → logprob: -15.500510215759277

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931517124176025
    2. ' =' → logprob: -0.6931517124176025
    3. '   ' → logprob: -13.193151473999023
    4. '=input' → logprob: -13.818151473999023
    5. '()' → logprob: -14.193151473999023
    6. ' ' → logprob: -14.818151473999023
    7. '_' → logprob: -15.568151473999023
    8. ')' → logprob: -15.568151473999023
    9. '=

' → logprob: -16.443151473999023
    10. ',' → logprob: -16.818151473999023

Token 573: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.12692810595035553
    2. ' Input' → logprob: -2.1269280910491943
    3. '	Input' → logprob: -17.501928329467773
    4. '_Input' → logprob: -20.626928329467773
    5. '<Input' → logprob: -21.126928329467773
    6. '_input' → logprob: -22.126928329467773
    7. '\Input' → logprob: -22.126928329467773
    8. '.Input' → logprob: -22.626928329467773
    9. 'Output' → logprob: -22.876928329467773
    10. ' ' → logprob: -23.251928329467773

Token 574: 'Provider' (ID: 5999)
  Prédit: 'Provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Provider' → logprob: -5.512236498361744e-07
    2. 'Provid' → logprob: -15.500000953674316
    3. ' Provider' → logprob: -16.25
    4. '_PROVIDER' → logprob: -17.0
    5. '_provider' → logprob: -17.125
    6. 'Providers' → logprob: -17.5
    7. 'Provided' → logprob: -18.0
    8. '.Provider' → logprob: -18.375
    9. 'Prov' → logprob: -18.375
    10. 'Processor' → logprob: -18.5

Token 575: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02976403571665287
    2. '()
' → logprob: -3.52976393699646
    3. '()

' → logprob: -12.529764175415039
    4. '()
' → logprob: -13.029764175415039
    5. '   ' → logprob: -13.279764175415039
    6. '(output' → logprob: -13.279764175415039
    7. '()\' → logprob: -13.529764175415039
    8. '(),' → logprob: -14.154764175415039
    9. '(' → logprob: -14.154764175415039
    10. '(
' → logprob: -15.154764175415039

Token 576: '   ' (ID: 271)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.7665413618087769
    2. '   ' → logprob: -0.8915413618087769
    3. ' output' → logprob: -2.1415414810180664
    4. '
' → logprob: -5.016541481018066
    5. '	output' → logprob: -6.891541481018066
    6. '```' → logprob: -9.391541481018066
    7. '_output' → logprob: -9.766541481018066
    8. '    
' → logprob: -10.516541481018066
    9. ' 
' → logprob: -11.266541481018066
    10. '(output' → logprob: -11.391541481018066

Token 577: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.3132648468017578
    2. ' output' → logprob: -1.3132648468017578
    3. '	output' → logprob: -13.688264846801758
    4. '   ' → logprob: -14.313264846801758
    5. '_output' → logprob: -14.313264846801758
    6. 'Output' → logprob: -15.188264846801758
    7. '(output' → logprob: -15.813264846801758
    8. '
' → logprob: -16.188264846801758
    9. '$output' → logprob: -16.688264846801758
    10. '```' → logprob: -17.188264846801758

Token 578: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -3.416665640543215e-05
    2. '_' → logprob: -11.37503433227539
    3. '_provider' → logprob: -11.50003433227539
    4. '_handle' → logprob: -12.25003433227539
    5. 'Handler' → logprob: -12.62503433227539
    6. '_Handler' → logprob: -13.75003433227539
    7. '_controller' → logprob: -13.75003433227539
    8. ' _' → logprob: -14.50003433227539
    9. '_writer' → logprob: -14.87503433227539
    10. '_output' → logprob: -15.00003433227539

Token 579: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693093717098236
    2. '=' → logprob: -2.1269309520721436
    3. '   ' → logprob: -13.751931190490723
    4. '=input' → logprob: -13.751931190490723
    5. ')' → logprob: -15.251931190490723
    6. '(' → logprob: -15.501931190490723
    7. ' ' → logprob: -15.751931190490723
    8. '(output' → logprob: -16.376930236816406
    9. ' =
' → logprob: -17.001930236816406
    10. ',' → logprob: -17.501930236816406

Token 580: ' Output' (ID: 18315)
  Prédit: ' Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Output' → logprob: -0.5759396553039551
    2. 'Output' → logprob: -0.8259396553039551
    3. '	Output' → logprob: -15.325939178466797
    4. 'Input' → logprob: -17.950939178466797
    5. '_Output' → logprob: -18.075939178466797
    6. ' output' → logprob: -18.575939178466797
    7. '(Output' → logprob: -19.200939178466797
    8. '.Output' → logprob: -19.700939178466797
    9. ' Input' → logprob: -20.450939178466797
    10. '_output' → logprob: -20.450939178466797

Token 581: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -6.511406809295295e-06
    2. '_Handler' → logprob: -12.000006675720215
    3. '_handler' → logprob: -15.375006675720215
    4. 'Provider' → logprob: -15.750006675720215
    5. 'Output' → logprob: -16.8750057220459
    6. '_HANDLER' → logprob: -18.3750057220459
    7. '_' → logprob: -18.5000057220459
    8. 'Hand' → logprob: -18.5000057220459
    9. 'handler' → logprob: -18.6250057220459
    10. 'Handlers' → logprob: -18.7500057220459

Token 582: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001905319862999022
    2. 'processor' → logprob: -6.87690544128418
    3. ' processor' → logprob: -7.87690544128418
    4. '
' → logprob: -8.12690544128418
    5. '    
' → logprob: -8.75190544128418
    6. '_processor' → logprob: -11.75190544128418
    7. ' ' → logprob: -12.25190544128418
    8. '(process' → logprob: -12.37690544128418
    9. '  ' → logprob: -12.37690544128418
    10. 'g' → logprob: -12.50190544128418

Token 583: '   ' (ID: 271)
  Prédit: ' processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processor' → logprob: -0.29855048656463623
    2. '   ' → logprob: -2.048550605773926
    3. 'processor' → logprob: -2.048550605773926
    4. ' process' → logprob: -9.173550605773926
    5. 'process' → logprob: -9.548550605773926
    6. ' p' → logprob: -10.923550605773926
    7. '_processor' → logprob: -11.048550605773926
    8. '.processor' → logprob: -11.423550605773926
    9. ' ' → logprob: -12.048550605773926
    10. '    
' → logprob: -12.048550605773926

Token 584: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.1485348641872406
    2. ' processor' → logprob: -2.0235347747802734
    3. '   ' → logprob: -5.148534774780273
    4. 'process' → logprob: -10.898534774780273
    5. '.processor' → logprob: -12.398534774780273
    6. '_processor' → logprob: -12.898534774780273
    7. '
' → logprob: -13.273534774780273
    8. '    
' → logprob: -13.523534774780273
    9. '```' → logprob: -13.523534774780273
    10. ' ' → logprob: -13.773534774780273

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. ' =
' → logprob: -15.768150329589844
    4. '.' → logprob: -17.268150329589844
    5. '(' → logprob: -17.643150329589844
    6. ' ' → logprob: -17.643150329589844
    7. ' =
' → logprob: -18.268150329589844
    8. '	' → logprob: -18.768150329589844
    9. '_' → logprob: -18.768150329589844
    10. ' ' → logprob: -19.268150329589844

Token 586: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3132616877555847
    2. ' G' → logprob: -1.3132617473602295
    3. '	G' → logprob: -17.438261032104492
    4. '   ' → logprob: -19.313261032104492
    5. ' ' → logprob: -19.813261032104492
    6. '_G' → logprob: -21.188261032104492
    7. ' ' → logprob: -21.438261032104492
    8. '<G' → logprob: -21.563261032104492
    9. '```' → logprob: -22.438261032104492
    10. '
' → logprob: -23.313261032104492

Token 587: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -16.25
    3. 'cdn' → logprob: -16.875
    4. 'cdf' → logprob: -19.125
    5. '```' → logprob: -19.625
    6. '   ' → logprob: -19.875
    7. '
' → logprob: -19.875
    8. ' cd' → logprob: -19.875
    9. '	cd' → logprob: -19.875
    10. 'pd' → logprob: -20.5

Token 588: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.9361264946837764e-07
    2. 'Lc' → logprob: -16.25
    3. 'LC' → logprob: -17.75
    4. ' L' → logprob: -17.875
    5. 'Ls' → logprob: -19.875
    6. 'l' → logprob: -20.25
    7. 'LS' → logprob: -20.375
    8. 'Lp' → logprob: -20.375
    9. 'LObject' → logprob: -20.875
    10. '   ' → logprob: -21.0

Token 589: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0017514610663056374
    2. 'c' → logprob: -6.75175142288208
    3. 'm' → logprob: -8.001751899719238
    4. 'C' → logprob: -9.001751899719238
    5. 'L' → logprob: -9.751751899719238
    6. 'Cm' → logprob: -10.376751899719238
    7. 'cms' → logprob: -12.001751899719238
    8. 'am' → logprob: -12.126751899719238
    9. 'CM' → logprob: -12.376751899719238
    10. 'M' → logprob: -12.751751899719238

Token 590: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'processor' → logprob: -17.375
    3. 'Process' → logprob: -17.625
    4. ' Processor' → logprob: -18.875
    5. ' processor' → logprob: -19.75
    6. 'Proces' → logprob: -19.875
    7. '_processor' → logprob: -20.25
    8. 'P' → logprob: -21.0
    9. 'rocess' → logprob: -21.25
    10. 'Processors' → logprob: -21.75

Token 591: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0028571782168000937
    2. '(' → logprob: -6.002857208251953
    3. '(
' → logprob: -7.877857208251953
    4. '   ' → logprob: -13.877857208251953
    5. '(
' → logprob: -14.252857208251953
    6. '(process' → logprob: -15.002857208251953
    7. 'input' → logprob: -16.002857208251953
    8. ' (' → logprob: -16.127857208251953
    9. '(

' → logprob: -16.377857208251953
    10. '(in' → logprob: -16.502857208251953

Token 592: '_provider' (ID: 66809)
  Prédit: '_provider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_provider' → logprob: -1.2664456789934775e-06
    2. '_processor' → logprob: -14.625000953674316
    3. '_handler' → logprob: -15.500000953674316
    4. 'provider' → logprob: -15.625000953674316
    5. '_input' → logprob: -15.875000953674316
    6. '_pro' → logprob: -17.250001907348633
    7. ',' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '_controller' → logprob: -17.875001907348633
    10. '_' → logprob: -17.875001907348633

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -12.12501049041748
    3. 'output' → logprob: -13.12501049041748
    4. ',
' → logprob: -13.62501049041748
    5. '   ' → logprob: -13.87501049041748
    6. '(output' → logprob: -15.37501049041748
    7. '=' → logprob: -15.62501049041748
    8. ',input' → logprob: -16.000009536743164
    9. ')' → logprob: -16.250009536743164
    10. ' output' → logprob: -17.750009536743164

Token 594: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.061967797577381134
    2. 'output' → logprob: -2.8119678497314453
    3. '(output' → logprob: -16.561967849731445
    4. '	output' → logprob: -16.561967849731445
    5. 'Output' → logprob: -17.686967849731445
    6. '$output' → logprob: -17.811967849731445
    7. '_output' → logprob: -18.311967849731445
    8. '.output' → logprob: -19.436967849731445
    9. ' ' → logprob: -20.311967849731445
    10. ' outputs' → logprob: -21.311967849731445

Token 595: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.25
    3. 'handler' → logprob: -16.5
    4. ' _' → logprob: -17.25
    5. '_hand' → logprob: -17.375
    6. '_handle' → logprob: -17.75
    7. '_provider' → logprob: -18.0
    8. '_Handler' → logprob: -18.5
    9. '_HANDLER' → logprob: -18.75
    10. 'andler' → logprob: -18.75

Token 596: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08312202990055084
    2. ')
' → logprob: -2.9581220149993896
    3. '   ' → logprob: -3.5831220149993896
    4. '(process' → logprob: -11.208122253417969
    5. ' ' → logprob: -11.458122253417969
    6. ')
' → logprob: -12.333122253417969
    7. '()' → logprob: -12.833122253417969
    8. 'processor' → logprob: -12.833122253417969
    9. '
' → logprob: -12.958122253417969
    10. '  ' → logprob: -12.958122253417969

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020997844636440277
    2. 'processor' → logprob: -4.020998001098633
    3. ' processor' → logprob: -5.895998001098633
    4. '    
' → logprob: -10.395998001098633
    5. '
' → logprob: -10.645998001098633
    6. '_processor' → logprob: -10.770998001098633
    7. '.processor' → logprob: -11.895998001098633
    8. '  ' → logprob: -13.020998001098633
    9. '(process' → logprob: -13.020998001098633
    10. '	' → logprob: -13.270998001098633

Token 598: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.0005892522749491036
    2. ' processor' → logprob: -7.500589370727539
    3. '   ' → logprob: -10.250589370727539
    4. 'process' → logprob: -14.250589370727539
    5. '.processor' → logprob: -15.875589370727539
    6. 'processors' → logprob: -16.87558937072754
    7. '_processor' → logprob: -18.50058937072754
    8. 'proces' → logprob: -18.62558937072754
    9. 'processing' → logprob: -19.50058937072754
    10. 'producer' → logprob: -19.75058937072754

Token 599: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.0001238004770129919
    2. '.' → logprob: -9.000123977661133
    3. '.run' → logprob: -16.750123977661133
    4. 'process' → logprob: -17.000123977661133
    5. '.pro' → logprob: -17.250123977661133
    6. ' .' → logprob: -18.500123977661133
    7. '.perform' → logprob: -18.875123977661133
    8. '.
' → logprob: -19.125123977661133
    9. '.print' → logprob: -19.125123977661133
    10. '.proc' → logprob: -19.250123977661133

Token 600: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20356495678424835
    2. '
' → logprob: -2.5785648822784424
    3. 'if' → logprob: -2.8285648822784424
    4. '()
' → logprob: -3.7035648822784424
    5. '<|end|>' → logprob: -3.8285648822784424
    6. '()

' → logprob: -6.2035651206970215
    7. '```' → logprob: -7.9535651206970215
    8. '(
' → logprob: -8.953564643859863
    9. '\n' → logprob: -9.453564643859863
    10. '

' → logprob: -9.703564643859863

Token 601: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.173704271830502e-06
    2. ' if' → logprob: -13.00000286102295
    3. '```' → logprob: -14.50000286102295
    4. '
' → logprob: -14.87500286102295
    5. '#' → logprob: -16.750003814697266
    6. '<|end|>' → logprob: -17.875003814697266
    7. '	if' → logprob: -18.625003814697266
    8. '#if' → logprob: -19.250003814697266
    9. '\n' → logprob: -19.625003814697266
    10. '\' → logprob: -19.750003814697266

Token 602: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004628296010196209
    2. '__' → logprob: -5.3796281814575195
    3. '_name' → logprob: -12.25462818145752
    4. '_' → logprob: -13.12962818145752
    5. ' ' → logprob: -14.75462818145752
    6. ' ' → logprob: -15.37962818145752
    7. ' _' → logprob: -15.37962818145752
    8. 'name' → logprob: -15.75462818145752
    9. '___' → logprob: -16.504629135131836
    10. ' name' → logprob: -16.629629135131836

Token 603: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.026175931096076965
    2. ' ==' → logprob: -4.2761759757995605
    3. '==' → logprob: -4.6511759757995605
    4. '.__' → logprob: -6.9011759757995605
    5. ' __' → logprob: -7.2761759757995605
    6. '__.__' → logprob: -7.9011759757995605
    7. '__.' → logprob: -9.651175498962402
    8. '[' → logprob: -10.026175498962402
    9. '=="' → logprob: -10.151175498962402
    10. '_' → logprob: -11.026175498962402

Token 604: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.703443770878948e-06
    2. '__.__' → logprob: -11.875007629394531
    3. '__.' → logprob: -14.375007629394531
    4. '_' → logprob: -16.75000762939453
    5. '__
' → logprob: -16.87500762939453
    6. '==' → logprob: -17.37500762939453
    7. ' __' → logprob: -17.37500762939453
    8. '____' → logprob: -17.75000762939453
    9. ' ==' → logprob: -17.75000762939453
    10. '__["' → logprob: -17.87500762939453

Token 605: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01923910528421402
    2. '==' → logprob: -4.3942389488220215
    3. ' ==' → logprob: -5.1442389488220215
    4. '__.__' → logprob: -7.6442389488220215
    5. '.__' → logprob: -8.76923942565918
    6. '=="' → logprob: -8.76923942565918
    7. '.' → logprob: -10.26923942565918
    8. '_' → logprob: -11.26923942565918
    9. '=='' → logprob: -11.89423942565918
    10. '"' → logprob: -11.89423942565918

Token 606: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011068337596952915
    2. ''' → logprob: -4.511068344116211
    3. ' "__' → logprob: -10.886068344116211
    4. '"user' → logprob: -14.136068344116211
    5. '__' → logprob: -14.386068344116211
    6. '"name' → logprob: -15.886068344116211
    7. '"class' → logprob: -16.01106834411621
    8. ' '__' → logprob: -16.51106834411621
    9. ''"' → logprob: -16.88606834411621
    10. '"default' → logprob: -17.26106834411621

Token 607: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02325270138680935
    2. '__' → logprob: -3.7732527256011963
    3. '_main' → logprob: -12.273252487182617
    4. 'name' → logprob: -13.273252487182617
    5. 'built' → logprob: -15.148252487182617
    6. 'ma' → logprob: -15.898252487182617
    7. ' main' → logprob: -16.648252487182617
    8. 'python' → logprob: -16.773252487182617
    9. '___' → logprob: -17.148252487182617
    10. '-main' → logprob: -17.273252487182617

Token 608: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3871445059776306
    2. '__":
' → logprob: -1.1371445655822754
    3. '__.' → logprob: -8.637144088745117
    4. '__':
' → logprob: -10.137144088745117
    5. '__.__' → logprob: -10.137144088745117
    6. '__["' → logprob: -11.512144088745117
    7. '_' → logprob: -12.512144088745117
    8. '__:' → logprob: -13.637144088745117
    9. '__",' → logprob: -13.637144088745117
    10. '__
' → logprob: -15.262144088745117

Token 609: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002947751199826598
    2. ''' → logprob: -6.502947807312012
    3. '__' → logprob: -6.627947807312012
    4. '   ' → logprob: -9.377947807312012
    5. 'main' → logprob: -10.377947807312012
    6. ' "__' → logprob: -12.627947807312012
    7. '"_' → logprob: -14.752947807312012
    8. '___' → logprob: -14.877947807312012
    9. '____' → logprob: -15.002947807312012
    10. '_main' → logprob: -15.002947807312012

Token 610: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.875
    3. '	main' → logprob: -18.125
    4. 'm' → logprob: -20.25
    5. 'mai' → logprob: -21.125
    6. 'ma' → logprob: -22.25
    7. '(main' → logprob: -22.625
    8. '.main' → logprob: -22.625
    9. '
' → logprob: -22.75
    10. 'maine' → logprob: -22.75

Token 611: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004266558215022087
    2. '(' → logprob: -6.629266738891602
    3. '()
' → logprob: -6.629266738891602
    4. '
' → logprob: -6.754266738891602
    5. '<|end|>' → logprob: -8.754266738891602
    6. '```' → logprob: -9.004266738891602
    7. '\n' → logprob: -9.504266738891602
    8. '()\' → logprob: -10.629266738891602
    9. '#' → logprob: -11.004266738891602
    10. '(
' → logprob: -11.004266738891602


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 609
Tokens correctement prédits (1ère position, stricte): 280
Tokens correctement prédits (1ère position, avec adaptation): 313
Tokens correctement prédits (top 10): 525
Précision stricte (1ère position): 45.98%
Précision adaptée (1ère position): 51.40%
Précision (top 10): 86.21%
================================================================================
