================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Base( object ):
    """Abstract representation of a base in baseball."""
    def __init__( self ):
        self.next_base = None
        self.runner = False

    def set_next_base( self, base ):
        self.next_base = base

    def has_runner( self ):
        return self.runner

    def set_runner( self, val ):
        self.runner = val

    def advance_runner( self ):
        """
        Move runner from this base to the next base.
        If next base is None, it means home plate reached - return True for run scored.
        """
        if self.runner:
            if self.next_base is None:
                self.runner = False
                return True
            if not self.next_base.has_runner():
                self.next_base.set_runner( True )
                self.runner = False
                return False
            # If next base already occupied, recursively advance the runner on next base first
            runs_scored = self.next_base.advance_runner()
            self.next_base.set_runner( True )
            self.runner = False
            return runs_scored
        return False


class BasesManager( object ):
    """
    Manage all bases, their runners, and advancing logic.
    Uses a linked structure: First -> Second -> Third -> None (home)
    """
    def __init__( self ):
        self.first = Base()
        self.second = Base()
        self.third = Base()
        self.first.set_next_base( self.second )
        self.second.set_next_base( self.third )
        self.third.set_next_base( None )  # null next base = home plate

    def add_runner_on_first( self ):
        """
        Add a runner on first base.
        If first base is occupied, advance runner(s) accordingly before adding.
        """
        # Advance existing runners starting from third to home if needed to make room
        if self.first.has_runner():
            runs_from_advance = self.first.advance_runner()
            # if someone scored during advancement, we need to track it from outside
            # for this logic, return runs scored
            return runs_from_advance
        self.first.set_runner( True )
        return 0

    def advance_all_runners( self ):
        """
        Advance all runners by one base (used for HIT event)
        Runners on third base score.
        Return the number of runs scored.
        """
        runs = 0
        # We advance runners on third first (to score)
        if self.third.has_runner():
            runs += 1
            self.third.set_runner( False )
        # Move runners on second to third
        if self.second.has_runner():
            self.second.set_runner( False )
            self.third.set_runner( True )
        # Move runners on first to second
        if self.first.has_runner():
            self.first.set_runner( False )
            self.second.set_runner( True )
        # Finally set new runner on first base
        self.first.set_runner( True )
        return runs

    def all_runners_score_and_clear( self ):
        """
        For HOMERUN event:
        Count all runners on bases plus the batter,
        clear all bases,
        return total runs scored.
        """
        runners_count = sum( [ 1 if base.has_runner() else 0 for base in [self.first, self.second, self.third] ] )
        total_runs = runners_count + 1  # batter also scores
        self.first.set_runner( False )
        self.second.set_runner( False )
        self.third.set_runner( False )
        return total_runs

    def __str__( self ):
        """Debug state for units tests or logs."""
        return f"Bases: 1st: {self.first.has_runner()}, 2nd: {self.second.has_runner()}, 3rd: {self.third.has_runner()}"


class Inning( object ):
    """
    Representation of an inning simulation.
    Tracks outs, bases, and score.
    """
    MAX_OUTS = 3

    def __init__( self ):
        self.bases_manager = BasesManager()
        self.outs = 0
        self.score = 0
        self.ended = False

    def process_event( self, event ):
        """
        Process a single event and update the inning state.
        Returns True if inning ended due to 3 outs, else False.
        """
        if self.ended:
            # Inning already ended, ignore further events
            return True

        event = event.strip()

        if event == "HIT":
            runs_scored = self.bases_manager.advance_all_runners()
            self.score += runs_scored
        elif event == "HOMERUN":
            runs_scored = self.bases_manager.all_runners_score_and_clear()
            self.score += runs_scored
        elif event == "OUT":
            self.outs += 1
            if self.outs >= self.MAX_OUTS:
                self.ended = True
        else:
            raise ValueError( f"Unknown event: {event}" )
        return self.ended


class BaseballSimulation( object ):
    """
    Orchestrator for multiple innings/datasets and input/output handling.
    This abstraction anticipates future expansions like multiple innings, teams, etc.
    """
    def __init__( self ):
        self.innings = []

    def read_input( self, lines ):
        """
        Parses input lines to populate innings.
        Input format:
        - First line: number of datasets n
        - Next lines: events per inning (unknown number per inning; until 3 outs or eof).
        This parser expects events for each inning to be given line by line until 3 outs are reached.
        """
        n = int( lines[0].strip() )
        idx = 1
        for _ in range( n ):
            inning = Inning()
            while idx < len(lines) and not inning.ended:
                line = lines[idx].strip()
                if line == '':
                    idx += 1
                    continue
                inning.process_event( line )
                idx += 1
            self.innings.append( inning )

    def get_scores( self ):
        """Return a list of scores for all innings processed."""
        return [ inning.score for inning in self.innings ]


def main():
    import sys
    input_lines = [ line for line in sys.stdin ]
    sim = BaseballSimulation()
    sim.read_input( input_lines )
    scores = sim.get_scores()
    for score in scores:
        print( score )


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Base' (ID: 8729)
  → Token d'amorce (pas de prédiction)

Token 2: '(' (ID: 7)
  → Token d'amorce (pas de prédiction)

Token 3: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.004704119171947241
    2. '):' → logprob: -6.379703998565674
    3. ')' → logprob: -6.504703998565674
    4. ' object' → logprob: -6.754703998565674
    5. 'Object' → logprob: -8.629704475402832
    6. '   ' → logprob: -9.879704475402832
    7. '```' → logprob: -10.504704475402832
    8. ')object' → logprob: -11.004704475402832
    9. '):
' → logprob: -11.254704475402832
    10. 'Base' → logprob: -11.254704475402832

Token 4: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00875768531113863
    2. ')' → logprob: -4.758757591247559
    3. ' ):' → logprob: -9.258757591247559
    4. ':' → logprob: -10.508757591247559
    5. '):
' → logprob: -11.633757591247559
    6. ')>' → logprob: -12.883757591247559
    7. '```' → logprob: -13.133757591247559
    8. '):

' → logprob: -13.633757591247559
    9. ' )' → logprob: -13.883757591247559
    10. ')：' → logprob: -14.258757591247559

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004497381451074034
    2. ':
' → logprob: -8.000450134277344
    3. ' :' → logprob: -9.875450134277344
    4. '   ' → logprob: -10.750450134277344
    5. '```' → logprob: -11.000450134277344
    6. '():' → logprob: -11.500450134277344
    7. '    ' → logprob: -12.625450134277344
    8. '.' → logprob: -13.250450134277344
    9. '(' → logprob: -13.250450134277344
    10. '):' → logprob: -13.375450134277344

Token 6: ' """' (ID: 9280)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8221575617790222
    2. '    ' → logprob: -1.697157621383667
    3. '\n' → logprob: -1.947157621383667
    4. '   ' → logprob: -2.322157621383667
    5. ':' → logprob: -2.947157621383667
    6. '\' → logprob: -4.322157382965088
    7. ' 
' → logprob: -4.822157382965088
    8. '```' → logprob: -4.822157382965088
    9. '    
' → logprob: -5.072157382965088
    10. ' :' → logprob: -5.322157382965088

Token 7: 'Abstract' (ID: 16996)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9403815269470215
    2. '"""' → logprob: -1.1903815269470215
    3. ' """' → logprob: -1.8153815269470215
    4. ' ' → logprob: -3.4403815269470215
    5. ' """
' → logprob: -3.9403815269470215
    6. 'A' → logprob: -4.1903815269470215
    7. '```' → logprob: -4.4403815269470215
    8. 'This' → logprob: -5.3153815269470215
    9. ' 
' → logprob: -5.3153815269470215
    10. ''''' → logprob: -5.3153815269470215

Token 8: ' representation' (ID: 22311)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.39588043093681335
    2. 'class' → logprob: -1.8958804607391357
    3. ' ' → logprob: -2.8958804607391357
    4. '   ' → logprob: -3.0208804607391357
    5. ')' → logprob: -3.0208804607391357
    6. ' base' → logprob: -5.395880222320557
    7. 'Class' → logprob: -5.645880222320557
    8. '  ' → logprob: -6.020880222320557
    9. 'Base' → logprob: -6.145880222320557
    10. '
' → logprob: -6.270880222320557

Token 9: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6650049686431885
    2. ' of' → logprob: -2.0400049686431885
    3. ':' → logprob: -2.1650049686431885
    4. '   ' → logprob: -2.2900049686431885
    5. ' ' → logprob: -3.2900049686431885
    6. '<|end|>' → logprob: -4.040004730224609
    7. '```' → logprob: -4.040004730224609
    8. '):' → logprob: -4.165004730224609
    9. 'class' → logprob: -4.290004730224609
    10. '
' → logprob: -5.165004730224609

Token 10: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3712064325809479
    2. ' an' → logprob: -1.3712064027786255
    3. 'a' → logprob: -3.121206521987915
    4. ' the' → logprob: -5.746206283569336
    5. 'an' → logprob: -6.621206283569336
    6. ' base' → logprob: -6.996206283569336
    7. ')' → logprob: -7.246206283569336
    8. ' ' → logprob: -7.246206283569336
    9. ' )' → logprob: -7.246206283569336
    10. ' object' → logprob: -7.371206283569336

Token 11: ' base' (ID: 3611)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.8607379198074341
    2. ' base' → logprob: -1.485737919807434
    3. 'n' → logprob: -1.860737919807434
    4. ' ' → logprob: -3.4857378005981445
    5. ' database' → logprob: -4.3607378005981445
    6. ' data' → logprob: -4.4857378005981445
    7. 'class' → logprob: -4.4857378005981445
    8. ' resource' → logprob: -4.4857378005981445
    9. ' n' → logprob: -4.6107378005981445
    10. ' component' → logprob: -4.7357378005981445

Token 12: ' in' (ID: 306)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0601803064346313
    2. '```' → logprob: -1.3101803064346313
    3. ')' → logprob: -1.4351803064346313
    4. '"""
' → logprob: -2.810180187225342
    5. ' class' → logprob: -3.185180187225342
    6. 'class' → logprob: -3.560180187225342
    7. '   ' → logprob: -5.935180187225342
    8. ' """
' → logprob: -5.935180187225342
    9. '"""

' → logprob: -6.310180187225342
    10. '.' → logprob: -6.560180187225342

Token 13: ' baseball' (ID: 30867)
  Prédit: ' biology'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' biology' → logprob: -1.1266170740127563
    2. ' the' → logprob: -1.7516170740127563
    3. ' a' → logprob: -1.8766170740127563
    4. ' chemistry' → logprob: -2.501616954803467
    5. 'a' → logprob: -2.626616954803467
    6. 'the' → logprob: -3.501616954803467
    7. ' chess' → logprob: -3.501616954803467
    8. ' code' → logprob: -4.001616954803467
    9. ' DNA' → logprob: -4.001616954803467
    10. 'biology' → logprob: -4.126616954803467

Token 14: '."""
' (ID: 33044)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.44596338272094727
    2. ')' → logprob: -1.5709633827209473
    3. '"""' → logprob: -2.8209633827209473
    4. '"""
' → logprob: -2.9459633827209473
    5. '   ' → logprob: -3.5709633827209473
    6. '``' → logprob: -5.820963382720947
    7. ')
' → logprob: -6.695963382720947
    8. '.' → logprob: -6.945963382720947
    9. '`' → logprob: -7.195963382720947
    10. '>' → logprob: -7.195963382720947

Token 15: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18159730732440948
    2. '   ' → logprob: -3.0565972328186035
    3. '    
' → logprob: -3.1815972328186035
    4. '\n' → logprob: -4.0565972328186035
    5. ' 
' → logprob: -4.3065972328186035
    6. ':' → logprob: -4.3065972328186035
    7. ' ' → logprob: -4.8065972328186035
    8. '' → logprob: -5.3065972328186035
    9. '    ' → logprob: -5.4315972328186035
    10. '\' → logprob: -5.9315972328186035

Token 16: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37041857838630676
    2. '   ' → logprob: -2.4954185485839844
    3. '    
' → logprob: -2.7454185485839844
    4. ' 
' → logprob: -2.7454185485839844
    5. '\n' → logprob: -2.9954185485839844
    6. ':' → logprob: -4.370418548583984
    7. ' ' → logprob: -4.995418548583984
    8. '    ' → logprob: -5.245418548583984
    9. 'def' (adapté à ' def') → logprob: -5.620418548583984
    10. '```' → logprob: -5.745418548583984

Token 17: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023499473929405212
    2. '__' → logprob: -5.148499488830566
    3. ' __' → logprob: -5.273499488830566
    4. ' ' → logprob: -5.398499488830566
    5. '_' → logprob: -5.898499488830566
    6. ' )' → logprob: -7.148499488830566
    7. '    ' → logprob: -7.273499488830566
    8. ')' → logprob: -8.023499488830566
    9. ' init' → logprob: -8.023499488830566
    10. 'space' → logprob: -8.148499488830566

Token 18: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.12757961452007294
    2. 'i' → logprob: -2.127579689025879
    3. '_i' → logprob: -7.877579689025879
    4. '_' → logprob: -9.002579689025879
    5. 'ini' → logprob: -9.502579689025879
    6. 'in' → logprob: -10.252579689025879
    7. '_init' → logprob: -10.877579689025879
    8. ' i' → logprob: -11.377579689025879
    9. ' init' → logprob: -12.127579689025879
    10. 'n' → logprob: -13.002579689025879

Token 19: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6671981811523438
    2. '(' → logprob: -1.1671981811523438
    3. '__' → logprob: -1.9171981811523438
    4. '(self' → logprob: -4.667198181152344
    5. '_' → logprob: -5.292198181152344
    6. '__(
' → logprob: -5.792198181152344
    7. '<|end|>' → logprob: -5.792198181152344
    8. '```' → logprob: -6.042198181152344
    9. '_token' → logprob: -6.542198181152344
    10. 'self' → logprob: -7.292198181152344

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007613136898726225
    2. ' self' → logprob: -4.882613182067871
    3. ')' → logprob: -12.507613182067871
    4. '       ' → logprob: -13.757613182067871
    5. ' ' → logprob: -14.007613182067871
    6. '   ' → logprob: -14.882613182067871
    7. '	self' → logprob: -15.007613182067871
    8. '(self' → logprob: -15.632613182067871
    9. ' )' → logprob: -16.007612228393555
    10. ' ' → logprob: -16.257612228393555

Token 21: ' ):
' (ID: 48169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035965684219263494
    2. ' ,' → logprob: -8.625359535217285
    3. ',self' → logprob: -9.000359535217285
    4. 'self' → logprob: -10.250359535217285
    5. '):' → logprob: -11.250359535217285
    6. ' ):' → logprob: -13.500359535217285
    7. ')' → logprob: -14.000359535217285
    8. ',s' → logprob: -14.125359535217285
    9. ' self' → logprob: -14.375359535217285
    10. ' ' → logprob: -14.500359535217285

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5061560869216919
    2. '\n' → logprob: -1.756156086921692
    3. '\' → logprob: -2.6311559677124023
    4. '    ' → logprob: -3.2561559677124023
    5. '<|end|>' → logprob: -3.6311559677124023
    6. ' pass' → logprob: -3.7561559677124023
    7. '   ' → logprob: -3.8811559677124023
    8. ' ' → logprob: -4.756155967712402
    9. 'pass' → logprob: -5.131155967712402
    10. ' 
' → logprob: -5.506155967712402

Token 23: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7736154794692993
    2. 'self' (adapté à ' self') → logprob: -1.0236154794692993
    3. '\n' → logprob: -2.5236153602600098
    4. '\' → logprob: -3.7736153602600098
    5. 'pass' → logprob: -3.7736153602600098
    6. ' pass' → logprob: -4.02361536026001
    7. '<|end|>' → logprob: -4.77361536026001
    8. ' self' → logprob: -4.89861536026001
    9. '   ' → logprob: -5.27361536026001
    10. ' ' → logprob: -6.02361536026001

Token 24: '.next' (ID: 6689)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0061040474101901054
    2. ' .' → logprob: -5.506103992462158
    3. '._' → logprob: -7.006103992462158
    4. '.base' → logprob: -7.506103992462158
    5. '.is' → logprob: -8.881104469299316
    6. ' ' → logprob: -9.256104469299316
    7. '.name' → logprob: -9.881104469299316
    8. ' is' → logprob: -10.131104469299316
    9. '.next' → logprob: -10.256104469299316
    10. '.position' → logprob: -10.631104469299316

Token 25: '_base' (ID: 17096)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.318508118391037
    2. '_base' → logprob: -1.3185081481933594
    3. '_space' → logprob: -6.068508148193359
    4. ' _' → logprob: -7.193508148193359
    5. '<|end|>' → logprob: -7.318508148193359
    6. 'Base' → logprob: -7.568508148193359
    7. ' ' → logprob: -7.943508148193359
    8. 'base' → logprob: -8.56850814819336
    9. '_b' → logprob: -8.94350814819336
    10. '_bas' → logprob: -9.94350814819336

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1437414586544037
    2. '=' → logprob: -2.0187413692474365
    3. '_' → logprob: -7.518741607666016
    4. '=None' → logprob: -8.143741607666016
    5. 's' → logprob: -9.018741607666016
    6. ' ' → logprob: -10.018741607666016
    7. ':' → logprob: -11.393741607666016
    8. ' is' → logprob: -11.393741607666016
    9. ' None' → logprob: -11.643741607666016
    10. '<|end|>' → logprob: -11.643741607666016

Token 27: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.014166918583214283
    2. 'None' → logprob: -4.264166831970215
    3. ' ' → logprob: -13.389166831970215
    4. ' ' → logprob: -14.014166831970215
    5. '_None' → logprob: -14.639166831970215
    6. '(None' → logprob: -15.389166831970215
    7. '0' → logprob: -16.51416778564453
    8. ' none' → logprob: -16.76416778564453
    9. ' self' → logprob: -16.76416778564453
    10. '[]' → logprob: -17.38916778564453

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22674043476581573
    2. '<|end|>' → logprob: -2.3517403602600098
    3. ' 
' → logprob: -4.10174036026001
    4. '   ' → logprob: -4.10174036026001
    5. '\n' → logprob: -4.10174036026001
    6. ' ' → logprob: -4.22674036026001
    7. '\' → logprob: -4.60174036026001
    8. '    
' → logprob: -4.72674036026001
    9. '' → logprob: -4.97674036026001
    10. 'newline' → logprob: -5.60174036026001

Token 29: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5317195653915405
    2. '<|end|>' → logprob: -1.4067195653915405
    3. '   ' → logprob: -2.65671968460083
    4. ' ' → logprob: -3.65671968460083
    5. '    
' → logprob: -4.53171968460083
    6. '\n' → logprob: -4.65671968460083
    7. '.' → logprob: -4.78171968460083
    8. '\' → logprob: -4.78171968460083
    9. 'newline' → logprob: -5.03171968460083
    10. '<|end|>' → logprob: -5.15671968460083

Token 30: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9427781105041504
    2. '
' → logprob: -1.6927781105041504
    3. '\n' → logprob: -1.9427781105041504
    4. '<|end|>' → logprob: -2.4427781105041504
    5. '       ' → logprob: -3.0677781105041504
    6. '\' → logprob: -3.4427781105041504
    7. '    
' → logprob: -3.5677781105041504
    8. ' ' → logprob: -3.8177781105041504
    9. 'newline' → logprob: -4.06777811050415
    10. 'def' → logprob: -4.19277811050415

Token 31: '.runner' (ID: 70825)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013402211479842663
    2. '._' → logprob: -4.888401985168457
    3. '.next' → logprob: -6.263401985168457
    4. '.base' → logprob: -6.388401985168457
    5. '.current' → logprob: -6.763401985168457
    6. '.runner' → logprob: -8.388401985168457
    7. '.is' → logprob: -8.763401985168457
    8. ' .' → logprob: -9.763401985168457
    9. '.previous' → logprob: -9.763401985168457
    10. '.position' → logprob: -10.013401985168457

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4023361802101135
    2. ' =' → logprob: -1.1523361206054688
    3. '_' → logprob: -4.402336120605469
    4. 's' → logprob: -6.027336120605469
    5. '.' → logprob: -8.652336120605469
    6. ')' → logprob: -9.152336120605469
    7. ' is' → logprob: -9.527336120605469
    8. ' ' → logprob: -9.652336120605469
    9. '=None' → logprob: -10.152336120605469
    10. '_space' → logprob: -10.402336120605469

Token 33: ' False' (ID: 7983)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.011048642918467522
    2. 'None' → logprob: -4.511048793792725
    3. '(None' → logprob: -15.011048316955566
    4. '_None' → logprob: -15.386048316955566
    5. ' ' → logprob: -16.511049270629883
    6. ' False' → logprob: -16.511049270629883
    7. ' ' → logprob: -16.761049270629883
    8. ' True' → logprob: -17.136049270629883
    9. '<|end|>' → logprob: -18.011049270629883
    10. '.None' → logprob: -18.261049270629883

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8445135354995728
    2. '<|end|>' → logprob: -1.3445135354995728
    3. '\n' → logprob: -2.219513416290283
    4. '   ' → logprob: -2.594513416290283
    5. '    
' → logprob: -3.344513416290283
    6. '\' → logprob: -3.344513416290283
    7. ' ' → logprob: -4.344513416290283
    8. '' → logprob: -4.844513416290283
    9. 'newline' → logprob: -4.844513416290283
    10. ' 
' → logprob: -4.969513416290283

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6730543971061707
    2. ' ' → logprob: -1.4230544567108154
    3. '
' → logprob: -2.9230544567108154
    4. '\n' → logprob: -2.9230544567108154
    5. '<|end|>' → logprob: -3.0480544567108154
    6. '    
' → logprob: -3.6730544567108154
    7. '\' → logprob: -3.7980544567108154
    8. ' 
' → logprob: -4.173054218292236
    9. '.' → logprob: -5.298054218292236
    10. 'n' → logprob: -5.548054218292236

Token 36: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3030465543270111
    2. 'def' (adapté à ' def') → logprob: -1.5530465841293335
    3. ' ' → logprob: -3.678046464920044
    4. '   ' → logprob: -4.053046703338623
    5. '    ' → logprob: -6.303046703338623
    6. ' def' → logprob: -6.428046703338623
    7. ' 
' → logprob: -7.178046703338623
    8. '    
' → logprob: -7.678046703338623
    9. 'de' → logprob: -7.928046703338623
    10. '@' → logprob: -8.178046226501465

Token 37: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012355535291135311
    2. ' ' → logprob: -5.012355327606201
    3. ' space' → logprob: -6.137355327606201
    4. '_' → logprob: -6.387355327606201
    5. 'space' → logprob: -7.762355327606201
    6. ' __' → logprob: -8.26235580444336
    7. ' ‌' → logprob: -8.63735580444336
    8. ' is' → logprob: -8.76235580444336
    9. ' a' → logprob: -8.88735580444336
    10. ' set' → logprob: -9.26235580444336

Token 38: '_next' (ID: 25436)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0031242407858371735
    2. '_next' → logprob: -6.128124237060547
    3. '_base' → logprob: -7.128124237060547
    4. ' _' → logprob: -9.003124237060547
    5. '_space' → logprob: -12.128124237060547
    6. '_b' → logprob: -14.003124237060547
    7. '_value' → logprob: -14.378124237060547
    8. '_a' → logprob: -14.378124237060547
    9. '_target' → logprob: -14.503124237060547
    10. '_val' → logprob: -14.753124237060547

Token 39: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.16092076897621155
    2. '_' → logprob: -1.9109207391738892
    3. '(' → logprob: -7.4109206199646
    4. '_next' → logprob: -10.410921096801758
    5. ' _' → logprob: -11.410921096801758
    6. '_bas' → logprob: -11.410921096801758
    7. '_Base' → logprob: -12.160921096801758
    8. '_basis' → logprob: -12.160921096801758
    9. '_space' → logprob: -12.535921096801758
    10. '```' → logprob: -12.660921096801758

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.869639476761222e-05
    2. '(self' → logprob: -10.625039100646973
    3. ' (' → logprob: -11.375039100646973
    4. '(
' → logprob: -13.125039100646973
    5. '(

' → logprob: -14.750039100646973
    6. '_' → logprob: -16.250038146972656
    7. '<|end|>' → logprob: -16.375038146972656
    8. ')' → logprob: -16.750038146972656
    9. '(s' → logprob: -16.875038146972656
    10. '```' → logprob: -17.000038146972656

Token 41: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6345307230949402
    2. ' self' → logprob: -0.7595307230949402
    3. ')' → logprob: -7.384530544281006
    4. ' ' → logprob: -7.759530544281006
    5. '(self' → logprob: -7.759530544281006
    6. ',' → logprob: -8.759531021118164
    7. ' )' → logprob: -8.884531021118164
    8. '(' → logprob: -9.884531021118164
    9. '	self' → logprob: -10.634531021118164
    10. 's' → logprob: -10.884531021118164

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027945113833993673
    2. ' ,' → logprob: -8.250279426574707
    3. '):' → logprob: -11.625279426574707
    4. ' ):' → logprob: -12.250279426574707
    5. ',self' → logprob: -13.125279426574707
    6. ' )' → logprob: -14.125279426574707
    7. ',next' → logprob: -14.625279426574707
    8. 'self' → logprob: -14.750279426574707
    9. ')' → logprob: -15.250279426574707
    10. '   ' → logprob: -16.000280380249023

Token 43: ' base' (ID: 3611)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.47824084758758545
    2. ' base' → logprob: -0.9782408475875854
    3. ' other' → logprob: -6.228240966796875
    4. 'next' → logprob: -6.353240966796875
    5. 'base' → logprob: -8.728240966796875
    6. ' new' → logprob: -9.978240966796875
    7. ' )' → logprob: -9.978240966796875
    8. 'other' → logprob: -10.103240966796875
    9. ' nxt' → logprob: -10.353240966796875
    10. ')' → logprob: -10.478240966796875

Token 44: ' ):
' (ID: 48169)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.16449443995952606
    2. '):' → logprob: -1.9144943952560425
    3. ' )' → logprob: -5.539494514465332
    4. ')' → logprob: -8.539494514465332
    5. ' ' → logprob: -9.789494514465332
    6. '   ' → logprob: -10.414494514465332
    7. '_' → logprob: -11.414494514465332
    8. ',' → logprob: -11.539494514465332
    9. ' ),' → logprob: -12.289494514465332
    10. ' ' → logprob: -12.289494514465332

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.967921257019043
    2. '<|end|>' → logprob: -0.967921257019043
    3. '\' → logprob: -2.592921257019043
    4. '\n' → logprob: -3.092921257019043
    5. ' ' → logprob: -3.342921257019043
    6. ' 
' → logprob: -3.967921257019043
    7. '    ' → logprob: -4.092921257019043
    8. '        ' → logprob: -4.717921257019043
    9. '        
' → logprob: -4.717921257019043
    10. '   ' → logprob: -5.092921257019043

Token 46: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.19710896909236908
    2. 'self' (adapté à ' self') → logprob: -2.5721089839935303
    3. '       ' → logprob: -2.6971089839935303
    4. '<|end|>' → logprob: -4.197108745574951
    5. ' ' → logprob: -4.697108745574951
    6. ' ' → logprob: -5.697108745574951
    7. '        ' → logprob: -6.322108745574951
    8. ' 
' → logprob: -6.322108745574951
    9. '    ' → logprob: -6.947108745574951
    10. '\' → logprob: -7.447108745574951

Token 47: '.next' (ID: 6689)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014170088805258274
    2. '.next' → logprob: -4.264170169830322
    3. '.user' → logprob: -12.764169692993164
    4. ' .' → logprob: -14.014169692993164
    5. '.n' → logprob: -15.139169692993164
    6. '._' → logprob: -15.139169692993164
    7. '.current' → logprob: -15.389169692993164
    8. '.s' → logprob: -15.639169692993164
    9. '.period' → logprob: -15.764169692993164
    10. '.set' → logprob: -15.889169692993164

Token 48: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.0032254871912300587
    2. '_' → logprob: -5.753225326538086
    3. '._' → logprob: -10.503225326538086
    4. '.' → logprob: -11.378225326538086
    5. ' _' → logprob: -13.253225326538086
    6. '_bas' → logprob: -13.378225326538086
    7. '_Base' → logprob: -13.503225326538086
    8. '_b' → logprob: -14.128225326538086
    9. '_basis' → logprob: -14.253225326538086
    10. '_space' → logprob: -14.628225326538086

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521190345287323
    2. '=' → logprob: -1.5021190643310547
    3. '.' → logprob: -8.752119064331055
    4. ' ' → logprob: -11.127119064331055
    5. '    ' → logprob: -11.752119064331055
    6. '_' → logprob: -12.377119064331055
    7. '.=' → logprob: -13.127119064331055
    8. ' .=' → logprob: -14.252119064331055
    9. ')' → logprob: -14.752119064331055
    10. '   ' → logprob: -14.752119064331055

Token 50: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0002981624274980277
    2. 'base' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.750298500061035
    4. ' ' → logprob: -14.000298500061035
    5. '	base' → logprob: -16.12529754638672
    6. '(base' → logprob: -16.50029754638672
    7. '_base' → logprob: -18.37529754638672
    8. ' space' → logprob: -18.62529754638672
    9. ' bas' → logprob: -18.87529754638672
    10. 'space' → logprob: -19.50029754638672

Token 51: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.43617507815361023
    2. '   ' → logprob: -1.3111751079559326
    3. '
' → logprob: -3.8111751079559326
    4. '<|end|>' → logprob: -4.0611748695373535
    5. ' def' → logprob: -4.3111748695373535
    6. ' ' → logprob: -4.6861748695373535
    7. '\n' → logprob: -4.9361748695373535
    8. '    
' → logprob: -5.0611748695373535
    9. '\' → logprob: -6.3111748695373535
    10. '```' → logprob: -6.6861748695373535

Token 54: ' has' (ID: 853)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3010335862636566
    2. ' has' → logprob: -1.801033616065979
    3. ' is' → logprob: -3.3010334968566895
    4. ' set' → logprob: -4.1760334968566895
    5. ' run' → logprob: -4.3010334968566895
    6. ' runner' → logprob: -4.5510334968566895
    7. ' def' → logprob: -4.8010334968566895
    8. ' have' → logprob: -6.0510334968566895
    9. ' __' → logprob: -6.3010334968566895
    10. ' add' → logprob: -6.5510334968566895

Token 55: '_runner' (ID: 138974)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5775813460350037
    2. '_runner' → logprob: -0.8275813460350037
    3. ' _' → logprob: -6.952581405639648
    4. '_r' → logprob: -7.952581405639648
    5. '_run' → logprob: -8.577581405639648
    6. '__' → logprob: -10.452581405639648
    7. '_running' → logprob: -10.577581405639648
    8. '_space' → logprob: -10.577581405639648
    9. '_s' → logprob: -10.702581405639648
    10. '_base' → logprob: -11.952581405639648

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016234104987233877
    2. '(self' → logprob: -6.501623630523682
    3. '_' → logprob: -10.126623153686523
    4. ' (' → logprob: -10.876623153686523
    5. '()' → logprob: -11.376623153686523
    6. '<|end|>' → logprob: -11.376623153686523
    7. '_space' → logprob: -11.501623153686523
    8. ')' → logprob: -11.626623153686523
    9. '(
' → logprob: -11.876623153686523
    10. '(s' → logprob: -12.501623153686523

Token 57: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7998778223991394
    2. ' self' → logprob: -1.1748778820037842
    3. ' )' → logprob: -1.6748778820037842
    4. ')' → logprob: -3.299877882003784
    5. ' ' → logprob: -4.299877643585205
    6. '(self' → logprob: -6.049877643585205
    7. '(' → logprob: -6.924877643585205
    8. '	self' → logprob: -8.299878120422363
    9. ' (' → logprob: -9.549878120422363
    10. ' ' → logprob: -9.674878120422363

Token 58: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7206078767776489
    2. ' ):' → logprob: -0.7206078767776489
    3. ' )' → logprob: -3.8456077575683594
    4. ')' → logprob: -5.220607757568359
    5. ' ):
' → logprob: -8.97060775756836
    6. ' ' → logprob: -9.72060775756836
    7. '):
' → logprob: -9.97060775756836
    8. '():' → logprob: -10.09560775756836
    9. ' ' → logprob: -11.34560775756836
    10. '   ' → logprob: -11.59560775756836

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1258874535560608
    2. ' return' → logprob: -2.250887393951416
    3. 'return' → logprob: -4.625887393951416
    4. '<|end|>' → logprob: -6.000887393951416
    5. '   ' → logprob: -8.250887870788574
    6. ' ' → logprob: -8.750887870788574
    7. ' 
' → logprob: -9.875887870788574
    8. '	return' → logprob: -10.250887870788574
    9. ':return' → logprob: -10.250887870788574
    10. ' ' → logprob: -10.375887870788574

Token 60: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.26450595259666443
    2. 'return' (adapté à ' return') → logprob: -1.5145059823989868
    3. '       ' → logprob: -4.389505863189697
    4. '   ' → logprob: -10.264506340026855
    5. ' ' → logprob: -11.139506340026855
    6. ' self' → logprob: -11.264506340026855
    7. ' ' → logprob: -11.889506340026855
    8. 'self' → logprob: -12.014506340026855
    9. '    ' → logprob: -12.639506340026855
    10. '	return' → logprob: -12.764506340026855

Token 61: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011505997739732265
    2. ' ' → logprob: -5.136506080627441
    3. 'self' → logprob: -5.886506080627441
    4. ' ' → logprob: -5.886506080627441
    5. '_self' → logprob: -12.761506080627441
    6. '	self' → logprob: -12.886506080627441
    7. ' ' → logprob: -14.136506080627441
    8. '  ' → logprob: -14.386506080627441
    9. 'Self' → logprob: -14.761506080627441
    10. ' bool' → logprob: -15.511506080627441

Token 62: '.runner' (ID: 70825)
  Prédit: '.runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.runner' → logprob: -0.0491911843419075
    2. '.' → logprob: -3.0491912364959717
    3. ' .' → logprob: -8.04919147491455
    4. '.running' → logprob: -9.42419147491455
    5. '.has' → logprob: -9.67419147491455
    6. '.run' → logprob: -9.67419147491455
    7. '.next' → logprob: -10.04919147491455
    8. '.user' → logprob: -11.79919147491455
    9. '.runners' → logprob: -12.17419147491455
    10. '.receiver' → logprob: -12.29919147491455

Token 63: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3256850242614746
    2. 'def' (adapté à ' def') → logprob: -1.4506850242614746
    3. ' def' → logprob: -4.200685024261475
    4. '<|end|>' → logprob: -4.450685024261475
    5. '
' → logprob: -4.700685024261475
    6. '    
' → logprob: -5.825685024261475
    7. ' ' → logprob: -6.450685024261475
    8. '<|end|>' → logprob: -6.700685024261475
    9. '```' → logprob: -7.200685024261475
    10. '	def' → logprob: -7.950685024261475

Token 66: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.1645721048116684
    2. ' remove' → logprob: -2.78957200050354
    3. ' get' → logprob: -3.66457200050354
    4. ' run' → logprob: -4.039572238922119
    5. '_' → logprob: -4.164572238922119
    6. ' ' → logprob: -4.664572238922119
    7. ' _' → logprob: -5.289572238922119
    8. ' put' → logprob: -5.789572238922119
    9. ' add' → logprob: -5.914572238922119
    10. ' is' → logprob: -5.914572238922119

Token 67: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.05518488585948944
    2. '_' → logprob: -2.930184841156006
    3. '_run' → logprob: -9.805185317993164
    4. '_running' → logprob: -9.805185317993164
    5. '_r' → logprob: -9.930185317993164
    6. '(' → logprob: -10.180185317993164
    7. ' _' → logprob: -10.805185317993164
    8. '```' → logprob: -10.930185317993164
    9. ')_' → logprob: -11.680185317993164
    10. '_receiver' → logprob: -11.930185317993164

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.2576454335358e-05
    2. ' (' → logprob: -10.250092506408691
    3. '(True' → logprob: -10.500092506408691
    4. '<|end|>' → logprob: -11.625092506408691
    5. '(False' → logprob: -12.000092506408691
    6. '(
' → logprob: -12.375092506408691
    7. '(self' → logprob: -12.750092506408691
    8. ' =' → logprob: -13.000092506408691
    9. ')' → logprob: -13.250092506408691
    10. '=' → logprob: -13.500092506408691

Token 69: ' self' (ID: 1051)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16212695837020874
    2. ' self' → logprob: -2.0371270179748535
    3. 'True' → logprob: -4.0371270179748535
    4. 'self' → logprob: -6.5371270179748535
    5. ' ' → logprob: -9.912126541137695
    6. ' ' → logprob: -10.037126541137695
    7. ' )' → logprob: -10.162126541137695
    8. ')' → logprob: -11.412126541137695
    9. '(True' → logprob: -11.912126541137695
    10. ' False' → logprob: -12.162126541137695

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023643692838959396
    2. ' ,' → logprob: -8.375236511230469
    3. '=' → logprob: -12.875236511230469
    4. '=True' → logprob: -14.000236511230469
    5. ' =' → logprob: -14.875236511230469
    6. ',value' → logprob: -15.125236511230469
    7. ' )' → logprob: -15.125236511230469
    8. '<|end|>' → logprob: -15.250236511230469
    9. ')' → logprob: -15.375236511230469
    10. ',
' → logprob: -15.625236511230469

Token 71: ' val' (ID: 1459)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.07452879846096039
    2. 'value' → logprob: -3.574528694152832
    3. ' True' → logprob: -3.824528694152832
    4. ' state' → logprob: -4.574528694152832
    5. 'True' → logprob: -5.324528694152832
    6. ' runner' → logprob: -6.074528694152832
    7. ' status' → logprob: -6.199528694152832
    8. 'state' → logprob: -6.574528694152832
    9. 'runner' → logprob: -8.074528694152832
    10. 'status' → logprob: -8.324528694152832

Token 72: ' ):
' (ID: 48169)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):' → logprob: -0.08353837579488754
    2. 'ue' → logprob: -3.583538293838501
    3. ' )' → logprob: -3.583538293838501
    4. '):' → logprob: -4.08353853225708
    5. ' ' → logprob: -5.20853853225708
    6. '   ' → logprob: -7.20853853225708
    7. ' ):
' → logprob: -7.33353853225708
    8. ')' → logprob: -8.583538055419922
    9. '  ' → logprob: -8.958538055419922
    10. '       ' → logprob: -9.083538055419922

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7618300318717957
    2. 'self' → logprob: -1.2618300914764404
    3. ' self' → logprob: -1.3868300914764404
    4. '	self' → logprob: -10.26183032989502
    5. '<|end|>' → logprob: -10.26183032989502
    6. '   ' → logprob: -10.38683032989502
    7. ' ' → logprob: -10.38683032989502
    8. ' ' → logprob: -11.76183032989502
    9. '```' → logprob: -12.13683032989502
    10. '(self' → logprob: -12.26183032989502

Token 74: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.575956404209137
    2. 'self' (adapté à ' self') → logprob: -0.825956404209137
    3. ' ' → logprob: -11.950956344604492
    4. '	self' → logprob: -12.575956344604492
    5. '       ' → logprob: -12.950956344604492
    6. ' ' → logprob: -13.325956344604492
    7. 's' → logprob: -14.075956344604492
    8. '   ' → logprob: -14.325956344604492
    9. 'sel' → logprob: -14.325956344604492
    10. ' sel' → logprob: -14.950956344604492

Token 75: '.runner' (ID: 70825)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12694479525089264
    2. '.runner' → logprob: -2.1269447803497314
    3. '.run' → logprob: -12.376944541931152
    4. '._' → logprob: -13.001944541931152
    5. ' .' → logprob: -13.126944541931152
    6. '.running' → logprob: -13.251944541931152
    7. '_runner' → logprob: -14.251944541931152
    8. '.runners' → logprob: -14.251944541931152
    9. '.r' → logprob: -14.376944541931152
    10. 'runner' → logprob: -14.626944541931152

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269282102584839
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. '＝' → logprob: -17.501928329467773
    5. ' =)' → logprob: -18.001928329467773
    6. ' =
' → logprob: -18.751928329467773
    7. ')' → logprob: -19.376928329467773
    8. '=}' → logprob: -19.626928329467773
    9. 'space' → logprob: -20.626928329467773
    10. '=

' → logprob: -20.876928329467773

Token 77: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.575941264629364
    2. 'val' → logprob: -0.825941264629364
    3. ' True' → logprob: -14.32594108581543
    4. 'bool' → logprob: -14.95094108581543
    5. 'True' → logprob: -15.07594108581543
    6. '	val' → logprob: -15.32594108581543
    7. ' bool' → logprob: -15.82594108581543
    8. '_val' → logprob: -16.45094108581543
    9. 'Val' → logprob: -16.95094108581543
    10. '(val' → logprob: -17.07594108581543

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6853504776954651
    2. '<|end|>' → logprob: -0.8103504776954651
    3. '   ' → logprob: -3.3103504180908203
    4. '\n' → logprob: -5.43535041809082
    5. '<|end|>' → logprob: -5.56035041809082
    6. '    
' → logprob: -6.31035041809082
    7. '```' → logprob: -6.56035041809082
    8. '\' → logprob: -7.06035041809082
    9. ' ' → logprob: -7.81035041809082
    10. '

' → logprob: -7.93535041809082

Token 79: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2310381382703781
    2. '<|end|>' → logprob: -2.3560380935668945
    3. '   ' → logprob: -2.8560380935668945
    4. '    
' → logprob: -4.2310380935668945
    5. '\' → logprob: -4.8560380935668945
    6. '\n' → logprob: -5.2310380935668945
    7. ' 
' → logprob: -5.2310380935668945
    8. '<|end|>' → logprob: -5.3560380935668945
    9. 'class' → logprob: -5.6060380935668945
    10. '  
' → logprob: -5.8560380935668945

Token 80: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24755018949508667
    2. 'class' → logprob: -1.6225502490997314
    3. '   ' → logprob: -3.9975502490997314
    4. '<|end|>' → logprob: -7.122550010681152
    5. ' class' → logprob: -7.372550010681152
    6. '    
' → logprob: -7.497550010681152
    7. '\n' → logprob: -7.497550010681152
    8. '

' → logprob: -7.872550010681152
    9. ' ' → logprob: -8.747550010681152
    10. '' → logprob: -9.372550010681152

Token 81: ' advance' (ID: 14805)
  Prédit: ' advance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' advance' → logprob: -0.20785126090049744
    2. ' get' → logprob: -2.2078511714935303
    3. ' push' → logprob: -4.082851409912109
    4. ' move' → logprob: -4.207851409912109
    5. ' run' → logprob: -5.082851409912109
    6. ' is' → logprob: -5.082851409912109
    7. ' ' → logprob: -5.207851409912109
    8. ' next' → logprob: -5.707851409912109
    9. ' set' → logprob: -5.832851409912109
    10. ' s' → logprob: -5.832851409912109

Token 82: '_runner' (ID: 138974)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08062583953142166
    2. '_runner' → logprob: -3.0806257724761963
    3. '_' → logprob: -3.5806257724761963
    4. '_base' → logprob: -6.455626010894775
    5. '(self' → logprob: -6.955626010894775
    6. '()' → logprob: -7.205626010894775
    7. '_self' → logprob: -9.330625534057617
    8. '(
' → logprob: -9.580625534057617
    9. '_(' → logprob: -9.830625534057617
    10. '_run' → logprob: -9.830625534057617

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.13388703338569e-06
    2. '(self' → logprob: -12.375009536743164
    3. '(
' → logprob: -12.375009536743164
    4. ' (' → logprob: -14.875009536743164
    5. '()' → logprob: -15.500009536743164
    6. '(

' → logprob: -16.125009536743164
    7. 's' → logprob: -17.000009536743164
    8. 'self' → logprob: -17.500009536743164
    9. '(s' → logprob: -18.625009536743164
    10. '```' → logprob: -19.125009536743164

Token 84: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1132383793592453
    2. 'self' → logprob: -2.2382383346557617
    3. ' ' → logprob: -8.988238334655762
    4. ' ' → logprob: -8.988238334655762
    5. ' )' → logprob: -9.613238334655762
    6. '	self' → logprob: -10.113238334655762
    7. ')' → logprob: -10.363238334655762
    8. '   ' → logprob: -11.363238334655762
    9. 's' → logprob: -12.863238334655762
    10. '       ' → logprob: -12.988238334655762

Token 85: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07280092686414719
    2. ' ):' → logprob: -2.822800874710083
    3. ',' → logprob: -5.197801113128662
    4. ')' → logprob: -5.697801113128662
    5. ' )' → logprob: -7.072801113128662
    6. '):
' → logprob: -7.447801113128662
    7. ' ' → logprob: -8.197800636291504
    8. 'self' → logprob: -9.697800636291504
    9. '   ' → logprob: -10.072800636291504
    10. ' ):
' → logprob: -10.197800636291504

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008846430107951164
    2. '    ' → logprob: -5.758846282958984
    3. ' ' → logprob: -6.383846282958984
    4. '        ' → logprob: -6.508846282958984
    5. ' 
' → logprob: -7.008846282958984
    6. '   ' → logprob: -7.633846282958984
    7. '
' → logprob: -8.383846282958984
    8. '        
' → logprob: -8.633846282958984
    9. '  
' → logprob: -8.633846282958984
    10. '' → logprob: -9.258846282958984

Token 87: ' """
' (ID: 7037)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09059929847717285
    2. 'if' → logprob: -2.840599298477173
    3. '       ' → logprob: -3.590599298477173
    4. '    ' → logprob: -8.340599060058594
    5. '   ' → logprob: -8.590599060058594
    6. '        ' → logprob: -9.590599060058594
    7. ' ' → logprob: -10.090599060058594
    8. '	if' → logprob: -10.215599060058594
    9. ' pass' → logprob: -10.840599060058594
    10. ' i' → logprob: -11.715599060058594

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003771458752453327
    2. '   ' → logprob: -6.8787713050842285
    3. '    ' → logprob: -7.3787713050842285
    4. '        ' → logprob: -7.7537713050842285
    5. '        
' → logprob: -7.8787713050842285
    6. ' 
' → logprob: -8.128771781921387
    7. '"""' → logprob: -8.503771781921387
    8. ' if' → logprob: -9.253771781921387
    9. '     ' → logprob: -9.378771781921387
    10. ' """' → logprob: -9.378771781921387

Token 89: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038479890674352646
    2. '"""' → logprob: -3.413479804992676
    3. '       ' → logprob: -5.788479804992676
    4. '"""
' → logprob: -7.413479804992676
    5. ' if' → logprob: -7.663479804992676
    6. 'If' → logprob: -8.163479804992676
    7. 'pass' → logprob: -8.663479804992676
    8. '#' → logprob: -9.413479804992676
    9. 'Pass' → logprob: -9.413479804992676
    10. '""' → logprob: -11.163479804992676

Token 90: ' runner' (ID: 39201)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.01989479921758175
    2. ' self' → logprob: -4.769894599914551
    3. 'the' → logprob: -5.769894599914551
    4. 'self' → logprob: -5.894894599914551
    5. ' if' → logprob: -6.644894599914551
    6. ' runner' → logprob: -6.769894599914551
    7. '   ' → logprob: -7.394894599914551
    8. 's' → logprob: -7.394894599914551
    9. ' a' → logprob: -7.894894599914551
    10. ' any' → logprob: -8.39489459991455

Token 91: ' from' (ID: 591)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.32923072576522827
    2. '(' → logprob: -2.079230785369873
    3. '()' → logprob: -2.329230785369873
    4. ' from' → logprob: -4.079230785369873
    5. '(self' → logprob: -4.704230785369873
    6. 'from' → logprob: -4.829230785369873
    7. 'to' → logprob: -5.329230785369873
    8. '       ' → logprob: -5.579230785369873
    9. 's' → logprob: -5.704230785369873
    10. '   ' → logprob: -6.204230785369873

Token 92: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.09215762466192245
    2. 'this' → logprob: -2.5921576023101807
    3. ' current' → logprob: -4.84215784072876
    4. ' the' → logprob: -5.84215784072876
    5. 'self' → logprob: -6.84215784072876
    6. ' self' → logprob: -7.09215784072876
    7. 'current' → logprob: -7.71715784072876
    8. 'the' → logprob: -10.342157363891602
    9. '_this' → logprob: -12.842157363891602
    10. ' ' → logprob: -12.967157363891602

Token 93: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0005495758377946913
    2. 'base' → logprob: -7.750549793243408
    3. '_base' → logprob: -10.50054931640625
    4. ' ' → logprob: -10.50054931640625
    5. 'Base' → logprob: -11.00054931640625
    6. '	base' → logprob: -11.50054931640625
    7. '.' → logprob: -11.87554931640625
    8. '.base' → logprob: -12.00054931640625
    9. '_' → logprob: -12.62554931640625
    10. ' ' → logprob: -12.75054931640625

Token 94: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07448343932628632
    2. '       ' → logprob: -3.3244833946228027
    3. ' if' → logprob: -3.4494833946228027
    4. '        ' → logprob: -6.324483394622803
    5. '.' → logprob: -7.324483394622803
    6. 'to' → logprob: -7.574483394622803
    7. '    ' → logprob: -7.949483394622803
    8. ' ' → logprob: -8.324483871459961
    9. ',' → logprob: -8.949483871459961
    10. '   ' → logprob: -9.324483871459961

Token 95: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.005576306022703648
    2. ' next' → logprob: -5.380576133728027
    3. ' self' → logprob: -7.255576133728027
    4. 'the' → logprob: -8.755576133728027
    5. 'self' → logprob: -9.880576133728027
    6. ' this' → logprob: -10.880576133728027
    7. 'next' → logprob: -11.255576133728027
    8. ' a' → logprob: -13.005576133728027
    9. ' ' → logprob: -13.005576133728027
    10. ' ' → logprob: -13.755576133728027

Token 96: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.001036383560858667
    2. 'next' → logprob: -6.876036167144775
    3. '	next' → logprob: -13.376036643981934
    4. '_next' → logprob: -14.251036643981934
    5. '.next' → logprob: -14.626036643981934
    6. '```' → logprob: -15.251036643981934
    7. ' self' → logprob: -15.876036643981934
    8. '(next' → logprob: -16.001035690307617
    9. 'self' → logprob: -16.001035690307617
    10. '[next' → logprob: -16.376035690307617

Token 97: ' base' (ID: 3611)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0608810186386108
    2. '_base' → logprob: -1.1858810186386108
    3. '       ' → logprob: -1.9358810186386108
    4. '_' → logprob: -3.0608811378479004
    5. ' ' → logprob: -3.1858811378479004
    6. '.' → logprob: -3.4358811378479004
    7. ' base' → logprob: -3.5608811378479004
    8. '   ' → logprob: -3.9358811378479004
    9. '    ' → logprob: -4.6858811378479
    10. '        ' → logprob: -5.4358811378479

Token 98: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028127681463956833
    2. '.' → logprob: -4.278127670288086
    3. '
' → logprob: -5.903127670288086
    4. ' if' → logprob: -5.903127670288086
    5. '<|end|>' → logprob: -5.903127670288086
    6. '   ' → logprob: -6.153127670288086
    7. ',' → logprob: -6.403127670288086
    8. '    ' → logprob: -8.028127670288086
    9. '        ' → logprob: -8.278127670288086
    10. '.
' → logprob: -8.278127670288086

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003823349252343178
    2. '
' → logprob: -6.378823280334473
    3. ' 
' → logprob: -7.503823280334473
    4. '        
' → logprob: -7.753823280334473
    5. '   ' → logprob: -8.003823280334473
    6. '<|end|>' → logprob: -8.253823280334473
    7. '        ' → logprob: -8.503823280334473
    8. '  
' → logprob: -9.628823280334473
    9. '    ' → logprob: -9.878823280334473
    10. ' ' → logprob: -10.128823280334473

Token 100: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00326980696991086
    2. '"""' → logprob: -7.253269672393799
    3. ' if' → logprob: -7.503269672393799
    4. 'if' → logprob: -7.628269672393799
    5. '        ' → logprob: -7.753269672393799
    6. '
' → logprob: -8.128270149230957
    7. ' 
' → logprob: -8.753270149230957
    8. '        
' → logprob: -9.003270149230957
    9. '   ' → logprob: -9.003270149230957
    10. '```' → logprob: -9.128270149230957

Token 101: ' next' (ID: 2613)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.016833046451210976
    2. ' not' → logprob: -4.1418328285217285
    3. 'self' → logprob: -7.1418328285217285
    4. 'not' → logprob: -12.641833305358887
    5. ' ' → logprob: -13.266833305358887
    6. '    ' → logprob: -13.641833305358887
    7. ' ' → logprob: -14.266833305358887
    8. '       ' → logprob: -16.26683235168457
    9. '	self' → logprob: -16.39183235168457
    10. '   ' → logprob: -16.51683235168457

Token 102: ' base' (ID: 3611)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.47425946593284607
    2. '_' → logprob: -0.9742594957351685
    3. ' _' → logprob: -8.974259376525879
    4. '_space' → logprob: -11.099259376525879
    5. '.' → logprob: -11.349259376525879
    6. '_Base' → logprob: -12.599259376525879
    7. 'Base' → logprob: -12.974259376525879
    8. ' Base' → logprob: -12.974259376525879
    9. 'base' → logprob: -13.224259376525879
    10. '_b' → logprob: -13.224259376525879

Token 103: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0013708343030884862
    2. 'is' → logprob: -6.626370906829834
    3. ':' → logprob: -10.626370429992676
    4. ' and' → logprob: -12.501370429992676
    5. '.' → logprob: -12.626370429992676
    6. '    ' → logprob: -13.126370429992676
    7. ' ' → logprob: -13.251370429992676
    8. '   ' → logprob: -13.376370429992676
    9. ' None' → logprob: -13.376370429992676
    10. ' has' → logprob: -13.751370429992676

Token 104: ' None' (ID: 4662)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7215130925178528
    2. ' None' → logprob: -1.346513032913208
    3. 'None' → logprob: -1.471513032913208
    4. 'not' → logprob: -3.721513032913208
    5. 'none' → logprob: -10.721512794494629
    6. ' none' → logprob: -11.221512794494629
    7. 'self' → logprob: -12.096512794494629
    8. ' present' → logprob: -12.721512794494629
    9. ' self' → logprob: -12.971512794494629
    10. '(None' → logprob: -12.971512794494629

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22945049405097961
    2. ':' → logprob: -1.6044504642486572
    3. '       ' → logprob: -6.604450702667236
    4. '.' → logprob: -7.479450702667236
    5. '(' → logprob: -7.854450702667236
    6. ' or' → logprob: -7.854450702667236
    7. ' and' → logprob: -8.229450225830078
    8. '   ' → logprob: -8.479450225830078
    9. ':
' → logprob: -8.729450225830078
    10. '():' → logprob: -8.979450225830078

Token 106: ' it' (ID: 480)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.8815755844116211
    2. '       ' → logprob: -0.8815755844116211
    3. ' return' → logprob: -2.006575584411621
    4. ' ' → logprob: -4.506575584411621
    5. 'return' → logprob: -4.631575584411621
    6. ' raise' → logprob: -5.506575584411621
    7. '        
' → logprob: -6.131575584411621
    8. ' 
' → logprob: -6.631575584411621
    9. ' self' → logprob: -6.756575584411621
    10. '    ' → logprob: -6.881575584411621

Token 107: ' means' (ID: 4748)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6997902989387512
    2. '       ' → logprob: -1.3247902393341064
    3. ' means' → logprob: -2.4497902393341064
    4. '   ' → logprob: -2.8247902393341064
    5. ' should' → logprob: -4.5747904777526855
    6. ' return' → logprob: -4.5747904777526855
    7. '"""' → logprob: -4.5747904777526855
    8. ' returns' → logprob: -4.8247904777526855
    9. 'is' → logprob: -5.4497904777526855
    10. ' represents' → logprob: -5.5747904777526855

Token 108: ' home' (ID: 2237)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11247849464416504
    2. 'the' → logprob: -2.487478494644165
    3. ' runner' → logprob: -4.612478256225586
    4. 'runner' → logprob: -5.487478256225586
    5. ' that' → logprob: -5.612478256225586
    6. ' scoring' → logprob: -6.362478256225586
    7. '       ' → logprob: -6.862478256225586
    8. ' this' → logprob: -7.737478256225586
    9. ' ' → logprob: -8.362478256225586
    10. ' it's' → logprob: -8.362478256225586

Token 109: ' plate' (ID: 14651)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25211837887763977
    2. '.' → logprob: -2.8771183490753174
    3. '_run' → logprob: -3.0021183490753174
    4. '_plate' → logprob: -3.0021183490753174
    5. ' run' → logprob: -4.0021185874938965
    6. '_base' → logprob: -4.1271185874938965
    7. ' plate' → logprob: -4.2521185874938965
    8. ',' → logprob: -5.1271185874938965
    9. 'plate' → logprob: -5.3771185874938965
    10. '"""' → logprob: -6.6271185874938965

Token 110: ' reached' (ID: 15237)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15096649527549744
    2. '.' → logprob: -2.7759664058685303
    3. ',' → logprob: -3.4009664058685303
    4. '   ' → logprob: -3.4009664058685303
    5. ':' → logprob: -6.150966644287109
    6. ' and' → logprob: -6.400966644287109
    7. '<|end|>' → logprob: -6.650966644287109
    8. '
' → logprob: -6.775966644287109
    9. ')' → logprob: -7.025966644287109
    10. '           ' → logprob: -7.275966644287109

Token 111: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1364438533782959
    2. '.' → logprob: -2.386443853378296
    3. '   ' → logprob: -3.761443853378296
    4. ',' → logprob: -5.136444091796875
    5. '<|end|>' → logprob: -6.011444091796875
    6. ')' → logprob: -6.761444091796875
    7. ':' → logprob: -7.136444091796875
    8. '    ' → logprob: -7.886444091796875
    9. '
' → logprob: -8.386444091796875
    10. '    
' → logprob: -8.511444091796875

Token 112: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08975521475076675
    2. ' self' → logprob: -3.5897552967071533
    3. 'self' → logprob: -4.339755058288574
    4. '<|end|>' → logprob: -4.589755058288574
    5. '        ' → logprob: -4.839755058288574
    6. ' ' → logprob: -5.339755058288574
    7. ' 
' → logprob: -5.589755058288574
    8. '
' → logprob: -5.839755058288574
    9. '        
' → logprob: -6.214755058288574
    10. ' ' → logprob: -6.339755058288574

Token 113: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1854625940322876
    2. 'True' → logprob: -1.9354625940322876
    3. ' False' → logprob: -4.185462474822998
    4. 'False' → logprob: -4.810462474822998
    5. ' None' → logprob: -6.810462474822998
    6. 'None' → logprob: -8.060462951660156
    7. 'self' → logprob: -10.185462951660156
    8. ' self' → logprob: -10.185462951660156
    9. ' ' → logprob: -10.435462951660156
    10. '    ' → logprob: -11.560462951660156

Token 114: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054679443128407
    2. '
' → logprob: -5.380467891693115
    3. '   ' → logprob: -8.130468368530273
    4. '    
' → logprob: -9.255468368530273
    5. '        
' → logprob: -9.255468368530273
    6. ')' → logprob: -9.505468368530273
    7. '\n' → logprob: -9.755468368530273
    8. ',' → logprob: -10.005468368530273
    9. '```' → logprob: -10.130468368530273
    10. '    ' → logprob: -10.630468368530273

Token 115: ' run' (ID: 2461)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2617742717266083
    2. ' home' → logprob: -2.7617743015289307
    3. ' scoring' → logprob: -3.1367743015289307
    4. 'True' → logprob: -3.6367743015289307
    5. ' runner' → logprob: -3.7617743015289307
    6. ' run' → logprob: -3.8867743015289307
    7. 'score' → logprob: -3.8867743015289307
    8. ' score' → logprob: -5.011774063110352
    9. ' the' → logprob: -5.261774063110352
    10. 'runner' → logprob: -5.511774063110352

Token 116: ' scored' (ID: 27207)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43631064891815186
    2. '   ' → logprob: -1.5613106489181519
    3. '       ' → logprob: -2.1863107681274414
    4. '\n' → logprob: -4.686310768127441
    5. '.
' → logprob: -5.436310768127441
    6. 'return' → logprob: -5.686310768127441
    7. '.' → logprob: -5.811310768127441
    8. '    
' → logprob: -6.436310768127441
    9. ' return' → logprob: -6.686310768127441
    10. '  
' → logprob: -6.686310768127441

Token 117: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018215851858258247
    2. '
' → logprob: -4.393215656280518
    3. '   ' → logprob: -6.018215656280518
    4. '        
' → logprob: -7.143215656280518
    5. ')' → logprob: -7.268215656280518
    6. '    
' → logprob: -7.393215656280518
    7. '\n' → logprob: -8.143216133117676
    8. '.' → logprob: -8.893216133117676
    9. '    ' → logprob: -9.143216133117676
    10. ',' → logprob: -9.393216133117676

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016280220821499825
    2. ' 
' → logprob: -5.266280174255371
    3. '
' → logprob: -5.641280174255371
    4. '   ' → logprob: -5.766280174255371
    5. '    
' → logprob: -6.891280174255371
    6. '        
' → logprob: -7.141280174255371
    7. '\n' → logprob: -7.641280174255371
    8. '```' → logprob: -7.766280174255371
    9. ')' → logprob: -7.891280174255371
    10. '  
' → logprob: -7.891280174255371

Token 119: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011186462827026844
    2. 'if' → logprob: -4.886186599731445
    3. ' if' → logprob: -5.886186599731445
    4. '   ' → logprob: -7.636186599731445
    5. '        
' → logprob: -9.136186599731445
    6. '```' → logprob: -9.636186599731445
    7. '"""' → logprob: -10.386186599731445
    8. '    
' → logprob: -10.511186599731445
    9. '    ' → logprob: -10.636186599731445
    10. '        ' → logprob: -11.261186599731445

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003336098976433277
    2. 'if' → logprob: -6.003335952758789
    3. ' if' → logprob: -7.378335952758789
    4. '   ' → logprob: -8.628335952758789
    5. '        
' → logprob: -11.753335952758789
    6. '    ' → logprob: -11.753335952758789
    7. 'indent' → logprob: -12.003335952758789
    8. '        ' → logprob: -12.378335952758789
    9. '```' → logprob: -12.378335952758789
    10. 'newline' → logprob: -12.503335952758789

Token 121: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00020747410599142313
    2. '       ' → logprob: -8.500207901000977
    3. ' if' → logprob: -12.750207901000977
    4. '   ' → logprob: -14.375207901000977
    5. 'self' → logprob: -15.500207901000977
    6. '```' → logprob: -15.500207901000977
    7. 'runner' → logprob: -17.000207901000977
    8. 'i' → logprob: -17.250207901000977
    9. '#' → logprob: -18.375207901000977
    10. 'If' → logprob: -18.500207901000977

Token 122: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.00452292338013649
    2. ' not' → logprob: -5.629522800445557
    3. 'self' → logprob: -7.004522800445557
    4. ' ' → logprob: -11.754523277282715
    5. ' ' → logprob: -12.504523277282715
    6. '	self' → logprob: -13.254523277282715
    7. 'not' → logprob: -13.879523277282715
    8. '(self' → logprob: -15.629523277282715
    9. '_self' → logprob: -15.754523277282715
    10. '    ' → logprob: -16.0045223236084

Token 123: '.runner' (ID: 70825)
  Prédit: '.runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.runner' → logprob: -0.3258938789367676
    2. '.has' → logprob: -1.9508938789367676
    3. '.next' → logprob: -2.0758938789367676
    4. '.' → logprob: -4.575893878936768
    5. ' .' → logprob: -9.32589340209961
    6. '.running' → logprob: -10.07589340209961
    7. '.run' → logprob: -10.32589340209961
    8. '.runners' → logprob: -10.45089340209961
    9. '.have' → logprob: -11.32589340209961
    10. 'has' → logprob: -13.45089340209961

Token 124: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.039329417049884796
    2. 'and' → logprob: -3.7893295288085938
    3. ':' → logprob: -4.164329528808594
    4. ' :' → logprob: -8.914329528808594
    5. '<|end|>' → logprob: -9.914329528808594
    6. ' ==' → logprob: -10.039329528808594
    7. ' ' → logprob: -10.414329528808594
    8. '):' → logprob: -10.414329528808594
    9. '==' → logprob: -10.664329528808594
    10. ' ):' → logprob: -10.789329528808594

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1554790735244751
    2. '       ' → logprob: -2.2804789543151855
    3. 'self' → logprob: -3.5304789543151855
    4. 'if' → logprob: -5.2804789543151855
    5. ' if' → logprob: -5.2804789543151855
    6. ' self' → logprob: -6.5304789543151855
    7. ' and' → logprob: -7.5304789543151855
    8. '
' → logprob: -9.405479431152344
    9. '               ' → logprob: -9.780479431152344
    10. '   ' → logprob: -10.155479431152344

Token 126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7414094805717468
    2. 'self' → logprob: -0.8664094805717468
    3. '           ' → logprob: -2.3664095401763916
    4. ' if' → logprob: -4.8664093017578125
    5. ' self' → logprob: -6.7414093017578125
    6. '               ' → logprob: -8.616409301757812
    7. '       ' → logprob: -8.741409301757812
    8. '   ' → logprob: -11.366409301757812
    9. '
' → logprob: -11.491409301757812
    10. ' ' → logprob: -11.991409301757812

Token 127: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.023333759978413582
    2. 'self' → logprob: -3.773333787918091
    3. ' not' → logprob: -9.398333549499512
    4. ' ' → logprob: -13.398333549499512
    5. '	self' → logprob: -13.398333549499512
    6. '_self' → logprob: -14.648333549499512
    7. 'not' → logprob: -14.773333549499512
    8. '    ' → logprob: -14.898333549499512
    9. ' ' → logprob: -15.148333549499512
    10. '   ' → logprob: -15.398333549499512

Token 128: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0006882481975480914
    2. '.' → logprob: -7.375688076019287
    3. ' .' → logprob: -10.250688552856445
    4. 'next' → logprob: -10.625688552856445
    5. ' next' → logprob: -13.750688552856445
    6. '.has' → logprob: -15.000688552856445
    7. 'Next' → logprob: -16.125688552856445
    8. '	next' → logprob: -16.125688552856445
    9. '_next' → logprob: -16.250688552856445
    10. '.n' → logprob: -16.625688552856445

Token 129: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -11.50001049041748
    3. '_Base' → logprob: -17.125009536743164
    4. '_bas' → logprob: -17.875009536743164
    5. '_BASE' → logprob: -18.750009536743164
    6. '_next' → logprob: -18.875009536743164
    7. '_
' → logprob: -19.125009536743164
    8. ' _' → logprob: -19.500009536743164
    9. 'base' → logprob: -19.625009536743164
    10. '_basis' → logprob: -19.750009536743164

Token 130: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.020582297816872597
    2. 'is' → logprob: -4.02058219909668
    3. ' and' → logprob: -7.14558219909668
    4. ':' → logprob: -7.39558219909668
    5. '.is' → logprob: -7.77058219909668
    6. '<|end|>' → logprob: -7.89558219909668
    7. 'and' → logprob: -9.14558219909668
    8. ' ' → logprob: -9.52058219909668
    9. '.' → logprob: -11.02058219909668
    10. ':
' → logprob: -11.64558219909668

Token 131: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4441568851470947
    2. ' not' → logprob: -1.1941568851470947
    3. 'None' → logprob: -3.0691568851470947
    4. 'not' → logprob: -4.694156646728516
    5. ' ' → logprob: -10.444156646728516
    6. '	not' → logprob: -11.569156646728516
    7. '_None' → logprob: -11.569156646728516
    8. '(None' → logprob: -12.444156646728516
    9. ' none' → logprob: -12.569156646728516
    10. 'Not' → logprob: -12.694156646728516

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05728970840573311
    2. ':
' → logprob: -2.9322896003723145
    3. '               ' → logprob: -6.4322896003723145
    4. ':return' → logprob: -7.8072896003723145
    5. '           ' → logprob: -8.307290077209473
    6. ' or' → logprob: -9.432290077209473
    7. '       ' → logprob: -11.057290077209473
    8. ' and' → logprob: -11.057290077209473
    9. '):
' → logprob: -11.807290077209473
    10. '):' → logprob: -12.432290077209473

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07788556814193726
    2. '\n' → logprob: -3.577885627746582
    3. '
' → logprob: -3.952885627746582
    4. ' return' → logprob: -5.077885627746582
    5. ' True' → logprob: -5.077885627746582
    6. '           ' → logprob: -5.202885627746582
    7. 'True' → logprob: -5.952885627746582
    8. 'return' → logprob: -6.202885627746582
    9. '                
' → logprob: -6.577885627746582
    10. '(True' → logprob: -6.577885627746582

Token 134: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5333396792411804
    2. ' return' → logprob: -1.2833397388458252
    3. '               ' → logprob: -2.033339738845825
    4. '           ' → logprob: -5.283339500427246
    5. '                   ' → logprob: -9.283339500427246
    6. '                
' → logprob: -9.408339500427246
    7. ' ' → logprob: -10.783339500427246
    8. ' 
' → logprob: -11.033339500427246
    9. '            
' → logprob: -11.283339500427246
    10. '
' → logprob: -11.658339500427246

Token 135: '.runner' (ID: 70825)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11529111862182617
    2. '.runner' → logprob: -2.365291118621826
    3. '.set' → logprob: -4.240291118621826
    4. '.run' → logprob: -7.865291118621826
    5. ' .' → logprob: -9.490291595458984
    6. '.
' → logprob: -10.365291595458984
    7. 'runner' → logprob: -11.115291595458984
    8. '.running' → logprob: -11.365291595458984
    9. '._' → logprob: -12.115291595458984
    10. '.reset' → logprob: -12.240291595458984

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151700496673584
    2. '=' → logprob: -4.018151760101318
    3. ' =
' → logprob: -13.89315128326416
    4. '=False' → logprob: -14.76815128326416
    5. ' ' → logprob: -15.01815128326416
    6. '=True' → logprob: -16.018152236938477
    7. '            ' → logprob: -17.393152236938477
    8. '           ' → logprob: -17.518152236938477
    9. '=
' → logprob: -17.518152236938477
    10. '        ' → logprob: -17.643152236938477

Token 137: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.061968132853507996
    2. ' False' → logprob: -2.8119680881500244
    3. 'True' → logprob: -14.686967849731445
    4. '(False' → logprob: -16.436967849731445
    5. ' True' → logprob: -17.061967849731445
    6. '=False' → logprob: -17.936967849731445
    7. '.False' → logprob: -19.186967849731445
    8. '   ' → logprob: -20.061967849731445
    9. '_false' → logprob: -20.311967849731445
    10. 'F' → logprob: -20.561967849731445

Token 138: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05529182404279709
    2. '
' → logprob: -2.9302918910980225
    3. '           ' → logprob: -9.055292129516602
    4. '<|end|>' → logprob: -9.805292129516602
    5. ' 
' → logprob: -9.930292129516602
    6. 'return' → logprob: -10.555292129516602
    7. '  
' → logprob: -10.555292129516602
    8. '                
' → logprob: -10.805292129516602
    9. ' return' → logprob: -10.930292129516602
    10. '                   ' → logprob: -11.180292129516602

Token 139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00046153197763487697
    2. 'return' → logprob: -8.12546157836914
    3. '
' → logprob: -8.87546157836914
    4. ' return' → logprob: -11.00046157836914
    5. '           ' → logprob: -12.75046157836914
    6. '       ' → logprob: -13.37546157836914
    7. '                
' → logprob: -13.50046157836914
    8. '```' → logprob: -14.37546157836914
    9. '                   ' → logprob: -14.50046157836914
    10. '  
' → logprob: -14.87546157836914

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013812736608088017
    2. ' return' → logprob: -4.76381254196167
    3. '               ' → logprob: -5.26381254196167
    4. '	return' → logprob: -12.138813018798828
    5. 'True' → logprob: -13.763813018798828
    6. '
' → logprob: -14.138813018798828
    7. 'eturn' → logprob: -14.888813018798828
    8. ':return' → logprob: -14.888813018798828
    9. '   ' → logprob: -15.513813018798828
    10. ' ' → logprob: -15.513813018798828

Token 141: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868710398674011
    2. ' True' → logprob: -1.136871099472046
    3. '(True' → logprob: -17.886871337890625
    4. ' ' → logprob: -20.761871337890625
    5. '=True' → logprob: -20.761871337890625
    6. ' Tru' → logprob: -20.761871337890625
    7. 'False' → logprob: -21.636871337890625
    8. 'true' → logprob: -21.886871337890625
    9. '_true' → logprob: -23.011871337890625
    10. 'Tr' → logprob: -23.136871337890625

Token 142: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03658376634120941
    2. '
' → logprob: -3.786583662033081
    3. '            
' → logprob: -4.41158390045166
    4. '    
' → logprob: -7.28658390045166
    5. '       ' → logprob: -9.28658390045166
    6. ' 
' → logprob: -9.41158390045166
    7. '        
' → logprob: -9.53658390045166
    8. 'else' → logprob: -10.03658390045166
    9. '           
' → logprob: -10.16158390045166
    10. '   
' → logprob: -10.66158390045166

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008041187189519405
    2. '
' → logprob: -5.0080413818359375
    3. '            
' → logprob: -6.8830413818359375
    4. '    
' → logprob: -9.008041381835938
    5. 'else' → logprob: -9.508041381835938
    6. ' 
' → logprob: -10.633041381835938
    7. '  
' → logprob: -10.758041381835938
    8. '       ' → logprob: -11.133041381835938
    9. ' else' → logprob: -11.758041381835938
    10. '   
' → logprob: -11.758041381835938

Token 144: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1306750625371933
    2. '           ' → logprob: -2.7556750774383545
    3. ' else' → logprob: -3.3806750774383545
    4. '       ' → logprob: -4.255674839019775
    5. 'elif' → logprob: -4.880674839019775
    6. 'self' → logprob: -6.130674839019775
    7. 'if' (adapté à ' if') → logprob: -7.880674839019775
    8. '
' → logprob: -9.005675315856934
    9. ' elif' → logprob: -9.255675315856934
    10. '            
' → logprob: -9.505675315856934

Token 145: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.09021595865488052
    2. ' self' → logprob: -2.7152159214019775
    3. 'not' → logprob: -4.090216159820557
    4. 'self' → logprob: -5.715216159820557
    5. ' ' → logprob: -10.840215682983398
    6. ' ' → logprob: -11.465215682983398
    7. '	not' → logprob: -11.965215682983398
    8. '	self' → logprob: -13.340215682983398
    9. '   ' → logprob: -13.465215682983398
    10. '(not' → logprob: -13.777715682983398

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31326553225517273
    2. 'self' → logprob: -1.3132655620574951
    3. ' ' → logprob: -13.438265800476074
    4. ' ' → logprob: -13.813265800476074
    5. '	self' → logprob: -14.188265800476074
    6. '(self' → logprob: -15.438265800476074
    7. '
' → logprob: -15.688265800476074
    8. '<|end|>' → logprob: -16.063264846801758
    9. ' hasattr' → logprob: -17.063264846801758
    10. '  ' → logprob: -17.438264846801758

Token 147: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -5.240481914370321e-05
    2. 'next' → logprob: -9.875052452087402
    3. '_next' → logprob: -15.250052452087402
    4. '.has' → logprob: -15.375052452087402
    5. '.' → logprob: -15.500052452087402
    6. ' next' → logprob: -16.125051498413086
    7. 'Next' → logprob: -16.250051498413086
    8. '	next' → logprob: -17.125051498413086
    9. '[next' → logprob: -17.375051498413086
    10. '.runner' → logprob: -19.000051498413086

Token 148: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.00000286102295
    3. 'base' → logprob: -15.87500286102295
    4. 'Base' → logprob: -16.750001907348633
    5. '._' → logprob: -17.750001907348633
    6. ' _' → logprob: -18.000001907348633
    7. '_BASE' → logprob: -18.375001907348633
    8. '_bas' → logprob: -18.375001907348633
    9. '_Base' → logprob: -18.375001907348633
    10. '.base' → logprob: -18.875001907348633

Token 149: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.0013608321314677596
    2. '.' → logprob: -6.626360893249512
    3. '.have' → logprob: -10.376360893249512
    4. ' .' → logprob: -13.126360893249512
    5. '.is' → logprob: -14.876360893249512
    6. '.can' → logprob: -14.876360893249512
    7. '.get' → logprob: -15.376360893249512
    8. '.Has' → logprob: -15.876360893249512
    9. 'has' → logprob: -16.001359939575195
    10. '.set' → logprob: -16.501359939575195

Token 150: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -2.7252845029579476e-05
    2. '_' → logprob: -11.250027656555176
    3. '_run' → logprob: -11.500027656555176
    4. '_r' → logprob: -13.250027656555176
    5. '_running' → logprob: -13.500027656555176
    6. 'runner' → logprob: -15.750027656555176
    7. ' _' → logprob: -16.75002670288086
    8. '```' → logprob: -16.75002670288086
    9. '

' → logprob: -16.87502670288086
    10. '__' → logprob: -17.00002670288086

Token 151: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024149708449840546
    2. '()' → logprob: -3.7741496562957764
    3. '():
' → logprob: -7.0241498947143555
    4. '(' → logprob: -11.399149894714355
    5. '():

' → logprob: -13.524149894714355
    6. '():
' → logprob: -14.649149894714355
    7. ' ():' → logprob: -14.899149894714355
    8. '()`' → logprob: -16.39914894104004
    9. '()
' → logprob: -16.64914894104004
    10. '(),' → logprob: -17.39914894104004

Token 152: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0936599001288414
    2. ':' → logprob: -2.9686598777770996
    3. '():
' → logprob: -4.4686598777771
    4. ':
' → logprob: -4.5936598777771
    5. '<|end|>' → logprob: -4.7186598777771
    6. '           ' → logprob: -6.3436598777771
    7. '():' → logprob: -6.5936598777771
    8. '                
' → logprob: -7.4686598777771
    9. '):
' → logprob: -7.5936598777771
    10. '<|end|>' → logprob: -7.5936598777771

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4289778769016266
    2. ' self' → logprob: -1.5539778470993042
    3. '               ' → logprob: -2.0539779663085938
    4. '                   ' → logprob: -5.178977966308594
    5. '                
' → logprob: -6.428977966308594
    6. '           ' → logprob: -7.678977966308594
    7. '                    
' → logprob: -8.178977966308594
    8. '
' → logprob: -8.678977966308594
    9. '                ' → logprob: -8.678977966308594
    10. ' 
' → logprob: -8.928977966308594

Token 154: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.011141783557832241
    2. '.' → logprob: -4.761141777038574
    3. '.set' → logprob: -6.636141777038574
    4. '.runner' → logprob: -6.886141777038574
    5. '.advance' → logprob: -9.636141777038574
    6. 'next' → logprob: -9.761141777038574
    7. ' .' → logprob: -10.886141777038574
    8. '       ' → logprob: -11.261141777038574
    9. '.run' → logprob: -11.636141777038574
    10. '._' → logprob: -12.261141777038574

Token 155: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -5.013994814362377e-05
    2. '._' → logprob: -10.50005054473877
    3. '_' → logprob: -10.87505054473877
    4. '.' → logprob: -13.50005054473877
    5. '_.' → logprob: -13.75005054473877
    6. 'Base' → logprob: -14.75005054473877
    7. '.base' → logprob: -14.87505054473877
    8. 'base' → logprob: -15.75005054473877
    9. '_Base' → logprob: -16.250049591064453
    10. '_BASE' → logprob: -16.500049591064453

Token 156: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0040947855450212955
    2. '.' → logprob: -5.50409460067749
    3. '.setdefault' → logprob: -11.504095077514648
    4. ' .' → logprob: -12.754095077514648
    5. '.advance' → logprob: -13.629095077514648
    6. '.s' → logprob: -14.254095077514648
    7. '.setter' → logprob: -15.129095077514648
    8. ').' → logprob: -15.379095077514648
    9. '.has' → logprob: -15.754095077514648
    10. '.run' → logprob: -16.50409507751465

Token 157: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -2.2200749754119897e-06
    2. '_run' → logprob: -13.625001907348633
    3. '_running' → logprob: -14.625001907348633
    4. '_' → logprob: -14.750001907348633
    5. 'runner' → logprob: -16.625001907348633
    6. '_r' → logprob: -17.000001907348633
    7. '_
' → logprob: -18.750001907348633
    8. ' runner' → logprob: -18.875001907348633
    9. ' _' → logprob: -19.375001907348633
    10. '```' → logprob: -19.375001907348633

Token 158: '(' (ID: 7)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.31326499581336975
    2. '(' → logprob: -1.3132649660110474
    3. 'True' → logprob: -12.813264846801758
    4. '(
' → logprob: -14.813264846801758
    5. ' True' → logprob: -15.938264846801758
    6. ' (' → logprob: -16.938264846801758
    7. '(False' → logprob: -17.063264846801758
    8. '(T' → logprob: -18.188264846801758
    9. '(true' → logprob: -18.438264846801758
    10. '(

' → logprob: -18.688264846801758

Token 159: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.693392276763916
    2. ' True' → logprob: -0.693392276763916
    3. '(True' → logprob: -8.318391799926758
    4. 'Tr' → logprob: -14.193391799926758
    5. '=True' → logprob: -15.443391799926758
    6. ' Tru' → logprob: -15.568391799926758
    7. ' Tr' → logprob: -17.068391799926758
    8. 'T' → logprob: -17.943391799926758
    9. '.True' → logprob: -18.193391799926758
    10. ')' → logprob: -18.443391799926758

Token 160: ' )
' (ID: 3270)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02524099126458168
    2. ')
' → logprob: -3.900240898132324
    3. ')' → logprob: -5.400240898132324
    4. 'self' → logprob: -10.275240898132324
    5. '           ' → logprob: -10.525240898132324
    6. '                ' → logprob: -10.525240898132324
    7. '
' → logprob: -11.025240898132324
    8. ' )
' → logprob: -11.025240898132324
    9. '                
' → logprob: -11.400240898132324
    10. ')
' → logprob: -11.775240898132324

Token 161: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000321995816193521
    2. 'self' → logprob: -8.250322341918945
    3. '           ' → logprob: -10.750322341918945
    4. '                
' → logprob: -11.375322341918945
    5. '			' → logprob: -11.875322341918945
    6. ' self' → logprob: -12.625322341918945
    7. '
' → logprob: -13.000322341918945
    8. '(self' → logprob: -13.125322341918945
    9. '()' → logprob: -13.750322341918945
    10. '                   ' → logprob: -14.000322341918945

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0024807697627693415
    2. '               ' → logprob: -6.252480983734131
    3. ' self' → logprob: -7.502480983734131
    4. '           ' → logprob: -15.877480506896973
    5. '	self' → logprob: -16.12748146057129
    6. 'return' → logprob: -16.37748146057129
    7. ' ' → logprob: -17.37748146057129
    8. '   ' → logprob: -18.25248146057129
    9. '                
' → logprob: -18.37748146057129
    10. '              ' → logprob: -19.00248146057129

Token 163: '.runner' (ID: 70825)
  Prédit: '.set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.7516471147537231
    2. '.runner' → logprob: -0.7516471147537231
    3. '.' → logprob: -2.8766469955444336
    4. ' .' → logprob: -8.376646995544434
    5. '.run' → logprob: -9.376646995544434
    6. '.renderer' → logprob: -10.626646995544434
    7. '.robot' → logprob: -11.001646995544434
    8. '._' → logprob: -11.126646995544434
    9. 'runner' → logprob: -11.376646995544434
    10. '.setter' → logprob: -11.376646995544434

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195372104644775
    2. '=' → logprob: -1.5019537210464478
    3. '=False' → logprob: -10.626954078674316
    4. 'False' → logprob: -15.126954078674316
    5. ' ' → logprob: -16.376953125
    6. ' False' → logprob: -17.501953125
    7. '＝' → logprob: -17.876953125
    8. '=
' → logprob: -18.501953125
    9. '(False' → logprob: -18.501953125
    10. '=True' → logprob: -18.751953125

Token 165: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.048587486147880554
    2. ' False' → logprob: -3.0485875606536865
    3. '(False' → logprob: -16.423587799072266
    4. '=False' → logprob: -19.298587799072266
    5. '_false' → logprob: -20.798587799072266
    6. '.False' → logprob: -20.798587799072266
    7. 'F' → logprob: -22.048587799072266
    8. 'false' → logprob: -22.298587799072266
    9. ' false' → logprob: -23.298587799072266
    10. '_FALSE' → logprob: -23.298587799072266

Token 166: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017459725961089134
    2. '
' → logprob: -4.892459869384766
    3. '<|end|>' → logprob: -5.017459869384766
    4. '       ' → logprob: -6.892459869384766
    5. 'return' → logprob: -6.892459869384766
    6. ' return' → logprob: -7.892459869384766
    7. '           ' → logprob: -7.892459869384766
    8. '                
' → logprob: -8.767459869384766
    9. '<|end|>' → logprob: -10.017459869384766
    10. '                ' → logprob: -10.767459869384766

Token 167: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025800178991630673
    2. 'return' → logprob: -8.875258445739746
    3. '       ' → logprob: -9.750258445739746
    4. '<|end|>' → logprob: -10.625258445739746
    5. '           ' → logprob: -10.750258445739746
    6. ' return' → logprob: -11.625258445739746
    7. '                
' → logprob: -14.000258445739746
    8. '   ' → logprob: -14.500258445739746
    9. '                ' → logprob: -14.500258445739746
    10. '			' → logprob: -14.500258445739746

Token 168: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005650744307786226
    2. '               ' → logprob: -5.755650520324707
    3. ' return' → logprob: -6.005650520324707
    4. '	return' → logprob: -13.130650520324707
    5. '
' → logprob: -13.380650520324707
    6. '           ' → logprob: -14.630650520324707
    7. ':return' → logprob: -15.005650520324707
    8. 'eturn' → logprob: -15.380650520324707
    9. '       ' → logprob: -15.880650520324707
    10. '                   ' → logprob: -16.005651473999023

Token 169: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.031328413635492325
    2. ' False' → logprob: -3.5313284397125244
    3. 'True' → logprob: -6.531328201293945
    4. ' True' → logprob: -9.031328201293945
    5. '   ' → logprob: -18.531328201293945
    6. '(False' → logprob: -18.531328201293945
    7. 'false' → logprob: -20.406328201293945
    8. 'None' → logprob: -20.531328201293945
    9. '.False' → logprob: -20.656328201293945
    10. ' ' → logprob: -20.781328201293945

Token 170: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11129254847764969
    2. '           ' → logprob: -2.486292600631714
    3. '<|end|>' → logprob: -3.986292600631714
    4. '
' → logprob: -6.361292362213135
    5. '        ' → logprob: -7.861292362213135
    6. '<|end|>' → logprob: -8.111292839050293
    7. 'return' → logprob: -8.611292839050293
    8. 'else' → logprob: -8.861292839050293
    9. '        
' → logprob: -8.986292839050293
    10. '#' → logprob: -9.236292839050293

Token 171: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036558933556079865
    2. '        ' → logprob: -3.7865588665008545
    3. '           ' → logprob: -4.786559104919434
    4. '	' → logprob: -6.661559104919434
    5. '<|end|>' → logprob: -7.161559104919434
    6. 'else' → logprob: -7.411559104919434
    7. '		' → logprob: -7.786559104919434
    8. '        
' → logprob: -7.911559104919434
    9. '   ' → logprob: -8.286559104919434
    10. '    ' → logprob: -8.286559104919434

Token 172: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09325980395078659
    2. 'else' → logprob: -2.718259811401367
    3. 'return' → logprob: -4.218259811401367
    4. ' else' → logprob: -4.843259811401367
    5. ' return' → logprob: -8.468259811401367
    6. '
' → logprob: -9.593259811401367
    7. '```' → logprob: -10.218259811401367
    8. 'self' → logprob: -10.343259811401367
    9. '#' (adapté à ' #') → logprob: -10.468259811401367
    10. 'raise' → logprob: -10.968259811401367

Token 173: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.5708658695220947
    2. 'else' → logprob: -1.6958658695220947
    3. 'if' → logprob: -1.8208658695220947
    4. 'self' → logprob: -2.0708658695220947
    5. 'elif' → logprob: -2.3208658695220947
    6. ' if' → logprob: -2.5708658695220947
    7. '#' → logprob: -2.6958658695220947
    8. ' else' → logprob: -3.6958658695220947
    9. ' return' → logprob: -3.8208658695220947
    10. ' self' → logprob: -4.195865631103516

Token 174: ' next' (ID: 2613)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12496888637542725
    2. 'self' → logprob: -2.374969005584717
    3. ' not' → logprob: -3.749969005584717
    4. 'not' → logprob: -7.249969005584717
    5. ' the' → logprob: -8.499968528747559
    6. ' ' → logprob: -11.624968528747559
    7. 'the' → logprob: -11.874968528747559
    8. '	self' → logprob: -13.624968528747559
    9. 'else' → logprob: -13.749968528747559
    10. ' this' → logprob: -13.999968528747559

Token 175: ' base' (ID: 3611)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -4.143808109802194e-05
    2. ':' → logprob: -11.000041007995605
    3. 'Base' → logprob: -11.375041007995605
    4. ' base' → logprob: -11.750041007995605
    5. '.' → logprob: -14.125041007995605
    6. '_' → logprob: -14.250041007995605
    7. '   ' → logprob: -14.500041007995605
    8. 'base' → logprob: -14.500041007995605
    9. '       ' → logprob: -15.000041007995605
    10. '#' → logprob: -15.250041007995605

Token 176: ' already' (ID: 4279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5078736543655396
    2. '.has' → logprob: -1.0078736543655396
    3. '.is' → logprob: -4.50787353515625
    4. ' is' → logprob: -4.63287353515625
    5. ' and' → logprob: -5.38287353515625
    6. ' has' → logprob: -6.13287353515625
    7. '.advance' → logprob: -6.38287353515625
    8. 'has' → logprob: -6.50787353515625
    9. ' .' → logprob: -7.38287353515625
    10. 'and' → logprob: -8.25787353515625

Token 177: ' occupied' (ID: 46186)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.18015816807746887
    2. ' has' → logprob: -1.8051581382751465
    3. '.has' → logprob: -8.055158615112305
    4. '	has' → logprob: -10.430158615112305
    5. '.' → logprob: -10.930158615112305
    6. '_has' → logprob: -11.055158615112305
    7. '           ' → logprob: -11.555158615112305
    8. '   ' → logprob: -11.805158615112305
    9. ' ' → logprob: -12.180158615112305
    10. '               ' → logprob: -13.430158615112305

Token 178: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6205909252166748
    2. ',' → logprob: -1.1205909252166748
    3. '               ' → logprob: -2.870590925216675
    4. ':' → logprob: -3.620590925216675
    5. ' and' → logprob: -3.745590925216675
    6. '           ' → logprob: -4.120591163635254
    7. '
' → logprob: -4.995591163635254
    8. ',
' → logprob: -6.745591163635254
    9. 'and' → logprob: -6.870591163635254
    10. ':return' → logprob: -7.245591163635254

Token 179: ' recursively' (ID: 130266)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04715680703520775
    2. ' return' → logprob: -3.172156810760498
    3. '           ' → logprob: -5.672156810760498
    4. '#' → logprob: -7.547156810760498
    5. '       ' → logprob: -9.17215633392334
    6. '               ' → logprob: -10.04715633392334
    7. ' #' → logprob: -11.04715633392334
    8. '   ' → logprob: -12.29715633392334
    9. 'if' → logprob: -13.04715633392334
    10. 'self' → logprob: -13.04715633392334

Token 180: ' advance' (ID: 14805)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1904665231704712
    2. 'self' → logprob: -1.8154665231704712
    3. '           ' → logprob: -4.940466403961182
    4. ' return' → logprob: -6.190466403961182
    5. ' self' → logprob: -7.690466403961182
    6. 'advance' → logprob: -8.06546688079834
    7. '               ' → logprob: -8.19046688079834
    8. 'if' → logprob: -8.56546688079834
    9. '```' → logprob: -9.06546688079834
    10. '
' → logprob: -10.56546688079834

Token 181: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009214557707309723
    2. ' self' → logprob: -5.259214401245117
    3. '           ' → logprob: -6.134214401245117
    4. '               ' → logprob: -7.384214401245117
    5. '(self' → logprob: -7.509214401245117
    6. 'the' → logprob: -8.634214401245117
    7. 'runner' → logprob: -9.134214401245117
    8. '```' → logprob: -9.509214401245117
    9. ' the' → logprob: -9.884214401245117
    10. '(' → logprob: -10.009214401245117

Token 182: ' runner' (ID: 39201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4819687008857727
    2. 'next' → logprob: -0.9819687008857727
    3. '.next' → logprob: -5.606968879699707
    4. 'runner' → logprob: -6.231968879699707
    5. ' next' → logprob: -6.356968879699707
    6. ' self' → logprob: -8.856968879699707
    7. ' runner' → logprob: -9.106968879699707
    8. '           ' → logprob: -9.231968879699707
    9. 'base' → logprob: -10.231968879699707
    10. '_next' → logprob: -10.731968879699707

Token 183: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4443607032299042
    2. '           ' → logprob: -1.0693607330322266
    3. ' and' → logprob: -5.194360733032227
    4. 'self' → logprob: -6.319360733032227
    5. '
' → logprob: -6.444360733032227
    6. 'return' → logprob: -6.444360733032227
    7. ' to' → logprob: -6.819360733032227
    8. ':
' → logprob: -7.569360733032227
    9. ' if' → logprob: -8.194360733032227
    10. '            
' → logprob: -8.194360733032227

Token 184: ' next' (ID: 2613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09220447391271591
    2. ' self' → logprob: -2.4672045707702637
    3. ' the' → logprob: -6.467204570770264
    4. 'the' → logprob: -6.467204570770264
    5. 'this' → logprob: -9.717204093933105
    6. '           ' → logprob: -9.967204093933105
    7. ' this' → logprob: -11.842204093933105
    8. '   ' → logprob: -11.967204093933105
    9. 'it' → logprob: -11.967204093933105
    10. '               ' → logprob: -12.342204093933105

Token 185: ' base' (ID: 3611)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -1.4736459888808895e-05
    2. 'base' → logprob: -11.250014305114746
    3. 'Base' → logprob: -14.625014305114746
    4. ' base' → logprob: -14.875014305114746
    5. '.base' → logprob: -15.125014305114746
    6. '```' → logprob: -15.250014305114746
    7. 'self' → logprob: -16.125015258789062
    8. '_' → logprob: -16.125015258789062
    9. '._' → logprob: -16.250015258789062
    10. '_line' → logprob: -17.875015258789062

Token 186: ' first' (ID: 1577)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3703697621822357
    2. '           ' → logprob: -1.245369791984558
    3. '()' → logprob: -5.495369911193848
    4. 'self' → logprob: -5.620369911193848
    5. 'return' → logprob: -5.620369911193848
    6. '()
' → logprob: -6.245369911193848
    7. ' and' → logprob: -6.620369911193848
    8. '
' → logprob: -6.745369911193848
    9. '(' → logprob: -6.870369911193848
    10. ' return' → logprob: -6.995369911193848

Token 187: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7725014686584473
    2. '           ' → logprob: -1.1475014686584473
    3. '
' → logprob: -1.7725014686584473
    4. 'self' → logprob: -3.2725014686584473
    5. 'return' → logprob: -5.522501468658447
    6. '                
' → logprob: -5.772501468658447
    7. '            
' → logprob: -5.897501468658447
    8. ' self' → logprob: -6.897501468658447
    9. '    
' → logprob: -7.522501468658447
    10. ' return' → logprob: -7.897501468658447

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0981394574046135
    2. '               ' → logprob: -2.598139524459839
    3. '
' → logprob: -4.09813928604126
    4. 'return' → logprob: -6.59813928604126
    5. ' return' → logprob: -7.84813928604126
    6. '            
' → logprob: -7.84813928604126
    7. ' if' → logprob: -9.348139762878418
    8. '                
' → logprob: -9.598139762878418
    9. '    
' → logprob: -9.848139762878418
    10. 'if' → logprob: -10.223139762878418

Token 189: ' runs' (ID: 13719)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0828620120882988
    2. '           ' → logprob: -3.45786190032959
    3. 'self' → logprob: -3.83286190032959
    4. ' if' → logprob: -4.08286190032959
    5. 'return' → logprob: -5.20786190032959
    6. 'result' → logprob: -6.20786190032959
    7. '               ' → logprob: -7.08286190032959
    8. ' self' → logprob: -7.20786190032959
    9. '       ' → logprob: -9.45786190032959
    10. ' return' → logprob: -9.70786190032959

Token 190: '_sc' (ID: 29726)
  Prédit: '_sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sc' → logprob: -0.7132858037948608
    2. ' =' → logprob: -0.8382858037948608
    3. '_' → logprob: -2.7132859230041504
    4. '=' → logprob: -4.71328592300415
    5. '_s' → logprob: -6.83828592300415
    6. '_score' → logprob: -8.213285446166992
    7. ' ' → logprob: -8.963285446166992
    8. 'sc' → logprob: -9.463285446166992
    9. '_scores' → logprob: -9.463285446166992
    10. '_generated' → logprob: -9.463285446166992

Token 191: 'ored' (ID: 4142)
  Prédit: 'ored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ored' → logprob: -0.002237447304651141
    2. 'ore' → logprob: -6.252237319946289
    3. 'or' → logprob: -9.252237319946289
    4. 'ores' → logprob: -10.002237319946289
    5. 'o' → logprob: -10.127237319946289
    6. ' ored' → logprob: -10.127237319946289
    7. '[' → logprob: -11.377237319946289
    8. '   ' → logprob: -11.627237319946289
    9. '```' → logprob: -11.627237319946289
    10. '=' → logprob: -12.252237319946289

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02328578010201454
    2. '=' → logprob: -3.7732858657836914
    3. ' +=' → logprob: -10.773285865783691
    4. ' ' → logprob: -11.398285865783691
    5. '()' → logprob: -12.898285865783691
    6. ',' → logprob: -13.148285865783691
    7. ' |=' → logprob: -13.523285865783691
    8. '(' → logprob: -14.398285865783691
    9. '   ' → logprob: -14.523285865783691
    10. '	' → logprob: -14.773285865783691

Token 193: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12693944573402405
    2. 'self' → logprob: -2.126939535140991
    3. '	self' → logprob: -11.62693977355957
    4. ' ' → logprob: -14.50193977355957
    5. '(self' → logprob: -14.50193977355957
    6. '   ' → logprob: -14.62693977355957
    7. '           ' → logprob: -15.00193977355957
    8. ' ' → logprob: -15.37693977355957
    9. '       ' → logprob: -16.50193977355957
    10. '_self' → logprob: -16.62693977355957

Token 194: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -5.574251918005757e-05
    2. '.' → logprob: -9.875055313110352
    3. 'next' → logprob: -12.500055313110352
    4. '.advance' → logprob: -14.750055313110352
    5. ' .' → logprob: -17.25005531311035
    6. 'Next' → logprob: -18.25005531311035
    7. '\.' → logprob: -18.25005531311035
    8. '.previous' → logprob: -18.87505531311035
    9. '.current' → logprob: -19.12505531311035
    10. '	next' → logprob: -19.12505531311035

Token 195: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -3.531315314830863e-06
    2. '._' → logprob: -12.750003814697266
    3. '.base' → logprob: -14.875003814697266
    4. '.' → logprob: -16.375003814697266
    5. '_.' → logprob: -16.750003814697266
    6. 'base' → logprob: -16.875003814697266
    7. 'Base' → logprob: -17.000003814697266
    8. '_' → logprob: -17.125003814697266
    9. '_BASE' → logprob: -17.750003814697266
    10. '_bas' → logprob: -17.875003814697266

Token 196: '.advance' (ID: 170572)
  Prédit: '.advance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.advance' → logprob: -7.755678961984813e-05
    2. '.' → logprob: -9.500077247619629
    3. ' .' → logprob: -13.375077247619629
    4. '.increment' → logprob: -15.250077247619629
    5. '.extend' → logprob: -15.625077247619629
    6. 'advance' → logprob: -15.625077247619629
    7. '.expand' → logprob: -16.125078201293945
    8. '   ' → logprob: -16.500078201293945
    9. '.Adv' → logprob: -16.625078201293945
    10. '.ad' → logprob: -16.875078201293945

Token 197: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -1.9361264946837764e-07
    2. '_r' → logprob: -17.625
    3. '_run' → logprob: -17.625
    4. 'Runner' → logprob: -17.875
    5. 'runner' → logprob: -17.875
    6. '_' → logprob: -17.875
    7. '_running' → logprob: -18.75
    8. '_reader' → logprob: -18.875
    9. '(_' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 198: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003291425062343478
    2. '()
' → logprob: -5.753291606903076
    3. '(' → logprob: -9.128291130065918
    4. '()
' → logprob: -13.003291130065918
    5. '()

' → logprob: -13.378291130065918
    6. ' ()' → logprob: -14.253291130065918
    7. '(
' → logprob: -15.378291130065918
    8. '()`' → logprob: -16.503292083740234
    9. '（）' → logprob: -16.503292083740234
    10. '()>' → logprob: -16.753292083740234

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013604137115180492
    2. '               ' → logprob: -4.763604164123535
    3. ' if' → logprob: -5.638604164123535
    4. '            
' → logprob: -7.388604164123535
    5. '
' → logprob: -8.263604164123535
    6. 'if' → logprob: -8.388604164123535
    7. 'return' → logprob: -9.138604164123535
    8. '                
' → logprob: -9.638604164123535
    9. ' return' → logprob: -10.263604164123535
    10. '            ' → logprob: -10.888604164123535

Token 200: ' self' (ID: 1051)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4563700556755066
    2. 'if' → logprob: -1.5813701152801514
    3. '           ' → logprob: -1.8313701152801514
    4. '
' → logprob: -8.83137035369873
    5. '               ' → logprob: -8.83137035369873
    6. '       ' → logprob: -9.33137035369873
    7. '   ' → logprob: -10.20637035369873
    8. 'return' → logprob: -10.58137035369873
    9. ' return' → logprob: -10.95637035369873
    10. ' self' → logprob: -11.08137035369873

Token 201: '.next' (ID: 6689)
  Prédit: '.runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.runner' → logprob: -0.06169358268380165
    2. '.' → logprob: -2.9366936683654785
    3. '.next' → logprob: -5.0616936683654785
    4. ' .' → logprob: -8.93669319152832
    5. '.set' → logprob: -9.18669319152832
    6. '.advance' → logprob: -9.31169319152832
    7. '.run' → logprob: -9.81169319152832
    8. 'runner' → logprob: -11.06169319152832
    9. ' runner' → logprob: -11.81169319152832
    10. '.
' → logprob: -11.81169319152832

Token 202: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.0003049570368602872
    2. '._' → logprob: -8.62530517578125
    3. '_' → logprob: -9.62530517578125
    4. '_runner' → logprob: -10.62530517578125
    5. '.' → logprob: -11.25030517578125
    6. 'Base' → logprob: -11.87530517578125
    7. '.set' → logprob: -12.25030517578125
    8. '.base' → logprob: -12.37530517578125
    9. '_set' → logprob: -13.00030517578125
    10. '_.' → logprob: -14.00030517578125

Token 203: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.002341161947697401
    2. '.advance' → logprob: -6.377341270446777
    3. '.' → logprob: -7.377341270446777
    4. '().' → logprob: -12.002341270446777
    5. ' .' → logprob: -12.627341270446777
    6. '.setdefault' → logprob: -13.502341270446777
    7. '.move' → logprob: -14.252341270446777
    8. ').' → logprob: -14.502341270446777
    9. '.has' → logprob: -15.252341270446777
    10. 'set' → logprob: -15.752341270446777

Token 204: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -2.339278580620885e-06
    2. 'runner' → logprob: -13.750001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_running' → logprob: -15.000001907348633
    5. ' runner' → logprob: -15.500001907348633
    6. 'Runner' → logprob: -16.125001907348633
    7. '_r' → logprob: -16.750001907348633
    8. '_run' → logprob: -17.125001907348633
    9. '.runner' → logprob: -17.625001907348633
    10. '(' → logprob: -18.500001907348633

Token 205: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0626363605260849
    2. '(True' → logprob: -2.812636375427246
    3. '(False' → logprob: -7.312636375427246
    4. 'True' → logprob: -13.687636375427246
    5. '()' → logprob: -15.687636375427246
    6. 'False' → logprob: -16.56263542175293
    7. ' (' → logprob: -16.68763542175293
    8. '(
' → logprob: -16.93763542175293
    9. ' True' → logprob: -19.43763542175293
    10. '(None' → logprob: -20.31263542175293

Token 206: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3257553279399872
    2. ' False' → logprob: -2.0757553577423096
    3. 'True' → logprob: -2.5757553577423096
    4. 'False' → logprob: -2.5757553577423096
    5. '(True' → logprob: -8.20075511932373
    6. '(False' → logprob: -9.32575511932373
    7. '(' → logprob: -16.575756072998047
    8. ')' → logprob: -16.950756072998047
    9. '.True' → logprob: -17.575756072998047
    10. ' ' → logprob: -17.700756072998047

Token 207: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08100232481956482
    2. ')
' → logprob: -2.7060022354125977
    3. '<|end|>' → logprob: -5.831002235412598
    4. '
' → logprob: -5.956002235412598
    5. ' )' → logprob: -6.081002235412598
    6. '           ' → logprob: -6.581002235412598
    7. ' )
' → logprob: -7.081002235412598
    8. '()' → logprob: -7.831002235412598
    9. '()
' → logprob: -8.581002235412598
    10. ')return' → logprob: -9.081002235412598

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004907108377665281
    2. '               ' → logprob: -6.379907131195068
    3. '
' → logprob: -6.504907131195068
    4. '       ' → logprob: -8.00490665435791
    5. '            
' → logprob: -8.00490665435791
    6. ' 
' → logprob: -8.37990665435791
    7. '<|end|>' → logprob: -8.37990665435791
    8. 'self' → logprob: -8.50490665435791
    9. 'return' → logprob: -9.00490665435791
    10. '    
' → logprob: -9.62990665435791

Token 209: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1704804003238678
    2. 'self' (adapté à ' self') → logprob: -1.9204803705215454
    3. ' self' → logprob: -5.045480251312256
    4. '               ' → logprob: -5.795480251312256
    5. '       ' → logprob: -7.795480251312256
    6. '
' → logprob: -9.545480728149414
    7. '   ' → logprob: -9.920480728149414
    8. ' 
' → logprob: -10.295480728149414
    9. ' ' → logprob: -10.420480728149414
    10. 'return' → logprob: -10.670480728149414

Token 210: '.runner' (ID: 70825)
  Prédit: '.runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.runner' → logprob: -0.16036102175712585
    2. '.' → logprob: -1.9103610515594482
    3. 'runner' → logprob: -9.660361289978027
    4. '.next' → logprob: -10.410361289978027
    5. '.
' → logprob: -10.910361289978027
    6. '._' → logprob: -11.910361289978027
    7. ' runner' → logprob: -12.035361289978027
    8. '.run' → logprob: -12.285361289978027
    9. '.set' → logprob: -13.285361289978027
    10. ' .' → logprob: -13.535361289978027

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067170290276408195
    2. '=' → logprob: -5.006717205047607
    3. '=False' → logprob: -13.88171672821045
    4. ' ' → logprob: -14.25671672821045
    5. ' =
' → logprob: -17.131717681884766
    6. 'False' → logprob: -17.256717681884766
    7. ')' → logprob: -18.631717681884766
    8. ' False' → logprob: -18.756717681884766
    9. '.' → logprob: -19.506717681884766
    10. '＝' → logprob: -19.506717681884766

Token 212: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759397745132446
    2. 'False' → logprob: -0.8259397745132446
    3. '(False' → logprob: -15.325940132141113
    4. ' True' → logprob: -17.200939178466797
    5. '=False' → logprob: -17.200939178466797
    6. 'True' → logprob: -18.950939178466797
    7. 'F' → logprob: -19.575939178466797
    8. '.False' → logprob: -19.700939178466797
    9. ' ' → logprob: -20.450939178466797
    10. '_false' → logprob: -20.950939178466797

Token 213: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008074773475527763
    2. 'return' → logprob: -5.008074760437012
    3. '
' → logprob: -7.383074760437012
    4. ' return' → logprob: -7.883074760437012
    5. '            
' → logprob: -9.008074760437012
    6. '               ' → logprob: -9.508074760437012
    7. '		' → logprob: -10.133074760437012
    8. '       ' → logprob: -10.258074760437012
    9. ' 
' → logprob: -10.383074760437012
    10. '  
' → logprob: -11.508074760437012

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001096999505534768
    2. 'return' → logprob: -7.751097202301025
    3. '       ' → logprob: -8.126096725463867
    4. '		' → logprob: -9.251096725463867
    5. ' return' → logprob: -9.251096725463867
    6. '   ' → logprob: -9.751096725463867
    7. '
' → logprob: -10.501096725463867
    8. '	return' → logprob: -10.501096725463867
    9. '               ' → logprob: -10.751096725463867
    10. '            
' → logprob: -11.626096725463867

Token 215: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0668410137295723
    2. '           ' → logprob: -3.3168411254882812
    3. ' return' → logprob: -3.5668411254882812
    4. '       ' → logprob: -9.191841125488281
    5. '   ' → logprob: -10.566841125488281
    6. '	return' → logprob: -11.441841125488281
    7. '		' → logprob: -13.566841125488281
    8. '               ' → logprob: -13.941841125488281
    9. '          ' → logprob: -14.691841125488281
    10. ' ' → logprob: -14.691841125488281

Token 216: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.0004487844998948276
    2. ' runs' → logprob: -7.875448703765869
    3. 'False' → logprob: -10.000449180603027
    4. 'run' → logprob: -10.875449180603027
    5. ' False' → logprob: -13.500449180603027
    6. '   ' → logprob: -14.000449180603027
    7. 'not' → logprob: -14.500449180603027
    8. 'r' → logprob: -15.000449180603027
    9. 'returns' → logprob: -15.250449180603027
    10. 'running' → logprob: -15.750449180603027

Token 217: '_sc' (ID: 29726)
  Prédit: '_sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sc' → logprob: -0.0029782988131046295
    2. '_' → logprob: -6.002978324890137
    3. '_scores' → logprob: -8.002978324890137
    4. '_score' → logprob: -9.377978324890137
    5. '_s' → logprob: -9.752978324890137
    6. '_sk' → logprob: -11.627978324890137
    7. 's' → logprob: -12.377978324890137
    8. '_scaled' → logprob: -12.752978324890137
    9. ' _' → logprob: -14.002978324890137
    10. 'ed' → logprob: -14.127978324890137

Token 218: 'ored' (ID: 4142)
  Prédit: 'ored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ored' → logprob: -4.4894986785948277e-05
    2. 'o' → logprob: -11.250044822692871
    3. 'ore' → logprob: -11.875044822692871
    4. 'red' → logprob: -11.875044822692871
    5. '[' → logprob: -12.375044822692871
    6. 'ores' → logprob: -12.875044822692871
    7. ' ored' → logprob: -13.375044822692871
    8. '_' → logprob: -13.500044822692871
    9. 'or' → logprob: -13.500044822692871
    10. '
' → logprob: -14.125044822692871

Token 219: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043557025492191315
    2. 'return' (adapté à ' return') → logprob: -6.2543559074401855
    3. '   ' → logprob: -6.3793559074401855
    4. 'else' → logprob: -7.3793559074401855
    5. ' else' → logprob: -10.004355430603027
    6. ' return' → logprob: -10.629355430603027
    7. '	' → logprob: -11.129355430603027
    8. '        
' → logprob: -12.379355430603027
    9. '
' → logprob: -13.004355430603027
    10. 'False' → logprob: -13.004355430603027

Token 222: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16022412478923798
    2. 'False' → logprob: -1.9102240800857544
    3. '(False' → logprob: -18.16022491455078
    4. ' None' → logprob: -18.53522491455078
    5. '_false' → logprob: -20.53522491455078
    6. 'None' → logprob: -20.53522491455078
    7. ' ' → logprob: -20.78522491455078
    8. '=False' → logprob: -21.66022491455078
    9. '.False' → logprob: -21.78522491455078
    10. ' false' → logprob: -22.03522491455078

Token 223: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010024861432611942
    2. 'c' → logprob: -5.0100250244140625
    3. ' class' → logprob: -6.0100250244140625
    4. '#' → logprob: -8.510025024414062
    5. '
' → logprob: -8.510025024414062
    6. '(' → logprob: -9.135025024414062
    7. '```' → logprob: -9.385025024414062
    8. ' 
' → logprob: -9.510025024414062
    9. ' ' → logprob: -10.135025024414062
    10. '\n' → logprob: -10.760025024414062

Token 225: ' Bases' (ID: 194177)
  Prédit: ' First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' First' → logprob: -0.6318115592002869
    2. ' Home' → logprob: -1.6318116188049316
    3. 'First' → logprob: -2.7568116188049316
    4. 'Base' → logprob: -3.2568116188049316
    5. ' ' → logprob: -3.3818116188049316
    6. ' Base' → logprob: -3.6318116188049316
    7. 'Home' → logprob: -3.8818116188049316
    8. ' In' → logprob: -4.131811618804932
    9. ' Third' → logprob: -4.381811618804932
    10. ' Batter' → logprob: -4.506811618804932

Token 226: 'Manager' (ID: 2774)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07128851115703583
    2. '(' → logprob: -2.696288585662842
    3. ' :' → logprob: -7.571288585662842
    4. ':
' → logprob: -7.821288585662842
    5. '(object' → logprob: -7.946288585662842
    6. '():' → logprob: -10.196288108825684
    7. '(Base' → logprob: -11.446288108825684
    8. ',' → logprob: -11.946288108825684
    9. '(B' → logprob: -11.946288108825684
    10. '):' → logprob: -12.696288108825684

Token 227: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04059223085641861
    2. '(' → logprob: -3.2905921936035156
    3. ' :' → logprob: -6.165592193603516
    4. ':
' → logprob: -7.915592193603516
    5. '(object' → logprob: -10.165592193603516
    6. '():' → logprob: -10.540592193603516
    7. ' (' → logprob: -12.415592193603516
    8. ' :
' → logprob: -12.540592193603516
    9. '):' → logprob: -13.290592193603516
    10. ':

' → logprob: -13.915592193603516

Token 228: ' object' (ID: 2817)
  Prédit: ' object'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' object' → logprob: -0.6598983407020569
    2. 'object' → logprob: -0.7848983407020569
    3. '(object' → logprob: -4.409898281097412
    4. ' ):' → logprob: -4.534898281097412
    5. '):' → logprob: -5.909898281097412
    6. ')object' → logprob: -7.909898281097412
    7. '	object' → logprob: -8.03489875793457
    8. ' )' → logprob: -8.40989875793457
    9. ' ):
' → logprob: -8.78489875793457
    10. ':' → logprob: -9.40989875793457

Token 229: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4823901355266571
    2. ' ):' → logprob: -1.1073901653289795
    3. '):
' → logprob: -3.4823901653289795
    4. ' ):
' → logprob: -3.8573901653289795
    5. ')' → logprob: -8.607390403747559
    6. ' )' → logprob: -8.857390403747559
    7. '):
' → logprob: -10.607390403747559
    8. '):

' → logprob: -10.857390403747559
    9. '   ' → logprob: -11.232390403747559
    10. ' ' → logprob: -11.482390403747559

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10218735784292221
    2. ' def' → logprob: -2.727187395095825
    3. 'def' → logprob: -4.477187156677246
    4. '    
' → logprob: -4.602187156677246
    5. '
' → logprob: -4.977187156677246
    6. '    ' → logprob: -6.227187156677246
    7. '	def' → logprob: -7.227187156677246
    8. ' 
' → logprob: -8.602187156677246
    9. '(' → logprob: -8.602187156677246
    10. '     
' → logprob: -8.852187156677246

Token 231: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03721050173044205
    2. 'def' → logprob: -3.412210464477539
    3. '   ' → logprob: -5.662210464477539
    4. '    ' → logprob: -10.037210464477539
    5. ' """' → logprob: -10.787210464477539
    6. ' """
' → logprob: -12.037210464477539
    7. '	def' → logprob: -12.412210464477539
    8. ' ' → logprob: -12.662210464477539
    9. '"""' → logprob: -12.662210464477539
    10. '"""
' (adapté à ' """
') → logprob: -14.162210464477539

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28017812967300415
    2. ' """' → logprob: -1.9051780700683594
    3. '"""' → logprob: -3.0301780700683594
    4. ' """
' → logprob: -4.405178070068359
    5. '    ' → logprob: -4.530178070068359
    6. ' ' → logprob: -4.655178070068359
    7. '  ' → logprob: -5.530178070068359
    8. 'def' → logprob: -6.155178070068359
    9. 'class' → logprob: -6.405178070068359
    10. ' def' → logprob: -6.655178070068359

Token 233: ' Manage' (ID: 55231)
  Prédit: ' Man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Man' → logprob: -0.2804107069969177
    2. 'Man' → logprob: -1.5304107666015625
    3. ' def' → logprob: -4.1554107666015625
    4. 'def' → logprob: -5.4054107666015625
    5. 'Manage' (adapté à ' Manage') → logprob: -5.7804107666015625
    6. ' Manage' → logprob: -6.4054107666015625
    7. '   ' → logprob: -6.6554107666015625
    8. ' """
' → logprob: -7.6554107666015625
    9. '"""' → logprob: -8.280410766601562
    10. ' manages' → logprob: -8.530410766601562

Token 234: ' all' (ID: 722)
  Prédit: ' bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.6643423438072205
    2. ' the' → logprob: -1.4143424034118652
    3. ' ' → logprob: -1.7893424034118652
    4. ' Bases' → logprob: -3.7893424034118652
    5. 's' → logprob: -4.289342403411865
    6. ' a' → logprob: -4.414342403411865
    7. '  ' → logprob: -5.164342403411865
    8. '   ' → logprob: -5.414342403411865
    9. ' all' → logprob: -5.539342403411865
    10. 'Bases' → logprob: -5.664342403411865

Token 235: ' bases' (ID: 31148)
  Prédit: ' bases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.2678503096103668
    2. '   ' → logprob: -2.767850399017334
    3. ' four' → logprob: -3.017850399017334
    4. 'bases' → logprob: -3.267850399017334
    5. ' the' → logprob: -3.392850399017334
    6. ' ' → logprob: -4.017850399017334
    7. '_b' → logprob: -4.642850399017334
    8. '_' → logprob: -4.767850399017334
    9. 'Bases' → logprob: -5.142850399017334
    10. ' Bases' → logprob: -5.392850399017334

Token 236: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7269132733345032
    2. ' and' → logprob: -1.4769132137298584
    3. ':' → logprob: -1.9769132137298584
    4. '(' → logprob: -2.7269132137298584
    5. ' in' → logprob: -3.7269132137298584
    6. ' (' → logprob: -3.8519132137298584
    7. ':
' → logprob: -4.3519134521484375
    8. '.' → logprob: -5.1019134521484375
    9. ' for' → logprob: -5.2269134521484375
    10. ',' → logprob: -5.6019134521484375

Token 237: ' their' (ID: 1043)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056347839534282684
    2. ' and' → logprob: -3.5563478469848633
    3. '    
' → logprob: -4.806347846984863
    4. ' bases' → logprob: -5.556347846984863
    5. '    ' → logprob: -5.806347846984863
    6. ' including' → logprob: -5.931347846984863
    7. 'and' → logprob: -6.556347846984863
    8. ' keeping' → logprob: -6.806347846984863
    9. '   
' → logprob: -7.556347846984863
    10. '  ' → logprob: -7.681347846984863

Token 238: ' runners' (ID: 61876)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.5971758365631104
    2. ' positions' → logprob: -1.0971758365631104
    3. ' connections' → logprob: -3.0971758365631104
    4. ' bases' → logprob: -3.8471758365631104
    5. ' state' → logprob: -4.347175598144531
    6. ' set' → logprob: -4.847175598144531
    7. ' next' → logprob: -5.097175598144531
    8. ' links' → logprob: -5.597175598144531
    9. ' initialization' → logprob: -6.097175598144531
    10. ' references' → logprob: -6.222175598144531

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10556085407733917
    2. ' and' → logprob: -2.730560779571533
    3. '   ' → logprob: -4.230560779571533
    4. 'and' → logprob: -4.480560779571533
    5. ' ,' → logprob: -5.355560779571533
    6. ',
' → logprob: -5.980560779571533
    7. '.' → logprob: -7.355560779571533
    8. ':' → logprob: -7.480560779571533
    9. '<|end|>' → logprob: -9.105561256408691
    10. '(' → logprob: -9.605561256408691

Token 240: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009349319152534008
    2. 'and' → logprob: -4.759349346160889
    3. ' current' → logprob: -7.884349346160889
    4. '   ' → logprob: -9.13434886932373
    5. ' their' → logprob: -9.88434886932373
    6. ' initial' → logprob: -10.25934886932373
    7. ' positions' → logprob: -10.88434886932373
    8. ' the' → logprob: -11.00934886932373
    9. ' bases' → logprob: -11.13434886932373
    10. ' starting' → logprob: -11.25934886932373

Token 241: ' advancing' (ID: 74857)
  Prédit: ' scoring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scoring' → logprob: -0.8048325777053833
    2. ' the' → logprob: -0.9298325777053833
    3. ' runs' → logprob: -3.3048324584960938
    4. ' advancing' → logprob: -3.6798324584960938
    5. ' their' → logprob: -4.429832458496094
    6. ' advances' → logprob: -4.679832458496094
    7. ' advance' → logprob: -4.679832458496094
    8. ' advancement' → logprob: -4.804832458496094
    9. 'runs' → logprob: -4.804832458496094
    10. 'the' → logprob: -4.929832458496094

Token 242: ' logic' (ID: 18485)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.095171570777893
    2. ' the' → logprob: -1.095171570777893
    3. ' them' → logprob: -1.595171570777893
    4. ' runners' → logprob: -2.9701714515686035
    5. ' logic' → logprob: -3.4701714515686035
    6. 'def' → logprob: -4.5951714515686035
    7. 'them' → logprob: -5.0951714515686035
    8. 'the' → logprob: -5.3451714515686035
    9. ' bases' → logprob: -5.5951714515686035
    10. ' def' → logprob: -5.7201714515686035

Token 243: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6123899817466736
    2. ':' → logprob: -0.9873899817466736
    3. ':
' → logprob: -3.3623900413513184
    4. '.' → logprob: -3.8623900413513184
    5. '
' → logprob: -4.737390041351318
    6. ',' → logprob: -5.237390041351318
    7. ' :
' → logprob: -5.487390041351318
    8. '(' → logprob: -5.737390041351318
    9. ' :' → logprob: -5.987390041351318
    10. '    
' → logprob: -6.487390041351318

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08453761041164398
    2. '
' → logprob: -3.5845375061035156
    3. ' def' → logprob: -3.5845375061035156
    4. '    
' → logprob: -4.334537506103516
    5. '    ' → logprob: -4.709537506103516
    6. ' 
' → logprob: -6.834537506103516
    7. 'def' → logprob: -6.834537506103516
    8. '     
' → logprob: -7.334537506103516
    9. '```' → logprob: -8.084537506103516
    10. '   
' → logprob: -8.959537506103516

Token 245: ' Uses' (ID: 69986)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.769260585308075
    2. 'def' → logprob: -1.2692606449127197
    3. '   ' → logprob: -1.3942606449127197
    4. '
' → logprob: -5.394260406494141
    5. '    
' → logprob: -6.519260406494141
    6. '    ' → logprob: -6.644260406494141
    7. ' 
' → logprob: -9.51926040649414
    8. '```' → logprob: -9.89426040649414
    9. '	def' → logprob: -10.26926040649414
    10. ' ' → logprob: -10.76926040649414

Token 246: ' a' (ID: 261)
  Prédit: ' three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.23673968017101288
    2. 'three' → logprob: -2.6117396354675293
    3. ' a' → logprob: -2.8617396354675293
    4. ' the' → logprob: -2.9867396354675293
    5. 'a' → logprob: -5.111739635467529
    6. ' self' → logprob: -5.111739635467529
    7. ' home' → logprob: -5.486739635467529
    8. ' first' → logprob: -6.361739635467529
    9. 'self' → logprob: -6.611739635467529
    10. 'the' → logprob: -6.736739635467529

Token 247: ' linked' (ID: 17002)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.45628005266189575
    2. ' linked' → logprob: -1.706279993057251
    3. ' chain' → logprob: -3.081279993057251
    4. ' circular' → logprob: -3.456279993057251
    5. 'list' → logprob: -3.956279993057251
    6. ' diamond' → logprob: -4.33128023147583
    7. 'c' → logprob: -4.33128023147583
    8. ' dictionary' → logprob: -4.83128023147583
    9. 'diamond' → logprob: -4.83128023147583
    10. 'linked' → logprob: -4.95628023147583

Token 248: ' structure' (ID: 8866)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15570038557052612
    2. 'list' → logprob: -2.030700445175171
    3. ' structure' → logprob: -4.905700206756592
    4. ' chain' → logprob: -5.905700206756592
    5. '-list' → logprob: -6.530700206756592
    6. 'chain' → logprob: -7.530700206756592
    7. '   ' → logprob: -8.15570068359375
    8. 'structure' → logprob: -8.40570068359375
    9. ' sequence' → logprob: -8.90570068359375
    10. '_list' → logprob: -9.90570068359375

Token 249: ':' (ID: 25)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.309921532869339
    2. ' of' → logprob: -1.4349215030670166
    3. ' for' → logprob: -3.9349215030670166
    4. ' between' → logprob: -5.684921741485596
    5. ' where' → logprob: -6.309921741485596
    6. ' with' → logprob: -6.684921741485596
    7. 'to' → logprob: -7.059921741485596
    8. 'of' → logprob: -7.559921741485596
    9. '   ' → logprob: -7.684921741485596
    10. ',' → logprob: -8.684921264648438

Token 250: ' First' (ID: 8338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2172633558511734
    2. ' first' → logprob: -2.2172634601593018
    3. ' First' → logprob: -3.9672634601593018
    4. '       ' → logprob: -4.217263221740723
    5. ' home' → logprob: -4.342263221740723
    6. ' self' → logprob: -4.842263221740723
    7. '
' → logprob: -5.217263221740723
    8. ' ' → logprob: -5.217263221740723
    9. 'First' → logprob: -5.467263221740723
    10. 'first' → logprob: -5.717263221740723

Token 251: ' ->' (ID: 2747)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.01871977001428604
    2. '_base' → logprob: -4.143719673156738
    3. '_Base' → logprob: -6.893719673156738
    4. 'base' → logprob: -7.143719673156738
    5. ',' → logprob: -7.518719673156738
    6. ' base' → logprob: -9.268719673156738
    7. 'Bas' → logprob: -9.518719673156738
    8. ' Base' → logprob: -10.018719673156738
    9. '_' → logprob: -10.143719673156738
    10. '(base' → logprob: -10.393719673156738

Token 252: ' Second' (ID: 16652)
  Prédit: 'Second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.03836241737008095
    2. ' Second' → logprob: -3.288362503051758
    3. 'second' → logprob: -9.413362503051758
    4. 'Base' → logprob: -9.538362503051758
    5. '   ' → logprob: -9.788362503051758
    6. ' second' → logprob: -10.288362503051758
    7. 'First' → logprob: -10.413362503051758
    8. ' ' → logprob: -10.913362503051758
    9. 'Middle' → logprob: -12.038362503051758
    10. 'Third' → logprob: -12.413362503051758

Token 253: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.014900267124176025
    2. '   ' → logprob: -5.139900207519531
    3. '_base' → logprob: -5.889900207519531
    4. '->' → logprob: -6.139900207519531
    5. ',' → logprob: -6.514900207519531
    6. 'Base' → logprob: -7.139900207519531
    7. '
' → logprob: -7.764900207519531
    8. ' ' → logprob: -8.139900207519531
    9. ' ,' → logprob: -9.014900207519531
    10. ' base' → logprob: -9.014900207519531

Token 254: ' Third' (ID: 35108)
  Prédit: ' Third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Third' → logprob: -0.062021348625421524
    2. 'Third' → logprob: -2.812021255493164
    3. ' third' → logprob: -10.062021255493164
    4. ' ' → logprob: -12.437021255493164
    5. ' ' → logprob: -12.562021255493164
    6. 'third' → logprob: -14.312021255493164
    7. '3' → logprob: -15.312021255493164
    8. '第三' → logprob: -15.437021255493164
    9. ' Dritt' → logprob: -15.437021255493164
    10. ' Middle' → logprob: -15.562021255493164

Token 255: ' ->' (ID: 2747)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23356135189533234
    2. '   ' → logprob: -1.733561396598816
    3. '    
' → logprob: -3.8585612773895264
    4. '
    
' → logprob: -6.4835615158081055
    5. '<|end|>' → logprob: -6.4835615158081055
    6. '```' → logprob: -6.7335615158081055
    7. '

' → logprob: -7.1085615158081055
    8. '  
' → logprob: -7.4835615158081055
    9. ' bases' → logprob: -7.4835615158081055
    10. '<|end|>' → logprob: -7.4835615158081055

Token 256: ' None' (ID: 4662)
  Prédit: 'Home'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Home' → logprob: -0.06935335695743561
    2. ' Home' → logprob: -2.8193533420562744
    3. ' home' → logprob: -5.4443535804748535
    4. 'home' → logprob: -5.9443535804748535
    5. '   ' → logprob: -9.069353103637695
    6. 'Base' → logprob: -9.819353103637695
    7. 'Fourth' → logprob: -10.069353103637695
    8. 'First' → logprob: -10.319353103637695
    9. '_home' → logprob: -10.569353103637695
    10. ' ' → logprob: -10.569353103637695

Token 257: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14750225841999054
    2. '   ' → logprob: -2.0225021839141846
    3. '    
' → logprob: -5.522502422332764
    4. '

' → logprob: -7.772502422332764
    5. 'def' → logprob: -9.022501945495605
    6. ',' → logprob: -10.022501945495605
    7. '  
' → logprob: -10.147501945495605
    8. '<|end|>' → logprob: -10.397501945495605
    9. ' 
' → logprob: -10.772501945495605
    10. ',
' → logprob: -11.147501945495605

Token 258: 'home' (ID: 9603)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09678618609905243
    2. ' )' → logprob: -2.4717862606048584
    3. ' home' → logprob: -6.096786022186279
    4. ')
' → logprob: -6.096786022186279
    5. ' )
' → logprob: -7.096786022186279
    6. '   ' → logprob: -7.221786022186279
    7. 'home' → logprob: -7.721786022186279
    8. '"""' → logprob: -8.096786499023438
    9. ' ' → logprob: -8.846786499023438
    10. ' for' → logprob: -8.971786499023438

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7026122212409973
    2. ')
' → logprob: -1.7026121616363525
    3. '):
' → logprob: -2.0776121616363525
    4. '   ' → logprob: -3.0776121616363525
    5. '_plate' → logprob: -3.2026121616363525
    6. ' )
' → logprob: -3.4526121616363525
    7. ' )' → logprob: -3.8276121616363525
    8. 'plate' → logprob: -4.202612400054932
    9. ' plate' → logprob: -4.327612400054932
    10. ' ):
' → logprob: -4.702612400054932

Token 260: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1842988133430481
    2. '   ' → logprob: -1.8092987537384033
    3. '    
' → logprob: -5.934298992156982
    4. ')' → logprob: -7.434298992156982
    5. '

' → logprob: -8.434298515319824
    6. '"""' → logprob: -8.684298515319824
    7. '"""
' → logprob: -8.809298515319824
    8. '```' → logprob: -9.184298515319824
    9. 'def' → logprob: -9.309298515319824
    10. '<|end|>' → logprob: -9.434298515319824

Token 261: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4545058012008667
    2. '   ' → logprob: -1.0795058012008667
    3. 'def' → logprob: -4.704505920410156
    4. ' def' → logprob: -5.204505920410156
    5. '    
' → logprob: -5.454505920410156
    6. '"""' → logprob: -6.204505920410156
    7. '"""
' (adapté à ' """
') → logprob: -6.454505920410156
    8. '    ' → logprob: -7.204505920410156
    9. 'class' → logprob: -7.454505920410156
    10. ' 
' → logprob: -7.704505920410156

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35729870200157166
    2. ' def' → logprob: -1.607298731803894
    3. 'def' → logprob: -2.3572986125946045
    4. '
' → logprob: -5.357298851013184
    5. '    
' → logprob: -7.857298851013184
    6. '	def' → logprob: -8.607298851013184
    7. ' 
' → logprob: -10.982298851013184
    8. '    ' → logprob: -11.107298851013184
    9. '```' → logprob: -11.982298851013184
    10. ' ' → logprob: -13.482298851013184

Token 263: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3133131265640259
    2. ' def' → logprob: -1.3133131265640259
    3. '   ' → logprob: -9.938313484191895
    4. 'class' → logprob: -12.938313484191895
    5. '	def' → logprob: -14.813313484191895
    6. '    ' → logprob: -16.438312530517578
    7. '__' → logprob: -16.688312530517578
    8. '```' → logprob: -16.938312530517578
    9. ' __' → logprob: -17.438312530517578
    10. ' class' → logprob: -17.688312530517578

Token 264: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0067201098427176476
    2. '__' → logprob: -5.006720066070557
    3. ' ' → logprob: -12.756720542907715
    4. '_init' → logprob: -14.131720542907715
    5. ' ' → logprob: -14.506720542907715
    6. 'init' → logprob: -15.381720542907715
    7. ' init' → logprob: -15.631720542907715
    8. ' `' → logprob: -16.5067195892334
    9. ' def' → logprob: -16.7567195892334
    10. ' _' → logprob: -17.1317195892334

Token 265: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.125000953674316
    3. 'ini' → logprob: -16.625
    4. 'in' → logprob: -16.625
    5. ' init' → logprob: -17.75
    6. 'nit' → logprob: -18.0
    7. '   ' → logprob: -18.25
    8. 'innit' → logprob: -18.25
    9. 'int' → logprob: -18.75
    10. 'def' → logprob: -19.375

Token 266: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06296684592962265
    2. '(' → logprob: -2.812966823577881
    3. '(self' → logprob: -6.937966823577881
    4. '__' → logprob: -11.187967300415039
    5. '__(
' → logprob: -11.562967300415039
    6. '_(' → logprob: -13.187967300415039
    7. ' (' → logprob: -13.187967300415039
    8. 'self' → logprob: -14.812967300415039
    9. '```' → logprob: -14.812967300415039
    10. ')(' → logprob: -15.687967300415039

Token 267: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759475827217102
    2. 'self' → logprob: -0.8259475827217102
    3. ' ' → logprob: -12.450947761535645
    4. '
' → logprob: -12.825947761535645
    5. '   ' → logprob: -13.950947761535645
    6. ')' → logprob: -15.200947761535645
    7. '	self' → logprob: -15.325947761535645
    8. '  ' → logprob: -16.450946807861328
    9. '       ' → logprob: -16.450946807861328
    10. ' ' → logprob: -16.575946807861328

Token 268: ' ):
' (ID: 48169)
  Prédit: ' ):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):
' → logprob: -0.9283298254013062
    2. ' ):' → logprob: -1.1783298254013062
    3. '):' → logprob: -1.9283298254013062
    4. '):
' → logprob: -2.0533299446105957
    5. ',' → logprob: -3.9283299446105957
    6. ' )' → logprob: -6.928329944610596
    7. '   ' → logprob: -7.053329944610596
    8. '       ' → logprob: -7.053329944610596
    9. 'self' → logprob: -7.178329944610596
    10. ' ' → logprob: -9.803329467773438

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03723876550793648
    2. 'self' → logprob: -3.412238836288452
    3. ' self' → logprob: -5.662238597869873
    4. '   ' → logprob: -10.037239074707031
    5. '	' → logprob: -10.537239074707031
    6. 'super' → logprob: -11.037239074707031
    7. '	self' → logprob: -11.037239074707031
    8. ' super' → logprob: -13.037239074707031
    9. ' ' → logprob: -13.662239074707031
    10. '	   ' → logprob: -13.662239074707031

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1310713142156601
    2. ' self' → logprob: -2.1310713291168213
    3. '       ' → logprob: -5.506071090698242
    4. '#' → logprob: -10.881071090698242
    5. 'first' → logprob: -11.006071090698242
    6. '	self' → logprob: -11.756071090698242
    7. ' ' → logprob: -11.881071090698242
    8. ' first' → logprob: -12.506071090698242
    9. 'super' → logprob: -12.506071090698242
    10. ' #' → logprob: -12.631071090698242

Token 271: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.016119297593832016
    2. '.' → logprob: -4.391119480133057
    3. 'first' → logprob: -6.016119480133057
    4. ' .' → logprob: -7.516119480133057
    5. '.base' → logprob: -8.266119003295898
    6. '._' → logprob: -8.891119003295898
    7. '.First' → logprob: -10.016119003295898
    8. ' first' → logprob: -10.266119003295898
    9. 'First' → logprob: -10.766119003295898
    10. '_first' → logprob: -11.266119003295898

Token 272: ' =' (ID: 314)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.10487401485443115
    2. ' =' → logprob: -2.4798741340637207
    3. '=' → logprob: -4.229874134063721
    4. '_' → logprob: -6.729874134063721
    5. '=_' → logprob: -10.854873657226562
    6. '   ' → logprob: -11.729873657226562
    7. 'Base' → logprob: -11.854873657226562
    8. 'base' → logprob: -12.229873657226562
    9. ' ' → logprob: -12.729873657226562
    10. '_Base' → logprob: -13.104873657226562

Token 273: ' Base' (ID: 8729)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.03804585337638855
    2. ' Base' → logprob: -3.288045883178711
    3. 'Bas' → logprob: -13.163045883178711
    4. '	Base' → logprob: -13.163045883178711
    5. ' ' → logprob: -15.788045883178711
    6. '_Base' → logprob: -16.16304588317871
    7. ' Bas' → logprob: -16.16304588317871
    8. 'Bases' → logprob: -16.66304588317871
    9. 'None' → logprob: -16.91304588317871
    10. 'B' → logprob: -17.28804588317871

Token 274: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020735036581754684
    2. '(' → logprob: -4.520735263824463
    3. '()
' → logprob: -4.645735263824463
    4. '()

' → logprob: -10.770734786987305
    5. '()
' → logprob: -11.270734786987305
    6. '()`' → logprob: -13.895734786987305
    7. ' ()' → logprob: -14.020734786987305
    8. '()"' → logprob: -14.145734786987305
    9. '(
' → logprob: -14.520734786987305
    10. '()\' → logprob: -14.770734786987305

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32914361357688904
    2. 'self' → logprob: -1.3291436433792114
    3. ' self' → logprob: -4.454143524169922
    4. '        
' → logprob: -5.829143524169922
    5. '
' → logprob: -7.954143524169922
    6. '    
' → logprob: -8.329143524169922
    7. '   ' → logprob: -8.454143524169922
    8. '  
' → logprob: -8.954143524169922
    9. '	self' → logprob: -9.204143524169922
    10. ' 
' → logprob: -10.329143524169922

Token 276: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0027380664832890034
    2. ' self' → logprob: -6.002737998962402
    3. '       ' → logprob: -8.252737998962402
    4. '   ' → logprob: -14.502737998962402
    5. '	self' → logprob: -14.627737998962402
    6. '
' → logprob: -14.752737998962402
    7. '        
' → logprob: -15.627737998962402
    8. ' ' → logprob: -16.12773895263672
    9. ' 
' → logprob: -16.50273895263672
    10. ' ' → logprob: -16.75273895263672

Token 277: '.second' (ID: 27534)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6430365443229675
    2. '.second' → logprob: -0.7680365443229675
    3. '.first' → logprob: -5.018036365509033
    4. ' .' → logprob: -5.893036365509033
    5. '.third' → logprob: -7.143036365509033
    6. 'second' → logprob: -9.518036842346191
    7. '.next' → logprob: -9.643036842346191
    8. '.
' → logprob: -11.018036842346191
    9. '.secondary' → logprob: -12.018036842346191
    10. '
' → logprob: -12.143036842346191

Token 278: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006146704312413931
    2. ' =' → logprob: -5.6311469078063965
    3. '=' → logprob: -6.5061469078063965
    4. '()
' → logprob: -7.7561469078063965
    5. ' ()' → logprob: -7.8811469078063965
    6. '(' → logprob: -8.381146430969238
    7. ' (' → logprob: -11.506146430969238
    8. '()

' → logprob: -13.381146430969238
    9. ' ()
' → logprob: -13.881146430969238
    10. '()
' → logprob: -14.256146430969238

Token 279: ' Base' (ID: 8729)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.4740866422653198
    2. ' Base' → logprob: -0.9740866422653198
    3. '	Base' → logprob: -11.97408676147461
    4. '(Base' → logprob: -13.22408676147461
    5. ' ' → logprob: -14.72408676147461
    6. '_Base' → logprob: -15.22408676147461
    7. '   ' → logprob: -15.47408676147461
    8. 'Bas' → logprob: -15.84908676147461
    9. ' base' → logprob: -15.97408676147461
    10. '<Base' → logprob: -16.09908676147461

Token 280: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0026381993666291237
    2. '()
' → logprob: -6.002638339996338
    3. '(' → logprob: -8.75263786315918
    4. '()

' → logprob: -13.12763786315918
    5. '(
' → logprob: -14.00263786315918
    6. ' ()' → logprob: -14.00263786315918
    7. '()
' → logprob: -14.50263786315918
    8. '()\' → logprob: -16.00263786315918
    9. '())' → logprob: -16.87763786315918
    10. '(),' → logprob: -16.87763786315918

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09282718598842621
    2. '
' → logprob: -2.717827081680298
    3. 'self' → logprob: -3.967827081680298
    4. '        
' → logprob: -5.967827320098877
    5. ' self' → logprob: -8.092826843261719
    6. '	' → logprob: -9.217826843261719
    7. ' 
' → logprob: -9.342826843261719
    8. '    
' → logprob: -9.342826843261719
    9. '	self' → logprob: -9.342826843261719
    10. '		
' → logprob: -9.467826843261719

Token 282: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011558275582501665
    2. ' self' → logprob: -9.500115394592285
    3. '       ' → logprob: -10.125115394592285
    4. '	self' → logprob: -15.250115394592285
    5. '
' → logprob: -15.875115394592285
    6. '(self' → logprob: -16.7501163482666
    7. '        
' → logprob: -16.7501163482666
    8. '   ' → logprob: -17.0001163482666
    9. 'Self' → logprob: -18.5001163482666
    10. '           ' → logprob: -19.2501163482666

Token 283: '.third' (ID: 182887)
  Prédit: '.first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.8735730051994324
    2. '.third' → logprob: -1.1235730648040771
    3. '.' → logprob: -1.4985730648040771
    4. '.set' → logprob: -3.748573064804077
    5. '.second' → logprob: -4.748572826385498
    6. '.next' → logprob: -6.748572826385498
    7. 'third' → logprob: -8.373573303222656
    8. ' .' → logprob: -8.623573303222656
    9. 'first' → logprob: -9.998573303222656
    10. '.add' → logprob: -10.623573303222656

Token 284: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018947218777611852
    2. '(' → logprob: -7.126894950866699
    3. '=' → logprob: -7.251894950866699
    4. ' =' → logprob: -8.2518949508667
    5. '()
' → logprob: -9.1268949508667
    6. ' ()' → logprob: -11.8768949508667
    7. '()

' → logprob: -13.0018949508667
    8. '(
' → logprob: -14.0018949508667
    9. '()
' → logprob: -15.7518949508667
    10. '().' → logprob: -15.8768949508667

Token 285: ' Base' (ID: 8729)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.474082350730896
    2. ' Base' → logprob: -0.974082350730896
    3. '	Base' → logprob: -12.474081993103027
    4. '(Base' → logprob: -14.099081993103027
    5. ' ' → logprob: -14.849081993103027
    6. '   ' → logprob: -16.349082946777344
    7. '_Base' → logprob: -16.474082946777344
    8. 'Bas' → logprob: -16.474082946777344
    9. '<Base' → logprob: -16.974082946777344
    10. ' Bas' → logprob: -17.224082946777344

Token 286: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.049208663403987885
    2. '()' → logprob: -3.049208641052246
    3. '()

' → logprob: -7.424208641052246
    4. '()
' → logprob: -10.799208641052246
    5. '(' → logprob: -12.674208641052246
    6. '(
' → logprob: -14.924208641052246
    7. ' ()
' → logprob: -15.674208641052246
    8. '()


' → logprob: -16.299209594726562
    9. '       ' → logprob: -16.549209594726562
    10. '()

' → logprob: -16.924209594726562

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013388916850090027
    2. 'self' → logprob: -4.5133891105651855
    3. '
' → logprob: -7.1383891105651855
    4. ' self' → logprob: -7.5133891105651855
    5. '        
' → logprob: -7.5133891105651855
    6. '```' → logprob: -8.138388633728027
    7. '   ' → logprob: -10.138388633728027
    8. '  
' → logprob: -10.138388633728027
    9. '    
' → logprob: -11.138388633728027
    10. '	self' → logprob: -11.263388633728027

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004449227824807167
    2. '       ' → logprob: -6.004449367523193
    3. ' self' → logprob: -6.254449367523193
    4. '
' → logprob: -10.629448890686035
    5. '        
' → logprob: -11.504448890686035
    6. '	self' → logprob: -11.879448890686035
    7. '```' → logprob: -12.754448890686035
    8. ' 
' → logprob: -13.754448890686035
    9. '   ' → logprob: -14.004448890686035
    10. '#' → logprob: -14.004448890686035

Token 289: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.00019066639652010053
    2. 'first' → logprob: -9.375190734863281
    3. '.' → logprob: -9.625190734863281
    4. '.third' → logprob: -10.625190734863281
    5. ' .' → logprob: -12.000190734863281
    6. '.second' → logprob: -12.875190734863281
    7. '.next' → logprob: -13.375190734863281
    8. '	first' → logprob: -14.000190734863281
    9. '.set' → logprob: -14.250190734863281
    10. '   ' → logprob: -14.750190734863281

Token 290: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.003619908355176449
    2. '.' → logprob: -5.62861967086792
    3. ' .' → logprob: -11.128620147705078
    4. '   ' → logprob: -12.878620147705078
    5. ').' → logprob: -14.628620147705078
    6. '.next' → logprob: -15.253620147705078
    7. '.setdefault' → logprob: -15.378620147705078
    8. '\.' → logprob: -15.503620147705078
    9. '#set' → logprob: -15.628620147705078
    10. '	' → logprob: -15.628620147705078

Token 291: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.750000953674316
    3. 'next' → logprob: -15.625000953674316
    4. '_new' → logprob: -17.875001907348633
    5. '_previous' → logprob: -18.250001907348633
    6. '_n' → logprob: -18.750001907348633
    7. ')_' → logprob: -18.875001907348633
    8. '\' → logprob: -19.625001907348633
    9. '_last' → logprob: -19.750001907348633
    10. '```' → logprob: -19.750001907348633

Token 292: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.375001907348633
    3. '_bas' → logprob: -15.000001907348633
    4. 'base' → logprob: -15.750001907348633
    5. '```' → logprob: -18.000001907348633
    6. 'Base' → logprob: -18.000001907348633
    7. '(' → logprob: -18.250001907348633
    8. '_Base' → logprob: -18.375001907348633
    9. '_basis' → logprob: -18.375001907348633
    10. '_b' → logprob: -19.000001907348633

Token 293: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.9186317482963204e-05
    2. '(self' → logprob: -10.000049591064453
    3. '(
' → logprob: -12.625049591064453
    4. '(

' → logprob: -15.750049591064453
    5. ' (' → logprob: -16.250049591064453
    6. '((' → logprob: -16.500049591064453
    7. '(s' → logprob: -17.875049591064453
    8. '()' → logprob: -18.875049591064453
    9. '('' → logprob: -19.500049591064453
    10. '(
' → logprob: -19.625049591064453

Token 294: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.44522666931152344
    2. 'self' → logprob: -1.6952266693115234
    3. '(self' → logprob: -1.8202266693115234
    4. '(' → logprob: -4.320226669311523
    5. ')' → logprob: -7.820226669311523
    6. ' )' → logprob: -10.570226669311523
    7. '	self' → logprob: -10.695226669311523
    8. '(
' → logprob: -11.820226669311523
    9. ' ' → logprob: -11.945226669311523
    10. ' (' → logprob: -12.070226669311523

Token 295: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.1603131741285324
    2. '.' → logprob: -1.9103131294250488
    3. '.first' → logprob: -10.160313606262207
    4. ' .' → logprob: -10.785313606262207
    5. '.third' → logprob: -10.785313606262207
    6. '.secondary' → logprob: -12.785313606262207
    7. '.s' → logprob: -13.035313606262207
    8. '.next' → logprob: -14.160313606262207
    9. ').' → logprob: -14.285313606262207
    10. '.two' → logprob: -14.410313606262207

Token 296: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03510262817144394
    2. ' )' → logprob: -3.535102605819702
    3. ')
' → logprob: -5.535102844238281
    4. ' )
' → logprob: -6.660102844238281
    5. '       ' → logprob: -9.410102844238281
    6. '   ' → logprob: -10.785102844238281
    7. ' ' → logprob: -12.410102844238281
    8. ')

' → logprob: -13.535102844238281
    9. '()' → logprob: -14.160102844238281
    10. ' )
' → logprob: -14.160102844238281

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026025299448519945
    2. 'self' → logprob: -6.002602577209473
    3. ' self' → logprob: -10.127602577209473
    4. '   ' → logprob: -10.252602577209473
    5. '```' → logprob: -10.627602577209473
    6. '	self' → logprob: -11.752602577209473
    7. '        
' → logprob: -11.877602577209473
    8. ' ' → logprob: -12.252602577209473
    9. '
' → logprob: -13.752602577209473
    10. '           ' → logprob: -14.002602577209473

Token 298: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003270023735240102
    2. '       ' → logprob: -8.500327110290527
    3. ' self' → logprob: -9.000327110290527
    4. '	self' → logprob: -15.750327110290527
    5. '   ' → logprob: -17.12532615661621
    6. ' ' → logprob: -17.37532615661621
    7. ' ' → logprob: -18.12532615661621
    8. '	' → logprob: -18.25032615661621
    9. '
' → logprob: -19.00032615661621
    10. '(self' → logprob: -19.62532615661621

Token 299: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.16279606521129608
    2. '.third' → logprob: -1.9127960205078125
    3. '.' → logprob: -6.2877960205078125
    4. '.first' → logprob: -7.2877960205078125
    5. ' .' → logprob: -11.662796020507812
    6. 'second' → logprob: -12.412796020507812
    7. '.secondary' → logprob: -12.662796020507812
    8. '.next' → logprob: -12.787796020507812
    9. '.s' → logprob: -13.537796020507812
    10. 'third' → logprob: -14.037796020507812

Token 300: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.008622728288173676
    2. '.' → logprob: -4.758622646331787
    3. ' .' → logprob: -11.758623123168945
    4. '   ' → logprob: -15.383623123168945
    5. '.setdefault' → logprob: -16.633623123168945
    6. ').' → logprob: -18.008623123168945
    7. '`.' → logprob: -18.133623123168945
    8. '	' → logprob: -18.258623123168945
    9. ' ' → logprob: -18.258623123168945
    10. '       ' → logprob: -18.758623123168945

Token 301: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -3.690834273584187e-05
    2. 'next' → logprob: -10.25003719329834
    3. '_' → logprob: -13.62503719329834
    4. ' next' → logprob: -16.125036239624023
    5. 'Next' → logprob: -17.125036239624023
    6. '_n' → logprob: -17.125036239624023
    7. '.next' → logprob: -17.750036239624023
    8. '_base' → logprob: -18.000036239624023
    9. '_last' → logprob: -18.125036239624023
    10. ' _' → logprob: -18.500036239624023

Token 302: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -9.849109119386412e-06
    2. '_' → logprob: -11.875009536743164
    3. 'base' → logprob: -12.875009536743164
    4. 'Base' → logprob: -15.625009536743164
    5. '_bas' → logprob: -16.625009536743164
    6. '(' → logprob: -16.750009536743164
    7. '_Base' → logprob: -18.500009536743164
    8. '_BASE' → logprob: -18.875009536743164
    9. '_basis' → logprob: -18.875009536743164
    10. '(base' → logprob: -19.500009536743164

Token 303: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.4121114822482923e-06
    2. '(self' → logprob: -13.125003814697266
    3. '(
' → logprob: -13.625003814697266
    4. ' (' → logprob: -16.000003814697266
    5. '(

' → logprob: -17.000003814697266
    6. '('' → logprob: -17.625003814697266
    7. '(
' → logprob: -18.625003814697266
    8. ')' → logprob: -19.375003814697266
    9. '(s' → logprob: -19.625003814697266
    10. '((' → logprob: -19.875003814697266

Token 304: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02639121189713478
    2. 'self' → logprob: -3.6513912677764893
    3. ' ' → logprob: -9.52639102935791
    4. '	self' → logprob: -11.90139102935791
    5. '(self' → logprob: -12.15139102935791
    6. ' ' → logprob: -12.27639102935791
    7. ')' → logprob: -15.15139102935791
    8. '```' → logprob: -15.27639102935791
    9. 'sel' → logprob: -16.026391983032227
    10. 's' → logprob: -16.276391983032227

Token 305: '.third' (ID: 182887)
  Prédit: '.third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.third' → logprob: -8.721228368813172e-05
    2. '.' → logprob: -9.625086784362793
    3. 'third' → logprob: -10.875086784362793
    4. ' .' → logprob: -13.875086784362793
    5. '.th' → logprob: -14.125086784362793
    6. '.first' → logprob: -14.875086784362793
    7. '.second' → logprob: -15.750086784362793
    8. ''.' → logprob: -18.25008773803711
    9. '._' → logprob: -19.00008773803711
    10. 'h' → logprob: -19.00008773803711

Token 306: ' )
' (ID: 3270)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7216951251029968
    2. ')' → logprob: -1.3466951847076416
    3. ' )
' → logprob: -1.4716951847076416
    4. ' )' → logprob: -3.9716951847076416
    5. '       ' → logprob: -5.2216949462890625
    6. ')
' → logprob: -9.346694946289062
    7. ' )
' → logprob: -9.346694946289062
    8. '   ' → logprob: -11.346694946289062
    9. ')

' → logprob: -13.096694946289062
    10. ' ' → logprob: -13.346694946289062

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00866420567035675
    2. 'self' → logprob: -4.758664131164551
    3. ' self' → logprob: -10.50866413116455
    4. '	self' → logprob: -11.63366413116455
    5. '   ' → logprob: -11.88366413116455
    6. '	' → logprob: -12.25866413116455
    7. '```' → logprob: -14.63366413116455
    8. '        
' → logprob: -14.75866413116455
    9. '
' → logprob: -15.00866413116455
    10. '           ' → logprob: -15.88366413116455

Token 308: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.9153885558771435e-06
    2. '       ' → logprob: -12.750005722045898
    3. ' self' → logprob: -12.750005722045898
    4. '	self' → logprob: -16.3750057220459
    5. '   ' → logprob: -19.5000057220459
    6. '[self' → logprob: -20.2500057220459
    7. '(self' → logprob: -21.1250057220459
    8. '           ' → logprob: -21.5000057220459
    9. 'Self' → logprob: -21.7500057220459
    10. '
' → logprob: -21.8750057220459

Token 309: '.third' (ID: 182887)
  Prédit: '.third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.third' → logprob: -0.00016623330884613097
    2. '.' → logprob: -8.750165939331055
    3. 'third' → logprob: -12.250165939331055
    4. '.first' → logprob: -13.750165939331055
    5. ' .' → logprob: -14.000165939331055
    6. '.th' → logprob: -14.625165939331055
    7. '.second' → logprob: -15.000165939331055
    8. '.set' → logprob: -15.625165939331055
    9. '第三' → logprob: -17.625165939331055
    10. '\.' → logprob: -17.750165939331055

Token 310: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0005537479883059859
    2. '.' → logprob: -7.500553607940674
    3. ' .' → logprob: -14.375554084777832
    4. '.setdefault' → logprob: -16.625553131103516
    5. 'set' → logprob: -17.625553131103516
    6. '#set' → logprob: -19.125553131103516
    7. '   ' → logprob: -20.125553131103516
    8. '\.' → logprob: -20.125553131103516
    9. ').' → logprob: -20.375553131103516
    10. '.s' → logprob: -20.625553131103516

Token 311: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -8.65707261255011e-06
    2. 'next' → logprob: -11.750008583068848
    3. '_none' → logprob: -14.250008583068848
    4. 'None' → logprob: -17.125009536743164
    5. 'Next' → logprob: -17.625009536743164
    6. '_' → logprob: -17.625009536743164
    7. ' next' → logprob: -18.625009536743164
    8. '	next' → logprob: -19.375009536743164
    9. '_NEXT' → logprob: -19.375009536743164
    10. '.next' → logprob: -20.000009536743164

Token 312: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -4.4849443838757e-06
    2. 'base' → logprob: -12.375004768371582
    3. 'Base' → logprob: -15.875004768371582
    4. '_' → logprob: -18.250003814697266
    5. 'None' → logprob: -19.000003814697266
    6. '_bas' → logprob: -19.875003814697266
    7. '_Base' → logprob: -20.000003814697266
    8. '(' → logprob: -20.000003814697266
    9. '_home' → logprob: -20.125003814697266
    10. '_BASE' → logprob: -20.125003814697266

Token 313: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25956466794013977
    2. '(None' → logprob: -1.5095646381378174
    3. 'None' → logprob: -5.0095648765563965
    4. ' None' → logprob: -7.0095648765563965
    5. ' (' → logprob: -10.509564399719238
    6. '(
' → logprob: -13.509564399719238
    7. '_None' → logprob: -14.509564399719238
    8. '()' → logprob: -16.259565353393555
    9. '(False' → logprob: -16.259565353393555
    10. '=None' → logprob: -17.009565353393555

Token 314: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.008615042082965374
    2. 'None' → logprob: -4.758615016937256
    3. '(None' → logprob: -14.633615493774414
    4. '_None' → logprob: -17.383615493774414
    5. '=None' → logprob: -19.758615493774414
    6. ' none' → logprob: -19.758615493774414
    7. ',None' → logprob: -20.008615493774414
    8. ' ' → logprob: -20.883615493774414
    9. '.None' → logprob: -20.883615493774414
    10. '_none' → logprob: -21.258615493774414

Token 315: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021332573145627975
    2. ' )' → logprob: -3.8963325023651123
    3. '       ' → logprob: -7.771332740783691
    4. '   ' → logprob: -8.146332740783691
    5. ')
' → logprob: -9.646332740783691
    6. ' )
' → logprob: -11.646332740783691
    7. ' ' → logprob: -12.896332740783691
    8. '```' → logprob: -14.146332740783691
    9. '	' → logprob: -14.771332740783691
    10. ')

' → logprob: -15.146332740783691

Token 316: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' null' (ID: 1256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7946964502334595
    2. ' #' → logprob: -0.9196964502334595
    3. ' ' → logprob: -3.29469633102417
    4. '<|end|>' → logprob: -3.29469633102417
    5. '       ' → logprob: -3.91969633102417
    6. 'Home' → logprob: -3.91969633102417
    7. ' home' → logprob: -4.54469633102417
    8. '"""' → logprob: -5.54469633102417
    9. ' Home' → logprob: -5.66969633102417
    10. 'None' → logprob: -5.91969633102417

Token 319: ' next' (ID: 2613)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' base' (ID: 3611)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2486803531646729
    2. '<|end|>' → logprob: -1.3736803531646729
    3. 'base' → logprob: -1.4986803531646729
    4. '_base' → logprob: -2.373680353164673
    5. ' line' → logprob: -2.748680353164673
    6. ' base' → logprob: -3.123680353164673
    7. '_' → logprob: -4.748680114746094
    8. '  
' → logprob: -5.623680114746094
    9. 'line' → logprob: -5.623680114746094
    10. ' ' → logprob: -5.873680114746094

Token 321: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: ' home' (ID: 2237)
  Prédit: 'home'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'home' → logprob: -0.5759723782539368
    2. ' home' → logprob: -0.8259723782539368
    3. ' None' → logprob: -11.450972557067871
    4. 'None' → logprob: -11.825972557067871
    5. 'Home' → logprob: -11.950972557067871
    6. '#' → logprob: -12.450972557067871
    7. '_home' → logprob: -13.200972557067871
    8. ' #' → logprob: -14.700972557067871
    9. '/home' → logprob: -14.950972557067871
    10. ' ' → logprob: -14.950972557067871

Token 323: ' plate' (ID: 14651)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20841526985168457
    2. '
' → logprob: -2.2084152698516846
    3. 'def' → logprob: -2.7084152698516846
    4. '<|end|>' → logprob: -5.2084150314331055
    5. '    
' → logprob: -5.5834150314331055
    6. ' def' → logprob: -6.4584150314331055
    7. '	def' → logprob: -7.9584150314331055
    8. '<|end|>' → logprob: -8.958415031433105
    9. '```' → logprob: -9.708415031433105
    10. '        
' → logprob: -9.708415031433105

Token 326: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003032881941180676
    2. ' def' → logprob: -8.125303268432617
    3. '   ' → logprob: -11.875303268432617
    4. '
' → logprob: -15.875303268432617
    5. '	def' → logprob: -16.625303268432617
    6. '    
' → logprob: -17.625303268432617
    7. ' ' → logprob: -17.750303268432617
    8. '```' → logprob: -17.875303268432617
    9. '

' → logprob: -19.125303268432617
    10. '        
' → logprob: -20.125303268432617

Token 327: ' add' (ID: 1147)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.18097130954265594
    2. ' advance' → logprob: -2.305971384048462
    3. 'has' → logprob: -3.430971384048462
    4. 'reset' → logprob: -4.055971145629883
    5. 'add' → logprob: -5.180971145629883
    6. ' has' → logprob: -6.180971145629883
    7. 'get' → logprob: -6.930971145629883
    8. 'b' → logprob: -6.930971145629883
    9. 'runner' → logprob: -6.930971145629883
    10. ' add' → logprob: -7.305971145629883

Token 328: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.0006353547796607018
    2. '_' → logprob: -7.625635147094727
    3. '_run' → logprob: -9.250635147094727
    4. '_base' → logprob: -11.000635147094727
    5. '_r' → logprob: -11.625635147094727
    6. '(' → logprob: -12.125635147094727
    7. '_s' → logprob: -12.750635147094727
    8. '   ' → logprob: -12.750635147094727
    9. 'runner' → logprob: -12.875635147094727
    10. '_running' → logprob: -13.125635147094727

Token 329: '_on' (ID: 10053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005543439765460789
    2. '(self' → logprob: -7.50055456161499
    3. '_on' → logprob: -14.125554084777832
    4. ' (' → logprob: -15.125554084777832
    5. '(
' → logprob: -15.750554084777832
    6. '_at' → logprob: -16.12555503845215
    7. 'on' → logprob: -16.50055503845215
    8. 'self' → logprob: -16.75055503845215
    9. '_(' → logprob: -17.75055503845215
    10. '(

' → logprob: -17.75055503845215

Token 330: '_first' (ID: 29347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08687246590852737
    2. 'first' → logprob: -2.9618725776672363
    3. '_first' → logprob: -4.586872577667236
    4. ' first' → logprob: -4.711872577667236
    5. '(self' → logprob: -4.961872577667236
    6. 'self' → logprob: -5.461872577667236
    7. ' self' → logprob: -7.211872577667236
    8. ' (' → logprob: -8.961872100830078
    9. '(
' → logprob: -9.211872100830078
    10. 'First' → logprob: -10.086872100830078

Token 331: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003831252979580313
    2. '(self' → logprob: -7.875382900238037
    3. ' (' → logprob: -12.875383377075195
    4. '()' → logprob: -15.625383377075195
    5. '(
' → logprob: -15.750383377075195
    6. 'self' → logprob: -15.875383377075195
    7. '```' → logprob: -19.000383377075195
    8. '(

' → logprob: -19.125383377075195
    9. '   ' → logprob: -19.500383377075195
    10. '(s' → logprob: -20.125383377075195

Token 332: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10034673660993576
    2. ' self' → logprob: -2.350346803665161
    3. ')' → logprob: -9.475346565246582
    4. ' )' → logprob: -10.350346565246582
    5. ' ' → logprob: -10.725346565246582
    6. '	self' → logprob: -12.600346565246582
    7. '   ' → logprob: -13.225346565246582
    8. '(self' → logprob: -13.600346565246582
    9. ' ' → logprob: -14.100346565246582
    10. '):
' → logprob: -14.475346565246582

Token 333: ' ):
' (ID: 48169)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):' → logprob: -1.0350420475006104
    2. ' ):
' → logprob: -1.0350420475006104
    3. '):' → logprob: -1.6600420475006104
    4. '):
' → logprob: -2.4100420475006104
    5. 'self' → logprob: -5.035041809082031
    6. ' )' → logprob: -6.035041809082031
    7. ')' → logprob: -8.285041809082031
    8. ' ' → logprob: -8.785041809082031
    9. '   ' → logprob: -8.910041809082031
    10. ',' → logprob: -9.535041809082031

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007908020168542862
    2. 'self' → logprob: -4.882907867431641
    3. ' self' → logprob: -8.25790786743164
    4. '   ' → logprob: -11.00790786743164
    5. '(self' → logprob: -11.50790786743164
    6. '```' → logprob: -12.00790786743164
    7. '        
' → logprob: -12.88290786743164
    8. '
' → logprob: -13.00790786743164
    9. '(' → logprob: -13.25790786743164
    10. '	self' → logprob: -14.00790786743164

Token 335: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2730368673801422
    2. 'self' → logprob: -1.6480368375778198
    3. '       ' → logprob: -3.5230369567871094
    4. ' if' → logprob: -4.148036956787109
    5. ' self' → logprob: -6.898036956787109
    6. '```' → logprob: -9.02303695678711
    7. '   ' → logprob: -10.02303695678711
    8. 'def' → logprob: -11.64803695678711
    9. '	if' → logprob: -12.64803695678711
    10. '"""' → logprob: -12.89803695678711

Token 336: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15667586028575897
    2. 'self' → logprob: -2.4066758155822754
    3. ' if' → logprob: -3.4066758155822754
    4. '       ' → logprob: -3.9066758155822754
    5. ' self' → logprob: -6.906675815582275
    6. '   ' → logprob: -8.531676292419434
    7. '"""' → logprob: -9.031676292419434
    8. 'return' → logprob: -9.406676292419434
    9. '```' → logprob: -9.406676292419434
    10. '"""
' → logprob: -10.156676292419434

Token 337: ' Add' (ID: 4063)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10203247517347336
    2. 'self' → logprob: -2.852032423019409
    3. '       ' → logprob: -3.852032423019409
    4. ' if' → logprob: -4.102032661437988
    5. ' self' → logprob: -7.727032661437988
    6. 'def' → logprob: -8.102032661437988
    7. '   ' → logprob: -8.602032661437988
    8. 'If' → logprob: -8.602032661437988
    9. '"""' → logprob: -8.852032661437988
    10. '#' → logprob: -9.227032661437988

Token 338: ' a' (ID: 261)
  Prédit: ' runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runner' → logprob: -0.3672504425048828
    2. '_runner' → logprob: -1.3672504425048828
    3. ' a' → logprob: -3.367250442504883
    4. ' self' → logprob: -4.242250442504883
    5. 'runner' → logprob: -6.242250442504883
    6. 'self' → logprob: -6.867250442504883
    7. ' Runner' → logprob: -8.617250442504883
    8. '(' → logprob: -8.867250442504883
    9. '_' → logprob: -8.992250442504883
    10. 'Runner' → logprob: -9.992250442504883

Token 339: ' runner' (ID: 39201)
  Prédit: ' runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runner' → logprob: -0.04072442278265953
    2. 'runner' → logprob: -3.290724515914917
    3. ' if' → logprob: -6.790724277496338
    4. '_runner' → logprob: -7.165724277496338
    5. ' new' → logprob: -7.915724277496338
    6. 'if' → logprob: -9.040724754333496
    7. ' def' → logprob: -9.165724754333496
    8. 'def' → logprob: -9.915724754333496
    9. 'new' → logprob: -11.040724754333496
    10. 'self' → logprob: -11.040724754333496

Token 340: ' on' (ID: 402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009169078432023525
    2. ' on' → logprob: -5.134169101715088
    3. ' (' → logprob: -6.259169101715088
    4. 'on' → logprob: -7.134169101715088
    5. '(
' → logprob: -8.63416862487793
    6. '_on' → logprob: -8.63416862487793
    7. '_' → logprob: -10.00916862487793
    8. '()' → logprob: -10.25916862487793
    9. '       ' → logprob: -10.88416862487793
    10. '(self' → logprob: -11.88416862487793

Token 341: ' first' (ID: 1577)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.01721065118908882
    2. 'self' → logprob: -4.392210483551025
    3. ' first' → logprob: -5.392210483551025
    4. ' the' → logprob: -9.142210960388184
    5. 'first' → logprob: -10.517210960388184
    6. ' ' → logprob: -13.517210960388184
    7. '	self' → logprob: -14.017210960388184
    8. 'the' → logprob: -15.017210960388184
    9. '(self' → logprob: -15.267210960388184
    10. '_first' → logprob: -15.392210960388184

Token 342: ' base' (ID: 3611)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4680016040802002
    2. '(' → logprob: -1.0930016040802002
    3. '_base' → logprob: -3.7180016040802
    4. '()
' → logprob: -4.968001365661621
    5. ' base' → logprob: -6.093001365661621
    6. 'base' → logprob: -6.093001365661621
    7. '_' → logprob: -7.093001365661621
    8. ' (' → logprob: -7.468001365661621
    9. '   ' → logprob: -7.843001365661621
    10. ' ()' → logprob: -8.218001365661621

Token 343: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035582009702920914
    2. '()' → logprob: -4.160582065582275
    3. '(' → logprob: -5.160582065582275
    4. '()
' → logprob: -5.535582065582275
    5. ' if' → logprob: -5.535582065582275
    6. '   ' → logprob: -6.535582065582275
    7. '.' → logprob: -6.785582065582275
    8. '
' → logprob: -7.035582065582275
    9. '():' → logprob: -7.285582065582275
    10. '        
' → logprob: -7.785582065582275

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019086466636508703
    2. ' if' → logprob: -7.001908779144287
    3. '        
' → logprob: -8.001908302307129
    4. '
' → logprob: -8.376908302307129
    5. ' 
' → logprob: -8.376908302307129
    6. '        ' → logprob: -10.251908302307129
    7. '```' → logprob: -10.251908302307129
    8. '   ' → logprob: -10.376908302307129
    9. '    
' → logprob: -10.751908302307129
    10. 'if' → logprob: -11.126908302307129

Token 345: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024761728942394257
    2. ' if' → logprob: -3.89976167678833
    3. '
' → logprob: -6.14976167678833
    4. '        
' → logprob: -7.27476167678833
    5. 'if' → logprob: -7.39976167678833
    6. 'self' → logprob: -8.399762153625488
    7. '```' → logprob: -8.899762153625488
    8. '   ' → logprob: -9.024762153625488
    9. ' self' → logprob: -9.399762153625488
    10. ' 
' → logprob: -9.774762153625488

Token 346: ' first' (ID: 1577)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20841877162456512
    2. 'self' → logprob: -1.9584187269210815
    3. ' not' → logprob: -3.083418846130371
    4. 'not' → logprob: -6.708418846130371
    5. ' the' → logprob: -11.583418846130371
    6. '       ' → logprob: -12.333418846130371
    7. ' ' → logprob: -12.583418846130371
    8. '	self' → logprob: -12.833418846130371
    9. '    ' → logprob: -12.958418846130371
    10. '   ' → logprob: -13.208418846130371

Token 347: ' base' (ID: 3611)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5820140242576599
    2. '.has' → logprob: -0.8320140242576599
    3. ' .' → logprob: -5.582014083862305
    4. '.base' → logprob: -7.207014083862305
    5. '.next' → logprob: -8.082014083862305
    6. '.runner' → logprob: -8.457014083862305
    7. '.space' → logprob: -8.707014083862305
    8. '   ' → logprob: -8.707014083862305
    9. '.is' → logprob: -9.082014083862305
    10. '().' → logprob: -9.207014083862305

Token 348: ' is' (ID: 382)
  Prédit: '.has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.4846862852573395
    2. '.' → logprob: -1.109686255455017
    3. ' has' → logprob: -3.6096863746643066
    4. '.is' → logprob: -4.484686374664307
    5. ' .' → logprob: -4.609686374664307
    6. ' is' → logprob: -5.359686374664307
    7. '().' → logprob: -7.734686374664307
    8. '   ' → logprob: -7.984686374664307
    9. 'has' → logprob: -7.984686374664307
    10. '       ' → logprob: -9.859685897827148

Token 349: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.35361558198928833
    2. ' occupied' → logprob: -1.7286155223846436
    3. ' not' → logprob: -2.4786155223846436
    4. 'False' → logprob: -4.353615760803223
    5. ' False' → logprob: -4.478615760803223
    6. 'not' → logprob: -4.978615760803223
    7. ' free' → logprob: -6.353615760803223
    8. ' empty' → logprob: -6.978615760803223
    9. ' True' → logprob: -6.978615760803223
    10. 'True' → logprob: -7.228615760803223

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2874477505683899
    2. ':' → logprob: -2.037447690963745
    3. ' and' → logprob: -2.412447690963745
    4. '(' → logprob: -5.037447929382324
    5. ':
' → logprob: -5.037447929382324
    6. '():' → logprob: -5.287447929382324
    7. 'and' → logprob: -5.912447929382324
    8. '       ' → logprob: -6.037447929382324
    9. '():
' → logprob: -6.287447929382324
    10. '           ' → logprob: -6.412447929382324

Token 351: ' advance' (ID: 14805)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5543970465660095
    2. ' if' → logprob: -1.4293971061706543
    3. 'self' → logprob: -1.8043971061706543
    4. 'if' → logprob: -4.304397106170654
    5. '       ' → logprob: -5.679397106170654
    6. '           ' → logprob: -6.929397106170654
    7. ' return' → logprob: -7.429397106170654
    8. '        ' → logprob: -7.554397106170654
    9. ' ' → logprob: -7.804397106170654
    10. '#' → logprob: -8.054396629333496

Token 352: ' runner' (ID: 39201)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6834501028060913
    2. '_runner' → logprob: -1.0584501028060913
    3. 'runner' → logprob: -2.808450222015381
    4. 'the' → logprob: -3.433450222015381
    5. ' the' → logprob: -3.933450222015381
    6. 'r' → logprob: -4.058450222015381
    7. 'self' → logprob: -5.183450222015381
    8. '_r' → logprob: -5.433450222015381
    9. '()' → logprob: -5.808450222015381
    10. '_' → logprob: -6.808450222015381

Token 353: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5472367405891418
    2. '()' → logprob: -1.047236680984497
    3. 's' → logprob: -2.672236680984497
    4. '()
' → logprob: -8.172236442565918
    5. '_' → logprob: -8.297236442565918
    6. '   ' → logprob: -8.672236442565918
    7. '       ' → logprob: -8.797236442565918
    8. '(
' → logprob: -9.172236442565918
    9. '(s' → logprob: -9.172236442565918
    10. '_on' → logprob: -9.297236442565918

Token 354: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.321715772151947
    2. ' )' → logprob: -1.3217158317565918
    3. ' on' → logprob: -5.071715831756592
    4. ' to' → logprob: -7.071715831756592
    5. '(' → logprob: -8.196715354919434
    6. 's' → logprob: -8.446715354919434
    7. ' first' → logprob: -8.571715354919434
    8. ' )
' → logprob: -8.696715354919434
    9. '()' → logprob: -9.071715354919434
    10. '   ' → logprob: -9.821715354919434

Token 355: ' accordingly' (ID: 44041)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28625404834747314
    2. '       ' → logprob: -2.0362539291381836
    3. '()' → logprob: -2.4112539291381836
    4. ' on' → logprob: -4.911253929138184
    5. '(
' → logprob: -5.661253929138184
    6. '()
' → logprob: -5.786253929138184
    7. '   ' → logprob: -5.911253929138184
    8. '           ' → logprob: -6.036253929138184
    9. ' and' → logprob: -6.411253929138184
    10. ' to' → logprob: -6.661253929138184

Token 356: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0258254986256361
    2. '.' → logprob: -4.650825500488281
    3. '(' → logprob: -4.775825500488281
    4. '           ' → logprob: -5.900825500488281
    5. ' and' → logprob: -6.400825500488281
    6. ',' → logprob: -7.275825500488281
    7. ' to' → logprob: -7.650825500488281
    8. '()' → logprob: -8.025825500488281
    9. '        
' → logprob: -8.025825500488281
    10. '        ' → logprob: -8.150825500488281

Token 357: ' adding' (ID: 12673)
  Prédit: ' adding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adding' → logprob: -0.5098482966423035
    2. 'adding' → logprob: -1.0098483562469482
    3. ' placing' → logprob: -3.7598483562469482
    4. 'placing' → logprob: -5.009848117828369
    5. ' setting' → logprob: -5.884848117828369
    6. 'setting' → logprob: -6.134848117828369
    7. 'set' → logprob: -9.884848594665527
    8. 'add' → logprob: -10.009848594665527
    9. ' putting' → logprob: -10.384848594665527
    10. '```' → logprob: -10.759848594665527

Token 358: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5371494889259338
    2. '       ' → logprob: -1.162149429321289
    3. '.' → logprob: -2.412149429321289
    4. ' (' → logprob: -5.037149429321289
    5. ' to' → logprob: -7.037149429321289
    6. '        ' → logprob: -7.162149429321289
    7. '(self' → logprob: -7.412149429321289
    8. '<|end|>' → logprob: -7.412149429321289
    9. '        
' → logprob: -7.412149429321289
    10. '   ' → logprob: -7.537149429321289

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.448370838072151e-05
    2. '
' → logprob: -10.000094413757324
    3. '        
' → logprob: -10.750094413757324
    4. '```' → logprob: -11.125094413757324
    5. '   ' → logprob: -12.625094413757324
    6. '           ' → logprob: -13.000094413757324
    7. ' if' → logprob: -13.375094413757324
    8. ' 
' → logprob: -14.125094413757324
    9. '    
' → logprob: -14.250094413757324
    10. '        ' → logprob: -14.375094413757324

Token 360: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008283290662802756
    2. ' if' → logprob: -7.750828266143799
    3. '
' → logprob: -9.000828742980957
    4. '   ' → logprob: -9.375828742980957
    5. 'if' → logprob: -9.625828742980957
    6. '```' → logprob: -9.750828742980957
    7. '        
' → logprob: -10.500828742980957
    8. 'def' → logprob: -10.875828742980957
    9. '           ' → logprob: -12.500828742980957
    10. '    
' → logprob: -12.875828742980957

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011198364198207855
    2. 'if' → logprob: -4.6361985206604
    3. ' if' → logprob: -6.6361985206604
    4. '   ' → logprob: -9.261198043823242
    5. '
' → logprob: -11.636198043823242
    6. 'self' → logprob: -11.636198043823242
    7. '	' → logprob: -12.261198043823242
    8. '```' → logprob: -12.886198043823242
    9. '        
' → logprob: -12.886198043823242
    10. 'def' → logprob: -13.011198043823242

Token 362: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002494087442755699
    2. '       ' → logprob: -6.002493858337402
    3. ' if' → logprob: -11.127493858337402
    4. '   ' → logprob: -13.002493858337402
    5. '```' → logprob: -13.752493858337402
    6. 'def' → logprob: -15.752493858337402
    7. 'while' → logprob: -15.752493858337402
    8. 'If' → logprob: -17.12749481201172
    9. '	if' → logprob: -17.37749481201172
    10. '
' → logprob: -18.50249481201172

Token 363: ' Advance' (ID: 71813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032797870226204395
    2. ' if' → logprob: -6.003279685974121
    3. '       ' → logprob: -7.128279685974121
    4. '   ' → logprob: -14.253279685974121
    5. '```' → logprob: -14.628279685974121
    6. 'If' → logprob: -15.378279685974121
    7. 'while' → logprob: -15.378279685974121
    8. '	if' → logprob: -17.753280639648438
    9. ' ' → logprob: -17.878280639648438
    10. 'self' → logprob: -18.128280639648438

Token 364: ' existing' (ID: 9595)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6532130837440491
    2. 'self' → logprob: -1.0282130241394043
    3. '_runner' → logprob: -2.6532130241394043
    4. '_r' → logprob: -4.028213024139404
    5. 'runner' → logprob: -4.028213024139404
    6. '(' → logprob: -5.403213024139404
    7. ' self' → logprob: -6.028213024139404
    8. 'if' → logprob: -6.278213024139404
    9. '(self' → logprob: -6.528213024139404
    10. 'first' → logprob: -6.653213024139404

Token 365: ' runners' (ID: 61876)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' → logprob: -0.7538354992866516
    2. ' runners' → logprob: -1.6288354396820068
    3. ' runner' → logprob: -1.8788354396820068
    4. 'r' → logprob: -2.128835439682007
    5. '_runner' → logprob: -3.253835439682007
    6. 'self' → logprob: -4.628835678100586
    7. ' if' → logprob: -5.128835678100586
    8. 'if' → logprob: -5.628835678100586
    9. ' self' → logprob: -6.503835678100586
    10. '   ' → logprob: -7.378835678100586

Token 366: ' starting' (ID: 8601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5147644281387329
    2. '       ' → logprob: -1.139764428138733
    3. ' if' → logprob: -2.5147643089294434
    4. '(' → logprob: -7.639764308929443
    5. 'while' → logprob: -7.639764308929443
    6. 'self' → logprob: -7.889764308929443
    7. '        
' → logprob: -9.264764785766602
    8. '
' → logprob: -10.514764785766602
    9. ' while' → logprob: -10.639764785766602
    10. '(self' → logprob: -10.764764785766602

Token 367: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3684719204902649
    2. ' from' → logprob: -1.8684718608856201
    3. 'with' → logprob: -2.36847186088562
    4. ' with' → logprob: -3.24347186088562
    5. '       ' → logprob: -3.86847186088562
    6. 'self' → logprob: -8.6184720993042
    7. ' at' → logprob: -9.6184720993042
    8. ' self' → logprob: -10.8684720993042
    9. '        ' → logprob: -11.4934720993042
    10. '   ' → logprob: -11.8684720993042

Token 368: ' third' (ID: 6914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067208209075033665
    2. ' self' → logprob: -5.006721019744873
    3. '	self' → logprob: -13.256720542907715
    4. 'first' → logprob: -13.756720542907715
    5. 'the' → logprob: -14.381720542907715
    6. 'third' → logprob: -14.756720542907715
    7. '   ' → logprob: -14.881720542907715
    8. ' ' → logprob: -15.381720542907715
    9. '```' → logprob: -15.381720542907715
    10. ' the' → logprob: -15.756720542907715

Token 369: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.631667971611023
    2. '   ' → logprob: -1.881667971611023
    3. ' if' → logprob: -1.881667971611023
    4. '.' → logprob: -3.0066680908203125
    5. '
' → logprob: -4.0066680908203125
    6. '(' → logprob: -4.0066680908203125
    7. '().' → logprob: -4.3816680908203125
    8. '        
' → logprob: -4.5066680908203125
    9. 'if' → logprob: -4.6316680908203125
    10. '<|end|>' → logprob: -4.7566680908203125

Token 370: ' home' (ID: 2237)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010795366019010544
    2. ' self' → logprob: -5.510795593261719
    3. 'advance' → logprob: -5.885795593261719
    4. 'third' → logprob: -7.010795593261719
    5. 'False' → logprob: -7.385795593261719
    6. 'first' → logprob: -7.510795593261719
    7. 'handle' → logprob: -8.135795593261719
    8. 'True' → logprob: -8.510795593261719
    9. 'None' → logprob: -8.760795593261719
    10. 'avoid' → logprob: -9.010795593261719

Token 371: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09569816291332245
    2. '
' → logprob: -2.720698118209839
    3. ' if' → logprob: -4.720698356628418
    4. 'if' → logprob: -4.970698356628418
    5. '        
' → logprob: -5.345698356628418
    6. 'self' → logprob: -5.970698356628418
    7. '(' → logprob: -7.595698356628418
    8. '()
' → logprob: -7.970698356628418
    9. '		
' → logprob: -8.095698356628418
    10. ',' → logprob: -8.095698356628418

Token 372: ' needed' (ID: 6118)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04481895640492439
    2. 'self' → logprob: -3.294818878173828
    3. ' not' → logprob: -5.044818878173828
    4. '	self' → logprob: -9.169818878173828
    5. 'not' → logprob: -9.669818878173828
    6. ' ' → logprob: -9.669818878173828
    7. ' ' → logprob: -10.669818878173828
    8. ' True' → logprob: -11.169818878173828
    9. '(self' → logprob: -11.419818878173828
    10. '(' → logprob: -12.044818878173828

Token 373: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022047782316803932
    2. ' if' → logprob: -4.147047996520996
    3. 'if' → logprob: -5.897047996520996
    4. '
' → logprob: -6.647047996520996
    5. '        
' → logprob: -6.897047996520996
    6. ',' → logprob: -8.897047996520996
    7. 'self' → logprob: -9.022047996520996
    8. '	' → logprob: -9.147047996520996
    9. ' and' → logprob: -9.397047996520996
    10. '   ' → logprob: -9.522047996520996

Token 374: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.6583194136619568
    2. ' make' → logprob: -2.1583194732666016
    3. 'prevent' → logprob: -2.6583194732666016
    4. ' avoid' → logprob: -2.9083194732666016
    5. ' prevent' → logprob: -3.1583194732666016
    6. 'clear' → logprob: -3.5333194732666016
    7. ' free' → logprob: -3.5333194732666016
    8. 'free' → logprob: -3.5333194732666016
    9. 'avoid' → logprob: -3.5333194732666016
    10. 'ensure' → logprob: -3.7833194732666016

Token 375: ' room' (ID: 3435)
  Prédit: ' room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.8329710364341736
    2. 'space' → logprob: -1.0829710960388184
    3. ' space' → logprob: -1.8329710960388184
    4. 'room' → logprob: -2.7079710960388184
    5. ' sure' → logprob: -10.45797061920166
    6. '```' → logprob: -12.45797061920166
    7. '_space' → logprob: -12.95797061920166
    8. 'sure' → logprob: -13.08297061920166
    9. ' ' → logprob: -13.45797061920166
    10. '_room' → logprob: -13.83297061920166

Token 376: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02079143188893795
    2. '
' → logprob: -4.520791530609131
    3. ' if' → logprob: -5.395791530609131
    4. '        
' → logprob: -6.520791530609131
    5. 'self' → logprob: -6.895791530609131
    6. 'if' → logprob: -7.270791530609131
    7. '	' → logprob: -8.145791053771973
    8. '(' → logprob: -8.270791053771973
    9. ',' → logprob: -8.520791053771973
    10. ' for' → logprob: -8.895791053771973

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07248566299676895
    2. 'if' → logprob: -2.8224856853485107
    3. ' if' → logprob: -4.822485446929932
    4. 'self' → logprob: -6.947485446929932
    5. '        
' → logprob: -7.197485446929932
    6. '	' → logprob: -8.82248592376709
    7. '   ' → logprob: -8.82248592376709
    8. 'while' → logprob: -9.07248592376709
    9. '	if' → logprob: -9.94748592376709
    10. '
' → logprob: -9.94748592376709

Token 378: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6914282441139221
    2. '       ' → logprob: -1.0664281845092773
    3. ' if' → logprob: -2.4414281845092773
    4. 'if' (adapté à ' if') → logprob: -2.8164281845092773
    5. 'self' → logprob: -5.691428184509277
    6. '        
' → logprob: -6.066428184509277
    7. ' 
' → logprob: -7.566428184509277
    8. ' self' → logprob: -7.941428184509277
    9. '   ' → logprob: -8.066428184509277
    10. '
' → logprob: -8.816428184509277

Token 379: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25333157181739807
    2. 'self' → logprob: -1.5033315420150757
    3. ' not' → logprob: -6.753331661224365
    4. '	self' → logprob: -9.253331184387207
    5. 'not' → logprob: -9.253331184387207
    6. '    ' → logprob: -11.128331184387207
    7. '   ' → logprob: -11.253331184387207
    8. '(self' → logprob: -11.753331184387207
    9. ' ' → logprob: -12.753331184387207
    10. '       ' → logprob: -13.378331184387207

Token 380: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.006099908147007227
    2. '.third' → logprob: -5.131099700927734
    3. '.' → logprob: -8.756099700927734
    4. '.second' → logprob: -11.881099700927734
    5. 'first' → logprob: -12.256099700927734
    6. ' .' → logprob: -14.006099700927734
    7. 'third' → logprob: -14.881099700927734
    8. '.last' → logprob: -15.881099700927734
    9. '.th' → logprob: -15.881099700927734
    10. '.f' → logprob: -16.131099700927734

Token 381: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.0010693699587136507
    2. '.' → logprob: -6.87606954574585
    3. ' .' → logprob: -10.501069068908691
    4. 'has' → logprob: -12.626069068908691
    5. '.is' → logprob: -12.876069068908691
    6. '.have' → logprob: -13.751069068908691
    7. '   ' → logprob: -14.376069068908691
    8. ' has' → logprob: -15.001069068908691
    9. '_has' → logprob: -15.501069068908691
    10. '.get' → logprob: -15.501069068908691

Token 382: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -11.875009536743164
    3. 'runner' → logprob: -14.125009536743164
    4. '_run' → logprob: -14.500009536743164
    5. '_running' → logprob: -15.125009536743164
    6. '_r' → logprob: -15.125009536743164
    7. '()' → logprob: -15.250009536743164
    8. '(' → logprob: -15.750009536743164
    9. '(_' → logprob: -16.875009536743164
    10. 'Runner' → logprob: -17.000009536743164

Token 383: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0630377009510994
    2. '():
' → logprob: -2.813037633895874
    3. '()' → logprob: -7.188037872314453
    4. '(' → logprob: -8.188037872314453
    5. ' ():' → logprob: -11.188037872314453
    6. '():
' → logprob: -11.313037872314453
    7. ':' → logprob: -11.813037872314453
    8. '():

' → logprob: -13.688037872314453
    9. '()==' → logprob: -14.313037872314453
    10. '()):
' → logprob: -15.438037872314453

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038365285843610764
    2. '
' → logprob: -3.663365364074707
    3. '       ' → logprob: -5.413365364074707
    4. ':
' → logprob: -5.913365364074707
    5. '            
' → logprob: -6.663365364074707
    6. 'self' → logprob: -6.913365364074707
    7. '        
' → logprob: -6.913365364074707
    8. '               ' → logprob: -8.163365364074707
    9. ':' → logprob: -8.538365364074707
    10. '  
' → logprob: -8.788365364074707

Token 385: ' runs' (ID: 13719)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5827785134315491
    2. 'runs' (adapté à ' runs') → logprob: -1.4577784538269043
    3. 'if' → logprob: -2.3327784538269043
    4. '       ' → logprob: -2.4577784538269043
    5. '           ' → logprob: -4.207778453826904
    6. ' self' → logprob: -5.207778453826904
    7. 'run' → logprob: -6.582778453826904
    8. '   ' → logprob: -6.707778453826904
    9. 'r' → logprob: -6.707778453826904
    10. ' if' → logprob: -7.082778453826904

Token 386: '_from' (ID: 12526)
  Prédit: '_sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sc' → logprob: -0.009596837684512138
    2. '_' → logprob: -4.759596824645996
    3. '_s' → logprob: -7.759596824645996
    4. ' =' → logprob: -8.509596824645996
    5. '_score' → logprob: -8.509596824645996
    6. '_scores' → logprob: -9.634596824645996
    7. '=' → logprob: -10.884596824645996
    8. ' _' → logprob: -11.509596824645996
    9. ' scored' → logprob: -11.759596824645996
    10. '=sc' → logprob: -11.884596824645996

Token 387: '_' (ID: 62)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1512448489665985
    2. ' self' → logprob: -2.026244878768921
    3. '=self' → logprob: -6.151244640350342
    4. 'third' → logprob: -6.276244640350342
    5. 'first' → logprob: -6.401244640350342
    6. '=' → logprob: -6.651244640350342
    7. '	self' → logprob: -7.401244640350342
    8. ' third' → logprob: -8.2762451171875
    9. '_self' → logprob: -9.1512451171875
    10. 'th' → logprob: -9.4012451171875

Token 388: 'advance' (ID: 75456)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.4300563931465149
    2. 'third' → logprob: -1.0550563335418701
    3. 'th' → logprob: -7.805056571960449
    4. 'second' → logprob: -8.05505657196045
    5. 'self' → logprob: -8.68005657196045
    6. 'base' → logprob: -9.30505657196045
    7. ' third' → logprob: -9.55505657196045
    8. 'irst' → logprob: -9.80505657196045
    9. ' first' → logprob: -10.05505657196045
    10. 'advance' → logprob: -10.86755657196045

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02999657578766346
    2. '=' → logprob: -3.529996633529663
    3. 's' → logprob: -9.154996871948242
    4. ' ' → logprob: -10.029996871948242
    5. ' +=' → logprob: -10.404996871948242
    6. 'ed' → logprob: -11.154996871948242
    7. '	' → logprob: -11.279996871948242
    8. '   ' → logprob: -11.404996871948242
    9. '_sc' → logprob: -11.904996871948242
    10. '=sc' → logprob: -12.279996871948242

Token 390: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019508942496031523
    2. ' self' → logprob: -6.251950740814209
    3. '           ' → logprob: -10.876951217651367
    4. '	self' → logprob: -13.126951217651367
    5. '               ' → logprob: -14.001951217651367
    6. '   ' → logprob: -15.001951217651367
    7. '       ' → logprob: -16.001951217651367
    8. '  ' → logprob: -16.626951217651367
    9. '          ' → logprob: -17.001951217651367
    10. ' ' → logprob: -17.251951217651367

Token 391: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.013662108220160007
    2. '.' → logprob: -5.388662338256836
    3. 'first' → logprob: -5.513662338256836
    4. '.advance' → logprob: -5.888662338256836
    5. '.third' → logprob: -6.513662338256836
    6. '   ' → logprob: -8.513662338256836
    7. ' .' → logprob: -9.013662338256836
    8. '.second' → logprob: -9.263662338256836
    9. 'advance' → logprob: -9.388662338256836
    10. '	first' → logprob: -10.013662338256836

Token 392: '.advance' (ID: 170572)
  Prédit: '.advance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.advance' → logprob: -0.0005669722449965775
    2. '.' → logprob: -7.5005669593811035
    3. ' .' → logprob: -11.625567436218262
    4. '   ' → logprob: -13.375567436218262
    5. 'advance' → logprob: -14.250567436218262
    6. '           ' → logprob: -14.250567436218262
    7. '.expand' → logprob: -14.375567436218262
    8. '.increment' → logprob: -15.125567436218262
    9. '.extend' → logprob: -15.375567436218262
    10. ').' → logprob: -15.500567436218262

Token 393: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -1.0280383548888494e-06
    2. 'runner' → logprob: -14.250000953674316
    3. '_' → logprob: -15.750000953674316
    4. 'Runner' → logprob: -16.125001907348633
    5. '_run' → logprob: -17.750001907348633
    6. '_r' → logprob: -17.750001907348633
    7. '
' → logprob: -17.875001907348633
    8. '```' → logprob: -18.500001907348633
    9. '_running' → logprob: -18.750001907348633
    10. '(_' → logprob: -18.875001907348633

Token 394: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014194413088262081
    2. '()
' → logprob: -4.264194488525391
    3. '()
' → logprob: -11.01419448852539
    4. '(' → logprob: -11.51419448852539
    5. '()

' → logprob: -12.38919448852539
    6. '()`' → logprob: -16.13919448852539
    7. '()\' → logprob: -16.38919448852539
    8. '())' → logprob: -16.76419448852539
    9. '(
' → logprob: -17.13919448852539
    10. '()"' → logprob: -17.38919448852539

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009490952361375093
    2. '       ' → logprob: -7.250948905944824
    3. '
' → logprob: -9.875948905944824
    4. '            
' → logprob: -9.875948905944824
    5. '            ' → logprob: -10.250948905944824
    6. ' if' → logprob: -10.375948905944824
    7. '               ' → logprob: -10.750948905944824
    8. 'if' → logprob: -12.000948905944824
    9. '        
' → logprob: -12.000948905944824
    10. '<|end|>' → logprob: -12.000948905944824

Token 396: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10677395015954971
    2. '       ' → logprob: -2.856773853302002
    3. 'if' → logprob: -3.356773853302002
    4. ' if' → logprob: -4.731773853302002
    5. 'self' → logprob: -8.98177433013916
    6. '   ' → logprob: -11.98177433013916
    7. '               ' → logprob: -12.10677433013916
    8. ' self' → logprob: -12.23177433013916
    9. '
' → logprob: -12.73177433013916
    10. '	       ' → logprob: -13.23177433013916

Token 397: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008630403317511082
    2. ' if' → logprob: -5.258630275726318
    3. '           ' → logprob: -6.508630275726318
    4. '#' → logprob: -7.133630275726318
    5. 'for' → logprob: -7.633630275726318
    6. 'self' → logprob: -7.758630275726318
    7. '       ' → logprob: -9.258630752563477
    8. 'while' → logprob: -10.008630752563477
    9. 'If' → logprob: -11.383630752563477
    10. 'return' → logprob: -11.508630752563477

Token 398: ' someone' (ID: 5693)
  Prédit: ' runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.22678242623806
    2. 'runs' → logprob: -1.6017824411392212
    3. ' not' → logprob: -7.351782321929932
    4. ' self' → logprob: -7.601782321929932
    5. 'self' → logprob: -8.85178279876709
    6. '_runs' → logprob: -10.60178279876709
    7. ' ' → logprob: -10.72678279876709
    8. ' run' → logprob: -11.72678279876709
    9. 'not' → logprob: -11.85178279876709
    10. ' ' → logprob: -12.10178279876709

Token 399: ' scored' (ID: 27207)
  Prédit: '_runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runs' → logprob: -1.0474661588668823
    2. ' scored' → logprob: -1.5474661588668823
    3. 'runs' → logprob: -2.047466278076172
    4. ' has' → logprob: -2.797466278076172
    5. 'else' → logprob: -2.922466278076172
    6. 'sc' → logprob: -3.297466278076172
    7. 'has' → logprob: -3.547466278076172
    8. 's' → logprob: -3.922466278076172
    9. '_has' → logprob: -4.047466278076172
    10. ' runs' → logprob: -4.172466278076172

Token 400: ' during' (ID: 3354)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8151870369911194
    2. ':' → logprob: -0.9401870369911194
    3. '           ' → logprob: -2.6901869773864746
    4. ':
' → logprob: -2.8151869773864746
    5. ',' → logprob: -3.6901869773864746
    6. '               ' → logprob: -4.565186977386475
    7. 'and' → logprob: -6.565186977386475
    8. '            ' → logprob: -7.690186977386475
    9. '       ' → logprob: -8.065187454223633
    10. '.' → logprob: -8.190187454223633

Token 401: ' advancement' (ID: 64781)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.4745381474494934
    2. ' runs' → logprob: -0.9745381474494934
    3. 'self' → logprob: -8.72453784942627
    4. ' self' → logprob: -9.09953784942627
    5. ' ' → logprob: -9.72453784942627
    6. '   ' → logprob: -10.84953784942627
    7. 'advance' → logprob: -10.84953784942627
    8. '_runs' → logprob: -10.84953784942627
    9. 'run' → logprob: -10.97453784942627
    10. ' advance' → logprob: -11.22453784942627

Token 402: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9801996946334839
    2. ' and' → logprob: -1.1051996946334839
    3. '           ' → logprob: -1.8551996946334839
    4. ':
' → logprob: -2.2301998138427734
    5. ',' → logprob: -4.480199813842773
    6. '            ' → logprob: -4.980199813842773
    7. '               ' → logprob: -5.730199813842773
    8. ' :
' → logprob: -6.480199813842773
    9. '       ' → logprob: -6.730199813842773
    10. 'and' → logprob: -6.730199813842773

Token 403: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.176162600517273
    2. 'if' → logprob: -1.301162600517273
    3. ' if' → logprob: -1.426162600517273
    4. 'self' → logprob: -2.4261627197265625
    5. '#' → logprob: -3.3011627197265625
    6. ' self' → logprob: -4.3011627197265625
    7. 'pass' → logprob: -4.3011627197265625
    8. 'return' → logprob: -4.4261627197265625
    9. ' pass' → logprob: -5.5511627197265625
    10. ' return' → logprob: -6.0511627197265625

Token 404: ' need' (ID: 1309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1493968963623047
    2. 'return' → logprob: -2.0243968963623047
    3. ' can' → logprob: -6.149396896362305
    4. '           ' → logprob: -6.774396896362305
    5. '       ' → logprob: -6.899396896362305
    6. '    ' → logprob: -8.024396896362305
    7. '   ' → logprob: -8.024396896362305
    8. ' should' → logprob: -8.149396896362305
    9. ' 
' → logprob: -8.649396896362305
    10. '
' → logprob: -8.899396896362305

Token 405: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.027040839195251465
    2. 'to' → logprob: -3.652040958404541
    3. '   ' → logprob: -8.902040481567383
    4. '       ' → logprob: -8.902040481567383
    5. '           ' → logprob: -9.027040481567383
    6. '_to' → logprob: -9.152040481567383
    7. '    ' → logprob: -9.277040481567383
    8. '	to' → logprob: -10.527040481567383
    9. '        ' → logprob: -10.777040481567383
    10. ' ' → logprob: -10.777040481567383

Token 406: ' track' (ID: 5290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03242938593029976
    2. 'pass' → logprob: -4.657429218292236
    3. 'handle' → logprob: -4.907429218292236
    4. ' return' → logprob: -4.907429218292236
    5. '#' → logprob: -5.657429218292236
    6. 'keep' → logprob: -6.282429218292236
    7. 'continue' → logprob: -8.157429695129395
    8. 'update' → logprob: -8.407429695129395
    9. 'increment' → logprob: -8.532429695129395
    10. ' pass' → logprob: -8.532429695129395

Token 407: ' it' (ID: 480)
  Prédit: ' runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.7500815987586975
    2. '_runs' → logprob: -1.0000815391540527
    3. 'runs' → logprob: -2.8750815391540527
    4. ' it' → logprob: -3.5000815391540527
    5. ' that' → logprob: -3.7500815391540527
    6. ' the' → logprob: -4.375081539154053
    7. ' them' → logprob: -4.875081539154053
    8. '_' → logprob: -4.875081539154053
    9. '<|end|>' → logprob: -5.125081539154053
    10. ' ' → logprob: -5.375081539154053

Token 408: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8461233973503113
    2. '           ' → logprob: -0.8461233973503113
    3. ' +' → logprob: -2.971123456954956
    4. '       ' → logprob: -4.096123218536377
    5. '+' → logprob: -4.471123218536377
    6. ' +=' → logprob: -4.471123218536377
    7. '(' → logprob: -4.971123218536377
    8. ',' → logprob: -5.221123218536377
    9. '               ' → logprob: -5.346123218536377
    10. '+
' → logprob: -5.471123218536377

Token 409: ' outside' (ID: 7539)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.25787100195884705
    2. ' runs' → logprob: -1.8828710317611694
    3. 'here' → logprob: -4.007871150970459
    4. 'self' → logprob: -4.132871150970459
    5. 'the' → logprob: -5.382871150970459
    6. '_runs' → logprob: -5.382871150970459
    7. ' here' → logprob: -5.382871150970459
    8. 'this' → logprob: -5.382871150970459
    9. 'return' → logprob: -5.632871150970459
    10. 'returns' → logprob: -5.882871150970459

Token 410: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6355186104774475
    2. '           ' → logprob: -0.8855186104774475
    3. '
' → logprob: -3.3855185508728027
    4. '        
' → logprob: -5.010518550872803
    5. 'return' → logprob: -5.510518550872803
    6. '               ' → logprob: -5.635518550872803
    7. '        ' → logprob: -6.385518550872803
    8. ' return' → logprob: -6.385518550872803
    9. '<|end|>' → logprob: -6.635518550872803
    10. '            ' → logprob: -7.010518550872803

Token 411: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047776028513908386
    2. '       ' → logprob: -3.172775983810425
    3. 'return' → logprob: -6.422776222229004
    4. '
' → logprob: -6.922776222229004
    5. '<|end|>' → logprob: -7.297776222229004
    6. '               ' → logprob: -7.547776222229004
    7. ' return' → logprob: -8.172776222229004
    8. '            
' → logprob: -8.922776222229004
    9. '        
' → logprob: -9.172776222229004
    10. '+' → logprob: -9.547776222229004

Token 412: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2303989827632904
    2. '           ' → logprob: -1.7303990125656128
    3. ' return' → logprob: -3.6053988933563232
    4. '       ' → logprob: -6.605399131774902
    5. '   ' → logprob: -11.730399131774902
    6. '               ' → logprob: -11.980399131774902
    7. 'self' → logprob: -12.105399131774902
    8. '	return' → logprob: -12.105399131774902
    9. '
' → logprob: -12.355399131774902
    10. ':return' → logprob: -13.480399131774902

Token 413: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07083506882190704
    2. '           ' → logprob: -3.0708351135253906
    3. ' return' → logprob: -3.9458351135253906
    4. '       ' → logprob: -5.945835113525391
    5. '   ' → logprob: -10.94583511352539
    6. '
' → logprob: -11.44583511352539
    7. '	return' → logprob: -12.32083511352539
    8. '#' → logprob: -12.82083511352539
    9. '               ' → logprob: -12.94583511352539
    10. 'self' → logprob: -12.94583511352539

Token 414: ' this' (ID: 495)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.24093486368656158
    2. 'now' → logprob: -2.4909348487854004
    3. ' return' → logprob: -3.3659348487854004
    4. 'return' → logprob: -3.3659348487854004
    5. 'runs' → logprob: -4.8659348487854
    6. 'r' → logprob: -4.9909348487854
    7. '_' → logprob: -5.6159348487854
    8. ' True' → logprob: -5.6159348487854
    9. 'run' → logprob: -5.6159348487854
    10. ' _' → logprob: -5.7409348487854

Token 415: ' logic' (ID: 18485)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6111287474632263
    2. ' return' → logprob: -2.111128807067871
    3. 'def' → logprob: -2.111128807067871
    4. ' def' → logprob: -2.611128807067871
    5. '       ' → logprob: -3.361128807067871
    6. ' method' → logprob: -3.611128807067871
    7. 'method' → logprob: -3.736128807067871
    8. ' code' → logprob: -4.611128807067871
    9. ' reason' → logprob: -4.611128807067871
    10. '        ' → logprob: -5.486128807067871

Token 416: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5227317810058594
    2. '       ' → logprob: -1.3977317810058594
    3. '
' → logprob: -3.1477317810058594
    4. '            ' → logprob: -3.5227317810058594
    5. '        ' → logprob: -3.7727317810058594
    6. 'return' → logprob: -4.022731781005859
    7. '        
' → logprob: -4.272731781005859
    8. ' return' → logprob: -4.397731781005859
    9. '            
' → logprob: -5.522731781005859
    10. '<|end|>' → logprob: -5.647731781005859

Token 417: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.550997257232666
    2. '           ' → logprob: -1.175997257232666
    3. '       ' → logprob: -2.925997257232666
    4. ' return' → logprob: -3.050997257232666
    5. '#' → logprob: -4.925997257232666
    6. 'self' → logprob: -6.550997257232666
    7. 'runs' → logprob: -6.550997257232666
    8. ' runs' → logprob: -7.175997257232666
    9. ' if' → logprob: -7.675997257232666
    10. '
' → logprob: -7.675997257232666

Token 418: ' runs' (ID: 13719)
  Prédit: ' runs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.4765355885028839
    2. 'runs' → logprob: -0.9765355587005615
    3. ' True' → logprob: -6.476535797119141
    4. 'True' → logprob: -7.851535797119141
    5. '       ' → logprob: -9.35153579711914
    6. ' False' → logprob: -9.47653579711914
    7. 'False' → logprob: -9.47653579711914
    8. '           ' → logprob: -9.97653579711914
    9. '_runs' → logprob: -9.97653579711914
    10. '   ' → logprob: -10.35153579711914

Token 419: ' scored' (ID: 27207)
  Prédit: ' runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.5049119591712952
    2. 'runs' → logprob: -1.1299118995666504
    3. '_runs' → logprob: -3.2549118995666504
    4. '
' → logprob: -4.87991189956665
    5. '       ' → logprob: -5.00491189956665
    6. '	' → logprob: -5.75491189956665
    7. '           ' → logprob: -6.25491189956665
    8. '   ' → logprob: -6.37991189956665
    9. ' 
' → logprob: -6.87991189956665
    10. ' returns' → logprob: -7.00491189956665

Token 420: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1367029845714569
    2. '
' → logprob: -3.0117030143737793
    3. '(' → logprob: -3.3867030143737793
    4. '           ' → logprob: -3.8867030143737793
    5. 'return' → logprob: -4.261703014373779
    6. '        
' → logprob: -5.386703014373779
    7. '               ' → logprob: -6.761703014373779
    8. ' return' → logprob: -7.136703014373779
    9. ',' → logprob: -7.261703014373779
    10. '()
' → logprob: -8.136702537536621

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002369704656302929
    2. 'return' → logprob: -6.8773698806762695
    3. '       ' → logprob: -7.1273698806762695
    4. '               ' → logprob: -7.7523698806762695
    5. ' return' → logprob: -9.75236988067627
    6. '		' → logprob: -11.12736988067627
    7. '
' → logprob: -11.12736988067627
    8. '   ' → logprob: -12.62736988067627
    9. '	       ' → logprob: -12.62736988067627
    10. '            
' → logprob: -12.75236988067627

Token 422: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1669512838125229
    2. 'return' (adapté à ' return') → logprob: -1.916951298713684
    3. ' return' → logprob: -5.1669511795043945
    4. '               ' → logprob: -7.1669511795043945
    5. '       ' → logprob: -9.041951179504395
    6. '   ' → logprob: -9.666951179504395
    7. '
' → logprob: -10.666951179504395
    8. '	return' → logprob: -12.041951179504395
    9. '		' → logprob: -12.541951179504395
    10. '            
' → logprob: -12.666951179504395

Token 423: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.020865105092525482
    2. ' runs' → logprob: -3.8958652019500732
    3. '1' → logprob: -8.145865440368652
    4. 'run' → logprob: -10.645865440368652
    5. 'int' → logprob: -12.145865440368652
    6. ' ' → logprob: -14.145865440368652
    7. ' int' → logprob: -14.395865440368652
    8. ' run' → logprob: -14.645865440368652
    9. 'r' → logprob: -14.770865440368652
    10. '       ' → logprob: -14.770865440368652

Token 424: '_from' (ID: 12526)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12765884399414062
    2. '_from' → logprob: -2.1276588439941406
    3. '_s' → logprob: -7.502658843994141
    4. '_' → logprob: -9.00265884399414
    5. 'es' → logprob: -10.75265884399414
    6. ' _' → logprob: -11.87765884399414
    7. '_for' → logprob: -12.12765884399414
    8. '_runs' → logprob: -12.37765884399414
    9. '_
' → logprob: -13.12765884399414
    10. 'from' → logprob: -13.50265884399414

Token 425: '_' (ID: 62)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.017936626449227333
    2. '_' → logprob: -4.642936706542969
    3. 'e' → logprob: -5.517936706542969
    4. 'from' → logprob: -6.142936706542969
    5. '_runner' → logprob: -7.392936706542969
    6. '_adv' → logprob: -8.267936706542969
    7. 'ance' → logprob: -8.642936706542969
    8. '_move' → logprob: -9.017936706542969
    9. 'ed' → logprob: -9.017936706542969
    10. 'u' → logprob: -9.142936706542969

Token 426: 'advance' (ID: 75456)
  Prédit: 'advance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'advance' → logprob: -2.696889623621246e-06
    2. 'adv' → logprob: -13.12500286102295
    3. ' advance' → logprob: -14.25000286102295
    4. 'advanced' → logprob: -17.375001907348633
    5. '.advance' → logprob: -17.750001907348633
    6. 'avance' → logprob: -17.875001907348633
    7. ' ' → logprob: -18.375001907348633
    8. '_' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.250001907348633
    10. 'a' → logprob: -19.750001907348633

Token 427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009195583988912404
    2. '
' → logprob: -7.125919342041016
    3. '        
' → logprob: -9.625919342041016
    4. 'else' → logprob: -11.625919342041016
    5. '<|end|>' → logprob: -11.875919342041016
    6. '	' → logprob: -12.000919342041016
    7. 'self' → logprob: -12.250919342041016
    8. '   ' → logprob: -12.500919342041016
    9. '           ' → logprob: -12.625919342041016
    10. '​' → logprob: -13.500919342041016

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004965828265994787
    2. '
' → logprob: -6.004965782165527
    3. '        
' → logprob: -6.504965782165527
    4. 'else' → logprob: -7.379965782165527
    5. '	' → logprob: -8.879965782165527
    6. '		
' → logprob: -9.879965782165527
    7. ' else' → logprob: -10.129965782165527
    8. 'self' → logprob: -10.754965782165527
    9. ' ' → logprob: -11.504965782165527
    10. '    
' → logprob: -11.629965782165527

Token 429: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0157121904194355
    2. '
' → logprob: -5.140712261199951
    3. 'self' (adapté à ' self') → logprob: -5.765712261199951
    4. 'else' → logprob: -5.890712261199951
    5. ' else' → logprob: -6.140712261199951
    6. '        
' → logprob: -7.140712261199951
    7. '	' → logprob: -8.265711784362793
    8. ' self' → logprob: -8.515711784362793
    9. '    
' → logprob: -9.015711784362793
    10. '   ' → logprob: -9.640711784362793

Token 430: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.10111352056264877
    2. '.' → logprob: -2.3511135578155518
    3. '.add' → logprob: -7.601113319396973
    4. '.set' → logprob: -8.226113319396973
    5. ' .' → logprob: -9.601113319396973
    6. '.next' → logprob: -10.601113319396973
    7. '.second' → logprob: -11.226113319396973
    8. '.current' → logprob: -12.476113319396973
    9. '.
' → logprob: -12.851113319396973
    10. '._' → logprob: -12.851113319396973

Token 431: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0010342379100620747
    2. '.' → logprob: -6.876034259796143
    3. '.setdefault' → logprob: -14.251033782958984
    4. ' .' → logprob: -14.876033782958984
    5. 'set' → logprob: -16.251033782958984
    6. '.add' → logprob: -16.501033782958984
    7. ').' → logprob: -16.626033782958984
    8. '   ' → logprob: -17.126033782958984
    9. '=set' → logprob: -17.626033782958984
    10. '​.' → logprob: -18.001033782958984

Token 432: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -3.128163257315464e-07
    2. 'runner' → logprob: -15.875
    3. '_running' → logprob: -16.0
    4. '_' → logprob: -17.25
    5. ' runner' → logprob: -18.625
    6. '_run' → logprob: -18.75
    7. '_r' → logprob: -18.875
    8. 'Runner' → logprob: -20.375
    9. '.runner' → logprob: -21.375
    10. '_runtime' → logprob: -21.875

Token 433: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10021346807479858
    2. '(True' → logprob: -2.3502135276794434
    3. 'True' → logprob: -12.100213050842285
    4. '(
' → logprob: -13.725213050842285
    5. ' (' → logprob: -16.6002140045166
    6. '(

' → logprob: -17.4752140045166
    7. ' True' → logprob: -17.8502140045166
    8. '(true' → logprob: -17.8502140045166
    9. '=True' → logprob: -17.9752140045166
    10. '(False' → logprob: -18.2252140045166

Token 434: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.31327128410339355
    2. 'True' → logprob: -1.3132712841033936
    3. '(True' → logprob: -11.563271522521973
    4. '=True' → logprob: -17.563270568847656
    5. ' Tru' → logprob: -19.563270568847656
    6. ' ' → logprob: -20.188270568847656
    7. '.True' → logprob: -20.313270568847656
    8. '_true' → logprob: -21.938270568847656
    9. 'TRUE' → logprob: -22.313270568847656
    10. ' ' → logprob: -22.813270568847656

Token 435: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002117427531629801
    2. ' )' → logprob: -6.25211763381958
    3. '<|end|>' → logprob: -9.377117156982422
    4. ')
' → logprob: -9.502117156982422
    5. '()' → logprob: -11.127117156982422
    6. ')return' → logprob: -11.502117156982422
    7. '())' → logprob: -13.377117156982422
    8. ' )
' → logprob: -14.127117156982422
    9. ' ' → logprob: -14.752117156982422
    10. ')

' → logprob: -14.877117156982422

Token 436: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15824919939041138
    2. 'return' (adapté à ' return') → logprob: -2.1582491397857666
    3. '
' → logprob: -3.6582491397857666
    4. '<|end|>' → logprob: -5.908249378204346
    5. '	' → logprob: -7.533249378204346
    6. ' return' → logprob: -7.783249378204346
    7. '	return' → logprob: -7.908249378204346
    8. '   ' → logprob: -8.158248901367188
    9. '        
' → logprob: -8.408248901367188
    10. '		
' → logprob: -9.783248901367188

Token 438: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.023894252255558968
    2. ' False' → logprob: -3.7738943099975586
    3. 'None' → logprob: -7.398894309997559
    4. ' None' → logprob: -10.648894309997559
    5. 'True' → logprob: -11.523894309997559
    6. '0' → logprob: -13.023894309997559
    7. ' True' → logprob: -14.523894309997559
    8. '(False' → logprob: -15.398894309997559
    9. ' ' → logprob: -18.273893356323242
    10. 'false' → logprob: -18.773893356323242

Token 439: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0003921847674064338
    2. ' False' → logprob: -8.375391960144043
    3. '0' → logprob: -8.750391960144043
    4. 'None' → logprob: -13.375391960144043
    5. 'True' → logprob: -13.500391960144043
    6. 'false' → logprob: -16.62539291381836
    7. 'F' → logprob: -16.87539291381836
    8. '(False' → logprob: -17.12539291381836
    9. '   ' → logprob: -17.50039291381836
    10. 'Fa' → logprob: -17.87539291381836

Token 440: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: ' advance' (ID: 14805)
  Prédit: ' advance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' advance' → logprob: -0.4234953224658966
    2. 'advance' → logprob: -1.2984952926635742
    3. ' clear' → logprob: -3.423495292663574
    4. 'clear' → logprob: -4.048495292663574
    5. ' add' → logprob: -4.798495292663574
    6. 'add' → logprob: -5.673495292663574
    7. 'has' → logprob: -6.423495292663574
    8. ' has' → logprob: -6.548495292663574
    9. ' move' → logprob: -6.923495292663574
    10. ' runners' → logprob: -6.923495292663574

Token 444: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.43268251419067383
    2. '_runner' → logprob: -1.3076825141906738
    3. '_r' → logprob: -2.557682514190674
    4. '_' → logprob: -6.057682514190674
    5. 'all' → logprob: -8.057682037353516
    6. '_on' → logprob: -8.932682037353516
    7. '(' → logprob: -9.307682037353516
    8. '_base' → logprob: -9.557682037353516
    9. '_one' → logprob: -9.557682037353516
    10. '_first' → logprob: -9.932682037353516

Token 445: '_r' (ID: 3442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.662205696105957
    2. '_r' → logprob: -0.787205696105957
    3. 'r' → logprob: -3.787205696105957
    4. '_' → logprob: -5.412205696105957
    5. '(self' → logprob: -6.537205696105957
    6. 'R' → logprob: -7.912205696105957
    7. '_(' → logprob: -9.662205696105957
    8. '_runner' → logprob: -9.787205696105957
    9. 'self' → logprob: -10.912205696105957
    10. '__(' → logprob: -11.162205696105957

Token 446: 'unners' (ID: 46383)
  Prédit: 'unners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unners' → logprob: -0.1798202097415924
    2. 'unner' → logprob: -1.80482017993927
    3. 'un' → logprob: -10.30482006072998
    4. 'unning' → logprob: -10.92982006072998
    5. 'unn' → logprob: -11.42982006072998
    6. '_runner' → logprob: -12.30482006072998
    7. 'uner' → logprob: -13.30482006072998
    8. '_' → logprob: -13.80482006072998
    9. '_un' → logprob: -14.17982006072998
    10. 'runner' → logprob: -14.30482006072998

Token 447: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011722482740879059
    2. '(self' → logprob: -6.751172065734863
    3. ' (' → logprob: -13.501172065734863
    4. 'self' → logprob: -15.001172065734863
    5. '(
' → logprob: -16.00117301940918
    6. 'from' → logprob: -16.87617301940918
    7. '(s' → logprob: -17.00117301940918
    8. '   ' → logprob: -17.62617301940918
    9. '_' → logprob: -18.00117301940918
    10. '```' → logprob: -18.12617301940918

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029778027907013893
    2. ' self' → logprob: -3.529778003692627
    3. ')' → logprob: -11.279778480529785
    4. ' ' → logprob: -12.154778480529785
    5. '   ' → logprob: -12.529778480529785
    6. '	self' → logprob: -13.279778480529785
    7. ' )' → logprob: -14.029778480529785
    8. '):
' → logprob: -14.279778480529785
    9. '(self' → logprob: -14.404778480529785
    10. '       ' → logprob: -14.404778480529785

Token 449: ' ):
' (ID: 48169)
  Prédit: ' ):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):
' → logprob: -0.6100281476974487
    2. ' ):' → logprob: -0.8600281476974487
    3. '):
' → logprob: -4.110028266906738
    4. '):' → logprob: -4.110028266906738
    5. 'self' → logprob: -8.235028266906738
    6. ' )' → logprob: -8.610028266906738
    7. ' ' → logprob: -9.110028266906738
    8. '   ' → logprob: -9.485028266906738
    9. '(' → logprob: -10.360028266906738
    10. ',' → logprob: -11.235028266906738

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05835315212607384
    2. '   ' → logprob: -3.4333531856536865
    3. 'runs' → logprob: -4.558352947235107
    4. '
' → logprob: -4.808352947235107
    5. 'r' → logprob: -6.558352947235107
    6. '"""
' → logprob: -7.183352947235107
    7. '        
' → logprob: -7.308352947235107
    8. '    
' → logprob: -7.558352947235107
    9. '```' → logprob: -7.808352947235107
    10. ' runs' → logprob: -8.183353424072266

Token 451: ' """
' (ID: 7037)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.09912863373756409
    2. '       ' → logprob: -2.5991287231445312
    3. ' runs' → logprob: -4.849128723144531
    4. 'if' → logprob: -5.599128723144531
    5. '"""
' (adapté à ' """
') → logprob: -6.224128723144531
    6. 'total' → logprob: -6.724128723144531
    7. 'run' → logprob: -6.974128723144531
    8. '
' → logprob: -7.224128723144531
    9. 'r' → logprob: -7.349128723144531
    10. '   ' → logprob: -7.599128723144531

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7228277325630188
    2. 'runs' → logprob: -0.7228277325630188
    3. '"""
' → logprob: -4.722827911376953
    4. 'if' → logprob: -5.347827911376953
    5. 'self' → logprob: -5.472827911376953
    6. ' runs' → logprob: -6.097827911376953
    7. '#' → logprob: -6.347827911376953
    8. '   ' → logprob: -6.597827911376953
    9. '"""' → logprob: -6.597827911376953
    10. 'r' → logprob: -7.097827911376953

Token 453: ' Advance' (ID: 71813)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.00763703603297472
    2. '       ' → logprob: -6.507637023925781
    3. 'run' → logprob: -7.007637023925781
    4. '   ' → logprob: -7.007637023925781
    5. 'returns' → logprob: -7.132637023925781
    6. 'return' → logprob: -7.382637023925781
    7. '"""' → logprob: -7.507637023925781
    8. '"""
' → logprob: -7.507637023925781
    9. ' runs' → logprob: -8.007637023925781
    10. 'def' → logprob: -8.132637023925781

Token 454: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.075787253677845
    2. ' self' → logprob: -2.700787305831909
    3. '       ' → logprob: -6.32578706741333
    4. '   ' → logprob: -6.57578706741333
    5. 'runs' → logprob: -7.45078706741333
    6. 'if' → logprob: -7.57578706741333
    7. 'all' → logprob: -7.70078706741333
    8. ' all' → logprob: -7.82578706741333
    9. ' if' → logprob: -8.575787544250488
    10. '	self' → logprob: -9.825787544250488

Token 455: ' runners' (ID: 61876)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5457810759544373
    2. 'self' → logprob: -1.170781135559082
    3. '       ' → logprob: -3.670781135559082
    4. '   ' → logprob: -3.920781135559082
    5. ' self' → logprob: -3.920781135559082
    6. 'runs' → logprob: -4.170781135559082
    7. ' runners' → logprob: -4.545781135559082
    8. '_r' → logprob: -6.045781135559082
    9. ' True' → logprob: -6.420781135559082
    10. 'True' → logprob: -6.670781135559082

Token 456: ' by' (ID: 656)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14686207473278046
    2. 'from' → logprob: -2.896862030029297
    3. '       ' → logprob: -3.271862030029297
    4. ' from' → logprob: -4.271862030029297
    5. ' starting' → logprob: -4.521862030029297
    6. '(self' → logprob: -4.896862030029297
    7. '   ' → logprob: -5.021862030029297
    8. '(
' → logprob: -6.521862030029297
    9. 'starting' → logprob: -6.771862030029297
    10. 'Starting' → logprob: -7.771862030029297

Token 457: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6334974765777588
    2. ' one' → logprob: -0.7584974765777588
    3. '1' → logprob: -7.50849723815918
    4. ' ' → logprob: -9.50849723815918
    5. '   ' → logprob: -9.63349723815918
    6. '_one' → logprob: -9.63349723815918
    7. 'adv' → logprob: -10.38349723815918
    8. 'One' → logprob: -10.63349723815918
    9. ' moving' → logprob: -11.13349723815918
    10. 'self' → logprob: -11.25849723815918

Token 458: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.4901721179485321
    2. 'base' → logprob: -1.2401721477508545
    3. '   ' → logprob: -2.4901721477508545
    4. '_base' → logprob: -5.740171909332275
    5. '
' → logprob: -5.990171909332275
    6. '    ' → logprob: -6.115171909332275
    7. ' ' → logprob: -6.115171909332275
    8. '       ' → logprob: -6.865171909332275
    9. 'bases' → logprob: -7.240171909332275
    10. ' step' → logprob: -7.365171909332275

Token 459: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09423039108514786
    2. '   ' → logprob: -3.7192304134368896
    3. '.
' → logprob: -4.3442301750183105
    4. '.' → logprob: -4.4692301750183105
    5. ':' → logprob: -4.4692301750183105
    6. '(' → logprob: -4.8442301750183105
    7. ':
' → logprob: -4.8442301750183105
    8. ' starting' → logprob: -5.8442301750183105
    9. ',' → logprob: -5.9692301750183105
    10. '
' → logprob: -6.2192301750183105

Token 460: 'used' (ID: 4943)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0937784910202026
    2. ')' → logprob: -1.4687784910202026
    3. '   ' → logprob: -1.9687784910202026
    4. ')
' → logprob: -2.343778610229492
    5. '
' → logprob: -3.093778610229492
    6. ' )
' → logprob: -3.468778610229492
    7. ' )' → logprob: -3.843778610229492
    8. '):
' → logprob: -3.843778610229492
    9. ' starting' → logprob: -4.218778610229492
    10. 'from' → logprob: -4.468778610229492

Token 461: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7676845788955688
    2. ' for' → logprob: -1.3926845788955688
    3. ')' → logprob: -1.8926845788955688
    4. '       ' → logprob: -3.2676844596862793
    5. ' to' → logprob: -4.017684459686279
    6. ' when' → logprob: -4.017684459686279
    7. 'for' → logprob: -4.642684459686279
    8. ' starting' → logprob: -4.642684459686279
    9. ' )' → logprob: -4.892684459686279
    10. ')
' → logprob: -5.267684459686279

Token 462: ' HIT' (ID: 148785)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.6431888341903687
    2. 'b' → logprob: -1.1431888341903687
    3. 's' → logprob: -3.768188953399658
    4. ' example' → logprob: -3.893188953399658
    5. ' walks' → logprob: -3.893188953399658
    6. ' walk' → logprob: -4.143188953399658
    7. ' sacrifice' → logprob: -4.393188953399658
    8. 'self' → logprob: -4.643188953399658
    9. 'a' → logprob: -4.768188953399658
    10. 'bases' → logprob: -5.518188953399658

Token 463: ' event' (ID: 2104)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34132739901542664
    2. ')
' → logprob: -1.591327428817749
    3. ' )' → logprob: -3.466327428817749
    4. ' )
' → logprob: -3.591327428817749
    5. '   ' → logprob: -4.84132719039917
    6. '()' → logprob: -4.96632719039917
    7. ').' → logprob: -5.59132719039917
    8. '):
' → logprob: -6.09132719039917
    9. '(' → logprob: -7.21632719039917
    10. 's' → logprob: -7.34132719039917

Token 464: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3504616022109985
    2. '):
' → logprob: -1.3504616022109985
    3. ')' → logprob: -1.6004616022109985
    4. '):' → logprob: -2.475461483001709
    5. ' ):
' → logprob: -2.475461483001709
    6. ')
' → logprob: -3.350461483001709
    7. ' )
' → logprob: -3.725461483001709
    8. ' )' → logprob: -3.975461483001709
    9. '       ' → logprob: -4.100461483001709
    10. ').' → logprob: -4.975461483001709

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05007939785718918
    2. '   ' → logprob: -3.050079345703125
    3. '(' → logprob: -8.050079345703125
    4. ')' → logprob: -8.050079345703125
    5. '
' → logprob: -8.675079345703125
    6. '()' → logprob: -8.675079345703125
    7. ')
' → logprob: -8.800079345703125
    8. 'self' → logprob: -9.425079345703125
    9. '()
' → logprob: -9.550079345703125
    10. '(self' → logprob: -10.300079345703125

Token 466: ' R' (ID: 460)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019799028523266315
    2. '
' → logprob: -6.626979827880859
    3. '   ' → logprob: -7.626979827880859
    4. '        
' → logprob: -9.75197982788086
    5. 'def' → logprob: -10.62697982788086
    6. 'self' → logprob: -11.12697982788086
    7. '    
' → logprob: -11.75197982788086
    8. ':
' → logprob: -12.12697982788086
    9. '()
' → logprob: -12.25197982788086
    10. '(' → logprob: -12.37697982788086

Token 467: 'unners' (ID: 46383)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.40016093850135803
    2. '       ' → logprob: -1.5251609086990356
    3. '   ' → logprob: -2.400161027908325
    4. 'unning' → logprob: -5.150160789489746
    5. 'def' → logprob: -5.400160789489746
    6. 'un' → logprob: -6.150160789489746
    7. '      ' → logprob: -6.275160789489746
    8. 'e' → logprob: -6.525160789489746
    9. 'unner' → logprob: -6.775160789489746
    10. '  ' → logprob: -7.275160789489746

Token 468: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06236805021762848
    2. ' on' → logprob: -3.812368154525757
    3. '=' → logprob: -3.937368154525757
    4. 'on' → logprob: -4.937367916107178
    5. '   ' → logprob: -5.812367916107178
    6. '_on' → logprob: -5.937367916107178
    7. ' are' → logprob: -6.437367916107178
    8. '       ' → logprob: -6.937367916107178
    9. '_to' → logprob: -7.812367916107178
    10. 'from' → logprob: -8.062368392944336

Token 469: ' third' (ID: 6914)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5223960280418396
    2. 'third' → logprob: -1.5223960876464844
    3. ' third' → logprob: -2.1473960876464844
    4. ' self' → logprob: -2.6473960876464844
    5. '.third' → logprob: -8.647396087646484
    6. 'first' → logprob: -9.022396087646484
    7. 'Third' → logprob: -9.272396087646484
    8. '[' → logprob: -9.397396087646484
    9. '   ' → logprob: -9.647396087646484
    10. '       ' → logprob: -9.772396087646484

Token 470: ' base' (ID: 3611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8023083806037903
    2. '   ' → logprob: -1.4273083209991455
    3. '.' → logprob: -3.0523083209991455
    4. ' .' → logprob: -3.3023083209991455
    5. ':' → logprob: -3.4273083209991455
    6. '().' → logprob: -3.4273083209991455
    7. '    ' → logprob: -3.5523083209991455
    8. '           ' → logprob: -4.052308559417725
    9. ',' → logprob: -4.427308559417725
    10. '        ' → logprob: -4.427308559417725

Token 471: ' score' (ID: 8429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1669168770313263
    2. ' are' → logprob: -3.166916847229004
    3. '   ' → logprob: -3.666916847229004
    4. ':' → logprob: -4.166916847229004
    5. ':
' → logprob: -4.291916847229004
    6. ' should' → logprob: -4.541916847229004
    7. '().' → logprob: -4.666916847229004
    8. '(' → logprob: -5.541916847229004
    9. '.' → logprob: -5.666916847229004
    10. '():
' → logprob: -5.791916847229004

Token 472: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16070416569709778
    2. '       ' → logprob: -2.5357041358947754
    3. '()' → logprob: -3.7857041358947754
    4. '()
' → logprob: -3.7857041358947754
    5. '(self' → logprob: -4.160704135894775
    6. '   ' → logprob: -5.160704135894775
    7. '(
' → logprob: -6.785704135894775
    8. '():
' → logprob: -7.160704135894775
    9. 'def' → logprob: -8.785704612731934
    10. 'self' → logprob: -8.785704612731934

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010835925117135048
    2. '
' → logprob: -4.885836124420166
    3. '   ' → logprob: -6.135836124420166
    4. 'runs' → logprob: -7.885836124420166
    5. 'if' → logprob: -8.010835647583008
    6. ' if' → logprob: -8.510835647583008
    7. '```' → logprob: -10.635835647583008
    8. ' runs' → logprob: -10.885835647583008
    9. 'result' → logprob: -11.010835647583008
    10. '           ' → logprob: -11.385835647583008

Token 474: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12897652387619019
    2. 'runs' → logprob: -2.378976583480835
    3. '
' → logprob: -3.878976583480835
    4. '   ' → logprob: -6.003976345062256
    5. ' runs' → logprob: -6.503976345062256
    6. 'r' → logprob: -6.878976345062256
    7. 'total' → logprob: -7.503976345062256
    8. 'if' → logprob: -8.003976821899414
    9. 'result' → logprob: -8.128976821899414
    10. 'return' → logprob: -8.628976821899414

Token 475: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38687223196029663
    2. ' the' → logprob: -1.5118722915649414
    3. 'self' → logprob: -3.7618722915649414
    4. '0' → logprob: -3.8868722915649414
    5. ' ' → logprob: -4.011872291564941
    6. ' sum' → logprob: -4.386872291564941
    7. ' runs' → logprob: -5.011872291564941
    8. ' number' → logprob: -5.136872291564941
    9. 'sum' → logprob: -5.511872291564941
    10. 'runs' → logprob: -5.886872291564941

Token 476: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09049760550260544
    2. ' self' → logprob: -2.8404974937438965
    3. 'True' → logprob: -4.5904974937438965
    4. 'runs' → logprob: -4.9654974937438965
    5. 'sum' → logprob: -5.3404974937438965
    6. ' True' → logprob: -5.8404974937438965
    7. '1' → logprob: -6.5904974937438965
    8. ' sum' → logprob: -7.5904974937438965
    9. 'int' → logprob: -8.090497970581055
    10. 'number' → logprob: -8.215497970581055

Token 477: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5078274011611938
    2. ' of' → logprob: -1.1328274011611938
    3. '_' → logprob: -3.5078272819519043
    4. '(' → logprob: -3.7578272819519043
    5. '_of' → logprob: -4.382827281951904
    6. 'o' → logprob: -6.132827281951904
    7. '=' → logprob: -6.382827281951904
    8. '       ' → logprob: -6.507827281951904
    9. ' ' → logprob: -6.882827281951904
    10. '0' → logprob: -6.882827281951904

Token 478: ' runs' (ID: 13719)
  Prédit: ' runs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.6331075429916382
    2. 'runs' → logprob: -0.7581075429916382
    3. '_runs' → logprob: -8.00810718536377
    4. ' runners' → logprob: -9.63310718536377
    5. ' ' → logprob: -10.50810718536377
    6. 'run' → logprob: -10.63310718536377
    7. ' run' → logprob: -10.88310718536377
    8. '
' → logprob: -12.00810718536377
    9. ' ' → logprob: -12.13310718536377
    10. '   ' → logprob: -12.38310718536377

Token 479: ' scored' (ID: 27207)
  Prédit: ' scored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scored' → logprob: -0.004605876747518778
    2. '       ' → logprob: -6.129605770111084
    3. '_sc' → logprob: -6.254605770111084
    4. '   ' → logprob: -8.379606246948242
    5. ' scor' → logprob: -9.254606246948242
    6. ' (' → logprob: -10.254606246948242
    7. 'sc' → logprob: -10.629606246948242
    8. ' scoring' → logprob: -11.004606246948242
    9. '(' → logprob: -11.254606246948242
    10. '_s' → logprob: -11.254606246948242

Token 480: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6533536314964294
    2. '(' → logprob: -0.7783536314964294
    3. '(self' → logprob: -4.403353691101074
    4. '   ' → logprob: -5.028353691101074
    5. 'self' → logprob: -7.403353691101074
    6. '
' → logprob: -8.153353691101074
    7. '(
' → logprob: -8.653353691101074
    8. ',' → logprob: -8.903353691101074
    9. '.' → logprob: -9.028353691101074
    10. '        
' → logprob: -9.278353691101074

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016412617405876517
    2. '   ' → logprob: -6.876641273498535
    3. '
' → logprob: -7.751641273498535
    4. 'count' → logprob: -10.126641273498535
    5. 'runs' → logprob: -10.376641273498535
    6. 'total' → logprob: -11.251641273498535
    7. '```' → logprob: -11.376641273498535
    8. '        
' → logprob: -11.501641273498535
    9. 'self' → logprob: -11.501641273498535
    10. 'return' → logprob: -11.876641273498535

Token 482: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.637953519821167
    2. 'runs' → logprob: -0.762953519821167
    3. '   ' → logprob: -5.887953758239746
    4. 'total' → logprob: -7.012953758239746
    5. 'def' → logprob: -7.762953758239746
    6. '```' → logprob: -8.137953758239746
    7. '
' → logprob: -8.387953758239746
    8. ' runs' → logprob: -8.512953758239746
    9. 'r' → logprob: -8.887953758239746
    10. 'count' → logprob: -8.887953758239746

Token 483: '       ' (ID: 309)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.16354115307331085
    2. '       ' → logprob: -1.9135411977767944
    3. 'total' → logprob: -6.413541316986084
    4. '   ' → logprob: -6.913541316986084
    5. '```' → logprob: -8.663540840148926
    6. 'def' → logprob: -8.913540840148926
    7. 'r' → logprob: -9.038540840148926
    8. 'run' → logprob: -9.163540840148926
    9. '
' → logprob: -10.413540840148926
    10. 'count' → logprob: -10.663540840148926

Token 484: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' (adapté à ' runs') → logprob: -0.0001793457195162773
    2. '       ' → logprob: -8.750179290771484
    3. 'total' → logprob: -11.250179290771484
    4. 'run' → logprob: -13.375179290771484
    5. 'scores' → logprob: -13.375179290771484
    6. '```' → logprob: -13.375179290771484
    7. '   ' → logprob: -13.375179290771484
    8. ' runs' → logprob: -14.875179290771484
    9. 'sc' → logprob: -15.000179290771484
    10. 'score' → logprob: -15.125179290771484

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9073907136917114
    2. '_sc' → logprob: -0.9073907136917114
    3. ' =' → logprob: -1.6573907136917114
    4. '_from' → logprob: -6.282390594482422
    5. 'sc' → logprob: -9.407390594482422
    6. '=sc' → logprob: -9.782390594482422
    7. ' ' → logprob: -10.282390594482422
    8. '   ' → logprob: -10.282390594482422
    9. '_score' → logprob: -10.532390594482422
    10. '_s' → logprob: -10.657390594482422

Token 486: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00466176075860858
    2. 'self' → logprob: -5.504661560058594
    3. ' ' → logprob: -7.629661560058594
    4. ' self' → logprob: -9.379661560058594
    5. 'int' → logprob: -11.754661560058594
    6. 'False' → logprob: -13.379661560058594
    7. '(' → logprob: -13.504661560058594
    8. '   ' → logprob: -13.879661560058594
    9. '(self' → logprob: -15.254661560058594
    10. ' int' → logprob: -15.504661560058594

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011125755496323109
    2. 'self' → logprob: -4.511125564575195
    3. 'False' → logprob: -9.886125564575195
    4. ' ' → logprob: -11.636125564575195
    5. ' self' → logprob: -11.636125564575195
    6. 'int' → logprob: -12.511125564575195
    7. '(' → logprob: -13.386125564575195
    8. '(self' → logprob: -13.636125564575195
    9. '   ' → logprob: -14.448625564575195
    10. 'false' → logprob: -14.573625564575195

Token 488: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007222165819257498
    2. '       ' → logprob: -5.1322221755981445
    3. 'if' → logprob: -7.8822221755981445
    4. '	' → logprob: -8.632222175598145
    5. ' if' → logprob: -8.632222175598145
    6. '		
' → logprob: -8.632222175598145
    7. '        
' → logprob: -8.757222175598145
    8. '
' → logprob: -9.132222175598145
    9. '	if' → logprob: -10.757222175598145
    10. '	
' → logprob: -10.882222175598145

Token 489: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05939916893839836
    2. '       ' → logprob: -3.684399127960205
    3. 'if' → logprob: -4.309399127960205
    4. '	if' → logprob: -4.559399127960205
    5. ' if' → logprob: -5.684399127960205
    6. '	' → logprob: -6.059399127960205
    7. '   ' → logprob: -6.684399127960205
    8. '
' → logprob: -6.934399127960205
    9. '		
' → logprob: -8.934399604797363
    10. '	
' → logprob: -9.059399604797363

Token 490: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10087086260318756
    2. 'runs' → logprob: -2.3508708477020264
    3. 'for' → logprob: -7.9758710861206055
    4. ' if' → logprob: -9.225871086120605
    5. '       ' → logprob: -9.600871086120605
    6. '#' (adapté à ' #') → logprob: -9.975871086120605
    7. '
' → logprob: -10.225871086120605
    8. '   ' → logprob: -11.100871086120605
    9. '```' → logprob: -11.225871086120605
    10. 'self' → logprob: -11.225871086120605

Token 491: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5288836359977722
    2. 'runs' → logprob: -0.9038836359977722
    3. 'for' → logprob: -5.528883457183838
    4. '       ' → logprob: -7.153883457183838
    5. '#' → logprob: -8.278883934020996
    6. '
' → logprob: -8.528883934020996
    7. '   ' → logprob: -9.153883934020996
    8. ' if' → logprob: -9.153883934020996
    9. 'self' → logprob: -9.778883934020996
    10. 'r' → logprob: -9.903883934020996

Token 492: ' advance' (ID: 14805)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5559234619140625
    2. 'runs' → logprob: -1.5559234619140625
    3. '.third' → logprob: -2.5559234619140625
    4. '   ' → logprob: -3.1809234619140625
    5. ' if' → logprob: -3.3059234619140625
    6. '       ' → logprob: -3.4309234619140625
    7. 'third' → logprob: -4.4309234619140625
    8. '.r' → logprob: -5.5559234619140625
    9. '.' → logprob: -6.0559234619140625
    10. 'r' → logprob: -6.4309234619140625

Token 493: ' runners' (ID: 61876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3076663315296173
    2. 'if' → logprob: -1.557666301727295
    3. ' self' → logprob: -3.432666301727295
    4. ' if' → logprob: -4.307666301727295
    5. ' =' → logprob: -5.807666301727295
    6. '=' → logprob: -5.932666301727295
    7. '       ' → logprob: -7.057666301727295
    8. '=self' → logprob: -7.807666301727295
    9. '   ' → logprob: -7.932666301727295
    10. 'from' → logprob: -8.307666778564453

Token 494: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034913964569568634
    2. '+=' → logprob: -4.159914016723633
    3. 'from' → logprob: -4.784914016723633
    4. ' =' → logprob: -4.909914016723633
    5. 'on' → logprob: -6.409914016723633
    6. ' on' → logprob: -8.034914016723633
    7. ' +=' → logprob: -8.159914016723633
    8. '       ' → logprob: -8.409914016723633
    9. ' from' → logprob: -9.159914016723633
    10. '   ' → logprob: -9.159914016723633

Token 495: ' third' (ID: 6914)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.5792883038520813
    2. 'self' → logprob: -0.8292883038520813
    3. ' third' → logprob: -5.829288482666016
    4. ' self' → logprob: -7.954288482666016
    5. '.third' → logprob: -10.079288482666016
    6. 'Third' → logprob: -12.704288482666016
    7. '	self' → logprob: -13.579288482666016
    8. '   ' → logprob: -14.204288482666016
    9. '第三' → logprob: -14.204288482666016
    10. '3' → logprob: -14.329288482666016

Token 496: ' first' (ID: 1577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7365589737892151
    2. ' if' → logprob: -0.8615589737892151
    3. '       ' → logprob: -2.4865589141845703
    4. '.' → logprob: -4.98655891418457
    5. ':' → logprob: -6.11155891418457
    6. '
' → logprob: -6.86155891418457
    7. ':
' → logprob: -6.86155891418457
    8. ',' → logprob: -6.98655891418457
    9. '   ' → logprob: -7.23655891418457
    10. '(' → logprob: -7.61155891418457

Token 497: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19988425076007843
    2. 'if' → logprob: -2.5748841762542725
    3. ' if' → logprob: -2.6998841762542725
    4. '
' → logprob: -3.4498841762542725
    5. ',' → logprob: -6.074884414672852
    6. '.' → logprob: -6.824884414672852
    7. 'runs' → logprob: -6.949884414672852
    8. '.
' → logprob: -7.449884414672852
    9. '        
' → logprob: -8.199884414672852
    10. ':' → logprob: -9.074884414672852

Token 498: 'to' (ID: 935)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25708019733428955
    2. 'runs' → logprob: -2.007080078125
    3. ' if' → logprob: -2.507080078125
    4. '       ' → logprob: -4.882080078125
    5. ' runs' → logprob: -6.632080078125
    6. ')' → logprob: -7.257080078125
    7. 'self' → logprob: -7.382080078125
    8. '
' → logprob: -8.757080078125
    9. 'r' → logprob: -9.132080078125
    10. 'run' → logprob: -9.882080078125

Token 499: ' score' (ID: 8429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08992303162813187
    2. ' self' → logprob: -2.464923143386841
    3. 'if' → logprob: -7.339922904968262
    4. ')' → logprob: -9.339922904968262
    5. '
' → logprob: -9.839922904968262
    6. ' if' → logprob: -10.589922904968262
    7. 'True' → logprob: -10.714922904968262
    8. 'third' → logprob: -10.714922904968262
    9. '    ' → logprob: -10.839922904968262
    10. ' third' → logprob: -11.089922904968262

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3576574921607971
    2. ')
' → logprob: -1.4826574325561523
    3. '()' → logprob: -3.4826574325561523
    4. '),' → logprob: -4.107657432556152
    5. '())' → logprob: -5.232657432556152
    6. ' )' → logprob: -5.357657432556152
    7. '())
' → logprob: -5.607657432556152
    8. ' if' → logprob: -5.732657432556152
    9. ' )
' → logprob: -6.107657432556152
    10. '   ' → logprob: -6.107657432556152

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4936662018299103
    2. '
' → logprob: -0.9936661720275879
    3. 'if' → logprob: -4.243666172027588
    4. ' if' → logprob: -5.493666172027588
    5. '        
' → logprob: -7.993666172027588
    6. '   ' → logprob: -8.368666648864746
    7. ',' → logprob: -9.243666648864746
    8. '
' → logprob: -9.743666648864746
    9. '    
' → logprob: -9.993666648864746
    10. '	' → logprob: -10.493666648864746

Token 502: ' if' (ID: 538)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.18190713226795197
    2. 'if' (adapté à ' if') → logprob: -1.8069071769714355
    3. '       ' → logprob: -6.3069071769714355
    4. ' if' → logprob: -8.931906700134277
    5. '   ' → logprob: -9.806906700134277
    6. 'r' → logprob: -10.056906700134277
    7. '
' → logprob: -10.556906700134277
    8. 'run' → logprob: -10.681906700134277
    9. ' runs' → logprob: -11.056906700134277
    10. '```' → logprob: -11.056906700134277

Token 503: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021713376045227
    2. ' self' → logprob: -2.35021710395813
    3. '   ' → logprob: -12.35021686553955
    4. '	self' → logprob: -12.47521686553955
    5. '       ' → logprob: -13.60021686553955
    6. ' ' → logprob: -14.85021686553955
    7. '(self' → logprob: -15.35021686553955
    8. '    ' → logprob: -15.35021686553955
    9. ' ' → logprob: -15.60021686553955
    10. '  ' → logprob: -16.975217819213867

Token 504: '.third' (ID: 182887)
  Prédit: '.third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.third' → logprob: -9.019237768370658e-05
    2. '.' → logprob: -9.375090599060059
    3. 'third' → logprob: -13.375090599060059
    4. '.first' → logprob: -13.500090599060059
    5. ' .' → logprob: -13.625090599060059
    6. '.th' → logprob: -14.000090599060059
    7. '.second' → logprob: -15.500090599060059
    8. '.trip' → logprob: -17.375089645385742
    9. '.right' → logprob: -18.000089645385742
    10. '.top' → logprob: -18.250089645385742

Token 505: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.0003886086633428931
    2. '.' → logprob: -7.8753886222839355
    3. 'has' → logprob: -12.750388145446777
    4. ' .' → logprob: -13.000388145446777
    5. '.have' → logprob: -13.875388145446777
    6. '.is' → logprob: -14.500388145446777
    7. '.advance' → logprob: -14.875388145446777
    8. '.Has' → logprob: -15.375388145446777
    9. '.runner' → logprob: -16.000389099121094
    10. '   ' → logprob: -16.125389099121094

Token 506: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -5.9153885558771435e-06
    2. 'runner' → logprob: -12.125005722045898
    3. '_run' → logprob: -16.2500057220459
    4. ' runner' → logprob: -16.6250057220459
    5. '_' → logprob: -16.7500057220459
    6. 'Runner' → logprob: -16.7500057220459
    7. '.runner' → logprob: -18.0000057220459
    8. '_running' → logprob: -18.5000057220459
    9. '_r' → logprob: -18.6250057220459
    10. '
' → logprob: -20.2500057220459

Token 507: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.023356588557362556
    2. '():
' → logprob: -3.7733566761016846
    3. '()' → logprob: -9.148356437683105
    4. '(' → logprob: -12.773356437683105
    5. '():
' → logprob: -13.898356437683105
    6. '():

' → logprob: -14.773356437683105
    7. ' ():' → logprob: -15.398356437683105
    8. '()==' → logprob: -16.023357391357422
    9. '()):
' → logprob: -16.523357391357422
    10. ':' → logprob: -17.398357391357422

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01063520647585392
    2. '
' → logprob: -5.6356353759765625
    3. ':
' → logprob: -6.0106353759765625
    4. 'r' → logprob: -7.0106353759765625
    5. '       ' → logprob: -7.1356353759765625
    6. '   ' → logprob: -7.1356353759765625
    7. 'runs' → logprob: -7.2606353759765625
    8. '	       ' → logprob: -8.010635375976562
    9. '```' → logprob: -8.510635375976562
    10. '            
' → logprob: -8.635635375976562

Token 509: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' (adapté à ' runs') → logprob: -0.018761301413178444
    2. ' runs' → logprob: -4.143761157989502
    3. 'r' → logprob: -6.768761157989502
    4. '           ' → logprob: -7.268761157989502
    5. '
' → logprob: -8.01876163482666
    6. '   ' → logprob: -8.26876163482666
    7. '               ' → logprob: -9.51876163482666
    8. 'run' → logprob: -9.51876163482666
    9. '_runs' → logprob: -10.01876163482666
    10. '       ' → logprob: -10.89376163482666

Token 510: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.061980683356523514
    2. '+=' → logprob: -2.811980724334717
    3. '=' → logprob: -12.061980247497559
    4. ' =' → logprob: -12.436980247497559
    5. '    ' → logprob: -14.311980247497559
    6. '	' → logprob: -14.311980247497559
    7. '   ' → logprob: -14.561980247497559
    8. ']+=' → logprob: -14.811980247497559
    9. '+' → logprob: -14.936980247497559
    10. ' ' → logprob: -15.186980247497559

Token 511: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35370269417762756
    2. '1' → logprob: -1.2287026643753052
    3. ' self' → logprob: -5.353702545166016
    4. 'True' → logprob: -7.978702545166016
    5. ' ' → logprob: -8.728702545166016
    6. ' True' → logprob: -12.603702545166016
    7. '   ' → logprob: -13.478702545166016
    8. '	self' → logprob: -13.728702545166016
    9. '           ' → logprob: -13.978702545166016
    10. 'true' → logprob: -14.103702545166016

Token 512: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1434880644083023
    2. '1' → logprob: -2.0184881687164307
    3. 'True' → logprob: -7.143487930297852
    4. ' self' → logprob: -11.018487930297852
    5. 'true' → logprob: -13.143487930297852
    6. 'int' → logprob: -13.768487930297852
    7. ' ' → logprob: -13.893487930297852
    8. '(self' → logprob: -14.393487930297852
    9. '	self' → logprob: -14.893487930297852
    10. '3' → logprob: -15.768487930297852

Token 513: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6935709714889526
    2. '           ' → logprob: -0.6935709714889526
    3. '       ' → logprob: -8.193571090698242
    4. '            
' → logprob: -10.318571090698242
    5. '
' → logprob: -10.443571090698242
    6. 'self' → logprob: -10.568571090698242
    7. '        
' → logprob: -10.943571090698242
    8. '               ' → logprob: -11.193571090698242
    9. '    
' → logprob: -11.193571090698242
    10. '  
' → logprob: -12.818571090698242

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01920110173523426
    2. '       ' → logprob: -4.019201278686523
    3. '
' → logprob: -6.894201278686523
    4. 'self' → logprob: -11.019201278686523
    5. '               ' → logprob: -12.019201278686523
    6. '        
' → logprob: -12.019201278686523
    7. '   ' → logprob: -12.894201278686523
    8. '            
' → logprob: -13.769201278686523
    9. '		' → logprob: -13.894201278686523
    10. '
' → logprob: -14.144201278686523

Token 515: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00012916464766021818
    2. '           ' → logprob: -9.125128746032715
    3. '       ' → logprob: -11.125128746032715
    4. ' self' → logprob: -12.125128746032715
    5. '   ' → logprob: -16.37512969970703
    6. '	self' → logprob: -17.37512969970703
    7. '               ' → logprob: -18.50012969970703
    8. '(self' → logprob: -19.00012969970703
    9. ' ' → logprob: -19.25012969970703
    10. '          ' → logprob: -19.62512969970703

Token 516: '.third' (ID: 182887)
  Prédit: '.third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.third' → logprob: -2.534558552724775e-05
    2. 'third' → logprob: -10.625025749206543
    3. '.' → logprob: -14.000025749206543
    4. ' .' → logprob: -16.875024795532227
    5. 'Third' → logprob: -17.125024795532227
    6. '.set' → logprob: -18.000024795532227
    7. '
' → logprob: -18.000024795532227
    8. '.first' → logprob: -18.125024795532227
    9. '第三' → logprob: -18.250024795532227
    10. '.th' → logprob: -18.250024795532227

Token 517: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0028387531638145447
    2. '.advance' → logprob: -5.877838611602783
    3. '.' → logprob: -10.377839088439941
    4. 'advance' → logprob: -14.252839088439941
    5. 'set' → logprob: -14.627839088439941
    6. ' .' → logprob: -14.627839088439941
    7. '   ' → logprob: -14.752839088439941
    8. '().' → logprob: -15.252839088439941
    9. ').' → logprob: -16.377838134765625
    10. '.Adv' → logprob: -16.377838134765625

Token 518: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -6.2729995988775045e-06
    2. 'runner' → logprob: -12.000006675720215
    3. 'Runner' → logprob: -17.7500057220459
    4. ' runner' → logprob: -18.0000057220459
    5. '_running' → logprob: -19.2500057220459
    6. '.runner' → logprob: -21.0000057220459
    7. '_run' → logprob: -21.0000057220459
    8. '_r' → logprob: -21.7500057220459
    9. 'unner' → logprob: -24.5000057220459
    10. ' Runner' → logprob: -24.6250057220459

Token 519: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20144645869731903
    2. '(False' → logprob: -1.7014464139938354
    3. 'False' → logprob: -10.326446533203125
    4. '(
' → logprob: -15.576446533203125
    5. ' (' → logprob: -16.326446533203125
    6. '(false' → logprob: -16.451446533203125
    7. ' False' → logprob: -17.076446533203125
    8. '(FALSE' → logprob: -18.451446533203125
    9. '(None' → logprob: -18.576446533203125
    10. '(True' → logprob: -18.701446533203125

Token 520: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1269523650407791
    2. ' False' → logprob: -2.1269524097442627
    3. '(False' → logprob: -10.626952171325684
    4. '=False' → logprob: -17.626953125
    5. '.False' → logprob: -19.501953125
    6. '   ' → logprob: -19.751953125
    7. '_false' → logprob: -20.376953125
    8. 'F' → logprob: -20.751953125
    9. 'false' → logprob: -22.001953125
    10. ' false' → logprob: -22.001953125

Token 521: ' )
' (ID: 3270)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8753541111946106
    2. ')' → logprob: -1.2503540515899658
    3. '       ' → logprob: -1.2503540515899658
    4. '
' → logprob: -4.625354290008545
    5. ' )
' → logprob: -8.375353813171387
    6. ')

' → logprob: -9.375353813171387
    7. ' )' → logprob: -9.500353813171387
    8. '   ' → logprob: -9.750353813171387
    9. '        
' → logprob: -10.125353813171387
    10. '()' → logprob: -10.500353813171387

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0383886881172657
    2. '
' → logprob: -3.288388729095459
    3. '        
' → logprob: -8.6633882522583
    4. '   ' → logprob: -10.0383882522583
    5. '	' → logprob: -10.4133882522583
    6. '    
' → logprob: -10.5383882522583
    7. '		
' → logprob: -10.9133882522583
    8. '  
' → logprob: -11.0383882522583
    9. 'if' → logprob: -11.4133882522583
    10. '
' → logprob: -12.2883882522583

Token 523: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36597344279289246
    2. '       ' → logprob: -1.7409734725952148
    3. '
' → logprob: -2.115973472595215
    4. ' if' → logprob: -5.240973472595215
    5. '   ' → logprob: -5.615973472595215
    6. '        
' → logprob: -7.365973472595215
    7. 'runs' → logprob: -8.115973472595215
    8. '    
' → logprob: -8.240973472595215
    9. '
' → logprob: -9.115973472595215
    10. '	if' → logprob: -9.740973472595215

Token 524: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4903636872768402
    2. 'runs' → logprob: -0.9903637170791626
    3. '#' → logprob: -4.865363597869873
    4. 'for' → logprob: -5.115363597869873
    5. 'self' → logprob: -6.740363597869873
    6. ' if' → logprob: -7.615363597869873
    7. 'r' → logprob: -8.240364074707031
    8. '       ' → logprob: -8.990364074707031
    9. '   ' → logprob: -9.115364074707031
    10. '
' → logprob: -9.865364074707031

Token 525: ' runners' (ID: 61876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0344088114798069
    2. ' self' → logprob: -4.034409046173096
    3. 'r' → logprob: -4.409409046173096
    4. ' runners' → logprob: -6.034409046173096
    5. 'second' → logprob: -7.534409046173096
    6. 'if' → logprob: -8.159408569335938
    7. '       ' → logprob: -8.534408569335938
    8. ' second' → logprob: -9.034408569335938
    9. 'all' → logprob: -9.034408569335938
    10. '   ' → logprob: -9.034408569335938

Token 526: ' on' (ID: 402)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.23100076615810394
    2. 'on' → logprob: -1.8560007810592651
    3. ' from' → logprob: -3.3560006618499756
    4. ' on' → logprob: -4.731000900268555
    5. '       ' → logprob: -5.481000900268555
    6. '   ' → logprob: -7.231000900268555
    7. '(' → logprob: -7.856000900268555
    8. 'self' → logprob: -8.481000900268555
    9. 'down' → logprob: -8.481000900268555
    10. 'up' → logprob: -9.106000900268555

Token 527: ' second' (ID: 3099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6945169568061829
    2. 'second' → logprob: -0.6945169568061829
    3. ' second' → logprob: -6.819517135620117
    4. ' self' → logprob: -8.319517135620117
    5. '.second' → logprob: -11.694517135620117
    6. ' ' → logprob: -11.819517135620117
    7. '	second' → logprob: -11.819517135620117
    8. '   ' → logprob: -12.069517135620117
    9. 'Second' → logprob: -12.944517135620117
    10. '_second' → logprob: -14.944517135620117

Token 528: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4108549952507019
    2. ' if' → logprob: -1.2858550548553467
    3. 'if' → logprob: -2.9108550548553467
    4. ' and' → logprob: -6.785854816436768
    5. ' to' → logprob: -7.160854816436768
    6. ':
' → logprob: -7.285854816436768
    7. ':' → logprob: -7.410854816436768
    8. '()
' → logprob: -7.660854816436768
    9. '(' → logprob: -7.785854816436768
    10. '   ' → logprob: -7.910854816436768

Token 529: ' third' (ID: 6914)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4843024015426636
    2. 'self' → logprob: -0.9843024015426636
    3. ' third' → logprob: -5.359302520751953
    4. ' True' → logprob: -5.984302520751953
    5. 'True' → logprob: -6.484302520751953
    6. 'third' → logprob: -6.609302520751953
    7. '	self' → logprob: -11.234302520751953
    8. 'False' → logprob: -11.484302520751953
    9. ' the' → logprob: -11.484302520751953
    10. '    ' → logprob: -12.234302520751953

Token 530: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002351741772145033
    2. ' if' → logprob: -6.877351760864258
    3. 'if' → logprob: -7.002351760864258
    4. ',' → logprob: -8.752351760864258
    5. '
' → logprob: -9.127351760864258
    6. '()
' → logprob: -10.252351760864258
    7. '        
' → logprob: -10.627351760864258
    8. ' and' → logprob: -10.877351760864258
    9. '(' → logprob: -11.127351760864258
    10. '   ' → logprob: -11.752351760864258

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011833232128992677
    2. 'if' → logprob: -7.37618350982666
    3. ' if' → logprob: -8.37618350982666
    4. '
' → logprob: -9.00118350982666
    5. '        
' → logprob: -9.12618350982666
    6. '   ' → logprob: -10.87618350982666
    7. '()
' → logprob: -11.12618350982666
    8. ',' → logprob: -11.50118350982666
    9. '(' → logprob: -11.87618350982666
    10. '  
' → logprob: -12.00118350982666

Token 532: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0598112344741821
    2. ' if' → logprob: -1.0598112344741821
    3. '       ' → logprob: -1.1848112344741821
    4. 'self' → logprob: -7.059811115264893
    5. ' self' → logprob: -8.43481159210205
    6. '
' → logprob: -10.93481159210205
    7. '```' → logprob: -11.05981159210205
    8. '   ' → logprob: -11.18481159210205
    9. '        
' → logprob: -12.05981159210205
    10. '	if' → logprob: -12.30981159210205

Token 533: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11285819113254547
    2. ' self' → logprob: -2.237858295440674
    3. '       ' → logprob: -11.112857818603516
    4. '   ' → logprob: -11.362857818603516
    5. '	self' → logprob: -12.362857818603516
    6. '(self' → logprob: -12.862857818603516
    7. ' ' → logprob: -13.862857818603516
    8. '           ' → logprob: -14.487857818603516
    9. '    ' → logprob: -15.362857818603516
    10. ' ' → logprob: -15.737857818603516

Token 534: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -6.134509021649137e-05
    2. '.' → logprob: -10.12506103515625
    3. 'second' → logprob: -11.00006103515625
    4. '.third' → logprob: -12.87506103515625
    5. ' .' → logprob: -14.37506103515625
    6. '.secondary' → logprob: -15.00006103515625
    7. '	second' → logprob: -15.12506103515625
    8. '.first' → logprob: -15.37506103515625
    9. '.two' → logprob: -15.62506103515625
    10. '.has' → logprob: -16.12506103515625

Token 535: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.00016420685278717428
    2. '.' → logprob: -8.750164031982422
    3. ' .' → logprob: -12.125164031982422
    4. 'has' → logprob: -15.875164031982422
    5. '   ' → logprob: -16.375164031982422
    6. ' has' → logprob: -17.000164031982422
    7. '.have' → logprob: -17.125164031982422
    8. '.Has' → logprob: -17.375164031982422
    9. '	has' → logprob: -17.750164031982422
    10. '       ' → logprob: -17.875164031982422

Token 536: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -1.5048530030981055e-06
    2. 'runner' → logprob: -14.125001907348633
    3. 'Runner' → logprob: -15.375001907348633
    4. '_' → logprob: -15.750001907348633
    5. '_running' → logprob: -16.125001907348633
    6. '_r' → logprob: -17.375001907348633
    7. '(' → logprob: -17.375001907348633
    8. ' runner' → logprob: -17.625001907348633
    9. '_run' → logprob: -17.750001907348633
    10. '   ' → logprob: -17.750001907348633

Token 537: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5764971971511841
    2. '():
' → logprob: -0.8264971971511841
    3. '()' → logprob: -7.7014970779418945
    4. '(' → logprob: -9.326497077941895
    5. '():
' → logprob: -11.576497077941895
    6. '():

' → logprob: -12.701497077941895
    7. ' ():' → logprob: -12.701497077941895
    8. ':' → logprob: -15.326497077941895
    9. '(
' → logprob: -15.326497077941895
    10. '()):
' → logprob: -15.576497077941895

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013677873648703098
    2. 'runs' → logprob: -4.638678073883057
    3. '       ' → logprob: -6.263678073883057
    4. 'r' → logprob: -6.638678073883057
    5. '
' → logprob: -8.763677597045898
    6. '   ' → logprob: -8.888677597045898
    7. '	   ' → logprob: -9.263677597045898
    8. '```' → logprob: -9.513677597045898
    9. ' runs' → logprob: -10.013677597045898
    10. '{
' → logprob: -10.513677597045898

Token 539: ' self' (ID: 1051)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.0009470687946304679
    2. 'if' → logprob: -7.625946998596191
    3. '       ' → logprob: -8.375946998596191
    4. 'self' (adapté à ' self') → logprob: -8.875946998596191
    5. ' runs' → logprob: -10.125946998596191
    6. '           ' → logprob: -11.375946998596191
    7. '   ' → logprob: -11.375946998596191
    8. 'run' → logprob: -11.625946998596191
    9. 'r' → logprob: -12.500946998596191
    10. 'runner' → logprob: -12.750946998596191

Token 540: '.second' (ID: 27534)
  Prédit: '.advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.advance' → logprob: -0.5273353457450867
    2. '.second' → logprob: -0.9023353457450867
    3. '.' → logprob: -6.152335166931152
    4. '.third' → logprob: -7.027335166931152
    5. '.next' → logprob: -7.777335166931152
    6. 'second' → logprob: -7.777335166931152
    7. 'advance' → logprob: -8.527335166931152
    8. '.first' → logprob: -9.152335166931152
    9. ' .' → logprob: -11.777335166931152
    10. '   ' → logprob: -11.902335166931152

Token 541: '.set' (ID: 1230)
  Prédit: '.advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.advance' → logprob: -0.001751699368469417
    2. '.' → logprob: -6.376751899719238
    3. '.set' → logprob: -10.376751899719238
    4. 'advance' → logprob: -11.626751899719238
    5. ' .' → logprob: -11.876751899719238
    6. '   ' → logprob: -14.126751899719238
    7. ' advance' → logprob: -14.376751899719238
    8. '.Adv' → logprob: -14.876751899719238
    9. '.extend' → logprob: -15.751751899719238
    10. '.expand' → logprob: -16.001750946044922

Token 542: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -2.45848218582978e-06
    2. 'runner' → logprob: -13.25000286102295
    3. 'Runner' → logprob: -14.75000286102295
    4. '.runner' → logprob: -16.375001907348633
    5. ' runner' → logprob: -16.875001907348633
    6. '_running' → logprob: -17.000001907348633
    7. '_next' → logprob: -18.250001907348633
    8. '(' → logprob: -18.750001907348633
    9. '_' → logprob: -19.500001907348633
    10. 'unner' → logprob: -19.750001907348633

Token 543: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0621732659637928
    2. '(False' → logprob: -2.812173366546631
    3. 'False' → logprob: -8.562172889709473
    4. ' False' → logprob: -11.312172889709473
    5. '(
' → logprob: -13.312172889709473
    6. ' (' → logprob: -14.687172889709473
    7. '(True' → logprob: -17.56217384338379
    8. '()' → logprob: -18.43717384338379
    9. '=False' → logprob: -19.06217384338379
    10. '(F' → logprob: -19.93717384338379

Token 544: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3868864178657532
    2. ' False' → logprob: -1.1368863582611084
    3. '(False' → logprob: -11.136886596679688
    4. 'True' → logprob: -14.761886596679688
    5. ' True' → logprob: -14.761886596679688
    6. '=False' → logprob: -17.386886596679688
    7. '   ' → logprob: -18.636886596679688
    8. '.False' → logprob: -18.886886596679688
    9. '_false' → logprob: -19.511886596679688
    10. ' false' → logprob: -20.386886596679688

Token 545: ' )
' (ID: 3270)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04766419902443886
    2. ')
' → logprob: -3.297664165496826
    3. ')' → logprob: -4.672664165496826
    4. ' )
' → logprob: -9.672664642333984
    5. '               ' → logprob: -9.922664642333984
    6. '
' → logprob: -10.297664642333984
    7. '            
' → logprob: -10.672664642333984
    8. '		' → logprob: -11.047664642333984
    9. '       ' → logprob: -11.297664642333984
    10. 'self' → logprob: -12.047664642333984

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003781904699280858
    2. '       ' → logprob: -6.003781795501709
    3. 'self' → logprob: -6.753781795501709
    4. ' and' → logprob: -10.253782272338867
    5. ' self' → logprob: -10.503782272338867
    6. '	       ' → logprob: -10.503782272338867
    7. '   ' → logprob: -11.003782272338867
    8. '               ' → logprob: -11.878782272338867
    9. '
' → logprob: -12.003782272338867
    10. '		' → logprob: -12.753782272338867

Token 547: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03324796259403229
    2. 'runs' → logprob: -3.533247947692871
    3. 'if' → logprob: -6.408247947692871
    4. '       ' → logprob: -7.033247947692871
    5. '           ' → logprob: -7.158247947692871
    6. ' self' → logprob: -8.908247947692871
    7. '   ' → logprob: -11.283247947692871
    8. 'r' → logprob: -11.408247947692871
    9. 'run' → logprob: -12.033247947692871
    10. '	self' → logprob: -12.658247947692871

Token 548: '.third' (ID: 182887)
  Prédit: '.third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.third' → logprob: -0.016441943123936653
    2. '.next' → logprob: -4.266441822052002
    3. 'third' → logprob: -6.391441822052002
    4. '.first' → logprob: -8.14144229888916
    5. '.advance' → logprob: -9.01644229888916
    6. '.' → logprob: -9.01644229888916
    7. '.second' → logprob: -9.89144229888916
    8. '.th' → logprob: -12.14144229888916
    9. '   ' → logprob: -12.51644229888916
    10. '
' → logprob: -13.39144229888916

Token 549: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0009137284359894693
    2. '.' → logprob: -7.000913619995117
    3. ' .' → logprob: -13.125913619995117
    4. '.has' → logprob: -16.750913619995117
    5. '   ' → logprob: -17.000913619995117
    6. '().' → logprob: -17.250913619995117
    7. 'set' → logprob: -18.000913619995117
    8. '       ' → logprob: -18.375913619995117
    9. '           ' → logprob: -18.375913619995117
    10. '.setdefault' → logprob: -18.375913619995117

Token 550: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.00027325618430040777
    2. 'runner' → logprob: -8.250273704528809
    3. 'Runner' → logprob: -11.375273704528809
    4. ' runner' → logprob: -15.000273704528809
    5. '.runner' → logprob: -16.500272750854492
    6. '_running' → logprob: -17.875272750854492
    7. 'unner' → logprob: -18.375272750854492
    8. '   ' → logprob: -19.750272750854492
    9. '(' → logprob: -20.125272750854492
    10. 'RUN' → logprob: -20.625272750854492

Token 551: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06214357540011406
    2. '(True' → logprob: -2.812143564224243
    3. 'True' → logprob: -8.687143325805664
    4. ' True' → logprob: -12.312143325805664
    5. '(
' → logprob: -12.937143325805664
    6. ' (' → logprob: -15.312143325805664
    7. '=True' → logprob: -18.187143325805664
    8. '(
' → logprob: -18.312143325805664
    9. '(

' → logprob: -18.437143325805664
    10. '	' → logprob: -19.062143325805664

Token 552: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2014157623052597
    2. ' True' → logprob: -1.701415777206421
    3. '(True' → logprob: -12.951416015625
    4. '=True' → logprob: -16.576416015625
    5. '   ' → logprob: -17.826416015625
    6. '.True' → logprob: -19.326416015625
    7. '           ' → logprob: -19.826416015625
    8. ' ' → logprob: -20.326416015625
    9. 'Tr' → logprob: -20.576416015625
    10. ' Tru' → logprob: -20.826416015625

Token 553: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05740328133106232
    2. '       ' → logprob: -3.307403326034546
    3. '<|end|>' → logprob: -4.557403087615967
    4. '()' → logprob: -5.307403087615967
    5. ')
' → logprob: -6.182403087615967
    6. ' )' → logprob: -6.807403087615967
    7. '<|end|>' → logprob: -8.807403564453125
    8. '
' → logprob: -8.807403564453125
    9. '()
' → logprob: -9.182403564453125
    10. '())' → logprob: -9.932403564453125

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04525768384337425
    2. '<|end|>' → logprob: -3.170257568359375
    3. '
' → logprob: -6.420257568359375
    4. '        
' → logprob: -8.420257568359375
    5. '<|end|>' → logprob: -8.795257568359375
    6. '   ' → logprob: -9.670257568359375
    7. '  
' → logprob: -9.920257568359375
    8. ' 
' → logprob: -10.795257568359375
    9. '           ' → logprob: -10.920257568359375
    10. '    
' → logprob: -11.045257568359375

Token 555: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024313777685165405
    2. '
' → logprob: -3.8993136882781982
    3. '        
' → logprob: -6.524313926696777
    4. '<|end|>' → logprob: -6.899313926696777
    5. ' 
' → logprob: -8.024313926696777
    6. 'if' → logprob: -8.024313926696777
    7. '  
' → logprob: -8.399313926696777
    8. ' if' → logprob: -9.274313926696777
    9. '    
' → logprob: -9.399313926696777
    10. '   ' → logprob: -9.524313926696777

Token 556: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010509932413697243
    2. ' if' → logprob: -5.385509967803955
    3. '       ' → logprob: -5.635509967803955
    4. 'self' → logprob: -6.135509967803955
    5. '#' → logprob: -9.635509490966797
    6. '   ' → logprob: -9.885509490966797
    7. ' self' → logprob: -11.510509490966797
    8. 'If' → logprob: -11.885509490966797
    9. ' ' → logprob: -14.135509490966797
    10. '           ' → logprob: -14.260509490966797

Token 557: ' runners' (ID: 61876)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03811389580368996
    2. 'self' → logprob: -3.288113832473755
    3. '       ' → logprob: -10.288113594055176
    4. ' if' → logprob: -10.788113594055176
    5. ' the' → logprob: -12.288113594055176
    6. ' second' → logprob: -13.038113594055176
    7. ' ' → logprob: -13.038113594055176
    8. '   ' → logprob: -13.163113594055176
    9. 'if' → logprob: -13.163113594055176
    10. '(self' → logprob: -13.413113594055176

Token 558: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.0013382164761424065
    2. 'on' → logprob: -6.626338005065918
    3. '	on' → logprob: -11.751338005065918
    4. ' ' → logprob: -12.876338005065918
    5. '   ' → logprob: -14.126338005065918
    6. '    ' → logprob: -15.126338005065918
    7. '       ' → logprob: -15.251338005065918
    8. ' ' → logprob: -15.501338005065918
    9. '_on' → logprob: -16.126338958740234
    10. '(' → logprob: -16.626338958740234

Token 559: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.232928067445755
    2. 'first' → logprob: -1.7329280376434326
    3. 'self' → logprob: -4.107928276062012
    4. ' self' → logprob: -4.232928276062012
    5. '   ' → logprob: -10.232928276062012
    6. ' ' → logprob: -11.357928276062012
    7. 'second' → logprob: -11.732928276062012
    8. 'First' → logprob: -12.482928276062012
    9. '    ' → logprob: -12.607928276062012
    10. ' second' → logprob: -12.857928276062012

Token 560: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13643167912960052
    2. ' if' → logprob: -3.0114316940307617
    3. '           ' → logprob: -3.8864316940307617
    4. 'if' → logprob: -3.8864316940307617
    5. '():
' → logprob: -4.511431694030762
    6. '(' → logprob: -4.636431694030762
    7. '()' → logprob: -5.136431694030762
    8. ':' → logprob: -6.386431694030762
    9. '   ' → logprob: -6.511431694030762
    10. ':
' → logprob: -6.636431694030762

Token 561: ' second' (ID: 3099)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.0793355256319046
    2. 'False' → logprob: -2.5793354511260986
    3. '(False' → logprob: -7.954335689544678
    4. ' True' → logprob: -9.32933521270752
    5. 'True' → logprob: -12.57933521270752
    6. '_false' → logprob: -14.70433521270752
    7. '=False' → logprob: -14.95433521270752
    8. ' second' → logprob: -15.32933521270752
    9. '(True' → logprob: -15.45433521270752
    10. ' ' → logprob: -15.45433521270752

Token 562: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005922323907725513
    2. '
' → logprob: -8.250592231750488
    3. '        
' → logprob: -8.375592231750488
    4. '  
' → logprob: -10.875592231750488
    5. '   ' → logprob: -11.375592231750488
    6. '(' → logprob: -11.375592231750488
    7. '           ' → logprob: -11.375592231750488
    8. ' 
' → logprob: -11.875592231750488
    9. '<|end|>' → logprob: -11.875592231750488
    10. '    
' → logprob: -12.000592231750488

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002469158498570323
    2. '
' → logprob: -8.62524700164795
    3. '   ' → logprob: -10.37524700164795
    4. '        
' → logprob: -11.12524700164795
    5. '           ' → logprob: -11.75024700164795
    6. '```' → logprob: -11.75024700164795
    7. 'if' → logprob: -13.25024700164795
    8. '    
' → logprob: -13.75024700164795
    9. '(' → logprob: -14.37524700164795
    10. '  
' → logprob: -14.62524700164795

Token 564: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03601976856589317
    2. ' if' → logprob: -4.036019802093506
    3. 'if' (adapté à ' if') → logprob: -4.036019802093506
    4. '   ' → logprob: -10.786019325256348
    5. '           ' → logprob: -12.286019325256348
    6. '```' → logprob: -12.661019325256348
    7. 'self' → logprob: -12.786019325256348
    8. 'If' → logprob: -13.161019325256348
    9. ' ' → logprob: -13.286019325256348
    10. '        ' → logprob: -13.411019325256348

Token 565: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1602535843849182
    2. 'self' → logprob: -1.9102535247802734
    3. '   ' → logprob: -10.910253524780273
    4. '	self' → logprob: -12.285253524780273
    5. '(self' → logprob: -12.910253524780273
    6. ' ' → logprob: -13.160253524780273
    7. '       ' → logprob: -13.910253524780273
    8. '    ' → logprob: -14.910253524780273
    9. ' ' → logprob: -15.285253524780273
    10. ' not' → logprob: -15.660253524780273

Token 566: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.018514178693294525
    2. 'first' → logprob: -4.393514156341553
    3. ' first' → logprob: -5.143514156341553
    4. '.' → logprob: -9.768514633178711
    5. ' .' → logprob: -9.768514633178711
    6. '	first' → logprob: -10.643514633178711
    7. '_first' → logprob: -12.768514633178711
    8. 'First' → logprob: -12.893514633178711
    9. '   ' → logprob: -13.643514633178711
    10. '.second' → logprob: -13.768514633178711

Token 567: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.0007843759376555681
    2. '.' → logprob: -7.500784397125244
    3. ' .' → logprob: -8.375783920288086
    4. '   ' → logprob: -15.125783920288086
    5. '.Has' → logprob: -15.750783920288086
    6. '().' → logprob: -16.125783920288086
    7. 'has' → logprob: -16.375783920288086
    8. ' has' → logprob: -16.625783920288086
    9. '.have' → logprob: -16.625783920288086
    10. '.set' → logprob: -16.875783920288086

Token 568: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -3.173704271830502e-06
    2. 'runner' → logprob: -13.00000286102295
    3. 'Runner' → logprob: -14.62500286102295
    4. '_' → logprob: -15.50000286102295
    5. ' runner' → logprob: -16.750003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '(' → logprob: -17.250003814697266
    8. '_run' → logprob: -17.250003814697266
    9. '_running' → logprob: -17.500003814697266
    10. '.runner' → logprob: -17.500003814697266

Token 569: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12771780788898468
    2. '():
' → logprob: -2.3777177333831787
    3. '(' → logprob: -3.7527177333831787
    4. '()' → logprob: -5.627717971801758
    5. ':' → logprob: -10.752717971801758
    6. '():
' → logprob: -10.752717971801758
    7. ' ():' → logprob: -10.877717971801758
    8. '(
' → logprob: -11.127717971801758
    9. '():

' → logprob: -13.127717971801758
    10. ' (' → logprob: -13.127717971801758

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008054602658376098
    2. '            
' → logprob: -8.125805854797363
    3. '       ' → logprob: -8.750805854797363
    4. '
' → logprob: -9.750805854797363
    5. '```' → logprob: -9.750805854797363
    6. '<|end|>' → logprob: -10.625805854797363
    7. '(False' → logprob: -10.750805854797363
    8. '          ' → logprob: -10.750805854797363
    9. '   ' → logprob: -10.875805854797363
    10. '               ' → logprob: -11.000805854797363

Token 571: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8196661472320557
    2. '           ' → logprob: -0.9446661472320557
    3. 'self' (adapté à ' self') → logprob: -1.8196661472320557
    4. '       ' → logprob: -5.569665908813477
    5. '
' → logprob: -6.194665908813477
    6. '   ' → logprob: -7.069665908813477
    7. '```' → logprob: -7.444665908813477
    8. '               ' → logprob: -7.819665908813477
    9. '(self' → logprob: -8.819665908813477
    10. ' ' → logprob: -8.819665908813477

Token 572: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.018888816237449646
    2. '.set' → logprob: -4.3938889503479
    3. 'first' → logprob: -5.5188889503479
    4. '.' → logprob: -6.3938889503479
    5. ' .' → logprob: -7.7688889503479
    6. ' first' → logprob: -8.643888473510742
    7. 'set' → logprob: -10.393888473510742
    8. '   ' → logprob: -11.518888473510742
    9. '.second' → logprob: -11.768888473510742
    10. '.has' → logprob: -12.143888473510742

Token 573: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00031651611789129674
    2. '.' → logprob: -8.375316619873047
    3. ' .' → logprob: -9.375316619873047
    4. '   ' → logprob: -14.375316619873047
    5. '           ' → logprob: -14.750316619873047
    6. '().' → logprob: -16.000316619873047
    7. ').' → logprob: -17.125316619873047
    8. '       ' → logprob: -17.500316619873047
    9. ' set' → logprob: -18.000316619873047
    10. 'set' → logprob: -18.125316619873047

Token 574: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -3.173704271830502e-06
    2. 'runner' → logprob: -12.87500286102295
    3. ' runner' → logprob: -15.12500286102295
    4. 'Runner' → logprob: -15.37500286102295
    5. '.runner' → logprob: -17.250003814697266
    6. '_running' → logprob: -18.500003814697266
    7. '(' → logprob: -19.000003814697266
    8. ' Runner' → logprob: -19.125003814697266
    9. '_run' → logprob: -20.000003814697266
    10. '(False' → logprob: -20.000003814697266

Token 575: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029825694859027863
    2. '(False' → logprob: -3.5298256874084473
    3. 'False' → logprob: -9.529826164245605
    4. ' False' → logprob: -13.154826164245605
    5. '(
' → logprob: -14.904826164245605
    6. ' (' → logprob: -15.029826164245605
    7. '(True' → logprob: -17.15482521057129
    8. '=False' → logprob: -20.40482521057129
    9. '()' → logprob: -20.52982521057129
    10. '(FALSE' → logprob: -21.15482521057129

Token 576: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.38687369227409363
    2. ' False' → logprob: -1.136873722076416
    3. '(False' → logprob: -12.886873245239258
    4. '=False' → logprob: -15.761873245239258
    5. '_false' → logprob: -18.761873245239258
    6. '.False' → logprob: -19.386873245239258
    7. '_FALSE' → logprob: -20.261873245239258
    8. ' True' → logprob: -21.136873245239258
    9. '   ' → logprob: -21.261873245239258
    10. 'True' → logprob: -21.386873245239258

Token 577: ' )
' (ID: 3270)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1419546753168106
    2. ')
' → logprob: -2.5169546604156494
    3. ')' → logprob: -3.1419546604156494
    4. '       ' → logprob: -5.0169548988342285
    5. ' )
' → logprob: -7.7669548988342285
    6. '               ' → logprob: -8.14195442199707
    7. '
' → logprob: -8.14195442199707
    8. '   ' → logprob: -8.26695442199707
    9. '            
' → logprob: -8.64195442199707
    10. ' 
' → logprob: -9.51695442199707

Token 578: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36416497826576233
    2. '       ' → logprob: -1.23916494846344
    3. 'self' → logprob: -4.61416482925415
    4. '   ' → logprob: -6.73916482925415
    5. '        
' → logprob: -6.86416482925415
    6. '
' → logprob: -7.48916482925415
    7. ' ' → logprob: -7.48916482925415
    8. '               ' → logprob: -7.86416482925415
    9. '            
' → logprob: -7.86416482925415
    10. ' self' → logprob: -7.98916482925415

Token 579: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2015480101108551
    2. ' self' → logprob: -1.7015479803085327
    3. '           ' → logprob: -9.076547622680664
    4. '       ' → logprob: -11.451547622680664
    5. ' ' → logprob: -12.076547622680664
    6. '               ' → logprob: -13.326547622680664
    7. '	self' → logprob: -14.201547622680664
    8. '   ' → logprob: -14.826547622680664
    9. ' ' → logprob: -15.576547622680664
    10. 'Self' → logprob: -15.701547622680664

Token 580: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.06341381371021271
    2. 'second' → logprob: -2.8134138584136963
    3. ' second' → logprob: -6.563413619995117
    4. '	second' → logprob: -10.688413619995117
    5. '.' → logprob: -11.813413619995117
    6. ' .' → logprob: -13.063413619995117
    7. 'Second' → logprob: -14.063413619995117
    8. '_second' → logprob: -14.563413619995117
    9. '.first' → logprob: -16.063413619995117
    10. '
' → logprob: -16.563413619995117

Token 581: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.048631761223077774
    2. '.' → logprob: -3.0486316680908203
    3. ' .' → logprob: -10.04863166809082
    4. '   ' → logprob: -14.67363166809082
    5. '.setdefault' → logprob: -14.79863166809082
    6. ').' → logprob: -15.67363166809082
    7. '       ' → logprob: -16.67363166809082
    8. '           ' → logprob: -17.42363166809082
    9. '`.' → logprob: -17.67363166809082
    10. '.add' → logprob: -17.92363166809082

Token 582: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.003238316858187318
    2. 'Runner' → logprob: -5.753238201141357
    3. '(' → logprob: -10.128238677978516
    4. 'runner' → logprob: -11.253238677978516
    5. '_' → logprob: -13.128238677978516
    6. '(True' → logprob: -13.503238677978516
    7. ' runner' → logprob: -13.503238677978516
    8. 'unner' → logprob: -13.628238677978516
    9. ' Runner' → logprob: -14.378238677978516
    10. '.runner' → logprob: -14.878238677978516

Token 583: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024773201439529657
    2. '(True' → logprob: -6.002477169036865
    3. 'True' → logprob: -13.627477645874023
    4. '(
' → logprob: -15.877477645874023
    5. ' True' → logprob: -15.877477645874023
    6. ' (' → logprob: -16.627477645874023
    7. '(False' → logprob: -21.127477645874023
    8. '=True' → logprob: -21.752477645874023
    9. '()' → logprob: -22.127477645874023
    10. '(

' → logprob: -22.627477645874023

Token 584: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20142066478729248
    2. 'True' → logprob: -1.7014206647872925
    3. '(True' → logprob: -11.826420783996582
    4. '=True' → logprob: -17.576419830322266
    5. ' ' → logprob: -18.826419830322266
    6. ' ' → logprob: -20.201419830322266
    7. '.True' → logprob: -20.201419830322266
    8. '(' → logprob: -21.201419830322266
    9. '[' → logprob: -21.451419830322266
    10. '_true' → logprob: -21.576419830322266

Token 585: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10811718553304672
    2. '()' → logprob: -2.73311710357666
    3. ' )' → logprob: -3.73311710357666
    4. ')
' → logprob: -4.60811710357666
    5. ' )
' → logprob: -6.85811710357666
    6. '       ' → logprob: -6.98311710357666
    7. '())' → logprob: -7.48311710357666
    8. '()
' → logprob: -7.48311710357666
    9. '<|end|>' → logprob: -8.73311710357666
    10. '(' → logprob: -8.98311710357666

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024832211434841156
    2. '
' → logprob: -4.024832248687744
    3. '<|end|>' → logprob: -5.649832248687744
    4. '           ' → logprob: -6.899832248687744
    5. '   ' → logprob: -6.899832248687744
    6. '  
' → logprob: -8.149831771850586
    7. '        
' → logprob: -8.399831771850586
    8. '	' → logprob: -8.899831771850586
    9. ' 
' → logprob: -8.899831771850586
    10. '    
' → logprob: -9.774831771850586

Token 587: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015316285192966461
    2. 'return' → logprob: -4.390316486358643
    3. 'self' → logprob: -6.140316486358643
    4. '   ' → logprob: -8.140316009521484
    5. ' return' → logprob: -8.765316009521484
    6. '<|end|>' → logprob: -9.765316009521484
    7. ' self' → logprob: -10.015316009521484
    8. '           ' → logprob: -10.140316009521484
    9. ' ' → logprob: -10.765316009521484
    10. '	return' → logprob: -11.640316009521484

Token 588: ' Finally' (ID: 23568)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03380706161260605
    2. 'self' → logprob: -3.4088070392608643
    3. '       ' → logprob: -9.658806800842285
    4. ' return' → logprob: -10.158806800842285
    5. 'if' → logprob: -10.533806800842285
    6. 'runs' → logprob: -11.283806800842285
    7. '   ' → logprob: -11.908806800842285
    8. 'returns' → logprob: -12.408806800842285
    9. 'r' → logprob: -13.158806800842285
    10. 'run' → logprob: -13.533806800842285

Token 589: ' set' (ID: 920)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48868808150291443
    2. 'self' → logprob: -0.9886881113052368
    3. ' return' → logprob: -5.113687992095947
    4. 'if' → logprob: -5.738687992095947
    5. ' self' → logprob: -5.863687992095947
    6. '       ' → logprob: -6.113687992095947
    7. ' if' → logprob: -8.738688468933105
    8. '   ' → logprob: -10.988688468933105
    9. '
' → logprob: -11.238688468933105
    10. '#' → logprob: -11.363688468933105

Token 590: ' new' (ID: 620)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005058229435235262
    2. ' self' → logprob: -5.755058288574219
    3. '(self' → logprob: -6.505058288574219
    4. 'first' → logprob: -8.380058288574219
    5. '(' → logprob: -9.005058288574219
    6. '       ' → logprob: -11.130058288574219
    7. '   ' → logprob: -12.380058288574219
    8. '	self' → logprob: -13.005058288574219
    9. 'runner' → logprob: -13.005058288574219
    10. ' first' → logprob: -13.130058288574219

Token 591: ' runner' (ID: 39201)
  Prédit: '_runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.4537241756916046
    2. ' runner' → logprob: -1.3287241458892822
    3. 'runner' → logprob: -2.4537241458892822
    4. '(' → logprob: -5.828724384307861
    5. '   ' → logprob: -6.203724384307861
    6. ' run' → logprob: -6.953724384307861
    7. ' ' → logprob: -7.203724384307861
    8. '_' → logprob: -7.203724384307861
    9. ' on' → logprob: -7.328724384307861
    10. '```' → logprob: -7.328724384307861

Token 592: ' on' (ID: 402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030511466320604086
    2. '(
' → logprob: -6.003051280975342
    3. ' on' → logprob: -7.753051280975342
    4. '       ' → logprob: -10.253050804138184
    5. 'on' → logprob: -10.378050804138184
    6. '   ' → logprob: -10.378050804138184
    7. '(self' → logprob: -10.628050804138184
    8. ' (' → logprob: -11.003050804138184
    9. '```' → logprob: -12.753050804138184
    10. 'self' → logprob: -13.753050804138184

Token 593: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.065064437687397
    2. 'first' → logprob: -3.1900644302368164
    3. ' self' → logprob: -3.9400644302368164
    4. 'self' → logprob: -6.065064430236816
    5. '_first' → logprob: -11.065064430236816
    6. 'First' → logprob: -11.565064430236816
    7. '```' → logprob: -11.565064430236816
    8. ' the' → logprob: -11.940064430236816
    9. '	first' → logprob: -12.565064430236816
    10. '1' → logprob: -13.190064430236816

Token 594: ' base' (ID: 3611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4688297510147095
    2. '(' → logprob: -1.2188297510147095
    3. '()' → logprob: -3.34382963180542
    4. '(
' → logprob: -3.96882963180542
    5. '()
' → logprob: -4.09382963180542
    6. 'self' → logprob: -5.34382963180542
    7. '(self' → logprob: -6.46882963180542
    8. '   ' → logprob: -8.218830108642578
    9. ' (' → logprob: -8.218830108642578
    10. '        
' → logprob: -8.218830108642578

Token 595: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008907989598810673
    2. 'self' → logprob: -4.883907794952393
    3. '
' → logprob: -6.883907794952393
    4. '   ' → logprob: -9.00890827178955
    5. '        
' → logprob: -10.13390827178955
    6. '(self' → logprob: -10.13390827178955
    7. ' self' → logprob: -11.13390827178955
    8. '(' → logprob: -11.38390827178955
    9. '           ' → logprob: -11.50890827178955
    10. '```' → logprob: -11.75890827178955

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009613589383661747
    2. 'self' → logprob: -5.259613513946533
    3. '(self' → logprob: -6.634613513946533
    4. '(' → logprob: -7.134613513946533
    5. ' self' → logprob: -7.384613513946533
    6. '
' → logprob: -7.509613513946533
    7. '   ' → logprob: -8.009613990783691
    8. '        
' → logprob: -8.384613990783691
    9. '(
' → logprob: -8.634613990783691
    10. ' ' → logprob: -9.759613990783691

Token 597: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006355804391205311
    2. '       ' → logprob: -5.7563557624816895
    3. ' self' → logprob: -5.7563557624816895
    4. '   ' → logprob: -12.131356239318848
    5. '	self' → logprob: -12.756356239318848
    6. ' ' → logprob: -13.881356239318848
    7. '```' → logprob: -14.631356239318848
    8. '	' → logprob: -14.881356239318848
    9. 'return' → logprob: -15.131356239318848
    10. ' ' → logprob: -16.13135528564453

Token 598: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.02637333609163761
    2. '.' → logprob: -3.6513733863830566
    3. '.add' → logprob: -10.526372909545898
    4. ' .' → logprob: -10.901372909545898
    5. '.second' → logprob: -12.276372909545898
    6. '.next' → logprob: -12.776372909545898
    7. '.period' → logprob: -13.401372909545898
    8. '.
' → logprob: -13.526372909545898
    9. '.First' → logprob: -13.651372909545898
    10. '   ' → logprob: -13.776372909545898

Token 599: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.023251652717590332
    2. '.' → logprob: -3.773251533508301
    3. ' .' → logprob: -12.2732515335083
    4. '.setdefault' → logprob: -14.5232515335083
    5. '   ' → logprob: -14.7732515335083
    6. '.add' → logprob: -15.5232515335083
    7. '.s' → logprob: -15.8982515335083
    8. '.SET' → logprob: -16.523252487182617
    9. '.Set' → logprob: -16.648252487182617
    10. '`.' → logprob: -17.273252487182617

Token 600: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -1.688212614681106e-05
    2. 'runner' → logprob: -11.000017166137695
    3. ' runner' → logprob: -16.125017166137695
    4. 'Runner' → logprob: -17.750017166137695
    5. '_running' → logprob: -17.875017166137695
    6. '_run' → logprob: -18.375017166137695
    7. '_r' → logprob: -19.500017166137695
    8. '_' → logprob: -19.625017166137695
    9. '.runner' → logprob: -19.750017166137695
    10. 'run' → logprob: -20.000017166137695

Token 601: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31348633766174316
    2. '(True' → logprob: -1.3134863376617432
    3. 'True' → logprob: -8.563486099243164
    4. ' True' → logprob: -10.938486099243164
    5. ' (' → logprob: -11.938486099243164
    6. '(False' → logprob: -12.188486099243164
    7. '(
' → logprob: -12.438486099243164
    8. '()' → logprob: -16.688486099243164
    9. '=True' → logprob: -16.938486099243164
    10. '(s' → logprob: -17.313486099243164

Token 602: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.25193095207214355
    2. 'True' → logprob: -1.5019309520721436
    3. '(True' → logprob: -13.251931190490723
    4. '=True' → logprob: -17.126930236816406
    5. ' ' → logprob: -19.126930236816406
    6. 'False' → logprob: -19.626930236816406
    7. ' Tru' → logprob: -19.876930236816406
    8. '.True' → logprob: -20.126930236816406
    9. ' False' → logprob: -21.126930236816406
    10. 'T' → logprob: -21.876930236816406

Token 603: ' )
' (ID: 3270)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2879282236099243
    2. ')' → logprob: -1.9129282236099243
    3. '
' → logprob: -2.6629281044006348
    4. '       ' → logprob: -3.7879281044006348
    5. ' )
' → logprob: -5.537928104400635
    6. '()
' → logprob: -5.662928104400635
    7. ' 
' → logprob: -7.037928104400635
    8. '()' → logprob: -7.912928104400635
    9. '  
' → logprob: -8.287928581237793
    10. ' )' → logprob: -8.412928581237793

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025095471646636724
    2. '
' → logprob: -6.252509593963623
    3. 'return' → logprob: -8.127509117126465
    4. '   ' → logprob: -8.627509117126465
    5. ' return' → logprob: -10.627509117126465
    6. '	return' → logprob: -10.627509117126465
    7. '        
' → logprob: -11.252509117126465
    8. '	' → logprob: -11.377509117126465
    9. '```' → logprob: -11.502509117126465
    10. '    
' → logprob: -12.127509117126465

Token 605: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12078581750392914
    2. '       ' → logprob: -2.870785713195801
    3. ' return' → logprob: -2.870785713195801
    4. '	return' → logprob: -8.1207857131958
    5. '   ' → logprob: -8.7457857131958
    6. '
' → logprob: -11.7457857131958
    7. '	' → logprob: -13.7457857131958
    8. ' ' → logprob: -14.2457857131958
    9. '```' → logprob: -14.8707857131958
    10. ':return' → logprob: -15.2457857131958

Token 606: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.014163747429847717
    2. ' runs' → logprob: -4.264163970947266
    3. 'run' → logprob: -15.264163970947266
    4. 'r' → logprob: -16.889163970947266
    5. '_runs' → logprob: -18.014163970947266
    6. ' run' → logprob: -18.889163970947266
    7. 'ran' → logprob: -19.014163970947266
    8. 'rings' → logprob: -19.889163970947266
    9. ' ' → logprob: -20.139163970947266
    10. 'Runs' → logprob: -20.264163970947266

Token 607: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06310127675533295
    2. '<|end|>' → logprob: -2.813101291656494
    3. '<|end|>' → logprob: -8.438100814819336
    4. 'class' → logprob: -8.563100814819336
    5. '   ' → logprob: -8.688100814819336
    6. '#' → logprob: -8.813100814819336
    7. ' def' → logprob: -8.813100814819336
    8. '
' → logprob: -9.313100814819336
    9. '```' → logprob: -9.688100814819336
    10. '	def' → logprob: -10.063100814819336

Token 610: ' all' (ID: 722)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.7286294102668762
    2. ' clear' → logprob: -0.8536294102668762
    3. 'reset' → logprob: -3.6036293506622314
    4. 'remove' → logprob: -3.8536293506622314
    5. ' remove' → logprob: -3.8536293506622314
    6. ' reset' → logprob: -4.2286295890808105
    7. ' get' → logprob: -6.4786295890808105
    8. 'get' → logprob: -7.1036295890808105
    9. 'advance' → logprob: -7.1036295890808105
    10. 'has' → logprob: -7.2286295890808105

Token 611: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.7985843420028687
    2. '_' → logprob: -1.0485843420028687
    3. '_b' → logprob: -2.673584461212158
    4. '_runner' → logprob: -2.673584461212158
    5. '_empty' → logprob: -3.673584461212158
    6. '_on' → logprob: -5.173584461212158
    7. '_clear' → logprob: -5.548584461212158
    8. '_free' → logprob: -5.673584461212158
    9. '_running' → logprob: -5.673584461212158
    10. '_base' → logprob: -5.798584461212158

Token 612: 'unners' (ID: 46383)
  Prédit: 'unners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unners' → logprob: -0.012592178769409657
    2. 'unner' → logprob: -4.387592315673828
    3. 'unning' → logprob: -10.137592315673828
    4. 'un' → logprob: -10.637592315673828
    5. 'unn' → logprob: -11.262592315673828
    6. 'uns' → logprob: -13.387592315673828
    7. '_un' → logprob: -14.387592315673828
    8. '_' → logprob: -14.637592315673828
    9. 'uner' → logprob: -14.762592315673828
    10. 'unne' → logprob: -14.887592315673828

Token 613: '_score' (ID: 22555)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.3894592225551605
    2. '(' → logprob: -1.389459252357483
    3. '(self' → logprob: -3.1394591331481934
    4. '_present' → logprob: -3.8894591331481934
    5. '_' → logprob: -5.764459133148193
    6. '_are' → logprob: -5.764459133148193
    7. '_have' → logprob: -6.514459133148193
    8. '_here' → logprob: -7.139459133148193
    9. '_running' → logprob: -7.639459133148193
    10. '_at' → logprob: -9.264459609985352

Token 614: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005599428550340235
    2. '(self' → logprob: -7.5005598068237305
    3. 'self' → logprob: -12.25055980682373
    4. ' (' → logprob: -13.62555980682373
    5. 's' → logprob: -14.75055980682373
    6. '(
' → logprob: -15.37555980682373
    7. 'def' → logprob: -16.500560760498047
    8. '()' → logprob: -16.500560760498047
    9. '(s' → logprob: -16.875560760498047
    10. '():
' → logprob: -16.875560760498047

Token 615: '_clear' (ID: 51408)
  Prédit: '_clear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clear' → logprob: -0.007469262462109327
    2. '_reset' → logprob: -5.382469177246094
    3. 'clear' → logprob: -6.507469177246094
    4. '_remove' → logprob: -7.882469177246094
    5. '_empty' → logprob: -7.882469177246094
    6. '_' → logprob: -8.632469177246094
    7. '(self' → logprob: -8.882469177246094
    8. '_score' → logprob: -9.507469177246094
    9. 'Clear' → logprob: -10.507469177246094
    10. ' clear' → logprob: -10.507469177246094

Token 616: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.729906196298543e-06
    2. '(self' → logprob: -11.750009536743164
    3. ' (' → logprob: -14.250009536743164
    4. 'self' → logprob: -14.250009536743164
    5. '_' → logprob: -15.500009536743164
    6. 's' → logprob: -16.250009536743164
    7. '```' → logprob: -16.500009536743164
    8. '   ' → logprob: -16.875009536743164
    9. '(
' → logprob: -17.000009536743164
    10. '_(' → logprob: -17.750009536743164

Token 617: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759614706039429
    2. ' self' → logprob: -0.8259614706039429
    3. '	self' → logprob: -11.450961112976074
    4. ' ' → logprob: -12.075961112976074
    5. ')' → logprob: -12.950961112976074
    6. '   ' → logprob: -13.825961112976074
    7. '(self' → logprob: -14.200961112976074
    8. 's' → logprob: -14.450961112976074
    9. '
' → logprob: -15.200961112976074
    10. '_self' → logprob: -15.450961112976074

Token 618: ' ):
' (ID: 48169)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24361465871334076
    2. 'self' → logprob: -1.743614673614502
    3. '):
' → logprob: -3.993614673614502
    4. '):' → logprob: -4.743614673614502
    5. ' ):
' → logprob: -4.868614673614502
    6. '(self' → logprob: -6.368614673614502
    7. ' ):' → logprob: -6.493614673614502
    8. ',' → logprob: -6.743614673614502
    9. ' self' → logprob: -7.743614673614502
    10. ' (' → logprob: -7.868614673614502

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05750390887260437
    2. '(' → logprob: -3.0575039386749268
    3. 'self' → logprob: -5.932503700256348
    4. '()' → logprob: -6.932503700256348
    5. '():
' → logprob: -7.182503700256348
    6. '(
' → logprob: -7.307503700256348
    7. '():' → logprob: -7.307503700256348
    8. '   ' → logprob: -7.432503700256348
    9. '(self' → logprob: -7.682503700256348
    10. '	' → logprob: -7.932503700256348

Token 620: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5156124234199524
    2. 'runs' → logprob: -1.1406123638153076
    3. ' runs' → logprob: -3.5156123638153076
    4. '   ' → logprob: -3.8906123638153076
    5. ' self' → logprob: -4.140612602233887
    6. 'self' → logprob: -4.390612602233887
    7. 'r' → logprob: -5.890612602233887
    8. '"""
' (adapté à ' """
') → logprob: -8.390612602233887
    9. 'def' → logprob: -8.390612602233887
    10. '_runs' → logprob: -8.640612602233887

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10634905844926834
    2. '   ' → logprob: -3.356348991394043
    3. 'runs' → logprob: -3.606348991394043
    4. '    ' → logprob: -4.481348991394043
    5. ' runs' → logprob: -4.606348991394043
    6. ' """
' → logprob: -4.731348991394043
    7. '"""
' → logprob: -5.231348991394043
    8. ' runners' → logprob: -6.606348991394043
    9. 'r' → logprob: -7.981348991394043
    10. ' """' → logprob: -8.231348991394043

Token 622: ' For' (ID: 2214)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.042622409760951996
    2. '       ' → logprob: -3.9176223278045654
    3. ' runs' → logprob: -4.4176225662231445
    4. '"""
' → logprob: -5.2926225662231445
    5. '   ' → logprob: -5.9176225662231445
    6. 'r' → logprob: -7.9176225662231445
    7. '"""' → logprob: -8.292622566223145
    8. '
' → logprob: -8.417622566223145
    9. ' """
' → logprob: -8.542622566223145
    10. ' runners' → logprob: -8.667622566223145

Token 623: ' HOM' (ID: 137566)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.4339592456817627
    2. ' runner' → logprob: -1.6839592456817627
    3. ' self' → logprob: -2.4339592456817627
    4. 'base' → logprob: -3.5589592456817627
    5. 'self' → logprob: -4.058959007263184
    6. ' ' → logprob: -5.058959007263184
    7. 'runner' → logprob: -5.308959007263184
    8. '   ' → logprob: -5.308959007263184
    9. ' b' → logprob: -6.183959007263184
    10. '
' → logprob: -6.183959007263184

Token 624: 'ER' (ID: 866)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05723860114812851
    2. 'E' → logprob: -3.0572385787963867
    3. '   ' → logprob: -5.057238578796387
    4. '
' → logprob: -6.557238578796387
    5. 'er' → logprob: -8.682238578796387
    6. 'ER' → logprob: -8.682238578796387
    7. '       ' → logprob: -9.557238578796387
    8. ' e' → logprob: -9.807238578796387
    9. 'е' → logprob: -10.307238578796387
    10. 'ecycle' → logprob: -10.307238578796387

Token 625: 'UN' (ID: 2926)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27381137013435364
    2. '   ' → logprob: -1.7738113403320312
    3. '(' → logprob: -3.8988113403320312
    4. 'un' → logprob: -4.023811340332031
    5. '(self' → logprob: -4.148811340332031
    6. '        
' → logprob: -5.273811340332031
    7. '():
' → logprob: -5.773811340332031
    8. '()' → logprob: -6.023811340332031
    9. '()
' → logprob: -6.398811340332031
    10. ' ' → logprob: -6.898811340332031

Token 626: ' event' (ID: 2104)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044607166200876236
    2. '(self' → logprob: -3.919607162475586
    3. '       ' → logprob: -4.294607162475586
    4. '   ' → logprob: -5.044607162475586
    5. '(
' → logprob: -6.544607162475586
    6. 'self' → logprob: -6.669607162475586
    7. '
' → logprob: -8.169607162475586
    8. ' self' → logprob: -8.419607162475586
    9. 'def' → logprob: -8.669607162475586
    10. ' (' → logprob: -9.169607162475586

Token 627: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40804025530815125
    2. '       ' → logprob: -1.1580402851104736
    3. '(self' → logprob: -4.1580400466918945
    4. 'self' → logprob: -6.5330400466918945
    5. '(
' → logprob: -6.6580400466918945
    6. '
' → logprob: -6.7830400466918945
    7. '   ' → logprob: -6.9080400466918945
    8. ',' → logprob: -9.408040046691895
    9. '()
' → logprob: -9.408040046691895
    10. '        
' → logprob: -9.533040046691895

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035007651895284653
    2. 'runs' → logprob: -6.253500938415527
    3. '
' → logprob: -7.253500938415527
    4. ' runs' → logprob: -7.878500938415527
    5. '   ' → logprob: -8.003500938415527
    6. '"""
' → logprob: -10.253500938415527
    7. 'r' → logprob: -10.378500938415527
    8. 'self' → logprob: -10.753500938415527
    9. '```' → logprob: -11.628500938415527
    10. '        
' → logprob: -11.753500938415527

Token 629: ' Count' (ID: 6789)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24172836542129517
    2. 'runs' → logprob: -1.6167283058166504
    3. ' runs' → logprob: -4.49172830581665
    4. '"""
' → logprob: -5.86672830581665
    5. '   ' → logprob: -7.99172830581665
    6. '
' → logprob: -8.116728782653809
    7. '#' → logprob: -8.116728782653809
    8. ' runners' → logprob: -8.366728782653809
    9. 'r' → logprob: -8.616728782653809
    10. '"""' → logprob: -8.991728782653809

Token 630: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.669856607913971
    2. 'runs' → logprob: -1.6698565483093262
    3. '       ' → logprob: -2.419856548309326
    4. ' runs' → logprob: -3.044856548309326
    5. '_runs' → logprob: -3.294856548309326
    6. ' and' → logprob: -3.669856548309326
    7. ' the' → logprob: -3.669856548309326
    8. ' total' → logprob: -4.044856548309326
    9. ' all' → logprob: -4.294856548309326
    10. 'total' → logprob: -4.919856548309326

Token 631: ' runners' (ID: 61876)
  Prédit: ' runners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runners' → logprob: -0.8199366331100464
    2. '   ' → logprob: -1.6949366331100464
    3. 'runs' → logprob: -2.069936752319336
    4. '_runs' → logprob: -3.069936752319336
    5. '       ' → logprob: -3.194936752319336
    6. ' self' → logprob: -3.319936752319336
    7. ' runs' → logprob: -3.444936752319336
    8. ' bases' → logprob: -3.444936752319336
    9. '_r' → logprob: -4.444936752319336
    10. 'self' → logprob: -4.444936752319336

Token 632: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19137224555015564
    2. ' on' → logprob: -2.9413721561431885
    3. ' and' → logprob: -3.9413721561431885
    4. ',' → logprob: -4.066372394561768
    5. 'on' → logprob: -4.066372394561768
    6. 'and' → logprob: -4.191372394561768
    7. '+' → logprob: -4.441372394561768
    8. '   ' → logprob: -4.566372394561768
    9. ' =' → logprob: -4.566372394561768
    10. '_on' → logprob: -6.066372394561768

Token 633: ' bases' (ID: 31148)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25882774591445923
    2. 'self' → logprob: -1.5088276863098145
    3. ' first' → logprob: -5.1338276863098145
    4. 'first' → logprob: -7.5088276863098145
    5. '   ' → logprob: -9.133828163146973
    6. '	self' → logprob: -9.383828163146973
    7. '(self' → logprob: -9.883828163146973
    8. ' all' → logprob: -10.383828163146973
    9. '       ' → logprob: -10.758828163146973
    10. '1' → logprob: -10.883828163146973

Token 634: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3230767548084259
    2. 'and' → logprob: -2.0730767250061035
    3. ' and' → logprob: -2.3230767250061035
    4. ',' → logprob: -3.0730767250061035
    5. '
' → logprob: -6.3230767250061035
    6. '   ' → logprob: -6.5730767250061035
    7. '(' → logprob: -7.4480767250061035
    8. ',
' → logprob: -7.4480767250061035
    9. ' plus' → logprob: -7.6980767250061035
    10. '+' → logprob: -8.448077201843262

Token 635: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14676068723201752
    2. ' ' → logprob: -2.7717607021331787
    3. ' self' → logprob: -3.5217607021331787
    4. ' (' → logprob: -4.3967604637146
    5. 'self' → logprob: -4.3967604637146
    6. ' the' → logprob: -4.5217604637146
    7. '(' → logprob: -5.7717604637146
    8. '3' → logprob: -6.7717604637146
    9. ' any' → logprob: -6.8967604637146
    10. ' one' → logprob: -7.0217604637146

Token 636: ' batter' (ID: 10814)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3918110132217407
    2. ' ' → logprob: -1.3918110132217407
    3. ' batter' → logprob: -3.516810894012451
    4. 'self' → logprob: -4.641810894012451
    5. ' current' → logprob: -5.141810894012451
    6. '3' → logprob: -5.141810894012451
    7. ' home' → logprob: -5.266810894012451
    8. ' runner' → logprob: -5.766810894012451
    9. 'home' → logprob: -6.141810894012451
    10. ' self' → logprob: -6.141810894012451

Token 637: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07271569222211838
    2. ',' → logprob: -3.8227157592773438
    3. '   ' → logprob: -4.322715759277344
    4. ' and' → logprob: -4.322715759277344
    5. '
' → logprob: -5.322715759277344
    6. '()
' → logprob: -5.322715759277344
    7. '(' → logprob: -5.697715759277344
    8. '        
' → logprob: -5.822715759277344
    9. '()' → logprob: -7.197715759277344
    10. '    ' → logprob: -7.322715759277344

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02532932348549366
    2. '
' → logprob: -3.900329351425171
    3. ' and' → logprob: -6.275329113006592
    4. '        
' → logprob: -6.275329113006592
    5. '   ' → logprob: -7.650329113006592
    6. '    
' → logprob: -8.27532958984375
    7. 'and' → logprob: -8.90032958984375
    8. ' 
' → logprob: -10.77532958984375
    9. '	' → logprob: -11.02532958984375
    10. '  
' → logprob: -11.27532958984375

Token 639: ' clear' (ID: 5364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028673194348812103
    2. '
' → logprob: -3.9036731719970703
    3. ' runs' → logprob: -5.52867317199707
    4. ' and' → logprob: -6.52867317199707
    5. 'runs' → logprob: -6.65367317199707
    6. '   ' → logprob: -7.52867317199707
    7. 'and' → logprob: -7.65367317199707
    8. '        
' → logprob: -9.65367317199707
    9. ' then' → logprob: -9.77867317199707
    10. '"""
' → logprob: -10.52867317199707

Token 640: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.03028182126581669
    2. 'all' → logprob: -3.9052817821502686
    3. '       ' → logprob: -5.405282020568848
    4. ' the' → logprob: -5.905282020568848
    5. ' bases' → logprob: -6.280282020568848
    6. 'bases' → logprob: -8.530282020568848
    7. '_all' → logprob: -9.030282020568848
    8. 'the' → logprob: -9.530282020568848
    9. ' runners' → logprob: -9.905282020568848
    10. 'self' → logprob: -10.530282020568848

Token 641: ' bases' (ID: 31148)
  Prédit: ' bases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.27473509311676025
    2. 'bases' → logprob: -1.5247350931167603
    3. ' runners' → logprob: -4.149734973907471
    4. '       ' → logprob: -6.024734973907471
    5. 'r' → logprob: -6.274734973907471
    6. ' the' → logprob: -6.524734973907471
    7. ' three' → logprob: -8.899735450744629
    8. '(' → logprob: -9.024735450744629
    9. '           ' → logprob: -9.524735450744629
    10. '   ' → logprob: -9.774735450744629

Token 642: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009873192757368088
    2. ',' → logprob: -7.125987529754639
    3. '
' → logprob: -9.50098705291748
    4. ',
' → logprob: -10.12598705291748
    5. ' and' → logprob: -10.25098705291748
    6. 'and' → logprob: -11.75098705291748
    7. '```' → logprob: -12.25098705291748
    8. '        
' → logprob: -12.75098705291748
    9. '.
' → logprob: -12.87598705291748
    10. '   ' → logprob: -12.87598705291748

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015187841840088367
    2. ' and' → logprob: -4.515187740325928
    3. 'and' → logprob: -5.515187740325928
    4. '
' → logprob: -10.015188217163086
    5. '   ' → logprob: -10.640188217163086
    6. 'return' → logprob: -11.140188217163086
    7. ' return' → logprob: -11.390188217163086
    8. '           ' → logprob: -12.140188217163086
    9. '        
' → logprob: -12.890188217163086
    10. ',' → logprob: -13.890188217163086

Token 644: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025216922163963318
    2. 'return' (adapté à ' return') → logprob: -4.275217056274414
    3. ' and' → logprob: -5.150217056274414
    4. 'and' → logprob: -5.650217056274414
    5. ' return' → logprob: -6.525217056274414
    6. '
' → logprob: -9.025217056274414
    7. '   ' → logprob: -9.400217056274414
    8. '           ' → logprob: -12.525217056274414
    9. '```' → logprob: -14.150217056274414
    10. '"""
' → logprob: -14.400217056274414

Token 645: ' total' (ID: 3609)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.01446533203125
    2. 'len' → logprob: -1.26446533203125
    3. ' self' → logprob: -2.13946533203125
    4. '1' → logprob: -2.13946533203125
    5. ' ' → logprob: -3.01446533203125
    6. 'self' → logprob: -3.38946533203125
    7. ' the' → logprob: -4.01446533203125
    8. '4' → logprob: -5.63946533203125
    9. '3' → logprob: -5.63946533203125
    10. ' all' → logprob: -5.76446533203125

Token 646: ' runs' (ID: 13719)
  Prédit: '_runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runs' → logprob: -0.7822316288948059
    2. 'runs' → logprob: -1.0322315692901611
    3. ' runners' → logprob: -2.157231569290161
    4. ' runs' → logprob: -3.657231569290161
    5. '       ' → logprob: -4.03223180770874
    6. ' self' → logprob: -4.78223180770874
    7. '   ' → logprob: -5.03223180770874
    8. 'count' → logprob: -6.28223180770874
    9. '
' → logprob: -6.40723180770874
    10. 'self' → logprob: -6.53223180770874

Token 647: ' scored' (ID: 27207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010782631114125252
    2. '
' → logprob: -5.635782718658447
    3. ' =' → logprob: -6.510782718658447
    4. ' (' → logprob: -6.635782718658447
    5. '(' → logprob: -6.885782718658447
    6. '=' → logprob: -7.260782718658447
    7. '   ' → logprob: -7.510782718658447
    8. '        
' → logprob: -7.885782718658447
    9. '        ' → logprob: -8.135782241821289
    10. ' scored' → logprob: -8.635782241821289

Token 648: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036022067070007324
    2. '(' → logprob: -3.536022186279297
    3. '(self' → logprob: -5.536022186279297
    4. '
' → logprob: -6.661022186279297
    5. '   ' → logprob: -7.661022186279297
    6. 'self' → logprob: -8.286022186279297
    7. ' (' → logprob: -9.286022186279297
    8. ',' → logprob: -10.286022186279297
    9. '(
' → logprob: -10.286022186279297
    10. '```' → logprob: -10.286022186279297

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007364541292190552
    2. '
' → logprob: -5.882364749908447
    3. '   ' → logprob: -5.882364749908447
    4. '        
' → logprob: -7.507364749908447
    5. '"""
' → logprob: -7.632364749908447
    6. '```' → logprob: -8.007364273071289
    7. '`
' → logprob: -9.632364273071289
    8. '    
' → logprob: -9.632364273071289
    9. '	' → logprob: -10.507364273071289
    10. '\
' → logprob: -10.507364273071289

Token 650: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013715259730815887
    2. 'runs' → logprob: -4.3887152671813965
    3. 'total' → logprob: -7.8887152671813965
    4. '   ' → logprob: -7.8887152671813965
    5. 'count' → logprob: -8.763714790344238
    6. 'r' → logprob: -8.888714790344238
    7. '
' → logprob: -10.388714790344238
    8. ' runs' → logprob: -10.638714790344238
    9. '```' → logprob: -10.638714790344238
    10. '"""
' (adapté à ' """
') → logprob: -10.888714790344238

Token 651: '       ' (ID: 309)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.17242014408111572
    2. '       ' → logprob: -1.9224201440811157
    3. '   ' → logprob: -4.547420024871826
    4. 'total' → logprob: -7.547420024871826
    5. 'count' → logprob: -7.922420024871826
    6. ' runs' → logprob: -8.172420501708984
    7. '```' → logprob: -8.797420501708984
    8. '_runs' → logprob: -9.297420501708984
    9. 'def' → logprob: -10.297420501708984
    10. 'run' → logprob: -10.797420501708984

Token 652: ' runners' (ID: 61876)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.01961989887058735
    2. '       ' → logprob: -4.019619941711426
    3. 'total' → logprob: -6.769619941711426
    4. 'count' → logprob: -8.644619941711426
    5. '   ' → logprob: -10.019619941711426
    6. 'score' → logprob: -10.269619941711426
    7. 'r' → logprob: -11.144619941711426
    8. ' runs' → logprob: -11.269619941711426
    9. 'run' → logprob: -11.394619941711426
    10. '```' → logprob: -11.394619941711426

Token 653: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1712767332792282
    2. '=' → logprob: -1.9212766885757446
    3. '_on' → logprob: -4.546276569366455
    4. ' ' → logprob: -8.796277046203613
    5. '_count' → logprob: -8.921277046203613
    6. '_' → logprob: -9.421277046203613
    7. 'on' → logprob: -11.921277046203613
    8. ' =
' → logprob: -12.421277046203613
    9. ' on' → logprob: -13.546277046203613
    10. '   ' → logprob: -14.046277046203613

Token 654: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. '   ' → logprob: -15.443147659301758
    4. ' ' → logprob: -15.693147659301758
    5. '       ' → logprob: -16.193147659301758
    6. ' =
' → logprob: -16.443147659301758
    7. '=
' → logprob: -16.443147659301758
    8. '    ' → logprob: -17.818147659301758
    9. '=

' → logprob: -18.193147659301758
    10. ' +=' → logprob: -18.318147659301758

Token 655: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6234084367752075
    2. 'int' → logprob: -1.3734084367752075
    3. '(' → logprob: -2.498408317565918
    4. ' int' → logprob: -2.623408317565918
    5. ' (' → logprob: -3.623408317565918
    6. '(int' → logprob: -4.123408317565918
    7. '(self' → logprob: -4.998408317565918
    8. ' ' → logprob: -5.623408317565918
    9. 'self' → logprob: -6.498408317565918
    10. ' self' → logprob: -7.873408317565918

Token 656: '(' (ID: 7)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.27927786111831665
    2. '([
' → logprob: -1.6542778015136719
    3. '(' → logprob: -3.029277801513672
    4. '((' → logprob: -5.904277801513672
    5. '(base' → logprob: -6.779277801513672
    6. '(
' → logprob: -8.904277801513672
    7. '(b' → logprob: -10.154277801513672
    8. '([(' → logprob: -10.529277801513672
    9. '(([' → logprob: -11.779277801513672
    10. '[
' → logprob: -12.654277801513672

Token 657: ' [' (ID: 723)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.4879494309425354
    2. '[' → logprob: -0.9879494309425354
    3. '([' → logprob: -5.862949371337891
    4. '(' → logprob: -5.862949371337891
    5. '([
' → logprob: -5.987949371337891
    6. 'base' → logprob: -6.112949371337891
    7. '[b' → logprob: -6.612949371337891
    8. '1' → logprob: -6.987949371337891
    9. '[int' → logprob: -7.612949371337891
    10. '(base' → logprob: -8.61294937133789

Token 658: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8910862803459167
    2. 'self' → logprob: -1.2660863399505615
    3. 'base' → logprob: -1.5160863399505615
    4. 'int' → logprob: -2.8910863399505615
    5. '[' → logprob: -4.141086101531982
    6. ' self' → logprob: -5.266086101531982
    7. 'b' → logprob: -5.641086101531982
    8. ' ' → logprob: -6.141086101531982
    9. '[
' → logprob: -6.641086101531982
    10. ' base' → logprob: -6.766086101531982

Token 659: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1463000774383545
    2. '1' → logprob: -1.2713000774383545
    3. 'base' → logprob: -1.2713000774383545
    4. 'int' → logprob: -2.3963000774383545
    5. '[' → logprob: -4.271300315856934
    6. 'b' → logprob: -4.521300315856934
    7. ' self' → logprob: -6.396300315856934
    8. ' ' → logprob: -7.271300315856934
    9. '[
' → logprob: -7.271300315856934
    10. ' base' → logprob: -7.896300315856934

Token 660: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15011408925056458
    2. ' if' → logprob: -2.400114059448242
    3. 'for' → logprob: -3.275114059448242
    4. 'if' → logprob: -4.525114059448242
    5. '           ' → logprob: -11.150114059448242
    6. ',' → logprob: -12.150114059448242
    7. '       ' → logprob: -12.775114059448242
    8. ' ' → logprob: -12.900114059448242
    9. '        ' → logprob: -13.025114059448242
    10. '1' → logprob: -13.525114059448242

Token 661: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0590801015496254
    2. 'b' → logprob: -3.059080123901367
    3. ' base' → logprob: -5.184080123901367
    4. 'self' → logprob: -5.559080123901367
    5. ' b' → logprob: -7.684080123901367
    6. 'x' → logprob: -8.184080123901367
    7. ' self' → logprob: -9.309080123901367
    8. '   ' → logprob: -10.559080123901367
    9. 'runner' → logprob: -10.684080123901367
    10. 'bas' → logprob: -11.059080123901367

Token 662: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.026376472786068916
    2. '.' → logprob: -3.651376485824585
    3. ' .' → logprob: -9.901376724243164
    4. '.for' → logprob: -12.276376724243164
    5. 'has' → logprob: -12.526376724243164
    6. '.have' → logprob: -12.776376724243164
    7. '.runner' → logprob: -12.901376724243164
    8. '.base' → logprob: -13.026376724243164
    9. '.is' → logprob: -13.026376724243164
    10. '.Has' → logprob: -13.401376724243164

Token 663: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -9.13388703338569e-06
    2. 'runner' → logprob: -11.875009536743164
    3. '_' → logprob: -13.625009536743164
    4. '_run' → logprob: -15.000009536743164
    5. '_running' → logprob: -15.875009536743164
    6. '_r' → logprob: -16.125009536743164
    7. ' runner' → logprob: -16.250009536743164
    8. 'Runner' → logprob: -17.125009536743164
    9. '
' → logprob: -17.375009536743164
    10. '.runner' → logprob: -17.625009536743164

Token 664: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017463387921452522
    2. '(' → logprob: -6.37674617767334
    3. '()
' → logprob: -10.12674617767334
    4. '()
' → logprob: -13.25174617767334
    5. '()

' → logprob: -14.25174617767334
    6. ' ()' → logprob: -14.75174617767334
    7. '()`' → logprob: -15.25174617767334
    8. '()==' → logprob: -15.62674617767334
    9. '())' → logprob: -15.87674617767334
    10. 'for' → logprob: -16.126747131347656

Token 665: ' else' (ID: 1203)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002116462419508025
    2. 'else' → logprob: -9.250211715698242
    3. '(' → logprob: -9.750211715698242
    4. ' else' → logprob: -10.000211715698242
    5. '()
' → logprob: -12.000211715698242
    6. ' ()' → logprob: -12.375211715698242
    7. 'for' → logprob: -14.125211715698242
    8. ' ' → logprob: -16.000211715698242
    9. ')' → logprob: -16.375211715698242
    10. '       ' → logprob: -16.375211715698242

Token 666: ' ' (ID: 220)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3006691634654999
    2. 'True' → logprob: -2.0506691932678223
    3. '1' → logprob: -2.3006691932678223
    4. ' ' → logprob: -3.5506691932678223
    5. '0' → logprob: -6.675669193267822
    6. 'False' → logprob: -7.800669193267822
    7. ' False' → logprob: -7.925669193267822
    8. '(True' → logprob: -10.425668716430664
    9. ')' → logprob: -10.550668716430664
    10. '    ' → logprob: -11.800668716430664

Token 667: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004385371692478657
    2. ' ' → logprob: -5.504385471343994
    3. 'False' → logprob: -8.254384994506836
    4. ' False' → logprob: -10.754384994506836
    5. '1' → logprob: -11.129384994506836
    6. 'True' → logprob: -12.004384994506836
    7. '   ' → logprob: -13.129384994506836
    8. ' True' → logprob: -13.879384994506836
    9. '  ' → logprob: -14.379384994506836
    10. '```' → logprob: -15.504384994506836

Token 668: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06229054182767868
    2. 'for' → logprob: -2.8122904300689697
    3. '           ' → logprob: -8.81229019165039
    4. '	for' → logprob: -9.93729019165039
    5. '               ' → logprob: -10.81229019165039
    6. '       ' → logprob: -11.06229019165039
    7. '            ' → logprob: -11.06229019165039
    8. ' ' → logprob: -11.31229019165039
    9. '   ' → logprob: -11.56229019165039
    10. '    ' → logprob: -11.68729019165039

Token 669: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.551368236541748
    2. '[' → logprob: -1.426368236541748
    3. ' [' → logprob: -2.426368236541748
    4. ' base' → logprob: -2.551368236541748
    5. '[
' → logprob: -4.801368236541748
    6. ' (' → logprob: -5.926368236541748
    7. '(' → logprob: -6.801368236541748
    8. 'b' → logprob: -6.926368236541748
    9. '(base' → logprob: -6.926368236541748
    10. ' [
' → logprob: -7.051368236541748

Token 670: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0898985043168068
    2. 'in' → logprob: -2.4648985862731934
    3. 'base' → logprob: -7.214898586273193
    4. ' base' → logprob: -9.714898109436035
    5. ' ' → logprob: -10.214898109436035
    6. '	in' → logprob: -10.589898109436035
    7. '[' → logprob: -11.089898109436035
    8. '(' → logprob: -11.089898109436035
    9. '
' → logprob: -11.214898109436035
    10. ' (' → logprob: -11.589898109436035

Token 671: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02444617450237274
    2. '[self' → logprob: -4.7744460105896
    3. ' [' → logprob: -4.8994460105896
    4. '[
' → logprob: -5.3994460105896
    5. '(' → logprob: -5.6494460105896
    6. ' (' → logprob: -9.149446487426758
    7. '(self' → logprob: -9.399446487426758
    8. '
' → logprob: -11.274446487426758
    9. 'self' → logprob: -12.399446487426758
    10. '   ' → logprob: -12.774446487426758

Token 672: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025338062550872564
    2. ' self' → logprob: -6.002533912658691
    3. '       ' → logprob: -10.502533912658691
    4. '   ' → logprob: -10.752533912658691
    5. '	self' → logprob: -12.627533912658691
    6. '           ' → logprob: -12.752533912658691
    7. '(self' → logprob: -13.377533912658691
    8. ' ' → logprob: -14.627533912658691
    9. '[self' → logprob: -15.127533912658691
    10. '  ' → logprob: -15.627533912658691

Token 673: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -0.004817191977053881
    2. 'first' → logprob: -5.379817008972168
    3. '.' → logprob: -8.754817008972168
    4. '   ' → logprob: -11.629817008972168
    5. '.second' → logprob: -11.754817008972168
    6. '	first' → logprob: -12.379817008972168
    7. '.third' → logprob: -12.504817008972168
    8. ' .' → logprob: -13.004817008972168
    9. 'self' → logprob: -13.254817008972168
    10. '
' → logprob: -13.504817008972168

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007771117961965501
    2. ',
' → logprob: -7.500777244567871
    3. ',self' → logprob: -8.625777244567871
    4. ' ,' → logprob: -10.125777244567871
    5. '   ' → logprob: -13.625777244567871
    6. 'self' → logprob: -13.875777244567871
    7. ',\
' → logprob: -14.375777244567871
    8. '       ' → logprob: -14.750777244567871
    9. ',

' → logprob: -15.000777244567871
    10. '
' → logprob: -15.125777244567871

Token 675: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2844589948654175
    2. ' self' → logprob: -1.4094589948654175
    3. '       ' → logprob: -6.159459114074707
    4. '   ' → logprob: -7.534459114074707
    5. '	self' → logprob: -8.409459114074707
    6. '           ' → logprob: -8.784459114074707
    7. '    ' → logprob: -8.909459114074707
    8. '        ' → logprob: -9.784459114074707
    9. ' ' → logprob: -10.534459114074707
    10. '               ' → logprob: -11.159459114074707

Token 676: '.second' (ID: 27534)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.5762598514556885
    2. '.second' → logprob: -0.8262598514556885
    3. ' second' → logprob: -8.95125961303711
    4. ',' → logprob: -9.82625961303711
    5. '   ' → logprob: -9.95125961303711
    6. '.' → logprob: -10.07625961303711
    7. '	second' → logprob: -10.57625961303711
    8. '.third' → logprob: -12.20125961303711
    9. '_second' → logprob: -12.32625961303711
    10. '
' → logprob: -12.82625961303711

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00157127995043993
    2. ',self' → logprob: -6.751571178436279
    3. ',
' → logprob: -7.876571178436279
    4. ' ,' → logprob: -11.001571655273438
    5. 'self' → logprob: -13.251571655273438
    6. ',

' → logprob: -14.001571655273438
    7. '       ' → logprob: -14.626571655273438
    8. '   ' → logprob: -15.251571655273438
    9. ',s' → logprob: -15.376571655273438
    10. ',
' → logprob: -15.501571655273438

Token 678: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019488269463181496
    2. ' self' → logprob: -4.019488334655762
    3. '       ' → logprob: -6.894488334655762
    4. '           ' → logprob: -8.394488334655762
    5. '               ' → logprob: -10.519488334655762
    6. '	self' → logprob: -10.769488334655762
    7. '   ' → logprob: -10.894488334655762
    8. '        ' → logprob: -12.019488334655762
    9. '                   ' → logprob: -12.269488334655762
    10. ' ' → logprob: -12.519488334655762

Token 679: '.third' (ID: 182887)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.014210639521479607
    2. '.third' → logprob: -4.2642107009887695
    3. ' third' → logprob: -10.01421070098877
    4. ',' → logprob: -13.38921070098877
    5. '-third' → logprob: -14.76421070098877
    6. '   ' → logprob: -16.139209747314453
    7. '
' → logprob: -16.514209747314453
    8. '第三' → logprob: -16.639209747314453
    9. 'Third' → logprob: -17.139209747314453
    10. '.' → logprob: -17.264209747314453

Token 680: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05028030276298523
    2. ',' → logprob: -3.0502803325653076
    3. ' ]' → logprob: -6.6752800941467285
    4. ']]' → logprob: -8.425280570983887
    5. ',
' → logprob: -9.050280570983887
    6. '])' → logprob: -10.925280570983887
    7. '       ' → logprob: -11.175280570983887
    8. ' ,' → logprob: -11.175280570983887
    9. '   ' → logprob: -11.300280570983887
    10. ']])' → logprob: -11.925280570983887

Token 681: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021323006600141525
    2. ' ]' → logprob: -4.146323204040527
    3. '])' → logprob: -5.771323204040527
    4. '       ' → logprob: -6.771323204040527
    5. ',' → logprob: -7.646323204040527
    6. ')' → logprob: -8.396323204040527
    7. ' ])' → logprob: -8.646323204040527
    8. '   ' → logprob: -10.271323204040527
    9. '])
' → logprob: -10.521323204040527
    10. ' )' → logprob: -11.021323204040527

Token 682: ' )
' (ID: 3270)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5769179463386536
    2. ')' → logprob: -0.8269179463386536
    3. '       ' → logprob: -7.451918125152588
    4. ' )
' → logprob: -8.45191764831543
    5. ')+' → logprob: -9.07691764831543
    6. ')
' → logprob: -9.82691764831543
    7. '        ' → logprob: -12.82691764831543
    8. '
' → logprob: -12.82691764831543
    9. ']' → logprob: -13.07691764831543
    10. '   ' → logprob: -13.20191764831543

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035032641142606735
    2. '
' → logprob: -3.4100327491760254
    3. 'return' → logprob: -8.035032272338867
    4. '+' → logprob: -8.160032272338867
    5. '        
' → logprob: -8.660032272338867
    6. ' +' → logprob: -8.660032272338867
    7. '+
' → logprob: -8.785032272338867
    8. ')
' → logprob: -9.285032272338867
    9. ')' → logprob: -9.785032272338867
    10. '```' → logprob: -10.535032272338867

Token 684: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6265130043029785
    2. 'runs' → logprob: -1.5015130043029785
    3. '       ' → logprob: -2.2515130043029785
    4. 'r' → logprob: -2.3765130043029785
    5. 'return' → logprob: -3.1265130043029785
    6. ' self' → logprob: -8.62651252746582
    7. '```' → logprob: -8.75151252746582
    8. 'total' (adapté à ' total') → logprob: -8.87651252746582
    9. 'run' → logprob: -9.37651252746582
    10. 'returns' → logprob: -9.62651252746582

Token 685: '_runs' (ID: 181590)
  Prédit: '_runs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runs' → logprob: -0.2839686870574951
    2. ' =' → logprob: -1.5339686870574951
    3. '=' → logprob: -3.783968687057495
    4. 'runs' → logprob: -5.533968925476074
    5. '_' → logprob: -6.033968925476074
    6. ' runs' → logprob: -6.408968925476074
    7. ' ' → logprob: -8.908968925476074
    8. '_r' → logprob: -9.158968925476074
    9. '_run' → logprob: -9.283968925476074
    10. '_count' → logprob: -9.533968925476074

Token 686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759422183036804
    2. ' =' → logprob: -0.8259422183036804
    3. ' ' → logprob: -14.325942039489746
    4. 'return' → logprob: -14.575942039489746
    5. '	' → logprob: -15.075942039489746
    6. ' +=' → logprob: -15.450942039489746
    7. ' =
' → logprob: -15.575942039489746
    8. 's' → logprob: -15.825942039489746
    9. '+=' → logprob: -15.825942039489746
    10. '(' → logprob: -16.075942993164062

Token 687: ' runners' (ID: 61876)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01425364799797535
    2. ' runners' → logprob: -4.264253616333008
    3. '1' → logprob: -9.764253616333008
    4. '       ' → logprob: -11.389253616333008
    5. 'runs' → logprob: -11.389253616333008
    6. ' r' → logprob: -12.389253616333008
    7. 'runner' → logprob: -12.889253616333008
    8. ' ' → logprob: -14.014253616333008
    9. '   ' → logprob: -14.139253616333008
    10. 'run' → logprob: -15.014253616333008

Token 688: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.512236498361744e-07
    2. 'count' → logprob: -15.375000953674316
    3. '_c' → logprob: -16.625
    4. 'Count' → logprob: -16.625
    5. '+' → logprob: -16.875
    6. '_' → logprob: -17.0
    7. '_cont' → logprob: -17.5
    8. ' _' → logprob: -17.75
    9. '_COUNT' → logprob: -18.25
    10. 'ount' → logprob: -18.375

Token 689: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01815064437687397
    2. '+' → logprob: -4.018150806427002
    3. ' +
' → logprob: -14.768150329589844
    4. '
' → logprob: -16.268150329589844
    5. '       ' → logprob: -16.393150329589844
    6. ' plus' → logprob: -16.518150329589844
    7. '+
' → logprob: -16.893150329589844
    8. '   ' → logprob: -17.643150329589844
    9. ' ' → logprob: -18.143150329589844
    10. '＋' → logprob: -18.643150329589844

Token 690: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014165041036903858
    2. ' ' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.389164924621582
    4. '```' → logprob: -17.6391658782959
    5. '  ' → logprob: -18.0141658782959
    6. ' ' → logprob: -18.3891658782959
    7. '       ' → logprob: -18.7641658782959
    8. '
' → logprob: -18.7641658782959
    9. '    ' → logprob: -18.7641658782959
    10. '	' → logprob: -19.7641658782959

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.250005722045898
    4. '
' → logprob: -17.7500057220459
    5. '```' → logprob: -18.8750057220459
    6. '       ' → logprob: -19.7500057220459
    7. '  ' → logprob: -20.1250057220459
    8. '۱' → logprob: -20.8750057220459
    9. '`' → logprob: -21.0000057220459
    10. '    ' → logprob: -21.3750057220459

Token 692: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1270105242729187
    2. '       ' → logprob: -2.1270105838775635
    3. '
' → logprob: -10.377010345458984
    4. '        
' → logprob: -10.377010345458984
    5. 'self' → logprob: -11.877010345458984
    6. '    
' → logprob: -12.252010345458984
    7. '  
' → logprob: -12.752010345458984
    8. '   ' → logprob: -13.377010345458984
    9. '

' → logprob: -14.127010345458984
    10. ' 
' → logprob: -14.502010345458984

Token 693: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005544631858356297
    2. '       ' → logprob: -7.62555456161499
    3. '
' → logprob: -10.000554084777832
    4. 'self' → logprob: -11.500554084777832
    5. '    
' → logprob: -12.625554084777832
    6. '        
' → logprob: -12.875554084777832
    7. '

' → logprob: -12.875554084777832
    8. '  
' → logprob: -13.750554084777832
    9. '   ' → logprob: -15.000554084777832
    10. ' 
' → logprob: -15.125554084777832

Token 694: ' batter' (ID: 10814)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007355782203376293
    2. ' ' → logprob: -5.007355690002441
    3. 'self' → logprob: -8.382355690002441
    4. '#' → logprob: -8.882355690002441
    5. 'return' → logprob: -9.507355690002441
    6. '
' → logprob: -9.882355690002441
    7. ' self' → logprob: -10.132355690002441
    8. '0' → logprob: -10.257355690002441
    9. '       ' → logprob: -10.382355690002441
    10. ' return' → logprob: -11.007355690002441

Token 695: ' also' (ID: 1217)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11371653527021408
    2. '       ' → logprob: -2.2387166023254395
    3. '        
' → logprob: -7.8637166023254395
    4. 'return' → logprob: -8.613716125488281
    5. '
' → logprob: -8.988716125488281
    6. 'self' → logprob: -9.863716125488281
    7. ')
' → logprob: -10.738716125488281
    8. '.
' → logprob: -10.738716125488281
    9. '()
' → logprob: -10.738716125488281
    10. ' return' → logprob: -11.363716125488281

Token 696: ' scores' (ID: 18923)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12120344489812851
    2. 'scores' → logprob: -2.4962034225463867
    3. ' scored' → logprob: -4.871203422546387
    4. ' scores' → logprob: -5.496203422546387
    5. 'runs' → logprob: -5.496203422546387
    6. 'score' → logprob: -5.621203422546387
    7. '       ' → logprob: -5.871203422546387
    8. '#' → logprob: -5.871203422546387
    9. ' runs' → logprob: -6.871203422546387
    10. ')' → logprob: -7.121203422546387

Token 697: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004839145578444004
    2. '
' → logprob: -5.504838943481445
    3. 'self' → logprob: -7.504838943481445
    4. '   ' → logprob: -8.504838943481445
    5. '        
' → logprob: -12.879838943481445
    6. ' self' → logprob: -12.879838943481445
    7. '    
' → logprob: -14.254838943481445
    8. '```' → logprob: -14.879838943481445
    9. '  
' → logprob: -15.129838943481445
    10. '
' → logprob: -15.254838943481445

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3149036467075348
    2. '
' → logprob: -1.3149036169052124
    3. 'self' → logprob: -6.564903736114502
    4. '   ' → logprob: -9.439903259277344
    5. '        
' → logprob: -9.689903259277344
    6. '
' → logprob: -9.939903259277344
    7. '    
' → logprob: -11.314903259277344
    8. '```' → logprob: -11.439903259277344
    9. ' self' → logprob: -12.064903259277344
    10. '  
' → logprob: -12.189903259277344

Token 699: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10063804686069489
    2. '       ' → logprob: -2.3506381511688232
    3. ' self' → logprob: -8.725638389587402
    4. '
' → logprob: -9.100638389587402
    5. 'for' → logprob: -9.100638389587402
    6. '   ' → logprob: -10.600638389587402
    7. 'def' → logprob: -11.975638389587402
    8. '	self' → logprob: -12.100638389587402
    9. '```' → logprob: -12.225638389587402
    10. '        
' → logprob: -13.350638389587402

Token 700: '.first' (ID: 14272)
  Prédit: '.first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.first' → logprob: -1.7835754988482222e-05
    2. '.' → logprob: -11.125018119812012
    3. 'first' → logprob: -13.125018119812012
    4. ' .' → logprob: -14.000018119812012
    5. '.third' → logprob: -16.875017166137695
    6. '.First' → logprob: -17.125017166137695
    7. '.second' → logprob: -17.250017166137695
    8. '._' → logprob: -17.375017166137695
    9. '	first' → logprob: -17.875017166137695
    10. '   ' → logprob: -18.250017166137695

Token 701: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00033581978641450405
    2. '.' → logprob: -8.000335693359375
    3. ' .' → logprob: -15.250335693359375
    4. '   ' → logprob: -16.500335693359375
    5. '.reset' → logprob: -17.000335693359375
    6. '.clear' → logprob: -18.125335693359375
    7. 'set' → logprob: -18.375335693359375
    8. ').' → logprob: -19.375335693359375
    9. '       ' → logprob: -19.500335693359375
    10. '`.' → logprob: -20.000335693359375

Token 702: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -2.15310683415737e-05
    2. 'runner' → logprob: -10.750021934509277
    3. ' runner' → logprob: -17.00002098083496
    4. '_run' → logprob: -17.62502098083496
    5. 'Runner' → logprob: -17.87502098083496
    6. '_running' → logprob: -18.50002098083496
    7. '_' → logprob: -20.00002098083496
    8. '.runner' → logprob: -20.37502098083496
    9. '_r' → logprob: -20.50002098083496
    10. 'run' → logprob: -21.12502098083496

Token 703: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32662433385849
    2. '(False' → logprob: -1.3266243934631348
    3. 'False' → logprob: -4.326624393463135
    4. ' False' → logprob: -9.701623916625977
    5. '(
' → logprob: -14.951623916625977
    6. ' (' → logprob: -15.701623916625977
    7. '.False' → logprob: -17.826623916625977
    8. '=False' → logprob: -17.951623916625977
    9. '(false' → logprob: -18.951623916625977
    10. '[' → logprob: -19.826623916625977

Token 704: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6931489109992981
    2. 'False' → logprob: -0.6931489109992981
    3. '(False' → logprob: -13.318148612976074
    4. '=False' → logprob: -19.69314956665039
    5. '.False' → logprob: -20.81814956665039
    6. ' false' → logprob: -21.81814956665039
    7. '_false' → logprob: -21.81814956665039
    8. '   ' → logprob: -21.94314956665039
    9. ' ' → logprob: -22.44314956665039
    10. 'F' → logprob: -22.94314956665039

Token 705: ' )
' (ID: 3270)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.44847598671913147
    2. '       ' → logprob: -1.198475956916809
    3. ')' → logprob: -2.8234760761260986
    4. ' )
' → logprob: -8.82347583770752
    5. '   ' → logprob: -9.94847583770752
    6. ')
' → logprob: -10.32347583770752
    7. '
' → logprob: -10.44847583770752
    8. '<|end|>' → logprob: -10.44847583770752
    9. 'self' → logprob: -10.57347583770752
    10. ' )' → logprob: -11.69847583770752

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011977284448221326
    2. 'self' → logprob: -6.751197814941406
    3. '   ' → logprob: -11.126197814941406
    4. ' self' → logprob: -11.376197814941406
    5. '```' → logprob: -14.751197814941406
    6. '           ' → logprob: -14.876197814941406
    7. ' ' → logprob: -15.001197814941406
    8. '	self' → logprob: -15.876197814941406
    9. '	' → logprob: -16.876197814941406
    10. '
' → logprob: -17.126197814941406

Token 707: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011379891075193882
    2. '       ' → logprob: -4.511379718780518
    3. ' self' → logprob: -8.011380195617676
    4. '   ' → logprob: -15.386380195617676
    5. ' ' → logprob: -16.51137924194336
    6. '	self' → logprob: -17.01137924194336
    7. '```' → logprob: -17.76137924194336
    8. '           ' → logprob: -18.76137924194336
    9. '[self' → logprob: -18.88637924194336
    10. ' ' → logprob: -19.26137924194336

Token 708: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -9.610702363715973e-06
    2. 'second' → logprob: -11.750009536743164
    3. '.third' → logprob: -13.750009536743164
    4. '.' → logprob: -14.500009536743164
    5. '	second' → logprob: -16.750009536743164
    6. ' .' → logprob: -17.625009536743164
    7. '.secondary' → logprob: -17.875009536743164
    8. '.first' → logprob: -19.000009536743164
    9. 'Second' → logprob: -19.625009536743164
    10. '.sec' → logprob: -20.250009536743164

Token 709: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0015127197839319706
    2. '.' → logprob: -6.50151252746582
    3. ' .' → logprob: -11.50151252746582
    4. '   ' → logprob: -16.00151252746582
    5. '.setdefault' → logprob: -17.25151252746582
    6. 'set' → logprob: -17.62651252746582
    7. '       ' → logprob: -19.12651252746582
    8. '	set' → logprob: -19.12651252746582
    9. ').' → logprob: -19.25151252746582
    10. '.reset' → logprob: -19.37651252746582

Token 710: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.04407358542084694
    2. '(' → logprob: -3.7940735816955566
    3. 'Runner' → logprob: -4.044073581695557
    4. '(False' → logprob: -6.044073581695557
    5. 'runner' → logprob: -8.044074058532715
    6. '.runner' → logprob: -8.294074058532715
    7. ' runner' → logprob: -9.919074058532715
    8. ' Runner' → logprob: -10.419074058532715
    9. 'unner' → logprob: -10.794074058532715
    10. '_' → logprob: -11.544074058532715

Token 711: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019293478690087795
    2. '(False' → logprob: -6.25192928314209
    3. 'False' → logprob: -15.12692928314209
    4. ' (' → logprob: -15.12692928314209
    5. '(
' → logprob: -16.751930236816406
    6. '(True' → logprob: -17.126930236816406
    7. ' False' → logprob: -19.251930236816406
    8. '(None' → logprob: -20.876930236816406
    9. '(F' → logprob: -20.876930236816406
    10. '       ' → logprob: -21.376930236816406

Token 712: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.2519744038581848
    2. 'False' → logprob: -1.50197434425354
    3. '(False' → logprob: -10.001974105834961
    4. ' ' → logprob: -18.62697410583496
    5. '.False' → logprob: -18.87697410583496
    6. '=False' → logprob: -19.00197410583496
    7. '(' → logprob: -19.25197410583496
    8. 'F' → logprob: -20.75197410583496
    9. '_false' → logprob: -20.75197410583496
    10. ' ' → logprob: -20.75197410583496

Token 713: ' )
' (ID: 3270)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006901382468640804
    2. '
' → logprob: -5.006901264190674
    3. ')
' → logprob: -9.006901741027832
    4. ')' → logprob: -11.131901741027832
    5. '   ' → logprob: -11.381901741027832
    6. '<|end|>' → logprob: -11.631901741027832
    7. '        
' → logprob: -11.631901741027832
    8. 'self' → logprob: -12.131901741027832
    9. '```' → logprob: -12.506901741027832
    10. '
' → logprob: -13.506901741027832

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010127831774298102
    2. 'self' → logprob: -9.250101089477539
    3. ' self' → logprob: -12.875101089477539
    4. '```' → logprob: -13.875101089477539
    5. '   ' → logprob: -14.125101089477539
    6. '           ' → logprob: -15.000101089477539
    7. '	' → logprob: -16.00010108947754
    8. '	self' → logprob: -16.12510108947754
    9. '               ' → logprob: -17.00010108947754
    10. '
' → logprob: -17.12510108947754

Token 715: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10628914088010788
    2. '       ' → logprob: -2.3562891483306885
    3. ' self' → logprob: -5.106288909912109
    4. '	self' → logprob: -12.98128890991211
    5. '   ' → logprob: -13.10628890991211
    6. ' ' → logprob: -14.23128890991211
    7. ' ' → logprob: -15.23128890991211
    8. '           ' → logprob: -16.35628890991211
    9. '               ' → logprob: -16.48128890991211
    10. '	' → logprob: -16.73128890991211

Token 716: '.third' (ID: 182887)
  Prédit: '.third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.third' → logprob: -0.0015029559144750237
    2. 'third' → logprob: -6.501502990722656
    3. ' third' → logprob: -15.001502990722656
    4. '.' → logprob: -15.501502990722656
    5. ' .' → logprob: -17.376502990722656
    6. '-third' → logprob: -18.126502990722656
    7. '.th' → logprob: -18.501502990722656
    8. '第三' → logprob: -18.626502990722656
    9. '.second' → logprob: -18.751502990722656
    10. 'Third' → logprob: -19.001502990722656

Token 717: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0019448186503723264
    2. '.' → logprob: -6.2519450187683105
    3. ' .' → logprob: -11.126944541931152
    4. '   ' → logprob: -13.626944541931152
    5. '().' → logprob: -16.25194549560547
    6. ').' → logprob: -16.37694549560547
    7. '       ' → logprob: -17.00194549560547
    8. '(' → logprob: -17.75194549560547
    9. ' ' → logprob: -18.12694549560547
    10. '	' → logprob: -18.37694549560547

Token 718: '_runner' (ID: 138974)
  Prédit: 'Runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -0.48452669382095337
    2. '_runner' → logprob: -0.9845266938209534
    3. ' Runner' → logprob: -5.484526634216309
    4. ' runner' → logprob: -5.734526634216309
    5. 'runner' → logprob: -6.234526634216309
    6. 'False' → logprob: -7.734526634216309
    7. '(False' → logprob: -7.859526634216309
    8. ' False' → logprob: -8.609526634216309
    9. '.runner' → logprob: -10.859526634216309
    10. '(' → logprob: -11.609526634216309

Token 719: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004081128165125847
    2. '(False' → logprob: -5.5040812492370605
    3. 'False' → logprob: -13.254080772399902
    4. ' (' → logprob: -14.254080772399902
    5. '(
' → logprob: -15.004080772399902
    6. ' False' → logprob: -18.62908172607422
    7. '(F' → logprob: -20.12908172607422
    8. '=False' → logprob: -20.75408172607422
    9. '(None' → logprob: -20.75408172607422
    10. '(True' → logprob: -21.00408172607422

Token 720: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.20142397284507751
    2. 'False' → logprob: -1.7014240026474
    3. '(False' → logprob: -11.451423645019531
    4. '=False' → logprob: -17.70142364501953
    5. '.False' → logprob: -20.07642364501953
    6. '_false' → logprob: -21.32642364501953
    7. ' ' → logprob: -21.45142364501953
    8. ' ' → logprob: -21.82642364501953
    9. ' false' → logprob: -22.20142364501953
    10. '_FALSE' → logprob: -22.82642364501953

Token 721: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4386790096759796
    2. ')
' → logprob: -1.3136789798736572
    3. '       ' → logprob: -2.5636789798736572
    4. ' )
' → logprob: -5.438679218292236
    5. ' )' → logprob: -5.563679218292236
    6. '<|end|>' → logprob: -7.438679218292236
    7. '
' → logprob: -8.438678741455078
    8. '()' → logprob: -9.313678741455078
    9. ')return' → logprob: -9.813678741455078
    10. '```' → logprob: -9.938678741455078

Token 722: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02546716295182705
    2. 'return' → logprob: -3.9004671573638916
    3. '
' → logprob: -5.775467395782471
    4. '	' → logprob: -7.150467395782471
    5. ' return' → logprob: -7.525467395782471
    6. '	return' → logprob: -7.900467395782471
    7. '   ' → logprob: -9.525466918945312
    8. '```' → logprob: -10.900466918945312
    9. '
' → logprob: -11.900466918945312
    10. '        
' → logprob: -12.650466918945312

Token 723: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019881133921444416
    2. '       ' → logprob: -6.251987934112549
    3. ' return' → logprob: -9.751988410949707
    4. '	return' → logprob: -13.751988410949707
    5. '   ' → logprob: -15.501988410949707
    6. '
' → logprob: -16.50198745727539
    7. '	' → logprob: -17.00198745727539
    8. '```' → logprob: -19.00198745727539
    9. ':return' → logprob: -19.62698745727539
    10. '{return' → logprob: -19.75198745727539

Token 724: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2519315779209137
    2. ' total' → logprob: -1.5019315481185913
    3. 't' → logprob: -14.001931190490723
    4. 'tot' → logprob: -14.251931190490723
    5. '	total' → logprob: -15.126931190490723
    6. 'to' → logprob: -15.501931190490723
    7. ' tot' → logprob: -15.626931190490723
    8. '
' → logprob: -15.751931190490723
    9. ' tota' → logprob: -16.25193214416504
    10. '(total' → logprob: -16.50193214416504

Token 725: '_runs' (ID: 181590)
  Prédit: '_runs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runs' → logprob: -0.006473306100815535
    2. 's' → logprob: -5.256473541259766
    3. '_' → logprob: -7.006473541259766
    4. '_scores' → logprob: -9.506473541259766
    5. ' _' → logprob: -10.131473541259766
    6. 't' → logprob: -10.631473541259766
    7. '__' → logprob: -10.881473541259766
    8. '_total' → logprob: -11.006473541259766
    9. '_rows' → logprob: -11.006473541259766
    10. '_turn' → logprob: -11.131473541259766

Token 726: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1731937825679779
    2. '<|end|>' → logprob: -1.9231938123703003
    3. 'class' → logprob: -4.79819393157959
    4. '   ' → logprob: -6.29819393157959
    5. '
' → logprob: -6.67319393157959
    6. '<|end|>' → logprob: -7.17319393157959
    7. '#' → logprob: -8.17319393157959
    8. ' def' → logprob: -8.67319393157959
    9. '	def' → logprob: -9.17319393157959
    10. '```' → logprob: -9.54819393157959

Token 728: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014942926645744592
    2. 'class' → logprob: -9.375149726867676
    3. '   ' → logprob: -10.375149726867676
    4. '<|end|>' → logprob: -10.500149726867676
    5. ' def' → logprob: -12.625149726867676
    6. '	def' → logprob: -13.250149726867676
    7. '#' → logprob: -15.250149726867676
    8. '```' → logprob: -15.375149726867676
    9. 'ndef' → logprob: -16.50014877319336
    10. '<|end|>' → logprob: -17.37514877319336

Token 729: ' __' (ID: 2516)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.42874017357826233
    2. ' clear' → logprob: -1.30374014377594
    3. 'reset' → logprob: -3.0537402629852295
    4. ' reset' → logprob: -4.30374002456665
    5. 'has' → logprob: -5.42874002456665
    6. ' get' → logprob: -6.05374002456665
    7. 'remove' → logprob: -6.17874002456665
    8. 'get' → logprob: -6.42874002456665
    9. 'advance' → logprob: -6.92874002456665
    10. ' remove' → logprob: -7.05374002456665

Token 730: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01817242056131363
    2. 'repr' → logprob: -4.018172264099121
    3. 'len' → logprob: -10.768172264099121
    4. 'get' → logprob: -13.893172264099121
    5. 'iter' → logprob: -15.518172264099121
    6. ' str' → logprob: -16.518173217773438
    7. 'contains' → logprob: -16.518173217773438
    8. 'eq' → logprob: -16.643173217773438
    9. 'bool' → logprob: -17.018173217773438
    10. 'init' → logprob: -17.268173217773438

Token 731: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00010103991371579468
    2. '__' → logprob: -9.500101089477539
    3. '__(
' → logprob: -10.625101089477539
    4. '(' → logprob: -13.875101089477539
    5. '__((' → logprob: -15.250101089477539
    6. '__('' → logprob: -15.500101089477539
    7. '_(' → logprob: -15.875101089477539
    8. '__("' → logprob: -15.875101089477539
    9. '__(*' → logprob: -16.75010108947754
    10. '(self' → logprob: -17.12510108947754

Token 732: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011438826099038124
    2. ' self' → logprob: -4.511438846588135
    3. '(' → logprob: -8.011438369750977
    4. '(self' → logprob: -9.886438369750977
    5. '	self' → logprob: -12.261438369750977
    6. '
' → logprob: -13.511438369750977
    7. ')' → logprob: -13.761438369750977
    8. '   ' → logprob: -14.136438369750977
    9. 's' → logprob: -15.511438369750977
    10. ' ' → logprob: -15.636438369750977

Token 733: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36632341146469116
    2. ' ):' → logprob: -2.116323471069336
    3. 'self' → logprob: -2.366323471069336
    4. '):
' → logprob: -2.616323471069336
    5. ' ):
' → logprob: -4.241323471069336
    6. '(self' → logprob: -6.616323471069336
    7. ')' → logprob: -6.741323471069336
    8. ' )' → logprob: -6.991323471069336
    9. '(' → logprob: -7.241323471069336
    10. '   ' → logprob: -8.241323471069336

Token 734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6537622034084052e-05
    2. 'return' → logprob: -11.37502670288086
    3. ' return' → logprob: -11.75002670288086
    4. '(' → logprob: -12.62502670288086
    5. '   ' → logprob: -13.87502670288086
    6. '    ' → logprob: -14.87502670288086
    7. '           ' → logprob: -14.87502670288086
    8. '      ' → logprob: -14.87502670288086
    9. '        ' → logprob: -15.12502670288086
    10. '     ' → logprob: -15.25002670288086

Token 735: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9058360457420349
    2. 'return' → logprob: -0.9058360457420349
    3. ' return' → logprob: -1.6558361053466797
    4. 'status' → logprob: -8.15583610534668
    5. ' status' → logprob: -9.65583610534668
    6. 'r' → logprob: -9.65583610534668
    7. ' s' → logprob: -10.15583610534668
    8. ' lines' → logprob: -10.15583610534668
    9. 'f' → logprob: -10.28083610534668
    10. 'result' → logprob: -10.40583610534668

Token 736: 'Debug' (ID: 14192)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04903627187013626
    2. 'return' → logprob: -3.2990362644195557
    3. ' status' → logprob: -5.049036502838135
    4. '       ' → logprob: -6.424036502838135
    5. ' first' → logprob: -7.549036502838135
    6. 'status' → logprob: -7.924036502838135
    7. '   ' → logprob: -8.049036026000977
    8. ' bases' → logprob: -8.049036026000977
    9. ' states' → logprob: -8.174036026000977
    10. ' state' → logprob: -8.299036026000977

Token 737: ' state' (ID: 2608)
  Prédit: ' representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' representation' → logprob: -0.6389222145080566
    2. ':' → logprob: -1.5139222145080566
    3. ' return' → logprob: -2.3889222145080566
    4. '   ' → logprob: -2.8889222145080566
    5. ' string' → logprob: -3.7639222145080566
    6. ' :' → logprob: -3.7639222145080566
    7. '():' → logprob: -4.013922214508057
    8. ' output' → logprob: -4.138922214508057
    9. '()' → logprob: -5.013922214508057
    10. ' ' → logprob: -5.888922214508057

Token 738: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2792671918869019
    2. '   ' → logprob: -1.4042671918869019
    3. '(self' → logprob: -1.5292671918869019
    4. ' self' → logprob: -2.1542673110961914
    5. '       ' → logprob: -3.4042673110961914
    6. 'self' → logprob: -3.7792673110961914
    7. '(' → logprob: -3.9042673110961914
    8. '():' → logprob: -4.029267311096191
    9. ' return' → logprob: -4.154267311096191
    10. ':
' → logprob: -4.529267311096191

Token 739: ' units' (ID: 13306)
  Prédit: ' bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.8537432551383972
    2. 'bases' → logprob: -1.103743314743042
    3. 'Bases' → logprob: -1.853743314743042
    4. ' Bases' → logprob: -3.478743314743042
    5. 'self' → logprob: -3.853743314743042
    6. ' all' → logprob: -4.728743076324463
    7. 'the' → logprob: -4.853743076324463
    8. ' the' → logprob: -4.853743076324463
    9. 'all' → logprob: -5.728743076324463
    10. ' self' → logprob: -5.978743076324463

Token 740: ' tests' (ID: 10742)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6015334129333496
    2. '(' → logprob: -1.6015334129333496
    3. '(self' → logprob: -2.3515334129333496
    4. ':' → logprob: -2.8515334129333496
    5. '       ' → logprob: -4.22653341293335
    6. ':
' → logprob: -4.72653341293335
    7. 'def' → logprob: -4.85153341293335
    8. '.' → logprob: -4.85153341293335
    9. ' self' → logprob: -4.85153341293335
    10. ' of' → logprob: -4.97653341293335

Token 741: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8654053211212158
    2. '
' → logprob: -1.6154053211212158
    3. 'self' → logprob: -2.240405321121216
    4. '(self' → logprob: -2.240405321121216
    5. '):
' → logprob: -2.865405321121216
    6. '   ' → logprob: -2.990405321121216
    7. ':
' → logprob: -3.740405321121216
    8. ':' → logprob: -4.740405082702637
    9. ' self' → logprob: -4.740405082702637
    10. ')' → logprob: -5.740405082702637

Token 742: ' logs' (ID: 35408)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.7362878322601318
    2. ' debugging' → logprob: -1.8612878322601318
    3. ' repr' → logprob: -1.9862878322601318
    4. 'print' → logprob: -2.361287832260132
    5. 'representation' → logprob: -3.986287832260132
    6. 'debug' → logprob: -4.236288070678711
    7. ' print' → logprob: -4.361288070678711
    8. ' representation' → logprob: -4.361288070678711
    9. ' display' → logprob: -4.486288070678711
    10. 'display' → logprob: -5.111288070678711

Token 743: '."""
' (ID: 33044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4603455066680908
    2. '   ' → logprob: -1.9603455066680908
    3. '(self' → logprob: -2.085345506668091
    4. '
' → logprob: -2.960345506668091
    5. ':' → logprob: -4.460345268249512
    6. '):
' → logprob: -4.585345268249512
    7. ':
' → logprob: -4.585345268249512
    8. '(' → logprob: -4.710345268249512
    9. 'self' → logprob: -5.460345268249512
    10. ' self' → logprob: -6.710345268249512

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009305497631430626
    2. ' return' → logprob: -5.259305477142334
    3. 'return' → logprob: -5.509305477142334
    4. '	return' → logprob: -12.384305953979492
    5. '	' → logprob: -13.009305953979492
    6. 'r' → logprob: -13.509305953979492
    7. '        ' → logprob: -13.884305953979492
    8. '   ' → logprob: -14.259305953979492
    9. '```' → logprob: -14.259305953979492
    10. '    ' → logprob: -14.384305953979492

Token 745: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08124194294214249
    2. ' return' → logprob: -3.0812418460845947
    3. '       ' → logprob: -3.4562418460845947
    4. 'r' → logprob: -8.456241607666016
    5. 'status' → logprob: -8.831241607666016
    6. 's' → logprob: -9.831241607666016
    7. '   ' → logprob: -10.331241607666016
    8. 'f' → logprob: -10.456241607666016
    9. 'ret' → logprob: -10.956241607666016
    10. 'state' → logprob: -10.956241607666016

Token 746: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2880229651927948
    2. ' f' → logprob: -1.4130229949951172
    3. '"' → logprob: -5.038022994995117
    4. '   ' → logprob: -9.038022994995117
    5. ''' → logprob: -9.288022994995117
    6. ' "' → logprob: -10.163022994995117
    7. ' ' → logprob: -10.413022994995117
    8. '(f' → logprob: -10.413022994995117
    9. ''f' → logprob: -11.163022994995117
    10. ' "{}' → logprob: -11.913022994995117

Token 747: '"B' (ID: 160056)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09552481770515442
    2. ''' → logprob: -3.720524787902832
    3. 'f' → logprob: -3.970524787902832
    4. '"<' → logprob: -3.970524787902832
    5. '"(' → logprob: -4.845524787902832
    6. '"[' → logprob: -5.220524787902832
    7. '(f' → logprob: -5.345524787902832
    8. 'F' → logprob: -5.470524787902832
    9. '(F' → logprob: -6.470524787902832
    10. '(' → logprob: -6.720524787902832

Token 748: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.04939374327659607
    2. 'ase' → logprob: -3.299393653869629
    3. 'First' → logprob: -5.174393653869629
    4. '1' → logprob: -5.674393653869629
    5. 'F' → logprob: -6.924393653869629
    6. 'first' → logprob: -7.424393653869629
    7. '[' → logprob: -8.549393653869629
    8. 'Bases' → logprob: -9.549393653869629
    9. ' first' → logprob: -10.049393653869629
    10. '(' → logprob: -10.174393653869629

Token 749: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3261429965496063
    2. '(first' → logprob: -2.2011430263519287
    3. '(' → logprob: -3.2011430263519287
    4. '[' → logprob: -3.2011430263519287
    5. '(F' → logprob: -4.07614278793335
    6. '[first' → logprob: -4.20114278793335
    7. ' status' → logprob: -4.57614278793335
    8. ' first' → logprob: -4.95114278793335
    9. 'status' → logprob: -4.95114278793335
    10. 'State' → logprob: -5.20114278793335

Token 750: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9892702698707581
    2. 'F' → logprob: -1.3642702102661133
    3. ' F' → logprob: -1.9892702102661133
    4. 'First' → logprob: -2.3642702102661133
    5. ' First' → logprob: -3.2392702102661133
    6. '[' → logprob: -3.3642702102661133
    7. ' first' → logprob: -3.8642702102661133
    8. ' ' → logprob: -4.489270210266113
    9. 'first' → logprob: -4.614270210266113
    10. '[F' → logprob: -4.989270210266113

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5634660720825195
    2. 'F' → logprob: -1.1884660720825195
    3. 'First' → logprob: -2.8134660720825195
    4. '{'' → logprob: -3.6884660720825195
    5. 'first' → logprob: -3.6884660720825195
    6. '[' → logprob: -5.1884660720825195
    7. '{' → logprob: -5.6884660720825195
    8. 'f' → logprob: -6.0634660720825195
    9. '[F' → logprob: -6.3134660720825195
    10. '[{' → logprob: -6.9384660720825195

Token 752: 'st' (ID: 302)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.7158296704292297
    2. '={'' → logprob: -1.215829610824585
    3. '({'' → logprob: -2.465829610824585
    4. '[{' → logprob: -2.715829610824585
    5. ':{' → logprob: -3.965829610824585
    6. ':' → logprob: -4.465829849243164
    7. '({' → logprob: -4.965829849243164
    8. '[' → logprob: -5.090829849243164
    9. '{' → logprob: -5.340829849243164
    10. '['' → logprob: -5.840829849243164

Token 753: ':' (ID: 25)
  Prédit: '={''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={'' → logprob: -0.3218962550163269
    2. '({'' → logprob: -2.0718963146209717
    3. '{'' → logprob: -2.5718963146209717
    4. ' {'' → logprob: -3.5718963146209717
    5. '({' → logprob: -4.321896076202393
    6. ':' → logprob: -4.321896076202393
    7. '[{' → logprob: -4.821896076202393
    8. ':{' → logprob: -5.196896076202393
    9. '={' → logprob: -6.321896076202393
    10. ' [{'' → logprob: -6.696896076202393

Token 754: ' {' (ID: 354)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.01608986034989357
    2. ' {'' → logprob: -4.266089916229248
    3. '{' → logprob: -6.266089916229248
    4. ' {' → logprob: -10.76608943939209
    5. '{"' → logprob: -12.89108943939209
    6. '({'' → logprob: -13.89108943939209
    7. '={'' → logprob: -16.141090393066406
    8. ''' → logprob: -16.641090393066406
    9. '['' → logprob: -17.016090393066406
    10. ' runner' → logprob: -17.641090393066406

Token 755: 'self' (ID: 1156)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07714225351810455
    2. ''int' → logprob: -3.2021422386169434
    3. ''s' → logprob: -3.8271422386169434
    4. 'self' → logprob: -5.577142238616943
    5. ''S' → logprob: -5.952142238616943
    6. ''t' → logprob: -6.827142238616943
    7. ''on' → logprob: -6.827142238616943
    8. ''T' → logprob: -7.577142238616943
    9. ' '' → logprob: -7.702142238616943
    10. ''O' → logprob: -7.702142238616943

Token 756: '.first' (ID: 14272)
  Prédit: '.runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.runner' → logprob: -0.15645281970500946
    2. ''' → logprob: -2.0314528942108154
    3. ' '' → logprob: -4.906452655792236
    4. ''.' → logprob: -6.406452655792236
    5. ' runner' → logprob: -6.531452655792236
    6. 'runner' → logprob: -7.281452655792236
    7. '.' → logprob: -7.656452655792236
    8. 'self' → logprob: -7.781452655792236
    9. '_runner' → logprob: -7.906452655792236
    10. ''s' → logprob: -8.281453132629395

Token 757: '.has' (ID: 10752)
  Prédit: '.runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.runner' → logprob: -1.0564331205387134e-05
    2. '.' → logprob: -12.25001049041748
    3. 'runner' → logprob: -12.75001049041748
    4. ' .' → logprob: -13.87501049041748
    5. '.has' → logprob: -13.87501049041748
    6. ' runner' → logprob: -15.37501049041748
    7. '.running' → logprob: -15.62501049041748
    8. '".' → logprob: -15.87501049041748
    9. '}.' → logprob: -16.500011444091797
    10. 'Runner' → logprob: -16.625011444091797

Token 758: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -1.981667537620524e-06
    2. 'runner' → logprob: -14.250001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_run' → logprob: -14.750001907348633
    5. ' runner' → logprob: -16.000001907348633
    6. '()' → logprob: -16.000001907348633
    7. '_r' → logprob: -16.375001907348633
    8. '(_' → logprob: -16.875001907348633
    9. '_running' → logprob: -17.125001907348633
    10. '(' → logprob: -17.375001907348633

Token 759: '()},' (ID: 164662)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.20245982706546783
    2. '()},' → logprob: -1.7024598121643066
    3. '()' → logprob: -7.077459812164307
    4. '(' → logprob: -8.702460289001465
    5. '()},
' → logprob: -11.577460289001465
    6. '()
' → logprob: -12.202460289001465
    7. '()"' → logprob: -12.202460289001465
    8. '():' → logprob: -12.577460289001465
    9. '()),' → logprob: -12.702460289001465
    10. '(),' → logprob: -12.827460289001465

Token 760: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132792115211487
    2. '2' → logprob: -1.313279151916504
    3. '"' → logprob: -11.688279151916504
    4. '   ' → logprob: -13.438279151916504
    5. '  ' → logprob: -13.688279151916504
    6. '3' → logprob: -13.813279151916504
    7. '    ' → logprob: -14.063279151916504
    8. ' ' → logprob: -14.063279151916504
    9. ' second' → logprob: -14.188279151916504
    10. '       ' → logprob: -14.188279151916504

Token 761: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06196846812963486
    2. ' ' → logprob: -2.8119685649871826
    3. '   ' → logprob: -14.811968803405762
    4. '"' → logprob: -15.936968803405762
    5. '       ' → logprob: -16.186967849731445
    6. '3' → logprob: -16.436967849731445
    7. '  ' → logprob: -16.936967849731445
    8. '    ' → logprob: -17.311967849731445
    9. '     ' → logprob: -17.311967849731445
    10. '        ' → logprob: -18.186967849731445

Token 762: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.5048530030981055e-06
    2. ' nd' → logprob: -13.625001907348633
    3. 'st' → logprob: -15.125001907348633
    4. 'sd' → logprob: -17.250001907348633
    5. 'n' → logprob: -18.375001907348633
    6. 'cd' → logprob: -18.500001907348633
    7. 'd' → logprob: -18.625001907348633
    8. 'rd' → logprob: -19.250001907348633
    9. 'ng' → logprob: -19.875001907348633
    10. 'nds' → logprob: -20.750001907348633

Token 763: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.080963092041202e-06
    2. '{' → logprob: -12.375004768371582
    3. ':{' → logprob: -14.625004768371582
    4. ' :' → logprob: -15.500004768371582
    5. ' {' → logprob: -17.2500057220459
    6. 'f' → logprob: -17.3750057220459
    7. '=' → logprob: -17.5000057220459
    8. '={' → logprob: -17.7500057220459
    9. 's' → logprob: -18.0000057220459
    10. '...' → logprob: -19.2500057220459

Token 764: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.007432819344103336
    2. ' {' → logprob: -5.00743293762207
    3. 'self' → logprob: -7.25743293762207
    4. ' self' → logprob: -11.38243293762207
    5. '{s' → logprob: -14.50743293762207
    6. '{return' → logprob: -15.38243293762207
    7. '{
' → logprob: -17.25743293762207
    8. '{sub' → logprob: -18.00743293762207
    9. '{'' → logprob: -19.13243293762207
    10. ' ' → logprob: -19.25743293762207

Token 765: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03813490271568298
    2. '{' → logprob: -3.288134813308716
    3. ' self' → logprob: -9.288134574890137
    4. ' {' → logprob: -14.288134574890137
    5. '{s' → logprob: -16.288135528564453
    6. '{
' → logprob: -16.538135528564453
    7. '	self' → logprob: -17.288135528564453
    8. '$self' → logprob: -17.413135528564453
    9. '
' → logprob: -17.538135528564453
    10. '[self' → logprob: -17.538135528564453

Token 766: '.second' (ID: 27534)
  Prédit: '.second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.second' → logprob: -0.00012284684635233134
    2. '.third' → logprob: -9.250123023986816
    3. '.first' → logprob: -10.625123023986816
    4. '.has' → logprob: -13.625123023986816
    5. '.self' → logprob: -14.500123023986816
    6. 'second' → logprob: -14.750123023986816
    7. '.' → logprob: -16.0001220703125
    8. ' .' → logprob: -17.1251220703125
    9. '.next' → logprob: -17.3751220703125
    10. '.secondary' → logprob: -17.7501220703125

Token 767: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -10.750021934509277
    3. 'has' → logprob: -15.750021934509277
    4. '.have' → logprob: -16.25002098083496
    5. ' .' → logprob: -16.37502098083496
    6. '(has' → logprob: -17.75002098083496
    7. '.Has' → logprob: -17.87502098083496
    8. '	has' → logprob: -17.87502098083496
    9. '}.' → logprob: -18.50002098083496
    10. ' has' → logprob: -19.25002098083496

Token 768: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.10165036469697952
    2. 'unner' → logprob: -2.3516504764556885
    3. 'runner' → logprob: -6.601650238037109
    4. ' runner' → logprob: -9.72665023803711
    5. 'Runner' → logprob: -11.22665023803711
    6. 'uner' → logprob: -12.22665023803711
    7. '.runner' → logprob: -12.85165023803711
    8. 'unning' → logprob: -13.10165023803711
    9. 'unners' → logprob: -13.72665023803711
    10. ' Runner' → logprob: -15.10165023803711

Token 769: '()},' (ID: 164662)
  Prédit: '()},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()},' → logprob: -7.481510692741722e-05
    2. '()' → logprob: -9.62507438659668
    3. '()},
' → logprob: -12.25007438659668
    4. '()}' → logprob: -13.00007438659668
    5. '},' → logprob: -14.62507438659668
    6. '(),' → logprob: -14.87507438659668
    7. '()],' → logprob: -15.12507438659668
    8. '(' → logprob: -15.25007438659668
    9. '()),' → logprob: -15.62507438659668
    10. '()
' → logprob: -16.25007438659668

Token 770: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2014147937297821
    2. '3' → logprob: -1.7014148235321045
    3. ' f' → logprob: -14.576415061950684
    4. '   ' → logprob: -15.201415061950684
    5. '     ' → logprob: -15.701415061950684
    6. '       ' → logprob: -16.201414108276367
    7. '    ' → logprob: -16.576414108276367
    8. 'f' → logprob: -16.576414108276367
    9. '  ' → logprob: -16.576414108276367
    10. '"' → logprob: -16.826414108276367

Token 771: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.50002098083496
    4. '"' → logprob: -17.62502098083496
    5. 'f' → logprob: -17.62502098083496
    6. 'third' → logprob: -18.12502098083496
    7. '       ' → logprob: -18.75002098083496
    8. ' third' → logprob: -19.25002098083496
    9. '           ' → logprob: -19.62502098083496
    10. '     ' → logprob: -20.25002098083496

Token 772: 'rd' (ID: 9290)
  Prédit: 'rd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rd' → logprob: -5.512236498361744e-07
    2. 'd' → logprob: -14.625000953674316
    3. 'r' → logprob: -17.375
    4. 'rdf' → logprob: -17.875
    5. 'ird' → logprob: -19.0
    6. 'th' → logprob: -19.625
    7. ' rd' → logprob: -20.25
    8. ':' → logprob: -22.25
    9. 'td' → logprob: -22.5
    10. 'nd' → logprob: -23.125

Token 773: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029995047952979803
    2. '{' → logprob: -8.125300407409668
    3. '=' → logprob: -13.625300407409668
    4. '}:' → logprob: -13.625300407409668
    5. '={' → logprob: -15.000300407409668
    6. ' {' → logprob: -15.125300407409668
    7. ' :' → logprob: -15.125300407409668
    8. ':{' → logprob: -15.375300407409668
    9. '):' → logprob: -16.50029945373535
    10. '>:' → logprob: -16.50029945373535

Token 774: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04860077425837517
    2. ' {' → logprob: -3.048600673675537
    3. '{return' → logprob: -11.548601150512695
    4. '{s' → logprob: -13.048601150512695
    5. 'self' → logprob: -14.298601150512695
    6. ' f' → logprob: -15.423601150512695
    7. ' ' → logprob: -15.548601150512695
    8. '{}' → logprob: -15.798601150512695
    9. '{x' → logprob: -16.173601150512695
    10. '{text' → logprob: -16.673601150512695

Token 775: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.735893965815194e-05
    2. ' self' → logprob: -11.000017166137695
    3. '{' → logprob: -14.250017166137695
    4. '
' → logprob: -21.125017166137695
    5. '	self' → logprob: -21.250017166137695
    6. '$self' → logprob: -22.125017166137695
    7. '   ' → logprob: -22.250017166137695
    8. '(self' → logprob: -22.250017166137695
    9. '[self' → logprob: -22.625017166137695
    10. '```' → logprob: -22.750017166137695

Token 776: '.third' (ID: 182887)
  Prédit: '.has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.004082078114151955
    2. '.third' → logprob: -5.504082202911377
    3. '.' → logprob: -13.004081726074219
    4. 'has' → logprob: -14.129081726074219
    5. '.th' → logprob: -15.004081726074219
    6. ' .' → logprob: -15.629081726074219
    7. '.Has' → logprob: -16.25408172607422
    8. '.have' → logprob: -16.37908172607422
    9. '}.' → logprob: -16.87908172607422
    10. '}' → logprob: -17.12908172607422

Token 777: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -6.706686690449715e-05
    2. '.' → logprob: -9.625066757202148
    3. 'has' → logprob: -14.875066757202148
    4. ' .' → logprob: -14.875066757202148
    5. '}.' → logprob: -15.500066757202148
    6. '.have' → logprob: -17.00006675720215
    7. '.Has' → logprob: -17.75006675720215
    8. '(has' → logprob: -17.75006675720215
    9. '}' → logprob: -18.00006675720215
    10. ').' → logprob: -18.12506675720215

Token 778: '_runner' (ID: 138974)
  Prédit: '_runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_runner' → logprob: -0.0004348413785919547
    2. 'runner' → logprob: -7.750434875488281
    3. 'unner' → logprob: -13.125434875488281
    4. ' runner' → logprob: -13.250434875488281
    5. 'Runner' → logprob: -15.000434875488281
    6. '.runner' → logprob: -16.00043487548828
    7. '_running' → logprob: -17.75043487548828
    8. ' Runner' → logprob: -18.50043487548828
    9. '_r' → logprob: -18.75043487548828
    10. '_run' → logprob: -18.87543487548828

Token 779: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10164035856723785
    2. '()}' → logprob: -2.351640462875366
    3. '()"' → logprob: -7.601640224456787
    4. '}' → logprob: -7.851640224456787
    5. '}"' → logprob: -8.226640701293945
    6. '())' → logprob: -9.101640701293945
    7. '(' → logprob: -9.226640701293945
    8. '()},' → logprob: -10.601640701293945
    9. ']}"' → logprob: -11.101640701293945
    10. '()}
' → logprob: -12.101640701293945

Token 780: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.00021212305000517517
    2. '}' → logprob: -8.875211715698242
    3. ')"' → logprob: -10.500211715698242
    4. '}")' → logprob: -10.500211715698242
    5. ' }' → logprob: -11.375211715698242
    6. '})' → logprob: -13.000211715698242
    7. '}}"' → logprob: -13.375211715698242
    8. '}".' → logprob: -14.875211715698242
    9. '"' → logprob: -15.000211715698242
    10. ')}' → logprob: -15.125211715698242

Token 781: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 782: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: ' In' (ID: 730)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.2947388887405396
    2. 'Bases' → logprob: -1.4197388887405396
    3. ' Bases' → logprob: -1.7947388887405396
    4. 'B' → logprob: -2.41973876953125
    5. ' Game' → logprob: -2.41973876953125
    6. ' Batter' → logprob: -2.41973876953125
    7. 'Runner' → logprob: -4.41973876953125
    8. 'Base' → logprob: -4.41973876953125
    9. 'Player' → logprob: -5.41973876953125
    10. ' Baseball' → logprob: -5.66973876953125

Token 784: 'ning' (ID: 1401)
  Prédit: 'ning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ning' → logprob: -0.1732785999774933
    2. 'fielder' → logprob: -2.298278570175171
    3. 'field' → logprob: -4.17327880859375
    4. 'game' → logprob: -4.67327880859375
    5. 'Game' → logprob: -4.92327880859375
    6. 'put' → logprob: -4.92327880859375
    7. 'play' → logprob: -5.42327880859375
    8. 'nings' → logprob: -5.42327880859375
    9. '[' → logprob: -6.17327880859375
    10. 'Play' → logprob: -6.92327880859375

Token 785: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2695430815219879
    2. '(' → logprob: -1.5195430517196655
    3. '(object' → logprob: -4.144543170928955
    4. ':
' → logprob: -6.644543170928955
    5. ' :' → logprob: -8.644542694091797
    6. '():' → logprob: -9.644542694091797
    7. ':

' → logprob: -11.144542694091797
    8. '_:' → logprob: -12.019542694091797
    9. 'Handler' → logprob: -12.144542694091797
    10. ' (' → logprob: -12.269542694091797

Token 786: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.25194936990737915
    2. ' object' → logprob: -1.5019493103027344
    3. '(object' → logprob: -11.001949310302734
    4. '	object' → logprob: -13.001949310302734
    5. ')object' → logprob: -13.876949310302734
    6. 'Object' → logprob: -16.501949310302734
    7. '   ' → logprob: -16.751949310302734
    8. '):
' → logprob: -16.751949310302734
    9. ')' → logprob: -16.876949310302734
    10. '_object' → logprob: -17.126949310302734

Token 787: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4925362169742584
    2. ' ):' → logprob: -1.242536187171936
    3. '):
' → logprob: -2.7425363063812256
    4. ' ):
' → logprob: -3.3675363063812256
    5. '(' → logprob: -7.1175360679626465
    6. ':' → logprob: -8.117536544799805
    7. ' )' → logprob: -9.492536544799805
    8. '):
' → logprob: -9.992536544799805
    9. '   ' → logprob: -10.242536544799805
    10. ')' → logprob: -10.492536544799805

Token 788: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008109898306429386
    2. 'def' → logprob: -5.008110046386719
    3. ' def' → logprob: -6.883110046386719
    4. '	def' → logprob: -8.008110046386719
    5. ':' → logprob: -10.883110046386719
    6. '(' → logprob: -11.258110046386719
    7. '   ' → logprob: -13.383110046386719
    8. ':def' → logprob: -13.633110046386719
    9. 'class' → logprob: -15.133110046386719
    10. '    
' → logprob: -15.258110046386719

Token 789: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6893913149833679
    2. ' def' → logprob: -0.8143913149833679
    3. 'def' → logprob: -3.1893913745880127
    4. 'class' → logprob: -4.314391136169434
    5. '	def' → logprob: -7.814391136169434
    6. ' class' → logprob: -8.814391136169434
    7. '    ' → logprob: -10.564391136169434
    8. '
' → logprob: -10.564391136169434
    9. '```' → logprob: -11.189391136169434
    10. '(' → logprob: -11.939391136169434

Token 790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027311507612466812
    2. 'def' → logprob: -4.277311325073242
    3. ' def' → logprob: -4.402311325073242
    4. 'class' → logprob: -7.277311325073242
    5. '	def' → logprob: -9.902311325073242
    6. '```' → logprob: -10.527311325073242
    7. ' ' → logprob: -11.527311325073242
    8. '    ' → logprob: -11.652311325073242
    9. '  ' → logprob: -11.652311325073242
    10. '"""' → logprob: -12.027311325073242

Token 791: ' Representation' (ID: 155197)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.05734442546963692
    2. 'def' → logprob: -2.932344436645508
    3. '   ' → logprob: -6.057344436645508
    4. '"""' → logprob: -10.057344436645508
    5. ' """' → logprob: -10.432344436645508
    6. ' """
' → logprob: -10.682344436645508
    7. '"""
' → logprob: -11.557344436645508
    8. 'class' → logprob: -11.932344436645508
    9. '    ' → logprob: -12.932344436645508
    10. ' ' → logprob: -13.307344436645508

Token 792: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.012951615266501904
    2. '   ' → logprob: -4.512951850891113
    3. 'of' → logprob: -6.387951850891113
    4. 'class' → logprob: -8.762951850891113
    5. '<|end|>' → logprob: -11.387951850891113
    6. '(' → logprob: -11.637951850891113
    7. ' ' → logprob: -11.637951850891113
    8. '
' → logprob: -11.762951850891113
    9. '<|end|>' → logprob: -11.762951850891113
    10. ' for' → logprob: -12.137951850891113

Token 793: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.21733874082565308
    2. ' a' → logprob: -1.8423388004302979
    3. 'a' → logprob: -3.467338800430298
    4. 'an' → logprob: -5.342338562011719
    5. ' the' → logprob: -7.717338562011719
    6. ' inning' → logprob: -8.967338562011719
    7. 'the' → logprob: -9.217338562011719
    8. 'inning' → logprob: -9.717338562011719
    9. ' innings' → logprob: -9.717338562011719
    10. '(' → logprob: -10.342338562011719

Token 794: ' inning' (ID: 70835)
  Prédit: ' inning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inning' → logprob: -0.18076099455356598
    2. 'inning' → logprob: -1.8057609796524048
    3. ' innings' → logprob: -7.180760860443115
    4. ' half' → logprob: -9.680761337280273
    5. 'In' → logprob: -9.805761337280273
    6. 'innings' → logprob: -9.930761337280273
    7. ' at' → logprob: -10.680761337280273
    8. ' In' → logprob: -11.305761337280273
    9. 'half' → logprob: -11.305761337280273
    10. ' baseball' → logprob: -11.430761337280273

Token 795: ' simulation' (ID: 30937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0177370309829712
    2. ':
' → logprob: -1.2677370309829712
    3. '   ' → logprob: -1.8927370309829712
    4. ':' → logprob: -2.1427369117736816
    5. '(object' → logprob: -3.1427369117736816
    6. '):
' → logprob: -3.7677369117736816
    7. ' (' → logprob: -5.642736911773682
    8. ' :
' → logprob: -5.767736911773682
    9. '<|end|>' → logprob: -5.892736911773682
    10. ',' → logprob: -6.017736911773682

Token 796: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5026156306266785
    2. '(' → logprob: -1.5026156902313232
    3. '   ' → logprob: -2.6276156902313232
    4. ':
' → logprob: -2.7526156902313232
    5. '):
' → logprob: -4.502615451812744
    6. '(object' → logprob: -4.627615451812744
    7. ',' → logprob: -5.377615451812744
    8. '():
' → logprob: -5.877615451812744
    9. '<|end|>' → logprob: -6.002615451812744
    10. ' (' → logprob: -6.377615451812744

Token 797: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027135726995766163
    2. '
' → logprob: -6.377713680267334
    3. '    
' → logprob: -8.002713203430176
    4. 'class' → logprob: -8.127713203430176
    5. ' def' → logprob: -8.752713203430176
    6. '    ' → logprob: -8.877713203430176
    7. ' class' → logprob: -10.752713203430176
    8. 'def' → logprob: -11.002713203430176
    9. '<|end|>' → logprob: -11.252713203430176
    10. ' 
' → logprob: -11.627713203430176

Token 798: ' Tracks' (ID: 114463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00563023192808032
    2. ' def' → logprob: -5.755630016326904
    3. 'class' → logprob: -6.380630016326904
    4. 'def' → logprob: -8.255630493164062
    5. ' class' → logprob: -8.380630493164062
    6. '    ' → logprob: -9.130630493164062
    7. '
' → logprob: -9.380630493164062
    8. '    
' → logprob: -10.005630493164062
    9. '```' → logprob: -11.130630493164062
    10. ' ' → logprob: -12.255630493164062

Token 799: ' outs' (ID: 34373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4924555718898773
    2. 'self' → logprob: -2.24245548248291
    3. ' self' → logprob: -2.49245548248291
    4. ' runs' → logprob: -2.86745548248291
    5. 'runs' → logprob: -2.99245548248291
    6. ' outs' → logprob: -3.61745548248291
    7. ' current' → logprob: -3.99245548248291
    8. ' the' → logprob: -4.36745548248291
    9. '       ' → logprob: -4.74245548248291
    10. ' number' → logprob: -4.99245548248291

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23481741547584534
    2. ' and' → logprob: -1.984817385673523
    3. '   ' → logprob: -2.9848175048828125
    4. ' ,' → logprob: -4.1098175048828125
    5. 'and' → logprob: -6.1098175048828125
    6. ',
' → logprob: -6.9848175048828125
    7. '.' → logprob: -7.4848175048828125
    8. 'count' → logprob: -8.234817504882812
    9. ':' → logprob: -8.484817504882812
    10. '(' → logprob: -8.484817504882812

Token 801: ' bases' (ID: 31148)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.04322286322712898
    2. ' runs' → logprob: -3.4182229042053223
    3. '   ' → logprob: -5.918222904205322
    4. 'bases' → logprob: -6.043222904205322
    5. ' runners' → logprob: -6.418222904205322
    6. 'self' → logprob: -7.168222904205322
    7. 'score' → logprob: -7.168222904205322
    8. ' bases' → logprob: -7.543222904205322
    9. '       ' → logprob: -8.543222427368164
    10. ' self' → logprob: -9.043222427368164

Token 802: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009576742304489017
    2. ' ,' → logprob: -7.250957489013672
    3. '   ' → logprob: -8.875957489013672
    4. 'and' → logprob: -10.125957489013672
    5. ',
' → logprob: -10.250957489013672
    6. ' and' → logprob: -11.125957489013672
    7. ' runners' → logprob: -12.000957489013672
    8. '.' → logprob: -12.500957489013672
    9. 's' → logprob: -14.000957489013672
    10. ',and' → logprob: -14.250957489013672

Token 803: ' and' (ID: 326)
  Prédit: ' runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.8305073976516724
    2. 'runs' → logprob: -0.8305073976516724
    3. ' and' → logprob: -2.205507278442383
    4. 'and' → logprob: -4.705507278442383
    5. ' score' → logprob: -5.580507278442383
    6. 'score' → logprob: -6.080507278442383
    7. '   ' → logprob: -6.705507278442383
    8. ' hits' → logprob: -7.330507278442383
    9. 'hits' → logprob: -8.955507278442383
    10. '_runs' → logprob: -8.955507278442383

Token 804: ' score' (ID: 8429)
  Prédit: ' runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.6400052905082703
    2. 'runs' → logprob: -0.7650052905082703
    3. ' score' → logprob: -5.390005111694336
    4. 'score' → logprob: -6.140005111694336
    5. '   ' → logprob: -8.515005111694336
    6. ' scores' → logprob: -9.140005111694336
    7. ' current' → logprob: -9.765005111694336
    8. '
' → logprob: -9.890005111694336
    9. 'scores' → logprob: -10.015005111694336
    10. '_runs' → logprob: -10.140005111694336

Token 805: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062477461993694305
    2. '(' → logprob: -3.0624773502349854
    3. '.' → logprob: -5.8124775886535645
    4. ',' → logprob: -5.8124775886535645
    5. '
' → logprob: -5.9374775886535645
    6. ':' → logprob: -5.9374775886535645
    7. ':
' → logprob: -7.1874775886535645
    8. '    
' → logprob: -7.5624775886535645
    9. '.
' → logprob: -7.6874775886535645
    10. 'def' → logprob: -8.562477111816406

Token 806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001559258671477437
    2. '
' → logprob: -6.501559257507324
    3. '    
' → logprob: -10.001559257507324
    4. ' def' → logprob: -12.001559257507324
    5. '    ' → logprob: -13.501559257507324
    6. 'def' → logprob: -13.626559257507324
    7. '<|end|>' → logprob: -14.501559257507324
    8. '	def' → logprob: -14.626559257507324
    9. '```' → logprob: -14.626559257507324
    10. ' 
' → logprob: -15.126559257507324

Token 807: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01982725039124489
    2. '
' → logprob: -4.019827365875244
    3. 'class' → logprob: -6.894827365875244
    4. '    
' → logprob: -7.769827365875244
    5. 'def' → logprob: -8.769826889038086
    6. ' def' → logprob: -10.269826889038086
    7. '```' → logprob: -11.394826889038086
    8. '    ' → logprob: -11.644826889038086
    9. ' 
' → logprob: -11.769826889038086
    10. ' class' → logprob: -11.894826889038086

Token 808: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013557136990129948
    2. ' def' → logprob: -7.3763556480407715
    3. 'def' → logprob: -7.5013556480407715
    4. 'class' → logprob: -8.75135612487793
    5. '
' → logprob: -11.87635612487793
    6. '	def' → logprob: -12.00135612487793
    7. ' class' → logprob: -13.00135612487793
    8. '    ' → logprob: -13.87635612487793
    9. '    
' → logprob: -14.37635612487793
    10. '```' → logprob: -14.50135612487793

Token 809: ' MAX' (ID: 16960)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08686492592096329
    2. ' def' → logprob: -2.586864948272705
    3. '   ' → logprob: -4.836864948272705
    4. '	def' → logprob: -11.961864471435547
    5. 'class' → logprob: -12.461864471435547
    6. '
' → logprob: -14.711864471435547
    7. '```' → logprob: -15.086864471435547
    8. ' ' → logprob: -15.336864471435547
    9. '    ' → logprob: -15.586864471435547
    10. '  ' → logprob: -15.961864471435547

Token 810: '_OUT' (ID: 25918)
  Prédit: '_OUT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_OUT' → logprob: -0.0019457722082734108
    2. '_out' → logprob: -6.751945972442627
    3. '_' → logprob: -7.251945972442627
    4. '_IN' → logprob: -11.626945495605469
    5. '_OT' → logprob: -11.626945495605469
    6. '_Out' → logprob: -11.876945495605469
    7. '```' → logprob: -12.001945495605469
    8. '_RUN' → logprob: -12.126945495605469
    9. '   ' → logprob: -12.126945495605469
    10. 'OUT' → logprob: -12.251945495605469

Token 811: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.8624639324116288e-06
    2. '=' → logprob: -14.000001907348633
    3. '	S' → logprob: -14.875001907348633
    4. '_S' → logprob: -15.750001907348633
    5. 'TS' → logprob: -16.000001907348633
    6. '```' → logprob: -16.375001907348633
    7. '_COUNT' → logprob: -16.625001907348633
    8. '   ' → logprob: -17.000001907348633
    9. '	' → logprob: -17.375001907348633
    10. ' =' → logprob: -17.750001907348633

Token 812: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519676387310028
    2. '=' → logprob: -1.5019676685333252
    3. '   ' → logprob: -10.501967430114746
    4. ' ' → logprob: -12.501967430114746
    5. '_' → logprob: -12.876967430114746
    6. '  ' → logprob: -13.251967430114746
    7. '    ' → logprob: -14.126967430114746
    8. '	' → logprob: -14.126967430114746
    9. ' =
' → logprob: -14.126967430114746
    10. ':' → logprob: -16.001968383789062

Token 813: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002476135268807411
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.50247573852539
    4. ' three' → logprob: -16.37747573852539
    5. '9' → logprob: -17.00247573852539
    6. '	' → logprob: -17.25247573852539
    7. '  ' → logprob: -17.87747573852539
    8. '```' → logprob: -18.12747573852539
    9. '     ' → logprob: -18.37747573852539
    10. '4' → logprob: -18.37747573852539

Token 814: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '9' → logprob: -16.500017166137695
    4. '4' → logprob: -20.125017166137695
    5. ' three' → logprob: -20.375017166137695
    6. '   ' → logprob: -20.750017166137695
    7. '۳' → logprob: -20.875017166137695
    8. '6' → logprob: -20.875017166137695
    9. '３' → logprob: -20.875017166137695
    10. '```' → logprob: -20.875017166137695

Token 815: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005414111539721489
    2. '   ' → logprob: -5.380414009094238
    3. '    
' → logprob: -7.505414009094238
    4. '<|end|>' → logprob: -9.380414009094238
    5. 'def' → logprob: -9.755414009094238
    6. '

' → logprob: -11.005414009094238
    7. ' 
' → logprob: -11.005414009094238
    8. ' def' → logprob: -11.130414009094238
    9. '
' → logprob: -11.380414009094238
    10. '	
' → logprob: -11.755414009094238

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12337818741798401
    2. 'def' → logprob: -2.248378276824951
    3. '
' → logprob: -5.373378276824951
    4. ' def' → logprob: -5.373378276824951
    5. '	def' → logprob: -7.373378276824951
    6. '    
' → logprob: -7.498378276824951
    7. '	
' → logprob: -11.248377799987793
    8. ' ' → logprob: -11.748377799987793
    9. '  
' → logprob: -12.248377799987793
    10. '    ' → logprob: -12.623377799987793

Token 817: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018376916646957397
    2. ' def' → logprob: -4.01837682723999
    3. '   ' → logprob: -8.393377304077148
    4. '	def' → logprob: -14.768377304077148
    5. ' ' → logprob: -15.393377304077148
    6. '
' → logprob: -16.64337730407715
    7. '  ' → logprob: -18.26837730407715
    8. 'class' → logprob: -18.39337730407715
    9. '    ' → logprob: -19.14337730407715
    10. '```' → logprob: -19.14337730407715

Token 818: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06209081411361694
    2. '__' → logprob: -2.8120908737182617
    3. '_init' → logprob: -9.562090873718262
    4. ' ' → logprob: -10.562090873718262
    5. ' def' → logprob: -11.312090873718262
    6. 'def' → logprob: -11.562090873718262
    7. 'init' → logprob: -12.812090873718262
    8. ' init' → logprob: -14.062090873718262
    9. ' ' → logprob: -14.687090873718262
    10. '_' → logprob: -14.937090873718262

Token 819: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -16.875
    3. 'int' → logprob: -18.125
    4. '_init' → logprob: -20.0
    5. '	init' → logprob: -20.25
    6. 'ini' → logprob: -21.0
    7. 'def' → logprob: -21.375
    8. '
' → logprob: -21.375
    9. 'in' → logprob: -21.5
    10. '```' → logprob: -21.5

Token 820: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16035756468772888
    2. '(' → logprob: -1.9103575944900513
    3. '__(
' → logprob: -9.785357475280762
    4. '(self' → logprob: -9.910357475280762
    5. '__' → logprob: -10.785357475280762
    6. '_(' → logprob: -12.535357475280762
    7. '__((' → logprob: -13.910357475280762
    8. ' (' → logprob: -14.285357475280762
    9. '__(*' → logprob: -14.660357475280762
    10. '__('' → logprob: -14.660357475280762

Token 821: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25194206833839417
    2. 'self' → logprob: -1.5019420385360718
    3. ' ' → logprob: -11.751941680908203
    4. '   ' → logprob: -13.126941680908203
    5. '	self' → logprob: -13.126941680908203
    6. ' ' → logprob: -14.626941680908203
    7. '
' → logprob: -15.126941680908203
    8. '(self' → logprob: -15.876941680908203
    9. '  ' → logprob: -16.376941680908203
    10. '       ' → logprob: -16.626941680908203

Token 822: ' ):
' (ID: 48169)
  Prédit: ' ):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):
' → logprob: -0.44152501225471497
    2. ' ):' → logprob: -1.1915249824523926
    3. '):
' → logprob: -3.3165249824523926
    4. '):' → logprob: -4.191524982452393
    5. ',' → logprob: -6.441524982452393
    6. ' )' → logprob: -8.94152545928955
    7. '):
' → logprob: -10.69152545928955
    8. '   ' → logprob: -11.06652545928955
    9. ' ' → logprob: -11.31652545928955
    10. '       ' → logprob: -12.56652545928955

Token 823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06264790147542953
    2. 'self' → logprob: -2.812647819519043
    3. ' self' → logprob: -7.437647819519043
    4. '   ' → logprob: -9.812647819519043
    5. '	self' → logprob: -11.062647819519043
    6. '	' → logprob: -11.187647819519043
    7. '	   ' → logprob: -13.437647819519043
    8. '(self' → logprob: -13.562647819519043
    9. ' ' → logprob: -13.937647819519043
    10. 'super' → logprob: -14.312647819519043

Token 824: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001987398136407137
    2. '       ' → logprob: -6.251987457275391
    3. ' self' → logprob: -9.75198745727539
    4. '	self' → logprob: -15.37698745727539
    5. 'super' → logprob: -15.62698745727539
    6. '
' → logprob: -16.37698745727539
    7. '   ' → logprob: -16.62698745727539
    8. '(self' → logprob: -16.87698745727539
    9. 'def' → logprob: -18.25198745727539
    10. '```' → logprob: -18.50198745727539

Token 825: '.b' (ID: 1292)
  Prédit: '.out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.009101863950490952
    2. '.b' → logprob: -5.259101867675781
    3. '.score' → logprob: -6.009101867675781
    4. '.' → logprob: -7.134101867675781
    5. ' .' → logprob: -8.009101867675781
    6. '.current' → logprob: -9.259101867675781
    7. 'outs' → logprob: -10.009101867675781
    8. '.bas' → logprob: -10.634101867675781
    9. '.in' → logprob: -10.759101867675781
    10. '._' → logprob: -10.884101867675781

Token 826: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.004645742010325193
    2. 'ase' → logprob: -5.379645824432373
    3. 'atter' → logprob: -11.879645347595215
    4. 'outs' → logprob: -12.629645347595215
    5. 'as' → logprob: -12.879645347595215
    6. 'aser' → logprob: -13.004645347595215
    7. 'ased' → logprob: -13.004645347595215
    8. 'a' → logprob: -13.754645347595215
    9. 'alls' → logprob: -13.879645347595215
    10. 'ats' → logprob: -14.254645347595215

Token 827: '_manager' (ID: 27735)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367140144109726
    2. '=' → logprob: -3.4086713790893555
    3. '_manager' → logprob: -10.783671379089355
    4. ' =
' → logprob: -13.658671379089355
    5. ' ' → logprob: -14.033671379089355
    6. '    ' → logprob: -14.033671379089355
    7. 'Manager' → logprob: -14.283671379089355
    8. '   ' → logprob: -14.408671379089355
    9. 'manager' → logprob: -14.533671379089355
    10. '  ' → logprob: -16.158672332763672

Token 828: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759632587432861
    2. ' =' → logprob: -0.8259632587432861
    3. '   ' → logprob: -10.950963020324707
    4. '    ' → logprob: -12.450963020324707
    5. '	' → logprob: -13.950963020324707
    6. ' ' → logprob: -14.450963020324707
    7. '       ' → logprob: -15.075963020324707
    8. '  ' → logprob: -15.200963020324707
    9. '        ' → logprob: -15.700963020324707
    10. '(' → logprob: -17.075963973999023

Token 829: ' Bases' (ID: 194177)
  Prédit: 'Bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bases' → logprob: -0.061980459839105606
    2. ' Bases' → logprob: -2.8119804859161377
    3. 'B' → logprob: -11.561980247497559
    4. 'Bas' → logprob: -13.186980247497559
    5. 'Base' → logprob: -13.936980247497559
    6. '	B' → logprob: -15.436980247497559
    7. 'bases' → logprob: -16.436981201171875
    8. ' bases' → logprob: -17.061981201171875
    9. 'Basis' → logprob: -18.061981201171875
    10. '   ' → logprob: -18.686981201171875

Token 830: 'Manager' (ID: 2774)
  Prédit: 'Manager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -2.8921695047756657e-05
    2. '_manager' → logprob: -10.625028610229492
    3. '()' → logprob: -13.250028610229492
    4. '_Manager' → logprob: -13.750028610229492
    5. '(' → logprob: -13.875028610229492
    6. 'manager' → logprob: -15.250028610229492
    7. 'M' → logprob: -16.500028610229492
    8. '_' → logprob: -16.500028610229492
    9. '()
' → logprob: -16.875028610229492
    10. '   ' → logprob: -17.000028610229492

Token 831: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1277744621038437
    2. '()' → logprob: -2.127774477005005
    3. '(' → logprob: -7.377774238586426
    4. '       ' → logprob: -8.752774238586426
    5. '()
' → logprob: -10.377774238586426
    6. '(
' → logprob: -11.252774238586426
    7. '
' → logprob: -11.752774238586426
    8. '()

' → logprob: -12.502774238586426
    9. '   ' → logprob: -12.877774238586426
    10. '()\' → logprob: -13.377774238586426

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3893800675868988
    2. 'self' → logprob: -1.1393800973892212
    3. ' self' → logprob: -7.014379978179932
    4. '	' → logprob: -7.639379978179932
    5. '
' → logprob: -7.639379978179932
    6. '	self' → logprob: -7.889379978179932
    7. '   ' → logprob: -8.26438045501709
    8. '```' → logprob: -12.26438045501709
    9. ' ' → logprob: -13.51438045501709
    10. '	   ' → logprob: -13.76438045501709

Token 833: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.8670179997570813e-05
    2. ' self' → logprob: -11.375019073486328
    3. '       ' → logprob: -12.000019073486328
    4. '
' → logprob: -13.875019073486328
    5. '	self' → logprob: -17.375019073486328
    6. '   ' → logprob: -18.500019073486328
    7. 's' → logprob: -18.750019073486328
    8. '        
' → logprob: -19.000019073486328
    9. '
' → logprob: -19.500019073486328
    10. 'super' → logprob: -20.250019073486328

Token 834: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.03950510174036026
    2. '.score' → logprob: -3.2895050048828125
    3. '.' → logprob: -7.4145050048828125
    4. '.current' → logprob: -8.289505004882812
    5. ' .' → logprob: -9.164505004882812
    6. '._' → logprob: -9.289505004882812
    7. 'outs' → logprob: -9.539505004882812
    8. '.total' → logprob: -9.789505004882812
    9. '.outputs' → logprob: -9.789505004882812
    10. '.num' → logprob: -10.039505004882812

Token 835: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.896309739408025e-07
    2. '_count' → logprob: -14.500000953674316
    3. 'count' → logprob: -15.250000953674316
    4. '=' → logprob: -18.0
    5. 'outs' → logprob: -18.625
    6. '_' → logprob: -18.875
    7. ' s' → logprob: -19.0
    8. '_s' → logprob: -19.25
    9. '	s' → logprob: -19.5
    10. '_counts' → logprob: -19.75

Token 836: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ' ' → logprob: -17.099077224731445
    4. '	' → logprob: -17.724077224731445
    5. 's' → logprob: -17.849077224731445
    6. '_' → logprob: -19.099077224731445
    7. ' +=' → logprob: -19.099077224731445
    8. '＝' → logprob: -19.224077224731445
    9. '_=' → logprob: -19.224077224731445
    10. ' =
' → logprob: -19.349077224731445

Token 837: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.125085830688477
    4. '
' → logprob: -18.250085830688477
    5. '	' → logprob: -18.375085830688477
    6. '۰' → logprob: -18.375085830688477
    7. '０' → logprob: -19.125085830688477
    8. ' ' → logprob: -19.437585830688477
    9. ' 
' → logprob: -20.000085830688477
    10. '       ' → logprob: -20.000085830688477

Token 838: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -17.06250762939453
    4. '０' → logprob: -18.62500762939453
    5. '   ' → logprob: -18.75000762939453
    6. '(' → logprob: -19.00000762939453
    7. 'zero' → logprob: -19.06250762939453
    8. '
' → logprob: -19.18750762939453
    9. '<|end|>' → logprob: -19.18750762939453
    10. '000' → logprob: -19.25000762939453

Token 839: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27473825216293335
    2. '<|end|>' → logprob: -1.6497383117675781
    3. '   ' → logprob: -3.274738311767578
    4. '
' → logprob: -5.024738311767578
    5. 'self' → logprob: -6.899738311767578
    6. '<|end|>' → logprob: -7.024738311767578
    7. ' ' → logprob: -7.399738311767578
    8. '```' → logprob: -8.024738311767578
    9. '    
' → logprob: -8.274738311767578
    10. '        
' → logprob: -9.024738311767578

Token 841: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.3458322731312364e-06
    2. '       ' → logprob: -12.250007629394531
    3. ' self' → logprob: -13.375007629394531
    4. '
' → logprob: -14.000007629394531
    5. '	self' → logprob: -17.37500762939453
    6. '        
' → logprob: -17.62500762939453
    7. '   ' → logprob: -19.12500762939453
    8. '<|end|>' → logprob: -19.87500762939453
    9. '#' → logprob: -20.75000762939453
    10. 's' → logprob: -20.87500762939453

Token 842: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.03030078113079071
    2. '.' → logprob: -3.5303008556365967
    3. ' .' → logprob: -8.155301094055176
    4. '.total' → logprob: -10.030301094055176
    5. 'score' → logprob: -10.155301094055176
    6. '.points' → logprob: -10.655301094055176
    7. '.s' → logprob: -10.780301094055176
    8. '.Score' → logprob: -10.780301094055176
    9. '.sc' → logprob: -11.155301094055176
    10. '.run' → logprob: -11.280301094055176

Token 843: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141372084617615
    2. '=' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.951414108276367
    4. ' =
' → logprob: -16.201414108276367
    5. ' +=' → logprob: -16.201414108276367
    6. '<|end|>' → logprob: -16.201414108276367
    7. '_' → logprob: -17.451414108276367
    8. 's' → logprob: -17.701414108276367
    9. '_=' → logprob: -17.951414108276367
    10. '=
' → logprob: -18.576414108276367

Token 844: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. ' ' → logprob: -20.001171112060547
    4. '۰' → logprob: -20.626171112060547
    5. '   ' → logprob: -21.001171112060547
    6. '	' → logprob: -21.126171112060547
    7. '00' → logprob: -21.626171112060547
    8. ' ' → logprob: -22.501171112060547
    9. '  ' → logprob: -22.501171112060547
    10. '000' → logprob: -22.501171112060547

Token 845: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '<|end|>' → logprob: -19.875036239624023
    4. '00' → logprob: -20.000036239624023
    5. '۰' → logprob: -20.375036239624023
    6. '000' → logprob: -20.750036239624023
    7. '   ' → logprob: -21.000036239624023
    8. '  ' → logprob: -22.250036239624023
    9. '	' → logprob: -22.875036239624023
    10. '０' → logprob: -22.875036239624023

Token 846: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0693449005484581
    2. '<|end|>' → logprob: -3.069344997406006
    3. '   ' → logprob: -4.069344997406006
    4. '<|end|>' → logprob: -6.444344997406006
    5. '    
' → logprob: -7.194344997406006
    6. 'def' → logprob: -7.569344997406006
    7. '

' → logprob: -7.819344997406006
    8. ' def' → logprob: -10.069344520568848
    9. '```' → logprob: -10.694344520568848
    10. '	def' → logprob: -10.819344520568848

Token 847: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.302198588848114
    2. '   ' → logprob: -1.5521986484527588
    3. '<|end|>' → logprob: -3.177198648452759
    4. '    
' → logprob: -5.67719841003418
    5. '<|end|>' → logprob: -6.67719841003418
    6. 'def' → logprob: -7.30219841003418
    7. '	def' → logprob: -8.05219841003418
    8. ' def' → logprob: -8.17719841003418
    9. '

' → logprob: -8.30219841003418
    10. '```' → logprob: -8.55219841003418

Token 848: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5133662223815918
    2. 'def' → logprob: -1.5133662223815918
    3. '<|end|>' → logprob: -1.8883662223815918
    4. '   ' → logprob: -4.388366222381592
    5. ' def' → logprob: -4.513366222381592
    6. '	def' → logprob: -5.763366222381592
    7. '<|end|>' → logprob: -6.013366222381592
    8. '

' → logprob: -7.763366222381592
    9. '    
' → logprob: -8.13836669921875
    10. '```' → logprob: -9.01336669921875

Token 849: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29511526226997375
    2. '.in' → logprob: -2.2951152324676514
    3. '.current' → logprob: -3.0451152324676514
    4. '.pitch' → logprob: -4.1701154708862305
    5. '.b' → logprob: -4.2951154708862305
    6. '.is' → logprob: -4.5451154708862305
    7. '.events' → logprob: -4.6701154708862305
    8. '.base' → logprob: -4.9201154708862305
    9. '._' → logprob: -5.0451154708862305
    10. '.h' → logprob: -5.4201154708862305

Token 850: 'ended' (ID: 3933)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6594778299331665
    2. 'inning' → logprob: -1.7844778299331665
    3. 'r' → logprob: -2.409477710723877
    4. 'event' → logprob: -3.034477710723877
    5. 'half' → logprob: -3.159477710723877
    6. 'at' → logprob: -3.284477710723877
    7. 'events' → logprob: -4.159477710723877
    8. 'b' → logprob: -4.284477710723877
    9. 'runs' → logprob: -4.284477710723877
    10. 'is' → logprob: -4.409477710723877

Token 851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890751957893372
    2. ' =' → logprob: -2.5789074897766113
    3. '=False' → logprob: -11.20390796661377
    4. '_' → logprob: -13.07890796661377
    5. '=True' → logprob: -13.82890796661377
    6. '=
' → logprob: -15.32890796661377
    7. 'False' → logprob: -15.45390796661377
    8. ' ' → logprob: -15.45390796661377
    9. '_=' → logprob: -15.70390796661377
    10. ' =
' → logprob: -16.078907012939453

Token 852: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.575939953327179
    2. ' False' → logprob: -0.825939953327179
    3. ' True' → logprob: -15.075940132141113
    4. 'True' → logprob: -15.575940132141113
    5. '(False' → logprob: -16.575939178466797
    6. '=False' → logprob: -18.950939178466797
    7. '   ' → logprob: -20.450939178466797
    8. '.False' → logprob: -21.825939178466797
    9. '_false' → logprob: -22.325939178466797
    10. 'F' → logprob: -22.450939178466797

Token 853: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3871462047100067
    2. '<|end|>' → logprob: -1.637146234512329
    3. '   ' → logprob: -2.137146234512329
    4. '    
' → logprob: -5.51214599609375
    5. '<|end|>' → logprob: -6.26214599609375
    6. 'def' → logprob: -6.88714599609375
    7. '

' → logprob: -7.38714599609375
    8. ' def' → logprob: -8.76214599609375
    9. ' 
' → logprob: -9.01214599609375
    10. '	def' → logprob: -9.38714599609375

Token 854: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20912665128707886
    2. '   ' → logprob: -1.7091267108917236
    3. '    
' → logprob: -5.5841264724731445
    4. 'def' → logprob: -6.7091264724731445
    5. ' def' → logprob: -7.3341264724731445
    6. '<|end|>' → logprob: -7.3341264724731445
    7. '	def' → logprob: -7.7091264724731445
    8. ' 
' → logprob: -8.584126472473145
    9. '	
' → logprob: -9.209126472473145
    10. '\n' → logprob: -9.334126472473145

Token 855: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0025160887744277716
    2. ' def' → logprob: -6.252516269683838
    3. '   ' → logprob: -7.502516269683838
    4. '	def' → logprob: -10.50251579284668
    5. '
' → logprob: -12.00251579284668
    6. '    
' → logprob: -13.75251579284668
    7. ' ' → logprob: -14.37751579284668
    8. ' 
' → logprob: -16.50251579284668
    9. '@' → logprob: -17.00251579284668
    10. '  
' → logprob: -17.12751579284668

Token 856: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.39992818236351013
    2. 'add' → logprob: -2.274928092956543
    3. 'record' → logprob: -2.774928092956543
    4. 'advance' → logprob: -3.024928092956543
    5. ' process' → logprob: -3.774928092956543
    6. 'at' → logprob: -3.774928092956543
    7. 'play' → logprob: -4.149928092956543
    8. ' add' → logprob: -4.649928092956543
    9. 'bat' → logprob: -4.899928092956543
    10. ' record' → logprob: -5.149928092956543

Token 857: '_event' (ID: 14884)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2901567220687866
    2. '_event' → logprob: -1.9151567220687866
    3. '_' → logprob: -2.790156841278076
    4. '_hit' → logprob: -4.665156841278076
    5. '_ball' → logprob: -4.790156841278076
    6. '_play' → logprob: -4.915156841278076
    7. '_at' → logprob: -4.915156841278076
    8. '_line' → logprob: -6.165156841278076
    9. '_token' → logprob: -6.540156841278076
    10. '_step' → logprob: -6.790156841278076

Token 858: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009149204124696553
    2. '(self' → logprob: -7.000915050506592
    3. '(
' → logprob: -13.250914573669434
    4. ' (' → logprob: -13.375914573669434
    5. 'self' → logprob: -16.87591552734375
    6. '(

' → logprob: -17.75091552734375
    7. '_(' → logprob: -18.12591552734375
    8. '_' → logprob: -18.50091552734375
    9. '(event' → logprob: -19.00091552734375
    10. '_event' → logprob: -19.00091552734375

Token 859: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02631469815969467
    2. 'self' → logprob: -3.6513147354125977
    3. '	self' → logprob: -11.901314735412598
    4. ' ' → logprob: -13.026314735412598
    5. ' event' → logprob: -13.401314735412598
    6. '(self' → logprob: -13.651314735412598
    7. ' ' → logprob: -13.776314735412598
    8. ')' → logprob: -13.901314735412598
    9. ' )' → logprob: -15.651314735412598
    10. 'event' → logprob: -15.901314735412598

Token 860: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015299785882234573
    2. ' ,' → logprob: -6.501530170440674
    3. '(' → logprob: -11.001529693603516
    4. 'self' → logprob: -12.001529693603516
    5. ' )' → logprob: -13.876529693603516
    6. ' ' → logprob: -14.126529693603516
    7. ',self' → logprob: -14.251529693603516
    8. '_,' → logprob: -14.376529693603516
    9. ',event' → logprob: -14.751529693603516
    10. '_' → logprob: -14.876529693603516

Token 861: ' event' (ID: 2104)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.6326277852058411
    2. ' event' → logprob: -0.7576277852058411
    3. 'evt' → logprob: -11.882627487182617
    4. '	event' → logprob: -12.132627487182617
    5. ' ' → logprob: -12.257627487182617
    6. 'ev' → logprob: -12.507627487182617
    7. ' ev' → logprob: -13.007627487182617
    8. ' evt' → logprob: -13.382627487182617
    9. '   ' → logprob: -14.257627487182617
    10. '
' → logprob: -15.007627487182617

Token 862: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7462692260742188
    2. ' ):' → logprob: -0.7462692260742188
    3. '):
' → logprob: -3.4962692260742188
    4. ' ):
' → logprob: -3.9962692260742188
    5. ' )' → logprob: -6.496269226074219
    6. ':' → logprob: -6.746269226074219
    7. ')' → logprob: -8.246269226074219
    8. ' ' → logprob: -10.621269226074219
    9. '   ' → logprob: -10.871269226074219
    10. '):
' → logprob: -11.246269226074219

Token 863: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9798777103424072
    2. '       ' → logprob: -1.3548777103424072
    3. '(' → logprob: -1.4798777103424072
    4. '   ' → logprob: -2.6048777103424072
    5. ':
' → logprob: -3.9798777103424072
    6. '(
' → logprob: -4.479877471923828
    7. '    
' → logprob: -4.854877471923828
    8. '        
' → logprob: -5.354877471923828
    9. ' 
' → logprob: -5.479877471923828
    10. '():' → logprob: -5.979877471923828

Token 864: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09291484951972961
    2. ' 
' → logprob: -3.7179148197174072
    3. ' if' → logprob: -3.9679148197174072
    4. '        
' → logprob: -4.092915058135986
    5. '   ' → logprob: -4.467915058135986
    6. '
' → logprob: -5.467915058135986
    7. '    
' → logprob: -5.592915058135986
    8. '    ' → logprob: -6.842915058135986
    9. '  
' → logprob: -7.092915058135986
    10. 'if' → logprob: -7.217915058135986

Token 865: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025818530470132828
    2. ' 
' → logprob: -4.400818347930908
    3. '_' → logprob: -5.650818347930908
    4. '    ' → logprob: -5.775818347930908
    5. '(' → logprob: -6.650818347930908
    6. '   ' → logprob: -7.525818347930908
    7. '       ' → logprob: -7.650818347930908
    8. '  
' → logprob: -7.650818347930908
    9. '<|end|>' → logprob: -7.900818347930908
    10. '        ' → logprob: -8.025818824768066

Token 866: ' Process' (ID: 12482)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20170782506465912
    2. ' event' → logprob: -2.0767078399658203
    3. '       ' → logprob: -3.3267078399658203
    4. 'if' → logprob: -4.32670783996582
    5. 'event' → logprob: -4.95170783996582
    6. '   ' → logprob: -8.07670783996582
    7. ' ' → logprob: -9.32670783996582
    8. ' """' → logprob: -9.45170783996582
    9. ' 
' → logprob: -9.45170783996582
    10. ' tokens' → logprob: -9.57670783996582

Token 867: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09428192675113678
    2. ' 
' → logprob: -2.7192819118499756
    3. '    ' → logprob: -4.969282150268555
    4. '_' → logprob: -5.969282150268555
    5. ' ' → logprob: -6.219282150268555
    6. ''' → logprob: -6.469282150268555
    7. '"' → logprob: -6.594282150268555
    8. '<|end|>' → logprob: -6.594282150268555
    9. '     
' → logprob: -7.094282150268555
    10. ' self' → logprob: -7.094282150268555

Token 868: ' single' (ID: 4590)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5173534154891968
    2. ' ' → logprob: -1.6423534154891968
    3. ' 
' → logprob: -2.6423535346984863
    4. ' event' → logprob: -3.7673535346984863
    5. ' n' → logprob: -3.7673535346984863
    6. ' single' → logprob: -3.7673535346984863
    7. ' space' → logprob: -4.017353534698486
    8. ' run' → logprob: -4.642353534698486
    9. 'space' → logprob: -5.142353534698486
    10. 's' → logprob: -5.517353534698486

Token 869: ' event' (ID: 2104)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5830897092819214
    2. ' event' → logprob: -1.0830897092819214
    3. ' token' → logprob: -2.458089828491211
    4. ' 
' → logprob: -5.208089828491211
    5. 'token' → logprob: -5.833089828491211
    6. ' space' → logprob: -5.958089828491211
    7. 'event' → logprob: -6.208089828491211
    8. '  
' → logprob: -7.583089828491211
    9. ' ' → logprob: -7.708089828491211
    10. '_' → logprob: -7.958089828491211

Token 870: ' and' (ID: 326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004697595722973347
    2. '_' → logprob: -6.379697799682617
    3. '(
' → logprob: -6.379697799682617
    4. ':' → logprob: -7.379697799682617
    5. ' (' → logprob: -8.754697799682617
    6. ',' → logprob: -9.004697799682617
    7. '   ' → logprob: -9.129697799682617
    8. '(self' → logprob: -9.504697799682617
    9. ')' → logprob: -10.004697799682617
    10. '       ' → logprob: -10.379697799682617

Token 871: ' update' (ID: 4027)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.265623688697815
    2. '       ' → logprob: -1.890623688697815
    3. ' run' → logprob: -2.6406235694885254
    4. ' ' → logprob: -2.6406235694885254
    5. ' ' → logprob: -2.7656235694885254
    6. ' pass' → logprob: -3.0156235694885254
    7. '<|end|>' → logprob: -3.0156235694885254
    8. ' result' → logprob: -3.2656235694885254
    9. ' 
' → logprob: -3.3906235694885254
    10. ' self' → logprob: -3.6406235694885254

Token 872: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.09643887728452682
    2. 'self' → logprob: -2.7214388847351074
    3. ' the' → logprob: -3.7214388847351074
    4. ' event' → logprob: -6.971438884735107
    5. 'the' → logprob: -7.471438884735107
    6. ' ' → logprob: -8.72143840789795
    7. ' 
' → logprob: -9.22143840789795
    8. '        
' → logprob: -9.84643840789795
    9. 'event' → logprob: -10.09643840789795
    10. '(self' → logprob: -11.22143840789795

Token 873: ' inning' (ID: 70835)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -1.2292672395706177
    2. ' code' → logprob: -1.4792672395706177
    3. ' state' → logprob: -1.6042672395706177
    4. 'score' → logprob: -2.104267120361328
    5. ' run' → logprob: -3.729267120361328
    6. 'state' → logprob: -3.854267120361328
    7. ' if' → logprob: -4.104267120361328
    8. '   ' → logprob: -4.229267120361328
    9. ' game' → logprob: -4.354267120361328
    10. 'innings' → logprob: -4.729267120361328

Token 874: ' state' (ID: 2608)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05816422402858734
    2. '   ' → logprob: -3.558164119720459
    3. '(
' → logprob: -5.058164119720459
    4. '
' → logprob: -5.433164119720459
    5. '       ' → logprob: -5.558164119720459
    6. '_' → logprob: -5.808164119720459
    7. '(self' → logprob: -5.933164119720459
    8. ' (' → logprob: -6.433164119720459
    9. '        
' → logprob: -6.433164119720459
    10. 'self' → logprob: -7.808164119720459

Token 875: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7033222913742065
    2. '(' → logprob: -0.9533222913742065
    3. ':' → logprob: -2.578322410583496
    4. ',' → logprob: -4.578322410583496
    5. '        
' → logprob: -4.953322410583496
    6. '   ' → logprob: -5.078322410583496
    7. ':
' → logprob: -5.078322410583496
    8. '.' → logprob: -5.453322410583496
    9. '(
' → logprob: -5.578322410583496
    10. '
' → logprob: -6.953322410583496

Token 876: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09793335944414139
    2. '   ' → logprob: -3.222933292388916
    3. '        
' → logprob: -3.472933292388916
    4. '    
' → logprob: -4.222933292388916
    5. ' 
' → logprob: -5.972933292388916
    6. '    ' → logprob: -6.847933292388916
    7. '  
' → logprob: -7.472933292388916
    8. '
' → logprob: -7.597933292388916
    9. '     
' → logprob: -7.847933292388916
    10. '```' → logprob: -8.222933769226074

Token 877: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03198971599340439
    2. '        
' → logprob: -4.156989574432373
    3. ' 
' → logprob: -4.531989574432373
    4. '\n' → logprob: -7.031989574432373
    5. '    
' → logprob: -7.156989574432373
    6. '
' → logprob: -7.281989574432373
    7. '   ' → logprob: -7.406989574432373
    8. '```' → logprob: -7.781989574432373
    9. '  
' → logprob: -8.531990051269531
    10. '        ' → logprob: -8.531990051269531

Token 878: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5647050142288208
    2. ' None' → logprob: -1.0647050142288208
    3. ' False' → logprob: -3.1897048950195312
    4. '0' → logprob: -3.6897048950195312
    5. ' True' → logprob: -4.939704895019531
    6. 'None' → logprob: -5.064704895019531
    7. 'False' → logprob: -5.314704895019531
    8. ' (' → logprob: -8.314704895019531
    9. 'True' → logprob: -8.314704895019531
    10. ' runs' → logprob: -8.314704895019531

Token 879: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47616350650787354
    2. ',' → logprob: -1.7261635065078735
    3. ' for' → logprob: -2.476163387298584
    4. '<|end|>' → logprob: -2.601163387298584
    5. ' ,' → logprob: -3.351163387298584
    6. ' ' → logprob: -5.601163387298584
    7. '
' → logprob: -6.851163387298584
    8. 'if' → logprob: -6.976163387298584
    9. 'for' → logprob: -8.226163864135742
    10. ' 
' → logprob: -8.351163864135742

Token 880: ' inning' (ID: 70835)
  Prédit: ' event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.14805375039577484
    2. ' self' → logprob: -2.3980536460876465
    3. ' True' → logprob: -3.5230536460876465
    4. 'event' → logprob: -4.7730536460876465
    5. ' not' → logprob: -5.2730536460876465
    6. ' False' → logprob: -6.3980536460876465
    7. 'self' → logprob: -6.7730536460876465
    8. 'True' → logprob: -7.3980536460876465
    9. 'False' → logprob: -9.273054122924805
    10. ' None' → logprob: -10.148054122924805

Token 881: ' ended' (ID: 15092)
  Prédit: ' completed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' completed' → logprob: -0.6172363758087158
    2. '_completed' → logprob: -1.7422363758087158
    3. ' is' → logprob: -2.367236375808716
    4. ' has' → logprob: -3.117236375808716
    5. '<|end|>' → logprob: -3.617236375808716
    6. ' was' → logprob: -4.242236137390137
    7. ' ended' → logprob: -4.242236137390137
    8. ' continues' → logprob: -4.492236137390137
    9. '_finished' → logprob: -4.492236137390137
    10. '_' → logprob: -4.992236137390137

Token 882: ' due' (ID: 5192)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009577230550348759
    2. ',
' → logprob: -5.13457727432251
    3. ' ,' → logprob: -6.13457727432251
    4. '.' → logprob: -7.50957727432251
    5. '       ' → logprob: -8.259576797485352
    6. '
' → logprob: -8.509576797485352
    7. '<|end|>' → logprob: -8.759576797485352
    8. '(' → logprob: -10.009576797485352
    9. '   ' → logprob: -10.259576797485352
    10. ' for' → logprob: -10.509576797485352

Token 883: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2203291654586792
    2. ' to' → logprob: -1.7203291654586792
    3. '_to' → logprob: -4.095329284667969
    4. '_' → logprob: -7.095329284667969
    5. '   ' → logprob: -7.970329284667969
    6. ' ' → logprob: -8.595329284667969
    7. '```' → logprob: -8.595329284667969
    8. '       ' → logprob: -9.220329284667969
    9. 'space' → logprob: -9.595329284667969
    10. '=' → logprob: -9.970329284667969

Token 884: ' ' (ID: 220)
  Prédit: ' event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.054594263434410095
    2. 'event' → logprob: -3.0545942783355713
    3. ' self' → logprob: -5.429594039916992
    4. 'out' → logprob: -7.304594039916992
    5. 'self' → logprob: -7.554594039916992
    6. ' out' → logprob: -9.054594039916992
    7. ' space' → logprob: -9.679594039916992
    8. '(event' → logprob: -9.679594039916992
    9. ' the' → logprob: -10.679594039916992
    10. ' a' → logprob: -10.804594039916992

Token 885: '3' (ID: 18)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14625751972198486
    2. ' self' → logprob: -2.6462574005126953
    3. 'event' → logprob: -2.8962574005126953
    4. ' event' → logprob: -4.646257400512695
    5. 'out' → logprob: -8.146257400512695
    6. '
' → logprob: -11.021257400512695
    7. ' out' → logprob: -12.646257400512695
    8. '(event' → logprob: -12.896257400512695
    9. 'True' → logprob: -13.521257400512695
    10. '(self' → logprob: -13.521257400512695

Token 886: ' outs' (ID: 34373)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1784359216690063
    2. '_out' → logprob: -1.3034359216690063
    3. 'outs' → logprob: -1.6784359216690063
    4. ' outs' → logprob: -2.178435802459717
    5. '<|end|>' → logprob: -3.428435802459717
    6. ' _' → logprob: -3.553435802459717
    7. 'out' → logprob: -3.803435802459717
    8. ' out' → logprob: -4.178435802459717
    9. '   ' → logprob: -5.178435802459717
    10. '
' → logprob: -5.428435802459717

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027364395558834076
    2. ',
' → logprob: -4.152364253997803
    3. '.' → logprob: -5.152364253997803
    4. '       ' → logprob: -5.652364253997803
    5. '
' → logprob: -7.777364253997803
    6. ' ,' → logprob: -7.777364253997803
    7. '   ' → logprob: -8.277364730834961
    8. ':
' → logprob: -8.402364730834961
    9. '.
' → logprob: -8.777364730834961
    10. ':' → logprob: -9.027364730834961

Token 888: ' else' (ID: 1203)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.15173262357711792
    2. 'False' → logprob: -2.0267326831817627
    3. ' 
' → logprob: -4.776732444763184
    4. '
' → logprob: -8.651732444763184
    5. ' ' → logprob: -9.151732444763184
    6. ' return' → logprob: -9.526732444763184
    7. ' None' → logprob: -9.901732444763184
    8. ' else' → logprob: -10.026732444763184
    9. ' and' → logprob: -10.651732444763184
    10. '        ' → logprob: -11.276732444763184

Token 889: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.04593474417924881
    2. 'False' → logprob: -3.1709346771240234
    3. ' None' → logprob: -6.045934677124023
    4. ' True' → logprob: -7.795934677124023
    5. 'None' → logprob: -9.545934677124023
    6. ' ' → logprob: -9.920934677124023
    7. ' ' → logprob: -11.545934677124023
    8. 'True' → logprob: -11.670934677124023
    9. ' space' → logprob: -13.045934677124023
    10. ' 
' → logprob: -13.045934677124023

Token 890: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5988124012947083
    2. '
' → logprob: -1.3488123416900635
    3. '        
' → logprob: -1.9738123416900635
    4. ',' → logprob: -3.7238123416900635
    5. ':
' → logprob: -4.973812580108643
    6. ',
' → logprob: -5.598812580108643
    7. '.' → logprob: -5.598812580108643
    8. '    
' → logprob: -5.973812580108643
    9. ':' → logprob: -6.098812580108643
    10. '\n' → logprob: -6.223812580108643

Token 891: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15301400423049927
    2. '        
' → logprob: -2.6530139446258545
    3. '    
' → logprob: -3.5280139446258545
    4. '   ' → logprob: -3.7780139446258545
    5. '
' → logprob: -5.028014183044434
    6. ' 
' → logprob: -6.153014183044434
    7. '	' → logprob: -6.778014183044434
    8. '     
' → logprob: -6.778014183044434
    9. '  
' → logprob: -6.903014183044434
    10. '\n' → logprob: -6.903014183044434

Token 892: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27872535586357117
    2. '
' → logprob: -1.5287253856658936
    3. '        
' → logprob: -4.2787251472473145
    4. '```' → logprob: -4.7787251472473145
    5. '    
' → logprob: -6.6537251472473145
    6. ' 
' → logprob: -7.0287251472473145
    7. '   ' → logprob: -7.1537251472473145
    8. ' if' → logprob: -8.153725624084473
    9. '<|end|>' → logprob: -8.653725624084473
    10. 'if' → logprob: -9.028725624084473

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4895904064178467
    2. '   ' → logprob: -2.2395904064178467
    3. '    
' → logprob: -2.2395904064178467
    4. '        
' → logprob: -2.3645904064178467
    5. '
' → logprob: -3.1145904064178467
    6. ' if' → logprob: -4.364590644836426
    7. ' 
' → logprob: -4.489590644836426
    8. '     
' → logprob: -5.739590644836426
    9. 'if' → logprob: -6.364590644836426
    10. '  
' → logprob: -6.614590644836426

Token 894: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4909472167491913
    2. 'if' (adapté à ' if') → logprob: -0.9909472465515137
    3. '       ' → logprob: -4.115947246551514
    4. '
' → logprob: -8.990946769714355
    5. 'event' → logprob: -9.490946769714355
    6. '        
' → logprob: -10.240946769714355
    7. '   ' → logprob: -10.240946769714355
    8. '	if' → logprob: -10.615946769714355
    9. ' 
' → logprob: -10.740946769714355
    10. 'runs' → logprob: -10.865946769714355

Token 895: ' self' (ID: 1051)
  Prédit: ' event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.1937059760093689
    2. ' self' → logprob: -2.3187060356140137
    3. 'event' → logprob: -2.9437060356140137
    4. 'self' → logprob: -3.6937060356140137
    5. ' not' → logprob: -8.943705558776855
    6. ' ' → logprob: -11.818705558776855
    7. 'not' → logprob: -12.318705558776855
    8. '	event' → logprob: -12.318705558776855
    9. '(event' → logprob: -14.568705558776855
    10. '   ' → logprob: -14.943705558776855

Token 896: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0353923998773098
    2. '.out' → logprob: -3.4103922843933105
    3. 'ended' → logprob: -6.6603922843933105
    4. 'out' → logprob: -7.9103922843933105
    5. '.started' → logprob: -10.035392761230469
    6. '.ends' → logprob: -11.660392761230469
    7. ' .' → logprob: -11.910392761230469
    8. 'Ended' → logprob: -12.160392761230469
    9. '.closed' → logprob: -12.410392761230469
    10. '.completed' → logprob: -12.660392761230469

Token 897: 'ended' (ID: 3933)
  Prédit: 'ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ended' → logprob: -7.064297824399546e-05
    2. 'outs' → logprob: -10.125070571899414
    3. 'out' → logprob: -10.750070571899414
    4. 'started' → logprob: -12.625070571899414
    5. '
' → logprob: -13.000070571899414
    6. ' ended' → logprob: -13.625070571899414
    7. 'ENDED' → logprob: -14.375070571899414
    8. 'outed' → logprob: -15.125070571899414
    9. 'ends' → logprob: -15.125070571899414
    10. 'finished' → logprob: -16.250070571899414

Token 898: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02007206343114376
    2. ':
' → logprob: -4.645071983337402
    3. ' :' → logprob: -4.770071983337402
    4. ' ==' → logprob: -7.520071983337402
    5. ' and' → logprob: -7.895071983337402
    6. ' :
' → logprob: -8.145071983337402
    7. '==' → logprob: -8.395071983337402
    8. ' or' → logprob: -8.770071983337402
    9. ':return' → logprob: -9.520071983337402
    10. 'and' → logprob: -10.270071983337402

Token 899: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13350015878677368
    2. ':' → logprob: -2.383500099182129
    3. ':
' → logprob: -3.508500099182129
    4. ' and' → logprob: -6.883500099182129
    5. '       ' → logprob: -7.133500099182129
    6. ' return' → logprob: -8.383500099182129
    7. ':return' → logprob: -8.758500099182129
    8. 'return' → logprob: -9.008500099182129
    9. '               ' → logprob: -9.383500099182129
    10. '          ' → logprob: -10.133500099182129

Token 900: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0886790007352829
    2. ' 
' → logprob: -2.838679075241089
    3. 'return' → logprob: -3.838679075241089
    4. ' False' → logprob: -6.46367883682251
    5. '
' → logprob: -6.71367883682251
    6. ' True' → logprob: -7.08867883682251
    7. '           ' → logprob: -8.088679313659668
    8. ' None' → logprob: -8.338679313659668
    9. ' ' → logprob: -8.463679313659668
    10. 'False' → logprob: -8.713679313659668

Token 901: ' In' (ID: 730)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.201467826962471
    2. 'return' → logprob: -1.7014678716659546
    3. '           ' → logprob: -9.951467514038086
    4. 'Return' → logprob: -13.076467514038086
    5. '
' → logprob: -14.076467514038086
    6. '_return' → logprob: -14.701467514038086
    7. 'r' → logprob: -14.826467514038086
    8. ':return' → logprob: -14.951467514038086
    9. ' ' → logprob: -15.201467514038086
    10. ' 
' → logprob: -15.201467514038086

Token 902: 'ning' (ID: 1401)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3046480417251587
    2. 'put' → logprob: -1.9296480417251587
    3. 'return' → logprob: -2.429647922515869
    4. '_' → logprob: -5.679647922515869
    5. '   ' → logprob: -5.804647922515869
    6. '    ' → logprob: -6.179647922515869
    7. '
' → logprob: -6.179647922515869
    8. '_return' → logprob: -6.554647922515869
    9. '       ' → logprob: -6.679647922515869
    10. ' ' → logprob: -6.804647922515869

Token 903: ' already' (ID: 4279)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06968585401773453
    2. ' continues' → logprob: -4.069685935974121
    3. ' is' → logprob: -4.319685935974121
    4. 'return' → logprob: -4.694685935974121
    5. ' continue' → logprob: -5.069685935974121
    6. ' ' → logprob: -5.194685935974121
    7. '
' → logprob: -6.069685935974121
    8. ' can' → logprob: -6.444685935974121
    9. '<|end|>' → logprob: -6.569685935974121
    10. ' has' → logprob: -6.819685935974121

Token 904: ' ended' (ID: 15092)
  Prédit: ' ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ended' → logprob: -0.019026024267077446
    2. 'ended' → logprob: -4.144025802612305
    3. ' finished' → logprob: -6.144025802612305
    4. ' has' → logprob: -8.394025802612305
    5. 'finished' → logprob: -8.644025802612305
    6. ' over' → logprob: -9.144025802612305
    7. ' completed' → logprob: -9.519025802612305
    8. ' complete' → logprob: -9.519025802612305
    9. ' concluded' → logprob: -9.894025802612305
    10. ' done' → logprob: -10.144025802612305

Token 905: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3736707270145416
    2. '
' → logprob: -1.3736706972122192
    3. ' return' → logprob: -3.748670816421509
    4. 'return' → logprob: -3.748670816421509
    5. '       ' → logprob: -5.37367057800293
    6. ',' → logprob: -6.37367057800293
    7. ':' → logprob: -6.87367057800293
    8. '               ' → logprob: -7.12367057800293
    9. '\n' → logprob: -7.49867057800293
    10. ':
' → logprob: -7.87367057800293

Token 906: ' ignore' (ID: 17887)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2663813829421997
    2. 'return' → logprob: -1.7663813829421997
    3. '           ' → logprob: -2.76638126373291
    4. '
' → logprob: -12.14138126373291
    5. '	return' → logprob: -12.76638126373291
    6. '               ' → logprob: -13.76638126373291
    7. ':return' → logprob: -14.01638126373291
    8. ' ' → logprob: -14.51638126373291
    9. '{return' → logprob: -14.89138126373291
    10. '            ' → logprob: -14.89138126373291

Token 907: ' further' (ID: 6544)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29183122515678406
    2. ' return' → logprob: -1.7918312549591064
    3. ' True' → logprob: -3.4168312549591064
    4. ' 
' → logprob: -3.9168312549591064
    5. '
        
' → logprob: -4.916831016540527
    6. ' ' → logprob: -5.041831016540527
    7. '\n' → logprob: -5.291831016540527
    8. 'return' → logprob: -5.416831016540527
    9. ' False' → logprob: -6.541831016540527
    10. '       ' → logprob: -6.541831016540527

Token 908: ' events' (ID: 6124)
  Prédit: ' events'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' events' → logprob: -0.0077481139451265335
    2. ' event' → logprob: -6.257748126983643
    3. '
' → logprob: -6.382748126983643
    4. 'events' → logprob: -6.507748126983643
    5. ' return' → logprob: -6.882748126983643
    6. ' input' → logprob: -6.882748126983643
    7. ' calls' → logprob: -8.007747650146484
    8. ' lines' → logprob: -9.882747650146484
    9. ' inputs' → logprob: -9.882747650146484
    10. ' True' → logprob: -10.382747650146484

Token 909: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05278727784752846
    2. '
' → logprob: -3.4277873039245605
    3. '       ' → logprob: -4.0527873039245605
    4. '               ' → logprob: -7.6777873039245605
    5. '\n' → logprob: -7.6777873039245605
    6. 'return' → logprob: -8.927786827087402
    7. '.' → logprob: -9.177786827087402
    8. ' return' → logprob: -9.552786827087402
    9. '   ' → logprob: -10.052786827087402
    10. '<|end|>' → logprob: -10.427786827087402

Token 910: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5991740822792053
    2. '           ' → logprob: -0.9741740822792053
    3. '
' → logprob: -2.7241740226745605
    4. '        
' → logprob: -5.5991740226745605
    5. '    
' → logprob: -6.7241740226745605
    6. '\n' → logprob: -7.5991740226745605
    7. '               ' → logprob: -7.7241740226745605
    8. '            
' → logprob: -7.8491740226745605
    9. ' 
' → logprob: -8.224174499511719
    10. '.' → logprob: -8.474174499511719

Token 911: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2037169635295868
    2. 'return' (adapté à ' return') → logprob: -1.7037169933319092
    3. '           ' → logprob: -6.20371675491333
    4. ' 
' → logprob: -9.078717231750488
    5. '
' → logprob: -9.328717231750488
    6. '	return' → logprob: -10.203717231750488
    7. ':return' → logprob: -11.828717231750488
    8. ' ' → logprob: -11.953717231750488
    9. '\n' → logprob: -11.953717231750488
    10. '   ' → logprob: -12.703717231750488

Token 912: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5868537425994873
    2. ' False' → logprob: -0.8368537425994873
    3. ' True' → logprob: -4.836853981018066
    4. 'True' → logprob: -5.836853981018066
    5. ' None' → logprob: -13.086853981018066
    6. 'None' → logprob: -13.086853981018066
    7. ' self' → logprob: -14.836853981018066
    8. 'self' → logprob: -15.086853981018066
    9. '(False' → logprob: -15.711853981018066
    10. '
' → logprob: -17.58685302734375

Token 913: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010257812216877937
    2. '        
' → logprob: -5.135257720947266
    3. '       ' → logprob: -5.635257720947266
    4. '    
' → logprob: -8.010257720947266
    5. '\n' → logprob: -9.135257720947266
    6. '
        
' → logprob: -9.260257720947266
    7. ' 
' → logprob: -9.385257720947266
    8. '  
' → logprob: -10.385257720947266
    9. '

' → logprob: -10.510257720947266
    10. '
' → logprob: -10.510257720947266

Token 914: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5394145846366882
    2. '       ' → logprob: -1.414414644241333
    3. '    
' → logprob: -2.914414644241333
    4. ' 
' → logprob: -3.039414644241333
    5. '        
' → logprob: -3.289414644241333
    6. '   ' → logprob: -4.664414405822754
    7. 'elif' → logprob: -5.164414405822754
    8. '\n' → logprob: -5.289414405822754
    9. ' if' → logprob: -5.414414405822754
    10. '  
' → logprob: -5.789414405822754

Token 915: ' event' (ID: 2104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17825999855995178
    2. '       ' → logprob: -2.428260087966919
    3. ' if' → logprob: -2.678260087966919
    4. 'event' (adapté à ' event') → logprob: -5.17825984954834
    5. '
' → logprob: -8.55325984954834
    6. '        
' → logprob: -8.80325984954834
    7. 'elif' → logprob: -9.05325984954834
    8. '   ' → logprob: -9.42825984954834
    9. ' event' → logprob: -9.67825984954834
    10. 'run' → logprob: -10.30325984954834

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16248634457588196
    2. ' =' → logprob: -2.0374863147735596
    3. '_' → logprob: -4.162486553192139
    4. '==' → logprob: -6.412486553192139
    5. '_lower' → logprob: -6.662486553192139
    6. ' ==' → logprob: -7.412486553192139
    7. '_=' → logprob: -8.53748607635498
    8. '_type' → logprob: -8.91248607635498
    9. '_name' → logprob: -10.03748607635498
    10. '_tokens' → logprob: -10.66248607635498

Token 917: ' event' (ID: 2104)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.029752805829048157
    2. ' event' → logprob: -3.529752731323242
    3. ' ' → logprob: -14.154752731323242
    4. '	event' → logprob: -14.154752731323242
    5. '   ' → logprob: -15.404752731323242
    6. '
' → logprob: -15.404752731323242
    7. '(event' → logprob: -16.029752731323242
    8. 'e' → logprob: -16.154752731323242
    9. 'even' → logprob: -17.154752731323242
    10. 'ev' → logprob: -17.154752731323242

Token 918: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16606466472148895
    2. '.strip' → logprob: -1.9160646200180054
    3. '.upper' → logprob: -5.416064739227295
    4. '.lower' → logprob: -6.666064739227295
    5. ' .' → logprob: -9.541064262390137
    6. '.rstrip' → logprob: -10.666064262390137
    7. '.replace' → logprob: -12.166064262390137
    8. '.startswith' → logprob: -13.666064262390137
    9. '.split' → logprob: -13.791064262390137
    10. '.capitalize' → logprob: -14.041064262390137

Token 919: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014752978459000587
    2. '()
' → logprob: -4.2647528648376465
    3. '       ' → logprob: -8.639753341674805
    4. '().' → logprob: -8.639753341674805
    5. '()

' → logprob: -9.389753341674805
    6. '.lower' → logprob: -9.639753341674805
    7. '.' → logprob: -11.139753341674805
    8. ')' → logprob: -11.639753341674805
    9. '(' → logprob: -11.639753341674805
    10. 'if' → logprob: -11.889753341674805

Token 920: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05604862794280052
    2. '       ' → logprob: -3.056048631668091
    3. ' if' → logprob: -4.931048393249512
    4. '   ' → logprob: -8.931048393249512
    5. '        
' → logprob: -10.181048393249512
    6. '
' → logprob: -10.681048393249512
    7. '	if' → logprob: -12.681048393249512
    8. '    
' → logprob: -12.806048393249512
    9. 'elif' → logprob: -12.931048393249512
    10. ' 
' → logprob: -13.056048393249512

Token 921: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.320199877838604e-07
    2. ' if' → logprob: -15.5
    3. '       ' → logprob: -16.625
    4. '
' → logprob: -19.5
    5. 'elif' → logprob: -19.75
    6. '   ' → logprob: -21.125
    7. '```' → logprob: -21.75
    8. 'i' → logprob: -22.375
    9. '	if' → logprob: -22.375
    10. '        
' → logprob: -22.375

Token 922: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.018178507685661316
    2. 'event' → logprob: -4.018178462982178
    3. ' not' → logprob: -10.768178939819336
    4. ' ' → logprob: -12.268178939819336
    5. ' self' → logprob: -13.268178939819336
    6. 'self' → logprob: -14.518178939819336
    7. '	event' → logprob: -15.268178939819336
    8. 'not' → logprob: -15.893178939819336
    9. '(event' → logprob: -16.143178939819336
    10. ' ' → logprob: -16.518178939819336

Token 923: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28133338689804077
    2. ' ==' → logprob: -1.4063334465026855
    3. '=="' → logprob: -9.031332969665527
    4. '=' → logprob: -11.156332969665527
    5. '==
' → logprob: -11.281332969665527
    6. ' in' → logprob: -11.406332969665527
    7. '=='' → logprob: -11.781332969665527
    8. '[' → logprob: -12.031332969665527
    9. '===' → logprob: -12.531332969665527
    10. ' =="' → logprob: -13.156332969665527

Token 924: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6505653262138367
    2. '"' → logprob: -0.7755653262138367
    3. ' '' → logprob: -4.525565147399902
    4. ' "' → logprob: -5.025565147399902
    5. ''O' → logprob: -8.775565147399902
    6. '"O' → logprob: -9.275565147399902
    7. '""' → logprob: -9.525565147399902
    8. '''' → logprob: -10.900565147399902
    9. ''o' → logprob: -11.775565147399902
    10. ' ' → logprob: -12.150565147399902

Token 925: 'H' (ID: 39)
  Prédit: 'OUT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'OUT' → logprob: -0.031768135726451874
    2. 'out' → logprob: -4.156768321990967
    3. '"' → logprob: -4.531768321990967
    4. ' OUT' → logprob: -6.656768321990967
    5. 'Out' → logprob: -7.281768321990967
    6. 'O' → logprob: -7.406768321990967
    7. 'strike' → logprob: -7.406768321990967
    8. ''' → logprob: -7.656768321990967
    9. 'STR' → logprob: -7.906768321990967
    10. ' out' → logprob: -8.031767845153809

Token 926: 'IT' (ID: 1468)
  Prédit: 'IT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IT' → logprob: -0.0004991783644072711
    2. 'I' → logprob: -7.875499248504639
    3. '   ' → logprob: -10.37549877166748
    4. ' IT' → logprob: -11.00049877166748
    5. 'it' → logprob: -11.12549877166748
    6. 'It' → logprob: -11.50049877166748
    7. 'ITT' → logprob: -11.50049877166748
    8. '
' → logprob: -12.25049877166748
    9. '```' → logprob: -12.50049877166748
    10. 'ITLE' → logprob: -12.50049877166748

Token 927: '":
' (ID: 9213)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.667786180973053
    2. '":
' → logprob: -0.917786180973053
    3. '"' → logprob: -2.792786121368408
    4. '":' → logprob: -4.167786121368408
    5. '():
' → logprob: -5.667786121368408
    6. ')' → logprob: -6.042786121368408
    7. '()"' → logprob: -6.292786121368408
    8. '):
' → logprob: -7.042786121368408
    9. '(' → logprob: -7.292786121368408
    10. '"):
' → logprob: -7.917786121368408

Token 928: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47780293226242065
    2. ':
' → logprob: -1.2278029918670654
    3. '           ' → logprob: -2.6028029918670654
    4. '       ' → logprob: -4.602802753448486
    5. '):
' → logprob: -7.852802753448486
    6. '():
' → logprob: -7.977802753448486
    7. '   ' → logprob: -8.102803230285645
    8. '
' → logprob: -8.477803230285645
    9. '):' → logprob: -8.727803230285645
    10. ':
' → logprob: -8.977803230285645

Token 929: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' (adapté à ' runs') → logprob: -0.020245440304279327
    2. ' runs' → logprob: -4.020245552062988
    3. '           ' → logprob: -6.270245552062988
    4. 'self' → logprob: -9.520245552062988
    5. '               ' → logprob: -10.270245552062988
    6. '
' → logprob: -10.520245552062988
    7. '       ' → logprob: -11.020245552062988
    8. '_runs' → logprob: -11.270245552062988
    9. 'run' → logprob: -11.520245552062988
    10. '   ' → logprob: -11.895245552062988

Token 930: '_sc' (ID: 29726)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005459055304527283
    2. '=' → logprob: -5.380458831787109
    3. ' +=' → logprob: -7.255458831787109
    4. '_sc' → logprob: -9.50545883178711
    5. ' ' → logprob: -11.00545883178711
    6. '_from' → logprob: -11.63045883178711
    7. '+=' → logprob: -11.63045883178711
    8. '   ' → logprob: -11.88045883178711
    9. '_added' → logprob: -12.50545883178711
    10. ' scored' → logprob: -13.00545883178711

Token 931: 'ored' (ID: 4142)
  Prédit: 'ored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ored' → logprob: -0.0106986528262496
    2. 'ores' → logprob: -5.6356987953186035
    3. 'ore' → logprob: -5.7606987953186035
    4. '+=' → logprob: -6.7606987953186035
    5. 'or' → logprob: -7.2606987953186035
    6. ' +=' → logprob: -7.6356987953186035
    7. '   ' → logprob: -8.260698318481445
    8. '=' → logprob: -8.760698318481445
    9. 'o' → logprob: -8.885698318481445
    10. '```' → logprob: -9.010698318481445

Token 932: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030187902972102165
    2. '=' → logprob: -3.5301878452301025
    3. ' +=' → logprob: -7.780188083648682
    4. '+=' → logprob: -10.905187606811523
    5. ' ' → logprob: -14.530187606811523
    6. '	' → logprob: -15.405187606811523
    7. ' ' → logprob: -15.405187606811523
    8. '   ' → logprob: -16.780187606811523
    9. '=self' → logprob: -16.905187606811523
    10. '+' → logprob: -17.155187606811523

Token 933: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269284337759018
    2. ' self' → logprob: -2.1269283294677734
    3. '	self' → logprob: -15.626928329467773
    4. '           ' → logprob: -16.626928329467773
    5. '(self' → logprob: -16.876928329467773
    6. '0' → logprob: -18.501928329467773
    7. '=self' → logprob: -18.751928329467773
    8. '```' → logprob: -18.751928329467773
    9. ' ' → logprob: -19.251928329467773
    10. '_self' → logprob: -19.251928329467773

Token 934: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00072851701406762
    2. 'b' → logprob: -7.750728607177734
    3. '.' → logprob: -8.375728607177734
    4. ' .' → logprob: -10.500728607177734
    5. '.advance' → logprob: -10.875728607177734
    6. '   ' → logprob: -12.375728607177734
    7. 'advance' → logprob: -12.875728607177734
    8. '_b' → logprob: -13.625728607177734
    9. '
' → logprob: -13.750728607177734
    10. '.score' → logprob: -13.750728607177734

Token 935: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -0.00010819212911883369
    2. 'ase' → logprob: -9.750107765197754
    3. 'bases' → logprob: -10.000107765197754
    4. '```' → logprob: -13.375107765197754
    5. 'aces' → logprob: -15.000107765197754
    6. 'first' → logprob: -15.000107765197754
    7. '``' → logprob: -15.500107765197754
    8. '   ' → logprob: -15.625107765197754
    9. 'as' → logprob: -15.750107765197754
    10. 'ased' → logprob: -15.875107765197754

Token 936: '_manager' (ID: 27735)
  Prédit: '_manager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_manager' → logprob: -4.320199877838604e-07
    2. 'manager' → logprob: -15.25
    3. 'Manager' → logprob: -16.25
    4. '._' → logprob: -16.75
    5. '_MANAGER' → logprob: -18.0
    6. 'anager' → logprob: -18.5
    7. 'advance' → logprob: -18.5
    8. '.advance' → logprob: -19.5
    9. '.' → logprob: -19.75
    10. '.add' → logprob: -20.0

Token 937: '.advance' (ID: 170572)
  Prédit: '.advance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.advance' → logprob: -0.0002658655575942248
    2. '.' → logprob: -8.250266075134277
    3. ' .' → logprob: -13.250266075134277
    4. '.expand' → logprob: -14.125266075134277
    5. '.ad' → logprob: -14.375266075134277
    6. '.extend' → logprob: -14.625266075134277
    7. '.increment' → logprob: -15.125266075134277
    8. '.add' → logprob: -16.12526512145996
    9. 'advance' → logprob: -16.25026512145996
    10. '.acc' → logprob: -16.37526512145996

Token 938: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -13.500001907348633
    3. '_al' → logprob: -17.750001907348633
    4. 'all' → logprob: -18.625001907348633
    5. '_a' → logprob: -19.250001907348633
    6. '__' → logprob: -19.250001907348633
    7. ' _' → logprob: -19.500001907348633
    8. '_ALL' → logprob: -20.125001907348633
    9. '_one' → logprob: -20.875001907348633
    10. '_All' → logprob: -21.375001907348633

Token 939: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -7.3458322731312364e-06
    2. 'r' → logprob: -12.125007629394531
    3. '_' → logprob: -14.125007629394531
    4. '(' → logprob: -14.125007629394531
    5. '_all' → logprob: -15.500007629394531
    6. '_runner' → logprob: -16.87500762939453
    7. 'R' → logprob: -17.75000762939453
    8. ' runners' → logprob: -17.87500762939453
    9. '_runs' → logprob: -18.00000762939453
    10. '```' → logprob: -18.00000762939453

Token 940: 'unners' (ID: 46383)
  Prédit: 'unners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unners' → logprob: -0.0001483564410591498
    2. 'unner' → logprob: -8.87514877319336
    3. ' runners' → logprob: -12.75014877319336
    4. 'un' → logprob: -13.37514877319336
    5. 'unn' → logprob: -13.50014877319336
    6. 'r' → logprob: -13.75014877319336
    7. 'unning' → logprob: -15.00014877319336
    8. '.runners' → logprob: -15.12514877319336
    9. 'anners' → logprob: -15.37514877319336
    10. '```' → logprob: -15.75014877319336

Token 941: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027035970240831375
    2. '()
' → logprob: -3.77703595161438
    3. '()+' → logprob: -5.652036190032959
    4. '(' → logprob: -8.4020357131958
    5. '()
' → logprob: -10.1520357131958
    6. '+' → logprob: -12.5270357131958
    7. '()

' → logprob: -12.9020357131958
    8. '())' → logprob: -14.5270357131958
    9. '()>' → logprob: -14.6520357131958
    10. '()<' → logprob: -14.6520357131958

Token 942: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07636702060699463
    2. '           ' → logprob: -2.826366901397705
    3. 'self' → logprob: -4.576366901397705
    4. '       ' → logprob: -6.076366901397705
    5. '
' → logprob: -7.451366901397705
    6. '            
' → logprob: -7.951366901397705
    7. ' 
' → logprob: -8.951367378234863
    8. '        
' → logprob: -9.076367378234863
    9. '    
' → logprob: -9.576367378234863
    10. '<|end|>' → logprob: -9.701367378234863

Token 943: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1607709676027298
    2. ' self' → logprob: -1.9107710123062134
    3. '           ' → logprob: -8.285771369934082
    4. '
' → logprob: -8.660771369934082
    5. '       ' → logprob: -9.785771369934082
    6. 'runs' → logprob: -10.035771369934082
    7. ' runs' → logprob: -11.285771369934082
    8. '	self' → logprob: -12.785771369934082
    9. '            
' → logprob: -13.535771369934082
    10. '```' → logprob: -13.660771369934082

Token 944: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -2.2246291337069124e-05
    2. 'score' → logprob: -11.250021934509277
    3. '.' → logprob: -11.625021934509277
    4. '	score' → logprob: -15.875021934509277
    5. '.s' → logprob: -17.000022888183594
    6. ' score' → logprob: -17.125022888183594
    7. '
' → logprob: -17.250022888183594
    8. ').' → logprob: -18.000022888183594
    9. '.Score' → logprob: -18.000022888183594
    10. '.code' → logprob: -18.250022888183594

Token 945: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07889761030673981
    2. '+=' → logprob: -2.578897714614868
    3. '+' → logprob: -12.078897476196289
    4. '    ' → logprob: -13.953897476196289
    5. ']+=' → logprob: -14.953897476196289
    6. '        ' → logprob: -15.828897476196289
    7. '+=(' → logprob: -15.953897476196289
    8. '=' → logprob: -15.953897476196289
    9. '   ' → logprob: -16.20389747619629
    10. ' +' → logprob: -16.57889747619629

Token 946: ' runs' (ID: 13719)
  Prédit: ' runs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' runs' → logprob: -0.5759412050247192
    2. 'runs' → logprob: -0.8259412050247192
    3. 'run' → logprob: -13.70094108581543
    4. '_runs' → logprob: -14.57594108581543
    5. ' run' → logprob: -15.45094108581543
    6. ' ' → logprob: -18.70094108581543
    7. ' ' → logprob: -19.45094108581543
    8. 'r' → logprob: -20.32594108581543
    9. '
' → logprob: -20.57594108581543
    10. 'Runs' → logprob: -20.70094108581543

Token 947: '_sc' (ID: 29726)
  Prédit: '_sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sc' → logprob: 0.0
    2. '_scaled' → logprob: -17.25
    3. 'sc' → logprob: -19.0
    4. '_sk' → logprob: -19.25
    5. '_sp' → logprob: -19.625
    6. '_scores' → logprob: -20.125
    7. '_' → logprob: -20.125
    8. 'Sc' → logprob: -20.25
    9. '_s' → logprob: -20.625
    10. '_co' → logprob: -20.875

Token 948: 'ored' (ID: 4142)
  Prédit: 'ored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ored' → logprob: -6.146429223008454e-05
    2. ' ored' → logprob: -10.37506103515625
    3. '   ' → logprob: -12.25006103515625
    4. '[' → logprob: -12.37506103515625
    5. '>' → logprob: -12.75006103515625
    6. '```' → logprob: -13.12506103515625
    7. '`' → logprob: -13.50006103515625
    8. '
' → logprob: -13.50006103515625
    9. 'o' → logprob: -13.75006103515625
    10. '_' → logprob: -13.87506103515625

Token 949: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2291669100522995
    2. '           ' → logprob: -1.604166865348816
    3. '<|end|>' → logprob: -6.9791669845581055
    4. '            
' → logprob: -7.2291669845581055
    5. '       ' → logprob: -7.3541669845581055
    6. '
' → logprob: -7.8541669845581055
    7. ' 
' → logprob: -8.354166984558105
    8. '    
' → logprob: -8.979166984558105
    9. 'self' → logprob: -9.229166984558105
    10. '' → logprob: -9.729166984558105

Token 950: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.329548716545105
    2. '
' → logprob: -1.329548716545105
    3. '       ' → logprob: -4.7045488357543945
    4. '            
' → logprob: -5.9545488357543945
    5. '    
' → logprob: -6.8295488357543945
    6. 'self' → logprob: -7.4545488357543945
    7. '<|end|>' → logprob: -7.5795488357543945
    8. ' 
' → logprob: -7.8295488357543945
    9. '        
' → logprob: -8.079548835754395
    10. '' → logprob: -8.204548835754395

Token 951: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.5387441515922546
    2. ' elif' → logprob: -1.7887442111968994
    3. '       ' → logprob: -2.0387442111968994
    4. '
' → logprob: -2.2887442111968994
    5. ' 
' → logprob: -5.91374397277832
    6. ' else' → logprob: -6.16374397277832
    7. '   ' → logprob: -6.41374397277832
    8. 'else' → logprob: -6.41374397277832
    9. '.' → logprob: -6.78874397277832
    10. '' → logprob: -6.91374397277832

Token 952: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.023248974233865738
    2. 'event' → logprob: -3.7732489109039307
    3. '(event' → logprob: -13.398248672485352
    4. '	event' → logprob: -14.523248672485352
    5. '"' → logprob: -14.648248672485352
    6. ' ' → logprob: -14.898248672485352
    7. '[event' → logprob: -15.148248672485352
    8. ' ev' → logprob: -16.27324867248535
    9. ' "' → logprob: -16.89824867248535
    10. ' ' → logprob: -16.89824867248535

Token 953: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0623418465256691
    2. '==' → logprob: -2.8123419284820557
    3. '[' → logprob: -8.312341690063477
    4. '=="' → logprob: -10.187341690063477
    5. ' =="' → logprob: -10.437341690063477
    6. ' =' → logprob: -10.937341690063477
    7. ' ===' → logprob: -11.812341690063477
    8. '=' → logprob: -12.062341690063477
    9. '===' → logprob: -12.437341690063477
    10. ' ' → logprob: -12.562341690063477

Token 954: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0033027164172381163
    2. ' "' → logprob: -5.878302574157715
    3. ''' → logprob: -7.628302574157715
    4. ' '' → logprob: -11.878302574157715
    5. '"H' → logprob: -13.378302574157715
    6. ' ' → logprob: -15.003302574157715
    7. '("' → logprob: -15.003302574157715
    8. '(' → logprob: -15.253302574157715
    9. '"""' → logprob: -15.628302574157715
    10. ' ' → logprob: -15.753302574157715

Token 955: 'H' (ID: 39)
  Prédit: 'OUT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUT' → logprob: -0.06782655417919159
    2. '"' → logprob: -2.817826509475708
    3. ''' → logprob: -6.192826747894287
    4. '"W' → logprob: -6.817826747894287
    5. 'W' → logprob: -7.317826747894287
    6. 'H' → logprob: -7.317826747894287
    7. ' OUT' → logprob: -7.442826747894287
    8. 'STR' → logprob: -7.942826747894287
    9. '"H' → logprob: -8.942826271057129
    10. '_OUT' → logprob: -9.817826271057129

Token 956: 'OM' (ID: 2760)
  Prédit: 'IT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IT' → logprob: -0.1998928338289261
    2. 'OM' → logprob: -1.8248928785324097
    3. 'OME' → logprob: -4.574892997741699
    4. 'it' → logprob: -5.949892997741699
    5. 'OUT' → logprob: -5.949892997741699
    6. 'ITTER' → logprob: -6.949892997741699
    7. 'O' → logprob: -7.074892997741699
    8. 'It' → logprob: -7.449892997741699
    9. 'ITT' → logprob: -7.699892997741699
    10. '
' → logprob: -8.5748929977417

Token 957: 'ER' (ID: 866)
  Prédit: 'ER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.003626558231189847
    2. 'E' → logprob: -5.628626346588135
    3. 'RUN' → logprob: -11.628626823425293
    4. 'ERR' → logprob: -11.878626823425293
    5. '
' → logprob: -12.753626823425293
    6. 'R' → logprob: -13.628626823425293
    7. 'ЕР' → logprob: -13.878626823425293
    8. 'ERO' → logprob: -14.378626823425293
    9. ' E' → logprob: -15.003626823425293
    10. '_ER' → logprob: -15.003626823425293

Token 958: 'UN' (ID: 2926)
  Prédit: 'UN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UN' → logprob: -6.2729995988775045e-06
    2. 'RUN' → logprob: -12.250006675720215
    3. 'un' → logprob: -14.000006675720215
    4. '"' → logprob: -15.375006675720215
    5. 'U' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.7500057220459
    7. '
' → logprob: -17.0000057220459
    8. '"""
' → logprob: -17.0000057220459
    9. '```' → logprob: -17.1250057220459
    10. ' UN' → logprob: -17.7500057220459

Token 959: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.0188718494027853
    2. '():
' → logprob: -4.893871784210205
    3. '":' → logprob: -4.893871784210205
    4. ':' → logprob: -6.893871784210205
    5. ':
' → logprob: -6.893871784210205
    6. '()' → logprob: -7.393871784210205
    7. '"' → logprob: -8.393872261047363
    8. '(' → logprob: -8.643872261047363
    9. '(":' → logprob: -8.893872261047363
    10. '":
' → logprob: -9.143872261047363

Token 960: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01115570031106472
    2. '
' → logprob: -5.511155605316162
    3. ':
' → logprob: -6.011155605316162
    4. '       ' → logprob: -6.511155605316162
    5. ' runs' → logprob: -6.886155605316162
    6. '   ' → logprob: -8.01115608215332
    7. '            
' → logprob: -8.01115608215332
    8. '<|end|>' → logprob: -8.38615608215332
    9. '        
' → logprob: -8.51115608215332
    10. 'runs' → logprob: -8.51115608215332

Token 961: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' (adapté à ' runs') → logprob: -0.18391110002994537
    2. ' runs' → logprob: -2.433911085128784
    3. 'self' → logprob: -2.933911085128784
    4. ' self' → logprob: -3.683911085128784
    5. '       ' → logprob: -6.683911323547363
    6. '           ' → logprob: -7.808911323547363
    7. 'run' → logprob: -9.308911323547363
    8. '
' → logprob: -10.183911323547363
    9. '_runs' → logprob: -10.183911323547363
    10. '   ' → logprob: -10.433911323547363

Token 962: '_sc' (ID: 29726)
  Prédit: '_sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sc' → logprob: -0.0009844583692029119
    2. ' =' → logprob: -8.125984191894531
    3. '_s' → logprob: -9.000984191894531
    4. ' +=' → logprob: -9.250984191894531
    5. '_' → logprob: -9.375984191894531
    6. '_score' → logprob: -9.500984191894531
    7. '_scores' → logprob: -9.500984191894531
    8. '=' → logprob: -9.750984191894531
    9. '+=' → logprob: -9.875984191894531
    10. ' scored' → logprob: -10.000984191894531

Token 963: 'ored' (ID: 4142)
  Prédit: 'ored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ored' → logprob: -0.0009732789476402104
    2. '   ' → logprob: -7.375973224639893
    3. '=' → logprob: -9.50097370147705
    4. 'red' → logprob: -10.00097370147705
    5. ' =' → logprob: -10.12597370147705
    6. '       ' → logprob: -10.62597370147705
    7. 'or' → logprob: -10.62597370147705
    8. '    ' → logprob: -10.87597370147705
    9. '     ' → logprob: -11.37597370147705
    10. 'ore' → logprob: -11.75097370147705

Token 964: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024159833788871765
    2. '=' → logprob: -3.7741599082946777
    3. ' +=' → logprob: -7.024159908294678
    4. '+=' → logprob: -10.64915943145752
    5. '+' → logprob: -17.524160385131836
    6. ' ' → logprob: -17.774160385131836
    7. '    ' → logprob: -18.399160385131836
    8. '   ' → logprob: -19.024160385131836
    9. ' ' → logprob: -19.024160385131836
    10. '	' → logprob: -19.149160385131836

Token 965: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687798380851746
    2. ' self' → logprob: -1.1368780136108398
    3. '	self' → logprob: -12.38687801361084
    4. '<|end|>' → logprob: -13.38687801361084
    5. '(self' → logprob: -14.88687801361084
    6. '=self' → logprob: -15.26187801361084
    7. ' ' → logprob: -15.38687801361084
    8. '$self' → logprob: -16.886877059936523
    9. ' ' → logprob: -17.011877059936523
    10. '```' → logprob: -17.136877059936523

Token 966: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.004248758312314749
    2. '.' → logprob: -5.50424861907959
    3. ' .' → logprob: -8.75424861907959
    4. 'b' → logprob: -11.75424861907959
    5. 'self' → logprob: -13.87924861907959
    6. '.
' → logprob: -14.50424861907959
    7. '   ' → logprob: -15.00424861907959
    8. '	b' → logprob: -15.12924861907959
    9. '_b' → logprob: -15.12924861907959
    10. '```' → logprob: -15.25424861907959

Token 967: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -3.5358694731257856e-05
    2. 'bases' → logprob: -10.625035285949707
    3. 'ase' → logprob: -11.875035285949707
    4. 'as' → logprob: -13.500035285949707
    5. '```' → logprob: -14.000035285949707
    6. 'aces' → logprob: -15.125035285949707
    7. '   ' → logprob: -15.375035285949707
    8. 'a' → logprob: -15.375035285949707
    9. 'ates' → logprob: -15.750035285949707
    10. 'ased' → logprob: -16.000036239624023

Token 968: '_manager' (ID: 27735)
  Prédit: '_manager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_manager' → logprob: -1.3663626305060461e-05
    2. 'Manager' → logprob: -11.50001335144043
    3. 'anager' → logprob: -13.50001335144043
    4. 'manager' → logprob: -13.62501335144043
    5. '_MANAGER' → logprob: -14.75001335144043
    6. '   ' → logprob: -15.87501335144043
    7. '_man' → logprob: -16.12501335144043
    8. '       ' → logprob: -16.62501335144043
    9. 'man' → logprob: -17.75001335144043
    10. '_' → logprob: -18.37501335144043

Token 969: '.all' (ID: 14045)
  Prédit: '.all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.all' → logprob: -0.0009326597792096436
    2. 'all' → logprob: -7.000932693481445
    3. '_all' → logprob: -11.500932693481445
    4. '.' → logprob: -11.750932693481445
    5. ' all' → logprob: -13.500932693481445
    6. '	all' → logprob: -14.125932693481445
    7. 'All' → logprob: -15.125932693481445
    8. ' .' → logprob: -15.375932693481445
    9. '._' → logprob: -15.875932693481445
    10. '.All' → logprob: -16.375932693481445

Token 970: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -3.173704271830502e-06
    2. 'r' → logprob: -13.25000286102295
    3. '_runner' → logprob: -13.87500286102295
    4. '_runs' → logprob: -14.87500286102295
    5. '_run' → logprob: -17.250003814697266
    6. ' runners' → logprob: -17.875003814697266
    7. 'R' → logprob: -18.625003814697266
    8. '_running' → logprob: -19.250003814697266
    9. '_s' → logprob: -19.375003814697266
    10. '
' → logprob: -19.500003814697266

Token 971: 'unners' (ID: 46383)
  Prédit: 'unners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unners' → logprob: -0.0034375616814941168
    2. '_r' → logprob: -5.878437519073486
    3. 'unner' → logprob: -8.128437995910645
    4. 'r' → logprob: -8.503437995910645
    5. 'un' → logprob: -9.253437995910645
    6. 'unn' → logprob: -11.378437995910645
    7. ' runners' → logprob: -11.628437995910645
    8. '.runners' → logprob: -11.753437995910645
    9. 'uns' → logprob: -13.003437995910645
    10. 'unning' → logprob: -13.253437995910645

Token 972: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.004081485792994499
    2. 'score' → logprob: -5.5040812492370605
    3. '_scores' → logprob: -13.379081726074219
    4. '_SCORE' → logprob: -14.504081726074219
    5. 'scores' → logprob: -15.254081726074219
    6. 'Score' → logprob: -15.379081726074219
    7. 's' → logprob: -15.629081726074219
    8. '
' → logprob: -15.629081726074219
    9. '	score' → logprob: -17.25408172607422
    10. ' score' → logprob: -17.50408172607422

Token 973: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -6.704273118884885e-07
    2. 'and' → logprob: -15.875000953674316
    3. '_plus' → logprob: -16.125
    4. '_add' → logprob: -16.25
    5. '_AND' → logprob: -16.375
    6. '_clear' → logprob: -16.625
    7. '_' → logprob: -17.375
    8. '
' → logprob: -18.25
    9. '```' → logprob: -18.75
    10. '   ' → logprob: -19.375

Token 974: '_clear' (ID: 51408)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.0028174780309200287
    2. '_clear' → logprob: -5.877817630767822
    3. '
' → logprob: -11.752817153930664
    4. ' clear' → logprob: -13.002817153930664
    5. 'Clear' → logprob: -14.127817153930664
    6. 'return' → logprob: -14.127817153930664
    7. '```' → logprob: -15.502817153930664
    8. '

' → logprob: -16.002817153930664
    9. '	clear' → logprob: -16.127817153930664
    10. '   ' → logprob: -16.252817153930664

Token 975: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.19731204211711884
    2. '()' → logprob: -1.8223119974136353
    3. '           ' → logprob: -4.072311878204346
    4. '
' → logprob: -8.322312355041504
    5. '()
' → logprob: -10.072312355041504
    6. '(' → logprob: -10.072312355041504
    7. '()+' → logprob: -10.947312355041504
    8. '()

' → logprob: -11.697312355041504
    9. '(
' → logprob: -12.197312355041504
    10. '+' → logprob: -12.572312355041504

Token 976: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003294513560831547
    2. '
' → logprob: -5.753294467926025
    3. '```' → logprob: -10.253294944763184
    4. '       ' → logprob: -10.378294944763184
    5. 'self' → logprob: -10.753294944763184
    6. '   ' → logprob: -11.378294944763184
    7. '               ' → logprob: -12.003294944763184
    8. '            
' → logprob: -12.878294944763184
    9. '<|end|>' → logprob: -12.878294944763184
    10. ' self' → logprob: -13.253294944763184

Token 977: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03883703425526619
    2. ' self' → logprob: -3.28883695602417
    3. '           ' → logprob: -7.28883695602417
    4. '       ' → logprob: -9.913837432861328
    5. '	self' → logprob: -10.288837432861328
    6. '
' → logprob: -10.788837432861328
    7. '   ' → logprob: -12.788837432861328
    8. ' ' → logprob: -13.663837432861328
    9. '[self' → logprob: -13.913837432861328
    10. '```' → logprob: -14.038837432861328

Token 978: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.1002650186419487
    2. 'score' → logprob: -2.3502650260925293
    3. '.' → logprob: -9.975264549255371
    4. ' score' → logprob: -11.725264549255371
    5. '	score' → logprob: -12.975264549255371
    6. ' .' → logprob: -14.100264549255371
    7. 'Score' → logprob: -15.475264549255371
    8. '_score' → logprob: -15.725264549255371
    9. '
' → logprob: -16.100265502929688
    10. 'scores' → logprob: -16.850265502929688

Token 979: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868781626224518
    2. ' +=' → logprob: -1.1368781328201294
    3. '+' → logprob: -12.88687801361084
    4. '           ' → logprob: -13.38687801361084
    5. ']+=' → logprob: -13.88687801361084
    6. '       ' → logprob: -14.76187801361084
    7. '        ' → logprob: -14.88687801361084
    8. '=' → logprob: -15.01187801361084
    9. '          ' → logprob: -15.38687801361084
    10. '    ' → logprob: -15.51187801361084

Token 980: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.16025662422180176
    2. ' runs' → logprob: -1.9102566242218018
    3. 'run' → logprob: -10.410256385803223
    4. ' run' → logprob: -13.410256385803223
    5. '_runs' → logprob: -15.035256385803223
    6. 'r' → logprob: -15.285256385803223
    7. ' ' → logprob: -16.53525733947754
    8. ' ' → logprob: -16.66025733947754
    9. '
' → logprob: -16.91025733947754
    10. '```' → logprob: -17.28525733947754

Token 981: '_sc' (ID: 29726)
  Prédit: '_sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sc' → logprob: -1.9385402993066236e-05
    2. '_' → logprob: -11.750019073486328
    3. 'sc' → logprob: -12.000019073486328
    4. '_score' → logprob: -13.500019073486328
    5. '_scores' → logprob: -13.625019073486328
    6. '_runs' → logprob: -14.125019073486328
    7. '_scaled' → logprob: -14.125019073486328
    8. 'ed' → logprob: -15.375019073486328
    9. 's' → logprob: -15.875019073486328
    10. '```' → logprob: -16.125019073486328

Token 982: 'ored' (ID: 4142)
  Prédit: 'ored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ored' → logprob: -4.811348480870947e-05
    2. 'red' → logprob: -11.25004768371582
    3. ' ored' → logprob: -11.50004768371582
    4. 'ore' → logprob: -12.37504768371582
    5. '   ' → logprob: -12.62504768371582
    6. 'o' → logprob: -12.62504768371582
    7. 'or' → logprob: -13.00004768371582
    8. 'ord' → logprob: -13.12504768371582
    9. '>' → logprob: -13.75004768371582
    10. '[' → logprob: -13.87504768371582

Token 983: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5267733335494995
    2. '
' → logprob: -0.9017733335494995
    3. 'elif' → logprob: -6.276773452758789
    4. '<|end|>' → logprob: -6.776773452758789
    5. ' elif' → logprob: -7.776773452758789
    6. '    
' → logprob: -9.901773452758789
    7. '        
' → logprob: -9.901773452758789
    8. '	elif' → logprob: -10.776773452758789
    9. '
' → logprob: -11.026773452758789
    10. '<|end|>' → logprob: -11.401773452758789

Token 984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10201051831245422
    2. 'elif' → logprob: -3.352010488510132
    3. ' elif' → logprob: -3.477010488510132
    4. '
' → logprob: -3.477010488510132
    5. ' else' → logprob: -9.977010726928711
    6. 'else' → logprob: -10.227010726928711
    7. '	elif' → logprob: -10.602010726928711
    8. '```' → logprob: -11.102010726928711
    9. '        
' → logprob: -11.602010726928711
    10. '   ' → logprob: -11.852010726928711

Token 985: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.14511987566947937
    2. '       ' → logprob: -2.1451199054718018
    3. ' elif' → logprob: -4.020119667053223
    4. 'else' → logprob: -9.770119667053223
    5. '	elif' → logprob: -11.395119667053223
    6. '
' → logprob: -12.645119667053223
    7. '```' → logprob: -13.395119667053223
    8. 'el' → logprob: -13.895119667053223
    9. '   ' → logprob: -14.145119667053223
    10. ' else' → logprob: -14.270119667053223

Token 986: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.6326197981834412
    2. 'event' → logprob: -0.7576197981834412
    3. '"' → logprob: -12.007619857788086
    4. '(event' → logprob: -12.257619857788086
    5. '	event' → logprob: -12.257619857788086
    6. '[event' → logprob: -13.132619857788086
    7. ' ' → logprob: -13.757619857788086
    8. '   ' → logprob: -15.132619857788086
    9. '       ' → logprob: -15.132619857788086
    10. '    ' → logprob: -15.507619857788086

Token 987: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2520447373390198
    2. '==' → logprob: -1.502044677734375
    3. '[' → logprob: -10.002044677734375
    4. '=="' → logprob: -10.252044677734375
    5. ' ' → logprob: -11.877044677734375
    6. ' =' → logprob: -12.252044677734375
    7. '=' → logprob: -12.252044677734375
    8. ' =="' → logprob: -12.377044677734375
    9. '===' → logprob: -12.502044677734375
    10. '==
' → logprob: -13.252044677734375

Token 988: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07016617059707642
    2. ' "' → logprob: -2.6951661109924316
    3. ''' → logprob: -9.07016658782959
    4. '"O' → logprob: -10.32016658782959
    5. ' '' → logprob: -10.94516658782959
    6. '"K' → logprob: -11.32016658782959
    7. '"B' → logprob: -11.82016658782959
    8. '"I' → logprob: -11.94516658782959
    9. '"P' → logprob: -12.07016658782959
    10. ' ' → logprob: -12.07016658782959

Token 989: 'OUT' (ID: 5858)
  Prédit: 'OUT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUT' → logprob: -0.0019335162360221148
    2. 'STR' → logprob: -6.626933574676514
    3. 'W' → logprob: -8.626933097839355
    4. ' OUT' → logprob: -8.626933097839355
    5. '"' → logprob: -8.876933097839355
    6. 'S' → logprob: -10.751933097839355
    7. 'out' → logprob: -10.876933097839355
    8. 'K' → logprob: -11.376933097839355
    9. 'Out' → logprob: -11.501933097839355
    10. '_OUT' → logprob: -11.501933097839355

Token 990: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.0013845206703990698
    2. '":' → logprob: -6.876384735107422
    3. '":
' → logprob: -8.376384735107422
    4. '"' → logprob: -9.376384735107422
    5. ':
' → logprob: -11.126384735107422
    6. '       ' → logprob: -12.001384735107422
    7. '__":
' → logprob: -12.501384735107422
    8. '"):
' → logprob: -12.626384735107422
    9. '   ' → logprob: -12.751384735107422
    10. '":

' → logprob: -13.376384735107422

Token 991: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1454945057630539
    2. '
' → logprob: -2.2704944610595703
    3. ':
' → logprob: -4.02049446105957
    4. '<|end|>' → logprob: -5.14549446105957
    5. '           ' → logprob: -6.14549446105957
    6. 'self' → logprob: -6.52049446105957
    7. '<|end|>' → logprob: -6.89549446105957
    8. '```' → logprob: -7.14549446105957
    9. '        
' → logprob: -7.64549446105957
    10. '{
' → logprob: -7.89549446105957

Token 992: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009328982559964061
    2. '           ' → logprob: -7.875932693481445
    3. ' self' → logprob: -8.125932693481445
    4. '       ' → logprob: -8.375932693481445
    5. '
' → logprob: -11.125932693481445
    6. '	self' → logprob: -11.500932693481445
    7. '   ' → logprob: -13.750932693481445
    8. '```' → logprob: -16.000932693481445
    9. '	       ' → logprob: -16.125932693481445
    10. '               ' → logprob: -16.125932693481445

Token 993: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -3.190178904333152e-05
    2. '.' → logprob: -10.375031471252441
    3. ' .' → logprob: -14.875031471252441
    4. 'outs' → logprob: -16.250032424926758
    5. '.os' → logprob: -17.125032424926758
    6. '.Out' → logprob: -17.375032424926758
    7. '```' → logprob: -17.500032424926758
    8. '.outputs' → logprob: -17.875032424926758
    9. '.ins' → logprob: -18.250032424926758
    10. '.OUT' → logprob: -18.375032424926758

Token 994: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. '+=' → logprob: -16.375
    3. '```' → logprob: -17.375
    4. 'outs' → logprob: -17.625
    5. 'ts' → logprob: -17.75
    6. 'S' → logprob: -17.875
    7. '_s' → logprob: -19.125
    8. 'puts' → logprob: -19.25
    9. '`s' → logprob: -19.625
    10. '	s' → logprob: -19.625

Token 995: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741082489490509
    2. '+=' → logprob: -0.9741082191467285
    3. '	' → logprob: -11.224108695983887
    4. '    ' → logprob: -11.474108695983887
    5. ']+=' → logprob: -12.599108695983887
    6. '   ' → logprob: -13.224108695983887
    7. '=' → logprob: -13.974108695983887
    8. '        ' → logprob: -14.849108695983887
    9. '           ' → logprob: -15.599108695983887
    10. '       ' → logprob: -15.724108695983887

Token 996: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.133615493774414
    4. ' ' → logprob: -16.633615493774414
    5. '           ' → logprob: -19.133615493774414
    6. '```' → logprob: -19.258615493774414
    7. '	' → logprob: -19.883615493774414
    8. '
' → logprob: -20.133615493774414
    9. '       ' → logprob: -20.383615493774414
    10. '１' → logprob: -20.758615493774414

Token 997: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -21.875
    5. '
' → logprob: -22.75
    6. '１' → logprob: -23.75
    7. '۱' → logprob: -24.25
    8. ' ' → logprob: -24.5
    9. '`' → logprob: -24.5
    10. '  ' → logprob: -24.625

Token 998: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004754307214170694
    2. '       ' → logprob: -6.004754543304443
    3. '
' → logprob: -6.629754543304443
    4. 'if' → logprob: -7.754754543304443
    5. ' if' → logprob: -8.504754066467285
    6. '<|end|>' → logprob: -9.254754066467285
    7. '		' → logprob: -9.379754066467285
    8. '               ' → logprob: -9.754754066467285
    9. '   ' → logprob: -11.379754066467285
    10. '	       ' → logprob: -11.504754066467285

Token 999: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18844743072986603
    2. '       ' → logprob: -2.5634474754333496
    3. 'if' → logprob: -2.6884474754333496
    4. ' if' → logprob: -3.8134474754333496
    5. '
' → logprob: -5.93844747543335
    6. '<|end|>' → logprob: -7.18844747543335
    7. '   ' → logprob: -7.93844747543335
    8. '               ' → logprob: -8.063446998596191
    9. '		' → logprob: -8.938446998596191
    10. '	if' → logprob: -9.438446998596191

Token 1000: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011201553046703339
    2. '           ' → logprob: -5.01120138168335
    3. ' if' → logprob: -5.51120138168335
    4. '       ' → logprob: -7.76120138168335
    5. '	if' → logprob: -12.011201858520508
    6. '   ' → logprob: -13.386201858520508
    7. '
' → logprob: -14.761201858520508
    8. '		' → logprob: -15.386201858520508
    9. 'self' → logprob: -15.886201858520508
    10. '               ' → logprob: -16.011201858520508

Token 1001: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889000326395035
    2. ' self' → logprob: -2.578890085220337
    3. '(self' → logprob: -15.953889846801758
    4. '	self' → logprob: -16.703889846801758
    5. '
' → logprob: -18.453889846801758
    6. '   ' → logprob: -18.953889846801758
    7. ' ' → logprob: -19.828889846801758
    8. '```' → logprob: -20.078889846801758
    9. '       ' → logprob: -21.078889846801758
    10. '[self' → logprob: -21.203889846801758

Token 1002: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.0002338144404347986
    2. '.' → logprob: -8.37523365020752
    3. '	out' → logprob: -13.87523365020752
    4. 'out' → logprob: -14.12523365020752
    5. ' .' → logprob: -14.62523365020752
    6. '```' → logprob: -15.62523365020752
    7. '
' → logprob: -15.75023365020752
    8. '.OUT' → logprob: -15.87523365020752
    9. '.outputs' → logprob: -16.250234603881836
    10. '$out' → logprob: -17.000234603881836

Token 1003: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013220344670116901
    2. '==' → logprob: -4.638220310211182
    3. '>=' → logprob: -6.138220310211182
    4. ' ==' → logprob: -7.013220310211182
    5. '_' → logprob: -8.63822078704834
    6. ' >=' → logprob: -8.88822078704834
    7. '=' → logprob: -10.63822078704834
    8. '_s' → logprob: -10.76322078704834
    9. ' s' → logprob: -11.01322078704834
    10. 'S' → logprob: -12.88822078704834

Token 1004: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.10744310915470123
    2. ' >=' → logprob: -2.35744309425354
    3. '==' → logprob: -4.982443332672119
    4. ' ==' → logprob: -7.982443332672119
    5. ')>=' → logprob: -12.607442855834961
    6. '=' → logprob: -12.732442855834961
    7. ']>=' → logprob: -13.482442855834961
    8. ' ' → logprob: -14.107442855834961
    9. ' ' → logprob: -14.232442855834961
    10. '   ' → logprob: -14.607442855834961

Token 1005: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005033321212977171
    2. 'In' → logprob: -5.880033493041992
    3. ' self' → logprob: -6.255033493041992
    4. '3' → logprob: -8.130033493041992
    5. ' In' → logprob: -11.755033493041992
    6. '   ' → logprob: -13.255033493041992
    7. '	self' → logprob: -15.130033493041992
    8. '	In' → logprob: -16.005033493041992
    9. 'Self' → logprob: -16.130033493041992
    10. ' ' → logprob: -16.505033493041992

Token 1006: '.MAX' (ID: 25075)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2543591558933258
    2. 'In' → logprob: -2.004359245300293
    3. '3' → logprob: -2.754359245300293
    4. ' self' → logprob: -3.754359245300293
    5. ' In' → logprob: -6.504359245300293
    6. 'Base' → logprob: -6.754359245300293
    7. ' ' → logprob: -10.254359245300293
    8. '   ' → logprob: -11.379359245300293
    9. 'Bases' → logprob: -11.379359245300293
    10. '	In' → logprob: -11.504359245300293

Token 1007: '_OUT' (ID: 25918)
  Prédit: '_OUT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_OUT' → logprob: -1.27099974633893e-05
    2. '_out' → logprob: -11.875012397766113
    3. 'OUT' → logprob: -12.500012397766113
    4. '_' → logprob: -14.625012397766113
    5. '_Out' → logprob: -14.625012397766113
    6. '
' → logprob: -14.750012397766113
    7. '\' → logprob: -16.00001335144043
    8. '.OUT' → logprob: -16.12501335144043
    9. '_
' → logprob: -16.25001335144043
    10. '```' → logprob: -16.37501335144043

Token 1008: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.44233521819114685
    2. 'OUT' → logprob: -1.1923352479934692
    3. '_OUT' → logprob: -2.9423351287841797
    4. 'OS' → logprob: -7.19233512878418
    5. 'Out' → logprob: -8.31733512878418
    6. 'outs' → logprob: -10.19233512878418
    7. '_out' → logprob: -10.44233512878418
    8. '   ' → logprob: -10.56733512878418
    9. 'UT' → logprob: -10.69233512878418
    10. '       ' → logprob: -11.06733512878418

Token 1009: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16392827033996582
    2. ':' → logprob: -2.538928270339966
    3. '           ' → logprob: -2.663928270339966
    4. '               ' → logprob: -6.038928031921387
    5. '       ' → logprob: -10.163928031921387
    6. ' and' → logprob: -10.538928031921387
    7. 'and' → logprob: -10.538928031921387
    8. '():
' → logprob: -10.913928031921387
    9. '<|end|>' → logprob: -11.288928031921387
    10. '):
' → logprob: -11.788928031921387

Token 1010: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10381101816892624
    2. '               ' → logprob: -2.353811025619507
    3. 'self' → logprob: -5.853810787200928
    4. '
' → logprob: -7.853810787200928
    5. '            
' → logprob: -8.603811264038086
    6. ' self' → logprob: -9.728811264038086
    7. '<|end|>' → logprob: -11.353811264038086
    8. '	       ' → logprob: -11.478811264038086
    9. '    
' → logprob: -11.603811264038086
    10. '                
' → logprob: -11.603811264038086

Token 1011: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.056673988699913025
    2. '           ' → logprob: -3.056674003601074
    3. ' self' → logprob: -5.181674003601074
    4. '               ' → logprob: -6.056674003601074
    5. '	self' → logprob: -9.556674003601074
    6. '		' → logprob: -12.431674003601074
    7. '   ' → logprob: -12.681674003601074
    8. '	           ' → logprob: -12.806674003601074
    9. '	       ' → logprob: -12.931674003601074
    10. '(self' → logprob: -13.056674003601074

Token 1012: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.5577775128767826e-06
    2. 'ended' → logprob: -13.125005722045898
    3. '.end' → logprob: -13.625005722045898
    4. ' .' → logprob: -14.375005722045898
    5. '           ' → logprob: -14.375005722045898
    6. '       ' → logprob: -15.000005722045898
    7. '.finished' → logprob: -15.625005722045898
    8. '.set' → logprob: -16.2500057220459
    9. '.completed' → logprob: -16.3750057220459
    10. '.ends' → logprob: -16.3750057220459

Token 1013: 'ended' (ID: 3933)
  Prédit: 'ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ended' → logprob: -4.320199877838604e-07
    2. ' ended' → logprob: -15.375
    3. 'ENDED' → logprob: -16.5
    4. '-ended' → logprob: -17.25
    5. 'Ended' → logprob: -17.875
    6. 'set' → logprob: -18.375
    7. '_' → logprob: -18.5
    8. '
' → logprob: -19.125
    9. 'score' → logprob: -19.5
    10. 'ed' → logprob: -19.5

Token 1014: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12699635326862335
    2. ' =' → logprob: -2.1269962787628174
    3. '=True' → logprob: -10.626996040344238
    4. '           ' → logprob: -10.751996040344238
    5. '               ' → logprob: -11.126996040344238
    6. '=
' → logprob: -12.626996040344238
    7. '       ' → logprob: -14.376996040344238
    8. '                ' → logprob: -14.376996040344238
    9. '                   ' → logprob: -14.626996040344238
    10. ' =
' → logprob: -14.751996040344238

Token 1015: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03804149478673935
    2. ' True' → logprob: -3.288041591644287
    3. '(True' → logprob: -16.913042068481445
    4. '=True' → logprob: -18.538042068481445
    5. 'Tr' → logprob: -22.163042068481445
    6. 'true' → logprob: -22.538042068481445
    7. '
' → logprob: -22.663042068481445
    8. '   ' → logprob: -23.038042068481445
    9. '.True' → logprob: -23.163042068481445
    10. '_true' → logprob: -23.163042068481445

Token 1016: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023874705657362938
    2. '           ' → logprob: -3.7738747596740723
    3. 'return' → logprob: -8.023874282836914
    4. '       ' → logprob: -9.398874282836914
    5. '<|end|>' → logprob: -10.148874282836914
    6. '
' → logprob: -10.273874282836914
    7. '		' → logprob: -10.898874282836914
    8. '		       ' → logprob: -11.398874282836914
    9. '              ' → logprob: -11.523874282836914
    10. ' return' → logprob: -11.523874282836914

Token 1017: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08991627395153046
    2. '           ' → logprob: -2.464916229248047
    3. 'return' → logprob: -8.089916229248047
    4. '       ' → logprob: -8.464916229248047
    5. '		' → logprob: -9.089916229248047
    6. '	return' → logprob: -9.464916229248047
    7. '	' → logprob: -9.589916229248047
    8. '	       ' → logprob: -9.589916229248047
    9. '	           ' → logprob: -10.589916229248047
    10. '		       ' → logprob: -10.714916229248047

Token 1018: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1498907208442688
    2. ' elif' → logprob: -2.649890661239624
    3. 'else' (adapté à ' else') → logprob: -3.399890661239624
    4. '       ' → logprob: -3.524890661239624
    5. ' else' → logprob: -5.274890899658203
    6. '   ' → logprob: -8.399890899658203
    7. '
' → logprob: -8.524890899658203
    8. '	elif' → logprob: -9.149890899658203
    9. '```' → logprob: -11.399890899658203
    10. '<|end|>' → logprob: -11.774890899658203

Token 1019: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9588537812232971
    2. '       ' → logprob: -0.9588537812232971
    3. ' if' → logprob: -1.8338537216186523
    4. ':
' → logprob: -3.2088537216186523
    5. 'if' → logprob: -4.208853721618652
    6. '           ' → logprob: -4.333853721618652
    7. '   ' → logprob: -6.583853721618652
    8. '        ' → logprob: -6.583853721618652
    9. '(' → logprob: -7.708853721618652
    10. ' :' → logprob: -7.833853721618652

Token 1020: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.612078070640564
    2. '           ' → logprob: -1.487078070640564
    3. '       ' → logprob: -2.1120781898498535
    4. ' if' → logprob: -2.2370781898498535
    5. '   ' → logprob: -5.8620781898498535
    6. 'self' → logprob: -7.9870781898498535
    7. '#' → logprob: -8.112077713012695
    8. 'return' → logprob: -8.362077713012695
    9. '    ' → logprob: -9.362077713012695
    10. '```' → logprob: -9.987077713012695

Token 1021: ' raise' (ID: 9338)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.8631842136383057
    2. 'if' → logprob: -0.9881842136383057
    3. '#' → logprob: -1.7381842136383057
    4. ' if' → logprob: -4.613183975219727
    5. 'self' → logprob: -5.363183975219727
    6. '           ' → logprob: -5.363183975219727
    7. 'return' → logprob: -5.488183975219727
    8. '       ' → logprob: -6.238183975219727
    9. ' runs' → logprob: -6.738183975219727
    10. ' #' → logprob: -6.738183975219727

Token 1022: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0009130131802521646
    2. ' Value' → logprob: -7.000913143157959
    3. 'Runtime' → logprob: -14.5009126663208
    4. 'Not' → logprob: -14.8759126663208
    5. 'Val' → logprob: -16.250913619995117
    6. 'Assertion' → logprob: -16.250913619995117
    7. 'Exception' → logprob: -16.625913619995117
    8. 'Syntax' → logprob: -17.000913619995117
    9. '_Value' → logprob: -17.000913619995117
    10. 'Name' → logprob: -17.250913619995117

Token 1023: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0002941095153801143
    2. 'rror' → logprob: -8.250293731689453
    3. 'Token' → logprob: -10.750293731689453
    4. 'Value' → logprob: -11.750293731689453
    5. '(' → logprob: -13.500293731689453
    6. 'SError' → logprob: -14.250293731689453
    7. 'Exception' → logprob: -14.875293731689453
    8. 'error' → logprob: -15.375293731689453
    9. 'Errors' → logprob: -16.000293731689453
    10. '_error' → logprob: -16.000293731689453

Token 1024: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5870374441146851
    2. '(' → logprob: -0.8370374441146851
    3. '(f' → logprob: -5.212037563323975
    4. '('' → logprob: -5.712037563323975
    5. '(
' → logprob: -6.087037563323975
    6. 'f' → logprob: -13.212037086486816
    7. '()' → logprob: -13.462037086486816
    8. '("""' → logprob: -13.962037086486816
    9. '("'' → logprob: -14.337037086486816
    10. '(

' → logprob: -14.337037086486816

Token 1025: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.11036208271980286
    2. 'f' → logprob: -2.3603620529174805
    3. '"' → logprob: -4.6103620529174805
    4. '           ' → logprob: -9.73536205291748
    5. '(f' → logprob: -10.23536205291748
    6. ' "' → logprob: -10.36036205291748
    7. ''' → logprob: -11.23536205291748
    8. ''f' → logprob: -12.23536205291748
    9. '	f' → logprob: -12.23536205291748
    10. ')' → logprob: -12.86036205291748

Token 1026: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7286536693572998
    2. ' f' → logprob: -0.8536536693572998
    3. '"' → logprob: -2.9786536693573
    4. '(f' → logprob: -3.8536536693573
    5. '(' → logprob: -3.9786536693573
    6. '("' → logprob: -7.353653907775879
    7. ''' → logprob: -8.978653907775879
    8. '(
' → logprob: -10.728653907775879
    9. ')' → logprob: -12.478653907775879
    10. '	f' → logprob: -12.603653907775879

Token 1027: 'Unknown' (ID: 24560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.024047883227467537
    2. 'Unknown' → logprob: -4.7740478515625
    3. '"' → logprob: -5.0240478515625
    4. ' f' → logprob: -5.5240478515625
    5. 'Unexpected' → logprob: -6.0240478515625
    6. 'Invalid' → logprob: -6.5240478515625
    7. 'Unsupported' → logprob: -7.3990478515625
    8. 'Un' → logprob: -9.1490478515625
    9. 'Unhandled' → logprob: -9.7740478515625
    10. ' Unknown' → logprob: -10.6490478515625

Token 1028: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.002492183819413185
    2. 'event' → logprob: -6.0024919509887695
    3. '	event' → logprob: -12.00249195098877
    4. '(event' → logprob: -12.25249195098877
    5. ' ' → logprob: -13.00249195098877
    6. '_event' → logprob: -13.25249195098877
    7. 'Event' → logprob: -14.00249195098877
    8. '(' → logprob: -15.75249195098877
    9. ' evento' → logprob: -16.127492904663086
    10. ' input' → logprob: -16.252492904663086

Token 1029: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050097428262233734
    2. '{' → logprob: -3.4250974655151367
    3. '(' → logprob: -4.300097465515137
    4. ''{' → logprob: -6.925097465515137
    5. ' f' → logprob: -7.425097465515137
    6. ' {' → logprob: -8.050097465515137
    7. '(f' → logprob: -8.550097465515137
    8. 'f' → logprob: -8.800097465515137
    9. '           ' → logprob: -8.925097465515137
    10. ''' → logprob: -9.300097465515137

Token 1030: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.41662096977233887
    2. '{' → logprob: -1.6666209697723389
    3. ' event' → logprob: -2.291620969772339
    4. ' f' → logprob: -3.416620969772339
    5. 'event' → logprob: -4.291621208190918
    6. ''' → logprob: -5.666621208190918
    7. ' '' → logprob: -8.166621208190918
    8. 'f' → logprob: -8.791621208190918
    9. ''{' → logprob: -9.041621208190918
    10. '`' → logprob: -9.666621208190918

Token 1031: 'event' (ID: 5671)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5782040357589722
    2. 'event' → logprob: -0.8282040357589722
    3. ' event' → logprob: -6.703204154968262
    4. ' {' → logprob: -6.953204154968262
    5. ''{' → logprob: -9.703204154968262
    6. ''' → logprob: -11.828204154968262
    7. '[event' → logprob: -12.453204154968262
    8. '`' → logprob: -12.953204154968262
    9. '(event' → logprob: -13.328204154968262
    10. '	event' → logprob: -14.328204154968262

Token 1032: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.4782690703868866
    2. ')"' → logprob: -0.978269100189209
    3. ' )' → logprob: -5.978269100189209
    4. ' }' → logprob: -6.728269100189209
    5. ')' → logprob: -8.47826862335205
    6. '"' → logprob: -8.85326862335205
    7. '}")' → logprob: -10.22826862335205
    8. '}' → logprob: -11.22826862335205
    9. '}")
' → logprob: -11.35326862335205
    10. '")' → logprob: -11.35326862335205

Token 1033: ' )
' (ID: 3270)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7139636278152466
    2. ')' → logprob: -1.5889636278152466
    3. '       ' → logprob: -1.9639636278152466
    4. '<|end|>' → logprob: -2.088963508605957
    5. ')
' → logprob: -4.213963508605957
    6. '   ' → logprob: -5.088963508605957
    7. '\n' → logprob: -5.463963508605957
    8. '        
' → logprob: -5.588963508605957
    9. '    
' → logprob: -5.838963508605957
    10. '	' → logprob: -6.213963508605957

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.098231740295887
    2. '<|end|>' → logprob: -3.098231792449951
    3. 'elif' → logprob: -4.223231792449951
    4. '
' → logprob: -4.598231792449951
    5. '        
' → logprob: -5.348231792449951
    6. 'return' → logprob: -5.473231792449951
    7. ' 
' → logprob: -5.723231792449951
    8. '   ' → logprob: -6.223231792449951
    9. '```' → logprob: -6.223231792449951
    10. ' elif' → logprob: -6.598231792449951

Token 1035: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4209485352039337
    2. '
' → logprob: -1.4209485054016113
    3. '       ' → logprob: -2.7959485054016113
    4. 'return' (adapté à ' return') → logprob: -4.170948505401611
    5. '        
' → logprob: -4.670948505401611
    6. ' return' → logprob: -4.920948505401611
    7. '    
' → logprob: -5.920948505401611
    8. '  
' → logprob: -6.545948505401611
    9. '\n' → logprob: -7.045948505401611
    10. '   ' → logprob: -7.295948505401611

Token 1036: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014258584938943386
    2. ' self' → logprob: -4.38925838470459
    3. 'False' → logprob: -6.38925838470459
    4. ' False' → logprob: -9.63925838470459
    5. '	self' → logprob: -13.26425838470459
    6. 'not' → logprob: -14.26425838470459
    7. '   ' → logprob: -16.264259338378906
    8. '
' → logprob: -16.639259338378906
    9. ' not' → logprob: -16.764259338378906
    10. '(self' → logprob: -16.764259338378906

Token 1037: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010092071170220152
    2. 'ended' → logprob: -9.500101089477539
    3. '.out' → logprob: -11.250101089477539
    4. '.ends' → logprob: -13.125101089477539
    5. '.endswith' → logprob: -13.250101089477539
    6. '.started' → logprob: -13.375101089477539
    7. '.end' → logprob: -13.625101089477539
    8. '.has' → logprob: -14.000101089477539
    9. '
' → logprob: -14.250101089477539
    10. ' .' → logprob: -14.375101089477539

Token 1038: 'ended' (ID: 3933)
  Prédit: 'ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ended' → logprob: 0.0
    2. 'ed' → logprob: -19.0
    3. ' ended' → logprob: -19.5
    4. '-ended' → logprob: -19.5
    5. 'ENDED' → logprob: -20.125
    6. 'Ended' → logprob: -21.625
    7. 'ende' → logprob: -21.75
    8. 'ends' → logprob: -21.875
    9. 'e' → logprob: -22.0
    10. '_' → logprob: -22.125

Token 1039: '


' (ID: 2499)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.021508537232875824
    2. '<|end|>' → logprob: -4.271508693695068
    3. ' elif' → logprob: -5.646508693695068
    4. '
' → logprob: -5.896508693695068
    5. '	elif' → logprob: -7.646508693695068
    6. 'else' → logprob: -8.89650821685791
    7. '<|end|>' → logprob: -9.39650821685791
    8. '   ' → logprob: -9.89650821685791
    9. 'el' → logprob: -9.89650821685791
    10. '    
' → logprob: -10.02150821685791

Token 1040: 'class' (ID: 1444)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18966716527938843
    2. 'def' → logprob: -2.439667224884033
    3. '<|end|>' → logprob: -2.564667224884033
    4. '```' → logprob: -5.564667224884033
    5. '   ' → logprob: -6.064667224884033
    6. '       ' → logprob: -6.814667224884033
    7. 'return' → logprob: -8.189666748046875
    8. ' elif' → logprob: -8.189666748046875
    9. '<|end|>' → logprob: -8.689666748046875
    10. '	elif' → logprob: -8.814666748046875

Token 1041: ' Baseball' (ID: 59649)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.15952982008457184
    2. 'Game' → logprob: -2.2845299243927
    3. ' Baseball' → logprob: -3.2845299243927
    4. ' In' → logprob: -6.159529685974121
    5. 'Base' → logprob: -6.409529685974121
    6. ' Base' → logprob: -6.784529685974121
    7. ' Batter' → logprob: -6.784529685974121
    8. ' Play' → logprob: -7.909529685974121
    9. ' Player' → logprob: -8.034529685974121
    10. ' Team' → logprob: -8.159529685974121

Token 1042: 'Simulation' (ID: 71306)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.001432620221748948
    2. 'Simulator' → logprob: -6.876432418823242
    3. '(' → logprob: -8.626432418823242
    4. ':' → logprob: -10.376432418823242
    5. '():' → logprob: -10.751432418823242
    6. 'Player' → logprob: -10.876432418823242
    7. 'Event' → logprob: -11.001432418823242
    8. 'Simulation' → logprob: -11.126432418823242
    9. 'Team' → logprob: -11.251432418823242
    10. 'Play' → logprob: -11.376432418823242

Token 1043: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1318882256746292
    2. '(' → logprob: -2.1318881511688232
    3. ':
' → logprob: -5.631888389587402
    4. ' :' → logprob: -7.006888389587402
    5. '(object' → logprob: -7.881888389587402
    6. ' :
' → logprob: -10.631888389587402
    7. '():' → logprob: -11.006888389587402
    8. ':

' → logprob: -11.881888389587402
    9. '(
' → logprob: -12.006888389587402
    10. '```' → logprob: -12.256888389587402

Token 1044: ' object' (ID: 2817)
  Prédit: '(object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(object' → logprob: -0.24360054731369019
    2. ' object' → logprob: -1.868600606918335
    3. 'object' → logprob: -2.868600606918335
    4. ':' → logprob: -5.993600368499756
    5. '(' → logprob: -6.243600368499756
    6. ' (' → logprob: -7.868600368499756
    7. ')object' → logprob: -9.118600845336914
    8. '	object' → logprob: -9.868600845336914
    9. ':
' → logprob: -10.118600845336914
    10. '):' → logprob: -11.743600845336914

Token 1045: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4620581567287445
    2. ' ):' → logprob: -1.712058186531067
    3. '):
' → logprob: -1.962058186531067
    4. ' ):
' → logprob: -3.5870580673217773
    5. '(' → logprob: -4.462058067321777
    6. '   ' → logprob: -5.337058067321777
    7. ':' → logprob: -5.837058067321777
    8. ')' → logprob: -7.087058067321777
    9. ' )' → logprob: -7.587058067321777
    10. ':
' → logprob: -8.837058067321777

Token 1046: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009435765445232391
    2. 'def' → logprob: -5.634435653686523
    3. '
' → logprob: -6.134435653686523
    4. 'class' → logprob: -6.509435653686523
    5. '	def' → logprob: -6.509435653686523
    6. ' def' → logprob: -7.634435653686523
    7. '    
' → logprob: -9.509435653686523
    8. '```' → logprob: -9.884435653686523
    9. '(' → logprob: -11.009435653686523
    10. '    ' → logprob: -12.009435653686523

Token 1047: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6880956888198853
    2. '   ' → logprob: -0.8130956888198853
    3. 'def' → logprob: -3.4380955696105957
    4. 'class' → logprob: -4.063095569610596
    5. '
' → logprob: -5.938095569610596
    6. ' class' → logprob: -7.313095569610596
    7. '    ' → logprob: -7.688095569610596
    8. '	def' → logprob: -7.813095569610596
    9. '```' → logprob: -8.063096046447754
    10. '    
' → logprob: -9.063096046447754

Token 1048: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02660738117992878
    2. 'def' → logprob: -3.9016072750091553
    3. 'class' → logprob: -5.776607513427734
    4. ' def' → logprob: -5.901607513427734
    5. '
' → logprob: -9.026607513427734
    6. '"""' → logprob: -10.401607513427734
    7. '"""
' → logprob: -10.651607513427734
    8. '    ' → logprob: -11.151607513427734
    9. '	def' → logprob: -11.401607513427734
    10. '    
' → logprob: -12.401607513427734

Token 1049: ' Or' (ID: 2604)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47587600350379944
    2. 'def' → logprob: -0.975875973701477
    3. '   ' → logprob: -6.3508758544921875
    4. 'class' → logprob: -10.225875854492188
    5. '	def' → logprob: -11.975875854492188
    6. '
' → logprob: -13.225875854492188
    7. '```' → logprob: -13.350875854492188
    8. '"""
' → logprob: -13.475875854492188
    9. '    ' → logprob: -13.475875854492188
    10. '"""' → logprob: -13.850875854492188

Token 1050: 'chestr' (ID: 163210)
  Prédit: 'chestr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chestr' → logprob: -0.0031215064227581024
    2. 'gan' → logprob: -6.003121376037598
    3. 'ches' → logprob: -7.503121376037598
    4. 'iented' → logprob: -10.378121376037598
    5. '   ' → logprob: -10.503121376037598
    6. 'iginal' → logprob: -10.503121376037598
    7. 'ch' → logprob: -12.753121376037598
    8. 'chestra' → logprob: -13.253121376037598
    9. 'igin' → logprob: -14.003121376037598
    10. '```' → logprob: -14.253121376037598

Token 1051: 'ator' (ID: 1246)
  Prédit: 'ates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.28170913457870483
    2. 'ate' → logprob: -1.4067091941833496
    3. '   ' → logprob: -7.78170919418335
    4. 'ator' → logprob: -9.406708717346191
    5. ' at' → logprob: -11.406708717346191
    6. '       ' → logprob: -11.656708717346191
    7. 'ating' → logprob: -12.156708717346191
    8. 'ated' → logprob: -12.156708717346191
    9. '"""
' → logprob: -12.281708717346191
    10. '```' → logprob: -12.406708717346191

Token 1052: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13398611545562744
    2. ':' → logprob: -2.633985996246338
    3. '   ' → logprob: -3.383985996246338
    4. ' (' → logprob: -5.758985996246338
    5. ':
' → logprob: -6.008985996246338
    6. '(
' → logprob: -6.008985996246338
    7. '.' → logprob: -6.258985996246338
    8. '<|end|>' → logprob: -6.258985996246338
    9. ' for' → logprob: -6.508985996246338
    10. ' of' → logprob: -6.508985996246338

Token 1053: ' multiple' (ID: 7598)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6963103413581848
    2. ' the' → logprob: -1.57131028175354
    3. ' sim' → logprob: -2.69631028175354
    4. 'base' → logprob: -3.19631028175354
    5. ' running' → logprob: -3.19631028175354
    6. 'Base' → logprob: -3.44631028175354
    7. ' baseball' → logprob: -3.44631028175354
    8. 'running' → logprob: -3.44631028175354
    9. 'sim' → logprob: -3.69631028175354
    10. ' base' → logprob: -5.196310520172119

Token 1054: ' innings' (ID: 59221)
  Prédit: ' innings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' innings' → logprob: -0.9738084077835083
    2. 'innings' → logprob: -1.0988084077835083
    3. 'inning' → logprob: -1.3488084077835083
    4. '   ' → logprob: -4.223808288574219
    5. '_in' → logprob: -5.348808288574219
    6. ' inning' → logprob: -5.723808288574219
    7. ' at' → logprob: -5.848808288574219
    8. 'def' → logprob: -7.223808288574219
    9. ' game' → logprob: -7.598808288574219
    10. ' games' → logprob: -7.598808288574219

Token 1055: '/d' (ID: 6662)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7510210275650024
    2. '(' → logprob: -1.2510210275650024
    3. '   ' → logprob: -2.001020908355713
    4. ':
' → logprob: -2.751020908355713
    5. '
' → logprob: -4.001020908355713
    6. '.' → logprob: -4.501020908355713
    7. ',' → logprob: -5.626020908355713
    8. '(
' → logprob: -6.251020908355713
    9. ' :
' → logprob: -6.626020908355713
    10. '):
' → logprob: -7.001020908355713

Token 1056: 'atasets' (ID: 105003)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.8023000955581665
    2. '   ' → logprob: -2.177299976348877
    3. 'r' → logprob: -2.677299976348877
    4. ' games' → logprob: -2.802299976348877
    5. 'games' → logprob: -2.802299976348877
    6. 'ef' → logprob: -3.177299976348877
    7. 'efs' → logprob: -3.302299976348877
    8. ' plays' → logprob: -3.802299976348877
    9. 'el' → logprob: -4.052299976348877
    10. '```' → logprob: -4.177299976348877

Token 1057: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1335296630859375
    2. '(' → logprob: -1.5085296630859375
    3. ':' → logprob: -1.6335296630859375
    4. '
' → logprob: -1.8835296630859375
    5. ':
' → logprob: -2.6335296630859375
    6. '):
' → logprob: -4.1335296630859375
    7. '():
' → logprob: -5.3835296630859375
    8. '.' → logprob: -6.0085296630859375
    9. '(
' → logprob: -6.2585296630859375
    10. ',' → logprob: -6.3835296630859375

Token 1058: ' input' (ID: 3422)
  Prédit: ' events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' events' → logprob: -0.33255499601364136
    2. ' their' → logprob: -1.9575550556182861
    3. ' games' → logprob: -3.582555055618286
    4. ' def' → logprob: -3.957555055618286
    5. ' processing' → logprob: -3.957555055618286
    6. 'events' → logprob: -3.957555055618286
    7. '   ' → logprob: -4.332554817199707
    8. ' sim' → logprob: -4.957554817199707
    9. ' tracking' → logprob: -5.082554817199707
    10. ' game' → logprob: -5.332554817199707

Token 1059: '/output' (ID: 111294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36013197898864746
    2. ' events' → logprob: -1.9851319789886475
    3. 'def' → logprob: -2.9851319789886475
    4. ' def' → logprob: -3.7351319789886475
    5. '_events' → logprob: -3.9851319789886475
    6. 's' → logprob: -4.235132217407227
    7. '
' → logprob: -4.610132217407227
    8. ' lines' → logprob: -4.735132217407227
    9. '_lines' → logprob: -4.985132217407227
    10. '(' → logprob: -5.360132217407227

Token 1060: ' handling' (ID: 17491)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37097054719924927
    2. 'def' → logprob: -1.8709704875946045
    3. '   ' → logprob: -2.4959704875946045
    4. ' def' → logprob: -2.9959704875946045
    5. '(
' → logprob: -5.370970726013184
    6. ' (' → logprob: -5.495970726013184
    7. ' events' → logprob: -5.870970726013184
    8. '
' → logprob: -6.620970726013184
    9. '):
' → logprob: -6.620970726013184
    10. ' lines' → logprob: -6.870970726013184

Token 1061: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46737968921661377
    2. ':
' → logprob: -1.5923796892166138
    3. '   ' → logprob: -1.9673796892166138
    4. '):
' → logprob: -4.717379570007324
    5. '():
' → logprob: -4.967379570007324
    6. '(' → logprob: -5.092379570007324
    7. '():' → logprob: -5.842379570007324
    8. '):' → logprob: -6.342379570007324
    9. ' :
' → logprob: -6.842379570007324
    10. 'def' → logprob: -7.467379570007324

Token 1062: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28746867179870605
    2. '
' → logprob: -1.412468671798706
    3. '    
' → logprob: -5.287468910217285
    4. ' def' → logprob: -7.662468910217285
    5. 'def' → logprob: -8.412468910217285
    6. ' 
' → logprob: -8.537468910217285
    7. '```' → logprob: -9.537468910217285
    8. 'class' → logprob: -9.662468910217285
    9. '<|end|>' → logprob: -9.662468910217285
    10. '    ' → logprob: -10.537468910217285

Token 1063: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3745819628238678
    2. ' def' → logprob: -1.2495819330215454
    3. 'def' → logprob: -4.249581813812256
    4. '
' → logprob: -4.624581813812256
    5. '    
' → logprob: -7.124581813812256
    6. '```' → logprob: -7.249581813812256
    7. '	def' → logprob: -9.124582290649414
    8. ' 
' → logprob: -10.249582290649414
    9. '    ' → logprob: -10.749582290649414
    10. 'class' → logprob: -11.749582290649414

Token 1064: ' abstraction' (ID: 129564)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.8619633913040161
    2. ' def' → logprob: -0.9869633913040161
    3. 'class' → logprob: -2.2369632720947266
    4. '   ' → logprob: -3.1119632720947266
    5. 'def' → logprob: -3.8619632720947266
    6. '
' → logprob: -4.486963272094727
    7. ' is' → logprob: -4.986963272094727
    8. ' has' → logprob: -5.611963272094727
    9. ':' → logprob: -5.986963272094727
    10. 'import' → logprob: -6.111963272094727

Token 1065: ' anticip' (ID: 20155)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.29971033334732056
    2. '   ' → logprob: -2.174710273742676
    3. 'def' → logprob: -3.299710273742676
    4. ':' → logprob: -3.549710273742676
    5. ' continues' → logprob: -4.049710273742676
    6. ' provides' → logprob: -4.299710273742676
    7. '    ' → logprob: -4.424710273742676
    8. ' can' → logprob: -4.674710273742676
    9. ' handles' → logprob: -5.299710273742676
    10. ' is' → logprob: -5.799710273742676

Token 1066: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.00027587503427639604
    2. 'ate' → logprob: -9.000275611877441
    3. 'u' → logprob: -10.250275611877441
    4. 'itates' → logprob: -10.250275611877441
    5. 'lates' → logprob: -11.000275611877441
    6. '```' → logprob: -11.250275611877441
    7. 'ated' → logprob: -11.375275611877441
    8. 'ip' → logprob: -11.875275611877441
    9. 'icates' → logprob: -12.375275611877441
    10. 'es' → logprob: -12.875275611877441

Token 1067: ' future' (ID: 5277)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5791664719581604
    2. ' multiple' → logprob: -2.0791664123535156
    3. ' def' → logprob: -2.9541664123535156
    4. 'def' → logprob: -2.9541664123535156
    5. ' a' → logprob: -3.3291664123535156
    6. ' possible' → logprob: -3.8291664123535156
    7. ' more' → logprob: -4.329166412353516
    8. ' continuing' → logprob: -4.329166412353516
    9. ' continuation' → logprob: -4.454166412353516
    10. '(' → logprob: -4.454166412353516

Token 1068: ' expansions' (ID: 177539)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1255064606666565
    2. '   ' → logprob: -3.1255064010620117
    3. 'def' → logprob: -4.125506401062012
    4. ' events' → logprob: -4.500506401062012
    5. ' methods' → logprob: -4.875506401062012
    6. ' code' → logprob: -5.000506401062012
    7. ' additions' → logprob: -5.125506401062012
    8. ' functionality' → logprob: -5.875506401062012
    9. ' implementation' → logprob: -6.000506401062012
    10. ' inputs' → logprob: -6.125506401062012

Token 1069: ' like' (ID: 1299)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5517884492874146
    2. ':' → logprob: -1.3017884492874146
    3. '(' → logprob: -2.801788330078125
    4. '.' → logprob: -3.551788330078125
    5. ':
' → logprob: -3.551788330078125
    6. ',' → logprob: -4.051788330078125
    7. '<|end|>' → logprob: -4.926788330078125
    8. '):
' → logprob: -6.426788330078125
    9. 'def' → logprob: -6.801788330078125
    10. '<|end|>' → logprob: -7.051788330078125

Token 1070: ' multiple' (ID: 7598)
  Prédit: ' handling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' handling' → logprob: -1.8117899894714355
    2. ' sim' → logprob: -2.0617899894714355
    3. ' multiple' → logprob: -2.0617899894714355
    4. 'def' → logprob: -2.6867899894714355
    5. 'processing' → logprob: -2.6867899894714355
    6. 'batch' → logprob: -2.6867899894714355
    7. 'multiple' → logprob: -2.6867899894714355
    8. ' processing' → logprob: -2.9367899894714355
    9. 'handling' → logprob: -3.5617899894714355
    10. 'reading' → logprob: -3.5617899894714355

Token 1071: ' innings' (ID: 59221)
  Prédit: 'innings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'innings' → logprob: -0.5502728819847107
    2. ' innings' → logprob: -1.1752729415893555
    3. 'inning' → logprob: -2.4252729415893555
    4. '   ' → logprob: -4.3002729415893555
    5. 'def' → logprob: -4.8002729415893555
    6. ' def' → logprob: -6.0502729415893555
    7. ' inning' → logprob: -7.3002729415893555
    8. '_in' → logprob: -7.6752729415893555
    9. '
' → logprob: -8.800272941589355
    10. '    ' → logprob: -9.925272941589355

Token 1072: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3169625699520111
    2. ',' → logprob: -1.4419625997543335
    3. ':' → logprob: -4.316962718963623
    4. ' and' → logprob: -4.691962718963623
    5. 's' → logprob: -5.941962718963623
    6. '.' → logprob: -6.066962718963623
    7. 'def' → logprob: -6.441962718963623
    8. '<|end|>' → logprob: -6.816962718963623
    9. 'and' → logprob: -7.191962718963623
    10. ' def' → logprob: -7.316962718963623

Token 1073: ' teams' (ID: 11273)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.4180380702018738
    2. ' multiple' → logprob: -2.0430381298065186
    3. 'events' → logprob: -2.7930381298065186
    4. '   ' → logprob: -3.2930381298065186
    5. 'datasets' → logprob: -3.6680381298065186
    6. 'games' → logprob: -4.1680378913879395
    7. ' events' → logprob: -4.4180378913879395
    8. '#' → logprob: -4.7930378913879395
    9. 'teams' → logprob: -4.9180378913879395
    10. 'players' → logprob: -4.9180378913879395

Token 1074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02715466357767582
    2. '   ' → logprob: -3.6521546840667725
    3. ',
' → logprob: -8.402154922485352
    4. '):
' → logprob: -8.902154922485352
    5. '):' → logprob: -8.902154922485352
    6. ')' → logprob: -9.152154922485352
    7. 'def' → logprob: -9.902154922485352
    8. '
' → logprob: -10.027154922485352
    9. '<|end|>' → logprob: -10.277154922485352
    10. 'and' → logprob: -10.277154922485352

Token 1075: ' etc' (ID: 5178)
  Prédit: 'players'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'players' → logprob: -0.5802213549613953
    2. 'and' → logprob: -2.45522141456604
    3. ' players' → logprob: -2.45522141456604
    4. ' and' → logprob: -2.95522141456604
    5. 'plays' → logprob: -3.33022141456604
    6. '   ' → logprob: -3.33022141456604
    7. 'events' → logprob: -3.45522141456604
    8. 'runs' → logprob: -3.95522141456604
    9. '
' → logprob: -4.080221176147461
    10. ' runners' → logprob: -4.705221176147461

Token 1076: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0055528320372104645
    2. '
' → logprob: -5.755552768707275
    3. '):
' → logprob: -6.630552768707275
    4. ':' → logprob: -7.755552768707275
    5. ':
' → logprob: -8.630553245544434
    6. ',' → logprob: -8.755553245544434
    7. '):' → logprob: -9.505553245544434
    8. ')' → logprob: -9.630553245544434
    9. 'def' → logprob: -10.005553245544434
    10. '.' → logprob: -10.005553245544434

Token 1077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2056434452533722
    2. '
' → logprob: -1.7056434154510498
    3. '    
' → logprob: -5.580643653869629
    4. ' 
' → logprob: -9.080643653869629
    5. 'def' → logprob: -9.330643653869629
    6. '```' → logprob: -9.330643653869629
    7. 'class' → logprob: -10.580643653869629
    8. '   
' → logprob: -10.705643653869629
    9. ' def' → logprob: -10.830643653869629
    10. '  
' → logprob: -10.955643653869629

Token 1078: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14474740624427795
    2. '   ' → logprob: -2.019747495651245
    3. 'def' → logprob: -7.019747257232666
    4. '    
' → logprob: -7.394747257232666
    5. ' def' → logprob: -8.269747734069824
    6. '```' → logprob: -9.019747734069824
    7. '
' → logprob: -9.894747734069824
    8. 'class' → logprob: -10.269747734069824
    9. '<|end|>' → logprob: -10.769747734069824
    10. ' 
' → logprob: -10.894747734069824

Token 1079: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006282952148467302
    2. ' def' → logprob: -5.631282806396484
    3. 'def' → logprob: -6.381282806396484
    4. '
' → logprob: -7.631282806396484
    5. 'class' → logprob: -7.881282806396484
    6. '    
' → logprob: -10.006282806396484
    7. '```' → logprob: -10.131282806396484
    8. '	def' → logprob: -11.006282806396484
    9. ' class' → logprob: -11.131282806396484
    10. 'indent' → logprob: -13.256282806396484

Token 1080: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2574727237224579
    2. ' def' → logprob: -1.5074727535247803
    3. '   ' → logprob: -5.257472515106201
    4. '	def' → logprob: -8.13247299194336
    5. 'class' → logprob: -10.88247299194336
    6. '```' → logprob: -12.50747299194336
    7. '
' → logprob: -14.13247299194336
    8. 'IND' → logprob: -14.38247299194336
    9. '    ' → logprob: -14.75747299194336
    10. 'import' → logprob: -15.25747299194336

Token 1081: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011592250317335129
    2. '__' → logprob: -4.636592388153076
    3. ' def' → logprob: -6.761592388153076
    4. 'def' → logprob: -8.011591911315918
    5. '_init' → logprob: -8.511591911315918
    6. 'init' → logprob: -9.136591911315918
    7. ' ' → logprob: -11.636591911315918
    8. ' init' → logprob: -11.636591911315918
    9. '```' → logprob: -11.761591911315918
    10. '
' → logprob: -12.386591911315918

Token 1082: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.0
    3. 'def' → logprob: -18.75
    4. '_init' → logprob: -21.625
    5. '```' → logprob: -21.625
    6. 'initi' → logprob: -22.25
    7. 'int' → logprob: -22.5
    8. '
' → logprob: -22.875
    9. 'ini' → logprob: -23.0
    10. '	init' → logprob: -23.0

Token 1083: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00894402340054512
    2. '(' → logprob: -4.758944034576416
    3. '__(
' → logprob: -8.633943557739258
    4. '(self' → logprob: -9.508943557739258
    5. '__' → logprob: -9.508943557739258
    6. ')(' → logprob: -13.758943557739258
    7. '```' → logprob: -14.758943557739258
    8. '__((' → logprob: -14.758943557739258
    9. '_(' → logprob: -15.008943557739258
    10. '__('' → logprob: -15.133943557739258

Token 1084: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0619698166847229
    2. ' self' → logprob: -2.811969757080078
    3. '
' → logprob: -14.061969757080078
    4. ' ' → logprob: -14.436969757080078
    5. '	self' → logprob: -14.936969757080078
    6. ')' → logprob: -15.061969757080078
    7. '   ' → logprob: -15.936969757080078
    8. '(self' → logprob: -16.311969757080078
    9. ' ' → logprob: -17.811969757080078
    10. '```' → logprob: -18.311969757080078

Token 1085: ' ):
' (ID: 48169)
  Prédit: ' ):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ):
' → logprob: -0.3782787322998047
    2. '):
' → logprob: -1.3782787322998047
    3. ' ):' → logprob: -3.0032787322998047
    4. '):' → logprob: -4.378278732299805
    5. ',' → logprob: -7.378278732299805
    6. 'self' → logprob: -9.628278732299805
    7. ' ' → logprob: -10.628278732299805
    8. '   ' → logprob: -10.878278732299805
    9. '):
' → logprob: -11.128278732299805
    10. ' )' → logprob: -11.378278732299805

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07912540435791016
    2. 'self' → logprob: -2.57912540435791
    3. ' self' → logprob: -9.07912540435791
    4. '   ' → logprob: -9.32912540435791
    5. 'def' → logprob: -10.70412540435791
    6. '
' → logprob: -12.82912540435791
    7. '(self' → logprob: -13.07912540435791
    8. '	self' → logprob: -13.20412540435791
    9. '	' → logprob: -13.57912540435791
    10. '```' → logprob: -13.95412540435791

Token 1087: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.7994282795116305e-05
    2. '       ' → logprob: -10.12504768371582
    3. ' self' → logprob: -11.87504768371582
    4. '   ' → logprob: -14.75004768371582
    5. '
' → logprob: -15.00004768371582
    6. 'pass' → logprob: -16.62504768371582
    7. '	self' → logprob: -16.62504768371582
    8. '0' → logprob: -17.50004768371582
    9. '           ' → logprob: -19.00004768371582
    10. '        
' → logprob: -19.25004768371582

Token 1088: '.in' (ID: 2250)
  Prédit: 'innings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'innings' → logprob: -0.01132154930382967
    2. ' innings' → logprob: -5.386321544647217
    3. 'current' → logprob: -5.511321544647217
    4. 'inning' → logprob: -7.011321544647217
    5. 'score' → logprob: -7.511321544647217
    6. '.current' → logprob: -7.636321544647217
    7. '.in' → logprob: -7.886321544647217
    8. ' current' → logprob: -9.011322021484375
    9. '   ' → logprob: -9.636322021484375
    10. 'scores' → logprob: -10.011322021484375

Token 1089: 'nings' (ID: 42490)
  Prédit: 'nings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nings' → logprob: -0.587041437625885
    2. 'ning' → logprob: -0.962041437625885
    3. 'ings' → logprob: -3.3370413780212402
    4. 'ing' → logprob: -3.8370413780212402
    5. 'n' → logprob: -6.08704137802124
    6. '_' → logprob: -7.08704137802124
    7. 'ng' → logprob: -7.71204137802124
    8. '_in' → logprob: -8.649541854858398
    9. 'innings' → logprob: -8.837041854858398
    10. '_n' → logprob: -9.712041854858398

Token 1090: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6363378167152405
    2. ' =' → logprob: -0.7613378167152405
    3. '=[]' → logprob: -5.636337757110596
    4. '=[]
' → logprob: -10.011338233947754
    5. '[' → logprob: -10.136338233947754
    6. '[]' → logprob: -10.511338233947754
    7. ' ' → logprob: -11.511338233947754
    8. '_' → logprob: -11.886338233947754
    9. '<|end|>' → logprob: -11.886338233947754
    10. '	' → logprob: -12.261338233947754

Token 1091: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00041518008220009506
    2. '[' → logprob: -8.500414848327637
    3. ' []' → logprob: -8.625414848327637
    4. '[]
' → logprob: -10.375414848327637
    5. '[]

' → logprob: -15.000414848327637
    6. '[]}' → logprob: -15.125414848327637
    7. '[]"' → logprob: -15.250414848327637
    8. '[]>' → logprob: -16.750415802001953
    9. '   ' → logprob: -16.750415802001953
    10. '[],' → logprob: -16.750415802001953

Token 1092: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6510211825370789
    2. ' def' → logprob: -1.1510212421417236
    3. '   ' → logprob: -1.9010212421417236
    4. '
' → logprob: -4.5260210037231445
    5. '	def' → logprob: -6.6510210037231445
    6. '<|end|>' → logprob: -8.026021003723145
    7. '    
' → logprob: -9.276021003723145
    8. '       ' → logprob: -9.526021003723145
    9. ' ' → logprob: -10.276021003723145
    10. 'class' → logprob: -10.651021003723145

Token 1093: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005618501454591751
    2. ' def' → logprob: -7.500561714172363
    3. '
' → logprob: -11.875561714172363
    4. '   ' → logprob: -13.250561714172363
    5. '	def' → logprob: -16.25056266784668
    6. '```' → logprob: -16.37556266784668
    7. 'de' → logprob: -18.00056266784668
    8. 'd' → logprob: -18.50056266784668
    9. 'class' → logprob: -18.62556266784668
    10. '_def' → logprob: -18.75056266784668

Token 1094: ' read' (ID: 1729)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06225291267037392
    2. 'simulate' → logprob: -3.312252998352051
    3. 'add' → logprob: -4.062252998352051
    4. 'run' → logprob: -5.687252998352051
    5. ' start' → logprob: -5.937252998352051
    6. 'process' → logprob: -8.18725299835205
    7. ' simulate' → logprob: -8.43725299835205
    8. 'new' → logprob: -9.06225299835205
    9. ' add' → logprob: -10.31225299835205
    10. 'play' → logprob: -11.31225299835205

Token 1095: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.6519131660461426
    2. '(' → logprob: -1.6519131660461426
    3. '_line' → logprob: -1.6519131660461426
    4. '(self' → logprob: -2.7769131660461426
    5. 'self' → logprob: -4.526913166046143
    6. '_lines' → logprob: -4.776913166046143
    7. '_events' → logprob: -5.651913166046143
    8. '_event' → logprob: -6.151913166046143
    9. '_next' → logprob: -6.151913166046143
    10. '_data' → logprob: -6.401913166046143

Token 1096: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005986624397337437
    2. '(self' → logprob: -5.13098669052124
    3. '(
' → logprob: -9.880986213684082
    4. 'self' → logprob: -12.505986213684082
    5. ' (' → logprob: -13.505986213684082
    6. '_line' → logprob: -14.005986213684082
    7. '()' → logprob: -14.255986213684082
    8. '
' → logprob: -17.0059871673584
    9. '_lines' → logprob: -17.5059871673584
    10. ' self' → logprob: -17.6309871673584

Token 1097: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07920955121517181
    2. ' self' → logprob: -2.579209566116333
    3. ')' → logprob: -8.329209327697754
    4. '   ' → logprob: -10.829209327697754
    5. '
' → logprob: -10.829209327697754
    6. '	self' → logprob: -11.079209327697754
    7. ' ' → logprob: -11.329209327697754
    8. '(self' → logprob: -12.829209327697754
    9. ' )' → logprob: -12.829209327697754
    10. '       ' → logprob: -12.954209327697754

Token 1098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007558356039226055
    2. 'self' → logprob: -5.007558345794678
    3. '):' → logprob: -8.007558822631836
    4. ' ,' → logprob: -8.757558822631836
    5. ',self' → logprob: -9.382558822631836
    6. '(self' → logprob: -9.507558822631836
    7. ',
' → logprob: -10.382558822631836
    8. '(' → logprob: -10.757558822631836
    9. '_line' → logprob: -10.882558822631836
    10. ' ):' → logprob: -11.007558822631836

Token 1099: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.5706625580787659
    2. 'lines' → logprob: -1.820662498474121
    3. ' input' → logprob: -2.070662498474121
    4. 'input' → logprob: -2.320662498474121
    5. ' self' → logprob: -3.945662498474121
    6. 'self' → logprob: -4.195662498474121
    7. ')' → logprob: -4.570662498474121
    8. 'line' → logprob: -6.820662498474121
    9. 'file' → logprob: -7.320662498474121
    10. ' )' → logprob: -7.820662498474121

Token 1100: ' ):
' (ID: 48169)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6312351822853088
    2. '):' → logprob: -1.881235122680664
    3. ' ):
' → logprob: -2.131235122680664
    4. ' ):' → logprob: -2.381235122680664
    5. '   ' → logprob: -3.006235122680664
    6. ',' → logprob: -3.381235122680664
    7. '       ' → logprob: -4.881235122680664
    8. '=' → logprob: -5.006235122680664
    9. ' )' → logprob: -6.631235122680664
    10. '    ' → logprob: -6.881235122680664

Token 1101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06909105181694031
    2. ' for' → logprob: -3.3190910816192627
    3. ' lines' → logprob: -3.9440910816192627
    4. 'for' → logprob: -5.319090843200684
    5. '	' → logprob: -6.569090843200684
    6. '[' → logprob: -6.944090843200684
    7. '   ' → logprob: -7.319090843200684
    8. '(' → logprob: -7.444090843200684
    9. '        
' → logprob: -7.694090843200684
    10. 'self' → logprob: -8.194090843200684

Token 1102: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5225325226783752
    2. ' for' → logprob: -1.1475324630737305
    3. 'for' → logprob: -2.6475324630737305
    4. ' lines' → logprob: -4.3975324630737305
    5. 'lines' → logprob: -5.7725324630737305
    6. '   ' → logprob: -6.7725324630737305
    7. '	' → logprob: -7.3975324630737305
    8. '```' → logprob: -8.14753246307373
    9. 'current' → logprob: -8.39753246307373
    10. ' current' → logprob: -8.52253246307373

Token 1103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033203072380274534
    2. 'for' → logprob: -7.003320217132568
    3. '   ' → logprob: -7.128320217132568
    4. ' for' → logprob: -7.503320217132568
    5. ' lines' → logprob: -7.753320217132568
    6. 'lines' → logprob: -7.878320217132568
    7. 'def' → logprob: -9.878320693969727
    8. 'events' → logprob: -9.878320693969727
    9. 'current' → logprob: -10.253320693969727
    10. '```' → logprob: -10.753320693969727

Token 1104: ' Parses' (ID: 179117)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.9855903387069702
    2. 'self' → logprob: -1.9855903387069702
    3. ' for' → logprob: -2.2355904579162598
    4. 'for' → logprob: -2.2355904579162598
    5. 'lines' → logprob: -2.2355904579162598
    6. ' lines' → logprob: -2.6105904579162598
    7. ' events' → logprob: -2.7355904579162598
    8. ' current' → logprob: -2.8605904579162598
    9. 'events' → logprob: -2.8605904579162598
    10. '       ' → logprob: -3.1105904579162598

Token 1105: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7227796912193298
    2. ' self' → logprob: -0.9727796912193298
    3. 'self' → logprob: -2.2227797508239746
    4. 'lines' → logprob: -3.5977797508239746
    5. '       ' → logprob: -7.972779750823975
    6. ' line' → logprob: -9.347779273986816
    7. '   ' → logprob: -9.722779273986816
    8. 'tokens' → logprob: -9.847779273986816
    9. '	lines' → logprob: -9.972779273986816
    10. ' the' → logprob: -10.222779273986816

Token 1106: ' lines' (ID: 8698)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8343241214752197
    2. '(self' → logprob: -0.8343241214752197
    3. '_lines' → logprob: -3.0843241214752197
    4. ' lines' → logprob: -3.7093241214752197
    5. '(lines' → logprob: -4.209323883056641
    6. '=' → logprob: -4.459323883056641
    7. 'self' → logprob: -5.209323883056641
    8. '[' → logprob: -5.334323883056641
    9. ' =' → logprob: -5.334323883056641
    10. '       ' → logprob: -5.834323883056641

Token 1107: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7556436657905579
    2. '(' → logprob: -1.505643606185913
    3. ' for' → logprob: -1.880643606185913
    4. '(self' → logprob: -2.630643606185913
    5. ' into' → logprob: -3.630643606185913
    6. ',' → logprob: -4.255643844604492
    7. 'for' → logprob: -4.630643844604492
    8. ' (' → logprob: -4.880643844604492
    9. '=' → logprob: -4.880643844604492
    10. ' to' → logprob: -5.755643844604492

Token 1108: ' populate' (ID: 50447)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.054701566696167
    2. 'lines' → logprob: -1.554701566696167
    3. 'events' → logprob: -2.054701566696167
    4. '[' → logprob: -2.179701566696167
    5. ' self' → logprob: -3.304701566696167
    6. ' events' → logprob: -3.429701566696167
    7. 'event' → logprob: -3.679701566696167
    8. ' innings' → logprob: -3.679701566696167
    9. ' lines' → logprob: -3.804701566696167
    10. '[
' → logprob: -4.054701805114746

Token 1109: ' innings' (ID: 59221)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2418726086616516
    2. 'innings' → logprob: -2.616872549057007
    3. ' self' → logprob: -2.866872549057007
    4. 'inning' → logprob: -3.366872549057007
    5. ' innings' → logprob: -3.866872549057007
    6. '       ' → logprob: -4.491872787475586
    7. 'for' → logprob: -5.241872787475586
    8. 'current' → logprob: -5.491872787475586
    9. ' for' → logprob: -5.741872787475586
    10. ' current' → logprob: -5.991872787475586

Token 1110: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4011712074279785
    2. '(' → logprob: -1.7761712074279785
    3. '(self' → logprob: -2.1511712074279785
    4. ',' → logprob: -3.7761712074279785
    5. 'self' → logprob: -4.5261712074279785
    6. '   ' → logprob: -5.4011712074279785
    7. 'for' → logprob: -6.6511712074279785
    8. '(
' → logprob: -6.9011712074279785
    9. '=' → logprob: -7.0261712074279785
    10. '
' → logprob: -7.9011712074279785

Token 1111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02928023785352707
    2. ' lines' → logprob: -4.529280185699463
    3. ' for' → logprob: -5.029280185699463
    4. '
' → logprob: -5.654280185699463
    5. '        
' → logprob: -5.654280185699463
    6. '```' → logprob: -6.154280185699463
    7. 'for' → logprob: -7.279280185699463
    8. '        ' → logprob: -7.404280185699463
    9. '   ' → logprob: -8.279280662536621
    10. ' 
' → logprob: -9.154280662536621

Token 1112: ' Input' (ID: 10090)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18978726863861084
    2. ' for' → logprob: -2.5647873878479004
    3. 'for' → logprob: -2.6897873878479004
    4. 'current' → logprob: -4.8147873878479
    5. ' lines' → logprob: -5.0647873878479
    6. ' current' → logprob: -5.3147873878479
    7. 'lines' → logprob: -5.5647873878479
    8. '   ' → logprob: -6.1897873878479
    9. '```' → logprob: -7.3147873878479
    10. 'def' → logprob: -8.064786911010742

Token 1113: ' format' (ID: 6011)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.05896907299757004
    2. '_' → logprob: -3.808969020843506
    3. '_tokens' → logprob: -4.433969020843506
    4. ' =' → logprob: -4.433969020843506
    5. '=' → logprob: -5.308969020843506
    6. '   ' → logprob: -6.183969020843506
    7. 'lines' → logprob: -7.558969020843506
    8. '_line' → logprob: -7.558969020843506
    9. '_iter' → logprob: -7.683969020843506
    10. '_iterator' → logprob: -8.058969497680664

Token 1114: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35644465684890747
    2. '(' → logprob: -2.2314445972442627
    3. ' =' → logprob: -2.7314445972442627
    4. ':' → logprob: -3.3564445972442627
    5. '       ' → logprob: -3.6064445972442627
    6. '   ' → logprob: -4.231444835662842
    7. ' is' → logprob: -4.856444835662842
    8. '```' → logprob: -4.981444835662842
    9. '(self' → logprob: -5.106444835662842
    10. 'def' → logprob: -5.481444835662842

Token 1115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.498399943113327
    2. '```' → logprob: -1.1233999729156494
    3. '"""' → logprob: -3.7483999729156494
    4. ' for' → logprob: -4.62339973449707
    5. '[
' → logprob: -4.87339973449707
    6. ' lines' → logprob: -5.24839973449707
    7. '"""
' → logprob: -5.24839973449707
    8. '[' → logprob: -5.87339973449707
    9. '   ' → logprob: -5.87339973449707
    10. '``' → logprob: -6.12339973449707

Token 1116: ' -' (ID: 533)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.7378764152526855
    2. '[
' → logprob: -1.4878764152526855
    3. '"""' → logprob: -1.9878764152526855
    4. '       ' → logprob: -2.9878764152526855
    5. '```' → logprob: -3.7378764152526855
    6. ' lines' → logprob: -3.7378764152526855
    7. ' for' → logprob: -3.8628764152526855
    8. 'for' → logprob: -4.9878764152526855
    9. 'lines' → logprob: -5.1128764152526855
    10. '[' → logprob: -5.3628764152526855

Token 1117: ' First' (ID: 8338)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inning' → logprob: -0.16592025756835938
    2. 'innings' → logprob: -2.2909202575683594
    3. 'current' → logprob: -4.040920257568359
    4. '```' → logprob: -4.790920257568359
    5. ' current' → logprob: -5.040920257568359
    6. ' inning' → logprob: -5.290920257568359
    7. ' innings' → logprob: -5.540920257568359
    8. 'for' → logprob: -6.040920257568359
    9. 'lines' → logprob: -6.165920257568359
    10. ' for' → logprob: -6.290920257568359

Token 1118: ' line' (ID: 2543)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2629649639129639
    2. ':' → logprob: -2.387964963912964
    3. ' =' → logprob: -2.512964963912964
    4. '_token' → logprob: -2.512964963912964
    5. 'line' → logprob: -2.762964963912964
    6. '():' → logprob: -2.762964963912964
    7. '_line' → logprob: -2.762964963912964
    8. '       ' → logprob: -2.887964963912964
    9. '=' → logprob: -2.887964963912964
    10. ' line' → logprob: -3.387964963912964

Token 1119: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6512046456336975
    2. '=' → logprob: -0.7762046456336975
    3. ':' → logprob: -4.776204586029053
    4. 'tokens' → logprob: -6.026204586029053
    5. '_tokens' → logprob: -6.151204586029053
    6. ' is' → logprob: -6.776204586029053
    7. '_token' → logprob: -7.276204586029053
    8. 'token' → logprob: -7.901204586029053
    9. '#' → logprob: -8.151205062866211
    10. '```' → logprob: -8.276205062866211

Token 1120: ' number' (ID: 2086)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7131291031837463
    2. 'num' → logprob: -1.3381290435791016
    3. 'number' → logprob: -2.7131290435791016
    4. ' number' → logprob: -2.8381290435791016
    5. ' num' → logprob: -3.3381290435791016
    6. ' int' → logprob: -3.3381290435791016
    7. 'lines' → logprob: -3.9631290435791016
    8. ' lines' → logprob: -4.213129043579102
    9. 'n' → logprob: -4.713129043579102
    10. '   ' → logprob: -6.463129043579102

Token 1121: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6579863429069519
    2. ' =' → logprob: -1.7829864025115967
    3. '(' → logprob: -1.9079864025115967
    4. '       ' → logprob: -2.7829864025115967
    5. '_' → logprob: -3.2829864025115967
    6. '_of' → logprob: -4.282986164093018
    7. '   ' → logprob: -4.407986164093018
    8. '_lines' → logprob: -5.032986164093018
    9. ':' → logprob: -5.407986164093018
    10. '=
' → logprob: -5.782986164093018

Token 1122: ' datasets' (ID: 57711)
  Prédit: 'innings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'innings' → logprob: -0.1452808380126953
    2. ' innings' → logprob: -2.0202808380126953
    3. 'inning' → logprob: -6.645280838012695
    4. 'lines' → logprob: -7.395280838012695
    5. ' lines' → logprob: -7.645280838012695
    6. 'inn' → logprob: -9.145280838012695
    7. '_in' → logprob: -10.020280838012695
    8. '_lines' → logprob: -11.395280838012695
    9. 'events' → logprob: -11.520280838012695
    10. ' events' → logprob: -12.020280838012695

Token 1123: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1885749101638794
    2. ' =' → logprob: -1.3135749101638794
    3. '
' → logprob: -1.5635749101638794
    4. '       ' → logprob: -2.18857479095459
    5. '(' → logprob: -3.18857479095459
    6. ':' → logprob: -4.18857479095459
    7. '```' → logprob: -4.81357479095459
    8. ' (' → logprob: -5.06357479095459
    9. '[' → logprob: -5.06357479095459
    10. '=
' → logprob: -5.18857479095459

Token 1124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03473735600709915
    2. '       ' → logprob: -3.6597373485565186
    3. ' =' → logprob: -5.284737586975098
    4. '=' → logprob: -7.034737586975098
    5. '\n' → logprob: -7.659737586975098
    6. '
' → logprob: -7.784737586975098
    7. 'n' → logprob: -8.034737586975098
    8. ',' → logprob: -8.159737586975098
    9. '(n' → logprob: -8.784737586975098
    10. ' (' → logprob: -8.784737586975098

Token 1125: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7303668260574341
    2. '       ' → logprob: -0.7303668260574341
    3. '\n' → logprob: -4.3553667068481445
    4. ' =' → logprob: -5.1053667068481445
    5. '        
' → logprob: -5.2303667068481445
    6. ',' → logprob: -5.8553667068481445
    7. '=' → logprob: -6.1053667068481445
    8. '   ' → logprob: -6.8553667068481445
    9. ' (' → logprob: -6.9803667068481445
    10. '
' → logprob: -7.1053667068481445

Token 1126: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1644294261932373
    2. '
' → logprob: -3.0394294261932373
    3. '\n' → logprob: -3.4144294261932373
    4. 'n' → logprob: -3.5394294261932373
    5. ' n' → logprob: -4.664429664611816
    6. '   ' → logprob: -5.289429664611816
    7. '```' → logprob: -5.414429664611816
    8. ' for' → logprob: -5.914429664611816
    9. ' lines' → logprob: -6.289429664611816
    10. '        
' → logprob: -6.289429664611816

Token 1127: ' Next' (ID: 13886)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.757831335067749
    2. 'n' → logprob: -2.132831335067749
    3. 'current' → logprob: -2.132831335067749
    4. ' current' → logprob: -2.382831335067749
    5. 'lines' → logprob: -2.382831335067749
    6. 'for' → logprob: -2.382831335067749
    7. ' n' → logprob: -2.507831335067749
    8. '
' → logprob: -2.882831335067749
    9. ' lines' → logprob: -3.132831335067749
    10. '       ' → logprob: -3.382831335067749

Token 1128: ' lines' (ID: 8698)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.707635223865509
    2. 'lines' → logprob: -1.4576351642608643
    3. ' n' → logprob: -1.8326351642608643
    4. ' lines' → logprob: -2.9576351642608643
    5. '_lines' → logprob: -4.457635402679443
    6. '1' → logprob: -4.707635402679443
    7. 'line' → logprob: -4.957635402679443
    8. '   ' → logprob: -5.082635402679443
    9. '=' → logprob: -5.332635402679443
    10. 'len' → logprob: -5.457635402679443

Token 1129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3612871468067169
    2. ' =' → logprob: -1.6112871170043945
    3. '=' → logprob: -2.8612871170043945
    4. '       ' → logprob: -3.7362871170043945
    5. ':
' → logprob: -4.6112871170043945
    6. '           ' → logprob: -6.1112871170043945
    7. ' are' → logprob: -6.1112871170043945
    8. ',' → logprob: -6.6112871170043945
    9. ' for' → logprob: -6.6112871170043945
    10. '[' → logprob: -7.1112871170043945

Token 1130: ' events' (ID: 6124)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3259303867816925
    2. ' lines' → logprob: -1.5759303569793701
    3. 'n' → logprob: -2.82593035697937
    4. 'lines' → logprob: -5.200930595397949
    5. ' for' → logprob: -6.325930595397949
    6. '       ' → logprob: -6.700930595397949
    7. ' line' → logprob: -6.825930595397949
    8. '
' → logprob: -7.825930595397949
    9. 'line' → logprob: -7.950930595397949
    10. ' num' → logprob: -8.07593059539795

Token 1131: ' per' (ID: 777)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04724879562854767
    2. '=' → logprob: -3.6722488403320312
    3. '       ' → logprob: -4.672248840332031
    4. '
' → logprob: -5.797248840332031
    5. '   ' → logprob: -6.422248840332031
    6. ':' → logprob: -6.797248840332031
    7. ',' → logprob: -6.797248840332031
    8. '[' → logprob: -7.547248840332031
    9. '        
' → logprob: -7.672248840332031
    10. '_lines' → logprob: -7.922248840332031

Token 1132: ' inning' (ID: 70835)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inning' → logprob: -0.8508535027503967
    2. 'dataset' → logprob: -1.100853443145752
    3. 'line' → logprob: -1.850853443145752
    4. ' dataset' → logprob: -3.225853443145752
    5. 'innings' → logprob: -3.975853443145752
    6. ' line' → logprob: -4.225853443145752
    7. ' inning' → logprob: -4.850853443145752
    8. ' innings' → logprob: -7.100853443145752
    9. 'ataset' → logprob: -8.22585391998291
    10. 'data' → logprob: -8.60085391998291

Token 1133: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1965283751487732
    2. '
' → logprob: -1.821528434753418
    3. ',' → logprob: -5.071528434753418
    4. '   ' → logprob: -5.821528434753418
    5. '        
' → logprob: -5.946528434753418
    6. ' for' → logprob: -6.821528434753418
    7. ' (' → logprob: -7.071528434753418
    8. '(' → logprob: -7.696528434753418
    9. ' lines' → logprob: -8.071528434753418
    10. ':' → logprob: -8.446528434753418

Token 1134: 'unknown' (ID: 33936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5919573307037354
    2. 'n' → logprob: -2.8419573307037354
    3. ' for' → logprob: -2.8419573307037354
    4. ' lines' → logprob: -2.8419573307037354
    5. ' n' → logprob: -3.0919573307037354
    6. ' line' → logprob: -3.5919573307037354
    7. '       ' → logprob: -3.7169573307037354
    8. '
' → logprob: -3.7169573307037354
    9. 'lines' → logprob: -3.7169573307037354
    10. 'for' → logprob: -3.9669573307037354

Token 1135: ' number' (ID: 2086)
  Prédit: ' until'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' until' → logprob: -1.3448001146316528
    2. ' at' → logprob: -2.4697999954223633
    3. '
' → logprob: -2.5947999954223633
    4. ')' → logprob: -2.7197999954223633
    5. '_count' → logprob: -2.7197999954223633
    6. 'count' → logprob: -2.9697999954223633
    7. '_lines' → logprob: -3.0947999954223633
    8. 's' → logprob: -3.3447999954223633
    9. ' lines' → logprob: -3.4697999954223633
    10. '\n' → logprob: -3.4697999954223633

Token 1136: ' per' (ID: 777)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13416688144207
    2. ')' → logprob: -2.884166955947876
    3. ' =' → logprob: -3.884166955947876
    4. ',' → logprob: -4.509166717529297
    5. '):
' → logprob: -4.759166717529297
    6. '       ' → logprob: -5.384166717529297
    7. ' of' → logprob: -5.384166717529297
    8. ')
' → logprob: -5.884166717529297
    9. '\n' → logprob: -6.384166717529297
    10. '_of' → logprob: -6.509166717529297

Token 1137: ' inning' (ID: 70835)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7162072658538818
    2. 'inning' → logprob: -0.8412072658538818
    3. ' line' → logprob: -2.716207265853882
    4. ' inning' → logprob: -4.716207504272461
    5. 'innings' → logprob: -6.466207504272461
    6. 'dataset' → logprob: -6.966207504272461
    7. 'lines' → logprob: -7.341207504272461
    8. ' innings' → logprob: -7.591207504272461
    9. ' dataset' → logprob: -7.966207504272461
    10. ' lines' → logprob: -8.091207504272461

Token 1138: ';' (ID: 26)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8065126538276672
    2. ')
' → logprob: -1.4315125942230225
    3. '):
' → logprob: -1.8065125942230225
    4. '       ' → logprob: -3.0565125942230225
    5. ',' → logprob: -3.8065125942230225
    6. '),' → logprob: -3.9315125942230225
    7. ' )
' → logprob: -4.181512832641602
    8. ' )' → logprob: -4.181512832641602
    9. '   ' → logprob: -4.806512832641602
    10. '):' → logprob: -4.806512832641602

Token 1139: ' until' (ID: 4609)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.034826636314392
    2. '
' → logprob: -1.659826636314392
    3. ' n' → logprob: -1.909826636314392
    4. ')' → logprob: -2.2848267555236816
    5. 'n' → logprob: -2.9098267555236816
    6. '```' → logprob: -3.1598267555236816
    7. 'lines' → logprob: -3.9098267555236816
    8. '       ' → logprob: -3.9098267555236816
    9. ' tokens' → logprob: -4.784826755523682
    10. 'tokens' → logprob: -4.784826755523682

Token 1140: ' ' (ID: 220)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.2574658989906311
    2. 'lines' → logprob: -1.7574658393859863
    3. '''' → logprob: -4.007465839385986
    4. '""' → logprob: -4.632465839385986
    5. ' n' → logprob: -4.757465839385986
    6. 'line' → logprob: -5.257465839385986
    7. ' not' → logprob: -5.382465839385986
    8. ' line' → logprob: -6.007465839385986
    9. 'n' → logprob: -6.382465839385986
    10. '
' → logprob: -7.382465839385986

Token 1141: '3' (ID: 18)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6171146035194397
    2. 'lines' → logprob: -1.492114543914795
    3. '''' → logprob: -2.242114543914795
    4. 'line' → logprob: -2.367114543914795
    5. ' lines' → logprob: -4.117114543914795
    6. '"' → logprob: -5.617114543914795
    7. ''' → logprob: -5.867114543914795
    8. ' line' → logprob: -5.992114543914795
    9. 'n' → logprob: -6.242114543914795
    10. 'empty' → logprob: -6.367114543914795

Token 1142: ' outs' (ID: 34373)
  Prédit: 'outs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' → logprob: -0.6951435804367065
    2. '_out' → logprob: -1.3201435804367065
    3. ' outs' → logprob: -1.6951435804367065
    4. '
' → logprob: -3.695143699645996
    5. 'out' → logprob: -5.320143699645996
    6. '-outs' → logprob: -5.320143699645996
    7. '   ' → logprob: -6.320143699645996
    8. ' out' → logprob: -6.445143699645996
    9. ')' → logprob: -6.445143699645996
    10. '<|end|>' → logprob: -6.570143699645996

Token 1143: ' or' (ID: 503)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7035006880760193
    2. '):
' → logprob: -1.328500747680664
    3. ')' → logprob: -2.328500747680664
    4. '):' → logprob: -2.828500747680664
    5. '       ' → logprob: -3.203500747680664
    6. ' )
' → logprob: -3.703500747680664
    7. ' ):
' → logprob: -5.078500747680664
    8. '   ' → logprob: -5.328500747680664
    9. ' )' → logprob: -5.828500747680664
    10. ')

' → logprob: -7.328500747680664

Token 1144: ' eof' (ID: 198490)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.9197553396224976
    2. 'empty' → logprob: -1.5447553396224976
    3. '''' → logprob: -2.669755458831787
    4. ' an' → logprob: -3.169755458831787
    5. 'blank' → logprob: -3.294755458831787
    6. ')' → logprob: -3.419755458831787
    7. 'newline' → logprob: -3.419755458831787
    8. ' empty' → logprob: -3.544755458831787
    9. '"' → logprob: -3.794755458831787
    10. 'n' → logprob: -3.919755458831787

Token 1145: ').
' (ID: 6294)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.9271935820579529
    2. ')' → logprob: -1.0521936416625977
    3. '):
' → logprob: -1.5521936416625977
    4. '):' → logprob: -3.5521936416625977
    5. ' )
' → logprob: -4.927193641662598
    6. ' )' → logprob: -6.052193641662598
    7. '       ' → logprob: -6.677193641662598
    8. ' ):
' → logprob: -6.927193641662598
    9. '   ' → logprob: -7.052193641662598
    10. '```' → logprob: -7.927193641662598

Token 1146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010154091753065586
    2. '        
' → logprob: -5.1351542472839355
    3. '
' → logprob: -5.8851542472839355
    4. '   ' → logprob: -7.3851542472839355
    5. '```' → logprob: -8.760153770446777
    6. '           ' → logprob: -8.885153770446777
    7. '    
' → logprob: -9.135153770446777
    8. '        ' → logprob: -9.385153770446777
    9. ' for' → logprob: -10.135153770446777
    10. '  
' → logprob: -10.260153770446777

Token 1147: ' This' (ID: 1328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011219236068427563
    2. 'n' → logprob: -5.636219024658203
    3. '
' → logprob: -6.261219024658203
    4. 'index' → logprob: -6.761219024658203
    5. '   ' → logprob: -6.886219024658203
    6. '```' → logprob: -7.136219024658203
    7. '	' → logprob: -7.261219024658203
    8. 'current' → logprob: -7.761219024658203
    9. 'def' → logprob: -8.011219024658203
    10. ' lines' → logprob: -8.636219024658203

Token 1148: ' parser' (ID: 14216)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0752473920583725
    2. 'def' → logprob: -2.950247287750244
    3. ' is' → logprob: -5.325247287750244
    4. '   ' → logprob: -5.575247287750244
    5. '
' → logprob: -6.075247287750244
    6. ' continues' → logprob: -6.200247287750244
    7. ' method' → logprob: -6.950247287750244
    8. '       ' → logprob: -7.075247287750244
    9. ' lines' → logprob: -7.200247287750244
    10. ':' → logprob: -7.325247287750244

Token 1149: ' expects' (ID: 47384)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0639362335205078
    2. ' def' → logprob: -1.4389362335205078
    3. ' continues' → logprob: -1.5639362335205078
    4. 'contin' → logprob: -2.938936233520508
    5. ' assumes' → logprob: -3.313936233520508
    6. ' will' → logprob: -4.313936233520508
    7. ' skips' → logprob: -4.438936233520508
    8. ' stops' → logprob: -4.688936233520508
    9. ' processes' → logprob: -4.688936233520508
    10. '   ' → logprob: -4.938936233520508

Token 1150: ' events' (ID: 6124)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6430270671844482
    2. ' lines' → logprob: -1.0180270671844482
    3. 'n' → logprob: -2.7680270671844482
    4. 'len' → logprob: -3.6430270671844482
    5. ' n' → logprob: -5.018027305603027
    6. 'line' → logprob: -5.643027305603027
    7. '
' → logprob: -5.893027305603027
    8. '       ' → logprob: -6.393027305603027
    9. 'i' → logprob: -6.768027305603027
    10. ' len' → logprob: -6.768027305603027

Token 1151: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3110559582710266
    2. 'to' → logprob: -2.436055898666382
    3. ' in' → logprob: -3.061055898666382
    4. ' that' → logprob: -3.436055898666382
    5. '=' → logprob: -3.561055898666382
    6. '       ' → logprob: -4.186056137084961
    7. '   ' → logprob: -4.936056137084961
    8. 'that' → logprob: -5.061056137084961
    9. ' =' → logprob: -5.311056137084961
    10. 'in' → logprob: -5.436056137084961

Token 1152: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.23112186789512634
    2. ' each' → logprob: -1.6061218976974487
    3. 'self' → logprob: -6.106122016906738
    4. 'n' → logprob: -6.856122016906738
    5. ' innings' → logprob: -7.481122016906738
    6. ' self' → logprob: -7.606122016906738
    7. ' n' → logprob: -7.981122016906738
    8. 'innings' → logprob: -8.231122016906738
    9. 'the' → logprob: -8.731122016906738
    10. ' an' → logprob: -9.231122016906738

Token 1153: ' inning' (ID: 70835)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inning' → logprob: -0.4880189597606659
    2. ' inning' → logprob: -0.9880189895629883
    3. ' line' → logprob: -4.988018989562988
    4. ' dataset' → logprob: -5.738018989562988
    5. 'line' → logprob: -6.613018989562988
    6. ' innings' → logprob: -6.863018989562988
    7. 'dataset' → logprob: -7.488018989562988
    8. 'innings' → logprob: -8.238018989562988
    9. 'in' → logprob: -8.738018989562988
    10. '_in' → logprob: -8.988018989562988

Token 1154: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07787299901247025
    2. '(' → logprob: -3.8278729915618896
    3. ' =' → logprob: -3.9528729915618896
    4. '=' → logprob: -5.202873229980469
    5. ' in' → logprob: -5.452873229980469
    6. '   ' → logprob: -5.577873229980469
    7. ',' → logprob: -5.577873229980469
    8. ':' → logprob: -5.702873229980469
    9. ' to' → logprob: -5.952873229980469
    10. '(self' → logprob: -5.952873229980469

Token 1155: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.179537296295166
    2. 'be' → logprob: -1.304537296295166
    3. 'continue' → logprob: -1.554537296295166
    4. 'stop' → logprob: -2.429537296295166
    5. 'end' → logprob: -2.554537296295166
    6. ' stop' → logprob: -4.304537296295166
    7. ' continue' → logprob: -4.804537296295166
    8. 'start' → logprob: -5.054537296295166
    9. ' end' → logprob: -5.429537296295166
    10. 'terminate' → logprob: -6.679537296295166

Token 1156: ' given' (ID: 4335)
  Prédit: 'provided'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'provided' → logprob: -1.3945865631103516
    2. 'read' → logprob: -1.6445865631103516
    3. '[]' → logprob: -2.0195865631103516
    4. 'continued' → logprob: -2.3945865631103516
    5. 'split' → logprob: -2.7695865631103516
    6. 'terminated' → logprob: -3.2695865631103516
    7. 'se' → logprob: -3.3945865631103516
    8. 'processed' → logprob: -3.7695865631103516
    9. 'cons' → logprob: -3.8945865631103516
    10. 'yield' → logprob: -4.019586563110352

Token 1157: ' line' (ID: 2543)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.6840976476669312
    2. ' as' → logprob: -1.6840976476669312
    3. ' line' → logprob: -2.0590977668762207
    4. '
' → logprob: -2.1840977668762207
    5. ' in' → logprob: -3.3090977668762207
    6. 'one' → logprob: -4.934097766876221
    7. '    
' → logprob: -4.934097766876221
    8. 'line' → logprob: -5.684097766876221
    9. ' until' → logprob: -5.684097766876221
    10. 'in' → logprob: -6.059097766876221

Token 1158: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7164801359176636
    2. 'by' → logprob: -0.8414801359176636
    3. '       ' → logprob: -3.091480255126953
    4. 's' → logprob: -4.216480255126953
    5. '-by' → logprob: -5.716480255126953
    6. '   ' → logprob: -5.841480255126953
    7. 'break' → logprob: -5.841480255126953
    8. '           ' → logprob: -5.966480255126953
    9. '        
' → logprob: -6.091480255126953
    10. '
' → logprob: -6.716480255126953

Token 1159: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00048024329589679837
    2. ' line' → logprob: -8.375480651855469
    3. '
' → logprob: -8.625480651855469
    4. 'newline' → logprob: -10.250480651855469
    5. '_line' → logprob: -12.250480651855469
    6. 'n' → logprob: -12.250480651855469
    7. 'empty' → logprob: -12.750480651855469
    8. '#line' → logprob: -12.750480651855469
    9. 'lines' → logprob: -12.875480651855469
    10. 'event' → logprob: -13.250480651855469

Token 1160: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013859639875590801
    2. ',' → logprob: -4.763859748840332
    3. ' for' → logprob: -6.263859748840332
    4. ' and' → logprob: -7.388859748840332
    5. '.' → logprob: -7.513859748840332
    6. ' until' → logprob: -7.513859748840332
    7. '   ' → logprob: -7.638859748840332
    8. ' with' → logprob: -8.138859748840332
    9. 'for' → logprob: -8.388859748840332
    10. ' in' → logprob: -8.513859748840332

Token 1161: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.652254581451416
    2. ' a' → logprob: -1.902254581451416
    3. ' either' → logprob: -1.902254581451416
    4. ' the' → logprob: -2.152254581451416
    5. ' n' → logprob: -2.277254581451416
    6. 'n' → logprob: -2.402254581451416
    7. 'self' → logprob: -2.652254581451416
    8. ' an' → logprob: -3.652254581451416
    9. ' lines' → logprob: -3.652254581451416
    10. ' (' → logprob: -3.902254581451416

Token 1162: '3' (ID: 18)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49190375208854675
    2. 'line' → logprob: -2.616903781890869
    3. 'n' → logprob: -2.866903781890869
    4. 'False' → logprob: -2.866903781890869
    5. 'lines' → logprob: -2.866903781890869
    6. 'len' → logprob: -2.991903781890869
    7. '3' → logprob: -3.991903781890869
    8. '"' → logprob: -4.491903781890869
    9. 'empty' → logprob: -4.491903781890869
    10. 'event' → logprob: -4.616903781890869

Token 1163: ' outs' (ID: 34373)
  Prédit: '_out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.9721927642822266
    2. '<|end|>' → logprob: -1.3471927642822266
    3. 'outs' → logprob: -1.8471927642822266
    4. ' outs' → logprob: -2.0971927642822266
    5. '
' → logprob: -4.097192764282227
    6. 'out' → logprob: -4.472192764282227
    7. '   ' → logprob: -4.472192764282227
    8. ' out' → logprob: -5.097192764282227
    9. '_' → logprob: -5.097192764282227
    10. '       ' → logprob: -5.222192764282227

Token 1164: ' are' (ID: 553)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.35021471977233887
    2. '       ' → logprob: -1.3502147197723389
    3. 'or' → logprob: -4.600214958190918
    4. '           ' → logprob: -5.100214958190918
    5. ',' → logprob: -5.225214958190918
    6. '
' → logprob: -5.600214958190918
    7. '   ' → logprob: -5.975214958190918
    8. '.' → logprob: -5.975214958190918
    9. ' are' → logprob: -5.975214958190918
    10. ' is' → logprob: -7.225214958190918

Token 1165: ' reached' (ID: 15237)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.3558814823627472
    2. ' reached' → logprob: -1.7308814525604248
    3. 'enc' → logprob: -2.355881452560425
    4. ' encountered' → logprob: -4.605881690979004
    5. '   ' → logprob: -5.480881690979004
    6. 'det' → logprob: -5.605881690979004
    7. '
' → logprob: -5.980881690979004
    8. 'received' → logprob: -6.480881690979004
    9. 'hit' → logprob: -7.230881690979004
    10. '```' → logprob: -7.480881690979004

Token 1166: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1780093014240265
    2. ' or' → logprob: -2.053009271621704
    3. '           ' → logprob: -4.678009510040283
    4. '
' → logprob: -4.803009510040283
    5. '.' → logprob: -5.303009510040283
    6. ',' → logprob: -5.303009510040283
    7. '   ' → logprob: -6.803009510040283
    8. '<|end|>' → logprob: -6.803009510040283
    9. '        
' → logprob: -6.928009510040283
    10. ' for' → logprob: -6.928009510040283

Token 1167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05991284176707268
    2. '
' → logprob: -3.184912919998169
    3. '   ' → logprob: -4.30991268157959
    4. '        
' → logprob: -6.30991268157959
    5. '<|end|>' → logprob: -7.55991268157959
    6. '    
' → logprob: -7.80991268157959
    7. ' ' → logprob: -9.43491268157959
    8. '           ' → logprob: -9.43491268157959
    9. ',' → logprob: -9.93491268157959
    10. '	' → logprob: -10.05991268157959

Token 1168: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7004020810127258
    2. '       ' → logprob: -0.7004020810127258
    3. '   ' → logprob: -6.32540225982666
    4. '        
' → logprob: -6.45040225982666
    5. 'for' → logprob: -6.82540225982666
    6. 'def' → logprob: -7.20040225982666
    7. '```' → logprob: -7.95040225982666
    8. 'n' → logprob: -8.07540225982666
    9. '    
' → logprob: -8.32540225982666
    10. ' for' → logprob: -8.45040225982666

Token 1169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014286909252405167
    2. 'current' → logprob: -5.389286994934082
    3. 'index' → logprob: -5.764286994934082
    4. 'n' → logprob: -6.639286994934082
    5. 'def' → logprob: -6.764286994934082
    6. '   ' → logprob: -6.889286994934082
    7. 'i' → logprob: -6.889286994934082
    8. '```' → logprob: -7.764286994934082
    9. ' current' → logprob: -8.264286994934082
    10. 'for' → logprob: -8.389286994934082

Token 1170: ' n' (ID: 297)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7976110577583313
    2. '       ' → logprob: -0.9226110577583313
    3. 'index' → logprob: -3.4226109981536865
    4. 'n' (adapté à ' n') → logprob: -3.5476109981536865
    5. 'num' → logprob: -4.047611236572266
    6. 'inning' → logprob: -4.047611236572266
    7. ' current' → logprob: -4.172611236572266
    8. 'idx' → logprob: -4.422611236572266
    9. 'lines' → logprob: -5.172611236572266
    10. 'count' → logprob: -5.297611236572266

Token 1171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07192082703113556
    2. '=' → logprob: -2.946920871734619
    3. '_lines' → logprob: -4.446920871734619
    4. '_' → logprob: -6.071920871734619
    5. '   ' → logprob: -7.071920871734619
    6. '_line' → logprob: -7.571920871734619
    7. '_count' → logprob: -7.821920871734619
    8. '_idx' → logprob: -8.571920394897461
    9. '=int' → logprob: -8.821920394897461
    10. '_tokens' → logprob: -9.071920394897461

Token 1172: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011047935113310814
    2. ' int' → logprob: -4.511047840118408
    3. 'len' → logprob: -16.88604736328125
    4. '[int' → logprob: -17.38604736328125
    5. '=int' → logprob: -17.76104736328125
    6. '0' → logprob: -18.13604736328125
    7. '	int' → logprob: -18.51104736328125
    8. '(int' → logprob: -18.76104736328125
    9. '
' → logprob: -19.38604736328125
    10. '   ' → logprob: -19.76104736328125

Token 1173: '(' (ID: 7)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.08948898315429688
    2. '(' → logprob: -2.589488983154297
    3. 'lines' → logprob: -4.714488983154297
    4. ' lines' → logprob: -6.464488983154297
    5. '(
' → logprob: -11.589488983154297
    6. '	lines' → logprob: -12.089488983154297
    7. ' (' → logprob: -12.589488983154297
    8. '(line' → logprob: -13.589488983154297
    9. '_lines' → logprob: -14.214488983154297
    10. 'Lines' → logprob: -15.464488983154297

Token 1174: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00026288547087460756
    2. ' lines' → logprob: -8.250263214111328
    3. '(lines' → logprob: -13.750263214111328
    4. '	lines' → logprob: -15.000263214111328
    5. 'line' → logprob: -16.250263214111328
    6. '   ' → logprob: -17.500263214111328
    7. '.lines' → logprob: -19.625263214111328
    8. ')' → logprob: -19.750263214111328
    9. '           ' → logprob: -19.875263214111328
    10. '_lines' → logprob: -20.000263214111328

Token 1175: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.349075556499884e-05
    2. '[n' → logprob: -10.2500638961792
    3. '[
' → logprob: -11.0000638961792
    4. ' [' → logprob: -12.5000638961792
    5. '.pop' → logprob: -12.5000638961792
    6. '[self' → logprob: -13.6250638961792
    7. '(' → logprob: -13.8750638961792
    8. '[i' → logprob: -14.3750638961792
    9. '   ' → logprob: -14.7500638961792
    10. '```' → logprob: -15.2500638961792

Token 1176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024739265791140497
    2. ' ' → logprob: -8.37524700164795
    3. '[' → logprob: -11.62524700164795
    4. '   ' → logprob: -12.25024700164795
    5. 'n' → logprob: -13.87524700164795
    6. ' n' → logprob: -14.75024700164795
    7. '1' → logprob: -15.50024700164795
    8. 'self' → logprob: -15.62524700164795
    9. '  ' → logprob: -15.75024700164795
    10. '
' → logprob: -15.75024700164795

Token 1177: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14868250489234924
    2. '[' → logprob: -2.1486825942993164
    3. '])' → logprob: -4.023682594299316
    4. ' ]' → logprob: -6.523682594299316
    5. '])
' → logprob: -7.273682594299316
    6. '].' → logprob: -7.648682594299316
    7. ' ])' → logprob: -8.273682594299316
    8. '   ' → logprob: -8.398682594299316
    9. '.strip' → logprob: -8.398682594299316
    10. '][' → logprob: -9.023682594299316

Token 1178: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.2200749754119897e-06
    2. ' strip' → logprob: -13.250001907348633
    3. 'rstrip' → logprob: -15.250001907348633
    4. 'split' → logprob: -15.625001907348633
    5. '.strip' → logprob: -17.625001907348633
    6. '_strip' → logprob: -18.125001907348633
    7. 'str' → logprob: -19.250001907348633
    8. '(strip' → logprob: -19.750001907348633
    9. '-strip' → logprob: -19.875001907348633
    10. 'trim' → logprob: -20.875001907348633

Token 1179: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6172700524330139
    2. ')' → logprob: -0.8672700524330139
    3. '())' → logprob: -3.492269992828369
    4. '())
' → logprob: -5.492269992828369
    5. ')
' → logprob: -5.867269992828369
    6. ' )' → logprob: -5.992269992828369
    7. ' )
' → logprob: -8.367270469665527
    8. '(' → logprob: -8.742270469665527
    9. '   ' → logprob: -9.617270469665527
    10. '[' → logprob: -9.867270469665527

Token 1180: ' )
' (ID: 3270)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09742844849824905
    2. ')' → logprob: -2.472428560256958
    3. ' )
' → logprob: -4.972428321838379
    4. ')
' → logprob: -7.472428321838379
    5. '       ' → logprob: -7.722428321838379
    6. ' )' → logprob: -8.097428321838379
    7. '
' → logprob: -9.097428321838379
    8. '   ' → logprob: -10.222428321838379
    9. '\n' → logprob: -11.222428321838379
    10. ')\' → logprob: -11.347428321838379

Token 1181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035267315804958344
    2. 'index' → logprob: -4.035267353057861
    3. '
' → logprob: -4.535267353057861
    4. 'idx' → logprob: -6.660267353057861
    5. 'lines' → logprob: -6.785267353057861
    6. '```' → logprob: -7.035267353057861
    7. ' lines' → logprob: -7.535267353057861
    8. 'line' → logprob: -7.660267353057861
    9. 'i' → logprob: -7.660267353057861
    10. 'current' → logprob: -8.160266876220703

Token 1182: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.1309579759836197
    2. 'idx' (adapté à ' idx') → logprob: -2.380958080291748
    3. '       ' → logprob: -4.505958080291748
    4. 'line' → logprob: -4.755958080291748
    5. 'current' → logprob: -5.255958080291748
    6. 'i' → logprob: -5.505958080291748
    7. 'pos' → logprob: -7.380958080291748
    8. 'lines' → logprob: -8.38095760345459
    9. ' idx' → logprob: -9.13095760345459
    10. ' index' → logprob: -9.13095760345459

Token 1183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997144967317581
    2. '=' → logprob: -2.6949715614318848
    3. ' +=' → logprob: -10.444971084594727
    4. ' =
' → logprob: -12.944971084594727
    5. '+=' → logprob: -13.319971084594727
    6. ' ' → logprob: -13.819971084594727
    7. '=
' → logprob: -15.319971084594727
    8. '	' → logprob: -15.694971084594727
    9. ',' → logprob: -15.694971084594727
    10. '   ' → logprob: -16.194971084594727

Token 1184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '
' → logprob: -17.752805709838867
    4. '   ' → logprob: -17.752805709838867
    5. ' 
' → logprob: -18.127805709838867
    6. '```' → logprob: -18.627805709838867
    7. '    ' → logprob: -18.752805709838867
    8. ' ' → logprob: -18.877805709838867
    9. '       ' → logprob: -18.877805709838867
    10. '        ' → logprob: -19.127805709838867

Token 1185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.625001907348633
    4. '```' → logprob: -19.375001907348633
    5. '       ' → logprob: -19.750001907348633
    6. '=' → logprob: -20.125001907348633
    7. '
' → logprob: -21.000001907348633
    8. 'idx' → logprob: -21.375001907348633
    9. ' =' → logprob: -21.625001907348633
    10. '১' → logprob: -21.625001907348633

Token 1186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19936805963516235
    2. '
' → logprob: -2.0743680000305176
    3. 'while' → logprob: -3.0743680000305176
    4. 'for' → logprob: -5.449368000030518
    5. ' while' → logprob: -6.199368000030518
    6. '<|end|>' → logprob: -7.574368000030518
    7. '        
' → logprob: -7.699368000030518
    8. ' for' → logprob: -8.074368476867676
    9. '	while' → logprob: -8.449368476867676
    10. '	' → logprob: -8.699368476867676

Token 1187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10227549076080322
    2. 'for' → logprob: -3.7272753715515137
    3. 'while' → logprob: -3.8522753715515137
    4. '<|end|>' → logprob: -4.352275371551514
    5. '
' → logprob: -4.727275371551514
    6. '	' → logprob: -4.852275371551514
    7. ' for' → logprob: -5.477275371551514
    8. '   ' → logprob: -5.602275371551514
    9. ' while' → logprob: -5.852275371551514
    10. ' lines' → logprob: -6.602275371551514

Token 1188: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29412102699279785
    2. 'innings' → logprob: -1.9191210269927979
    3. 'while' → logprob: -2.294121026992798
    4. '       ' → logprob: -6.169120788574219
    5. ' for' → logprob: -6.294120788574219
    6. 'self' → logprob: -6.669120788574219
    7. 'results' → logprob: -7.544120788574219
    8. 'datasets' → logprob: -7.794120788574219
    9. 'inning' → logprob: -8.169120788574219
    10. ' while' → logprob: -8.544120788574219

Token 1189: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025173800066113472
    2. 'i' → logprob: -4.400173664093018
    3. ' _' → logprob: -5.150173664093018
    4. '_i' → logprob: -5.900173664093018
    5. '_dataset' → logprob: -6.400173664093018
    6. ' i' → logprob: -7.025173664093018
    7. 'dataset' → logprob: -7.150173664093018
    8. 'range' → logprob: -8.025174140930176
    9. ' dataset' → logprob: -8.900174140930176
    10. ' range' → logprob: -9.650174140930176

Token 1190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005939701572060585
    2. 'in' → logprob: -5.130939483642578
    3. 'i' → logprob: -12.380939483642578
    4. ' ' → logprob: -12.755939483642578
    5. 'range' → logprob: -12.755939483642578
    6. '	in' → logprob: -15.130939483642578
    7. '
' → logprob: -15.880939483642578
    8. '  ' → logprob: -16.005939483642578
    9. '   ' → logprob: -16.255939483642578
    10. ' i' → logprob: -16.380939483642578

Token 1191: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012532375752925873
    2. ' range' → logprob: -4.3875322341918945
    3. 'n' → logprob: -10.887532234191895
    4. '
' → logprob: -14.137532234191895
    5. 'in' → logprob: -14.262532234191895
    6. '(range' → logprob: -14.262532234191895
    7. '	range' → logprob: -14.887532234191895
    8. 'x' → logprob: -15.137532234191895
    9. ' ' → logprob: -15.387532234191895
    10. '[' → logprob: -15.512532234191895

Token 1192: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8470203876495361
    2. '(' → logprob: -1.0970203876495361
    3. 'n' → logprob: -2.097020387649536
    4. ' n' → logprob: -2.847020387649536
    5. ' (' → logprob: -2.972020387649536
    6. '(
' → logprob: -6.097020149230957
    7. ',' → logprob: -7.347020149230957
    8. 'idx' → logprob: -7.847020149230957
    9. '   ' → logprob: -7.972020149230957
    10. '       ' → logprob: -8.097020149230957

Token 1193: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0016399504384025931
    2. ' n' → logprob: -6.5016398429870605
    3. ')' → logprob: -10.126640319824219
    4. ')n' → logprob: -10.251640319824219
    5. '1' → logprob: -10.376640319824219
    6. 'idx' → logprob: -11.001640319824219
    7. '
' → logprob: -11.876640319824219
    8. '0' → logprob: -12.876640319824219
    9. '	n' → logprob: -13.251640319824219
    10. '   ' → logprob: -14.126640319824219

Token 1194: ' ):
' (ID: 48169)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5333710312843323
    2. '       ' → logprob: -1.7833709716796875
    3. '):' → logprob: -1.9083709716796875
    4. ':' → logprob: -3.0333709716796875
    5. '   ' → logprob: -4.6583709716796875
    6. ' ):
' → logprob: -4.7833709716796875
    7. ':
' → logprob: -4.9083709716796875
    8. '           ' → logprob: -5.2833709716796875
    9. '<|end|>' → logprob: -5.5333709716796875
    10. ' ):' → logprob: -5.6583709716796875

Token 1195: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15243761241436005
    2. '           ' → logprob: -2.152437686920166
    3. '```' → logprob: -4.902437686920166
    4. 'in' → logprob: -5.277437686920166
    5. 'inning' → logprob: -5.777437686920166
    6. 'innings' → logprob: -6.027437686920166
    7. '   ' → logprob: -6.277437686920166
    8. '	   ' → logprob: -6.527437686920166
    9. '	       ' → logprob: -6.902437686920166
    10. ' innings' → logprob: -7.652437686920166

Token 1196: ' inning' (ID: 70835)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inning' (adapté à ' inning') → logprob: -0.02043023332953453
    2. '           ' → logprob: -4.145430088043213
    3. 'in' → logprob: -6.270430088043213
    4. 'innings' → logprob: -6.520430088043213
    5. ' inning' → logprob: -7.520430088043213
    6. '       ' → logprob: -8.895430564880371
    7. 'self' → logprob: -9.270430564880371
    8. '               ' → logprob: -9.520430564880371
    9. 'events' → logprob: -10.020430564880371
    10. '   ' → logprob: -10.395430564880371

Token 1197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09804705530405045
    2. '_events' → logprob: -2.8480470180511475
    3. '_lines' → logprob: -4.348047256469727
    4. '=' → logprob: -4.473047256469727
    5. '_in' → logprob: -5.223047256469727
    6. '_' → logprob: -6.223047256469727
    7. '_sim' → logprob: -6.973047256469727
    8. '_obj' → logprob: -7.223047256469727
    9. '_b' → logprob: -7.473047256469727
    10. '_base' → logprob: -7.848047256469727

Token 1198: ' In' (ID: 730)
  Prédit: 'In'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.043005142360925674
    2. ' In' → logprob: -3.1680052280426025
    3. '	In' → logprob: -12.793004989624023
    4. ' innings' → logprob: -14.293004989624023
    5. ' inning' → logprob: -14.668004989624023
    6. 'I' → logprob: -14.918004989624023
    7. ' Inn' → logprob: -15.043004989624023
    8. '   ' → logprob: -15.293004989624023
    9. 'Inn' → logprob: -15.418004989624023
    10. '_In' → logprob: -15.543004989624023

Token 1199: 'ning' (ID: 1401)
  Prédit: 'ning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ning' → logprob: -0.02469218708574772
    2. 'In' → logprob: -3.8996922969818115
    3. 'inning' → logprob: -5.774692058563232
    4. 'n' → logprob: -7.024692058563232
    5. 'ing' → logprob: -10.02469253540039
    6. '(In' → logprob: -10.64969253540039
    7. 'ng' → logprob: -11.02469253540039
    8. 'ining' → logprob: -11.14969253540039
    9. '[' → logprob: -11.77469253540039
    10. 'nn' → logprob: -12.27469253540039

Token 1200: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10245691984891891
    2. '()
' → logprob: -2.72745680809021
    3. '(' → logprob: -3.47745680809021
    4. '(
' → logprob: -6.852457046508789
    5. '();' → logprob: -10.727457046508789
    6. '()
' → logprob: -11.227457046508789
    7. '()

' → logprob: -11.977457046508789
    8. '()\' → logprob: -12.602457046508789
    9. '())' → logprob: -13.352457046508789
    10. '       ' → logprob: -13.352457046508789

Token 1201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3606167435646057
    2. 'while' → logprob: -1.235616683959961
    3. ' while' → logprob: -5.610616683959961
    4. '	       ' → logprob: -5.985616683959961
    5. '       ' → logprob: -6.110616683959961
    6. '	while' → logprob: -6.610616683959961
    7. '	   ' → logprob: -7.735616683959961
    8. 'tokens' → logprob: -7.985616683959961
    9. '		' → logprob: -8.235616683959961
    10. '
' → logprob: -8.360616683959961

Token 1202: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01864992082118988
    2. '           ' → logprob: -4.018650054931641
    3. ' while' → logprob: -7.768650054931641
    4. '	       ' → logprob: -10.39365005493164
    5. '	while' → logprob: -10.89365005493164
    6. '		' → logprob: -11.51865005493164
    7. 'line' → logprob: -12.01865005493164
    8. 'event' → logprob: -12.64365005493164
    9. '	   ' → logprob: -12.89365005493164
    10. '		   ' → logprob: -12.89365005493164

Token 1203: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.31338047981262207
    2. ' idx' → logprob: -1.313380479812622
    3. '   ' → logprob: -9.813380241394043
    4. '	idx' → logprob: -10.313380241394043
    5. 'True' → logprob: -12.188380241394043
    6. ' lines' → logprob: -12.188380241394043
    7. '           ' → logprob: -12.438380241394043
    8. ' True' → logprob: -12.563380241394043
    9. '       ' → logprob: -12.938380241394043
    10. ' ' → logprob: -12.938380241394043

Token 1204: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.48698195815086365
    2. ' <' → logprob: -0.986981987953186
    3. '<len' → logprob: -4.3619818687438965
    4. '<n' → logprob: -10.611982345581055
    5. '<int' → logprob: -11.486982345581055
    6. '[' → logprob: -11.861982345581055
    7. '<size' → logprob: -11.986982345581055
    8. '<num' → logprob: -12.736982345581055
    9. '<data' → logprob: -12.736982345581055
    10. '<class' → logprob: -12.986982345581055

Token 1205: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011708177626132965
    2. ' len' → logprob: -6.751170635223389
    3. '	len' → logprob: -15.001171112060547
    4. '(len' → logprob: -15.251171112060547
    5. '<len' → logprob: -16.751171112060547
    6. 'length' → logprob: -17.626171112060547
    7. '=len' → logprob: -17.876171112060547
    8. '[len' → logprob: -18.126171112060547
    9. 'lines' → logprob: -18.251171112060547
    10. ',len' → logprob: -18.376171112060547

Token 1206: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.30788952112197876
    2. ' lines' → logprob: -1.807889461517334
    3. '(lines' → logprob: -2.307889461517334
    4. '(' → logprob: -6.557889461517334
    5. '	lines' → logprob: -9.307889938354492
    6. '(
' → logprob: -11.057889938354492
    7. '_lines' → logprob: -12.432889938354492
    8. ' (' → logprob: -13.307889938354492
    9. 'line' → logprob: -14.682889938354492
    10. '.lines' → logprob: -14.932889938354492

Token 1207: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10075380653142929
    2. 'and' → logprob: -2.3507537841796875
    3. '           ' → logprob: -7.9757537841796875
    4. '):
' → logprob: -9.600753784179688
    5. ':
' → logprob: -9.850753784179688
    6. ')' → logprob: -9.850753784179688
    7. '	and' → logprob: -11.850753784179688
    8. '       ' → logprob: -12.350753784179688
    9. '               ' → logprob: -12.350753784179688
    10. ':' → logprob: -12.350753784179688

Token 1208: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25632306933403015
    2. 'and' → logprob: -1.7563230991363525
    3. ':
' → logprob: -3.2563230991363525
    4. ':' → logprob: -4.756322860717773
    5. '           ' → logprob: -5.131322860717773
    6. '       ' → logprob: -9.256322860717773
    7. '               ' → logprob: -9.381322860717773
    8. '   ' → logprob: -9.506322860717773
    9. '	and' → logprob: -10.256322860717773
    10. '):
' → logprob: -11.256322860717773

Token 1209: ' not' (ID: 625)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.02790280431509018
    2. 'not' → logprob: -4.152902603149414
    3. ' lines' → logprob: -4.652902603149414
    4. ' not' → logprob: -6.902902603149414
    5. '(lines' → logprob: -6.902902603149414
    6. '(not' → logprob: -9.402902603149414
    7. 'line' → logprob: -9.902902603149414
    8. '   ' → logprob: -10.152902603149414
    9. '(' → logprob: -11.027902603149414
    10. '
' → logprob: -11.152902603149414

Token 1210: ' inning' (ID: 70835)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inning' → logprob: -0.013478070497512817
    2. 'lines' → logprob: -4.5134782791137695
    3. 'innings' → logprob: -6.3884782791137695
    4. ' inning' → logprob: -7.8884782791137695
    5. 'ining' → logprob: -9.38847827911377
    6. '   ' → logprob: -9.76347827911377
    7. 'lining' → logprob: -10.01347827911377
    8. '(in' → logprob: -10.26347827911377
    9. '(lines' → logprob: -10.51347827911377
    10. '(' → logprob: -10.63847827911377

Token 1211: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16046002507209778
    2. '.process' → logprob: -1.9104599952697754
    3. 'process' → logprob: -9.285460472106934
    4. '.finished' → logprob: -9.785460472106934
    5. '.end' → logprob: -10.535460472106934
    6. '           ' → logprob: -11.535460472106934
    7. '.has' → logprob: -11.660460472106934
    8. '       ' → logprob: -11.910460472106934
    9. '.completed' → logprob: -12.285460472106934
    10. ' .' → logprob: -12.410460472106934

Token 1212: 'ended' (ID: 3933)
  Prédit: 'ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ended' → logprob: -0.054954275488853455
    2. 'process' → logprob: -2.9299542903900146
    3. 'processed' → logprob: -10.804954528808594
    4. 'ENDED' → logprob: -11.679954528808594
    5. ' ended' → logprob: -11.929954528808594
    6. '
' → logprob: -12.429954528808594
    7. 'finished' → logprob: -12.679954528808594
    8. '   ' → logprob: -12.929954528808594
    9. '__' → logprob: -13.054954528808594
    10. '(process' → logprob: -13.054954528808594

Token 1213: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5105097889900208
    2. ':
' → logprob: -1.885509729385376
    3. 'and' → logprob: -2.260509729385376
    4. ':' → logprob: -2.260509729385376
    5. '           ' → logprob: -3.260509729385376
    6. '               ' → logprob: -7.885509967803955
    7. '       ' → logprob: -7.885509967803955
    8. '   ' → logprob: -9.135509490966797
    9. '():
' → logprob: -9.760509490966797
    10. '):
' → logprob: -10.510509490966797

Token 1214: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06288580596446991
    2. '               ' → logprob: -2.8128857612609863
    3. 'event' → logprob: -7.937885761260986
    4. '	       ' → logprob: -8.937886238098145
    5. '            
' → logprob: -9.312886238098145
    6. '
' → logprob: -10.062886238098145
    7. 'tokens' → logprob: -10.062886238098145
    8. '```' → logprob: -10.062886238098145
    9. ' line' → logprob: -10.312886238098145
    10. 'line' → logprob: -10.312886238098145

Token 1215: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5177507400512695
    2. 'event' → logprob: -1.3927507400512695
    3. 'line' (adapté à ' line') → logprob: -2.0177507400512695
    4. ' line' → logprob: -4.1427507400512695
    5. ' event' → logprob: -5.1427507400512695
    6. '               ' → logprob: -8.26775074005127
    7. '   ' → logprob: -8.39275074005127
    8. '	line' → logprob: -8.64275074005127
    9. 'token' → logprob: -8.76775074005127
    10. '	event' → logprob: -9.51775074005127

Token 1216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138337731361389
    2. '=' → logprob: -1.3138337135314941
    3. '=line' → logprob: -8.438834190368652
    4. '           ' → logprob: -9.438834190368652
    5. ' ' → logprob: -10.188834190368652
    6. '   ' → logprob: -10.313834190368652
    7. '_token' → logprob: -10.563834190368652
    8. '	' → logprob: -10.688834190368652
    9. '=
' → logprob: -10.688834190368652
    10. 'token' → logprob: -10.688834190368652

Token 1217: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.474091112613678
    2. 'lines' → logprob: -0.974091112613678
    3. '	lines' → logprob: -11.724091529846191
    4. '(lines' → logprob: -12.099091529846191
    5. '_lines' → logprob: -16.474090576171875
    6. '               ' → logprob: -16.599090576171875
    7. '                   ' → logprob: -16.724090576171875
    8. '.lines' → logprob: -16.849090576171875
    9. '           ' → logprob: -16.974090576171875
    10. 'line' → logprob: -17.474090576171875

Token 1218: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0004378214362077415
    2. '[' → logprob: -7.7504377365112305
    3. '[
' → logprob: -13.37543773651123
    4. '           ' → logprob: -13.62543773651123
    5. '[token' → logprob: -13.87543773651123
    6. '                   ' → logprob: -14.37543773651123
    7. ' [' → logprob: -14.50043773651123
    8. '[ind' → logprob: -14.87543773651123
    9. '       ' → logprob: -15.00043773651123
    10. '               ' → logprob: -15.00043773651123

Token 1219: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.10922151058912277
    2. '.strip' → logprob: -2.9842214584350586
    3. ']' → logprob: -3.7342214584350586
    4. ']
' → logprob: -3.7342214584350586
    5. '               ' → logprob: -6.234221458435059
    6. '           ' → logprob: -6.359221458435059
    7. '.rstrip' → logprob: -8.734221458435059
    8. '<|end|>' → logprob: -8.984221458435059
    9. '            
' → logprob: -9.109221458435059
    10. ' ].' → logprob: -9.109221458435059

Token 1220: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.935296834039036e-06
    2. 'rstrip' → logprob: -12.75000286102295
    3. ' strip' → logprob: -17.750003814697266
    4. '_strip' → logprob: -19.000003814697266
    5. '.strip' → logprob: -19.125003814697266
    6. '(strip' → logprob: -19.250003814697266
    7. '
' → logprob: -21.500003814697266
    8. 'str' → logprob: -21.875003814697266
    9. '-strip' → logprob: -22.125003814697266
    10. 'Strip' → logprob: -22.500003814697266

Token 1221: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41429874300956726
    2. '               ' → logprob: -1.5392987728118896
    3. '()
' → logprob: -2.5392987728118896
    4. '           ' → logprob: -3.1642987728118896
    5. '                
' → logprob: -6.7892985343933105
    6. '<|end|>' → logprob: -7.5392985343933105
    7. '<|end|>' → logprob: -7.5392985343933105
    8. '            
' → logprob: -8.539299011230469
    9. 'if' → logprob: -8.539299011230469
    10. ' if' → logprob: -8.789299011230469

Token 1222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015393988229334354
    2. 'if' → logprob: -4.64039421081543
    3. '           ' → logprob: -5.26539421081543
    4. ' if' → logprob: -8.14039421081543
    5. '<|end|>' → logprob: -10.14039421081543
    6. '<|end|>' → logprob: -10.51539421081543
    7. '	       ' → logprob: -10.89039421081543
    8. '       ' → logprob: -11.14039421081543
    9. '                
' → logprob: -11.64039421081543
    10. '```' → logprob: -11.76539421081543

Token 1223: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09059668332338333
    2. 'idx' → logprob: -2.5905966758728027
    3. '           ' → logprob: -5.340596675872803
    4. '               ' → logprob: -5.465596675872803
    5. 'self' → logprob: -6.840596675872803
    6. 'inning' → logprob: -7.590596675872803
    7. 'result' → logprob: -8.090597152709961
    8. 'ended' → logprob: -9.340597152709961
    9. ' if' → logprob: -9.340597152709961
    10. 'finished' → logprob: -9.715597152709961

Token 1224: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1802109330892563
    2. 'not' → logprob: -1.8052109479904175
    3. ' not' → logprob: -8.055211067199707
    4. ' line' → logprob: -9.430211067199707
    5. 'len' → logprob: -9.680211067199707
    6. '(line' → logprob: -12.930211067199707
    7. '```' → logprob: -13.805211067199707
    8. '#line' → logprob: -14.930211067199707
    9. '   ' → logprob: -14.930211067199707
    10. '	line' → logprob: -15.055211067199707

Token 1225: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0028895139694213867
    2. ' ==' → logprob: -5.877889633178711
    3. '()==' → logprob: -9.752889633178711
    4. '===' → logprob: -11.752889633178711
    5. '==
' → logprob: -12.002889633178711
    6. ':' → logprob: -12.752889633178711
    7. ')==' → logprob: -12.877889633178711
    8. ']==' → logprob: -13.252889633178711
    9. '=' → logprob: -13.502889633178711
    10. '=="' → logprob: -13.877889633178711

Token 1226: ' '':
' (ID: 125614)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.47189652919769287
    2. '''' → logprob: -1.4718965291976929
    3. '"":' → logprob: -1.9718965291976929
    4. ''' → logprob: -5.471896648406982
    5. '"' → logprob: -5.721896648406982
    6. ' "":
' → logprob: -11.471896171569824
    7. '":' → logprob: -12.471896171569824
    8. '''
' → logprob: -12.596896171569824
    9. ' '':
' → logprob: -12.846896171569824
    10. '"",' → logprob: -14.346896171569824

Token 1227: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0038012652657926083
    2. '               ' → logprob: -5.753801345825195
    3. '                       ' → logprob: -8.128801345825195
    4. ':
' → logprob: -8.753801345825195
    5. ':' → logprob: -10.003801345825195
    6. '		           ' → logprob: -10.503801345825195
    7. '                    
' → logprob: -10.753801345825195
    8. '           ' → logprob: -10.753801345825195
    9. '	               ' → logprob: -10.878801345825195
    10. '                  ' → logprob: -12.003801345825195

Token 1228: ' idx' (ID: 14016)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7568871378898621
    2. 'break' → logprob: -1.0068871974945068
    3. 'idx' (adapté à ' idx') → logprob: -2.006887197494507
    4. '               ' → logprob: -3.631887197494507
    5. '                       ' → logprob: -5.506886959075928
    6. ' break' → logprob: -8.756887435913086
    7. '           ' → logprob: -8.756887435913086
    8. ' idx' → logprob: -9.256887435913086
    9. '				' → logprob: -9.881887435913086
    10. '
' → logprob: -10.381887435913086

Token 1229: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05646929517388344
    2. ' +=' → logprob: -2.931469202041626
    3. '                   ' → logprob: -6.931469440460205
    4. '               ' → logprob: -7.806469440460205
    5. '           ' → logprob: -9.431468963623047
    6. '                       ' → logprob: -10.431468963623047
    7. '+' → logprob: -10.556468963623047
    8. ']+=' → logprob: -10.681468963623047
    9. '=' → logprob: -11.056468963623047
    10. '<|end|>' → logprob: -12.556468963623047

Token 1230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'continue' → logprob: -14.625028610229492
    4. '                   ' → logprob: -15.500028610229492
    5. '
' → logprob: -17.625028610229492
    6. '   ' → logprob: -18.125028610229492
    7. '           ' → logprob: -18.125028610229492
    8. '               ' → logprob: -18.500028610229492
    9. ' continue' → logprob: -18.625028610229492
    10. '                       ' → logprob: -19.125028610229492

Token 1231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'continue' → logprob: -18.250001907348633
    4. '
' → logprob: -18.625001907348633
    5. '```' → logprob: -19.375001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '+' → logprob: -21.000001907348633
    8. '۱' → logprob: -21.625001907348633
    9. '0' → logprob: -21.750001907348633
    10. '１' → logprob: -22.000001907348633

Token 1232: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0027523303870111704
    2. '               ' → logprob: -6.127752304077148
    3. '                       ' → logprob: -7.877752304077148
    4. '
' → logprob: -9.877752304077148
    5. '           ' → logprob: -10.627752304077148
    6. '		           ' → logprob: -10.877752304077148
    7. '	               ' → logprob: -11.127752304077148
    8. '                    
' → logprob: -11.252752304077148
    9. '```' → logprob: -11.627752304077148
    10. '<|end|>' → logprob: -11.877752304077148

Token 1233: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003049127757549286
    2. '               ' → logprob: -6.003048896789551
    3. '                       ' → logprob: -8.12804889678955
    4. '           ' → logprob: -8.62804889678955
    5. 'continue' → logprob: -10.37804889678955
    6. '```' → logprob: -10.37804889678955
    7. '		           ' → logprob: -11.75304889678955
    8. '       ' → logprob: -12.00304889678955
    9. '                  ' → logprob: -12.37804889678955
    10. '   ' → logprob: -12.50304889678955

Token 1234: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08195610344409943
    2. 'continue' (adapté à ' continue') → logprob: -2.581956148147583
    3. '               ' → logprob: -6.706955909729004
    4. 'break' → logprob: -6.956955909729004
    5. ' continue' → logprob: -7.081955909729004
    6. '                       ' → logprob: -10.956955909729004
    7. '           ' → logprob: -11.206955909729004
    8. ' break' → logprob: -11.831955909729004
    9. '		           ' → logprob: -13.331955909729004
    10. '	continue' → logprob: -13.831955909729004

Token 1235: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007064862176775932
    2. '                   ' → logprob: -5.5070648193359375
    3. 'idx' → logprob: -6.2570648193359375
    4. '
' → logprob: -7.5070648193359375
    5. '           ' → logprob: -8.257064819335938
    6. '                
' → logprob: -9.632064819335938
    7. '                    
' → logprob: -10.632064819335938
    8. ' idx' → logprob: -11.007064819335938
    9. '```' → logprob: -11.007064819335938
    10. '                       ' → logprob: -11.007064819335938

Token 1236: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020892347674816847
    2. 'idx' → logprob: -6.377089023590088
    3. '```' → logprob: -9.002089500427246
    4. 'if' → logprob: -9.127089500427246
    5. '                   ' → logprob: -10.127089500427246
    6. 'token' → logprob: -10.252089500427246
    7. '           ' → logprob: -10.627089500427246
    8. '                
' → logprob: -11.502089500427246
    9. '       ' → logprob: -11.877089500427246
    10. ' if' → logprob: -12.502089500427246

Token 1237: ' inning' (ID: 70835)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.611089825630188
    2. 'if' → logprob: -0.986089825630188
    3. 'runs' → logprob: -3.1110897064208984
    4. 'result' → logprob: -3.7360897064208984
    5. 'event' → logprob: -4.986089706420898
    6. 'out' → logprob: -6.361089706420898
    7. 'self' → logprob: -6.486089706420898
    8. 'try' → logprob: -6.611089706420898
    9. ' if' → logprob: -6.736089706420898
    10. '```' → logprob: -7.486089706420898

Token 1238: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.008964820764958858
    2. '.' → logprob: -4.758965015411377
    3. '.token' → logprob: -9.008964538574219
    4. 'process' → logprob: -9.383964538574219
    5. '       ' → logprob: -10.008964538574219
    6. '.
' → logprob: -11.258964538574219
    7. ').' → logprob: -11.258964538574219
    8. '.predict' → logprob: -11.508964538574219
    9. '.event' → logprob: -11.633964538574219
    10. ' .' → logprob: -12.383964538574219

Token 1239: '_event' (ID: 14884)
  Prédit: '_event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_event' → logprob: -0.000601169012952596
    2. '(' → logprob: -7.625601291656494
    3. 'event' → logprob: -9.875600814819336
    4. '(event' → logprob: -10.250600814819336
    5. '_events' → logprob: -11.750600814819336
    6. '_line' → logprob: -12.125600814819336
    7. '_' → logprob: -12.125600814819336
    8. '(line' → logprob: -13.250600814819336
    9. 'Event' → logprob: -13.750600814819336
    10. '_(' → logprob: -14.125600814819336

Token 1240: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01701647788286209
    2. '(line' → logprob: -4.517016410827637
    3. '(lines' → logprob: -5.267016410827637
    4. '(
' → logprob: -7.142016410827637
    5. ' lines' → logprob: -15.267016410827637
    6. '(

' → logprob: -15.767016410827637
    7. '((' → logprob: -15.892016410827637
    8. '(
' → logprob: -15.892016410827637
    9. ' (' → logprob: -16.767017364501953
    10. 'lines' → logprob: -17.017017364501953

Token 1241: ' line' (ID: 2543)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.2720983326435089
    2. 'lines' → logprob: -2.0220983028411865
    3. ' line' → logprob: -2.7720983028411865
    4. 'line' → logprob: -3.1470983028411865
    5. '(lines' → logprob: -8.397098541259766
    6. '(line' → logprob: -9.647098541259766
    7. ')' → logprob: -10.397098541259766
    8. '	lines' → logprob: -12.147098541259766
    9. '	line' → logprob: -12.897098541259766
    10. '(' → logprob: -13.022098541259766

Token 1242: ' )
' (ID: 3270)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26653555035591125
    2. ')' → logprob: -1.7665355205535889
    3. ')
' → logprob: -2.891535520553589
    4. '<|end|>' → logprob: -5.766535758972168
    5. '<|end|>' → logprob: -6.391535758972168
    6. '           ' → logprob: -6.516535758972168
    7. '                   ' → logprob: -7.641535758972168
    8. ' )' → logprob: -9.016535758972168
    9. ' )
' → logprob: -9.141535758972168
    10. '                
' → logprob: -10.016535758972168

Token 1243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012734467163681984
    2. '                   ' → logprob: -7.1262736320495605
    3. '           ' → logprob: -8.376273155212402
    4. '
' → logprob: -9.501273155212402
    5. 'idx' → logprob: -10.126273155212402
    6. '<|end|>' → logprob: -10.751273155212402
    7. '```' → logprob: -11.126273155212402
    8. '              ' → logprob: -11.126273155212402
    9. '<|end|>' → logprob: -11.251273155212402
    10. '       ' → logprob: -12.001273155212402

Token 1244: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0384039469063282
    2. '               ' → logprob: -3.7884039878845215
    3. '           ' → logprob: -4.4134039878845215
    4. ' idx' → logprob: -6.0384039878845215
    5. '                   ' → logprob: -7.6634039878845215
    6. '	idx' → logprob: -10.413403511047363
    7. '
' → logprob: -11.038403511047363
    8. '       ' → logprob: -11.788403511047363
    9. '   ' → logprob: -11.913403511047363
    10. '                       ' → logprob: -12.538403511047363

Token 1245: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004088135901838541
    2. ' +=' → logprob: -5.504087924957275
    3. '+' → logprob: -11.879088401794434
    4. '=' → logprob: -13.504088401794434
    5. ']+=' → logprob: -13.879088401794434
    6. '```' → logprob: -16.004087448120117
    7. '++' → logprob: -16.254087448120117
    8. '	' → logprob: -16.504087448120117
    9. '+="' → logprob: -16.879087448120117
    10. '+='' → logprob: -17.379087448120117

Token 1246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -17.750085830688477
    4. '   ' → logprob: -18.875085830688477
    5. '۱' → logprob: -19.000085830688477
    6. '
' → logprob: -19.250085830688477
    7. '１' → logprob: -19.250085830688477
    8. ' ' → logprob: -19.750085830688477
    9. '0' → logprob: -20.125085830688477
    10. '<|end|>' → logprob: -20.250085830688477

Token 1247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -20.625
    5. '１' → logprob: -21.875
    6. '0' → logprob: -22.5
    7. '۱' → logprob: -22.625
    8. '(' → logprob: -23.0
    9. '[' → logprob: -23.25
    10. '#' → logprob: -23.5

Token 1248: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1249: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1250: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02322951704263687
    2. '           ' → logprob: -4.148229598999023
    3. '       ' → logprob: -5.523229598999023
    4. ' self' → logprob: -5.898229598999023
    5. '	self' → logprob: -8.773229598999023
    6. '<|end|>' → logprob: -9.023229598999023
    7. '
' → logprob: -9.773229598999023
    8. '   ' → logprob: -10.398229598999023
    9. '```' → logprob: -11.273229598999023
    10. '<|end|>' → logprob: -11.773229598999023

Token 1251: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -3.774276774493046e-05
    2. 'innings' → logprob: -10.750038146972656
    3. '.end' → logprob: -12.375038146972656
    4. '
' → logprob: -12.375038146972656
    5. ' innings' → logprob: -13.125038146972656
    6. '.' → logprob: -14.125038146972656
    7. ').' → logprob: -14.500038146972656
    8. '.append' → logprob: -14.625038146972656
    9. '>.' → logprob: -14.625038146972656
    10. '.In' → logprob: -15.000038146972656

Token 1252: 'nings' (ID: 42490)
  Prédit: 'ings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.637606143951416
    2. 'nings' → logprob: -0.762606143951416
    3. 'n' → logprob: -5.887606143951416
    4. 'innings' → logprob: -7.137606143951416
    5. 'In' → logprob: -7.512606143951416
    6. 'in' → logprob: -8.137605667114258
    7. 'ng' → logprob: -8.387605667114258
    8. '_in' → logprob: -9.762605667114258
    9. '```' → logprob: -10.137605667114258
    10. 'd' → logprob: -10.387605667114258

Token 1253: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.029950298368930817
    2. '.' → logprob: -3.5299503803253174
    3. '.app' → logprob: -8.904950141906738
    4. '.ap' → logprob: -9.904950141906738
    5. '.extend' → logprob: -11.779950141906738
    6. '.
' → logprob: -13.154950141906738
    7. ' .' → logprob: -13.654950141906738
    8. '.add' → logprob: -14.154950141906738
    9. '.setdefault' → logprob: -14.404950141906738
    10. '.Append' → logprob: -14.654950141906738

Token 1254: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12693220376968384
    2. '(in' → logprob: -2.126932144165039
    3. '(
' → logprob: -13.001932144165039
    4. '(i' → logprob: -14.626932144165039
    5. '(In' → logprob: -14.751932144165039
    6. 'in' → logprob: -14.876932144165039
    7. '(inplace' → logprob: -15.501932144165039
    8. '((' → logprob: -15.626932144165039
    9. '(iter' → logprob: -17.50193214416504
    10. 'inning' → logprob: -17.50193214416504

Token 1255: ' inning' (ID: 70835)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inning' → logprob: -0.0028247274458408356
    2. ' inning' → logprob: -5.877824783325195
    3. 'innings' → logprob: -11.252824783325195
    4. 'ining' → logprob: -13.252824783325195
    5. 'inch' → logprob: -13.252824783325195
    6. 'inin' → logprob: -13.752824783325195
    7. ' innings' → logprob: -14.502824783325195
    8. '(in' → logprob: -15.002824783325195
    9. 'inn' → logprob: -15.127824783325195
    10. '(' → logprob: -15.502824783325195

Token 1256: ' )

' (ID: 11467)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1257: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3242873251438141
    2. '<|end|>' → logprob: -1.9492872953414917
    3. '   ' → logprob: -2.6992874145507812
    4. '
' → logprob: -3.3242874145507812
    5. ' def' → logprob: -3.8242874145507812
    6. '    
' → logprob: -5.449287414550781
    7. '<|end|>' → logprob: -6.949287414550781
    8. ' ' → logprob: -7.199287414550781
    9. '```' → logprob: -7.199287414550781
    10. '        
' → logprob: -7.324287414550781

Token 1258: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04918823391199112
    2. ' def' → logprob: -3.2991881370544434
    3. '
' → logprob: -4.799188137054443
    4. '   ' → logprob: -6.174188137054443
    5. '<|end|>' → logprob: -7.674188137054443
    6. '	def' → logprob: -9.424188613891602
    7. '    
' → logprob: -9.799188613891602
    8. 'd' → logprob: -10.549188613891602
    9. ' 
' → logprob: -10.549188613891602
    10. '```' → logprob: -10.799188613891602

Token 1259: ' get' (ID: 717)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.36013004183769226
    2. 'run' → logprob: -1.3601300716400146
    3. 'process' → logprob: -3.3601300716400146
    4. 'print' → logprob: -5.4851298332214355
    5. 'output' → logprob: -5.8601298332214355
    6. 'write' → logprob: -6.1101298332214355
    7. 'get' → logprob: -7.1101298332214355
    8. 'play' → logprob: -7.8601298332214355
    9. ' simulate' → logprob: -8.485130310058594
    10. 'compute' → logprob: -8.610130310058594

Token 1260: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.5483842492103577
    2. '_score' → logprob: -1.423384189605713
    3. '_results' → logprob: -1.798384189605713
    4. '_total' → logprob: -5.048384189605713
    5. '_' → logprob: -5.173384189605713
    6. '_final' → logprob: -6.548384189605713
    7. '_result' → logprob: -6.798384189605713
    8. '_output' → logprob: -7.673384189605713
    9. '_runs' → logprob: -9.048384666442871
    10. '_summary' → logprob: -9.173384666442871

Token 1261: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031833017710596323
    2. '(self' → logprob: -5.753183364868164
    3. '(
' → logprob: -12.378183364868164
    4. '()' → logprob: -14.503183364868164
    5. 'self' → logprob: -14.753183364868164
    6. '   ' → logprob: -15.003183364868164
    7. ' (' → logprob: -15.878183364868164
    8. 'def' → logprob: -16.003183364868164
    9. '       ' → logprob: -17.878183364868164
    10. '```' → logprob: -18.628183364868164

Token 1262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01492974441498518
    2. ')' → logprob: -5.01492977142334
    3. ' self' → logprob: -5.13992977142334
    4. ' ' → logprob: -6.38992977142334
    5. '[' → logprob: -8.38992977142334
    6. '	self' → logprob: -8.88992977142334
    7. ' )' → logprob: -9.63992977142334
    8. '(self' → logprob: -9.88992977142334
    9. '   ' → logprob: -10.01492977142334
    10. '(' → logprob: -10.01492977142334

Token 1263: ' ):
' (ID: 48169)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014279148541390896
    2. '(self' → logprob: -4.264279365539551
    3. 'self' → logprob: -9.63927936553955
    4. '(
' → logprob: -10.38927936553955
    5. '()' → logprob: -12.13927936553955
    6. '   ' → logprob: -12.63927936553955
    7. ' (' → logprob: -12.88927936553955
    8. '():' → logprob: -12.88927936553955
    9. 'def' → logprob: -13.76427936553955
    10. '):' → logprob: -14.01427936553955

Token 1264: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04072751849889755
    2. '   ' → logprob: -4.290727615356445
    3. '(
' → logprob: -4.915727615356445
    4. '[' → logprob: -5.290727615356445
    5. '       ' → logprob: -5.290727615356445
    6. '(self' → logprob: -5.415727615356445
    7. 'self' → logprob: -5.915727615356445
    8. '[
' → logprob: -7.040727615356445
    9. 'def' → logprob: -7.915727615356445
    10. ' (' → logprob: -9.540727615356445

Token 1265: ' """' (ID: 9280)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.047485046088695526
    2. '[
' → logprob: -3.547485113143921
    3. 'return' → logprob: -4.797484874725342
    4. '       ' → logprob: -5.297484874725342
    5. '   ' → logprob: -6.797484874725342
    6. ' return' → logprob: -6.922484874725342
    7. '[]' → logprob: -6.922484874725342
    8. ' [' → logprob: -7.422484874725342
    9. '(' → logprob: -8.1724853515625
    10. '[]
' → logprob: -9.1724853515625

Token 1266: 'Return' (ID: 8191)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1601017266511917
    2. ' return' → logprob: -2.1601016521453857
    3. 'scores' → logprob: -4.160101890563965
    4. '
' → logprob: -4.535101890563965
    5. 'for' → logprob: -6.160101890563965
    6. '       ' → logprob: -6.785101890563965
    7. 'results' → logprob: -7.535101890563965
    8. ' scores' → logprob: -7.535101890563965
    9. '[' → logprob: -7.660101890563965
    10. '[
' → logprob: -7.910101890563965

Token 1267: ' a' (ID: 261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03820088878273964
    2. ' [' → logprob: -3.288200855255127
    3. '[
' → logprob: -8.788201332092285
    4. '[self' → logprob: -12.038201332092285
    5. ' [
' → logprob: -14.038201332092285
    6. 'self' → logprob: -16.03820037841797
    7. '   ' → logprob: -16.66320037841797
    8. ' a' → logprob: -17.16320037841797
    9. '[(' → logprob: -17.53820037841797
    10. ' ' → logprob: -17.91320037841797

Token 1268: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7334320545196533
    2. '[' → logprob: -1.2334320545196533
    3. 'list' → logprob: -1.4834320545196533
    4. ' [' → logprob: -6.733431816101074
    5. '[
' → logprob: -8.233431816101074
    6. 'List' → logprob: -9.483431816101074
    7. '_list' → logprob: -10.108431816101074
    8. ' List' → logprob: -11.858431816101074
    9. ' ' → logprob: -12.608431816101074
    10. '[]' → logprob: -12.983431816101074

Token 1269: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05469641461968422
    2. '(' → logprob: -3.3046963214874268
    3. '[
' → logprob: -4.179696559906006
    4. ' of' → logprob: -7.679696559906006
    5. '[int' → logprob: -8.054696083068848
    6. '(
' → logprob: -8.804696083068848
    7. 'of' → logprob: -9.304696083068848
    8. '[self' → logprob: -9.929696083068848
    9. '```' → logprob: -10.054696083068848
    10. '([' → logprob: -10.804696083068848

Token 1270: ' scores' (ID: 18923)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31407466530799866
    2. 'scores' → logprob: -1.8140746355056763
    3. 'score' → logprob: -2.564074754714966
    4. ' [' → logprob: -4.564074516296387
    5. ' scores' → logprob: -4.939074516296387
    6. 'self' → logprob: -4.939074516296387
    7. '[int' → logprob: -6.189074516296387
    8. 'inte' → logprob: -7.689074516296387
    9. ' score' → logprob: -8.189074516296387
    10. '[in' → logprob: -8.314074516296387

Token 1271: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13027727603912354
    2. '(' → logprob: -2.755277156829834
    3. '[' → logprob: -3.130277156829834
    4. '[]' → logprob: -4.630277156829834
    5. '()[' → logprob: -6.630277156829834
    6. ' =' → logprob: -7.005277156829834
    7. '()
' → logprob: -7.255277156829834
    8. '[
' → logprob: -7.505277156829834
    9. '[:]' → logprob: -7.880277156829834
    10. '   ' → logprob: -8.005277633666992

Token 1272: ' all' (ID: 722)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.387365460395813
    2. 'each' → logprob: -2.2623653411865234
    3. ' each' → logprob: -2.7623653411865234
    4. ' innings' → logprob: -3.0123653411865234
    5. 'inning' → logprob: -3.6373653411865234
    6. ' inning' → logprob: -3.7623653411865234
    7. '[
' → logprob: -4.012365341186523
    8. 'innings' → logprob: -4.262365341186523
    9. 'self' → logprob: -5.012365341186523
    10. ' all' → logprob: -5.012365341186523

Token 1273: ' innings' (ID: 59221)
  Prédit: ' innings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' innings' → logprob: -0.5413579344749451
    2. 'innings' → logprob: -0.9163579344749451
    3. ')' → logprob: -5.41635799407959
    4. 'self' → logprob: -5.79135799407959
    5. '_in' → logprob: -5.91635799407959
    6. 'inning' → logprob: -6.29135799407959
    7. '(self' → logprob: -6.29135799407959
    8. '[' → logprob: -6.91635799407959
    9. '(' → logprob: -7.29135799407959
    10. '[
' → logprob: -7.54135799407959

Token 1274: ' processed' (ID: 23478)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5671596527099609
    2. '       ' → logprob: -2.192159652709961
    3. '()
' → logprob: -2.317159652709961
    4. '(' → logprob: -2.317159652709961
    5. '[' → logprob: -3.442159652709961
    6. '():
' → logprob: -3.942159652709961
    7. '   ' → logprob: -4.567159652709961
    8. '[]' → logprob: -4.692159652709961
    9. '```' → logprob: -4.942159652709961
    10. '()[' → logprob: -5.067159652709961

Token 1275: '."""
' (ID: 33044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25579726696014404
    2. '()' → logprob: -1.755797266960144
    3. '(self' → logprob: -4.255797386169434
    4. '       ' → logprob: -4.630797386169434
    5. '()
' → logprob: -4.755797386169434
    6. '():
' → logprob: -5.755797386169434
    7. '   ' → logprob: -5.755797386169434
    8. '[' → logprob: -6.130797386169434
    9. 'self' → logprob: -6.130797386169434
    10. '(
' → logprob: -6.130797386169434

Token 1276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21754227578639984
    2. '[' → logprob: -1.842542290687561
    3. 'return' → logprob: -3.7175421714782715
    4. '[
' → logprob: -4.9675421714782715
    5. '   ' → logprob: -5.9675421714782715
    6. ' return' → logprob: -6.3425421714782715
    7. '[]' → logprob: -7.4675421714782715
    8. '[]
' → logprob: -8.46754264831543
    9. '	' → logprob: -8.71754264831543
    10. '	return' → logprob: -9.21754264831543

Token 1277: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3183695673942566
    2. 'return' (adapté à ' return') → logprob: -1.3183696269989014
    3. '[
' → logprob: -5.568369388580322
    4. ' return' → logprob: -7.443369388580322
    5. '   ' → logprob: -8.06836986541748
    6. '       ' → logprob: -8.44336986541748
    7. 'scores' → logprob: -9.81836986541748
    8. '[self' → logprob: -10.19336986541748
    9. ' [' → logprob: -10.44336986541748
    10. 'result' → logprob: -10.69336986541748

Token 1278: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013274075172375888
    2. ' [' → logprob: -9.00013256072998
    3. '[self' → logprob: -11.62513256072998
    4. '[
' → logprob: -15.87513256072998
    5. '[i' → logprob: -16.500133514404297
    6. '[s' → logprob: -17.125133514404297
    7. '   ' → logprob: -17.125133514404297
    8. '[int' → logprob: -17.250133514404297
    9. '[obj' → logprob: -18.750133514404297
    10. '[len' → logprob: -19.000133514404297

Token 1279: ' inning' (ID: 70835)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inning' → logprob: -0.0007649566978216171
    2. ' inning' → logprob: -7.375764846801758
    3. 'i' → logprob: -9.375764846801758
    4. 'innings' → logprob: -11.375764846801758
    5. 'inn' → logprob: -11.500764846801758
    6. 'ining' → logprob: -11.625764846801758
    7. 'inh' → logprob: -12.000764846801758
    8. 'in' → logprob: -12.375764846801758
    9. 'inin' → logprob: -12.875764846801758
    10. 'inum' → logprob: -13.500764846801758

Token 1280: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.47577565908432007
    2. '.' → logprob: -0.9757756590843201
    3. ' .' → logprob: -6.475775718688965
    4. '.
' → logprob: -9.600775718688965
    5. '.code' → logprob: -10.100775718688965
    6. '.status' → logprob: -11.600775718688965
    7. '.s' → logprob: -11.850775718688965
    8. '.token' → logprob: -12.725775718688965
    9. '
' → logprob: -12.850775718688965
    10. ').' → logprob: -13.225775718688965

Token 1281: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7989402413368225
    2. ']' → logprob: -1.1739401817321777
    3. ' ]' → logprob: -2.1739401817321777
    4. '()' → logprob: -3.1739401817321777
    5. 'for' → logprob: -3.2989401817321777
    6. '()]' → logprob: -3.6739401817321777
    7. ')' → logprob: -4.548940181732178
    8. '[' → logprob: -5.798940181732178
    9. '(' → logprob: -5.923940181732178
    10. '   ' → logprob: -6.423940181732178

Token 1282: ' inning' (ID: 70835)
  Prédit: 'inning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inning' → logprob: -0.0036796480417251587
    2. ' inning' → logprob: -5.7536797523498535
    3. 'self' → logprob: -8.128679275512695
    4. 'innings' → logprob: -9.128679275512695
    5. 'ining' → logprob: -11.003679275512695
    6. ' self' → logprob: -11.253679275512695
    7. 'iin' → logprob: -11.253679275512695
    8. 'i' → logprob: -11.503679275512695
    9. 'inin' → logprob: -11.878679275512695
    10. 'in' → logprob: -12.253679275512695

Token 1283: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14571689069271088
    2. ' in' → logprob: -2.020716905593872
    3. 'inning' → logprob: -6.020716667175293
    4. 'self' → logprob: -8.395716667175293
    5. 's' → logprob: -9.020716667175293
    6. ' inning' → logprob: -9.145716667175293
    7. 'i' → logprob: -10.020716667175293
    8. '	in' → logprob: -11.395716667175293
    9. 'iny' → logprob: -11.645716667175293
    10. 'ins' → logprob: -11.645716667175293

Token 1284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.869017852295656e-06
    2. ' self' → logprob: -12.000006675720215
    3. '
' → logprob: -14.375006675720215
    4. '   ' → logprob: -18.87500762939453
    5. '(self' → logprob: -19.00000762939453
    6. '	self' → logprob: -19.12500762939453
    7. '       ' → logprob: -19.62500762939453
    8. '=self' → logprob: -21.12500762939453
    9. '

' → logprob: -21.37500762939453
    10. ' ' → logprob: -21.50000762939453

Token 1285: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -2.6537622034084052e-05
    2. 's' → logprob: -11.75002670288086
    3. '.s' → logprob: -12.25002670288086
    4. ' .' → logprob: -12.62502670288086
    5. 'innings' → logprob: -12.75002670288086
    6. '.' → logprob: -12.87502670288086
    7. ']' → logprob: -13.25002670288086
    8. '.i' → logprob: -14.37502670288086
    9. 'inning' → logprob: -14.62502670288086
    10. '].' → logprob: -14.62502670288086

Token 1286: 'nings' (ID: 42490)
  Prédit: 'nings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nings' → logprob: -0.5667530298233032
    2. 'ings' → logprob: -1.0667530298233032
    3. 'ng' → logprob: -2.5667529106140137
    4. 's' → logprob: -5.316752910614014
    5. 'n' → logprob: -5.816752910614014
    6. 'gs' → logprob: -6.566752910614014
    7. 'self' → logprob: -6.941752910614014
    8. 'ning' → logprob: -7.816752910614014
    9. 'innings' → logprob: -8.066753387451172
    10. 'rings' → logprob: -8.816753387451172

Token 1287: ' ]' (ID: 6045)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004356298595666885
    2. ' ]' → logprob: -6.004356384277344
    3. '()]' → logprob: -6.504356384277344
    4. '(' → logprob: -8.004356384277344
    5. ']()' → logprob: -10.879356384277344
    6. '()' → logprob: -10.879356384277344
    7. ']
' → logprob: -12.254356384277344
    8. '   ' → logprob: -12.879356384277344
    9. ')]' → logprob: -14.629356384277344
    10. ')' → logprob: -14.629356384277344

Token 1288: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1289: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5729190707206726
    2. '<|end|>' → logprob: -0.9479190707206726
    3. '   ' → logprob: -3.3229191303253174
    4. '
' → logprob: -5.572918891906738
    5. ' def' → logprob: -5.697918891906738
    6. '<|end|>' → logprob: -5.822918891906738
    7. '#' → logprob: -6.697918891906738
    8. '	def' → logprob: -7.572918891906738
    9. '```' → logprob: -8.322918891906738
    10. '[' → logprob: -9.197918891906738

Token 1290: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5074447393417358
    2. ' main' → logprob: -1.1324447393417358
    3. 'run' → logprob: -3.2574448585510254
    4. ' run' → logprob: -3.7574448585510254
    5. 'simulate' → logprob: -4.757444858551025
    6. ' simulate' → logprob: -5.757444858551025
    7. ' test' → logprob: -7.132444858551025
    8. 'test' → logprob: -7.257444858551025
    9. 'if' → logprob: -9.007444381713867
    10. 'process' → logprob: -9.757444381713867

Token 1291: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005041812546551228
    2. '():
' → logprob: -7.750504016876221
    3. '()' → logprob: -10.375504493713379
    4. '(' → logprob: -10.375504493713379
    5. ' ():' → logprob: -11.500504493713379
    6. '():
' → logprob: -14.250504493713379
    7. ':' → logprob: -16.375503540039062
    8. '():

' → logprob: -16.375503540039062
    9. '()>' → logprob: -17.250503540039062
    10. ' ()' → logprob: -18.250503540039062

Token 1292: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.0919569730758667
    2. ' lines' → logprob: -1.2169569730758667
    3. 'import' → logprob: -1.4669569730758667
    4. '   ' → logprob: -2.2169570922851562
    5. '	lines' → logprob: -4.341957092285156
    6. '	import' → logprob: -4.716957092285156
    7. 'lines' → logprob: -5.216957092285156
    8. ' line' → logprob: -7.841957092285156
    9. '_lines' → logprob: -8.966957092285156
    10. 'i' → logprob: -9.341957092285156

Token 1293: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.108244389295578
    2. ' import' → logprob: -3.2332444190979004
    3. '   ' → logprob: -3.8582444190979004
    4. 'lines' → logprob: -3.8582444190979004
    5. 'sim' → logprob: -4.4832444190979
    6. ' lines' → logprob: -5.4832444190979
    7. 'simulation' → logprob: -5.9832444190979
    8. 'b' → logprob: -7.2332444190979
    9. ' sim' → logprob: -7.3582444190979
    10. ' simulation' → logprob: -8.108243942260742

Token 1294: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0024756586644798517
    2. ' sys' → logprob: -6.002475738525391
    3. '=sys' → logprob: -18.37747573852539
    4. '	sys' → logprob: -19.00247573852539
    5. 'io' → logprob: -21.87747573852539
    6. '(sys' → logprob: -22.00247573852539
    7. '.sys' → logprob: -23.25247573852539
    8. '_sys' → logprob: -23.37747573852539
    9. 'os' → logprob: -23.75247573852539
    10. 'stdin' → logprob: -24.00247573852539

Token 1295: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5767382383346558
    2. ' lines' → logprob: -0.9517382383346558
    3. 'lines' → logprob: -3.8267383575439453
    4. '
' → logprob: -4.201738357543945
    5. '	lines' → logprob: -4.451738357543945
    6. '    
' → logprob: -5.951738357543945
    7. 'for' → logprob: -7.951738357543945
    8. ' for' → logprob: -8.201738357543945
    9. '```' → logprob: -8.951738357543945
    10. '   ' → logprob: -9.576738357543945

Token 1296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09664075076580048
    2. ' lines' → logprob: -2.8466408252716064
    3. '
' → logprob: -3.7216408252716064
    4. '    
' → logprob: -5.221640586853027
    5. 'lines' → logprob: -5.971640586853027
    6. '	lines' → logprob: -6.471640586853027
    7. 'for' → logprob: -9.596640586853027
    8. ' for' → logprob: -9.721640586853027
    9. '_lines' → logprob: -10.471640586853027
    10. '(lines' → logprob: -10.596640586853027

Token 1297: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.20557484030723572
    2. 'lines' → logprob: -1.830574870109558
    3. 'for' → logprob: -4.580574989318848
    4. ' for' → logprob: -4.955574989318848
    5. '   ' → logprob: -5.080574989318848
    6. ' if' → logprob: -7.455574989318848
    7. 'input' (adapté à ' input') → logprob: -7.830574989318848
    8. 'if' → logprob: -8.205574989318848
    9. '	lines' → logprob: -8.330574989318848
    10. ' input' → logprob: -8.580574989318848

Token 1298: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.06916381418704987
    2. '()' → logprob: -2.9441637992858887
    3. '_line' → logprob: -5.194163799285889
    4. '_data' → logprob: -5.319163799285889
    5. '_' → logprob: -5.819163799285889
    6. 'lines' → logprob: -8.444164276123047
    7. ' =' → logprob: -8.694164276123047
    8. '=' → logprob: -9.319164276123047
    9. 'data' → logprob: -9.569164276123047
    10. '()
' → logprob: -10.069164276123047

Token 1299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328845024108887
    2. ' =' → logprob: -1.3132884502410889
    3. '   ' → logprob: -10.813288688659668
    4. '=sys' → logprob: -13.188288688659668
    5. '=[]' → logprob: -13.688288688659668
    6. '()' → logprob: -14.063288688659668
    7. '	' → logprob: -14.188288688659668
    8. '=
' → logprob: -14.563288688659668
    9. '[' → logprob: -14.938288688659668
    10. ' =
' → logprob: -15.188288688659668

Token 1300: ' [' (ID: 723)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0067161982879042625
    2. ' sys' → logprob: -5.006716251373291
    3. '[' → logprob: -14.006715774536133
    4. '	sys' → logprob: -17.506715774536133
    5. ' [' → logprob: -18.131715774536133
    6. '=sys' → logprob: -18.256715774536133
    7. '   ' → logprob: -18.756715774536133
    8. '(sys' → logprob: -19.006715774536133
    9. 'list' → logprob: -20.131715774536133
    10. '[]' → logprob: -21.131715774536133

Token 1301: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0005544631858356297
    2. ' line' → logprob: -7.50055456161499
    3. 'sys' → logprob: -13.500554084777832
    4. 'l' → logprob: -16.37555503845215
    5. ' sys' → logprob: -18.00055503845215
    6. '	line' → logprob: -18.25055503845215
    7. '   ' → logprob: -18.87555503845215
    8. 'input' → logprob: -20.25055503845215
    9. '(line' → logprob: -20.37555503845215
    10. '
' → logprob: -20.50055503845215

Token 1302: ' for' (ID: 395)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.220314621925354
    2. 'for' → logprob: -1.720314621925354
    3. ' for' → logprob: -4.0953145027160645
    4. '.' → logprob: -6.8453145027160645
    5. 'rstrip' → logprob: -7.0953145027160645
    6. '.strip' → logprob: -8.845314979553223
    7. '[:-' → logprob: -11.345314979553223
    8. '   ' → logprob: -11.720314979553223
    9. '
' → logprob: -11.970314979553223
    10. '.readline' → logprob: -12.220314979553223

Token 1303: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01815790683031082
    2. ' line' → logprob: -4.018157958984375
    3. '	line' → logprob: -12.018157958984375
    4. '_line' → logprob: -13.768157958984375
    5. '_' → logprob: -14.143157958984375
    6. '
' → logprob: -16.393157958984375
    7. '=line' → logprob: -16.393157958984375
    8. '(line' → logprob: -17.268157958984375
    9. '#line' → logprob: -18.768157958984375
    10. '

' → logprob: -19.893157958984375

Token 1304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002216562628746
    2. 'in' → logprob: -2.350221633911133
    3. '	in' → logprob: -12.225221633911133
    4. 'import' → logprob: -12.475221633911133
    5. 'line' → logprob: -13.100221633911133
    6. ' ' → logprob: -13.100221633911133
    7. '   ' → logprob: -13.850221633911133
    8. '    ' → logprob: -14.725221633911133
    9. '	' → logprob: -16.475221633911133
    10. '
' → logprob: -16.725221633911133

Token 1305: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01881546899676323
    2. ' sys' → logprob: -4.268815517425537
    3. 'line' → logprob: -5.393815517425537
    4. ' line' → logprob: -10.018815040588379
    5. 'import' → logprob: -11.143815040588379
    6. 'input' → logprob: -11.143815040588379
    7. '=sys' → logprob: -11.768815040588379
    8. 'stdin' → logprob: -12.143815040588379
    9. '	sys' → logprob: -12.518815040588379
    10. 'in' → logprob: -13.018815040588379

Token 1306: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000587821879889816
    2. 'stdin' → logprob: -8.125587463378906
    3. '.' → logprob: -8.750587463378906
    4. '.stdout' → logprob: -9.875587463378906
    5. ' in' → logprob: -11.000587463378906
    6. '(stdin' → logprob: -11.000587463378906
    7. 'in' → logprob: -11.000587463378906
    8. ' stdin' → logprob: -11.500587463378906
    9. 'import' → logprob: -11.625587463378906
    10. '.argv' → logprob: -12.125587463378906

Token 1307: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07865830510854721
    2. 'in' → logprob: -3.07865834236145
    3. ' in' → logprob: -3.57865834236145
    4. 'import' → logprob: -7.703658103942871
    5. ' ]' → logprob: -7.703658103942871
    6. '.readline' → logprob: -8.328658103942871
    7. '()]' → logprob: -8.328658103942871
    8. '.readlines' → logprob: -9.328658103942871
    9. '.rstrip' → logprob: -9.578658103942871
    10. 'rstrip' → logprob: -9.578658103942871

Token 1308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010874254629015923
    2. 'simulation' → logprob: -5.260874271392822
    3. 'for' → logprob: -6.260874271392822
    4. 'sim' → logprob: -6.385874271392822
    5. 'bs' → logprob: -7.260874271392822
    6. 'b' → logprob: -7.260874271392822
    7. '    
' → logprob: -8.885873794555664
    8. ' for' → logprob: -9.135873794555664
    9. 'simulate' → logprob: -9.385873794555664
    10. ' simulation' → logprob: -9.635873794555664

Token 1309: ' sim' (ID: 1845)
  Prédit: 'simulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulation' → logprob: -0.3220243752002716
    2. 'sim' (adapté à ' sim') → logprob: -1.3220243453979492
    3. 'bs' → logprob: -5.322024345397949
    4. 'base' → logprob: -5.697024345397949
    5. '   ' → logprob: -8.19702434539795
    6. ' simulation' → logprob: -9.19702434539795
    7. ' sim' → logprob: -10.32202434539795
    8. 'game' → logprob: -10.32202434539795
    9. 'b' → logprob: -10.82202434539795
    10. 'bases' → logprob: -12.07202434539795

Token 1310: ' =' (ID: 314)
  Prédit: 'ulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulation' → logprob: -0.04256003350019455
    2. ' =' → logprob: -3.41756010055542
    3. '=' → logprob: -4.91756010055542
    4. '.' → logprob: -7.66756010055542
    5. '.sim' → logprob: -8.167559623718262
    6. '.run' → logprob: -8.667559623718262
    7. 'ilation' → logprob: -8.917559623718262
    8. '   ' → logprob: -9.417559623718262
    9. 'ULATION' → logprob: -9.417559623718262
    10. 'ul' → logprob: -9.792559623718262

Token 1311: ' Baseball' (ID: 59649)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.00033581978641450405
    2. ' Baseball' → logprob: -8.000335693359375
    3. 'base' → logprob: -15.125335693359375
    4. ' Base' → logprob: -16.875335693359375
    5. 'Bas' → logprob: -16.875335693359375
    6. ' baseball' → logprob: -17.125335693359375
    7. '_Base' → logprob: -17.875335693359375
    8. 'BASE' → logprob: -19.000335693359375
    9. '_base' → logprob: -19.125335693359375
    10. 'Bases' → logprob: -19.125335693359375

Token 1312: 'Simulation' (ID: 71306)
  Prédit: 'Simulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulation' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -16.25
    3. 'Sim' → logprob: -16.5
    4. ' Simulation' → logprob: -16.625
    5. 'Simulator' → logprob: -16.875
    6. 'simulation' → logprob: -17.75
    7. 'S' → logprob: -18.25
    8. '(' → logprob: -18.5
    9. '_sim' → logprob: -18.625
    10. ' simulation' → logprob: -18.75

Token 1313: '()
' (ID: 1234)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.03867717087268829
    2. '   ' → logprob: -3.538677215576172
    3. '
' → logprob: -4.913677215576172
    4. ' sim' → logprob: -6.663677215576172
    5. '.sim' → logprob: -9.288677215576172
    6. '(sim' → logprob: -9.538677215576172
    7. 'for' → logprob: -10.413677215576172
    8. '    
' → logprob: -10.538677215576172
    9. 'simulate' → logprob: -11.663677215576172
    10. '_sim' → logprob: -11.788677215576172

Token 1314: '   ' (ID: 271)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.005357194691896439
    2. '   ' → logprob: -5.255357265472412
    3. ' sim' → logprob: -9.005356788635254
    4. '(sim' → logprob: -15.505356788635254
    5. '.sim' → logprob: -15.880356788635254
    6. '
' → logprob: -16.00535774230957
    7. 'simulate' → logprob: -17.00535774230957
    8. 'Sim' → logprob: -18.13035774230957
    9. '_sim' → logprob: -18.25535774230957
    10. '  ' → logprob: -18.75535774230957

Token 1315: ' sim' (ID: 1845)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' (adapté à ' sim') → logprob: -3.128163257315464e-07
    2. ' sim' → logprob: -15.25
    3. '   ' → logprob: -19.0
    4. '
' → logprob: -20.5
    5. 'simulate' → logprob: -21.75
    6. '(sim' → logprob: -21.875
    7. '```' → logprob: -23.25
    8. 'Sim' → logprob: -23.375
    9. 's' → logprob: -24.625
    10. '.sim' → logprob: -24.875

Token 1316: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.00042983482126146555
    2. '.' → logprob: -8.5004301071167
    3. '.readline' → logprob: -8.7504301071167
    4. '.readlines' → logprob: -9.6254301071167
    5. 'read' → logprob: -14.0004301071167
    6. '.imread' → logprob: -15.5004301071167
    7. '.mainloop' → logprob: -15.6254301071167
    8. '.findall' → logprob: -16.000429153442383
    9. '.load' → logprob: -16.000429153442383
    10. '.Read' → logprob: -16.750429153442383

Token 1317: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.250001907348633
    3. '_output' → logprob: -16.000001907348633
    4. 'input' → logprob: -16.250001907348633
    5. ' _' → logprob: -16.750001907348633
    6. '_inputs' → logprob: -16.875001907348633
    7. '
' → logprob: -17.625001907348633
    8. '_INPUT' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '_in' → logprob: -18.125001907348633

Token 1318: '(' (ID: 7)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07892713695764542
    2. '(' → logprob: -2.5789270401000977
    3. '(
' → logprob: -10.453927040100098
    4. 'input' → logprob: -12.203927040100098
    5. '(lines' → logprob: -13.078927040100098
    6. ' (' → logprob: -14.578927040100098
    7. '   ' → logprob: -15.078927040100098
    8. '((' → logprob: -15.578927040100098
    9. '(output' → logprob: -16.703927993774414
    10. '[input' → logprob: -16.703927993774414

Token 1319: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. '(input' → logprob: -17.125335693359375
    4. '	input' → logprob: -19.250335693359375
    5. '   ' → logprob: -19.375335693359375
    6. 'lines' → logprob: -20.375335693359375
    7. 'inputs' → logprob: -21.125335693359375
    8. '_input' → logprob: -21.250335693359375
    9. ')' → logprob: -21.750335693359375
    10. '[input' → logprob: -21.750335693359375

Token 1320: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.013043868355453014
    2. ')' → logprob: -4.5130438804626465
    3. '_' → logprob: -6.5130438804626465
    4. '   ' → logprob: -8.763043403625488
    5. ')_' → logprob: -9.263043403625488
    6. ',' → logprob: -9.388043403625488
    7. '(' → logprob: -9.763043403625488
    8. '(input' → logprob: -10.888043403625488
    9. '=input' → logprob: -11.013043403625488
    10. ',input' → logprob: -11.138043403625488

Token 1321: ' )
' (ID: 3270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47581952810287476
    2. ')' → logprob: -0.9758195281028748
    3. '
' → logprob: -6.9758195877075195
    4. ')
' → logprob: -7.9758195877075195
    5. '    
' → logprob: -8.47581958770752
    6. '<|end|>' → logprob: -9.22581958770752
    7. ' )' → logprob: -9.60081958770752
    8. '[' → logprob: -10.10081958770752
    9. '<|end|>' → logprob: -11.72581958770752
    10. '[
' → logprob: -11.97581958770752

Token 1322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21498624980449677
    2. 'scores' → logprob: -2.2149863243103027
    3. 'for' → logprob: -2.7149863243103027
    4. ' for' → logprob: -4.089986324310303
    5. 'results' → logprob: -7.339986324310303
    6. ' scores' → logprob: -7.839986324310303
    7. '
' → logprob: -9.214985847473145
    8. '    
' → logprob: -9.839985847473145
    9. 'outputs' → logprob: -9.839985847473145
    10. ' results' → logprob: -10.339985847473145

Token 1323: ' scores' (ID: 18923)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014608729630708694
    2. 'scores' (adapté à ' scores') → logprob: -4.264608860015869
    3. 'results' → logprob: -8.764608383178711
    4. ' for' → logprob: -8.764608383178711
    5. '   ' → logprob: -9.514608383178711
    6. '
' → logprob: -9.889608383178711
    7. '    
' → logprob: -12.764608383178711
    8. 'outputs' → logprob: -13.014608383178711
    9. 'print' → logprob: -13.639608383178711
    10. ' scores' → logprob: -14.139608383178711

Token 1324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49282652139663696
    2. '=' → logprob: -1.1178264617919922
    3. '   ' → logprob: -3.867826461791992
    4. '<|end|>' → logprob: -4.242826461791992
    5. '[' → logprob: -5.242826461791992
    6. ')' → logprob: -5.617826461791992
    7. 'for' → logprob: -5.617826461791992
    8. '.' → logprob: -6.117826461791992
    9. '.append' → logprob: -6.367826461791992
    10. '(' → logprob: -6.367826461791992

Token 1325: ' sim' (ID: 1845)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.0485873706638813
    2. ' sim' → logprob: -3.0485873222351074
    3. '(sim' → logprob: -17.548587799072266
    4. '[' → logprob: -19.423587799072266
    5. '_sim' → logprob: -20.798587799072266
    6. 'Sim' → logprob: -21.048587799072266
    7. '   ' → logprob: -21.298587799072266
    8. '.sim' → logprob: -21.548587799072266
    9. 'sym' → logprob: -21.548587799072266
    10. 'simulate' → logprob: -21.673587799072266

Token 1326: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.016091851517558098
    2. '.' → logprob: -4.141091823577881
    3. '.s' → logprob: -10.016092300415039
    4. 'get' → logprob: -12.391092300415039
    5. ' .' → logprob: -12.641092300415039
    6. '.
' → logprob: -12.891092300415039
    7. '._' → logprob: -14.766092300415039
    8. '
' → logprob: -15.016092300415039
    9. 'scores' → logprob: -15.141092300415039
    10. '_get' → logprob: -15.516092300415039

Token 1327: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.500000953674316
    3. 'scores' → logprob: -15.250000953674316
    4. '_score' → logprob: -15.375000953674316
    5. '_s' → logprob: -17.250001907348633
    6. '```' → logprob: -17.500001907348633
    7. 'Scores' → logprob: -18.125001907348633
    8. '_
' → logprob: -18.375001907348633
    9. 's' → logprob: -18.625001907348633
    10. '(' → logprob: -18.750001907348633

Token 1328: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08335742354393005
    2. 'for' → logprob: -2.708357334136963
    3. ' for' → logprob: -4.333357334136963
    4. '
' → logprob: -9.333357810974121
    5. '	for' → logprob: -9.583357810974121
    6. '    
' → logprob: -10.333357810974121
    7. '<|end|>' → logprob: -11.958357810974121
    8. '[' → logprob: -12.083357810974121
    9. 'print' → logprob: -13.708357810974121
    10. ',' → logprob: -14.083357810974121

Token 1329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06206011027097702
    2. 'for' → logprob: -2.8120601177215576
    3. ' for' → logprob: -10.062060356140137
    4. '```' → logprob: -10.687060356140137
    5. '
' → logprob: -10.812060356140137
    6. '    
' → logprob: -12.687060356140137
    7. '	for' → logprob: -12.937060356140137
    8. 'print' → logprob: -14.187060356140137
    9. '``' → logprob: -15.062060356140137
    10. '       ' → logprob: -16.43705940246582

Token 1330: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.4153549020411447e-05
    2. '   ' → logprob: -10.75002384185791
    3. ' for' → logprob: -13.75002384185791
    4. '
' → logprob: -13.75002384185791
    5. 'print' → logprob: -14.62502384185791
    6. '	for' → logprob: -16.875024795532227
    7. '    
' → logprob: -18.000024795532227
    8. '```' → logprob: -19.500024795532227
    9. 'import' → logprob: -21.375024795532227
    10. '       ' → logprob: -21.875024795532227

Token 1331: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.03808945417404175
    2. ' score' → logprob: -3.2880895137786865
    3. 's' → logprob: -10.163089752197266
    4. '	score' → logprob: -12.413089752197266
    5. ' s' → logprob: -13.163089752197266
    6. '   ' → logprob: -13.663089752197266
    7. 'sc' → logprob: -13.663089752197266
    8. '(score' → logprob: -14.038089752197266
    9. '
' → logprob: -16.038089752197266
    10. ' ' → logprob: -16.288089752197266

Token 1332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08280450850725174
    2. 'in' → logprob: -2.5828044414520264
    3. '_' → logprob: -6.3328046798706055
    4. ',' → logprob: -7.2078046798706055
    5. '_in' → logprob: -7.7078046798706055
    6. ' +=' → logprob: -8.082804679870605
    7. ' ' → logprob: -8.457804679870605
    8. '.' → logprob: -8.957804679870605
    9. 'i' → logprob: -10.082804679870605
    10. '+=' → logprob: -10.457804679870605

Token 1333: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.00023643692838959396
    2. ' scores' → logprob: -8.625236511230469
    3. 'score' → logprob: -9.875236511230469
    4. '(scores' → logprob: -12.625236511230469
    5. '   ' → logprob: -13.375236511230469
    6. 'print' → logprob: -14.875236511230469
    7. '
' → logprob: -15.375236511230469
    8. ' ' → logprob: -18.00023651123047
    9. '_scores' → logprob: -18.50023651123047
    10. '  ' → logprob: -19.00023651123047

Token 1334: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1505468487739563
    2. ':' → logprob: -2.4005467891693115
    3. '   ' → logprob: -3.6505467891693115
    4. ',' → logprob: -4.400547027587891
    5. ':
' → logprob: -4.650547027587891
    6. 'print' → logprob: -7.900547027587891
    7. '(' → logprob: -8.02554702758789
    8. ' print' → logprob: -8.65054702758789
    9. '.print' → logprob: -9.65054702758789
    10. '```' → logprob: -10.02554702758789

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000457605579867959
    2. 'print' → logprob: -7.750457763671875
    3. ' print' → logprob: -11.125457763671875
    4. '   ' → logprob: -11.375457763671875
    5. '```' → logprob: -15.000457763671875
    6. '
' → logprob: -15.625457763671875
    7. '           ' → logprob: -15.875457763671875
    8. '      ' → logprob: -17.125457763671875
    9. '	print' → logprob: -17.250457763671875
    10. '     ' → logprob: -17.500457763671875

Token 1336: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.6405310816480778e-05
    2. ' print' → logprob: -11.500016212463379
    3. '   ' → logprob: -12.000016212463379
    4. '
' → logprob: -18.875017166137695
    5. '	print' → logprob: -20.000017166137695
    6. '```' → logprob: -20.375017166137695
    7. '       ' → logprob: -20.500017166137695
    8. 'printf' → logprob: -22.750017166137695
    9. '    
' → logprob: -23.750017166137695
    10. 'println' → logprob: -23.875017166137695

Token 1337: '(' (ID: 7)
  Prédit: '(score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.0007470945129171014
    2. '(' → logprob: -7.250747203826904
    3. 'score' → logprob: -10.250746726989746
    4. '(f' → logprob: -13.250746726989746
    5. ' score' → logprob: -19.125747680664062
    6. '(scores' → logprob: -19.875747680664062
    7. '	score' → logprob: -20.750747680664062
    8. '()' → logprob: -21.250747680664062
    9. '(
' → logprob: -21.875747680664062
    10. '(sc' → logprob: -22.500747680664062

Token 1338: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -3.380904672667384e-05
    2. ' score' → logprob: -10.500033378601074
    3. '(score' → logprob: -12.000033378601074
    4. '	score' → logprob: -18.62503433227539
    5. 'f' → logprob: -19.50003433227539
    6. '_score' → logprob: -22.50003433227539
    7. 'Score' → logprob: -22.62503433227539
    8. '.score' → logprob: -22.62503433227539
    9. 'scores' → logprob: -23.25003433227539
    10. '   ' → logprob: -23.50003433227539

Token 1339: ' )


' (ID: 69576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006311862962320447
    2. ' )' → logprob: -7.375631332397461
    3. '()' → logprob: -13.125631332397461
    4. ')
' → logprob: -13.500631332397461
    5. '())' → logprob: -14.625631332397461
    6. '(' → logprob: -15.250631332397461
    7. '   ' → logprob: -16.12563133239746
    8. '<|end|>' → logprob: -16.25063133239746
    9. ')#' → logprob: -17.12563133239746
    10. '```' → logprob: -17.12563133239746

Token 1340: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.2603901015827432e-05
    2. ' if' → logprob: -11.250022888183594
    3. 'main' → logprob: -12.000022888183594
    4. '```' → logprob: -13.375022888183594
    5. '__' → logprob: -14.000022888183594
    6. '_' → logprob: -14.250022888183594
    7. '#' → logprob: -15.500022888183594
    8. '
' → logprob: -16.750022888183594
    9. '\' → logprob: -17.750022888183594
    10. '[' → logprob: -17.875022888183594

Token 1341: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0031907858792692423
    2. ' __' → logprob: -5.753190994262695
    3. 'name' → logprob: -11.503190994262695
    4. '_' → logprob: -13.503190994262695
    5. '___' → logprob: -14.253190994262695
    6. '_name' → logprob: -14.378190994262695
    7. 'Name' → logprob: -15.378190994262695
    8. '____' → logprob: -16.378190994262695
    9. ' "__' → logprob: -17.628190994262695
    10. 'True' → logprob: -18.003190994262695

Token 1342: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17511916160583496
    2. ' ==' → logprob: -2.425119161605835
    3. '==' → logprob: -2.675119161605835
    4. '=="' → logprob: -6.675119400024414
    5. '[' → logprob: -7.425119400024414
    6. 'name' → logprob: -7.925119400024414
    7. ' __' → logprob: -8.175119400024414
    8. '.__' → logprob: -8.425119400024414
    9. '=='' → logprob: -8.925119400024414
    10. '_' → logprob: -9.425119400024414

Token 1343: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006168036255985498
    2. '==' → logprob: -5.131167888641357
    3. '=="' → logprob: -8.881168365478516
    4. ' ==' → logprob: -9.256168365478516
    5. '__.__' → logprob: -12.881168365478516
    6. '=='' → logprob: -14.381168365478516
    7. 'name' → logprob: -14.631168365478516
    8. '____' → logprob: -15.506168365478516
    9. '___' → logprob: -15.506168365478516
    10. '__
' → logprob: -15.631168365478516

Token 1344: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04135211929678917
    2. '__' → logprob: -3.7913520336151123
    3. '=="' → logprob: -4.416352272033691
    4. ' ==' → logprob: -5.166352272033691
    5. '=='' → logprob: -9.041352272033691
    6. '==
' → logprob: -10.291352272033691
    7. '=' → logprob: -12.541352272033691
    8. '===' → logprob: -13.291352272033691
    9. '"' → logprob: -14.166352272033691
    10. '()==' → logprob: -14.916352272033691

Token 1345: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014167862012982368
    2. ''' → logprob: -4.264167785644531
    3. '__' → logprob: -12.514167785644531
    4. ' "__' → logprob: -14.139167785644531
    5. '"name' → logprob: -18.63916778564453
    6. ' '__' → logprob: -18.88916778564453
    7. '"user' → logprob: -19.38916778564453
    8. '"class' → logprob: -19.76416778564453
    9. '"_' → logprob: -20.13916778564453
    10. '   ' → logprob: -20.13916778564453

Token 1346: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00150390958879143
    2. '__' → logprob: -6.501503944396973
    3. '_main' → logprob: -13.501503944396973
    4. ' main' → logprob: -15.501503944396973
    5. 'name' → logprob: -16.626502990722656
    6. '-main' → logprob: -17.751502990722656
    7. '主' → logprob: -18.251502990722656
    8. 'built' → logprob: -18.626502990722656
    9. '"' → logprob: -18.751502990722656
    10. '_MAIN' → logprob: -19.251502990722656

Token 1347: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.030042512342333794
    2. '__":
' → logprob: -3.5300424098968506
    3. '__
' → logprob: -8.65504264831543
    4. '__':
' → logprob: -9.40504264831543
    5. '__.' → logprob: -11.53004264831543
    6. '__
' → logprob: -12.15504264831543
    7. ' ==' → logprob: -12.40504264831543
    8. '==' → logprob: -12.65504264831543
    9. '__["' → logprob: -12.65504264831543
    10. '__.__' → logprob: -12.78004264831543

Token 1348: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0816621482372284
    2. '   ' → logprob: -3.206662178039551
    3. '__' → logprob: -3.331662178039551
    4. ' main' → logprob: -6.331662178039551
    5. '_main' → logprob: -8.83166217803955
    6. '    
' → logprob: -9.33166217803955
    7. '	main' → logprob: -10.20666217803955
    8. '__":
' → logprob: -10.70666217803955
    9. ' __' → logprob: -10.95666217803955
    10. '"' → logprob: -10.95666217803955

Token 1349: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -16.5
    4. '   ' → logprob: -16.625
    5. '_main' → logprob: -21.375
    6. '
' → logprob: -21.5
    7. '    
' → logprob: -22.75
    8. 'm' → logprob: -22.875
    9. '(main' → logprob: -23.5
    10. 'ma' → logprob: -24.125

Token 1350: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1348
Tokens correctement prédits (1ère position, stricte): 525
Tokens correctement prédits (1ère position, avec adaptation): 586
Tokens correctement prédits (top 10): 1052
Précision stricte (1ère position): 38.95%
Précision adaptée (1ère position): 43.47%
Précision (top 10): 78.04%
================================================================================
