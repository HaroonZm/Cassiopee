================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:29:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Iterator

class Operation(ABC):
    @abstractmethod
    def is_applicable(self, n: int) -> bool:
        pass

    @abstractmethod
    def apply(self, n: int) -> int:
        pass

class EvenOperation(Operation):
    def is_applicable(self, n: int) -> bool:
        return n % 2 == 0

    def apply(self, n: int) -> int:
        return n // 2

class OddOperation(Operation):
    def is_applicable(self, n: int) -> bool:
        return n % 2 == 1

    def apply(self, n: int) -> int:
        return 3 * n + 1

class CollatzStepChooser:
    def __init__(self, operations: List[Operation]):
        self.operations = operations

    def choose(self, n: int) -> Operation:
        for op in self.operations:
            if op.is_applicable(n):
                return op
        raise ValueError("No applicable operation found")

class CollatzSequence:
    def __init__(self, chooser: CollatzStepChooser, upper_bound: int = 1_000_000):
        self.chooser = chooser
        self.upper_bound = upper_bound

    def __iter__(self) -> Iterator[int]:
        # This iterator is undefined at initialization: user must call with start n
        raise NotImplementedError("Use start(n) method to get iterator for sequence from n")

    def start(self, n: int) -> Iterator[int]:
        current = n
        yield current
        while current != 1:
            if current > self.upper_bound:
                raise ValueError(f"Value {current} exceeded upper bound {self.upper_bound}")
            op = self.chooser.choose(current)
            current = op.apply(current)
            yield current

class InputParser:
    def __init__(self):
        self._max_data_sets = 50

    def parse(self) -> List[int]:
        results = []
        count = 0
        while count < self._max_data_sets:
            try:
                line = input().strip()
            except EOFError:
                break
            if line == '0':
                break
            if not line.isdigit():
                continue
            n = int(line)
            if n < 1 or n > 1_000_000:
                continue
            results.append(n)
            count += 1
        return results

class CollatzCounter:
    def __init__(self, collatz_sequence: CollatzSequence):
        self.collatz_sequence = collatz_sequence

    def count_steps(self, n: int) -> int:
        iterator = self.collatz_sequence.start(n)
        next(iterator)  # skip initial value itself
        count = 0
        for _ in iterator:
            count += 1
        return count

def main() -> None:
    even_op = EvenOperation()
    odd_op = OddOperation()
    chooser = CollatzStepChooser([even_op, odd_op])
    collatz_seq = CollatzSequence(chooser)
    parser = InputParser()
    counter = CollatzCounter(collatz_seq)

    inputs = parser.parse()
    for n in inputs:
        try:
            steps = counter.count_steps(n)
        except ValueError:
            # According to problem constraints, this should never happen, but handle gracefully
            steps = -1
        print(steps)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1604270040988922
    2. 'ABC' → logprob: -1.9104269742965698
    3. ' A' → logprob: -9.53542709350586
    4. 'AB' → logprob: -9.53542709350586
    5. 'A' → logprob: -11.03542709350586
    6. 'ABCDE' → logprob: -11.16042709350586
    7. 'abc' → logprob: -11.28542709350586
    8. 'abstract' → logprob: -12.41042709350586
    9. ' ' → logprob: -13.16042709350586
    10. '_AB' → logprob: -13.41042709350586

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08205988258123398
    2. ',' → logprob: -2.582059860229492
    3. 'import' → logprob: -6.707059860229492
    4. '```' → logprob: -7.707059860229492
    5. '.
' → logprob: -8.332059860229492
    6. ':' → logprob: -8.582059860229492
    7. '' → logprob: -8.582059860229492
    8. '.

' → logprob: -8.707059860229492
    9. '<|end|>' → logprob: -9.582059860229492
    10. ',
' → logprob: -9.582059860229492

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.21895374357700348
    2. ' abstract' → logprob: -1.7189537286758423
    3. 'Abstract' → logprob: -4.093953609466553
    4. '```' → logprob: -8.468954086303711
    5. ' ' → logprob: -8.843954086303711
    6. 'Meta' → logprob: -9.218954086303711
    7. '.abstract' → logprob: -9.343954086303711
    8. ' A' → logprob: -10.468954086303711
    9. ' Abstract' → logprob: -11.343954086303711
    10. '`' → logprob: -11.343954086303711

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4269544184207916
    2. '```' → logprob: -1.4269543886184692
    3. 'class' → logprob: -2.801954507827759
    4. '

' → logprob: -4.05195426940918
    5. '\n' → logprob: -5.05195426940918
    6. '' → logprob: -5.05195426940918
    7. '<|end|>' → logprob: -5.17695426940918
    8. '
' → logprob: -5.80195426940918
    9. '``' → logprob: -5.92695426940918
    10. '\' → logprob: -6.42695426940918

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4584696590900421
    2. '

' → logprob: -1.3334696292877197
    3. 'class' → logprob: -2.5834696292877197
    4. '```' → logprob: -4.333469867706299
    5. '' → logprob: -5.083469867706299
    6. '
' → logprob: -5.833469867706299
    7. ' 

' → logprob: -6.458469867706299
    8. ' class' → logprob: -6.708469867706299
    9. '


' → logprob: -6.958469867706299
    10. '``' → logprob: -7.583469867706299

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.03183615952730179
    2. ' collections' → logprob: -4.281836032867432
    3. ' dat' → logprob: -5.281836032867432
    4. ' os' → logprob: -5.781836032867432
    5. ' abc' → logprob: -6.031836032867432
    6. 'typing' → logprob: -6.156836032867432
    7. ' sys' → logprob: -6.406836032867432
    8. ' sklearn' → logprob: -7.281836032867432
    9. ' datetime' → logprob: -7.656836032867432
    10. ' io' → logprob: -7.906836032867432

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4503095746040344
    2. ' List' → logprob: -1.7003095149993896
    3. 'Any' → logprob: -2.0753095149993896
    4. ' Union' → logprob: -3.7003095149993896
    5. ' Callable' → logprob: -4.325309753417969
    6. 'List' → logprob: -5.075309753417969
    7. ' Protocol' → logprob: -5.575309753417969
    8. ' Optional' → logprob: -6.075309753417969
    9. 'Union' → logprob: -6.825309753417969
    10. 'Callable' → logprob: -6.950309753417969

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2121146023273468
    2. '
' → logprob: -1.8371145725250244
    3. 'class' → logprob: -3.7121145725250244
    4. '\n' → logprob: -5.8371148109436035
    5. '


' → logprob: -6.2121148109436035
    6. '```' → logprob: -6.4621148109436035
    7. '`

' → logprob: -8.212114334106445
    8. 'import' → logprob: -8.712114334106445
    9. '``' → logprob: -8.962114334106445
    10. '
' → logprob: -8.962114334106445

Token 13: ' Iterator' (ID: 41994)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.7563453316688538
    2. ' Union' → logprob: -1.631345272064209
    3. 'Optional' → logprob: -1.881345272064209
    4. ' Callable' → logprob: -2.506345272064209
    5. ' Any' → logprob: -3.756345272064209
    6. 'Any' → logprob: -3.881345272064209
    7. 'Union' → logprob: -4.256345272064209
    8. 'Iterable' → logprob: -4.506345272064209
    9. ' Iterable' → logprob: -4.881345272064209
    10. ' Tuple' → logprob: -5.381345272064209

Token 14: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.24483078718185425
    2. '
' → logprob: -1.869830846786499
    3. '

' → logprob: -3.244830846786499
    4. '```' → logprob: -3.869830846786499
    5. '\n' → logprob: -6.49483060836792
    6. '``' → logprob: -7.36983060836792
    7. '


' → logprob: -8.119831085205078
    8. ' class' → logprob: -8.619831085205078
    9. '
' → logprob: -8.744831085205078
    10. '<class' → logprob: -8.869831085205078

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011130467988550663
    2. '
' → logprob: -4.511130332946777
    3. '```' → logprob: -10.011130332946777
    4. '

' → logprob: -10.886130332946777
    5. ' class' → logprob: -11.761130332946777
    6. '
' → logprob: -12.136130332946777
    7. '<class' → logprob: -13.261130332946777
    8. '  
' → logprob: -14.136130332946777
    9. '``' → logprob: -14.261130332946777
    10. '\n' → logprob: -14.261130332946777

Token 16: ' Operation' (ID: 29600)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002264686394482851
    2. ' Abstract' → logprob: -6.377264499664307
    3. ' Iterable' → logprob: -8.877264976501465
    4. ' My' → logprob: -9.377264976501465
    5. ' Serializer' → logprob: -9.752264976501465
    6. ' ABC' → logprob: -10.002264976501465
    7. ' Space' → logprob: -10.377264976501465
    8. ' ' → logprob: -10.627264976501465
    9. ' Basic' → logprob: -10.627264976501465
    10. ' Parser' → logprob: -11.252264976501465

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024048583582043648
    2. ':' → logprob: -3.7740485668182373
    3. '(Abstract' → logprob: -7.149048805236816
    4. '():' → logprob: -11.649048805236816
    5. '):' → logprob: -13.649048805236816
    6. ' :' → logprob: -14.024048805236816
    7. ' (' → logprob: -14.274048805236816
    8. ',' → logprob: -14.399048805236816
    9. '(:' → logprob: -14.399048805236816
    10. '(Enum' → logprob: -14.524048805236816

Token 18: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.313754677772522
    2. ' ABC' → logprob: -1.313754677772522
    3. ')' → logprob: -8.56375503540039
    4. 'AB' → logprob: -9.56375503540039
    5. ' ' → logprob: -9.93875503540039
    6. 'abc' → logprob: -10.43875503540039
    7. '):' → logprob: -10.43875503540039
    8. '   ' → logprob: -10.56375503540039
    9. 'ABCDE' → logprob: -10.56375503540039
    10. 'Abstract' → logprob: -10.68875503540039

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017118285177275538
    2. ')' → logprob: -6.376711845397949
    3. ':' → logprob: -12.00171184539795
    4. '):
' → logprob: -13.00171184539795
    5. ',' → logprob: -14.62671184539795
    6. ' ):' → logprob: -15.12671184539795
    7. '():' → logprob: -15.50171184539795
    8. '):

' → logprob: -15.87671184539795
    9. '[' → logprob: -16.876710891723633
    10. '):
' → logprob: -17.001710891723633

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012390379793941975
    2. '   ' → logprob: -4.512390613555908
    3. ':
' → logprob: -7.762390613555908
    4. ' :' → logprob: -7.762390613555908
    5. '):' → logprob: -9.26239013671875
    6. '    ' → logprob: -9.63739013671875
    7. ' ' → logprob: -10.01239013671875
    8. '    
' → logprob: -10.13739013671875
    9. ':def' → logprob: -10.26239013671875
    10. 'def' → logprob: -10.51239013671875

Token 21: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25982028245925903
    2. '    ' → logprob: -2.5098202228546143
    3. '\n' → logprob: -3.0098202228546143
    4. '    
' → logprob: -3.7598202228546143
    5. ' 
' → logprob: -4.134820461273193
    6. ' def' → logprob: -4.134820461273193
    7. 'def' → logprob: -4.509820461273193
    8. ' ' → logprob: -4.634820461273193
    9. '@' (adapté à ' @') → logprob: -5.634820461273193
    10. '\' → logprob: -5.884820461273193

Token 22: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.128163257315464e-07
    2. 'abc' → logprob: -16.375
    3. 'abs' → logprob: -16.875
    4. ' abstract' → logprob: -16.875
    5. 'ab' → logprob: -17.25
    6. 'staticmethod' → logprob: -17.625
    7. '.abstract' → logprob: -18.375
    8. 'property' → logprob: -18.5
    9. 'classmethod' → logprob: -19.25
    10. 'override' → logprob: -21.0

Token 23: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -8.792751032160595e-05
    2. '_method' → logprob: -9.37508773803711
    3. 'meth' → logprob: -13.25008773803711
    4. 'classmethod' → logprob: -14.00008773803711
    5. 'm' → logprob: -15.62508773803711
    6. 'staticmethod' → logprob: -16.00008773803711
    7. '	method' → logprob: -16.87508773803711
    8. 'property' → logprob: -17.00008773803711
    9. '_' → logprob: -17.25008773803711
    10. ' method' → logprob: -17.62508773803711

Token 24: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5803700685501099
    2. ' def' → logprob: -1.0803700685501099
    3. '(' → logprob: -3.2053699493408203
    4. ' ' → logprob: -3.7053699493408203
    5. '<|end|>' → logprob: -4.33036994934082
    6. 'method' → logprob: -5.08036994934082
    7. ')' → logprob: -5.58036994934082
    8. '
' → logprob: -6.20536994934082
    9. '\' → logprob: -6.45536994934082
    10. '  ' → logprob: -6.70536994934082

Token 25: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6234163641929626
    2. '(' → logprob: -1.1234164237976074
    3. 'method' → logprob: -2.2484164237976074
    4. ' def' → logprob: -4.623416423797607
    5. '_method' → logprob: -5.123416423797607
    6. '(method' → logprob: -5.123416423797607
    7. '<|end|>' → logprob: -6.498416423797607
    8. ')' → logprob: -6.873416423797607
    9. '()' → logprob: -6.998416423797607
    10. '.method' → logprob: -6.998416423797607

Token 26: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13155114650726318
    2. ' def' → logprob: -2.2565512657165527
    3. 'method' → logprob: -4.006551265716553
    4. ' ' → logprob: -8.381550788879395
    5. ' method' → logprob: -10.381550788879395
    6. 'classmethod' → logprob: -10.756550788879395
    7. '   ' → logprob: -10.881550788879395
    8. '`' → logprob: -11.756550788879395
    9. '	def' → logprob: -11.881550788879395
    10. ')' → logprob: -12.006550788879395

Token 27: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31459617614746094
    2. ' execute' → logprob: -2.314596176147461
    3. ' def' → logprob: -2.814596176147461
    4. ' process' → logprob: -3.439596176147461
    5. ' space' → logprob: -3.439596176147461
    6. ' calculate' → logprob: -3.939596176147461
    7. 'execute' → logprob: -5.439596176147461
    8. '_execute' → logprob: -5.814596176147461
    9. ' apply' → logprob: -5.939596176147461
    10. ' ' → logprob: -6.064596176147461

Token 28: '_app' (ID: 19342)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.1618129014968872
    2. '_supported' → logprob: -1.7868129014968872
    3. '_completed' → logprob: -2.0368127822875977
    4. '_app' → logprob: -2.2868127822875977
    5. '_enabled' → logprob: -3.0368127822875977
    6. '_possible' → logprob: -3.1618127822875977
    7. '_' → logprob: -3.1618127822875977
    8. '_s' → logprob: -3.4118127822875977
    9. '_done' → logprob: -3.7868127822875977
    10. '_complete' → logprob: -4.036812782287598

Token 29: 'licable' (ID: 127292)
  Prédit: 'licable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licable' → logprob: -0.0024277404882013798
    2. 'lic' → logprob: -6.877427577972412
    3. 'ly' → logprob: -7.127427577972412
    4. 'lied' → logprob: -8.00242805480957
    5. 'ro' → logprob: -9.62742805480957
    6. 'liable' → logprob: -9.75242805480957
    7. 'li' → logprob: -10.00242805480957
    8. 'end' → logprob: -10.25242805480957
    9. 'lie' → logprob: -11.62742805480957
    10. '_' → logprob: -11.75242805480957

Token 30: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6947782039642334
    2. '(self' → logprob: -0.6947782039642334
    3. ' (' → logprob: -6.5697784423828125
    4. ')' → logprob: -9.819778442382812
    5. '_' → logprob: -10.569778442382812
    6. '(
' → logprob: -10.569778442382812
    7. ' ' → logprob: -10.694778442382812
    8. '(s' → logprob: -10.944778442382812
    9. '```' → logprob: -11.444778442382812
    10. '(

' → logprob: -11.569778442382812

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004450177773833275
    2. ' ,' → logprob: -5.50445032119751
    3. 'self' → logprob: -8.754449844360352
    4. ')' → logprob: -8.754449844360352
    5. '):' → logprob: -10.129449844360352
    6. ',self' → logprob: -12.254449844360352
    7. ' )' → logprob: -12.629449844360352
    8. 's' → logprob: -13.254449844360352
    9. ',s' → logprob: -13.879449844360352
    10. ' ' → logprob: -14.379449844360352

Token 32: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08394413441419601
    2. 'self' → logprob: -3.208944082260132
    3. ' operation' → logprob: -4.333944320678711
    4. ' object' → logprob: -5.083944320678711
    5. ' task' → logprob: -5.458944320678711
    6. ')' → logprob: -5.708944320678711
    7. ' )' → logprob: -5.708944320678711
    8. ' obj' → logprob: -6.208944320678711
    9. ' operand' → logprob: -6.333944320678711
    10. ' data' → logprob: -6.958944320678711

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031890018726699054
    2. '):' → logprob: -9.12531852722168
    3. 'um' → logprob: -9.87531852722168
    4. 'umber' → logprob: -9.87531852722168
    5. ':int' → logprob: -9.87531852722168
    6. ' :' → logprob: -10.50031852722168
    7. ')' → logprob: -10.62531852722168
    8. ':number' → logprob: -13.87531852722168
    9. 'umer' → logprob: -14.62531852722168
    10. 'a' → logprob: -14.87531852722168

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05892917886376381
    2. 'int' → logprob: -2.933929204940796
    3. ')' → logprob: -5.933928966522217
    4. 't' → logprob: -7.808928966522217
    5. ' )' → logprob: -7.933928966522217
    6. ':int' → logprob: -8.308929443359375
    7. '=int' → logprob: -9.058929443359375
    8. ' ' → logprob: -9.058929443359375
    9. '[int' → logprob: -9.433929443359375
    10. ' ' → logprob: -10.558929443359375

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5491004129871726e-05
    2. '):' → logprob: -10.625045776367188
    3. ' )' → logprob: -11.125045776367188
    4. ')->' → logprob: -12.500045776367188
    5. '   ' → logprob: -14.125045776367188
    6. '`)' → logprob: -14.375045776367188
    7. ':' → logprob: -14.875045776367188
    8. ',' → logprob: -14.875045776367188
    9. ' ' → logprob: -15.500045776367188
    10. '')' → logprob: -16.125045776367188

Token 36: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007198262494057417
    2. '->' → logprob: -5.132198333740234
    3. ' ->' → logprob: -7.132198333740234
    4. ')->' → logprob: -7.757198333740234
    5. ' )' → logprob: -10.382198333740234
    6. '   ' → logprob: -12.257198333740234
    7. '`)' → logprob: -13.007198333740234
    8. ' )->' → logprob: -13.632198333740234
    9. ':' → logprob: -14.257198333740234
    10. '):' → logprob: -14.257198333740234

Token 37: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.007188792340457439
    2. 'bool' → logprob: -5.13218879699707
    3. ' ' → logprob: -6.75718879699707
    4. ' ' → logprob: -10.13218879699707
    5. '  ' → logprob: -10.38218879699707
    6. '	bool' → logprob: -12.13218879699707
    7. ' None' → logprob: -12.38218879699707
    8. '<bool' → logprob: -12.63218879699707
    9. '   ' → logprob: -12.88218879699707
    10. ' True' → logprob: -13.13218879699707

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008291634730994701
    2. ':return' → logprob: -8.000828742980957
    3. '<|end|>' → logprob: -8.125828742980957
    4. '):' → logprob: -8.875828742980957
    5. ':
' → logprob: -10.500828742980957
    6. ')' → logprob: -11.875828742980957
    7. '   ' → logprob: -12.125828742980957
    8. ':def' → logprob: -12.375828742980957
    9. '():' → logprob: -12.750828742980957
    10. ':void' → logprob: -13.250828742980957

Token 39: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6659247279167175
    2. '       ' → logprob: -1.7909247875213623
    3. 'pass' (adapté à ' pass') → logprob: -2.2909247875213623
    4. '<|end|>' → logprob: -2.2909247875213623
    5. '   ' → logprob: -3.4159247875213623
    6. '...' → logprob: -3.6659247875213623
    7. '\n' → logprob: -3.7909247875213623
    8. ' 
' → logprob: -4.665924549102783
    9. '    ' → logprob: -4.915924549102783
    10. ' ' → logprob: -5.040924549102783

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26553693413734436
    2. '   ' → logprob: -1.765536904335022
    3. '<|end|>' → logprob: -3.7655370235443115
    4. '    
' → logprob: -3.8905370235443115
    5. '\n' → logprob: -5.140536785125732
    6. '

' → logprob: -5.765536785125732
    7. ' 
' → logprob: -6.140536785125732
    8. 'newline' → logprob: -6.390536785125732
    9. 'n' → logprob: -6.640536785125732
    10. '  
' → logprob: -6.890536785125732

Token 42: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12369867414236069
    2. '   ' → logprob: -2.3736987113952637
    3. '    
' → logprob: -4.498698711395264
    4. '\n' → logprob: -5.373698711395264
    5. '<|end|>' → logprob: -6.123698711395264
    6. ' 
' → logprob: -6.498698711395264
    7. '

' → logprob: -6.748698711395264
    8. 'newline' → logprob: -7.248698711395264
    9. '  
' → logprob: -7.498698711395264
    10. 'n' → logprob: -8.123698234558105

Token 43: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8400488495826721
    2. '   ' → logprob: -0.8400488495826721
    3. 'def' → logprob: -2.5900487899780273
    4. '    
' → logprob: -3.4650487899780273
    5. ' 
' → logprob: -4.840048789978027
    6. ' ' → logprob: -5.090048789978027
    7. '    ' → logprob: -5.590048789978027
    8. '<|end|>' → logprob: -5.965048789978027
    9. 'newline' → logprob: -6.215048789978027
    10. '\n' → logprob: -6.340048789978027

Token 44: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.2948405128554441e-05
    2. 'property' → logprob: -11.50001335144043
    3. 'staticmethod' → logprob: -13.25001335144043
    4. 'classmethod' → logprob: -14.50001335144043
    5. ' abstract' → logprob: -15.50001335144043
    6. 'abc' → logprob: -15.75001335144043
    7. 'abs' → logprob: -16.00001335144043
    8. 'ab' → logprob: -17.37501335144043
    9. '.abstract' → logprob: -17.75001335144043
    10. 'is' → logprob: -18.12501335144043

Token 45: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.06397788971662521
    2. 'def' → logprob: -2.8139779567718506
    3. '.method' → logprob: -7.3139777183532715
    4. 'token' → logprob: -7.4389777183532715
    5. ' def' → logprob: -7.8139777183532715
    6. '.' → logprob: -8.93897819519043
    7. '_method' → logprob: -9.68897819519043
    8. '	def' → logprob: -10.43897819519043
    9. '.def' → logprob: -10.68897819519043
    10. '_token' → logprob: -10.93897819519043

Token 46: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10720978677272797
    2. '
' → logprob: -2.6072096824645996
    3. ' def' → logprob: -4.1072096824646
    4. '   ' → logprob: -4.6072096824646
    5. '
' → logprob: -7.2322096824646
    6. '```' → logprob: -8.732210159301758
    7. ' ' → logprob: -8.857210159301758
    8. '<|end|>' → logprob: -8.982210159301758
    9. '\' → logprob: -9.232210159301758
    10. '    ' → logprob: -9.482210159301758

Token 47: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015920029545668513
    2. '
' → logprob: -9.25015926361084
    3. ' def' → logprob: -10.00015926361084
    4. '   ' → logprob: -11.25015926361084
    5. '```' → logprob: -12.87515926361084
    6. 'method' → logprob: -14.00015926361084
    7. '
' → logprob: -15.50015926361084
    8. '<|end|>' → logprob: -15.50015926361084
    9. 'classmethod' → logprob: -16.000158309936523
    10. '	def' → logprob: -16.375158309936523

Token 48: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007550701266154647
    2. '
' → logprob: -7.5007548332214355
    3. ' def' → logprob: -8.625755310058594
    4. 'method' → logprob: -11.500755310058594
    5. 'property' → logprob: -12.375755310058594
    6. '```' → logprob: -12.625755310058594
    7. 'classmethod' → logprob: -13.750755310058594
    8. '   ' → logprob: -14.250755310058594
    9. 'int' → logprob: -14.625755310058594
    10. '
' → logprob: -14.750755310058594

Token 49: ' apply' (ID: 6096)
  Prédit: ' apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.0103759141638875
    2. ' execute' → logprob: -5.2603759765625
    3. 'apply' → logprob: -6.0103759765625
    4. ' def' → logprob: -6.5103759765625
    5. ' perform' → logprob: -7.0103759765625
    6. ' process' → logprob: -9.0103759765625
    7. 'execute' → logprob: -9.8853759765625
    8. ' run' → logprob: -10.3853759765625
    9. ' calculate' → logprob: -11.1353759765625
    10. ' get' → logprob: -11.6353759765625

Token 50: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04861018806695938
    2. '(' → logprob: -3.048610210418701
    3. '(
' → logprob: -10.923609733581543
    4. 'self' → logprob: -13.298609733581543
    5. ' (' → logprob: -13.298609733581543
    6. '(

' → logprob: -15.048609733581543
    7. '(s' → logprob: -15.173609733581543
    8. '```' → logprob: -15.298609733581543
    9. '   ' → logprob: -15.548609733581543
    10. '<|end|>' → logprob: -16.92361068725586

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020187153131701052
    2. ' ,' → logprob: -8.875202178955078
    3. ',n' → logprob: -9.875202178955078
    4. 'self' → logprob: -12.500202178955078
    5. ')' → logprob: -12.750202178955078
    6. '<|end|>' → logprob: -13.375202178955078
    7. '   ' → logprob: -14.750202178955078
    8. '<|end|>' → logprob: -14.875202178955078
    9. ',
' → logprob: -15.250202178955078
    10. ',self' → logprob: -15.375202178955078

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3878794312477112
    2. 'n' → logprob: -1.2628793716430664
    3. 'self' → logprob: -3.8878793716430664
    4. ' self' → logprob: -4.012879371643066
    5. ')n' → logprob: -10.262879371643066
    6. ')' → logprob: -10.637879371643066
    7. '	n' → logprob: -11.887879371643066
    8. ' ' → logprob: -12.137879371643066
    9. ' )' → logprob: -12.512879371643066
    10. ',n' → logprob: -12.700379371643066

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013512482109945267
    2. ':int' → logprob: -9.12513542175293
    3. ')' → logprob: -10.75013542175293
    4. ' :' → logprob: -12.62513542175293
    5. '):' → logprob: -13.87513542175293
    6. ' )' → logprob: -16.00013542175293
    7. '<int' → logprob: -16.50013542175293
    8. '```' → logprob: -16.50013542175293
    9. '<|end|>' → logprob: -16.62513542175293
    10. '1' → logprob: -17.00013542175293

Token 54: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47408607602119446
    2. ' int' → logprob: -0.9740860462188721
    3. ':int' → logprob: -12.849085807800293
    4. ' ' → logprob: -13.599085807800293
    5. '=int' → logprob: -13.724085807800293
    6. '[int' → logprob: -13.974085807800293
    7. ')' → logprob: -13.974085807800293
    8. '(int' → logprob: -14.224085807800293
    9. '<int' → logprob: -14.224085807800293
    10. '	int' → logprob: -14.599085807800293

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.672236824873835e-05
    2. ' )' → logprob: -9.625076293945312
    3. ':' → logprob: -11.625076293945312
    4. '):' → logprob: -13.875076293945312
    5. '   ' → logprob: -14.625076293945312
    6. '`)' → logprob: -15.500076293945312
    7. ',' → logprob: -16.750076293945312
    8. '')' → logprob: -17.375076293945312
    9. ')->' → logprob: -17.500076293945312
    10. '```' → logprob: -17.625076293945312

Token 56: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3306093215942383
    2. ' ->' → logprob: -1.3306093215942383
    3. '->' → logprob: -4.080609321594238
    4. ' )' → logprob: -8.830609321594238
    5. ')->' → logprob: -8.955609321594238
    6. ':' → logprob: -11.455609321594238
    7. '   ' → logprob: -11.830609321594238
    8. '`)' → logprob: -13.330609321594238
    9. ' )->' → logprob: -13.455609321594238
    10. ' ' → logprob: -13.580609321594238

Token 57: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34872114658355713
    2. 'int' → logprob: -1.2237211465835571
    3. ' List' → logprob: -8.723721504211426
    4. 'List' → logprob: -9.723721504211426
    5. '	int' → logprob: -10.973721504211426
    6. ' ' → logprob: -11.223721504211426
    7. '[int' → logprob: -11.848721504211426
    8. ' ' → logprob: -12.223721504211426
    9. '   ' → logprob: -13.098721504211426
    10. '<int' → logprob: -13.598721504211426

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001332263695076108
    2. '):' → logprob: -7.2513322830200195
    3. '<|end|>' → logprob: -8.37633228302002
    4. ':return' → logprob: -8.62633228302002
    5. '():' → logprob: -9.37633228302002
    6. ':
' → logprob: -9.37633228302002
    7. ':def' → logprob: -11.37633228302002
    8. ')' → logprob: -11.50133228302002
    9. ' :' → logprob: -12.12633228302002
    10. '   ' → logprob: -12.50133228302002

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.052481234073638916
    2. ' pass' → logprob: -3.177481174468994
    3. '       ' → logprob: -4.927481174468994
    4. '...' → logprob: -6.177481174468994
    5. '   ' → logprob: -9.802481651306152
    6. ' ...' → logprob: -10.802481651306152
    7. '	pass' → logprob: -11.802481651306152
    8. '```' → logprob: -12.177481651306152
    9. '    ' → logprob: -12.302481651306152
    10. '<|end|>' → logprob: -12.427481651306152

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25497034192085266
    2. 'class' → logprob: -1.8799703121185303
    3. '

' → logprob: -2.6299703121185303
    4. '```' → logprob: -8.87997055053711
    5. '
' → logprob: -9.37997055053711
    6. ' class' → logprob: -9.87997055053711
    7. '


' → logprob: -9.87997055053711
    8. '\n' → logprob: -10.87997055053711
    9. '' → logprob: -11.37997055053711
    10. '
    
' → logprob: -11.50497055053711

Token 62: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12892673909664154
    2. '
' → logprob: -2.1289267539978027
    3. '

' → logprob: -6.253926753997803
    4. '
' → logprob: -10.253926277160645
    5. ' class' → logprob: -11.378926277160645
    6. '


' → logprob: -11.753926277160645
    7. '```' → logprob: -11.878926277160645
    8. '\n' → logprob: -12.503926277160645
    9. '  
' → logprob: -13.128926277160645
    10. ' 
' → logprob: -13.378926277160645

Token 63: ' Even' (ID: 10669)
  Prédit: ' Add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Add' → logprob: -0.1546717882156372
    2. ' Increment' → logprob: -2.0296716690063477
    3. ' Addition' → logprob: -5.154671669006348
    4. ' Double' → logprob: -6.529671669006348
    5. ' Ad' → logprob: -6.529671669006348
    6. ' Square' → logprob: -6.779671669006348
    7. ' Factor' → logprob: -7.154671669006348
    8. ' Neg' → logprob: -7.404671669006348
    9. ' Multiply' → logprob: -8.154671669006348
    10. 'Add' → logprob: -9.904671669006348

Token 64: 'Operation' (ID: 10671)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.18275050818920135
    2. 'Division' → logprob: -2.1827504634857178
    3. 'Div' → logprob: -3.9327504634857178
    4. 'Operation' → logprob: -4.432750701904297
    5. 'Divide' → logprob: -5.182750701904297
    6. '(' → logprob: -6.182750701904297
    7. 'ly' → logprob: -6.307750701904297
    8. 'ness' → logprob: -6.432750701904297
    9. 'Palindrome' → logprob: -6.682750701904297
    10. 'Checker' → logprob: -6.807750701904297

Token 65: '(Operation' (ID: 189164)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5907827019691467
    2. '(' → logprob: -0.9657827019691467
    3. '(Operation' → logprob: -2.840782642364502
    4. '(E' → logprob: -5.715782642364502
    5. '(Op' → logprob: -6.465782642364502
    6. ' :' → logprob: -6.840782642364502
    7. '():' → logprob: -7.465782642364502
    8. '(OP' → logprob: -8.71578311920166
    9. '):' → logprob: -8.84078311920166
    10. '(Abstract' → logprob: -9.59078311920166

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002456046058796346
    2. ')' → logprob: -8.500246047973633
    3. '):
' → logprob: -10.750246047973633
    4. ':' → logprob: -10.875246047973633
    5. ' ):' → logprob: -14.375246047973633
    6. '():' → logprob: -14.625246047973633
    7. '   ' → logprob: -15.375246047973633
    8. '):

' → logprob: -16.000246047973633
    9. '):
' → logprob: -16.125246047973633
    10. ',' → logprob: -16.625246047973633

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030136194080114365
    2. ' def' → logprob: -3.7801361083984375
    3. '
' → logprob: -6.1551361083984375
    4. '    ' → logprob: -6.2801361083984375
    5. 'def' → logprob: -6.4051361083984375
    6. '    
' → logprob: -7.5301361083984375
    7. '```' → logprob: -8.280136108398438
    8. '<|end|>' → logprob: -9.155136108398438
    9. ' ' → logprob: -9.405136108398438
    10. ' 
' → logprob: -9.655136108398438

Token 68: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.056659117341041565
    2. '   ' → logprob: -3.18165922164917
    3. 'def' (adapté à ' def') → logprob: -4.30665922164917
    4. '
' → logprob: -10.056658744812012
    5. '    ' → logprob: -10.806658744812012
    6. ' ' → logprob: -12.056658744812012
    7. ' 
' → logprob: -12.181658744812012
    8. '    
' → logprob: -12.181658744812012
    9. '```' → logprob: -12.681658744812012
    10. '	def' → logprob: -13.056658744812012

Token 69: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00506155239418149
    2. ' def' → logprob: -5.505061626434326
    3. ' ' → logprob: -7.130061626434326
    4. '_' → logprob: -10.130061149597168
    5. 'is' → logprob: -10.130061149597168
    6. ' _' → logprob: -10.130061149597168
    7. '_is' → logprob: -10.255061149597168
    8. ' ' → logprob: -11.505061149597168
    9. 'def' → logprob: -11.880061149597168
    10. 's' → logprob: -12.380061149597168

Token 70: '_app' (ID: 19342)
  Prédit: '_app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_app' → logprob: -5.407366916188039e-05
    2. '_ap' → logprob: -10.375054359436035
    3. '_' → logprob: -11.250054359436035
    4. '_a' → logprob: -13.000054359436035
    5. '_application' → logprob: -13.125054359436035
    6. '_s' → logprob: -13.500054359436035
    7. ' _' → logprob: -13.625054359436035
    8. '_possible' → logprob: -14.250054359436035
    9. '_available' → logprob: -15.125054359436035
    10. '_an' → logprob: -15.750054359436035

Token 71: 'licable' (ID: 127292)
  Prédit: 'licable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licable' → logprob: -0.00015681622608099133
    2. 'lic' → logprob: -9.50015640258789
    3. 'liable' → logprob: -10.25015640258789
    4. 'le' → logprob: -10.25015640258789
    5. 'ic' → logprob: -12.12515640258789
    6. 'def' → logprob: -13.50015640258789
    7. 'li' → logprob: -13.75015640258789
    8. 'able' → logprob: -14.25015640258789
    9. 'l' → logprob: -14.87515640258789
    10. 'ly' → logprob: -15.00015640258789

Token 72: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005295784678310156
    2. '(' → logprob: -5.255295753479004
    3. ' (' → logprob: -9.880295753479004
    4. 'self' → logprob: -12.630295753479004
    5. ' ' → logprob: -12.755295753479004
    6. '(s' → logprob: -13.630295753479004
    7. '   ' → logprob: -13.630295753479004
    8. ' self' → logprob: -13.755295753479004
    9. '(sel' → logprob: -14.880295753479004
    10. '	self' → logprob: -15.255295753479004

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2703152894973755
    2. '(self' → logprob: -1.7703152894973755
    3. 'self' → logprob: -3.145315170288086
    4. ' ,' → logprob: -4.770315170288086
    5. ' self' → logprob: -5.020315170288086
    6. ')' → logprob: -5.770315170288086
    7. ' ' → logprob: -6.020315170288086
    8. ',self' → logprob: -6.145315170288086
    9. '   ' → logprob: -7.895315170288086
    10. ' (' → logprob: -8.395315170288086

Token 74: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47442349791526794
    2. 'self' → logprob: -0.9744235277175903
    3. '   ' → logprob: -8.9744234085083
    4. 'n' → logprob: -9.0994234085083
    5. ' n' → logprob: -9.4744234085083
    6. ' ' → logprob: -11.2244234085083
    7. '       ' → logprob: -11.8494234085083
    8. '    ' → logprob: -12.2244234085083
    9. '(self' → logprob: -13.5994234085083
    10. '	self' → logprob: -13.8494234085083

Token 75: ':' (ID: 25)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0343003123998642
    2. '%' → logprob: -3.4093003273010254
    3. ')' → logprob: -8.034299850463867
    4. ' ' → logprob: -8.159299850463867
    5. ' ' → logprob: -10.909299850463867
    6. ' %)' → logprob: -11.784299850463867
    7. '   ' → logprob: -12.034299850463867
    8. ' )' → logprob: -12.659299850463867
    9. ' %
' → logprob: -12.909299850463867
    10. ':' → logprob: -13.034299850463867

Token 76: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12051469087600708
    2. ' int' → logprob: -2.3705146312713623
    3. 'int' → logprob: -3.9955146312713623
    4. ')' → logprob: -6.620514869689941
    5. '0' → logprob: -9.495514869689941
    6. ' )' → logprob: -9.620514869689941
    7. '2' → logprob: -9.745514869689941
    8. '  ' → logprob: -9.745514869689941
    9. '1' → logprob: -10.870514869689941
    10. '=int' → logprob: -10.995514869689941

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13371333479881287
    2. '):' → logprob: -2.1337132453918457
    3. ' )' → logprob: -5.633713245391846
    4. ':' → logprob: -6.383713245391846
    5. ' ):' → logprob: -6.883713245391846
    6. '%' → logprob: -8.133713722229004
    7. ' ' → logprob: -9.383713722229004
    8. ')%' → logprob: -9.883713722229004
    9. '   ' → logprob: -10.883713722229004
    10. '):
' → logprob: -11.383713722229004

Token 78: ' ->' (ID: 2747)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22655680775642395
    2. '%' → logprob: -1.6015567779541016
    3. ':' → logprob: -8.101556777954102
    4. ')' → logprob: -8.476556777954102
    5. ')%' → logprob: -8.601556777954102
    6. '   ' → logprob: -8.601556777954102
    7. ' %=' → logprob: -9.351556777954102
    8. ' ' → logprob: -10.101556777954102
    9. '()%' → logprob: -10.601556777954102
    10. '<|end|>' → logprob: -10.976556777954102

Token 79: ' bool' (ID: 3792)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29830557107925415
    2. ' bool' → logprob: -1.4233055114746094
    3. ' True' → logprob: -4.673305511474609
    4. 'bool' → logprob: -5.173305511474609
    5. ' int' → logprob: -7.173305511474609
    6. 'True' → logprob: -7.548305511474609
    7. ' (' → logprob: -8.79830551147461
    8. ' n' → logprob: -8.92330551147461
    9. 'int' → logprob: -9.42330551147461
    10. 'n' → logprob: -9.54830551147461

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026991849881596863
    2. ':
' → logprob: -8.875269889831543
    3. '       ' → logprob: -9.625269889831543
    4. ':return' → logprob: -10.375269889831543
    5. '):' → logprob: -10.625269889831543
    6. ' :' → logprob: -12.875269889831543
    7. '   ' → logprob: -13.000269889831543
    8. ',' → logprob: -13.750269889831543
    9. '():' → logprob: -14.750269889831543
    10. ')' → logprob: -14.875269889831543

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035617039538919926
    2. ' return' → logprob: -6.378561496734619
    3. 'return' → logprob: -7.003561496734619
    4. '        ' → logprob: -7.003561496734619
    5. ' ' → logprob: -11.628561973571777
    6. '      ' → logprob: -11.753561973571777
    7. '   ' → logprob: -12.003561973571777
    8. '    ' → logprob: -12.378561973571777
    9. '        
' → logprob: -12.628561973571777
    10. ' ' → logprob: -12.753561973571777

Token 82: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4778576195240021
    2. 'return' (adapté à ' return') → logprob: -0.9778575897216797
    3. '       ' → logprob: -5.60285758972168
    4. 'n' → logprob: -10.47785758972168
    5. '   ' → logprob: -10.47785758972168
    6. ' n' → logprob: -10.85285758972168
    7. '	return' → logprob: -12.85285758972168
    8. '```' → logprob: -12.85285758972168
    9. '
' → logprob: -13.72785758972168
    10. ' ' → logprob: -13.85285758972168

Token 83: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004624153021723032
    2. 'n' → logprob: -5.379624366760254
    3. ' ' → logprob: -13.379624366760254
    4. ' ' → logprob: -14.004624366760254
    5. ' (' → logprob: -14.129624366760254
    6. '	n' → logprob: -14.379624366760254
    7. '(n' → logprob: -16.379623413085938
    8. '(' → logprob: -17.254623413085938
    9. '```' → logprob: -18.129623413085938
    10. '_n' → logprob: -18.754623413085938

Token 84: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.054998729377985
    2. '%' → logprob: -2.9299986362457275
    3. ' ' → logprob: -9.429998397827148
    4. ' ' → logprob: -10.304998397827148
    5. '```' → logprob: -14.304998397827148
    6. '>' → logprob: -15.054998397827148
    7. '   ' → logprob: -15.179998397827148
    8. '2' → logprob: -15.304998397827148
    9. ')' → logprob: -15.679998397827148
    10. '[' → logprob: -15.804998397827148

Token 85: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759405493736267
    2. '2' → logprob: -0.8259405493736267
    3. '```' → logprob: -13.825940132141113
    4. ' ' → logprob: -16.20094108581543
    5. '   ' → logprob: -16.82594108581543
    6. '  ' → logprob: -17.32594108581543
    7. '`' → logprob: -18.07594108581543
    8. '0' → logprob: -18.32594108581543
    9. '    ' → logprob: -18.88844108581543
    10. '۲' → logprob: -19.07594108581543

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.500015258789062
    4. '   ' → logprob: -18.375015258789062
    5. '۲' → logprob: -19.500015258789062
    6. '  ' → logprob: -19.750015258789062
    7. '{' → logprob: -20.062515258789062
    8. '٢' → logprob: -20.125015258789062
    9. '`' → logprob: -20.312515258789062
    10. '
' → logprob: -20.375015258789062

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008102800697088242
    2. '==' → logprob: -4.883102893829346
    3. '=' → logprob: -8.008102416992188
    4. ' =' → logprob: -9.383102416992188
    5. ' ' → logprob: -9.508102416992188
    6. '0' → logprob: -13.133102416992188
    7. ')' → logprob: -14.008102416992188
    8. ' ' → logprob: -14.258102416992188
    9. ' ===' → logprob: -14.633102416992188
    10. '===' → logprob: -15.258102416992188

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42870137095451355
    2. ' ' → logprob: -1.053701400756836
    3. ' ' → logprob: -15.053701400756836
    4. '2' → logprob: -15.678701400756836
    5. '```' → logprob: -16.678701400756836
    6. '   ' → logprob: -16.928701400756836
    7. '=' → logprob: -17.491201400756836
    8. '1' → logprob: -17.678701400756836
    9. '  ' → logprob: -17.803701400756836
    10. '==' → logprob: -17.991201400756836

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -16.625036239624023
    4. '۰' → logprob: -17.187536239624023
    5. '٠' → logprob: -18.125036239624023
    6. '०' → logprob: -18.250036239624023
    7. '00' → logprob: -18.375036239624023
    8. '2' → logprob: -18.562536239624023
    9. '   ' → logprob: -19.000036239624023
    10. ' ' → logprob: -19.000036239624023

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2893112301826477
    2. '<|end|>' → logprob: -1.664311170578003
    3. '   ' → logprob: -3.789311170578003
    4. '

' → logprob: -4.039311408996582
    5. ' 
' → logprob: -4.414311408996582
    6. '    
' → logprob: -5.789311408996582
    7. '```' → logprob: -6.789311408996582
    8. ' ' → logprob: -6.914311408996582
    9. 'newline' → logprob: -7.039311408996582
    10. '<|end|>' → logprob: -7.164311408996582

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45571139454841614
    2. '   ' → logprob: -1.0807113647460938
    3. '<|end|>' → logprob: -4.955711364746094
    4. '```' → logprob: -5.205711364746094
    5. '    
' → logprob: -5.580711364746094
    6. ' 
' → logprob: -5.580711364746094
    7. '

' → logprob: -5.830711364746094
    8. 'def' → logprob: -6.955711364746094
    9. ' def' → logprob: -7.580711364746094
    10. '  
' → logprob: -7.580711364746094

Token 92: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002813313389196992
    2. ' def' → logprob: -6.002813339233398
    3. '   ' → logprob: -8.002813339233398
    4. '
' → logprob: -12.877813339233398
    5. ' ' → logprob: -15.502813339233398
    6. '    
' → logprob: -15.752813339233398
    7. '	def' → logprob: -16.1278133392334
    8. '```' → logprob: -16.6278133392334
    9. '  ' → logprob: -16.7528133392334
    10. 'de' → logprob: -18.2528133392334

Token 93: ' apply' (ID: 6096)
  Prédit: ' apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.014413585886359215
    2. 'apply' → logprob: -4.389413356781006
    3. ' def' → logprob: -6.389413356781006
    4. ' a' → logprob: -9.514413833618164
    5. 'def' → logprob: -10.014413833618164
    6. ' ' → logprob: -10.014413833618164
    7. '   ' → logprob: -10.764413833618164
    8. '_apply' → logprob: -11.264413833618164
    9. ' 
' → logprob: -11.889413833618164
    10. ' ' → logprob: -12.264413833618164

Token 94: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4741199016571045
    2. '(' → logprob: -0.9741199016571045
    3. ' (' → logprob: -10.849120140075684
    4. '(
' → logprob: -11.349120140075684
    5. '(s' → logprob: -11.849120140075684
    6. '(n' → logprob: -12.974120140075684
    7. '(

' → logprob: -13.474120140075684
    8. 'self' → logprob: -15.599120140075684
    9. ' ' → logprob: -15.849120140075684
    10. '   ' → logprob: -15.974120140075684

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059821102768182755
    2. ' ,' → logprob: -2.934821128845215
    3. ' ' → logprob: -6.309821128845215
    4. ')' → logprob: -6.684821128845215
    5. ' n' → logprob: -6.809821128845215
    6. 'n' → logprob: -8.309821128845215
    7. ',n' → logprob: -8.309821128845215
    8. '   ' → logprob: -9.309821128845215
    9. ' )' → logprob: -10.309821128845215
    10. ' *' → logprob: -10.434821128845215

Token 96: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07889628410339355
    2. 'n' → logprob: -2.5788962841033936
    3. ' ' → logprob: -13.453896522521973
    4. ')' → logprob: -13.578896522521973
    5. ' ' → logprob: -13.578896522521973
    6. '   ' → logprob: -14.078896522521973
    7. ')n' → logprob: -14.328896522521973
    8. '    ' → logprob: -15.203896522521973
    9. '	n' → logprob: -15.453896522521973
    10. ',' → logprob: -16.078895568847656

Token 97: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5986374616622925
    2. ' //' → logprob: -1.8486374616622925
    3. ' *' → logprob: -2.098637580871582
    4. ')' → logprob: -2.723637580871582
    5. '   ' → logprob: -3.348637580871582
    6. '<|end|>' → logprob: -3.848637580871582
    7. '    ' → logprob: -3.973637580871582
    8. ':' → logprob: -5.098637580871582
    9. '*' → logprob: -5.098637580871582
    10. '  ' → logprob: -5.473637580871582

Token 98: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6083018183708191
    2. ' int' → logprob: -1.3583018779754639
    3. '2' → logprob: -1.7333018779754639
    4. ' ' → logprob: -3.858301877975464
    5. '1' → logprob: -8.358302116394043
    6. '```' → logprob: -8.733302116394043
    7. '   ' → logprob: -9.483302116394043
    8. ' )' → logprob: -9.483302116394043
    9. ')' → logprob: -9.483302116394043
    10. ':int' → logprob: -9.858302116394043

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02534722164273262
    2. ' )' → logprob: -3.7753472328186035
    3. '):' → logprob: -6.7753472328186035
    4. '   ' → logprob: -7.9003472328186035
    5. ' ):' → logprob: -8.900346755981445
    6. '+' → logprob: -9.150346755981445
    7. ' +' → logprob: -9.650346755981445
    8. '-' → logprob: -9.775346755981445
    9. ':' → logprob: -10.025346755981445
    10. '*' → logprob: -10.400346755981445

Token 100: ' ->' (ID: 2747)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17068615555763245
    2. ' ' → logprob: -2.5456862449645996
    3. '*' → logprob: -2.9206862449645996
    4. ':' → logprob: -5.2956862449646
    5. ' +' → logprob: -5.4206862449646
    6. ' ->' → logprob: -5.5456862449646
    7. '       ' → logprob: -5.7956862449646
    8. '   ' → logprob: -6.2956862449646
    9. '        ' → logprob: -7.0456862449646
    10. '+' → logprob: -7.1706862449646

Token 101: ' int' (ID: 677)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09400156140327454
    2. 'n' → logprob: -3.219001531600952
    3. ' (' → logprob: -3.344001531600952
    4. '(n' → logprob: -4.844001770019531
    5. ' ' → logprob: -5.719001770019531
    6. '2' → logprob: -5.969001770019531
    7. '(' → logprob: -8.219001770019531
    8. 'int' → logprob: -8.969001770019531
    9. '(int' → logprob: -9.344001770019531
    10. ' int' → logprob: -9.719001770019531

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21757200360298157
    2. '       ' → logprob: -1.8425719738006592
    3. ' /' → logprob: -4.342572212219238
    4. ':
' → logprob: -5.342572212219238
    5. '+' → logprob: -5.467572212219238
    6. '*' → logprob: -6.092572212219238
    7. '   ' → logprob: -6.217572212219238
    8. ' +' → logprob: -6.717572212219238
    9. '):' → logprob: -6.717572212219238
    10. '/' → logprob: -6.842572212219238

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4591583013534546
    2. ' n' → logprob: -1.4591583013534546
    3. ' return' → logprob: -2.209158420562744
    4. 'n' → logprob: -4.084158420562744
    5. 'return' → logprob: -4.709158420562744
    6. '        ' → logprob: -10.584157943725586
    7. '   ' → logprob: -10.709157943725586
    8. '    ' → logprob: -11.709157943725586
    9. ' ' → logprob: -11.709157943725586
    10. '      ' → logprob: -12.209157943725586

Token 104: ' return' (ID: 622)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7931905388832092
    2. ' return' → logprob: -0.7931905388832092
    3. 'return' (adapté à ' return') → logprob: -2.6681904792785645
    4. 'n' → logprob: -3.6681904792785645
    5. '       ' → logprob: -8.293190956115723
    6. '   ' → logprob: -10.918190956115723
    7. ' ' → logprob: -11.668190956115723
    8. '    ' → logprob: -12.293190956115723
    9. '        ' → logprob: -12.668190956115723
    10. ' ' → logprob: -12.918190956115723

Token 105: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00317783304490149
    2. 'n' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.253177642822266
    4. ' ' → logprob: -17.378177642822266
    5. '   ' → logprob: -18.753177642822266
    6. '	n' → logprob: -19.003177642822266
    7. ' /' → logprob: -20.128177642822266
    8. '2' → logprob: -21.190677642822266
    9. '    ' → logprob: -21.378177642822266
    10. '0' → logprob: -21.690677642822266

Token 106: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.009846515953540802
    2. ' ' → logprob: -5.6348466873168945
    3. '//' → logprob: -6.0098466873168945
    4. '   ' → logprob: -6.1348466873168945
    5. ' ' → logprob: -7.0098466873168945
    6. '       ' → logprob: -9.134846687316895
    7. '  ' → logprob: -9.384846687316895
    8. '    ' → logprob: -9.509846687316895
    9. ' /' → logprob: -9.509846687316895
    10. '2' → logprob: -9.509846687316895

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.566264295950532e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.375085830688477
    4. '۲' → logprob: -16.125085830688477
    5. '```' → logprob: -16.125085830688477
    6. '２' → logprob: -16.875085830688477
    7. ' ' → logprob: -17.125085830688477
    8. '२' → logprob: -17.125085830688477
    9. '٢' → logprob: -17.250085830688477
    10. '
' → logprob: -17.500085830688477

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.125003814697266
    4. '   ' → logprob: -17.375003814697266
    5. '۲' → logprob: -18.125003814697266
    6. '٢' → logprob: -18.625003814697266
    7. '２' → logprob: -18.875003814697266
    8. '
' → logprob: -19.500003814697266
    9. '  ' → logprob: -19.625003814697266
    10. '२' → logprob: -19.812503814697266

Token 109: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5195436477661133
    2. '<|end|>' → logprob: -1.1445436477661133
    3. 'class' → logprob: -3.1445436477661133
    4. '

' → logprob: -3.3945436477661133
    5. '```' → logprob: -5.644543647766113
    6. '<|end|>' → logprob: -6.019543647766113
    7. ' class' → logprob: -6.769543647766113
    8. '\n' → logprob: -7.269543647766113
    9. '    
' → logprob: -7.644543647766113
    10. 'newline' → logprob: -7.769543647766113

Token 110: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47596830129623413
    2. 'class' → logprob: -0.9759683012962341
    3. '

' → logprob: -6.350968360900879
    4. '```' → logprob: -10.225968360900879
    5. '    
' → logprob: -10.350968360900879
    6. '
' → logprob: -10.725968360900879
    7. '  
' → logprob: -10.725968360900879
    8. ' class' → logprob: -11.600968360900879
    9. ' 
' → logprob: -11.975968360900879
    10. 'newline' → logprob: -12.475968360900879

Token 111: ' Odd' (ID: 59799)
  Prédit: ' Odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Odd' → logprob: -0.005275499541312456
    2. 'Odd' → logprob: -5.255275726318359
    3. ' Add' → logprob: -10.88027572631836
    4. ' Increment' → logprob: -11.63027572631836
    5. ' ' → logprob: -11.88027572631836
    6. ' Positive' → logprob: -13.88027572631836
    7. 'Add' → logprob: -14.00527572631836
    8. ' Even' → logprob: -14.13027572631836
    9. ' Prime' → logprob: -14.38027572631836
    10. ' Odds' → logprob: -14.50527572631836

Token 112: 'Operation' (ID: 10671)
  Prédit: 'Operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operation' → logprob: -1.6240566083070007e-06
    2. '(Operation' → logprob: -13.500001907348633
    3. 'Operator' → logprob: -16.500001907348633
    4. 'operation' → logprob: -16.875001907348633
    5. ' Operation' → logprob: -17.000001907348633
    6. '_operation' → logprob: -17.625001907348633
    7. 'Operations' → logprob: -18.125001907348633
    8. '.Operation' → logprob: -19.000001907348633
    9. 'Number' → logprob: -19.000001907348633
    10. 'Opera' → logprob: -19.875001907348633

Token 113: '(Operation' (ID: 189164)
  Prédit: '(Operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Operation' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.375004768371582
    3. '(Op' → logprob: -14.500004768371582
    4. ' (' → logprob: -16.8750057220459
    5. '(OP' → logprob: -17.2500057220459
    6. '(operation' → logprob: -18.1250057220459
    7. '(IO' → logprob: -18.8750057220459
    8. '```' → logprob: -19.1250057220459
    9. 'Operation' → logprob: -19.5000057220459
    10. '(Exception' → logprob: -19.7500057220459

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5028111338615417
    2. '(Operation' → logprob: -1.0028111934661865
    3. '):
' → logprob: -3.8778111934661865
    4. ':' → logprob: -5.252810955047607
    5. ')' → logprob: -6.752810955047607
    6. '   ' → logprob: -7.252810955047607
    7. '(' → logprob: -8.377811431884766
    8. '(Op' → logprob: -9.877811431884766
    9. ':
' → logprob: -9.877811431884766
    10. '):

' → logprob: -10.127811431884766

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010440052719786763
    2. ' def' → logprob: -7.501043796539307
    3. 'def' → logprob: -7.626043796539307
    4. '
' → logprob: -13.626044273376465
    5. '```' → logprob: -14.001044273376465
    6. '    
' → logprob: -15.251044273376465
    7. '   ' → logprob: -15.626044273376465
    8. '  ' → logprob: -15.751044273376465
    9. '	def' → logprob: -15.751044273376465
    10. '<|end|>' → logprob: -15.876044273376465

Token 116: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5850130915641785
    2. ' def' → logprob: -0.8350130915641785
    3. '   ' → logprob: -4.710012912750244
    4. ' ' → logprob: -11.585013389587402
    5. '	def' → logprob: -11.710013389587402
    6. '  ' → logprob: -11.960013389587402
    7. '
' → logprob: -13.085013389587402
    8. '    ' → logprob: -14.460013389587402
    9. '```' → logprob: -14.960013389587402
    10. '    
' → logprob: -15.460013389587402

Token 117: ' is' (ID: 382)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4612749516963959
    2. ' is' → logprob: -1.3362749814987183
    3. 's' → logprob: -2.9612748622894287
    4. 'def' → logprob: -3.0862748622894287
    5. 'is' → logprob: -4.836275100708008
    6. ' s' → logprob: -7.211275100708008
    7. ' ' → logprob: -7.586275100708008
    8. '  ' → logprob: -11.336275100708008
    9. '   ' → logprob: -11.711275100708008
    10. ')' → logprob: -11.836275100708008

Token 118: '_app' (ID: 19342)
  Prédit: '_app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_app' → logprob: -0.0005300374468788505
    2. 'app' → logprob: -8.000530242919922
    3. '_' → logprob: -9.875530242919922
    4. '<|end|>' → logprob: -10.000530242919922
    5. 'Applicable' → logprob: -10.375530242919922
    6. '_ap' → logprob: -11.375530242919922
    7. '_possible' → logprob: -11.750530242919922
    8. '```' → logprob: -11.875530242919922
    9. '   ' → logprob: -12.875530242919922
    10. 'classmethod' → logprob: -12.875530242919922

Token 119: 'licable' (ID: 127292)
  Prédit: 'licable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licable' → logprob: -0.00017183588352054358
    2. 'liable' → logprob: -8.875171661376953
    3. 'appable' → logprob: -11.375171661376953
    4. 'lic' → logprob: -12.250171661376953
    5. 'ly' → logprob: -12.625171661376953
    6. 'latable' → logprob: -12.875171661376953
    7. 'able' → logprob: -13.375171661376953
    8. 'classmethod' → logprob: -13.500171661376953
    9. 'def' → logprob: -13.625171661376953
    10. 'alable' → logprob: -14.000171661376953

Token 120: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006918780971318483
    2. '(' → logprob: -5.006918907165527
    3. '(
' → logprob: -9.381918907165527
    4. 'self' → logprob: -9.631918907165527
    5. '<|end|>' → logprob: -10.506918907165527
    6. ' (' → logprob: -11.256918907165527
    7. ' self' → logprob: -11.756918907165527
    8. '(s' → logprob: -12.756918907165527
    9. '
' → logprob: -14.131918907165527
    10. ' ' → logprob: -14.381918907165527

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003322318894788623
    2. '(self' → logprob: -6.253322124481201
    3. 'self' → logprob: -7.003322124481201
    4. ' ,' → logprob: -7.878322124481201
    5. ' self' → logprob: -10.00332260131836
    6. ',self' → logprob: -10.25332260131836
    7. ',
' → logprob: -11.50332260131836
    8. ')' → logprob: -13.12832260131836
    9. '<|end|>' → logprob: -13.12832260131836
    10. '   ' → logprob: -13.25332260131836

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.229361891746521
    2. ' n' → logprob: -1.604361891746521
    3. 'self' → logprob: -5.7293620109558105
    4. ' self' → logprob: -7.3543620109558105
    5. 'def' → logprob: -10.479361534118652
    6. '   ' → logprob: -11.604361534118652
    7. ' ' → logprob: -12.854361534118652
    8. ' def' → logprob: -13.104361534118652
    9. '       ' → logprob: -13.354361534118652
    10. '```' → logprob: -13.729361534118652

Token 123: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2359527051448822
    2. ' %' → logprob: -1.6109527349472046
    3. ' :' → logprob: -4.985952854156494
    4. ' ' → logprob: -6.735952854156494
    5. '%' → logprob: -6.860952854156494
    6. ')' → logprob: -7.735952854156494
    7. '=' → logprob: -7.735952854156494
    8. '  ' → logprob: -8.610952377319336
    9. '<|end|>' → logprob: -9.235952377319336
    10. '   ' → logprob: -9.610952377319336

Token 124: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4277695417404175
    2. ' int' → logprob: -1.1777695417404175
    3. '1' → logprob: -3.927769660949707
    4. ' ' → logprob: -4.177769660949707
    5. '2' → logprob: -5.302769660949707
    6. '0' → logprob: -11.177769660949707
    7. '<int' → logprob: -11.552769660949707
    8. '(int' → logprob: -11.927769660949707
    9. '   ' → logprob: -12.052769660949707
    10. '  ' → logprob: -12.302769660949707

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007513784803450108
    2. ' )' → logprob: -7.250751495361328
    3. '   ' → logprob: -11.375751495361328
    4. ':' → logprob: -11.750751495361328
    5. ' ' → logprob: -11.750751495361328
    6. '`)' → logprob: -12.875751495361328
    7. '):' → logprob: -13.125751495361328
    8. '       ' → logprob: -13.375751495361328
    9. ')
' → logprob: -13.750751495361328
    10. '):
' → logprob: -14.000751495361328

Token 126: ' ->' (ID: 2747)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7723785638809204
    2. ')' → logprob: -1.1473785638809204
    3. ' ->' → logprob: -1.6473785638809204
    4. ' >' → logprob: -5.147378444671631
    5. ' ==' → logprob: -5.272378444671631
    6. '>' → logprob: -5.647378444671631
    7. ' )' → logprob: -5.772378444671631
    8. ' %' → logprob: -5.897378444671631
    9. ':' → logprob: -6.272378444671631
    10. ' def' → logprob: -6.397378444671631

Token 127: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.16354256868362427
    2. ' bool' → logprob: -2.0385425090789795
    3. 'int' → logprob: -3.9135425090789795
    4. ' int' → logprob: -7.663542747497559
    5. 'True' → logprob: -9.788542747497559
    6. '	bool' → logprob: -9.788542747497559
    7. ' ' → logprob: -10.413542747497559
    8. '```' → logprob: -11.163542747497559
    9. '<bool' → logprob: -11.538542747497559
    10. '(bool' → logprob: -12.163542747497559

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010797020047903061
    2. ')' → logprob: -4.635797023773193
    3. '):' → logprob: -7.510797023773193
    4. ':
' → logprob: -8.635796546936035
    5. '       ' → logprob: -9.510796546936035
    6. ':return' → logprob: -9.885796546936035
    7. ' :' → logprob: -10.010796546936035
    8. ' ->' → logprob: -10.260796546936035
    9. '   ' → logprob: -10.385796546936035
    10. '->' → logprob: -10.760796546936035

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002449257764965296
    2. 'return' → logprob: -6.252449035644531
    3. ' return' → logprob: -7.627449035644531
    4. '   ' → logprob: -10.377449035644531
    5. '	return' → logprob: -13.502449035644531
    6. '      ' → logprob: -15.377449035644531
    7. '	' → logprob: -15.627449035644531
    8. '           ' → logprob: -15.752449035644531
    9. '     ' → logprob: -16.00244903564453
    10. '    ' → logprob: -16.12744903564453

Token 130: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5264294147491455
    2. ' return' → logprob: -0.9014294147491455
    3. 'n' → logprob: -5.901429176330566
    4. ' n' → logprob: -8.276429176330566
    5. '   ' → logprob: -8.776429176330566
    6. '       ' → logprob: -9.401429176330566
    7. '
' → logprob: -10.151429176330566
    8. ' ' → logprob: -11.151429176330566
    9. '	return' → logprob: -11.651429176330566
    10. 'True' → logprob: -13.276429176330566

Token 131: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0067190444096922874
    2. 'n' → logprob: -5.00671911239624
    3. ' True' → logprob: -13.506718635559082
    4. ' ' → logprob: -13.881718635559082
    5. ' ' → logprob: -14.381718635559082
    6. '	n' → logprob: -15.006718635559082
    7. 'True' → logprob: -15.381718635559082
    8. ' not' → logprob: -15.756718635559082
    9. '   ' → logprob: -17.3817195892334
    10. ' 
' → logprob: -17.8817195892334

Token 132: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011064205318689346
    2. '%' → logprob: -4.511064052581787
    3. ' ' → logprob: -11.136064529418945
    4. ' ' → logprob: -13.261064529418945
    5. '```' → logprob: -17.136064529418945
    6. 's' → logprob: -17.636064529418945
    7. '1' → logprob: -17.886064529418945
    8. ' !=' → logprob: -17.886064529418945
    9. ' %
' → logprob: -18.136064529418945
    10. '
' → logprob: -18.886064529418945

Token 133: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31331729888916016
    2. '2' → logprob: -1.3133172988891602
    3. '1' → logprob: -9.81331729888916
    4. '```' → logprob: -14.93831729888916
    5. ' ' → logprob: -15.56331729888916
    6. '3' → logprob: -16.313316345214844
    7. '<|end|>' → logprob: -16.813316345214844
    8. '  ' → logprob: -17.188316345214844
    9. '0' → logprob: -17.438316345214844
    10. ' 
' → logprob: -17.500816345214844

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -10.250052452087402
    3. '1' → logprob: -11.000052452087402
    4. '```' → logprob: -16.125051498413086
    5. '   ' → logprob: -17.750051498413086
    6. '0' → logprob: -18.875051498413086
    7. '
' → logprob: -19.000051498413086
    8. '  ' → logprob: -19.250051498413086
    9. '`' → logprob: -20.375051498413086
    10. '!' → logprob: -20.437551498413086

Token 135: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6568793058395386
    2. '1' → logprob: -0.9068793058395386
    3. ' !=' → logprob: -3.156879425048828
    4. ' ' → logprob: -4.031879425048828
    5. '==' → logprob: -4.156879425048828
    6. ' ==' → logprob: -6.406879425048828
    7. '!' → logprob: -10.281879425048828
    8. ')!=' → logprob: -10.531879425048828
    9. '```' → logprob: -10.656879425048828
    10. '=' → logprob: -10.906879425048828

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00593235157430172
    2. ' ' → logprob: -5.130932331085205
    3. '0' → logprob: -12.505932807922363
    4. '!=' → logprob: -17.880931854248047
    5. '```' → logprob: -18.005931854248047
    6. ' ' → logprob: -18.630931854248047
    7. '!' → logprob: -19.005931854248047
    8. ' !=' → logprob: -19.505931854248047
    9. '   ' → logprob: -19.755931854248047
    10. '2' → logprob: -19.880931854248047

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '0' → logprob: -13.500025749206543
    4. '```' → logprob: -17.12502670288086
    5. '!=' → logprob: -18.25002670288086
    6. '
' → logprob: -19.12502670288086
    7. '!' → logprob: -19.62502670288086
    8. '2' → logprob: -19.75002670288086
    9. 'not' → logprob: -20.18752670288086
    10. ' !=' → logprob: -20.31252670288086

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6680141091346741
    2. '<|end|>' → logprob: -0.7930141091346741
    3. '

' → logprob: -3.5430140495300293
    4. '   ' → logprob: -5.418014049530029
    5. '<|end|>' → logprob: -6.918014049530029
    6. ' ' → logprob: -9.418014526367188
    7. ' 
' → logprob: -9.793014526367188
    8. '    
' → logprob: -9.793014526367188
    9. '
' → logprob: -10.043014526367188
    10. 'newline' → logprob: -10.543014526367188

Token 139: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05204236879944801
    2. '   ' → logprob: -3.1770424842834473
    3. '<|end|>' → logprob: -4.927042484283447
    4. '```' → logprob: -7.677042484283447
    5. 'def' → logprob: -8.427042007446289
    6. ' ' → logprob: -8.552042007446289
    7. '    
' → logprob: -8.552042007446289
    8. ' 
' → logprob: -8.802042007446289
    9. '\n' → logprob: -9.052042007446289
    10. '

' → logprob: -9.302042007446289

Token 140: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019721693824976683
    2. ' def' → logprob: -6.251972198486328
    3. '   ' → logprob: -10.126972198486328
    4. '
' → logprob: -12.751972198486328
    5. '```' → logprob: -14.876972198486328
    6. ' ' → logprob: -15.376972198486328
    7. '	def' → logprob: -16.501972198486328
    8. '    
' → logprob: -17.251972198486328
    9. '

' → logprob: -17.751972198486328
    10. 'd' → logprob: -17.751972198486328

Token 141: ' apply' (ID: 6096)
  Prédit: ' apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.004195929039269686
    2. 'apply' → logprob: -5.5041961669921875
    3. ' def' → logprob: -9.129196166992188
    4. 'def' → logprob: -12.629196166992188
    5. '
' → logprob: -13.379196166992188
    6. '   ' → logprob: -14.004196166992188
    7. '.apply' → logprob: -14.254196166992188
    8. ' applies' → logprob: -14.504196166992188
    9. ' ' → logprob: -14.629196166992188
    10. ' 
' → logprob: -14.879196166992188

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004652861040085554
    2. '(' → logprob: -5.379652976989746
    3. ' (' → logprob: -11.379652976989746
    4. '(
' → logprob: -11.504652976989746
    5. '(s' → logprob: -11.504652976989746
    6. '(n' → logprob: -14.629652976989746
    7. 'self' → logprob: -15.254652976989746
    8. ' ' → logprob: -16.37965202331543
    9. '(

' → logprob: -16.37965202331543
    10. ' self' → logprob: -16.50465202331543

Token 143: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.40574967861175537
    2. ' self' → logprob: -2.155749797821045
    3. ',' → logprob: -2.280749797821045
    4. ' (' → logprob: -3.155749797821045
    5. '(n' → logprob: -3.905749797821045
    6. '       ' → logprob: -3.905749797821045
    7. ')' → logprob: -4.155749797821045
    8. '(' → logprob: -5.030749797821045
    9. ' ' → logprob: -5.530749797821045
    10. 'self' → logprob: -6.155749797821045

Token 144: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.026419078931212425
    2. 'n' → logprob: -3.651419162750244
    3. ' self' → logprob: -9.526418685913086
    4. 'self' → logprob: -11.026418685913086
    5. '(n' → logprob: -11.776418685913086
    6. ' (' → logprob: -12.151418685913086
    7. '       ' → logprob: -12.151418685913086
    8. ' ' → logprob: -13.151418685913086
    9. ' ' → logprob: -13.526418685913086
    10. ')n' → logprob: -13.651418685913086

Token 145: ':' (ID: 25)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5143114328384399
    2. ' *' → logprob: -1.26431143283844
    3. ' -' → logprob: -2.7643113136291504
    4. ' ' → logprob: -3.3893113136291504
    5. '+' → logprob: -4.63931131362915
    6. '*' → logprob: -5.01431131362915
    7. ':' → logprob: -5.63931131362915
    8. '-' → logprob: -6.38931131362915
    9. ')' → logprob: -7.38931131362915
    10. '   ' → logprob: -8.514311790466309

Token 146: ' int' (ID: 677)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7630195617675781
    2. ' ' → logprob: -1.0130195617675781
    3. '3' → logprob: -2.513019561767578
    4. 'n' → logprob: -3.263019561767578
    5. ' (' → logprob: -3.638019561767578
    6. '2' → logprob: -4.638019561767578
    7. 'int' → logprob: -5.013019561767578
    8. ' int' → logprob: -5.638019561767578
    9. '(n' → logprob: -6.388019561767578
    10. '10' → logprob: -6.513019561767578

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01655743457376957
    2. ' )' → logprob: -4.141557216644287
    3. '-' → logprob: -8.766557693481445
    4. ' +' → logprob: -9.266557693481445
    5. '   ' → logprob: -9.516557693481445
    6. ' -' → logprob: -9.516557693481445
    7. '+' → logprob: -10.391557693481445
    8. '*' → logprob: -10.516557693481445
    9. ')+' → logprob: -11.266557693481445
    10. ' ' → logprob: -11.391557693481445

Token 148: ' ->' (ID: 2747)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7867819666862488
    2. ' +' → logprob: -1.1617820262908936
    3. ' -' → logprob: -2.1617820262908936
    4. ' ' → logprob: -2.7867820262908936
    5. '*' → logprob: -3.1617820262908936
    6. '-' → logprob: -5.2867817878723145
    7. '+' → logprob: -5.5367817878723145
    8. '   ' → logprob: -6.9117817878723145
    9. '       ' → logprob: -7.4117817878723145
    10. '        ' → logprob: -7.5367817878723145

Token 149: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6364386677742004
    2. '3' → logprob: -0.8864386677742004
    3. ' n' → logprob: -3.3864386081695557
    4. 'n' → logprob: -3.7614386081695557
    5. ' (' → logprob: -6.761438846588135
    6. '(n' → logprob: -8.511438369750977
    7. '(' → logprob: -8.636438369750977
    8. '1' → logprob: -10.261438369750977
    9. '   ' → logprob: -11.636438369750977
    10. '2' → logprob: -11.761438369750977

Token 150: ':
' (ID: 734)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.5093836784362793
    2. '       ' → logprob: -1.5093836784362793
    3. '(n' → logprob: -3.1343836784362793
    4. ' ' → logprob: -3.3843836784362793
    5. ' n' → logprob: -4.009383678436279
    6. ':' → logprob: -4.009383678436279
    7. ' return' → logprob: -4.134383678436279
    8. '+' → logprob: -4.509383678436279
    9. ' +' → logprob: -4.634383678436279
    10. 'n' → logprob: -5.134383678436279

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16268868744373322
    2. 'n' → logprob: -2.162688732147217
    3. '3' → logprob: -3.912688732147217
    4. ' n' → logprob: -4.787688732147217
    5. 'return' → logprob: -5.287688732147217
    6. ' return' → logprob: -6.912688732147217
    7. ' ' → logprob: -8.162688255310059
    8. '2' → logprob: -9.287688255310059
    9. '7' → logprob: -9.287688255310059
    10. '1' → logprob: -9.412688255310059

Token 152: ' return' (ID: 622)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6699432134628296
    2. 'n' → logprob: -0.7949432134628296
    3. ' n' → logprob: -3.419943332672119
    4. ' ' → logprob: -5.919943332672119
    5. 'return' (adapté à ' return') → logprob: -7.294943332672119
    6. '(' → logprob: -8.669942855834961
    7. '(n' → logprob: -9.169942855834961
    8. ' return' → logprob: -9.419942855834961
    9. ' (' → logprob: -9.669942855834961
    10. '       ' → logprob: -9.919942855834961

Token 153: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.44533780217170715
    2. ' ' → logprob: -1.1953377723693848
    3. 'n' → logprob: -3.4453377723693848
    4. ' n' → logprob: -3.6953377723693848
    5. ' (' → logprob: -10.445338249206543
    6. '(' → logprob: -10.945338249206543
    7. '(n' → logprob: -12.695338249206543
    8. '   ' → logprob: -13.445338249206543
    9. '	n' → logprob: -13.570338249206543
    10. '1' → logprob: -13.695338249206543

Token 154: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07913774251937866
    2. 'n' → logprob: -2.5791378021240234
    3. ' n' → logprob: -9.204137802124023
    4. ' ' → logprob: -9.329137802124023
    5. '(' → logprob: -9.954137802124023
    6. '(n' → logprob: -11.704137802124023
    7. ' (' → logprob: -14.079137802124023
    8. '1' → logprob: -14.329137802124023
    9. '```' → logprob: -15.204137802124023
    10. '	n' → logprob: -15.516637802124023

Token 155: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005664967931807041
    2. '*' → logprob: -5.255664825439453
    3. '*n' → logprob: -7.880664825439453
    4. 'n' → logprob: -10.255664825439453
    5. ' ' → logprob: -11.630664825439453
    6. '<|end|>' → logprob: -13.005664825439453
    7. '    ' → logprob: -13.255664825439453
    8. ' n' → logprob: -13.255664825439453
    9. ' ' → logprob: -13.755664825439453
    10. '   ' → logprob: -14.130664825439453

Token 156: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25192946195602417
    2. ' n' → logprob: -1.501929521560669
    3. '<|end|>' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.876930236816406
    5. '	n' → logprob: -16.876930236816406
    6. ')n' → logprob: -17.626930236816406
    7. '    ' → logprob: -18.376930236816406
    8. '_n' → logprob: -18.501930236816406
    9. '```' → logprob: -18.501930236816406
    10. '  ' → logprob: -19.251930236816406

Token 157: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0789131447672844
    2. '+' → logprob: -2.5789132118225098
    3. '1' → logprob: -11.328912734985352
    4. ' ' → logprob: -11.578912734985352
    5. ' plus' → logprob: -13.578912734985352
    6. 'n' → logprob: -15.328912734985352
    7. ' +
' → logprob: -16.07891273498535
    8. '2' → logprob: -16.70391273498535
    9. '```' → logprob: -16.70391273498535
    10. '7' → logprob: -17.32891273498535

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043003082275390625
    2. ' ' → logprob: -3.1680030822753906
    3. '7' → logprob: -12.54300308227539
    4. '```' → logprob: -15.91800308227539
    5. '<|end|>' → logprob: -17.04300308227539
    6. '2' → logprob: -17.41800308227539
    7. ' ' → logprob: -17.41800308227539
    8. '    ' → logprob: -17.79300308227539
    9. '3' → logprob: -17.79300308227539
    10. '5' → logprob: -18.04300308227539

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '7' → logprob: -15.376032829284668
    4. '<|end|>' → logprob: -16.251033782958984
    5. '```' → logprob: -16.626033782958984
    6. '۱' → logprob: -18.501033782958984
    7. '<|end|>' → logprob: -18.813533782958984
    8. ' ' → logprob: -19.001033782958984
    9. '4' → logprob: -19.126033782958984
    10. '11' → logprob: -19.126033782958984

Token 160: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10500946640968323
    2. '
' → logprob: -2.3550095558166504
    3. '

' → logprob: -5.35500955581665
    4. '
' → logprob: -9.855009078979492
    5. ' class' → logprob: -12.355009078979492
    6. '```' → logprob: -12.855009078979492
    7. '


' → logprob: -13.480009078979492
    8. '  
' → logprob: -13.480009078979492
    9. '    
' → logprob: -14.230009078979492
    10. ' 
' → logprob: -14.355009078979492

Token 161: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005541089456528425
    2. '
' → logprob: -5.6305413246154785
    3. '

' → logprob: -6.2555413246154785
    4. '
' → logprob: -12.25554084777832
    5. ' 

' → logprob: -12.75554084777832
    6. '```' → logprob: -12.88054084777832
    7. ' class' → logprob: -13.13054084777832
    8. '  
' → logprob: -13.25554084777832
    9. ' 
' → logprob: -13.38054084777832
    10. 'c' → logprob: -14.00554084777832

Token 162: ' Coll' (ID: 17054)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.1794582605361938
    2. ' Coll' → logprob: -1.8044582605361938
    3. 'Operation' → logprob: -1.9294582605361938
    4. ' Sequence' → logprob: -2.0544581413269043
    5. ' Operation' → logprob: -2.4294581413269043
    6. 'Coll' → logprob: -2.4294581413269043
    7. 'Number' → logprob: -3.4294581413269043
    8. ' Number' → logprob: -3.5544581413269043
    9. 'Chain' → logprob: -5.429458141326904
    10. ' Chain' → logprob: -5.929458141326904

Token 163: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -0.00023095356300473213
    2. 'az' → logprob: -9.25023078918457
    3. 'aze' → logprob: -10.37523078918457
    4. '
' → logprob: -11.00023078918457
    5. 'at' → logprob: -11.37523078918457
    6. '   ' → logprob: -11.62523078918457
    7. '```' → logprob: -11.75023078918457
    8. 'e' → logprob: -12.00023078918457
    9. 'a' → logprob: -12.12523078918457
    10. 'ate' → logprob: -12.50023078918457

Token 164: 'Step' (ID: 10643)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.005088122095912695
    2. 'Iterator' → logprob: -5.6300883293151855
    3. 'Solver' → logprob: -7.7550883293151855
    4. 'Step' → logprob: -8.005087852478027
    5. 'Chain' → logprob: -8.755087852478027
    6. ':' → logprob: -8.880087852478027
    7. 'Sequ' → logprob: -9.130087852478027
    8. 'Stepper' → logprob: -9.380087852478027
    9. 'Generator' → logprob: -9.755087852478027
    10. 'Simulator' → logprob: -10.255087852478027

Token 165: 'Chooser' (ID: 47227)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3656516969203949
    2. 's' → logprob: -1.9906517267227173
    3. '(' → logprob: -2.6156516075134277
    4. 'Iterator' → logprob: -2.7406516075134277
    5. '(Operation' → logprob: -4.615651607513428
    6. '_iterator' → logprob: -4.740651607513428
    7. 'Generator' → logprob: -5.490651607513428
    8. ':
' → logprob: -5.865651607513428
    9. 'iterator' → logprob: -6.365651607513428
    10. 'Iter' → logprob: -6.740651607513428

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07219613343477249
    2. '(Operation' → logprob: -2.9471962451934814
    3. '(' → logprob: -4.197196006774902
    4. ' :' → logprob: -6.322196006774902
    5. '():' → logprob: -8.697196006774902
    6. ':
' → logprob: -9.947196006774902
    7. '(Op' → logprob: -10.697196006774902
    8. '(Abstract' → logprob: -10.947196006774902
    9. '(OP' → logprob: -11.072196006774902
    10. '(object' → logprob: -11.572196006774902

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001801438513211906
    2. ' def' → logprob: -6.626801490783691
    3. 'def' → logprob: -8.126801490783691
    4. '    
' → logprob: -8.751801490783691
    5. '
' → logprob: -11.876801490783691
    6. ':' → logprob: -12.126801490783691
    7. '	def' → logprob: -12.751801490783691
    8. '   ' → logprob: -13.751801490783691
    9. ',' → logprob: -14.376801490783691
    10. '  ' → logprob: -14.501801490783691

Token 168: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06535559147596359
    2. 'def' (adapté à ' def') → logprob: -2.8153555393218994
    3. '   ' → logprob: -5.6903557777404785
    4. ' ' → logprob: -12.81535530090332
    5. '    ' → logprob: -14.81535530090332
    6. '  ' → logprob: -14.94035530090332
    7. '	def' → logprob: -15.44035530090332
    8. '```' → logprob: -16.56535530090332
    9. 'de' → logprob: -17.06535530090332
    10. '
' → logprob: -17.31535530090332

Token 169: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0022501726634800434
    2. ' def' → logprob: -6.3772501945495605
    3. ' ' → logprob: -8.377249717712402
    4. ' _' → logprob: -9.627249717712402
    5. 'init' → logprob: -9.627249717712402
    6. ' init' → logprob: -9.877249717712402
    7. '_init' → logprob: -10.127249717712402
    8. '__' → logprob: -10.377249717712402
    9. 'def' → logprob: -10.627249717712402
    10. ' ' → logprob: -10.877249717712402

Token 170: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.961759259458631e-06
    2. 'call' → logprob: -12.750004768371582
    3. 'iter' → logprob: -13.625004768371582
    4. ' init' → logprob: -15.875004768371582
    5. 'int' → logprob: -16.0000057220459
    6. 'ini' → logprob: -16.1250057220459
    7. '   ' → logprob: -16.6250057220459
    8. 'in' → logprob: -16.8750057220459
    9. 'initi' → logprob: -17.1250057220459
    10. 'next' → logprob: -17.3750057220459

Token 171: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0387488529086113
    2. '<|end|>' → logprob: -4.288748741149902
    3. '(self' → logprob: -4.413748741149902
    4. '__(
' → logprob: -5.038748741149902
    5. '(' → logprob: -5.538748741149902
    6. '__' → logprob: -6.913748741149902
    7. '<|end|>' → logprob: -8.288748741149902
    8. '__((' → logprob: -9.288748741149902
    9. ' (' → logprob: -9.288748741149902
    10. '__(*' → logprob: -9.788748741149902

Token 172: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018135826103389263
    2. ' self' → logprob: -6.3768134117126465
    3. '
' → logprob: -9.126813888549805
    4. '	self' → logprob: -14.376813888549805
    5. ')' → logprob: -14.501813888549805
    6. '):
' → logprob: -15.251813888549805
    7. ' ' → logprob: -15.251813888549805
    8. ',' → logprob: -15.376813888549805
    9. ' 
' → logprob: -15.626813888549805
    10. '(self' → logprob: -15.626813888549805

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023771677166223526
    2. 'self' → logprob: -4.5237717628479
    3. ' ,' → logprob: -4.6487717628479
    4. ' self' → logprob: -6.2737717628479
    5. ' ' → logprob: -7.8987717628479
    6. ')' → logprob: -8.273771286010742
    7. '(self' → logprob: -8.648771286010742
    8. ' (' → logprob: -8.898771286010742
    9. '<|end|>' → logprob: -9.773771286010742
    10. '   ' → logprob: -10.523771286010742

Token 174: ' operations' (ID: 12084)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06537848711013794
    2. ' self' → logprob: -2.940378427505493
    3. 'operations' → logprob: -4.690378665924072
    4. ' operations' → logprob: -7.065378665924072
    5. '       ' → logprob: -8.690378189086914
    6. ')' → logprob: -8.815378189086914
    7. '   ' → logprob: -10.940378189086914
    8. 'operators' → logprob: -10.940378189086914
    9. '	self' → logprob: -11.315378189086914
    10. '
' → logprob: -11.315378189086914

Token 175: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5048530030981055e-06
    2. ' :' → logprob: -13.750001907348633
    3. '):' → logprob: -15.625001907348633
    4. '_:' → logprob: -16.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. '__:' → logprob: -17.875001907348633
    7. ')' → logprob: -18.250001907348633
    8. '}:' → logprob: -18.375001907348633
    9. '   ' → logprob: -19.000001907348633
    10. '1' → logprob: -19.125001907348633

Token 176: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.16027317941188812
    2. 'List' → logprob: -1.9102731943130493
    3. '[List' → logprob: -10.160273551940918
    4. '	List' → logprob: -12.285273551940918
    5. ')' → logprob: -13.285273551940918
    6. '   ' → logprob: -13.660273551940918
    7. ' )' → logprob: -14.285273551940918
    8. ' list' → logprob: -14.410273551940918
    9. ' ' → logprob: -15.160273551940918
    10. '       ' → logprob: -15.410273551940918

Token 177: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '[
' → logprob: -13.625003814697266
    3. '```' → logprob: -14.000003814697266
    4. ')' → logprob: -14.250003814697266
    5. '	' → logprob: -15.000003814697266
    6. '(Operation' → logprob: -15.750003814697266
    7. ' [' → logprob: -16.250003814697266
    8. 'Operation' → logprob: -16.750003814697266
    9. '

' → logprob: -17.500003814697266
    10. '
' → logprob: -17.500003814697266

Token 178: 'Operation' (ID: 10671)
  Prédit: 'Operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operation' → logprob: -2.165027217415627e-05
    2. ' Operation' → logprob: -10.750021934509277
    3. 'Operator' → logprob: -16.75002098083496
    4. '   ' → logprob: -17.87502098083496
    5. ' ' → logprob: -18.25002098083496
    6. '(Operation' → logprob: -18.25002098083496
    7. '_operation' → logprob: -18.87502098083496
    8. ')' → logprob: -19.25002098083496
    9. 'Operations' → logprob: -19.37502098083496
    10. '[' → logprob: -19.37502098083496

Token 179: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.6550264954566956
    2. '])' → logprob: -0.7800264954566956
    3. ']' → logprob: -4.780026435852051
    4. ')' → logprob: -5.030026435852051
    5. ']):
' → logprob: -5.155026435852051
    6. '):' → logprob: -6.655026435852051
    7. ']:' → logprob: -8.90502643585205
    8. '>):' → logprob: -11.03002643585205
    9. '）' → logprob: -12.03002643585205
    10. ':' → logprob: -12.40502643585205

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017117146402597427
    2. ':' → logprob: -4.142117023468018
    3. '   ' → logprob: -7.517117023468018
    4. 'self' → logprob: -8.267117500305176
    5. ',' → logprob: -9.017117500305176
    6. '):' → logprob: -10.267117500305176
    7. ')' → logprob: -10.517117500305176
    8. ':
' → logprob: -10.767117500305176
    9. '):
' → logprob: -11.517117500305176
    10. ' self' → logprob: -11.517117500305176

Token 181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7253656983375549
    2. ' self' → logprob: -0.9753656983375549
    3. '       ' → logprob: -1.9753656387329102
    4. '   ' → logprob: -10.22536563873291
    5. '	self' → logprob: -10.47536563873291
    6. ' ' → logprob: -11.47536563873291
    7. '      ' → logprob: -13.10036563873291
    8. '(self' → logprob: -13.22536563873291
    9. '           ' → logprob: -13.85036563873291
    10. '        ' → logprob: -13.85036563873291

Token 182: '.operations' (ID: 176416)
  Prédit: '.operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.operations' → logprob: -0.03829817846417427
    2. '.' → logprob: -3.2882981300354004
    3. '.ops' → logprob: -8.538298606872559
    4. ' .' → logprob: -10.538298606872559
    5. '.op' → logprob: -11.163298606872559
    6. '.operation' → logprob: -12.288298606872559
    7. '.oper' → logprob: -12.663298606872559
    8. 'operations' → logprob: -12.663298606872559
    9. '.steps' → logprob: -13.913298606872559
    10. '._' → logprob: -14.038298606872559

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126937136054039
    2. '=' → logprob: -2.1269371509552
    3. ' ' → logprob: -11.876936912536621
    4. ':' → logprob: -14.126936912536621
    5. ' =
' → logprob: -15.126936912536621
    6. '<|end|>' → logprob: -15.251936912536621
    7. ')' → logprob: -15.751936912536621
    8. '    ' → logprob: -16.001937866210938
    9. '	' → logprob: -16.001937866210938
    10. '   ' → logprob: -16.251937866210938

Token 184: ' operations' (ID: 12084)
  Prédit: ' operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.018150296062231064
    2. 'operations' → logprob: -4.018150329589844
    3. '_operations' → logprob: -16.143150329589844
    4. '.operations' → logprob: -16.143150329589844
    5. ' ' → logprob: -16.643150329589844
    6. ' ' → logprob: -17.018150329589844
    7. ' operation' → logprob: -17.393150329589844
    8. ' operaciones' → logprob: -17.393150329589844
    9. ' opérations' → logprob: -18.893150329589844
    10. '```' → logprob: -19.018150329589844

Token 185: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10822834074497223
    2. '   ' → logprob: -2.7332284450531006
    3. '<|end|>' → logprob: -3.7332284450531006
    4. 'def' → logprob: -4.7332282066345215
    5. '    
' → logprob: -6.1082282066345215
    6. '<|end|>' → logprob: -7.3582282066345215
    7. '  
' → logprob: -7.4832282066345215
    8. ' def' → logprob: -7.6082282066345215
    9. '

' → logprob: -7.6082282066345215
    10. '```' → logprob: -9.10822868347168

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02107849530875683
    2. 'def' → logprob: -3.896078586578369
    3. ' def' → logprob: -8.146078109741211
    4. '
' → logprob: -8.896078109741211
    5. '    
' → logprob: -9.271078109741211
    6. '<|end|>' → logprob: -11.896078109741211
    7. '  
' → logprob: -13.021078109741211
    8. ' ' → logprob: -13.521078109741211
    9. '	def' → logprob: -13.896078109741211
    10. '        
' → logprob: -13.896078109741211

Token 187: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015860427811276168
    2. ' def' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.625158309936523
    4. '
' → logprob: -18.000158309936523
    5. 'de' → logprob: -20.500158309936523
    6. ' ' → logprob: -20.875158309936523
    7. '	def' → logprob: -20.875158309936523
    8. '```' → logprob: -21.125158309936523
    9. '

' → logprob: -21.750158309936523
    10. '    
' → logprob: -22.750158309936523

Token 188: ' choose' (ID: 5655)
  Prédit: ' choose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choose' → logprob: -0.059373222291469574
    2. 'choose' → logprob: -3.309373140335083
    3. ' select' → logprob: -4.559373378753662
    4. ' next' → logprob: -4.684373378753662
    5. 'next' → logprob: -8.309372901916504
    6. ' step' → logprob: -8.309372901916504
    7. ' get' → logprob: -8.309372901916504
    8. ' apply' → logprob: -8.684372901916504
    9. 'select' → logprob: -8.934372901916504
    10. ' ' → logprob: -9.559372901916504

Token 189: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12696370482444763
    2. '(' → logprob: -2.1269636154174805
    3. '(
' → logprob: -11.12696361541748
    4. ' (' → logprob: -11.75196361541748
    5. '_step' → logprob: -12.25196361541748
    6. '_next' → logprob: -12.62696361541748
    7. '(step' → logprob: -13.62696361541748
    8. '_' → logprob: -14.12696361541748
    9. '(s' → logprob: -14.25196361541748
    10. '(sel' → logprob: -14.37696361541748

Token 190: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08784093707799911
    2. ',' → logprob: -2.837841033935547
    3. 'self' → logprob: -4.212841033935547
    4. ' self' → logprob: -4.837841033935547
    5. '(' → logprob: -6.962841033935547
    6. ')' → logprob: -7.462841033935547
    7. ' (' → logprob: -8.087841033935547
    8. '_next' → logprob: -8.337841033935547
    9. ',self' → logprob: -8.712841033935547
    10. '       ' → logprob: -8.712841033935547

Token 191: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.40219202637672424
    2. 'n' → logprob: -1.2771919965744019
    3. 'self' → logprob: -3.5271921157836914
    4. ' self' → logprob: -3.7771921157836914
    5. '	n' → logprob: -11.527192115783691
    6. ')n' → logprob: -11.652192115783691
    7. ')' → logprob: -12.402192115783691
    8. ' ' → logprob: -12.527192115783691
    9. '   ' → logprob: -12.652192115783691
    10. '(self' → logprob: -12.777192115783691

Token 192: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004004024958703667
    2. '):' → logprob: -8.50040054321289
    3. ':int' → logprob: -9.12540054321289
    4. ')' → logprob: -9.75040054321289
    5. ' :' → logprob: -10.87540054321289
    6. ' ):' → logprob: -12.00040054321289
    7. ' )' → logprob: -12.50040054321289
    8. '):
' → logprob: -14.25040054321289
    9. '   ' → logprob: -15.75040054321289
    10. ' ' → logprob: -17.37540054321289

Token 193: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519455850124359
    2. ' int' → logprob: -1.5019456148147583
    3. ')' → logprob: -11.126945495605469
    4. ':int' → logprob: -14.626945495605469
    5. ' ' → logprob: -15.001945495605469
    6. '[int' → logprob: -15.251945495605469
    7. ' )' → logprob: -15.626945495605469
    8. '(int' → logprob: -15.751945495605469
    9. '	int' → logprob: -16.50194549560547
    10. '<int' → logprob: -16.50194549560547

Token 194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026419671485200524
    2. ' )' → logprob: -8.250264167785645
    3. '):' → logprob: -13.250264167785645
    4. '   ' → logprob: -14.625264167785645
    5. ':' → logprob: -15.500264167785645
    6. ' ' → logprob: -16.62526512145996
    7. ')->' → logprob: -16.62526512145996
    8. '`)' → logprob: -16.62526512145996
    9. '       ' → logprob: -17.12526512145996
    10. '")' → logprob: -17.25026512145996

Token 195: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.034466974437236786
    2. '->' → logprob: -3.6594669818878174
    3. ')' → logprob: -5.534466743469238
    4. ':' → logprob: -5.534466743469238
    5. ')->' → logprob: -8.409466743469238
    6. ' )->' → logprob: -12.159466743469238
    7. '   ' → logprob: -13.159466743469238
    8. ' ' → logprob: -13.284466743469238
    9. '       ' → logprob: -14.159466743469238
    10. ' )' → logprob: -14.284466743469238

Token 196: ' Operation' (ID: 29600)
  Prédit: 'Operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operation' → logprob: -0.26340025663375854
    2. ' Operation' → logprob: -1.5134003162384033
    3. 'int' → logprob: -4.888400077819824
    4. ' int' → logprob: -5.638400077819824
    5. 'Iterator' → logprob: -8.388400077819824
    6. ' Iterator' → logprob: -10.138400077819824
    7. 'Operator' → logprob: -10.888400077819824
    8. ' operation' → logprob: -11.763400077819824
    9. 'Optional' → logprob: -11.888400077819824
    10. ' Optional' → logprob: -12.388400077819824

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03374608978629112
    2. ':
' → logprob: -3.4087460041046143
    3. '):' → logprob: -10.533745765686035
    4. '       ' → logprob: -10.783745765686035
    5. '):
' → logprob: -11.283745765686035
    6. '<|end|>' → logprob: -11.408745765686035
    7. '   ' → logprob: -12.158745765686035
    8. '[' → logprob: -12.533745765686035
    9. '():
' → logprob: -12.533745765686035
    10. ':

' → logprob: -12.908745765686035

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11394578963518143
    2. ' for' → logprob: -2.238945722579956
    3. 'for' → logprob: -7.738945960998535
    4. '
' → logprob: -7.988945960998535
    5. '<|end|>' → logprob: -8.863945960998535
    6. ' ' → logprob: -9.613945960998535
    7. '        
' → logprob: -10.363945960998535
    8. ' 
' → logprob: -10.988945960998535
    9. '   ' → logprob: -10.988945960998535
    10. '  
' → logprob: -11.113945960998535

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.576520562171936
    2. ' for' → logprob: -0.826520562171936
    3. '       ' → logprob: -7.4515204429626465
    4. '	for' → logprob: -15.701520919799805
    5. 'return' → logprob: -16.576520919799805
    6. '   ' → logprob: -17.201520919799805
    7. '        
' → logprob: -17.826520919799805
    8. ' ' → logprob: -17.826520919799805
    9. ' return' → logprob: -18.201520919799805
    10. '
' → logprob: -18.201520919799805

Token 200: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3909122049808502
    2. ' op' → logprob: -1.1409121751785278
    3. 'operation' → logprob: -5.640912055969238
    4. ' operation' → logprob: -7.640912055969238
    5. '	op' → logprob: -13.515912055969238
    6. '   ' → logprob: -13.890912055969238
    7. ' ' → logprob: -14.640912055969238
    8. ' oper' → logprob: -17.015913009643555
    9. 'oper' → logprob: -17.015913009643555
    10. 'ops' → logprob: -17.390913009643555

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01604856364428997
    2. ' ' → logprob: -4.141048431396484
    3. '  ' → logprob: -12.266048431396484
    4. ' op' → logprob: -13.141048431396484
    5. ' ' → logprob: -13.391048431396484
    6. 'in' → logprob: -13.516048431396484
    7. '	in' → logprob: -14.391048431396484
    8. ' i' → logprob: -14.641048431396484
    9. '   ' → logprob: -14.766048431396484
    10. 's' → logprob: -14.891048431396484

Token 202: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931511759757996
    2. 'self' → logprob: -0.6931511759757996
    3. '       ' → logprob: -13.193151473999023
    4. '	self' → logprob: -13.943151473999023
    5. '(self' → logprob: -14.443151473999023
    6. '
' → logprob: -15.943151473999023
    7. '        ' → logprob: -16.193151473999023
    8. '[self' → logprob: -16.443151473999023
    9. '    ' → logprob: -16.568151473999023
    10. '   ' → logprob: -16.818151473999023

Token 203: '.operations' (ID: 176416)
  Prédit: '.operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.operations' → logprob: -0.001077110879123211
    2. '.' → logprob: -6.876077175140381
    3. 'operations' → logprob: -10.251076698303223
    4. ' .' → logprob: -11.876076698303223
    5. ' operations' → logprob: -14.126076698303223
    6. '.oper' → logprob: -14.876076698303223
    7. '.ops' → logprob: -15.126076698303223
    8. '.options' → logprob: -15.626076698303223
    9. '.op' → logprob: -16.12607765197754
    10. '.operation' → logprob: -16.25107765197754

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017527908086776733
    2. ':
' → logprob: -4.767528057098389
    3. '       ' → logprob: -4.892528057098389
    4. ' if' → logprob: -7.017528057098389
    5. '           ' → logprob: -8.39252758026123
    6. 'if' → logprob: -9.89252758026123
    7. ' :' → logprob: -9.89252758026123
    8. '<|end|>' → logprob: -10.51752758026123
    9. ',' → logprob: -10.64252758026123
    10. ':

' → logprob: -11.51752758026123

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009311995469033718
    2. ' if' → logprob: -5.134312152862549
    3. 'if' → logprob: -6.259312152862549
    4. '       ' → logprob: -7.509312152862549
    5. '<|end|>' → logprob: -7.509312152862549
    6. '<|end|>' → logprob: -9.00931167602539
    7. '	       ' → logprob: -9.38431167602539
    8. ':' → logprob: -10.00931167602539
    9. ',' → logprob: -10.38431167602539
    10. '   ' → logprob: -11.88431167602539

Token 206: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5802333354949951
    2. 'if' (adapté à ' if') → logprob: -0.8302333354949951
    3. '           ' → logprob: -5.455233573913574
    4. '       ' → logprob: -11.955233573913574
    5. '	if' → logprob: -13.455233573913574
    6. '   ' → logprob: -13.705233573913574
    7. '	       ' → logprob: -14.205233573913574
    8. '               ' → logprob: -14.955233573913574
    9. 'If' → logprob: -15.330233573913574
    10. ' ' → logprob: -15.830233573913574

Token 207: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.04862063005566597
    2. 'op' → logprob: -3.0486207008361816
    3. '(op' → logprob: -11.298620223999023
    4. '	op' → logprob: -11.423620223999023
    5. '.op' → logprob: -12.423620223999023
    6. ' ' → logprob: -12.548620223999023
    7. '_op' → logprob: -13.798620223999023
    8. '           ' → logprob: -14.673620223999023
    9. ' ' → logprob: -15.798620223999023
    10. ')' → logprob: -15.923620223999023

Token 208: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0003434488025959581
    2. '.' → logprob: -8.000343322753906
    3. ' .' → logprob: -12.000343322753906
    4. 'is' → logprob: -13.625343322753906
    5. '   ' → logprob: -14.875343322753906
    6. ').' → logprob: -15.750343322753906
    7. ' is' → logprob: -17.000343322753906
    8. '.isnan' → logprob: -17.250343322753906
    9. '       ' → logprob: -17.375343322753906
    10. '	is' → logprob: -18.250343322753906

Token 209: '_app' (ID: 19342)
  Prédit: '_app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_app' → logprob: -1.2471589798224159e-05
    2. '_ap' → logprob: -12.250012397766113
    3. ' _' → logprob: -12.500012397766113
    4. '_' → logprob: -13.125012397766113
    5. '._' → logprob: -14.750012397766113
    6. 'app' → logprob: -15.125012397766113
    7. ')_' → logprob: -15.500012397766113
    8. '   ' → logprob: -16.00001335144043
    9. '_a' → logprob: -16.00001335144043
    10. 'Applicable' → logprob: -16.25001335144043

Token 210: 'licable' (ID: 127292)
  Prédit: 'licable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licable' → logprob: -0.000915039679966867
    2. 'lic' → logprob: -7.000915050506592
    3. 'ic' → logprob: -13.500914573669434
    4. 'lical' → logprob: -14.375914573669434
    5. 'liable' → logprob: -14.500914573669434
    6. 'li' → logprob: -15.250914573669434
    7. '_' → logprob: -15.375914573669434
    8. 'lica' → logprob: -15.750914573669434
    9. 'le' → logprob: -16.12591552734375
    10. 'l' → logprob: -16.62591552734375

Token 211: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008901407127268612
    2. '(' → logprob: -7.125890254974365
    3. ' (' → logprob: -9.375889778137207
    4. '           ' → logprob: -15.375889778137207
    5. '(
' → logprob: -15.375889778137207
    6. ')' → logprob: -15.375889778137207
    7. '               ' → logprob: -15.750889778137207
    8. '(op' → logprob: -17.125890731811523
    9. ')(' → logprob: -17.750890731811523
    10. '((' → logprob: -17.875890731811523

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38702791929244995
    2. '):
' → logprob: -1.1370279788970947
    3. ')' → logprob: -9.012027740478516
    4. ':' → logprob: -11.512027740478516
    5. ' ):' → logprob: -11.637027740478516
    6. ' ):
' → logprob: -12.262027740478516
    7. '):

' → logprob: -12.512027740478516
    8. '():
' → logprob: -12.762027740478516
    9. '):
' → logprob: -12.762027740478516
    10. ':
' → logprob: -14.262027740478516

Token 213: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010822250507771969
    2. ' return' → logprob: -5.010822296142578
    3. 'return' → logprob: -6.010822296142578
    4. '           ' → logprob: -6.760822296142578
    5. ':return' → logprob: -8.385822296142578
    6. '                
' → logprob: -9.010822296142578
    7. '<|end|>' → logprob: -10.010822296142578
    8. ':
' → logprob: -10.885822296142578
    9. '            
' → logprob: -11.010822296142578
    10. ':' → logprob: -11.260822296142578

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14043086767196655
    2. ' return' → logprob: -2.6404309272766113
    3. '               ' → logprob: -2.8904309272766113
    4. '                   ' → logprob: -5.890430927276611
    5. '           ' → logprob: -6.640430927276611
    6. '	return' → logprob: -10.265430450439453
    7. ':return' → logprob: -11.390430450439453
    8. '              ' → logprob: -12.765430450439453
    9. '                ' → logprob: -12.890430450439453
    10. '
' → logprob: -13.265430450439453

Token 215: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.061970602720975876
    2. 'op' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.311970710754395
    4. '(op' → logprob: -13.686970710754395
    5. '	op' → logprob: -15.686970710754395
    6. 'o' → logprob: -17.311969757080078
    7. '.op' → logprob: -18.686969757080078
    8. '_op' → logprob: -18.686969757080078
    9. '```' → logprob: -19.436969757080078
    10. '
' → logprob: -19.561969757080078

Token 216: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036846695002168417
    2. 'raise' → logprob: -8.625368118286133
    3. '<|end|>' → logprob: -9.500368118286133
    4. ' raise' → logprob: -9.750368118286133
    5. '        
' → logprob: -11.125368118286133
    6. '#' → logprob: -11.875368118286133
    7. '        ' → logprob: -12.000368118286133
    8. 'return' → logprob: -12.375368118286133
    9. '\' → logprob: -12.500368118286133
    10. '   ' → logprob: -12.625368118286133

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014231795445084572
    2. 'raise' → logprob: -4.7642316818237305
    3. ' raise' → logprob: -5.2642316818237305
    4. '<|end|>' → logprob: -8.01423168182373
    5. '        ' → logprob: -11.26423168182373
    6. '   ' → logprob: -11.51423168182373
    7. ' raises' → logprob: -11.51423168182373
    8. '```' → logprob: -11.76423168182373
    9. 'return' → logprob: -11.88923168182373
    10. '        
' → logprob: -12.01423168182373

Token 218: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.20537419617176056
    2. '       ' → logprob: -1.7053742408752441
    3. ' raise' → logprob: -5.830374240875244
    4. 'return' → logprob: -6.955374240875244
    5. 'None' → logprob: -10.580373764038086
    6. 'raises' → logprob: -11.705373764038086
    7. '#' → logprob: -11.705373764038086
    8. 'raising' → logprob: -12.205373764038086
    9. 'Raise' → logprob: -12.705373764038086
    10. '	raise' → logprob: -13.080373764038086

Token 219: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -6.313314952421933e-05
    2. 'Value' → logprob: -10.000062942504883
    3. ' Runtime' → logprob: -11.500062942504883
    4. ' Stop' → logprob: -12.500062942504883
    5. ' Lookup' → logprob: -12.500062942504883
    6. '(Value' → logprob: -17.250062942504883
    7. ' Exception' → logprob: -17.625062942504883
    8. 'Stop' → logprob: -18.500062942504883
    9. '_value' → logprob: -19.125062942504883
    10. ' Index' → logprob: -19.500062942504883

Token 220: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.12711036205291748
    2. 'rror' → logprob: -2.127110481262207
    3. 'ror' → logprob: -8.627110481262207
    4. 'r' → logprob: -13.002110481262207
    5. 'rr' → logprob: -15.002110481262207
    6. 'Value' → logprob: -15.627110481262207
    7. 'error' → logprob: -15.627110481262207
    8. 'RR' → logprob: -17.25210952758789
    9. 'SError' → logprob: -17.37710952758789
    10. ' Error' → logprob: -17.50210952758789

Token 221: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.25428685545921326
    2. '(' → logprob: -1.5042868852615356
    3. '('' → logprob: -6.129286766052246
    4. '()' → logprob: -9.004286766052246
    5. '(
' → logprob: -10.254286766052246
    6. '(f' → logprob: -11.004286766052246
    7. '(

' → logprob: -14.129286766052246
    8. '("")' → logprob: -14.504286766052246
    9. '(
' → logprob: -15.754286766052246
    10. '(...)' → logprob: -16.004287719726562

Token 222: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.015409603714942932
    2. ' No' → logprob: -4.265409469604492
    3. '"No' → logprob: -7.015409469604492
    4. ' no' → logprob: -8.390409469604492
    5. '"' → logprob: -9.890409469604492
    6. 'n' → logprob: -10.390409469604492
    7. 'Unsupported' → logprob: -11.140409469604492
    8. 'no' → logprob: -12.265409469604492
    9. 'Invalid' → logprob: -12.515409469604492
    10. 'Cannot' → logprob: -12.640409469604492

Token 223: ' applicable' (ID: 12781)
  Prédit: ' applicable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applicable' → logprob: -0.09814194589853287
    2. ' operation' → logprob: -2.72314190864563
    3. ' valid' → logprob: -3.97314190864563
    4. ' suitable' → logprob: -4.848142147064209
    5. 'operation' → logprob: -8.22314167022705
    6. ' application' → logprob: -8.84814167022705
    7. 'app' → logprob: -8.97314167022705
    8. ' ' → logprob: -8.97314167022705
    9. ' available' → logprob: -9.34814167022705
    10. 'Operation' → logprob: -9.47314167022705

Token 224: ' operation' (ID: 9506)
  Prédit: ' operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.0005606581107713282
    2. 'operation' → logprob: -7.750560760498047
    3. ' operations' → logprob: -9.375560760498047
    4. 'Operation' → logprob: -10.375560760498047
    5. ' Operation' → logprob: -12.125560760498047
    6. ' operator' → logprob: -12.500560760498047
    7. ' ' → logprob: -12.625560760498047
    8. '_operation' → logprob: -14.750560760498047
    9. '   ' → logprob: -15.500560760498047
    10. '-operation' → logprob: -15.625560760498047

Token 225: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.2534711956977844
    2. ' for' → logprob: -1.5034711360931396
    3. '")' → logprob: -6.753471374511719
    4. 'for' → logprob: -9.003471374511719
    5. ' ' → logprob: -9.628471374511719
    6. ')' → logprob: -9.878471374511719
    7. ' available' → logprob: -10.003471374511719
    8. 'found' → logprob: -10.378471374511719
    9. ' provided' → logprob: -11.128471374511719
    10. ' given' → logprob: -11.503471374511719

Token 226: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0037479407619684935
    2. '.")' → logprob: -6.503747940063477
    3. ')' → logprob: -6.878747940063477
    4. ' for' → logprob: -7.378747940063477
    5. ')")' → logprob: -7.628747940063477
    6. 'for' → logprob: -10.378747940063477
    7. '")
' → logprob: -10.503747940063477
    8. '}")' → logprob: -10.628747940063477
    9. ' ")' → logprob: -12.128747940063477
    10. '.' → logprob: -12.753747940063477

Token 227: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.22787457704544067
    2. 'def' → logprob: -1.602874517440796
    3. '<|end|>' → logprob: -6.852874755859375
    4. '
' → logprob: -7.727874755859375
    5. '   ' → logprob: -8.352874755859375
    6. '.' → logprob: -8.852874755859375
    7. '  
' → logprob: -9.227874755859375
    8. '    
' → logprob: -9.477874755859375
    9. ' ' → logprob: -9.602874755859375
    10. 'from' → logprob: -9.977874755859375

Token 228: ' Coll' (ID: 17054)
  Prédit: 'Coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coll' → logprob: -0.008735007606446743
    2. ' Coll' → logprob: -4.758735179901123
    3. 'def' → logprob: -10.883734703063965
    4. 'coll' → logprob: -11.008734703063965
    5. 'Sequence' → logprob: -11.258734703063965
    6. '_coll' → logprob: -11.258734703063965
    7. 'Generator' → logprob: -11.383734703063965
    8. 'Iterator' → logprob: -11.633734703063965
    9. 'Solution' → logprob: -11.883734703063965
    10. 'Operation' → logprob: -12.633734703063965

Token 229: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -1.5048530030981055e-06
    2. 'at' → logprob: -14.125001907348633
    3. 'a' → logprob: -14.750001907348633
    4. 'az' → logprob: -16.875001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'ator' → logprob: -17.625001907348633
    7. 'artz' → logprob: -17.750001907348633
    8. '   ' → logprob: -17.875001907348633
    9. 'ation' → logprob: -18.000001907348633
    10. 'ate' → logprob: -18.250001907348633

Token 230: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.03711666539311409
    2. 'Iterator' → logprob: -3.412116765975952
    3. 'Generator' → logprob: -6.162116527557373
    4. 'Solver' → logprob: -7.537116527557373
    5. 'Step' → logprob: -8.412117004394531
    6. ':
' → logprob: -8.912117004394531
    7. ':' → logprob: -9.037117004394531
    8. 'Stepper' → logprob: -9.037117004394531
    9. 'Sequ' → logprob: -9.787117004394531
    10. 'Simulator' → logprob: -10.287117004394531

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039927964098751545
    2. '(' → logprob: -6.128993034362793
    3. ':
' → logprob: -6.378993034362793
    4. 'Iterator' → logprob: -9.753993034362793
    5. '_iterator' → logprob: -10.503993034362793
    6. '(iterator' → logprob: -12.003993034362793
    7. '():' → logprob: -12.503993034362793
    8. '(object' → logprob: -12.628993034362793
    9. '	Iterator' → logprob: -13.003993034362793
    10. 'Generator' → logprob: -13.753993034362793

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014194185845553875
    2. ' def' → logprob: -4.514194011688232
    3. 'def' → logprob: -5.764194011688232
    4. '	def' → logprob: -13.26419448852539
    5. '   ' → logprob: -13.88919448852539
    6. ':' → logprob: -14.76419448852539
    7. ',' → logprob: -15.88919448852539
    8. ')' → logprob: -16.76419448852539
    9. ':def' → logprob: -16.76419448852539
    10. '(def' → logprob: -17.01419448852539

Token 233: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04866844415664673
    2. ' def' → logprob: -3.048668384552002
    3. '   ' → logprob: -9.42366886138916
    4. 'class' → logprob: -15.67366886138916
    5. '	def' → logprob: -17.048667907714844
    6. ':def' → logprob: -17.673667907714844
    7. '```' → logprob: -18.423667907714844
    8. ' ' → logprob: -18.548667907714844
    9. ':' → logprob: -18.923667907714844
    10. '__' → logprob: -20.048667907714844

Token 234: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004846376832574606
    2. '__' → logprob: -5.504846572875977
    3. ' def' → logprob: -7.254846572875977
    4. 'def' → logprob: -9.754846572875977
    5. '_init' → logprob: -13.254846572875977
    6. 'init' → logprob: -14.254846572875977
    7. ' ' → logprob: -15.879846572875977
    8. ' ' → logprob: -16.379846572875977
    9. '```' → logprob: -16.629846572875977
    10. ' init' → logprob: -17.129846572875977

Token 235: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.016147684305906296
    2. 'it' → logprob: -4.391147613525391
    3. 'nit' → logprob: -5.766147613525391
    4. 'iter' → logprob: -8.89114761352539
    5. 'int' → logprob: -8.89114761352539
    6. 'def' → logprob: -9.26614761352539
    7. '`' → logprob: -10.26614761352539
    8. '```' → logprob: -10.76614761352539
    9. 'in' → logprob: -11.26614761352539
    10. '   ' → logprob: -11.64114761352539

Token 236: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08015139400959015
    2. '__(' → logprob: -2.580151319503784
    3. '(' → logprob: -7.830151557922363
    4. ' (' → logprob: -8.080151557922363
    5. '   ' → logprob: -8.455151557922363
    6. 'self' → logprob: -8.455151557922363
    7. '_(' → logprob: -9.455151557922363
    8. ' ' → logprob: -11.205151557922363
    9. '__(
' → logprob: -11.205151557922363
    10. '__' → logprob: -11.955151557922363

Token 237: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001215356052853167
    2. ' self' → logprob: -6.75121545791626
    3. '   ' → logprob: -10.626214981079102
    4. '       ' → logprob: -11.251214981079102
    5. '(self' → logprob: -12.501214981079102
    6. '
' → logprob: -12.876214981079102
    7. ',' → logprob: -14.001214981079102
    8. 'n' → logprob: -15.251214981079102
    9. '	self' → logprob: -15.376214981079102
    10. ',self' → logprob: -16.3762149810791

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31853359937667847
    2. 'self' → logprob: -1.3185336589813232
    3. '(self' → logprob: -6.068533420562744
    4. '   ' → logprob: -6.443533420562744
    5. ' self' → logprob: -7.318533420562744
    6. ' ,' → logprob: -7.818533420562744
    7. ' (' → logprob: -9.693533897399902
    8. 'n' → logprob: -9.818533897399902
    9. ')' → logprob: -9.943533897399902
    10. ',self' → logprob: -10.068533897399902

Token 239: ' chooser' (ID: 192073)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6039400100708008
    2. 'start' → logprob: -0.9789400100708008
    3. 'n' → logprob: -2.978940010070801
    4. '   ' → logprob: -4.478940010070801
    5. ' start' → logprob: -4.728940010070801
    6. ' self' → logprob: -5.603940010070801
    7. '       ' → logprob: -5.978940010070801
    8. ' n' → logprob: -7.978940010070801
    9. ' ' → logprob: -11.7289400100708
    10. '     ' → logprob: -11.8539400100708

Token 240: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01008351519703865
    2. ':' → logprob: -4.7600836753845215
    3. ' ,' → logprob: -6.6350836753845215
    4. '):' → logprob: -9.135083198547363
    5. '   ' → logprob: -11.010083198547363
    6. '       ' → logprob: -11.885083198547363
    7. ' ):' → logprob: -12.010083198547363
    8. '):
' → logprob: -12.135083198547363
    9. ' :' → logprob: -12.385083198547363
    10. ')' → logprob: -13.010083198547363

Token 241: ' Coll' (ID: 17054)
  Prédit: ' Coll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Coll' → logprob: -0.5759450793266296
    2. 'Coll' → logprob: -0.8259450793266296
    3. '   ' → logprob: -13.825944900512695
    4. ')' → logprob: -13.950944900512695
    5. ' ' → logprob: -13.950944900512695
    6. '    ' → logprob: -14.200944900512695
    7. 'Collision' → logprob: -14.700944900512695
    8. 'Choice' → logprob: -14.825944900512695
    9. 'Chooser' → logprob: -15.200944900512695
    10. ' ' → logprob: -15.700944900512695

Token 242: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -1.2664456789934775e-06
    2. 'at' → logprob: -14.250000953674316
    3. 'az' → logprob: -14.750000953674316
    4. '   ' → logprob: -15.375000953674316
    5. 't' → logprob: -18.000001907348633
    6. ' at' → logprob: -18.250001907348633
    7. 'oz' → logprob: -18.375001907348633
    8. 'itz' → logprob: -18.875001907348633
    9. 'ats' → logprob: -19.000001907348633
    10. '       ' → logprob: -19.000001907348633

Token 243: 'Step' (ID: 10643)
  Prédit: 'Step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Step' → logprob: -4.0484450437361374e-05
    2. 'Sequence' → logprob: -10.375040054321289
    3. '   ' → logprob: -12.750040054321289
    4. 'Stepper' → logprob: -13.000040054321289
    5. 'step' → logprob: -13.125040054321289
    6. '_step' → logprob: -14.250040054321289
    7. 'Chooser' → logprob: -14.375040054321289
    8. ' Step' → logprob: -15.875040054321289
    9. '       ' → logprob: -16.25004005432129
    10. 'Seq' → logprob: -16.75004005432129

Token 244: 'Chooser' (ID: 47227)
  Prédit: 'Chooser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chooser' → logprob: -0.0011312862625345588
    2. 'chooser' → logprob: -7.001131057739258
    3. ' chooser' → logprob: -8.626131057739258
    4. '   ' → logprob: -10.251131057739258
    5. '       ' → logprob: -13.001131057739258
    6. ',' → logprob: -14.251131057739258
    7. ' ' → logprob: -14.501131057739258
    8. 'Cho' → logprob: -15.126131057739258
    9. 'Choice' → logprob: -15.251131057739258
    10. 'Choose' → logprob: -15.376131057739258

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06546780467033386
    2. '):' → logprob: -2.9404678344726562
    3. '):
' → logprob: -4.690467834472656
    4. ')' → logprob: -6.690467834472656
    5. '   ' → logprob: -9.940467834472656
    6. ' ,' → logprob: -10.815467834472656
    7. '       ' → logprob: -10.815467834472656
    8. ',n' → logprob: -12.190467834472656
    9. '):
' → logprob: -12.565467834472656
    10. ',
' → logprob: -13.065467834472656

Token 246: ' upper' (ID: 13057)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5779625177383423
    2. ' start' → logprob: -0.8279625177383423
    3. 'n' → logprob: -7.077962398529053
    4. '   ' → logprob: -7.577962398529053
    5. 'max' → logprob: -8.577962875366211
    6. ' n' → logprob: -9.327962875366211
    7. ' max' → logprob: -9.452962875366211
    8. 'limit' → logprob: -9.702962875366211
    9. ' limit' → logprob: -10.702962875366211
    10. 'starting' → logprob: -10.702962875366211

Token 247: '_bound' (ID: 47558)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.026704072952270508
    2. '_bound' → logprob: -3.6517040729522705
    3. 'limit' → logprob: -8.401703834533691
    4. '_' → logprob: -9.151703834533691
    5. ':' → logprob: -10.401703834533691
    6. 'bound' → logprob: -11.651703834533691
    7. '=' → logprob: -12.526703834533691
    8. ' limit' → logprob: -12.776703834533691
    9. ' bound' → logprob: -12.776703834533691
    10. '_LIMIT' → logprob: -12.901703834533691

Token 248: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005532711511477828
    2. '):' → logprob: -8.625553131103516
    3. ':int' → logprob: -8.750553131103516
    4. '=' → logprob: -9.250553131103516
    5. ' :' → logprob: -9.500553131103516
    6. '=None' → logprob: -10.500553131103516
    7. ')' → logprob: -12.000553131103516
    8. ',' → logprob: -12.250553131103516
    9. '   ' → logprob: -13.375553131103516
    10. '):
' → logprob: -13.500553131103516

Token 249: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02356759086251259
    2. ' int' → logprob: -3.7735676765441895
    3. '100' → logprob: -8.273567199707031
    4. 'Optional' → logprob: -11.023567199707031
    5. '   ' → logprob: -11.648567199707031
    6. ')' → logprob: -11.648567199707031
    7. '=int' → logprob: -11.898567199707031
    8. 'None' → logprob: -12.023567199707031
    9. ' ' → logprob: -12.273567199707031
    10. '10' → logprob: -12.398567199707031

Token 250: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14793521165847778
    2. '):
' → logprob: -2.522935152053833
    3. ':' → logprob: -3.147935152053833
    4. '=' → logprob: -4.772935390472412
    5. ')' → logprob: -5.272935390472412
    6. ',' → logprob: -8.022934913635254
    7. '=None' → logprob: -8.647934913635254
    8. ' ):' → logprob: -9.272934913635254
    9. ' =' → logprob: -9.772934913635254
    10. '   ' → logprob: -10.147934913635254

Token 251: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.018507275730371475
    2. '10' → logprob: -4.018507480621338
    3. '1' → logprob: -8.51850700378418
    4. 'None' → logprob: -9.51850700378418
    5. ' ' → logprob: -9.64350700378418
    6. '0' → logprob: -11.76850700378418
    7. '   ' → logprob: -12.39350700378418
    8. 'int' → logprob: -13.39350700378418
    9. 'float' → logprob: -13.89350700378418
    10. '  ' → logprob: -14.01850700378418

Token 252: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.11580799520015717
    2. '10' → logprob: -2.2408080101013184
    3. '1' → logprob: -5.865808010101318
    4. '0' → logprob: -8.99080753326416
    5. 'int' → logprob: -12.11580753326416
    6. 'float' → logprob: -12.24080753326416
    7. '999' → logprob: -12.24080753326416
    8. 'None' → logprob: -13.61580753326416
    9. ' ' → logprob: -13.74080753326416
    10. '2' → logprob: -13.99080753326416

Token 253: '_' (ID: 62)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5792627334594727
    2. '):' → logprob: -0.8292627334594727
    3. ')' → logprob: -6.079262733459473
    4. '):
' → logprob: -8.079262733459473
    5. ' ):
' → logprob: -8.329262733459473
    6. ',' → logprob: -8.579262733459473
    7. ' ):' → logprob: -8.704262733459473
    8. '0' → logprob: -9.329262733459473
    9. ' ' → logprob: -11.454262733459473
    10. '   ' → logprob: -11.954262733459473

Token 254: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.7474454045295715
    2. '0' → logprob: -1.2474453449249268
    3. '_' → logprob: -1.4974453449249268
    4. '00' → logprob: -4.497445583343506
    5. ')' → logprob: -5.622445583343506
    6. '):' → logprob: -8.622445106506348
    7. '<<' → logprob: -8.997445106506348
    8. '):
' → logprob: -9.497445106506348
    9. ',' → logprob: -9.497445106506348
    10. '```' → logprob: -9.997445106506348

Token 255: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.833878508885391e-05
    2. '000' → logprob: -10.625038146972656
    3. '0' → logprob: -12.125038146972656
    4. '___' → logprob: -12.750038146972656
    5. '   ' → logprob: -13.375038146972656
    6. ')' → logprob: -13.500038146972656
    7. '__' → logprob: -13.875038146972656
    8. '    ' → logprob: -14.375038146972656
    9. '  ' → logprob: -15.375038146972656
    10. '____' → logprob: -15.625038146972656

Token 256: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.01831967383623123
    2. '_' → logprob: -4.018319606781006
    3. '0' → logprob: -8.768320083618164
    4. '00' → logprob: -11.768320083618164
    5. ' ' → logprob: -12.518320083618164
    6. '   ' → logprob: -13.893320083618164
    7. '  ' → logprob: -14.143320083618164
    8. '    ' → logprob: -15.143320083618164
    9. '```' → logprob: -15.393320083618164
    10. '001' → logprob: -15.893320083618164

Token 257: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03848310187458992
    2. '):
' → logprob: -3.288483142852783
    3. ',' → logprob: -8.413482666015625
    4. ')' → logprob: -8.788482666015625
    5. '):
' → logprob: -10.163482666015625
    6. '   ' → logprob: -10.913482666015625
    7. ' ):' → logprob: -12.038482666015625
    8. ':' → logprob: -13.163482666015625
    9. ' ):
' → logprob: -14.163482666015625
    10. '       ' → logprob: -14.288482666015625

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008022275753319263
    2. 'self' → logprob: -5.133022308349609
    3. '   ' → logprob: -6.508022308349609
    4. ' self' → logprob: -8.00802230834961
    5. 'def' → logprob: -8.25802230834961
    6. '
' → logprob: -13.13302230834961
    7. '	self' → logprob: -13.63302230834961
    8. ',' → logprob: -13.75802230834961
    9. '      ' → logprob: -14.25802230834961
    10. ' def' → logprob: -14.25802230834961

Token 259: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01694650389254093
    2. '       ' → logprob: -4.266946315765381
    3. ' self' → logprob: -5.891946315765381
    4. '   ' → logprob: -11.141946792602539
    5. '	self' → logprob: -13.266946792602539
    6. '
' → logprob: -14.516946792602539
    7. ' ' → logprob: -15.391946792602539
    8. 'def' → logprob: -15.641946792602539
    9. '     ' → logprob: -16.76694679260254
    10. '      ' → logprob: -16.76694679260254

Token 260: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000579719664528966
    2. ' .' → logprob: -8.125579833984375
    3. '.current' → logprob: -9.375579833984375
    4. '._' → logprob: -9.625579833984375
    5. '.upper' → logprob: -9.625579833984375
    6. '.initial' → logprob: -10.750579833984375
    7. '.start' → logprob: -11.250579833984375
    8. '.sequence' → logprob: -12.125579833984375
    9. 'chooser' → logprob: -12.125579833984375
    10. '.n' → logprob: -12.375579833984375

Token 261: 'chooser' (ID: 140811)
  Prédit: 'chooser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chooser' → logprob: -6.0391463193809614e-05
    2. 'cho' → logprob: -10.250060081481934
    3. '_' → logprob: -11.000060081481934
    4. ' chooser' → logprob: -12.500060081481934
    5. 'choose' → logprob: -13.750060081481934
    6. 'upper' → logprob: -14.000060081481934
    7. 'current' → logprob: -14.500060081481934
    8. 'choice' → logprob: -14.750060081481934
    9. '_ch' → logprob: -14.875060081481934
    10. 'chos' → logprob: -15.000060081481934

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269584596157074
    2. '=' → logprob: -2.1269583702087402
    3. '   ' → logprob: -10.876958847045898
    4. ' ' → logprob: -12.751958847045898
    5. '.' → logprob: -12.876958847045898
    6. '    ' → logprob: -13.001958847045898
    7. '       ' → logprob: -14.126958847045898
    8. ',' → logprob: -14.126958847045898
    9. '  ' → logprob: -14.626958847045898
    10. ':' → logprob: -14.876958847045898

Token 263: ' chooser' (ID: 192073)
  Prédit: 'chooser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chooser' → logprob: -0.018154039978981018
    2. ' chooser' → logprob: -4.018154144287109
    3. 'cho' → logprob: -12.51815414428711
    4. 'Chooser' → logprob: -15.64315414428711
    5. 'choose' → logprob: -15.89315414428711
    6. 'choice' → logprob: -17.14315414428711
    7. ' choisir' → logprob: -18.14315414428711
    8. 'changer' → logprob: -18.89315414428711
    9. '
' → logprob: -19.01815414428711
    10. '   ' → logprob: -19.01815414428711

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009232500451616943
    2. '
' → logprob: -7.375923156738281
    3. 'self' → logprob: -8.250923156738281
    4. ' self' → logprob: -10.750923156738281
    5. '   ' → logprob: -11.375923156738281
    6. ',' → logprob: -13.375923156738281
    7. '	self' → logprob: -15.375923156738281
    8. '	' → logprob: -15.500923156738281
    9. '        
' → logprob: -15.875923156738281
    10. ' ' → logprob: -16.25092315673828

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035048185964114964
    2. 'self' → logprob: -8.125350952148438
    3. ' self' → logprob: -9.875350952148438
    4. '   ' → logprob: -13.000350952148438
    5. '
' → logprob: -14.750350952148438
    6. 'def' → logprob: -16.250350952148438
    7. '	self' → logprob: -16.250350952148438
    8. '	' → logprob: -17.250350952148438
    9. ',' → logprob: -17.625350952148438
    10. '        
' → logprob: -17.875350952148438

Token 266: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000522650487255305
    2. '       ' → logprob: -8.25052261352539
    3. ' self' → logprob: -8.25052261352539
    4. '   ' → logprob: -16.12552261352539
    5. '
' → logprob: -17.00052261352539
    6. '        
' → logprob: -17.62552261352539
    7. '	self' → logprob: -18.25052261352539
    8. '      ' → logprob: -18.62552261352539
    9. '     ' → logprob: -19.37552261352539
    10. ' ' → logprob: -19.87552261352539

Token 267: '.upper' (ID: 75082)
  Prédit: '.upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.upper' → logprob: -0.0032316597644239664
    2. '.' → logprob: -5.753231525421143
    3. ' .' → logprob: -10.5032320022583
    4. '.limit' → logprob: -11.8782320022583
    5. '._' → logprob: -12.0032320022583
    6. '.lower' → logprob: -12.2532320022583
    7. '.initial' → logprob: -13.3782320022583
    8. '.current' → logprob: -13.3782320022583
    9. '.bound' → logprob: -13.7532320022583
    10. '.ul' → logprob: -14.1282320022583

Token 268: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -1.1160349458805285e-05
    2. '_bounds' → logprob: -12.250011444091797
    3. '_limit' → logprob: -12.750011444091797
    4. '_b' → logprob: -13.000011444091797
    5. '_' → logprob: -15.125011444091797
    6. '       ' → logprob: -15.625011444091797
    7. ' _' → logprob: -15.750011444091797
    8. '_boundary' → logprob: -16.625011444091797
    9. ')_' → logprob: -17.000011444091797
    10. '_value' → logprob: -17.375011444091797

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519403100013733
    2. '=' → logprob: -1.5019402503967285
    3. ' ' → logprob: -11.501940727233887
    4. '   ' → logprob: -14.751940727233887
    5. ':' → logprob: -15.376940727233887
    6. '    ' → logprob: -15.501940727233887
    7. ',' → logprob: -16.00193977355957
    8. '  ' → logprob: -17.25193977355957
    9. ' ,' → logprob: -17.37693977355957
    10. '=int' → logprob: -17.37693977355957

Token 270: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.20141547918319702
    2. ' upper' → logprob: -1.7014155387878418
    3. '   ' → logprob: -14.076415061950684
    4. '1' → logprob: -14.201415061950684
    5. '.upper' → logprob: -15.201415061950684
    6. ' ' → logprob: -15.701415061950684
    7. '       ' → logprob: -16.076416015625
    8. '_upper' → logprob: -16.701416015625
    9. '100' → logprob: -17.201416015625
    10. 'up' → logprob: -17.951416015625

Token 271: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -2.696889623621246e-06
    2. '_bounds' → logprob: -13.75000286102295
    3. '_b' → logprob: -15.00000286102295
    4. ' ' → logprob: -15.75000286102295
    5. ' _' → logprob: -16.000001907348633
    6. 'Bound' → logprob: -16.000001907348633
    7. 'bound' → logprob: -16.000001907348633
    8. '   ' → logprob: -16.000001907348633
    9. '_' → logprob: -16.250001907348633
    10. '_BOUND' → logprob: -16.375001907348633

Token 272: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14401976764202118
    2. '
' → logprob: -2.144019842147827
    3. 'def' → logprob: -4.519019603729248
    4. '    
' → logprob: -5.769019603729248
    5. '<|end|>' → logprob: -6.144019603729248
    6. ' def' → logprob: -8.519020080566406
    7. '  
' → logprob: -8.644020080566406
    8. '        
' → logprob: -9.144020080566406
    9. '<|end|>' → logprob: -9.394020080566406
    10. '

' → logprob: -10.019020080566406

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06209820881485939
    2. 'def' → logprob: -2.812098264694214
    3. ' def' → logprob: -9.687098503112793
    4. '
' → logprob: -9.937098503112793
    5. '    
' → logprob: -10.937098503112793
    6. '	def' → logprob: -13.812098503112793
    7. '        
' → logprob: -15.062098503112793
    8. '<|end|>' → logprob: -15.062098503112793
    9. '```' → logprob: -15.562098503112793
    10. '  ' → logprob: -15.937098503112793

Token 274: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.75
    4. '
' → logprob: -20.875
    5. '	def' → logprob: -23.25
    6. '    
' → logprob: -23.375
    7. 'from' → logprob: -24.25
    8. '```' → logprob: -24.75
    9. ' ' → logprob: -25.125
    10. 'Def' → logprob: -25.75

Token 275: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3409508466720581
    2. 'generate' → logprob: -1.340950846672058
    3. 'def' → logprob: -3.9659509658813477
    4. 'sequence' → logprob: -5.590950965881348
    5. ' __' → logprob: -6.340950965881348
    6. 'iter' → logprob: -6.590950965881348
    7. ' generate' → logprob: -7.465950965881348
    8. 'iterate' → logprob: -7.840950965881348
    9. 'iterator' → logprob: -8.340950965881348
    10. ' sequence' → logprob: -9.090950965881348

Token 276: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -1.3306015716807451e-05
    2. 'init' → logprob: -11.25001335144043
    3. 'call' → logprob: -15.37501335144043
    4. '_iter' → logprob: -17.75001335144043
    5. 'iterator' → logprob: -17.75001335144043
    6. 'next' → logprob: -19.12501335144043
    7. 'iterate' → logprob: -19.62501335144043
    8. 'ait' → logprob: -21.12501335144043
    9. ' iter' → logprob: -21.12501335144043
    10. 'ITER' → logprob: -22.00001335144043

Token 277: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0001867326645879075
    2. '__' → logprob: -8.875186920166016
    3. '__(
' → logprob: -10.000186920166016
    4. '(self' → logprob: -13.875186920166016
    5. '_(' → logprob: -15.250186920166016
    6. '(' → logprob: -16.500186920166016
    7. '_' → logprob: -16.500186920166016
    8. '__('' → logprob: -16.500186920166016
    9. '```' → logprob: -17.500186920166016
    10. '__((' → logprob: -17.500186920166016

Token 278: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.896309739408025e-07
    2. ' self' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.875
    4. '       ' → logprob: -17.5
    5. '
' → logprob: -17.75
    6. ')' → logprob: -18.5
    7. 's' → logprob: -21.75
    8. ' ' → logprob: -21.875
    9. '):
' → logprob: -21.875
    10. '	self' → logprob: -22.125

Token 279: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014401480555534363
    2. ',' → logprob: -4.514401435852051
    3. ')' → logprob: -6.139401435852051
    4. '(self' → logprob: -8.13940143585205
    5. ')(' → logprob: -8.26440143585205
    6. '   ' → logprob: -8.38940143585205
    7. '):' → logprob: -8.63940143585205
    8. '):
' → logprob: -9.13940143585205
    9. '       ' → logprob: -9.76440143585205
    10. ',self' → logprob: -10.51440143585205

Token 280: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.7160572409629822
    2. '->' → logprob: -1.091057300567627
    3. '(self' → logprob: -2.466057300567627
    4. 'self' → logprob: -2.966057300567627
    5. ')' → logprob: -3.966057300567627
    6. ':' → logprob: -4.091057300567627
    7. '   ' → logprob: -6.841057300567627
    8. '       ' → logprob: -7.091057300567627
    9. ')->' → logprob: -7.466057300567627
    10. ':
' → logprob: -8.091056823730469

Token 281: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.06275616586208344
    2. ' Iterator' → logprob: -2.812756061553955
    3. '   ' → logprob: -7.187756061553955
    4. '	Iterator' → logprob: -10.437756538391113
    5. '       ' → logprob: -13.437756538391113
    6. 'Generator' → logprob: -15.062756538391113
    7. '.Iterator' → logprob: -15.187756538391113
    8. '_iterator' → logprob: -15.312756538391113
    9. ' ' → logprob: -15.437756538391113
    10. 'Iterable' → logprob: -15.687756538391113

Token 282: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.165027217415627e-05
    2. '[' → logprob: -11.000021934509277
    3. ' [' → logprob: -12.625021934509277
    4. '   ' → logprob: -14.000021934509277
    5. '[Int' → logprob: -15.125021934509277
    6. 'int' → logprob: -15.750021934509277
    7. '[in' → logprob: -15.875021934509277
    8. ':' → logprob: -17.12502098083496
    9. '<int' → logprob: -17.12502098083496
    10. '[
' → logprob: -17.12502098083496

Token 283: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06200723350048065
    2. '):' → logprob: -3.187007188796997
    3. ':' → logprob: -4.812007427215576
    4. ']:
' → logprob: -4.937007427215576
    5. '):
' → logprob: -5.812007427215576
    6. ']:
' → logprob: -8.812006950378418
    7. ':
' → logprob: -9.187006950378418
    8. ']' → logprob: -9.312006950378418
    9. '   ' → logprob: -9.937006950378418
    10. '       ' → logprob: -10.187006950378418

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.709308167453855e-05
    2. '
' → logprob: -10.625086784362793
    3. 'self' → logprob: -10.625086784362793
    4. ' self' → logprob: -11.125086784362793
    5. ':' → logprob: -12.125086784362793
    6. 'n' → logprob: -12.250086784362793
    7. '        
' → logprob: -12.250086784362793
    8. '```' → logprob: -12.375086784362793
    9. ',' → logprob: -13.500086784362793
    10. '   ' → logprob: -14.500086784362793

Token 285: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5932101011276245
    2. '       ' → logprob: -1.2182101011276245
    3. 'self' → logprob: -2.468210220336914
    4. 'def' → logprob: -3.218210220336914
    5. 'current' → logprob: -3.968210220336914
    6. 'return' → logprob: -5.343210220336914
    7. '   ' → logprob: -6.843210220336914
    8. 'class' → logprob: -6.968210220336914
    9. 'raise' → logprob: -7.468210220336914
    10. 'yield' → logprob: -8.218210220336914

Token 286: ' This' (ID: 1328)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4724045991897583
    2. 'def' → logprob: -1.2224045991897583
    3. 'current' → logprob: -2.9724044799804688
    4. '       ' → logprob: -4.222404479980469
    5. 'return' → logprob: -4.472404479980469
    6. 'raise' → logprob: -6.597404479980469
    7. 'self' → logprob: -6.972404479980469
    8. 'class' → logprob: -7.472404479980469
    9. '   ' → logprob: -7.597404479980469
    10. 'yield' → logprob: -7.972404479980469

Token 287: ' iterator' (ID: 30787)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4514431357383728
    2. 'def' → logprob: -1.0764431953430176
    3. ' is' → logprob: -3.9514431953430176
    4. ':' → logprob: -6.951443195343018
    5. ' ' → logprob: -7.576443195343018
    6. '    ' → logprob: -8.07644271850586
    7. '.' → logprob: -8.95144271850586
    8. ' will' → logprob: -8.95144271850586
    9. '   ' → logprob: -9.20144271850586
    10. '  ' → logprob: -9.32644271850586

Token 288: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0726410150527954
    2. '       ' → logprob: -1.0726410150527954
    3. 'def' → logprob: -2.447640895843506
    4. '{' → logprob: -2.572640895843506
    5. ' {' → logprob: -3.697640895843506
    6. ' def' → logprob: -3.697640895843506
    7. '   ' → logprob: -3.822640895843506
    8. '=' → logprob: -4.197640895843506
    9. ':
' → logprob: -4.447640895843506
    10. ' starts' → logprob: -4.572640895843506

Token 289: ' undefined' (ID: 10118)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.478549987077713
    2. '       ' → logprob: -1.3535499572753906
    3. 'not' → logprob: -3.6035499572753906
    4. 'self' → logprob: -3.7285499572753906
    5. 'defined' → logprob: -3.9785499572753906
    6. ' not' → logprob: -4.228549957275391
    7. '   ' → logprob: -4.353549957275391
    8. 'n' → logprob: -4.603549957275391
    9. ' def' → logprob: -5.353549957275391
    10. '...' → logprob: -6.103549957275391

Token 290: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14723160862922668
    2. '       ' → logprob: -2.5222315788269043
    3. ':' → logprob: -3.6472315788269043
    4. ':
' → logprob: -4.772231578826904
    5. '        
' → logprob: -5.022231578826904
    6. 'def' → logprob: -5.147231578826904
    7. '   ' → logprob: -5.647231578826904
    8. '(self' → logprob: -7.522231578826904
    9. '  
' → logprob: -7.522231578826904
    10. '():' → logprob: -7.647231578826904

Token 291: ' initialization' (ID: 41684)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' this' → logprob: -1.222358226776123
    2. 'this' → logprob: -1.347358226776123
    3. 'def' → logprob: -1.722358226776123
    4. 'the' → logprob: -2.097358226776123
    5. ' the' → logprob: -2.722358226776123
    6. 'self' → logprob: -3.222358226776123
    7. ' ' → logprob: -4.847358226776123
    8. 'present' → logprob: -4.847358226776123
    9. '       ' → logprob: -5.847358226776123
    10. ' def' → logprob: -5.972358226776123

Token 292: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8691824078559875
    2. ':' → logprob: -0.9941824078559875
    3. ':
' → logprob: -2.6191823482513428
    4. '   ' → logprob: -2.7441823482513428
    5. '
' → logprob: -3.1191823482513428
    6. '<|end|>' → logprob: -4.494182586669922
    7. ' and' → logprob: -5.869182586669922
    8. '():' → logprob: -6.119182586669922
    9. 'def' → logprob: -6.369182586669922
    10. ',' → logprob: -6.619182586669922

Token 293: ' user' (ID: 1825)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03550504148006439
    2. 'n' → logprob: -4.6605048179626465
    3. 'self' → logprob: -4.9105048179626465
    4. 'def' → logprob: -5.0355048179626465
    5. 'raise' → logprob: -5.0355048179626465
    6. ' raise' → logprob: -5.6605048179626465
    7. 'return' → logprob: -7.6605048179626465
    8. '   ' → logprob: -8.160505294799805
    9. 'yield' → logprob: -8.160505294799805
    10. '...' → logprob: -9.660505294799805

Token 294: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07704722136259079
    2. ':' → logprob: -4.202047348022461
    3. '
' → logprob: -4.202047348022461
    4. ':
' → logprob: -4.577047348022461
    5. 'def' → logprob: -5.077047348022461
    6. ' raise' → logprob: -5.077047348022461
    7. 'self' → logprob: -5.452047348022461
    8. 'raise' → logprob: -5.452047348022461
    9. '   ' → logprob: -5.577047348022461
    10. '        
' → logprob: -5.702047348022461

Token 295: ' call' (ID: 2421)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3677133321762085
    2. 'define' → logprob: -1.3677133321762085
    3. '   ' → logprob: -1.8677133321762085
    4. 'raise' → logprob: -2.617713451385498
    5. 'def' → logprob: -2.992713451385498
    6. 'provide' → logprob: -2.992713451385498
    7. ' provide' → logprob: -3.492713451385498
    8. 'call' → logprob: -3.617713451385498
    9. ' define' → logprob: -3.867713451385498
    10. 'initialize' → logprob: -3.992713451385498

Token 296: ' with' (ID: 483)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5528817772865295
    2. '__' → logprob: -1.4278817176818848
    3. 'def' → logprob: -2.0528817176818848
    4. 'next' → logprob: -3.4278817176818848
    5. ' self' → logprob: -5.552881717681885
    6. '       ' → logprob: -5.552881717681885
    7. 'raise' → logprob: -5.552881717681885
    8. 'yield' → logprob: -5.927881717681885
    9. '   ' → logprob: -6.052881717681885
    10. 'iter' → logprob: -6.177881717681885

Token 297: ' start' (ID: 1604)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.727419376373291
    2. 'self' → logprob: -1.102419376373291
    3. 'yield' → logprob: -2.727419376373291
    4. 'n' → logprob: -3.477419376373291
    5. '0' → logprob: -4.352419376373291
    6. '       ' → logprob: -4.602419376373291
    7. ' self' → logprob: -4.602419376373291
    8. 'start' → logprob: -4.727419376373291
    9. ' def' → logprob: -5.102419376373291
    10. '(self' → logprob: -5.227419376373291

Token 298: ' n' (ID: 297)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5048773884773254
    2. '(n' → logprob: -2.2548773288726807
    3. '(' → logprob: -2.5048773288726807
    4. '   ' → logprob: -2.6298773288726807
    5. 'def' → logprob: -3.3798773288726807
    6. '  
' → logprob: -4.12987756729126
    7. '(self' → logprob: -4.50487756729126
    8. '       ' → logprob: -4.50487756729126
    9. '    
' → logprob: -4.87987756729126
    10. ' (' → logprob: -5.00487756729126

Token 299: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6111206412315369
    2. '       ' → logprob: -1.9861207008361816
    3. '
' → logprob: -2.2361207008361816
    4. '(n' → logprob: -3.1111207008361816
    5. 'def' → logprob: -3.3611207008361816
    6. '(' → logprob: -3.8611207008361816
    7. ' raise' → logprob: -3.8611207008361816
    8. '    
' → logprob: -4.111120700836182
    9. ' (' → logprob: -4.361120700836182
    10. '  
' → logprob: -4.861120700836182

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007499674800783396
    2. '   ' → logprob: -5.632499694824219
    3. 'def' → logprob: -5.882499694824219
    4. '...' → logprob: -8.257499694824219
    5. ' raise' → logprob: -8.632499694824219
    6. ' def' → logprob: -9.257499694824219
    7. 'raise' → logprob: -9.382499694824219
    8. '           ' → logprob: -9.882499694824219
    9. '    ' → logprob: -10.007499694824219
    10. '
' → logprob: -10.132499694824219

Token 301: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22968749701976776
    2. 'raise' (adapté à ' raise') → logprob: -1.6046874523162842
    3. 'self' → logprob: -6.729687690734863
    4. 'yield' → logprob: -6.854687690734863
    5. 'def' → logprob: -7.354687690734863
    6. 'return' → logprob: -7.479687690734863
    7. ' raise' → logprob: -7.479687690734863
    8. '   ' → logprob: -8.979687690734863
    9. 'pass' → logprob: -9.854687690734863
    10. 'n' → logprob: -11.229687690734863

Token 302: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.2519635558128357
    2. 'Not' → logprob: -1.5019636154174805
    3. ' Runtime' → logprob: -11.25196361541748
    4. 'Runtime' → logprob: -11.62696361541748
    5. 'Type' → logprob: -12.00196361541748
    6. '_Not' → logprob: -12.75196361541748
    7. ' Type' → logprob: -13.62696361541748
    8. '(Not' → logprob: -13.87696361541748
    9. 'Stop' → logprob: -14.75196361541748
    10. '_not' → logprob: -14.75196361541748

Token 303: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0002112886286340654
    2. 'implemented' → logprob: -8.500211715698242
    3. 'Impl' → logprob: -12.375211715698242
    4. 'Im' → logprob: -13.250211715698242
    5. 'Implement' → logprob: -14.125211715698242
    6. '```' → logprob: -14.625211715698242
    7. 'm' → logprob: -16.000211715698242
    8. 'mp' → logprob: -16.000211715698242
    9. 'Imp' → logprob: -16.000211715698242
    10. 'Initialized' → logprob: -17.250211715698242

Token 304: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.4617256056226324e-05
    2. 'error' → logprob: -11.875014305114746
    3. 'rror' → logprob: -11.875014305114746
    4. 'Warning' → logprob: -15.125014305114746
    5. 'Token' → logprob: -16.625015258789062
    6. '_error' → logprob: -16.875015258789062
    7. 'ror' → logprob: -17.250015258789062
    8. ' Error' → logprob: -17.375015258789062
    9. '   ' → logprob: -17.500015258789062
    10. 'ed' → logprob: -17.500015258789062

Token 305: '("' (ID: 568)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8907472491264343
    2. '<|end|>' → logprob: -1.140747308731079
    3. '   ' → logprob: -1.515747308731079
    4. 'def' → logprob: -3.265747308731079
    5. '<|end|>' → logprob: -5.2657470703125
    6. '(' → logprob: -6.1407470703125
    7. '

' → logprob: -6.1407470703125
    8. ' def' → logprob: -7.3907470703125
    9. '(
' → logprob: -8.0157470703125
    10. '()' → logprob: -8.1407470703125

Token 306: 'Use' (ID: 8470)
  Prédit: 'Use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Use' → logprob: -0.13298065960407257
    2. 'To' → logprob: -2.5079805850982666
    3. 'Please' → logprob: -5.007980823516846
    4. '__' → logprob: -5.257980823516846
    5. 'Cannot' → logprob: -5.757980823516846
    6. 'Implement' → logprob: -5.757980823516846
    7. 'Coll' → logprob: -5.882980823516846
    8. 'Provide' → logprob: -5.882980823516846
    9. 'Iteration' → logprob: -5.882980823516846
    10. 'This' → logprob: -6.007980823516846

Token 307: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.5504106283187866
    2. 'self' → logprob: -1.9254106283187866
    3. 'def' → logprob: -2.050410747528076
    4. '__' → logprob: -2.050410747528076
    5. ' the' → logprob: -2.550410747528076
    6. ' self' → logprob: -2.800410747528076
    7. ' start' → logprob: -2.800410747528076
    8. ' a' → logprob: -3.050410747528076
    9. ' def' → logprob: -3.300410747528076
    10. 'the' → logprob: -3.675410747528076

Token 308: '(n' (ID: 2406)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.900592565536499
    2. '(self' → logprob: -1.025592565536499
    3. '(' → logprob: -2.775592565536499
    4. '_at' → logprob: -3.025592565536499
    5. '_iter' → logprob: -3.525592565536499
    6. '_sequence' → logprob: -3.900592565536499
    7. '(n' → logprob: -4.025592803955078
    8. ' method' → logprob: -4.400592803955078
    9. '_with' → logprob: -4.525592803955078
    10. '_' → logprob: -5.025592803955078

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01552323717623949
    2. '=' → logprob: -4.390523433685303
    3. ')")' → logprob: -6.390523433685303
    4. '=start' → logprob: -7.140523433685303
    5. '_start' → logprob: -8.140522956848145
    6. 'start' → logprob: -9.515522956848145
    7. ' )' → logprob: -10.140522956848145
    8. '=n' → logprob: -10.390522956848145
    9. ')`' → logprob: -10.765522956848145
    10. '=int' → logprob: -11.765522956848145

Token 310: ' method' (ID: 2595)
  Prédit: ' method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' method' → logprob: -0.1890001893043518
    2. ' to' → logprob: -2.564000129699707
    3. '")' → logprob: -3.314000129699707
    4. ')' → logprob: -3.814000129699707
    5. '()' → logprob: -4.314000129699707
    6. ' for' → logprob: -4.939000129699707
    7. ')")' → logprob: -5.439000129699707
    8. '")

' → logprob: -5.564000129699707
    9. 'def' → logprob: -6.064000129699707
    10. 'method' → logprob: -6.189000129699707

Token 311: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1622668355703354
    2. '")' → logprob: -2.537266731262207
    3. '")

' → logprob: -2.787266731262207
    4. ' to' → logprob: -5.287266731262207
    5. ')' → logprob: -6.287266731262207
    6. 'def' → logprob: -7.037266731262207
    7. '")
' → logprob: -7.287266731262207
    8. ')

' → logprob: -8.037266731262207
    9. ' for' → logprob: -8.912266731262207
    10. '

' → logprob: -10.287266731262207

Token 312: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5177848935127258
    2. ' get' → logprob: -1.892784833908081
    3. 'iterate' → logprob: -2.517784833908081
    4. 'start' → logprob: -2.642784833908081
    5. 'initialize' → logprob: -4.01778507232666
    6. 'create' → logprob: -4.01778507232666
    7. 'ob' → logprob: -4.39278507232666
    8. ' obtain' → logprob: -4.39278507232666
    9. ' iterate' → logprob: -4.39278507232666
    10. 'begin' → logprob: -4.51778507232666

Token 313: ' iterator' (ID: 30787)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.02118389680981636
    2. ' the' → logprob: -4.146183967590332
    3. ' iterator' → logprob: -5.646183967590332
    4. 'an' → logprob: -7.271183967590332
    5. 'iterator' → logprob: -7.646183967590332
    6. ' a' → logprob: -8.146183967590332
    7. 'the' → logprob: -9.521183967590332
    8. '_iterator' → logprob: -11.021183967590332
    9. ' iter' → logprob: -11.146183967590332
    10. ' iteration' → logprob: -11.646183967590332

Token 314: ' for' (ID: 395)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.35101547837257385
    2. '")

' → logprob: -1.2260154485702515
    3. '")
' → logprob: -6.351015567779541
    4. '   ' → logprob: -7.601015567779541
    5. ')' → logprob: -8.851015090942383
    6. '")

' → logprob: -9.976015090942383
    7. 'def' → logprob: -10.226015090942383
    8. ' for' → logprob: -10.726015090942383
    9. ')")' → logprob: -10.726015090942383
    10. '.")

' → logprob: -11.351015090942383

Token 315: ' sequence' (ID: 16281)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3883339762687683
    2. 'a' → logprob: -1.388334035873413
    3. ' the' → logprob: -3.888334035873413
    4. ' specific' → logprob: -4.263333797454834
    5. ' given' → logprob: -4.763333797454834
    6. ' sequence' → logprob: -5.388333797454834
    7. ' starting' → logprob: -5.513333797454834
    8. 'specific' → logprob: -5.638333797454834
    9. 'starting' → logprob: -5.638333797454834
    10. 'the' → logprob: -5.763333797454834

Token 316: ' from' (ID: 591)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31491729617118835
    2. '")

' → logprob: -1.3149173259735107
    3. '")
' → logprob: -6.814917087554932
    4. '")

' → logprob: -8.43991756439209
    5. '.")

' → logprob: -9.31491756439209
    6. ' sequence' → logprob: -9.93991756439209
    7. 'def' → logprob: -10.06491756439209
    8. ')' → logprob: -10.31491756439209
    9. ')")' → logprob: -10.31491756439209
    10. '.")' → logprob: -10.93991756439209

Token 317: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.33400392532348633
    2. ' given' → logprob: -1.3340039253234863
    3. ' specific' → logprob: -4.709003925323486
    4. 'a' → logprob: -4.834003925323486
    5. ' start' → logprob: -6.584003925323486
    6. ' specified' → logprob: -6.959003925323486
    7. 'given' → logprob: -7.834003925323486
    8. ' starting' → logprob: -8.709003448486328
    9. ' an' → logprob: -9.084003448486328
    10. 'n' → logprob: -9.209003448486328

Token 318: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.28820767998695374
    2. '")

' → logprob: -1.4132076501846313
    3. ')' → logprob: -5.788207530975342
    4. '")

' → logprob: -6.413207530975342
    5. '\")' → logprob: -6.538207530975342
    6. ')")' → logprob: -8.0382080078125
    7. '\"' → logprob: -8.7882080078125
    8. '")
' → logprob: -8.7882080078125
    9. '.")

' → logprob: -9.7882080078125
    10. '')' → logprob: -10.1632080078125

Token 319: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3660174012184143
    2. '   ' → logprob: -1.2410173416137695
    3. '    
' → logprob: -4.3660173416137695
    4. '<|end|>' → logprob: -6.3660173416137695
    5. ' 
' → logprob: -7.2410173416137695
    6. '  
' → logprob: -7.2410173416137695
    7. 'newline' → logprob: -8.24101734161377
    8. '

' → logprob: -8.36601734161377
    9. '\n' → logprob: -8.49101734161377
    10. 'def' → logprob: -8.61601734161377

Token 320: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08664479106664658
    2. 'def' (adapté à ' def') → logprob: -2.5866448879241943
    3. '
' → logprob: -5.711644649505615
    4. ' def' → logprob: -5.836644649505615
    5. '    
' → logprob: -6.586644649505615
    6. '	def' → logprob: -9.461645126342773
    7. ' 
' → logprob: -11.336645126342773
    8. '  
' → logprob: -11.961645126342773
    9. ' ' → logprob: -12.211645126342773
    10. '

' → logprob: -12.461645126342773

Token 321: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.25193408131599426
    2. 'start' → logprob: -1.5019340515136719
    3. ' def' → logprob: -12.876934051513672
    4. 'def' → logprob: -13.251934051513672
    5. ' ' → logprob: -15.001934051513672
    6. '_start' → logprob: -16.501934051513672
    7. ' ' → logprob: -16.501934051513672
    8. '
' → logprob: -17.001934051513672
    9. 'star' → logprob: -17.126934051513672
    10. '(start' → logprob: -17.876934051513672

Token 322: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. 'self' → logprob: -15.625021934509277
    4. ' (' → logprob: -16.12502098083496
    5. '(
' → logprob: -17.12502098083496
    6. '(s' → logprob: -18.12502098083496
    7. '}(' → logprob: -19.00002098083496
    8. 'def' → logprob: -19.12502098083496
    9. '(n' → logprob: -19.12502098083496
    10. '   ' → logprob: -19.25002098083496

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002465582510922104
    2. 'self' → logprob: -8.50024700164795
    3. ' ,' → logprob: -10.50024700164795
    4. 'n' → logprob: -11.87524700164795
    5. ',n' → logprob: -12.25024700164795
    6. '(self' → logprob: -13.12524700164795
    7. ' self' → logprob: -14.37524700164795
    8. ',self' → logprob: -14.75024700164795
    9. ')' → logprob: -15.37524700164795
    10. ',
' → logprob: -15.75024700164795

Token 324: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019014675170183182
    2. 'self' → logprob: -4.144014835357666
    3. ' n' → logprob: -6.019014835357666
    4. 'start' → logprob: -7.894014835357666
    5. ' self' → logprob: -9.394014358520508
    6. '   ' → logprob: -9.519014358520508
    7. '       ' → logprob: -12.019014358520508
    8. ' start' → logprob: -12.394014358520508
    9. '    ' → logprob: -13.769014358520508
    10. ' ' → logprob: -14.144014358520508

Token 325: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001858982432167977
    2. ':int' → logprob: -8.6251859664917
    3. '):' → logprob: -12.5001859664917
    4. ' :' → logprob: -13.1251859664917
    5. ')' → logprob: -14.7501859664917
    6. '   ' → logprob: -15.8751859664917
    7. '):
' → logprob: -17.500185012817383
    8. 'int' → logprob: -17.625185012817383
    9. ' ):' → logprob: -17.750185012817383
    10. ' )' → logprob: -19.375185012817383

Token 326: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0789584144949913
    2. ' int' → logprob: -2.578958511352539
    3. ')' → logprob: -9.828958511352539
    4. '   ' → logprob: -11.453958511352539
    5. ':int' → logprob: -13.703958511352539
    6. ' ' → logprob: -14.203958511352539
    7. '(int' → logprob: -14.578958511352539
    8. ' )' → logprob: -15.203958511352539
    9. '       ' → logprob: -15.203958511352539
    10. '	int' → logprob: -15.453958511352539

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.15310683415737e-05
    2. '):' → logprob: -11.000021934509277
    3. ' )' → logprob: -12.625021934509277
    4. '):
' → logprob: -13.750021934509277
    5. '   ' → logprob: -15.250021934509277
    6. ')->' → logprob: -17.62502098083496
    7. '):

' → logprob: -17.87502098083496
    8. '       ' → logprob: -18.25002098083496
    9. ':' → logprob: -18.37502098083496
    10. '):
' → logprob: -18.50002098083496

Token 328: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.31272435188293457
    2. ')' → logprob: -1.9377243518829346
    3. ':' → logprob: -2.8127243518829346
    4. '->' → logprob: -2.9377243518829346
    5. '   ' → logprob: -4.5627241134643555
    6. ')->' → logprob: -8.187724113464355
    7. '       ' → logprob: -8.437724113464355
    8. ':
' → logprob: -8.812724113464355
    9. ' ' → logprob: -8.937724113464355
    10. '>' → logprob: -9.437724113464355

Token 329: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.005268145352602005
    2. ' Iterator' → logprob: -5.255268096923828
    3. '	Iterator' → logprob: -11.755268096923828
    4. 'Iterable' → logprob: -12.380268096923828
    5. '"' → logprob: -12.630268096923828
    6. ' ' → logprob: -12.755268096923828
    7. ''' → logprob: -12.755268096923828
    8. '_iterator' → logprob: -12.880268096923828
    9. '   ' → logprob: -13.005268096923828
    10. 'Generator' → logprob: -13.005268096923828

Token 330: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.25
    3. '[' → logprob: -17.0
    4. ' [' → logprob: -18.25
    5. '<int' → logprob: -18.375
    6. '[Int' → logprob: -18.625
    7. ':int' → logprob: -19.125
    8. '[
' → logprob: -19.375
    9. ' int' → logprob: -20.0
    10. ':' → logprob: -20.0

Token 331: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18350426852703094
    2. '):
' → logprob: -1.9335042238235474
    3. ')' → logprob: -3.808504343032837
    4. '):
' → logprob: -7.808504104614258
    5. ':' → logprob: -8.433504104614258
    6. '   ' → logprob: -8.808504104614258
    7. '       ' → logprob: -11.058504104614258
    8. ']:' → logprob: -11.433504104614258
    9. ' ):' → logprob: -11.558504104614258
    10. ':
' → logprob: -11.808504104614258

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3915141355246305e-05
    2. ' current' → logprob: -12.25002384185791
    3. 'current' → logprob: -12.37502384185791
    4. 'while' → logprob: -12.50002384185791
    5. ' while' → logprob: -12.62502384185791
    6. 'n' → logprob: -12.75002384185791
    7. ' if' → logprob: -13.00002384185791
    8. 'num' → logprob: -14.75002384185791
    9. '   ' → logprob: -14.87502384185791
    10. ' number' → logprob: -15.12502384185791

Token 333: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.3113469183444977
    2. '       ' → logprob: -1.8113468885421753
    3. 'while' → logprob: -2.311347007751465
    4. ' current' → logprob: -5.561347007751465
    5. 'value' → logprob: -7.936347007751465
    6. ' while' → logprob: -8.061347007751465
    7. 'if' → logprob: -8.061347007751465
    8. 'yield' → logprob: -9.561347007751465
    9. 'num' → logprob: -10.686347007751465
    10. 'number' → logprob: -11.061347007751465

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890157401561737
    2. '=' → logprob: -2.578901529312134
    3. ' ' → logprob: -11.453901290893555
    4. ')' → logprob: -14.953901290893555
    5. ':' → logprob: -14.953901290893555
    6. ' =
' → logprob: -16.203901290893555
    7. ',' → logprob: -16.203901290893555
    8. '=n' → logprob: -16.203901290893555
    9. ' ' → logprob: -16.703901290893555
    10. '_' → logprob: -16.828901290893555

Token 335: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006716079078614712
    2. ' n' → logprob: -5.006716251373291
    3. '       ' → logprob: -14.256715774536133
    4. '	n' → logprob: -16.631715774536133
    5. '   ' → logprob: -18.756715774536133
    6. '
' → logprob: -19.256715774536133
    7. '_n' → logprob: -19.381715774536133
    8. '```' → logprob: -19.756715774536133
    9. '        ' → logprob: -20.006715774536133
    10. '$n' → logprob: -20.506715774536133

Token 336: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0031336324755102396
    2. 'while' → logprob: -6.378133773803711
    3. 'yield' → logprob: -7.628133773803711
    4. ' while' → logprob: -8.253133773803711
    5. '        
' → logprob: -8.253133773803711
    6. '
' → logprob: -8.628133773803711
    7. '       ' → logprob: -9.378133773803711
    8. ' 
' → logprob: -9.628133773803711
    9. '    
' → logprob: -11.128133773803711
    10. ',
' → logprob: -11.128133773803711

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28423282504081726
    2. '
' → logprob: -1.4092328548431396
    3. 'yield' → logprob: -6.5342326164245605
    4. ' while' → logprob: -7.6592326164245605
    5. 'while' → logprob: -7.7842326164245605
    6. '        
' → logprob: -8.159233093261719
    7. ' yield' → logprob: -8.784233093261719
    8. '
' → logprob: -9.659233093261719
    9. ' 
' → logprob: -10.159233093261719
    10. '	yield' → logprob: -10.409233093261719

Token 338: ' yield' (ID: 14376)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16052600741386414
    2. 'yield' (adapté à ' yield') → logprob: -1.9105260372161865
    3. '       ' → logprob: -8.160526275634766
    4. ' yield' → logprob: -11.785526275634766
    5. 'if' → logprob: -12.285526275634766
    6. ' while' → logprob: -12.785526275634766
    7. '
' → logprob: -14.410526275634766
    8. '        
' → logprob: -15.410526275634766
    9. '	yield' → logprob: -15.785526275634766
    10. 'y' → logprob: -16.035526275634766

Token 339: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03804183006286621
    2. ' current' → logprob: -3.288041830062866
    3. '       ' → logprob: -15.538042068481445
    4. '	current' → logprob: -15.913042068481445
    5. '
' → logprob: -17.413042068481445
    6. '(current' → logprob: -17.413042068481445
    7. '$current' → logprob: -17.538042068481445
    8. 'urrent' → logprob: -18.163042068481445
    9. '.current' → logprob: -18.288042068481445
    10. ' ' → logprob: -18.288042068481445

Token 340: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6451987624168396
    2. ' 
' → logprob: -0.8951987624168396
    3. '       ' → logprob: -3.6451988220214844
    4. '        
' → logprob: -3.8951988220214844
    5. 'while' → logprob: -4.770198822021484
    6. ' while' → logprob: -5.020198822021484
    7. '  
' → logprob: -6.020198822021484
    8. '<|end|>' → logprob: -7.645198822021484
    9. '    
' → logprob: -7.895198822021484
    10. ' ' → logprob: -8.020198822021484

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012137800455093384
    2. 'while' → logprob: -4.5121378898620605
    3. ' while' → logprob: -6.8871378898620605
    4. '	' → logprob: -10.887137413024902
    5. '        
' → logprob: -10.887137413024902
    6. '
' → logprob: -11.137137413024902
    7. '   ' → logprob: -11.887137413024902
    8. '	while' → logprob: -12.387137413024902
    9. ' 
' → logprob: -13.387137413024902
    10. ',' → logprob: -14.262137413024902

Token 342: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -2.7014437364414334e-05
    2. '       ' → logprob: -11.00002670288086
    3. ' while' → logprob: -11.50002670288086
    4. 'try' → logprob: -16.50002670288086
    5. '
' → logprob: -17.50002670288086
    6. '```' → logprob: -18.75002670288086
    7. 'if' → logprob: -19.00002670288086
    8. '        
' → logprob: -19.12502670288086
    9. 'wh' → logprob: -20.37502670288086
    10. '	while' → logprob: -20.50002670288086

Token 343: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.002817358821630478
    2. ' current' → logprob: -5.877817153930664
    3. '1' → logprob: -11.377817153930664
    4. '   ' → logprob: -15.502817153930664
    5. '(current' → logprob: -15.627817153930664
    6. '	current' → logprob: -15.627817153930664
    7. 'cur' → logprob: -16.252817153930664
    8. ' ' → logprob: -16.627817153930664
    9. 'True' → logprob: -16.752817153930664
    10. '
' → logprob: -16.752817153930664

Token 344: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.47544094920158386
    2. '!=' → logprob: -0.9754409790039062
    3. '>' → logprob: -6.725440979003906
    4. ' >' → logprob: -8.725440979003906
    5. '!==' → logprob: -15.600440979003906
    6. 'and' → logprob: -16.100440979003906
    7. ' ' → logprob: -16.350440979003906
    8. ' not' → logprob: -16.850440979003906
    9. '()!=' → logprob: -16.850440979003906
    10. ')!=' → logprob: -17.225440979003906

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.62509536743164
    4. '```' → logprob: -18.50009536743164
    5. 'self' → logprob: -18.81259536743164
    6. '  ' → logprob: -19.06259536743164
    7. 'upper' → logprob: -19.56259536743164
    8. '`' → logprob: -19.62509536743164
    9. '=' → logprob: -19.75009536743164
    10. ' ' → logprob: -19.93759536743164

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.000009536743164
    4. 'self' → logprob: -18.750009536743164
    5. '```' → logprob: -18.812509536743164
    6. '0' → logprob: -19.375009536743164
    7. '  ' → logprob: -19.750009536743164
    8. '' → logprob: -20.250009536743164
    9. '۱' → logprob: -20.375009536743164
    10. '１' → logprob: -20.562509536743164

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7337207198143005
    2. ':
' → logprob: -0.7337207198143005
    3. ' and' → logprob: -3.2337207794189453
    4. 'and' → logprob: -8.483720779418945
    5. '       ' → logprob: -9.858720779418945
    6. '           ' → logprob: -10.108720779418945
    7. '):
' → logprob: -11.108720779418945
    8. ':
' → logprob: -11.233720779418945
    9. ':

' → logprob: -11.983720779418945
    10. ' :
' → logprob: -11.983720779418945

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009418285451829433
    2. '
' → logprob: -5.009418487548828
    3. ' current' → logprob: -7.009418487548828
    4. ' op' → logprob: -7.384418487548828
    5. 'current' → logprob: -7.509418487548828
    6. '```' → logprob: -8.009418487548828
    7. 'op' → logprob: -8.759418487548828
    8. '            
' → logprob: -9.884418487548828
    9. '       ' → logprob: -10.884418487548828
    10. ' try' → logprob: -11.884418487548828

Token 349: ' if' (ID: 538)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.06740550696849823
    2. ' op' → logprob: -2.8174054622650146
    3. '           ' → logprob: -5.817405700683594
    4. 'operation' → logprob: -6.192405700683594
    5. ' operation' → logprob: -8.442405700683594
    6. 'step' → logprob: -9.192405700683594
    7. 'choice' → logprob: -10.317405700683594
    8. ' step' → logprob: -10.817405700683594
    9. 'operator' → logprob: -12.067405700683594
    10. 'next' → logprob: -12.442405700683594

Token 350: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0023023895919322968
    2. ' current' → logprob: -6.127302169799805
    3. '           ' → logprob: -9.502302169799805
    4. '   ' → logprob: -10.502302169799805
    5. 'abs' → logprob: -12.377302169799805
    6. 'self' → logprob: -12.502302169799805
    7. '       ' → logprob: -13.252302169799805
    8. '               ' → logprob: -13.502302169799805
    9. '	current' → logprob: -13.502302169799805
    10. '                   ' → logprob: -14.127302169799805

Token 351: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22829166054725647
    2. '>' → logprob: -1.603291630744934
    3. ' <' → logprob: -6.7282915115356445
    4. ' <=' → logprob: -7.1032915115356445
    5. '<' → logprob: -8.103291511535645
    6. '<=' → logprob: -8.103291511535645
    7. ' >=' → logprob: -8.853291511535645
    8. '>=' → logprob: -9.228291511535645
    9. ' ' → logprob: -12.103291511535645
    10. '   ' → logprob: -13.978291511535645

Token 352: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048956241458654404
    2. ' self' → logprob: -3.0489561557769775
    3. '           ' → logprob: -7.923956394195557
    4. '               ' → logprob: -12.423955917358398
    5. '0' → logprob: -13.923955917358398
    6. '       ' → logprob: -14.798955917358398
    7. '=self' → logprob: -14.923955917358398
    8. '   ' → logprob: -15.048955917358398
    9. ' ' → logprob: -15.173955917358398
    10. '          ' → logprob: -15.673955917358398

Token 353: '.upper' (ID: 75082)
  Prédit: '.upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.upper' → logprob: -0.006750305183231831
    2. '.' → logprob: -5.006750106811523
    3. 'upper' → logprob: -11.006750106811523
    4. ' .' → logprob: -11.006750106811523
    5. '.lower' → logprob: -14.381750106811523
    6. '.up' → logprob: -15.131750106811523
    7. '_upper' → logprob: -15.631750106811523
    8. ' upper' → logprob: -16.256750106811523
    9. '.ul' → logprob: -16.381750106811523
    10. '   ' → logprob: -16.506750106811523

Token 354: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -5.796184723294573e-06
    2. 'bound' → logprob: -12.125005722045898
    3. '_limit' → logprob: -16.5000057220459
    4. '_bounds' → logprob: -16.5000057220459
    5. 'ound' → logprob: -16.6250057220459
    6. '_b' → logprob: -18.7500057220459
    7. 'Bound' → logprob: -19.1250057220459
    8. '-bound' → logprob: -19.2500057220459
    9. '_BOUND' → logprob: -19.2500057220459
    10. ' bound' → logprob: -19.3750057220459

Token 355: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18354348838329315
    2. ':' → logprob: -1.8085434436798096
    3. ' or' → logprob: -5.683543682098389
    4. '               ' → logprob: -9.05854320526123
    5. ' :
' → logprob: -9.30854320526123
    6. ' :' → logprob: -9.80854320526123
    7. ':return' → logprob: -9.93354320526123
    8. '           ' → logprob: -10.18354320526123
    9. ':
' → logprob: -10.80854320526123
    10. '):
' → logprob: -11.55854320526123

Token 356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01871766708791256
    2. 'raise' → logprob: -4.7687177658081055
    3. 'break' → logprob: -5.3937177658081055
    4. ' raise' → logprob: -5.6437177658081055
    5. ' break' → logprob: -6.7687177658081055
    6. '           ' → logprob: -7.6437177658081055
    7. 'return' → logprob: -8.268717765808105
    8. ' return' → logprob: -10.268717765808105
    9. '```' → logprob: -11.018717765808105
    10. '	raise' → logprob: -11.768717765808105

Token 357: ' raise' (ID: 9338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7661390900611877
    2. 'raise' (adapté à ' raise') → logprob: -0.7661390900611877
    3. '               ' → logprob: -2.766139030456543
    4. ' raise' → logprob: -5.516139030456543
    5. ' break' → logprob: -5.891139030456543
    6. 'return' → logprob: -7.391139030456543
    7. '                   ' → logprob: -10.016139030456543
    8. '           ' → logprob: -10.391139030456543
    9. '   ' → logprob: -12.891139030456543
    10. '	raise' → logprob: -13.016139030456543

Token 358: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0009142052149400115
    2. ' Value' → logprob: -7.250914096832275
    3. 'Overflow' → logprob: -8.750914573669434
    4. 'Runtime' → logprob: -10.625914573669434
    5. 'Stop' → logprob: -10.750914573669434
    6. ' Overflow' → logprob: -16.000913619995117
    7. '	Value' → logprob: -16.500913619995117
    8. ' Runtime' → logprob: -17.000913619995117
    9. '(Value' → logprob: -17.375913619995117
    10. '_value' → logprob: -18.250913619995117

Token 359: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00046546570956707
    2. 'rror' → logprob: -7.750465393066406
    3. 'alue' → logprob: -10.625465393066406
    4. 'Value' → logprob: -12.125465393066406
    5. 'ror' → logprob: -13.750465393066406
    6. 'SError' → logprob: -13.750465393066406
    7. '   ' → logprob: -14.125465393066406
    8. 'Warning' → logprob: -14.750465393066406
    9. '       ' → logprob: -15.000465393066406
    10. 'error' → logprob: -15.250465393066406

Token 360: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008144430816173553
    2. '(' → logprob: -5.508144378662109
    3. '(f' → logprob: -5.508144378662109
    4. '(
' → logprob: -12.63314437866211
    5. '('' → logprob: -15.13314437866211
    6. 'f' → logprob: -15.38314437866211
    7. '(

' → logprob: -15.75814437866211
    8. '("'' → logprob: -16.63314437866211
    9. '"' → logprob: -16.75814437866211
    10. '(
' → logprob: -18.25814437866211

Token 361: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07204252481460571
    2. ' "' → logprob: -3.322042465209961
    3. ' f' → logprob: -3.447042465209961
    4. '("' → logprob: -7.197042465209961
    5. 'f' → logprob: -7.697042465209961
    6. ''' → logprob: -9.447042465209961
    7. '(f' → logprob: -9.697042465209961
    8. ' current' → logprob: -9.947042465209961
    9. '"value' → logprob: -9.947042465209961
    10. ' ' → logprob: -10.197042465209961

Token 362: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.84554523229599
    2. '"' → logprob: -1.8455452919006348
    3. 'Current' → logprob: -1.8455452919006348
    4. 'current' → logprob: -2.0955452919006348
    5. 'Number' → logprob: -2.3455452919006348
    6. ' current' → logprob: -3.5955452919006348
    7. 'n' → logprob: -5.845545291900635
    8. 'Input' → logprob: -6.345545291900635
    9. 'f' → logprob: -6.720545291900635
    10. '"value' → logprob: -7.720545291900635

Token 363: ' {' (ID: 354)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.18436573445796967
    2. ' too' → logprob: -2.559365749359131
    3. ' exceeded' → logprob: -3.809365749359131
    4. ' exceeds' → logprob: -3.934365749359131
    5. 'current' → logprob: -4.059365749359131
    6. ' ' → logprob: -4.809365749359131
    7. ' {' → logprob: -5.059365749359131
    8. '(current' → logprob: -5.434365749359131
    9. ' "' → logprob: -5.809365749359131
    10. 'ex' → logprob: -5.934365749359131

Token 364: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07651489228010178
    2. ' current' → logprob: -2.701514959335327
    3. '{' → logprob: -5.201514720916748
    4. '}' → logprob: -7.326514720916748
    5. ' {' → logprob: -8.076515197753906
    6. '(current' → logprob: -10.201515197753906
    7. '[current' → logprob: -11.701515197753906
    8. '	current' → logprob: -11.951515197753906
    9. '"' → logprob: -12.201515197753906
    10. '$current' → logprob: -12.451515197753906

Token 365: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.0325924449716695e-05
    2. ' }' → logprob: -11.62501049041748
    3. 'ex' → logprob: -14.00001049041748
    4. ' exceeds' → logprob: -15.75001049041748
    5. ' ' → logprob: -16.375009536743164
    6. ' ' → logprob: -16.500009536743164
    7. ')' → logprob: -17.375009536743164
    8. ' too' → logprob: -17.500009536743164
    9. '=}' → logprob: -17.750009536743164
    10. '   ' → logprob: -17.875009536743164

Token 366: ' exceeded' (ID: 60210)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.48193931579589844
    2. ' exceeds' → logprob: -1.4819393157958984
    3. 'ex' → logprob: -2.1069393157958984
    4. ' is' → logprob: -4.481939315795898
    5. ' too' → logprob: -4.856939315795898
    6. '"' → logprob: -4.856939315795898
    7. ' exceeded' → logprob: -6.106939315795898
    8. '>' → logprob: -6.731939315795898
    9. ')' → logprob: -7.106939315795898
    10. 'too' → logprob: -7.606939315795898

Token 367: ' upper' (ID: 13057)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011159120127558708
    2. 'self' → logprob: -4.5111589431762695
    3. ' the' → logprob: -9.13615894317627
    4. ' ' → logprob: -13.76115894317627
    5. ' ' → logprob: -14.38615894317627
    6. '	self' → logprob: -14.88615894317627
    7. ' upper' → logprob: -15.26115894317627
    8. '_self' → logprob: -15.38615894317627
    9. '(self' → logprob: -15.76115894317627
    10. '<|end|>' → logprob: -16.011159896850586

Token 368: ' bound' (ID: 11608)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.0006579888286069036
    2. '_limit' → logprob: -7.75065803527832
    3. '_' → logprob: -9.25065803527832
    4. ' _' → logprob: -9.87565803527832
    5. '_b' → logprob: -10.50065803527832
    6. '_bounds' → logprob: -10.50065803527832
    7. '_boundary' → logprob: -12.00065803527832
    8. '_value' → logprob: -12.12565803527832
    9. '_threshold' → logprob: -13.12565803527832
    10. ')_' → logprob: -13.12565803527832

Token 369: ' {' (ID: 354)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.2993865013122559
    2. '}")' → logprob: -1.6743865013122559
    3. ' for' → logprob: -1.7993865013122559
    4. ' {' → logprob: -2.174386501312256
    5. '}")
' → logprob: -2.674386501312256
    6. '{' → logprob: -2.924386501312256
    7. ' of' → logprob: -3.049386501312256
    8. '}' → logprob: -3.424386501312256
    9. '")
' → logprob: -3.424386501312256
    10. ' }' → logprob: -4.174386501312256

Token 370: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01435224898159504
    2. ' self' → logprob: -4.264352321624756
    3. '}' → logprob: -9.014351844787598
    4. '{' → logprob: -9.889351844787598
    5. ' {' → logprob: -12.389351844787598
    6. '   ' → logprob: -12.889351844787598
    7. '       ' → logprob: -13.014351844787598
    8. '           ' → logprob: -13.639351844787598
    9. '(self' → logprob: -13.639351844787598
    10. ' ' → logprob: -14.139351844787598

Token 371: '.upper' (ID: 75082)
  Prédit: '.upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.upper' → logprob: -9.491498531133402e-06
    2. '.bound' → logprob: -12.750009536743164
    3. '.' → logprob: -13.125009536743164
    4. '._' → logprob: -13.125009536743164
    5. '}.' → logprob: -14.000009536743164
    6. 'upper' → logprob: -14.250009536743164
    7. '_.' → logprob: -15.125009536743164
    8. '.lower' → logprob: -15.875009536743164
    9. '.outer' → logprob: -16.000009536743164
    10. '_upper' → logprob: -16.250009536743164

Token 372: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.000297685619443655
    2. 'bound' → logprob: -8.125297546386719
    3. 'ound' → logprob: -14.625297546386719
    4. '   ' → logprob: -15.375297546386719
    5. 'Bound' → logprob: -15.750297546386719
    6. ' bound' → logprob: -16.12529754638672
    7. '-bound' → logprob: -16.12529754638672
    8. '_limit' → logprob: -16.37529754638672
    9. 'and' → logprob: -16.75029754638672
    10. 'self' → logprob: -17.00029754638672

Token 373: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.40700024366378784
    2. '}")
' → logprob: -1.1570003032684326
    3. '")' → logprob: -4.0320000648498535
    4. ')")
' → logprob: -7.7820000648498535
    5. '")
' → logprob: -7.9070000648498535
    6. ' }' → logprob: -7.9070000648498535
    7. ')")' → logprob: -7.9070000648498535
    8. '}' → logprob: -8.157000541687012
    9. ')' → logprob: -8.782000541687012
    10. '       ' → logprob: -9.532000541687012

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005043640732765198
    2. '
' → logprob: -5.5050435066223145
    3. '            
' → logprob: -7.0050435066223145
    4. 'op' → logprob: -11.130043983459473
    5. ' 
' → logprob: -11.505043983459473
    6. '  
' → logprob: -12.005043983459473
    7. '
' → logprob: -12.255043983459473
    8. '    
' → logprob: -12.755043983459473
    9. '           
' → logprob: -12.755043983459473
    10. ' op' → logprob: -13.130043983459473

Token 375: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' (adapté à ' op') → logprob: -0.047532226890325546
    2. 'operation' → logprob: -3.797532320022583
    3. '           ' → logprob: -4.172532081604004
    4. ' op' → logprob: -4.797532081604004
    5. ' operation' → logprob: -8.297532081604004
    6. 'step' → logprob: -10.047532081604004
    7. 'operator' → logprob: -11.047532081604004
    8. 'choice' → logprob: -11.547532081604004
    9. '
' → logprob: -12.922532081604004
    10. '            
' → logprob: -13.297532081604004

Token 376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017023178515955806
    2. '=' → logprob: -6.376702308654785
    3. '.' → logprob: -17.6267032623291
    4. ' ' → logprob: -18.2517032623291
    5. ' ' → logprob: -18.3767032623291
    6. ')' → logprob: -18.5017032623291
    7. ' =
' → logprob: -19.1267032623291
    8. '=self' → logprob: -19.2517032623291
    9. '	' → logprob: -19.3767032623291
    10. '    ' → logprob: -20.1267032623291

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975083328783512
    2. ' self' → logprob: -3.5297508239746094
    3. '           ' → logprob: -15.15475082397461
    4. '	self' → logprob: -16.77975082397461
    5. '(self' → logprob: -17.52975082397461
    6. '=self' → logprob: -17.90475082397461
    7. '[self' → logprob: -19.52975082397461
    8. 'Self' → logprob: -19.65475082397461
    9. '               ' → logprob: -19.65475082397461
    10. '```' → logprob: -20.40475082397461

Token 378: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005153826787136495
    2. 'chooser' → logprob: -7.625515460968018
    3. ' chooser' → logprob: -11.37551498413086
    4. '.choose' → logprob: -11.87551498413086
    5. 'cho' → logprob: -12.50051498413086
    6. 'Chooser' → logprob: -13.00051498413086
    7. '.choice' → logprob: -13.75051498413086
    8. ' .' → logprob: -14.87551498413086
    9. '```' → logprob: -15.12551498413086
    10. 'self' → logprob: -15.62551498413086

Token 379: 'chooser' (ID: 140811)
  Prédit: 'chooser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chooser' → logprob: -3.35706390615087e-05
    2. 'cho' → logprob: -11.125033378601074
    3. 'choose' → logprob: -11.125033378601074
    4. ' chooser' → logprob: -12.500033378601074
    5. 'chos' → logprob: -16.00003433227539
    6. 'choice' → logprob: -16.87503433227539
    7. 'Chooser' → logprob: -17.62503433227539
    8. 'chosen' → logprob: -17.75003433227539
    9. 'changer' → logprob: -18.00003433227539
    10. '```' → logprob: -19.25003433227539

Token 380: '.choose' (ID: 135598)
  Prédit: '.choose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.choose' → logprob: -0.002483149990439415
    2. '.' → logprob: -6.002483367919922
    3. '.choice' → logprob: -12.627483367919922
    4. '.select' → logprob: -13.127483367919922
    5. ' .' → logprob: -13.502483367919922
    6. 'choose' → logprob: -15.127483367919922
    7. '.apply' → logprob: -15.127483367919922
    8. ').' → logprob: -17.002483367919922
    9. '   ' → logprob: -17.002483367919922
    10. '\.' → logprob: -17.502483367919922

Token 381: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00019364648323971778
    2. 'current' → logprob: -8.75019359588623
    3. '(' → logprob: -10.37519359588623
    4. ' current' → logprob: -12.75019359588623
    5. ' (' → logprob: -14.37519359588623
    6. '(
' → logprob: -15.12519359588623
    7. ',current' → logprob: -15.87519359588623
    8. '(cur' → logprob: -17.375194549560547
    9. '[current' → logprob: -18.125194549560547
    10. '(previous' → logprob: -18.625194549560547

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933229565620422
    2. ')
' → logprob: -0.6933229565620422
    3. '           ' → logprob: -9.318323135375977
    4. ')
' → logprob: -9.568323135375977
    5. ' )
' → logprob: -12.193323135375977
    6. '       ' → logprob: -12.443323135375977
    7. ')

' → logprob: -13.068323135375977
    8. '   ' → logprob: -13.443323135375977
    9. ' )' → logprob: -13.818323135375977
    10. ')`
' → logprob: -14.068323135375977

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2595275044441223
    2. 'current' → logprob: -1.5095274448394775
    3. ' current' → logprob: -4.884527683258057
    4. '   ' → logprob: -13.009527206420898
    5. 'yield' → logprob: -13.759527206420898
    6. '       ' → logprob: -13.884527206420898
    7. '	current' → logprob: -14.634527206420898
    8. '            
' → logprob: -15.009527206420898
    9. '```' → logprob: -15.009527206420898
    10. '.current' → logprob: -15.259527206420898

Token 384: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.008635842241346836
    2. ' current' → logprob: -5.008635997772217
    3. '           ' → logprob: -6.258635997772217
    4. 'next' → logprob: -12.758635520935059
    5. '   ' → logprob: -14.633635520935059
    6. 'yield' → logprob: -14.633635520935059
    7. '       ' → logprob: -14.883635520935059
    8. '
' → logprob: -15.758635520935059
    9. '	current' → logprob: -16.258636474609375
    10. ' next' → logprob: -16.633636474609375

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.77975082397461
    4. ')' → logprob: -17.90475082397461
    5. '＝' → logprob: -19.02975082397461
    6. '    ' → logprob: -19.02975082397461
    7. '```' → logprob: -19.77975082397461
    8. ' ' → logprob: -19.90475082397461
    9. ' =
' → logprob: -20.02975082397461
    10. ',' → logprob: -20.27975082397461

Token 386: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.03804149478673935
    2. ' op' → logprob: -3.288041591644287
    3. '	op' → logprob: -16.663042068481445
    4. '(op' → logprob: -17.038042068481445
    5. '           ' → logprob: -18.288042068481445
    6. '
' → logprob: -19.788042068481445
    7. '   ' → logprob: -19.788042068481445
    8. '.op' → logprob: -20.038042068481445
    9. '_op' → logprob: -20.288042068481445
    10. ' ' → logprob: -21.288042068481445

Token 387: '.apply' (ID: 23624)
  Prédit: '.apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.apply' → logprob: -0.0012198820477351546
    2. '.' → logprob: -6.751219749450684
    3. 'apply' → logprob: -10.251219749450684
    4. ' .' → logprob: -11.376219749450684
    5. '   ' → logprob: -13.626219749450684
    6. '```' → logprob: -14.876219749450684
    7. ').' → logprob: -15.501219749450684
    8. '}.' → logprob: -15.751219749450684
    9. '().' → logprob: -15.876219749450684
    10. '`.' → logprob: -16.251220703125

Token 388: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0015034328680485487
    2. '(' → logprob: -6.5015034675598145
    3. '(
' → logprob: -14.251502990722656
    4. ' (' → logprob: -15.751502990722656
    5. 'current' → logprob: -15.751502990722656
    6. '(curr' → logprob: -17.001502990722656
    7. '(cur' → logprob: -17.001502990722656
    8. '(previous' → logprob: -17.001502990722656
    9. ',current' → logprob: -17.501502990722656
    10. '(

' → logprob: -18.001502990722656

Token 389: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4744534492492676
    2. ')' → logprob: -0.9744534492492676
    3. '           ' → logprob: -8.09945297241211
    4. ')
' → logprob: -9.84945297241211
    5. ' )
' → logprob: -11.97445297241211
    6. ' )' → logprob: -12.72445297241211
    7. '       ' → logprob: -12.72445297241211
    8. ')

' → logprob: -13.34945297241211
    9. '               ' → logprob: -13.72445297241211
    10. '<|end|>' → logprob: -13.72445297241211

Token 390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12756545841693878
    2. 'yield' → logprob: -2.127565383911133
    3. ' yield' → logprob: -8.002565383911133
    4. '```' → logprob: -8.877565383911133
    5. '            
' → logprob: -9.377565383911133
    6. '
' → logprob: -10.502565383911133
    7. '	yield' → logprob: -10.627565383911133
    8. '       ' → logprob: -11.627565383911133
    9. 'Yield' → logprob: -12.752565383911133
    10. '        
' → logprob: -12.877565383911133

Token 391: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.00021760274830739945
    2. ' yield' → logprob: -8.75021743774414
    3. '           ' → logprob: -9.75021743774414
    4. '	yield' → logprob: -14.37521743774414
    5. '```' → logprob: -16.50021743774414
    6. '
' → logprob: -16.75021743774414
    7. '       ' → logprob: -17.25021743774414
    8. 'y' → logprob: -17.75021743774414
    9. 'Yield' → logprob: -18.75021743774414
    10. '            
' → logprob: -19.37521743774414

Token 392: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6931580901145935
    2. 'current' → logprob: -0.6931580901145935
    3. '(current' → logprob: -11.443158149719238
    4. '	current' → logprob: -16.443157196044922
    5. ' ' → logprob: -17.193157196044922
    6. '$current' → logprob: -17.943157196044922
    7. '.current' → logprob: -18.568157196044922
    8. ',current' → logprob: -18.943157196044922
    9. '_current' → logprob: -19.068157196044922
    10. '=current' → logprob: -19.068157196044922

Token 393: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' Input' (ID: 10090)
  Prédit: 'Coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Coll' → logprob: -0.13225582242012024
    2. 'Test' → logprob: -2.632255792617798
    3. ' Coll' → logprob: -3.132255792617798
    4. ' Test' → logprob: -6.007256031036377
    5. 'Sequence' → logprob: -6.132256031036377
    6. 'Solution' → logprob: -7.382256031036377
    7. 'Main' → logprob: -7.757256031036377
    8. 'Tests' → logprob: -7.882256031036377
    9. 'Cycle' → logprob: -8.132255554199219
    10. 'Runner' → logprob: -8.632255554199219

Token 396: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.9018759727478027
    2. 'Reader' → logprob: -1.1518759727478027
    3. 'Sequence' → logprob: -2.6518759727478027
    4. 'Validator' → logprob: -2.9018759727478027
    5. 'Processor' → logprob: -2.9018759727478027
    6. 'Parser' → logprob: -3.6518759727478027
    7. 'Generator' → logprob: -3.6518759727478027
    8. 'Iterator' → logprob: -3.7768759727478027
    9. 'Provider' → logprob: -4.651875972747803
    10. 'Collector' → logprob: -6.026875972747803

Token 397: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025148969143629074
    2. ':
' → logprob: -6.002514839172363
    3. ' :' → logprob: -10.627514839172363
    4. '():' → logprob: -12.377514839172363
    5. '(object' → logprob: -13.002514839172363
    6. '):' → logprob: -13.252514839172363
    7. ':def' → logprob: -13.377514839172363
    8. '(' → logprob: -13.502514839172363
    9. ':

' → logprob: -13.752514839172363
    10. ':
' → logprob: -14.252514839172363

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038518086075782776
    2. ' def' → logprob: -3.288518190383911
    3. 'def' → logprob: -7.663517951965332
    4. '```' → logprob: -13.163517951965332
    5. 'class' → logprob: -13.663517951965332
    6. ' class' → logprob: -13.663517951965332
    7. '	def' → logprob: -14.288517951965332
    8. '    ' → logprob: -14.538517951965332
    9. ' ' → logprob: -15.163517951965332
    10. 'staticmethod' → logprob: -15.288517951965332

Token 399: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20459727942943573
    2. ' def' → logprob: -1.7045972347259521
    3. '@' → logprob: -5.954597473144531
    4. '   ' → logprob: -8.079597473144531
    5. ' @' → logprob: -8.204597473144531
    6. 'class' → logprob: -14.579597473144531
    7. 'staticmethod' → logprob: -14.954597473144531
    8. '```' → logprob: -15.579597473144531
    9. '@dat' → logprob: -15.704597473144531
    10. 'from' → logprob: -15.704597473144531

Token 400: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17412838339805603
    2. 'def' → logprob: -1.9241284132003784
    3. 'staticmethod' → logprob: -4.799128532409668
    4. ' __' → logprob: -5.299128532409668
    5. '__' → logprob: -7.799128532409668
    6. ' static' → logprob: -9.424128532409668
    7. 'classmethod' → logprob: -10.299128532409668
    8. 'static' → logprob: -10.674128532409668
    9. '```' → logprob: -11.424128532409668
    10. '   ' → logprob: -12.299128532409668

Token 401: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. ' init' → logprob: -13.500001907348633
    3. 'call' → logprob: -17.250001907348633
    4. 'staticmethod' → logprob: -17.250001907348633
    5. 'int' → logprob: -17.375001907348633
    6. 'nit' → logprob: -17.500001907348633
    7. '_init' → logprob: -17.625001907348633
    8. '   ' → logprob: -18.250001907348633
    9. 'def' → logprob: -18.375001907348633
    10. '	init' → logprob: -18.625001907348633

Token 402: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0034816358238458633
    2. ' (' → logprob: -6.128481864929199
    3. '(' → logprob: -6.753481864929199
    4. '   ' → logprob: -9.8784818649292
    5. 'self' → logprob: -10.3784818649292
    6. ',' → logprob: -11.3784818649292
    7. '__(' → logprob: -11.6284818649292
    8. '<|end|>' → logprob: -11.7534818649292
    9. ' self' → logprob: -12.5034818649292
    10. '(
' → logprob: -13.0034818649292

Token 403: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014768906403332949
    2. ')' → logprob: -6.751476764678955
    3. '):
' → logprob: -8.876477241516113
    4. ' self' → logprob: -8.876477241516113
    5. '
' → logprob: -11.376477241516113
    6. '   ' → logprob: -11.751477241516113
    7. '(self' → logprob: -12.876477241516113
    8. ')
' → logprob: -13.001477241516113
    9. '	self' → logprob: -14.376477241516113
    10. '       ' → logprob: -14.501477241516113

Token 404: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020938070490956306
    2. 'self' → logprob: -4.770937919616699
    3. '):
' → logprob: -4.895937919616699
    4. '):' → logprob: -5.895937919616699
    5. '   ' → logprob: -6.520937919616699
    6. '(self' → logprob: -8.7709379196167
    7. ')' → logprob: -9.1459379196167
    8. '       ' → logprob: -9.1459379196167
    9. ',self' → logprob: -9.3959379196167
    10. ' self' → logprob: -10.2709379196167

Token 405: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002834007143974304
    2. '   ' → logprob: -6.377833843231201
    3. '       ' → logprob: -7.127833843231201
    4. ' self' → logprob: -8.37783432006836
    5. ')' → logprob: -9.62783432006836
    6. '(self' → logprob: -11.37783432006836
    7. '):
' → logprob: -11.50283432006836
    8. 'def' → logprob: -12.50283432006836
    9. '	self' → logprob: -12.62783432006836
    10. '
' → logprob: -13.37783432006836

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.30379635095596313
    2. 'pass' → logprob: -1.4287962913513184
    3. '       ' → logprob: -3.8037962913513184
    4. ' pass' → logprob: -9.803796768188477
    5. ' self' → logprob: -10.428796768188477
    6. '   ' → logprob: -11.178796768188477
    7. '	pass' → logprob: -13.553796768188477
    8. '           ' → logprob: -14.053796768188477
    9. 'def' → logprob: -14.303796768188477
    10. '(self' → logprob: -14.428796768188477

Token 407: '._' (ID: 2697)
  Prédit: '.operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.operations' → logprob: -0.2661738693714142
    2. '.buffer' → logprob: -2.516173839569092
    3. '.' → logprob: -2.891173839569092
    4. '.input' → logprob: -4.141173839569092
    5. '.ops' → logprob: -4.266173839569092
    6. '.lines' → logprob: -4.391173839569092
    7. '.valid' → logprob: -4.391173839569092
    8. '.steps' → logprob: -4.766173839569092
    9. '.inputs' → logprob: -5.266173839569092
    10. '.data' → logprob: -5.391173839569092

Token 408: 'max' (ID: 3228)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.5201376676559448
    2. 'lines' → logprob: -1.3951376676559448
    3. 'input' → logprob: -3.2701377868652344
    4. 'operations' → logprob: -3.2701377868652344
    5. 'cache' → logprob: -4.395137786865234
    6. 'inputs' → logprob: -4.520137786865234
    7. 'data' → logprob: -4.645137786865234
    8. 'values' → logprob: -5.520137786865234
    9. 'value' → logprob: -5.520137786865234
    10. 'prefix' → logprob: -5.645137786865234

Token 409: '_data' (ID: 3537)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2916356027126312
    2. '_length' → logprob: -1.6666356325149536
    3. '_number' → logprob: -4.166635513305664
    4. '_input' → logprob: -4.291635513305664
    5. '_digits' → logprob: -5.416635513305664
    6. '_iterations' → logprob: -5.916635513305664
    7. '_steps' → logprob: -6.041635513305664
    8. '_sequence' → logprob: -6.166635513305664
    9. '_limit' → logprob: -6.166635513305664
    10. '_n' → logprob: -6.291635513305664

Token 410: '_sets' (ID: 56707)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.5718052983283997
    2. '_length' → logprob: -1.8218052387237549
    3. ' =' → logprob: -2.321805238723755
    4. '_points' → logprob: -2.946805238723755
    5. '_value' → logprob: -3.196805238723755
    6. '=' → logprob: -3.946805238723755
    7. '_lines' → logprob: -4.321805477142334
    8. '_count' → logprob: -4.946805477142334
    9. 'size' → logprob: -5.321805477142334
    10. '_id' → logprob: -5.571805477142334

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34925198554992676
    2. ' =' → logprob: -1.2242519855499268
    3. ':' → logprob: -7.224251747131348
    4. ' ' → logprob: -9.849251747131348
    5. ':int' → logprob: -11.349251747131348
    6. '   ' → logprob: -12.224251747131348
    7. '=None' → logprob: -12.224251747131348
    8. '=int' → logprob: -13.474251747131348
    9. '  ' → logprob: -13.599251747131348
    10. ' :' → logprob: -14.224251747131348

Token 412: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4196438491344452
    2. '100' → logprob: -1.2946438789367676
    3. ' ' → logprob: -3.1696438789367676
    4. '0' → logprob: -4.919643878936768
    5. '1' → logprob: -5.169643878936768
    6. '20' → logprob: -5.544643878936768
    7. '5' → logprob: -5.544643878936768
    8. '50' → logprob: -6.294643878936768
    9. 'int' → logprob: -6.669643878936768
    10. '3' → logprob: -7.294643878936768

Token 413: '50' (ID: 1434)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5473966002464294
    2. '100' → logprob: -0.9223966002464294
    3. '1' → logprob: -5.172396659851074
    4. '20' → logprob: -5.172396659851074
    5. '50' → logprob: -5.672396659851074
    6. '5' → logprob: -5.797396659851074
    7. '0' → logprob: -6.172396659851074
    8. 'int' → logprob: -6.547396659851074
    9. '25' → logprob: -7.422396659851074
    10. ' ' → logprob: -7.672396659851074

Token 414: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14769861102104187
    2. '   ' → logprob: -2.5226986408233643
    3. '

' → logprob: -3.3976986408233643
    4. '<|end|>' → logprob: -3.8976986408233643
    5. 'def' → logprob: -6.397698402404785
    6. ' def' → logprob: -7.522698402404785
    7. '<|end|>' → logprob: -7.897698402404785
    8. '    
' → logprob: -8.147698402404785
    9. '       ' → logprob: -8.147698402404785
    10. '	def' → logprob: -9.897698402404785

Token 415: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28275278210639954
    2. '   ' → logprob: -1.7827527523040771
    3. ' def' → logprob: -2.907752752304077
    4. '<|end|>' → logprob: -4.157752990722656
    5. '
' → logprob: -4.907752990722656
    6. '<|end|>' → logprob: -8.532752990722656
    7. '	def' → logprob: -8.782752990722656
    8. '    
' → logprob: -9.657752990722656
    9. ' ' → logprob: -10.407752990722656
    10. ',' → logprob: -11.657752990722656

Token 416: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.13388703338569e-06
    2. ' def' → logprob: -11.625009536743164
    3. '
' → logprob: -16.375009536743164
    4. '   ' → logprob: -19.000009536743164
    5. 'class' → logprob: -19.000009536743164
    6. 'from' → logprob: -20.125009536743164
    7. '@' → logprob: -21.125009536743164
    8. 'import' → logprob: -21.250009536743164
    9. '@property' → logprob: -21.375009536743164
    10. '	def' → logprob: -21.500009536743164

Token 417: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.01264914870262146
    2. ' parse' → logprob: -4.512649059295654
    3. 'read' → logprob: -6.762649059295654
    4. 'def' → logprob: -8.137649536132812
    5. '_parse' → logprob: -9.012649536132812
    6. ' read' → logprob: -11.262649536132812
    7. '__' → logprob: -12.637649536132812
    8. 'max' → logprob: -12.762649536132812
    9. ' def' → logprob: -12.887649536132812
    10. '_read' → logprob: -13.012649536132812

Token 418: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008492596447467804
    2. '(' → logprob: -4.883492469787598
    3. '_line' → logprob: -7.508492469787598
    4. 'self' → logprob: -8.758492469787598
    5. '_input' → logprob: -9.133492469787598
    6. ' (' → logprob: -10.633492469787598
    7. '(
' → logprob: -11.508492469787598
    8. '_(' → logprob: -11.633492469787598
    9. ' self' → logprob: -11.758492469787598
    10. '_' → logprob: -11.883492469787598

Token 419: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14654666185379028
    2. '_line' → logprob: -3.0215466022491455
    3. '_input' → logprob: -3.2715466022491455
    4. 'self' → logprob: -3.2715466022491455
    5. ')' → logprob: -5.646546840667725
    6. '(self' → logprob: -5.771546840667725
    7. ',self' → logprob: -7.021546840667725
    8. 'input' → logprob: -7.396546840667725
    9. '_data' → logprob: -7.521546840667725
    10. ' ,' → logprob: -7.521546840667725

Token 420: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00372728006914258
    2. '(' → logprob: -5.878727436065674
    3. 'self' → logprob: -7.503727436065674
    4. ' (' → logprob: -8.503726959228516
    5. ' self' → logprob: -9.503726959228516
    6. '(
' → logprob: -9.878726959228516
    7. '_line' → logprob: -11.378726959228516
    8. 'def' → logprob: -11.503726959228516
    9. '	self' → logprob: -13.128726959228516
    10. ' ' → logprob: -13.128726959228516

Token 421: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03708404302597046
    2. 'int' → logprob: -3.4120841026306152
    3. ' List' → logprob: -6.287084102630615
    4. '[List' → logprob: -6.787084102630615
    5. '[int' → logprob: -8.287083625793457
    6. '[]' → logprob: -9.287083625793457
    7. 'Iterator' → logprob: -10.537083625793457
    8. ' int' → logprob: -10.662083625793457
    9. 'list' → logprob: -10.787083625793457
    10. 'None' → logprob: -11.037083625793457

Token 422: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.001453567179851234
    2. '[List' → logprob: -6.751453399658203
    3. '[str' → logprob: -8.251453399658203
    4. '[' → logprob: -10.751453399658203
    5. '[Int' → logprob: -14.501453399658203
    6. 'int' → logprob: -15.126453399658203
    7. '[(' → logprob: -16.001453399658203
    8. '<int' → logprob: -17.126453399658203
    9. '[
' → logprob: -18.251453399658203
    10. ' [' → logprob: -19.001453399658203

Token 423: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.34913548827171326
    2. ']:' → logprob: -1.8491355180740356
    3. '():
' → logprob: -2.599135398864746
    4. ':
' → logprob: -3.724135398864746
    5. ':' → logprob: -3.974135398864746
    6. '():' → logprob: -4.349135398864746
    7. '):
' → logprob: -6.099135398864746
    8. ']:
' → logprob: -6.724135398864746
    9. '   ' → logprob: -6.849135398864746
    10. ',' → logprob: -7.349135398864746

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013446907512843609
    2. 'n' → logprob: -4.888446807861328
    3. 'data' → logprob: -5.513446807861328
    4. ' lines' → logprob: -7.763446807861328
    5. ' data' → logprob: -7.888446807861328
    6. 'input' → logprob: -8.138446807861328
    7. 'inputs' → logprob: -8.888446807861328
    8. ' n' → logprob: -9.513446807861328
    9. '```' → logprob: -9.513446807861328
    10. 'import' → logprob: -9.513446807861328

Token 425: ' results' (ID: 4376)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7414482831954956
    2. ' n' → logprob: -1.1164482831954956
    3. 'data' → logprob: -2.991448402404785
    4. ' data' → logprob: -2.991448402404785
    5. 'num' → logprob: -4.116448402404785
    6. '       ' → logprob: -4.241448402404785
    7. 'count' → logprob: -4.241448402404785
    8. ' count' → logprob: -5.116448402404785
    9. 'results' (adapté à ' results') → logprob: -5.116448402404785
    10. ' results' → logprob: -5.241448402404785

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18020743131637573
    2. '=' → logprob: -1.8052074909210205
    3. '=[]' → logprob: -7.805207252502441
    4. '[]' → logprob: -10.555207252502441
    5. '=[]
' → logprob: -11.055207252502441
    6. ' ' → logprob: -11.930207252502441
    7. '()' → logprob: -13.430207252502441
    8. ' []' → logprob: -13.805207252502441
    9. '   ' → logprob: -14.305207252502441
    10. ':' → logprob: -14.555207252502441

Token 427: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008710895664989948
    2. '[]
' → logprob: -4.758710861206055
    3. ' []' → logprob: -9.258710861206055
    4. ' []
' → logprob: -14.383710861206055
    5. '[' → logprob: -15.008710861206055
    6. '[]

' → logprob: -15.883710861206055
    7. '[]"' → logprob: -18.008710861206055
    8. '[])' → logprob: -18.133710861206055
    9. '[]>' → logprob: -18.508710861206055
    10. '=[]' → logprob: -18.883710861206055

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067405966110527515
    2. ' while' → logprob: -5.881740570068359
    3. 'while' → logprob: -6.631740570068359
    4. 'n' → logprob: -7.631740570068359
    5. 'input' → logprob: -7.756740570068359
    6. 'try' → logprob: -8.13174057006836
    7. '```' → logprob: -8.50674057006836
    8. ' for' → logprob: -8.63174057006836
    9. ' input' → logprob: -8.75674057006836
    10. ' n' → logprob: -8.75674057006836

Token 429: ' count' (ID: 3605)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8458700180053711
    2. 'try' → logprob: -1.345870018005371
    3. 'num' → logprob: -2.345870018005371
    4. 'n' → logprob: -2.720870018005371
    5. ' t' → logprob: -3.095870018005371
    6. 'count' (adapté à ' count') → logprob: -3.220870018005371
    7. ' try' → logprob: -4.220870018005371
    8. 'max' → logprob: -4.595870018005371
    9. ' n' → logprob: -4.720870018005371
    10. 'T' → logprob: -4.845870018005371

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194576382637024
    2. '=' → logprob: -1.5019457340240479
    3. ' ' → logprob: -11.126945495605469
    4. '   ' → logprob: -14.001945495605469
    5. '  ' → logprob: -15.251945495605469
    6. '_' → logprob: -15.376945495605469
    7. '	' → logprob: -16.12694549560547
    8. '=int' → logprob: -16.50194549560547
    9. ',' → logprob: -16.62694549560547
    10. ' ' → logprob: -16.75194549560547

Token 431: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859054833650589
    2. ' ' → logprob: -3.048590660095215
    3. 'int' → logprob: -13.173590660095215
    4. ' int' → logprob: -14.048590660095215
    5. '=' → logprob: -15.798590660095215
    6. '   ' → logprob: -15.798590660095215
    7. '1' → logprob: -16.9235897064209
    8. '  ' → logprob: -17.1735897064209
    9. ' ' → logprob: -17.2985897064209
    10. 'len' → logprob: -18.2985897064209

Token 432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040219054790213704
    2. 'int' → logprob: -8.000402450561523
    3. ' ' → logprob: -9.625402450561523
    4. ' int' → logprob: -14.875402450561523
    5. 'len' → logprob: -15.750402450561523
    6. '1' → logprob: -15.875402450561523
    7. '   ' → logprob: -16.875402450561523
    8. '50' → logprob: -17.125402450561523
    9. '100' → logprob: -18.000402450561523
    10. '10' → logprob: -18.812902450561523

Token 433: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11434343457221985
    2. '
' → logprob: -2.6143434047698975
    3. 'while' → logprob: -3.8643434047698975
    4. ' while' → logprob: -5.114343643188477
    5. '        
' → logprob: -5.364343643188477
    6. '<|end|>' → logprob: -6.989343643188477
    7. '		
' → logprob: -7.489343643188477
    8. ',' → logprob: -7.739343643188477
    9. '	while' → logprob: -7.989343643188477
    10. '	' → logprob: -8.114343643188477

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10398915410041809
    2. ' while' → logprob: -3.1039891242980957
    3. 'while' → logprob: -3.8539891242980957
    4. '
' → logprob: -4.478989124298096
    5. '        
' → logprob: -5.103989124298096
    6. '	' → logprob: -5.478989124298096
    7. '	while' → logprob: -5.603989124298096
    8. '		
' → logprob: -5.978989124298096
    9. '<|end|>' → logprob: -6.228989124298096
    10. ' 
' → logprob: -7.228989124298096

Token 435: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.13425861299037933
    2. ' while' → logprob: -2.259258508682251
    3. 'try' → logprob: -4.50925874710083
    4. '       ' → logprob: -4.63425874710083
    5. ' try' → logprob: -8.009258270263672
    6. 'import' → logprob: -9.509258270263672
    7. 'for' → logprob: -9.759258270263672
    8. ' for' → logprob: -11.384258270263672
    9. '	while' → logprob: -12.259258270263672
    10. '```' → logprob: -13.134258270263672

Token 436: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004705068655312061
    2. ' count' → logprob: -5.37970495223999
    3. 'True' → logprob: -9.754705429077148
    4. ' True' → logprob: -10.629705429077148
    5. '(count' → logprob: -13.504705429077148
    6. '	count' → logprob: -13.879705429077148
    7. '   ' → logprob: -15.754705429077148
    8. '(True' → logprob: -17.87970542907715
    9. '=count' → logprob: -17.87970542907715
    10. ' ' → logprob: -18.00470542907715

Token 437: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07891127467155457
    2. '<' → logprob: -2.578911304473877
    3. ' ' → logprob: -11.328910827636719
    4. '<n' → logprob: -12.453910827636719
    5. '<len' → logprob: -13.828910827636719
    6. '<size' → logprob: -13.828910827636719
    7. ' <
' → logprob: -14.578910827636719
    8. '[' → logprob: -14.703910827636719
    9. '<data' → logprob: -14.828910827636719
    10. '<num' → logprob: -14.828910827636719

Token 438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012113067787140608
    2. ' self' → logprob: -6.751211166381836
    3. '50' → logprob: -10.126211166381836
    4. '   ' → logprob: -14.251211166381836
    5. '	self' → logprob: -15.376211166381836
    6. ' ' → logprob: -16.751211166381836
    7. '
' → logprob: -16.876211166381836
    8. '(self' → logprob: -17.501211166381836
    9. '       ' → logprob: -17.876211166381836
    10. '    ' → logprob: -18.751211166381836

Token 439: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001082471339032054
    2. '_max' → logprob: -6.876082420349121
    3. '   ' → logprob: -11.376082420349121
    4. '.' → logprob: -11.376082420349121
    5. '.max' → logprob: -12.001082420349121
    6. ' .' → logprob: -12.126082420349121
    7. '       ' → logprob: -12.376082420349121
    8. '
' → logprob: -13.126082420349121
    9. 'max' → logprob: -13.251082420349121
    10. ' _' → logprob: -13.501082420349121

Token 440: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.896309739408025e-07
    2. '_max' → logprob: -14.125000953674316
    3. '50' → logprob: -19.0
    4. ' max' → logprob: -19.75
    5. 'count' → logprob: -21.5
    6. '	max' → logprob: -22.5
    7. 'min' → logprob: -22.625
    8. '   ' → logprob: -22.75
    9. 'maxlength' → logprob: -22.75
    10. 'm' → logprob: -23.125

Token 441: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.00041220002458430827
    2. '_datas' → logprob: -9.000411987304688
    3. ' ' → logprob: -9.875411987304688
    4. '```' → logprob: -10.125411987304688
    5. 'data' → logprob: -10.500411987304688
    6. '   ' → logprob: -10.625411987304688
    7. '
' → logprob: -10.875411987304688
    8. '_input' → logprob: -11.250411987304688
    9. 'Data' → logprob: -11.250411987304688
    10. '_' → logprob: -11.750411987304688

Token 442: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.04016872122883797
    2. 'sets' → logprob: -3.4151687622070312
    3. '   ' → logprob: -6.290168762207031
    4. '_data' → logprob: -6.790168762207031
    5. ' sets' → logprob: -6.915168762207031
    6. 'datasets' → logprob: -7.915168762207031
    7. '_set' → logprob: -8.040168762207031
    8. '       ' → logprob: -8.665168762207031
    9. '_results' → logprob: -8.915168762207031
    10. '_' → logprob: -9.040168762207031

Token 443: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5501047968864441
    2. ':' → logprob: -0.9251047968864441
    3. ' and' → logprob: -3.675104856491089
    4. 'and' → logprob: -7.55010461807251
    5. '       ' → logprob: -8.050105094909668
    6. '():
' → logprob: -9.300105094909668
    7. '):
' → logprob: -9.425105094909668
    8. ',' → logprob: -9.800105094909668
    9. ' :
' → logprob: -10.050105094909668
    10. '   ' → logprob: -10.175105094909668

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03396458178758621
    2. '       ' → logprob: -3.5339646339416504
    3. ':' → logprob: -5.90896463394165
    4. ':
' → logprob: -7.90896463394165
    5. ',' → logprob: -8.158964157104492
    6. 'try' → logprob: -8.283964157104492
    7. ' try' → logprob: -8.658964157104492
    8. ' and' → logprob: -9.158964157104492
    9. '```' → logprob: -9.283964157104492
    10. '   ' → logprob: -9.533964157104492

Token 445: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.1843777298927307
    2. ' try' → logprob: -2.184377670288086
    3. '           ' → logprob: -3.684377670288086
    4. 'line' → logprob: -4.059377670288086
    5. ' line' → logprob: -4.309377670288086
    6. '   ' → logprob: -12.434377670288086
    7. '```' → logprob: -12.809377670288086
    8. '	try' → logprob: -13.059377670288086
    9. 'input' → logprob: -13.434377670288086
    10. '               ' → logprob: -13.809377670288086

Token 446: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03686242923140526
    2. ':' → logprob: -3.661862373352051
    3. ':
' → logprob: -4.786862373352051
    4. 'input' → logprob: -6.786862373352051
    5. ' input' → logprob: -8.16186237335205
    6. ',' → logprob: -8.66186237335205
    7. '           ' → logprob: -9.66186237335205
    8. 'n' → logprob: -9.78686237335205
    9. '_input' → logprob: -9.78686237335205
    10. '	           ' → logprob: -9.78686237335205

Token 447: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02711092121899128
    2. ' line' → logprob: -4.152111053466797
    3. 'line' → logprob: -5.152111053466797
    4. 'input' → logprob: -5.652111053466797
    5. ' input' → logprob: -6.652111053466797
    6. 'n' → logprob: -8.402111053466797
    7. '   ' → logprob: -9.777111053466797
    8. 'data' → logprob: -11.277111053466797
    9. 'token' → logprob: -11.402111053466797
    10. '	           ' → logprob: -11.402111053466797

Token 448: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5775656700134277
    2. 'line' (adapté à ' line') → logprob: -0.8275656700134277
    3. '                   ' → logprob: -6.702565670013428
    4. 'input' → logprob: -9.327566146850586
    5. ' s' → logprob: -9.577566146850586
    6. 's' → logprob: -9.952566146850586
    7. ' raw' → logprob: -10.077566146850586
    8. ' input' → logprob: -10.202566146850586
    9. '	line' → logprob: -10.452566146850586
    10. 'n' → logprob: -10.827566146850586

Token 449: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975187823176384
    2. '=' → logprob: -3.529751777648926
    3. ' =
' → logprob: -14.904751777648926
    4. '=input' → logprob: -15.154751777648926
    5. '=line' → logprob: -15.779751777648926
    6. ' ' → logprob: -15.779751777648926
    7. 's' → logprob: -16.154752731323242
    8. ':' → logprob: -16.404752731323242
    9. '.' → logprob: -16.654752731323242
    10. ' ' → logprob: -16.779752731323242

Token 450: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245595395565033
    2. ' input' → logprob: -3.7732455730438232
    3. '=input' → logprob: -16.523244857788086
    4. '	input' → logprob: -17.398244857788086
    5. '(input' → logprob: -18.648244857788086
    6. '   ' → logprob: -18.773244857788086
    7. 'int' → logprob: -18.898244857788086
    8. '<input' → logprob: -19.148244857788086
    9. '                   ' → logprob: -19.273244857788086
    10. ',input' → logprob: -20.148244857788086

Token 451: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01850154623389244
    2. '().' → logprob: -4.0185017585754395
    3. '()
' → logprob: -8.018501281738281
    4. '(' → logprob: -11.018501281738281
    5. '()

' → logprob: -13.018501281738281
    6. ' ()' → logprob: -13.893501281738281
    7. '())' → logprob: -14.018501281738281
    8. '()
' → logprob: -14.893501281738281
    9. '();' → logprob: -15.143501281738281
    10. '()>' → logprob: -15.268501281738281

Token 452: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -16.25
    3. 'split' → logprob: -18.0
    4. ' strip' → logprob: -18.375
    5. '.strip' → logprob: -20.375
    6. '_strip' → logprob: -20.625
    7. '(strip' → logprob: -22.125
    8. '-strip' → logprob: -22.625
    9. 'str' → logprob: -23.625
    10. 'isdigit' → logprob: -23.75

Token 453: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1655542254447937
    2. '()
' → logprob: -1.9155542850494385
    3. '               ' → logprob: -5.790554046630859
    4. ')' → logprob: -6.540554046630859
    5. '           ' → logprob: -7.665554046630859
    6. '())' → logprob: -8.79055404663086
    7. '                   ' → logprob: -9.66555404663086
    8. ')
' → logprob: -9.91555404663086
    9. '())
' → logprob: -10.54055404663086
    10. '                
' → logprob: -11.41555404663086

Token 454: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043972869752906263
    2. '<|end|>' → logprob: -8.875439643859863
    3. '                
' → logprob: -9.125439643859863
    4. '	           ' → logprob: -9.500439643859863
    5. '           ' → logprob: -10.125439643859863
    6. '			' → logprob: -11.000439643859863
    7. '		       ' → logprob: -11.625439643859863
    8. '<|end|>' → logprob: -11.750439643859863
    9. ' if' → logprob: -12.125439643859863
    10. 'if' → logprob: -12.500439643859863

Token 455: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005470762262120843
    2. ' if' → logprob: -8.375547409057617
    3. 'if' → logprob: -9.250547409057617
    4. '               ' → logprob: -9.500547409057617
    5. '<|end|>' → logprob: -10.000547409057617
    6. '            
' → logprob: -10.500547409057617
    7. '		' → logprob: -11.250547409057617
    8. ' ' → logprob: -11.500547409057617
    9. '            ' → logprob: -11.625547409057617
    10. '          ' → logprob: -11.875547409057617

Token 456: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.00861456897109747
    2. ' EOF' → logprob: -4.758614540100098
    3. '(' → logprob: -19.383615493774414
    4. 'Stop' → logprob: -20.508615493774414
    5. 'EO' → logprob: -20.508615493774414
    6. 'EOS' → logprob: -22.258615493774414
    7. 'Exception' → logprob: -23.133615493774414
    8. 'E' → logprob: -23.133615493774414
    9. 'End' → logprob: -23.258615493774414
    10. 'Keyboard' → logprob: -23.633615493774414

Token 457: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. ':' → logprob: -16.125
    3. 'rror' → logprob: -17.625
    4. 'error' → logprob: -18.375
    5. '
' → logprob: -19.125
    6. '	Error' → logprob: -19.125
    7. 'Erro' → logprob: -19.25
    8. ':
' → logprob: -19.375
    9. 'EOF' → logprob: -19.375
    10. 'LError' → logprob: -19.375

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3338505029678345
    2. '               ' → logprob: -1.4588505029678345
    3. ':
' → logprob: -3.208850383758545
    4. '           ' → logprob: -4.708850383758545
    5. '                   ' → logprob: -7.083850383758545
    6. '<|end|>' → logprob: -8.583850860595703
    7. '       ' → logprob: -9.083850860595703
    8. '	           ' → logprob: -9.208850860595703
    9. '):
' → logprob: -9.208850860595703
    10. ',' → logprob: -9.583850860595703

Token 459: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016921341011766344
    2. '           ' → logprob: -9.000168800354004
    3. '<|end|>' → logprob: -10.750168800354004
    4. ':' → logprob: -12.125168800354004
    5. '                   ' → logprob: -12.125168800354004
    6. '                
' → logprob: -12.500168800354004
    7. '	           ' → logprob: -13.500168800354004
    8. '<|end|>' → logprob: -13.750168800354004
    9. '              ' → logprob: -14.125168800354004
    10. ':
' → logprob: -14.125168800354004

Token 460: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2330416589975357
    2. '               ' → logprob: -1.7330416440963745
    3. ' break' → logprob: -3.483041763305664
    4. '                   ' → logprob: -8.608041763305664
    5. '	break' → logprob: -8.858041763305664
    6. 'return' → logprob: -9.733041763305664
    7. '           ' → logprob: -11.108041763305664
    8. '
' → logprob: -11.983041763305664
    9. '                
' → logprob: -11.983041763305664
    10. '_break' → logprob: -12.983041763305664

Token 461: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007347009377554059
    2. '            
' → logprob: -7.875734806060791
    3. '<|end|>' → logprob: -8.250734329223633
    4. '		' → logprob: -10.500734329223633
    5. '          ' → logprob: -11.625734329223633
    6. '       ' → logprob: -11.875734329223633
    7. '<|end|>' → logprob: -11.875734329223633
    8. '               ' → logprob: -11.875734329223633
    9. ' if' → logprob: -12.625734329223633
    10. '            ' → logprob: -12.750734329223633

Token 462: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016841089818626642
    2. '<|end|>' → logprob: -6.626684188842773
    3. '            
' → logprob: -8.501684188842773
    4. '		' → logprob: -10.251684188842773
    5. '<|end|>' → logprob: -10.376684188842773
    6. '  
' → logprob: -11.376684188842773
    7. ' if' → logprob: -11.501684188842773
    8. '          ' → logprob: -11.501684188842773
    9. ' ' → logprob: -11.501684188842773
    10. '               ' → logprob: -11.751684188842773

Token 463: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009633887093514204
    2. ' if' → logprob: -7.37596321105957
    3. 'if' (adapté à ' if') → logprob: -8.37596321105957
    4. '<|end|>' → logprob: -10.00096321105957
    5. '            
' → logprob: -10.25096321105957
    6. ' ' → logprob: -12.50096321105957
    7. '		' → logprob: -12.62596321105957
    8. '       ' → logprob: -12.87596321105957
    9. '               ' → logprob: -13.00096321105957
    10. '<|end|>' → logprob: -13.12596321105957

Token 464: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10451500862836838
    2. ' line' → logprob: -2.9795150756835938
    3. 'not' → logprob: -3.2295150756835938
    4. 'line' → logprob: -4.729515075683594
    5. ' ' → logprob: -11.854515075683594
    6. '	line' → logprob: -13.479515075683594
    7. '   ' → logprob: -14.229515075683594
    8. ' len' → logprob: -14.354515075683594
    9. '(line' → logprob: -14.354515075683594
    10. '	not' → logprob: -14.354515075683594

Token 465: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31326910853385925
    2. '==' → logprob: -1.3132691383361816
    3. '=' → logprob: -12.688268661499023
    4. '==
' → logprob: -13.563268661499023
    5. '===' → logprob: -13.938268661499023
    6. ' =' → logprob: -13.938268661499023
    7. ')==' → logprob: -14.938268661499023
    8. '()==' → logprob: -15.063268661499023
    9. ' ===' → logprob: -15.813268661499023
    10. '=="' → logprob: -15.938268661499023

Token 466: ' '' (ID: 461)
  Prédit: '"":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"":' → logprob: -0.8234013915061951
    2. '""' → logprob: -1.3234014511108398
    3. '''' → logprob: -1.5734014511108398
    4. ''' → logprob: -2.82340145111084
    5. '"' → logprob: -3.57340145111084
    6. ' "":
' → logprob: -10.69840145111084
    7. ' '':
' → logprob: -12.32340145111084
    8. '''
' → logprob: -13.19840145111084
    9. '":' → logprob: -13.94840145111084
    10. '"",' → logprob: -14.07340145111084

Token 467: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6269720792770386
    2. '':
' → logprob: -0.8769720792770386
    3. ''' → logprob: -3.126972198486328
    4. '''' → logprob: -6.001972198486328
    5. '""' → logprob: -6.876972198486328
    6. '':
' → logprob: -7.251972198486328
    7. '":' → logprob: -7.751972198486328
    8. '0' → logprob: -8.251972198486328
    9. '"' → logprob: -8.251972198486328
    10. '"":' → logprob: -8.501972198486328

Token 468: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.28406721353530884
    2. '':' → logprob: -1.409067153930664
    3. ''' → logprob: -6.409067153930664
    4. '':
' → logprob: -6.784067153930664
    5. ''):
' → logprob: -9.784067153930664
    6. '":
' → logprob: -10.659067153930664
    7. '":' → logprob: -11.284067153930664
    8. ':
' → logprob: -11.409067153930664
    9. ''or' → logprob: -11.909067153930664
    10. ':' → logprob: -12.034067153930664

Token 469: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001249281340278685
    2. ':
' → logprob: -6.876249313354492
    3. '           ' → logprob: -9.001249313354492
    4. ':' → logprob: -9.626249313354492
    5. ' or' → logprob: -11.501249313354492
    6. '                   ' → logprob: -12.001249313354492
    7. '              ' → logprob: -12.876249313354492
    8. '			' → logprob: -13.126249313354492
    9. '	           ' → logprob: -13.876249313354492
    10. ',' → logprob: -14.001249313354492

Token 470: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25012415647506714
    2. ' break' → logprob: -1.875124216079712
    3. 'break' (adapté à ' break') → logprob: -3.000124216079712
    4. '
' → logprob: -4.750123977661133
    5. '	break' → logprob: -5.375123977661133
    6. '                   ' → logprob: -6.375123977661133
    7. '           ' → logprob: -6.875123977661133
    8. '\n' → logprob: -6.875123977661133
    9. '                
' → logprob: -7.500123977661133
    10. '_break' → logprob: -8.750123977661133

Token 471: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3823756277561188
    2. '
' → logprob: -1.6323755979537964
    3. '            
' → logprob: -2.257375717163086
    4. '<|end|>' → logprob: -4.257375717163086
    5. '  
' → logprob: -6.882375717163086
    6. '    
' → logprob: -7.882375717163086
    7. '<|end|>' → logprob: -8.007375717163086
    8. '                
' → logprob: -8.257375717163086
    9. '           
' → logprob: -8.507375717163086
    10. '			
' → logprob: -8.632375717163086

Token 472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018829749897122383
    2. '            
' → logprob: -4.393829822540283
    3. '
' → logprob: -5.268829822540283
    4. '<|end|>' → logprob: -7.393829822540283
    5. '               ' → logprob: -9.143829345703125
    6. '  
' → logprob: -9.268829345703125
    7. '        
' → logprob: -9.518829345703125
    8. '                
' → logprob: -9.768829345703125
    9. '    
' → logprob: -9.893829345703125
    10. '<|end|>' → logprob: -10.393829345703125

Token 473: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07649744302034378
    2. 'try' → logprob: -3.0764975547790527
    3. 'if' (adapté à ' if') → logprob: -4.951497554779053
    4. 'number' → logprob: -5.076497554779053
    5. '       ' → logprob: -5.326497554779053
    6. 'results' → logprob: -5.701497554779053
    7. 'num' → logprob: -5.951497554779053
    8. 'n' → logprob: -6.451497554779053
    9. 'value' → logprob: -8.076497077941895
    10. '            
' → logprob: -8.201497077941895

Token 474: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004410416819155216
    2. 'not' → logprob: -5.879410266876221
    3. ' line' → logprob: -6.504410266876221
    4. 'line' → logprob: -9.504410743713379
    5. ' ' → logprob: -10.879410743713379
    6. ' len' → logprob: -11.254410743713379
    7. 'len' → logprob: -14.254410743713379
    8. '	not' → logprob: -15.754410743713379
    9. ' ' → logprob: -16.004409790039062
    10. '   ' → logprob: -16.879409790039062

Token 475: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03804183006286621
    2. 'line' → logprob: -3.288041830062866
    3. '	line' → logprob: -15.663042068481445
    4. '(line' → logprob: -16.413042068481445
    5. ' ' → logprob: -17.038042068481445
    6. 'Line' → logprob: -18.538042068481445
    7. '#line' → logprob: -18.913042068481445
    8. '[line' → logprob: -19.413042068481445
    9. ' len' → logprob: -19.788042068481445
    10. '_line' → logprob: -20.038042068481445

Token 476: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0024223909713327885
    2. '.' → logprob: -6.127422332763672
    3. '.strip' → logprob: -9.127422332763672
    4. '.startswith' → logprob: -9.877422332763672
    5. ':' → logprob: -10.127422332763672
    6. 'isdigit' → logprob: -10.377422332763672
    7. '<|end|>' → logprob: -13.252422332763672
    8. '.endswith' → logprob: -13.877422332763672
    9. ' or' → logprob: -14.002422332763672
    10. ':
' → logprob: -14.127422332763672

Token 477: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.001523790997453034
    2. 'decimal' → logprob: -6.501523971557617
    3. 'numeric' → logprob: -10.751523971557617
    4. 'digits' → logprob: -17.001523971557617
    5. 'al' → logprob: -18.251523971557617
    6. '_digit' → logprob: -18.501523971557617
    7. 'digital' → logprob: -18.751523971557617
    8. 'alpha' → logprob: -19.376523971557617
    9. ' digit' → logprob: -19.501523971557617
    10. 'isdigit' → logprob: -19.876523971557617

Token 478: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.022670065984129906
    2. '()' → logprob: -4.272670269012451
    3. '():
' → logprob: -4.772670269012451
    4. ' ():' → logprob: -12.022669792175293
    5. '():
' → logprob: -12.397669792175293
    6. '(' → logprob: -13.522669792175293
    7. '():

' → logprob: -14.397669792175293
    8. ':' → logprob: -15.772669792175293
    9. '()==' → logprob: -16.39767074584961
    10. '()
' → logprob: -16.39767074584961

Token 479: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016158436483237892
    2. '           ' → logprob: -9.625161170959473
    3. ' continue' → logprob: -9.625161170959473
    4. '                
' → logprob: -11.625161170959473
    5. 'continue' → logprob: -11.750161170959473
    6. '                   ' → logprob: -12.750161170959473
    7. ' raise' → logprob: -12.875161170959473
    8. '   ' → logprob: -13.375161170959473
    9. 'raise' → logprob: -13.750161170959473
    10. ',' → logprob: -14.000161170959473

Token 480: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5508374571800232
    2. '               ' → logprob: -1.300837516784668
    3. ' continue' → logprob: -2.050837516784668
    4. '           ' → logprob: -3.800837516784668
    5. '                   ' → logprob: -9.300837516784668
    6. '   ' → logprob: -9.425837516784668
    7. '	continue' → logprob: -9.800837516784668
    8. 'return' → logprob: -11.675837516784668
    9. '_continue' → logprob: -12.050837516784668
    10. ' ' → logprob: -13.175837516784668

Token 481: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12729720771312714
    2. '            
' → logprob: -2.6272971630096436
    3. '<|end|>' → logprob: -3.5022971630096436
    4. '
' → logprob: -4.752297401428223
    5. '  
' → logprob: -5.377297401428223
    6. ' 
' → logprob: -7.252297401428223
    7. '<|end|>' → logprob: -7.377297401428223
    8. '           
' → logprob: -7.752297401428223
    9. '    
' → logprob: -7.877297401428223
    10. '               ' → logprob: -8.252297401428223

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.125210297293961e-05
    2. '            
' → logprob: -9.625081062316895
    3. '
' → logprob: -12.375081062316895
    4. '<|end|>' → logprob: -12.875081062316895
    5. '          ' → logprob: -13.500081062316895
    6. '       ' → logprob: -13.625081062316895
    7. '		' → logprob: -13.750081062316895
    8. '               ' → logprob: -14.000081062316895
    9. '```' → logprob: -14.125081062316895
    10. '​' → logprob: -14.375081062316895

Token 483: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004391309339553118
    2. 'n' (adapté à ' n') → logprob: -5.754391193389893
    3. '       ' → logprob: -8.00439167022705
    4. 'results' → logprob: -8.37939167022705
    5. 'number' → logprob: -8.75439167022705
    6. ' n' → logprob: -8.87939167022705
    7. '            
' → logprob: -9.00439167022705
    8. 'count' → logprob: -9.62939167022705
    9. 'num' → logprob: -9.75439167022705
    10. ' results' → logprob: -10.25439167022705

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269301027059555
    2. '=' → logprob: -2.126929998397827
    3. '=int' → logprob: -13.376930236816406
    4. ' ' → logprob: -15.126930236816406
    5. ' =
' → logprob: -15.876930236816406
    6. ',' → logprob: -16.751930236816406
    7. ' ' → logprob: -17.001930236816406
    8. '=
' → logprob: -17.251930236816406
    9. '＝' → logprob: -17.876930236816406
    10. ' +=' → logprob: -18.376930236816406

Token 485: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25192955136299133
    2. ' int' → logprob: -1.501929521560669
    3. '[int' → logprob: -15.25192928314209
    4. '(int' → logprob: -16.251930236816406
    5. '	int' → logprob: -17.126930236816406
    6. '           ' → logprob: -17.126930236816406
    7. '<int' → logprob: -17.376930236816406
    8. '=int' → logprob: -17.751930236816406
    9. '               ' → logprob: -19.001930236816406
    10. ':int' → logprob: -20.001930236816406

Token 486: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -6.277553620748222e-05
    2. '(' → logprob: -10.000062942504883
    3. 'line' → logprob: -11.000062942504883
    4. '(n' → logprob: -15.000062942504883
    5. ' line' → logprob: -15.750062942504883
    6. '#line' → logprob: -17.000062942504883
    7. '[line' → logprob: -17.375062942504883
    8. '=line' → logprob: -17.750062942504883
    9. ' (' → logprob: -18.250062942504883
    10. '(
' → logprob: -18.625062942504883

Token 487: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870648443698883
    2. ')
' → logprob: -1.137064814567566
    3. '           ' → logprob: -8.762064933776855
    4. '               ' → logprob: -11.012064933776855
    5. ')
' → logprob: -11.137064933776855
    6. '       ' → logprob: -13.137064933776855
    7. ')

' → logprob: -13.762064933776855
    8. ' )' → logprob: -13.887064933776855
    9. ' )
' → logprob: -14.387064933776855
    10. ')`
' → logprob: -14.762064933776855

Token 488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.8828707804204896e-05
    2. '            
' → logprob: -10.625048637390137
    3. '<|end|>' → logprob: -11.125048637390137
    4. '       ' → logprob: -13.250048637390137
    5. '<|end|>' → logprob: -13.375048637390137
    6. '	       ' → logprob: -13.750048637390137
    7. '               ' → logprob: -13.875048637390137
    8. '          ' → logprob: -14.000048637390137
    9. '```' → logprob: -14.375048637390137
    10. '		' → logprob: -14.375048637390137

Token 489: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007182876113802195
    2. 'if' (adapté à ' if') → logprob: -5.007183074951172
    3. 'results' → logprob: -8.132183074951172
    4. ' if' → logprob: -8.757183074951172
    5. '       ' → logprob: -12.257183074951172
    6. ' results' → logprob: -12.632183074951172
    7. '   ' → logprob: -12.882183074951172
    8. '            
' → logprob: -13.132183074951172
    9. '               ' → logprob: -13.757183074951172
    10. '          ' → logprob: -14.007183074951172

Token 490: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33629393577575684
    2. ' n' → logprob: -1.3362939357757568
    3. '1' → logprob: -4.086294174194336
    4. ' ' → logprob: -5.836294174194336
    5. '0' → logprob: -6.586294174194336
    6. '           ' → logprob: -6.711294174194336
    7. '               ' → logprob: -9.086294174194336
    8. ' not' → logprob: -9.211294174194336
    9. '   ' → logprob: -9.336294174194336
    10. 'not' → logprob: -10.086294174194336

Token 491: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.24302247166633606
    2. ' >' → logprob: -1.9930224418640137
    3. '<=' → logprob: -3.3680224418640137
    4. ' <' → logprob: -4.243022441864014
    5. ' ==' → logprob: -4.243022441864014
    6. '>' → logprob: -4.368022441864014
    7. '==' → logprob: -6.493022441864014
    8. ' >=' → logprob: -6.743022441864014
    9. '<' → logprob: -7.368022441864014
    10. '>=' → logprob: -8.743022918701172

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005460034008137882
    2. '0' → logprob: -7.750545978546143
    3. ' ' → logprob: -9.5005464553833
    4. '=' → logprob: -10.3755464553833
    5. '2' → logprob: -12.5005464553833
    6. '>' → logprob: -13.2505464553833
    7. '```' → logprob: -13.8755464553833
    8. '
' → logprob: -14.1255464553833
    9. '   ' → logprob: -14.3755464553833
    10. ' =' → logprob: -14.5005464553833

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005062076961621642
    2. '0' → logprob: -7.625506401062012
    3. '2' → logprob: -11.375506401062012
    4. ' ' → logprob: -12.750506401062012
    5. '=' → logprob: -12.875506401062012
    6. '100' → logprob: -15.313006401062012
    7. '>' → logprob: -15.500506401062012
    8. '```' → logprob: -16.250505447387695
    9. '   ' → logprob: -16.313005447387695
    10. '_' → logprob: -16.750505447387695

Token 494: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0796009972691536
    2. ':
' → logprob: -3.5796010494232178
    3. '           ' → logprob: -3.8296010494232178
    4. '               ' → logprob: -4.204600811004639
    5. ':' → logprob: -4.454600811004639
    6. 'or' → logprob: -8.329601287841797
    7. '       ' → logprob: -10.704601287841797
    8. '   ' → logprob: -10.829601287841797
    9. '          ' → logprob: -11.579601287841797
    10. '                   ' → logprob: -11.704601287841797

Token 495: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3441876471042633
    2. ' n' → logprob: -1.594187617301941
    3. '100' → logprob: -2.7191877365112305
    4. ' ' → logprob: -4.8441877365112305
    5. '10' → logprob: -4.9691877365112305
    6. '    ' → logprob: -5.8441877365112305
    7. '   ' → logprob: -6.3441877365112305
    8. '999' → logprob: -7.0941877365112305
    9. '           ' → logprob: -7.2191877365112305
    10. '1' → logprob: -7.7191877365112305

Token 496: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22542043030261993
    2. ' >' → logprob: -1.6004204750061035
    3. '   ' → logprob: -12.975419998168945
    4. '           ' → logprob: -13.725419998168945
    5. ' ' → logprob: -13.975419998168945
    6. '0' → logprob: -14.850419998168945
    7. '<|end|>' → logprob: -15.100419998168945
    8. '1' → logprob: -15.225419998168945
    9. '>=' → logprob: -15.225419998168945
    10. '>
' → logprob: -15.475419998168945

Token 497: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10671190172433853
    2. '100' → logprob: -2.3567118644714355
    3. '10' → logprob: -5.6067118644714355
    4. '999' → logprob: -6.2317118644714355
    5. ' ' → logprob: -7.1067118644714355
    6. '  ' → logprob: -12.106712341308594
    7. '   ' → logprob: -12.356712341308594
    8. '9' → logprob: -12.606712341308594
    9. '500' → logprob: -13.044212341308594
    10. '```' → logprob: -13.106712341308594

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10475002974271774
    2. '100' → logprob: -2.354749917984009
    3. '10' → logprob: -5.979750156402588
    4. '999' → logprob: -6.229750156402588
    5. ' ' → logprob: -10.72974967956543
    6. '```' → logprob: -13.04224967956543
    7. '9' → logprob: -13.29224967956543
    8. '500' → logprob: -13.60474967956543
    9. '   ' → logprob: -14.22974967956543
    10. '  ' → logprob: -14.41724967956543

Token 499: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2519785761833191
    2. '000' → logprob: -1.5019786357879639
    3. '0' → logprob: -11.626978874206543
    4. '8' → logprob: -11.876978874206543
    5. '   ' → logprob: -11.876978874206543
    6. '```' → logprob: -12.251978874206543
    7. '1' → logprob: -12.751978874206543
    8. '00' → logprob: -12.751978874206543
    9. '7' → logprob: -13.001978874206543
    10. '       ' → logprob: -13.251978874206543

Token 500: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.26083043217658997
    2. '6' → logprob: -2.1358304023742676
    3. '9' → logprob: -2.8858304023742676
    4. '7' → logprob: -3.5108304023742676
    5. '8' → logprob: -4.135830402374268
    6. '_' → logprob: -5.010830402374268
    7. '18' → logprob: -6.760830402374268
    8. '006' → logprob: -7.760830402374268
    9. '999' → logprob: -8.010830879211426
    10. '1' → logprob: -8.385830879211426

Token 501: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026302389800548553
    2. '000' → logprob: -3.6513023376464844
    3. ' ' → logprob: -14.401302337646484
    4. '   ' → logprob: -15.401302337646484
    5. '001' → logprob: -15.776302337646484
    6. '```' → logprob: -15.963802337646484
    7. '006' → logprob: -16.088802337646484
    8. '999' → logprob: -16.151302337646484
    9. '__' → logprob: -16.526302337646484
    10. '  ' → logprob: -16.526302337646484

Token 502: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03385430574417114
    2. '_' → logprob: -3.4088542461395264
    3. '001' → logprob: -9.658854484558105
    4. '100' → logprob: -9.908854484558105
    5. '999' → logprob: -10.158854484558105
    6. '006' → logprob: -11.283854484558105
    7. ' ' → logprob: -11.971354484558105
    8. '1' → logprob: -12.033854484558105
    9. '003' → logprob: -12.533854484558105
    10. '
' → logprob: -12.908854484558105

Token 503: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.206381157040596
    2. ':' → logprob: -1.8313812017440796
    3. '           ' → logprob: -4.206381320953369
    4. ' or' → logprob: -4.831381320953369
    5. '               ' → logprob: -5.831381320953369
    6. '       ' → logprob: -8.081380844116211
    7. ':return' → logprob: -10.706380844116211
    8. '                   ' → logprob: -10.831380844116211
    9. '):
' → logprob: -10.831380844116211
    10. '   ' → logprob: -10.956380844116211

Token 504: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00046725376159884036
    2. ' continue' → logprob: -8.250467300415039
    3. 'continue' → logprob: -8.875467300415039
    4. ':' → logprob: -10.125467300415039
    5. '           ' → logprob: -11.875467300415039
    6. ':
' → logprob: -12.375467300415039
    7. '                   ' → logprob: -12.625467300415039
    8. '_continue' → logprob: -13.000467300415039
    9. '	           ' → logprob: -13.250467300415039
    10. ' continues' → logprob: -13.500467300415039

Token 505: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6774958372116089
    2. '               ' → logprob: -1.4274958372116089
    3. 'continue' (adapté à ' continue') → logprob: -1.4274958372116089
    4. '           ' → logprob: -4.427495956420898
    5. '                   ' → logprob: -8.677495956420898
    6. '   ' → logprob: -9.427495956420898
    7. '	continue' → logprob: -9.552495956420898
    8. ' ' → logprob: -11.677495956420898
    9. '```' → logprob: -11.677495956420898
    10. '_continue' → logprob: -11.927495956420898

Token 506: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003767305053770542
    2. '
' → logprob: -6.128767490386963
    3. '            
' → logprob: -6.628767490386963
    4. '  
' → logprob: -9.128767013549805
    5. '<|end|>' → logprob: -9.378767013549805
    6. '    
' → logprob: -11.253767013549805
    7. '		' → logprob: -11.628767013549805
    8. '<|end|>' → logprob: -11.878767013549805
    9. '        
' → logprob: -12.128767013549805
    10. '
' → logprob: -12.253767013549805

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012940087355673313
    2. '
' → logprob: -4.762939929962158
    3. '            
' → logprob: -5.512939929962158
    4. '  
' → logprob: -8.887940406799316
    5. '    
' → logprob: -10.512940406799316
    6. '           
' → logprob: -10.762940406799316
    7. '<|end|>' → logprob: -10.762940406799316
    8. '        
' → logprob: -10.887940406799316
    9. '
' → logprob: -11.637940406799316
    10. ' 
' → logprob: -12.012940406799316

Token 508: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08017417043447495
    2. 'results' (adapté à ' results') → logprob: -2.580174207687378
    3. ' results' → logprob: -6.705173969268799
    4. '
' → logprob: -10.955174446105957
    5. 'count' → logprob: -11.080174446105957
    6. '       ' → logprob: -11.580174446105957
    7. '            
' → logprob: -12.455174446105957
    8. '   ' → logprob: -12.705174446105957
    9. '          ' → logprob: -12.830174446105957
    10. '	results' → logprob: -12.955174446105957

Token 509: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011802274966612458
    2. '.' → logprob: -6.751180171966553
    3. '.app' → logprob: -12.501180648803711
    4. ' .' → logprob: -12.626180648803711
    5. '.ap' → logprob: -12.876180648803711
    6. '.extend' → logprob: -15.876180648803711
    7. '.add' → logprob: -16.25118064880371
    8. '.Append' → logprob: -16.75118064880371
    9. 'append' → logprob: -17.25118064880371
    10. '​.' → logprob: -17.25118064880371

Token 510: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012085650814697146
    2. 'n' → logprob: -6.751208782196045
    3. '(' → logprob: -10.251208305358887
    4. ' n' → logprob: -12.876208305358887
    5. '(
' → logprob: -14.876208305358887
    6. ' (' → logprob: -17.376209259033203
    7. '	n' → logprob: -17.501209259033203
    8. ')n' → logprob: -18.501209259033203
    9. '   ' → logprob: -19.126209259033203
    10. '_n' → logprob: -20.376209259033203

Token 511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0850018709897995
    2. ')
' → logprob: -3.0850019454956055
    3. '           ' → logprob: -3.3350019454956055
    4. '               ' → logprob: -10.335001945495605
    5. '<|end|>' → logprob: -10.585001945495605
    6. ')n' → logprob: -10.835001945495605
    7. ')return' → logprob: -11.085001945495605
    8. '<|end|>' → logprob: -11.335001945495605
    9. '       ' → logprob: -11.710001945495605
    10. ')
' → logprob: -11.960001945495605

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.0219828002154827e-05
    2. '       ' → logprob: -11.250020027160645
    3. '		' → logprob: -12.750020027160645
    4. '   ' → logprob: -13.875020027160645
    5. '```' → logprob: -14.250020027160645
    6. '	       ' → logprob: -14.375020027160645
    7. '<|end|>' → logprob: -14.750020027160645
    8. '               ' → logprob: -14.750020027160645
    9. '          ' → logprob: -15.250020027160645
    10. '            
' → logprob: -15.500020027160645

Token 513: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.1606123000383377
    2. '           ' → logprob: -2.1606123447418213
    3. ' count' → logprob: -3.4106123447418213
    4. '   ' → logprob: -9.785612106323242
    5. '	count' → logprob: -10.785612106323242
    6. '       ' → logprob: -11.160612106323242
    7. '		' → logprob: -11.660612106323242
    8. '
' → logprob: -14.410612106323242
    9. '	       ' → logprob: -15.285612106323242
    10. ' ' → logprob: -15.285612106323242

Token 514: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4743269085884094
    2. ' +=' → logprob: -0.9743269085884094
    3. '+' → logprob: -8.349327087402344
    4. '=' → logprob: -11.349327087402344
    5. ']+=' → logprob: -14.099327087402344
    6. ' +' → logprob: -15.349327087402344
    7. '+="' → logprob: -15.974327087402344
    8. '<|end|>' → logprob: -16.474327087402344
    9. '   ' → logprob: -16.599327087402344
    10. ' =' → logprob: -16.724327087402344

Token 515: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -19.883615493774414
    4. ' ' → logprob: -20.383615493774414
    5. '```' → logprob: -20.758615493774414
    6. '۱' → logprob: -21.633615493774414
    7. '    ' → logprob: -21.633615493774414
    8. '<|end|>' → logprob: -21.633615493774414
    9. '
' → logprob: -22.258615493774414
    10. '１' → logprob: -22.383615493774414

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -22.25
    4. '```' → logprob: -23.625
    5. '
' → logprob: -24.0
    6. '۱' → logprob: -24.25
    7. '１' → logprob: -24.375
    8. '  ' → logprob: -24.5
    9. 'len' → logprob: -26.25
    10. '১' → logprob: -26.375

Token 517: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016265911981463432
    2. 'return' → logprob: -4.766265869140625
    3. '
' → logprob: -5.391265869140625
    4. '<|end|>' → logprob: -6.141265869140625
    5. ' return' → logprob: -7.766265869140625
    6. '        
' → logprob: -8.141265869140625
    7. '<|end|>' → logprob: -9.891265869140625
    8. '	return' → logprob: -10.266265869140625
    9. '	' → logprob: -10.641265869140625
    10. '   ' → logprob: -11.391265869140625

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00239348690956831
    2. 'return' → logprob: -6.12739372253418
    3. '
' → logprob: -8.87739372253418
    4. ' return' → logprob: -9.87739372253418
    5. '   ' → logprob: -12.50239372253418
    6. '```' → logprob: -12.62739372253418
    7. '	' → logprob: -12.75239372253418
    8. '<|end|>' → logprob: -13.37739372253418
    9. '           ' → logprob: -13.50239372253418
    10. '	return' → logprob: -13.62739372253418

Token 519: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1663157343864441
    2. 'return' (adapté à ' return') → logprob: -1.9163157939910889
    3. ' return' → logprob: -5.29131555557251
    4. '
' → logprob: -7.16631555557251
    5. '   ' → logprob: -8.916316032409668
    6. '	return' → logprob: -9.666316032409668
    7. '<|end|>' → logprob: -11.041316032409668
    8. '	' → logprob: -11.541316032409668
    9. '        
' → logprob: -11.666316032409668
    10. ':return' → logprob: -11.666316032409668

Token 520: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.3868711292743683
    2. ' results' → logprob: -1.136871099472046
    3. '	results' → logprob: -16.511871337890625
    4. '(results' → logprob: -19.261871337890625
    5. '.results' → logprob: -20.886871337890625
    6. 'Results' → logprob: -22.136871337890625
    7. '_results' → logprob: -22.386871337890625
    8. '   ' → logprob: -23.136871337890625
    9. ' ' → logprob: -24.011871337890625
    10. 'result' → logprob: -24.136871337890625

Token 521: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37231600284576416
    2. '<|end|>' → logprob: -1.8723160028457642
    3. 'if' → logprob: -1.9973160028457642
    4. '```' → logprob: -4.747315883636475
    5. 'class' → logprob: -4.872315883636475
    6. '#' → logprob: -5.872315883636475
    7. '<|end|>' → logprob: -6.622315883636475
    8. 'from' → logprob: -7.622315883636475
    9. '
' → logprob: -9.247316360473633
    10. 'parser' → logprob: -9.622316360473633

Token 523: ' Coll' (ID: 17054)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.9095901846885681
    2. 'Coll' → logprob: -0.9095901846885681
    3. 'Main' → logprob: -2.534590244293213
    4. 'Runner' → logprob: -3.034590244293213
    5. 'Solution' → logprob: -4.284590244293213
    6. 'Result' → logprob: -4.409590244293213
    7. 'Sequence' → logprob: -4.409590244293213
    8. 'Program' → logprob: -5.159590244293213
    9. 'Application' → logprob: -5.284590244293213
    10. 'Processor' → logprob: -5.409590244293213

Token 524: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -7.226628895296017e-06
    2. 'az' → logprob: -12.875007629394531
    3. 'Sequence' → logprob: -13.125007629394531
    4. '```' → logprob: -14.125007629394531
    5. 'a' → logprob: -15.000007629394531
    6. 'at' → logprob: -15.500007629394531
    7. '   ' → logprob: -15.625007629394531
    8. 'Seq' → logprob: -15.750007629394531
    9. 'seq' → logprob: -15.875007629394531
    10. 'l' → logprob: -16.12500762939453

Token 525: 'Counter' (ID: 16263)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.2397552728652954
    2. 'Simulator' → logprob: -1.3647552728652954
    3. 'Processor' → logprob: -2.114755153656006
    4. 'Runner' → logprob: -2.364755153656006
    5. 'Sequence' → logprob: -2.489755153656006
    6. 'Analyzer' → logprob: -2.739755153656006
    7. 'Calculator' → logprob: -2.864755153656006
    8. 'Explorer' → logprob: -5.239755153656006
    9. 'Generator' → logprob: -5.364755153656006
    10. 'Cycle' → logprob: -5.614755153656006

Token 526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004110577050596476
    2. ':
' → logprob: -5.504110813140869
    3. '(' → logprob: -11.004110336303711
    4. ' :' → logprob: -13.004110336303711
    5. '():' → logprob: -13.004110336303711
    6. '(object' → logprob: -13.129110336303711
    7. ':def' → logprob: -13.504110336303711
    8. '):' → logprob: -13.629110336303711
    9. ':

' → logprob: -13.879110336303711
    10. '<|end|>' → logprob: -14.254110336303711

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004336493439041078
    2. ' def' → logprob: -7.875433444976807
    3. 'def' → logprob: -10.000433921813965
    4. ':' → logprob: -12.875433921813965
    5. '(' → logprob: -13.125433921813965
    6. '   ' → logprob: -13.375433921813965
    7. '	def' → logprob: -14.750433921813965
    8. ')' → logprob: -15.250433921813965
    9. 'class' → logprob: -15.500433921813965
    10. ',' → logprob: -15.750433921813965

Token 528: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20249848067760468
    2. 'def' (adapté à ' def') → logprob: -1.702498435974121
    3. '   ' → logprob: -6.827498435974121
    4. 'class' → logprob: -14.577498435974121
    5. '    ' → logprob: -15.327498435974121
    6. '	def' → logprob: -15.827498435974121
    7. ' ' → logprob: -16.202499389648438
    8. ':' → logprob: -17.452499389648438
    9. ':def' → logprob: -17.702499389648438
    10. '  ' → logprob: -18.702499389648438

Token 529: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.031530499458313
    2. ' __' → logprob: -1.406530499458313
    3. 'def' → logprob: -1.656530499458313
    4. '__' → logprob: -1.781530499458313
    5. 'init' → logprob: -3.2815303802490234
    6. '_init' → logprob: -7.531530380249023
    7. '   ' → logprob: -7.656530380249023
    8. ' ' → logprob: -8.156530380249023
    9. '```' → logprob: -8.406530380249023
    10. ' init' → logprob: -9.781530380249023

Token 530: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.875
    3. '	init' → logprob: -20.0
    4. '   ' → logprob: -20.875
    5. '```' → logprob: -21.0
    6. '(init' → logprob: -21.25
    7. '.init' → logprob: -21.375
    8. '
' → logprob: -21.625
    9. 'def' → logprob: -21.875
    10. '_init' → logprob: -21.875

Token 531: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4295789301395416
    2. '__(' → logprob: -1.0545789003372192
    3. '(' → logprob: -8.17957878112793
    4. '__(
' → logprob: -8.55457878112793
    5. '   ' → logprob: -8.67957878112793
    6. ' (' → logprob: -9.05457878112793
    7. '_(' → logprob: -10.30457878112793
    8. 'self' → logprob: -10.92957878112793
    9. '__' → logprob: -11.05457878112793
    10. '<>(' → logprob: -11.30457878112793

Token 532: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.20734242349863e-05
    2. '       ' → logprob: -10.125072479248047
    3. '   ' → logprob: -11.375072479248047
    4. '):
' → logprob: -11.750072479248047
    5. ' self' → logprob: -11.875072479248047
    6. ')' → logprob: -12.250072479248047
    7. '
' → logprob: -14.750072479248047
    8. ',' → logprob: -16.000072479248047
    9. '(self' → logprob: -16.500072479248047
    10. '```' → logprob: -17.125072479248047

Token 533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.381758451461792
    2. 'self' → logprob: -1.256758451461792
    3. '       ' → logprob: -4.131758689880371
    4. '(self' → logprob: -4.256758689880371
    5. ' self' → logprob: -6.756758689880371
    6. ' (' → logprob: -7.506758689880371
    7. '   ' → logprob: -7.631758689880371
    8. ',self' → logprob: -8.381758689880371
    9. ' ,' → logprob: -10.006758689880371
    10. '(' → logprob: -11.506758689880371

Token 534: ' coll' (ID: 6110)
  Prédit: 'chooser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chooser' → logprob: -0.06514954566955566
    2. ' chooser' → logprob: -3.6901495456695557
    3. 'sequence' → logprob: -4.190149307250977
    4. 'operations' → logprob: -5.190149307250977
    5. 'max' → logprob: -5.565149307250977
    6. 'start' → logprob: -5.690149307250977
    7. 'operation' → logprob: -6.065149307250977
    8. 'cho' → logprob: -6.440149307250977
    9. 'se' → logprob: -6.940149307250977
    10. 'coll' → logprob: -7.065149307250977

Token 535: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -1.981667537620524e-06
    2. 'at' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 'az' → logprob: -15.500001907348633
    5. 'a' → logprob: -15.625001907348633
    6. 'Sequence' → logprob: -17.375001907348633
    7. 'seq' → logprob: -17.750001907348633
    8. ' sequence' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. 't' → logprob: -18.250001907348633

Token 536: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.023977475240826607
    2. 'sequence' → logprob: -4.023977279663086
    3. 'Sequence' → logprob: -5.273977279663086
    4. ',' → logprob: -8.148977279663086
    5. ':' → logprob: -8.273977279663086
    6. ' sequence' → logprob: -9.523977279663086
    7. '   ' → logprob: -10.398977279663086
    8. '_sequences' → logprob: -11.273977279663086
    9. '_seq' → logprob: -12.273977279663086
    10. '):
' → logprob: -12.398977279663086

Token 537: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12779931724071503
    2. ',' → logprob: -2.6277992725372314
    3. '):' → logprob: -3.1277992725372314
    4. '):
' → logprob: -6.2527995109558105
    5. '   ' → logprob: -7.0027995109558105
    6. ' :' → logprob: -7.5027995109558105
    7. '       ' → logprob: -8.377799034118652
    8. ' ):' → logprob: -9.252799034118652
    9. ' ,' → logprob: -9.752799034118652
    10. ')' → logprob: -10.377799034118652

Token 538: ' Coll' (ID: 17054)
  Prédit: 'Coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coll' → logprob: -0.0011718906462192535
    2. ' Coll' → logprob: -6.751172065734863
    3. ')' → logprob: -14.376172065734863
    4. 'coll' → logprob: -14.626172065734863
    5. '   ' → logprob: -14.751172065734863
    6. '_coll' → logprob: -16.626171112060547
    7. '):
' → logprob: -17.376171112060547
    8. 'Collision' → logprob: -17.376171112060547
    9. 'Collateral' → logprob: -17.501171112060547
    10. 'Sequence' → logprob: -17.751171112060547

Token 539: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -2.339278580620885e-06
    2. 'at' → logprob: -13.875001907348633
    3. 'az' → logprob: -14.125001907348633
    4. 'a' → logprob: -15.375001907348633
    5. '   ' → logprob: -16.125001907348633
    6. 'ats' → logprob: -16.875001907348633
    7. 'ate' → logprob: -17.500001907348633
    8. ' at' → logprob: -17.625001907348633
    9. '```' → logprob: -17.750001907348633
    10. 'ath' → logprob: -18.125001907348633

Token 540: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.0007406574441120028
    2. 'sequence' → logprob: -7.3757405281066895
    3. 'Step' → logprob: -10.125741004943848
    4. '_sequence' → logprob: -11.000741004943848
    5. ')' → logprob: -11.375741004943848
    6. '):
' → logprob: -11.375741004943848
    7. ' sequence' → logprob: -11.500741004943848
    8. '   ' → logprob: -12.125741004943848
    9. ',' → logprob: -12.500741004943848
    10. 'Chooser' → logprob: -12.625741004943848

Token 541: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22915761172771454
    2. ',' → logprob: -2.2291576862335205
    3. '):' → logprob: -2.3541576862335205
    4. '   ' → logprob: -6.604157447814941
    5. '       ' → logprob: -7.229157447814941
    6. '):
' → logprob: -9.479157447814941
    7. ')' → logprob: -10.729157447814941
    8. ' ):
' → logprob: -12.354157447814941
    9. ' ,' → logprob: -12.604157447814941
    10. ',
' → logprob: -12.604157447814941

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008876794017851353
    2. 'self' → logprob: -4.883876800537109
    3. '   ' → logprob: -7.008876800537109
    4. 'def' → logprob: -8.25887680053711
    5. ' self' → logprob: -9.63387680053711
    6. ',' → logprob: -11.38387680053711
    7. '(self' → logprob: -11.88387680053711
    8. ')' → logprob: -12.25887680053711
    9. '        
' → logprob: -12.88387680053711
    10. '<|end|>' → logprob: -13.00887680053711

Token 543: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00250217504799366
    2. ' self' → logprob: -6.627501964569092
    3. '       ' → logprob: -6.752501964569092
    4. '   ' → logprob: -11.87750244140625
    5. '	self' → logprob: -15.00250244140625
    6. 'def' → logprob: -15.25250244140625
    7. 'class' → logprob: -17.00250244140625
    8. '(self' → logprob: -17.50250244140625
    9. '           ' → logprob: -17.75250244140625
    10. ' ' → logprob: -18.00250244140625

Token 544: '.coll' (ID: 71953)
  Prédit: '.coll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coll' → logprob: -0.00015085970517247915
    2. '.counter' → logprob: -9.625150680541992
    3. '.' → logprob: -10.125150680541992
    4. '   ' → logprob: -10.750150680541992
    5. '.sequence' → logprob: -11.625150680541992
    6. 'coll' → logprob: -12.500150680541992
    7. '._' → logprob: -12.625150680541992
    8. '.col' → logprob: -13.000150680541992
    9. '.count' → logprob: -13.375150680541992
    10. '_coll' → logprob: -14.125150680541992

Token 545: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -9.610702363715973e-06
    2. '   ' → logprob: -12.250009536743164
    3. 'az' → logprob: -13.125009536743164
    4. 'seq' → logprob: -14.500009536743164
    5. '```' → logprob: -14.875009536743164
    6. 'at' → logprob: -15.125009536743164
    7. '       ' → logprob: -15.750009536743164
    8. '#' → logprob: -15.875009536743164
    9. 'a' → logprob: -16.000009536743164
    10. '}' → logprob: -16.500009536743164

Token 546: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.7252845029579476e-05
    2. 'sequence' → logprob: -10.625027656555176
    3. '_counter' → logprob: -13.625027656555176
    4. '_count' → logprob: -14.500027656555176
    5. 'Sequence' → logprob: -14.625027656555176
    6. '_' → logprob: -14.875027656555176
    7. '_sequences' → logprob: -15.875027656555176
    8. '   ' → logprob: -16.75002670288086
    9. ' =' → logprob: -16.87502670288086
    10. '=' → logprob: -17.50002670288086

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4812260866165161
    2. ' =' → logprob: -0.9812260866165161
    3. '   ' → logprob: -4.981225967407227
    4. '       ' → logprob: -9.231225967407227
    5. '_sequence' → logprob: -9.481225967407227
    6. '    ' → logprob: -11.106225967407227
    7. '.' → logprob: -11.106225967407227
    8. ':' → logprob: -11.606225967407227
    9. '=self' → logprob: -11.856225967407227
    10. ' ' → logprob: -11.856225967407227

Token 548: ' coll' (ID: 6110)
  Prédit: 'coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coll' → logprob: -0.008614808320999146
    2. ' coll' → logprob: -4.758615016937256
    3. 'col' → logprob: -16.008615493774414
    4. '(coll' → logprob: -16.633615493774414
    5. 'collision' → logprob: -18.383615493774414
    6. '   ' → logprob: -18.383615493774414
    7. '_coll' → logprob: -18.883615493774414
    8. '.coll' → logprob: -19.008615493774414
    9. '```' → logprob: -19.133615493774414
    10. 'c' → logprob: -19.258615493774414

Token 549: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -6.704273118884885e-07
    2. 'at' → logprob: -14.625000953674316
    3. 'az' → logprob: -16.5
    4. '   ' → logprob: -17.375
    5. 't' → logprob: -17.375
    6. '#' → logprob: -19.375
    7. '_at' → logprob: -19.625
    8. ' at' → logprob: -19.625
    9. 'a' → logprob: -19.75
    10. 'l' → logprob: -20.125

Token 550: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.023789141327142715
    2. 'Sequence' → logprob: -3.773789167404175
    3. 'sequence' → logprob: -7.523788928985596
    4. '   ' → logprob: -14.148789405822754
    5. 'quence' → logprob: -14.148789405822754
    6. ' sequence' → logprob: -14.148789405822754
    7. '_SEQUENCE' → logprob: -14.273789405822754
    8. '
' → logprob: -16.148788452148438
    9. '.Sequence' → logprob: -16.148788452148438
    10. '_' → logprob: -16.148788452148438

Token 551: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009276442229747772
    2. '
' → logprob: -4.759276390075684
    3. 'def' → logprob: -7.384276390075684
    4. ' def' → logprob: -10.634276390075684
    5. '    
' → logprob: -11.134276390075684
    6. '<|end|>' → logprob: -14.634276390075684
    7. '	def' → logprob: -14.759276390075684
    8. '```' → logprob: -14.884276390075684
    9. ' ' → logprob: -15.759276390075684
    10. '  
' → logprob: -16.00927734375

Token 552: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2520705759525299
    2. '   ' → logprob: -1.5020705461502075
    3. ' def' → logprob: -8.877070426940918
    4. '
' → logprob: -13.377070426940918
    5. 'from' → logprob: -15.752070426940918
    6. '	def' → logprob: -15.877070426940918
    7. 'class' → logprob: -17.627071380615234
    8. '```' → logprob: -18.127071380615234
    9. '    
' → logprob: -18.627071380615234
    10. ' ' → logprob: -18.752071380615234

Token 553: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8624639324116288e-06
    2. ' def' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.750001907348633
    4. 'from' → logprob: -19.875001907348633
    5. '	def' → logprob: -22.125001907348633
    6. '
' → logprob: -23.125001907348633
    7. 'class' → logprob: -23.375001907348633
    8. ' ' → logprob: -24.125001907348633
    9. '  ' → logprob: -26.250001907348633
    10. '    
' → logprob: -26.500001907348633

Token 554: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00010223194840364158
    2. ' count' → logprob: -10.000102043151855
    3. 'compute' → logprob: -10.375102043151855
    4. 'get' → logprob: -11.250102043151855
    5. 'calculate' → logprob: -12.500102043151855
    6. 'max' → logprob: -12.625102043151855
    7. 'coll' → logprob: -13.125102043151855
    8. 'length' → logprob: -13.500102043151855
    9. 'sequence' → logprob: -13.875102043151855
    10. 'run' → logprob: -14.625102043151855

Token 555: '_steps' (ID: 52120)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005034659989178181
    2. '(' → logprob: -7.8755035400390625
    3. '_steps' → logprob: -9.125503540039062
    4. '_sequences' → logprob: -12.500503540039062
    5. '_sequence' → logprob: -12.750503540039062
    6. 'self' → logprob: -12.750503540039062
    7. '(s' → logprob: -14.500503540039062
    8. '   ' → logprob: -14.500503540039062
    9. '_start' → logprob: -14.625503540039062
    10. ' (' → logprob: -14.750503540039062

Token 556: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.625024795532227
    3. 'self' → logprob: -15.250024795532227
    4. ' (' → logprob: -15.375024795532227
    5. '(
' → logprob: -16.250024795532227
    6. '   ' → logprob: -16.500024795532227
    7. '(se' → logprob: -18.625024795532227
    8. '(sel' → logprob: -18.750024795532227
    9. '(s' → logprob: -19.125024795532227
    10. ' self' → logprob: -19.875024795532227

Token 557: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013709533959627151
    2. '(' → logprob: -7.751370906829834
    3. 'self' → logprob: -7.751370906829834
    4. ',' → logprob: -8.001371383666992
    5. ' (' → logprob: -9.001371383666992
    6. ')(' → logprob: -10.751371383666992
    7. ')' → logprob: -11.251371383666992
    8. ' self' → logprob: -11.876371383666992
    9. ',self' → logprob: -12.751371383666992
    10. '   ' → logprob: -12.876371383666992

Token 558: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01604023203253746
    2. 'self' → logprob: -4.391040325164795
    3. 'start' → logprob: -6.141040325164795
    4. '   ' → logprob: -7.016040325164795
    5. ' n' → logprob: -7.891040325164795
    6. '       ' → logprob: -9.766039848327637
    7. ' self' → logprob: -10.766039848327637
    8. ' start' → logprob: -12.016039848327637
    9. '    ' → logprob: -12.516039848327637
    10. ')' → logprob: -13.141039848327637

Token 559: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16180700063705444
    2. ')' → logprob: -2.161807060241699
    3. 'self' → logprob: -3.786807060241699
    4. '   ' → logprob: -5.161807060241699
    5. '(self' → logprob: -5.786807060241699
    6. '       ' → logprob: -6.536807060241699
    7. '):' → logprob: -6.911807060241699
    8. ',' → logprob: -8.1618070602417
    9. ' self' → logprob: -10.2868070602417
    10. ' )' → logprob: -11.1618070602417

Token 560: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005381383933126926
    2. ' int' → logprob: -5.2553815841674805
    3. 'n' → logprob: -9.88038158416748
    4. ')' → logprob: -10.00538158416748
    5. 'self' → logprob: -10.25538158416748
    6. '   ' → logprob: -11.50538158416748
    7. '       ' → logprob: -13.25538158416748
    8. ' n' → logprob: -13.63038158416748
    9. ' ' → logprob: -13.75538158416748
    10. ' self' → logprob: -14.75538158416748

Token 561: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010723850573413074
    2. '):' → logprob: -9.375106811523438
    3. '   ' → logprob: -11.375106811523438
    4. '       ' → logprob: -12.500106811523438
    5. ' )' → logprob: -12.500106811523438
    6. 'self' → logprob: -13.250106811523438
    7. '):
' → logprob: -13.500106811523438
    8. ':' → logprob: -15.625106811523438
    9. ')->' → logprob: -15.625106811523438
    10. '(self' → logprob: -16.875106811523438

Token 562: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07770580798387527
    2. '->' → logprob: -3.4527058601379395
    3. ' ->' → logprob: -3.5777058601379395
    4. '       ' → logprob: -4.8277058601379395
    5. '(' → logprob: -5.3277058601379395
    6. ')' → logprob: -6.7027058601379395
    7. ':' → logprob: -7.3277058601379395
    8. 'self' → logprob: -8.327705383300781
    9. '   ' → logprob: -9.077705383300781
    10. ')->' → logprob: -10.327705383300781

Token 563: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.8087270038668066e-05
    2. ' int' → logprob: -10.625027656555176
    3. 'Iterator' → logprob: -12.750027656555176
    4. '   ' → logprob: -15.125027656555176
    5. 'Optional' → logprob: -15.250027656555176
    6. '(int' → logprob: -15.750027656555176
    7. 'List' → logprob: -16.125028610229492
    8. 'len' → logprob: -18.500028610229492
    9. 'next' → logprob: -18.625028610229492
    10. 'Iterable' → logprob: -18.625028610229492

Token 564: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6723767518997192
    2. '(self' → logprob: -1.4223767518997192
    3. ':' → logprob: -1.7973767518997192
    4. ':
' → logprob: -2.6723766326904297
    5. '(' → logprob: -5.17237663269043
    6. '   ' → logprob: -5.54737663269043
    7. 'self' → logprob: -6.42237663269043
    8. '):
' → logprob: -7.54737663269043
    9. '(
' → logprob: -8.17237663269043
    10. '():
' → logprob: -8.42237663269043

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04540077969431877
    2. 'count' → logprob: -3.295400857925415
    3. 'steps' → logprob: -5.670400619506836
    4. ' count' → logprob: -6.170400619506836
    5. ' steps' → logprob: -6.795400619506836
    6. 'step' → logprob: -8.420400619506836
    7. '   ' → logprob: -8.920400619506836
    8. '```' → logprob: -9.545400619506836
    9. ' step' → logprob: -9.795400619506836
    10. 'current' → logprob: -10.170400619506836

Token 566: ' iterator' (ID: 30787)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16434699296951294
    2. 'steps' → logprob: -2.164346933364868
    3. '       ' → logprob: -3.414346933364868
    4. 'step' → logprob: -5.914347171783447
    5. 'return' → logprob: -7.664347171783447
    6. ' count' → logprob: -7.914347171783447
    7. 'counter' → logprob: -8.539346694946289
    8. ' steps' → logprob: -9.914346694946289
    9. 'result' → logprob: -11.039346694946289
    10. 'length' → logprob: -11.539346694946289

Token 567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804286941885948
    2. '=' → logprob: -3.2880427837371826
    3. 's' → logprob: -14.663043022155762
    4. '   ' → logprob: -15.413043022155762
    5. 'for' → logprob: -15.913043022155762
    6. ' ' → logprob: -16.038042068481445
    7. '_iter' → logprob: -16.413042068481445
    8. ' =
' → logprob: -16.413042068481445
    9. '       ' → logprob: -16.413042068481445
    10. ' ' → logprob: -16.913042068481445

Token 568: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16023366153240204
    2. ' self' → logprob: -1.9102336168289185
    3. '       ' → logprob: -12.160233497619629
    4. '(self' → logprob: -12.785233497619629
    5. '	self' → logprob: -13.785233497619629
    6. '=self' → logprob: -15.035233497619629
    7. '[self' → logprob: -16.535234451293945
    8. '           ' → logprob: -17.785234451293945
    9. 'next' → logprob: -18.035234451293945
    10. '        ' → logprob: -18.160234451293945

Token 569: '.coll' (ID: 71953)
  Prédit: '.coll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coll' → logprob: -2.339278580620885e-06
    2. 'coll' → logprob: -13.500001907348633
    3. '.' → logprob: -15.125001907348633
    4. '.col' → logprob: -15.125001907348633
    5. ' .' → logprob: -15.750001907348633
    6. '       ' → logprob: -17.250001907348633
    7. '.c' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '.counter' → logprob: -18.625001907348633
    10. '```' → logprob: -18.750001907348633

Token 570: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -1.9361264946837764e-07
    2. 'at' → logprob: -16.125
    3. 'az' → logprob: -18.75
    4. 't' → logprob: -19.375
    5. 'alt' → logprob: -19.375
    6. 'ats' → logprob: -20.5
    7. 'seq' → logprob: -20.625
    8. '   ' → logprob: -20.75
    9. '_at' → logprob: -20.75
    10. 'lat' → logprob: -21.25

Token 571: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0021895181853324175
    2. 'Sequence' → logprob: -6.252189636230469
    3. 'sequence' → logprob: -8.252189636230469
    4. 'self' → logprob: -16.62718963623047
    5. '_SEQUENCE' → logprob: -16.62718963623047
    6. ' sequence' → logprob: -17.25218963623047
    7. '\' → logprob: -18.12718963623047
    8. 'se' → logprob: -18.37718963623047
    9. 's' → logprob: -18.87718963623047
    10. '_' → logprob: -19.25218963623047

Token 572: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -3.9292415749514475e-05
    2. 'start' → logprob: -10.375039100646973
    3. '.' → logprob: -11.750039100646973
    4. ' .' → logprob: -16.00004005432129
    5. '(start' → logprob: -17.50004005432129
    6. ' start' → logprob: -17.75004005432129
    7. '().' → logprob: -18.00004005432129
    8. '
' → logprob: -19.12504005432129
    9. '[start' → logprob: -19.12504005432129
    10. '.star' → logprob: -19.87504005432129

Token 573: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. ' (' → logprob: -18.250001907348633
    4. '(
' → logprob: -19.000001907348633
    5. 'n' → logprob: -19.375001907348633
    6. '(node' → logprob: -21.875001907348633
    7. '(num' → logprob: -22.125001907348633
    8. '((' → logprob: -22.125001907348633
    9. '(nt' → logprob: -22.250001907348633
    10. '(start' → logprob: -22.375001907348633

Token 574: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26056379079818726
    2. ')
' → logprob: -1.510563850402832
    3. '       ' → logprob: -4.760563850402832
    4. '   ' → logprob: -11.135563850402832
    5. ')
' → logprob: -11.135563850402832
    6. ' )' → logprob: -13.385563850402832
    7. ' )
' → logprob: -13.635563850402832
    8. '
' → logprob: -13.760563850402832
    9. '      ' → logprob: -14.260563850402832
    10. '           ' → logprob: -15.010563850402832

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16966108977794647
    2. '
' → logprob: -2.544661045074463
    3. 'next' → logprob: -3.044661045074463
    4. 'count' → logprob: -3.919661045074463
    5. ' next' → logprob: -5.919661045074463
    6. 'steps' → logprob: -5.919661045074463
    7. '        
' → logprob: -6.419661045074463
    8. 'result' → logprob: -7.669661045074463
    9. '```' → logprob: -7.794661045074463
    10. 'step' → logprob: -8.294661521911621

Token 576: ' next' (ID: 2613)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4878244400024414
    2. 'steps' → logprob: -0.9878244400024414
    3. 'next' (adapté à ' next') → logprob: -4.487824440002441
    4. '       ' → logprob: -6.362824440002441
    5. 'counter' → logprob: -8.362824440002441
    6. 'sum' → logprob: -8.487824440002441
    7. 'step' → logprob: -8.612824440002441
    8. 'return' → logprob: -10.362824440002441
    9. 'result' → logprob: -12.237824440002441
    10. ' count' → logprob: -12.237824440002441

Token 577: '(iterator' (ID: 145128)
  Prédit: '(iterator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iterator' → logprob: -0.002394440583884716
    2. '_count' → logprob: -6.877394676208496
    3. '_step' → logprob: -7.502394676208496
    4. 'count' → logprob: -7.877394676208496
    5. '_val' → logprob: -9.127394676208496
    6. '_value' → logprob: -9.252394676208496
    7. 'val' → logprob: -9.627394676208496
    8. '(' → logprob: -10.002394676208496
    9. '_steps' → logprob: -11.002394676208496
    10. 'Step' → logprob: -11.377394676208496

Token 578: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021989059168845415
    2. '()
' → logprob: -6.127198696136475
    3. '(' → logprob: -12.502199172973633
    4. '()
' → logprob: -12.502199172973633
    5. '()

' → logprob: -12.752199172973633
    6. ')' → logprob: -13.377199172973633
    7. '())' → logprob: -13.627199172973633
    8. '()\' → logprob: -15.377199172973633
    9. '()`' → logprob: -15.752199172973633
    10. ' ()' → logprob: -15.877199172973633

Token 579: ' ' (ID: 220)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7124722003936768
    2. '       ' → logprob: -1.0874722003936768
    3. 'step' → logprob: -2.7124722003936768
    4. 'steps' → logprob: -2.7124722003936768
    5. '()' → logprob: -3.5874722003936768
    6. '()
' → logprob: -5.712471961975098
    7. 'for' → logprob: -5.837471961975098
    8. 'counter' → logprob: -6.087471961975098
    9. '#' → logprob: -7.462471961975098
    10. '(step' → logprob: -7.587471961975098

Token 580: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9070390462875366
    2. 'count' → logprob: -1.2820390462875366
    3. 'step' → logprob: -2.157039165496826
    4. '       ' → logprob: -2.282039165496826
    5. '()
' → logprob: -2.907039165496826
    6. 'steps' → logprob: -3.407039165496826
    7. 'counter' → logprob: -5.532039165496826
    8. 'for' → logprob: -5.657039165496826
    9. '#' → logprob: -5.657039165496826
    10. '()
' → logprob: -7.782039165496826

Token 581: ' skip' (ID: 16677)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06396637111902237
    2. 'next' → logprob: -3.3139662742614746
    3. '#' → logprob: -4.813966274261475
    4. 'iterator' → logprob: -4.813966274261475
    5. 'step' → logprob: -6.063966274261475
    6. 'pass' → logprob: -6.188966274261475
    7. 'count' → logprob: -6.938966274261475
    8. 'current' → logprob: -7.438966274261475
    9. 'steps' → logprob: -7.438966274261475
    10. '_=' → logprob: -7.438966274261475

Token 582: ' initial' (ID: 4871)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6292898654937744
    2. '1' → logprob: -1.2542898654937744
    3. '0' → logprob: -1.8792898654937744
    4. 'n' → logprob: -4.254289627075195
    5. 'initial' → logprob: -5.754289627075195
    6. 'the' → logprob: -6.004289627075195
    7. '_' → logprob: -6.254289627075195
    8. ' current' → logprob: -6.754289627075195
    9. 'yield' → logprob: -7.254289627075195
    10. '#' → logprob: -7.379289627075195

Token 583: ' value' (ID: 1432)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6613238453865051
    2. 'token' → logprob: -1.7863237857818604
    3. '<|end|>' → logprob: -2.1613237857818604
    4. 'value' → logprob: -2.9113237857818604
    5. 'n' → logprob: -3.1613237857818604
    6. 'return' → logprob: -3.4113237857818604
    7. 'yield' → logprob: -4.1613240242004395
    8. 'step' → logprob: -4.9113240242004395
    9. '<|end|>' → logprob: -5.2863240242004395
    10. '```' → logprob: -5.4113240242004395

Token 584: ' itself' (ID: 8807)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3595876395702362
    2. 'steps' → logprob: -1.8595876693725586
    3. '       ' → logprob: -1.9845876693725586
    4. 'step' → logprob: -5.109587669372559
    5. ' count' → logprob: -7.109587669372559
    6. 'counter' → logprob: -7.484587669372559
    7. ' steps' → logprob: -7.984587669372559
    8. ',' → logprob: -7.984587669372559
    9. '
' → logprob: -8.734587669372559
    10. 'result' → logprob: -9.234587669372559

Token 585: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6152541041374207
    2. 'count' → logprob: -0.8652541041374207
    3. 'steps' → logprob: -3.3652541637420654
    4. 'step' → logprob: -6.115253925323486
    5. '
' → logprob: -7.115253925323486
    6. ' count' → logprob: -8.365254402160645
    7. 'counter' → logprob: -8.365254402160645
    8. ',' → logprob: -8.490254402160645
    9. '        
' → logprob: -9.365254402160645
    10. 'result' → logprob: -9.740254402160645

Token 586: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.49916812777519226
    2. '       ' → logprob: -0.9991681575775146
    3. 'steps' → logprob: -4.3741679191589355
    4. 'step' → logprob: -4.6241679191589355
    5. ' count' → logprob: -6.9991679191589355
    6. '
' → logprob: -7.4991679191589355
    7. 'counter' → logprob: -8.374168395996094
    8. ',' → logprob: -8.624168395996094
    9. 'for' → logprob: -8.874168395996094
    10. ' step' → logprob: -9.749168395996094

Token 587: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.08243704587221146
    2. 'steps' → logprob: -2.582437038421631
    3. '       ' → logprob: -5.832437038421631
    4. 'step' → logprob: -7.832437038421631
    5. 'counter' → logprob: -8.582437515258789
    6. 'return' → logprob: -11.832437515258789
    7. 'counts' → logprob: -11.832437515258789
    8. ' count' → logprob: -12.332437515258789
    9. 'cnt' → logprob: -13.082437515258789
    10. 'for' → logprob: -13.082437515258789

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12705861032009125
    2. '=' → logprob: -2.127058506011963
    3. '_' → logprob: -9.002058982849121
    4. '_=' → logprob: -13.127058982849121
    5. ' ' → logprob: -13.377058982849121
    6. ' +=' → logprob: -13.627058982849121
    7. '_space' → logprob: -14.002058982849121
    8. '   ' → logprob: -14.627058982849121
    9. 'space' → logprob: -14.752058982849121
    10. '	' → logprob: -15.752058982849121

Token 589: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002962726866826415
    2. '1' → logprob: -6.002962589263916
    3. ' ' → logprob: -7.627962589263916
    4. '   ' → logprob: -15.377963066101074
    5. '       ' → logprob: -18.377962112426758
    6. '۰' → logprob: -18.877962112426758
    7. '  ' → logprob: -19.877962112426758
    8. '    ' → logprob: -20.190462112426758
    9. '=' → logprob: -20.190462112426758
    10. '     ' → logprob: -20.440462112426758

Token 590: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009176511666737497
    2. '1' → logprob: -7.000917434692383
    3. ' ' → logprob: -12.000917434692383
    4. '   ' → logprob: -19.625917434692383
    5. '۰' → logprob: -20.000917434692383
    6. '=' → logprob: -21.375917434692383
    7. '０' → logprob: -21.563417434692383
    8. 'zero' → logprob: -21.688417434692383
    9. 'sum' → logprob: -22.125917434692383
    10. ' ' → logprob: -22.250917434692383

Token 591: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009540505707263947
    2. ' for' → logprob: -5.634540557861328
    3. '<|end|>' → logprob: -6.009540557861328
    4. '        
' → logprob: -7.134540557861328
    5. ' 
' → logprob: -7.259540557861328
    6. '  
' → logprob: -7.634540557861328
    7. '   ' → logprob: -8.259540557861328
    8. '
' → logprob: -8.509540557861328
    9. '    
' → logprob: -8.759540557861328
    10. 'for' → logprob: -8.759540557861328

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1379513144493103
    2. ' for' → logprob: -2.262951374053955
    3. 'for' → logprob: -4.762951374053955
    4. '   ' → logprob: -5.262951374053955
    5. '<|end|>' → logprob: -5.637951374053955
    6. '        
' → logprob: -6.887951374053955
    7. '  
' → logprob: -6.887951374053955
    8. '	' → logprob: -7.137951374053955
    9. '    
' → logprob: -7.137951374053955
    10. '
' → logprob: -7.137951374053955

Token 593: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043102685594931245
    2. '       ' → logprob: -7.750431060791016
    3. ' for' → logprob: -15.250431060791016
    4. 'try' → logprob: -16.000431060791016
    5. '	for' → logprob: -17.375431060791016
    6. '   ' → logprob: -17.750431060791016
    7. 'while' → logprob: -19.000431060791016
    8. '```' → logprob: -21.375431060791016
    9. 'For' → logprob: -22.125431060791016
    10. 'fort' → logprob: -22.500431060791016

Token 594: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002647240413352847
    2. 'value' → logprob: -6.252647399902344
    3. 'step' → logprob: -8.502647399902344
    4. '_step' → logprob: -8.877647399902344
    5. '_value' → logprob: -9.002647399902344
    6. 'num' → logprob: -9.752647399902344
    7. ' _' → logprob: -10.002647399902344
    8. 'number' → logprob: -10.502647399902344
    9. '_number' → logprob: -11.002647399902344
    10. 'val' → logprob: -11.002647399902344

Token 595: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00016778295685071498
    2. 'in' → logprob: -8.750167846679688
    3. 'value' → logprob: -12.750167846679688
    4. ' ' → logprob: -13.000167846679688
    5. 'current' → logprob: -13.375167846679688
    6. 'number' → logprob: -13.750167846679688
    7. '  ' → logprob: -14.875167846679688
    8. 'n' → logprob: -15.125167846679688
    9. 'step' → logprob: -15.875167846679688
    10. 'num' → logprob: -16.125167846679688

Token 596: ' iterator' (ID: 30787)
  Prédit: 'iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iterator' → logprob: -4.024604277219623e-05
    2. 'range' → logprob: -10.500040054321289
    3. ' iterator' → logprob: -12.000040054321289
    4. '(iterator' → logprob: -12.500040054321289
    5. 'enumer' → logprob: -14.000040054321289
    6. 'self' → logprob: -14.000040054321289
    7. 'iter' → logprob: -14.500040054321289
    8. 'operator' → logprob: -15.875040054321289
    9. '
' → logprob: -16.50004005432129
    10. '```' → logprob: -16.87504005432129

Token 597: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11549782752990723
    2. '           ' → logprob: -2.8654978275299072
    3. ':
' → logprob: -3.6154978275299072
    4. '<|end|>' → logprob: -4.740497589111328
    5. '<|end|>' → logprob: -5.115497589111328
    6. ',' → logprob: -5.115497589111328
    7. '       ' → logprob: -5.615497589111328
    8. '   ' → logprob: -8.990497589111328
    9. '.' → logprob: -9.865497589111328
    10. '               ' → logprob: -9.865497589111328

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00286918506026268
    2. 'count' → logprob: -5.877869129180908
    3. ' count' → logprob: -10.502869606018066
    4. '       ' → logprob: -11.002869606018066
    5. '   ' → logprob: -11.752869606018066
    6. '            
' → logprob: -12.502869606018066
    7. '```' → logprob: -13.127869606018066
    8. '<|end|>' → logprob: -13.627869606018066
    9. '
' → logprob: -13.752869606018066
    10. '          ' → logprob: -14.002869606018066

Token 599: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.08099891245365143
    2. '           ' → logprob: -2.5809988975524902
    3. ' count' → logprob: -6.70599889755249
    4. '               ' → logprob: -7.33099889755249
    5. '   ' → logprob: -8.580999374389648
    6. '       ' → logprob: -10.330999374389648
    7. '	count' → logprob: -12.580999374389648
    8. '```' → logprob: -13.455999374389648
    9. '  ' → logprob: -14.205999374389648
    10. ' ' → logprob: -14.330999374389648

Token 600: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0788951888680458
    2. ' +=' → logprob: -2.578895092010498
    3. '=' → logprob: -12.453895568847656
    4. ']+=' → logprob: -14.078895568847656
    5. '   ' → logprob: -14.953895568847656
    6. '+' → logprob: -15.828895568847656
    7. '    ' → logprob: -16.078895568847656
    8. '       ' → logprob: -17.203895568847656
    9. '        ' → logprob: -17.203895568847656
    10. '           ' → logprob: -18.578895568847656

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -19.629077911376953
    4. '```' → logprob: -20.129077911376953
    5. '<|end|>' → logprob: -20.629077911376953
    6. ' ' → logprob: -21.004077911376953
    7. '۱' → logprob: -21.754077911376953
    8. '  ' → logprob: -22.379077911376953
    9. '0' → logprob: -22.629077911376953
    10. '
' → logprob: -23.441577911376953

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -22.125
    4. '```' → logprob: -23.625
    5. '۱' → logprob: -24.625
    6. '１' → logprob: -25.125
    7. '       ' → logprob: -25.5
    8. '
' → logprob: -25.75
    9. '0' → logprob: -26.0
    10. '           ' → logprob: -26.25

Token 603: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004170883446931839
    2. 'return' → logprob: -5.629170894622803
    3. ' return' → logprob: -8.129170417785645
    4. '
' → logprob: -8.629170417785645
    5. '<|end|>' → logprob: -9.629170417785645
    6. '   ' → logprob: -11.754170417785645
    7. '	return' → logprob: -12.004170417785645
    8. '        
' → logprob: -12.504170417785645
    9. '	' → logprob: -12.754170417785645
    10. '```' → logprob: -13.254170417785645

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021176543668843806
    2. 'return' → logprob: -8.500211715698242
    3. '   ' → logprob: -12.375211715698242
    4. ' return' → logprob: -12.625211715698242
    5. '	return' → logprob: -14.875211715698242
    6. '           ' → logprob: -15.625211715698242
    7. '```' → logprob: -15.750211715698242
    8. '	' → logprob: -16.000211715698242
    9. '      ' → logprob: -16.625211715698242
    10. '<|end|>' → logprob: -17.625211715698242

Token 605: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10054835677146912
    2. '       ' → logprob: -2.350548267364502
    3. ' return' → logprob: -8.22554874420166
    4. '   ' → logprob: -9.60054874420166
    5. '	return' → logprob: -12.10054874420166
    6. '{return' → logprob: -15.72554874420166
    7. '           ' → logprob: -16.225547790527344
    8. '```' → logprob: -16.225547790527344
    9. ' ' → logprob: -16.350547790527344
    10. '
' → logprob: -16.850547790527344

Token 606: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.02324547804892063
    2. ' count' → logprob: -3.7732455730438232
    3. '	count' → logprob: -19.523244857788086
    4. '(count' → logprob: -21.773244857788086
    5. '[count' → logprob: -21.898244857788086
    6. '_count' → logprob: -22.398244857788086
    7. '   ' → logprob: -22.398244857788086
    8. '$count' → logprob: -22.523244857788086
    9. '.count' → logprob: -23.523244857788086
    10. '=count' → logprob: -23.523244857788086

Token 607: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17511796951293945
    2. '<|end|>' → logprob: -2.0501179695129395
    3. 'if' → logprob: -3.9251179695129395
    4. 'class' → logprob: -4.9251179695129395
    5. '#' → logprob: -6.0501179695129395
    6. '```' → logprob: -7.0501179695129395
    7. '   ' → logprob: -7.4251179695129395
    8. 'from' → logprob: -7.8001179695129395
    9. '<|end|>' → logprob: -7.9251179695129395
    10. ' ' → logprob: -9.550117492675781

Token 608: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -3.9650025428272784e-05
    2. ' run' → logprob: -10.875040054321289
    3. ' process' → logprob: -11.125040054321289
    4. ' solve' → logprob: -13.625040054321289
    5. 'main' → logprob: -13.875040054321289
    6. ' compute' → logprob: -14.000040054321289
    7. ' generate' → logprob: -14.250040054321289
    8. ' calculate' → logprob: -14.375040054321289
    9. ' def' → logprob: -14.750040054321289
    10. ' solution' → logprob: -15.125040054321289

Token 610: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.978233846486546e-05
    2. '()' → logprob: -10.375049591064453
    3. ' ():' → logprob: -11.875049591064453
    4. '():
' → logprob: -12.000049591064453
    5. '()>' → logprob: -12.500049591064453
    6. '(' → logprob: -14.125049591064453
    7. 'def' → logprob: -15.000049591064453
    8. ':' → logprob: -15.500049591064453
    9. '()">' → logprob: -16.250049591064453
    10. '():
' → logprob: -16.500049591064453

Token 611: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006178391631692648
    2. '():
' → logprob: -7.750617980957031
    3. ':' → logprob: -8.625617980957031
    4. '()' → logprob: -12.000617980957031
    5. ' ():' → logprob: -14.125617980957031
    6. '():
' → logprob: -15.250617980957031
    7. '()->' → logprob: -16.12561798095703
    8. '()>' → logprob: -16.50061798095703
    9. '):' → logprob: -16.62561798095703
    10. '(":' → logprob: -16.87561798095703

Token 612: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002467966405674815
    2. 'int' → logprob: -9.00024700164795
    3. ' None' → logprob: -9.00024700164795
    4. 'none' → logprob: -18.125246047973633
    5. ' int' → logprob: -20.000246047973633
    6. '_None' → logprob: -21.875246047973633
    7. '(None' → logprob: -22.000246047973633
    8. '   ' → logprob: -22.375246047973633
    9. 'void' → logprob: -22.875246047973633
    10. 'No' → logprob: -23.875246047973633

Token 613: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18845760822296143
    2. ':' → logprob: -1.8134576082229614
    3. '():
' → logprob: -4.813457489013672
    4. ':
' → logprob: -7.688457489013672
    5. '):' → logprob: -10.563457489013672
    6. '   ' → logprob: -10.813457489013672
    7. '()' → logprob: -10.938457489013672
    8. ' :' → logprob: -11.938457489013672
    9. ' ():' → logprob: -12.188457489013672
    10. '(' → logprob: -12.813457489013672

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006178391631692648
    2. 'parser' → logprob: -7.625617980957031
    3. ' parser' → logprob: -9.250617980957031
    4. 'input' → logprob: -10.500617980957031
    5. ' input' → logprob: -13.000617980957031
    6. '	parser' → logprob: -13.625617980957031
    7. '   ' → logprob: -13.875617980957031
    8. 'inputs' → logprob: -14.625617980957031
    9. 'operations' → logprob: -14.750617980957031
    10. 'parse' → logprob: -15.250617980957031

Token 615: ' even' (ID: 1952)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.4227389097213745
    2. 'even' (adapté à ' even') → logprob: -1.6727389097213745
    3. 'input' → logprob: -2.422739028930664
    4. 'chooser' → logprob: -2.922739028930664
    5. '   ' → logprob: -4.797739028930664
    6. 'operations' → logprob: -5.422739028930664
    7. 'ev' → logprob: -7.922739028930664
    8. 'def' → logprob: -8.172739028930664
    9. 'inputs' → logprob: -8.422739028930664
    10. ' parser' → logprob: -8.797739028930664

Token 616: '_op' (ID: 20111)
  Prédit: '_operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operation' → logprob: -0.1986856609582901
    2. '_op' → logprob: -2.323685646057129
    3. '_operations' → logprob: -2.948685646057129
    4. '_ops' → logprob: -3.573685646057129
    5. '_' → logprob: -6.823685646057129
    6. 'op' → logprob: -8.823685646057129
    7. '_choice' → logprob: -8.823685646057129
    8. '_sequence' → logprob: -9.448685646057129
    9. ' =' → logprob: -9.573685646057129
    10. 'Operation' → logprob: -9.698685646057129

Token 617: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6942049264907837
    2. 'er' → logprob: -0.9442049264907837
    3. '=' → logprob: -2.194204807281494
    4. '   ' → logprob: -10.194205284118652
    5. 's' → logprob: -10.319205284118652
    6. 'ERATION' → logprob: -11.444205284118652
    7. '  ' → logprob: -13.444205284118652
    8. '```' → logprob: -13.444205284118652
    9. 'ration' → logprob: -13.444205284118652
    10. '_' → logprob: -13.569205284118652

Token 618: ' Even' (ID: 10669)
  Prédit: 'Even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Even' → logprob: -0.048587486147880554
    2. ' Even' → logprob: -3.0485875606536865
    3. '_even' → logprob: -16.798587799072266
    4. '   ' → logprob: -17.048587799072266
    5. 'Odd' → logprob: -17.298587799072266
    6. ' ' → logprob: -17.423587799072266
    7. ' even' → logprob: -18.923587799072266
    8. 'Ever' → logprob: -19.798587799072266
    9. 'Equal' → logprob: -20.173587799072266
    10. ' ' → logprob: -20.423587799072266

Token 619: 'Operation' (ID: 10671)
  Prédit: 'Operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operation' → logprob: 0.0
    2. 'operation' → logprob: -18.5
    3. '_operation' → logprob: -18.5
    4. '(Operation' → logprob: -20.25
    5. 'Operations' → logprob: -20.375
    6. ' Operation' → logprob: -20.5
    7. '```' → logprob: -21.5
    8. 'Operator' → logprob: -22.5
    9. '_OPERATION' → logprob: -22.625
    10. 'Op' → logprob: -22.875

Token 620: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6428929567337036
    2. '()' → logprob: -0.7678929567337036
    3. '   ' → logprob: -4.642892837524414
    4. '
' → logprob: -8.517892837524414
    5. ',' → logprob: -9.017892837524414
    6. '    
' → logprob: -9.142892837524414
    7. ' =' → logprob: -10.392892837524414
    8. 'e' → logprob: -10.642892837524414
    9. '()
' → logprob: -10.767892837524414
    10. '=' → logprob: -11.017892837524414

Token 621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0387510322034359
    2. 'odd' → logprob: -3.4137511253356934
    3. ' odd' → logprob: -5.288751125335693
    4. 'od' → logprob: -10.163750648498535
    5. ' ' → logprob: -13.413750648498535
    6. '  ' → logprob: -13.538750648498535
    7. '    ' → logprob: -14.538750648498535
    8. '    
' → logprob: -14.788750648498535
    9. '```' → logprob: -15.163750648498535
    10. ' od' → logprob: -15.288750648498535

Token 622: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.0006403613369911909
    2. '   ' → logprob: -7.500640392303467
    3. ' odd' → logprob: -9.375639915466309
    4. 'od' → logprob: -13.625639915466309
    5. '    
' → logprob: -14.875639915466309
    6. ' ' → logprob: -16.000640869140625
    7. '```' → logprob: -16.000640869140625
    8. 'Odd' → logprob: -16.125640869140625
    9. 'old' → logprob: -16.125640869140625
    10. 'even' → logprob: -16.250640869140625

Token 623: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.0002314303710591048
    2. 'Operation' → logprob: -9.000231742858887
    3. 'Op' → logprob: -9.500231742858887
    4. '_operation' → logprob: -10.375231742858887
    5. '_' → logprob: -13.625231742858887
    6. '=_' → logprob: -16.12523078918457
    7. '   ' → logprob: -16.37523078918457
    8. '	op' → logprob: -16.50023078918457
    9. ' _' → logprob: -16.62523078918457
    10. 'op' → logprob: -16.75023078918457

Token 624: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31812795996665955
    2. '=' → logprob: -1.318127989768982
    3. '()' → logprob: -5.9431281089782715
    4. ',' → logprob: -6.3181281089782715
    5. '   ' → logprob: -8.068127632141113
    6. '(),' → logprob: -9.318127632141113
    7. '(' → logprob: -11.443127632141113
    8. '_' → logprob: -12.943127632141113
    9. ' ' → logprob: -13.068127632141113
    10. '  ' → logprob: -13.943127632141113

Token 625: ' Odd' (ID: 59799)
  Prédit: 'Odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Odd' → logprob: -0.16022534668445587
    2. ' Odd' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.285224914550781
    4. ' odd' → logprob: -15.160224914550781
    5. '   ' → logprob: -16.66022491455078
    6. 'Od' → logprob: -16.78522491455078
    7. '  ' → logprob: -16.78522491455078
    8. 'Odds' → logprob: -16.91022491455078
    9. 'O' → logprob: -17.53522491455078
    10. 'odd' → logprob: -17.91022491455078

Token 626: 'Operation' (ID: 10671)
  Prédit: 'Operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operation' → logprob: 0.0
    2. '_operation' → logprob: -17.625
    3. 'Operations' → logprob: -19.375
    4. ' Operation' → logprob: -20.375
    5. 'operation' → logprob: -21.625
    6. '(Operation' → logprob: -21.75
    7. '_OPERATION' → logprob: -22.375
    8. '.Operation' → logprob: -22.75
    9. 'Operator' → logprob: -23.125
    10. 'Operational' → logprob: -23.625

Token 627: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.951771421066951e-05
    2. '
' → logprob: -10.875029563903809
    3. '    
' → logprob: -12.625029563903809
    4. 'chooser' → logprob: -12.750029563903809
    5. '   ' → logprob: -13.500029563903809
    6. 'coll' → logprob: -13.625029563903809
    7. ',' → logprob: -14.625029563903809
    8. '```' → logprob: -15.875029563903809
    9. '#' → logprob: -16.000028610229492
    10. ' chooser' → logprob: -16.125028610229492

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014075472950935364
    2. 'chooser' → logprob: -4.38907527923584
    3. ' chooser' → logprob: -6.51407527923584
    4. 'coll' → logprob: -10.38907527923584
    5. '   ' → logprob: -11.63907527923584
    6. '```' → logprob: -11.76407527923584
    7. 'cho' → logprob: -12.13907527923584
    8. 'choices' → logprob: -12.38907527923584
    9. ' step' → logprob: -12.63907527923584
    10. ' coll' → logprob: -12.76407527923584

Token 629: ' chooser' (ID: 192073)
  Prédit: 'chooser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chooser' (adapté à ' chooser') → logprob: -0.008741151541471481
    2. ' chooser' → logprob: -5.00874137878418
    3. '   ' → logprob: -6.25874137878418
    4. 'cho' → logprob: -9.75874137878418
    5. 'coll' → logprob: -11.00874137878418
    6. 'step' → logprob: -11.38374137878418
    7. '```' → logprob: -12.13374137878418
    8. 'choose' → logprob: -12.88374137878418
    9. 'operations' → logprob: -13.00874137878418
    10. 'choice' → logprob: -13.00874137878418

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. '   ' → logprob: -16.936967849731445
    4. '.' → logprob: -17.936967849731445
    5. ' ' → logprob: -18.061967849731445
    6. '(' → logprob: -18.561967849731445
    7. ')' → logprob: -18.686967849731445
    8. '    ' → logprob: -18.936967849731445
    9. '＝' → logprob: -19.061967849731445
    10. ' =
' → logprob: -19.436967849731445

Token 631: ' Coll' (ID: 17054)
  Prédit: 'Coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coll' → logprob: -7.505351095460355e-05
    2. ' Coll' → logprob: -9.500075340270996
    3. 'Col' → logprob: -16.37507438659668
    4. 'Collision' → logprob: -17.62507438659668
    5. 'Collateral' → logprob: -19.87507438659668
    6. '   ' → logprob: -20.25007438659668
    7. '	C' → logprob: -20.37507438659668
    8. 'C' → logprob: -20.50007438659668
    9. ' ' → logprob: -21.37507438659668
    10. 'coll' → logprob: -21.50007438659668

Token 632: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -3.128163257315464e-07
    2. 'at' → logprob: -16.0
    3. 'Step' → logprob: -16.0
    4. '   ' → logprob: -16.875
    5. 'az' → logprob: -17.25
    6. ' at' → logprob: -18.125
    7. 'ats' → logprob: -19.125
    8. '       ' → logprob: -19.5
    9. 'ot' → logprob: -20.0
    10. 't' → logprob: -20.25

Token 633: 'Step' (ID: 10643)
  Prédit: 'Step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Step' → logprob: -1.1472419600977446e-06
    2. 'Sequence' → logprob: -13.750000953674316
    3. 'Stepper' → logprob: -19.000001907348633
    4. ' Step' → logprob: -19.375001907348633
    5. 'step' → logprob: -19.875001907348633
    6. '_step' → logprob: -21.000001907348633
    7. ' step' → logprob: -21.750001907348633
    8. '=' → logprob: -22.375001907348633
    9. '_STEP' → logprob: -22.375001907348633
    10. '[' → logprob: -22.375001907348633

Token 634: 'Chooser' (ID: 47227)
  Prédit: 'Chooser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chooser' → logprob: -1.8624639324116288e-06
    2. ' chooser' → logprob: -13.875001907348633
    3. 'Cho' → logprob: -14.875001907348633
    4. 'Changer' → logprob: -15.375001907348633
    5. 'chooser' → logprob: -15.625001907348633
    6. 'Choose' → logprob: -15.875001907348633
    7. '_CHO' → logprob: -19.875001907348633
    8. 'Choosing' → logprob: -20.000001907348633
    9. 'Closer' → logprob: -20.000001907348633
    10. 'Comparer' → logprob: -20.125001907348633

Token 635: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0009719676454551518
    2. '(' → logprob: -7.000971794128418
    3. '([
' → logprob: -10.250971794128418
    4. '(
' → logprob: -10.875971794128418
    5. '[' → logprob: -13.000971794128418
    6. '   ' → logprob: -13.875971794128418
    7. '([(' → logprob: -14.125971794128418
    8. '((' → logprob: -14.625971794128418
    9. '(operation' → logprob: -14.750971794128418
    10. '([...' → logprob: -15.125971794128418

Token 636: 'even' (ID: 28689)
  Prédit: 'even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -1.9361264946837764e-07
    2. 'odd' → logprob: -16.25
    3. ' even' → logprob: -16.75
    4. '   ' → logprob: -17.75
    5. '
' → logprob: -20.0
    6. 'ev' → logprob: -20.875
    7. 'evenodd' → logprob: -20.875
    8. 'eve' → logprob: -21.25
    9. 'e' → logprob: -21.375
    10. '_even' → logprob: -21.75

Token 637: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -3.128163257315464e-07
    2. 'op' → logprob: -15.125
    3. '_operation' → logprob: -18.5
    4. ',' → logprob: -19.0
    5. 'Op' → logprob: -19.0
    6. '
' → logprob: -19.625
    7. '_' → logprob: -20.125
    8. '```' → logprob: -20.375
    9. '   ' → logprob: -20.5
    10. '_ops' → logprob: -20.625

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ',
' → logprob: -11.000019073486328
    3. ' ,' → logprob: -13.250019073486328
    4. ',

' → logprob: -16.250019073486328
    5. ',
' → logprob: -17.875019073486328
    6. ',\
' → logprob: -18.000019073486328
    7. '   ' → logprob: -18.375019073486328
    8. '‌,' → logprob: -18.375019073486328
    9. ',{
' → logprob: -18.375019073486328
    10. ',",' → logprob: -18.875019073486328

Token 639: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.006715728435665369
    2. ' odd' → logprob: -5.006715774536133
    3. 'od' → logprob: -15.006715774536133
    4. 'old' → logprob: -19.756715774536133
    5. 'Odd' → logprob: -20.256715774536133
    6. ' ' → logprob: -20.381715774536133
    7. '   ' → logprob: -20.881715774536133
    8. ' ' → logprob: -20.881715774536133
    9. ' od' → logprob: -21.506715774536133
    10. '
' → logprob: -21.881715774536133

Token 640: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -6.73052782076411e-05
    2. 'op' → logprob: -9.625067710876465
    3. 'Op' → logprob: -14.625067710876465
    4. 'odd' → logprob: -15.125067710876465
    5. '_operation' → logprob: -15.375067710876465
    6. '-op' → logprob: -15.750067710876465
    7. 'o' → logprob: -17.87506675720215
    8. 'd' → logprob: -18.00006675720215
    9. 'od' → logprob: -18.12506675720215
    10. '_od' → logprob: -18.37506675720215

Token 641: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007206078618764877
    2. ')
' → logprob: -5.007205963134766
    3. '   ' → logprob: -7.632205963134766
    4. ' )' → logprob: -12.882205963134766
    5. ')
' → logprob: -13.507205963134766
    6. '])' → logprob: -14.132205963134766
    7. '))' → logprob: -15.507205963134766
    8. ')]' → logprob: -15.632205963134766
    9. ')`
' → logprob: -15.757205963134766
    10. ')`' → logprob: -15.882205963134766

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34106993675231934
    2. 'sequence' → logprob: -1.8410699367523193
    3. 'coll' → logprob: -2.0910699367523193
    4. ' sequence' → logprob: -5.716070175170898
    5. 'seq' → logprob: -6.216070175170898
    6. ' coll' → logprob: -7.216070175170898
    7. 'parser' → logprob: -8.216070175170898
    8. 'counter' → logprob: -8.466070175170898
    9. '```' → logprob: -9.591070175170898
    10. 'input' → logprob: -9.716070175170898

Token 643: ' coll' (ID: 6110)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6939994096755981
    2. 'coll' (adapté à ' coll') → logprob: -1.1939994096755981
    3. '   ' → logprob: -1.8189994096755981
    4. 'parser' → logprob: -3.5689992904663086
    5. 'seq' → logprob: -5.193999290466309
    6. 'input' → logprob: -6.693999290466309
    7. 'sequ' → logprob: -9.568999290466309
    8. ' sequence' → logprob: -9.693999290466309
    9. 'counter' → logprob: -10.943999290466309
    10. ' coll' → logprob: -11.068999290466309

Token 644: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -12.87500286102295
    3. 'az' → logprob: -14.87500286102295
    4. 'at' → logprob: -16.750003814697266
    5. 't' → logprob: -17.250003814697266
    6. 'seq' → logprob: -17.500003814697266
    7. 'a' → logprob: -18.625003814697266
    8. 'sequence' → logprob: -18.750003814697266
    9. '```' → logprob: -19.000003814697266
    10. ' sequence' → logprob: -19.875003814697266

Token 645: '_seq' (ID: 34260)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0012779728276655078
    2. '_seq' → logprob: -6.751277923583984
    3. 'sequence' → logprob: -9.751277923583984
    4. ' =' → logprob: -10.751277923583984
    5. 'Sequence' → logprob: -11.126277923583984
    6. '=' → logprob: -12.001277923583984
    7. 'seq' → logprob: -12.251277923583984
    8. '_' → logprob: -13.626277923583984
    9. 'Seq' → logprob: -14.751277923583984
    10. ' sequence' → logprob: -15.001277923583984

Token 646: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7695082426071167
    2. 'u' → logprob: -1.0195082426071167
    3. '=' → logprob: -2.5195083618164062
    4. 'ence' → logprob: -3.0195083618164062
    5. '   ' → logprob: -3.1445083618164062
    6. '=_' → logprob: -7.394508361816406
    7. 'ue' → logprob: -7.394508361816406
    8. 'eu' → logprob: -7.769508361816406
    9. '```' → logprob: -7.894508361816406
    10. '_sequence' → logprob: -8.769508361816406

Token 647: ' Coll' (ID: 17054)
  Prédit: 'Coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coll' → logprob: -0.0007099286303855479
    2. ' Coll' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.750709533691406
    4. 'Col' → logprob: -19.375709533691406
    5. 'coll' → logprob: -20.375709533691406
    6. 'Collateral' → logprob: -20.500709533691406
    7. '.Coll' → logprob: -20.625709533691406
    8. 'Collision' → logprob: -20.750709533691406
    9. ' coll' → logprob: -21.750709533691406
    10. '	C' → logprob: -22.250709533691406

Token 648: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -5.512236498361744e-07
    2. 'az' → logprob: -14.500000953674316
    3. 'at' → logprob: -17.0
    4. 't' → logprob: -19.875
    5. 'tz' → logprob: -20.875
    6. 'a' → logprob: -21.25
    7. '   ' → logprob: -21.5
    8. 'l' → logprob: -23.125
    9. '#' → logprob: -23.25
    10. 'ats' → logprob: -23.5

Token 649: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: 0.0
    2. 'sequence' → logprob: -17.75
    3. ' Sequence' → logprob: -18.875
    4. 'Sequ' → logprob: -19.5
    5. '_sequence' → logprob: -20.375
    6. 'Sequences' → logprob: -20.875
    7. 'Seq' → logprob: -21.125
    8. 'Step' → logprob: -21.25
    9. ' sequence' → logprob: -21.625
    10. 'quence' → logprob: -21.75

Token 650: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007151735480874777
    2. 'chooser' → logprob: -7.750715255737305
    3. '(coll' → logprob: -8.250715255737305
    4. '(c' → logprob: -11.875715255737305
    5. '(
' → logprob: -12.125715255737305
    6. '   ' → logprob: -12.500715255737305
    7. ' chooser' → logprob: -12.750715255737305
    8. 'coll' → logprob: -13.875715255737305
    9. '=' → logprob: -13.875715255737305
    10. ' =' → logprob: -14.250715255737305

Token 651: 'chooser' (ID: 140811)
  Prédit: 'chooser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chooser' → logprob: -2.9040898880339228e-05
    2. ' chooser' → logprob: -10.625028610229492
    3. 'cho' → logprob: -12.625028610229492
    4. '   ' → logprob: -13.875028610229492
    5. 'coll' → logprob: -15.000028610229492
    6. 'picker' → logprob: -17.875028610229492
    7. '       ' → logprob: -18.375028610229492
    8. 'changer' → logprob: -18.375028610229492
    9. '```' → logprob: -18.500028610229492
    10. 'Chooser' → logprob: -18.750028610229492

Token 652: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07781631499528885
    2. ')
' → logprob: -2.8278162479400635
    3. '   ' → logprob: -4.202816486358643
    4. ',' → logprob: -7.202816486358643
    5. ')
' → logprob: -11.077816009521484
    6. ')

' → logprob: -13.327816009521484
    7. ' ' → logprob: -13.452816009521484
    8. ' )' → logprob: -13.577816009521484
    9. '  ' → logprob: -14.327816009521484
    10. '(coll' → logprob: -14.327816009521484

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20616546273231506
    2. 'parser' → logprob: -1.7061654329299927
    3. 'input' → logprob: -5.456165313720703
    4. ' parser' → logprob: -7.706165313720703
    5. '	parser' → logprob: -12.456165313720703
    6. '    
' → logprob: -12.706165313720703
    7. ' input' → logprob: -12.706165313720703
    8. 'inputs' → logprob: -12.956165313720703
    9. 'parse' → logprob: -13.206165313720703
    10. '```' → logprob: -13.206165313720703

Token 654: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.004453258588910103
    2. '   ' → logprob: -6.004453182220459
    3. 'input' → logprob: -6.254453182220459
    4. ' parser' → logprob: -10.254453659057617
    5. 'counter' → logprob: -11.254453659057617
    6. '    
' → logprob: -12.879453659057617
    7. '
' → logprob: -13.629453659057617
    8. '	parser' → logprob: -15.004453659057617
    9. 'inputs' → logprob: -15.004453659057617
    10. 'def' → logprob: -15.504453659057617

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132804334163666
    2. ' =' → logprob: -1.313280463218689
    3. ' ' → logprob: -12.06328010559082
    4. '_parser' → logprob: -12.18828010559082
    5. '   ' → logprob: -12.68828010559082
    6. '=parse' → logprob: -13.18828010559082
    7. '  ' → logprob: -13.93828010559082
    8. 'parser' → logprob: -14.68828010559082
    9. '.parse' → logprob: -15.56328010559082
    10. '.' → logprob: -15.56328010559082

Token 656: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -6.2729995988775045e-06
    2. ' Input' → logprob: -12.000006675720215
    3. '	Input' → logprob: -22.0000057220459
    4. '_input' → logprob: -23.0000057220459
    5. 'input' → logprob: -24.1250057220459
    6. '_Input' → logprob: -24.6250057220459
    7. '<Input' → logprob: -25.1250057220459
    8. '\Input' → logprob: -26.2500057220459
    9. 'INPUT' → logprob: -26.8750057220459
    10. '.Input' → logprob: -27.2500057220459

Token 657: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'Parse' → logprob: -20.125
    3. 'Parsed' → logprob: -21.125
    4. '_parser' → logprob: -21.375
    5. ' Parser' → logprob: -22.875
    6. '.Parser' → logprob: -23.125
    7. '(Parser' → logprob: -23.25
    8. '-parser' → logprob: -23.75
    9. 'Parsing' → logprob: -23.75
    10. 'parser' → logprob: -24.375

Token 658: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00214252807199955
    2. '
' → logprob: -7.127142429351807
    3. 'counter' → logprob: -7.252142429351807
    4. '    
' → logprob: -8.127142906188965
    5. 'inputs' → logprob: -8.752142906188965
    6. 'data' → logprob: -9.627142906188965
    7. 'n' → logprob: -11.252142906188965
    8. 'input' → logprob: -11.502142906188965
    9. 'count' → logprob: -11.502142906188965
    10. ' counter' → logprob: -11.502142906188965

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5763240456581116
    2. 'counter' → logprob: -0.8263240456581116
    3. ' counter' → logprob: -8.201324462890625
    4. 'for' → logprob: -10.201324462890625
    5. 'count' → logprob: -10.701324462890625
    6. 'inputs' → logprob: -11.326324462890625
    7. '	counter' → logprob: -11.701324462890625
    8. 'parser' → logprob: -12.326324462890625
    9. '    
' → logprob: -12.451324462890625
    10. '
' → logprob: -12.576324462890625

Token 660: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.002065330045297742
    2. 'numbers' → logprob: -6.752065181732178
    3. 'for' → logprob: -8.252065658569336
    4. 'inputs' → logprob: -8.377065658569336
    5. 'coll' → logprob: -8.877065658569336
    6. 'nums' → logprob: -9.127065658569336
    7. '   ' → logprob: -9.627065658569336
    8. 'count' → logprob: -10.502065658569336
    9. 'n' → logprob: -10.752065658569336
    10. 'counts' → logprob: -11.752065658569336

Token 661: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543988794088364
    2. '=' → logprob: -3.8955440521240234
    3. '.' → logprob: -14.020544052124023
    4. '   ' → logprob: -14.520544052124023
    5. ' =
' → logprob: -15.395544052124023
    6. ' ' → logprob: -15.520544052124023
    7. '  ' → logprob: -15.645544052124023
    8. ' =
' → logprob: -15.770544052124023
    9. '	' → logprob: -17.270544052124023
    10. ')' → logprob: -17.895544052124023

Token 662: ' Coll' (ID: 17054)
  Prédit: 'Coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coll' → logprob: -0.023246178403496742
    2. ' Coll' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.273245811462402
    4. 'Col' → logprob: -17.02324676513672
    5. ' coll' → logprob: -19.02324676513672
    6. 'Collision' → logprob: -19.14824676513672
    7. '.Coll' → logprob: -19.27324676513672
    8. 'Collateral' → logprob: -19.27324676513672
    9. 'Counter' → logprob: -19.39824676513672
    10. ' ' → logprob: -19.89824676513672

Token 663: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: 0.0
    2. 'az' → logprob: -17.5
    3. '   ' → logprob: -19.125
    4. 'ats' → logprob: -20.0
    5. 'at' → logprob: -21.625
    6. 'a' → logprob: -22.125
    7. 'ator' → logprob: -22.5
    8. 'ato' → logprob: -22.5
    9. 'count' → logprob: -22.625
    10. 'ata' → logprob: -22.875

Token 664: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -4.320199877838604e-07
    2. 'Count' → logprob: -15.25
    3. 'counter' → logprob: -16.5
    4. 'ounter' → logprob: -17.875
    5. ' Counter' → logprob: -18.0
    6. '_counter' → logprob: -19.375
    7. '.Counter' → logprob: -20.625
    8. ' counter' → logprob: -20.75
    9. 'Sequence' → logprob: -21.0
    10. 'Counting' → logprob: -21.125

Token 665: '(coll' (ID: 168219)
  Prédit: '(coll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coll' → logprob: -0.0031917323358356953
    2. 'coll' → logprob: -5.753191947937012
    3. '   ' → logprob: -12.003191947937012
    4. '(c' → logprob: -13.003191947937012
    5. ' coll' → logprob: -13.003191947937012
    6. '(' → logprob: -13.378191947937012
    7. '(
' → logprob: -14.128191947937012
    8. 'Coll' → logprob: -15.003191947937012
    9. '.coll' → logprob: -15.128191947937012
    10. '
' → logprob: -15.628191947937012

Token 666: 'atz' (ID: 9222)
  Prédit: 'atz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atz' → logprob: -1.5048530030981055e-06
    2. 'at' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.500001907348633
    4. 't' → logprob: -17.750001907348633
    5. 'az' → logprob: -18.625001907348633
    6. 'ata' → logprob: -18.875001907348633
    7. 'a' → logprob: -19.875001907348633
    8. 'lat' → logprob: -20.000001907348633
    9. 'atzen' → logprob: -20.000001907348633
    10. ' at' → logprob: -20.125001907348633

Token 667: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -5.180879816180095e-05
    2. '_sequence' → logprob: -10.375051498413086
    3. 'seq' → logprob: -11.125051498413086
    4. 'sequence' → logprob: -12.750051498413086
    5. 'Seq' → logprob: -14.000051498413086
    6. '_' → logprob: -14.125051498413086
    7. 'Sequence' → logprob: -15.125051498413086
    8. '_se' → logprob: -15.125051498413086
    9. '   ' → logprob: -16.250051498413086
    10. '_counter' → logprob: -16.375051498413086

Token 668: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002765644807368517
    2. '
' → logprob: -6.252765655517578
    3. ')' → logprob: -7.377765655517578
    4. '    
' → logprob: -9.377765655517578
    5. ')
' → logprob: -9.877765655517578
    6. 'for' → logprob: -10.127765655517578
    7. ' for' → logprob: -11.252765655517578
    8. 'while' → logprob: -11.377765655517578
    9. '
' → logprob: -13.002765655517578
    10. ' while' → logprob: -13.252765655517578

Token 669: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33269235491752625
    2. '   ' → logprob: -1.7076923847198486
    3. 'inputs' → logprob: -2.4576923847198486
    4. 'numbers' → logprob: -4.8326921463012695
    5. ' for' → logprob: -5.8326921463012695
    6. 'nums' → logprob: -5.8326921463012695
    7. 'n' → logprob: -6.9576921463012695
    8. 'input' → logprob: -7.2076921463012695
    9. 'while' → logprob: -8.70769214630127
    10. '
' → logprob: -8.83269214630127

Token 670: ' inputs' (ID: 21963)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5590062737464905
    2. 'inputs' (adapté à ' inputs') → logprob: -1.5590062141418457
    3. 'numbers' → logprob: -1.8090062141418457
    4. 'nums' → logprob: -3.0590062141418457
    5. 'ns' → logprob: -5.184006214141846
    6. 'values' → logprob: -7.309006214141846
    7. 'data' → logprob: -7.809006214141846
    8. 'input' → logprob: -8.559006690979004
    9. 'n' → logprob: -9.309006690979004
    10. 'results' → logprob: -9.934006690979004

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3139575123786926
    2. ' =' → logprob: -1.3139574527740479
    3. '_' → logprob: -7.438957691192627
    4. 's' → logprob: -9.313957214355469
    5. '_list' → logprob: -12.688957214355469
    6. '_values' → logprob: -12.688957214355469
    7. '_=' → logprob: -13.313957214355469
    8. ':' → logprob: -13.438957214355469
    9. ' ' → logprob: -13.688957214355469
    10. '_inputs' → logprob: -13.938957214355469

Token 672: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.38687121868133545
    2. ' parser' → logprob: -1.1368712186813354
    3. '(parser' → logprob: -16.011871337890625
    4. '	parser' → logprob: -16.511871337890625
    5. 'Parser' → logprob: -19.011871337890625
    6. 'parse' → logprob: -19.761871337890625
    7. '   ' → logprob: -20.261871337890625
    8. '.parser' → logprob: -20.511871337890625
    9. '_parser' → logprob: -20.511871337890625
    10. 'par' → logprob: -20.761871337890625

Token 673: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -7.20734242349863e-05
    2. '.' → logprob: -10.000072479248047
    3. 'parse' → logprob: -10.625072479248047
    4. '=parse' → logprob: -13.625072479248047
    5. ' .' → logprob: -13.875072479248047
    6. '_parse' → logprob: -17.875072479248047
    7. '   ' → logprob: -18.000072479248047
    8. '().' → logprob: -18.375072479248047
    9. '	parse' → logprob: -18.500072479248047
    10. '.Parse' → logprob: -19.000072479248047

Token 674: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5950696468353271
    2. 'for' → logprob: -0.8450696468353271
    3. ' for' → logprob: -3.970069646835327
    4. '    
' → logprob: -10.095069885253906
    5. '<|end|>' → logprob: -10.970069885253906
    6. '	for' → logprob: -11.220069885253906
    7. '
' → logprob: -12.970069885253906
    8. '<|end|>' → logprob: -14.595069885253906
    9. '```' → logprob: -15.220069885253906
    10. '[' → logprob: -15.595069885253906

Token 675: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1272210031747818
    2. 'for' → logprob: -2.12722110748291
    3. ' for' → logprob: -8.25222110748291
    4. '```' → logprob: -10.37722110748291
    5. '    
' → logprob: -14.75222110748291
    6. '	for' → logprob: -14.87722110748291
    7. '<|end|>' → logprob: -15.50222110748291
    8. '
' → logprob: -16.877220153808594
    9. '``' → logprob: -17.377220153808594
    10. '`' → logprob: -17.502220153808594

Token 676: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005816269549541175
    2. '   ' → logprob: -7.500581741333008
    3. ' for' → logprob: -10.500581741333008
    4. '```' → logprob: -13.750581741333008
    5. '
' → logprob: -17.250581741333008
    6. '	for' → logprob: -17.375581741333008
    7. '``' → logprob: -17.875581741333008
    8. '    
' → logprob: -18.750581741333008
    9. '  ' → logprob: -20.000581741333008
    10. '`' → logprob: -20.125581741333008

Token 677: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10027244687080383
    2. ' n' → logprob: -2.3502724170684814
    3. '   ' → logprob: -9.725272178649902
    4. 'num' → logprob: -13.850272178649902
    5. 'value' → logprob: -13.850272178649902
    6. 'number' → logprob: -13.850272178649902
    7. 'start' → logprob: -14.225272178649902
    8. '	n' → logprob: -14.225272178649902
    9. '       ' → logprob: -14.600272178649902
    10. ' number' → logprob: -14.850272178649902

Token 678: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036092204973101616
    2. 'in' → logprob: -5.6286091804504395
    3. '	in' → logprob: -12.253609657287598
    4. '_in' → logprob: -12.753609657287598
    5. ',' → logprob: -15.003609657287598
    6. ' ' → logprob: -15.378609657287598
    7. ' ' → logprob: -15.503609657287598
    8. ':' → logprob: -15.628609657287598
    9. '   ' → logprob: -16.12860870361328
    10. '<|end|>' → logprob: -16.37860870361328

Token 679: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.38687121868133545
    2. ' inputs' → logprob: -1.1368712186813354
    3. '   ' → logprob: -16.136871337890625
    4. '(inputs' → logprob: -16.386871337890625
    5. '.inputs' → logprob: -18.386871337890625
    6. '_inputs' → logprob: -18.761871337890625
    7. 'input' → logprob: -18.886871337890625
    8. ' input' → logprob: -21.136871337890625
    9. '
' → logprob: -21.886871337890625
    10. '    ' → logprob: -22.511871337890625

Token 680: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027531296014785767
    2. ':
' → logprob: -3.652531385421753
    3. '       ' → logprob: -7.152531147003174
    4. '   ' → logprob: -8.652531623840332
    5. '():
' → logprob: -9.277531623840332
    6. '):
' → logprob: -9.527531623840332
    7. ',' → logprob: -10.402531623840332
    8. '):' → logprob: -10.777531623840332
    9. ' :' → logprob: -11.152531623840332
    10. '<|end|>' → logprob: -11.402531623840332

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039063513395376503
    2. 'print' → logprob: -8.375391006469727
    3. ' print' → logprob: -9.375391006469727
    4. 'count' → logprob: -10.500391006469727
    5. '```' → logprob: -11.125391006469727
    6. ' count' → logprob: -11.500391006469727
    7. 'result' → logprob: -11.750391006469727
    8. ' steps' → logprob: -12.375391006469727
    9. ' result' → logprob: -13.125391006469727
    10. '   ' → logprob: -13.250391006469727

Token 682: ' try' (ID: 2075)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.5185884237289429
    2. ' steps' → logprob: -1.5185884237289429
    3. 'count' → logprob: -2.2685885429382324
    4. '       ' → logprob: -2.8935885429382324
    5. ' count' → logprob: -4.143588542938232
    6. 'print' → logprob: -5.018588542938232
    7. ' print' → logprob: -6.268588542938232
    8. 'step' → logprob: -6.643588542938232
    9. ' step' → logprob: -7.518588542938232
    10. 'result' → logprob: -8.643588066101074

Token 683: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06277676671743393
    2. ':
' → logprob: -2.812776803970337
    3. '           ' → logprob: -7.312776565551758
    4. '<|end|>' → logprob: -9.812776565551758
    5. '       ' → logprob: -10.187776565551758
    6. '):
' → logprob: -11.562776565551758
    7. ' :' → logprob: -11.937776565551758
    8. '<|end|>' → logprob: -11.937776565551758
    9. '        ' → logprob: -12.437776565551758
    10. '):' → logprob: -12.687776565551758

Token 684: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014478032244369388
    2. 'count' → logprob: -9.375144958496094
    3. '<|end|>' → logprob: -10.500144958496094
    4. '       ' → logprob: -11.875144958496094
    5. ' count' → logprob: -12.125144958496094
    6. '	       ' → logprob: -12.125144958496094
    7. 'print' → logprob: -12.375144958496094
    8. '<|end|>' → logprob: -13.125144958496094
    9. '```' → logprob: -13.375144958496094
    10. '          ' → logprob: -13.625144958496094

Token 685: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.10710912197828293
    2. 'count' → logprob: -2.4821090698242188
    3. ' steps' → logprob: -4.232109069824219
    4. ' count' → logprob: -6.482109069824219
    5. '           ' → logprob: -6.982109069824219
    6. 'step' → logprob: -7.357109069824219
    7. 'print' → logprob: -8.357109069824219
    8. 'num' → logprob: -10.357109069824219
    9. 'length' → logprob: -10.482109069824219
    10. '               ' → logprob: -10.857109069824219

Token 686: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061977654695510864
    2. '=' → logprob: -2.8119776248931885
    3. '        ' → logprob: -12.56197738647461
    4. '           ' → logprob: -13.18697738647461
    5. '_count' → logprob: -13.68697738647461
    6. '       ' → logprob: -14.06197738647461
    7. '    ' → logprob: -14.56197738647461
    8. 'count' → logprob: -14.68697738647461
    9. ':' → logprob: -14.68697738647461
    10. '   ' → logprob: -14.81197738647461

Token 687: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.6931505799293518
    2. 'counter' → logprob: -0.6931505799293518
    3. '	counter' → logprob: -13.443150520324707
    4. '           ' → logprob: -13.818150520324707
    5. 'count' → logprob: -14.568150520324707
    6. '(counter' → logprob: -15.693150520324707
    7. 'Counter' → logprob: -16.318151473999023
    8. '[counter' → logprob: -16.443151473999023
    9. '_counter' → logprob: -17.068151473999023
    10. '               ' → logprob: -17.818151473999023

Token 688: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.011164424940943718
    2. 'count' → logprob: -4.51116418838501
    3. '.' → logprob: -9.136164665222168
    4. '	count' → logprob: -12.511164665222168
    5. ' count' → logprob: -12.886164665222168
    6. ' .' → logprob: -14.136164665222168
    7. '_count' → logprob: -14.261164665222168
    8. '   ' → logprob: -14.511164665222168
    9. '       ' → logprob: -15.511164665222168
    10. '=count' → logprob: -15.511164665222168

Token 689: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -4.961759259458631e-06
    2. '(n' → logprob: -13.500004768371582
    3. 'steps' → logprob: -13.875004768371582
    4. '_' → logprob: -14.000004768371582
    5. '```' → logprob: -14.750004768371582
    6. '_step' → logprob: -15.125004768371582
    7. ' _' → logprob: -15.500004768371582
    8. '(_' → logprob: -15.500004768371582
    9. '_
' → logprob: -15.625004768371582
    10. '(' → logprob: -16.3750057220459

Token 690: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. ' (' → logprob: -16.0
    4. '(
' → logprob: -17.5
    5. '       ' → logprob: -19.125
    6. '```' → logprob: -19.125
    7. '   ' → logprob: -20.0
    8. '(node' → logprob: -20.625
    9. ')' → logprob: -20.75
    10. 'n' → logprob: -20.875

Token 691: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8712283968925476
    2. ')
' → logprob: -0.8712283968925476
    3. '       ' → logprob: -2.2462284564971924
    4. '           ' → logprob: -2.8712284564971924
    5. ')
' → logprob: -7.871228218078613
    6. '()
' → logprob: -9.371228218078613
    7. '```' → logprob: -9.996228218078613
    8. '
' → logprob: -10.246228218078613
    9. 'print' → logprob: -10.621228218078613
    10. '               ' → logprob: -11.246228218078613

Token 692: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.421908958349377e-05
    2. 'print' → logprob: -9.75007438659668
    3. ' print' → logprob: -11.75007438659668
    4. '       ' → logprob: -12.12507438659668
    5. '
' → logprob: -14.25007438659668
    6. '               ' → logprob: -14.87507438659668
    7. '```' → logprob: -15.00007438659668
    8. '            
' → logprob: -15.12507438659668
    9. '	       ' → logprob: -15.25007438659668
    10. '          ' → logprob: -15.62507438659668

Token 693: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00954334158450365
    2. '           ' → logprob: -4.759543418884277
    3. ' print' → logprob: -7.384543418884277
    4. 'print' → logprob: -8.259543418884277
    5. '	       ' → logprob: -11.009543418884277
    6. '<|end|>' → logprob: -12.009543418884277
    7. '
' → logprob: -12.134543418884277
    8. '   ' → logprob: -12.134543418884277
    9. '        
' → logprob: -12.134543418884277
    10. '	   ' → logprob: -13.884543418884277

Token 694: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.029765760526061058
    2. ' Value' → logprob: -3.5297658443450928
    3. '(Value' → logprob: -11.404766082763672
    4. '	Value' → logprob: -12.779766082763672
    5. 'Exception' → logprob: -14.154766082763672
    6. 'Overflow' → logprob: -15.154766082763672
    7. '<Value' → logprob: -15.404766082763672
    8. '_Value' → logprob: -16.029766082763672
    9. '_value' → logprob: -17.029766082763672
    10. '.Value' → logprob: -17.029766082763672

Token 695: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.553032628493384e-05
    2. 'rror' → logprob: -9.500075340270996
    3. 'alue' → logprob: -14.875075340270996
    4. 'Warning' → logprob: -17.125076293945312
    5. 'SError' → logprob: -17.125076293945312
    6. 'Value' → logprob: -17.250076293945312
    7. 'LError' → logprob: -17.250076293945312
    8. '```' → logprob: -17.500076293945312
    9. '   ' → logprob: -17.625076293945312
    10. '	Error' → logprob: -18.875076293945312

Token 696: ':
' (ID: 734)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.028715824708342552
    2. '(' → logprob: -4.02871561050415
    3. ':' → logprob: -4.65371561050415
    4. 'as' → logprob: -7.77871561050415
    5. '(
' → logprob: -9.153716087341309
    6. ':
' → logprob: -9.153716087341309
    7. '("' → logprob: -9.278716087341309
    8. '           ' → logprob: -9.528716087341309
    9. '(as' → logprob: -9.778716087341309
    10. '()' → logprob: -10.278716087341309

Token 697: '           ' (ID: 352)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.20176276564598083
    2. '           ' → logprob: -1.7017627954483032
    3. ':' → logprob: -8.701763153076172
    4. ':
' → logprob: -10.076763153076172
    5. 'as' → logprob: -10.701763153076172
    6. '()' → logprob: -10.701763153076172
    7. '       ' → logprob: -11.076763153076172
    8. '(' → logprob: -11.576763153076172
    9. '               ' → logprob: -11.701763153076172
    10. '0' → logprob: -11.826763153076172

Token 698: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11853400617837906
    2. '       ' → logprob: -2.7435340881347656
    3. '           ' → logprob: -3.2435340881347656
    4. ' print' → logprob: -5.243534088134766
    5. 'steps' → logprob: -5.868534088134766
    6. 'continue' → logprob: -9.243534088134766
    7. ' steps' → logprob: -9.368534088134766
    8. '```' → logprob: -9.868534088134766
    9. '   ' → logprob: -10.493534088134766
    10. '        
' → logprob: -12.243534088134766

Token 699: ' According' (ID: 16344)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03435548022389412
    2. '           ' → logprob: -4.034355640411377
    3. ' print' → logprob: -4.409355640411377
    4. '       ' → logprob: -5.659355640411377
    5. 'steps' → logprob: -8.284355163574219
    6. 'break' → logprob: -9.659355163574219
    7. ' steps' → logprob: -10.034355163574219
    8. 'continue' → logprob: -10.534355163574219
    9. '   ' → logprob: -10.659355163574219
    10. ' break' → logprob: -12.909355163574219

Token 700: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.012597124092280865
    2. 'to' → logprob: -4.38759708404541
    3. ' #' → logprob: -10.63759708404541
    4. '#' → logprob: -10.76259708404541
    5. '        ' → logprob: -11.51259708404541
    6. '
' → logprob: -11.88759708404541
    7. '           ' → logprob: -12.26259708404541
    8. ' for' → logprob: -12.51259708404541
    9. 'ly' → logprob: -12.63759708404541
    10. 'To' → logprob: -13.38759708404541

Token 701: ' problem' (ID: 4792)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.888056755065918
    2. ' problem' → logprob: -0.888056755065918
    3. 'the' → logprob: -2.388056755065918
    4. 'problem' → logprob: -3.138056755065918
    5. '#' → logprob: -4.263056755065918
    6. ' instructions' → logprob: -5.388056755065918
    7. ' #' → logprob: -6.013056755065918
    8. 'pass' → logprob: -6.013056755065918
    9. ' specification' → logprob: -6.013056755065918
    10. ' prompt' → logprob: -6.138056755065918

Token 702: ' constraints' (ID: 31060)
  Prédit: ' description'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' description' → logprob: -0.6969279050827026
    2. ' statement' → logprob: -1.1969279050827026
    3. ' specification' → logprob: -2.446928024291992
    4. 'description' → logprob: -2.946928024291992
    5. 'statement' → logprob: -3.821928024291992
    6. ' specifications' → logprob: -4.946928024291992
    7. 'spec' → logprob: -4.946928024291992
    8. '           ' → logprob: -5.321928024291992
    9. '_description' → logprob: -5.321928024291992
    10. ' spec' → logprob: -6.071928024291992

Token 703: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031676217913627625
    2. '       ' → logprob: -6.503167629241943
    3. ',' → logprob: -7.003167629241943
    4. ' continue' → logprob: -7.753167629241943
    5. 'continue' → logprob: -9.253167152404785
    6. 'print' → logprob: -9.378167152404785
    7. ' print' → logprob: -9.628167152404785
    8. '               ' → logprob: -10.003167152404785
    9. '   ' → logprob: -11.753167152404785
    10. '```' → logprob: -12.378167152404785

Token 704: ' this' (ID: 495)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19404281675815582
    2. '           ' → logprob: -2.444042921066284
    3. '       ' → logprob: -3.069042921066284
    4. 'steps' → logprob: -3.694042921066284
    5. ' print' → logprob: -4.194042682647705
    6. ' steps' → logprob: -6.069042682647705
    7. 'break' → logprob: -8.194043159484863
    8. 'continue' → logprob: -8.194043159484863
    9. '#' → logprob: -8.944043159484863
    10. '```' → logprob: -10.069043159484863

Token 705: ' should' (ID: 1757)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6134727001190186
    2. ' should' → logprob: -1.2384727001190186
    3. 'should' → logprob: -2.3634727001190186
    4. ' is' → logprob: -3.7384727001190186
    5. 'print' → logprob: -4.363472938537598
    6. ' print' → logprob: -4.738472938537598
    7. 'continue' → logprob: -4.738472938537598
    8. ' shouldn't' → logprob: -4.738472938537598
    9. ' can' → logprob: -5.988472938537598
    10. ' continue' → logprob: -6.238472938537598

Token 706: ' never' (ID: 3779)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.48415717482566833
    2. 'not' → logprob: -0.9841572046279907
    3. ' never' → logprob: -4.984157085418701
    4. 'never' → logprob: -6.234157085418701
    5. 'print' → logprob: -7.484157085418701
    6. 'continue' → logprob: -7.859157085418701
    7. 'pass' → logprob: -9.23415756225586
    8. '           ' → logprob: -9.48415756225586
    9. 'be' → logprob: -10.48415756225586
    10. ' print' → logprob: -10.85915756225586

Token 707: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.1124202162027359
    2. 'h' → logprob: -2.9874203205108643
    3. 'occur' → logprob: -3.1124203205108643
    4. ' occur' → logprob: -4.487420082092285
    5. ' ' → logprob: -9.737420082092285
    6. ' be' → logprob: -9.862420082092285
    7. 'be' → logprob: -10.862420082092285
    8. '   ' → logprob: -11.612420082092285
    9. '_oc' → logprob: -12.362420082092285
    10. 'continue' → logprob: -12.362420082092285

Token 708: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028836876153945923
    2. '       ' → logprob: -6.3778839111328125
    3. ' continue' → logprob: -7.0028839111328125
    4. 'continue' → logprob: -8.502883911132812
    5. ',' → logprob: -10.252883911132812
    6. '
' → logprob: -10.752883911132812
    7. '               ' → logprob: -12.627883911132812
    8. '```' → logprob: -12.627883911132812
    9. '   ' → logprob: -13.502883911132812
    10. '            
' → logprob: -14.877883911132812

Token 709: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4045823812484741
    2. '       ' → logprob: -1.1545823812484741
    3. 'print' → logprob: -4.529582500457764
    4. ' continue' → logprob: -6.154582500457764
    5. 'continue' → logprob: -6.779582500457764
    6. ' print' → logprob: -6.904582500457764
    7. ' but' → logprob: -6.904582500457764
    8. '#' → logprob: -7.154582500457764
    9. '0' → logprob: -8.029582023620605
    10. ' #' → logprob: -8.404582023620605

Token 710: ' handle' (ID: 5318)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6305980086326599
    2. '       ' → logprob: -1.5055980682373047
    3. 'print' → logprob: -2.1305980682373047
    4. ' print' → logprob: -2.6305980682373047
    5. ' continue' → logprob: -3.3805980682373047
    6. 'continue' → logprob: -4.380598068237305
    7. '#' → logprob: -5.130598068237305
    8. ' #' → logprob: -6.755598068237305
    9. 'break' → logprob: -7.755598068237305
    10. ' break' → logprob: -8.255598068237305

Token 711: ' gracefully' (ID: 156176)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.45616579055786133
    2. ' pass' → logprob: -1.2061657905578613
    3. '           ' → logprob: -3.0811657905578613
    4. ' as' → logprob: -5.206165790557861
    5. '
' → logprob: -5.456165790557861
    6. '   ' → logprob: -5.581165790557861
    7. '       ' → logprob: -5.581165790557861
    8. ' gracefully' → logprob: -6.706165790557861
    9. '               ' → logprob: -8.206165313720703
    10. '(pass' → logprob: -8.331165313720703

Token 712: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09108849614858627
    2. '       ' → logprob: -2.4660885334014893
    3. ' continue' → logprob: -6.96608829498291
    4. 'print' → logprob: -7.21608829498291
    5. ' print' → logprob: -8.59108829498291
    6. 'continue' → logprob: -8.59108829498291
    7. '```' → logprob: -10.21608829498291
    8. '   ' → logprob: -10.96608829498291
    9. ',' → logprob: -11.21608829498291
    10. '0' → logprob: -11.46608829498291

Token 713: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005629229708574712
    2. '       ' → logprob: -7.750563144683838
    3. ' continue' → logprob: -9.12556266784668
    4. 'continue' → logprob: -12.00056266784668
    5. '               ' → logprob: -12.12556266784668
    6. '<|end|>' → logprob: -12.62556266784668
    7. '            
' → logprob: -13.00056266784668
    8. '```' → logprob: -13.62556266784668
    9. '        
' → logprob: -13.75056266784668
    10. '
' → logprob: -14.12556266784668

Token 714: ' steps' (ID: 10331)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10498059540987015
    2. 'steps' (adapté à ' steps') → logprob: -2.479980707168579
    3. '           ' → logprob: -4.85498046875
    4. '       ' → logprob: -5.72998046875
    5. ' print' → logprob: -5.85498046875
    6. 'continue' → logprob: -6.72998046875
    7. ' steps' → logprob: -7.22998046875
    8. ' continue' → logprob: -10.22998046875
    9. '   ' → logprob: -10.35498046875
    10. 'break' → logprob: -11.85498046875

Token 715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021809488534927
    2. ' =' → logprob: -2.3502180576324463
    3. '   ' → logprob: -12.100217819213867
    4. '       ' → logprob: -12.725217819213867
    5. '           ' → logprob: -13.475217819213867
    6. '        ' → logprob: -14.475217819213867
    7. '    ' → logprob: -14.600217819213867
    8. '	' → logprob: -16.100217819213867
    9. ' ' → logprob: -16.475217819213867
    10. '=None' → logprob: -16.975217819213867

Token 716: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004681338090449572
    2. '0' → logprob: -5.50468111038208
    3. '"' → logprob: -7.87968111038208
    4. ' -' → logprob: -8.629681587219238
    5. 'None' → logprob: -10.504681587219238
    6. ' ' → logprob: -11.879681587219238
    7. '"?' → logprob: -12.879681587219238
    8. ''' → logprob: -13.129681587219238
    9. '?' → logprob: -14.004681587219238
    10. '   ' → logprob: -14.129681587219238

Token 717: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '2' → logprob: -17.625
    4. '۱' → logprob: -19.125
    5. '１' → logprob: -19.625
    6. '-' → logprob: -19.875
    7. '   ' → logprob: -20.8125
    8. '১' → logprob: -21.0625
    9. '<|end|>' → logprob: -21.125
    10. '१' → logprob: -21.5

Token 718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005367091507650912
    2. '<|end|>' → logprob: -7.875536918640137
    3. '
' → logprob: -9.000536918640137
    4. '        
' → logprob: -11.125536918640137
    5. 'print' → logprob: -12.250536918640137
    6. '```' → logprob: -12.500536918640137
    7. ' print' → logprob: -13.125536918640137
    8. '<|end|>' → logprob: -13.125536918640137
    9. '   ' → logprob: -13.750536918640137
    10. ',' → logprob: -14.125536918640137

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.8961017202818766e-05
    2. '<|end|>' → logprob: -10.875059127807617
    3. '
' → logprob: -11.000059127807617
    4. 'print' → logprob: -11.750059127807617
    5. ' print' → logprob: -12.000059127807617
    6. '        
' → logprob: -12.250059127807617
    7. '```' → logprob: -13.250059127807617
    8. '   ' → logprob: -13.375059127807617
    9. '           ' → logprob: -14.250059127807617
    10. ' ' → logprob: -16.625059127807617

Token 720: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015395039226859808
    2. ' print' → logprob: -7.001539707183838
    3. '       ' → logprob: -7.376539707183838
    4. '   ' → logprob: -13.25153923034668
    5. '```' → logprob: -15.75153923034668
    6. '	print' → logprob: -16.62653923034668
    7. '
' → logprob: -17.12653923034668
    8. 'printf' → logprob: -18.00153923034668
    9. '           ' → logprob: -18.37653923034668
    10. '        
' → logprob: -19.00153923034668

Token 721: '(' (ID: 7)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.31378698348999023
    2. '(' → logprob: -1.5637869834899902
    3. '(n' → logprob: -2.8137869834899902
    4. 'f' → logprob: -12.563787460327148
    5. '((' → logprob: -13.188787460327148
    6. 'steps' → logprob: -15.563787460327148
    7. '(len' → logprob: -16.31378746032715
    8. 'n' → logprob: -16.43878746032715
    9. ' f' → logprob: -16.68878746032715
    10. '(step' → logprob: -16.81378746032715

Token 722: 'steps' (ID: 27176)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8758382201194763
    2. 'steps' → logprob: -1.125838279724121
    3. 'n' → logprob: -1.375838279724121
    4. '(f' → logprob: -5.625838279724121
    5. '(n' → logprob: -6.125838279724121
    6. '(' → logprob: -7.375838279724121
    7. ' steps' → logprob: -11.125838279724121
    8. 'str' → logprob: -11.375838279724121
    9. ' f' → logprob: -11.375838279724121
    10. ' n' → logprob: -11.625838279724121

Token 723: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.75000286102295
    3. ' )' → logprob: -14.12500286102295
    4. ')`' → logprob: -14.62500286102295
    5. '`)' → logprob: -15.37500286102295
    6. '   ' → logprob: -16.125001907348633
    7. '))' → logprob: -17.000001907348633
    8. '()' → logprob: -17.250001907348633
    9. '())' → logprob: -17.375001907348633
    10. '")' → logprob: -17.375001907348633

Token 724: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00010366239439463243
    2. '```' → logprob: -9.500103950500488
    3. ' if' → logprob: -10.500103950500488
    4. '
' → logprob: -14.500103950500488
    5. '<|end|>' → logprob: -15.250103950500488
    6. '#' → logprob: -15.500103950500488
    7. '  
' → logprob: -17.250102996826172
    8. '@if' → logprob: -17.250102996826172
    9. '	if' → logprob: -17.375102996826172
    10. '\' → logprob: -17.625102996826172

Token 725: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4772076904773712
    2. ' __' → logprob: -0.9772076606750488
    3. '_' → logprob: -5.852207660675049
    4. '___' → logprob: -8.602208137512207
    5. '_name' → logprob: -10.477208137512207
    6. ' ' → logprob: -11.477208137512207
    7. 'name' → logprob: -11.727208137512207
    8. '​' → logprob: -12.477208137512207
    9. '/__' → logprob: -12.852208137512207
    10. '﻿' → logprob: -12.977208137512207

Token 726: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003471182659268379
    2. '==' → logprob: -6.253471374511719
    3. 'name' → logprob: -7.628471374511719
    4. ' __' → logprob: -7.628471374511719
    5. ' ==' → logprob: -7.753471374511719
    6. 'if' → logprob: -9.503471374511719
    7. '__.__' → logprob: -10.753471374511719
    8. '.__' → logprob: -11.003471374511719
    9. '```' → logprob: -12.503471374511719
    10. '_name' → logprob: -12.628471374511719

Token 727: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.60414821645827e-06
    2. '__.__' → logprob: -12.625004768371582
    3. '==' → logprob: -13.875004768371582
    4. '_' → logprob: -16.125003814697266
    5. '__.' → logprob: -16.625003814697266
    6. '___' → logprob: -17.500003814697266
    7. '____' → logprob: -17.500003814697266
    8. '__
' → logprob: -18.250003814697266
    9. ' ==' → logprob: -18.625003814697266
    10. '__
' → logprob: -19.000003814697266

Token 728: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7456644773483276
    2. '__' → logprob: -0.9956644773483276
    3. ' ==' → logprob: -1.8706644773483276
    4. '=="' → logprob: -6.370664596557617
    5. '=='' → logprob: -7.995664596557617
    6. '=' → logprob: -11.370664596557617
    7. '_' → logprob: -12.245664596557617
    8. '===' → logprob: -12.620664596557617
    9. '"' → logprob: -12.870664596557617
    10. '==
' → logprob: -13.120664596557617

Token 729: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00524454889819026
    2. ''' → logprob: -5.255244731903076
    3. '__' → logprob: -11.755244255065918
    4. ' "__' → logprob: -12.755244255065918
    5. '"name' → logprob: -17.380245208740234
    6. ' '__' → logprob: -18.005245208740234
    7. '"_' → logprob: -18.630245208740234
    8. ''"' → logprob: -19.005245208740234
    9. '"user' → logprob: -19.005245208740234
    10. '("__' → logprob: -19.130245208740234

Token 730: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001657565007917583
    2. '__' → logprob: -8.750165939331055
    3. 'name' → logprob: -12.875165939331055
    4. 'built' → logprob: -13.250165939331055
    5. 'py' → logprob: -13.875165939331055
    6. '_main' → logprob: -14.000165939331055
    7. 'python' → logprob: -14.625165939331055
    8. ' main' → logprob: -14.750165939331055
    9. '"' → logprob: -16.000165939331055
    10. ' "__' → logprob: -17.500165939331055

Token 731: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2522103488445282
    2. '__' → logprob: -1.5022103786468506
    3. '__':
' → logprob: -8.50221061706543
    4. '__.' → logprob: -10.37721061706543
    5. '__:' → logprob: -10.62721061706543
    6. '__.__' → logprob: -11.25221061706543
    7. '__["' → logprob: -12.25221061706543
    8. '__
' → logprob: -13.75221061706543
    9. '__
' → logprob: -13.75221061706543
    10. '.__' → logprob: -14.50221061706543

Token 732: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06715284287929535
    2. ' main' → logprob: -2.942152738571167
    3. '   ' → logprob: -5.067152976989746
    4. '	main' → logprob: -5.317152976989746
    5. '_main' → logprob: -7.942152976989746
    6. '__' → logprob: -8.067152976989746
    7. '    
' → logprob: -8.817152976989746
    8. '<|end|>' → logprob: -10.192152976989746
    9. '
' → logprob: -10.442152976989746
    10. '(main' → logprob: -10.817152976989746

Token 733: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -21.125
    4. '   ' → logprob: -24.5
    5. 'import' → logprob: -24.5
    6. '(main' → logprob: -25.125
    7. '.main' → logprob: -25.875
    8. '_main' → logprob: -27.25
    9. '
' → logprob: -28.25
    10. '主' → logprob: -29.25

Token 734: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 732
Tokens correctement prédits (1ère position, stricte): 351
Tokens correctement prédits (1ère position, avec adaptation): 394
Tokens correctement prédits (top 10): 651
Précision stricte (1ère position): 47.95%
Précision adaptée (1ère position): 53.83%
Précision (top 10): 88.93%
================================================================================
