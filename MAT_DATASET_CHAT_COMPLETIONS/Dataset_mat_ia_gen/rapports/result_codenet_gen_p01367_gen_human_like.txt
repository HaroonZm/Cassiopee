================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

def can_finish(ops, customers, T):
    # ops: number of operators
    # customers: list of (M, L, K)
    # T: time limit

    # Each operator available time
    operators = [0]*ops
    heapq.heapify(operators)

    # Event queue: (time, customer_id, action)
    # action: 0 for call attempt
    # We'll manage calls by simulating customers calling, waiting and retrying
    # For each customer, store the next call time
    calls = []
    for i, (M, L, K) in enumerate(customers):
        # All call at time 0 intially, push (call_time, customer_id)
        heapq.heappush(calls, (0, i))

    # For each customer, we need to track if done
    done = [False]*len(customers)

    # Priority queue for waiting customers: (id, call_time, deadline, M, L, K)
    waiting = []

    current_time = 0

    while calls or waiting:
        # Pick earliest event time from calls or waiting
        next_call_time = calls[0][0] if calls else float('inf')
        next_op_free = operators[0] if operators else float('inf')

        current_time = min(next_call_time, next_op_free)

        # Move waiting callers who timeout at current_time and schedule retry if needed
        new_waiting = []
        while waiting:
            cid, call_t, deadline, M, L, K = heapq.heappop(waiting)
            # If call timed out before current_time, retry call after K time units
            # If they still have not been assigned and waiting too long, schedule retry
            if deadline <= current_time:
                # The caller hung up at deadline, will retry at deadline+K if not done
                if not done[cid]:
                    next_call = deadline + K
                    if next_call <= T:
                        heapq.heappush(calls, (next_call, cid))
                # else done no retry
            else:
                # Still waiting, push back
                heapq.heappush(new_waiting, (cid, call_t, deadline, M, L, K))
        waiting = new_waiting

        # Assign operators who are free at current_time to waiting callers if any
        while operators and operators[0] <= current_time and waiting:
            op_free = heapq.heappop(operators)
            cid, call_t, deadline, M, L, K = heapq.heappop(waiting)
            # Check if call is still valid
            if deadline < current_time:
                # Client hung up, push retry call if in time
                if not done[cid]:
                    next_call = deadline + K
                    if next_call <= T:
                        heapq.heappush(calls, (next_call, cid))
                continue
            # Assign this operator to client -> operator busy until current_time+M
            done[cid] = True
            free_at = current_time + M
            if free_at > T:
                # Over time limit
                return False
            heapq.heappush(operators, free_at)

        # Now process all calls at current_time
        while calls and calls[0][0] == current_time:
            _, cid = heapq.heappop(calls)
            if done[cid]:
                continue
            M, L, K = customers[cid]
            # Add to waiting with deadline = current_time + L
            deadline = current_time + L
            heapq.heappush(waiting, (cid, current_time, deadline, M, L, K))

        # If no calls or waiting, jump to next event
        if not calls and waiting:
            # jump to soonest operator free or earliest waiting deadline
            next_deadline = min(w[2] for w in waiting)
            next_op_free = operators[0] if operators else float('inf')
            current_time = min(next_deadline, next_op_free)
            # can loop continue

    return all(done)

def main():
    while True:
        line = input()
        if not line:
            break
        N, T = map(int, line.split())
        if N == 0 and T == 0:
            break
        customers = []
        for _ in range(N):
            M, L, K = map(int, input().split())
            customers.append((M,L,K))
        # Binary search on number of operators
        left, right = 1, N
        res = N
        while left <= right:
            mid = (left + right)//2
            if can_finish(mid, customers, T):
                res = mid
                right = mid -1
            else:
                left = mid +1
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.500019073486328
    3. '.' → logprob: -12.375019073486328
    4. '_' → logprob: -13.875019073486328
    5. '=' → logprob: -14.250019073486328
    6. 'ify' → logprob: -14.500019073486328
    7. ')' → logprob: -15.000019073486328
    8. 'i' → logprob: -15.125019073486328
    9. 'u' → logprob: -15.250019073486328
    10. 'p' → logprob: -15.500019073486328

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.500823974609375
    2. '
' → logprob: -1.500823974609375
    3. '\n' → logprob: -2.500823974609375
    4. '\' → logprob: -3.375823974609375
    5. '

' → logprob: -3.625823974609375
    6. '<|end|>' → logprob: -5.000823974609375
    7. '' → logprob: -5.375823974609375
    8. 'import' → logprob: -5.500823974609375
    9. '.
' → logprob: -5.875823974609375
    10. '.

' → logprob: -6.125823974609375

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7021071314811707
    2. 'def' → logprob: -1.7021071910858154
    3. '
' → logprob: -2.3271071910858154
    4. '\' → logprob: -3.2021071910858154
    5. '```' → logprob: -3.3271071910858154
    6. 'class' → logprob: -3.4521071910858154
    7. '\n' → logprob: -3.8271071910858154
    8. 'import' → logprob: -4.077106952667236
    9. 'from' → logprob: -4.077106952667236
    10. '' → logprob: -4.327106952667236

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03836551308631897
    2. '.' → logprob: -3.288365602493286
    3. ')' → logprob: -8.913365364074707
    4. '```' → logprob: -10.163365364074707
    5. '(.)' → logprob: -10.788365364074707
    6. '=' → logprob: -10.788365364074707
    7. '[' → logprob: -11.163365364074707
    8. '()' → logprob: -11.163365364074707
    9. '(
' → logprob: -11.413365364074707
    10. ''' → logprob: -11.413365364074707

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.13303180038928986
    2. ' sys' → logprob: -2.1330318450927734
    3. 'input' → logprob: -5.133031845092773
    4. ' input' → logprob: -8.758031845092773
    5. '	sys' → logprob: -11.133031845092773
    6. 'lambda' → logprob: -11.633031845092773
    7. '=sys' → logprob: -12.633031845092773
    8. ' lambda' → logprob: -14.133031845092773
    9. '(sys' → logprob: -14.258031845092773
    10. '```' → logprob: -14.258031845092773

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.10470236092805862
    2. '.' → logprob: -2.3547024726867676
    3. '.stdout' → logprob: -6.479702472686768
    4. '.readline' → logprob: -7.104702472686768
    5. ' .' → logprob: -7.104702472686768
    6. '.input' → logprob: -7.604702472686768
    7. '.argv' → logprob: -8.35470199584961
    8. '.path' → logprob: -8.97970199584961
    9. '.std' → logprob: -9.22970199584961
    10. '.import' → logprob: -9.47970199584961

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03213656693696976
    2. '.read' → logprob: -4.0321364402771
    3. '.' → logprob: -4.2821364402771
    4. '.readlines' → logprob: -9.657136917114258
    5. '.Read' → logprob: -12.657136917114258
    6. '.buffer' → logprob: -12.907136917114258
    7. 'read' → logprob: -12.907136917114258
    8. '.write' → logprob: -14.282136917114258
    9. ' .' → logprob: -14.532136917114258
    10. '```' → logprob: -14.657136917114258

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4410732388496399
    2. '(' → logprob: -1.3160731792449951
    3. '(
' → logprob: -3.691073179244995
    4. '()
' → logprob: -3.816073179244995
    5. 'def' → logprob: -4.441073417663574
    6. '()\' → logprob: -4.441073417663574
    7. '()

' → logprob: -4.816073417663574
    8. '
' → logprob: -5.691073417663574
    9. 'for' → logprob: -7.191073417663574
    10. '(

' → logprob: -7.316073417663574

Token 13: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31354081630706787
    2. 'def' → logprob: -1.3135408163070679
    3. 'N' → logprob: -8.4385404586792
    4. 'class' → logprob: -9.8135404586792
    5. '\' → logprob: -13.5635404586792
    6. 'from' → logprob: -13.5635404586792
    7. 'd' → logprob: -13.6885404586792
    8. 'for' → logprob: -14.0635404586792
    9. 'data' → logprob: -14.1885404586792
    10. 'num' → logprob: -14.1885404586792

Token 14: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07015227526426315
    2. ' d' → logprob: -3.4451522827148438
    3. ' main' → logprob: -3.4451522827148438
    4. ' solve' → logprob: -6.320152282714844
    5. ' D' → logprob: -7.570152282714844
    6. ' a' → logprob: -7.570152282714844
    7. ' find' → logprob: -8.570152282714844
    8. ' `' → logprob: -8.570152282714844
    9. ' solution' → logprob: -8.570152282714844
    10. ' heap' → logprob: -9.570152282714844

Token 15: '_finish' (ID: 109520)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4557311236858368
    2. '_accept' → logprob: -1.4557311534881592
    3. '_construct' → logprob: -3.955731153488159
    4. '_take' → logprob: -4.45573091506958
    5. '_continue' → logprob: -4.83073091506958
    6. '_place' → logprob: -4.83073091506958
    7. '_jump' → logprob: -4.95573091506958
    8. 'Accept' → logprob: -5.08073091506958
    9. '_use' → logprob: -5.33073091506958
    10. '_build' → logprob: -5.33073091506958

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6627755761146545
    2. '(course' → logprob: -1.1627755165100098
    3. '(task' → logprob: -2.1627755165100098
    4. '_courses' → logprob: -4.53777551651001
    5. '(tasks' → logprob: -4.66277551651001
    6. '_course' → logprob: -4.66277551651001
    7. '(job' → logprob: -5.78777551651001
    8. '_task' → logprob: -5.78777551651001
    9. '(project' → logprob: -5.91277551651001
    10. '(line' → logprob: -6.28777551651001

Token 17: 'ops' (ID: 4645)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.711217999458313
    2. ' courses' → logprob: -1.961217999458313
    3. 'courses' → logprob: -2.0862178802490234
    4. ' )' → logprob: -2.9612178802490234
    5. ' n' → logprob: -3.5862178802490234
    6. 'n' → logprob: -3.8362178802490234
    7. 'num' → logprob: -4.211217880249023
    8. ' ' → logprob: -4.336217880249023
    9. 'task' → logprob: -4.336217880249023
    10. ' num' → logprob: -4.461217880249023

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11114918440580368
    2. ')' → logprob: -2.3611490726470947
    3. '[' → logprob: -5.111149311065674
    4. ',' → logprob: -6.361149311065674
    5. '_list' → logprob: -7.236149311065674
    6. '_' → logprob: -7.486149311065674
    7. '[]):' → logprob: -7.486149311065674
    8. '_ops' → logprob: -8.361148834228516
    9. 's' → logprob: -8.986148834228516
    10. '(' → logprob: -9.361148834228516

Token 19: ' customers' (ID: 6028)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -1.6506636142730713
    2. ' n' → logprob: -1.7756636142730713
    3. ' k' → logprob: -1.7756636142730713
    4. ' time' → logprob: -2.2756636142730713
    5. ' target' → logprob: -3.1506636142730713
    6. ' K' → logprob: -3.1506636142730713
    7. 'k' → logprob: -3.5256636142730713
    8. ' m' → logprob: -4.025663375854492
    9. 'n' → logprob: -4.025663375854492
    10. ' num' → logprob: -4.025663375854492

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03696088492870331
    2. ',' → logprob: -3.4119608402252197
    3. ')' → logprob: -5.786961078643799
    4. '[' → logprob: -9.78696060180664
    5. '):
' → logprob: -10.03696060180664
    6. ' ):' → logprob: -10.03696060180664
    7. '[]):' → logprob: -10.78696060180664
    8. ':' → logprob: -11.41196060180664
    9. '):
' → logprob: -11.53696060180664
    10. ')):' → logprob: -11.53696060180664

Token 21: ' T' (ID: 353)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.4290189743041992
    2. ' time' → logprob: -1.4290189743041992
    3. ' capacity' → logprob: -2.679018974304199
    4. ' n' → logprob: -3.179018974304199
    5. ' m' → logprob: -3.304018974304199
    6. ' K' → logprob: -3.429018974304199
    7. ' max' → logprob: -3.429018974304199
    8. 'time' → logprob: -3.741518974304199
    9. ' mid' → logprob: -3.866518974304199
    10. ' machines' → logprob: -3.991518974304199

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016073083505034447
    2. ')' → logprob: -4.266073226928711
    3. ' ):' → logprob: -6.641073226928711
    4. ',' → logprob: -7.516073226928711
    5. ' )' → logprob: -10.891073226928711
    6. '):
' → logprob: -11.766073226928711
    7. '_' → logprob: -11.766073226928711
    8. ':' → logprob: -12.016073226928711
    9. '   ' → logprob: -12.516073226928711
    10. ' ' → logprob: -12.891073226928711

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2444118857383728
    2. '   ' → logprob: -1.7444119453430176
    3. '):' → logprob: -3.2444119453430176
    4. '():' → logprob: -6.369411945343018
    5. '(' → logprob: -7.994411945343018
    6. ' :' → logprob: -8.36941146850586
    7. '    
' → logprob: -8.99441146850586
    8. '```' → logprob: -9.36941146850586
    9. '    ' → logprob: -9.61941146850586
    10. ')' → logprob: -9.74441146850586

Token 24: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9219279885292053
    2. '    ' → logprob: -1.5469279289245605
    3. ' :' → logprob: -1.9219279289245605
    4. ':' → logprob: -2.1719279289245605
    5. '   ' → logprob: -2.4219279289245605
    6. ' 
' → logprob: -4.6719279289245605
    7. '     
' → logprob: -5.0469279289245605
    8. ')' → logprob: -5.4219279289245605
    9. '):' → logprob: -6.0469279289245605
    10. '  ' → logprob: -6.0469279289245605

Token 25: ' ops' (ID: 26973)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5642812252044678
    2. '    ' → logprob: -1.1892812252044678
    3. '     
' → logprob: -3.1892812252044678
    4. ' 
' → logprob: -3.5642812252044678
    5. ' max' → logprob: -4.189281463623047
    6. 'max' → logprob: -5.314281463623047
    7. ' ```' → logprob: -5.314281463623047
    8. '   ' → logprob: -5.814281463623047
    9. ' for' → logprob: -5.814281463623047
    10. '  
' → logprob: -6.439281463623047

Token 26: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6235417723655701
    2. '=' → logprob: -2.123541831970215
    3. '_sorted' → logprob: -2.623541831970215
    4. '.sort' → logprob: -3.248541831970215
    5. '_count' → logprob: -3.498541831970215
    6. '_time' → logprob: -3.623541831970215
    7. ')' → logprob: -3.873541831970215
    8. '   ' → logprob: -3.998541831970215
    9. '_heap' → logprob: -3.998541831970215
    10. '_times' → logprob: -4.123541831970215

Token 27: ' number' (ID: 2086)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.5091983675956726
    2. ' list' → logprob: -1.6341984272003174
    3. 'List' → logprob: -2.2591984272003174
    4. ' int' → logprob: -3.1341984272003174
    5. 'list' → logprob: -4.134198188781738
    6. 'int' → logprob: -4.384198188781738
    7. ' number' → logprob: -4.884198188781738
    8. '[int' → logprob: -5.634198188781738
    9. ' operations' → logprob: -5.759198188781738
    10. ' a' → logprob: -6.384198188781738

Token 28: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.887911319732666
    2. ')' → logprob: -1.137911319732666
    3. ' ' → logprob: -2.387911319732666
    4. '[' → logprob: -2.762911319732666
    5. 's' → logprob: -3.012911319732666
    6. ',' → logprob: -4.137911319732666
    7. ' of' → logprob: -4.512911319732666
    8. 'of' → logprob: -4.762911319732666
    9. '_of' → logprob: -4.762911319732666
    10. '  ' → logprob: -5.637911319732666

Token 29: ' operators' (ID: 29893)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -1.1153734922409058
    2. ' operators' → logprob: -1.2403734922409058
    3. 'operators' → logprob: -1.7403734922409058
    4. 'operations' → logprob: -2.2403736114501953
    5. ' ovens' → logprob: -3.8653736114501953
    6. ' counters' → logprob: -4.240373611450195
    7. ' ' → logprob: -4.615373611450195
    8. 'machines' → logprob: -4.740373611450195
    9. ' machines' → logprob: -5.240373611450195
    10. ' processors' → logprob: -5.865373611450195

Token 30: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19103066623210907
    2. '<|end|>' → logprob: -2.441030740737915
    3. '   ' → logprob: -3.441030740737915
    4. '<|end|>' → logprob: -3.941030740737915
    5. ' )' → logprob: -4.191030502319336
    6. ',' → logprob: -4.316030502319336
    7. '    ' → logprob: -6.316030502319336
    8. '
' → logprob: -6.816030502319336
    9. ' ,' → logprob: -7.441030502319336
    10. ' ' → logprob: -7.566030502319336

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09726622700691223
    2. ')' → logprob: -3.47226619720459
    3. ',' → logprob: -3.59726619720459
    4. '):' → logprob: -4.09726619720459
    5. ' =' → logprob: -5.97226619720459
    6. ':' → logprob: -6.09726619720459
    7. '<|end|>' → logprob: -6.34726619720459
    8. '    ' → logprob: -6.59726619720459
    9. ' for' → logprob: -6.97226619720459
    10. '):
' → logprob: -7.09726619720459

Token 32: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29115939140319824
    2. '    ' → logprob: -2.0411593914031982
    3. '   ' → logprob: -2.7911593914031982
    4. ')' → logprob: -4.166159629821777
    5. ' )' → logprob: -4.166159629821777
    6. '  ' → logprob: -4.791159629821777
    7. ' ,' → logprob: -4.791159629821777
    8. '<|end|>' → logprob: -5.791159629821777
    9. ' for' → logprob: -6.041159629821777
    10. ',' → logprob: -6.291159629821777

Token 33: ' customers' (ID: 6028)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4342814683914185
    2. ' time' → logprob: -1.5592814683914185
    3. '   ' → logprob: -2.184281349182129
    4. ' max' → logprob: -2.309281349182129
    5. ' customers' → logprob: -3.059281349182129
    6. ' capacity' → logprob: -3.059281349182129
    7. ' ' → logprob: -3.309281349182129
    8. ' available' → logprob: -3.809281349182129
    9. ' remaining' → logprob: -3.934281349182129
    10. ' return' → logprob: -3.934281349182129

Token 34: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.087157130241394
    2. '_remaining' → logprob: -1.212157130241394
    3. ',' → logprob: -2.4621572494506836
    4. ')' → logprob: -2.5871572494506836
    5. '<|end|>' → logprob: -2.8371572494506836
    6. '=' → logprob: -3.8371572494506836
    7. '<|end|>' → logprob: -4.087157249450684
    8. '   ' → logprob: -4.462157249450684
    9. ':' → logprob: -4.462157249450684
    10. '_needed' → logprob: -4.962157249450684

Token 35: ' list' (ID: 1562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.36080658435821533
    2. ' list' → logprob: -2.610806465148926
    3. ' len' → logprob: -2.860806465148926
    4. ' int' → logprob: -2.985806465148926
    5. ' ' → logprob: -3.860806465148926
    6. ' time' → logprob: -3.985806465148926
    7. 'number' → logprob: -4.110806465148926
    8. ' total' → logprob: -4.485806465148926
    9. 'len' → logprob: -4.735806465148926
    10. ' remaining' → logprob: -4.985806465148926

Token 36: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.07858094573020935
    2. '[int' → logprob: -2.953580856323242
    3. '<|end|>' → logprob: -4.453580856323242
    4. 'of' → logprob: -5.578580856323242
    5. '<|end|>' → logprob: -5.828580856323242
    6. ')' → logprob: -6.453580856323242
    7. '   ' → logprob: -6.453580856323242
    8. '[' → logprob: -6.828580856323242
    9. ',' → logprob: -8.453580856323242
    10. '<int' → logprob: -9.203580856323242

Token 37: ' (' (ID: 350)
  Prédit: ' processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processing' → logprob: -0.9152113795280457
    2. 'processing' → logprob: -2.2902114391326904
    3. ' integers' → logprob: -2.4152114391326904
    4. ' times' → logprob: -2.6652114391326904
    5. ' int' → logprob: -3.1652114391326904
    6. ' waiting' → logprob: -3.2902114391326904
    7. ' customer' → logprob: -3.2902114391326904
    8. ' service' → logprob: -3.2902114391326904
    9. ' remaining' → logprob: -3.9152114391326904
    10. ' customers' → logprob: -4.290211200714111

Token 38: 'M' (ID: 44)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.6863736510276794
    2. 'time' → logprob: -1.1863737106323242
    3. 'processing' → logprob: -2.686373710632324
    4. ' arrival' → logprob: -3.936373710632324
    5. ' time' → logprob: -4.311373710632324
    6. 'start' → logprob: -4.436373710632324
    7. 'customer' → logprob: -4.561373710632324
    8. 'service' → logprob: -4.811373710632324
    9. 'arr' → logprob: -5.248873710632324
    10. 'process' → logprob: -5.373873710632324

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01165469828993082
    2. ' ,' → logprob: -5.511654853820801
    3. '_time' → logprob: -5.761654853820801
    4. 'time' → logprob: -6.386654853820801
    5. ')' → logprob: -6.886654853820801
    6. 'ultip' → logprob: -8.3866548538208
    7. 'ultiply' → logprob: -9.1366548538208
    8. ',)' → logprob: -9.1366548538208
    9. 'a' → logprob: -9.2616548538208
    10. 'arrival' → logprob: -9.5116548538208

Token 40: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.957377314567566
    2. 'P' → logprob: -2.0823774337768555
    3. 't' → logprob: -2.0823774337768555
    4. 'S' → logprob: -2.5823774337768555
    5. 'T' → logprob: -2.5823774337768555
    6. 'D' → logprob: -2.8948774337768555
    7. 'p' → logprob: -3.3948774337768555
    8. 'I' → logprob: -3.3948774337768555
    9. 'K' → logprob: -3.5823774337768555
    10. 'time' → logprob: -3.7073774337768555

Token 41: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013198469765484333
    2. ',' → logprob: -4.388198375701904
    3. '_time' → logprob: -7.638198375701904
    4. ' )' → logprob: -10.013198852539062
    5. ',)' → logprob: -10.138198852539062
    6. 'time' → logprob: -10.138198852539062
    7. '),' → logprob: -10.513198852539062
    8. '_times' → logprob: -11.388198852539062
    9. ' ,' → logprob: -12.638198852539062
    10. ',time' → logprob: -12.763198852539062

Token 42: ' K' (ID: 658)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.674403190612793
    2. 'R' → logprob: -1.799403190612793
    3. 'D' → logprob: -2.549403190612793
    4. 'S' → logprob: -3.174403190612793
    5. 'T' → logprob: -3.424403190612793
    6. ' R' → logprob: -3.799403190612793
    7. 'P' → logprob: -4.049403190612793
    8. 'W' → logprob: -4.424403190612793
    9. 'C' → logprob: -4.736903190612793
    10. 'N' → logprob: -4.924403190612793

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ',' → logprob: -11.875015258789062
    3. ' )' → logprob: -12.375015258789062
    4. '),' → logprob: -13.250015258789062
    5. 's' → logprob: -14.250015258789062
    6. '[' → logprob: -14.500015258789062
    7. ' ' → logprob: -15.375015258789062
    8. '   ' → logprob: -15.625015258789062
    9. '```' → logprob: -16.125015258789062
    10. ']' → logprob: -16.500015258789062

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4457348883152008
    2. '):' → logprob: -1.4457348585128784
    3. ':' → logprob: -2.445734977722168
    4. ')' → logprob: -3.945734977722168
    5. '):
' → logprob: -5.320734977722168
    6. '
' → logprob: -5.445734977722168
    7. ':
' → logprob: -6.445734977722168
    8. '    
' → logprob: -6.570734977722168
    9. ' :' → logprob: -6.695734977722168
    10. '```' → logprob: -6.820734977722168

Token 45: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8068951368331909
    2. '
' → logprob: -2.0568952560424805
    3. ' 
' → logprob: -2.3068952560424805
    4. '    
' → logprob: -2.5568952560424805
    5. '    ' → logprob: -2.6818952560424805
    6. ':' → logprob: -2.8068952560424805
    7. '     
' → logprob: -3.4318952560424805
    8. ')' → logprob: -3.6818952560424805
    9. '\n' → logprob: -4.3068952560424805
    10. '\' → logprob: -4.9318952560424805

Token 46: ' T' (ID: 353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7831176519393921
    2. ' max' → logprob: -1.408117651939392
    3. ' time' → logprob: -2.4081177711486816
    4. ' times' → logprob: -3.6581177711486816
    5. 'max' → logprob: -3.9081177711486816
    6. ' available' → logprob: -4.033117771148682
    7. 'time' → logprob: -4.033117771148682
    8. ' finish' → logprob: -4.408117771148682
    9. ' total' → logprob: -4.658117771148682
    10. ' n' → logprob: -4.658117771148682

Token 47: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6730146408081055
    2. '):' → logprob: -1.1730146408081055
    3. '=' → logprob: -2.2980146408081055
    4. ' =' → logprob: -3.4230146408081055
    5. ' >=' → logprob: -4.2980146408081055
    6. ':' → logprob: -4.9230146408081055
    7. ' ):' → logprob: -5.0480146408081055
    8. ' )' → logprob: -5.2980146408081055
    9. '>=' → logprob: -5.4230146408081055
    10. ' ' → logprob: -5.6730146408081055

Token 48: ' time' (ID: 1058)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3437955975532532
    2. ' ' → logprob: -1.3437955379486084
    3. 'int' → logprob: -3.8437955379486084
    4. ' time' → logprob: -5.5937957763671875
    5. ')' → logprob: -6.3437957763671875
    6. ' )' → logprob: -7.4687957763671875
    7. ' "' → logprob: -7.8437957763671875
    8. 'time' → logprob: -7.8437957763671875
    9. ' '' → logprob: -8.093795776367188
    10. '    ' → logprob: -8.343795776367188

Token 49: ' limit' (ID: 5967)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2992528975009918
    2. '   ' → logprob: -2.049252986907959
    3. ')' → logprob: -2.174252986907959
    4. ' ):' → logprob: -5.174252986907959
    5. ':' → logprob: -5.424252986907959
    6. '):
' → logprob: -5.549252986907959
    7. ' :' → logprob: -7.674252986907959
    8. ' )' → logprob: -7.924252986907959
    9. '
' → logprob: -8.6742525100708
    10. '    
' → logprob: -8.7992525100708

Token 50: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4430846869945526
    2. '   ' → logprob: -1.318084716796875
    3. '):' → logprob: -2.568084716796875
    4. ')' → logprob: -5.193084716796875
    5. ' :' → logprob: -5.943084716796875
    6. ':
' → logprob: -6.193084716796875
    7. '):
' → logprob: -6.443084716796875
    8. '    
' → logprob: -7.443084716796875
    9. '
' → logprob: -7.943084716796875
    10. ' :
' → logprob: -9.068084716796875

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010506747290492058
    2. '    
' → logprob: -5.135506629943848
    3. '
' → logprob: -5.760506629943848
    4. ':' → logprob: -7.760506629943848
    5. ')' → logprob: -8.260506629943848
    6. 'def' → logprob: -8.885506629943848
    7. ' 
' → logprob: -9.510506629943848
    8. ' for' → logprob: -9.760506629943848
    9. '    ' → logprob: -9.760506629943848
    10. '   
' → logprob: -10.010506629943848

Token 52: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6433030962944031
    2. ' heap' → logprob: -2.143303155899048
    3. ' queue' → logprob: -2.643303155899048
    4. ' available' → logprob: -2.893303155899048
    5. 'heap' → logprob: -3.643303155899048
    6. ' times' → logprob: -3.643303155899048
    7. ' operators' → logprob: -3.893303155899048
    8. ' left' → logprob: -4.018302917480469
    9. ' max' → logprob: -4.018302917480469
    10. 'times' → logprob: -4.143302917480469

Token 53: ' Each' (ID: 11555)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8209710121154785
    2. ' heap' → logprob: -2.3209710121154785
    3. 'times' → logprob: -2.5709710121154785
    4. '   ' → logprob: -3.0709710121154785
    5. 'pq' → logprob: -3.3209710121154785
    6. 'operators' → logprob: -3.5709710121154785
    7. 'queue' → logprob: -3.5709710121154785
    8. 'available' → logprob: -3.6959710121154785
    9. '```' → logprob: -3.8209710121154785
    10. 'for' → logprob: -3.9459710121154785

Token 54: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.61629718542099
    2. ' operator' → logprob: -0.99129718542099
    3. 'op' → logprob: -2.8662972450256348
    4. ' op' → logprob: -4.616297245025635
    5. '_' → logprob: -5.366297245025635
    6. 'time' → logprob: -5.616297245025635
    7. '_operator' → logprob: -5.741297245025635
    8. ' time' → logprob: -6.616297245025635
    9. ')' → logprob: -6.616297245025635
    10. 'customer' → logprob: -6.866297245025635

Token 55: ' available' (ID: 2839)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.8050281405448914
    2. ' can' → logprob: -1.1800282001495361
    3. 's' → logprob: -2.805028200149536
    4. 'has' → logprob: -3.055028200149536
    5. ''s' → logprob: -3.180028200149536
    6. '_time' → logprob: -4.430027961730957
    7. ' =' → logprob: -4.680027961730957
    8. 'can' → logprob: -4.680027961730957
    9. '   ' → logprob: -4.930027961730957
    10. ' is' → logprob: -5.055027961730957

Token 56: ' time' (ID: 1058)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.783827006816864
    2. ' =' → logprob: -1.5338270664215088
    3. '_time' → logprob: -1.6588270664215088
    4. '=' → logprob: -2.908827066421509
    5. '_times' → logprob: -3.158827066421509
    6. 'at' → logprob: -4.15882682800293
    7. 'time' → logprob: -4.78382682800293
    8. ' at' → logprob: -5.15882682800293
    9. 'times' → logprob: -6.40882682800293
    10. '_' → logprob: -6.40882682800293

Token 57: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6339876055717468
    2. ' =' → logprob: -1.0089876651763916
    3. '=' → logprob: -2.2589876651763916
    4. '[]' → logprob: -8.758987426757812
    5. '   ' → logprob: -9.758987426757812
    6. '[' → logprob: -9.883987426757812
    7. 'es' → logprob: -10.133987426757812
    8. ',' → logprob: -10.258987426757812
    9. ' ' → logprob: -10.758987426757812
    10. ' is' → logprob: -10.758987426757812

Token 58: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3495745360851288
    2. '=' → logprob: -1.3495745658874512
    3. 's' → logprob: -3.349574565887451
    4. '   ' → logprob: -7.974574565887451
    5. ' is' → logprob: -9.349574089050293
    6. ' ' → logprob: -10.724574089050293
    7. 'es' → logprob: -10.849574089050293
    8. '=[' → logprob: -11.224574089050293
    9. ',' → logprob: -11.474574089050293
    10. '=[]' → logprob: -11.724574089050293

Token 59: ' operators' (ID: 29893)
  Prédit: ' available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' available' → logprob: -0.5882195830345154
    2. 'available' → logprob: -2.21321964263916
    3. ' op' → logprob: -2.58821964263916
    4. ' times' → logprob: -2.83821964263916
    5. 'times' → logprob: -3.33821964263916
    6. ' operator' → logprob: -3.71321964263916
    7. ' =' → logprob: -3.83821964263916
    8. ' ops' → logprob: -3.96321964263916
    9. ' operators' → logprob: -3.96321964263916
    10. '   ' → logprob: -4.08821964263916

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05003449693322182
    2. '=' → logprob: -3.050034523010254
    3. '_time' → logprob: -6.925034523010254
    4. '_times' → logprob: -7.800034523010254
    5. 'time' → logprob: -11.175034523010254
    6. 'times' → logprob: -11.425034523010254
    7. '=[]' → logprob: -11.675034523010254
    8. 's' → logprob: -12.300034523010254
    9. '_' → logprob: -12.675034523010254
    10. '[' → logprob: -13.175034523010254

Token 61: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.47416952252388
    2. '[' → logprob: -0.9741694927215576
    3. '[]' → logprob: -10.349169731140137
    4. '[min' → logprob: -11.099169731140137
    5. ' []' → logprob: -11.349169731140137
    6. '[T' → logprob: -11.474169731140137
    7. '[int' → logprob: -12.224169731140137
    8. '   ' → logprob: -12.349169731140137
    9. ' ' → logprob: -13.099169731140137
    10. '[num' → logprob: -13.724169731140137

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003911457024514675
    2. ' ' → logprob: -6.00391149520874
    3. 'T' → logprob: -6.75391149520874
    4. ' T' → logprob: -8.253911018371582
    5. '   ' → logprob: -12.378911018371582
    6. '  ' → logprob: -13.941411018371582
    7. ')' → logprob: -14.503911018371582
    8. '```' → logprob: -14.816411018371582
    9. ']' → logprob: -14.878911018371582
    10. '    ' → logprob: -15.691411018371582

Token 63: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025242498144507408
    2. ']*' → logprob: -4.025242328643799
    3. ' for' → logprob: -5.025242328643799
    4. ' ]' → logprob: -8.025242805480957
    5. 'for' → logprob: -8.900242805480957
    6. ')' → logprob: -10.650242805480957
    7. ']*(' → logprob: -12.650242805480957
    8. ']+' → logprob: -13.650242805480957
    9. '']' → logprob: -13.650242805480957
    10. '   ' → logprob: -13.900242805480957

Token 64: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.2113979209971149e-05
    2. 'op' → logprob: -11.625012397766113
    3. ' ops' → logprob: -13.125012397766113
    4. '   ' → logprob: -15.250012397766113
    5. 'ope' → logprob: -15.875012397766113
    6. '(' → logprob: -16.125011444091797
    7. 'ots' → logprob: -16.250011444091797
    8. 'opf' → logprob: -16.375011444091797
    9. '```' → logprob: -16.625011444091797
    10. 'aps' → logprob: -16.875011444091797

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2520008087158203
    2. '   ' → logprob: -2.3770008087158203
    3. '    
' → logprob: -3.1270008087158203
    4. ' 
' → logprob: -4.00200080871582
    5. '  
' → logprob: -4.25200080871582
    6. '\n' → logprob: -4.25200080871582
    7. ' for' → logprob: -4.50200080871582
    8. 'for' → logprob: -4.87700080871582
    9. '
' → logprob: -5.62700080871582
    10. '<|end|>' → logprob: -5.75200080871582

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24100090563297272
    2. '   ' → logprob: -2.2410008907318115
    3. ' for' → logprob: -3.2410008907318115
    4. '    
' → logprob: -3.7410008907318115
    5. 'for' → logprob: -4.116001129150391
    6. '<|end|>' → logprob: -4.866001129150391
    7. ' 
' → logprob: -5.116001129150391
    8. '  
' → logprob: -5.491001129150391
    9. '\n' → logprob: -6.116001129150391
    10. ' ' → logprob: -6.491001129150391

Token 67: ' heap' (ID: 37237)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.558148980140686
    2. ' for' → logprob: -1.183148980140686
    3. '   ' → logprob: -2.3081488609313965
    4. 'heap' (adapté à ' heap') → logprob: -4.8081488609313965
    5. '    
' → logprob: -5.1831488609313965
    6. '
' → logprob: -5.9331488609313965
    7. ' 
' → logprob: -6.9331488609313965
    8. ' heap' → logprob: -7.1831488609313965
    9. ' ' → logprob: -7.4331488609313965
    10. '  
' → logprob: -7.5581488609313965

Token 68: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008937132079154253
    2. '.' → logprob: -7.250893592834473
    3. 'ify' → logprob: -9.750893592834473
    4. '.push' → logprob: -10.000893592834473
    5. '.he' → logprob: -10.250893592834473
    6. ' .' → logprob: -11.625893592834473
    7. '_push' → logprob: -12.000893592834473
    8. '=' → logprob: -12.250893592834473
    9. '```' → logprob: -12.250893592834473
    10. '[' → logprob: -12.625893592834473

Token 69: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.12135381251573563
    2. '.he' → logprob: -2.7463538646698
    3. '.' → logprob: -2.9963538646698
    4. '.push' → logprob: -9.746354103088379
    5. ' .' → logprob: -11.621354103088379
    6. '.put' → logprob: -11.996354103088379
    7. '.nl' → logprob: -12.121354103088379
    8. '.q' → logprob: -12.121354103088379
    9. 'ify' → logprob: -12.246354103088379
    10. '.n' → logprob: -12.621354103088379

Token 70: 'ify' (ID: 1985)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.3463402986526489
    2. 'replace' → logprob: -1.346340298652649
    3. 'ify' → logprob: -3.4713401794433594
    4. 'ush' → logprob: -7.471340179443359
    5. 'he' → logprob: -7.971340179443359
    6. 'pop' → logprob: -8.59634017944336
    7. '```' → logprob: -9.09634017944336
    8. 'q' → logprob: -10.22134017944336
    9. 'op' → logprob: -10.34634017944336
    10. '

' → logprob: -10.59634017944336

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.253090865968261e-06
    2. ' (' → logprob: -12.375009536743164
    3. 'operators' → logprob: -12.875009536743164
    4. '(op' → logprob: -14.250009536743164
    5. '(operator' → logprob: -14.500009536743164
    6. '```' → logprob: -15.125009536743164
    7. '(heap' → logprob: -15.375009536743164
    8. ')' → logprob: -16.500009536743164
    9. ' operators' → logprob: -16.500009536743164
    10. '()' → logprob: -16.750009536743164

Token 72: 'operators' (ID: 68510)
  Prédit: 'operators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.0011222377652302384
    2. '(' → logprob: -6.87612247467041
    3. ' operators' → logprob: -9.50112247467041
    4. ')' → logprob: -11.25112247467041
    5. 'operator' → logprob: -14.12612247467041
    6. '```' → logprob: -15.25112247467041
    7. 'Operators' → logprob: -15.50112247467041
    8. 'operations' → logprob: -16.001121520996094
    9. '/operators' → logprob: -16.626121520996094
    10. 'ops' → logprob: -16.751121520996094

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ' )' → logprob: -13.125004768371582
    3. ')
' → logprob: -13.500004768371582
    4. '   ' → logprob: -14.375004768371582
    5. '))' → logprob: -15.000004768371582
    6. ')

' → logprob: -16.750003814697266
    7. '`)' → logprob: -17.625003814697266
    8. ' ' → logprob: -17.750003814697266
    9. ')`' → logprob: -17.750003814697266
    10. '),' → logprob: -18.125003814697266

Token 74: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5393747687339783
    2. 'for' → logprob: -1.539374828338623
    3. '
' → logprob: -2.289374828338623
    4. ')' → logprob: -3.414374828338623
    5. '<|end|>' → logprob: -3.664374828338623
    6. '    
' → logprob: -4.039374828338623
    7. '   ' → logprob: -4.289374828338623
    8. '  
' → logprob: -6.164374828338623
    9. '```' → logprob: -6.164374828338623
    10. ' 
' → logprob: -6.539374828338623

Token 75: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019576558843255043
    2. ' for' → logprob: -6.251957893371582
    3. '   ' → logprob: -11.001957893371582
    4. '```' → logprob: -11.626957893371582
    5. 'For' → logprob: -13.876957893371582
    6. ')' → logprob: -14.126957893371582
    7. '<|end|>' → logprob: -14.501957893371582
    8. '	for' → logprob: -14.876957893371582
    9. ' ' → logprob: -15.501957893371582
    10. '    
' → logprob: -15.751957893371582

Token 76: ' Event' (ID: 6400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11288449913263321
    2. ' for' → logprob: -2.237884521484375
    3. 'For' → logprob: -10.362884521484375
    4. '   ' → logprob: -10.862884521484375
    5. '```' → logprob: -12.237884521484375
    6. 'customers' → logprob: -13.487884521484375
    7. '#' → logprob: -14.237884521484375
    8. '``' → logprob: -14.362884521484375
    9. ' For' → logprob: -14.862884521484375
    10. '<|end|>' → logprob: -14.862884521484375

Token 77: ' queue' (ID: 13661)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0200845617800951
    2. ' =' → logprob: -4.895084381103516
    3. ' queue' → logprob: -5.645084381103516
    4. '=' → logprob: -5.770084381103516
    5. '_queue' → logprob: -6.395084381103516
    6. ':' → logprob: -6.895084381103516
    7. 'queue' → logprob: -7.270084381103516
    8. 'ual' → logprob: -7.270084381103516
    9. '   ' → logprob: -8.520084381103516
    10. ')' → logprob: -8.895084381103516

Token 78: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6048689484596252
    2. '<|end|>' → logprob: -1.6048688888549805
    3. 'events' → logprob: -2.3548688888549805
    4. '=' → logprob: -2.4798688888549805
    5. '=[]' → logprob: -3.7298688888549805
    6. '<|end|>' → logprob: -4.3548688888549805
    7. ' events' → logprob: -4.7298688888549805
    8. ',' → logprob: -4.8548688888549805
    9. ':' → logprob: -4.8548688888549805
    10. '[]' → logprob: -5.8548688888549805

Token 79: ' (' (ID: 350)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6144582629203796
    2. '[]' → logprob: -0.9894582629203796
    3. 'customers' → logprob: -2.8644583225250244
    4. ' customers' → logprob: -3.8644583225250244
    5. 'events' → logprob: -6.114458084106445
    6. '<|end|>' → logprob: -6.864458084106445
    7. ' events' → logprob: -7.114458084106445
    8. '[' → logprob: -7.489458084106445
    9. ' for' → logprob: -7.614458084106445
    10. ' [(' → logprob: -7.614458084106445

Token 80: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.39829978346824646
    2. 'available' → logprob: -1.3982998132705688
    3. 'finish' → logprob: -3.8982996940612793
    4. ' time' → logprob: -4.523299694061279
    5. 'ready' → logprob: -4.773299694061279
    6. ' available' → logprob: -4.898299694061279
    7. 'end' → logprob: -5.148299694061279
    8. 'next' → logprob: -5.148299694061279
    9. ')' → logprob: -5.398299694061279
    10. '(time' → logprob: -5.523299694061279

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.996708104154095e-05
    2. ',)' → logprob: -10.375100135803223
    3. ' ,' → logprob: -10.625100135803223
    4. ')' → logprob: -10.750100135803223
    5. '<|end|>' → logprob: -12.125100135803223
    6. ',event' → logprob: -12.625100135803223
    7. ',user' → logprob: -12.750100135803223
    8. '   ' → logprob: -13.750100135803223
    9. ',
' → logprob: -13.875100135803223
    10. '),' → logprob: -13.875100135803223

Token 82: ' customer' (ID: 5989)
  Prédit: ' customer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' customer' → logprob: -1.2634475231170654
    2. ' op' → logprob: -1.6384475231170654
    3. ' operator' → logprob: -1.6384475231170654
    4. ' index' → logprob: -3.1384475231170654
    5. 'customer' → logprob: -3.1384475231170654
    6. ')' → logprob: -3.3884475231170654
    7. 'operator' → logprob: -3.5134475231170654
    8. ' event' → logprob: -3.6384475231170654
    9. ' type' → logprob: -3.6384475231170654
    10. ' idx' → logprob: -3.7634475231170654

Token 83: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.10397787392139435
    2. ')' → logprob: -2.853977918624878
    3. '_index' → logprob: -3.353977918624878
    4. ',' → logprob: -6.353977680206299
    5. 'id' → logprob: -6.478977680206299
    6. '_idx' → logprob: -6.603977680206299
    7. 'ID' → logprob: -7.228977680206299
    8. 'index' → logprob: -7.478977680206299
    9. '_count' → logprob: -10.478978157043457
    10. '_i' → logprob: -10.603978157043457

Token 84: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029830439016222954
    2. ',' → logprob: -3.5298304557800293
    3. '),' → logprob: -9.904829978942871
    4. ' )' → logprob: -11.154829978942871
    5. ')
' → logprob: -12.904829978942871
    6. '))' → logprob: -13.029829978942871
    7. ',)' → logprob: -13.904829978942871
    8. ')

' → logprob: -14.029829978942871
    9. '<|end|>' → logprob: -14.217329978942871
    10. '_queue' → logprob: -14.279829978942871

Token 85: ' action' (ID: 3736)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.7863963842391968
    2. ' op' → logprob: -1.9113963842391968
    3. ')' → logprob: -2.1613965034484863
    4. 'index' → logprob: -2.4113965034484863
    5. 'idx' → logprob: -2.5363965034484863
    6. ' index' → logprob: -2.9113965034484863
    7. 'op' → logprob: -2.9113965034484863
    8. ' action' → logprob: -3.4113965034484863
    9. ' event' → logprob: -4.161396503448486
    10. 'event' → logprob: -4.223896503448486

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009796975646167994
    2. '_type' → logprob: -7.125979900360107
    3. ',' → logprob: -9.37597942352295
    4. 'type' → logprob: -9.75097942352295
    5. ' )' → logprob: -11.12597942352295
    6. '),' → logprob: -12.87597942352295
    7. 'Type' → logprob: -13.12597942352295
    8. ' type' → logprob: -13.12597942352295
    9. '_time' → logprob: -13.25097942352295
    10. ')
' → logprob: -13.50097942352295

Token 87: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15553030371665955
    2. ',' → logprob: -2.5305302143096924
    3. '
' → logprob: -3.9055302143096924
    4. ')
' → logprob: -3.9055302143096924
    5. ',
' → logprob: -5.9055304527282715
    6. '   ' → logprob: -6.2805304527282715
    7. '```' → logprob: -6.4055304527282715
    8. '<|end|>' → logprob: -6.4055304527282715
    9. ')\' → logprob: -6.5305304527282715
    10. '#' → logprob: -6.7805304527282715

Token 88: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9097121357917786
    2. ')' → logprob: -1.5347120761871338
    3. 'events' → logprob: -1.9097120761871338
    4. '<|end|>' → logprob: -2.159712076187134
    5. ' events' → logprob: -3.284712076187134
    6. ' 
' → logprob: -4.034712314605713
    7. 'event' → logprob: -4.534712314605713
    8. '<|end|>' → logprob: -4.659712314605713
    9. ' )' → logprob: -4.784712314605713
    10. '_events' → logprob: -5.409712314605713

Token 89: ' action' (ID: 3736)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.5105323195457458
    2. 'event' → logprob: -1.8855323791503906
    3. ' events' → logprob: -2.0105323791503906
    4. ' event' → logprob: -3.2605323791503906
    5. '#' → logprob: -3.6355323791503906
    6. ' ' → logprob: -4.385532379150391
    7. ' #' → logprob: -5.010532379150391
    8. 'time' → logprob: -5.760532379150391
    9. 'heap' → logprob: -5.760532379150391
    10. 'queue' → logprob: -5.885532379150391

Token 90: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7257822155952454
    2. ',' → logprob: -0.8507822155952454
    3. ')' → logprob: -3.1007821559906006
    4. ' =' → logprob: -3.2257821559906006
    5. '<|end|>' → logprob: -6.60078239440918
    6. 's' → logprob: -7.22578239440918
    7. ':' → logprob: -7.60078239440918
    8. ' is' → logprob: -7.85078239440918
    9. ' ,' → logprob: -8.22578239440918
    10. '<|end|>' → logprob: -8.35078239440918

Token 91: ' ' (ID: 220)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9252172708511353
    2. '0' → logprob: -1.1752172708511353
    3. ''' → logprob: -1.5502172708511353
    4. ' ' → logprob: -2.8002171516418457
    5. ''s' → logprob: -4.800217151641846
    6. '"' → logprob: -5.800217151641846
    7. '1' → logprob: -5.925217151641846
    8. ' "' → logprob: -6.425217151641846
    9. ''arr' → logprob: -7.175217151641846
    10. ''in' → logprob: -7.425217151641846

Token 92: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6135731339454651
    2. '0' → logprob: -1.6135730743408203
    3. ''arr' → logprob: -2.1135730743408203
    4. ''re' → logprob: -3.1135730743408203
    5. ' '' → logprob: -3.4885730743408203
    6. ''s' → logprob: -4.11357307434082
    7. '"' → logprob: -4.23857307434082
    8. 'start' → logprob: -4.98857307434082
    9. ''arrive' → logprob: -4.98857307434082
    10. ' ' → logprob: -5.23857307434082

Token 93: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20506009459495544
    2. ' for' → logprob: -2.5800600051879883
    3. ':' → logprob: -2.8300600051879883
    4. ' =' → logprob: -3.3300600051879883
    5. ' -' → logprob: -5.330060005187988
    6. ' is' → logprob: -5.455060005187988
    7. '=start' → logprob: -6.455060005187988
    8. '-' → logprob: -7.830060005187988
    9. 'for' → logprob: -7.830060005187988
    10. ')' → logprob: -7.830060005187988

Token 94: ' call' (ID: 2421)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.3461719751358032
    2. ' start' → logprob: -1.5961719751358032
    3. ' arrival' → logprob: -1.8461719751358032
    4. 'arrival' → logprob: -2.2211718559265137
    5. 'arr' → logprob: -2.4711718559265137
    6. ' request' → logprob: -2.5961718559265137
    7. 'request' → logprob: -2.9711718559265137
    8. 'enqueue' → logprob: -4.221171855926514
    9. ' arrive' → logprob: -4.596171855926514
    10. ' enqueue' → logprob: -5.346171855926514

Token 95: ' attempt' (ID: 8704)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17872032523155212
    2. ')' → logprob: -2.303720235824585
    3. '_start' → logprob: -3.428720235824585
    4. '_received' → logprob: -4.678720474243164
    5. '_' → logprob: -5.053720474243164
    6. ' ,' → logprob: -5.803720474243164
    7. '_queue' → logprob: -6.303720474243164
    8. ' )' → logprob: -6.428720474243164
    9. '),' → logprob: -6.428720474243164
    10. ' ' → logprob: -7.178720474243164

Token 96: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04995500668883324
    2. ')' → logprob: -3.049954891204834
    3. '<|end|>' → logprob: -7.424954891204834
    4. ',
' → logprob: -8.299955368041992
    5. ' ,' → logprob: -8.799955368041992
    6. '<|end|>' → logprob: -9.049955368041992
    7. '   ' → logprob: -9.424955368041992
    8. ' )' → logprob: -9.924955368041992
    9. '),' → logprob: -10.549955368041992
    10. ' ' → logprob: -10.924955368041992

Token 97: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021656004711985588
    2. ')' → logprob: -4.146656036376953
    3. '   ' → logprob: -5.771656036376953
    4. ' ,' → logprob: -6.521656036376953
    5. ',
' → logprob: -8.146656036376953
    6. '<|end|>' → logprob: -8.146656036376953
    7. ' ' → logprob: -9.021656036376953
    8. ' )' → logprob: -9.396656036376953
    9. '<|end|>' → logprob: -10.146656036376953
    10. '```' → logprob: -10.271656036376953

Token 98: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08282282948493958
    2. ')' → logprob: -2.582822799682617
    3. ',
' → logprob: -6.332822799682617
    4. '   ' → logprob: -7.082822799682617
    5. '0' → logprob: -7.957822799682617
    6. '1' → logprob: -8.207822799682617
    7. ' ,' → logprob: -8.457822799682617
    8. ' ' → logprob: -9.082822799682617
    9. ' )' → logprob: -9.332822799682617
    10. '```' → logprob: -10.082822799682617

Token 99: ' We'll' (ID: 46830)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10179003328084946
    2. ' ' → logprob: -2.351789951324463
    3. '   ' → logprob: -7.476789951324463
    4. ',' → logprob: -8.476790428161621
    5. ' def' → logprob: -8.601790428161621
    6. 'def' → logprob: -8.851790428161621
    7. '  ' → logprob: -8.976790428161621
    8. '
' → logprob: -9.601790428161621
    9. '```' → logprob: -10.101790428161621
    10. '    ' → logprob: -10.476790428161621

Token 100: ' manage' (ID: 11659)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.7821381688117981
    2. 'process' → logprob: -1.6571381092071533
    3. ' simulate' → logprob: -2.2821381092071533
    4. ' process' → logprob: -3.0321381092071533
    5. 'push' → logprob: -3.0321381092071533
    6. 'continue' → logprob: -3.1571381092071533
    7. ' use' → logprob: -3.2821381092071533
    8. ' continue' → logprob: -4.282138347625732
    9. 'use' → logprob: -4.282138347625732
    10. ' push' → logprob: -4.907138347625732

Token 101: ' calls' (ID: 11666)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.46663323044776917
    2. ' a' → logprob: -2.5916333198547363
    3. ' calls' → logprob: -2.5916333198547363
    4. ' events' → logprob: -3.0916333198547363
    5. 'calls' → logprob: -3.0916333198547363
    6. 'the' → logprob: -3.9666333198547363
    7. ' call' → logprob: -4.091633319854736
    8. ' only' → logprob: -4.216633319854736
    9. 'events' → logprob: -4.966633319854736
    10. ' scheduling' → logprob: -4.966633319854736

Token 102: ' by' (ID: 656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' sim' (ID: 1845)
  Prédit: ' pushing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pushing' → logprob: -0.6932057738304138
    2. ' scheduling' → logprob: -1.9432058334350586
    3. ' popping' → logprob: -2.8182058334350586
    4. ' adding' → logprob: -2.9432058334350586
    5. 'p' → logprob: -3.8182058334350586
    6. ' checking' → logprob: -4.068205833435059
    7. ' waiting' → logprob: -4.443205833435059
    8. '   ' → logprob: -4.443205833435059
    9. ' processing' → logprob: -4.568205833435059
    10. ' res' → logprob: -4.568205833435059

Token 104: 'ulating' (ID: 34319)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -1.0747796297073364
    2. 'ply' → logprob: -1.1997796297073364
    3. 'pl' → logprob: -1.3247796297073364
    4. 'ulating' → logprob: -2.449779510498047
    5. 'p' → logprob: -6.449779510498047
    6. 'pling' → logprob: -7.574779510498047
    7. 'ult' → logprob: -7.574779510498047
    8. 'ulated' → logprob: -7.824779510498047
    9. 'py' → logprob: -8.074779510498047
    10. 'plic' → logprob: -8.199779510498047

Token 105: ' customers' (ID: 6028)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5231524705886841
    2. ' events' → logprob: -1.523152470588684
    3. ' time' → logprob: -2.5231523513793945
    4. ' calls' → logprob: -3.8981523513793945
    5. ' each' → logprob: -4.1481523513793945
    6. 'time' → logprob: -4.5231523513793945
    7. 'events' → logprob: -4.5231523513793945
    8. ' until' → logprob: -5.2731523513793945
    9. 'the' → logprob: -5.5231523513793945
    10. ' their' → logprob: -5.5231523513793945

Token 106: ' calling' (ID: 14471)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' waiting' (ID: 12028)
  Prédit: ' waiting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' waiting' → logprob: -0.8828232288360596
    2. ' and' → logprob: -1.7578232288360596
    3. ' then' → logprob: -2.2578232288360596
    4. 'waiting' → logprob: -2.5078232288360596
    5. ' continuing' → logprob: -3.5078232288360596
    6. '0' → logprob: -3.6328232288360596
    7. ' ' → logprob: -3.8828232288360596
    8. ' being' → logprob: -4.1328229904174805
    9. ' res' → logprob: -4.6328229904174805
    10. ' time' → logprob: -4.8828229904174805

Token 109: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1048201322555542
    2. 'and' → logprob: -2.9798202514648438
    3. ' and' → logprob: -3.9798202514648438
    4. 'for' → logprob: -4.479820251464844
    5. ' ,' → logprob: -5.104820251464844
    6. ' for' → logprob: -5.354820251464844
    7. ')' → logprob: -5.354820251464844
    8. '<|end|>' → logprob: -6.729820251464844
    9. '   ' → logprob: -6.854820251464844
    10. '...' → logprob: -9.104820251464844

Token 110: ' retry' (ID: 45364)
  Prédit: ' being'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' being' → logprob: -1.0083585977554321
    2. ' retry' → logprob: -1.8833585977554321
    3. 'being' → logprob: -2.0083584785461426
    4. 'answer' → logprob: -2.0083584785461426
    5. 'retry' → logprob: -3.0083584785461426
    6. 'getting' → logprob: -3.1333584785461426
    7. 'connecting' → logprob: -4.633358478546143
    8. ' answering' → logprob: -4.633358478546143
    9. ' getting' → logprob: -4.758358478546143
    10. 'assign' → logprob: -5.008358478546143

Token 111: 'ing' (ID: 289)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15207161009311676
    2. '<|end|>' → logprob: -3.277071714401245
    3. ',' → logprob: -3.652071714401245
    4. '   ' → logprob: -3.777071714401245
    5. ' ' → logprob: -4.152071475982666
    6. ' )' → logprob: -4.652071475982666
    7. '<|end|>' → logprob: -5.402071475982666
    8. '
' → logprob: -5.402071475982666
    9. '_' → logprob: -5.652071475982666
    10. '    ' → logprob: -5.652071475982666

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13113689422607422
    2. '<|end|>' → logprob: -2.881136894226074
    3. ')' → logprob: -3.256136894226074
    4. ',' → logprob: -4.756136894226074
    5. '
' → logprob: -5.256136894226074
    6. '<|end|>' → logprob: -5.506136894226074
    7. 'def' → logprob: -5.756136894226074
    8. '    
' → logprob: -6.256136894226074
    9. ' for' → logprob: -6.506136894226074
    10. ' at' → logprob: -7.381136894226074

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2157779037952423
    2. '<|end|>' → logprob: -2.34077787399292
    3. ')' → logprob: -2.59077787399292
    4. ',' → logprob: -5.34077787399292
    5. '<|end|>' → logprob: -5.34077787399292
    6. 'def' → logprob: -5.59077787399292
    7. '
' → logprob: -6.21577787399292
    8. ' ' → logprob: -6.59077787399292
    9. '    
' → logprob: -6.71577787399292
    10. ' for' → logprob: -6.71577787399292

Token 114: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3081546127796173
    2. ' ' → logprob: -1.933154582977295
    3. '
' → logprob: -3.433154582977295
    4. '   ' → logprob: -4.183154582977295
    5. '#' (adapté à ' #') → logprob: -4.433154582977295
    6. ')' → logprob: -4.683154582977295
    7. '  
' → logprob: -4.808154582977295
    8. '<|end|>' → logprob: -4.808154582977295
    9. '\' → logprob: -5.058154582977295
    10. '    
' → logprob: -5.308154582977295

Token 115: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8747067451477051
    2. '   ' → logprob: -1.874706745147705
    3. 'for' → logprob: -1.874706745147705
    4. ' return' → logprob: -2.374706745147705
    5. 'return' → logprob: -2.749706745147705
    6. '#' → logprob: -4.499706745147705
    7. ')' → logprob: -4.499706745147705
    8. ' pass' → logprob: -4.624706745147705
    9. ' next' → logprob: -4.749706745147705
    10. 'pass' → logprob: -4.749706745147705

Token 116: ' each' (ID: 2454)
  Prédit: ' customer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' customer' → logprob: -0.6059242486953735
    2. 'customer' → logprob: -1.9809242486953735
    3. ' cust' → logprob: -2.105924129486084
    4. ' _' → logprob: -3.105924129486084
    5. ' c' → logprob: -3.355924129486084
    6. 'c' → logprob: -3.980924129486084
    7. 'cust' → logprob: -4.105924129486084
    8. ' i' → logprob: -4.355924129486084
    9. ' now' → logprob: -4.480924129486084
    10. 'each' → logprob: -4.480924129486084

Token 117: ' customer' (ID: 5989)
  Prédit: ' customer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' customer' → logprob: -0.12105972319841385
    2. 'customer' → logprob: -2.2460596561431885
    3. ' cust' → logprob: -6.621059894561768
    4. ' line' → logprob: -6.621059894561768
    5. '_customer' → logprob: -7.621059894561768
    6. ' operator' → logprob: -7.746059894561768
    7. '(customer' → logprob: -7.746059894561768
    8. ')' → logprob: -7.996059894561768
    9. ' token' → logprob: -7.996059894561768
    10. ' call' → logprob: -7.996059894561768

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044920507818460464
    2. ':' → logprob: -3.7949204444885254
    3. ' ,' → logprob: -4.544920444488525
    4. '):' → logprob: -4.919920444488525
    5. '   ' → logprob: -7.044920444488525
    6. ' in' → logprob: -7.544920444488525
    7. '[' → logprob: -7.669920444488525
    8. ')' → logprob: -7.919920444488525
    9. '<|end|>' → logprob: -8.294920921325684
    10. '<|end|>' → logprob: -8.794920921325684

Token 119: ' store' (ID: 4897)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -1.6974157094955444
    2. 'time' → logprob: -2.197415828704834
    3. ' idx' → logprob: -2.322415828704834
    4. ' pass' → logprob: -2.572415828704834
    5. ' for' → logprob: -2.572415828704834
    6. ' ' → logprob: -2.572415828704834
    7. ' next' → logprob: -2.947415828704834
    8. ' we' → logprob: -3.447415828704834
    9. '<|end|>' → logprob: -3.697415828704834
    10. ' continue' → logprob: -3.822415828704834

Token 120: ' the' (ID: 290)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.5660338997840881
    2. 'their' → logprob: -1.0660338401794434
    3. ' next' → logprob: -3.8160338401794434
    4. ' the' → logprob: -4.191033840179443
    5. 'next' → logprob: -4.316033840179443
    6. 'the' → logprob: -4.566033840179443
    7. 'current' → logprob: -4.691033840179443
    8. ' (' → logprob: -5.566033840179443
    9. ' current' → logprob: -5.816033840179443
    10. '(' → logprob: -5.941033840179443

Token 121: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5596956610679626
    2. ' next' → logprob: -1.0596957206726074
    3. 'last' → logprob: -3.6846957206726074
    4. 'current' → logprob: -4.184695720672607
    5. 'retry' → logprob: -4.934695720672607
    6. 'call' → logprob: -5.309695720672607
    7. 'waiting' → logprob: -5.309695720672607
    8. ' last' → logprob: -5.434695720672607
    9. 'attempt' → logprob: -5.934695720672607
    10. 'index' → logprob: -6.184695720672607

Token 122: ' call' (ID: 2421)
  Prédit: '_call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_call' → logprob: -0.05988241359591484
    2. '_attempt' → logprob: -3.809882402420044
    3. '_' → logprob: -4.309882640838623
    4. '_action' → logprob: -4.434882640838623
    5. '_time' → logprob: -5.309882640838623
    6. '_retry' → logprob: -6.184882640838623
    7. '_event' → logprob: -6.684882640838623
    8. '_token' → logprob: -6.934882640838623
    9. '(' → logprob: -8.559882164001465
    10. ' _' → logprob: -8.559882164001465

Token 123: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00667381240054965
    2. '_attempt' → logprob: -5.381673812866211
    3. '_' → logprob: -6.756673812866211
    4. ')' → logprob: -8.256673812866211
    5. '_times' → logprob: -8.381673812866211
    6. 'time' → logprob: -8.881673812866211
    7. '_event' → logprob: -9.506673812866211
    8. ' time' → logprob: -9.756673812866211
    9. '_token' → logprob: -10.506673812866211
    10. ' _' → logprob: -10.506673812866211

Token 124: '
' (ID: 198)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.6940304040908813
    2. '_times' → logprob: -1.3190304040908813
    3. 's' → logprob: -2.319030284881592
    4. 'next' → logprob: -3.694030284881592
    5. 'times' → logprob: -3.819030284881592
    6. '_events' → logprob: -3.819030284881592
    7. '_calls' → logprob: -3.819030284881592
    8. ',' → logprob: -4.569030284881592
    9. '_' → logprob: -5.069030284881592
    10. ')' → logprob: -5.444030284881592

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4523354172706604
    2. ')' → logprob: -1.9523353576660156
    3. ',' → logprob: -2.8273353576660156
    4. '
' → logprob: -3.3273353576660156
    5. '<|end|>' → logprob: -3.5773353576660156
    6. '    
' → logprob: -4.577335357666016
    7. 'def' → logprob: -4.827335357666016
    8. ' ' → logprob: -4.827335357666016
    9. '  
' → logprob: -4.827335357666016
    10. ' 
' → logprob: -4.952335357666016

Token 126: ' calls' (ID: 11666)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.641019880771637
    2. ' next' → logprob: -0.891019880771637
    3. '   ' → logprob: -3.266019821166992
    4. 'customer' → logprob: -4.641019821166992
    5. ' for' → logprob: -5.766019821166992
    6. 'call' → logprob: -6.641019821166992
    7. ' customer' → logprob: -6.766019821166992
    8. 'times' → logprob: -6.766019821166992
    9. ' call' → logprob: -6.891019821166992
    10. 'for' → logprob: -7.141019821166992

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2828632891178131
    2. ' =' → logprob: -1.4078632593154907
    3. '_times' → logprob: -7.032863140106201
    4. '_time' → logprob: -7.407863140106201
    5. '=[]' → logprob: -9.65786361694336
    6. '[' → logprob: -10.15786361694336
    7. ',' → logprob: -10.40786361694336
    8. '_' → logprob: -10.65786361694336
    9. ')' → logprob: -10.78286361694336
    10. '   ' → logprob: -11.28286361694336

Token 128: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00895737949758768
    2. '[(' → logprob: -4.758957386016846
    3. '[' → logprob: -8.508956909179688
    4. ' []' → logprob: -9.008956909179688
    5. '[]
' → logprob: -11.258956909179688
    6. ' [(' → logprob: -13.133956909179688
    7. '[]}' → logprob: -13.258956909179688
    8. '[
' → logprob: -14.383956909179688
    9. '[]

' → logprob: -14.633956909179688
    10. '[],' → logprob: -14.758956909179688

Token 129: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.807864785194397
    2. '<|end|>' → logprob: -1.432864785194397
    3. ' for' → logprob: -1.557864785194397
    4. '[' → logprob: -3.4328646659851074
    5. ')' → logprob: -3.9328646659851074
    6. 'import' → logprob: -4.182864665985107
    7. ',' → logprob: -5.182864665985107
    8. '   ' → logprob: -5.432864665985107
    9. '<|end|>' → logprob: -5.557864665985107
    10. ' ' → logprob: -5.557864665985107

Token 130: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04931328818202019
    2. ' for' → logprob: -3.0493133068084717
    3. ')' → logprob: -8.17431354522705
    4. 'n' → logprob: -8.79931354522705
    5. '   ' → logprob: -9.92431354522705
    6. 'import' → logprob: -10.29931354522705
    7. 'heap' → logprob: -10.54931354522705
    8. 'i' → logprob: -10.67431354522705
    9. '<|end|>' → logprob: -10.67431354522705
    10. ' ' → logprob: -11.17431354522705

Token 131: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09475491940975189
    2. ' idx' → logprob: -2.469754934310913
    3. 'i' → logprob: -5.594754695892334
    4. ' M' → logprob: -7.344754695892334
    5. ' cust' → logprob: -8.094755172729492
    6. 'M' → logprob: -8.344755172729492
    7. ' _' → logprob: -8.719755172729492
    8. ' c' → logprob: -8.719755172729492
    9. 'idx' → logprob: -8.844755172729492
    10. ' customer' → logprob: -9.094755172729492

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16408134996891022
    2. ' in' → logprob: -2.039081335067749
    3. ' ,' → logprob: -4.289081573486328
    4. 'in' → logprob: -4.914081573486328
    5. ',c' → logprob: -9.789081573486328
    6. ' ' → logprob: -10.914081573486328
    7. ',in' → logprob: -11.664081573486328
    8. '_,' → logprob: -12.414081573486328
    9. ',item' → logprob: -12.539081573486328
    10. ',(' → logprob: -12.789081573486328

Token 133: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.7179700136184692
    2. '(m' → logprob: -1.4679700136184692
    3. '(customer' → logprob: -2.0929698944091797
    4. '(M' → logprob: -2.4679698944091797
    5. ' (' → logprob: -2.7179698944091797
    6. '(_,' → logprob: -5.21796989440918
    7. 'cust' → logprob: -7.84296989440918
    8. '(cm' → logprob: -7.96796989440918
    9. '(mc' → logprob: -8.59296989440918
    10. '(custom' → logprob: -8.84296989440918

Token 134: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018659278750419617
    2. 'm' → logprob: -4.0186591148376465
    3. ' M' → logprob: -8.268659591674805
    4. '_m' → logprob: -9.143659591674805
    5. '_M' → logprob: -9.893659591674805
    6. '_,' → logprob: -10.268659591674805
    7. ')' → logprob: -11.018659591674805
    8. '_' → logprob: -12.018659591674805
    9. '  ' → logprob: -12.268659591674805
    10. '   ' → logprob: -12.518659591674805

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007166040013544261
    2. ' ,' → logprob: -7.500716686248779
    3. ',L' → logprob: -9.000716209411621
    4. ',M' → logprob: -11.000716209411621
    5. ',K' → logprob: -11.375716209411621
    6. '_,' → logprob: -13.875716209411621
    7. ',T' → logprob: -13.875716209411621
    8. ')' → logprob: -14.063216209411621
    9. ',i' → logprob: -14.188216209411621
    10. ',l' → logprob: -14.438216209411621

Token 136: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.225677490234375
    2. ' L' → logprob: -1.600677490234375
    3. ' ' → logprob: -9.225677490234375
    4. ',' → logprob: -9.350677490234375
    5. ',L' → logprob: -11.225677490234375
    6. '  ' → logprob: -11.413177490234375
    7. ' ,' → logprob: -11.538177490234375
    8. ' ' → logprob: -11.788177490234375
    9. '   ' → logprob: -12.225677490234375
    10. '_,' → logprob: -12.663177490234375

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033939589047804475
    2. ',K' → logprob: -8.37533950805664
    3. ' ,' → logprob: -9.75033950805664
    4. ')' → logprob: -10.12533950805664
    5. 'K' → logprob: -12.50033950805664
    6. ',k' → logprob: -13.25033950805664
    7. ',T' → logprob: -13.37533950805664
    8. ' K' → logprob: -14.50033950805664
    9. '   ' → logprob: -15.25033950805664
    10. '),' → logprob: -15.25033950805664

Token 138: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.003624308155849576
    2. ' K' → logprob: -5.628624439239502
    3. ' ' → logprob: -11.878623962402344
    4. ')' → logprob: -11.878623962402344
    5. '_' → logprob: -13.003623962402344
    6. '   ' → logprob: -13.128623962402344
    7. '  ' → logprob: -13.628623962402344
    8. ',' → logprob: -14.316123962402344
    9. '_)' → logprob: -14.441123962402344
    10. 'k' → logprob: -14.566123962402344

Token 139: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.65101717156358e-05
    2. ' )' → logprob: -9.375096321105957
    3. ')=' → logprob: -12.250096321105957
    4. ',' → logprob: -12.625096321105957
    5. ')
' → logprob: -13.625096321105957
    6. '))' → logprob: -14.500096321105957
    7. '   ' → logprob: -14.500096321105957
    8. ',)' → logprob: -15.625096321105957
    9. ')`' → logprob: -15.750096321105957
    10. '=' → logprob: -16.000097274780273

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2375255674123764
    2. 'in' → logprob: -1.7375255823135376
    3. ')' → logprob: -3.362525463104248
    4. ',' → logprob: -7.612525463104248
    5. '):
' → logprob: -9.112525939941406
    6. '   ' → logprob: -9.737525939941406
    7. ' )' → logprob: -10.612525939941406
    8. '
' → logprob: -10.737525939941406
    9. '),' → logprob: -10.987525939941406
    10. ' ' → logprob: -10.987525939941406

Token 141: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.014164801687002182
    2. 'enumer' → logprob: -4.264164924621582
    3. '```' → logprob: -14.514164924621582
    4. ' range' → logprob: -15.139164924621582
    5. 'en' → logprob: -15.764164924621582
    6. 'range' → logprob: -15.764164924621582
    7. '(en' → logprob: -16.264163970947266
    8. 'Enumer' → logprob: -16.639163970947266
    9. 's' → logprob: -17.889163970947266
    10. 'enqueue' → logprob: -17.889163970947266

Token 142: '(custom' (ID: 97881)
  Prédit: '(custom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(custom' → logprob: -0.00012987985974177718
    2. '(' → logprob: -9.500129699707031
    3. ')' → logprob: -10.625129699707031
    4. ' (' → logprob: -11.625129699707031
    5. 'customers' → logprob: -12.125129699707031
    6. ' customers' → logprob: -12.375129699707031
    7. '(customer' → logprob: -12.875129699707031
    8. ',' → logprob: -13.125129699707031
    9. '):' → logprob: -13.375129699707031
    10. '	custom' → logprob: -13.500129699707031

Token 143: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0003034074034076184
    2. ')' → logprob: -9.375303268432617
    3. 's' → logprob: -9.500303268432617
    4. 'rs' → logprob: -9.625303268432617
    5. 'sers' → logprob: -11.000303268432617
    6. '[' → logprob: -12.125303268432617
    7. '):' → logprob: -12.250303268432617
    8. '   ' → logprob: -12.500303268432617
    9. 'erst' → logprob: -12.500303268432617
    10. '):
' → logprob: -12.500303268432617

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5234858393669128
    2. '):
' → logprob: -0.8984858393669128
    3. '):
' → logprob: -8.148486137390137
    4. ')' → logprob: -10.773486137390137
    5. '   ' → logprob: -10.773486137390137
    6. '):

' → logprob: -11.398486137390137
    7. ' ):' → logprob: -12.023486137390137
    8. ':' → logprob: -12.523486137390137
    9. ',' → logprob: -12.523486137390137
    10. ' ):
' → logprob: -12.648486137390137

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013325639069080353
    2. '   ' → logprob: -5.2633256912231445
    3. ',' → logprob: -5.3883256912231445
    4. ' calls' → logprob: -6.6383256912231445
    5. '<|end|>' → logprob: -7.0133256912231445
    6. '	   ' → logprob: -8.513325691223145
    7. '    ' → logprob: -8.763325691223145
    8. 'calls' → logprob: -8.888325691223145
    9. ')' → logprob: -9.138325691223145
    10. '<|end|>' → logprob: -9.388325691223145

Token 146: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.15610116720199585
    2. ' heap' → logprob: -2.6561012268066406
    3. ' calls' → logprob: -3.4061012268066406
    4. 'calls' → logprob: -3.7811012268066406
    5. '   ' → logprob: -4.031101226806641
    6. 'he' → logprob: -8.53110122680664
    7. 'call' → logprob: -8.65610122680664
    8. 'import' → logprob: -9.53110122680664
    9. ' call' → logprob: -10.78110122680664
    10. ' he' → logprob: -11.15610122680664

Token 147: ' All' (ID: 2545)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07845917344093323
    2. ' heap' → logprob: -3.2034592628479004
    3. 'calls' → logprob: -3.8284592628479004
    4. ' calls' → logprob: -4.4534592628479
    5. 'call' → logprob: -7.5784592628479
    6. 'for' → logprob: -8.453458786010742
    7. 'he' → logprob: -8.953458786010742
    8. 'if' → logprob: -9.078458786010742
    9. 'next' → logprob: -9.078458786010742
    10. ' call' → logprob: -9.828458786010742

Token 148: ' call' (ID: 2421)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.16274896264076233
    2. ' calls' → logprob: -3.1627490520477295
    3. '_calls' → logprob: -3.4127490520477295
    4. 'call' → logprob: -3.5377490520477295
    5. 'heap' → logprob: -4.28774881362915
    6. ' heap' → logprob: -5.28774881362915
    7. 'initial' → logprob: -5.78774881362915
    8. 'times' → logprob: -5.78774881362915
    9. 'customers' → logprob: -5.91274881362915
    10. ' call' → logprob: -6.41274881362915

Token 149: ' at' (ID: 540)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.2524622082710266
    2. 'time' → logprob: -2.002462148666382
    3. 'times' → logprob: -3.252462148666382
    4. '_times' → logprob: -3.252462148666382
    5. 's' → logprob: -5.252462387084961
    6. ' time' → logprob: -6.627462387084961
    7. ' times' → logprob: -6.627462387084961
    8. '_' → logprob: -7.502462387084961
    9. '_t' → logprob: -7.877462387084961
    10. '   ' → logprob: -7.877462387084961

Token 150: ' time' (ID: 1058)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.43720459938049316
    2. ' M' → logprob: -1.0622045993804932
    3. 'time' → logprob: -5.437204360961914
    4. ' time' → logprob: -5.937204360961914
    5. '0' → logprob: -7.437204360961914
    6. ' ' → logprob: -7.937204360961914
    7. 'T' → logprob: -8.687204360961914
    8. ' T' → logprob: -9.562204360961914
    9. ' (' → logprob: -9.937204360961914
    10. ' times' → logprob: -10.187204360961914

Token 151: ' ' (ID: 220)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.40634772181510925
    2. 'M' → logprob: -1.1563477516174316
    3. '0' → logprob: -4.281347751617432
    4. '=' → logprob: -6.156347751617432
    5. ' ' → logprob: -6.531347751617432
    6. ' =' → logprob: -6.906347751617432
    7. '=M' → logprob: -8.156347274780273
    8. '(M' → logprob: -8.781347274780273
    9. '   ' → logprob: -9.406347274780273
    10. ')' → logprob: -9.656347274780273

Token 152: '0' (ID: 15)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05112791806459427
    2. ' M' → logprob: -3.3011279106140137
    3. '0' → logprob: -4.426127910614014
    4. '=' → logprob: -8.051128387451172
    5. '(M' → logprob: -8.301128387451172
    6. ' ' → logprob: -9.301128387451172
    7. '   ' → logprob: -9.426128387451172
    8. ')' → logprob: -9.801128387451172
    9. '=M' → logprob: -9.801128387451172
    10. ' =' → logprob: -10.301128387451172

Token 153: ' int' (ID: 677)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02834080345928669
    2. ',' → logprob: -3.6533408164978027
    3. '
' → logprob: -7.653340816497803
    4. ' calls' → logprob: -7.653340816497803
    5. ')' → logprob: -8.403340339660645
    6. '   ' → logprob: -8.778340339660645
    7. ',
' → logprob: -9.153340339660645
    8. ' if' → logprob: -9.403340339660645
    9. ' ,' → logprob: -9.403340339660645
    10. ' heap' → logprob: -10.028340339660645

Token 154: 'ially' (ID: 43210)
  Prédit: 'erval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erval' → logprob: -0.3161430358886719
    2. 'erv' → logprob: -2.066143035888672
    3. 'o' → logprob: -2.691143035888672
    4. 'heap' → logprob: -3.441143035888672
    5. 'er' → logprob: -4.566143035888672
    6. 'ial' → logprob: -4.941143035888672
    7. '(heap' → logprob: -5.066143035888672
    8. '   ' → logprob: -5.316143035888672
    9. '(' → logprob: -5.566143035888672
    10. 'erview' → logprob: -5.691143035888672

Token 155: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022715039551258087
    2. ',' → logprob: -3.8977150917053223
    3. ' calls' → logprob: -7.022715091705322
    4. ' ,' → logprob: -8.397714614868164
    5. '   ' → logprob: -8.522714614868164
    6. ' heap' → logprob: -8.772714614868164
    7. ')' → logprob: -8.772714614868164
    8. '
' → logprob: -9.147714614868164
    9. 'calls' → logprob: -9.272714614868164
    10. ',
' → logprob: -10.022714614868164

Token 156: ' push' (ID: 9349)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.1444418579339981
    2. 'heap' → logprob: -2.519441843032837
    3. ' calls' → logprob: -3.394441843032837
    4. '   ' → logprob: -4.519442081451416
    5. '       ' → logprob: -4.894442081451416
    6. 'calls' → logprob: -6.519442081451416
    7. 'he' → logprob: -8.644441604614258
    8. ' he' → logprob: -9.394441604614258
    9. ' ' → logprob: -9.956941604614258
    10. ' for' → logprob: -10.331941604614258

Token 157: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16033826768398285
    2. ' (' → logprob: -1.910338282585144
    3. '(c' → logprob: -9.535338401794434
    4. '((' → logprob: -10.660338401794434
    5. '(i' → logprob: -11.910338401794434
    6. '(heap' → logprob: -12.535338401794434
    7. '   ' → logprob: -13.785338401794434
    8. ' into' → logprob: -13.910338401794434
    9. ',' → logprob: -13.910338401794434
    10. '(times' → logprob: -14.035338401794434

Token 158: 'call' (ID: 9925)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31391441822052
    2. '(' → logprob: -1.31391441822052
    3. ' (' → logprob: -7.9389142990112305
    4. ' ' → logprob: -8.31391429901123
    5. ')' → logprob: -10.31391429901123
    6. '(
' → logprob: -12.68891429901123
    7. '   ' → logprob: -12.68891429901123
    8. ',' → logprob: -13.18891429901123
    9. '(i' → logprob: -13.56391429901123
    10. ')
' → logprob: -13.56391429901123

Token 159: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.09159780293703079
    2. ',' → logprob: -2.71659779548645
    3. 'time' → logprob: -4.466598033905029
    4. '0' → logprob: -5.091598033905029
    5. ' time' → logprob: -6.591598033905029
    6. '   ' → logprob: -6.841598033905029
    7. ' ,' → logprob: -6.966598033905029
    8. ' ' → logprob: -9.216597557067871
    9. ')' → logprob: -10.091597557067871
    10. '(' → logprob: -10.091597557067871

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014721262268722057
    2. ' ,' → logprob: -6.626471996307373
    3. '0' → logprob: -9.501472473144531
    4. ',i' → logprob: -10.626472473144531
    5. ')' → logprob: -11.626472473144531
    6. '(' → logprob: -11.751472473144531
    7. '=' → logprob: -12.001472473144531
    8. ',
' → logprob: -12.126472473144531
    9. '),' → logprob: -13.126472473144531
    10. '   ' → logprob: -13.126472473144531

Token 161: ' customer' (ID: 5989)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269393414258957
    2. ' i' → logprob: -2.126939296722412
    3. ' ' → logprob: -12.62693977355957
    4. ',' → logprob: -13.50193977355957
    5. '<|end|>' → logprob: -13.62693977355957
    6. '0' → logprob: -13.87693977355957
    7. ')' → logprob: -14.37693977355957
    8. '	i' → logprob: -14.50193977355957
    9. 'customer' → logprob: -14.75193977355957
    10. '
' → logprob: -14.87693977355957

Token 162: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0024075270630419254
    2. '_i' → logprob: -6.377407550811768
    3. ')' → logprob: -8.25240707397461
    4. '_index' → logprob: -8.37740707397461
    5. 'id' → logprob: -9.37740707397461
    6. '_idx' → logprob: -9.62740707397461
    7. 'i' → logprob: -10.25240707397461
    8. ')_' → logprob: -11.75240707397461
    9. ',' → logprob: -12.25240707397461
    10. '_' → logprob: -13.25240707397461

Token 163: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39072802662849426
    2. ')' → logprob: -1.1407279968261719
    3. ',i' → logprob: -6.140727996826172
    4. ' ,' → logprob: -7.265727996826172
    5. ' )' → logprob: -8.640727996826172
    6. '   ' → logprob: -8.890727996826172
    7. ')i' → logprob: -9.015727996826172
    8. ')
' → logprob: -9.140727996826172
    9. '(i' → logprob: -9.390727996826172
    10. '=' → logprob: -9.390727996826172

Token 164: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7922335863113403
    2. '   ' → logprob: -0.7922335863113403
    3. ',c' → logprob: -3.917233467102051
    4. ')' → logprob: -4.167233467102051
    5. '       ' → logprob: -4.667233467102051
    6. '(' → logprob: -4.667233467102051
    7. ' calls' → logprob: -4.792233467102051
    8. ' ,' → logprob: -4.792233467102051
    9. ' (' → logprob: -4.917233467102051
    10. 'calls' → logprob: -5.542233467102051

Token 165: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6881222128868103
    2. 'heap' (adapté à ' heap') → logprob: -1.063122272491455
    3. ' calls' → logprob: -2.563122272491455
    4. '   ' → logprob: -2.688122272491455
    5. 'calls' → logprob: -5.063122272491455
    6. 'he' → logprob: -8.063121795654297
    7. 'import' → logprob: -8.938121795654297
    8. '(heap' → logprob: -9.063121795654297
    9. ' ' → logprob: -10.563121795654297
    10. ' he' → logprob: -11.125621795654297

Token 166: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. 'push' → logprob: -14.625000953674316
    3. 'app' → logprob: -15.250000953674316
    4. '```' → logprob: -15.375000953674316
    5. 'p' → logprob: -16.000001907348633
    6. '.push' → logprob: -16.125001907348633
    7. 'h' → logprob: -16.875001907348633
    8. '.append' → logprob: -17.250001907348633
    9. '.he' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.875001907348633

Token 167: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -8.280175097752362e-05
    2. '.heap' → logprob: -9.625082969665527
    3. '.' → logprob: -11.250082969665527
    4. ').' → logprob: -13.625082969665527
    5. 'he' → logprob: -13.625082969665527
    6. '.push' → logprob: -14.750082969665527
    7. ' he' → logprob: -15.375082969665527
    8. '.h' → logprob: -15.750082969665527
    9. '>.' → logprob: -15.750082969665527
    10. ' .' → logprob: -16.50008201599121

Token 168: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.2842308680992573e-05
    2. 'ap' → logprob: -11.125022888183594
    3. 'pp' → logprob: -11.750022888183594
    4. '```' → logprob: -17.250022888183594
    5. 'appen' → logprob: -18.000022888183594
    6. 'push' → logprob: -18.250022888183594
    7. '[' → logprob: -19.000022888183594
    8. 'a' → logprob: -19.250022888183594
    9. '(app' → logprob: -19.250022888183594
    10. 'ап' → logprob: -19.500022888183594

Token 169: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.001325241639278829
    2. 'push' → logprob: -6.8763251304626465
    3. 'le' → logprob: -8.751325607299805
    4. 'p' → logprob: -10.501325607299805
    5. 'app' → logprob: -10.626325607299805
    6. 'pp' → logprob: -10.876325607299805
    7. 'al' → logprob: -10.876325607299805
    8. 'sh' → logprob: -11.501325607299805
    9. 'lish' → logprob: -11.876325607299805
    10. 'l' → logprob: -12.126325607299805

Token 170: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1472419600977446e-06
    2. ' calls' → logprob: -14.500000953674316
    3. '(' → logprob: -14.875000953674316
    4. ' (' → logprob: -16.375001907348633
    5. 'calls' → logprob: -16.750001907348633
    6. 'c' → logprob: -17.250001907348633
    7. ')c' → logprob: -17.375001907348633
    8. ',c' → logprob: -17.625001907348633
    9. '```' → logprob: -17.750001907348633
    10. '(call' → logprob: -17.875001907348633

Token 171: 'alls' (ID: 6539)
  Prédit: 'alls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alls' → logprob: -5.319370302458992e-06
    2. 'all' → logprob: -13.125005722045898
    3. 'calls' → logprob: -13.250005722045898
    4. '(' → logprob: -14.750005722045898
    5. 'als' → logprob: -15.625005722045898
    6. '{' → logprob: -15.875005722045898
    7. '[' → logprob: -15.875005722045898
    8. 'a' → logprob: -15.875005722045898
    9. ')' → logprob: -16.1250057220459
    10. ' calls' → logprob: -16.8750057220459

Token 172: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024699745699763298
    2. '((' → logprob: -3.7746996879577637
    3. ' (' → logprob: -6.899699687957764
    4. ',' → logprob: -8.399700164794922
    5. ')' → logprob: -8.774700164794922
    6. '(c' → logprob: -9.899700164794922
    7. '   ' → logprob: -12.524700164794922
    8. ',(' → logprob: -12.524700164794922
    9. ' ' → logprob: -13.149700164794922
    10. '(
' → logprob: -13.649700164794922

Token 173: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008614808320999146
    2. ' (' → logprob: -4.758615016937256
    3. ')' → logprob: -15.883614540100098
    4. '0' → logprob: -16.633615493774414
    5. '   ' → logprob: -16.883615493774414
    6. ' ' → logprob: -17.633615493774414
    7. '(
' → logprob: -18.258615493774414
    8. '((' → logprob: -18.758615493774414
    9. '  ' → logprob: -19.508615493774414
    10. ')(' → logprob: -19.883615493774414

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '(' → logprob: -14.250008583068848
    4. ')' → logprob: -17.87500762939453
    5. '   ' → logprob: -18.12500762939453
    6. '
' → logprob: -18.75000762939453
    7. ',' → logprob: -19.75000762939453
    8. '```' → logprob: -19.87500762939453
    9. '۰' → logprob: -20.56250762939453
    10. ')
' → logprob: -21.00000762939453

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006933739641681314
    2. ',i' → logprob: -7.500693321228027
    3. ' ,' → logprob: -8.875693321228027
    4. '   ' → logprob: -15.250693321228027
    5. ')' → logprob: -16.125694274902344
    6. ',
' → logprob: -16.250694274902344
    7. '),' → logprob: -17.125694274902344
    8. '‌,' → logprob: -17.125694274902344
    9. '  ' → logprob: -17.625694274902344
    10. ' ' → logprob: -17.625694274902344

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006715370807796717
    2. ' i' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.756715774536133
    4. '
' → logprob: -18.506715774536133
    5. '	i' → logprob: -18.631715774536133
    6. ')i' → logprob: -18.631715774536133
    7. '   ' → logprob: -18.881715774536133
    8. '  ' → logprob: -19.506715774536133
    9. ',i' → logprob: -19.631715774536133
    10. ' ' → logprob: -19.631715774536133

Token 177: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003927808138541877
    2. ')' → logprob: -7.875392913818359
    3. ',' → logprob: -12.00039291381836
    4. ' ))' → logprob: -12.50039291381836
    5. '))
' → logprob: -13.25039291381836
    6. ')))' → logprob: -14.62539291381836
    7. ' ' → logprob: -15.87539291381836
    8. '),' → logprob: -16.12539291381836
    9. '));' → logprob: -16.50039291381836
    10. '   ' → logprob: -16.75039291381836

Token 178: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018951520323753357
    2. '   ' → logprob: -4.768951416015625
    3. '<|end|>' → logprob: -5.018951416015625
    4. ':' → logprob: -6.518951416015625
    5. ',' → logprob: -7.643951416015625
    6. '```' → logprob: -8.143951416015625
    7. ' ' → logprob: -8.268951416015625
    8. '  
' → logprob: -8.393951416015625
    9. '):' → logprob: -9.018951416015625
    10. ' )' → logprob: -9.018951416015625

Token 179: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.013287634588778019
    2. ')' → logprob: -4.513287544250488
    3. ' while' → logprob: -6.388287544250488
    4. '   ' → logprob: -8.638287544250488
    5. '
' → logprob: -9.763287544250488
    6. 'events' → logprob: -9.763287544250488
    7. 'def' → logprob: -9.888287544250488
    8. '```' → logprob: -10.138287544250488
    9. ',' → logprob: -10.638287544250488
    10. ')
' → logprob: -10.763287544250488

Token 180: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005350403371267021
    2. 'waiting' → logprob: -8.125535011291504
    3. ' while' → logprob: -9.000535011291504
    4. 'assigned' → logprob: -10.875535011291504
    5. 'wait' → logprob: -11.000535011291504
    6. 'busy' → logprob: -11.125535011291504
    7. 'customer' → logprob: -11.500535011291504
    8. 'call' → logprob: -11.875535011291504
    9. 'next' → logprob: -11.875535011291504
    10. 'attempt' → logprob: -12.000535011291504

Token 181: ' each' (ID: 2454)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0708247423171997
    2. ' i' → logprob: -1.6958247423171997
    3. 'while' → logprob: -1.6958247423171997
    4. ' customer' → logprob: -2.07082462310791
    5. 'i' → logprob: -3.07082462310791
    6. ' _' → logprob: -3.82082462310791
    7. ' each' → logprob: -4.07082462310791
    8. 'customer' → logprob: -4.19582462310791
    9. ' customers' → logprob: -4.69582462310791
    10. ')' → logprob: -4.69582462310791

Token 182: ' customer' (ID: 5989)
  Prédit: ' call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' call' → logprob: -1.1737498044967651
    2. 'call' → logprob: -1.4237498044967651
    3. 'customer' → logprob: -1.6737498044967651
    4. ' customer' → logprob: -2.6737499237060547
    5. 'while' → logprob: -3.1737499237060547
    6. 'time' → logprob: -3.2987499237060547
    7. 'event' → logprob: -3.7987499237060547
    8. ' event' → logprob: -3.7987499237060547
    9. ' time' → logprob: -4.048749923706055
    10. ' while' → logprob: -5.173749923706055

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15956449508666992
    2. ':' → logprob: -2.65956449508667
    3. '):' → logprob: -3.15956449508667
    4. '<|end|>' → logprob: -4.53456449508667
    5. 'while' → logprob: -4.78456449508667
    6. ')' → logprob: -5.40956449508667
    7. '<|end|>' → logprob: -5.90956449508667
    8. ':
' → logprob: -6.65956449508667
    9. '   ' → logprob: -6.78456449508667
    10. '),' → logprob: -6.78456449508667

Token 184: ' we' (ID: 581)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.493632048368454
    2. 'next' → logprob: -1.3686320781707764
    3. ' retries' → logprob: -3.3686320781707764
    4. 'retry' → logprob: -3.4936320781707764
    5. ' retry' → logprob: -3.8686320781707764
    6. 'attempt' → logprob: -4.243631839752197
    7. 'wait' → logprob: -4.868631839752197
    8. ' wait' → logprob: -5.368631839752197
    9. ' attempts' → logprob: -5.493631839752197
    10. 're' → logprob: -6.243631839752197

Token 185: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.5873628854751587
    2. ''ll' → logprob: -2.212362766265869
    3. 'have' → logprob: -2.712362766265869
    4. 'next' → logprob: -2.837362766265869
    5. 'initialize' → logprob: -2.962362766265869
    6. 'will' → logprob: -3.212362766265869
    7. 'last' → logprob: -3.212362766265869
    8. 'import' → logprob: -3.212362766265869
    9. 'store' → logprob: -3.462362766265869
    10. 'continue' → logprob: -3.712362766265869

Token 186: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7208461165428162
    2. 'to' → logprob: -0.7208461165428162
    3. ' next' → logprob: -4.095846176147461
    4. 'next' → logprob: -4.845846176147461
    5. ' a' → logprob: -7.345846176147461
    6. '_next' → logprob: -7.845846176147461
    7. 'times' → logprob: -8.595846176147461
    8. ' an' → logprob: -8.595846176147461
    9. 'time' → logprob: -8.845846176147461
    10. 'a' → logprob: -8.845846176147461

Token 187: ' track' (ID: 5290)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.08713090419769287
    2. 'store' → logprob: -3.5871310234069824
    3. 'keep' → logprob: -3.9621310234069824
    4. ' track' → logprob: -4.212131023406982
    5. 'simulate' → logprob: -4.587131023406982
    6. 'record' → logprob: -5.462131023406982
    7. 'maint' → logprob: -6.337131023406982
    8. 'manage' → logprob: -6.837131023406982
    9. 'attempt' → logprob: -7.212131023406982
    10. 'know' → logprob: -7.587131023406982

Token 188: ' if' (ID: 538)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.22273606061935425
    2. 'next' → logprob: -2.097736120223999
    3. ' the' → logprob: -3.347736120223999
    4. ' retry' → logprob: -4.47273588180542
    5. ' their' → logprob: -4.72273588180542
    6. ' retries' → logprob: -4.97273588180542
    7. 'retry' → logprob: -5.22273588180542
    8. 'the' → logprob: -5.84773588180542
    9. 'their' → logprob: -6.84773588180542
    10. 'attempt' → logprob: -7.34773588180542

Token 189: ' done' (ID: 4167)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.391231656074524
    2. ' next' → logprob: -1.641231656074524
    3. ' their' → logprob: -2.0162315368652344
    4. ' they' → logprob: -2.0162315368652344
    5. 'calls' → logprob: -3.2662315368652344
    6. ' calls' → logprob: -3.5162315368652344
    7. ' retry' → logprob: -3.6412315368652344
    8. 'the' → logprob: -3.6412315368652344
    9. ' retries' → logprob: -3.6412315368652344
    10. 'they' → logprob: -4.266231536865234

Token 190: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33016735315322876
    2. '   ' → logprob: -1.955167293548584
    3. 'done' → logprob: -3.455167293548584
    4. '_done' → logprob: -3.830167293548584
    5. 'completed' → logprob: -4.330167293548584
    6. '_completed' → logprob: -4.330167293548584
    7. ' done' → logprob: -5.205167293548584
    8. ' and' → logprob: -5.330167293548584
    9. '[' → logprob: -5.330167293548584
    10. ' or' → logprob: -5.455167293548584

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6114879250526428
    2. ',' → logprob: -1.986487865447998
    3. ')' → logprob: -2.486487865447998
    4. '<|end|>' → logprob: -2.486487865447998
    5. '_completed' → logprob: -3.736487865447998
    6. '_' → logprob: -4.111487865447998
    7. 'done' → logprob: -4.236487865447998
    8. '_done' → logprob: -4.236487865447998
    9. 'completed' → logprob: -4.486487865447998
    10. ' or' → logprob: -4.486487865447998

Token 192: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' (adapté à ' done') → logprob: -0.31987637281417847
    2. ' done' → logprob: -1.3198764324188232
    3. 'finished' → logprob: -5.694876194000244
    4. 'completed' → logprob: -6.944876194000244
    5. '_done' → logprob: -7.069876194000244
    6. ' completed' → logprob: -8.194876670837402
    7. 'called' → logprob: -8.694876670837402
    8. ' finished' → logprob: -8.944876670837402
    9. 'customer' → logprob: -8.944876670837402
    10. ' is' → logprob: -9.319876670837402

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07966440171003342
    2. ' =' → logprob: -2.579664468765259
    3. '_time' → logprob: -8.20466423034668
    4. '[' → logprob: -8.82966423034668
    5. '_times' → logprob: -8.82966423034668
    6. '=[' → logprob: -9.57966423034668
    7. ']' → logprob: -10.82966423034668
    8. ')' → logprob: -10.95466423034668
    9. '=[]' → logprob: -11.07966423034668
    10. 's' → logprob: -11.20466423034668

Token 194: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011048882268369198
    2. ' [' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.886049270629883
    4. '[len' → logprob: -15.011049270629883
    5. '[n' → logprob: -16.636049270629883
    6. '[i' → logprob: -16.761049270629883
    7. '[s' → logprob: -17.136049270629883
    8. '[int' → logprob: -17.636049270629883
    9. '[node' → logprob: -17.761049270629883
    10. '[class' → logprob: -17.761049270629883

Token 195: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007100477814674377
    2. ' False' → logprob: -7.2507100105285645
    3. '0' → logprob: -15.875710487365723
    4. '(False' → logprob: -18.500709533691406
    5. '   ' → logprob: -18.625709533691406
    6. 'True' → logprob: -19.750709533691406
    7. '=False' → logprob: -20.375709533691406
    8. '.False' → logprob: -21.750709533691406
    9. '_false' → logprob: -21.875709533691406
    10. 'false' → logprob: -21.875709533691406

Token 196: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019921588245779276
    2. ' ]' → logprob: -6.751992225646973
    3. ']*' → logprob: -7.251992225646973
    4. ' for' → logprob: -9.251992225646973
    5. ',' → logprob: -11.376992225646973
    6. 'for' → logprob: -13.001992225646973
    7. ')' → logprob: -13.876992225646973
    8. ']*(' → logprob: -14.126992225646973
    9. '   ' → logprob: -15.001992225646973
    10. ' ' → logprob: -15.376992225646973

Token 197: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0030256023164838552
    2. '(len' → logprob: -5.878025531768799
    3. ' len' → logprob: -8.503026008605957
    4. 'ops' → logprob: -11.503026008605957
    5. '(' → logprob: -12.378026008605957
    6. 'customers' → logprob: -13.378026008605957
    7. '   ' → logprob: -14.628026008605957
    8. ' (' → logprob: -15.378026008605957
    9. '=len' → logprob: -15.378026008605957
    10. '	len' → logprob: -15.503026008605957

Token 198: '(custom' (ID: 97881)
  Prédit: '(custom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(custom' → logprob: -2.2603901015827432e-05
    2. 'customers' → logprob: -10.750022888183594
    3. '(customer' → logprob: -14.500022888183594
    4. ' customers' → logprob: -15.125022888183594
    5. '(' → logprob: -15.875022888183594
    6. '(c' → logprob: -16.625022888183594
    7. 'custom' → logprob: -16.875022888183594
    8. '	custom' → logprob: -16.875022888183594
    9. '(done' → logprob: -17.500022888183594
    10. '(cl' → logprob: -17.500022888183594

Token 199: 'ers' (ID: 409)
  Prédit: 'customers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'customers' → logprob: -0.3691430389881134
    2. ')' → logprob: -1.494143009185791
    3. 'ers' → logprob: -2.869143009185791
    4. 's' → logprob: -3.994143009185791
    5. 'umers' → logprob: -6.494143009185791
    6. 'users' → logprob: -6.619143009185791
    7. 'er' → logprob: -6.869143009185791
    8. ']' → logprob: -7.244143009185791
    9. 'ustom' → logprob: -7.244143009185791
    10. '[' → logprob: -7.619143009185791

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.179569077678025e-05
    2. ' )' → logprob: -11.000041961669922
    3. ')
' → logprob: -11.250041961669922
    4. '<|end|>' → logprob: -12.250041961669922
    5. '   ' → logprob: -12.750041961669922
    6. '#' → logprob: -14.125041961669922
    7. ']' → logprob: -14.250041961669922
    8. '[' → logprob: -14.625041961669922
    9. '```' → logprob: -14.875041961669922
    10. ')

' → logprob: -15.000041961669922

Token 201: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.013589669018983841
    2. ' while' → logprob: -4.513589859008789
    3. '   ' → logprob: -6.638589859008789
    4. ')' → logprob: -7.263589859008789
    5. 'count' → logprob: -9.388589859008789
    6. 'attempt' → logprob: -9.888589859008789
    7. '
' → logprob: -9.888589859008789
    8. 'for' → logprob: -10.138589859008789
    9. 'waiting' → logprob: -10.513589859008789
    10. '<|end|>' → logprob: -10.638589859008789

Token 202: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007377673871815205
    2. ' while' → logprob: -5.007377624511719
    3. ')' → logprob: -7.882377624511719
    4. '   ' → logprob: -8.757377624511719
    5. 'for' → logprob: -10.132377624511719
    6. 'While' → logprob: -11.507377624511719
    7. '```' → logprob: -11.632377624511719
    8. '	while' → logprob: -11.882377624511719
    9. 'next' → logprob: -12.007377624511719
    10. ' ' → logprob: -12.007377624511719

Token 203: ' Priority' (ID: 54625)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005406428826972842
    2. ' while' → logprob: -7.625540733337402
    3. '   ' → logprob: -10.500540733337402
    4. 'waiting' → logprob: -12.250540733337402
    5. 'While' → logprob: -12.500540733337402
    6. 'time' → logprob: -12.625540733337402
    7. 'wh' → logprob: -13.125540733337402
    8. 'completed' → logprob: -13.625540733337402
    9. 'wait' → logprob: -13.875540733337402
    10. 'calls' → logprob: -14.000540733337402

Token 204: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.08933723717927933
    2. '_queue' → logprob: -2.9643373489379883
    3. ' queue' → logprob: -3.9643373489379883
    4. ' =' → logprob: -5.214337348937988
    5. 'q' → logprob: -6.089337348937988
    6. '=' → logprob: -6.089337348937988
    7. 'que' → logprob: -6.589337348937988
    8. ',' → logprob: -6.589337348937988
    9. '   ' → logprob: -6.839337348937988
    10. 'heap' → logprob: -7.714337348937988

Token 205: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5130683183670044
    2. '=' → logprob: -1.7630683183670044
    3. ',' → logprob: -2.138068199157715
    4. ' for' → logprob: -2.138068199157715
    5. 'for' → logprob: -2.638068199157715
    6. '<|end|>' → logprob: -2.638068199157715
    7. 'events' → logprob: -3.138068199157715
    8. 'calls' → logprob: -3.388068199157715
    9. '<|end|>' → logprob: -3.388068199157715
    10. ':' → logprob: -4.138068199157715

Token 206: ' waiting' (ID: 12028)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.2861866354942322
    2. 'waiting' → logprob: -1.786186695098877
    3. 'events' → logprob: -4.286186695098877
    4. ' calls' → logprob: -4.411186695098877
    5. 'operators' → logprob: -4.411186695098877
    6. 'call' → logprob: -4.536186695098877
    7. 'available' → logprob: -4.661186695098877
    8. 'customers' → logprob: -5.411186695098877
    9. 'retry' → logprob: -5.536186695098877
    10. '(' → logprob: -5.911186695098877

Token 207: ' customers' (ID: 6028)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.15797410905361176
    2. 'queue' → logprob: -2.5329740047454834
    3. 'customers' → logprob: -3.1579740047454834
    4. 'waiting' → logprob: -4.9079742431640625
    5. '_calls' → logprob: -5.9079742431640625
    6. '=[]' → logprob: -6.1579742431640625
    7. 'call' → logprob: -6.1579742431640625
    8. ' calls' → logprob: -6.4079742431640625
    9. 'wait' → logprob: -6.4079742431640625
    10. ',' → logprob: -6.5329742431640625

Token 208: ':' (ID: 25)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.05000217631459236
    2. 'wait' → logprob: -3.425002098083496
    3. ' waiting' → logprob: -4.300002098083496
    4. '(wait' → logprob: -7.050002098083496
    5. ' wait' → logprob: -7.300002098083496
    6. ',' → logprob: -8.050002098083496
    7. ' =' → logprob: -8.050002098083496
    8. '   ' → logprob: -8.675002098083496
    9. '_wait' → logprob: -9.300002098083496
    10. 'queue' → logprob: -9.925002098083496

Token 209: ' (' (ID: 350)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.42854759097099304
    2. '[]' → logprob: -1.6785476207733154
    3. ' waiting' → logprob: -2.3035476207733154
    4. ' []' → logprob: -3.4285476207733154
    5. '(wait' → logprob: -4.803547382354736
    6. 'wait' → logprob: -4.928547382354736
    7. 'heap' → logprob: -5.303547382354736
    8. ' (' → logprob: -5.928547382354736
    9. ' wait' → logprob: -6.428547382354736
    10. '()' → logprob: -6.553547382354736

Token 210: 'id' (ID: 315)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8433015942573547
    2. 'L' → logprob: -2.09330153465271
    3. 'customers' → logprob: -2.09330153465271
    4. 'T' → logprob: -2.34330153465271
    5. 'call' → logprob: -3.09330153465271
    6. 'priority' → logprob: -3.46830153465271
    7. 'calls' → logprob: -3.59330153465271
    8. '(M' → logprob: -3.71830153465271
    9. 'time' → logprob: -3.96830153465271
    10. '0' → logprob: -3.96830153465271

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03190278261899948
    2. ')' → logprob: -3.53190279006958
    3. '<|end|>' → logprob: -7.28190279006958
    4. ' ,' → logprob: -7.65690279006958
    5. ',)' → logprob: -8.406902313232422
    6. ',
' → logprob: -9.031902313232422
    7. '<|end|>' → logprob: -9.781902313232422
    8. '[' → logprob: -9.781902313232422
    9. 'customer' → logprob: -9.906902313232422
    10. 's' → logprob: -10.531902313232422

Token 212: ' call' (ID: 2421)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9576402902603149
    2. ')' → logprob: -1.832640290260315
    3. '0' → logprob: -1.832640290260315
    4. ' i' → logprob: -2.5826401710510254
    5. 'customer' → logprob: -3.0826401710510254
    6. 'M' → logprob: -3.4576401710510254
    7. ' M' → logprob: -3.5826401710510254
    8. ' ' → logprob: -3.8326401710510254
    9. 'customers' → logprob: -4.207640171051025
    10. 'time' → logprob: -4.332640171051025

Token 213: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.013035756535828114
    2. 'time' → logprob: -4.513035774230957
    3. ')' → logprob: -6.263035774230957
    4. '_id' → logprob: -11.138035774230957
    5. '_times' → logprob: -11.138035774230957
    6. ' time' → logprob: -11.263035774230957
    7. '_attempt' → logprob: -11.763035774230957
    8. '_count' → logprob: -12.138035774230957
    9. 'Time' → logprob: -12.638035774230957
    10. ',' → logprob: -12.763035774230957

Token 214: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3136087656021118
    2. ',' → logprob: -1.3136087656021118
    3. ' )' → logprob: -8.68860912322998
    4. '   ' → logprob: -9.68860912322998
    5. ')
' → logprob: -10.68860912322998
    6. '<|end|>' → logprob: -10.68860912322998
    7. ',)' → logprob: -11.68860912322998
    8. '),' → logprob: -11.81360912322998
    9. ' ,' → logprob: -11.81360912322998
    10. 's' → logprob: -12.68860912322998

Token 215: ' deadline' (ID: 30435)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5097048878669739
    2. 'L' → logprob: -1.759704828262329
    3. ' M' → logprob: -1.884704828262329
    4. ' L' → logprob: -3.634704828262329
    5. '0' → logprob: -4.259705066680908
    6. 'i' → logprob: -4.634705066680908
    7. 'customers' → logprob: -4.884705066680908
    8. ')' → logprob: -5.384705066680908
    9. ' customers' → logprob: -6.009705066680908
    10. 'customer' → logprob: -6.134705066680908

Token 216: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004154737573117018
    2. ',' → logprob: -5.504154682159424
    3. ' )' → logprob: -10.879155158996582
    4. 'time' → logprob: -11.004155158996582
    5. '<|end|>' → logprob: -11.379155158996582
    6. '_time' → logprob: -11.754155158996582
    7. ')
' → logprob: -12.004155158996582
    8. '_)' → logprob: -13.504155158996582
    9. '),' → logprob: -13.504155158996582
    10. ',)' → logprob: -13.879155158996582

Token 217: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.70252925157547
    2. ' M' → logprob: -1.3275291919708252
    3. 'L' → logprob: -2.077529191970825
    4. ' L' → logprob: -3.327529191970825
    5. ')' → logprob: -4.827529430389404
    6. ' retries' → logprob: -4.827529430389404
    7. 'retry' → logprob: -4.952529430389404
    8. ' retry' → logprob: -5.452529430389404
    9. 'customer' → logprob: -5.577529430389404
    10. 'i' → logprob: -5.577529430389404

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6358846426010132
    2. ')' → logprob: -0.7608846426010132
    3. ' ,' → logprob: -7.260884761810303
    4. 'L' → logprob: -7.385884761810303
    5. ' )' → logprob: -7.635884761810303
    6. 'K' → logprob: -8.010884284973145
    7. 'M' → logprob: -8.885884284973145
    8. 'time' → logprob: -8.885884284973145
    9. ')L' → logprob: -9.010884284973145
    10. ',L' → logprob: -9.135884284973145

Token 219: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5780279636383057
    2. ' L' → logprob: -0.8280279636383057
    3. ')' → logprob: -7.453027725219727
    4. ' K' → logprob: -7.578027725219727
    5. 'K' → logprob: -7.703027725219727
    6. ' ' → logprob: -9.078027725219727
    7. ' )' → logprob: -10.578027725219727
    8. '  ' → logprob: -10.765527725219727
    9. ' op' → logprob: -11.015527725219727
    10. ' ops' → logprob: -11.015527725219727

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033761460799723864
    2. ')' → logprob: -5.878376007080078
    3. 'K' → logprob: -8.253376007080078
    4. ',K' → logprob: -8.628376007080078
    5. ' ,' → logprob: -9.253376007080078
    6. '<|end|>' → logprob: -11.503376007080078
    7. ',
' → logprob: -12.003376007080078
    8. '   ' → logprob: -12.128376007080078
    9. ' K' → logprob: -12.503376007080078
    10. '),' → logprob: -13.378376007080078

Token 221: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.023972585797309875
    2. ' K' → logprob: -3.773972511291504
    3. 'remaining' → logprob: -9.273972511291504
    4. 'waiting' → logprob: -9.773972511291504
    5. 'i' → logprob: -10.023972511291504
    6. ' retries' → logprob: -10.273972511291504
    7. 'calls' → logprob: -10.523972511291504
    8. ' waiting' → logprob: -10.648972511291504
    9. 'wait' → logprob: -10.648972511291504
    10. 'heap' → logprob: -10.648972511291504

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004556983185466379
    2. ',' → logprob: -8.375455856323242
    3. ')
' → logprob: -8.500455856323242
    4. ' )' → logprob: -11.125455856323242
    5. ')

' → logprob: -13.500455856323242
    6. '   ' → logprob: -13.500455856323242
    7. ')`' → logprob: -13.875455856323242
    8. ')
' → logprob: -14.000455856323242
    9. '),' → logprob: -14.750455856323242
    10. ' ' → logprob: -15.125455856323242

Token 223: '   ' (ID: 271)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.21244768798351288
    2. ' waiting' → logprob: -1.7124476432800293
    3. ',' → logprob: -5.212447643280029
    4. 'wait' → logprob: -6.087447643280029
    5. ')' → logprob: -6.587447643280029
    6. ' wait' → logprob: -8.337448120117188
    7. '   ' → logprob: -8.587448120117188
    8. '_wait' → logprob: -8.587448120117188
    9. 'queue' → logprob: -8.587448120117188
    10. 'w' → logprob: -8.962448120117188

Token 224: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' (adapté à ' waiting') → logprob: -0.0967428982257843
    2. ' waiting' → logprob: -2.471742868423462
    3. 'wait' → logprob: -5.096743106842041
    4. ' wait' → logprob: -6.596743106842041
    5. 'w' → logprob: -9.596742630004883
    6. 'queue' → logprob: -10.221742630004883
    7. 'priority' → logprob: -10.846742630004883
    8. 'Waiting' → logprob: -10.846742630004883
    9. '_wait' → logprob: -11.596742630004883
    10. ',' → logprob: -11.596742630004883

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06019583344459534
    2. ' =' → logprob: -3.0601959228515625
    3. ',' → logprob: -4.6851959228515625
    4. '=[]' → logprob: -6.5601959228515625
    5. ')' → logprob: -7.8101959228515625
    6. '_queue' → logprob: -8.560195922851562
    7. 'q' → logprob: -9.560195922851562
    8. '_heap' → logprob: -9.685195922851562
    9. 's' → logprob: -10.185195922851562
    10. '<|end|>' → logprob: -10.435195922851562

Token 226: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07889540493488312
    2. ' []' → logprob: -2.578895330429077
    3. '[]}' → logprob: -13.078895568847656
    4. '[]
' → logprob: -13.453895568847656
    5. '[' → logprob: -13.828895568847656
    6. '[]>' → logprob: -14.703895568847656
    7. '[],' → logprob: -14.953895568847656
    8. '=[]' → logprob: -15.953895568847656
    9. 'heap' → logprob: -16.328895568847656
    10. '[])' → logprob: -16.953895568847656

Token 227: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16378650069236755
    2. ')' → logprob: -2.4137864112854004
    3. ' while' → logprob: -3.0387864112854004
    4. '<|end|>' → logprob: -4.9137864112854
    5. '
' → logprob: -6.1637864112854
    6. '   ' → logprob: -6.4137864112854
    7. ',' → logprob: -7.4137864112854
    8. '```' → logprob: -7.9137864112854
    9. '    
' → logprob: -8.413786888122559
    10. '<|end|>' → logprob: -8.413786888122559

Token 228: ' current' (ID: 2208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0023540027905255556
    2. ' while' → logprob: -6.502354145050049
    3. '   ' → logprob: -7.252354145050049
    4. 'time' → logprob: -9.37735366821289
    5. 'current' (adapté à ' current') → logprob: -11.25235366821289
    6. ')' → logprob: -11.25235366821289
    7. 'next' → logprob: -11.62735366821289
    8. 'for' → logprob: -12.00235366821289
    9. '    
' → logprob: -13.12735366821289
    10. '	while' → logprob: -13.12735366821289

Token 229: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.01645507663488388
    2. '_' → logprob: -4.141455173492432
    3. '=' → logprob: -8.391454696655273
    4. ' =' → logprob: -9.266454696655273
    5. ',' → logprob: -10.016454696655273
    6. '_t' → logprob: -11.516454696655273
    7. 'time' → logprob: -11.641454696655273
    8. 'Time' → logprob: -11.766454696655273
    9. ' _' → logprob: -11.891454696655273
    10. '_event' → logprob: -13.266454696655273

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2950190007686615
    2. '=' → logprob: -1.5450190305709839
    3. ',' → logprob: -3.1700189113616943
    4. ' ,' → logprob: -8.920019149780273
    5. ' ' → logprob: -10.795019149780273
    6. '<|end|>' → logprob: -12.295019149780273
    7. ')' → logprob: -13.170019149780273
    8. '  ' → logprob: -13.920019149780273
    9. ' ' → logprob: -14.045019149780273
    10. '=int' → logprob: -14.045019149780273

Token 231: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.250024795532227
    4. '000' → logprob: -17.687524795532227
    5. '-' → logprob: -18.187524795532227
    6. '00' → logprob: -18.312524795532227
    7. '۰' → logprob: -18.375024795532227
    8. '```' → logprob: -18.500024795532227
    9. '=' → logprob: -18.625024795532227
    10. '０' → logprob: -18.750024795532227

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '-' → logprob: -15.75001049041748
    4. 'heap' → logprob: -16.312511444091797
    5. '000' → logprob: -16.687511444091797
    6. 'min' → logprob: -16.875011444091797
    7. 'time' → logprob: -17.062511444091797
    8. 'calls' → logprob: -17.250011444091797
    9. '   ' → logprob: -17.437511444091797
    10. '00' → logprob: -17.562511444091797

Token 233: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3491092324256897
    2. ' while' → logprob: -2.099109172821045
    3. '
' → logprob: -2.599109172821045
    4. '   ' → logprob: -2.974109172821045
    5. '<|end|>' → logprob: -3.474109172821045
    6. ')' → logprob: -5.099109172821045
    7. '	while' → logprob: -5.849109172821045
    8. '    
' → logprob: -6.849109172821045
    9. '<|end|>' → logprob: -6.974109172821045
    10. ' 
' → logprob: -7.224109172821045

Token 234: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.070381298661232
    2. ' while' → logprob: -2.8203814029693604
    3. '   ' → logprob: -4.820381164550781
    4. '	while' → logprob: -9.070381164550781
    5. ')' → logprob: -9.320381164550781
    6. '```' → logprob: -11.070381164550781
    7. '
' → logprob: -11.195381164550781
    8. ' ' → logprob: -11.445381164550781
    9. 'While' → logprob: -11.445381164550781
    10. ',' → logprob: -11.445381164550781

Token 235: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -5.1928003813372925e-05
    2. ' while' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.375051498413086
    4. '	while' → logprob: -16.875051498413086
    5. 'wh' → logprob: -17.000051498413086
    6. '
' → logprob: -17.125051498413086
    7. 'While' → logprob: -17.250051498413086
    8. '```' → logprob: -17.500051498413086
    9. 'for' → logprob: -18.250051498413086
    10. 'next' → logprob: -19.750051498413086

Token 236: ' calls' (ID: 11666)
  Prédit: ' calls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calls' → logprob: -0.004637673031538725
    2. 'calls' → logprob: -5.379637718200684
    3. ' True' → logprob: -12.004637718200684
    4. ' len' → logprob: -12.254637718200684
    5. ' waiting' → logprob: -13.129637718200684
    6. 'True' → logprob: -13.629637718200684
    7. ' waits' → logprob: -13.879637718200684
    8. ' not' → logprob: -14.754637718200684
    9. ' ' → logprob: -15.004637718200684
    10. '.calls' → logprob: -15.379637718200684

Token 237: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041929569095373154
    2. ' and' → logprob: -3.2919294834136963
    3. '[' → logprob: -6.666929721832275
    4. 'and' → logprob: -6.666929721832275
    5. ' or' → logprob: -7.166929721832275
    6. ':
' → logprob: -7.916929721832275
    7. ',' → logprob: -9.791929244995117
    8. '<|end|>' → logprob: -10.541929244995117
    9. '==' → logprob: -10.791929244995117
    10. '):' → logprob: -10.791929244995117

Token 238: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0015048631466925144
    2. ' waiting' → logprob: -6.501504898071289
    3. 'wait' → logprob: -13.001504898071289
    4. 'True' → logprob: -16.75150489807129
    5. 'not' → logprob: -17.12650489807129
    6. 'len' → logprob: -17.37650489807129
    7. 'w' → logprob: -17.62650489807129
    8. 'Waiting' → logprob: -17.62650489807129
    9. '(wait' → logprob: -18.25150489807129
    10. '
' → logprob: -18.25150489807129

Token 239: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.006006828509271e-05
    2. ':
' → logprob: -9.500080108642578
    3. ' and' → logprob: -13.875080108642578
    4. '):' → logprob: -14.125080108642578
    5. ' :' → logprob: -14.125080108642578
    6. ' or' → logprob: -14.125080108642578
    7. ':

' → logprob: -14.250080108642578
    8. 'and' → logprob: -15.375080108642578
    9. ':
' → logprob: -15.375080108642578
    10. ',' → logprob: -15.375080108642578

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022281676065176725
    2. '   ' → logprob: -6.877228260040283
    3. ',' → logprob: -7.252228260040283
    4. '        
' → logprob: -8.252227783203125
    5. ' 
' → logprob: -9.877227783203125
    6. '    
' → logprob: -10.627227783203125
    7. '    ' → logprob: -10.877227783203125
    8. ')' → logprob: -11.252227783203125
    9. '```' → logprob: -11.252227783203125
    10. '<|end|>' → logprob: -11.502227783203125

Token 241: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01196701917797327
    2. '       ' → logprob: -5.011967182159424
    3. ' if' → logprob: -5.386967182159424
    4. 'next' → logprob: -8.011966705322266
    5. '#' (adapté à ' #') → logprob: -8.136966705322266
    6. 'time' → logprob: -11.511966705322266
    7. 'while' → logprob: -11.636966705322266
    8. 'current' → logprob: -11.886966705322266
    9. '        
' → logprob: -12.386966705322266
    10. ' next' → logprob: -13.386966705322266

Token 242: ' Pick' (ID: 24284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013528523035347462
    2. ' if' → logprob: -4.388528347015381
    3. '       ' → logprob: -7.763528347015381
    4. '#' → logprob: -8.263528823852539
    5. 'time' → logprob: -9.263528823852539
    6. '
' → logprob: -9.888528823852539
    7. 'current' → logprob: -10.263528823852539
    8. '   ' → logprob: -10.263528823852539
    9. 'next' → logprob: -10.263528823852539
    10. 'while' → logprob: -10.388528823852539

Token 243: ' earliest' (ID: 48721)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1360270977020264
    2. ' the' → logprob: -1.2610270977020264
    3. 'if' → logprob: -2.3860270977020264
    4. ' if' → logprob: -2.6360270977020264
    5. 'the' → logprob: -2.7610270977020264
    6. '_time' → logprob: -2.7610270977020264
    7. ' time' → logprob: -3.3860270977020264
    8. ' either' → logprob: -4.5110273361206055
    9. ' current' → logprob: -4.7610273361206055
    10. ' next' → logprob: -5.0110273361206055

Token 244: ' event' (ID: 2104)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6811097264289856
    2. 'time' → logprob: -1.6811096668243408
    3. 'if' → logprob: -2.431109666824341
    4. 'call' → logprob: -2.431109666824341
    5. ' call' → logprob: -3.181109666824341
    6. 'event' → logprob: -3.431109666824341
    7. ' if' → logprob: -3.806109666824341
    8. ' event' → logprob: -4.43110990524292
    9. ' time' → logprob: -4.80610990524292
    10. '   ' → logprob: -5.43110990524292

Token 245: ' time' (ID: 1058)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6246306300163269
    2. '_time' → logprob: -1.9996306896209717
    3. '       ' → logprob: -2.1246306896209717
    4. ' =' → logprob: -2.6246306896209717
    5. 'if' → logprob: -3.1246306896209717
    6. 'time' → logprob: -3.8746306896209717
    7. '
' → logprob: -3.8746306896209717
    8. ',' → logprob: -3.9996306896209717
    9. '=' → logprob: -4.124630451202393
    10. ' time' → logprob: -4.749630451202393

Token 246: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9080130457878113
    2. ' if' → logprob: -1.658013105392456
    3. '
' → logprob: -1.908013105392456
    4. '       ' → logprob: -2.283013105392456
    5. 'if' → logprob: -2.783013105392456
    6. 'time' → logprob: -3.033013105392456
    7. ' =' → logprob: -4.283012866973877
    8. '=' → logprob: -4.783012866973877
    9. ' time' → logprob: -5.158012866973877
    10. 'next' → logprob: -5.658012866973877

Token 247: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.030858563259243965
    2. ' calls' → logprob: -3.5308585166931152
    3. '(c' → logprob: -7.155858516693115
    4. '
' → logprob: -8.530858993530273
    5. ' (' → logprob: -10.530858993530273
    6. 'None' → logprob: -11.280858993530273
    7. '(
' → logprob: -11.280858993530273
    8. '   ' → logprob: -11.280858993530273
    9. ' None' → logprob: -11.280858993530273
    10. 'call' → logprob: -11.530858993530273

Token 248: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2550435066223145
    2. ' if' → logprob: -1.2550435066223145
    3. 'time' → logprob: -1.8800435066223145
    4. 'if' → logprob: -1.8800435066223145
    5. '_time' → logprob: -3.0050435066223145
    6. '
' → logprob: -4.0050435066223145
    7. '       ' → logprob: -4.1300435066223145
    8. '=' → logprob: -4.1300435066223145
    9. ' =' → logprob: -5.2550435066223145
    10. ' time' → logprob: -5.6300435066223145

Token 249: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.14446578919887543
    2. ' waiting' → logprob: -2.019465684890747
    3. 'calls' → logprob: -7.269465923309326
    4. ' calls' → logprob: -7.894465923309326
    5. 'wait' → logprob: -8.269465446472168
    6. 'heap' → logprob: -9.144465446472168
    7. '(wait' → logprob: -9.269465446472168
    8. ' operators' → logprob: -9.769465446472168
    9. 'operators' → logprob: -10.144465446472168
    10. ' waits' → logprob: -10.519465446472168

Token 250: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6855842471122742
    2. ' if' → logprob: -2.060584306716919
    3. ':' → logprob: -2.435584306716919
    4. 'time' → logprob: -2.935584306716919
    5. ':
' → logprob: -3.060584306716919
    6. '
' → logprob: -3.060584306716919
    7. '_time' → logprob: -3.185584306716919
    8. '=' → logprob: -3.560584306716919
    9. ',' → logprob: -4.06058406829834
    10. 'if' → logprob: -4.18558406829834

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21597743034362793
    2. ' if' → logprob: -2.465977430343628
    3. '_time' → logprob: -3.590977430343628
    4. 'time' → logprob: -3.715977430343628
    5. ',' → logprob: -4.090977668762207
    6. '=' → logprob: -4.465977668762207
    7. ' =' → logprob: -5.090977668762207
    8. 'if' → logprob: -5.090977668762207
    9. '
' → logprob: -5.840977668762207
    10. ':' → logprob: -6.090977668762207

Token 252: ' next' (ID: 2613)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3083971440792084
    2. 'if' → logprob: -1.5583971738815308
    3. '
' → logprob: -4.43339729309082
    4. '       ' → logprob: -4.55839729309082
    5. 'next' (adapté à ' next') → logprob: -4.68339729309082
    6. 'time' → logprob: -4.80839729309082
    7. ' next' → logprob: -4.93339729309082
    8. ' time' → logprob: -5.43339729309082
    9. 'current' → logprob: -7.05839729309082
    10. 't' → logprob: -7.18339729309082

Token 253: '_call' (ID: 25158)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.04209370166063309
    2. '_event' → logprob: -3.4170937538146973
    3. '_call' → logprob: -5.417093753814697
    4. '_' → logprob: -5.542093753814697
    5. 'time' → logprob: -10.917093276977539
    6. '_t' → logprob: -11.167093276977539
    7. ' _' → logprob: -12.542093276977539
    8. '_calls' → logprob: -12.917093276977539
    9. '_events' → logprob: -13.167093276977539
    10. '_token' → logprob: -13.542093276977539

Token 254: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0025668602902442217
    2. '_' → logprob: -7.127566814422607
    3. '=' → logprob: -7.377566814422607
    4. ',' → logprob: -7.877566814422607
    5. 'time' → logprob: -8.127567291259766
    6. ' =' → logprob: -8.377567291259766
    7. ',_' → logprob: -9.502567291259766
    8. '_t' → logprob: -9.627567291259766
    9. '   ' → logprob: -10.502567291259766
    10. ' _' → logprob: -11.252567291259766

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6351109147071838
    2. '=' → logprob: -0.8851109147071838
    3. ',' → logprob: -2.885110855102539
    4. ',next' → logprob: -7.010110855102539
    5. ' ,' → logprob: -7.510110855102539
    6. ' ' → logprob: -10.010110855102539
    7. '   ' → logprob: -10.510110855102539
    8. ')' → logprob: -11.510110855102539
    9. '=min' → logprob: -11.885110855102539
    10. ',time' → logprob: -12.010110855102539

Token 256: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.0052354102954268456
    2. ' calls' → logprob: -5.255235195159912
    3. 'float' → logprob: -14.00523567199707
    4. 'heap' → logprob: -15.50523567199707
    5. 'sys' → logprob: -15.88023567199707
    6. '   ' → logprob: -16.00523567199707
    7. 'call' → logprob: -16.38023567199707
    8. 'c' → logprob: -16.38023567199707
    9. ' sys' → logprob: -16.75523567199707
    10. 'None' → logprob: -16.88023567199707

Token 257: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.27099974633893e-05
    2. ' and' → logprob: -11.500012397766113
    3. 'and' → logprob: -13.500012397766113
    4. ' [' → logprob: -14.000012397766113
    5. '```' → logprob: -15.125012397766113
    6. '   ' → logprob: -17.75001335144043
    7. ' ' → logprob: -18.00001335144043
    8. '][' → logprob: -18.12501335144043
    9. '0' → logprob: -19.00001335144043
    10. '
' → logprob: -19.12501335144043

Token 258: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03366471827030182
    2. '0' → logprob: -3.4086647033691406
    3. '
' → logprob: -11.78366470336914
    4. '```' → logprob: -12.15866470336914
    5. 'and' → logprob: -13.03366470336914
    6. '][' → logprob: -13.65866470336914
    7. '   ' → logprob: -14.65866470336914
    8. 'if' → logprob: -14.90866470336914
    9. ' [' → logprob: -15.03366470336914
    10. ' ' → logprob: -15.28366470336914

Token 259: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16321900486946106
    2. '[' → logprob: -1.9132189750671387
    3. ')[' → logprob: -6.288218975067139
    4. ' ][' → logprob: -7.038218975067139
    5. ']' → logprob: -9.288219451904297
    6. ' )[' → logprob: -9.913219451904297
    7. ' [' → logprob: -10.288219451904297
    8. '
' → logprob: -11.413219451904297
    9. '>[' → logprob: -11.538219451904297
    10. ' if' → logprob: -11.663219451904297

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '
' → logprob: -15.375036239624023
    4. '   ' → logprob: -17.000036239624023
    5. '```' → logprob: -17.625036239624023
    6. '1' → logprob: -18.437536239624023
    7. '  ' → logprob: -18.562536239624023
    8. 'time' → logprob: -18.687536239624023
    9. '

' → logprob: -18.687536239624023
    10. '[' → logprob: -18.750036239624023

Token 261: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0023802844807505608
    2. 'if' → logprob: -6.12738037109375
    3. '<|end|>' → logprob: -8.62738037109375
    4. ')' → logprob: -12.00238037109375
    5. '
' → logprob: -12.62738037109375
    6. ' ' → logprob: -12.87738037109375
    7. '<|end|>' → logprob: -13.00238037109375
    8. ']' → logprob: -13.62738037109375
    9. '	if' → logprob: -15.12738037109375
    10. '

' → logprob: -16.12738037109375

Token 262: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14285746216773987
    2. 'if' → logprob: -2.017857551574707
    3. '
' → logprob: -8.892857551574707
    4. '       ' → logprob: -10.642857551574707
    5. 'next' → logprob: -11.892857551574707
    6. '<|end|>' → logprob: -12.142857551574707
    7. '	if' → logprob: -12.892857551574707
    8. ' next' → logprob: -13.017857551574707
    9. '        
' → logprob: -14.267857551574707
    10. '   ' → logprob: -14.517857551574707

Token 263: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.048588961362838745
    2. ' calls' → logprob: -3.048588991165161
    3. 'len' → logprob: -14.548588752746582
    4. 'call' → logprob: -14.548588752746582
    5. 'c' → logprob: -15.298588752746582
    6. ' len' → logprob: -16.5485897064209
    7. ' ' → logprob: -16.5485897064209
    8. '.calls' → logprob: -17.1735897064209
    9. '_calls' → logprob: -17.6735897064209
    10. '   ' → logprob: -17.9235897064209

Token 264: ' else' (ID: 1203)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4756114184856415
    2. 'and' → logprob: -0.9756114482879639
    3. ' else' → logprob: -7.225611209869385
    4. 'else' → logprob: -7.725611209869385
    5. '<|end|>' → logprob: -8.350611686706543
    6. ' or' → logprob: -10.100611686706543
    7. '[' → logprob: -10.475611686706543
    8. 's' → logprob: -11.600611686706543
    9. ' if' → logprob: -11.600611686706543
    10. ']' → logprob: -12.350611686706543

Token 265: ' float' (ID: 4428)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.4384332299232483
    2. 'float' → logprob: -1.0634331703186035
    3. ' float' → logprob: -5.4384331703186035
    4. ' waiting' → logprob: -5.5634331703186035
    5. 'calls' → logprob: -7.0634331703186035
    6. 'wait' → logprob: -8.688433647155762
    7. '10' → logprob: -8.938433647155762
    8. '(wait' → logprob: -9.438433647155762
    9. '(float' → logprob: -9.688433647155762
    10. 'current' → logprob: -9.938433647155762

Token 266: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009862450882792473
    2. ''in' → logprob: -4.884862422943115
    3. ''' → logprob: -6.134862422943115
    4. ''s' → logprob: -10.134862899780273
    5. ''inc' → logprob: -11.384862899780273
    6. '   ' → logprob: -12.259862899780273
    7. '("' → logprob: -13.134862899780273
    8. ''op' → logprob: -13.259862899780273
    9. ''import' → logprob: -13.384862899780273
    10. ''il' → logprob: -13.384862899780273

Token 267: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.6999732255935669
    2. 'inf' → logprob: -0.6999732255935669
    3. ''' → logprob: -5.074973106384277
    4. ''ins' → logprob: -8.574973106384277
    5. '"' → logprob: -9.449973106384277
    6. ''s' → logprob: -9.574973106384277
    7. 'in' → logprob: -10.324973106384277
    8. ''ex' → logprob: -10.574973106384277
    9. ''end' → logprob: -10.949973106384277
    10. ''ap' → logprob: -11.074973106384277

Token 268: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023135726805776358
    2. ')
' → logprob: -6.752313613891602
    3. ' )' → logprob: -6.877313613891602
    4. '')' → logprob: -9.252313613891602
    5. ' )
' → logprob: -11.877313613891602
    6. ')

' → logprob: -13.377313613891602
    7. '<|end|>' → logprob: -13.627313613891602
    8. '   ' → logprob: -13.877313613891602
    9. ')
' → logprob: -13.877313613891602
    10. '')
' → logprob: -14.127313613891602

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.353051096200943
    2. ' next' → logprob: -1.7280510663986206
    3. 'next' → logprob: -2.22805118560791
    4. '```' → logprob: -4.85305118560791
    5. '        
' → logprob: -6.72805118560791
    6. '
' → logprob: -6.85305118560791
    7. ',' → logprob: -7.60305118560791
    8. '.next' → logprob: -7.85305118560791
    9. ' if' → logprob: -8.72805118560791
    10. '<|end|>' → logprob: -9.10305118560791

Token 270: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5294129252433777
    2. 'next' (adapté à ' next') → logprob: -0.9044129252433777
    3. ' if' → logprob: -5.654412746429443
    4. 'if' → logprob: -6.779412746429443
    5. ' current' → logprob: -7.404412746429443
    6. 'current' → logprob: -7.904412746429443
    7. '       ' → logprob: -9.029413223266602
    8. 'while' → logprob: -9.154413223266602
    9. ' while' → logprob: -9.279413223266602
    10. '```' → logprob: -9.404413223266602

Token 271: '_op' (ID: 20111)
  Prédit: '_wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -0.04467487707734108
    2. '_call' → logprob: -3.294674873352051
    3. '_time' → logprob: -5.794674873352051
    4. '_' → logprob: -6.294674873352051
    5. '_operator' → logprob: -7.544674873352051
    6. '_event' → logprob: -7.794674873352051
    7. 'waiting' → logprob: -8.79467487335205
    8. '_w' → logprob: -9.04467487335205
    9. '(wait' → logprob: -9.41967487335205
    10. '_op' → logprob: -10.04467487335205

Token 272: '_free' (ID: 21204)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.041606005281209946
    2. 'er' → logprob: -3.2916059494018555
    3. 'time' → logprob: -5.7916059494018555
    4. 'ertime' → logprob: -8.666605949401855
    5. 'or' → logprob: -9.166605949401855
    6. '_available' → logprob: -9.666605949401855
    7. '_ready' → logprob: -10.416605949401855
    8. '_' → logprob: -10.416605949401855
    9. '=' → logprob: -11.166605949401855
    10. '_wait' → logprob: -11.291605949401855

Token 273: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.14845532178878784
    2. 'time' → logprob: -2.1484553813934326
    3. ' =' → logprob: -4.1484551429748535
    4. '=' → logprob: -5.3984551429748535
    5. 'ime' → logprob: -7.0234551429748535
    6. '   ' → logprob: -10.148455619812012
    7. 'Time' → logprob: -10.523455619812012
    8. '=time' → logprob: -11.648455619812012
    9. '_' → logprob: -12.648455619812012
    10. 'etime' → logprob: -12.773455619812012

Token 274: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.0006908706855028868
    2. 'heap' → logprob: -7.500690937042236
    3. ' operators' → logprob: -9.125690460205078
    4. 'operator' → logprob: -11.375690460205078
    5. '0' → logprob: -12.125690460205078
    6. 'operations' → logprob: -12.625690460205078
    7. '   ' → logprob: -13.125690460205078
    8. '```' → logprob: -13.500690460205078
    9. 'oper' → logprob: -13.625690460205078
    10. '	' → logprob: -14.500690460205078

Token 275: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -18.375
    3. ' [' → logprob: -18.625
    4. '0' → logprob: -18.625
    5. '
' → logprob: -19.75
    6. '   ' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. 'q' → logprob: -21.75
    9. '

' → logprob: -21.875
    10. 'heap' → logprob: -23.25

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269330382347107
    2. '[' → logprob: -2.1269330978393555
    3. ' ' → logprob: -13.001933097839355
    4. ')' → logprob: -14.251933097839355
    5. ' [' → logprob: -14.751933097839355
    6. '][' → logprob: -14.751933097839355
    7. ')[' → logprob: -14.751933097839355
    8. '[
' → logprob: -15.626933097839355
    9. 'q' → logprob: -16.00193214416504
    10. '
' → logprob: -16.25193214416504

Token 277: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.03372085466980934
    2. ' operators' → logprob: -3.4087209701538086
    3. 'operator' → logprob: -9.908720970153809
    4. 'operations' → logprob: -11.283720970153809
    5. 'oper' → logprob: -12.908720970153809
    6. ' ' → logprob: -13.283720970153809
    7. '```' → logprob: -13.533720970153809
    8. '   ' → logprob: -13.908720970153809
    9. 'ops' → logprob: -14.158720970153809
    10. 'op' → logprob: -14.408720970153809

Token 280: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6768858432769775
    2. ' and' → logprob: -1.1768858432769775
    3. '[' → logprob: -2.8018858432769775
    4. 'else' → logprob: -2.9268858432769775
    5. ' <' → logprob: -3.6768858432769775
    6. 'and' → logprob: -4.176885604858398
    7. ':' → logprob: -4.926885604858398
    8. '!=' → logprob: -4.926885604858398
    9. '<' → logprob: -5.676885604858398
    10. '>' → logprob: -5.676885604858398

Token 281: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0019532525911927223
    2. ' float' → logprob: -6.251953125
    3. '0' → logprob: -10.626953125
    4. '(float' → logprob: -15.751953125
    5. '   ' → logprob: -17.001953125
    6. ' ' → logprob: -17.126953125
    7. 'next' → logprob: -17.501953125
    8. '=float' → logprob: -17.876953125
    9. '
' → logprob: -18.251953125
    10. '	float' → logprob: -18.376953125

Token 282: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.6240566083070007e-06
    2. '(in' → logprob: -15.000001907348633
    3. ''s' → logprob: -15.125001907348633
    4. '(' → logprob: -15.250001907348633
    5. ' ('' → logprob: -15.625001907348633
    6. 'inf' → logprob: -15.625001907348633
    7. '('+' → logprob: -15.875001907348633
    8. '('-' → logprob: -16.500001907348633
    9. ''' → logprob: -16.625001907348633
    10. ''in' → logprob: -16.875001907348633

Token 283: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.15310683415737e-05
    2. ''' → logprob: -11.625021934509277
    3. ''in' → logprob: -12.125021934509277
    4. '0' → logprob: -12.875021934509277
    5. '('' → logprob: -13.625021934509277
    6. ''s' → logprob: -13.875021934509277
    7. '   ' → logprob: -14.250021934509277
    8. ' inf' → logprob: -14.500021934509277
    9. '2' → logprob: -15.500021934509277
    10. 'float' → logprob: -15.750021934509277

Token 284: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030078491545282304
    2. ')
' → logprob: -8.500300407409668
    3. ')

' → logprob: -10.000300407409668
    4. ' )' → logprob: -10.500300407409668
    5. '       ' → logprob: -11.500300407409668
    6. '')' → logprob: -12.375300407409668
    7. '   ' → logprob: -12.500300407409668
    8. ')
' → logprob: -13.125300407409668
    9. '<|end|>' → logprob: -13.375300407409668
    10. '<|end|>' → logprob: -14.875300407409668

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10400892049074173
    2. 'if' → logprob: -2.854008913040161
    3. ' if' → logprob: -3.854008913040161
    4. 'next' → logprob: -4.97900915145874
    5. '```' → logprob: -5.60400915145874
    6. '        
' → logprob: -5.72900915145874
    7. 'time' → logprob: -6.22900915145874
    8. 'current' → logprob: -6.60400915145874
    9. ' next' → logprob: -6.72900915145874
    10. '
' → logprob: -7.47900915145874

Token 286: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22330760955810547
    2. 'current' (adapté à ' current') → logprob: -1.8483076095581055
    3. 'time' → logprob: -4.2233076095581055
    4. ' if' → logprob: -4.4733076095581055
    5. 'next' → logprob: -4.7233076095581055
    6. 'now' → logprob: -6.0983076095581055
    7. 'cur' → logprob: -6.5983076095581055
    8. ' current' → logprob: -6.7233076095581055
    9. '       ' → logprob: -6.8483076095581055
    10. 't' → logprob: -7.0983076095581055

Token 287: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.04061443731188774
    2. '_' → logprob: -3.415614366531372
    3. '=' → logprob: -5.540614604949951
    4. ' =' → logprob: -5.915614604949951
    5. '=_' → logprob: -8.790614128112793
    6. 'time' → logprob: -9.665614128112793
    7. ' _' → logprob: -10.415614128112793
    8. 'Time' → logprob: -11.040614128112793
    9. '_=' → logprob: -11.540614128112793
    10. '="_' → logprob: -11.915614128112793

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269298940896988
    2. ' =' → logprob: -2.126929998397827
    3. '=min' → logprob: -14.126930236816406
    4. '=max' → logprob: -14.376930236816406
    5. '=
' → logprob: -15.251930236816406
    6. '   ' → logprob: -16.126930236816406
    7. '=

' → logprob: -16.376930236816406
    8. ' =
' → logprob: -17.501930236816406
    9. '=}' → logprob: -17.876930236816406
    10. '+=' → logprob: -18.501930236816406

Token 289: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12695109844207764
    2. 'min' → logprob: -2.126951217651367
    3. ' next' → logprob: -11.126951217651367
    4. ' max' → logprob: -12.376951217651367
    5. 'next' → logprob: -12.876951217651367
    6. 'max' → logprob: -13.876951217651367
    7. '	min' → logprob: -15.001951217651367
    8. ' calls' → logprob: -15.876951217651367
    9. '   ' → logprob: -16.126951217651367
    10. '(min' → logprob: -16.626951217651367

Token 290: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0003827676991932094
    2. '(' → logprob: -7.875382900238037
    3. 'next' → logprob: -13.625382423400879
    4. '(
' → logprob: -14.125382423400879
    5. ' (' → logprob: -15.750382423400879
    6. ' next' → logprob: -15.875382423400879
    7. '(c' → logprob: -16.125383377075195
    8. '(

' → logprob: -16.875383377075195
    9. '[next' → logprob: -16.875383377075195
    10. '(n' → logprob: -17.375383377075195

Token 291: '_call' (ID: 25158)
  Prédit: '_call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_call' → logprob: -0.00033081689616665244
    2. '_' → logprob: -8.250330924987793
    3. '_op' → logprob: -10.250330924987793
    4. 'call' → logprob: -11.625330924987793
    5. ')_' → logprob: -12.000330924987793
    6. ')' → logprob: -12.750330924987793
    7. '_calls' → logprob: -12.750330924987793
    8. '(' → logprob: -12.875330924987793
    9. '(_' → logprob: -12.875330924987793
    10. ' _' → logprob: -13.375330924987793

Token 292: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.729906196298543e-06
    2. 'time' → logprob: -11.625009536743164
    3. '_' → logprob: -15.375009536743164
    4. '_times' → logprob: -16.125009536743164
    5. '_t' → logprob: -16.250009536743164
    6. '_TIME' → logprob: -16.375009536743164
    7. ' _' → logprob: -16.625009536743164
    8. 'Time' → logprob: -16.750009536743164
    9. ' time' → logprob: -17.000009536743164
    10. '_token' → logprob: -17.750009536743164

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002189045073464513
    2. ' ,' → logprob: -6.3771891593933105
    3. ',next' → logprob: -8.502188682556152
    4. ')' → logprob: -8.627188682556152
    5. '<|end|>' → logprob: -9.752188682556152
    6. ',
' → logprob: -10.377188682556152
    7. ' if' → logprob: -12.877188682556152
    8. '<|end|>' → logprob: -13.127188682556152
    9. ',)' → logprob: -13.502188682556152
    10. ',current' → logprob: -13.627188682556152

Token 294: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.38687223196029663
    2. ' next' → logprob: -1.1368722915649414
    3. '(next' → logprob: -14.261872291564941
    4. '	next' → logprob: -15.386872291564941
    5. '[next' → logprob: -15.886872291564941
    6. ' operators' → logprob: -16.636871337890625
    7. '_next' → logprob: -17.136871337890625
    8. '
' → logprob: -17.136871337890625
    9. 'operators' → logprob: -17.386871337890625
    10. '.next' → logprob: -17.636871337890625

Token 295: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -13.125005722045898
    3. '_operator' → logprob: -13.125005722045898
    4. 'op' → logprob: -14.375005722045898
    5. '_free' → logprob: -14.750005722045898
    6. ')_' → logprob: -15.625005722045898
    7. ')' → logprob: -16.1250057220459
    8. '```' → logprob: -16.3750057220459
    9. '
' → logprob: -16.5000057220459
    10. '_call' → logprob: -16.7500057220459

Token 296: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.00018863992590922862
    2. 'free' → logprob: -8.875188827514648
    3. 'ree' → logprob: -10.125188827514648
    4. '_FREE' → logprob: -12.750188827514648
    5. '	free' → logprob: -13.625188827514648
    6. '-free' → logprob: -14.000188827514648
    7. 'Free' → logprob: -14.125188827514648
    8. ' free' → logprob: -14.250188827514648
    9. '_f' → logprob: -15.000188827514648
    10. '_ready' → logprob: -15.250188827514648

Token 297: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043400691356509924
    2. ')
' → logprob: -7.875433921813965
    3. '<|end|>' → logprob: -10.375433921813965
    4. ')

' → logprob: -11.375433921813965
    5. ' )' → logprob: -12.250433921813965
    6. '<|end|>' → logprob: -13.375433921813965
    7. '       ' → logprob: -14.125433921813965
    8. ',' → logprob: -14.250433921813965
    9. '))' → logprob: -14.500433921813965
    10. ')+' → logprob: -14.500433921813965

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43638738989830017
    2. 'if' → logprob: -1.5613874197006226
    3. 'while' → logprob: -2.936387300491333
    4. '```' → logprob: -3.561387300491333
    5. ' if' → logprob: -3.811387300491333
    6. '
' → logprob: -4.311387538909912
    7. '<|end|>' → logprob: -5.061387538909912
    8. ' while' → logprob: -5.311387538909912
    9. '        
' → logprob: -5.311387538909912
    10. '   ' → logprob: -5.311387538909912

Token 299: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.37329205870628357
    2. 'if' → logprob: -1.248292088508606
    3. '#' (adapté à ' #') → logprob: -3.7482919692993164
    4. ' while' → logprob: -8.123291969299316
    5. '       ' → logprob: -8.248291969299316
    6. '
' → logprob: -8.873291969299316
    7. '```' → logprob: -8.873291969299316
    8. '   ' → logprob: -9.998291969299316
    9. ' if' → logprob: -9.998291969299316
    10. '        
' → logprob: -11.248291969299316

Token 300: ' Move' (ID: 25485)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02546379156410694
    2. 'if' → logprob: -3.900463819503784
    3. '#' → logprob: -5.400463581085205
    4. ' while' → logprob: -8.650464057922363
    5. '
' → logprob: -9.275464057922363
    6. 'While' → logprob: -9.650464057922363
    7. '```' → logprob: -10.400464057922363
    8. '   ' → logprob: -11.400464057922363
    9. '       ' → logprob: -12.275464057922363
    10. 'import' → logprob: -12.400464057922363

Token 301: ' waiting' (ID: 12028)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4769759178161621
    2. ' while' → logprob: -0.9769759178161621
    3. '
' → logprob: -7.101975917816162
    4. '#' → logprob: -7.976975917816162
    5. ' calls' → logprob: -8.10197639465332
    6. 'from' → logprob: -8.10197639465332
    7. ' customers' → logprob: -8.72697639465332
    8. ' 
' → logprob: -8.85197639465332
    9. ' #' → logprob: -9.22697639465332
    10. '   ' → logprob: -9.47697639465332

Token 302: ' callers' (ID: 163036)
  Prédit: '_custom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_custom' → logprob: -0.6752448081970215
    2. 'customers' → logprob: -2.0502448081970215
    3. '=' → logprob: -2.1752448081970215
    4. ' =' → logprob: -2.8002448081970215
    5. '_idx' → logprob: -3.8002448081970215
    6. 'to' → logprob: -4.0502448081970215
    7. 's' → logprob: -4.0502448081970215
    8. 'custom' → logprob: -4.1752448081970215
    9. '_to' → logprob: -4.3002448081970215
    10. 'while' → logprob: -4.5502448081970215

Token 303: ' who' (ID: 1218)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.2104002237319946
    2. 'to' → logprob: -1.3354002237319946
    3. 'from' → logprob: -1.5854002237319946
    4. ' =' → logprob: -2.210400104522705
    5. ' to' → logprob: -3.210400104522705
    6. '=' → logprob: -3.335400104522705
    7. '_to' → logprob: -4.710400104522705
    8. ' from' → logprob: -4.960400104522705
    9. '=[]' → logprob: -4.960400104522705
    10. ' while' → logprob: -5.210400104522705

Token 304: ' timeout' (ID: 20451)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.6011337041854858
    2. ' have' → logprob: -1.6011337041854858
    3. 'are' → logprob: -2.3511338233947754
    4. 'current' → logprob: -2.8511338233947754
    5. ' are' → logprob: -2.9761338233947754
    6. ' current' → logprob: -4.101133823394775
    7. 'cannot' → logprob: -5.351133823394775
    8. ' and' → logprob: -5.476133823394775
    9. 'and' → logprob: -5.476133823394775
    10. 'can' → logprob: -5.601133823394775

Token 305: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1114522218704224
    2. 'if' → logprob: -1.4864522218704224
    3. 'and' → logprob: -1.7364522218704224
    4. 'while' → logprob: -1.9864522218704224
    5. ' if' → logprob: -3.486452102661133
    6. ' and' → logprob: -3.611452102661133
    7. ',' → logprob: -4.486452102661133
    8. ' while' → logprob: -4.611452102661133
    9. ' from' → logprob: -4.611452102661133
    10. '=' → logprob: -4.986452102661133

Token 306: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06197642162442207
    2. ' current' → logprob: -2.811976432800293
    3. 'time' → logprob: -12.686976432800293
    4. '[current' → logprob: -13.686976432800293
    5. '=current' → logprob: -14.186976432800293
    6. 'urrent' → logprob: -14.311976432800293
    7. 'next' → logprob: -14.436976432800293
    8. 'the' → logprob: -14.436976432800293
    9. '_current' → logprob: -14.686976432800293
    10. '(current' → logprob: -15.436976432800293

Token 307: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00030066570616327226
    2. '_' → logprob: -8.625300407409668
    3. 'time' → logprob: -9.750300407409668
    4. ' _' → logprob: -10.750300407409668
    5. '_current' → logprob: -10.875300407409668
    6. 'current' → logprob: -11.625300407409668
    7. '_token' → logprob: -11.875300407409668
    8. '   ' → logprob: -13.000300407409668
    9. ' time' → logprob: -13.875300407409668
    10. '_call' → logprob: -13.875300407409668

Token 308: ' and' (ID: 326)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0142426490783691
    2. 'while' → logprob: -1.0142426490783691
    3. '       ' → logprob: -2.139242649078369
    4. ' to' → logprob: -2.764242649078369
    5. ':' → logprob: -3.014242649078369
    6. '   ' → logprob: -3.639242649078369
    7. 'to' → logprob: -5.264242649078369
    8. '
' → logprob: -5.264242649078369
    9. ',' → logprob: -6.264242649078369
    10. ' if' → logprob: -6.764242649078369

Token 309: ' schedule' (ID: 12262)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.5124874114990234
    2. 'current' → logprob: -1.8874874114990234
    3. '#' → logprob: -2.5124874114990234
    4. 'len' → logprob: -2.6374874114990234
    5. 'return' → logprob: -2.6374874114990234
    6. 'heap' → logprob: -2.8874874114990234
    7. 'retry' → logprob: -3.0124874114990234
    8. ' retry' → logprob: -3.2624874114990234
    9. 'call' → logprob: -3.8874874114990234
    10. 'remove' → logprob: -3.8874874114990234

Token 310: ' retry' (ID: 45364)
  Prédit: ' retries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retries' → logprob: -0.7314014434814453
    2. 'retry' → logprob: -2.1064014434814453
    3. ' next' → logprob: -2.3564014434814453
    4. ' retry' → logprob: -2.4814014434814453
    5. ' their' → logprob: -2.8564014434814453
    6. 're' → logprob: -3.6064014434814453
    7. 'next' → logprob: -3.6064014434814453
    8. ' for' → logprob: -3.7314014434814453
    9. ' calls' → logprob: -4.106401443481445
    10. 'calls' → logprob: -4.231401443481445

Token 311: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23115696012973785
    2. ' while' → logprob: -2.481157064437866
    3. 'while' → logprob: -2.856157064437866
    4. ' for' → logprob: -3.231157064437866
    5. 'for' → logprob: -4.731156826019287
    6. '   ' → logprob: -5.856156826019287
    7. ' to' → logprob: -5.856156826019287
    8. ' if' → logprob: -5.981156826019287
    9. ',' → logprob: -6.231156826019287
    10. '
' → logprob: -6.356156826019287

Token 312: ' needed' (ID: 6118)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.031164348125457764
    2. ' current' → logprob: -3.6561644077301025
    3. 'needed' → logprob: -6.531164169311523
    4. 'waiting' → logprob: -6.656164169311523
    5. 'next' → logprob: -7.281164169311523
    6. 'any' → logprob: -8.156164169311523
    7. 'necessary' → logprob: -8.406164169311523
    8. 'possible' → logprob: -8.906164169311523
    9. 'calls' → logprob: -9.406164169311523
    10. ' needed' → logprob: -9.531164169311523

Token 313: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17795564234256744
    2. '
' → logprob: -2.1779556274414062
    3. ' while' → logprob: -3.6779556274414062
    4. 'while' → logprob: -4.052955627441406
    5. '        
' → logprob: -5.802955627441406
    6. ',' → logprob: -7.052955627441406
    7. '<|end|>' → logprob: -7.052955627441406
    8. ' for' → logprob: -7.427955627441406
    9. '   ' → logprob: -7.927955627441406
    10. ' if' → logprob: -8.177955627441406

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21006761491298676
    2. ' while' → logprob: -2.2100675106048584
    3. 'while' → logprob: -3.0850675106048584
    4. '```' → logprob: -4.2100677490234375
    5. '
' → logprob: -4.5850677490234375
    6. '<|end|>' → logprob: -5.5850677490234375
    7. ' for' → logprob: -6.4600677490234375
    8. ' if' → logprob: -7.0850677490234375
    9. '   ' → logprob: -7.0850677490234375
    10. ',' → logprob: -7.3350677490234375

Token 315: ' new' (ID: 620)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08963130414485931
    2. 'i' → logprob: -3.2146313190460205
    3. 'for' → logprob: -4.089631080627441
    4. ' while' → logprob: -4.214631080627441
    5. '   ' → logprob: -4.839631080627441
    6. 'new' (adapté à ' new') → logprob: -6.214631080627441
    7. 'idx' → logprob: -6.839631080627441
    8. 'temp' → logprob: -7.464631080627441
    9. ' i' → logprob: -7.714631080627441
    10. ' for' → logprob: -7.839631080627441

Token 316: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -0.0030081309378147125
    2. '_calls' → logprob: -6.5030083656311035
    3. 'waiting' → logprob: -7.0030083656311035
    4. '_' → logprob: -7.7530083656311035
    5. '_time' → logprob: -10.128007888793945
    6. '_call' → logprob: -10.503007888793945
    7. '=' → logprob: -11.503007888793945
    8. '_timeout' → logprob: -11.503007888793945
    9. '_WAIT' → logprob: -11.628007888793945
    10. 'wait' → logprob: -11.753007888793945

Token 317: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00012154294381616637
    2. 'ers' → logprob: -9.625121116638184
    3. '=' → logprob: -10.875121116638184
    4. '_ing' → logprob: -10.875121116638184
    5. 'ings' → logprob: -12.000121116638184
    6. '_wait' → logprob: -13.000121116638184
    7. '=[]' → logprob: -13.000121116638184
    8. ' =' → logprob: -13.250121116638184
    9. '_timeout' → logprob: -13.875121116638184
    10. '=[]
' → logprob: -14.125121116638184

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10178981721401215
    2. ' =' → logprob: -2.351789712905884
    3. '=[]' → logprob: -6.476789951324463
    4. ',' → logprob: -10.976789474487305
    5. '=[]
' → logprob: -11.476789474487305
    6. '[]' → logprob: -11.601789474487305
    7. 's' → logprob: -14.226789474487305
    8. '=[]
' → logprob: -14.226789474487305
    9. '[:]' → logprob: -14.351789474487305
    10. ')' → logprob: -14.726789474487305

Token 319: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003377270477358252
    2. '[]
' → logprob: -8.000337600708008
    3. '[]

' → logprob: -13.250337600708008
    4. '[]}' → logprob: -15.625337600708008
    5. '[' → logprob: -16.125337600708008
    6. '[],' → logprob: -16.250337600708008
    7. '[])' → logprob: -16.250337600708008
    8. ' []' → logprob: -16.250337600708008
    9. '[]>' → logprob: -18.500337600708008
    10. '[]"' → logprob: -20.000337600708008

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25921693444252014
    2. 'for' → logprob: -2.0092170238494873
    3. ' for' → logprob: -2.3842170238494873
    4. '<|end|>' → logprob: -6.509216785430908
    5. 'while' → logprob: -7.759216785430908
    6. '   ' → logprob: -10.009217262268066
    7. ' while' → logprob: -10.134217262268066
    8. ',' → logprob: -10.884217262268066
    9. '	for' → logprob: -10.884217262268066
    10. '<|end|>' → logprob: -11.134217262268066

Token 321: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020381996408104897
    2. 'while' (adapté à ' while') → logprob: -4.020381927490234
    3. ' for' → logprob: -6.645381927490234
    4. '       ' → logprob: -7.020381927490234
    5. ' while' → logprob: -11.145381927490234
    6. '   ' → logprob: -11.270381927490234
    7. '	for' → logprob: -12.520381927490234
    8. 'i' → logprob: -13.145381927490234
    9. '<|end|>' → logprob: -14.020381927490234
    10. '	while' → logprob: -14.895381927490234

Token 322: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -3.8889261304575484e-06
    2. ' waiting' → logprob: -12.625003814697266
    3. 'wait' → logprob: -14.500003814697266
    4. '   ' → logprob: -19.000003814697266
    5. 'len' → logprob: -20.250003814697266
    6. '
' → logprob: -20.375003814697266
    7. '```' → logprob: -20.500003814697266
    8. '(wait' → logprob: -20.625003814697266
    9. '	wait' → logprob: -20.750003814697266
    10. 'await' → logprob: -21.375003814697266

Token 323: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11315833032131195
    2. 'and' → logprob: -2.2381582260131836
    3. ':
' → logprob: -8.113158226013184
    4. ':' → logprob: -11.488158226013184
    5. '   ' → logprob: -11.613158226013184
    6. '.pop' → logprob: -12.238158226013184
    7. '	and' → logprob: -12.363158226013184
    8. '<|end|>' → logprob: -13.363158226013184
    9. '```' → logprob: -13.613158226013184
    10. '[' → logprob: -13.738158226013184

Token 324: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5960582494735718
    2. ' waiting' → logprob: -2.0960583686828613
    3. '   ' → logprob: -2.3460583686828613
    4. ' (' → logprob: -2.5960583686828613
    5. '(wait' → logprob: -2.5960583686828613
    6. '       ' → logprob: -4.096058368682861
    7. 'waiting' → logprob: -4.346058368682861
    8. '_wait' → logprob: -5.221058368682861
    9. '(' → logprob: -5.346058368682861
    10. '[' → logprob: -5.596058368682861

Token 325: ' cid' (ID: 55379)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' (adapté à ' cid') → logprob: -0.8652892112731934
    2. 'id' → logprob: -1.2402892112731934
    3. '   ' → logprob: -2.2402892112731934
    4. ' cid' → logprob: -3.4902892112731934
    5. 'waiting' → logprob: -3.6152892112731934
    6. 'w' → logprob: -3.7402892112731934
    7. ' id' → logprob: -4.115289211273193
    8. 'customer' → logprob: -4.115289211273193
    9. 'wait' → logprob: -4.240289211273193
    10. 'cust' → logprob: -4.365289211273193

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007251793285831809
    2. '=' → logprob: -7.625725269317627
    3. ' ,' → logprob: -9.125724792480469
    4. ',c' → logprob: -9.375724792480469
    5. ',
' → logprob: -11.250724792480469
    6. ',id' → logprob: -12.375724792480469
    7. '[' → logprob: -12.500724792480469
    8. '_,' → logprob: -12.500724792480469
    9. ',item' → logprob: -12.625724792480469
    10. 'c' → logprob: -13.125724792480469

Token 327: ' call' (ID: 2421)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.0358612984418869
    2. 'ct' → logprob: -4.410861492156982
    3. 'w' → logprob: -4.660861492156982
    4. 'wait' → logprob: -5.285861492156982
    5. 'c' → logprob: -5.410861492156982
    6. ' call' → logprob: -6.410861492156982
    7. 'ctime' → logprob: -6.535861492156982
    8. 'wt' → logprob: -8.160861015319824
    9. 'cw' → logprob: -9.285861015319824
    10. 'waiting' → logprob: -9.785861015319824

Token 328: '_t' (ID: 838)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.7053759519476444e-05
    2. '_' → logprob: -10.250057220458984
    3. ',' → logprob: -12.125057220458984
    4. '_wait' → logprob: -12.125057220458984
    5. ',_' → logprob: -12.875057220458984
    6. 'time' → logprob: -13.000057220458984
    7. '_t' → logprob: -13.375057220458984
    8. '_,' → logprob: -13.625057220458984
    9. '_id' → logprob: -14.375057220458984
    10. ' _' → logprob: -14.375057220458984

Token 329: ',' (ID: 11)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.0019627707079052925
    2. ',' → logprob: -6.251962661743164
    3. '=' → logprob: -10.376962661743164
    4. ' =' → logprob: -14.001962661743164
    5. 'e' → logprob: -14.251962661743164
    6. 'im' → logprob: -14.751962661743164
    7. 'imes' → logprob: -15.126962661743164
    8. 'i' → logprob: -15.376962661743164
    9. '_,' → logprob: -15.376962661743164
    10. 'ype' → logprob: -15.876962661743164

Token 330: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.08202902972698212
    2. 'dead' → logprob: -2.582029104232788
    3. 'dl' → logprob: -5.957028865814209
    4. 'ddl' → logprob: -8.082029342651367
    5. 'd' → logprob: -9.457029342651367
    6. '_dead' → logprob: -10.582029342651367
    7. 'deal' → logprob: -10.832029342651367
    8. 'dea' → logprob: -11.207029342651367
    9. ' deadline' → logprob: -11.207029342651367
    10. 'timeout' → logprob: -11.207029342651367

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003589416155591607
    2. ' ,' → logprob: -8.000358581542969
    3. '=' → logprob: -10.875358581542969
    4. ' =' → logprob: -13.250358581542969
    5. ',
' → logprob: -14.000358581542969
    6. '_,' → logprob: -14.500358581542969
    7. ',,' → logprob: -15.250358581542969
    8. '   ' → logprob: -15.250358581542969
    9. '           ' → logprob: -16.00035858154297
    10. ',c' → logprob: -16.37535858154297

Token 332: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0011868956498801708
    2. ' M' → logprob: -6.876186847686768
    3. '   ' → logprob: -9.626187324523926
    4. 'm' → logprob: -9.751187324523926
    5. '           ' → logprob: -12.126187324523926
    6. '       ' → logprob: -12.251187324523926
    7. ' ' → logprob: -12.251187324523926
    8. '  ' → logprob: -12.501187324523926
    9. '    ' → logprob: -12.876187324523926
    10. '               ' → logprob: -13.376187324523926

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009238460334017873
    2. ' ,' → logprob: -7.6259236335754395
    3. ',L' → logprob: -7.7509236335754395
    4. ',K' → logprob: -13.750924110412598
    5. ',
' → logprob: -14.000924110412598
    6. 'L' → logprob: -14.375924110412598
    7. '_,' → logprob: -14.750924110412598
    8. '   ' → logprob: -15.250924110412598
    9. ',l' → logprob: -15.250924110412598
    10. '           ' → logprob: -15.250924110412598

Token 334: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.016053255647420883
    2. ' L' → logprob: -4.141053199768066
    3. ',' → logprob: -11.766053199768066
    4. ' ' → logprob: -13.016053199768066
    5. '   ' → logprob: -13.141053199768066
    6. ',L' → logprob: -13.391053199768066
    7. '    ' → logprob: -13.766053199768066
    8. '  ' → logprob: -14.266053199768066
    9. '	L' → logprob: -14.453553199768066
    10. '
' → logprob: -15.328553199768066

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6312321753939614e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',K' → logprob: -14.625036239624023
    4. ',
' → logprob: -16.000036239624023
    5. '=' → logprob: -16.750036239624023
    6. '   ' → logprob: -17.250036239624023
    7. '           ' → logprob: -17.625036239624023
    8. ',k' → logprob: -17.750036239624023
    9. '_,' → logprob: -17.750036239624023
    10. '‌,' → logprob: -18.250036239624023

Token 336: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.002815932035446167
    2. ' K' → logprob: -5.8778157234191895
    3. ',' → logprob: -12.502816200256348
    4. ' ' → logprob: -12.877816200256348
    5. '   ' → logprob: -14.002816200256348
    6. '           ' → logprob: -14.127816200256348
    7. '       ' → logprob: -14.502816200256348
    8. '  ' → logprob: -14.877816200256348
    9. '    ' → logprob: -15.127816200256348
    10. '
' → logprob: -15.252816200256348

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6213855743408203
    2. '=' → logprob: -0.8713855743408203
    3. ',' → logprob: -3.1213855743408203
    4. '   ' → logprob: -8.74638557434082
    5. ' ,' → logprob: -9.49638557434082
    6. ')' → logprob: -10.24638557434082
    7. ' ' → logprob: -10.37138557434082
    8. '       ' → logprob: -12.12138557434082
    9. '  ' → logprob: -12.49638557434082
    10. ',w' → logprob: -12.62138557434082

Token 338: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6359927654266357
    2. 'waiting' → logprob: -0.7609927654266357
    3. ' waiting' → logprob: -5.885993003845215
    4. ' heap' → logprob: -7.510993003845215
    5. '   ' → logprob: -10.260993003845215
    6. 'wait' → logprob: -10.885993003845215
    7. 'Waiting' → logprob: -12.385993003845215
    8. 'queue' → logprob: -13.635993003845215
    9. 'he' → logprob: -14.010993003845215
    10. '  ' → logprob: -14.385993003845215

Token 339: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'app' → logprob: -15.250000953674316
    3. '[' → logprob: -15.750000953674316
    4. 'ify' → logprob: -16.875
    5. 'op' → logprob: -16.875
    6. '   ' → logprob: -17.5
    7. 'replace' → logprob: -17.625
    8. 'w' → logprob: -17.875
    9. 'aq' → logprob: -18.5
    10. 'queue' → logprob: -18.75

Token 340: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00186307227704674
    2. 'q' → logprob: -6.5018630027771
    3. 'he' → logprob: -8.251863479614258
    4. 'op' → logprob: -9.626863479614258
    5. '.heap' → logprob: -11.126863479614258
    6. 'app' → logprob: -11.501863479614258
    7. 'replace' → logprob: -12.501863479614258
    8. ' he' → logprob: -13.251863479614258
    9. 'ush' → logprob: -13.626863479614258
    10. '```' → logprob: -14.001863479614258

Token 341: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.03804803267121315
    2. 'pp' → logprob: -3.288048028945923
    3. 'ap' → logprob: -12.663047790527344
    4. 'p' → logprob: -13.913047790527344
    5. 'push' → logprob: -14.163047790527344
    6. '```' → logprob: -14.538047790527344
    7. 'appen' → logprob: -14.913047790527344
    8. 'appe' → logprob: -15.913047790527344
    9. 'append' → logprob: -15.913047790527344
    10. '...' → logprob: -16.163047790527344

Token 342: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.029583854600787163
    2. 'op' → logprob: -3.9045839309692383
    3. 'pp' → logprob: -5.154583930969238
    4. 'push' → logprob: -6.279583930969238
    5. 'app' → logprob: -6.904583930969238
    6. 'p' → logprob: -8.029583930969238
    7. '```' → logprob: -11.779583930969238
    8. 'pop' → logprob: -11.904583930969238
    9. 'sh' → logprob: -12.404583930969238
    10. 'ap' → logprob: -13.904583930969238

Token 343: '(wait' (ID: 127282)
  Prédit: '(wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -2.546478935983032e-05
    2. 'waiting' → logprob: -10.625025749206543
    3. 'wait' → logprob: -14.125025749206543
    4. '(' → logprob: -16.250024795532227
    5. ' waiting' → logprob: -16.250024795532227
    6. '(new' → logprob: -16.500024795532227
    7. '	wait' → logprob: -16.875024795532227
    8. 'Waiting' → logprob: -17.125024795532227
    9. '_wait' → logprob: -17.500024795532227
    10. '(
' → logprob: -18.125024795532227

Token 344: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -11.87502670288086
    3. '[' → logprob: -12.12502670288086
    4. ')' → logprob: -13.12502670288086
    5. 'ng' → logprob: -13.25002670288086
    6. '_ing' → logprob: -13.25002670288086
    7. 'q' → logprob: -14.00002670288086
    8. ' ing' → logprob: -14.00002670288086
    9. 'ING' → logprob: -14.12502670288086
    10. ',' → logprob: -14.25002670288086

Token 345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11281708627939224
    2. ')
' → logprob: -2.4878170490264893
    3. ',' → logprob: -4.112817287445068
    4. '           ' → logprob: -5.112817287445068
    5. '):
' → logprob: -7.862817287445068
    6. '               ' → logprob: -8.86281681060791
    7. '       ' → logprob: -8.98781681060791
    8. ' )' → logprob: -9.11281681060791
    9. '),' → logprob: -9.73781681060791
    10. ' ,' → logprob: -9.86281681060791

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15823617577552795
    2. '       ' → logprob: -2.158236265182495
    3. ' if' → logprob: -4.533236026763916
    4. ',' → logprob: -4.658236026763916
    5. '        
' → logprob: -6.033236026763916
    6. '<|end|>' → logprob: -6.533236026763916
    7. ')' → logprob: -7.158236026763916
    8. '        ' → logprob: -7.158236026763916
    9. '```' → logprob: -7.408236026763916
    10. ' ' → logprob: -7.408236026763916

Token 347: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4748128056526184
    2. 'if' → logprob: -0.9748128056526184
    3. '           ' → logprob: -7.724812984466553
    4. '       ' → logprob: -9.474812507629395
    5. ',' → logprob: -9.974812507629395
    6. 'current' → logprob: -10.224812507629395
    7. ')' → logprob: -10.349812507629395
    8. 'time' → logprob: -10.724812507629395
    9. ' current' → logprob: -10.849812507629395
    10. '   ' → logprob: -11.099812507629395

Token 348: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027804376557469368
    2. ' if' → logprob: -3.652804374694824
    3. '           ' → logprob: -6.527804374694824
    4. '       ' → logprob: -11.277804374694824
    5. '```' → logprob: -11.402804374694824
    6. 'If' → logprob: -12.027804374694824
    7. '   ' → logprob: -12.527804374694824
    8. 'time' → logprob: -13.277804374694824
    9. 'heap' → logprob: -13.902804374694824
    10. '#' → logprob: -14.027804374694824

Token 349: ' call' (ID: 2421)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8361368775367737
    2. 'call' → logprob: -0.8361368775367737
    3. 'deadline' → logprob: -2.711136817932129
    4. ' current' → logprob: -3.211136817932129
    5. ' call' → logprob: -3.711136817932129
    6. ' deadline' → logprob: -7.086136817932129
    7. 'dead' → logprob: -8.086136817932129
    8. '   ' → logprob: -8.211136817932129
    9. 'K' → logprob: -9.586136817932129
    10. 'next' → logprob: -9.586136817932129

Token 350: ' timed' (ID: 53414)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0011046138824895024
    2. '_time' → logprob: -7.126104831695557
    3. '_' → logprob: -8.626104354858398
    4. ' _' → logprob: -9.876104354858398
    5. '[' → logprob: -10.126104354858398
    6. 'time' → logprob: -12.376104354858398
    7. 't' → logprob: -12.876104354858398
    8. '   ' → logprob: -12.876104354858398
    9. '__' → logprob: -13.001104354858398
    10. '[_' → logprob: -13.376104354858398

Token 351: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.03476441279053688
    2. '_out' → logprob: -3.659764528274536
    3. ' out' → logprob: -4.784764289855957
    4. '_' → logprob: -10.159764289855957
    5. '
' → logprob: -11.534764289855957
    6. '   ' → logprob: -11.784764289855957
    7. '	out' → logprob: -12.284764289855957
    8. '-out' → logprob: -12.909764289855957
    9. ' ' → logprob: -13.409764289855957
    10. ' _' → logprob: -13.534764289855957

Token 352: ' before' (ID: 2254)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015243727713823318
    2. 'and' → logprob: -4.3902435302734375
    3. '           ' → logprob: -6.6402435302734375
    4. ' or' → logprob: -7.6402435302734375
    5. ' at' → logprob: -7.8902435302734375
    6. '               ' → logprob: -8.515243530273438
    7. ',' → logprob: -9.140243530273438
    8. ':' → logprob: -9.390243530273438
    9. '   ' → logprob: -10.265243530273438
    10. ' if' → logprob: -10.390243530273438

Token 353: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.14462517201900482
    2. ' current' → logprob: -2.019625186920166
    3. 'call' → logprob: -6.894625186920166
    4. '=current' → logprob: -7.394625186920166
    5. '=' → logprob: -8.769624710083008
    6. ' call' → logprob: -9.269624710083008
    7. 'deadline' → logprob: -11.519624710083008
    8. '(current' → logprob: -11.769624710083008
    9. '_current' → logprob: -11.894624710083008
    10. 'cid' → logprob: -12.019624710083008

Token 354: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.041768160182983e-05
    2. '_' → logprob: -10.125080108642578
    3. 'time' → logprob: -10.625080108642578
    4. '_token' → logprob: -11.625080108642578
    5. ' _' → logprob: -13.375080108642578
    6. '_t' → logprob: -13.750080108642578
    7. '_call' → logprob: -14.000080108642578
    8. '_current' → logprob: -14.125080108642578
    9. '```' → logprob: -14.375080108642578
    10. '   ' → logprob: -14.875080108642578

Token 355: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0057833814062178135
    2. 'and' → logprob: -5.755783557891846
    3. '           ' → logprob: -6.255783557891846
    4. ',' → logprob: -8.505783081054688
    5. ':' → logprob: -8.630783081054688
    6. '               ' → logprob: -9.255783081054688
    7. ' or' → logprob: -9.380783081054688
    8. ':
' → logprob: -9.880783081054688
    9. '       ' → logprob: -10.630783081054688
    10. '   ' → logprob: -11.130783081054688

Token 356: ' retry' (ID: 45364)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3512469232082367
    2. 'if' → logprob: -1.226246953010559
    3. '           ' → logprob: -6.6012468338012695
    4. '               ' → logprob: -6.9762468338012695
    5. 'continue' → logprob: -9.47624683380127
    6. ' heap' → logprob: -9.47624683380127
    7. ' continue' → logprob: -9.60124683380127
    8. '       ' → logprob: -9.60124683380127
    9. '   ' → logprob: -9.72624683380127
    10. 'heap' → logprob: -9.85124683380127

Token 357: ' call' (ID: 2421)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37724626064300537
    2. '           ' → logprob: -1.2522462606430054
    3. '               ' → logprob: -4.502246379852295
    4. ' and' → logprob: -5.002246379852295
    5. ' or' → logprob: -5.502246379852295
    6. ',' → logprob: -6.002246379852295
    7. 'if' → logprob: -6.377246379852295
    8. ':' → logprob: -7.252246379852295
    9. ' at' → logprob: -7.752246379852295
    10. ':
' → logprob: -8.377245903015137

Token 358: ' after' (ID: 1934)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10449235141277313
    2. ' if' → logprob: -2.354492425918579
    3. ',' → logprob: -6.2294921875
    4. ' or' → logprob: -7.6044921875
    5. '               ' → logprob: -7.8544921875
    6. ' and' → logprob: -7.8544921875
    7. '       ' → logprob: -7.8544921875
    8. 'if' → logprob: -8.4794921875
    9. ' ,' → logprob: -9.6044921875
    10. '<|end|>' → logprob: -9.8544921875

Token 359: ' K' (ID: 658)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10882897675037384
    2. ' L' → logprob: -2.8588290214538574
    3. 'call' → logprob: -3.9838290214538574
    4. 'K' → logprob: -4.233829021453857
    5. 'T' → logprob: -5.983829021453857
    6. 'current' → logprob: -6.233829021453857
    7. ' call' → logprob: -6.233829021453857
    8. 'M' → logprob: -6.358829021453857
    9. ' K' → logprob: -6.483829021453857
    10. ' ' → logprob: -7.983829021453857

Token 360: ' time' (ID: 1058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11054611206054688
    2. ' )' → logprob: -2.610546112060547
    3. '+' → logprob: -4.360546112060547
    4. ' +' → logprob: -4.485546112060547
    5. '*' → logprob: -6.235546112060547
    6. ' else' → logprob: -6.735546112060547
    7. ' *' → logprob: -6.860546112060547
    8. ' if' → logprob: -6.985546112060547
    9. ')
' → logprob: -7.985546112060547
    10. 'else' → logprob: -8.110546112060547

Token 361: ' units' (ID: 13306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14800770580768585
    2. ' if' → logprob: -2.02300763130188
    3. 'if' → logprob: -5.773007869720459
    4. '               ' → logprob: -6.523007869720459
    5. ',' → logprob: -8.5230073928833
    6. '       ' → logprob: -9.3980073928833
    7. ' +' → logprob: -9.5230073928833
    8. '+' → logprob: -9.7730073928833
    9. ')' → logprob: -10.0230073928833
    10. '          ' → logprob: -10.0230073928833

Token 362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043185990303754807
    2. ' if' → logprob: -3.2931859493255615
    3. ',' → logprob: -6.043186187744141
    4. '               ' → logprob: -7.293186187744141
    5. '<|end|>' → logprob: -7.793186187744141
    6. '       ' → logprob: -8.54318618774414
    7. '            ' → logprob: -8.54318618774414
    8. ' and' → logprob: -8.66818618774414
    9. ' ' → logprob: -8.79318618774414
    10. '          ' → logprob: -9.29318618774414

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05627437308430672
    2. ' if' → logprob: -2.9312744140625
    3. 'if' → logprob: -7.1812744140625
    4. ',' → logprob: -8.1812744140625
    5. '       ' → logprob: -8.6812744140625
    6. '```' → logprob: -9.9312744140625
    7. '               ' → logprob: -10.1812744140625
    8. '<|end|>' → logprob: -10.4312744140625
    9. '   ' → logprob: -11.6812744140625
    10. '            
' → logprob: -11.8062744140625

Token 364: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08012751489877701
    2. '           ' → logprob: -2.955127477645874
    3. 'if' → logprob: -3.705127477645874
    4. '       ' → logprob: -8.705127716064453
    5. ' ' → logprob: -9.580127716064453
    6. '   ' → logprob: -11.330127716064453
    7. ',' → logprob: -11.580127716064453
    8. ')' → logprob: -11.705127716064453
    9. '               ' → logprob: -11.955127716064453
    10. '            ' → logprob: -11.955127716064453

Token 365: ' If' (ID: 1843)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11505591124296188
    2. 'if' → logprob: -2.615055799484253
    3. '           ' → logprob: -3.365055799484253
    4. '       ' → logprob: -7.115056037902832
    5. '   ' → logprob: -9.865056037902832
    6. ' ' → logprob: -9.865056037902832
    7. '        ' → logprob: -11.865056037902832
    8. '    ' → logprob: -12.365056037902832
    9. '          ' → logprob: -12.490056037902832
    10. ' ' → logprob: -12.615056037902832

Token 366: ' they' (ID: 1023)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.6896293759346008
    2. 'current' → logprob: -0.9396293759346008
    3. ' current' → logprob: -2.939629316329956
    4. ' call' → logprob: -2.939629316329956
    5. 'deadline' → logprob: -7.439629554748535
    6. '(call' → logprob: -7.689629554748535
    7. '(current' → logprob: -8.439629554748535
    8. '   ' → logprob: -9.314629554748535
    9. ' (' → logprob: -9.689629554748535
    10. ' ' → logprob: -10.002129554748535

Token 367: ' still' (ID: 2928)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.21347902715206146
    2. ' call' → logprob: -1.8384790420532227
    3. 'current' → logprob: -4.713479042053223
    4. '_call' → logprob: -5.213479042053223
    5. '<' → logprob: -5.713479042053223
    6. '>=' → logprob: -5.838479042053223
    7. ' >=' → logprob: -6.838479042053223
    8. ' current' → logprob: -6.838479042053223
    9. '   ' → logprob: -6.838479042053223
    10. '[current' → logprob: -6.838479042053223

Token 368: ' have' (ID: 679)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5067429542541504
    2. 'call' → logprob: -1.7567429542541504
    3. '<=' → logprob: -2.7567429542541504
    4. ' <' → logprob: -3.0067429542541504
    5. '>=' → logprob: -3.8817429542541504
    6. ' call' → logprob: -4.38174295425415
    7. '_call' → logprob: -4.38174295425415
    8. '_time' → logprob: -4.50674295425415
    9. '[' → logprob: -4.88174295425415
    10. 'time' → logprob: -4.88174295425415

Token 369: ' not' (ID: 625)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.18996542692184448
    2. 'L' → logprob: -2.0649654865264893
    3. ' K' → logprob: -3.6899654865264893
    4. 'M' → logprob: -5.18996524810791
    5. ' L' → logprob: -5.31496524810791
    6. 'call' → logprob: -5.93996524810791
    7. 'not' → logprob: -6.06496524810791
    8. 'calls' → logprob: -6.56496524810791
    9. ' not' → logprob: -7.06496524810791
    10. ' retries' → logprob: -7.81496524810791

Token 370: ' been' (ID: 1339)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.38367122411727905
    2. 'K' → logprob: -2.383671283721924
    3. ' done' → logprob: -2.508671283721924
    4. 'called' → logprob: -3.508671283721924
    5. 'finished' → logprob: -3.758671283721924
    6. '_done' → logprob: -3.883671283721924
    7. ' K' → logprob: -4.633671283721924
    8. 'can' → logprob: -4.758671283721924
    9. 'L' → logprob: -5.008671283721924
    10. 'completed' → logprob: -5.258671283721924

Token 371: ' assigned' (ID: 21482)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.3188629746437073
    2. ' called' → logprob: -3.0688629150390625
    3. 'served' → logprob: -3.5688629150390625
    4. ' retr' → logprob: -3.8188629150390625
    5. 'done' → logprob: -3.8188629150390625
    6. 'completed' → logprob: -4.1938629150390625
    7. 'tr' → logprob: -4.1938629150390625
    8. 'given' → logprob: -4.3188629150390625
    9. 'retr' → logprob: -4.4438629150390625
    10. 'scheduled' → logprob: -4.6938629150390625

Token 372: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5983009338378906
    2. ',' → logprob: -1.2233009338378906
    3. 'and' → logprob: -2.7233009338378906
    4. ' ,' → logprob: -3.0983009338378906
    5. ' to' → logprob: -4.473300933837891
    6. 'to' → logprob: -4.598300933837891
    7. '           ' → logprob: -5.723300933837891
    8. '):
' → logprob: -6.098300933837891
    9. '       ' → logprob: -6.348300933837891
    10. ':
' → logprob: -6.473300933837891

Token 373: ' waiting' (ID: 12028)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.2404168844223022
    2. 'M' → logprob: -1.4904168844223022
    3. 'call' → logprob: -1.7404168844223022
    4. ' L' → logprob: -2.615417003631592
    5. ' M' → logprob: -2.990417003631592
    6. 'cid' → logprob: -3.240417003631592
    7. 'current' → logprob: -3.490417003631592
    8. 'K' → logprob: -3.990417003631592
    9. ' call' → logprob: -3.990417003631592
    10. ' not' → logprob: -4.115417003631592

Token 374: ' too' (ID: 3101)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.873644232749939
    2. 'and' → logprob: -1.623644232749939
    3. '_time' → logprob: -1.873644232749939
    4. '):' → logprob: -2.7486443519592285
    5. ',' → logprob: -3.1236443519592285
    6. 'time' → logprob: -3.6236443519592285
    7. 'for' → logprob: -3.9986443519592285
    8. ' for' → logprob: -4.7486443519592285
    9. '>' → logprob: -4.7486443519592285
    10. ':' → logprob: -4.8736443519592285

Token 375: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.053723711520433426
    2. ' long' → logprob: -3.9287238121032715
    3. 'early' → logprob: -4.0537238121032715
    4. 'soon' → logprob: -5.1787238121032715
    5. 'much' → logprob: -5.5537238121032715
    6. '>' → logprob: -6.6787238121032715
    7. 'and' → logprob: -6.8037238121032715
    8. '_long' → logprob: -7.3037238121032715
    9. ' much' → logprob: -7.8037238121032715
    10. ' early' → logprob: -7.9287238121032715

Token 376: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4321475625038147
    2. 'and' → logprob: -1.68214750289917
    3. '           ' → logprob: -2.30714750289917
    4. ',' → logprob: -3.30714750289917
    5. ':
' → logprob: -4.43214750289917
    6. ':' → logprob: -5.55714750289917
    7. ' if' → logprob: -5.68214750289917
    8. '   ' → logprob: -5.80714750289917
    9. '               ' → logprob: -6.05714750289917
    10. 'if' → logprob: -7.05714750289917

Token 377: ' schedule' (ID: 12262)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2866849899291992
    2. 'if' → logprob: -1.4116849899291992
    3. '           ' → logprob: -5.911684989929199
    4. '   ' → logprob: -6.786684989929199
    5. '       ' → logprob: -8.0366849899292
    6. 'continue' → logprob: -8.1616849899292
    7. ' continue' → logprob: -8.1616849899292
    8. ' heap' → logprob: -8.9116849899292
    9. 'heap' → logprob: -9.0366849899292
    10. '```' → logprob: -9.0366849899292

Token 378: ' retry' (ID: 45364)
  Prédit: ' retry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retry' → logprob: -1.325607180595398
    2. 'retry' → logprob: -1.325607180595398
    3. ' (' → logprob: -2.4506072998046875
    4. ' a' → logprob: -2.5756072998046875
    5. 'call' → logprob: -2.9506072998046875
    6. '(' → logprob: -2.9506072998046875
    7. '   ' → logprob: -3.8256072998046875
    8. ' for' → logprob: -4.0756072998046875
    9. '(cid' → logprob: -4.0756072998046875
    10. '(call' → logprob: -4.0756072998046875

Token 379: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04202365130186081
    2. ' if' → logprob: -3.4170236587524414
    3. '       ' → logprob: -5.417023658752441
    4. ',' → logprob: -6.417023658752441
    5. '<|end|>' → logprob: -7.542023658752441
    6. 'if' → logprob: -8.167023658752441
    7. '
' → logprob: -8.292023658752441
    8. '               ' → logprob: -8.417023658752441
    9. '```' → logprob: -8.917023658752441
    10. ' ' → logprob: -9.167023658752441

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4901905059814453
    2. '       ' → logprob: -1.9901905059814453
    3. '<|end|>' → logprob: -1.9901905059814453
    4. ' if' → logprob: -2.7401905059814453
    5. ' ' → logprob: -3.6151905059814453
    6. '   ' → logprob: -5.365190505981445
    7. ' 
' → logprob: -5.615190505981445
    8. ')' → logprob: -6.115190505981445
    9. ',' → logprob: -6.240190505981445
    10. '        ' → logprob: -6.490190505981445

Token 381: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32283663749694824
    2. ' if' → logprob: -1.4478366374969482
    3. ' ' → logprob: -4.197836875915527
    4. '       ' → logprob: -4.197836875915527
    5. '<|end|>' → logprob: -5.572836875915527
    6. 'if' (adapté à ' if') → logprob: -6.072836875915527
    7. '        ' → logprob: -6.572836875915527
    8. '            ' → logprob: -7.572836875915527
    9. ' ' → logprob: -7.947836875915527
    10. ' 
' → logprob: -7.947836875915527

Token 382: ' deadline' (ID: 30435)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5397341251373291
    2. ' current' → logprob: -1.414734125137329
    3. 'call' → logprob: -2.039734125137329
    4. ' call' → logprob: -3.164734125137329
    5. '   ' → logprob: -6.53973388671875
    6. ' ' → logprob: -9.16473388671875
    7. 'deadline' → logprob: -9.66473388671875
    8. '  ' → logprob: -9.91473388671875
    9. '(call' → logprob: -10.53973388671875
    10. '(current' → logprob: -10.53973388671875

Token 383: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5417636036872864
    2. '<' → logprob: -1.2917635440826416
    3. ' <=' → logprob: -2.2917635440826416
    4. '<=' → logprob: -3.1667635440826416
    5. '<int' → logprob: -9.416763305664062
    6. '==' → logprob: -10.166763305664062
    7. ')' → logprob: -10.791763305664062
    8. ' >=' → logprob: -11.041763305664062
    9. ' ==' → logprob: -11.041763305664062
    10. '[' → logprob: -11.291763305664062

Token 384: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07889298349618912
    2. ' current' → logprob: -2.578892946243286
    3. '=current' → logprob: -14.203892707824707
    4. '(current' → logprob: -14.328892707824707
    5. '
' → logprob: -14.453892707824707
    6. '	current' → logprob: -15.203892707824707
    7. 'urrent' → logprob: -15.328892707824707
    8. '[current' → logprob: -15.328892707824707
    9. '$current' → logprob: -15.328892707824707
    10. ' ' → logprob: -15.953892707824707

Token 385: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.843177233240567e-05
    2. '_' → logprob: -11.875018119812012
    3. 'time' → logprob: -12.000018119812012
    4. '_token' → logprob: -12.750018119812012
    5. ')' → logprob: -14.000018119812012
    6. 'Time' → logprob: -14.250018119812012
    7. '_t' → logprob: -15.625018119812012
    8. ' time' → logprob: -15.875018119812012
    9. '_call' → logprob: -16.125019073486328
    10. ' _' → logprob: -16.625019073486328

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3850862979888916
    2. ':
' → logprob: -1.5100862979888916
    3. '):' → logprob: -3.3850862979888916
    4. ' and' → logprob: -3.5100862979888916
    5. '):
' → logprob: -3.7600862979888916
    6. ')' → logprob: -5.6350860595703125
    7. '           ' → logprob: -5.8850860595703125
    8. '               ' → logprob: -6.5100860595703125
    9. ',' → logprob: -6.7600860595703125
    10. ' or' → logprob: -6.8850860595703125

Token 387: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015522181056439877
    2. '           ' → logprob: -4.390522003173828
    3. ' heap' → logprob: -7.265522003173828
    4. ',' → logprob: -7.390522003173828
    5. '                
' → logprob: -8.265522003173828
    6. ')' → logprob: -8.390522003173828
    7. ' continue' → logprob: -8.765522003173828
    8. ' if' → logprob: -9.015522003173828
    9. '                   ' → logprob: -9.140522003173828
    10. '<|end|>' → logprob: -9.265522003173828

Token 388: ' #' (ID: 1069)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.175382375717163
    2. 'heap' → logprob: -1.175382375717163
    3. ' if' → logprob: -1.300382375717163
    4. 'if' → logprob: -2.925382375717163
    5. '                   ' → logprob: -4.550382614135742
    6. '               ' → logprob: -4.800382614135742
    7. ' continue' → logprob: -5.050382614135742
    8. '           ' → logprob: -5.425382614135742
    9. ' None' → logprob: -5.675382614135742
    10. 'continue' → logprob: -5.675382614135742

Token 389: ' The' (ID: 623)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4921986162662506
    2. 'if' → logprob: -1.2421985864639282
    3. ' if' → logprob: -2.9921987056732178
    4. ' heap' → logprob: -4.367198467254639
    5. '                   ' → logprob: -4.492198467254639
    6. '               ' → logprob: -4.617198467254639
    7. '           ' → logprob: -5.117198467254639
    8. 'retry' → logprob: -5.617198467254639
    9. '   ' → logprob: -5.742198467254639
    10. 'call' → logprob: -7.617198467254639

Token 390: ' caller' (ID: 36997)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.890221893787384
    2. ' if' → logprob: -1.3902218341827393
    3. ' next' → logprob: -2.3902218341827393
    4. ' heap' → logprob: -2.5152218341827393
    5. 'heap' → logprob: -3.2652218341827393
    6. ' retry' → logprob: -3.3902218341827393
    7. 'next' → logprob: -3.6402218341827393
    8. 'retry' → logprob: -3.8902218341827393
    9. '#' → logprob: -5.015222072601318
    10. 'time' → logprob: -5.015222072601318

Token 391: ' hung' (ID: 46729)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' will' → logprob: -1.994704246520996
    2. ' can' → logprob: -2.119704246520996
    3. ' retries' → logprob: -2.119704246520996
    4. ' calls' → logprob: -2.369704246520996
    5. ' tries' → logprob: -2.619704246520996
    6. ',' → logprob: -2.744704246520996
    7. 'tries' → logprob: -3.494704246520996
    8. 'calls' → logprob: -3.619704246520996
    9. '_calls' → logprob: -3.744704246520996
    10. ')' → logprob: -3.744704246520996

Token 392: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.48697417974472046
    2. ' up' → logprob: -0.9869741797447205
    3. '_up' → logprob: -4.361974239349365
    4. '   ' → logprob: -11.486973762512207
    5. '-up' → logprob: -11.486973762512207
    6. '	up' → logprob: -11.736973762512207
    7. '           ' → logprob: -11.986973762512207
    8. ' ' → logprob: -12.111973762512207
    9. '       ' → logprob: -12.361973762512207
    10. '
' → logprob: -12.861973762512207

Token 393: ' at' (ID: 540)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9842272996902466
    2. ' and' → logprob: -1.2342272996902466
    3. '               ' → logprob: -1.2342272996902466
    4. '                   ' → logprob: -3.984227180480957
    5. ')' → logprob: -5.109227180480957
    6. ' ,' → logprob: -5.234227180480957
    7. 'and' → logprob: -5.484227180480957
    8. '
' → logprob: -6.484227180480957
    9. ' if' → logprob: -6.609227180480957
    10. '           ' → logprob: -6.734227180480957

Token 394: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.15938825905323029
    2. 'current' → logprob: -2.534388303756714
    3. 'call' → logprob: -2.909388303756714
    4. ' deadline' → logprob: -4.909388065338135
    5. ' current' → logprob: -5.534388065338135
    6. ' call' → logprob: -6.659388065338135
    7. 'dead' → logprob: -8.034388542175293
    8. ' ' → logprob: -8.659388542175293
    9. '(dead' → logprob: -9.534388542175293
    10. '   ' → logprob: -9.659388542175293

Token 395: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14978624880313873
    2. '
' → logprob: -3.0247862339019775
    3. ',' → logprob: -3.2747862339019775
    4. '                   ' → logprob: -3.7747862339019775
    5. ')' → logprob: -4.774786472320557
    6. ' and' → logprob: -4.774786472320557
    7. '           ' → logprob: -5.399786472320557
    8. '                
' → logprob: -6.024786472320557
    9. '                    
' → logprob: -6.774786472320557
    10. ',
' → logprob: -7.149786472320557

Token 396: ' will' (ID: 738)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2344944477081299
    2. 'heap' → logprob: -1.2344944477081299
    3. ' heap' → logprob: -1.2344944477081299
    4. 'if' → logprob: -2.60949444770813
    5. '                   ' → logprob: -3.23449444770813
    6. '               ' → logprob: -4.859494209289551
    7. '                       ' → logprob: -6.859494209289551
    8. ' retry' → logprob: -7.109494209289551
    9. '           ' → logprob: -7.359494209289551
    10. '   ' → logprob: -7.484494209289551

Token 397: ' retry' (ID: 45364)
  Prédit: 'retry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'retry' → logprob: -0.5160849690437317
    2. 'heap' → logprob: -1.266084909439087
    3. ' retry' → logprob: -2.766084909439087
    4. 'call' → logprob: -3.766084909439087
    5. ' heap' → logprob: -3.766084909439087
    6. 'schedule' → logprob: -6.266085147857666
    7. 're' → logprob: -6.641085147857666
    8. '   ' → logprob: -6.641085147857666
    9. '_retry' → logprob: -6.641085147857666
    10. 'try' → logprob: -6.891085147857666

Token 398: ' at' (ID: 540)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.151692271232605
    2. 'heap' → logprob: -1.276692271232605
    3. ' heap' → logprob: -1.776692271232605
    4. ',' → logprob: -2.5266923904418945
    5. ' if' → logprob: -2.9016923904418945
    6. '               ' → logprob: -3.5266923904418945
    7. '
' → logprob: -3.9016923904418945
    8. 'if' → logprob: -4.6516923904418945
    9. '(heap' → logprob: -4.6516923904418945
    10. ')' → logprob: -5.0266923904418945

Token 399: ' deadline' (ID: 30435)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.37321457266807556
    2. 'call' → logprob: -1.873214602470398
    3. ' current' → logprob: -2.1232144832611084
    4. 'deadline' → logprob: -3.8732144832611084
    5. ' call' → logprob: -4.1232147216796875
    6. ' deadline' → logprob: -7.3732147216796875
    7. '   ' → logprob: -8.248214721679688
    8. '(current' → logprob: -9.123214721679688
    9. 'dead' → logprob: -9.873214721679688
    10. '(call' → logprob: -10.498214721679688

Token 400: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8047794103622437
    2. '+' → logprob: -0.9297794103622437
    3. ')
' → logprob: -2.679779529571533
    4. ',' → logprob: -3.054779529571533
    5. ')' → logprob: -3.429779529571533
    6. '               ' → logprob: -5.304779529571533
    7. '),' → logprob: -6.304779529571533
    8. ',
' → logprob: -7.804779529571533
    9. '
' → logprob: -7.929779529571533
    10. '           ' → logprob: -7.929779529571533

Token 401: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00043949027894996107
    2. ' K' → logprob: -7.750439643859863
    3. '1' → logprob: -12.250439643859863
    4. '+' → logprob: -14.000439643859863
    5. '
' → logprob: -14.000439643859863
    6. 'k' → logprob: -14.625439643859863
    7. ' ' → logprob: -14.875439643859863
    8. '0' → logprob: -15.125439643859863
    9. '```' → logprob: -15.625439643859863
    10. '   ' → logprob: -15.750439643859863

Token 402: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6757053732872009
    2. ')' → logprob: -1.5507054328918457
    3. '                   ' → logprob: -2.1757054328918457
    4. ',' → logprob: -2.3007054328918457
    5. '           ' → logprob: -3.6757054328918457
    6. 'heap' → logprob: -4.800705432891846
    7. '):' → logprob: -5.300705432891846
    8. '                       ' → logprob: -5.425705432891846
    9. ',
' → logprob: -5.425705432891846
    10. '):
' → logprob: -5.800705432891846

Token 403: ' not' (ID: 625)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.0022913292050361633
    2. ' deadline' → logprob: -6.252291202545166
    3. '(dead' → logprob: -8.877291679382324
    4. 'K' → logprob: -9.377291679382324
    5. 'dead' → logprob: -9.502291679382324
    6. 'call' → logprob: -11.002291679382324
    7. ' K' → logprob: -11.252291679382324
    8. 'L' → logprob: -11.877291679382324
    9. '   ' → logprob: -12.377291679382324
    10. 'M' → logprob: -13.252291679382324

Token 404: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.2758881449699402
    2. ' done' → logprob: -1.900888204574585
    3. ' K' → logprob: -4.025887966156006
    4. 'K' → logprob: -4.025887966156006
    5. 'assigned' → logprob: -5.150887966156006
    6. 'deadline' → logprob: -5.275887966156006
    7. ' None' → logprob: -5.650887966156006
    8. ' assigned' → logprob: -5.650887966156006
    9. ' waiting' → logprob: -5.775887966156006
    10. 'None' → logprob: -5.775887966156006

Token 405: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2622358500957489
    2. ')' → logprob: -1.8872358798980713
    3. '                   ' → logprob: -3.1372358798980713
    4. ')
' → logprob: -4.262235641479492
    5. '           ' → logprob: -5.137235641479492
    6. ',' → logprob: -5.637235641479492
    7. '
' → logprob: -5.887235641479492
    8. '):
' → logprob: -6.012235641479492
    9. '):' → logprob: -6.262235641479492
    10. '                
' → logprob: -7.012235641479492

Token 406: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0715789943933487
    2. '                   ' → logprob: -3.0715789794921875
    3. ')' → logprob: -3.9465789794921875
    4. '           ' → logprob: -7.0715789794921875
    5. '                
' → logprob: -7.8215789794921875
    6. ',' → logprob: -8.196578979492188
    7. '                       ' → logprob: -8.196578979492188
    8. '                    
' → logprob: -8.446578979492188
    9. '):
' → logprob: -8.696578979492188
    10. '                ' → logprob: -8.946578979492188

Token 407: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7769200205802917
    2. 'heap' → logprob: -0.7769200205802917
    3. ' if' → logprob: -3.0269200801849365
    4. '                   ' → logprob: -3.7769200801849365
    5. ' heap' → logprob: -5.276919841766357
    6. '               ' → logprob: -6.026919841766357
    7. '                       ' → logprob: -7.526919841766357
    8. '   ' → logprob: -8.276920318603516
    9. '           ' → logprob: -8.276920318603516
    10. '
' → logprob: -9.901920318603516

Token 408: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2583099901676178
    2. ' not' → logprob: -1.5083099603652954
    3. 'done' → logprob: -5.383309841156006
    4. '   ' → logprob: -8.008310317993164
    5. 'can' → logprob: -8.383310317993164
    6. 'M' → logprob: -8.508310317993164
    7. 'call' → logprob: -8.508310317993164
    8. ' done' → logprob: -8.758310317993164
    9. '           ' → logprob: -9.008310317993164
    10. '(not' → logprob: -9.883310317993164

Token 409: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.005931878462433815
    2. ' done' → logprob: -5.130931854248047
    3. '	done' → logprob: -13.630931854248047
    4. '   ' → logprob: -14.505931854248047
    5. '(done' → logprob: -14.755931854248047
    6. 'Done' → logprob: -15.380931854248047
    7. 'can' → logprob: -15.755931854248047
    8. '```' → logprob: -16.255931854248047
    9. '.done' → logprob: -16.505931854248047
    10. 'don' → logprob: -16.505931854248047

Token 410: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. '(cid' → logprob: -16.25
    4. '```' → logprob: -16.5
    5. '[i' → logprob: -18.0
    6. 'cid' → logprob: -19.0
    7. ']' → logprob: -19.25
    8. '][' → logprob: -20.0
    9. '\[' → logprob: -20.125
    10. '

' → logprob: -20.5

Token 411: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.053353771567344666
    2. '[id' → logprob: -3.553353786468506
    3. '[c' → logprob: -3.928353786468506
    4. '[' → logprob: -6.178353786468506
    5. 'cid' → logprob: -6.678353786468506
    6. '(cid' → logprob: -9.428353309631348
    7. '_id' → logprob: -9.553353309631348
    8. '[i' → logprob: -10.303353309631348
    9. ']' → logprob: -10.678353309631348
    10. '```' → logprob: -11.053353309631348

Token 412: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3442724943161011
    2. ']:' → logprob: -1.594272494316101
    3. ']' → logprob: -2.9692726135253906
    4. '):
' → logprob: -3.5942726135253906
    5. '):' → logprob: -5.344272613525391
    6. ' and' → logprob: -6.719272613525391
    7. ']):
' → logprob: -6.969272613525391
    8. ')' → logprob: -7.594272613525391
    9. ']):' → logprob: -7.969272613525391
    10. ')]' → logprob: -8.21927261352539

Token 413: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020762719213962555
    2. '                       ' → logprob: -4.770762920379639
    3. 'heap' → logprob: -5.395762920379639
    4. ' heap' → logprob: -5.895762920379639
    5. '               ' → logprob: -6.645762920379639
    6. ')' → logprob: -7.020762920379639
    7. '                           ' → logprob: -7.520762920379639
    8. ',' → logprob: -7.645762920379639
    9. '(heap' → logprob: -7.895762920379639
    10. '):
' → logprob: -7.895762920379639

Token 414: ' next' (ID: 2613)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.011448721401393414
    2. ' heap' → logprob: -4.511448860168457
    3. '                       ' → logprob: -8.136448860168457
    4. '                   ' → logprob: -9.386448860168457
    5. '(heap' → logprob: -11.761448860168457
    6. '   ' → logprob: -12.636448860168457
    7. '                           ' → logprob: -12.886448860168457
    8. ')' → logprob: -13.386448860168457
    9. '               ' → logprob: -13.636448860168457
    10. 'he' → logprob: -13.886448860168457

Token 415: '_call' (ID: 25158)
  Prédit: '_call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_call' → logprob: -0.018697192892432213
    2. '_retry' → logprob: -4.518697261810303
    3. 'call' → logprob: -5.643697261810303
    4. '_time' → logprob: -6.018697261810303
    5. 'retry' → logprob: -6.518697261810303
    6. '_attempt' → logprob: -10.018696784973145
    7. 'Call' → logprob: -10.143696784973145
    8. 'time' → logprob: -10.893696784973145
    9. '_re' → logprob: -11.393696784973145
    10. '
' → logprob: -11.893696784973145

Token 416: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.13334804773330688
    2. 'time' → logprob: -2.508347988128662
    3. '=' → logprob: -3.383347988128662
    4. ',' → logprob: -5.883347988128662
    5. 't' → logprob: -6.008347988128662
    6. ' =' → logprob: -6.008347988128662
    7. '_t' → logprob: -7.508347988128662
    8. 'Time' → logprob: -7.508347988128662
    9. '   ' → logprob: -9.00834846496582
    10. ')' → logprob: -9.00834846496582

Token 417: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.021516121923923492
    2. '(dead' → logprob: -4.0215163230896
    3. ' deadline' → logprob: -6.2715163230896
    4. 'dead' → logprob: -6.7715163230896
    5. '(' → logprob: -8.896515846252441
    6. ' (' → logprob: -9.271515846252441
    7. '   ' → logprob: -10.396515846252441
    8. 'heap' → logprob: -10.396515846252441
    9. '(de' → logprob: -12.521515846252441
    10. ' dead' → logprob: -12.646515846252441

Token 418: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47444039583206177
    2. ' +' → logprob: -0.9744403958320618
    3. ',' → logprob: -8.349440574645996
    4. ',K' → logprob: -10.099440574645996
    5. '+,' → logprob: -10.349440574645996
    6. '+k' → logprob: -10.974440574645996
    7. '+C' → logprob: -11.099440574645996
    8. '+
' → logprob: -11.599440574645996
    9. ' ,' → logprob: -12.099440574645996
    10. ' +
' → logprob: -13.849440574645996

Token 419: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -7.660315895918757e-05
    2. ' K' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.875076293945312
    4. ' ' → logprob: -15.250076293945312
    5. '0' → logprob: -16.250076293945312
    6. '(' → logprob: -16.500076293945312
    7. 'k' → logprob: -16.750076293945312
    8. '1' → logprob: -16.875076293945312
    9. '  ' → logprob: -17.000076293945312
    10. '	K' → logprob: -17.250076293945312

Token 420: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.055468447506427765
    2. ',' → logprob: -3.5554685592651367
    3. '
' → logprob: -4.555468559265137
    4. 'heap' → logprob: -5.555468559265137
    5. ',
' → logprob: -5.805468559265137
    6. ')
' → logprob: -5.930468559265137
    7. ')' → logprob: -6.305468559265137
    8. '           ' → logprob: -6.805468559265137
    9. '               ' → logprob: -6.930468559265137
    10. ' heap' → logprob: -7.805468559265137

Token 421: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2516809105873108
    2. 'heap' → logprob: -2.001680850982666
    3. ')' → logprob: -2.876680850982666
    4. ' heap' → logprob: -4.251680850982666
    5. '(heap' → logprob: -5.001680850982666
    6. ',' → logprob: -5.626680850982666
    7. '               ' → logprob: -6.126680850982666
    8. ')
' → logprob: -6.376680850982666
    9. '           ' → logprob: -7.376680850982666
    10. '),' → logprob: -7.501680850982666

Token 422: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.022018281742930412
    2. '                   ' → logprob: -4.2720184326171875
    3. ' heap' → logprob: -4.8970184326171875
    4. '                       ' → logprob: -9.272018432617188
    5. '           ' → logprob: -9.397018432617188
    6. '               ' → logprob: -9.647018432617188
    7. '   ' → logprob: -9.772018432617188
    8. '       ' → logprob: -10.647018432617188
    9. '(heap' → logprob: -11.397018432617188
    10. '                           ' → logprob: -11.772018432617188

Token 423: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.009887122549116611
    2. ' next' → logprob: -4.634887218475342
    3. 'new' → logprob: -9.759886741638184
    4. 'len' → logprob: -11.134886741638184
    5. '   ' → logprob: -11.259886741638184
    6. 'not' → logprob: -11.509886741638184
    7. 'done' → logprob: -11.759886741638184
    8. 'current' → logprob: -11.759886741638184
    9. '(next' → logprob: -12.634886741638184
    10. '	next' → logprob: -12.884886741638184

Token 424: '_call' (ID: 25158)
  Prédit: '_call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_call' → logprob: -0.00029387109680101275
    2. 'call' → logprob: -8.375293731689453
    3. 'next' → logprob: -10.375293731689453
    4. '==' → logprob: -12.250293731689453
    5. 'Call' → logprob: -12.250293731689453
    6. '[next' → logprob: -12.375293731689453
    7. '<=' → logprob: -12.875293731689453
    8. '_CALL' → logprob: -13.000293731689453
    9. '_calls' → logprob: -13.125293731689453
    10. '#' → logprob: -13.250293731689453

Token 425: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08278287947177887
    2. '<=' → logprob: -2.9577829837799072
    3. ' <' → logprob: -3.7077829837799072
    4. '<' → logprob: -5.832782745361328
    5. ')' → logprob: -10.957782745361328
    6. '   ' → logprob: -11.582782745361328
    7. ' ' → logprob: -12.582782745361328
    8. '[' → logprob: -12.957782745361328
    9. ')<=' → logprob: -12.957782745361328
    10. ' >=' → logprob: -13.207782745361328

Token 426: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -3.881560041918419e-05
    2. ' T' → logprob: -10.375039100646973
    3. 'current' → logprob: -12.875039100646973
    4. '   ' → logprob: -13.000039100646973
    5. ' ' → logprob: -14.250039100646973
    6. '
' → logprob: -14.625039100646973
    7. '
' → logprob: -14.875039100646973
    8. '  ' → logprob: -15.500039100646973
    9. '

' → logprob: -15.625039100646973
    10. 't' → logprob: -16.125038146972656

Token 427: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19235239923000336
    2. ':' → logprob: -1.8173524141311646
    3. '                       ' → logprob: -4.692352294921875
    4. '):
' → logprob: -6.317352294921875
    5. '                   ' → logprob: -7.067352294921875
    6. ' :
' → logprob: -8.567352294921875
    7. ':
' → logprob: -8.817352294921875
    8. '):' → logprob: -9.067352294921875
    9. ':

' → logprob: -10.067352294921875
    10. ' :' → logprob: -10.442352294921875

Token 428: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02563043311238289
    2. ' heap' → logprob: -4.025630474090576
    3. 'heap' → logprob: -5.025630474090576
    4. '                   ' → logprob: -8.025629997253418
    5. '                           ' → logprob: -9.525629997253418
    6. '   ' → logprob: -9.525629997253418
    7. '(heap' → logprob: -9.650629997253418
    8. '                        
' → logprob: -9.775629997253418
    9. ',' → logprob: -10.025629997253418
    10. '               ' → logprob: -10.275629997253418

Token 429: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.05509834736585617
    2. ' heap' → logprob: -3.055098295211792
    3. '                           ' → logprob: -5.555098533630371
    4. '                       ' → logprob: -6.180098533630371
    5. '   ' → logprob: -7.930098533630371
    6. '                   ' → logprob: -9.180098533630371
    7. '           ' → logprob: -10.430098533630371
    8. '               ' → logprob: -10.930098533630371
    9. '                               ' → logprob: -11.305098533630371
    10. ' ' → logprob: -12.180098533630371

Token 430: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.943783253314905e-05
    2. '.he' → logprob: -9.750059127807617
    3. '.heap' → logprob: -14.500059127807617
    4. 'he' → logprob: -15.625059127807617
    5. 'app' → logprob: -16.000059127807617
    6. 'h' → logprob: -16.250059127807617
    7. 'heap' → logprob: -16.625059127807617
    8. 'p' → logprob: -17.250059127807617
    9. '.q' → logprob: -17.375059127807617
    10. '```' → logprob: -17.500059127807617

Token 431: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00011319868644932285
    2. 'he' → logprob: -9.250113487243652
    3. '.heap' → logprob: -11.625113487243652
    4. '.' → logprob: -12.875113487243652
    5. 'heap' → logprob: -13.500113487243652
    6. '.push' → logprob: -13.625113487243652
    7. 'push' → logprob: -13.750113487243652
    8. 'app' → logprob: -14.375113487243652
    9. 'ush' → logprob: -14.500113487243652
    10. ' .' → logprob: -15.625113487243652

Token 432: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.4498052223643754e-05
    2. 'pp' → logprob: -11.625014305114746
    3. 'ap' → logprob: -12.125014305114746
    4. 'push' → logprob: -17.250015258789062
    5. 'appen' → logprob: -18.625015258789062
    6. 'a' → logprob: -18.750015258789062
    7. '```' → logprob: -18.875015258789062
    8. '[' → logprob: -18.875015258789062
    9. 'App' → logprob: -19.000015258789062
    10. '...' → logprob: -19.250015258789062

Token 433: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00014120421838015318
    2. 'push' → logprob: -9.125141143798828
    3. 'op' → logprob: -11.500141143798828
    4. 'p' → logprob: -11.500141143798828
    5. 'app' → logprob: -12.125141143798828
    6. 'pp' → logprob: -13.375141143798828
    7. 'u' → logprob: -13.625141143798828
    8. 'sh' → logprob: -13.875141143798828
    9. '```' → logprob: -13.875141143798828
    10. 'e' → logprob: -15.375141143798828

Token 434: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. 'calls' → logprob: -14.500001907348633
    4. ' calls' → logprob: -17.625001907348633
    5. 'c' → logprob: -18.875001907348633
    6. '(call' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '(C' → logprob: -19.750001907348633
    9. '	c' → logprob: -19.875001907348633
    10. '(commands' → logprob: -20.125001907348633

Token 435: 'alls' (ID: 6539)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.18095409870147705
    2. 'alls' → logprob: -1.805954098701477
    3. 'c' → logprob: -7.8059539794921875
    4. ' calls' → logprob: -7.9309539794921875
    5. 'all' → logprob: -8.305953979492188
    6. '(c' → logprob: -9.305953979492188
    7. '_calls' → logprob: -10.805953979492188
    8. '.calls' → logprob: -10.805953979492188
    9. ')' → logprob: -11.555953979492188
    10. '(' → logprob: -11.680953979492188

Token 436: ',' (ID: 11)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.0005747079849243
    2. ',' → logprob: -1.1255747079849243
    3. '(' → logprob: -1.5005747079849243
    4. '(c' → logprob: -2.5005745887756348
    5. ' (' → logprob: -6.750574588775635
    6. ',c' → logprob: -7.500574588775635
    7. ',next' → logprob: -8.500575065612793
    8. '((' → logprob: -8.625575065612793
    9. ' ,' → logprob: -8.625575065612793
    10. ',(' → logprob: -9.000575065612793

Token 437: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0004595055361278355
    2. '(' → logprob: -8.000459671020508
    3. ' (' → logprob: -9.000459671020508
    4. '[next' → logprob: -14.250459671020508
    5. ')' → logprob: -17.125459671020508
    6. '(new' → logprob: -17.500459671020508
    7. ',next' → logprob: -17.875459671020508
    8. 'next' → logprob: -17.875459671020508
    9. '((' → logprob: -18.250459671020508
    10. '   ' → logprob: -18.625459671020508

Token 438: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.003178782993927598
    2. ' next' → logprob: -5.753178596496582
    3. '(next' → logprob: -14.378178596496582
    4. '[next' → logprob: -15.003178596496582
    5. '	next' → logprob: -16.8781795501709
    6. '_next' → logprob: -17.8781795501709
    7. ',next' → logprob: -19.6281795501709
    8. '.next' → logprob: -19.8781795501709
    9. '                               ' → logprob: -20.1281795501709
    10. '
' → logprob: -20.7531795501709

Token 439: '_call' (ID: 25158)
  Prédit: '_call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_call' → logprob: -2.176947600673884e-05
    2. 'call' → logprob: -10.875021934509277
    3. '_CALL' → logprob: -13.750021934509277
    4. '_calls' → logprob: -15.125021934509277
    5. '_wait' → logprob: -15.375021934509277
    6. 'Call' → logprob: -15.500021934509277
    7. '.call' → logprob: -15.875021934509277
    8. '_' → logprob: -16.25002098083496
    9. '_c' → logprob: -16.50002098083496
    10. ' call' → logprob: -16.50002098083496

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.386147626675665e-05
    2. ',c' → logprob: -10.000073432922363
    3. ' ,' → logprob: -10.500073432922363
    4. ',
' → logprob: -15.125073432922363
    5. '‌,' → logprob: -15.125073432922363
    6. '(cid' → logprob: -16.00007438659668
    7. '),' → logprob: -16.25007438659668
    8. '```' → logprob: -16.87507438659668
    9. '`,' → logprob: -17.12507438659668
    10. ',id' → logprob: -17.25007438659668

Token 441: ' cid' (ID: 55379)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -0.0013309523928910494
    2. ' cid' → logprob: -6.626330852508545
    3. '(cid' → logprob: -12.626331329345703
    4. '   ' → logprob: -15.001331329345703
    5. 'cit' → logprob: -15.001331329345703
    6. 'ci' → logprob: -15.126331329345703
    7. '.cid' → logprob: -15.251331329345703
    8. 'c' → logprob: -15.751331329345703
    9. '
' → logprob: -16.501331329345703
    10. ' ' → logprob: -16.501331329345703

Token 442: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00418061763048172
    2. '))
' → logprob: -5.629180431365967
    3. ')' → logprob: -7.879180431365967
    4. ' ))' → logprob: -9.629180908203125
    5. '                       ' → logprob: -10.004180908203125
    6. ',' → logprob: -10.004180908203125
    7. '                   ' → logprob: -11.129180908203125
    8. ')))' → logprob: -11.879180908203125
    9. '                           ' → logprob: -12.629180908203125
    10. '));' → logprob: -12.879180908203125

Token 443: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43679967522621155
    2. '                   ' → logprob: -2.0617997646331787
    3. '               ' → logprob: -2.1867997646331787
    4. '           ' → logprob: -2.3117997646331787
    5. '                       ' → logprob: -4.5617995262146
    6. '<|end|>' → logprob: -6.9367995262146
    7. '```' → logprob: -7.3117995262146
    8. ' )' → logprob: -7.3117995262146
    9. '                           ' → logprob: -7.4367995262146
    10. ')
' → logprob: -7.6867995262146

Token 444: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.197849839925766
    2. '               ' → logprob: -2.072849750518799
    3. ' continue' → logprob: -3.822849750518799
    4. 'continue' → logprob: -4.322849750518799
    5. ' else' → logprob: -4.822849750518799
    6. 'else' → logprob: -5.197849750518799
    7. '       ' → logprob: -6.447849750518799
    8. '                   ' → logprob: -7.072849750518799
    9. '	continue' → logprob: -7.697849750518799
    10. '	       ' → logprob: -7.947849750518799

Token 445: ' else' (ID: 1203)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.26553037762641907
    2. ' continue' → logprob: -2.2655303478240967
    3. 'else' → logprob: -2.7655303478240967
    4. '           ' → logprob: -3.3905303478240967
    5. ' else' → logprob: -3.8905303478240967
    6. '               ' → logprob: -4.640530586242676
    7. '                   ' → logprob: -6.890530586242676
    8. '       ' → logprob: -7.140530586242676
    9. '   ' → logprob: -7.515530586242676
    10. ' new' → logprob: -9.515530586242676

Token 446: ' done' (ID: 4167)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5275920629501343
    2. 'continue' → logprob: -0.9025920629501343
    3. '                   ' → logprob: -6.652592182159424
    4. '   ' → logprob: -6.652592182159424
    5. ':
' → logprob: -7.652592182159424
    6. ':' → logprob: -7.777592182159424
    7. '           ' → logprob: -8.277591705322266
    8. '               ' → logprob: -8.402591705322266
    9. ' new' → logprob: -8.777591705322266
    10. ' done' → logprob: -10.027591705322266

Token 447: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3949892818927765
    2. 'continue' → logprob: -1.519989252090454
    3. '           ' → logprob: -3.269989252090454
    4. ':' → logprob: -3.644989252090454
    5. '                   ' → logprob: -3.769989252090454
    6. '               ' → logprob: -4.269989490509033
    7. ':
' → logprob: -5.644989490509033
    8. ' continues' → logprob: -6.894989490509033
    9. ',' → logprob: -7.644989490509033
    10. '       ' → logprob: -8.769989013671875

Token 448: ' retry' (ID: 45364)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1547974944114685
    2. 'continue' → logprob: -2.2797975540161133
    3. 'w' → logprob: -4.279797554016113
    4. ' continue' → logprob: -4.654797554016113
    5. ' longer' → logprob: -5.154797554016113
    6. 'n' → logprob: -5.404797554016113
    7. 'ne' → logprob: -5.779797554016113
    8. 'long' → logprob: -7.029797554016113
    9. 'pass' → logprob: -7.029797554016113
    10. ' action' → logprob: -7.779797554016113

Token 449: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23953619599342346
    2. '               ' → logprob: -1.614536166191101
    3. '<|end|>' → logprob: -4.989536285400391
    4. ' continue' → logprob: -6.114536285400391
    5. ' else' → logprob: -6.239536285400391
    6. 'continue' → logprob: -7.114536285400391
    7. '       ' → logprob: -7.614536285400391
    8. ' continues' → logprob: -7.989536285400391
    9. '                   ' → logprob: -7.989536285400391
    10. 'else' → logprob: -8.23953628540039

Token 450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13342629373073578
    2. '               ' → logprob: -2.1334261894226074
    3. '       ' → logprob: -6.758426189422607
    4. ' continue' → logprob: -6.883426189422607
    5. '```' → logprob: -6.883426189422607
    6. ' else' → logprob: -7.383426189422607
    7. '                   ' → logprob: -7.508426189422607
    8. '<|end|>' → logprob: -7.633426189422607
    9. ')' → logprob: -8.008426666259766
    10. 'continue' → logprob: -8.008426666259766

Token 451: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6589798927307129
    2. ' else' → logprob: -0.7839798927307129
    3. 'else' (adapté à ' else') → logprob: -4.158979892730713
    4. '       ' → logprob: -4.658979892730713
    5. '   ' → logprob: -8.658979415893555
    6. '               ' → logprob: -8.783979415893555
    7. '	else' → logprob: -8.908979415893555
    8. '	       ' → logprob: -9.283979415893555
    9. '<|end|>' → logprob: -9.908979415893555
    10. ' ' → logprob: -9.908979415893555

Token 452: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6357938051223755
    2. ':' → logprob: -1.2607938051223755
    3. ':
' → logprob: -1.7607938051223755
    4. '           ' → logprob: -4.385793685913086
    5. ' heap' → logprob: -7.010793685913086
    6. ',' → logprob: -7.885793685913086
    7. '                   ' → logprob: -8.260793685913086
    8. '(heap' → logprob: -8.760793685913086
    9. ' :
' → logprob: -8.885793685913086
    10. '       ' → logprob: -9.010793685913086

Token 453: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.512801468372345
    2. '           ' → logprob: -1.3878014087677002
    3. ' heap' → logprob: -2.5128014087677
    4. 'heap' → logprob: -2.8878014087677
    5. '                   ' → logprob: -5.012801647186279
    6. '(heap' → logprob: -6.262801647186279
    7. '   ' → logprob: -6.262801647186279
    8. '	           ' → logprob: -7.387801647186279
    9. '                       ' → logprob: -7.512801647186279
    10. '       ' → logprob: -7.512801647186279

Token 454: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.382902055978775
    2. ' heap' → logprob: -1.5079020261764526
    3. '               ' → logprob: -2.382902145385742
    4. '           ' → logprob: -6.007902145385742
    5. '                   ' → logprob: -7.007902145385742
    6. '   ' → logprob: -7.257902145385742
    7. '(heap' → logprob: -8.632902145385742
    8. ' ' → logprob: -9.382902145385742
    9. '       ' → logprob: -10.132902145385742
    10. '.heap' → logprob: -10.507902145385742

Token 455: ' Still' (ID: 25758)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.005949064157903194
    2. ' heap' → logprob: -5.130949020385742
    3. '   ' → logprob: -10.880949020385742
    4. '           ' → logprob: -14.755949020385742
    5. 'he' → logprob: -15.130949020385742
    6. '(heap' → logprob: -15.380949020385742
    7. ' ' → logprob: -15.630949020385742
    8. 'Heap' → logprob: -16.255949020385742
    9. '```' → logprob: -16.380949020385742
    10. '.heap' → logprob: -16.380949020385742

Token 456: ' waiting' (ID: 12028)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.01721205562353134
    2. ' heap' → logprob: -4.8922119140625
    3. '                   ' → logprob: -5.3922119140625
    4. '           ' → logprob: -5.8922119140625
    5. '               ' → logprob: -6.2672119140625
    6. '(heap' → logprob: -8.7672119140625
    7. 'he' → logprob: -9.1422119140625
    8. 'import' → logprob: -10.8922119140625
    9. '                       ' → logprob: -11.3922119140625
    10. '   ' → logprob: -11.3922119140625

Token 457: ',' (ID: 11)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.542445719242096
    2. 'heap' → logprob: -1.9174456596374512
    3. '                   ' → logprob: -2.292445659637451
    4. '               ' → logprob: -2.292445659637451
    5. ',' → logprob: -2.917445659637451
    6. '(heap' → logprob: -4.667445659637451
    7. '           ' → logprob: -5.917445659637451
    8. ' ,' → logprob: -6.917445659637451
    9. ' (' → logprob: -7.042445659637451
    10. '   ' → logprob: -8.04244613647461

Token 458: ' push' (ID: 9349)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6171649694442749
    2. ' heap' → logprob: -0.8671649694442749
    3. '               ' → logprob: -3.4921650886535645
    4. '                   ' → logprob: -4.8671650886535645
    5. '           ' → logprob: -6.3671650886535645
    6. '   ' → logprob: -7.8671650886535645
    7. '       ' → logprob: -10.367164611816406
    8. '(heap' → logprob: -10.867164611816406
    9. ' ' → logprob: -10.992164611816406
    10. '                ' → logprob: -10.992164611816406

Token 459: ' back' (ID: 1602)
  Prédit: '(wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(wait' → logprob: -0.04623016342520714
    2. '(' → logprob: -3.6712300777435303
    3. '(heap' → logprob: -4.421230316162109
    4. 'waiting' → logprob: -6.046230316162109
    5. '(c' → logprob: -6.296230316162109
    6. '((' → logprob: -6.546230316162109
    7. ' (' → logprob: -6.796230316162109
    8. '(cid' → logprob: -7.671230316162109
    9. ' waiting' → logprob: -8.79623031616211
    10. '   ' → logprob: -8.79623031616211

Token 460: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17912054061889648
    2. '(heap' → logprob: -2.4291205406188965
    3. '(' → logprob: -3.5541205406188965
    4. '                   ' → logprob: -4.3041205406188965
    5. '(wait' → logprob: -4.9291205406188965
    6. ' waiting' → logprob: -4.9291205406188965
    7. '   ' → logprob: -5.0541205406188965
    8. '               ' → logprob: -5.8041205406188965
    9. 'waiting' → logprob: -5.8041205406188965
    10. 'heap' → logprob: -5.9291205406188965

Token 461: '               ' (ID: 506)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.5559402108192444
    2. ' (' → logprob: -1.3059401512145996
    3. '(wait' → logprob: -2.3059401512145996
    4. '(' → logprob: -3.6809401512145996
    5. '                   ' → logprob: -4.1809401512146
    6. '   ' → logprob: -4.9309401512146
    7. '               ' → logprob: -5.1809401512146
    8. '           ' → logprob: -7.3059401512146
    9. ' waiting' → logprob: -7.5559401512146
    10. 'waiting' → logprob: -7.6809401512146

Token 462: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.002239946974441409
    2. ' heap' → logprob: -6.127240180969238
    3. '               ' → logprob: -11.127240180969238
    4. '                   ' → logprob: -11.252240180969238
    5. '   ' → logprob: -11.377240180969238
    6. 'new' → logprob: -12.002240180969238
    7. '           ' → logprob: -12.377240180969238
    8. 'he' → logprob: -13.502240180969238
    9. 'waiting' → logprob: -13.627240180969238
    10. '(heap' → logprob: -13.877240180969238

Token 463: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '.he' → logprob: -16.375
    3. 'app' → logprob: -18.125
    4. '.append' → logprob: -18.875
    5. 'hq' → logprob: -19.625
    6. 'h' → logprob: -20.0
    7. '.q' → logprob: -20.125
    8. '.heap' → logprob: -20.625
    9. '.push' → logprob: -21.0
    10. '   ' → logprob: -21.125

Token 464: '.he' (ID: 67786)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.015656443312764168
    2. '.he' → logprob: -4.515656471252441
    3. 'q' → logprob: -5.890656471252441
    4. 'push' → logprob: -6.765656471252441
    5. 'app' → logprob: -8.140656471252441
    6. 'he' → logprob: -8.390656471252441
    7. 'p' → logprob: -9.390656471252441
    8. 'u' → logprob: -10.265656471252441
    9. 'h' → logprob: -10.890656471252441
    10. '.push' → logprob: -12.265656471252441

Token 465: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.203409844194539e-05
    2. 'pp' → logprob: -10.250041961669922
    3. 'ap' → logprob: -12.125041961669922
    4. 'push' → logprob: -14.125041961669922
    5. 'appen' → logprob: -16.500041961669922
    6. 'q' → logprob: -16.500041961669922
    7. 'append' → logprob: -16.625041961669922
    8. '[' → logprob: -17.375041961669922
    9. 'ush' → logprob: -17.375041961669922
    10. 'p' → logprob: -17.625041961669922

Token 466: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.872261317563243e-05
    2. 'push' → logprob: -9.750059127807617
    3. 'app' → logprob: -15.375059127807617
    4. 'p' → logprob: -16.750059127807617
    5. 'USH' → logprob: -17.125059127807617
    6. 'sh' → logprob: -17.500059127807617
    7. 'ushed' → logprob: -17.625059127807617
    8. 'pp' → logprob: -17.750059127807617
    9. 'ushing' → logprob: -18.125059127807617
    10. 'us' → logprob: -18.250059127807617

Token 467: '(new' (ID: 2648)
  Prédit: '(wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -7.707997428951785e-05
    2. '(new' → logprob: -9.500077247619629
    3. 'waiting' → logprob: -13.125077247619629
    4. 'wait' → logprob: -16.625076293945312
    5. 'new' → logprob: -17.250076293945312
    6. '(' → logprob: -17.875076293945312
    7. '	wait' → logprob: -18.750076293945312
    8. '_wait' → logprob: -19.375076293945312
    9. '(await' → logprob: -19.750076293945312
    10. ' waiting' → logprob: -19.875076293945312

Token 468: '_wait' (ID: 44250)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.5897340178489685
    2. '(wait' → logprob: -0.8397340178489685
    3. 'wait' → logprob: -4.339734077453613
    4. '_wait' → logprob: -7.589734077453613
    5. ' waiting' → logprob: -9.214734077453613
    6. '(' → logprob: -10.839734077453613
    7. '	wait' → logprob: -11.589734077453613
    8. ')' → logprob: -11.714734077453613
    9. 'Waiting' → logprob: -12.214734077453613
    10. '.wait' → logprob: -12.839734077453613

Token 469: 'ing' (ID: 289)
  Prédit: 'ait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.04831831902265549
    2. 'iting' → logprob: -3.798318386077881
    3. 'ing' → logprob: -4.173318386077881
    4. 'waiting' → logprob: -5.048318386077881
    5. 'a' → logprob: -6.173318386077881
    6. 'ating' → logprob: -7.548318386077881
    7. 'aiti' → logprob: -9.298317909240723
    8. '_wait' → logprob: -10.298317909240723
    9. 'ai' → logprob: -10.298317909240723
    10. ' waiting' → logprob: -10.673317909240723

Token 470: ',' (ID: 11)
  Prédit: '(wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -0.0003037650021724403
    2. '(' → logprob: -8.750304222106934
    3. '((' → logprob: -9.000304222106934
    4. 'waiting' → logprob: -11.000304222106934
    5. ',' → logprob: -12.750304222106934
    6. ')' → logprob: -14.000304222106934
    7. ' waiting' → logprob: -15.000304222106934
    8. ' (' → logprob: -15.250304222106934
    9. 'wait' → logprob: -15.375304222106934
    10. '(
' → logprob: -16.000303268432617

Token 471: ' (' (ID: 350)
  Prédit: '(cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cid' → logprob: -0.0027460309211164713
    2. '(wait' → logprob: -6.502746105194092
    3. ' (' → logprob: -6.877746105194092
    4. 'waiting' → logprob: -9.002745628356934
    5. '(c' → logprob: -10.002745628356934
    6. 'wait' → logprob: -11.877745628356934
    7. '(ci' → logprob: -12.252745628356934
    8. ' waiting' → logprob: -12.377745628356934
    9. '(cnt' → logprob: -12.627745628356934
    10. '(cx' → logprob: -12.627745628356934

Token 472: 'cid' (ID: 40970)
  Prédit: 'cid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -0.0011866572313010693
    2. '(cid' → logprob: -7.126186847686768
    3. ' cid' → logprob: -7.876186847686768
    4. '.cid' → logprob: -14.25118637084961
    5. '(c' → logprob: -14.62618637084961
    6. '   ' → logprob: -14.87618637084961
    7. '(' → logprob: -15.50118637084961
    8. 'cit' → logprob: -15.75118637084961
    9. ' (' → logprob: -16.00118637084961
    10. '
' → logprob: -16.62618637084961

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ' call' → logprob: -15.125016212463379
    4. '           ' → logprob: -15.375016212463379
    5. '               ' → logprob: -15.625016212463379
    6. '(call' → logprob: -15.625016212463379
    7. '                   ' → logprob: -15.750016212463379
    8. 'call' → logprob: -15.750016212463379
    9. ',
' → logprob: -16.125017166137695
    10. ')' → logprob: -16.500017166137695

Token 474: ' call' (ID: 2421)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.004625699482858181
    2. ' call' → logprob: -5.3796257972717285
    3. 'wait' → logprob: -12.50462532043457
    4. '   ' → logprob: -15.00462532043457
    5. ' wait' → logprob: -15.12962532043457
    6. ' ' → logprob: -15.37962532043457
    7. 'waiting' → logprob: -15.37962532043457
    8. '(call' → logprob: -16.25462532043457
    9. '
' → logprob: -16.50462532043457
    10. '	call' → logprob: -16.50462532043457

Token 475: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -9.73446003627032e-05
    2. 't' → logprob: -9.250097274780273
    3. '_time' → logprob: -14.875097274780273
    4. ',' → logprob: -14.875097274780273
    5. '_' → logprob: -15.375097274780273
    6. 'time' → logprob: -16.500097274780273
    7. '_,' → logprob: -17.000097274780273
    8. ')' → logprob: -17.125097274780273
    9. '_s' → logprob: -17.500097274780273
    10. ',t' → logprob: -17.625097274780273

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002346488763578236
    2. ' ,' → logprob: -8.500234603881836
    3. 'deadline' → logprob: -10.625234603881836
    4. ',current' → logprob: -13.500234603881836
    5. ',
' → logprob: -13.875234603881836
    6. '               ' → logprob: -14.625234603881836
    7. '```' → logprob: -14.750234603881836
    8. ')' → logprob: -14.875234603881836
    9. '<|end|>' → logprob: -14.875234603881836
    10. '           ' → logprob: -15.375234603881836

Token 477: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.00037323508877307177
    2. ' deadline' → logprob: -8.000372886657715
    3. 'dead' → logprob: -10.250372886657715
    4. '
' → logprob: -14.000372886657715
    5. 'call' → logprob: -14.500372886657715
    6. '   ' → logprob: -15.125372886657715
    7. '
' → logprob: -15.875372886657715
    8. 'current' → logprob: -16.12537384033203
    9. '(dead' → logprob: -16.12537384033203
    10. '           ' → logprob: -17.12537384033203

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001137947037932463
    2. ' ,' → logprob: -9.125113487243652
    3. ',M' → logprob: -14.000113487243652
    4. '           ' → logprob: -14.500113487243652
    5. '```' → logprob: -14.625113487243652
    6. '   ' → logprob: -14.750113487243652
    7. '               ' → logprob: -15.125113487243652
    8. ',
' → logprob: -15.250113487243652
    9. ',K' → logprob: -15.250113487243652
    10. '),' → logprob: -15.625113487243652

Token 479: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018153101205825806
    2. ' M' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.018153190612793
    4. '   ' → logprob: -14.643153190612793
    5. '    ' → logprob: -15.768153190612793
    6. '  ' → logprob: -16.018152236938477
    7. ' ' → logprob: -16.268152236938477
    8. '	M' → logprob: -16.518152236938477
    9. 'm' → logprob: -17.018152236938477
    10. '     ' → logprob: -17.143152236938477

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020866614067927003
    2. ',L' → logprob: -8.750208854675293
    3. ' ,' → logprob: -10.000208854675293
    4. ',
' → logprob: -13.500208854675293
    5. ' L' → logprob: -13.750208854675293
    6. 'L' → logprob: -13.750208854675293
    7. '   ' → logprob: -14.875208854675293
    8. '```' → logprob: -15.375208854675293
    9. '    ' → logprob: -15.750208854675293
    10. '  ' → logprob: -17.000207901000977

Token 481: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004620949272066355
    2. ' L' → logprob: -5.3796210289001465
    3. '   ' → logprob: -15.629620552062988
    4. '  ' → logprob: -16.254621505737305
    5. '    ' → logprob: -16.379621505737305
    6. '	L' → logprob: -16.504621505737305
    7. ' ' → logprob: -16.629621505737305
    8. ' ' → logprob: -17.004621505737305
    9. '
' → logprob: -17.129621505737305
    10. ',' → logprob: -17.504621505737305

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019418458687141538
    2. ',K' → logprob: -6.376941680908203
    3. ' ,' → logprob: -8.376941680908203
    4. 'K' → logprob: -11.751941680908203
    5. ' K' → logprob: -14.126941680908203
    6. '   ' → logprob: -15.501941680908203
    7. ',
' → logprob: -16.126941680908203
    8. ',Q' → logprob: -16.626941680908203
    9. ',k' → logprob: -16.751941680908203
    10. '```' → logprob: -16.876941680908203

Token 483: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0009115827269852161
    2. ' K' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.625911712646484
    4. ' ' → logprob: -17.125911712646484
    5. '  ' → logprob: -18.625911712646484
    6. '    ' → logprob: -18.750911712646484
    7. '       ' → logprob: -18.875911712646484
    8. '	K' → logprob: -19.500911712646484
    9. '```' → logprob: -20.125911712646484
    10. '        ' → logprob: -20.250911712646484

Token 484: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2714175581932068
    2. ')' → logprob: -1.5214176177978516
    3. '))
' → logprob: -4.021417617797852
    4. ')
' → logprob: -6.771417617797852
    5. '               ' → logprob: -9.271417617797852
    6. '           ' → logprob: -9.271417617797852
    7. '))

' → logprob: -11.146417617797852
    8. '))
' → logprob: -12.396417617797852
    9. ' ))' → logprob: -12.521417617797852
    10. '       ' → logprob: -12.771417617797852

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2744735777378082
    2. '<|end|>' → logprob: -1.5244735479354858
    3. '           ' → logprob: -4.399473667144775
    4. ')' → logprob: -5.899473667144775
    5. '        
' → logprob: -6.274473667144775
    6. ' 
' → logprob: -7.524473667144775
    7. '        ' → logprob: -7.524473667144775
    8. '	       ' → logprob: -7.649473667144775
    9. '<|end|>' → logprob: -7.649473667144775
    10. ' while' → logprob: -7.899473667144775

Token 486: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' (adapté à ' waiting') → logprob: -0.026499198749661446
    2. ' waiting' → logprob: -3.6514992713928223
    3. '       ' → logprob: -9.401498794555664
    4. 'while' → logprob: -9.901498794555664
    5. '(wait' → logprob: -11.151498794555664
    6. '<|end|>' → logprob: -11.401498794555664
    7. ' while' → logprob: -11.401498794555664
    8. 'Waiting' → logprob: -11.526498794555664
    9. 'wait' → logprob: -11.776498794555664
    10. '
' → logprob: -12.526498794555664

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033558503491804004
    2. ' =' → logprob: -8.000335693359375
    3. '[:]' → logprob: -16.500335693359375
    4. ',' → logprob: -17.500335693359375
    5. '=new' → logprob: -17.625335693359375
    6. '.extend' → logprob: -17.750335693359375
    7. '=

' → logprob: -18.125335693359375
    8. '=}' → logprob: -19.250335693359375
    9. '=
' → logprob: -19.500335693359375
    10. '＝' → logprob: -19.625335693359375

Token 488: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0011703446507453918
    2. ' new' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.251171112060547
    4. ' ' → logprob: -17.376171112060547
    5. '	new' → logprob: -17.376171112060547
    6. 'New' → logprob: -18.126171112060547
    7. '```' → logprob: -18.251171112060547
    8. '[new' → logprob: -18.376171112060547
    9. '_new' → logprob: -18.626171112060547
    10. ')new' → logprob: -18.876171112060547

Token 489: '_wait' (ID: 44250)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0746980682015419
    2. 'wait' → logprob: -3.324697971343994
    3. '_wait' → logprob: -3.324697971343994
    4. 'Waiting' → logprob: -13.074698448181152
    5. 'await' → logprob: -13.574698448181152
    6. ' waiting' → logprob: -13.574698448181152
    7. '.wait' → logprob: -13.699698448181152
    8. '(wait' → logprob: -14.074698448181152
    9. 'WAIT' → logprob: -14.449698448181152
    10. '_WAIT' → logprob: -14.574698448181152

Token 490: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.7968066206085496e-05
    2. 'iting' → logprob: -11.625027656555176
    3. 'ving' → logprob: -12.375027656555176
    4. 'a' → logprob: -12.750027656555176
    5. 'ating' → logprob: -12.750027656555176
    6. 'ng' → logprob: -13.250027656555176
    7. 'uing' → logprob: -13.500027656555176
    8. 'ging' → logprob: -14.000027656555176
    9. 'waiting' → logprob: -14.000027656555176
    10. '[' → logprob: -14.250027656555176

Token 491: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12326279282569885
    2. '<|end|>' → logprob: -3.123262882232666
    3. '        
' → logprob: -3.623262882232666
    4. '
' → logprob: -3.748262882232666
    5. 'while' → logprob: -4.373262882232666
    6. '```' → logprob: -6.123262882232666
    7. '#' → logprob: -6.373262882232666
    8. 'if' → logprob: -6.748262882232666
    9. ' while' → logprob: -6.873262882232666
    10. ')' → logprob: -7.373262882232666

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19185984134674072
    2. 'if' → logprob: -2.066859722137451
    3. 'while' → logprob: -4.191859722137451
    4. '```' → logprob: -4.441859722137451
    5. '
' → logprob: -4.566859722137451
    6. '        
' → logprob: -5.191859722137451
    7. '#' → logprob: -5.691859722137451
    8. ' if' → logprob: -6.816859722137451
    9. '   ' → logprob: -8.06686019897461
    10. ' while' → logprob: -9.69186019897461

Token 493: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15101219713687897
    2. '       ' → logprob: -2.2760121822357178
    3. 'while' → logprob: -3.4010121822357178
    4. ' if' → logprob: -6.651012420654297
    5. '   ' → logprob: -6.651012420654297
    6. '```' → logprob: -7.776012420654297
    7. '        
' → logprob: -8.026012420654297
    8. '#' (adapté à ' #') → logprob: -8.151012420654297
    9. '
' → logprob: -8.151012420654297
    10. ' while' → logprob: -9.651012420654297

Token 494: ' Assign' (ID: 60840)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08326408267021179
    2. 'if' → logprob: -2.708264112472534
    3. '#' → logprob: -4.333263874053955
    4. '   ' → logprob: -10.333264350891113
    5. '
' → logprob: -10.708264350891113
    6. '       ' → logprob: -10.833264350891113
    7. '```' → logprob: -11.208264350891113
    8. 'While' → logprob: -11.333264350891113
    9. 'for' → logprob: -12.083264350891113
    10. ' while' → logprob: -12.333264350891113

Token 495: ' operators' (ID: 29893)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17071519792079926
    2. 'if' → logprob: -2.045715093612671
    3. ' while' → logprob: -3.920715093612671
    4. 'operators' → logprob: -5.92071533203125
    5. ' if' → logprob: -6.29571533203125
    6. 'available' → logprob: -7.29571533203125
    7. '```' → logprob: -7.67071533203125
    8. 'op' → logprob: -7.67071533203125
    9. 'for' → logprob: -7.92071533203125
    10. ' operators' → logprob: -8.29571533203125

Token 496: ' who' (ID: 1218)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.021665336564183235
    2. ' while' → logprob: -4.021665573120117
    3. 'if' → logprob: -6.271665573120117
    4. '=' → logprob: -7.271665573120117
    5. '       ' → logprob: -8.521665573120117
    6. '   ' → logprob: -8.771665573120117
    7. '```' → logprob: -9.271665573120117
    8. ' if' → logprob: -9.771665573120117
    9. 'and' → logprob: -9.896665573120117
    10. ',' → logprob: -9.896665573120117

Token 497: ' are' (ID: 553)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21031716465950012
    2. '<=' → logprob: -3.2103171348571777
    3. 'are' → logprob: -3.5853171348571777
    4. ' and' → logprob: -3.5853171348571777
    5. 'and' → logprob: -3.8353171348571777
    6. ' are' → logprob: -3.8353171348571777
    7. 'have' → logprob: -4.085317134857178
    8. '[current' → logprob: -4.710317134857178
    9. 'operators' → logprob: -5.460317134857178
    10. 'if' → logprob: -5.460317134857178

Token 498: ' free' (ID: 2240)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4750675559043884
    2. 'free' → logprob: -0.9750675559043884
    3. 'ready' → logprob: -7.475067615509033
    4. 'available' → logprob: -8.225067138671875
    5. '```' → logprob: -9.350067138671875
    6. ' <=' → logprob: -10.975067138671875
    7. '_free' → logprob: -11.100067138671875
    8. '≤' → logprob: -11.350067138671875
    9. ' free' → logprob: -11.600067138671875
    10. 'idle' → logprob: -12.850067138671875

Token 499: ' at' (ID: 540)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07164455950260162
    2. ' while' → logprob: -2.6966445446014404
    3. 'and' → logprob: -7.0716447830200195
    4. ' and' → logprob: -7.8216447830200195
    5. ' to' → logprob: -9.07164478302002
    6. 'if' → logprob: -9.07164478302002
    7. 'to' → logprob: -9.44664478302002
    8. '       ' → logprob: -10.32164478302002
    9. ',' → logprob: -10.44664478302002
    10. ' at' → logprob: -10.82164478302002

Token 500: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.000431861262768507
    2. ' current' → logprob: -7.750432014465332
    3. 'operators' → logprob: -13.875432014465332
    4. 'next' → logprob: -16.625431060791016
    5. 'operator' → logprob: -17.375431060791016
    6. '	current' → logprob: -17.500431060791016
    7. '[current' → logprob: -17.875431060791016
    8. '=current' → logprob: -18.125431060791016
    9. ' operators' → logprob: -18.250431060791016
    10. '(current' → logprob: -18.375431060791016

Token 501: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.696889623621246e-06
    2. 'time' → logprob: -13.25000286102295
    3. '_' → logprob: -14.12500286102295
    4. '_call' → logprob: -16.875001907348633
    5. '_token' → logprob: -17.375001907348633
    6. 'current' → logprob: -17.875001907348633
    7. '_current' → logprob: -18.500001907348633
    8. '_op' → logprob: -19.000001907348633
    9. ')' → logprob: -19.125001907348633
    10. '_code' → logprob: -19.250001907348633

Token 502: ' to' (ID: 316)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012788156978785992
    2. ' while' → logprob: -4.76278829574585
    3. '       ' → logprob: -5.51278829574585
    4. '```' → logprob: -9.637787818908691
    5. '	while' → logprob: -10.387787818908691
    6. 'While' → logprob: -11.512787818908691
    7. '        
' → logprob: -11.762787818908691
    8. '
' → logprob: -11.887787818908691
    9. ',' → logprob: -12.387787818908691
    10. '   ' → logprob: -13.262787818908691

Token 503: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.6704674363136292
    2. 'calls' → logprob: -0.9204674363136292
    3. ' waiting' → logprob: -3.7954673767089844
    4. 'while' → logprob: -4.170467376708984
    5. ' calls' → logprob: -4.295467376708984
    6. 'call' → logprob: -4.795467376708984
    7. 'cid' → logprob: -4.920467376708984
    8. 'available' → logprob: -6.045467376708984
    9. 'wait' → logprob: -6.170467376708984
    10. 'customers' → logprob: -6.170467376708984

Token 504: ' callers' (ID: 163036)
  Prédit: 'customers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'customers' → logprob: -0.6376954317092896
    2. ':' → logprob: -2.0126953125
    3. 'and' → logprob: -2.0126953125
    4. 'while' → logprob: -2.2626953125
    5. ' and' → logprob: -3.5126953125
    6. '[:]' → logprob: -4.2626953125
    7. 'if' → logprob: -4.7626953125
    8. 'queue' → logprob: -4.8876953125
    9. 'tokens' → logprob: -5.1376953125
    10. ' while' → logprob: -5.5126953125

Token 505: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19406813383102417
    2. ' while' → logprob: -2.444068193435669
    3. '       ' → logprob: -2.444068193435669
    4. '```' → logprob: -6.44406795501709
    5. '	while' → logprob: -7.69406795501709
    6. ',' → logprob: -8.44406795501709
    7. '   ' → logprob: -8.56906795501709
    8. '        
' → logprob: -9.44406795501709
    9. '
' → logprob: -9.81906795501709
    10. ':' → logprob: -10.06906795501709

Token 506: ' any' (ID: 1062)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0272004883736372
    2. ' waiting' → logprob: -3.90220046043396
    3. 'new' → logprob: -5.152200698852539
    4. ' new' → logprob: -7.277200698852539
    5. 'not' → logprob: -9.902200698852539
    6. 'len' → logprob: -10.152200698852539
    7. 'calls' → logprob: -10.402200698852539
    8. ' not' → logprob: -11.402200698852539
    9. ' calls' → logprob: -11.527200698852539
    10. ' len' → logprob: -12.652200698852539

Token 507: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052071794867515564
    2. 'while' → logprob: -3.4270718097686768
    3. ' while' → logprob: -4.052071571350098
    4. '```' → logprob: -7.552071571350098
    5. ',' → logprob: -9.052071571350098
    6. '	while' → logprob: -9.177071571350098
    7. '        
' → logprob: -10.302071571350098
    8. '<|end|>' → logprob: -10.552071571350098
    9. 'While' → logprob: -11.177071571350098
    10. '
' → logprob: -11.552071571350098

Token 508: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.40994104743003845
    2. '       ' → logprob: -1.4099410772323608
    3. 'while' → logprob: -2.4099409580230713
    4. '```' → logprob: -6.40994119644165
    5. '	while' → logprob: -8.284940719604492
    6. '   ' → logprob: -8.409940719604492
    7. ',' → logprob: -9.284940719604492
    8. ' if' → logprob: -10.534940719604492
    9. '<|end|>' → logprob: -10.784940719604492
    10. '        
' → logprob: -11.284940719604492

Token 509: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0023699395824223757
    2. ' while' → logprob: -6.7523698806762695
    3. 'assigned' → logprob: -6.7523698806762695
    4. '   ' → logprob: -11.00236988067627
    5. 'available' → logprob: -12.00236988067627
    6. 'assign' → logprob: -13.25236988067627
    7. '```' → logprob: -13.37736988067627
    8. 'wh' → logprob: -13.62736988067627
    9. 'if' → logprob: -13.62736988067627
    10. ' assigned' → logprob: -14.37736988067627

Token 510: ' operators' (ID: 29893)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.12922242283821106
    2. 'operators' → logprob: -2.5042223930358887
    3. ' waiting' → logprob: -3.8792223930358887
    4. ' operators' → logprob: -4.254222393035889
    5. 'calls' → logprob: -5.504222393035889
    6. ' calls' → logprob: -8.129222869873047
    7. 'current' → logprob: -9.254222869873047
    8. 'calling' → logprob: -10.629222869873047
    9. 'operator' → logprob: -10.754222869873047
    10. 'ops' → logprob: -11.129222869873047

Token 511: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.527990460395813
    2. 'and' → logprob: -1.277990460395813
    3. '[' → logprob: -2.0279903411865234
    4. ' ' → logprob: -11.402990341186523
    5. '```' → logprob: -13.652990341186523
    6. '0' → logprob: -13.777990341186523
    7. '	and' → logprob: -14.652990341186523
    8. '   ' → logprob: -15.902990341186523
    9. '&&' → logprob: -16.027990341186523
    10. ' и' → logprob: -16.152990341186523

Token 512: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -2.546478935983032e-05
    2. ' operators' → logprob: -10.625025749206543
    3. 'operations' → logprob: -15.375025749206543
    4. '0' → logprob: -15.500025749206543
    5. 'operator' → logprob: -15.500025749206543
    6. '(' → logprob: -15.625025749206543
    7. 'oper' → logprob: -15.625025749206543
    8. '   ' → logprob: -17.375024795532227
    9. 'current' → logprob: -17.750024795532227
    10. 'opers' → logprob: -17.750024795532227

Token 513: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006345203728415072
    2. ' and' → logprob: -7.750634670257568
    3. 'and' → logprob: -8.50063419342041
    4. '```' → logprob: -15.37563419342041
    5. ' ' → logprob: -15.87563419342041
    6. ' [' → logprob: -16.125635147094727
    7. '[
' → logprob: -16.875635147094727
    8. '0' → logprob: -17.125635147094727
    9. '
' → logprob: -18.500635147094727
    10. '   ' → logprob: -19.125635147094727

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.901345038088039e-05
    2. '[' → logprob: -9.375099182128906
    3. 'and' → logprob: -12.125099182128906
    4. ' ' → logprob: -12.500099182128906
    5. '```' → logprob: -13.125099182128906
    6. ' and' → logprob: -13.875099182128906
    7. '
' → logprob: -15.062599182128906
    8. ']' → logprob: -15.625099182128906
    9. '۰' → logprob: -15.687599182128906
    10. '   ' → logprob: -16.062599182128906

Token 515: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.02807818539440632
    2. ' <=' → logprob: -3.653078079223633
    3. ']<=' → logprob: -6.403078079223633
    4. ')<=' → logprob: -10.153078079223633
    5. '==' → logprob: -10.403078079223633
    6. ']' → logprob: -10.528078079223633
    7. 'le' → logprob: -11.528078079223633
    8. '```' → logprob: -12.028078079223633
    9. '[' → logprob: -12.653078079223633
    10. ' ' → logprob: -13.778078079223633

Token 516: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0007137430948205292
    2. ' <=' → logprob: -7.25071382522583
    3. ']<=' → logprob: -13.250713348388672
    4. ')<=' → logprob: -13.750713348388672
    5. '==' → logprob: -14.625713348388672
    6. 'le' → logprob: -14.875713348388672
    7. '≤' → logprob: -16.250713348388672
    8. '```' → logprob: -18.125713348388672
    9. '=' → logprob: -19.375713348388672
    10. '()' → logprob: -19.375713348388672

Token 517: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0005530327325686812
    2. ' current' → logprob: -7.500553131103516
    3. '[current' → logprob: -18.250553131103516
    4. '(current' → logprob: -18.625553131103516
    5. '$current' → logprob: -18.750553131103516
    6. '=current' → logprob: -19.000553131103516
    7. '
' → logprob: -19.125553131103516
    8. '	current' → logprob: -19.875553131103516
    9. 'Current' → logprob: -20.250553131103516
    10. '.current' → logprob: -20.250553131103516

Token 518: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00026968008023686707
    2. '_call' → logprob: -8.625269889831543
    3. 'current' → logprob: -10.125269889831543
    4. 'time' → logprob: -10.375269889831543
    5. 'call' → logprob: -11.375269889831543
    6. '_' → logprob: -12.375269889831543
    7. ' _' → logprob: -13.375269889831543
    8. '_t' → logprob: -14.750269889831543
    9. '_current' → logprob: -14.750269889831543
    10. ' time' → logprob: -15.750269889831543

Token 519: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28115546703338623
    2. 'and' → logprob: -1.4061554670333862
    3. ':
' → logprob: -13.531155586242676
    4. ' ' → logprob: -14.031155586242676
    5. '   ' → logprob: -14.031155586242676
    6. ':' → logprob: -14.156155586242676
    7. '       ' → logprob: -15.156155586242676
    8. ',' → logprob: -15.156155586242676
    9. '<|end|>' → logprob: -15.281155586242676
    10. '	and' → logprob: -15.656155586242676

Token 520: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0024859998375177383
    2. ' waiting' → logprob: -6.002486228942871
    3. 'calls' → logprob: -12.377486228942871
    4. 'wait' → logprob: -12.502486228942871
    5. '   ' → logprob: -14.502486228942871
    6. 'len' → logprob: -14.627486228942871
    7. 'calling' → logprob: -15.002486228942871
    8. '
' → logprob: -15.377486228942871
    9. '(wait' → logprob: -15.502486228942871
    10. ' calls' → logprob: -15.877486228942871

Token 521: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6935474276542664
    2. 'and' → logprob: -0.6935474276542664
    3. ':
' → logprob: -8.318547248840332
    4. ':' → logprob: -8.943547248840332
    5. '   ' → logprob: -11.568547248840332
    6. '	and' → logprob: -12.693547248840332
    7. ',' → logprob: -12.818547248840332
    8. '):
' → logprob: -13.443547248840332
    9. '       ' → logprob: -13.568547248840332
    10. '<|end|>' → logprob: -13.818547248840332

Token 522: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09643152356147766
    2. '           ' → logprob: -3.0964314937591553
    3. ',' → logprob: -4.221431732177734
    4. '<|end|>' → logprob: -4.346431732177734
    5. '	       ' → logprob: -5.471431732177734
    6. ' cid' → logprob: -5.971431732177734
    7. '(cid' → logprob: -5.971431732177734
    8. '        
' → logprob: -6.096431732177734
    9. '```' → logprob: -6.596431732177734
    10. ',c' → logprob: -6.721431732177734

Token 523: ' op' (ID: 991)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -0.001416546176187694
    2. '           ' → logprob: -7.5014166831970215
    3. 'call' → logprob: -7.7514166831970215
    4. '(cid' → logprob: -8.751416206359863
    5. 'wait' → logprob: -9.501416206359863
    6. '_,' → logprob: -10.376416206359863
    7. ' cid' → logprob: -10.501416206359863
    8. 'op' (adapté à ' op') → logprob: -10.501416206359863
    9. 'wc' → logprob: -10.751416206359863
    10. 'waiting' → logprob: -11.126416206359863

Token 524: '_free' (ID: 21204)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.019526731222867966
    2. '_free' → logprob: -4.394526958465576
    3. 'time' → logprob: -5.519526958465576
    4. ' =' → logprob: -6.769526958465576
    5. 'free' → logprob: -7.894526958465576
    6. '_end' → logprob: -7.894526958465576
    7. '_available' → logprob: -8.019526481628418
    8. '=' → logprob: -8.019526481628418
    9. '_av' → logprob: -9.519526481628418
    10. '_ready' → logprob: -9.519526481628418

Token 525: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4824022948741913
    2. 'time' → logprob: -1.6074023246765137
    3. '=' → logprob: -1.7324023246765137
    4. ' =' → logprob: -5.607402324676514
    5. '=time' → logprob: -6.607402324676514
    6. 't' → logprob: -8.732401847839355
    7. 'Time' → logprob: -8.857401847839355
    8. '=-' → logprob: -10.982401847839355
    9. '```' → logprob: -11.357401847839355
    10. '=_' → logprob: -11.357401847839355

Token 526: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00015908108616713434
    2. ' heap' → logprob: -8.75015926361084
    3. 'operators' → logprob: -15.37515926361084
    4. '(heap' → logprob: -15.62515926361084
    5. 'he' → logprob: -16.250158309936523
    6. '   ' → logprob: -16.250158309936523
    7. 'operator' → logprob: -17.500158309936523
    8. '.heap' → logprob: -17.875158309936523
    9. '
' → logprob: -19.625158309936523
    10. ' ' → logprob: -19.875158309936523

Token 527: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. 'replace' → logprob: -15.0
    3. '[' → logprob: -17.0
    4. 'op' → logprob: -17.125
    5. 'app' → logprob: -17.5
    6. '```' → logprob: -18.25
    7. 'p' → logprob: -18.375
    8. 'queue' → logprob: -19.5
    9. 'qq' → logprob: -19.75
    10. 'pop' → logprob: -19.875

Token 528: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.03294672071933746
    2. 'he' → logprob: -4.032946586608887
    3. 'q' → logprob: -4.407946586608887
    4. '.heap' → logprob: -6.657946586608887
    5. 'op' → logprob: -6.907946586608887
    6. 'app' → logprob: -8.907946586608887
    7. '[' → logprob: -10.407946586608887
    8. 'heap' → logprob: -10.907946586608887
    9. '.' → logprob: -11.032946586608887
    10. '_he' → logprob: -12.157946586608887

Token 529: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011045700375689194
    2. 'pp' → logprob: -9.750110626220703
    3. 'ap' → logprob: -10.500110626220703
    4. 'he' → logprob: -12.500110626220703
    5. 'pop' → logprob: -12.500110626220703
    6. '[' → logprob: -12.750110626220703
    7. 'q' → logprob: -12.750110626220703
    8. 'op' → logprob: -12.875110626220703
    9. 'e' → logprob: -12.875110626220703
    10. '```' → logprob: -13.125110626220703

Token 530: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.02489953488111496
    2. 'app' → logprob: -4.399899482727051
    3. 'ush' → logprob: -4.774899482727051
    4. 'pop' → logprob: -6.024899482727051
    5. 'he' → logprob: -6.899899482727051
    6. 'ap' → logprob: -9.02489948272705
    7. '[' → logprob: -9.64989948272705
    8. 'push' → logprob: -10.02489948272705
    9. 'p' → logprob: -10.14989948272705
    10. 'heap' → logprob: -10.39989948272705

Token 531: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019287518225610256
    2. 'operators' → logprob: -6.251928806304932
    3. ' operators' → logprob: -16.376928329467773
    4. '(operator' → logprob: -17.376928329467773
    5. '```' → logprob: -18.251928329467773
    6. 'Operators' → logprob: -18.376928329467773
    7. 'operator' → logprob: -18.626928329467773
    8. 'oper' → logprob: -18.876928329467773
    9. '(wait' → logprob: -18.876928329467773
    10. '/operators' → logprob: -19.251928329467773

Token 532: 'operators' (ID: 68510)
  Prédit: 'operators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -7.896309739408025e-07
    2. ' operators' → logprob: -14.250000953674316
    3. 'operations' → logprob: -17.0
    4. 'oper' → logprob: -18.5
    5. 'opers' → logprob: -20.25
    6. '```' → logprob: -20.375
    7. 'operator' → logprob: -20.625
    8. '(' → logprob: -21.625
    9. '   ' → logprob: -21.875
    10. 'Operators' → logprob: -22.625

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25354546308517456
    2. ')
' → logprob: -1.5035455226898193
    3. ' )
' → logprob: -7.12854528427124
    4. ' )' → logprob: -7.62854528427124
    5. ')

' → logprob: -8.753545761108398
    6. '           ' → logprob: -9.878545761108398
    7. '()' → logprob: -10.253545761108398
    8. ')
' → logprob: -11.003545761108398
    9. '
' → logprob: -11.253545761108398
    10. '()
' → logprob: -11.753545761108398

Token 534: '           ' (ID: 352)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -0.023259107023477554
    2. '(cid' → logprob: -4.273259162902832
    3. '           ' → logprob: -5.398259162902832
    4. ',' → logprob: -6.148259162902832
    5. ' cid' → logprob: -6.648259162902832
    6. '       ' → logprob: -7.398259162902832
    7. '```' → logprob: -9.023259162902832
    8. ',c' → logprob: -9.273259162902832
    9. '_,' → logprob: -10.148259162902832
    10. '   ' → logprob: -10.523259162902832

Token 535: ' cid' (ID: 55379)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' (adapté à ' cid') → logprob: -5.0259150157216936e-05
    2. '(cid' → logprob: -10.12505054473877
    3. ' cid' → logprob: -11.87505054473877
    4. 'id' → logprob: -13.37505054473877
    5. 'c' → logprob: -14.75005054473877
    6. 'wait' → logprob: -15.12505054473877
    7. 'waiting' → logprob: -15.25005054473877
    8. '_,' → logprob: -15.37505054473877
    9. '.cid' → logprob: -16.125049591064453
    10. '```' → logprob: -16.250049591064453

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. '=' → logprob: -10.875030517578125
    3. ' ,' → logprob: -12.000030517578125
    4. ',
' → logprob: -12.500030517578125
    5. ',c' → logprob: -14.875030517578125
    6. '‌,' → logprob: -15.000030517578125
    7. ',
' → logprob: -15.750030517578125
    8. ',\
' → logprob: -15.875030517578125
    9. ',

' → logprob: -16.125030517578125
    10. ' =' → logprob: -16.500030517578125

Token 537: ' call' (ID: 2421)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.10025110840797424
    2. ' call' → logprob: -2.3502511978149414
    3. 'wait' → logprob: -10.600251197814941
    4. ' wait' → logprob: -11.350251197814941
    5. '_call' → logprob: -13.225251197814941
    6. 'waiting' → logprob: -13.600251197814941
    7. ' waiting' → logprob: -13.975251197814941
    8. '(call' → logprob: -13.975251197814941
    9. '   ' → logprob: -14.100251197814941
    10. '	call' → logprob: -14.225251197814941

Token 538: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0003987336531281471
    2. '_time' → logprob: -7.875398635864258
    3. '_' → logprob: -11.875398635864258
    4. '_,' → logprob: -12.375398635864258
    5. ',' → logprob: -12.750398635864258
    6. ' _' → logprob: -13.625398635864258
    7. '   ' → logprob: -14.250398635864258
    8. 't' → logprob: -14.375398635864258
    9. ',_' → logprob: -14.750398635864258
    10. '_times' → logprob: -15.000398635864258

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005311102140694857
    2. '=' → logprob: -8.125531196594238
    3. ' ,' → logprob: -8.875531196594238
    4. '<|end|>' → logprob: -9.500531196594238
    5. ' =' → logprob: -11.375531196594238
    6. ',
' → logprob: -13.375531196594238
    7. ',current' → logprob: -13.750531196594238
    8. '<|end|>' → logprob: -14.250531196594238
    9. '           ' → logprob: -14.500531196594238
    10. '    ' → logprob: -14.625531196594238

Token 540: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.0002153378736693412
    2. 'dead' → logprob: -9.125215530395508
    3. ' deadline' → logprob: -9.250215530395508
    4. 'waiting' → logprob: -12.875215530395508
    5. '_,' → logprob: -13.250215530395508
    6. 'current' → logprob: -13.375215530395508
    7. '_' → logprob: -13.500215530395508
    8. '_dead' → logprob: -13.875215530395508
    9. 'call' → logprob: -14.375215530395508
    10. 'wait' → logprob: -15.375215530395508

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011791547294706106
    2. '=' → logprob: -7.251179218292236
    3. ' ,' → logprob: -8.126178741455078
    4. ' =' → logprob: -9.126178741455078
    5. '<|end|>' → logprob: -10.001178741455078
    6. '    ' → logprob: -13.126178741455078
    7. '   ' → logprob: -13.251178741455078
    8. ',
' → logprob: -13.376178741455078
    9. '<|end|>' → logprob: -13.626178741455078
    10. ')' → logprob: -13.751178741455078

Token 542: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.04301734268665314
    2. ' M' → logprob: -3.1680173873901367
    3. ' ' → logprob: -12.168017387390137
    4. '0' → logprob: -12.168017387390137
    5. 'customer' → logprob: -13.668017387390137
    6. '   ' → logprob: -13.668017387390137
    7. 'customers' → logprob: -14.168017387390137
    8. '```' → logprob: -14.168017387390137
    9. ',' → logprob: -14.418017387390137
    10. '  ' → logprob: -14.543017387390137

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029852005536668
    2. ',L' → logprob: -8.375298500061035
    3. ' ,' → logprob: -9.625298500061035
    4. '=' → logprob: -14.250298500061035
    5. '```' → logprob: -15.125298500061035
    6. ',
' → logprob: -15.750298500061035
    7. '   ' → logprob: -16.00029945373535
    8. '           ' → logprob: -16.50029945373535
    9. ' L' → logprob: -16.50029945373535
    10. 'L' → logprob: -16.50029945373535

Token 544: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.023245826363563538
    2. ' L' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.14824676513672
    4. '>L' → logprob: -16.77324676513672
    5. '  ' → logprob: -17.27324676513672
    6. '   ' → logprob: -17.52324676513672
    7. '```' → logprob: -17.52324676513672
    8. ' ' → logprob: -17.89824676513672
    9. '
' → logprob: -18.52324676513672
    10. '<|end|>' → logprob: -18.64824676513672

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016516048344783485
    2. ',K' → logprob: -8.750164985656738
    3. ' ,' → logprob: -12.000164985656738
    4. '=' → logprob: -16.125165939331055
    5. 'K' → logprob: -16.375165939331055
    6. ',k' → logprob: -17.000165939331055
    7. ',
' → logprob: -17.375165939331055
    8. ' K' → logprob: -17.625165939331055
    9. '   ' → logprob: -18.000165939331055
    10. '           ' → logprob: -18.000165939331055

Token 546: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0017024369444698095
    2. ' K' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.3767032623291
    4. ' ' → logprob: -16.3767032623291
    5. '  ' → logprob: -17.2517032623291
    6. '```' → logprob: -17.7517032623291
    7. '
' → logprob: -18.3767032623291
    8. '	K' → logprob: -18.6267032623291
    9. ' ' → logprob: -18.7517032623291
    10. '    ' → logprob: -18.8767032623291

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326496601104736
    2. '=' → logprob: -0.7576496601104736
    3. '   ' → logprob: -11.132649421691895
    4. ')' → logprob: -11.382649421691895
    5. ',' → logprob: -11.632649421691895
    6. ' ' → logprob: -12.257649421691895
    7. 'heap' → logprob: -12.382649421691895
    8. ' heap' → logprob: -12.882649421691895
    9. '    ' → logprob: -13.757649421691895
    10. '  ' → logprob: -14.507649421691895

Token 548: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.002506697317585349
    2. ' heap' → logprob: -6.002506732940674
    3. 'waiting' → logprob: -10.502506256103516
    4. ' waiting' → logprob: -12.627506256103516
    5. 'he' → logprob: -15.752506256103516
    6. 'wait' → logprob: -16.377506256103516
    7. '   ' → logprob: -17.502506256103516
    8. '.heap' → logprob: -19.127506256103516
    9. '(heap' → logprob: -19.377506256103516
    10. '_heap' → logprob: -19.502506256103516

Token 549: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8624639324116288e-06
    2. 'app' → logprob: -13.375001907348633
    3. '[' → logprob: -16.250001907348633
    4. 'p' → logprob: -16.625001907348633
    5. 'he' → logprob: -17.500001907348633
    6. 'ap' → logprob: -18.125001907348633
    7. '.he' → logprob: -18.125001907348633
    8. 'h' → logprob: -18.250001907348633
    9. 'queue' → logprob: -18.625001907348633
    10. 'qp' → logprob: -19.125001907348633

Token 550: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0891430675983429
    2. 'he' → logprob: -2.8391430377960205
    3. '.he' → logprob: -3.7141430377960205
    4. 'op' → logprob: -6.4641432762146
    5. '[' → logprob: -7.5891432762146
    6. 'app' → logprob: -8.839142799377441
    7. 'heap' → logprob: -8.839142799377441
    8. 'e' → logprob: -10.714142799377441
    9. 'h' → logprob: -10.839142799377441
    10. 'hq' → logprob: -11.589142799377441

Token 551: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00075769261457026
    2. 'ap' → logprob: -7.375757694244385
    3. 'pp' → logprob: -9.500757217407227
    4. 'q' → logprob: -10.375757217407227
    5. 'appe' → logprob: -12.500757217407227
    6. 'a' → logprob: -12.625757217407227
    7. '```' → logprob: -12.750757217407227
    8. 'op' → logprob: -12.875757217407227
    9. '[' → logprob: -12.875757217407227
    10. 'qp' → logprob: -13.375757217407227

Token 552: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.15601325035095215
    2. 'app' → logprob: -2.156013250350952
    3. 'he' → logprob: -4.531013488769531
    4. 'ush' → logprob: -4.531013488769531
    5. 'pp' → logprob: -5.281013488769531
    6. 'pop' → logprob: -6.906013488769531
    7. 'p' → logprob: -7.906013488769531
    8. 'ap' → logprob: -8.281013488769531
    9. 'q' → logprob: -8.531013488769531
    10. 'opp' → logprob: -9.906013488769531

Token 553: '(wait' (ID: 127282)
  Prédit: '(wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -1.0683535037969705e-05
    2. 'waiting' → logprob: -11.50001049041748
    3. 'wait' → logprob: -14.87501049041748
    4. '(' → logprob: -17.250011444091797
    5. ' waiting' → logprob: -18.250011444091797
    6. '_wait' → logprob: -18.375011444091797
    7. '	wait' → logprob: -18.750011444091797
    8. 'Waiting' → logprob: -20.375011444091797
    9. '.wait' → logprob: -20.500011444091797
    10. '(w' → logprob: -21.750011444091797

Token 554: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.015590842813253403
    2. 'iting' → logprob: -4.515590667724609
    3. 'ait' → logprob: -5.765590667724609
    4. 'a' → logprob: -7.765590667724609
    5. 'ating' → logprob: -8.14059066772461
    6. 'ting' → logprob: -8.14059066772461
    7. 'waiting' → logprob: -9.51559066772461
    8. '(' → logprob: -9.51559066772461
    9. ')' → logprob: -9.76559066772461
    10. 'it' → logprob: -10.39059066772461

Token 555: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18565131723880768
    2. ')' → logprob: -1.8106513023376465
    3. '           ' → logprob: -5.1856513023376465
    4. ')
' → logprob: -8.810651779174805
    5. ')

' → logprob: -10.060651779174805
    6. ',' → logprob: -10.060651779174805
    7. '       ' → logprob: -11.560651779174805
    8. '   ' → logprob: -11.810651779174805
    9. '               ' → logprob: -11.935651779174805
    10. ')c' → logprob: -11.935651779174805

Token 556: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0760105699300766
    2. 'heap' → logprob: -2.7010104656219482
    3. 'operators' → logprob: -5.451010704040527
    4. ' heap' → logprob: -7.201010704040527
    5. 'op' → logprob: -8.076010704040527
    6. '```' → logprob: -8.201010704040527
    7. ' operators' → logprob: -8.451010704040527
    8. 'operator' → logprob: -9.951010704040527
    9. '            
' → logprob: -10.076010704040527
    10. '(heap' → logprob: -11.076010704040527

Token 557: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0013141667004674673
    2. 'finish' → logprob: -7.376314163208008
    3. 'op' → logprob: -9.001314163208008
    4. '   ' → logprob: -9.126314163208008
    5. 'end' → logprob: -9.126314163208008
    6. 'operators' → logprob: -9.501314163208008
    7. 'if' → logprob: -9.751314163208008
    8. ' heap' → logprob: -10.126314163208008
    9. 'new' → logprob: -10.376314163208008
    10. 'start' → logprob: -10.626314163208008

Token 558: ' Check' (ID: 6208)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4430043399333954
    2. 'done' → logprob: -2.4430043697357178
    3. 'if' → logprob: -2.6930043697357178
    4. 'operators' → logprob: -2.9430043697357178
    5. 'op' → logprob: -3.1930043697357178
    6. 'finish' → logprob: -3.1930043697357178
    7. 'start' → logprob: -4.068004131317139
    8. '   ' → logprob: -4.068004131317139
    9. 'end' → logprob: -5.068004131317139
    10. 'operator' → logprob: -5.318004131317139

Token 559: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38952815532684326
    2. ' if' → logprob: -1.1395281553268433
    3. ' op' → logprob: -6.514528274536133
    4. ' current' → logprob: -7.639528274536133
    5. 'current' → logprob: -7.764528274536133
    6. '   ' → logprob: -9.139528274536133
    7. 'op' → logprob: -9.764528274536133
    8. 'end' → logprob: -10.639528274536133
    9. 'call' → logprob: -10.639528274536133
    10. ' call' → logprob: -10.764528274536133

Token 560: ' call' (ID: 2421)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.13625985383987427
    2. ' current' → logprob: -2.6362597942352295
    3. 'call' → logprob: -3.6362597942352295
    4. 'op' → logprob: -3.8862597942352295
    5. ' op' → logprob: -5.261260032653809
    6. ' call' → logprob: -6.511260032653809
    7. 'deadline' → logprob: -6.636260032653809
    8. '   ' → logprob: -7.386260032653809
    9. 'cid' → logprob: -9.761260032653809
    10. 'M' → logprob: -10.136260032653809

Token 561: ' is' (ID: 382)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.05648956820368767
    2. '_time' → logprob: -2.9314894676208496
    3. 'time' → logprob: -7.80648946762085
    4. '_' → logprob: -7.93148946762085
    5. '   ' → logprob: -8.431489944458008
    6. '_current' → logprob: -8.931489944458008
    7. ' time' → logprob: -9.556489944458008
    8. '_dead' → logprob: -9.556489944458008
    9. '_m' → logprob: -9.806489944458008
    10. 't' → logprob: -10.181489944458008

Token 562: ' still' (ID: 2928)
  Prédit: 'still'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'still' → logprob: -0.28963547945022583
    2. 'valid' → logprob: -1.914635419845581
    3. 'not' → logprob: -3.039635419845581
    4. ' still' → logprob: -3.539635419845581
    5. ' valid' → logprob: -4.41463565826416
    6. 'within' → logprob: -4.91463565826416
    7. ' not' → logprob: -6.28963565826416
    8. 'expired' → logprob: -6.91463565826416
    9. ' within' → logprob: -7.16463565826416
    10. '_valid' → logprob: -7.28963565826416

Token 563: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.08343891054391861
    2. ' valid' → logprob: -2.5834388732910156
    3. 'within' → logprob: -5.708438873291016
    4. ' within' → logprob: -7.583438873291016
    5. 'active' → logprob: -7.583438873291016
    6. '_valid' → logprob: -9.708438873291016
    7. 'current' → logprob: -10.708438873291016
    8. 'not' → logprob: -11.083438873291016
    9. ' active' → logprob: -11.208438873291016
    10. 'ongo' → logprob: -11.458438873291016

Token 564: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6640213131904602
    2. ' if' → logprob: -1.1640212535858154
    3. 'if' → logprob: -2.5390212535858154
    4. 'and' → logprob: -2.9140212535858154
    5. '           ' → logprob: -3.2890212535858154
    6. '(current' → logprob: -7.6640214920043945
    7. 'current' → logprob: -8.039021492004395
    8. ' (' → logprob: -8.039021492004395
    9. '   ' → logprob: -8.164021492004395
    10. ',' → logprob: -8.664021492004395

Token 565: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24952192604541779
    2. '           ' → logprob: -1.9995219707489014
    3. ' and' → logprob: -3.3745219707489014
    4. 'if' → logprob: -3.3745219707489014
    5. '```' → logprob: -4.874521732330322
    6. ')' → logprob: -5.874521732330322
    7. '               ' → logprob: -6.374521732330322
    8. '            
' → logprob: -7.249521732330322
    9. '            ' → logprob: -7.374521732330322
    10. '
' → logprob: -7.749521732330322

Token 566: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42940792441368103
    2. ' if' → logprob: -1.0544079542160034
    3. '           ' → logprob: -7.304408073425293
    4. '            
' → logprob: -11.929408073425293
    5. '            ' → logprob: -12.554408073425293
    6. '```' → logprob: -12.679408073425293
    7. '               ' → logprob: -12.804408073425293
    8. ')' → logprob: -12.929408073425293
    9. ' ' → logprob: -13.179408073425293
    10. 'current' → logprob: -13.304408073425293

Token 567: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.7742788791656494
    2. 'call' → logprob: -1.0242788791656494
    3. 'current' → logprob: -2.2742788791656494
    4. ' call' → logprob: -3.2742788791656494
    5. ' current' → logprob: -3.6492788791656494
    6. ' deadline' → logprob: -4.64927864074707
    7. '   ' → logprob: -5.89927864074707
    8. 'dead' → logprob: -7.64927864074707
    9. ' ' → logprob: -9.39927864074707
    10. '  ' → logprob: -9.52427864074707

Token 568: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014453994110226631
    2. ' >' → logprob: -4.264453887939453
    3. '>=' → logprob: -8.389453887939453
    4. '<=' → logprob: -10.514453887939453
    5. '>
' → logprob: -10.889453887939453
    6. '>

' → logprob: -12.014453887939453
    7. ' >=' → logprob: -12.514453887939453
    8. '>
' → logprob: -13.514453887939453
    9. ' ' → logprob: -13.639453887939453
    10. ' >
' → logprob: -13.889453887939453

Token 569: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.21003900468349457
    2. ' current' → logprob: -1.7100390195846558
    3. '=current' → logprob: -5.335039138793945
    4. '=' → logprob: -5.585039138793945
    5. '	current' → logprob: -12.835039138793945
    6. '_current' → logprob: -13.085039138793945
    7. '=
' → logprob: -13.210039138793945
    8. 'call' → logprob: -13.460039138793945
    9. '(current' → logprob: -13.835039138793945
    10. '
' → logprob: -13.960039138793945

Token 570: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.3902033970225602e-05
    2. 'time' → logprob: -11.250014305114746
    3. 'Time' → logprob: -14.875014305114746
    4. '_' → logprob: -16.12501335144043
    5. '_token' → logprob: -16.12501335144043
    6. 'current' → logprob: -16.37501335144043
    7. '_t' → logprob: -16.37501335144043
    8. '_TIME' → logprob: -17.37501335144043
    9. ' time' → logprob: -17.62501335144043
    10. '   ' → logprob: -18.37501335144043

Token 571: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28583332896232605
    2. ':
' → logprob: -2.0358333587646484
    3. ' or' → logprob: -2.2858333587646484
    4. '           ' → logprob: -4.910833358764648
    5. '               ' → logprob: -5.160833358764648
    6. '       ' → logprob: -7.285833358764648
    7. ' and' → logprob: -7.535833358764648
    8. ')' → logprob: -8.035833358764648
    9. '):' → logprob: -8.035833358764648
    10. ':return' → logprob: -8.160833358764648

Token 572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3033119738101959
    2. ' continue' → logprob: -1.5533119440078735
    3. 'continue' → logprob: -3.178312063217163
    4. ' 
' → logprob: -6.178311824798584
    5. '           ' → logprob: -6.303311824798584
    6. '                
' → logprob: -6.428311824798584
    7. '                   ' → logprob: -7.928311824798584
    8. '                ' → logprob: -8.053312301635742
    9. ' continues' → logprob: -8.303312301635742
    10. '```' → logprob: -8.428312301635742

Token 573: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5951046347618103
    2. ' continue' → logprob: -1.345104694366455
    3. '               ' → logprob: -2.095104694366455
    4. 'heap' → logprob: -3.470104694366455
    5. '                   ' → logprob: -4.095104694366455
    6. '           ' → logprob: -4.845104694366455
    7. ' heap' → logprob: -5.345104694366455
    8. '   ' → logprob: -5.970104694366455
    9. '```' → logprob: -6.970104694366455
    10. '                       ' → logprob: -8.720104217529297

Token 574: ' Client' (ID: 14718)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.43752315640449524
    2. 'continue' → logprob: -1.0625231266021729
    3. '   ' → logprob: -4.812523365020752
    4. '                   ' → logprob: -9.062522888183594
    5. ' continue' → logprob: -9.312522888183594
    6. '       ' → logprob: -9.312522888183594
    7. '```' → logprob: -9.312522888183594
    8. '           ' → logprob: -9.687522888183594
    9. '               ' → logprob: -9.937522888183594
    10. '#' → logprob: -9.937522888183594

Token 575: ' hung' (ID: 46729)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4753199815750122
    2. 'contin' → logprob: -1.9753199815750122
    3. 'hung' → logprob: -1.9753199815750122
    4. ' continues' → logprob: -2.7253198623657227
    5. ' will' → logprob: -2.8503198623657227
    6. 'heap' → logprob: -2.9753198623657227
    7. ' has' → logprob: -3.7253198623657227
    8. 'has' → logprob: -3.7253198623657227
    9. 'continue' → logprob: -3.8503198623657227
    10. 'will' → logprob: -3.9753198623657227

Token 576: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.08930965512990952
    2. ' up' → logprob: -2.4643096923828125
    3. '_up' → logprob: -8.464309692382812
    4. '           ' → logprob: -9.714309692382812
    5. '               ' → logprob: -9.964309692382812
    6. '	up' → logprob: -10.714309692382812
    7. '-up' → logprob: -11.714309692382812
    8. 'Up' → logprob: -11.839309692382812
    9. '
' → logprob: -12.339309692382812
    10. '                   ' → logprob: -13.339309692382812

Token 577: ',' (ID: 11)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5642957091331482
    2. ' continue' → logprob: -1.439295768737793
    3. '               ' → logprob: -2.189295768737793
    4. '                   ' → logprob: -3.314295768737793
    5. '
' → logprob: -3.939295768737793
    6. ',' → logprob: -3.939295768737793
    7. '           ' → logprob: -5.939295768737793
    8. '```' → logprob: -6.814295768737793
    9. ',
' → logprob: -7.564295768737793
    10. '                
' → logprob: -7.689295768737793

Token 578: ' push' (ID: 9349)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12812522053718567
    2. ' continue' → logprob: -2.8781251907348633
    3. '   ' → logprob: -3.1281251907348633
    4. 'heap' → logprob: -4.253125190734863
    5. '                   ' → logprob: -5.878125190734863
    6. '               ' → logprob: -6.378125190734863
    7. ' heap' → logprob: -7.753125190734863
    8. '           ' → logprob: -7.878125190734863
    9. '#' → logprob: -8.128125190734863
    10. '	continue' → logprob: -9.003125190734863

Token 579: ' retry' (ID: 45364)
  Prédit: '(cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cid' → logprob: -0.28900930285453796
    2. '(wait' → logprob: -1.7890093326568604
    3. '(c' → logprob: -3.2890093326568604
    4. 'waiting' → logprob: -4.039009094238281
    5. 'back' → logprob: -4.289009094238281
    6. '(' → logprob: -5.164009094238281
    7. 'wait' → logprob: -5.914009094238281
    8. '(call' → logprob: -6.539009094238281
    9. '(cont' → logprob: -6.664009094238281
    10. 'new' → logprob: -7.289009094238281

Token 580: ' call' (ID: 2421)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.131724238395691
    2. '                   ' → logprob: -1.131724238395691
    3. '           ' → logprob: -1.756724238395691
    4. '(' → logprob: -2.1317243576049805
    5. ',' → logprob: -4.1317243576049805
    6. '```' → logprob: -4.6317243576049805
    7. '(heap' → logprob: -4.7567243576049805
    8. 'continue' → logprob: -4.7567243576049805
    9. ' (' → logprob: -5.3817243576049805
    10. '(
' → logprob: -5.7567243576049805

Token 581: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5827065110206604
    2. '           ' → logprob: -1.3327064514160156
    3. '               ' → logprob: -2.4577064514160156
    4. '                   ' → logprob: -2.8327064514160156
    5. ' (' → logprob: -4.082706451416016
    6. '(
' → logprob: -4.957706451416016
    7. ',' → logprob: -5.832706451416016
    8. '(heap' → logprob: -6.582706451416016
    9. '```' → logprob: -6.707706451416016
    10. ')' → logprob: -6.707706451416016

Token 582: ' in' (ID: 306)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0031569264829158783
    2. ' not' → logprob: -5.878157138824463
    3. 'deadline' → logprob: -8.753156661987305
    4. 'next' → logprob: -9.878156661987305
    5. 'call' → logprob: -10.003156661987305
    6. 'True' → logprob: -10.003156661987305
    7. '(not' → logprob: -10.878156661987305
    8. '   ' → logprob: -12.003156661987305
    9. 'M' → logprob: -12.003156661987305
    10. 'done' → logprob: -12.628156661987305

Token 583: ' time' (ID: 1058)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.4673079252243042
    2. 'time' → logprob: -1.4673079252243042
    3. 'calls' → logprob: -2.3423080444335938
    4. 'range' → logprob: -2.5923080444335938
    5. 'done' → logprob: -2.7173080444335938
    6. 'next' → logprob: -2.8423080444335938
    7. 'deadline' → logprob: -3.2173080444335938
    8. 'complete' → logprob: -3.4673080444335938
    9. 'not' → logprob: -3.5923080444335938
    10. ' T' → logprob: -3.5923080444335938

Token 584: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3033455014228821
    2. '               ' → logprob: -2.4283454418182373
    3. '                       ' → logprob: -2.8033454418182373
    4. '```' → logprob: -3.0533454418182373
    5. 'continue' → logprob: -3.9283454418182373
    6. ')' → logprob: -4.928345680236816
    7. '                           ' → logprob: -4.928345680236816
    8. '
' → logprob: -5.178345680236816
    9. '                    
' → logprob: -5.553345680236816
    10. '                               ' → logprob: -5.678345680236816

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10555870085954666
    2. '                   ' → logprob: -2.3555586338043213
    3. ' if' → logprob: -6.9805588722229
    4. '```' → logprob: -7.1055588722229
    5. '           ' → logprob: -7.6055588722229
    6. '                
' → logprob: -7.7305588722229
    7. 'if' → logprob: -7.7305588722229
    8. '                       ' → logprob: -7.9805588722229
    9. '                    
' → logprob: -8.105558395385742
    10. 'continue' → logprob: -8.355558395385742

Token 586: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49046239256858826
    2. 'if' (adapté à ' if') → logprob: -1.3654624223709106
    3. '                   ' → logprob: -2.615462303161621
    4. 'heap' → logprob: -4.115462303161621
    5. ' heap' → logprob: -4.365462303161621
    6. '                       ' → logprob: -4.365462303161621
    7. 'continue' → logprob: -5.115462303161621
    8. ' continue' → logprob: -5.115462303161621
    9. '                           ' → logprob: -6.740462303161621
    10. '               ' → logprob: -6.740462303161621

Token 587: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25194641947746277
    2. ' not' → logprob: -1.5019464492797852
    3. 'next' → logprob: -11.751946449279785
    4. '!' → logprob: -12.001946449279785
    5. '(not' → logprob: -13.876946449279785
    6. ' next' → logprob: -14.376946449279785
    7. '   ' → logprob: -14.626946449279785
    8. '```' → logprob: -14.751946449279785
    9. 'call' → logprob: -15.501946449279785
    10. '	not' → logprob: -15.751946449279785

Token 588: ' done' (ID: 4167)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.029751067981123924
    2. ' done' → logprob: -3.5297510623931885
    3. '	done' → logprob: -14.90475082397461
    4. '(done' → logprob: -16.02975082397461
    5. 'Done' → logprob: -16.15475082397461
    6. '_done' → logprob: -17.02975082397461
    7. '.done' → logprob: -17.15475082397461
    8. '```' → logprob: -17.40475082397461
    9. 'don' → logprob: -18.02975082397461
    10. 'can' → logprob: -18.65475082397461

Token 589: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.250000953674316
    3. '```' → logprob: -15.500000953674316
    4. ' [' → logprob: -15.750000953674316
    5. '(cid' → logprob: -17.375001907348633
    6. '``' → logprob: -17.750001907348633
    7. '[(' → logprob: -18.125001907348633
    8. '[id' → logprob: -18.500001907348633
    9. '[[' → logprob: -18.625001907348633
    10. '`' → logprob: -18.750001907348633

Token 590: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -12.250015258789062
    3. '[id' → logprob: -12.375015258789062
    4. 'cid' → logprob: -12.625015258789062
    5. '[c' → logprob: -13.000015258789062
    6. '_id' → logprob: -15.875015258789062
    7. '(cid' → logprob: -16.000015258789062
    8. 'd' → logprob: -16.250015258789062
    9. 'ids' → logprob: -16.750015258789062
    10. 'sid' → logprob: -16.875015258789062

Token 591: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.25526341795921326
    2. ']:' → logprob: -1.5052634477615356
    3. ']' → logprob: -5.880263328552246
    4. ']:

' → logprob: -8.130263328552246
    5. ']:
' → logprob: -8.880263328552246
    6. ' ]' → logprob: -10.755263328552246
    7. '):
' → logprob: -10.755263328552246
    8. ':' → logprob: -10.755263328552246
    9. ']):
' → logprob: -11.505263328552246
    10. ':
' → logprob: -12.380263328552246

Token 592: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13073614239692688
    2. '                       ' → logprob: -2.2557361125946045
    3. '                           ' → logprob: -4.755736351013184
    4. 'heap' → logprob: -6.130736351013184
    5. '                               ' → logprob: -6.255736351013184
    6. ' heap' → logprob: -6.380736351013184
    7. '   ' → logprob: -6.755736351013184
    8. '               ' → logprob: -7.380736351013184
    9. '```' → logprob: -8.005736351013184
    10. '                    ' → logprob: -8.755736351013184

Token 593: ' next' (ID: 2613)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.09923809766769409
    2. ' heap' → logprob: -2.474238157272339
    3. 'next' (adapté à ' next') → logprob: -5.34923791885376
    4. '                       ' → logprob: -6.09923791885376
    5. ' next' → logprob: -6.47423791885376
    6. '                           ' → logprob: -7.34923791885376
    7. '```' → logprob: -8.224238395690918
    8. '                   ' → logprob: -8.349238395690918
    9. '(heap' → logprob: -8.474238395690918
    10. '   ' → logprob: -9.474238395690918

Token 594: '_call' (ID: 25158)
  Prédit: '_call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_call' → logprob: -0.00103686039801687
    2. '_' → logprob: -7.751036643981934
    3. '_calls' → logprob: -8.626036643981934
    4. '_heap' → logprob: -9.376036643981934
    5. 'call' → logprob: -9.626036643981934
    6. '_code' → logprob: -9.751036643981934
    7. '_time' → logprob: -9.876036643981934
    8. '_token' → logprob: -10.126036643981934
    9. '```' → logprob: -11.126036643981934
    10. 'heap' → logprob: -11.501036643981934

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4296106696128845
    2. ' =' → logprob: -1.0546107292175293
    3. ',' → logprob: -7.804610729217529
    4. '_time' → logprob: -8.429610252380371
    5. ')' → logprob: -8.554610252380371
    6. '```' → logprob: -10.679610252380371
    7. '(' → logprob: -11.804610252380371
    8. 's' → logprob: -11.929610252380371
    9. '                   ' → logprob: -12.179610252380371
    10. 'time' → logprob: -12.554610252380371

Token 596: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.02130911499261856
    2. 'current' → logprob: -4.646308898925781
    3. ' deadline' → logprob: -4.771308898925781
    4. 'call' → logprob: -6.396308898925781
    5. ' current' → logprob: -7.021308898925781
    6. 'dead' → logprob: -8.146308898925781
    7. ' call' → logprob: -9.021308898925781
    8. '   ' → logprob: -10.771308898925781
    9. ' ' → logprob: -11.896308898925781
    10. '(dead' → logprob: -12.271308898925781

Token 597: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023407876491547
    2. '+' → logprob: -1.9102340936660767
    3. '<|end|>' → logprob: -11.910234451293945
    4. ' plus' → logprob: -13.660234451293945
    5. '+
' → logprob: -14.785234451293945
    6. ' +
' → logprob: -14.910234451293945
    7. '+k' → logprob: -15.035234451293945
    8. '＋' → logprob: -15.160234451293945
    9. '```' → logprob: -15.785234451293945
    10. '+C' → logprob: -15.910234451293945

Token 598: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02054247073829174
    2. ' K' → logprob: -3.8955423831939697
    3. ' ' → logprob: -15.39554214477539
    4. '1' → logprob: -15.89554214477539
    5. 'k' → logprob: -16.14554214477539
    6. '```' → logprob: -17.39554214477539
    7. '    ' → logprob: -17.52054214477539
    8. '   ' → logprob: -17.64554214477539
    9. '`' → logprob: -18.39554214477539
    10. ' ' → logprob: -18.64554214477539

Token 599: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4509981870651245
    2. ')
' → logprob: -1.0759981870651245
    3. '                   ' → logprob: -4.450998306274414
    4. ',' → logprob: -5.200998306274414
    5. '
' → logprob: -6.575998306274414
    6. '```' → logprob: -6.575998306274414
    7. ',
' → logprob: -7.075998306274414
    8. '),' → logprob: -8.700998306274414
    9. ' )' → logprob: -8.950998306274414
    10. ' )
' → logprob: -9.200998306274414

Token 600: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34446170926094055
    2. '                   ' → logprob: -1.5944616794586182
    3. ')
' → logprob: -2.594461679458618
    4. '```' → logprob: -5.094461917877197
    5. ',' → logprob: -5.719461917877197
    6. '               ' → logprob: -7.219461917877197
    7. '                       ' → logprob: -7.469461917877197
    8. '),' → logprob: -7.719461917877197
    9. '           ' → logprob: -7.969461917877197
    10. ',
' → logprob: -8.094461441040039

Token 601: ' if' (ID: 538)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41307562589645386
    2. ')' → logprob: -1.2880756855010986
    3. ''' → logprob: -3.4130756855010986
    4. '```' → logprob: -4.9130754470825195
    5. ' ' → logprob: -5.1630754470825195
    6. '32' → logprob: -5.1630754470825195
    7. '`' → logprob: -5.9130754470825195
    8. '"' → logprob: -6.4130754470825195
    9. '(' → logprob: -6.4130754470825195
    10. '0' → logprob: -7.1630754470825195

Token 602: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.25194039940834045
    2. 'next' → logprob: -1.501940369606018
    3. '(next' → logprob: -11.626940727233887
    4. '[next' → logprob: -13.626940727233887
    5. '```' → logprob: -14.626940727233887
    6. '	next' → logprob: -15.126940727233887
    7. '.next' → logprob: -16.75193977355957
    8. ' T' → logprob: -16.75193977355957
    9. '_next' → logprob: -16.87693977355957
    10. '`' → logprob: -17.12693977355957

Token 603: '_call' (ID: 25158)
  Prédit: '_call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_call' → logprob: -2.0100624169572257e-05
    2. '<=' → logprob: -12.625020027160645
    3. ' <=' → logprob: -13.000020027160645
    4. 'call' → logprob: -13.000020027160645
    5. '_calls' → logprob: -13.000020027160645
    6. '+' → logprob: -13.125020027160645
    7. ' _' → logprob: -13.125020027160645
    8. '```' → logprob: -13.750020027160645
    9. '_CALL' → logprob: -14.000020027160645
    10. ' <' → logprob: -14.625020027160645

Token 604: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10027793794870377
    2. '<=' → logprob: -2.350277900695801
    3. ' <' → logprob: -9.9752779006958
    4. '<' → logprob: -11.6002779006958
    5. '```' → logprob: -12.7252779006958
    6. ' ' → logprob: -12.9752779006958
    7. ')<=' → logprob: -13.3502779006958
    8. ')' → logprob: -13.9752779006958
    9. '                        ' → logprob: -14.1002779006958
    10. '   ' → logprob: -14.2252779006958

Token 605: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0015024791937321424
    2. ' T' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.251502990722656
    4. '```' → logprob: -16.376502990722656
    5. ' ' → logprob: -16.751502990722656
    6. '  ' → logprob: -17.501502990722656
    7. '
' → logprob: -18.626502990722656
    8. '[' → logprob: -18.876502990722656
    9. '	T' → logprob: -19.001502990722656
    10. '_T' → logprob: -19.751502990722656

Token 606: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3559163808822632
    2. '):
' → logprob: -1.9809163808822632
    3. '                       ' → logprob: -2.3559165000915527
    4. ':' → logprob: -2.8559165000915527
    5. '):' → logprob: -5.230916500091553
    6. '                   ' → logprob: -5.855916500091553
    7. '():
' → logprob: -8.605916023254395
    8. '                           ' → logprob: -8.730916023254395
    9. ')' → logprob: -9.105916023254395
    10. '```' → logprob: -9.355916023254395

Token 607: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008696711622178555
    2. '                           ' → logprob: -5.633696556091309
    3. '                               ' → logprob: -6.508696556091309
    4. 'heap' → logprob: -6.883696556091309
    5. '                   ' → logprob: -7.258696556091309
    6. ' heap' → logprob: -7.883696556091309
    7. '                        
' → logprob: -8.508696556091309
    8. '                        ' → logprob: -8.508696556091309
    9. ')' → logprob: -8.633696556091309
    10. '```' → logprob: -8.633696556091309

Token 608: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.01420722994953394
    2. ' heap' → logprob: -4.264207363128662
    3. '                           ' → logprob: -10.889206886291504
    4. 'he' → logprob: -11.514206886291504
    5. '(heap' → logprob: -11.514206886291504
    6. '                               ' → logprob: -13.139206886291504
    7. '   ' → logprob: -14.139206886291504
    8. '```' → logprob: -14.264206886291504
    9. '                       ' → logprob: -14.389206886291504
    10. ' ' → logprob: -16.13920783996582

Token 609: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '.he' → logprob: -16.5
    3. 'p' → logprob: -18.0
    4. 'app' → logprob: -18.625
    5. '```' → logprob: -19.25
    6. 'he' → logprob: -20.125
    7. 'h' → logprob: -20.375
    8. '[' → logprob: -20.375
    9. 'push' → logprob: -20.75
    10. '       ' → logprob: -21.375

Token 610: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.16580957174301147
    2. 'he' → logprob: -1.9158096313476562
    3. 'q' → logprob: -5.290809631347656
    4. 'heap' → logprob: -8.415809631347656
    5. 'push' → logprob: -9.040809631347656
    6. 'ush' → logprob: -9.415809631347656
    7. 'h' → logprob: -9.915809631347656
    8. '```' → logprob: -10.290809631347656
    9. 'app' → logprob: -11.915809631347656
    10. '.heap' → logprob: -12.165809631347656

Token 611: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.010728373192250729
    2. 'pp' → logprob: -4.885728359222412
    3. 'ush' → logprob: -6.260728359222412
    4. 'push' → logprob: -6.885728359222412
    5. 'ap' → logprob: -9.76072883605957
    6. 'p' → logprob: -10.13572883605957
    7. 'he' → logprob: -10.13572883605957
    8. '```' → logprob: -11.51072883605957
    9. '.he' → logprob: -11.63572883605957
    10. 'q' → logprob: -11.88572883605957

Token 612: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0008271370315924287
    2. 'he' → logprob: -8.125826835632324
    3. 'op' → logprob: -8.375826835632324
    4. 'app' → logprob: -8.875826835632324
    5. 'push' → logprob: -9.125826835632324
    6. 'p' → logprob: -11.500826835632324
    7. '.he' → logprob: -11.875826835632324
    8. 'pp' → logprob: -12.000826835632324
    9. '```' → logprob: -12.375826835632324
    10. 'us' → logprob: -12.500826835632324

Token 613: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.236549335066229e-05
    2. 'calls' → logprob: -10.750021934509277
    3. ' calls' → logprob: -14.750021934509277
    4. '(' → logprob: -15.625021934509277
    5. 'c' → logprob: -16.000022888183594
    6. '```' → logprob: -16.125022888183594
    7. '	c' → logprob: -18.125022888183594
    8. '   ' → logprob: -18.250022888183594
    9. '(call' → logprob: -18.625022888183594
    10. '.calls' → logprob: -19.125022888183594

Token 614: 'alls' (ID: 6539)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.0007778270519338548
    2. 'alls' → logprob: -8.000778198242188
    3. '(c' → logprob: -8.125778198242188
    4. ' calls' → logprob: -9.125778198242188
    5. 'c' → logprob: -10.375778198242188
    6. '.calls' → logprob: -13.375778198242188
    7. '_calls' → logprob: -13.750778198242188
    8. 'all' → logprob: -14.125778198242188
    9. '-c' → logprob: -14.625778198242188
    10. 'call' → logprob: -14.750778198242188

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005169323412701488
    2. '(c' → logprob: -8.125516891479492
    3. ',c' → logprob: -8.875516891479492
    4. '(' → logprob: -9.875516891479492
    5. ',(' → logprob: -10.875516891479492
    6. ' ,' → logprob: -12.375516891479492
    7. '                       ' → logprob: -13.375516891479492
    8. '),' → logprob: -13.500516891479492
    9. ',
' → logprob: -14.375516891479492
    10. ')' → logprob: -14.375516891479492

Token 616: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.003302358789369464
    2. ' (' → logprob: -6.253302574157715
    3. '(' → logprob: -6.753302574157715
    4. '(c' → logprob: -8.503302574157715
    5. '(call' → logprob: -13.128302574157715
    6. '[next' → logprob: -14.003302574157715
    7. '(now' → logprob: -16.2533016204834
    8. 'next' → logprob: -17.1283016204834
    9. ',next' → logprob: -17.2533016204834
    10. '   ' → logprob: -17.3783016204834

Token 617: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3135712146759033
    2. '(next' → logprob: -1.3135712146759033
    3. ' next' → logprob: -8.188570976257324
    4. '[next' → logprob: -10.563570976257324
    5. ' (' → logprob: -12.688570976257324
    6. ',next' → logprob: -13.563570976257324
    7. '	next' → logprob: -14.688570976257324
    8. '(' → logprob: -14.813570976257324
    9. '_next' → logprob: -16.06357192993164
    10. '   ' → logprob: -16.31357192993164

Token 618: '_call' (ID: 25158)
  Prédit: '_call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_call' → logprob: -0.00020902375399600714
    2. 'call' → logprob: -8.500208854675293
    3. 'Call' → logprob: -14.000208854675293
    4. '_token' → logprob: -14.375208854675293
    5. '_CALL' → logprob: -14.625208854675293
    6. '_free' → logprob: -14.750208854675293
    7. ')' → logprob: -14.875208854675293
    8. '_code' → logprob: -15.125208854675293
    9. '.call' → logprob: -15.250208854675293
    10. '_op' → logprob: -15.250208854675293

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017958412354346365
    2. '<|end|>' → logprob: -8.875179290771484
    3. ',c' → logprob: -10.750179290771484
    4. '),' → logprob: -12.250179290771484
    5. ' ,' → logprob: -12.375179290771484
    6. ')' → logprob: -12.625179290771484
    7. '‌,' → logprob: -13.250179290771484
    8. ',
' → logprob: -13.625179290771484
    9. '<|end|>' → logprob: -15.000179290771484
    10. ',),' → logprob: -15.125179290771484

Token 620: ' cid' (ID: 55379)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -0.03402071073651314
    2. ' cid' → logprob: -3.4090206623077393
    3. '(cid' → logprob: -7.909020900726318
    4. 'cit' → logprob: -13.28402042388916
    5. '.cid' → logprob: -13.53402042388916
    6. ')' → logprob: -14.53402042388916
    7. 'c' → logprob: -14.78402042388916
    8. ' ' → logprob: -14.90902042388916
    9. 'Cid' → logprob: -14.90902042388916
    10. '```' → logprob: -15.03402042388916

Token 621: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4496113657951355
    2. '))' → logprob: -1.0746114253997803
    3. '))
' → logprob: -4.199611186981201
    4. ')
' → logprob: -5.949611186981201
    5. '           ' → logprob: -6.949611186981201
    6. '                   ' → logprob: -7.074611186981201
    7. '                       ' → logprob: -7.199611186981201
    8. '               ' → logprob: -8.07461166381836
    9. '                           ' → logprob: -9.44961166381836
    10. ' )' → logprob: -10.07461166381836

Token 622: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1166069433093071
    2. '                   ' → logprob: -3.3666069507598877
    3. '                       ' → logprob: -3.7416069507598877
    4. '               ' → logprob: -3.7416069507598877
    5. ' else' → logprob: -4.241606712341309
    6. 'else' → logprob: -4.991606712341309
    7. '                           ' → logprob: -5.741606712341309
    8. '```' → logprob: -5.866606712341309
    9. ' continue' → logprob: -8.741606712341309
    10. 'continue' → logprob: -8.991606712341309

Token 623: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.560064971446991
    2. '               ' → logprob: -0.935064971446991
    3. '                   ' → logprob: -4.310064792633057
    4. ' continue' → logprob: -4.435064792633057
    5. 'continue' (adapté à ' continue') → logprob: -4.810064792633057
    6. ' else' → logprob: -6.935064792633057
    7. 'else' → logprob: -7.060064792633057
    8. '       ' → logprob: -7.935064792633057
    9. '                       ' → logprob: -8.685065269470215
    10. '   ' → logprob: -9.310065269470215

Token 624: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021196885500103235
    2. '            
' → logprob: -7.502119541168213
    3. '               ' → logprob: -8.002120018005371
    4. '            ' → logprob: -8.127120018005371
    5. '       ' → logprob: -8.252120018005371
    6. '          ' → logprob: -9.127120018005371
    7. 'op' → logprob: -9.502120018005371
    8. '```' → logprob: -9.877120018005371
    9. '                   ' → logprob: -10.002120018005371
    10. '<|end|>' → logprob: -10.127120018005371

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009409664198756218
    2. '            
' → logprob: -5.134409427642822
    3. '            ' → logprob: -7.384409427642822
    4. ' 
' → logprob: -7.634409427642822
    5. '<|end|>' → logprob: -7.634409427642822
    6. '       ' → logprob: -7.884409427642822
    7. '```' → logprob: -8.00940990447998
    8. '               ' → logprob: -8.13440990447998
    9. '  
' → logprob: -9.25940990447998
    10. '           
' → logprob: -9.38440990447998

Token 626: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04616755619645119
    2. '               ' → logprob: -5.046167373657227
    3. ' heap' → logprob: -5.046167373657227
    4. 'heap' → logprob: -5.296167373657227
    5. ' operators' → logprob: -5.546167373657227
    6. '            ' → logprob: -5.671167373657227
    7. 'operators' → logprob: -6.296167373657227
    8. '                   ' → logprob: -6.421167373657227
    9. ' operator' → logprob: -6.421167373657227
    10. '            
' → logprob: -6.546167373657227

Token 627: ' Assign' (ID: 60840)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.00482181878760457
    2. '#' → logprob: -6.37982177734375
    3. '           ' → logprob: -6.62982177734375
    4. 'current' → logprob: -7.50482177734375
    5. ' done' → logprob: -7.62982177734375
    6. 'assigned' → logprob: -8.12982177734375
    7. '   ' → logprob: -9.00482177734375
    8. 'if' → logprob: -9.75482177734375
    9. 'call' → logprob: -10.12982177734375
    10. 'start' → logprob: -10.25482177734375

Token 628: ' this' (ID: 495)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.9852854013442993
    2. 'heap' → logprob: -1.6102854013442993
    3. 'operators' → logprob: -1.8602854013442993
    4. 'operator' → logprob: -2.3602852821350098
    5. ' operators' → logprob: -2.7352852821350098
    6. ' op' → logprob: -3.2352852821350098
    7. ' operator' → logprob: -3.7352852821350098
    8. ' heap' → logprob: -3.8602852821350098
    9. '           ' → logprob: -4.73528528213501
    10. 'free' → logprob: -6.11028528213501

Token 629: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.35667523741722107
    2. 'operator' → logprob: -1.7316752672195435
    3. ' op' → logprob: -2.481675148010254
    4. 'op' → logprob: -3.606675148010254
    5. ' operators' → logprob: -4.981675148010254
    6. 'operators' → logprob: -6.481675148010254
    7. '           ' → logprob: -6.731675148010254
    8. ' call' → logprob: -7.356675148010254
    9. ' customer' → logprob: -7.856675148010254
    10. 'customer' → logprob: -8.231675148010254

Token 630: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3478729724884033
    2. 'heap' → logprob: -2.2228729724884033
    3. 'operators' → logprob: -2.5978729724884033
    4. ' operators' → logprob: -3.2228729724884033
    5. ' heap' → logprob: -3.4728729724884033
    6. ',' → logprob: -4.472872734069824
    7. '            
' → logprob: -5.222872734069824
    8. 'current' → logprob: -5.972872734069824
    9. ' to' → logprob: -5.972872734069824
    10. 'op' → logprob: -5.972872734069824

Token 631: ' client' (ID: 3054)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.33144617080688477
    2. 'cid' → logprob: -1.4564461708068848
    3. 'customer' → logprob: -4.456446170806885
    4. 'handle' → logprob: -4.456446170806885
    5. 'call' → logprob: -4.956446170806885
    6. ' current' → logprob: -5.331446170806885
    7. 'process' → logprob: -5.581446170806885
    8. '   ' → logprob: -6.831446170806885
    9. 'operate' → logprob: -6.831446170806885
    10. 'finish' → logprob: -6.831446170806885

Token 632: ' ->' (ID: 2747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35261207818984985
    2. 'operators' → logprob: -1.852612018585205
    3. 'op' → logprob: -2.977612018585205
    4. 'operator' → logprob: -3.977612018585205
    5. '
' → logprob: -4.477612018585205
    6. ' operators' → logprob: -4.602612018585205
    7. 'heap' → logprob: -4.602612018585205
    8. '                   ' → logprob: -4.977612018585205
    9. '               ' → logprob: -4.977612018585205
    10. 'current' → logprob: -5.227612018585205

Token 633: ' operator' (ID: 11019)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.469482421875
    2. 'op' → logprob: -1.844482421875
    3. ' heap' → logprob: -2.844482421875
    4. ' op' → logprob: -3.094482421875
    5. 'finish' → logprob: -3.219482421875
    6. 'end' → logprob: -4.094482421875
    7. 'operator' → logprob: -4.344482421875
    8. 'start' → logprob: -4.719482421875
    9. ' finish' → logprob: -5.094482421875
    10. 'operators' → logprob: -5.219482421875

Token 634: ' busy' (ID: 15827)
  Prédit: '_free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_free' → logprob: -1.0851480960845947
    2. '_time' → logprob: -1.7101480960845947
    3. '.' → logprob: -2.0851480960845947
    4. '_busy' → logprob: -2.2101480960845947
    5. '```' → logprob: -2.9601480960845947
    6. 'time' → logprob: -3.4601480960845947
    7. 's' → logprob: -3.4601480960845947
    8. 'free' → logprob: -3.8351480960845947
    9. 'busy' → logprob: -4.085147857666016
    10. '_finish' → logprob: -4.210147857666016

Token 635: ' until' (ID: 4609)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operators' → logprob: -1.2996540069580078
    2. ' for' → logprob: -1.5496540069580078
    3. 'for' → logprob: -2.299654006958008
    4. '           ' → logprob: -2.299654006958008
    5. 'heap' → logprob: -2.299654006958008
    6. ',' → logprob: -2.924654006958008
    7. ' operators' → logprob: -2.924654006958008
    8. 'current' → logprob: -3.549654006958008
    9. ' heap' → logprob: -4.174654006958008
    10. ' at' → logprob: -4.674654006958008

Token 636: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011056310497224331
    2. ' current' → logprob: -4.511056423187256
    3. 'op' → logprob: -12.011055946350098
    4. ' op' → logprob: -14.386055946350098
    5. 'max' → logprob: -14.636055946350098
    6. '   ' → logprob: -14.636055946350098
    7. '(current' → logprob: -15.011055946350098
    8. '=current' → logprob: -15.636055946350098
    9. 'operators' → logprob: -16.136056900024414
    10. '```' → logprob: -16.511056900024414

Token 637: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.315936429426074e-05
    2. '_' → logprob: -9.625082969665527
    3. '+' → logprob: -11.625082969665527
    4. ' _' → logprob: -12.000082969665527
    5. ' +' → logprob: -14.000082969665527
    6. '_t' → logprob: -14.500082969665527
    7. 'time' → logprob: -14.500082969665527
    8. '\' → logprob: -17.500083923339844
    9. 'Time' → logprob: -17.875083923339844
    10. '```' → logprob: -18.250083923339844

Token 638: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519310414791107
    2. '+' → logprob: -1.501931071281433
    3. ' plus' → logprob: -14.376931190490723
    4. '+C' → logprob: -15.251931190490723
    5. '+
' → logprob: -15.376931190490723
    6. ' ' → logprob: -15.751931190490723
    7. ' +
' → logprob: -15.751931190490723
    8. '+l' → logprob: -15.751931190490723
    9. '```' → logprob: -15.751931190490723
    10. ' ' → logprob: -16.626930236816406

Token 639: 'M' (ID: 44)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.009534601122140884
    2. ' L' → logprob: -5.13453483581543
    3. 'M' → logprob: -5.63453483581543
    4. ' M' → logprob: -10.88453483581543
    5. '```' → logprob: -13.50953483581543
    6. ' ' → logprob: -13.75953483581543
    7. '+' → logprob: -13.75953483581543
    8. '`' → logprob: -14.38453483581543
    9. '=L' → logprob: -14.50953483581543
    10. '(L' → logprob: -14.88453483581543

Token 640: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39503782987594604
    2. ' +' → logprob: -1.1450378894805908
    3. ',' → logprob: -5.770037651062012
    4. '           ' → logprob: -6.520037651062012
    5. '```' → logprob: -6.895037651062012
    6. ')' → logprob: -7.645037651062012
    7. '+
' → logprob: -8.270037651062012
    8. 'operator' → logprob: -8.395037651062012
    9. '_' → logprob: -9.145037651062012
    10. '               ' → logprob: -9.270037651062012

Token 641: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.73380446434021
    2. 'heap' → logprob: -1.73380446434021
    3. 'operators' → logprob: -2.73380446434021
    4. '                   ' → logprob: -2.85880446434021
    5. ' operators' → logprob: -2.85880446434021
    6. ' heap' → logprob: -3.23380446434021
    7. '               ' → logprob: -3.73380446434021
    8. '            ' → logprob: -4.733804702758789
    9. ',' → logprob: -4.733804702758789
    10. '```' → logprob: -4.733804702758789

Token 642: ' done' (ID: 4167)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.001121880137361586
    2. '           ' → logprob: -7.251121997833252
    3. ' heap' → logprob: -8.626121520996094
    4. 'operators' → logprob: -9.126121520996094
    5. '   ' → logprob: -10.126121520996094
    6. 'operator' → logprob: -10.376121520996094
    7. '               ' → logprob: -10.501121520996094
    8. 'op' → logprob: -11.876121520996094
    9. '                   ' → logprob: -12.126121520996094
    10. '       ' → logprob: -13.376121520996094

Token 643: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.125003814697266
    3. '\[' → logprob: -13.875003814697266
    4. '```' → logprob: -14.750003814697266
    5. ' [' → logprob: -15.500003814697266
    6. '[current' → logprob: -16.625003814697266
    7. '[cur' → logprob: -17.500003814697266
    8. '(cid' → logprob: -17.625003814697266
    9. '[curr' → logprob: -18.000003814697266
    10. '[C' → logprob: -18.500003814697266

Token 644: 'id' (ID: 315)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.11654572188854218
    2. 'id' → logprob: -2.2415456771850586
    3. '[id' → logprob: -5.866545677185059
    4. '[' → logprob: -7.491545677185059
    5. 'cid' → logprob: -8.616545677185059
    6. 'at' → logprob: -10.616545677185059
    7. '(cid' → logprob: -10.741545677185059
    8. 't' → logprob: -10.991545677185059
    9. '_id' → logprob: -10.991545677185059
    10. ']' → logprob: -11.491545677185059

Token 645: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013677161186933517
    2. ']=' → logprob: -4.63867712020874
    3. '=' → logprob: -5.63867712020874
    4. '=True' → logprob: -8.763677597045898
    5. ' =' → logprob: -9.263677597045898
    6. '[' → logprob: -9.888677597045898
    7. ')' → logprob: -10.388677597045898
    8. 'True' → logprob: -11.638677597045898
    9. '[c' → logprob: -11.888677597045898
    10. ')=' → logprob: -13.388677597045898

Token 646: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009307525469921529
    2. ' =' → logprob: -7.0009307861328125
    3. '=True' → logprob: -10.875930786132812
    4. '[' → logprob: -15.375930786132812
    5. '=
' → logprob: -16.750930786132812
    6. '=true' → logprob: -17.125930786132812
    7. '=False' → logprob: -18.875930786132812
    8. ']=' → logprob: -19.000930786132812
    9. ']' → logprob: -19.125930786132812
    10. ',' → logprob: -19.125930786132812

Token 647: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020473242329899222
    2. ' True' → logprob: -8.500205039978027
    3. 'current' → logprob: -13.875205039978027
    4. '1' → logprob: -15.500205039978027
    5. 'true' → logprob: -16.12520408630371
    6. '(True' → logprob: -17.75020408630371
    7. '   ' → logprob: -18.37520408630371
    8. 'False' → logprob: -19.37520408630371
    9. '=True' → logprob: -19.87520408630371
    10. 'not' → logprob: -20.50020408630371

Token 648: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32193273305892944
    2. 'heap' → logprob: -1.4469327926635742
    3. '
' → logprob: -3.821932792663574
    4. '            
' → logprob: -5.196932792663574
    5. ' heap' → logprob: -5.196932792663574
    6. '```' → logprob: -5.696932792663574
    7. '               ' → logprob: -6.946932792663574
    8. '       ' → logprob: -7.821932792663574
    9. '                   ' → logprob: -8.071932792663574
    10. '   ' → logprob: -8.321932792663574

Token 649: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25927454233169556
    2. 'heap' → logprob: -2.259274482727051
    3. ' heap' → logprob: -2.634274482727051
    4. '
' → logprob: -4.509274482727051
    5. '            
' → logprob: -4.509274482727051
    6. ' 
' → logprob: -4.884274482727051
    7. '                   ' → logprob: -5.384274482727051
    8. ' operators' → logprob: -5.509274482727051
    9. '               ' → logprob: -5.759274482727051
    10. 'operators' → logprob: -6.009274482727051

Token 650: ' free' (ID: 2240)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.451116051815916e-05
    2. '           ' → logprob: -10.750024795532227
    3. ' heap' → logprob: -13.125024795532227
    4. '   ' → logprob: -14.375024795532227
    5. '               ' → logprob: -15.875024795532227
    6. '```' → logprob: -16.125024795532227
    7. '
' → logprob: -16.500024795532227
    8. 'operator' → logprob: -16.500024795532227
    9. '                   ' → logprob: -17.625024795532227
    10. 'op' → logprob: -17.750024795532227

Token 651: '_at' (ID: 8254)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.013752187602221966
    2. '_until' → logprob: -4.638751983642578
    3. '_at' → logprob: -6.388751983642578
    4. ' =' → logprob: -7.138751983642578
    5. '_times' → logprob: -7.263751983642578
    6. '=' → logprob: -8.138751983642578
    7. '```' → logprob: -8.638751983642578
    8. 'time' → logprob: -9.388751983642578
    9. '_' → logprob: -9.638751983642578
    10. '[' → logprob: -10.263751983642578

Token 652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5875060558319092
    2. ' =' → logprob: -1.7125060558319092
    3. '[current' → logprob: -2.087506055831909
    4. '=current' → logprob: -2.837506055831909
    5. 'current' → logprob: -3.212506055831909
    6. ' current' → logprob: -3.587506055831909
    7. '.append' → logprob: -5.462506294250488
    8. '_current' → logprob: -5.837506294250488
    9. '(current' → logprob: -6.712506294250488
    10. '[' → logprob: -6.712506294250488

Token 653: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0007099286303855479
    2. ' current' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.875709533691406
    4. '	current' → logprob: -21.250709533691406
    5. '(current' → logprob: -21.375709533691406
    6. '[current' → logprob: -22.125709533691406
    7. '=current' → logprob: -22.250709533691406
    8. '_current' → logprob: -22.375709533691406
    9. '$current' → logprob: -22.750709533691406
    10. 'Current' → logprob: -23.125709533691406

Token 654: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.12258882028982e-05
    2. '+' → logprob: -10.00006103515625
    3. '_' → logprob: -11.50006103515625
    4. 'time' → logprob: -13.12506103515625
    5. ' _' → logprob: -13.50006103515625
    6. '_token' → logprob: -13.50006103515625
    7. ' +' → logprob: -15.00006103515625
    8. '_t' → logprob: -15.75006103515625
    9. '_tokens' → logprob: -16.25006103515625
    10. ' time' → logprob: -17.00006103515625

Token 655: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931476593017578
    2. ' +' → logprob: -0.6931476593017578
    3. '+C' → logprob: -15.443147659301758
    4. '+
' → logprob: -16.318147659301758
    5. ' plus' → logprob: -16.818147659301758
    6. '+m' → logprob: -16.818147659301758
    7. '   ' → logprob: -17.068147659301758
    8. '＋' → logprob: -17.568147659301758
    9. ' +
' → logprob: -17.818147659301758
    10. '+c' → logprob: -17.943147659301758

Token 656: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005233882926404476
    2. ' M' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.630233764648438
    4. ' ' → logprob: -17.005233764648438
    5. '  ' → logprob: -18.255233764648438
    6. '    ' → logprob: -19.005233764648438
    7. '	M' → logprob: -19.255233764648438
    8. '(M' → logprob: -20.505233764648438
    9. '```' → logprob: -20.755233764648438
    10. 'L' → logprob: -21.130233764648438

Token 657: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.008735123090445995
    2. '           ' → logprob: -5.258735179901123
    3. ')
' → logprob: -6.633735179901123
    4. '
' → logprob: -7.258735179901123
    5. ')' → logprob: -7.633735179901123
    6. ' heap' → logprob: -7.883735179901123
    7. '```' → logprob: -8.133734703063965
    8. '   ' → logprob: -9.008734703063965
    9. '(heap' → logprob: -9.008734703063965
    10. '       ' → logprob: -10.883734703063965

Token 658: '           ' (ID: 352)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.012013894505798817
    2. '           ' → logprob: -4.512013912200928
    3. ' heap' → logprob: -7.012013912200928
    4. '(heap' → logprob: -10.38701343536377
    5. '.heap' → logprob: -11.88701343536377
    6. 'he' → logprob: -12.13701343536377
    7. '               ' → logprob: -12.38701343536377
    8. '```' → logprob: -12.38701343536377
    9. '_heap' → logprob: -12.88701343536377
    10. '       ' → logprob: -13.13701343536377

Token 659: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -5.512236498361744e-07
    2. ' heap' → logprob: -14.750000953674316
    3. '```' → logprob: -17.375
    4. 'he' → logprob: -19.75
    5. '   ' → logprob: -20.625
    6. '           ' → logprob: -21.5
    7. '.heap' → logprob: -21.5
    8. '(heap' → logprob: -21.5
    9. '
' → logprob: -22.0
    10. '_heap' → logprob: -22.625

Token 660: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.0002128382766386494
    2. ' free' → logprob: -8.500212669372559
    3. 'fre' → logprob: -12.625212669372559
    4. 'op' → logprob: -13.000212669372559
    5. '	free' → logprob: -14.000212669372559
    6. 'current' → logprob: -14.375212669372559
    7. 'M' → logprob: -14.625212669372559
    8. 'heap' → logprob: -15.125212669372559
    9. '   ' → logprob: -15.250212669372559
    10. '0' → logprob: -15.375212669372559

Token 661: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.003682974725961685
    2. 'at' → logprob: -5.753683090209961
    3. '-at' → logprob: -8.753683090209961
    4. '_' → logprob: -9.378683090209961
    5. '_in' → logprob: -10.128683090209961
    6. '_time' → logprob: -10.253683090209961
    7. '[' → logprob: -10.253683090209961
    8. ')' → logprob: -10.753683090209961
    9. '   ' → logprob: -11.128683090209961
    10. ' at' → logprob: -11.128683090209961

Token 662: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9233382344245911
    2. ' <=' → logprob: -1.1733381748199463
    3. '>' → logprob: -1.5483381748199463
    4. ' >' → logprob: -2.9233381748199463
    5. '<' → logprob: -4.423338413238525
    6. ')' → logprob: -5.173338413238525
    7. ' <' → logprob: -5.548338413238525
    8. '<|end|>' → logprob: -5.798338413238525
    9. ' not' → logprob: -6.673338413238525
    10. ')<=' → logprob: -8.548337936401367

Token 663: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.000145137935760431
    2. ' T' → logprob: -8.875144958496094
    3. 'free' → logprob: -13.000144958496094
    4. ' ' → logprob: -14.125144958496094
    5. 'current' → logprob: -14.250144958496094
    6. 'operators' → logprob: -14.375144958496094
    7. '  ' → logprob: -15.250144958496094
    8. '   ' → logprob: -15.625144958496094
    9. ' free' → logprob: -15.875144958496094
    10. ' operators' → logprob: -16.250144958496094

Token 664: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10069474577903748
    2. ':
' → logprob: -2.4756946563720703
    3. ')' → logprob: -5.35069465637207
    4. '           ' → logprob: -6.10069465637207
    5. '):' → logprob: -6.72569465637207
    6. 'heap' → logprob: -6.97569465637207
    7. '               ' → logprob: -7.35069465637207
    8. '                       ' → logprob: -7.97569465637207
    9. '):
' → logprob: -7.97569465637207
    10. ' heap' → logprob: -8.22569465637207

Token 665: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022974997758865356
    2. 'continue' → logprob: -4.772974967956543
    3. ' continue' → logprob: -5.397974967956543
    4. 'break' → logprob: -5.647974967956543
    5. 'heap' → logprob: -6.022974967956543
    6. ' heap' → logprob: -6.647974967956543
    7. ' break' → logprob: -6.772974967956543
    8. '           ' → logprob: -7.397974967956543
    9. '```' → logprob: -8.147974967956543
    10. '                   ' → logprob: -8.397974967956543

Token 666: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0640227273106575
    2. '               ' → logprob: -2.8140227794647217
    3. '           ' → logprob: -6.564022541046143
    4. ' return' → logprob: -7.439022541046143
    5. '                   ' → logprob: -10.3140230178833
    6. '   ' → logprob: -11.5640230178833
    7. '                       ' → logprob: -12.1890230178833
    8. '       ' → logprob: -12.6890230178833
    9. '	return' → logprob: -12.9390230178833
    10. ':return' → logprob: -13.9390230178833

Token 667: ' Over' (ID: 7931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006153396097943187
    2. '               ' → logprob: -8.000615119934082
    3. '           ' → logprob: -8.750615119934082
    4. ' return' → logprob: -9.250615119934082
    5. '                   ' → logprob: -10.750615119934082
    6. '   ' → logprob: -12.875615119934082
    7. '       ' → logprob: -14.250615119934082
    8. '                       ' → logprob: -14.375615119934082
    9. '	return' → logprob: -15.875615119934082
    10. '#' → logprob: -16.7506160736084

Token 668: ' time' (ID: 1058)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.7723557949066162
    2. '           ' → logprob: -1.3973557949066162
    3. 'return' → logprob: -1.8973557949066162
    4. 'limit' → logprob: -2.647355794906616
    5. '               ' → logprob: -3.647355794906616
    6. 'run' → logprob: -4.022356033325195
    7. 'break' → logprob: -4.772356033325195
    8. '       ' → logprob: -5.397356033325195
    9. 'turn' → logprob: -5.522356033325195
    10. 'time' → logprob: -6.647356033325195

Token 669: ' limit' (ID: 5967)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7545493841171265
    2. '           ' → logprob: -1.6295493841171265
    3. 'return' → logprob: -1.6295493841171265
    4. '                   ' → logprob: -2.379549503326416
    5. ' return' → logprob: -3.379549503326416
    6. ':
' → logprob: -4.879549503326416
    7. '                       ' → logprob: -7.254549503326416
    8. '
' → logprob: -7.379549503326416
    9. ')' → logprob: -7.504549503326416
    10. ':return' → logprob: -7.879549503326416

Token 670: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4606841504573822
    2. 'return' → logprob: -1.4606841802597046
    3. ' return' → logprob: -2.210684061050415
    4. '           ' → logprob: -4.085684299468994
    5. '                   ' → logprob: -4.585684299468994
    6. '                       ' → logprob: -8.210683822631836
    7. '   ' → logprob: -9.960683822631836
    8. '                           ' → logprob: -9.960683822631836
    9. ':return' → logprob: -10.460683822631836
    10. '```' → logprob: -10.960683822631836

Token 671: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.041104577481746674
    2. 'return' → logprob: -3.291104555130005
    3. ' return' → logprob: -6.291104793548584
    4. '           ' → logprob: -7.041104793548584
    5. '                   ' → logprob: -8.041104316711426
    6. '   ' → logprob: -11.916104316711426
    7. '       ' → logprob: -14.416104316711426
    8. '```' → logprob: -14.666104316711426
    9. '                       ' → logprob: -14.791104316711426
    10. ':return' → logprob: -15.416104316711426

Token 672: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017526530427858233
    2. ' return' → logprob: -7.001752853393555
    3. '               ' → logprob: -7.251752853393555
    4. '           ' → logprob: -9.376752853393555
    5. '                   ' → logprob: -10.126752853393555
    6. '                       ' → logprob: -12.876752853393555
    7. '   ' → logprob: -13.251752853393555
    8. '	return' → logprob: -14.001752853393555
    9. ':return' → logprob: -14.001752853393555
    10. '       ' → logprob: -14.376752853393555

Token 673: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. '(False' → logprob: -18.625036239624023
    4. 'True' → logprob: -19.125036239624023
    5. '   ' → logprob: -19.375036239624023
    6. 'None' → logprob: -21.250036239624023
    7. 'false' → logprob: -21.375036239624023
    8. '0' → logprob: -22.500036239624023
    9. '=False' → logprob: -22.750036239624023
    10. '
' → logprob: -22.875036239624023

Token 674: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37753790616989136
    2. '
' → logprob: -1.2525379657745361
    3. '            
' → logprob: -3.627537965774536
    4. '        
' → logprob: -7.502537727355957
    5. '
' → logprob: -7.627537727355957
    6. '    
' → logprob: -8.002537727355957
    7. '  
' → logprob: -8.752537727355957
    8. ' 
' → logprob: -9.002537727355957
    9. '                
' → logprob: -9.127537727355957
    10. '\n' → logprob: -9.377537727355957

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12506400048732758
    2. 'heap' → logprob: -2.375063896179199
    3. ' heap' → logprob: -4.625063896179199
    4. '            
' → logprob: -4.875063896179199
    5. '
' → logprob: -6.375063896179199
    6. ')' → logprob: -7.000063896179199
    7. '```' → logprob: -7.000063896179199
    8. ' 
' → logprob: -7.000063896179199
    9. '(heap' → logprob: -7.625063896179199
    10. '               ' → logprob: -7.750063896179199

Token 676: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0007135047344490886
    2. '           ' → logprob: -7.500713348388672
    3. ' heap' → logprob: -8.750713348388672
    4. '   ' → logprob: -13.875713348388672
    5. '```' → logprob: -14.500713348388672
    6. '            
' → logprob: -15.625713348388672
    7. '(heap' → logprob: -15.625713348388672
    8. '       ' → logprob: -16.125713348388672
    9. ' ' → logprob: -16.625713348388672
    10. '``' → logprob: -17.000713348388672

Token 677: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. '[' → logprob: -17.625
    3. 'app' → logprob: -17.75
    4. '.he' → logprob: -19.375
    5. '```' → logprob: -19.375
    6. 'qx' → logprob: -19.5
    7. '.append' → logprob: -19.625
    8. 'replace' → logprob: -19.875
    9. '.q' → logprob: -20.125
    10. 'ql' → logprob: -20.375

Token 678: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.6219907402992249
    2. 'he' → logprob: -0.8719907402992249
    3. 'q' → logprob: -3.37199068069458
    4. 'push' → logprob: -5.12199068069458
    5. 'app' → logprob: -6.24699068069458
    6. 'ush' → logprob: -6.37199068069458
    7. 'heap' → logprob: -7.37199068069458
    8. 'p' → logprob: -9.246991157531738
    9. '_he' → logprob: -9.371991157531738
    10. '.heap' → logprob: -9.371991157531738

Token 679: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0016278100665658712
    2. 'pp' → logprob: -6.7516279220581055
    3. 'push' → logprob: -7.8766279220581055
    4. 'ush' → logprob: -9.751627922058105
    5. 'p' → logprob: -11.626627922058105
    6. 'op' → logprob: -12.626627922058105
    7. 'he' → logprob: -12.751627922058105
    8. 'ap' → logprob: -13.501627922058105
    9. 'q' → logprob: -13.626627922058105
    10. 'append' → logprob: -13.876627922058105

Token 680: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00024727347772568464
    2. 'op' → logprob: -8.37524700164795
    3. 'push' → logprob: -11.37524700164795
    4. 'uf' → logprob: -13.75024700164795
    5. 'e' → logprob: -13.87524700164795
    6. 'p' → logprob: -14.37524700164795
    7. '```' → logprob: -14.62524700164795
    8. 'u' → logprob: -15.12524700164795
    9. 'app' → logprob: -15.12524700164795
    10. 'ap' → logprob: -15.37524700164795

Token 681: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005532711511477828
    2. 'operators' → logprob: -7.500553131103516
    3. ' operators' → logprob: -16.625553131103516
    4. '```' → logprob: -16.875553131103516
    5. 'Operators' → logprob: -17.125553131103516
    6. ' (' → logprob: -17.375553131103516
    7. '(operator' → logprob: -17.625553131103516
    8. '/operators' → logprob: -17.750553131103516
    9. '(
' → logprob: -18.750553131103516
    10. 'operator' → logprob: -19.750553131103516

Token 682: 'operators' (ID: 68510)
  Prédit: 'operators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. ' operators' → logprob: -15.500000953674316
    4. 'operations' → logprob: -17.75
    5. 'oper' → logprob: -20.75
    6. '```' → logprob: -21.875
    7. '/operators' → logprob: -22.375
    8. 'operator' → logprob: -23.0
    9. 'opers' → logprob: -23.125
    10. 'processors' → logprob: -23.875

Token 683: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3412139415740967
    2. ',' → logprob: -1.5912139415740967
    3. '(f' → logprob: -2.4662139415740967
    4. '(op' → logprob: -8.341214179992676
    5. '(operator' → logprob: -8.841214179992676
    6. ',f' → logprob: -9.716214179992676
    7. ' (' → logprob: -10.966214179992676
    8. ',(' → logprob: -11.216214179992676
    9. ' ,' → logprob: -11.716214179992676
    10. '(heap' → logprob: -11.841214179992676

Token 684: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.011047935113310814
    2. ' free' → logprob: -4.511047840118408
    3. 'fre' → logprob: -15.636048316955566
    4. '	free' → logprob: -18.01104736328125
    5. '_free' → logprob: -18.26104736328125
    6. '.free' → logprob: -18.51104736328125
    7. 'Free' → logprob: -19.76104736328125
    8. 'f' → logprob: -20.38604736328125
    9. '-free' → logprob: -20.76104736328125
    10. ')' → logprob: -20.88604736328125

Token 685: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0002895834331866354
    2. 'at' → logprob: -8.250289916992188
    3. 'q' → logprob: -10.750289916992188
    4. '_free' → logprob: -13.625289916992188
    5. 'At' → logprob: -13.625289916992188
    6. 'f' → logprob: -13.750289916992188
    7. '(at' → logprob: -14.000289916992188
    8. 'free' → logprob: -14.250289916992188
    9. '	at' → logprob: -14.250289916992188
    10. '(' → logprob: -15.625289916992188

Token 686: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015897235134616494
    2. '       ' → logprob: -6.751589775085449
    3. '<|end|>' → logprob: -8.00158977508545
    4. ')
' → logprob: -10.12658977508545
    5. ' )' → logprob: -10.75158977508545
    6. ')return' → logprob: -11.62658977508545
    7. '<|end|>' → logprob: -12.12658977508545
    8. '   ' → logprob: -13.25158977508545
    9. '           ' → logprob: -13.25158977508545
    10. ')}' → logprob: -13.50158977508545

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004145830404013395
    2. '        
' → logprob: -6.629145622253418
    3. 'while' → logprob: -6.754145622253418
    4. '           ' → logprob: -7.754145622253418
    5. '```' → logprob: -7.754145622253418
    6. '   ' → logprob: -8.254145622253418
    7. ')' → logprob: -8.754145622253418
    8. ' while' → logprob: -8.754145622253418
    9. '#' → logprob: -10.254145622253418
    10. '            
' → logprob: -10.379145622253418

Token 688: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.041907161474227905
    2. '       ' → logprob: -3.4169070720672607
    3. 'if' → logprob: -5.29190731048584
    4. '#' (adapté à ' #') → logprob: -5.79190731048584
    5. ' while' → logprob: -9.91690731048584
    6. '```' → logprob: -10.16690731048584
    7. 'for' → logprob: -11.29190731048584
    8. '        
' → logprob: -11.41690731048584
    9. '   ' → logprob: -11.54190731048584
    10. 'return' → logprob: -11.79190731048584

Token 689: ' Now' (ID: 6549)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07003224641084671
    2. '#' → logprob: -2.6950323581695557
    3. '
' → logprob: -10.320032119750977
    4. 'if' → logprob: -11.070032119750977
    5. 'processed' → logprob: -11.195032119750977
    6. ' while' → logprob: -11.695032119750977
    7. '   ' → logprob: -12.070032119750977
    8. 'While' → logprob: -12.070032119750977
    9. 'process' → logprob: -12.945032119750977
    10. 'for' → logprob: -13.445032119750977

Token 690: ' process' (ID: 2273)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.33434292674064636
    2. '       ' → logprob: -1.3343429565429688
    3. '#' → logprob: -4.709342956542969
    4. '
' → logprob: -4.959342956542969
    5. ' while' → logprob: -5.959342956542969
    6. '   ' → logprob: -6.334342956542969
    7. '```' → logprob: -9.084342956542969
    8. 'if' → logprob: -9.209342956542969
    9. '        
' → logprob: -9.459342956542969
    10. ' #' → logprob: -9.959342956542969

Token 691: ' all' (ID: 722)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.014090044423937798
    2. 'if' → logprob: -5.264090061187744
    3. 'while' → logprob: -5.514090061187744
    4. ' calls' → logprob: -5.514090061187744
    5. '```' → logprob: -8.014089584350586
    6. '
' → logprob: -8.639089584350586
    7. ' if' → logprob: -9.639089584350586
    8. '   ' → logprob: -10.139089584350586
    9. ' while' → logprob: -10.514089584350586
    10. 'call' → logprob: -10.889089584350586

Token 692: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.2212914675474167
    2. ' calls' → logprob: -1.971291422843933
    3. 'if' → logprob: -3.8462915420532227
    4. 'while' → logprob: -4.096291542053223
    5. ' if' → logprob: -4.096291542053223
    6. ' while' → logprob: -5.721291542053223
    7. '_calls' → logprob: -7.596291542053223
    8. '(c' → logprob: -8.096291542053223
    9. '-c' → logprob: -9.096291542053223
    10. '   ' → logprob: -9.221291542053223

Token 693: ' at' (ID: 540)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2600840628147125
    2. ' while' → logprob: -2.5100841522216797
    3. 'if' → logprob: -3.1350841522216797
    4. ' if' → logprob: -3.6350841522216797
    5. '       ' → logprob: -3.7600841522216797
    6. ' at' → logprob: -3.8850841522216797
    7. ',' → logprob: -4.76008415222168
    8. '```' → logprob: -5.38508415222168
    9. 'at' → logprob: -5.51008415222168
    10. ' that' → logprob: -5.63508415222168

Token 694: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06197597458958626
    2. ' current' → logprob: -2.8119759559631348
    3. '(current' → logprob: -12.561976432800293
    4. 'calls' → logprob: -13.311976432800293
    5. '	current' → logprob: -14.436976432800293
    6. '=current' → logprob: -14.436976432800293
    7. '```' → logprob: -14.561976432800293
    8. '_current' → logprob: -14.686976432800293
    9. ' calls' → logprob: -14.936976432800293
    10. 'the' → logprob: -15.311976432800293

Token 695: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.001931970240548253
    2. '_' → logprob: -7.001932144165039
    3. '_call' → logprob: -7.001932144165039
    4. '_current' → logprob: -10.501932144165039
    5. 'time' → logprob: -10.876932144165039
    6. 'current' → logprob: -11.501932144165039
    7. ' _' → logprob: -11.501932144165039
    8. '```' → logprob: -11.501932144165039
    9. '_code' → logprob: -11.751932144165039
    10. 'call' → logprob: -12.126932144165039

Token 696: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5343030691146851
    2. 'while' → logprob: -0.9093030691146851
    3. ' while' → logprob: -4.909303188323975
    4. '```' → logprob: -5.909303188323975
    5. ',' → logprob: -7.909303188323975
    6. '   ' → logprob: -8.784302711486816
    7. '``' → logprob: -8.784302711486816
    8. '        
' → logprob: -8.909302711486816
    9. '(' → logprob: -9.659302711486816
    10. '	while' → logprob: -10.534302711486816

Token 697: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17029723525047302
    2. 'while' → logprob: -1.9202972650527954
    3. ' while' → logprob: -4.670297145843506
    4. '   ' → logprob: -7.920297145843506
    5. '```' → logprob: -8.920297622680664
    6. ',' → logprob: -9.920297622680664
    7. '	while' → logprob: -10.045297622680664
    8. '        
' → logprob: -10.545297622680664
    9. '
' → logprob: -11.420297622680664
    10. '           ' → logprob: -12.295297622680664

Token 698: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0005300374468788505
    2. ' while' → logprob: -7.750530242919922
    3. '```' → logprob: -9.625530242919922
    4. '   ' → logprob: -11.250530242919922
    5. '       ' → logprob: -11.500530242919922
    6. '
' → logprob: -12.125530242919922
    7. '	while' → logprob: -13.625530242919922
    8. 'if' → logprob: -13.750530242919922
    9. '``' → logprob: -14.000530242919922
    10. '        
' → logprob: -14.625530242919922

Token 699: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.006716436706483364
    2. ' calls' → logprob: -5.006716251373291
    3. 'call' → logprob: -15.00671672821045
    4. '.calls' → logprob: -15.25671672821045
    5. '   ' → logprob: -16.131715774536133
    6. '
' → logprob: -16.756715774536133
    7. ' ' → logprob: -16.881715774536133
    8. '_calls' → logprob: -16.881715774536133
    9. 'calling' → logprob: -17.256715774536133
    10. 'Calls' → logprob: -17.506715774536133

Token 700: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06197004392743111
    2. ' and' → logprob: -2.8119699954986572
    3. '   ' → logprob: -13.561969757080078
    4. '	and' → logprob: -15.061969757080078
    5. '           ' → logprob: -15.936969757080078
    6. '       ' → logprob: -16.061969757080078
    7. '    ' → logprob: -16.186969757080078
    8. '      ' → logprob: -16.311969757080078
    9. '  ' → logprob: -16.561969757080078
    10. '[' → logprob: -16.561969757080078

Token 701: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.011047814972698689
    2. ' calls' → logprob: -4.511047840118408
    3. 'call' → logprob: -18.38604736328125
    4. '_calls' → logprob: -18.51104736328125
    5. '.calls' → logprob: -18.51104736328125
    6. '-c' → logprob: -19.01104736328125
    7. 'c' → logprob: -19.51104736328125
    8. '   ' → logprob: -19.63604736328125
    9. ' ' → logprob: -20.88604736328125
    10. '(c' → logprob: -21.26104736328125

Token 702: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.88418151892256e-05
    2. 'and' → logprob: -9.750059127807617
    3. '```' → logprob: -15.000059127807617
    4. ' and' → logprob: -15.750059127807617
    5. ' [' → logprob: -17.375059127807617
    6. '=' → logprob: -18.000059127807617
    7. '[
' → logprob: -18.250059127807617
    8. '``' → logprob: -18.750059127807617
    9. '\[' → logprob: -19.500059127807617
    10. '   ' → logprob: -19.500059127807617

Token 703: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1603236347436905
    2. '[' → logprob: -1.9103236198425293
    3. ' ' → logprob: -9.535324096679688
    4. '][' → logprob: -11.285324096679688
    5. '   ' → logprob: -12.660324096679688
    6. '```' → logprob: -12.660324096679688
    7. 'calls' → logprob: -12.785324096679688
    8. ' [' → logprob: -12.785324096679688
    9. ' calls' → logprob: -13.785324096679688
    10. '()[' → logprob: -14.535324096679688

Token 704: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012541436590254307
    2. '][' → logprob: -4.3875412940979
    3. '```' → logprob: -11.887541770935059
    4. '==' → logprob: -12.012541770935059
    5. ' [' → logprob: -12.137541770935059
    6. '()[' → logprob: -12.762541770935059
    7. ' ][' → logprob: -13.137541770935059
    8. ')[' → logprob: -13.137541770935059
    9. ''][' → logprob: -14.137541770935059
    10. ']' → logprob: -14.137541770935059

Token 705: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '
' → logprob: -14.125025749206543
    4. '[' → logprob: -14.875025749206543
    5. '   ' → logprob: -15.875025749206543
    6. '```' → logprob: -16.12502670288086
    7. '==' → logprob: -16.87502670288086
    8. '=' → logprob: -17.50002670288086
    9. '۰' → logprob: -18.37502670288086
    10. '  ' → logprob: -19.06252670288086

Token 706: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5623890161514282
    2. '==' → logprob: -1.5623890161514282
    3. ' ==' → logprob: -2.3123888969421387
    4. ']' → logprob: -2.3123888969421387
    5. '[' → logprob: -3.9373888969421387
    6. '][' → logprob: -6.062388896942139
    7. '```' → logprob: -8.562389373779297
    8. ')==' → logprob: -8.812389373779297
    9. ' ]' → logprob: -9.312389373779297
    10. ')' → logprob: -10.062389373779297

Token 707: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10090092569589615
    2. ' ==' → logprob: -2.350900888442993
    3. '<=' → logprob: -7.350901126861572
    4. ' <=' → logprob: -10.475900650024414
    5. ']==' → logprob: -11.850900650024414
    6. '===' → logprob: -12.475900650024414
    7. '```' → logprob: -12.475900650024414
    8. '==
' → logprob: -12.975900650024414
    9. ')==' → logprob: -12.975900650024414
    10. '()==' → logprob: -13.350900650024414

Token 708: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004078401252627373
    2. ' current' → logprob: -5.504078388214111
    3. '(current' → logprob: -19.504077911376953
    4. '	current' → logprob: -20.004077911376953
    5. '   ' → logprob: -20.129077911376953
    6. '
' → logprob: -20.254077911376953
    7. '$current' → logprob: -21.129077911376953
    8. '[current' → logprob: -21.254077911376953
    9. '_current' → logprob: -21.629077911376953
    10. '=current' → logprob: -21.754077911376953

Token 709: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00044651966891251504
    2. '_call' → logprob: -7.750446319580078
    3. '_calls' → logprob: -11.750446319580078
    4. 'time' → logprob: -12.750446319580078
    5. 'call' → logprob: -13.625446319580078
    6. '_' → logprob: -13.750446319580078
    7. '_code' → logprob: -13.875446319580078
    8. 'current' → logprob: -14.375446319580078
    9. ' _' → logprob: -15.125446319580078
    10. '_token' → logprob: -15.625446319580078

Token 710: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6344670653343201
    2. ':
' → logprob: -1.3844671249389648
    3. ':' → logprob: -1.6344671249389648
    4. '       ' → logprob: -4.134467124938965
    5. '):
' → logprob: -5.759467124938965
    6. ',c' → logprob: -6.009467124938965
    7. ' and' → logprob: -7.759467124938965
    8. '<|end|>' → logprob: -8.259467124938965
    9. '           ' → logprob: -8.384467124938965
    10. '):' → logprob: -8.884467124938965

Token 711: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2972712516784668
    2. ',' → logprob: -2.547271251678467
    3. '           ' → logprob: -2.672271251678467
    4. '```' → logprob: -3.047271251678467
    5. '   ' → logprob: -3.922271251678467
    6. 'call' → logprob: -4.172271251678467
    7. ' call' → logprob: -4.797271251678467
    8. '_,' → logprob: -5.422271251678467
    9. '`' → logprob: -6.422271251678467
    10. 'token' → logprob: -6.547271251678467

Token 712: ' _,' (ID: 18042)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.5657494068145752
    2. 'time' → logprob: -1.1907494068145752
    3. '_,' (adapté à ' _,') → logprob: -2.190749406814575
    4. ' call' → logprob: -5.065749168395996
    5. ' time' → logprob: -5.315749168395996
    6. '_time' → logprob: -6.565749168395996
    7. '_call' → logprob: -7.065749168395996
    8. ' _,' → logprob: -7.190749168395996
    9. 'ct' → logprob: -7.815749168395996
    10. '(call' → logprob: -7.940749168395996

Token 713: ' cid' (ID: 55379)
  Prédit: 'cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -4.751746746478602e-05
    2. ' cid' → logprob: -10.12504768371582
    3. 'i' → logprob: -13.37504768371582
    4. 'customer' → logprob: -13.37504768371582
    5. '   ' → logprob: -13.50004768371582
    6. 'cust' → logprob: -13.75004768371582
    7. '```' → logprob: -14.25004768371582
    8. '(cid' → logprob: -14.62504768371582
    9. 'cus' → logprob: -16.12504768371582
    10. 'client' → logprob: -16.25004768371582

Token 714: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38704773783683777
    2. ' =' → logprob: -1.1370477676391602
    3. '           ' → logprob: -8.76204776763916
    4. '   ' → logprob: -11.88704776763916
    5. '       ' → logprob: -12.38704776763916
    6. '               ' → logprob: -13.13704776763916
    7. '            ' → logprob: -13.51204776763916
    8. '    ' → logprob: -13.76204776763916
    9. ')' → logprob: -14.01204776763916
    10. '        ' → logprob: -14.38704776763916

Token 715: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00015979631280060858
    2. ' heap' → logprob: -8.750160217285156
    3. 'calls' → logprob: -13.875160217285156
    4. '           ' → logprob: -15.375160217285156
    5. '   ' → logprob: -16.250160217285156
    6. ' calls' → logprob: -17.000160217285156
    7. 'he' → logprob: -18.625160217285156
    8. '       ' → logprob: -19.500160217285156
    9. '(heap' → logprob: -19.750160217285156
    10. 'call' → logprob: -20.000160217285156

Token 716: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.500003814697266
    3. '.he' → logprob: -13.750003814697266
    4. 'app' → logprob: -14.500003814697266
    5. 'he' → logprob: -14.750003814697266
    6. 'replace' → logprob: -15.000003814697266
    7. 'op' → logprob: -18.000003814697266
    8. 'p' → logprob: -18.000003814697266
    9. '```' → logprob: -18.875003814697266
    10. ' he' → logprob: -18.875003814697266

Token 717: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.4152548015117645
    2. 'app' → logprob: -1.790254831314087
    3. 'he' → logprob: -2.165254831314087
    4. 'op' → logprob: -2.915254831314087
    5. 'q' → logprob: -6.040254592895508
    6. 'ush' → logprob: -7.415254592895508
    7. 'heap' → logprob: -7.790254592895508
    8. '.heap' → logprob: -8.290254592895508
    9. '[' → logprob: -9.290254592895508
    10. 'pop' → logprob: -9.415254592895508

Token 718: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.017927029868588e-05
    2. 'ap' → logprob: -9.500080108642578
    3. 'pp' → logprob: -12.500080108642578
    4. 'appe' → logprob: -15.000080108642578
    5. '[' → logprob: -15.375080108642578
    6. 'op' → logprob: -15.625080108642578
    7. 'q' → logprob: -15.625080108642578
    8. '```' → logprob: -16.000080108642578
    9. 'appen' → logprob: -16.125080108642578
    10. 'a' → logprob: -16.625080108642578

Token 719: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.46861782670021057
    2. 'app' → logprob: -1.0936177968978882
    3. 'ush' → logprob: -3.4686179161071777
    4. 'pp' → logprob: -5.593617916107178
    5. 'pop' → logprob: -5.718617916107178
    6. 'he' → logprob: -7.718617916107178
    7. 'p' → logprob: -8.34361743927002
    8. 'opp' → logprob: -9.21861743927002
    9. 'q' → logprob: -9.71861743927002
    10. 'ap' → logprob: -10.34361743927002

Token 720: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.3438327843905427e-05
    2. 'calls' → logprob: -10.75002384185791
    3. 'c' → logprob: -13.37502384185791
    4. ' calls' → logprob: -14.87502384185791
    5. '(' → logprob: -17.750022888183594
    6. '(call' → logprob: -18.750022888183594
    7. '	c' → logprob: -19.125022888183594
    8. '.calls' → logprob: -19.375022888183594
    9. '(
' → logprob: -19.625022888183594
    10. 'call' → logprob: -19.750022888183594

Token 721: 'alls' (ID: 6539)
  Prédit: 'alls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alls' → logprob: -9.05499910004437e-05
    2. 'calls' → logprob: -9.375090599060059
    3. 'all' → logprob: -12.375090599060059
    4. 'als' → logprob: -15.500090599060059
    5. ' calls' → logprob: -15.500090599060059
    6. '_calls' → logprob: -15.875090599060059
    7. '{' → logprob: -16.125089645385742
    8. ')' → logprob: -16.250089645385742
    9. 'ails' → logprob: -16.500089645385742
    10. 'allback' → logprob: -16.500089645385742

Token 722: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11683870851993561
    2. ')' → logprob: -2.3668386936187744
    3. '           ' → logprob: -4.2418389320373535
    4. ',' → logprob: -6.2418389320373535
    5. ')
' → logprob: -10.116838455200195
    6. '       ' → logprob: -10.491838455200195
    7. ')

' → logprob: -10.991838455200195
    8. '   ' → logprob: -11.366838455200195
    9. ' )
' → logprob: -11.616838455200195
    10. ',
' → logprob: -11.616838455200195

Token 723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16093184053897858
    2. 'heap' → logprob: -2.4109318256378174
    3. 'M' → logprob: -3.7859318256378174
    4. 'if' → logprob: -4.1609320640563965
    5. 'customer' → logprob: -4.9109320640563965
    6. '       ' → logprob: -5.5359320640563965
    7. 'cust' → logprob: -6.1609320640563965
    8. '```' → logprob: -6.1609320640563965
    9. '   ' → logprob: -6.9109320640563965
    10. 'cid' → logprob: -7.2859320640563965

Token 724: ' if' (ID: 538)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.026887336745858192
    2. 'heap' → logprob: -5.0268874168396
    3. '   ' → logprob: -5.1518874168396
    4. 'cid' → logprob: -5.2768874168396
    5. 'customer' → logprob: -5.4018874168396
    6. 'c' → logprob: -6.4018874168396
    7. 'cust' → logprob: -6.7768874168396
    8. 'call' → logprob: -7.9018874168396
    9. '       ' → logprob: -8.401886940002441
    10. '           ' → logprob: -8.526886940002441

Token 725: ' done' (ID: 4167)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1297776848077774
    2. 'done' → logprob: -2.129777669906616
    3. ' not' → logprob: -6.004777908325195
    4. '   ' → logprob: -8.879777908325195
    5. ' done' → logprob: -9.129777908325195
    6. 'can' → logprob: -10.004777908325195
    7. '(not' → logprob: -10.254777908325195
    8. '           ' → logprob: -10.754777908325195
    9. '(done' → logprob: -12.004777908325195
    10. '	not' → logprob: -13.004777908325195

Token 726: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. 'cid' → logprob: -17.0
    4. '(cid' → logprob: -17.125
    5. '\[' → logprob: -19.0
    6. '[' → logprob: -19.375
    7. '
' → logprob: -19.625
    8. '[
' → logprob: -19.75
    9. '   ' → logprob: -20.625
    10. ')[' → logprob: -20.75

Token 727: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.004223589785397053
    2. '[c' → logprob: -5.879223823547363
    3. 'cid' → logprob: -6.879223823547363
    4. '[id' → logprob: -8.504223823547363
    5. '[' → logprob: -9.004223823547363
    6. '(cid' → logprob: -9.879223823547363
    7. 'ids' → logprob: -13.129223823547363
    8. '```' → logprob: -13.379223823547363
    9. '[
' → logprob: -13.504223823547363
    10. 'c' → logprob: -13.754223823547363

Token 728: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2507593035697937
    2. ':' → logprob: -1.6257593631744385
    3. ']:' → logprob: -4.750759124755859
    4. ']:
' → logprob: -5.000759124755859
    5. ':return' → logprob: -6.250759124755859
    6. '==' → logprob: -6.500759124755859
    7. '):
' → logprob: -6.750759124755859
    8. '               ' → logprob: -6.750759124755859
    9. ' or' → logprob: -6.875759124755859
    10. '[' → logprob: -7.250759124755859

Token 729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004106423351913691
    2. ' continue' → logprob: -5.754106521606445
    3. 'continue' → logprob: -7.629106521606445
    4. '```' → logprob: -9.004106521606445
    5. '           ' → logprob: -9.379106521606445
    6. '       ' → logprob: -10.004106521606445
    7. ' continues' → logprob: -10.129106521606445
    8. ',' → logprob: -10.254106521606445
    9. '   ' → logprob: -11.379106521606445
    10. ':' → logprob: -11.504106521606445

Token 730: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7669243812561035
    2. '               ' → logprob: -1.0169243812561035
    3. ' continue' → logprob: -1.7669243812561035
    4. '   ' → logprob: -6.1419243812561035
    5. '           ' → logprob: -7.5169243812561035
    6. '                   ' → logprob: -8.641923904418945
    7. '	continue' → logprob: -9.766923904418945
    8. '```' → logprob: -10.641923904418945
    9. ' ' → logprob: -10.891923904418945
    10. '       ' → logprob: -10.891923904418945

Token 731: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13808444142341614
    2. 'heap' → logprob: -2.1380844116210938
    3. ' heap' → logprob: -5.513084411621094
    4. '       ' → logprob: -6.513084411621094
    5. 'deadline' → logprob: -6.513084411621094
    6. '
' → logprob: -7.013084411621094
    7. 'if' → logprob: -7.013084411621094
    8. '(heap' → logprob: -7.638084411621094
    9. '            
' → logprob: -7.888084411621094
    10. '```' → logprob: -8.263084411621094

Token 732: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14970999956130981
    2. 'heap' → logprob: -2.149709939956665
    3. '```' → logprob: -4.649710178375244
    4. ' heap' → logprob: -5.399710178375244
    5. '       ' → logprob: -5.774710178375244
    6. '   ' → logprob: -6.649710178375244
    7. '(heap' → logprob: -6.899710178375244
    8. 'if' → logprob: -7.149710178375244
    9. '
' → logprob: -7.274710178375244
    10. 'deadline' → logprob: -7.774710178375244

Token 733: ' M' (ID: 391)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.24450169503688812
    2. 'M' (adapté à ' M') → logprob: -2.1195015907287598
    3. 'customer' → logprob: -3.2445015907287598
    4. '           ' → logprob: -3.7445015907287598
    5. 'call' → logprob: -4.24450159072876
    6. 'deadline' → logprob: -5.11950159072876
    7. 'cust' → logprob: -5.36950159072876
    8. 'if' → logprob: -5.99450159072876
    9. 'L' → logprob: -6.49450159072876
    10. '   ' → logprob: -6.99450159072876

Token 734: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025776340044103563
    2. '=' → logprob: -9.00025749206543
    3. ',L' → logprob: -9.37525749206543
    4. ' ,' → logprob: -11.00025749206543
    5. ',c' → logprob: -11.25025749206543
    6. ' =' → logprob: -11.75025749206543
    7. '           ' → logprob: -13.00025749206543
    8. ',
' → logprob: -13.12525749206543
    9. ',C' → logprob: -13.75025749206543
    10. ',M' → logprob: -13.87525749206543

Token 735: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02975616231560707
    2. ' L' → logprob: -3.5297560691833496
    3. '   ' → logprob: -13.029756546020508
    4. ',' → logprob: -14.029756546020508
    5. '  ' → logprob: -14.279756546020508
    6. '           ' → logprob: -14.529756546020508
    7. ' ' → logprob: -14.654756546020508
    8. '    ' → logprob: -15.029756546020508
    9. ',L' → logprob: -15.279756546020508
    10. '
' → logprob: -16.029756546020508

Token 736: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014120421838015318
    2. ',K' → logprob: -9.375141143798828
    3. ' ,' → logprob: -10.500141143798828
    4. ',L' → logprob: -10.875141143798828
    5. '=' → logprob: -11.875141143798828
    6. '           ' → logprob: -13.875141143798828
    7. ',c' → logprob: -14.375141143798828
    8. ' =' → logprob: -14.625141143798828
    9. ',k' → logprob: -15.875141143798828
    10. '   ' → logprob: -15.875141143798828

Token 737: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001170460251159966
    2. ' K' → logprob: -6.751170635223389
    3. ',' → logprob: -15.37617015838623
    4. ' ' → logprob: -16.751171112060547
    5. ',K' → logprob: -17.126171112060547
    6. '   ' → logprob: -18.126171112060547
    7. '  ' → logprob: -18.501171112060547
    8. '    ' → logprob: -20.126171112060547
    9. '       ' → logprob: -20.251171112060547
    10. '           ' → logprob: -20.626171112060547

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20180439949035645
    2. ' =' → logprob: -1.7018043994903564
    3. '           ' → logprob: -8.326804161071777
    4. ',' → logprob: -9.201804161071777
    5. '   ' → logprob: -10.576804161071777
    6. '       ' → logprob: -11.451804161071777
    7. ')' → logprob: -13.201804161071777
    8. '          ' → logprob: -13.451804161071777
    9. '               ' → logprob: -13.576804161071777
    10. '            ' → logprob: -13.701804161071777

Token 739: ' customers' (ID: 6028)
  Prédit: 'customers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'customers' → logprob: -0.00671584764495492
    2. ' customers' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.631715774536133
    4. 'customer' → logprob: -16.006715774536133
    5. 'clients' → logprob: -16.381715774536133
    6. 'custom' → logprob: -17.006715774536133
    7. 'users' → logprob: -17.756715774536133
    8. 'Customers' → logprob: -18.881715774536133
    9. '           ' → logprob: -19.006715774536133
    10. '
' → logprob: -19.131715774536133

Token 740: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.4121114822482923e-06
    2. 'cid' → logprob: -13.375003814697266
    3. '[' → logprob: -13.500003814697266
    4. '(cid' → logprob: -15.750003814697266
    5. '[
' → logprob: -16.000003814697266
    6. '
' → logprob: -16.875003814697266
    7. '```' → logprob: -16.875003814697266
    8. '=' → logprob: -17.625003814697266
    9. 'c' → logprob: -18.500003814697266
    10. '][' → logprob: -18.625003814697266

Token 741: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00010032468708232045
    2. '[c' → logprob: -9.625100135803223
    3. '[' → logprob: -10.750100135803223
    4. '[id' → logprob: -11.375100135803223
    5. 'cid' → logprob: -14.750100135803223
    6. ']' → logprob: -15.250100135803223
    7. '[
' → logprob: -15.250100135803223
    8. 'ids' → logprob: -15.625100135803223
    9. '(cid' → logprob: -16.00010108947754
    10. 'c' → logprob: -16.62510108947754

Token 742: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.760444164276123
    2. ']
' → logprob: -0.760444164276123
    3. ')' → logprob: -3.260444164276123
    4. ')
' → logprob: -3.635444164276123
    5. '])' → logprob: -9.510444641113281
    6. '           ' → logprob: -9.885444641113281
    7. '[' → logprob: -10.010444641113281
    8. '][' → logprob: -10.510444641113281
    9. '   ' → logprob: -10.635444641113281
    10. ']

' → logprob: -11.010444641113281

Token 743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7449047565460205
    2. 'heap' → logprob: -0.7449047565460205
    3. ' heap' → logprob: -3.1199047565460205
    4. '```' → logprob: -5.494904518127441
    5. 'waiting' → logprob: -7.369904518127441
    6. '(heap' → logprob: -8.244904518127441
    7. 'if' → logprob: -8.494904518127441
    8. ' if' → logprob: -8.744904518127441
    9. ' waiting' → logprob: -8.744904518127441
    10. '``' → logprob: -9.119904518127441

Token 744: ' #' (ID: 1069)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.24046699702739716
    2. 'deadline' → logprob: -1.6154669523239136
    3. ' heap' → logprob: -4.615467071533203
    4. 'dead' → logprob: -6.115467071533203
    5. 'if' → logprob: -7.240467071533203
    6. '           ' → logprob: -7.240467071533203
    7. ' deadline' → logprob: -7.615467071533203
    8. '   ' → logprob: -8.990467071533203
    9. '```' → logprob: -8.990467071533203
    10. 'wait' → logprob: -8.990467071533203

Token 745: ' Add' (ID: 4063)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6416319608688354
    2. 'deadline' → logprob: -0.7666319608688354
    3. 'dead' → logprob: -5.641632080078125
    4. 'if' → logprob: -5.891632080078125
    5. 'call' → logprob: -6.766632080078125
    6. 'wait' → logprob: -7.766632080078125
    7. ' heap' → logprob: -7.891632080078125
    8. 'dl' → logprob: -8.766632080078125
    9. ' deadline' → logprob: -9.266632080078125
    10. 'timeout' → logprob: -9.516632080078125

Token 746: ' to' (ID: 316)
  Prédit: '(cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cid' → logprob: -0.3447677791118622
    2. 'waiting' → logprob: -1.8447678089141846
    3. '(wait' → logprob: -2.0947678089141846
    4. '(c' → logprob: -4.8447675704956055
    5. 'wait' → logprob: -7.0947675704956055
    6. '(' → logprob: -7.0947675704956055
    7. ' (' → logprob: -7.8447675704956055
    8. '_wait' → logprob: -8.594767570495605
    9. ' waiting' → logprob: -8.594767570495605
    10. '   ' → logprob: -9.969767570495605

Token 747: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0007686520111747086
    2. ' waiting' → logprob: -7.250768661499023
    3. 'heap' → logprob: -9.750768661499023
    4. 'wait' → logprob: -14.750768661499023
    5. 'he' → logprob: -16.875768661499023
    6. ' heap' → logprob: -16.875768661499023
    7. 'Waiting' → logprob: -18.500768661499023
    8. '_wait' → logprob: -18.625768661499023
    9. 'queue' → logprob: -18.750768661499023
    10. '(wait' → logprob: -18.750768661499023

Token 748: ' with' (ID: 483)
  Prédit: '(wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(wait' → logprob: -0.032671816647052765
    2. 'waiting' → logprob: -3.7826719284057617
    3. '(heap' → logprob: -5.282671928405762
    4. '(' → logprob: -5.907671928405762
    5. 'heap' → logprob: -6.532671928405762
    6. 'wait' → logprob: -10.157671928405762
    7. ' (' → logprob: -10.657671928405762
    8. '   ' → logprob: -11.157671928405762
    9. '(queue' → logprob: -11.282671928405762
    10. '(c' → logprob: -11.407671928405762

Token 749: ' deadline' (ID: 30435)
  Prédit: '(cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cid' → logprob: -0.10728517919778824
    2. 'cid' → logprob: -2.357285261154175
    3. 'heap' → logprob: -4.982285022735596
    4. 'waiting' → logprob: -9.607285499572754
    5. 'deadline' → logprob: -10.607285499572754
    6. ' cid' → logprob: -10.732285499572754
    7. '(c' → logprob: -10.857285499572754
    8. '(heap' → logprob: -11.232285499572754
    9. 'wait' → logprob: -11.357285499572754
    10. 'priority' → logprob: -11.482285499572754

Token 750: ' =' (ID: 314)
  Prédit: '(cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cid' → logprob: -0.34441956877708435
    2. '(c' → logprob: -1.9694195985794067
    3. '(current' → logprob: -1.9694195985794067
    4. '(heap' → logprob: -5.219419479370117
    5. '(' → logprob: -5.344419479370117
    6. ' (' → logprob: -6.969419479370117
    7. 'heap' → logprob: -7.719419479370117
    8. '(wait' → logprob: -8.344419479370117
    9. '(call' → logprob: -8.969419479370117
    10. '   ' → logprob: -9.344419479370117

Token 751: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00020973898062948138
    2. ' current' → logprob: -8.50020980834961
    3. '(current' → logprob: -12.62520980834961
    4. '_current' → logprob: -12.87520980834961
    5. 'call' → logprob: -15.37520980834961
    6. '   ' → logprob: -17.50020980834961
    7. '=current' → logprob: -17.62520980834961
    8. '_' → logprob: -18.12520980834961
    9. '[current' → logprob: -18.62520980834961
    10. '$current' → logprob: -19.00020980834961

Token 752: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. 'time' → logprob: -15.5
    3. '_token' → logprob: -17.25
    4. '_' → logprob: -17.25
    5. '_t' → logprob: -17.375
    6. '+' → logprob: -18.25
    7. ' _' → logprob: -18.625
    8. 'Time' → logprob: -19.0
    9. '_TIME' → logprob: -20.25
    10. '_times' → logprob: -20.25

Token 753: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7557938098907471
    2. '+' → logprob: -0.8807938098907471
    3. ',' → logprob: -2.255793809890747
    4. ',current' → logprob: -4.755793571472168
    5. ' ,' → logprob: -7.130793571472168
    6. '(current' → logprob: -7.380793571472168
    7. '+c' → logprob: -7.755793571472168
    8. 'current' → logprob: -8.630793571472168
    9. '[current' → logprob: -8.880793571472168
    10. ',c' → logprob: -9.005793571472168

Token 754: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.7610454708337784e-05
    2. ' L' → logprob: -10.500027656555176
    3. ' ' → logprob: -18.00002670288086
    4. '	L' → logprob: -18.12502670288086
    5. ' ' → logprob: -18.87502670288086
    6. '(L' → logprob: -18.87502670288086
    7. '=L' → logprob: -19.00002670288086
    8. '>L' → logprob: -19.12502670288086
    9. '_L' → logprob: -19.37502670288086
    10. ',' → logprob: -19.62502670288086

Token 755: '
' (ID: 198)
  Prédit: '(cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cid' → logprob: -0.2238437831401825
    2. '(' → logprob: -2.598843812942505
    3. ',' → logprob: -2.723843812942505
    4. '(heap' → logprob: -3.223843812942505
    5. '(c' → logprob: -4.348843574523926
    6. ' (' → logprob: -5.848843574523926
    7. 'heap' → logprob: -5.973843574523926
    8. '(
' → logprob: -7.598843574523926
    9. '(current' → logprob: -7.723843574523926
    10. '((' → logprob: -8.723843574523926

Token 756: '           ' (ID: 352)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.02601473405957222
    2. '(heap' → logprob: -3.901014804840088
    3. ' heap' → logprob: -5.901014804840088
    4. ',' → logprob: -6.651014804840088
    5. '(' → logprob: -7.401014804840088
    6. 'he' → logprob: -8.65101432800293
    7. '```' → logprob: -8.65101432800293
    8. '   ' → logprob: -8.90101432800293
    9. ' (' → logprob: -9.40101432800293
    10. '           ' → logprob: -9.90101432800293

Token 757: ' deadline' (ID: 30435)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -9.639096970204264e-05
    2. ' heap' → logprob: -9.250096321105957
    3. 'he' → logprob: -15.875096321105957
    4. '```' → logprob: -16.375097274780273
    5. '   ' → logprob: -17.375097274780273
    6. '(heap' → logprob: -18.125097274780273
    7. '           ' → logprob: -18.375097274780273
    8. '
' → logprob: -18.500097274780273
    9. '            
' → logprob: -20.875097274780273
    10. '.heap' → logprob: -20.875097274780273

Token 758: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01251271367073059
    2. ' =' → logprob: -4.387512683868408
    3. ',' → logprob: -13.012513160705566
    4. '=current' → logprob: -14.637513160705566
    5. '=
' → logprob: -15.637513160705566
    6. ')' → logprob: -16.63751220703125
    7. '   ' → logprob: -17.13751220703125
    8. ' ' → logprob: -18.01251220703125
    9. '```' → logprob: -18.13751220703125
    10. '=cut' → logprob: -18.63751220703125

Token 759: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.006715370807796717
    2. ' current' → logprob: -5.006715297698975
    3. '(current' → logprob: -19.256715774536133
    4. '_current' → logprob: -19.631715774536133
    5. 'Current' → logprob: -21.006715774536133
    6. '=current' → logprob: -21.006715774536133
    7. '   ' → logprob: -21.381715774536133
    8. '	current' → logprob: -21.381715774536133
    9. '$current' → logprob: -21.631715774536133
    10. ' ' → logprob: -22.006715774536133

Token 760: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.735893965815194e-05
    2. 'time' → logprob: -12.000017166137695
    3. '_' → logprob: -12.250017166137695
    4. '+' → logprob: -12.750017166137695
    5. '_token' → logprob: -13.375017166137695
    6. '_t' → logprob: -14.000017166137695
    7. ' _' → logprob: -14.750017166137695
    8. 'Time' → logprob: -15.125017166137695
    9. '_TIME' → logprob: -17.125017166137695
    10. ' time' → logprob: -17.250017166137695

Token 761: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38687217235565186
    2. '+' → logprob: -1.1368721723556519
    3. '+
' → logprob: -15.011872291564941
    4. ' +
' → logprob: -15.136872291564941
    5. '＋' → logprob: -15.636872291564941
    6. ' ' → logprob: -16.636871337890625
    7. ',' → logprob: -16.636871337890625
    8. '<|end|>' → logprob: -16.636871337890625
    9. ' plus' → logprob: -16.886871337890625
    10. ' ' → logprob: -17.136871337890625

Token 762: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0001398929744027555
    2. ' L' → logprob: -8.875140190124512
    3. '	L' → logprob: -18.750139236450195
    4. ' ' → logprob: -19.500139236450195
    5. '>L' → logprob: -19.500139236450195
    6. '   ' → logprob: -19.750139236450195
    7. '
' → logprob: -20.125139236450195
    8. '```' → logprob: -20.875139236450195
    9. '(L' → logprob: -21.125139236450195
    10. '_L' → logprob: -21.250139236450195

Token 763: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.2365301549434662
    2. '           ' → logprob: -1.7365301847457886
    3. ',' → logprob: -3.986530065536499
    4. '
' → logprob: -5.736530303955078
    5. '(heap' → logprob: -5.736530303955078
    6. ' heap' → logprob: -5.861530303955078
    7. '               ' → logprob: -6.486530303955078
    8. ')' → logprob: -6.861530303955078
    9. '       ' → logprob: -7.361530303955078
    10. '   ' → logprob: -7.361530303955078

Token 764: '           ' (ID: 352)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5600081086158752
    2. '           ' → logprob: -0.9350081086158752
    3. ' heap' → logprob: -3.4350080490112305
    4. '(heap' → logprob: -6.3100080490112305
    5. '```' → logprob: -6.9350080490112305
    6. '   ' → logprob: -7.4350080490112305
    7. '       ' → logprob: -8.31000804901123
    8. ',' → logprob: -9.43500804901123
    9. '
' → logprob: -9.43500804901123
    10. '               ' → logprob: -9.56000804901123

Token 765: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -5.796184723294573e-06
    2. ' heap' → logprob: -12.500005722045898
    3. '```' → logprob: -13.125005722045898
    4. '``' → logprob: -18.5000057220459
    5. 'he' → logprob: -18.8750057220459
    6. '(heap' → logprob: -19.1250057220459
    7. '_heap' → logprob: -20.0000057220459
    8. '           ' → logprob: -20.1250057220459
    9. '.heap' → logprob: -20.1250057220459
    10. '
' → logprob: -20.1250057220459

Token 766: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. '.he' → logprob: -15.375
    3. 'heap' → logprob: -18.375
    4. 'he' → logprob: -19.0
    5. 'h' → logprob: -19.125
    6. 'app' → logprob: -19.125
    7. '.heap' → logprob: -19.25
    8. '```' → logprob: -19.5
    9. 'hq' → logprob: -19.625
    10. 'qe' → logprob: -20.75

Token 767: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.07291940599679947
    2. 'he' → logprob: -2.6979193687438965
    3. 'ush' → logprob: -5.9479193687438965
    4. 'heap' → logprob: -8.947919845581055
    5. 'push' → logprob: -9.572919845581055
    6. '.heap' → logprob: -10.072919845581055
    7. 'app' → logprob: -10.197919845581055
    8. '```' → logprob: -10.322919845581055
    9. 'q' → logprob: -10.447919845581055
    10. ' he' → logprob: -11.947919845581055

Token 768: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007280402351170778
    2. 'pp' → logprob: -7.375728130340576
    3. 'push' → logprob: -9.500727653503418
    4. 'ap' → logprob: -10.875727653503418
    5. 'ush' → logprob: -12.125727653503418
    6. 'p' → logprob: -14.750727653503418
    7. '...' → logprob: -14.875727653503418
    8. 'appen' → logprob: -15.000727653503418
    9. '```' → logprob: -15.125727653503418
    10. 'q' → logprob: -15.125727653503418

Token 769: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0009163398644886911
    2. 'push' → logprob: -7.000916481018066
    3. 'p' → logprob: -13.375916481018066
    4. 'app' → logprob: -13.875916481018066
    5. 'pp' → logprob: -14.500916481018066
    6. 'sh' → logprob: -14.875916481018066
    7. '```' → logprob: -15.375916481018066
    8. 'USH' → logprob: -15.500916481018066
    9. 'ushed' → logprob: -15.625916481018066
    10. 'ushing' → logprob: -15.625916481018066

Token 770: '(wait' (ID: 127282)
  Prédit: '(wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -1.2664456789934775e-06
    2. 'waiting' → logprob: -13.750000953674316
    3. 'wait' → logprob: -16.125001907348633
    4. '	wait' → logprob: -19.125001907348633
    5. '_wait' → logprob: -19.125001907348633
    6. '(' → logprob: -19.500001907348633
    7. ' waiting' → logprob: -20.500001907348633
    8. '```' → logprob: -20.750001907348633
    9. '.wait' → logprob: -20.875001907348633
    10. 'Waiting' → logprob: -21.000001907348633

Token 771: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0437493622303009
    2. '(wait' → logprob: -3.7937493324279785
    3. 'waiting' → logprob: -3.9187493324279785
    4. 'wait' → logprob: -8.543749809265137
    5. 'iting' → logprob: -9.418749809265137
    6. ' waiting' → logprob: -10.168749809265137
    7. 'ait' → logprob: -10.418749809265137
    8. 'it' → logprob: -10.918749809265137
    9. '_wait' → logprob: -10.918749809265137
    10. '(' → logprob: -11.168749809265137

Token 772: ',' (ID: 11)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.26141563057899475
    2. '(' → logprob: -2.011415719985962
    3. '(cid' → logprob: -2.386415719985962
    4. '(c' → logprob: -6.136415481567383
    5. ',' → logprob: -6.636415481567383
    6. '(customer' → logprob: -8.011415481567383
    7. ' (' → logprob: -8.261415481567383
    8. ',(' → logprob: -8.761415481567383
    9. '(wait' → logprob: -10.761415481567383
    10. '(ci' → logprob: -11.511415481567383

Token 773: ' (' (ID: 350)
  Prédit: '(cid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cid' → logprob: -0.001574971480295062
    2. ' (' → logprob: -6.501574993133545
    3. '(c' → logprob: -10.626574516296387
    4. '(' → logprob: -10.626574516296387
    5. '(ci' → logprob: -10.751574516296387
    6. '   ' → logprob: -13.876574516296387
    7. '(cx' → logprob: -15.001574516296387
    8. '((' → logprob: -15.126574516296387
    9. ' ' → logprob: -15.251574516296387
    10. '(ct' → logprob: -15.501574516296387

Token 774: 'cid' (ID: 40970)
  Prédit: 'cid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cid' → logprob: -1.580929347255733e-05
    2. ' cid' → logprob: -11.750016212463379
    3. '(cid' → logprob: -11.750016212463379
    4. '.cid' → logprob: -18.875015258789062
    5. '
' → logprob: -19.125015258789062
    6. 'c' → logprob: -19.375015258789062
    7. '   ' → logprob: -19.625015258789062
    8. 'cit' → logprob: -19.875015258789062
    9. 'cust' → logprob: -21.000015258789062
    10. 'Cid' → logprob: -21.250015258789062

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027099132421426475
    2. ' ,' → logprob: -8.50027084350586
    3. ',current' → logprob: -10.12527084350586
    4. ',c' → logprob: -11.50027084350586
    5. ',
' → logprob: -11.62527084350586
    6. '           ' → logprob: -13.00027084350586
    7. '            ' → logprob: -14.00027084350586
    8. '```' → logprob: -14.12527084350586
    9. '          ' → logprob: -14.25027084350586
    10. '    ' → logprob: -14.75027084350586

Token 776: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.006715370807796717
    2. ' current' → logprob: -5.006715297698975
    3. '
' → logprob: -17.256715774536133
    4. ',current' → logprob: -17.506715774536133
    5. '	current' → logprob: -18.006715774536133
    6. '(current' → logprob: -18.381715774536133
    7. '_current' → logprob: -18.506715774536133
    8. '$current' → logprob: -19.006715774536133
    9. ' ' → logprob: -19.381715774536133
    10. '   ' → logprob: -19.506715774536133

Token 777: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.93579563125968e-05
    2. 'time' → logprob: -9.375089645385742
    3. '_call' → logprob: -13.000089645385742
    4. '_' → logprob: -14.250089645385742
    5. 'Time' → logprob: -14.625089645385742
    6. '_token' → logprob: -14.750089645385742
    7. ' time' → logprob: -15.625089645385742
    8. '+' → logprob: -16.000089645385742
    9. '"time' → logprob: -16.625089645385742
    10. '_t' → logprob: -16.875089645385742

Token 778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035906085395254195
    2. ' ,' → logprob: -8.000359535217285
    3. '+' → logprob: -11.250359535217285
    4. 'deadline' → logprob: -12.125359535217285
    5. ',
' → logprob: -12.875359535217285
    6. ',current' → logprob: -14.625359535217285
    7. ' +' → logprob: -14.875359535217285
    8. ',d' → logprob: -15.375359535217285
    9. '   ' → logprob: -15.375359535217285
    10. '```' → logprob: -15.625359535217285

Token 779: ' deadline' (ID: 30435)
  Prédit: 'deadline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deadline' → logprob: -0.0002964935847558081
    2. ' deadline' → logprob: -8.125296592712402
    3. 'dead' → logprob: -15.125296592712402
    4. '   ' → logprob: -17.125295639038086
    5. 'current' → logprob: -17.125295639038086
    6. '(dead' → logprob: -18.000295639038086
    7. ' ' → logprob: -18.125295639038086
    8. '    ' → logprob: -18.375295639038086
    9. '
' → logprob: -18.375295639038086
    10. '           ' → logprob: -18.750295639038086

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001860174525063485
    2. ' ,' → logprob: -8.6251859664917
    3. ',M' → logprob: -13.1251859664917
    4. '   ' → logprob: -13.3751859664917
    5. '```' → logprob: -14.2501859664917
    6. ',
' → logprob: -14.5001859664917
    7. '           ' → logprob: -14.8751859664917
    8. '`,' → logprob: -14.8751859664917
    9. '),' → logprob: -15.6251859664917
    10. '       ' → logprob: -15.6251859664917

Token 781: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.002805110299959779
    2. ' M' → logprob: -5.877805233001709
    3. ' ' → logprob: -15.75280475616455
    4. '   ' → logprob: -15.87780475616455
    5. '  ' → logprob: -17.877805709838867
    6. '    ' → logprob: -18.252805709838867
    7. '
' → logprob: -18.752805709838867
    8. '```' → logprob: -18.877805709838867
    9. '	M' → logprob: -18.877805709838867
    10. ' ' → logprob: -19.502805709838867

Token 782: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001410850090906024
    2. ',L' → logprob: -9.625141143798828
    3. ' ,' → logprob: -9.750141143798828
    4. ',K' → logprob: -11.125141143798828
    5. '           ' → logprob: -13.875141143798828
    6. '   ' → logprob: -15.000141143798828
    7. '          ' → logprob: -15.875141143798828
    8. ',
' → logprob: -16.000141143798828
    9. '       ' → logprob: -16.375141143798828
    10. '    ' → logprob: -16.500141143798828

Token 783: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0001398929744027555
    2. ' L' → logprob: -8.875140190124512
    3. '	L' → logprob: -18.500139236450195
    4. ' ' → logprob: -18.875139236450195
    5. '   ' → logprob: -19.125139236450195
    6. '
' → logprob: -19.750139236450195
    7. '  ' → logprob: -19.750139236450195
    8. '>L' → logprob: -20.000139236450195
    9. ')L' → logprob: -20.875139236450195
    10. '
' → logprob: -21.000139236450195

Token 784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004585518909152597
    2. ',K' → logprob: -7.750458717346191
    3. ' ,' → logprob: -10.500458717346191
    4. ',k' → logprob: -15.750458717346191
    5. '   ' → logprob: -16.125457763671875
    6. 'K' → logprob: -17.375457763671875
    7. ',
' → logprob: -17.625457763671875
    8. '           ' → logprob: -17.750457763671875
    9. '```' → logprob: -18.000457763671875
    10. ',C' → logprob: -18.625457763671875

Token 785: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -5.157039049663581e-05
    2. ' K' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.750051498413086
    4. '       ' → logprob: -18.875051498413086
    5. '
' → logprob: -19.000051498413086
    6. '           ' → logprob: -19.500051498413086
    7. ' ' → logprob: -20.000051498413086
    8. '	K' → logprob: -20.125051498413086
    9. '  ' → logprob: -20.375051498413086
    10. '    ' → logprob: -21.000051498413086

Token 786: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07922089099884033
    2. ')' → logprob: -2.579220771789551
    3. '))
' → logprob: -8.20422077178955
    4. ')
' → logprob: -9.82922077178955
    5. '   ' → logprob: -13.82922077178955
    6. ')))' → logprob: -13.82922077178955
    7. ' ))' → logprob: -14.45422077178955
    8. '))

' → logprob: -14.95422077178955
    9. '           ' → logprob: -15.32922077178955
    10. ')}' → logprob: -15.57922077178955

Token 787: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 788: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007937943562865257
    2. '   ' → logprob: -5.007937908172607
    3. '
' → logprob: -7.507937908172607
    4. ' return' → logprob: -7.632937908172607
    5. '<|end|>' → logprob: -9.507938385009766
    6. '```' → logprob: -10.132938385009766
    7. '	return' → logprob: -10.257938385009766
    8. '    
' → logprob: -10.757938385009766
    9. ':return' → logprob: -12.132938385009766
    10. '       ' → logprob: -12.882938385009766

Token 789: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07761170715093613
    2. 'if' → logprob: -2.8276116847991943
    3. '   ' → logprob: -4.327611923217773
    4. '#' → logprob: -6.452611923217773
    5. '
' → logprob: -7.952611923217773
    6. ' return' → logprob: -8.202611923217773
    7. ' if' → logprob: -9.827611923217773
    8. '       ' → logprob: -10.452611923217773
    9. '```' → logprob: -11.327611923217773
    10. 'pass' → logprob: -11.702611923217773

Token 790: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.43234437704086304
    2. ' not' → logprob: -1.0573444366455078
    3. '(not' → logprob: -5.682344436645508
    4. ' (' → logprob: -9.932344436645508
    5. '   ' → logprob: -10.557344436645508
    6. 'len' → logprob: -10.807344436645508
    7. 'done' → logprob: -10.932344436645508
    8. '(' → logprob: -11.057344436645508
    9. ' operators' → logprob: -11.057344436645508
    10. '
' → logprob: -11.182344436645508

Token 791: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.15140101313591003
    2. 'waiting' → logprob: -2.9014010429382324
    3. ' calls' → logprob: -3.1514010429382324
    4. '(c' → logprob: -3.4014010429382324
    5. '(wait' → logprob: -5.651401042938232
    6. ' waiting' → logprob: -6.026401042938232
    7. 'operators' → logprob: -6.651401042938232
    8. 'c' → logprob: -7.901401042938232
    9. 'calling' → logprob: -7.901401042938232
    10. ' (' → logprob: -8.026400566101074

Token 792: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35195058584213257
    2. 'and' → logprob: -1.2269506454467773
    3. ' or' → logprob: -5.851950645446777
    4. 'or' → logprob: -7.476950645446777
    5. '==' → logprob: -10.351950645446777
    6. ',' → logprob: -11.851950645446777
    7. 'left' → logprob: -12.601950645446777
    8. '   ' → logprob: -12.851950645446777
    9. ' ==' → logprob: -12.976950645446777
    10. ' ' → logprob: -13.351950645446777

Token 793: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.009815588593482971
    2. ' waiting' → logprob: -4.759815692901611
    3. 'operators' → logprob: -6.884815692901611
    4. 'no' → logprob: -9.634815216064453
    5. ' operators' → logprob: -9.884815216064453
    6. ' no' → logprob: -10.259815216064453
    7. 'wait' → logprob: -10.884815216064453
    8. 'free' → logprob: -12.759815216064453
    9. 'not' → logprob: -14.009815216064453
    10. '(wait' → logprob: -14.134815216064453

Token 794: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20178323984146118
    2. ' and' → logprob: -1.7017831802368164
    3. ':' → logprob: -8.701783180236816
    4. ':
' → logprob: -9.326783180236816
    5. '   ' → logprob: -10.076783180236816
    6. '==' → logprob: -10.701783180236816
    7. ' or' → logprob: -11.326783180236816
    8. '           ' → logprob: -11.451783180236816
    9. 'or' → logprob: -11.576783180236816
    10. '       ' → logprob: -12.076783180236816

Token 795: ' jump' (ID: 13843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46243688464164734
    2. 'break' → logprob: -1.7124369144439697
    3. ' break' → logprob: -2.2124369144439697
    4. '   ' → logprob: -2.9624369144439697
    5. '           ' → logprob: -3.7124369144439697
    6. 'return' → logprob: -6.212436676025391
    7. ' return' → logprob: -6.462436676025391
    8. '#' → logprob: -8.21243667602539
    9. '	break' → logprob: -8.96243667602539
    10. ' if' → logprob: -9.08743667602539

Token 796: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4344581365585327
    2. ' to' → logprob: -1.1844581365585327
    3. '       ' → logprob: -3.6844582557678223
    4. 'current' → logprob: -5.184458255767822
    5. '
' → logprob: -5.559458255767822
    6. '<|end|>' → logprob: -5.934458255767822
    7. '        
' → logprob: -6.059458255767822
    8. ' ahead' → logprob: -6.934458255767822
    9. '_to' → logprob: -6.934458255767822
    10. ' current' → logprob: -6.934458255767822

Token 797: ' next' (ID: 2613)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.13672637939453125
    2. 'next' → logprob: -2.2617263793945312
    3. 'None' → logprob: -5.136726379394531
    4. 'calls' → logprob: -5.261726379394531
    5. ' next' → logprob: -5.636726379394531
    6. ' operators' → logprob: -5.636726379394531
    7. 'min' → logprob: -6.011726379394531
    8. 'the' → logprob: -6.761726379394531
    9. 'current' → logprob: -7.761726379394531
    10. '```' → logprob: -8.136726379394531

Token 798: ' event' (ID: 2104)
  Prédit: '_call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_call' → logprob: -0.05453071743249893
    2. '_event' → logprob: -3.679530620574951
    3. '_time' → logprob: -4.179530620574951
    4. '_' → logprob: -5.804530620574951
    5. 'if' → logprob: -6.054530620574951
    6. 'call' → logprob: -6.054530620574951
    7. 'event' → logprob: -6.554530620574951
    8. '_op' → logprob: -7.304530620574951
    9. 'time' → logprob: -7.679530620574951
    10. '   ' → logprob: -7.804530620574951

Token 799: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41007745265960693
    2. 'if' → logprob: -1.785077452659607
    3. '       ' → logprob: -1.910077452659607
    4. 'elif' → logprob: -4.6600775718688965
    5. '=' → logprob: -5.6600775718688965
    6. ' =' → logprob: -6.0350775718688965
    7. 'else' → logprob: -6.2850775718688965
    8. ',' → logprob: -7.0350775718688965
    9. ' elif' → logprob: -7.9100775718688965
    10. ' or' → logprob: -7.9100775718688965

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13027708232402802
    2. ' if' → logprob: -2.255277156829834
    3. '   ' → logprob: -4.630277156829834
    4. 'if' → logprob: -5.380277156829834
    5. '```' → logprob: -7.255277156829834
    6. '        
' → logprob: -7.630277156829834
    7. '    ' → logprob: -7.755277156829834
    8. '        ' → logprob: -7.880277156829834
    9. '
' → logprob: -8.880276679992676
    10. '           ' → logprob: -8.880276679992676

Token 801: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15678928792476654
    2. 'if' (adapté à ' if') → logprob: -2.4067893028259277
    3. '       ' → logprob: -2.9067893028259277
    4. '   ' → logprob: -8.53178882598877
    5. '        
' → logprob: -10.28178882598877
    6. 'elif' → logprob: -10.40678882598877
    7. '        ' → logprob: -10.53178882598877
    8. '    ' → logprob: -10.53178882598877
    9. ' 
' → logprob: -11.15678882598877
    10. '
' → logprob: -11.28178882598877

Token 802: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.089544653892517
    2. 'not' → logprob: -1.214544653892517
    3. '(not' → logprob: -1.214544653892517
    4. 'calls' → logprob: -2.9645447731018066
    5. ' calls' → logprob: -4.589544773101807
    6. 'waiting' → logprob: -5.464544773101807
    7. ' waiting' → logprob: -6.589544773101807
    8. ' (' → logprob: -6.839544773101807
    9. 'current' → logprob: -7.964544773101807
    10. ' current' → logprob: -8.089544296264648

Token 803: ' calls' (ID: 11666)
  Prédit: 'calls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calls' → logprob: -0.05016443878412247
    2. '(c' → logprob: -3.3001644611358643
    3. ' calls' → logprob: -5.050164222717285
    4. 'waiting' → logprob: -5.425164222717285
    5. '(wait' → logprob: -7.050164222717285
    6. ' waiting' → logprob: -9.300164222717285
    7. 'calling' → logprob: -9.550164222717285
    8. '(w' → logprob: -10.050164222717285
    9. ' (' → logprob: -10.175164222717285
    10. '(' → logprob: -10.175164222717285

Token 804: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0790143758058548
    2. 'and' → logprob: -2.579014301300049
    3. ' or' → logprob: -9.329014778137207
    4. '   ' → logprob: -11.079014778137207
    5. '           ' → logprob: -11.454014778137207
    6. '       ' → logprob: -12.329014778137207
    7. '	and' → logprob: -13.329014778137207
    8. 'or' → logprob: -13.579014778137207
    9. '               ' → logprob: -14.579014778137207
    10. '        ' → logprob: -14.704014778137207

Token 805: ' waiting' (ID: 12028)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47851869463920593
    2. 'waiting' → logprob: -0.9785187244415283
    3. ' not' → logprob: -5.728518486022949
    4. ' waiting' → logprob: -6.853518486022949
    5. 'wait' → logprob: -9.47851848602295
    6. '(not' → logprob: -11.10351848602295
    7. '   ' → logprob: -11.10351848602295
    8. '(wait' → logprob: -12.97851848602295
    9. '!' → logprob: -13.10351848602295
    10. 'Waiting' → logprob: -13.10351848602295

Token 806: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.562199056148529
    2. 'and' → logprob: -1.4371991157531738
    3. ':
' → logprob: -1.8121991157531738
    4. ':' → logprob: -3.687199115753174
    5. '==' → logprob: -5.812199115753174
    6. '   ' → logprob: -8.187198638916016
    7. '       ' → logprob: -8.437198638916016
    8. ' ==' → logprob: -8.687198638916016
    9. '           ' → logprob: -8.937198638916016
    10. '!=' → logprob: -9.437198638916016

Token 807: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.623857319355011
    2. ':
' → logprob: -0.998857319355011
    3. 'current' → logprob: -3.248857259750366
    4. '       ' → logprob: -3.623857259750366
    5. '```' → logprob: -4.623857498168945
    6. ' and' → logprob: -5.373857498168945
    7. '               ' → logprob: -5.373857498168945
    8. ':' → logprob: -5.748857498168945
    9. ' current' → logprob: -6.123857498168945
    10. '   ' → logprob: -6.123857498168945

Token 808: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.022741615772247314
    2. 'if' → logprob: -4.022741794586182
    3. 'next' → logprob: -6.022741794586182
    4. '           ' → logprob: -6.397741794586182
    5. ' current' → logprob: -8.147741317749023
    6. '       ' → logprob: -9.272741317749023
    7. 'continue' → logprob: -10.772741317749023
    8. ' if' → logprob: -11.147741317749023
    9. '   ' → logprob: -11.397741317749023
    10. '#' (adapté à ' #') → logprob: -11.647741317749023

Token 809: ' jump' (ID: 13843)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.032816603779792786
    2. 'if' → logprob: -3.7828166484832764
    3. 'next' → logprob: -4.782816410064697
    4. 'continue' → logprob: -8.157816886901855
    5. 'min' → logprob: -8.282816886901855
    6. '#' → logprob: -8.282816886901855
    7. 'heap' → logprob: -9.282816886901855
    8. ' current' → logprob: -9.782816886901855
    9. 'jump' → logprob: -10.157816886901855
    10. 'pass' → logprob: -10.157816886901855

Token 810: ' to' (ID: 316)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0514783039689064
    2. 'to' → logprob: -3.676478385925293
    3. ' current' → logprob: -4.051478385925293
    4. '           ' → logprob: -5.801478385925293
    5. ' to' → logprob: -6.426478385925293
    6. 'next' → logprob: -7.051478385925293
    7. '_current' → logprob: -7.926478385925293
    8. '_to' → logprob: -7.926478385925293
    9. '
' → logprob: -8.176478385925293
    10. '       ' → logprob: -8.551478385925293

Token 811: ' soon' (ID: 6780)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.4749329388141632
    2. 'waiting' → logprob: -0.9749329090118408
    3. 'next' → logprob: -7.72493314743042
    4. 'current' → logprob: -8.349932670593262
    5. 'min' → logprob: -9.599932670593262
    6. 'wait' → logprob: -10.224932670593262
    7. 'heap' → logprob: -10.724932670593262
    8. ' operators' → logprob: -10.974932670593262
    9. 'operations' → logprob: -11.724932670593262
    10. ' waiting' → logprob: -12.224932670593262

Token 812: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -8.077528764260933e-05
    2. 'er' → logprob: -10.375081062316895
    3. 'operators' → logprob: -10.375081062316895
    4. 'ests' → logprob: -11.875081062316895
    5. 'operator' → logprob: -12.625081062316895
    6. 'heap' → logprob: -12.750081062316895
    7. '```' → logprob: -14.000081062316895
    8. 'next' → logprob: -14.125081062316895
    9. 'test' → logprob: -14.625081062316895
    10. 'e' → logprob: -14.750081062316895

Token 813: ' operator' (ID: 11019)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.2137073278427124
    2. 'current' → logprob: -2.588707447052002
    3. 'waiting' → logprob: -2.963707447052002
    4. 'time' → logprob: -3.463707447052002
    5. '_time' → logprob: -4.088707447052002
    6. '_' → logprob: -5.338707447052002
    7. 'free' → logprob: -5.713707447052002
    8. '```' → logprob: -6.213707447052002
    9. 'next' → logprob: -6.463707447052002
    10. 'op' → logprob: -6.713707447052002

Token 814: ' free' (ID: 2240)
  Prédit: '_free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.43944841623306274
    2. '[' → logprob: -1.689448356628418
    3. 'free' → logprob: -2.564448356628418
    4. '_available' → logprob: -3.689448356628418
    5. '_' → logprob: -4.064448356628418
    6. '[
' → logprob: -4.189448356628418
    7. '_time' → logprob: -4.689448356628418
    8. 'time' → logprob: -5.064448356628418
    9. ']' → logprob: -5.564448356628418
    10. 'available' → logprob: -5.564448356628418

Token 815: ' or' (ID: 503)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0539133548736572
    2. 'time' → logprob: -1.1789133548736572
    3. 'current' → logprob: -1.9289133548736572
    4. '_time' → logprob: -2.3039133548736572
    5. ' =' → logprob: -3.1789133548736572
    6. '       ' → logprob: -4.553913116455078
    7. '(current' → logprob: -4.678913116455078
    8. '=current' → logprob: -4.803913116455078
    9. ' time' → logprob: -5.678913116455078
    10. '
' → logprob: -5.678913116455078

Token 816: ' earliest' (ID: 48721)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.013499949127435684
    2. 'operators' → logprob: -4.388499736785889
    3. 'current' → logprob: -7.763499736785889
    4. 'wait' → logprob: -8.638500213623047
    5. ' waiting' → logprob: -8.888500213623047
    6. 'next' → logprob: -9.263500213623047
    7. 'calls' → logprob: -10.138500213623047
    8. 'heap' → logprob: -10.388500213623047
    9. 'calling' → logprob: -10.763500213623047
    10. 'min' → logprob: -11.513500213623047

Token 817: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.013494650833308697
    2. 'call' → logprob: -5.513494491577148
    3. '(wait' → logprob: -5.888494491577148
    4. 'calls' → logprob: -6.388494491577148
    5. ' waiting' → logprob: -6.513494491577148
    6. 'operators' → logprob: -6.888494491577148
    7. '(' → logprob: -7.513494491577148
    8. 'operator' → logprob: -7.638494491577148
    9. 'wait' → logprob: -8.263494491577148
    10. 'time' → logprob: -8.263494491577148

Token 818: ' deadline' (ID: 30435)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.43970757722854614
    2. '_time' → logprob: -1.0647075176239014
    3. 'deadline' → logprob: -5.9397077560424805
    4. '_dead' → logprob: -6.0647077560424805
    5. '
' → logprob: -6.5647077560424805
    6. '```' → logprob: -6.9397077560424805
    7. ' time' → logprob: -6.9397077560424805
    8. '_' → logprob: -7.3147077560424805
    9. '=' → logprob: -8.56470775604248
    10. 'heap' → logprob: -8.68970775604248

Token 819: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4288065433502197
    2. 'current' → logprob: -2.0538065433502197
    3. '
' → logprob: -2.8038065433502197
    4. '```' → logprob: -3.0538065433502197
    5. '       ' → logprob: -3.1788065433502197
    6. ':
' → logprob: -3.6788065433502197
    7. 'next' → logprob: -4.428806304931641
    8. ' current' → logprob: -4.553806304931641
    9. '               ' → logprob: -5.303806304931641
    10. ',' → logprob: -6.178806304931641

Token 820: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06203624978661537
    2. ':
' → logprob: -3.8120362758636475
    3. '       ' → logprob: -4.187036037445068
    4. 'current' → logprob: -5.562036037445068
    5. ':' → logprob: -5.687036037445068
    6. ' =' → logprob: -5.812036037445068
    7. '               ' → logprob: -5.812036037445068
    8. '```' → logprob: -5.812036037445068
    9. '=' → logprob: -6.187036037445068
    10. '
' → logprob: -6.687036037445068

Token 821: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6642804145812988
    2. 'next' (adapté à ' next') → logprob: -0.9142804145812988
    3. ' current' → logprob: -3.289280414581299
    4. ' next' → logprob: -3.414280414581299
    5. '
' → logprob: -4.789280414581299
    6. 'min' → logprob: -6.539280414581299
    7. '```' → logprob: -6.914280414581299
    8. 'if' → logprob: -7.664280414581299
    9. 'deadline' → logprob: -8.03927993774414
    10. '+' → logprob: -8.03927993774414

Token 822: '_dead' (ID: 133650)
  Prédit: '_dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dead' → logprob: -0.06558191031217575
    2. '_wait' → logprob: -3.190581798553467
    3. '_op' → logprob: -4.815581798553467
    4. '_time' → logprob: -5.065581798553467
    5. '_event' → logprob: -5.315581798553467
    6. '_call' → logprob: -6.190581798553467
    7. '_times' → logprob: -7.940581798553467
    8. '_line' → logprob: -8.940582275390625
    9. '_events' → logprob: -9.190582275390625
    10. '_operator' → logprob: -9.815582275390625

Token 823: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -8.41866585687967e-06
    2. '_line' → logprob: -12.000008583068848
    3. 'ine' → logprob: -13.625008583068848
    4. 'eline' → logprob: -14.750008583068848
    5. 'time' → logprob: -15.375008583068848
    6. ' line' → logprob: -15.625008583068848
    7. 'aline' → logprob: -15.625008583068848
    8. 'lines' → logprob: -18.00000762939453
    9. '
' → logprob: -18.00000762939453
    10. 'l' → logprob: -18.12500762939453

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269550919532776
    2. ' =' → logprob: -2.126955032348633
    3. ',' → logprob: -10.626955032348633
    4. '   ' → logprob: -13.501955032348633
    5. '=_' → logprob: -15.126955032348633
    6. '>' → logprob: -15.501955032348633
    7. ')' → logprob: -16.001955032348633
    8. '=min' → logprob: -16.001955032348633
    9. ' ' → logprob: -16.126955032348633
    10. '_time' → logprob: -16.501955032348633

Token 825: ' min' (ID: 1349)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.0008384577231481671
    2. ' waiting' → logprob: -7.125838279724121
    3. 'min' → logprob: -10.875838279724121
    4. 'heap' → logprob: -11.250838279724121
    5. 'wait' → logprob: -14.125838279724121
    6. '   ' → logprob: -14.375838279724121
    7. ' min' → logprob: -15.250838279724121
    8. '
' → logprob: -15.625838279724121
    9. 'Waiting' → logprob: -16.000839233398438
    10. 'float' → logprob: -17.000839233398438

Token 826: '(w' (ID: 7420)
  Prédit: '(wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -0.4865477383136749
    2. '(w' → logprob: -0.9865477085113525
    3. '([' → logprob: -4.611547946929932
    4. 'waiting' → logprob: -6.736547946929932
    5. '(item' → logprob: -7.861547946929932
    6. '(x' → logprob: -7.986547946929932
    7. '(' → logprob: -8.611547470092773
    8. '(t' → logprob: -9.611547470092773
    9. '((' → logprob: -9.611547470092773
    10. '(dead' → logprob: -9.861547470092773

Token 827: '[' (ID: 58)
  Prédit: 'ait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.8760566711425781
    2. '[' → logprob: -1.6260566711425781
    3. '(wait' → logprob: -1.7510566711425781
    4. '(w' → logprob: -3.001056671142578
    5. '[c' → logprob: -3.626056671142578
    6. '[w' → logprob: -3.626056671142578
    7. 'waiting' → logprob: -3.751056671142578
    8. 'w' → logprob: -4.376056671142578
    9. '(c' → logprob: -4.501056671142578
    10. '([' → logprob: -4.626056671142578

Token 828: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04205474629998207
    2. '[' → logprob: -3.2920546531677246
    3. '3' → logprob: -5.667054653167725
    4. '1' → logprob: -7.917054653167725
    5. '
' → logprob: -9.042055130004883
    6. ' ' → logprob: -10.917055130004883
    7. '][' → logprob: -11.167055130004883
    8. '(' → logprob: -11.917055130004883
    9. '```' → logprob: -11.917055130004883
    10. ' [' → logprob: -12.542055130004883

Token 829: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0979868471622467
    2. 'for' → logprob: -2.472986936569214
    3. ',' → logprob: -5.097986698150635
    4. ')' → logprob: -6.722986698150635
    5. '])' → logprob: -6.722986698150635
    6. ']' → logprob: -8.222987174987793
    7. '
' → logprob: -9.597987174987793
    8. '],' → logprob: -10.472987174987793
    9. ' ' → logprob: -11.222987174987793
    10. ' -' → logprob: -11.347987174987793

Token 830: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18555735051631927
    2. 'for' → logprob: -1.9355573654174805
    3. ',' → logprob: -3.8105573654174805
    4. ')' → logprob: -6.1855573654174805
    5. ',w' → logprob: -8.43555736541748
    6. ' -' → logprob: -8.93555736541748
    7. 'w' → logprob: -9.43555736541748
    8. '-' → logprob: -9.68555736541748
    9. '
' → logprob: -9.68555736541748
    10. ' ,' → logprob: -10.18555736541748

Token 831: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4005339443683624
    2. 'waiting' → logprob: -1.15053391456604
    3. ' waiting' → logprob: -4.525534152984619
    4. ' w' → logprob: -5.900534152984619
    5. 'wait' → logprob: -13.775533676147461
    6. 'Waiting' → logprob: -14.525533676147461
    7. 'new' → logprob: -14.900533676147461
    8. '	w' → logprob: -15.650533676147461
    9. ' new' → logprob: -15.775533676147461
    10. ' in' → logprob: -16.40053367614746

Token 832: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.43165475130081177
    2. 'in' → logprob: -1.056654691696167
    3. 'waiting' → logprob: -6.181654930114746
    4. 'w' → logprob: -7.181654930114746
    5. ' waiting' → logprob: -9.431654930114746
    6. ' w' → logprob: -11.681654930114746
    7. '[' → logprob: -12.056654930114746
    8. ' ' → logprob: -12.806654930114746
    9. '	in' → logprob: -12.806654930114746
    10. '_wait' → logprob: -12.931654930114746

Token 833: ' waiting' (ID: 12028)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -8.180258191714529e-06
    2. ' waiting' → logprob: -11.750008583068848
    3. 'wait' → logprob: -16.00000762939453
    4. 'w' → logprob: -16.50000762939453
    5. 'new' → logprob: -17.37500762939453
    6. '
' → logprob: -18.37500762939453
    7. '   ' → logprob: -18.50000762939453
    8. '[' → logprob: -18.62500762939453
    9. '  ' → logprob: -19.12500762939453
    10. ' ' → logprob: -19.25000762939453

Token 834: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18272995948791504
    2. ')' → logprob: -1.807729959487915
    3. ' if' → logprob: -6.182729721069336
    4. ' )
' → logprob: -7.682729721069336
    5. 'if' → logprob: -8.432729721069336
    6. ' )' → logprob: -9.807729721069336
    7. '           ' → logprob: -10.182729721069336
    8. ')+' → logprob: -10.307729721069336
    9. ')

' → logprob: -10.432729721069336
    10. ',' → logprob: -10.557729721069336

Token 835: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0224834606051445
    2. '           ' → logprob: -4.6474833488464355
    3. '       ' → logprob: -5.5224833488464355
    4. 'current' → logprob: -6.0224833488464355
    5. '<|end|>' → logprob: -6.1474833488464355
    6. ' if' → logprob: -6.7724833488464355
    7. '
' → logprob: -7.2724833488464355
    8. '```' → logprob: -7.5224833488464355
    9. 'next' → logprob: -7.7724833488464355
    10. '        
' → logprob: -8.147483825683594

Token 836: ' next' (ID: 2613)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16104622185230255
    2. 'if' → logprob: -2.411046266555786
    3. 'next' (adapté à ' next') → logprob: -3.036046266555786
    4. '           ' → logprob: -5.661046028137207
    5. '
' → logprob: -5.786046028137207
    6. ' current' → logprob: -6.036046028137207
    7. ' if' → logprob: -7.036046028137207
    8. '       ' → logprob: -7.911046028137207
    9. '```' → logprob: -8.036046028137207
    10. ' next' → logprob: -8.161046028137207

Token 837: '_op' (ID: 20111)
  Prédit: '_event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_event' → logprob: -0.4365662932395935
    2. '_op' → logprob: -1.3115663528442383
    3. '_time' → logprob: -2.5615663528442383
    4. '_free' → logprob: -5.811566352844238
    5. '_dead' → logprob: -5.936566352844238
    6. '_call' → logprob: -7.561566352844238
    7. '_operator' → logprob: -7.686566352844238
    8. '_events' → logprob: -8.811566352844238
    9. 'event' → logprob: -9.436566352844238
    10. 'time' → logprob: -9.436566352844238

Token 838: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.002576251979917288
    2. '_time' → logprob: -6.5025763511657715
    3. 'free' → logprob: -7.2525763511657715
    4. '=' → logprob: -9.252575874328613
    5. '_' → logprob: -9.627575874328613
    6. '_next' → logprob: -9.752575874328613
    7. '_f' → logprob: -10.002575874328613
    8. ' =' → logprob: -10.877575874328613
    9. '_available' → logprob: -11.127575874328613
    10. 'time' → logprob: -11.627575874328613

Token 839: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740900695323944
    2. ' =' → logprob: -0.9740900993347168
    3. '=min' → logprob: -11.974089622497559
    4. '<|end|>' → logprob: -12.849089622497559
    5. ',' → logprob: -13.849089622497559
    6. ')' → logprob: -13.849089622497559
    7. '>' → logprob: -15.099089622497559
    8. '+=' → logprob: -15.599089622497559
    9. 'min' → logprob: -15.599089622497559
    10. '=
' → logprob: -15.724089622497559

Token 840: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.0067536174319684505
    2. ' operators' → logprob: -5.131753444671631
    3. 'heap' → logprob: -7.131753444671631
    4. ' heap' → logprob: -11.881753921508789
    5. 'operator' → logprob: -12.256753921508789
    6. 'operations' → logprob: -12.256753921508789
    7. 'oper' → logprob: -12.756753921508789
    8. '   ' → logprob: -14.131753921508789
    9. 'Operators' → logprob: -14.131753921508789
    10. '(' → logprob: -14.381753921508789

Token 841: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.75
    3. 'and' → logprob: -16.125
    4. ' and' → logprob: -17.375
    5. '   ' → logprob: -18.125
    6. '```' → logprob: -18.5
    7. 'q' → logprob: -18.75
    8. '[
' → logprob: -19.125
    9. '.' → logprob: -19.125
    10. 'heap' → logprob: -19.625

Token 842: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004083743318915367
    2. '[' → logprob: -5.504083633422852
    3. ' ' → logprob: -12.629083633422852
    4. '   ' → logprob: -14.879083633422852
    5. '```' → logprob: -15.004083633422852
    6. ')' → logprob: -15.629083633422852
    7. '[
' → logprob: -15.816583633422852
    8. '<|end|>' → logprob: -15.941583633422852
    9. '  ' → logprob: -16.06658363342285
    10. '1' → logprob: -16.44158363342285

Token 843: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07848528772592545
    2. '<|end|>' → logprob: -2.8284852504730225
    3. ')
' → logprob: -5.703485488891602
    4. '
' → logprob: -5.828485488891602
    5. '<|end|>' → logprob: -5.953485488891602
    6. ']' → logprob: -5.953485488891602
    7. ' if' → logprob: -6.078485488891602
    8. ' )' → logprob: -6.828485488891602
    9. ' +' → logprob: -8.203485488891602
    10. ' 
' → logprob: -8.328485488891602

Token 844: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7652250528335571
    2. '
' → logprob: -0.8902250528335571
    3. 'if' → logprob: -2.1402249336242676
    4. '           ' → logprob: -5.390224933624268
    5. 'import' → logprob: -7.640224933624268
    6. '<|end|>' → logprob: -7.890224933624268
    7. '       ' → logprob: -8.015225410461426
    8. ' 
' → logprob: -8.890225410461426
    9. '```' → logprob: -9.140225410461426
    10. '
' → logprob: -9.140225410461426

Token 845: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.0011897491058334708
    2. ' operators' → logprob: -6.751189708709717
    3. 'operations' → logprob: -12.001190185546875
    4. 'operator' → logprob: -12.251190185546875
    5. 'len' → logprob: -12.376190185546875
    6. '```' → logprob: -12.876190185546875
    7. 'heap' → logprob: -14.876190185546875
    8. '
' → logprob: -15.251190185546875
    9. '   ' → logprob: -15.376190185546875
    10. 'ops' → logprob: -15.501190185546875

Token 846: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1972121298313141
    2. ' else' → logprob: -1.9472121000289917
    3. 'and' → logprob: -3.8222122192382812
    4. '[' → logprob: -4.697212219238281
    5. ' and' → logprob: -5.447212219238281
    6. '>' → logprob: -8.197212219238281
    7. ']' → logprob: -8.197212219238281
    8. '<|end|>' → logprob: -9.322212219238281
    9. '```' → logprob: -9.447212219238281
    10. 'not' → logprob: -9.947212219238281

Token 847: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005239445250481367
    2. ' float' → logprob: -5.255239486694336
    3. 'next' → logprob: -12.380239486694336
    4. '   ' → logprob: -14.630239486694336
    5. 'current' → logprob: -15.880239486694336
    6. '(float' → logprob: -15.880239486694336
    7. ' next' → logprob: -16.005239486694336
    8. 'waiting' → logprob: -16.005239486694336
    9. '0' → logprob: -16.380239486694336
    10. 'heap' → logprob: -16.630239486694336

Token 848: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.810037742368877e-05
    2. ''' → logprob: -10.750038146972656
    3. ''in' → logprob: -11.750038146972656
    4. ''s' → logprob: -12.000038146972656
    5. 'inf' → logprob: -13.875038146972656
    6. '['' → logprob: -15.000038146972656
    7. '_inf' → logprob: -15.625038146972656
    8. '('_' → logprob: -15.750038146972656
    9. '('-' → logprob: -15.875038146972656
    10. '='' → logprob: -16.250038146972656

Token 849: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.727905979962088e-05
    2. ''' → logprob: -10.25004768371582
    3. ''in' → logprob: -11.62504768371582
    4. ' inf' → logprob: -14.00004768371582
    5. ''s' → logprob: -14.50004768371582
    6. ''inc' → logprob: -15.25004768371582
    7. 'inc' → logprob: -15.62504768371582
    8. ''ap' → logprob: -15.87504768371582
    9. ''ex' → logprob: -15.87504768371582
    10. '('' → logprob: -16.37504768371582

Token 850: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008496735244989395
    2. ')' → logprob: -4.8834967613220215
    3. '           ' → logprob: -7.2584967613220215
    4. '
' → logprob: -9.383496284484863
    5. ')
' → logprob: -10.258496284484863
    6. '       ' → logprob: -10.383496284484863
    7. ')

' → logprob: -10.633496284484863
    8. ' )
' → logprob: -13.133496284484863
    9. ',' → logprob: -13.758496284484863
    10. '   ' → logprob: -13.883496284484863

Token 851: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15381915867328644
    2. '           ' → logprob: -2.0288190841674805
    3. 'current' → logprob: -4.6538190841674805
    4. '       ' → logprob: -7.5288190841674805
    5. '```' → logprob: -7.6538190841674805
    6. 'next' → logprob: -8.52881908416748
    7. '
' → logprob: -9.27881908416748
    8. '            
' → logprob: -9.65381908416748
    9. ' current' → logprob: -10.15381908416748
    10. '               ' → logprob: -10.40381908416748

Token 852: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.03285790607333183
    2. '           ' → logprob: -3.532857894897461
    3. 'if' → logprob: -6.782857894897461
    4. 'next' → logprob: -6.907857894897461
    5. '
' → logprob: -7.907857894897461
    6. ' current' → logprob: -8.282857894897461
    7. '       ' → logprob: -8.657857894897461
    8. '```' → logprob: -8.907857894897461
    9. '   ' → logprob: -11.157857894897461
    10. '               ' → logprob: -12.407857894897461

Token 853: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00021152703266125172
    2. '_' → logprob: -9.625211715698242
    3. '_token' → logprob: -10.000211715698242
    4. '   ' → logprob: -11.125211715698242
    5. '_tokens' → logprob: -11.250211715698242
    6. ' =' → logprob: -11.375211715698242
    7. '+' → logprob: -11.375211715698242
    8. '=' → logprob: -11.375211715698242
    9. '_times' → logprob: -12.000211715698242
    10. '+=' → logprob: -12.375211715698242

Token 854: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039108652621507645
    2. ' =' → logprob: -3.2891087532043457
    3. '+=' → logprob: -6.914108753204346
    4. ' +=' → logprob: -9.539108276367188
    5. '.=' → logprob: -15.539108276367188
    6. '   ' → logprob: -15.914108276367188
    7. '=min' → logprob: -15.914108276367188
    8. ' ' → logprob: -16.039108276367188
    9. '	' → logprob: -16.664108276367188
    10. '=
' → logprob: -16.914108276367188

Token 855: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011050059460103512
    2. ' min' → logprob: -4.511050224304199
    3. 'max' → logprob: -13.2610502243042
    4. 'next' → logprob: -14.7610502243042
    5. '	min' → logprob: -16.261049270629883
    6. ' max' → logprob: -18.386049270629883
    7. '   ' → logprob: -19.011049270629883
    8. ' next' → logprob: -19.136049270629883
    9. '(min' → logprob: -19.761049270629883
    10. '[min' → logprob: -19.886049270629883

Token 856: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.750027656555176
    3. 'next' → logprob: -12.125027656555176
    4. '(min' → logprob: -15.125027656555176
    5. '[next' → logprob: -15.875027656555176
    6. '(
' → logprob: -16.000028610229492
    7. '(current' → logprob: -17.500028610229492
    8. ' next' → logprob: -18.125028610229492
    9. '(wait' → logprob: -18.250028610229492
    10. ',next' → logprob: -18.250028610229492

Token 857: '_dead' (ID: 133650)
  Prédit: '_dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dead' → logprob: -0.06648124009370804
    2. '_op' → logprob: -2.816481351852417
    3. '_call' → logprob: -6.191481113433838
    4. '(dead' → logprob: -6.691481113433838
    5. '(' → logprob: -7.566481113433838
    6. '(_' → logprob: -8.066481590270996
    7. '_' → logprob: -8.691481590270996
    8. '(op' → logprob: -9.816481590270996
    9. '(
' → logprob: -10.066481590270996
    10. '_time' → logprob: -10.191481590270996

Token 858: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0008728709071874619
    2. '_line' → logprob: -7.37587308883667
    3. 'ad' → logprob: -9.500872611999512
    4. '_call' → logprob: -9.875872611999512
    5. 'call' → logprob: -10.000872611999512
    6. 'ine' → logprob: -10.500872611999512
    7. 'aline' → logprob: -11.500872611999512
    8. '_time' → logprob: -11.750872611999512
    9. '_dead' → logprob: -12.000872611999512
    10. 'time' → logprob: -12.250872611999512

Token 859: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027803927659988403
    2. '+' → logprob: -6.127780437469482
    3. ' +' → logprob: -7.877780437469482
    4. ',
' → logprob: -9.127779960632324
    5. ' ,' → logprob: -9.752779960632324
    6. ',next' → logprob: -10.502779960632324
    7. '+,' → logprob: -12.002779960632324
    8. ')' → logprob: -12.252779960632324
    9. '```' → logprob: -12.627779960632324
    10. '   ' → logprob: -12.877779960632324

Token 860: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03804241120815277
    2. ' next' → logprob: -3.2880423069000244
    3. '[next' → logprob: -14.288042068481445
    4. '(next' → logprob: -15.538042068481445
    5. '	next' → logprob: -16.288042068481445
    6. '           ' → logprob: -17.413042068481445
    7. '       ' → logprob: -18.038042068481445
    8. '   ' → logprob: -18.163042068481445
    9. '.next' → logprob: -18.288042068481445
    10. '
' → logprob: -18.788042068481445

Token 861: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -5.3954463510308415e-05
    2. 'op' → logprob: -10.125054359436035
    3. '_call' → logprob: -11.375054359436035
    4. '_operator' → logprob: -13.625054359436035
    5. '(op' → logprob: -15.500054359436035
    6. 'Op' → logprob: -15.625054359436035
    7. 'call' → logprob: -16.00005340576172
    8. ''op' → logprob: -16.25005340576172
    9. '_free' → logprob: -16.50005340576172
    10. 'free' → logprob: -16.75005340576172

Token 862: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.00432745274156332
    2. 'ree' → logprob: -5.879327297210693
    3. 'free' → logprob: -6.504327297210693
    4. 'rees' → logprob: -12.129327774047852
    5. '_time' → logprob: -12.629327774047852
    6. '```' → logprob: -12.754327774047852
    7. '_FREE' → logprob: -13.129327774047852
    8. '_' → logprob: -13.379327774047852
    9. '_f' → logprob: -13.629327774047852
    10. 'fre' → logprob: -13.754327774047852

Token 863: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02506883256137371
    2. '+' → logprob: -5.025068759918213
    3. '<|end|>' → logprob: -5.150068759918213
    4. ')+' → logprob: -5.275068759918213
    5. ')
' → logprob: -5.650068759918213
    6. ' +' → logprob: -6.025068759918213
    7. '           ' → logprob: -7.025068759918213
    8. '
' → logprob: -8.900069236755371
    9. '       ' → logprob: -8.900069236755371
    10. '<|end|>' → logprob: -9.275069236755371

Token 864: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 865: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 866: ' can' (ID: 665)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00707587506622076
    2. '   ' → logprob: -6.132075786590576
    3. '       ' → logprob: -6.257075786590576
    4. 'return' → logprob: -6.507075786590576
    5. ' continue' → logprob: -7.132075786590576
    6. 'pass' → logprob: -7.757075786590576
    7. '#' → logprob: -8.757076263427734
    8. '```' → logprob: -10.382076263427734
    9. '	continue' → logprob: -11.007076263427734
    10. '           ' → logprob: -11.257076263427734

Token 867: ' loop' (ID: 11453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0562170073390007
    2. ' continue' → logprob: -3.4312169551849365
    3. ''t' → logprob: -4.931217193603516
    4. 't' → logprob: -5.306217193603516
    5. '       ' → logprob: -5.681217193603516
    6. 'not' → logprob: -6.056217193603516
    7. '           ' → logprob: -6.306217193603516
    8. '   ' → logprob: -6.431217193603516
    9. '	continue' → logprob: -8.681217193603516
    10. 'import' → logprob: -8.931217193603516

Token 868: ' continue' (ID: 4901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 869: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 870: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 871: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23214295506477356
    2. 'return' (adapté à ' return') → logprob: -1.7321429252624512
    3. '
' → logprob: -3.732142925262451
    4. '```' → logprob: -5.482142925262451
    5. '    
' → logprob: -7.232142925262451
    6. ' return' → logprob: -7.732142925262451
    7. ':return' → logprob: -7.732142925262451
    8. '	return' → logprob: -7.857142925262451
    9. '\n' → logprob: -10.48214340209961
    10. '       ' → logprob: -10.60714340209961

Token 872: ' all' (ID: 722)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.62507438659668
    4. '(True' → logprob: -20.75007438659668
    5. 'False' → logprob: -22.12507438659668
    6. 'true' → logprob: -22.50007438659668
    7. '
' → logprob: -23.37507438659668
    8. '=True' → logprob: -23.50007438659668
    9. '_true' → logprob: -24.25007438659668
    10. 'TRUE' → logprob: -25.50007438659668

Token 873: '(done' (ID: 73137)
  Prédit: '(done'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(done' → logprob: -8.53050296427682e-05
    2. 'done' → logprob: -9.37508487701416
    3. '(' → logprob: -15.62508487701416
    4. ' done' → logprob: -16.500085830688477
    5. '	done' → logprob: -17.000085830688477
    6. '_done' → logprob: -17.125085830688477
    7. '(len' → logprob: -17.250085830688477
    8. 'Done' → logprob: -17.625085830688477
    9. '```' → logprob: -18.125085830688477
    10. '((' → logprob: -18.250085830688477

Token 874: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. '())' → logprob: -12.87501049041748
    3. '))' → logprob: -13.62501049041748
    4. '[c' → logprob: -14.00001049041748
    5. ' )' → logprob: -14.25001049041748
    6. ')c' → logprob: -14.25001049041748
    7. '[' → logprob: -14.25001049041748
    8. ')
' → logprob: -14.50001049041748
    9. ')`' → logprob: -14.75001049041748
    10. ')==' → logprob: -14.87501049041748

Token 875: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9053891897201538
    2. 'def' → logprob: -1.0303891897201538
    3. '<|end|>' → logprob: -2.2803893089294434
    4. ':' → logprob: -2.6553893089294434
    5. '\n' → logprob: -4.655389308929443
    6. '#' → logprob: -4.655389308929443
    7. '\' → logprob: -4.905389308929443
    8. '```' → logprob: -5.155389308929443
    9. '(' → logprob: -5.405389308929443
    10. ' 
' → logprob: -5.655389308929443

Token 876: ' main' (ID: 2758)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.9913156032562256
    2. ' main' → logprob: -1.1163156032562256
    3. ' solve' → logprob: -1.3663156032562256
    4. ' max' → logprob: -4.366315841674805
    5. 'binary' → logprob: -4.741315841674805
    6. 'solve' → logprob: -4.991315841674805
    7. ' min' → logprob: -5.116315841674805
    8. ' possible' → logprob: -5.991315841674805
    9. ' find' → logprob: -6.366315841674805
    10. ' solution' → logprob: -6.741315841674805

Token 877: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0067890239879488945
    2. '():
' → logprob: -5.006789207458496
    3. '()' → logprob: -10.256789207458496
    4. 'def' → logprob: -11.381789207458496
    5. ' ():' → logprob: -11.506789207458496
    6. '(' → logprob: -11.631789207458496
    7. '():
' → logprob: -12.881789207458496
    8. '():

' → logprob: -13.506789207458496
    9. ':' → logprob: -13.756789207458496
    10. '(argv' → logprob: -14.381789207458496

Token 878: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024968137964606285
    2. ' n' → logprob: -5.024968147277832
    3. '```' → logprob: -5.149968147277832
    4. 'def' → logprob: -5.274968147277832
    5. 'n' → logprob: -5.774968147277832
    6. '(n' → logprob: -5.899968147277832
    7. ' def' → logprob: -7.149968147277832
    8. ' for' → logprob: -8.774968147277832
    9. '(' → logprob: -9.274968147277832
    10. 'import' → logprob: -10.024968147277832

Token 879: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19020289182662964
    2. ' n' → logprob: -1.9402029514312744
    3. '   ' → logprob: -3.5652029514312744
    4. 'N' → logprob: -7.065202713012695
    5. 'import' → logprob: -8.440202713012695
    6. ' N' → logprob: -9.565202713012695
    7. '	n' → logprob: -9.690202713012695
    8. ' import' → logprob: -11.065202713012695
    9. '_n' → logprob: -11.940202713012695
    10. 't' → logprob: -11.940202713012695

Token 880: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3868882656097412
    2. 'True' → logprob: -1.1368882656097412
    3. '(True' → logprob: -11.01188850402832
    4. '1' → logprob: -14.63688850402832
    5. '=True' → logprob: -15.26188850402832
    6. 'true' → logprob: -17.01188850402832
    7. ' Tru' → logprob: -17.76188850402832
    8. ' ' → logprob: -17.76188850402832
    9. '   ' → logprob: -18.13688850402832
    10. ' line' → logprob: -18.26188850402832

Token 881: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1085989773273468
    2. ':' → logprob: -2.7335989475250244
    3. ':
' → logprob: -4.2335991859436035
    4. ' line' → logprob: -4.7335991859436035
    5. '       ' → logprob: -5.2335991859436035
    6. '(line' → logprob: -6.1085991859436035
    7. '():
' → logprob: -6.8585991859436035
    8. '<|end|>' → logprob: -6.8585991859436035
    9. '():' → logprob: -7.1085991859436035
    10. ',' → logprob: -7.1085991859436035

Token 882: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0057606264017522335
    2. 'line' → logprob: -5.505760669708252
    3. ' line' → logprob: -6.505760669708252
    4. 'try' → logprob: -9.130760192871094
    5. '```' → logprob: -9.755760192871094
    6. '	line' → logprob: -11.005760192871094
    7. ' try' → logprob: -13.880760192871094
    8. 'n' → logprob: -14.380760192871094
    9. '       ' → logprob: -14.505760192871094
    10. 's' → logprob: -14.505760192871094

Token 883: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.07246814668178558
    2. '   ' → logprob: -2.8224680423736572
    3. ' line' → logprob: -4.822468280792236
    4. 'n' → logprob: -6.697468280792236
    5. 's' → logprob: -7.572468280792236
    6. 'try' → logprob: -7.572468280792236
    7. '```' → logprob: -9.697467803955078
    8. '	line' → logprob: -9.947467803955078
    9. 'N' → logprob: -11.822467803955078
    10. ' n' → logprob: -12.197467803955078

Token 884: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994910538196564
    2. '=' → logprob: -2.694949150085449
    3. '=line' → logprob: -12.06994915008545
    4. '   ' → logprob: -12.69494915008545
    5. 's' → logprob: -12.81994915008545
    6. '.strip' → logprob: -15.69494915008545
    7. '=input' → logprob: -15.81994915008545
    8. ' ' → logprob: -16.069948196411133
    9. 'tokens' → logprob: -16.194948196411133
    10. '.' → logprob: -16.319948196411133

Token 885: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11321327090263367
    2. 'sys' → logprob: -2.613213300704956
    3. ' input' → logprob: -3.863213300704956
    4. ' sys' → logprob: -4.363213062286377
    5. '   ' → logprob: -13.238213539123535
    6. '=sys' → logprob: -14.113213539123535
    7. '(sys' → logprob: -15.238213539123535
    8. '=input' → logprob: -15.238213539123535
    9. '_input' → logprob: -16.61321258544922
    10. 'stdin' → logprob: -17.11321258544922

Token 886: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11474070698022842
    2. '()' → logprob: -2.3647406101226807
    3. '()
' → logprob: -4.23974084854126
    4. '.strip' → logprob: -12.614740371704102
    5. '().
' → logprob: -12.989740371704102
    6. '()

' → logprob: -13.364740371704102
    7. '()
' → logprob: -13.489740371704102
    8. '()\' → logprob: -13.489740371704102
    9. 'strip' → logprob: -14.114740371704102
    10. ' =' → logprob: -14.114740371704102

Token 887: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2565515637397766
    2. ' if' → logprob: -1.6315515041351318
    3. '       ' → logprob: -3.881551504135132
    4. 'if' → logprob: -4.756551742553711
    5. '```' → logprob: -8.131551742553711
    6. '    
' → logprob: -8.381551742553711
    7. ' ' → logprob: -8.881551742553711
    8. '        
' → logprob: -9.256551742553711
    9. '.strip' → logprob: -9.381551742553711
    10. '<|end|>' → logprob: -9.506551742553711

Token 888: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20322062075138092
    2. 'if' (adapté à ' if') → logprob: -1.7032206058502197
    3. '   ' → logprob: -6.328220844268799
    4. ' line' → logprob: -11.70322036743164
    5. '	if' → logprob: -11.70322036743164
    6. 'line' → logprob: -13.32822036743164
    7. '       ' → logprob: -14.07822036743164
    8. ' ' → logprob: -14.57822036743164
    9. '
' → logprob: -14.95322036743164
    10. '    ' → logprob: -15.57822036743164

Token 889: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10069646686315536
    2. 'not' → logprob: -2.350696563720703
    3. 'line' → logprob: -8.100696563720703
    4. ' line' → logprob: -8.600696563720703
    5. '#line' → logprob: -13.600696563720703
    6. ' ' → logprob: -14.225696563720703
    7. '	not' → logprob: -15.225696563720703
    8. '   ' → logprob: -16.225696563720703
    9. '=line' → logprob: -16.725696563720703
    10. '	line' → logprob: -17.225696563720703

Token 890: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0007099286303855479
    2. ' line' → logprob: -7.2507100105285645
    3. '	line' → logprob: -19.250709533691406
    4. '(line' → logprob: -19.625709533691406
    5. '#line' → logprob: -19.875709533691406
    6. '=line' → logprob: -22.000709533691406
    7. '[line' → logprob: -22.250709533691406
    8. 'Line' → logprob: -23.625709533691406
    9. '_line' → logprob: -23.625709533691406
    10. '
' → logprob: -23.875709533691406

Token 891: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6317302584648132
    2. '.strip' → logprob: -0.8817302584648132
    3. ':' → logprob: -3.006730318069458
    4. '   ' → logprob: -6.131730079650879
    5. ' or' → logprob: -6.756730079650879
    6. '.' → logprob: -7.506730079650879
    7. '.rstrip' → logprob: -7.881730079650879
    8. '.startswith' → logprob: -8.756730079650879
    9. ':return' → logprob: -9.381730079650879
    10. '.readline' → logprob: -9.881730079650879

Token 892: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07013839483261108
    2. '   ' → logprob: -2.695138454437256
    3. ' break' → logprob: -9.195137977600098
    4. 'break' → logprob: -9.820137977600098
    5. '           ' → logprob: -11.320137977600098
    6. ':
' → logprob: -11.320137977600098
    7. ',' → logprob: -11.820137977600098
    8. ':' → logprob: -12.695137977600098
    9. '	break' → logprob: -13.195137977600098
    10. '_break' → logprob: -13.320137977600098

Token 893: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.7035928964614868
    2. '       ' → logprob: -0.9535928964614868
    3. '   ' → logprob: -2.7035927772521973
    4. ' break' → logprob: -2.9535927772521973
    5. '	break' → logprob: -8.078593254089355
    6. 'return' → logprob: -8.328593254089355
    7. '           ' → logprob: -8.953593254089355
    8. ' ' → logprob: -10.953593254089355
    9. '_break' → logprob: -11.203593254089355
    10. '
' → logprob: -12.328593254089355

Token 894: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3169262111186981
    2. '       ' → logprob: -1.3169262409210205
    3. '    
' → logprob: -5.941926002502441
    4. '        
' → logprob: -7.066926002502441
    5. '<|end|>' → logprob: -9.566926002502441
    6. '
' → logprob: -9.941926002502441
    7. '```' → logprob: -10.191926002502441
    8. ',' → logprob: -12.441926002502441
    9. '  
' → logprob: -13.316926002502441
    10. 'import' → logprob: -13.566926002502441

Token 895: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2837049663066864
    2. '       ' → logprob: -1.4087049961090088
    3. '    
' → logprob: -6.40870475769043
    4. '        
' → logprob: -7.28370475769043
    5. '```' → logprob: -8.90870475769043
    6. '<|end|>' → logprob: -10.03370475769043
    7. '
' → logprob: -10.78370475769043
    8. '  
' → logprob: -12.78370475769043
    9. ',' → logprob: -13.03370475769043
    10. ' 
' → logprob: -13.65870475769043

Token 896: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5345191359519958
    2. 'n' → logprob: -0.9095191359519958
    3. '   ' → logprob: -5.159519195556641
    4. 'N' (adapté à ' N') → logprob: -5.909519195556641
    5. ' N' → logprob: -6.909519195556641
    6. ' parts' → logprob: -7.159519195556641
    7. ' line' → logprob: -7.909519195556641
    8. '       ' → logprob: -8.40951919555664
    9. ' ops' → logprob: -8.53451919555664
    10. '	n' → logprob: -10.15951919555664

Token 897: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8011663556098938
    2. ' =' → logprob: -1.176166296005249
    3. ',' → logprob: -1.426166296005249
    4. '=int' → logprob: -6.176166534423828
    5. ' ,' → logprob: -8.551166534423828
    6. ')' → logprob: -9.801166534423828
    7. ',int' → logprob: -10.801166534423828
    8. '   ' → logprob: -10.801166534423828
    9. ',n' → logprob: -10.801166534423828
    10. ' ' → logprob: -11.051166534423828

Token 898: ' T' (ID: 353)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10193688422441483
    2. 'Q' → logprob: -3.4769368171691895
    3. 'K' → logprob: -3.7269368171691895
    4. ' M' → logprob: -3.9769368171691895
    5. 'T' → logprob: -4.3519368171691895
    6. 'S' → logprob: -6.2269368171691895
    7. 'P' → logprob: -6.3519368171691895
    8. 'C' → logprob: -6.3519368171691895
    9. 'O' → logprob: -6.9769368171691895
    10. ' Q' → logprob: -7.3519368171691895

Token 899: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692420721054077
    2. ' =' → logprob: -1.1369242668151855
    3. ',' → logprob: -9.886923789978027
    4. '=line' → logprob: -14.136923789978027
    5. ')' → logprob: -14.386923789978027
    6. ' ' → logprob: -14.636923789978027
    7. '=int' → logprob: -14.886923789978027
    8. '=input' → logprob: -15.761923789978027
    9. ')=' → logprob: -16.636924743652344
    10. '<|end|>' → logprob: -16.761924743652344

Token 900: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02975071594119072
    2. 'map' → logprob: -3.5297508239746094
    3. ' line' → logprob: -16.02975082397461
    4. '	map' → logprob: -17.15475082397461
    5. '_map' → logprob: -17.77975082397461
    6. '[' → logprob: -18.27975082397461
    7. 'line' → logprob: -18.40475082397461
    8. '(map' → logprob: -18.65475082397461
    9. ' list' → logprob: -18.77975082397461
    10. ' mapa' → logprob: -19.27975082397461

Token 901: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02327284961938858
    2. 'int' → logprob: -3.773272752761841
    3. '(str' → logprob: -11.648272514343262
    4. '[int' → logprob: -12.023272514343262
    5. '(lambda' → logprob: -12.773272514343262
    6. '```' → logprob: -13.023272514343262
    7. '=int' → logprob: -13.023272514343262
    8. 'str' → logprob: -13.273272514343262
    9. '<int' → logprob: -13.648272514343262
    10. 'lambda' → logprob: -14.023272514343262

Token 902: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.01778300292789936
    2. '().' → logprob: -4.642783164978027
    3. '(),' → logprob: -5.892783164978027
    4. '=line' → logprob: -6.267783164978027
    5. '[line' → logprob: -6.767783164978027
    6. ',' → logprob: -7.392783164978027
    7. ',line' → logprob: -7.767783164978027
    8. '(' → logprob: -8.267783164978027
    9. 'line' → logprob: -8.517783164978027
    10. '#line' → logprob: -8.767783164978027

Token 903: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.994086627149954e-05
    2. ' line' → logprob: -9.750080108642578
    3. 'input' → logprob: -10.750080108642578
    4. '(line' → logprob: -16.625080108642578
    5. '   ' → logprob: -17.125080108642578
    6. '=line' → logprob: -17.875080108642578
    7. '[line' → logprob: -18.500080108642578
    8. '	line' → logprob: -18.750080108642578
    9. '#line' → logprob: -19.375080108642578
    10. '           ' → logprob: -19.500080108642578

Token 904: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0066744014620780945
    2. '.strip' → logprob: -5.756674289703369
    3. '.split' → logprob: -5.756674289703369
    4. '.' → logprob: -8.381674766540527
    5. '.readline' → logprob: -10.256674766540527
    6. '()' → logprob: -10.881674766540527
    7. '.rstrip' → logprob: -11.006674766540527
    8. ')' → logprob: -11.756674766540527
    9. '())' → logprob: -12.256674766540527
    10. ' .' → logprob: -12.256674766540527

Token 905: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007451510522514582
    2. ')' → logprob: -5.75745153427124
    3. '()' → logprob: -5.75745153427124
    4. '())
' → logprob: -6.88245153427124
    5. '('' → logprob: -9.882451057434082
    6. '(' → logprob: -11.507451057434082
    7. '')' → logprob: -12.507451057434082
    8. '()
' → logprob: -13.007451057434082
    9. '(),' → logprob: -13.007451057434082
    10. '()[' → logprob: -13.257451057434082

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06723499298095703
    2. ' if' → logprob: -2.942234992980957
    3. 'if' → logprob: -4.442234992980957
    4. '   ' → logprob: -8.817234992980957
    5. '```' → logprob: -8.817234992980957
    6. '<|end|>' → logprob: -9.192234992980957
    7. '	if' → logprob: -9.567234992980957
    8. '        
' → logprob: -11.067234992980957
    9. ',' → logprob: -12.442234992980957
    10. '	' → logprob: -12.692234992980957

Token 907: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.35675016045570374
    2. ' if' → logprob: -1.2317501306533813
    3. 'customers' → logprob: -5.606750011444092
    4. ' customers' → logprob: -5.856750011444092
    5. '   ' → logprob: -6.606750011444092
    6. '       ' → logprob: -8.10675048828125
    7. '```' → logprob: -10.10675048828125
    8. 'import' → logprob: -11.98175048828125
    9. '	if' → logprob: -11.98175048828125
    10. 'c' → logprob: -12.23175048828125

Token 908: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000158842682139948
    2. ' N' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.12515926361084
    4. ' not' → logprob: -18.000158309936523
    5. '(N' → logprob: -18.625158309936523
    6. 'not' → logprob: -18.875158309936523
    7. ' ' → logprob: -19.000158309936523
    8. '	N' → logprob: -20.250158309936523
    9. '       ' → logprob: -20.375158309936523
    10. '  ' → logprob: -20.500158309936523

Token 909: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2811891436576843
    2. '==' → logprob: -1.406189203262329
    3. '=' → logprob: -11.28118896484375
    4. '<=' → logprob: -12.03118896484375
    5. '[' → logprob: -12.40618896484375
    6. ')==' → logprob: -12.53118896484375
    7. ' <=' → logprob: -12.65618896484375
    8. '<|end|>' → logprob: -13.03118896484375
    9. ')' → logprob: -13.65618896484375
    10. '()==' → logprob: -14.03118896484375

Token 910: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -20.500003814697266
    4. '=' → logprob: -20.875003814697266
    5. '   ' → logprob: -21.750003814697266
    6. '۰' → logprob: -22.125003814697266
    7. '-' → logprob: -22.625003814697266
    8. '  ' → logprob: -23.250003814697266
    9. 's' → logprob: -23.375003814697266
    10. '০' → logprob: -23.750003814697266

Token 911: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -21.625
    4. '   ' → logprob: -22.375
    5. '```' → logprob: -22.875
    6. '০' → logprob: -23.125
    7. '０' → logprob: -23.125
    8. '  ' → logprob: -23.125
    9. 'o' → logprob: -23.25
    10. '=' → logprob: -23.25

Token 912: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17458508908748627
    2. ':' → logprob: -2.6745851039886475
    3. '   ' → logprob: -2.6745851039886475
    4. 'and' → logprob: -4.424584865570068
    5. ':
' → logprob: -4.924584865570068
    6. '       ' → logprob: -6.174584865570068
    7. '           ' → logprob: -7.424584865570068
    8. ' ' → logprob: -9.049585342407227
    9. ' or' → logprob: -9.424585342407227
    10. '  ' → logprob: -10.049585342407227

Token 913: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.001170225441455841
    2. ' T' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.251171112060547
    4. '	T' → logprob: -20.626171112060547
    5. ' ' → logprob: -21.251171112060547
    6. '  ' → logprob: -21.876171112060547
    7. ' ' → logprob: -23.251171112060547
    8. '
' → logprob: -23.626171112060547
    9. '_T' → logprob: -23.876171112060547
    10. '    ' → logprob: -23.876171112060547

Token 914: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519381642341614
    2. '==' → logprob: -1.5019381046295166
    3. '=' → logprob: -12.626937866210938
    4. ')==' → logprob: -13.126937866210938
    5. '===' → logprob: -13.876937866210938
    6. '()==' → logprob: -14.251937866210938
    7. ' =' → logprob: -15.126937866210938
    8. '0' → logprob: -15.126937866210938
    9. ' ' → logprob: -15.251937866210938
    10. ']==' → logprob: -15.376937866210938

Token 915: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.125009536743164
    4. '  ' → logprob: -20.375009536743164
    5. '۰' → logprob: -21.500009536743164
    6. '
' → logprob: -22.250009536743164
    7. ' ' → logprob: -22.500009536743164
    8. '=' → logprob: -22.500009536743164
    9. '```' → logprob: -22.500009536743164
    10. '00' → logprob: -22.875009536743164

Token 916: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -20.875001907348633
    4. '০' → logprob: -22.500001907348633
    5. '０' → logprob: -22.875001907348633
    6. '०' → logprob: -23.250001907348633
    7. '00' → logprob: -24.000001907348633
    8. '
' → logprob: -24.250001907348633
    9. 'o' → logprob: -24.250001907348633
    10. '```' → logprob: -24.250001907348633

Token 917: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6769126057624817
    2. ':' → logprob: -1.051912546157837
    3. '           ' → logprob: -2.176912546157837
    4. '   ' → logprob: -3.801912546157837
    5. '       ' → logprob: -5.051912784576416
    6. '():
' → logprob: -8.801912307739258
    7. ':return' → logprob: -9.426912307739258
    8. '<|end|>' → logprob: -10.676912307739258
    9. '):
' → logprob: -10.801912307739258
    10. '          ' → logprob: -10.926912307739258

Token 918: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02662409096956253
    2. '       ' → logprob: -3.6516242027282715
    3. '   ' → logprob: -8.401623725891113
    4. '	       ' → logprob: -10.651623725891113
    5. '		' → logprob: -10.776623725891113
    6. '	   ' → logprob: -11.151623725891113
    7. '<|end|>' → logprob: -12.026623725891113
    8. '```' → logprob: -12.151623725891113
    9. ',' → logprob: -12.276623725891113
    10. ' break' → logprob: -12.526623725891113

Token 919: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.45203930139541626
    2. 'return' → logprob: -1.4520392417907715
    3. ' break' → logprob: -2.4520392417907715
    4. '           ' → logprob: -3.4520392417907715
    5. ' return' → logprob: -4.7020392417907715
    6. '       ' → logprob: -6.3270392417907715
    7. '	break' → logprob: -7.8270392417907715
    8. '               ' → logprob: -8.07703971862793
    9. '   ' → logprob: -8.82703971862793
    10. '_break' → logprob: -10.70203971862793

Token 920: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004458724055439234
    2. '   ' → logprob: -6.254458904266357
    3. '        
' → logprob: -7.254458904266357
    4. 'customers' → logprob: -7.254458904266357
    5. '<|end|>' → logprob: -7.504458904266357
    6. '```' → logprob: -8.3794584274292
    7. '
' → logprob: -9.2544584274292
    8. ' customers' → logprob: -9.5044584274292
    9. '    
' → logprob: -10.7544584274292
    10. ' for' → logprob: -11.2544584274292

Token 921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9001762866973877
    2. 'customers' → logprob: -1.1501762866973877
    3. '   ' → logprob: -1.7751762866973877
    4. ' customers' → logprob: -2.6501762866973877
    5. '```' → logprob: -4.150176048278809
    6. ' operators' → logprob: -5.025176048278809
    7. 'operators' → logprob: -5.150176048278809
    8. '	custom' → logprob: -6.025176048278809
    9. 'ops' → logprob: -6.525176048278809
    10. 'custom' → logprob: -7.025176048278809

Token 922: ' customers' (ID: 6028)
  Prédit: 'customers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'customers' (adapté à ' customers') → logprob: -0.008450627326965332
    2. '   ' → logprob: -5.758450508117676
    3. '       ' → logprob: -6.133450508117676
    4. 'ops' → logprob: -6.508450508117676
    5. 'cust' → logprob: -7.633450508117676
    6. ' customers' → logprob: -8.008450508117676
    7. 'operators' → logprob: -8.633450508117676
    8. 'cus' → logprob: -9.008450508117676
    9. '```' → logprob: -9.008450508117676
    10. 'custom' → logprob: -9.258450508117676

Token 923: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1427367478609085
    2. '=' → logprob: -2.0177366733551025
    3. '   ' → logprob: -11.017736434936523
    4. ')' → logprob: -11.517736434936523
    5. ',' → logprob: -11.642736434936523
    6. '<|end|>' → logprob: -11.892736434936523
    7. '=[]' → logprob: -12.267736434936523
    8. '.append' → logprob: -13.392736434936523
    9. '[' → logprob: -13.642736434936523
    10. '    ' → logprob: -13.767736434936523

Token 924: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5599263310432434
    2. '[' → logprob: -1.0599262714385986
    3. '[]
' → logprob: -2.5599262714385986
    4. '[int' → logprob: -5.559926509857178
    5. '[user' → logprob: -8.55992603302002
    6. ' []' → logprob: -8.80992603302002
    7. '[class' → logprob: -9.43492603302002
    8. '[s' → logprob: -9.43492603302002
    9. '[id' → logprob: -9.80992603302002
    10. '[data' → logprob: -10.18492603302002

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30178990960121155
    2. ' for' → logprob: -1.9267898797988892
    3. 'for' → logprob: -2.1767899990081787
    4. '   ' → logprob: -7.3017897605896
    5. '	for' → logprob: -8.051790237426758
    6. '<|end|>' → logprob: -8.176790237426758
    7. '	   ' → logprob: -9.676790237426758
    8. 'while' → logprob: -10.426790237426758
    9. '        
' → logprob: -10.926790237426758
    10. '           ' → logprob: -11.426790237426758

Token 926: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009145628428086638
    2. ' for' → logprob: -7.000914573669434
    3. '
' → logprob: -13.750914573669434
    4. '   ' → logprob: -14.125914573669434
    5. '```' → logprob: -14.500914573669434
    6. '	for' → logprob: -14.625914573669434
    7. '       ' → logprob: -15.375914573669434
    8. 'while' → logprob: -17.750913619995117
    9. '``' → logprob: -19.000913619995117
    10. '        
' → logprob: -19.375913619995117

Token 927: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7432603272027336e-06
    2. '_range' → logprob: -13.625001907348633
    3. '_i' → logprob: -15.500001907348633
    4. ' _' → logprob: -16.000001907348633
    5. '_=' → logprob: -16.500001907348633
    6. '_in' → logprob: -17.000001907348633
    7. '_
' → logprob: -17.375001907348633
    8. ' in' → logprob: -17.500001907348633
    9. 'i' → logprob: -19.625001907348633
    10. '_

' → logprob: -19.875001907348633

Token 928: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6816577911376953
    2. 'in' → logprob: -1.0566577911376953
    3. ' in' → logprob: -2.8066577911376953
    4. ' range' → logprob: -2.8066577911376953
    5. '_' → logprob: -3.6816577911376953
    6. '_range' → logprob: -8.556657791137695
    7. '0' → logprob: -9.181657791137695
    8. ' ' → logprob: -9.681657791137695
    9. 'i' → logprob: -9.806657791137695
    10. '	range' → logprob: -10.431657791137695

Token 929: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '	range' → logprob: -18.500123977661133
    4. '_range' → logprob: -18.750123977661133
    5. '(range' → logprob: -19.125123977661133
    6. '.range' → logprob: -21.000123977661133
    7. '[' → logprob: -21.625123977661133
    8. 'ange' → logprob: -21.750123977661133
    9. '  ' → logprob: -22.000123977661133
    10. '_' → logprob: -22.125123977661133

Token 930: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.018232710659503937
    2. 'N' → logprob: -4.018232822418213
    3. '(' → logprob: -9.643232345581055
    4. '(int' → logprob: -11.643232345581055
    5. ' N' → logprob: -12.768232345581055
    6. ' (' → logprob: -12.893232345581055
    7. '(n' → logprob: -13.143232345581055
    8. 'int' → logprob: -13.893232345581055
    9. 'range' → logprob: -15.143232345581055
    10. ' ' → logprob: -15.768232345581055

Token 931: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04944457858800888
    2. '):' → logprob: -3.6744446754455566
    3. '():
' → logprob: -4.174444675445557
    4. '       ' → logprob: -5.799444675445557
    5. '   ' → logprob: -6.799444675445557
    6. ':
' → logprob: -7.049444675445557
    7. '()):
' → logprob: -7.299444675445557
    8. ':' → logprob: -7.549444675445557
    9. '```' → logprob: -8.174444198608398
    10. ',' → logprob: -8.424444198608398

Token 932: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9387246370315552
    2. '   ' → logprob: -1.1887246370315552
    3. '       ' → logprob: -1.5637246370315552
    4. ' line' → logprob: -2.5637245178222656
    5. 'line' → logprob: -4.188724517822266
    6. '```' → logprob: -7.438724517822266
    7. '	   ' → logprob: -7.563724517822266
    8. '(line' → logprob: -7.813724517822266
    9. '	       ' → logprob: -7.938724517822266
    10. '	line' → logprob: -8.938724517822266

Token 933: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.1571517139673233
    2. 'line' → logprob: -2.032151699066162
    3. '           ' → logprob: -4.532151699066162
    4. 'm' → logprob: -6.532151699066162
    5. ' M' → logprob: -6.907151699066162
    6. ' line' → logprob: -7.157151699066162
    7. 'l' → logprob: -9.03215217590332
    8. 's' → logprob: -9.90715217590332
    9. '   ' → logprob: -10.03215217590332
    10. 'L' → logprob: -10.15715217590332

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016825977945700288
    2. ',L' → logprob: -9.125167846679688
    3. ' ,' → logprob: -9.750167846679688
    4. ',K' → logprob: -14.125167846679688
    5. '_,' → logprob: -15.875167846679688
    6. ' L' → logprob: -16.375167846679688
    7. 's' → logprob: -17.250167846679688
    8. 'L' → logprob: -17.625167846679688
    9. ',int' → logprob: -17.625167846679688
    10. '‌,' → logprob: -17.750167846679688

Token 935: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04858953505754471
    2. ' L' → logprob: -3.0485894680023193
    3. ' ' → logprob: -13.798589706420898
    4. ',' → logprob: -15.173589706420898
    5. ',L' → logprob: -15.673589706420898
    6. '  ' → logprob: -15.923589706420898
    7. 'K' → logprob: -16.0485897064209
    8. '   ' → logprob: -16.1735897064209
    9. ' ' → logprob: -16.5485897064209
    10. '=' → logprob: -16.7985897064209

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000495605927426368
    2. ',K' → logprob: -7.625495433807373
    3. ' ,' → logprob: -12.125495910644531
    4. 'K' → logprob: -13.500495910644531
    5. ' K' → logprob: -14.750495910644531
    6. '=' → logprob: -15.750495910644531
    7. ',k' → logprob: -16.87549591064453
    8. ',C' → logprob: -17.25049591064453
    9. ',Q' → logprob: -17.62549591064453
    10. ',P' → logprob: -18.00049591064453

Token 937: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00038038729690015316
    2. ' K' → logprob: -7.875380516052246
    3. ',' → logprob: -16.12537956237793
    4. ' ' → logprob: -16.37537956237793
    5. ',K' → logprob: -16.75037956237793
    6. '   ' → logprob: -18.25037956237793
    7. 'k' → logprob: -18.37537956237793
    8. '           ' → logprob: -18.37537956237793
    9. '  ' → logprob: -18.75037956237793
    10. '       ' → logprob: -19.25037956237793

Token 938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519337236881256
    2. ' =' → logprob: -1.5019336938858032
    3. '=line' → logprob: -12.876934051513672
    4. '   ' → logprob: -14.251934051513672
    5. '=input' → logprob: -15.251934051513672
    6. ',' → logprob: -15.251934051513672
    7. '    ' → logprob: -15.376934051513672
    8. '       ' → logprob: -15.626934051513672
    9. ')' → logprob: -16.001934051513672
    10. ' ' → logprob: -16.251934051513672

Token 939: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740777611732483
    2. ' map' → logprob: -0.9740777611732483
    3. '	map' → logprob: -14.224078178405762
    4. '   ' → logprob: -17.474077224731445
    5. 'm' → logprob: -18.224077224731445
    6. '    ' → logprob: -18.599077224731445
    7. ' ' → logprob: -19.599077224731445
    8. '  ' → logprob: -20.349077224731445
    9. '_map' → logprob: -20.599077224731445
    10. '
' → logprob: -20.599077224731445

Token 940: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20144520699977875
    2. '(int' → logprob: -1.70144522190094
    3. ' int' → logprob: -11.701445579528809
    4. '[int' → logprob: -11.701445579528809
    5. '=int' → logprob: -11.701445579528809
    6. '<int' → logprob: -12.951445579528809
    7. ',int' → logprob: -13.076445579528809
    8. '```' → logprob: -13.451445579528809
    9. '   ' → logprob: -14.576445579528809
    10. ':int' → logprob: -15.201445579528809

Token 941: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.584967315196991
    2. ',input' → logprob: -0.959967315196991
    3. '(input' → logprob: -3.5849673748016357
    4. '           ' → logprob: -4.084967136383057
    5. '(int' → logprob: -5.459967136383057
    6. ',int' → logprob: -5.834967136383057
    7. '=input' → logprob: -5.834967136383057
    8. 'input' → logprob: -6.834967136383057
    9. '(),' → logprob: -7.084967136383057
    10. '                   ' → logprob: -7.334967136383057

Token 942: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.5491004129871726e-05
    2. ' input' → logprob: -10.000045776367188
    3. '(input' → logprob: -18.500045776367188
    4. '_input' → logprob: -19.500045776367188
    5. '=input' → logprob: -19.875045776367188
    6. '           ' → logprob: -20.500045776367188
    7. ',input' → logprob: -20.625045776367188
    8. '<input' → logprob: -22.125045776367188
    9. 'line' → logprob: -22.250045776367188
    10. '[input' → logprob: -22.375045776367188

Token 943: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010008628305513412
    2. '()' → logprob: -9.250100135803223
    3. '())' → logprob: -12.500100135803223
    4. '()
' → logprob: -16.500099182128906
    5. ')' → logprob: -17.000099182128906
    6. ' ().' → logprob: -17.250099182128906
    7. '(' → logprob: -17.750099182128906
    8. '()[' → logprob: -18.625099182128906
    9. '();)' → logprob: -19.250099182128906
    10. '.split' → logprob: -19.250099182128906

Token 944: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001613459608051926
    2. 'strip' → logprob: -8.750161170959473
    3. 'rstrip' → logprob: -13.250161170959473
    4. '().' → logprob: -14.500161170959473
    5. ' split' → logprob: -14.500161170959473
    6. '(split' → logprob: -16.00016212463379
    7. '.split' → logprob: -17.37516212463379
    8. '_split' → logprob: -19.62516212463379
    9. 'read' → logprob: -20.00016212463379
    10. 'plit' → logprob: -20.25016212463379

Token 945: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.379309743642807
    2. ')' → logprob: -1.3793097734451294
    3. '())
' → logprob: -2.87930965423584
    4. '())' → logprob: -4.87930965423584
    5. '()' → logprob: -9.37930965423584
    6. ')`
' → logprob: -10.87930965423584
    7. '()
' → logprob: -11.12930965423584
    8. ')
' → logprob: -11.75430965423584
    9. '       ' → logprob: -12.25430965423584
    10. '())
' → logprob: -13.25430965423584

Token 946: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2637552320957184
    2. '           ' → logprob: -1.513755202293396
    3. '<|end|>' → logprob: -5.3887553215026855
    4. 'customers' → logprob: -6.0137553215026855
    5. '   ' → logprob: -7.2637553215026855
    6. '```' → logprob: -7.2637553215026855
    7. '        
' → logprob: -7.3887553215026855
    8. '[' → logprob: -7.5137553215026855
    9. ',' → logprob: -7.7637553215026855
    10. ' customers' → logprob: -8.013754844665527

Token 947: ' customers' (ID: 6028)
  Prédit: 'customers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'customers' (adapté à ' customers') → logprob: -0.0014196380507200956
    2. ' customers' → logprob: -6.751419544219971
    3. '           ' → logprob: -8.376420021057129
    4. '       ' → logprob: -11.001420021057129
    5. '   ' → logprob: -13.251420021057129
    6. 'customer' → logprob: -15.126420021057129
    7. '```' → logprob: -15.626420021057129
    8. 'custom' → logprob: -15.751420021057129
    9. '
' → logprob: -16.501419067382812
    10. '	custom' → logprob: -16.626419067382812

Token 948: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.8232690460281447e-05
    2. '.' → logprob: -10.000048637390137
    3. '.app' → logprob: -13.625048637390137
    4. ' .' → logprob: -14.125048637390137
    5. ').' → logprob: -15.125048637390137
    6. 'append' → logprob: -15.250048637390137
    7. '.extend' → logprob: -16.00004768371582
    8. '.ap' → logprob: -16.12504768371582
    9. '.pop' → logprob: -16.87504768371582
    10. '.py' → logprob: -17.00004768371582

Token 949: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3138020634651184
    2. '(M' → logprob: -1.3138020038604736
    3. '(' → logprob: -7.563802242279053
    4. ' (' → logprob: -10.938801765441895
    5. '(m' → logprob: -13.438801765441895
    6. '([' → logprob: -14.313801765441895
    7. '   ' → logprob: -14.438801765441895
    8. '(
' → logprob: -14.438801765441895
    9. ' ' → logprob: -17.18880271911621
    10. '[(' → logprob: -17.18880271911621

Token 950: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.1472419600977446e-06
    2. ' M' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.125001907348633
    4. '(M' → logprob: -20.750001907348633
    5. '	M' → logprob: -21.625001907348633
    6. '  ' → logprob: -22.250001907348633
    7. '[M' → logprob: -22.500001907348633
    8. ' ' → logprob: -22.625001907348633
    9. '*M' → logprob: -23.000001907348633
    10. '
' → logprob: -23.000001907348633

Token 951: ',L' (ID: 68006)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.078839502763003e-05
    2. ',L' → logprob: -9.625090599060059
    3. ' ,' → logprob: -11.125090599060059
    4. ',K' → logprob: -12.250090599060059
    5. ',
' → logprob: -12.500090599060059
    6. '<|end|>' → logprob: -15.375090599060059
    7. '```' → logprob: -15.500090599060059
    8. '`,' → logprob: -15.625090599060059
    9. '',' → logprob: -16.250091552734375
    10. '
' → logprob: -16.500091552734375

Token 952: ',K' (ID: 107147)
  Prédit: ',K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',K' → logprob: -0.4740901589393616
    2. ',' → logprob: -0.9740901589393616
    3. ' ,' → logprob: -11.349090576171875
    4. ',k' → logprob: -14.099090576171875
    5. 'K' → logprob: -15.224090576171875
    6. ',
' → logprob: -15.849090576171875
    7. ',Q' → logprob: -16.224090576171875
    8. ',C' → logprob: -17.599090576171875
    9. ',P' → logprob: -17.974090576171875
    10. ',R' → logprob: -18.349090576171875

Token 953: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00201595202088356
    2. '))
' → logprob: -6.252016067504883
    3. ')' → logprob: -9.377016067504883
    4. ')))' → logprob: -14.002016067504883
    5. '       ' → logprob: -14.502016067504883
    6. ')
' → logprob: -14.502016067504883
    7. '   ' → logprob: -15.002016067504883
    8. '           ' → logprob: -15.252016067504883
    9. '))

' → logprob: -15.877016067504883
    10. ' ))' → logprob: -16.502016067504883

Token 954: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9317916035652161
    2. 'ops' → logprob: -1.3067915439605713
    3. '       ' → logprob: -1.5567915439605713
    4. '```' → logprob: -2.4317915439605713
    5. 'num' → logprob: -3.8067915439605713
    6. 'n' → logprob: -5.05679178237915
    7. 'operators' → logprob: -5.93179178237915
    8. 'for' → logprob: -7.30679178237915
    9. 'op' → logprob: -7.55679178237915
    10. '_ops' → logprob: -7.55679178237915

Token 955: ' #' (ID: 1069)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.956670343875885
    2. 'low' → logprob: -1.2066702842712402
    3. 'for' → logprob: -1.8316702842712402
    4. 'left' → logprob: -2.7066702842712402
    5. '   ' → logprob: -3.3316702842712402
    6. 'l' → logprob: -4.08167028427124
    7. 'lo' → logprob: -4.70667028427124
    8. '```' → logprob: -4.83167028427124
    9. 'n' → logprob: -5.20667028427124
    10. 'min' → logprob: -5.45667028427124

Token 956: ' Binary' (ID: 32672)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.6467745304107666
    2. 'left' → logprob: -1.0217745304107666
    3. 'for' → logprob: -3.1467745304107666
    4. 'l' → logprob: -3.1467745304107666
    5. 'lo' → logprob: -3.6467745304107666
    6. 'import' → logprob: -7.0217742919921875
    7. 'min' → logprob: -7.2717742919921875
    8. 'ops' → logprob: -7.7717742919921875
    9. '```' → logprob: -7.8967742919921875
    10. 'print' → logprob: -7.8967742919921875

Token 957: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.1620897501707077
    2. 'search' → logprob: -1.9120897054672241
    3. '_search' → logprob: -6.287089824676514
    4. '-search' → logprob: -14.287089347839355
    5. '	search' → logprob: -14.412089347839355
    6. ' searches' → logprob: -14.662089347839355
    7. ' searching' → logprob: -14.787089347839355
    8. 'earch' → logprob: -14.912089347839355
    9. '   ' → logprob: -15.287089347839355
    10. ' seach' → logprob: -15.412089347839355

Token 958: ' on' (ID: 402)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.9552356004714966
    2. ' low' → logprob: -1.5802356004714966
    3. 'low' → logprob: -1.7052356004714966
    4. ' lo' → logprob: -2.330235481262207
    5. 'left' → logprob: -2.455235481262207
    6. '(low' → logprob: -4.080235481262207
    7. 'lo' → logprob: -4.705235481262207
    8. '```' → logprob: -4.955235481262207
    9. '   ' → logprob: -6.205235481262207
    10. '       ' → logprob: -6.330235481262207

Token 959: ' number' (ID: 2086)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.15969893336296082
    2. 'left' → logprob: -2.409698963165283
    3. ' ops' → logprob: -3.909698963165283
    4. 'l' → logprob: -4.784698963165283
    5. 'low' → logprob: -4.784698963165283
    6. ' left' → logprob: -5.284698963165283
    7. 'operators' → logprob: -5.284698963165283
    8. '```' → logprob: -5.409698963165283
    9. 'num' → logprob: -6.034698963165283
    10. 'min' → logprob: -7.409698963165283

Token 960: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.13739877939224243
    2. '_of' → logprob: -2.6373987197875977
    3. 'of' → logprob: -3.3873987197875977
    4. '_' → logprob: -4.512398719787598
    5. '   ' → logprob: -5.137398719787598
    6. 's' → logprob: -6.762398719787598
    7. ' operators' → logprob: -6.762398719787598
    8. 'ofs' → logprob: -7.387398719787598
    9. ' (' → logprob: -7.512398719787598
    10. '(' → logprob: -7.637398719787598

Token 961: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.09084130823612213
    2. ' operators' → logprob: -2.590841293334961
    3. 'ops' → logprob: -4.465841293334961
    4. '```' → logprob: -9.340841293334961
    5. 'operations' → logprob: -9.465841293334961
    6. ' ops' → logprob: -9.465841293334961
    7. '   ' → logprob: -9.715841293334961
    8. 'operator' → logprob: -10.965841293334961
    9. ')' → logprob: -11.215841293334961
    10. ' ' → logprob: -11.715841293334961

Token 962: '
' (ID: 198)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.9457380771636963
    2. ' left' → logprob: -1.3207380771636963
    3. '(low' → logprob: -2.1957380771636963
    4. 'left' → logprob: -2.6957380771636963
    5. 'low' → logprob: -2.9457380771636963
    6. ' lo' → logprob: -3.0707380771636963
    7. '       ' → logprob: -3.8207380771636963
    8. '```' → logprob: -4.320737838745117
    9. '   ' → logprob: -4.695737838745117
    10. '
' → logprob: -4.945737838745117

Token 963: '       ' (ID: 309)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.6149261593818665
    2. 'left' → logprob: -1.7399260997772217
    3. ' low' → logprob: -2.1149260997772217
    4. ' left' → logprob: -2.4899260997772217
    5. ' lo' → logprob: -3.2399260997772217
    6. 'lo' → logprob: -3.4899260997772217
    7. '(low' → logprob: -5.739926338195801
    8. '       ' → logprob: -6.489926338195801
    9. ' l' → logprob: -6.739926338195801
    10. 'l' → logprob: -6.739926338195801

Token 964: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.29800644516944885
    2. 'left' (adapté à ' left') → logprob: -1.5480064153671265
    3. ' low' → logprob: -3.548006534576416
    4. ' left' → logprob: -4.298006534576416
    5. 'l' → logprob: -6.548006534576416
    6. 'lo' → logprob: -7.173006534576416
    7. ' lo' → logprob: -8.423006057739258
    8. '```' → logprob: -8.673006057739258
    9. ' l' → logprob: -10.048006057739258
    10. '(low' → logprob: -12.423006057739258

Token 965: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14726771414279938
    2. '=' → logprob: -2.0222678184509277
    3. ',' → logprob: -5.397267818450928
    4. ' ,' → logprob: -10.02226734161377
    5. '```' → logprob: -12.52226734161377
    6. '0' → logprob: -13.64726734161377
    7. ' ' → logprob: -14.14726734161377
    8. ' =
' → logprob: -14.39726734161377
    9. '<|end|>' → logprob: -14.39726734161377
    10. '=
' → logprob: -14.89726734161377

Token 966: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2752971947193146
    2. ' right' → logprob: -1.7752971649169922
    3. '0' → logprob: -2.650297164916992
    4. '1' → logprob: -7.900297164916992
    5. ' ' → logprob: -8.900297164916992
    6. '=' → logprob: -9.900297164916992
    7. '```' → logprob: -11.150297164916992
    8. ',right' → logprob: -11.525297164916992
    9. ' =' → logprob: -12.650297164916992
    10. '   ' → logprob: -12.900297164916992

Token 967: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020741820335388
    2. '=' → logprob: -2.3502073287963867
    3. ',' → logprob: -14.600207328796387
    4. '=int' → logprob: -16.725208282470703
    5. '```' → logprob: -17.100208282470703
    6. ' ' → logprob: -17.225208282470703
    7. '＝' → logprob: -17.850208282470703
    8. ' =
' → logprob: -17.975208282470703
    9. ' =[' → logprob: -18.225208282470703
    10. '=len' → logprob: -18.600208282470703

Token 968: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0057808998972177505
    2. ' ' → logprob: -5.6307806968688965
    3. '0' → logprob: -6.1307806968688965
    4. 'N' → logprob: -13.005781173706055
    5. ' N' → logprob: -13.880781173706055
    6. '   ' → logprob: -15.130781173706055
    7. 'len' → logprob: -17.380781173706055
    8. '```' → logprob: -17.505781173706055
    9. '[' → logprob: -17.880781173706055
    10. '(' → logprob: -17.880781173706055

Token 969: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234832875430584
    2. '0' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.505234718322754
    4. 'N' → logprob: -14.755234718322754
    5. '[' → logprob: -17.25523567199707
    6. 'len' → logprob: -17.63023567199707
    7. '```' → logprob: -17.75523567199707
    8. '(' → logprob: -18.50523567199707
    9. '[N' → logprob: -18.50523567199707
    10. '=' → logprob: -19.88023567199707

Token 970: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001726584043353796
    2. ' ,' → logprob: -6.6267266273498535
    3. ',right' → logprob: -8.126726150512695
    4. ',
' → logprob: -9.626726150512695
    5. ',left' → logprob: -11.751726150512695
    6. '=' → logprob: -11.751726150512695
    7. ' =' → logprob: -12.001726150512695
    8. '```' → logprob: -12.376726150512695
    9. '<|end|>' → logprob: -12.751726150512695
    10. '   ' → logprob: -13.126726150512695

Token 971: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006621609791181982
    2. 'len' → logprob: -7.500662326812744
    3. '100' → logprob: -9.750661849975586
    4. 'sum' → logprob: -10.500661849975586
    5. 'max' → logprob: -11.375661849975586
    6. ' N' → logprob: -11.375661849975586
    7. '10' → logprob: -15.375661849975586
    8. ' len' → logprob: -15.500661849975586
    9. '500' → logprob: -17.250661849975586
    10. ' sum' → logprob: -17.500661849975586

Token 972: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49554309248924255
    2. '
' → logprob: -1.120543122291565
    3. '<|end|>' → logprob: -3.2455430030822754
    4. ' +' → logprob: -4.745543003082275
    5. ' 
' → logprob: -5.245543003082275
    6. '    
' → logprob: -5.870543003082275
    7. '  
' → logprob: -5.995543003082275
    8. '```' → logprob: -6.120543003082275
    9. '+
' → logprob: -6.245543003082275
    10. '   ' → logprob: -7.120543003082275

Token 973: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.970274806022644
    2. '<|end|>' → logprob: -1.470274806022644
    3. ' 
' → logprob: -1.720274806022644
    4. '       ' → logprob: -3.0952749252319336
    5. '   ' → logprob: -3.4702749252319336
    6. '  
' → logprob: -3.5952749252319336
    7. '    
' → logprob: -3.7202749252319336
    8. '```' → logprob: -3.8452749252319336
    9. '        
' → logprob: -4.345274925231934
    10. '<|end|>' → logprob: -4.845274925231934

Token 974: ' res' (ID: 694)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.016249842941761017
    2. ' while' → logprob: -4.141249656677246
    3. '       ' → logprob: -9.016249656677246
    4. '   ' → logprob: -10.141249656677246
    5. '```' → logprob: -10.516249656677246
    6. 'mid' → logprob: -11.266249656677246
    7. '	while' → logprob: -11.766249656677246
    8. 'result' → logprob: -13.141249656677246
    9. '
' → logprob: -13.141249656677246
    10. '``' → logprob: -14.516249656677246

Token 975: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38690564036369324
    2. ' =' → logprob: -1.1369056701660156
    3. ',' → logprob: -10.886905670166016
    4. ' ' → logprob: -12.511905670166016
    5. ')' → logprob: -12.761905670166016
    6. ' =
' → logprob: -13.136905670166016
    7. '_' → logprob: -14.011905670166016
    8. '=[]' → logprob: -14.011905670166016
    9. '   ' → logprob: -14.136905670166016
    10. '=
' → logprob: -14.386905670166016

Token 976: ' N' (ID: 478)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5296348333358765
    2. ' right' → logprob: -0.9046348333358765
    3. 'N' → logprob: -5.404634952545166
    4. ' N' → logprob: -6.529634952545166
    5. '0' → logprob: -8.404634475708008
    6. ' -' → logprob: -9.029634475708008
    7. '-' → logprob: -9.404634475708008
    8. ' None' → logprob: -9.904634475708008
    9. 'None' → logprob: -10.154634475708008
    10. 'left' → logprob: -12.029634475708008

Token 977: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07022395730018616
    2. '+' → logprob: -3.1952240467071533
    3. ' 
' → logprob: -4.695223808288574
    4. '<|end|>' → logprob: -4.695223808288574
    5. ' +' → logprob: -5.570223808288574
    6. '+
' → logprob: -6.695223808288574
    7. '<|end|>' → logprob: -6.945223808288574
    8. '    
' → logprob: -7.820223808288574
    9. '   ' → logprob: -7.945223808288574
    10. '  
' → logprob: -7.945223808288574

Token 978: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5328009724617004
    2. '   ' → logprob: -1.9078009128570557
    3. 'while' → logprob: -2.1578009128570557
    4. '
' → logprob: -2.6578009128570557
    5. '       ' → logprob: -3.1578009128570557
    6. '<|end|>' → logprob: -4.532801151275635
    7. ' 
' → logprob: -4.782801151275635
    8. '	while' → logprob: -4.782801151275635
    9. '    
' → logprob: -5.657801151275635
    10. '  
' → logprob: -6.282801151275635

Token 979: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5712553858757019
    2. 'while' (adapté à ' while') → logprob: -1.1962554454803467
    3. '
' → logprob: -2.8212554454803467
    4. '   ' → logprob: -3.3212554454803467
    5. ' 
' → logprob: -4.196255207061768
    6. '```' → logprob: -4.571255207061768
    7. '       ' → logprob: -5.071255207061768
    8. '	while' → logprob: -6.196255207061768
    9. '    
' → logprob: -6.821255207061768
    10. '<|end|>' → logprob: -7.071255207061768

Token 980: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3132619559764862
    2. 'left' → logprob: -1.3132619857788086
    3. '	left' → logprob: -16.313261032104492
    4. '(left' → logprob: -16.438261032104492
    5. ' lef' → logprob: -17.938261032104492
    6. 'right' → logprob: -18.313261032104492
    7. ' right' → logprob: -18.688261032104492
    8. '[left' → logprob: -19.313261032104492
    9. '_left' → logprob: -20.063261032104492
    10. '   ' → logprob: -20.813261032104492

Token 981: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02349690906703472
    2. '<=' → logprob: -3.8984968662261963
    3. ' <' → logprob: -5.898497104644775
    4. '<' → logprob: -9.023496627807617
    5. '<|end|>' → logprob: -10.523496627807617
    6. ')<=' → logprob: -11.023496627807617
    7. ' ≤' → logprob: -11.398496627807617
    8. ' +=' → logprob: -11.898496627807617
    9. ' <<=' → logprob: -12.273496627807617
    10. '```' → logprob: -12.273496627807617

Token 982: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0015023599844425917
    2. ' right' → logprob: -6.501502513885498
    3. '[right' → logprob: -17.626502990722656
    4. '	right' → logprob: -18.626502990722656
    5. '_right' → logprob: -20.376502990722656
    6. '```' → logprob: -20.626502990722656
    7. '(right' → logprob: -21.251502990722656
    8. '
' → logprob: -21.501502990722656
    9. ',right' → logprob: -21.501502990722656
    10. ':right' → logprob: -21.626502990722656

Token 983: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24961711466312408
    2. '<|end|>' → logprob: -2.249617099761963
    3. ':
' → logprob: -2.374617099761963
    4. '<|end|>' → logprob: -4.249617099761963
    5. '       ' → logprob: -5.499617099761963
    6. '   ' → logprob: -7.249617099761963
    7. '[' → logprob: -7.874617099761963
    8. ',' → logprob: -7.999617099761963
    9. '):
' → logprob: -8.124617576599121
    10. ' and' → logprob: -8.249617576599121

Token 984: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04351736605167389
    2. ' 
' → logprob: -4.043517589569092
    3. '            
' → logprob: -5.168517589569092
    4. '<|end|>' → logprob: -5.168517589569092
    5. '	       ' → logprob: -5.668517589569092
    6. '       ' → logprob: -6.168517589569092
    7. '  
' → logprob: -6.418517589569092
    8. ' mid' → logprob: -6.668517589569092
    9. '        
' → logprob: -6.918517589569092
    10. '    
' → logprob: -7.668517589569092

Token 985: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.05815275013446808
    2. 'mid' (adapté à ' mid') → logprob: -2.933152675628662
    3. '           ' → logprob: -5.933152675628662
    4. ' midpoint' → logprob: -8.43315315246582
    5. ' middle' → logprob: -8.80815315246582
    6. '[mid' → logprob: -10.18315315246582
    7. ' 
' → logprob: -10.30815315246582
    8. '       ' → logprob: -10.30815315246582
    9. '   ' → logprob: -10.43315315246582
    10. '(mid' → logprob: -10.55815315246582

Token 986: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18370488286018372
    2. '=' → logprob: -2.1837048530578613
    3. '<|end|>' → logprob: -3.3087048530578613
    4. ' ' → logprob: -4.558704853057861
    5. '<|end|>' → logprob: -6.808704853057861
    6. '           ' → logprob: -7.058704853057861
    7. ' 
' → logprob: -7.558704853057861
    8. ' +=' → logprob: -7.808704853057861
    9. ',' → logprob: -7.808704853057861
    10. ')' → logprob: -7.933704853057861

Token 987: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.048640280961990356
    2. ' (' → logprob: -3.048640251159668
    3. 'left' → logprob: -10.423640251159668
    4. ' left' → logprob: -10.798640251159668
    5. '[left' → logprob: -12.923640251159668
    6. '(right' → logprob: -15.548640251159668
    7. ',left' → logprob: -16.923641204833984
    8. '   ' → logprob: -17.298641204833984
    9. '(lhs' → logprob: -17.673641204833984
    10. ' ' → logprob: -17.923641204833984

Token 988: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0007107630372047424
    2. ' left' → logprob: -7.250710964202881
    3. 'right' → logprob: -14.250710487365723
    4. '(left' → logprob: -15.500710487365723
    5. '	left' → logprob: -18.50071144104004
    6. '[left' → logprob: -19.50071144104004
    7. '   ' → logprob: -20.62571144104004
    8. 'lef' → logprob: -20.75071144104004
    9. ',left' → logprob: -20.87571144104004
    10. '_left' → logprob: -21.62571144104004

Token 989: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931474208831787
    2. ' +' → logprob: -0.6931474208831787
    3. '```' → logprob: -15.943147659301758
    4. '＋' → logprob: -16.568147659301758
    5. ' +
' → logprob: -16.818147659301758
    6. '+
' → logprob: -17.443147659301758
    7. ')' → logprob: -17.443147659301758
    8. ' ' → logprob: -17.693147659301758
    9. '+b' → logprob: -18.818147659301758
    10. '+k' → logprob: -18.943147659301758

Token 990: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0015023599844425917
    2. ' right' → logprob: -6.501502513885498
    3. '(right' → logprob: -18.251502990722656
    4. '	right' → logprob: -18.501502990722656
    5. '[right' → logprob: -20.126502990722656
    6. '.right' → logprob: -20.751502990722656
    7. ' ' → logprob: -21.001502990722656
    8. '   ' → logprob: -21.251502990722656
    9. ',right' → logprob: -22.126502990722656
    10. '_right' → logprob: -22.126502990722656

Token 991: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023330383002758026
    2. ')//' → logprob: -3.7733304500579834
    3. ' )' → logprob: -9.898330688476562
    4. ')>>' → logprob: -10.273330688476562
    5. ')
' → logprob: -17.648330688476562
    6. '）' → logprob: -18.523330688476562
    7. '//' → logprob: -18.773330688476562
    8. ')#' → logprob: -19.273330688476562
    9. '```' → logprob: -20.023330688476562
    10. ' //' → logprob: -20.273330688476562

Token 992: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -21.500001907348633
    4. '   ' → logprob: -22.375001907348633
    5. '=' → logprob: -23.375001907348633
    6. '۲' → logprob: -24.375001907348633
    7. '  ' → logprob: -25.000001907348633
    8. '２' → logprob: -25.250001907348633
    9. '
' → logprob: -25.625001907348633
    10. '0' → logprob: -25.750001907348633

Token 993: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 994: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0131834102794528
    2. '
' → logprob: -6.01318359375
    3. '<|end|>' → logprob: -6.01318359375
    4. '       ' → logprob: -6.13818359375
    5. 'if' → logprob: -6.26318359375
    6. '            
' → logprob: -6.76318359375
    7. 'token' → logprob: -6.88818359375
    8. ' if' → logprob: -7.63818359375
    9. 'tokens' → logprob: -7.63818359375
    10. '        
' → logprob: -8.63818359375

Token 995: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002522865077480674
    2. ' if' → logprob: -6.002522945404053
    3. '           ' → logprob: -10.127522468566895
    4. '       ' → logprob: -12.502522468566895
    5. 'If' → logprob: -13.752522468566895
    6. '```' → logprob: -14.127522468566895
    7. '
' → logprob: -14.252522468566895
    8. '   ' → logprob: -14.377522468566895
    9. '<|end|>' → logprob: -15.502522468566895
    10. '	if' → logprob: -15.502522468566895

Token 996: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.00033546582562848926
    2. ' can' → logprob: -8.000335693359375
    3. '(can' → logprob: -19.250335693359375
    4. '	can' → logprob: -19.875335693359375
    5. '_can' → logprob: -21.500335693359375
    6. '.can' → logprob: -22.250335693359375
    7. '
' → logprob: -25.625335693359375
    8. 'kan' → logprob: -26.000335693359375
    9. '   ' → logprob: -26.125335693359375
    10. ' ' → logprob: -26.375335693359375

Token 997: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -5.4192871175473556e-05
    2. 'finish' → logprob: -9.875054359436035
    3. '_fin' → logprob: -13.125054359436035
    4. '_' → logprob: -15.875054359436035
    5. '_finished' → logprob: -16.12505340576172
    6. '_continue' → logprob: -16.12505340576172
    7. '_finalize' → logprob: -16.62505340576172
    8. '_start' → logprob: -17.00005340576172
    9. 'can' → logprob: -17.12505340576172
    10. 'Finish' → logprob: -17.25005340576172

Token 998: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.038115158677101135
    2. '(' → logprob: -3.2881152629852295
    3. '(m' → logprob: -9.913115501403809
    4. '(op' → logprob: -12.038115501403809
    5. '[mid' → logprob: -12.288115501403809
    6. ' (' → logprob: -12.663115501403809
    7. '(len' → logprob: -13.038115501403809
    8. '(
' → logprob: -13.538115501403809
    9. '((' → logprob: -13.913115501403809
    10. '(nums' → logprob: -14.288115501403809

Token 999: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2166411478538066e-05
    2. '(' → logprob: -10.375052452087402
    3. ' ,' → logprob: -11.125052452087402
    4. '           ' → logprob: -12.500052452087402
    5. ',c' → logprob: -14.375052452087402
    6. ')' → logprob: -14.875052452087402
    7. ',
' → logprob: -14.875052452087402
    8. ',(' → logprob: -15.000052452087402
    9. '               ' → logprob: -15.500052452087402
    10. '```' → logprob: -16.250051498413086

Token 1000: ' customers' (ID: 6028)
  Prédit: 'customers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'customers' → logprob: -5.836499985889532e-05
    2. ' customers' → logprob: -9.7500581741333
    3. 'customer' → logprob: -18.000059127807617
    4. 'users' → logprob: -19.125059127807617
    5. ')' → logprob: -20.125059127807617
    6. 'clients' → logprob: -20.625059127807617
    7. '```' → logprob: -20.875059127807617
    8. '           ' → logprob: -21.000059127807617
    9. '
' → logprob: -21.625059127807617
    10. '   ' → logprob: -21.750059127807617

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ' ,' → logprob: -11.875014305114746
    3. ',current' → logprob: -13.625014305114746
    4. '           ' → logprob: -13.750014305114746
    5. ',c' → logprob: -14.000014305114746
    6. ',
' → logprob: -14.375014305114746
    7. ',user' → logprob: -14.875014305114746
    8. ',next' → logprob: -15.125014305114746
    9. ',[' → logprob: -15.125014305114746
    10. ',line' → logprob: -15.750014305114746

Token 1002: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00018006093159783632
    2. ' T' → logprob: -8.6251802444458
    3. ')' → logprob: -14.8751802444458
    4. '   ' → logprob: -17.000179290771484
    5. ' ' → logprob: -18.000179290771484
    6. '
' → logprob: -18.125179290771484
    7. '```' → logprob: -18.500179290771484
    8. '           ' → logprob: -18.875179290771484
    9. 'res' → logprob: -19.875179290771484
    10. ' ' → logprob: -20.125179290771484

Token 1003: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4742954671382904
    2. '):
' → logprob: -0.9742954969406128
    3. ')' → logprob: -8.599295616149902
    4. '):
' → logprob: -10.849295616149902
    5. '           ' → logprob: -12.099295616149902
    6. '):

' → logprob: -12.849295616149902
    7. ':' → logprob: -13.099295616149902
    8. ' ):' → logprob: -14.099295616149902
    9. ')==' → logprob: -14.224295616149902
    10. ':
' → logprob: -14.349295616149902

Token 1004: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019565662369132042
    2. '           ' → logprob: -5.019565582275391
    3. ':
' → logprob: -5.644565582275391
    4. '<|end|>' → logprob: -5.769565582275391
    5. '):
' → logprob: -6.519565582275391
    6. ':' → logprob: -7.019565582275391
    7. '                
' → logprob: -7.519565582275391
    8. '                   ' → logprob: -7.644565582275391
    9. ')' → logprob: -7.769565582275391
    10. ' left' → logprob: -8.01956558227539

Token 1005: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.12716978788375854
    2. ' res' → logprob: -2.1271698474884033
    3. '               ' → logprob: -9.377169609069824
    4. 'right' → logprob: -9.752169609069824
    5. '           ' → logprob: -10.252169609069824
    6. '                   ' → logprob: -10.377169609069824
    7. ' right' → logprob: -11.127169609069824
    8. '	res' → logprob: -11.627169609069824
    9. '
' → logprob: -12.127169609069824
    10. '```' → logprob: -14.627169609069824

Token 1006: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994777172803879
    2. '=' → logprob: -2.6949477195739746
    3. '<|end|>' → logprob: -12.194948196411133
    4. ')' → logprob: -14.194948196411133
    5. '           ' → logprob: -14.569948196411133
    6. ' ' → logprob: -14.819948196411133
    7. '   ' → logprob: -14.819948196411133
    8. '=int' → logprob: -14.819948196411133
    9. ' =
' → logprob: -15.194948196411133
    10. '	' → logprob: -15.194948196411133

Token 1007: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.048587825149297714
    2. ' mid' → logprob: -3.0485877990722656
    3. '[mid' → logprob: -15.173587799072266
    4. '(mid' → logprob: -15.298587799072266
    5. '
' → logprob: -19.548587799072266
    6. '_mid' → logprob: -20.173587799072266
    7. 'min' → logprob: -21.298587799072266
    8. '.mid' → logprob: -21.673587799072266
    9. ' midpoint' → logprob: -21.923587799072266
    10. '           ' → logprob: -23.048587799072266

Token 1008: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6672321557998657
    2. '
' → logprob: -1.0422321557998657
    3. '<|end|>' → logprob: -2.667232036590576
    4. '                
' → logprob: -3.917232036590576
    5. ' 
' → logprob: -4.417232036590576
    6. '            
' → logprob: -5.042232036590576
    7. '           ' → logprob: -5.167232036590576
    8. '  
' → logprob: -5.167232036590576
    9. '    
' → logprob: -5.292232036590576
    10. '        
' → logprob: -5.917232036590576

Token 1009: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28972506523132324
    2. '
' → logprob: -2.2897250652313232
    3. 'right' → logprob: -2.2897250652313232
    4. '                
' → logprob: -3.4147250652313232
    5. ' right' → logprob: -5.164725303649902
    6. ' 
' → logprob: -5.789725303649902
    7. '[right' → logprob: -6.164725303649902
    8. '            
' → logprob: -6.289725303649902
    9. '           ' → logprob: -7.039725303649902
    10. '<|end|>' → logprob: -8.039725303649902

Token 1010: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008616345934569836
    2. ' right' → logprob: -4.7586164474487305
    3. '               ' → logprob: -14.25861644744873
    4. '	right' → logprob: -14.63361644744873
    5. '.right' → logprob: -15.25861644744873
    6. '[right' → logprob: -15.38361644744873
    7. '
' → logprob: -15.50861644744873
    8. '_right' → logprob: -17.258615493774414
    9. ',right' → logprob: -17.883615493774414
    10. '                
' → logprob: -18.508615493774414

Token 1011: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. '=
' → logprob: -16.061967849731445
    4. '=end' → logprob: -17.186967849731445
    5. '```' → logprob: -17.811967849731445
    6. '＝' → logprob: -18.311967849731445
    7. ' =
' → logprob: -18.311967849731445
    8. ')' → logprob: -18.311967849731445
    9. '   ' → logprob: -18.561967849731445
    10. '=cut' → logprob: -19.061967849731445

Token 1012: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0031777136027812958
    2. ' mid' → logprob: -5.753177642822266
    3. '(mid' → logprob: -19.753177642822266
    4. '[mid' → logprob: -20.253177642822266
    5. '_mid' → logprob: -22.378177642822266
    6. 'm' → logprob: -23.003177642822266
    7. 'middle' → logprob: -23.128177642822266
    8. '
' → logprob: -24.253177642822266
    9. 'midd' → logprob: -24.378177642822266
    10. 'midt' → logprob: -25.128177642822266

Token 1013: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8452997803688049
    2. '<|end|>' → logprob: -1.4702997207641602
    3. ' =' → logprob: -2.34529972076416
    4. '[mid' → logprob: -2.97029972076416
    5. '-' → logprob: -2.97029972076416
    6. '=' → logprob: -3.22029972076416
    7. 'token' → logprob: -3.72029972076416
    8. ' 
' → logprob: -4.22029972076416
    9. '[token' → logprob: -4.34529972076416
    10. '```' → logprob: -4.59529972076416

Token 1014: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -21.625
    4. '   ' → logprob: -24.125
    5. '0' → logprob: -24.625
    6. '۱' → logprob: -25.125
    7. '
' → logprob: -25.625
    8. '=' → logprob: -25.875
    9. '[' → logprob: -25.875
    10. '`' → logprob: -26.0

Token 1015: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11305825412273407
    2. ' else' → logprob: -2.98805832862854
    3. 'else' → logprob: -3.48805832862854
    4. '
' → logprob: -4.613058090209961
    5. '<|end|>' → logprob: -4.738058090209961
    6. '       ' → logprob: -6.238058090209961
    7. '```' → logprob: -6.363058090209961
    8. '               ' → logprob: -6.613058090209961
    9. '            
' → logprob: -7.488058090209961
    10. ' 
' → logprob: -7.863058090209961

Token 1016: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7307040691375732
    2. '           ' → logprob: -0.8557040691375732
    3. 'left' → logprob: -3.1057040691375732
    4. '```' → logprob: -3.7307040691375732
    5. ' else' → logprob: -3.9807040691375732
    6. '[left' → logprob: -6.105704307556152
    7. ' left' → logprob: -6.355704307556152
    8. '
' → logprob: -7.480704307556152
    9. '       ' → logprob: -7.855704307556152
    10. '   ' → logprob: -7.980704307556152

Token 1017: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3944702744483948
    2. ' else' → logprob: -1.14447021484375
    3. '           ' → logprob: -5.39447021484375
    4. '       ' → logprob: -5.89447021484375
    5. 'left' → logprob: -8.76947021484375
    6. '	else' → logprob: -9.64447021484375
    7. ' left' → logprob: -11.14447021484375
    8. '		' → logprob: -11.26947021484375
    9. '   ' → logprob: -11.51947021484375
    10. '[left' → logprob: -12.51947021484375

Token 1018: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14798179268836975
    2. ':
' → logprob: -2.147981882095337
    3. ':' → logprob: -4.147981643676758
    4. '           ' → logprob: -5.897981643676758
    5. '<|end|>' → logprob: -7.022981643676758
    6. '                   ' → logprob: -8.147981643676758
    7. '                       ' → logprob: -9.147981643676758
    8. '):
' → logprob: -9.147981643676758
    9. '```' → logprob: -9.147981643676758
    10. '       ' → logprob: -9.147981643676758

Token 1019: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005745098926126957
    2. 'left' → logprob: -5.880744934082031
    3. ' left' → logprob: -6.005744934082031
    4. '```' → logprob: -8.880744934082031
    5. '   ' → logprob: -9.380744934082031
    6. '       ' → logprob: -9.630744934082031
    7. '           ' → logprob: -9.755744934082031
    8. '[left' → logprob: -10.255744934082031
    9. '	left' → logprob: -10.630744934082031
    10. '                   ' → logprob: -11.255744934082031

Token 1020: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.005240394733846188
    2. ' left' → logprob: -5.255240440368652
    3. '               ' → logprob: -12.755240440368652
    4. '	left' → logprob: -12.880240440368652
    5. '[left' → logprob: -14.505240440368652
    6. '.left' → logprob: -14.755240440368652
    7. ',left' → logprob: -16.380239486694336
    8. '_left' → logprob: -16.505239486694336
    9. ':left' → logprob: -16.505239486694336
    10. '(left' → logprob: -16.755239486694336

Token 1021: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -17.41022491455078
    4. '=
' → logprob: -17.91022491455078
    5. '=line' → logprob: -17.91022491455078
    6. '            ' → logprob: -19.16022491455078
    7. '=int' → logprob: -19.41022491455078
    8. '+=' → logprob: -19.41022491455078
    9. '<|end|>' → logprob: -19.41022491455078
    10. ' =
' → logprob: -19.41022491455078

Token 1022: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0002614550176076591
    2. ' mid' → logprob: -8.250261306762695
    3. '(mid' → logprob: -16.750261306762695
    4. '[mid' → logprob: -17.375261306762695
    5. '_mid' → logprob: -19.375261306762695
    6. '           ' → logprob: -19.875261306762695
    7. 'middle' → logprob: -20.000261306762695
    8. '   ' → logprob: -20.000261306762695
    9. '.mid' → logprob: -20.875261306762695
    10. 'm' → logprob: -21.750261306762695

Token 1023: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020544808357954025
    2. '+' → logprob: -4.27054500579834
    3. ' =' → logprob: -5.27054500579834
    4. ' +' → logprob: -6.77054500579834
    5. ' +=' → logprob: -10.27054500579834
    6. '+=' → logprob: -10.27054500579834
    7. '```' → logprob: -14.14554500579834
    8. ' ' → logprob: -14.39554500579834
    9. '=
' → logprob: -14.89554500579834
    10. '           ' → logprob: -15.27054500579834

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.000009536743164
    4. '=' → logprob: -17.250009536743164
    5. '+' → logprob: -17.625009536743164
    6. '   ' → logprob: -18.375009536743164
    7. '``' → logprob: -19.375009536743164
    8. '0' → logprob: -20.750009536743164
    9. '<|end|>' → logprob: -20.750009536743164
    10. '`' → logprob: -21.000009536743164

Token 1025: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1741400957107544
    2. '
' → logprob: -2.174139976501465
    3. '        
' → logprob: -3.924139976501465
    4. '    
' → logprob: -4.799139976501465
    5. '   ' → logprob: -5.299139976501465
    6. '\n' → logprob: -5.799139976501465
    7. '  
' → logprob: -5.924139976501465
    8. '           ' → logprob: -6.174139976501465
    9. '```' → logprob: -6.424139976501465
    10. '<|end|>' → logprob: -6.799139976501465

Token 1026: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8205284476280212
    2. '
' → logprob: -1.070528507232666
    3. 'print' → logprob: -2.570528507232666
    4. '       ' → logprob: -2.820528507232666
    5. '    
' → logprob: -3.695528507232666
    6. '```' → logprob: -3.945528507232666
    7. 'return' → logprob: -4.070528507232666
    8. '  
' → logprob: -5.445528507232666
    9. '\n' → logprob: -5.695528507232666
    10. '        
' → logprob: -5.945528507232666

Token 1027: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.009383211843669415
    2. '   ' → logprob: -5.134383201599121
    3. '```' → logprob: -6.384383201599121
    4. '       ' → logprob: -7.384383201599121
    5. ' print' → logprob: -7.384383201599121
    6. '
' → logprob: -7.634383201599121
    7. '    
' → logprob: -11.134383201599121
    8. '	print' → logprob: -11.634383201599121
    9. '``' → logprob: -12.009383201599121
    10. '        
' → logprob: -12.634383201599121

Token 1028: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -4.5491004129871726e-05
    2. 'res' → logprob: -10.000045776367188
    3. ' res' → logprob: -17.000045776367188
    4. '(' → logprob: -18.625045776367188
    5. ' (' → logprob: -20.375045776367188
    6. '(f' → logprob: -20.625045776367188
    7. '=res' → logprob: -20.750045776367188
    8. '$res' → logprob: -20.875045776367188
    9. '	res' → logprob: -21.250045776367188
    10. ',res' → logprob: -21.250045776367188

Token 1029: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011594036914175376
    2. '()' → logprob: -9.500116348266602
    3. '())' → logprob: -10.500116348266602
    4. ')
' → logprob: -11.750116348266602
    5. '(' → logprob: -13.625116348266602
    6. '`)' → logprob: -13.750116348266602
    7. '')' → logprob: -13.875116348266602
    8. ')`' → logprob: -14.125116348266602
    9. ' )' → logprob: -14.375116348266602
    10. '```' → logprob: -15.000116348266602

Token 1030: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009647950530052185
    2. '```' → logprob: -5.009647846221924
    3. '
' → logprob: -6.634647846221924
    4. '<|end|>' → logprob: -6.759647846221924
    5. ' if' → logprob: -7.884647846221924
    6. 'main' → logprob: -10.759648323059082
    7. '\n' → logprob: -11.384648323059082
    8. '``' → logprob: -11.759648323059082
    9. 'for' → logprob: -12.009648323059082
    10. '#' → logprob: -12.009648323059082

Token 1031: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2519945800304413
    2. ' __' → logprob: -1.5019946098327637
    3. '_name' → logprob: -10.001994132995605
    4. '___' → logprob: -11.501994132995605
    5. '_' → logprob: -12.126994132995605
    6. 'name' → logprob: -13.001994132995605
    7. '____' → logprob: -13.876994132995605
    8. '(__' → logprob: -14.501994132995605
    9. '.__' → logprob: -14.876994132995605
    10. '```' → logprob: -16.251995086669922

Token 1032: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.017387105152010918
    2. 'name' → logprob: -4.5173869132995605
    3. '.__' → logprob: -6.1423869132995605
    4. 'if' → logprob: -6.7673869132995605
    5. ' ==' → logprob: -7.0173869132995605
    6. '==' → logprob: -7.2673869132995605
    7. '```' → logprob: -7.5173869132995605
    8. ' __' → logprob: -8.642387390136719
    9. '_name' → logprob: -8.892387390136719
    10. '__.__' → logprob: -9.017387390136719

Token 1033: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005387356504797935
    2. '__.__' → logprob: -7.6255388259887695
    3. '==' → logprob: -10.62553882598877
    4. '__.' → logprob: -11.00053882598877
    5. '```' → logprob: -12.50053882598877
    6. '__["' → logprob: -13.37553882598877
    7. '___' → logprob: -14.12553882598877
    8. '__('' → logprob: -14.12553882598877
    9. '__[' → logprob: -14.50053882598877
    10. '__
' → logprob: -14.50053882598877

Token 1034: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3042992651462555
    2. '==' → logprob: -1.429299235343933
    3. ' ==' → logprob: -4.554299354553223
    4. '=="' → logprob: -4.679299354553223
    5. '=='' → logprob: -6.179299354553223
    6. '__.__' → logprob: -7.679299354553223
    7. '```' → logprob: -8.929299354553223
    8. '.__' → logprob: -8.929299354553223
    9. '[' → logprob: -9.679299354553223
    10. '['' → logprob: -9.804299354553223

Token 1035: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.474106103181839
    2. '"' → logprob: -0.9741060733795166
    3. '__' → logprob: -10.474105834960938
    4. ' "__' → logprob: -14.849105834960938
    5. ' '__' → logprob: -16.099105834960938
    6. ''post' → logprob: -16.474105834960938
    7. ''app' → logprob: -16.849105834960938
    8. ''user' → logprob: -17.099105834960938
    9. ''name' → logprob: -17.349105834960938
    10. '('__' → logprob: -17.349105834960938

Token 1036: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2294503152370453
    2. 'main' → logprob: -1.6044503450393677
    3. '"' → logprob: -5.729450225830078
    4. ''' → logprob: -7.229450225830078
    5. 'python' → logprob: -10.854450225830078
    6. '__":
' → logprob: -11.479450225830078
    7. '```' → logprob: -11.729450225830078
    8. '___' → logprob: -12.229450225830078
    9. 'name' → logprob: -13.229450225830078
    10. '__('' → logprob: -13.729450225830078

Token 1037: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01730087772011757
    2. '__' → logprob: -4.142301082611084
    3. '__':
' → logprob: -6.767301082611084
    4. '__["' → logprob: -9.892300605773926
    5. '__
' → logprob: -10.517300605773926
    6. '__.__' → logprob: -11.392300605773926
    7. '__
' → logprob: -11.892300605773926
    8. '__.' → logprob: -12.392300605773926
    9. '__()
' → logprob: -12.767300605773926
    10. '">
' → logprob: -12.767300605773926

Token 1038: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003204688662663102
    2. '   ' → logprob: -5.878204822540283
    3. ' main' → logprob: -8.753204345703125
    4. '	main' → logprob: -9.253204345703125
    5. '_main' → logprob: -10.003204345703125
    6. '__' → logprob: -10.378204345703125
    7. '(main' → logprob: -11.003204345703125
    8. '    
' → logprob: -11.503204345703125
    9. '```' → logprob: -11.753204345703125
    10. '<|end|>' → logprob: -11.753204345703125

Token 1039: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -20.0
    4. '   ' → logprob: -21.25
    5. '_main' → logprob: -23.25
    6. '.main' → logprob: -24.5
    7. '(main' → logprob: -25.0
    8. '```' → logprob: -26.25
    9. 'Main' → logprob: -26.375
    10. '
' → logprob: -27.75

Token 1040: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1038
Tokens correctement prédits (1ère position, stricte): 346
Tokens correctement prédits (1ère position, avec adaptation): 380
Tokens correctement prédits (top 10): 811
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 36.61%
Précision (top 10): 78.13%
================================================================================
