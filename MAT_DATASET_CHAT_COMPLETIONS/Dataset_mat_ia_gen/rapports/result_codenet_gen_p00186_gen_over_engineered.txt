================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import Optional, Tuple, Iterator

class MeatPurchaseProblem:
    def __init__(self, 
                 min_quantity: int,   # q1 in 100g units
                 budget: int,         # b
                 price_aizu: int,     # c1 per 100g
                 price_normal: int,   # c2 per 100g
                 limit_aizu: int      # q2 max per person (100g units)
                 ):
        self.min_quantity = min_quantity
        self.budget = budget
        self.price_aizu = price_aizu
        self.price_normal = price_normal
        self.limit_aizu = limit_aizu

class SolutionStrategy(ABC):
    @abstractmethod
    def solve(self, problem: MeatPurchaseProblem) -> Optional[Tuple[int,int]]:
        pass

class SophisticatedMeatPurchaseSolver(SolutionStrategy):
    def solve(self, problem: MeatPurchaseProblem) -> Optional[Tuple[int,int]]:
        # Constraints:
        # 1) total grams >= q1 (min_quantity)
        # 2) buy Aizu chicken at least 1 (mandatory)
        # 3) Aizu chicken <= q2 (limit_aizu)
        # 4) budget b is max for total purchase = c1 * aizu + c2 * normal
        # 5) maximize aizu chicken quantity (<= limit)
        # 6) maximize normal chicken quantity with leftover budget after buying aizu
        
        q1 = problem.min_quantity
        b = problem.budget
        c1 = problem.price_aizu
        c2 = problem.price_normal
        q2 = problem.limit_aizu
        
        # Try all feasible aizu chicken quantities from q2 down to 1, to maximize aizu chicken
        # For each, try to maximize normal chicken quantity given leftover budget and total must >= q1
        
        # We pre-optimize by scanning from maximal aizu down to minimal (1)
        
        best_answer = None
        
        # Since q1, q2 <= 1,000,000 and prices up to 1,000,000
        # brute force over q2 (buyable aizu max) is acceptable here (max 1 million, but input constraints say per problem max input 1,000,000, but test cases ~ 50 sets so ok)
        # We can do optimization: we can break early when total quantity is below q1 anyway.
        
        for aizu_qty in range(min(q2, b // c1), 0, -1):
            cost_aizu = aizu_qty * c1
            if cost_aizu > b:
                continue  # Can't afford this much aizu
            
            leftover_budget = b - cost_aizu
            
            # At least total quantity q1, so normal_qty >= q1 - aizu_qty (if positive)
            normal_min = max(0, q1 - aizu_qty)
            
            # Maximum normal quantity we can buy with leftover_budget:
            normal_max = leftover_budget // c2 if c2 > 0 else 0
            
            if normal_max < normal_min:
                # Can't fulfill quantity lower bound with this aizu_qty
                continue
            
            # Among all possible normal quantities from normal_min to normal_max, choose normal_max (maximize normal chicken)
            normal_qty = normal_max
            
            # We have aizu_qty, normal_qty as candidate
            # Verify total quantity >= q1 and budget ok (should be ok)
            total_qty = aizu_qty + normal_qty
            total_cost = aizu_qty * c1 + normal_qty * c2
            
            if total_qty >= q1 and total_cost <= b:
                best_answer = (aizu_qty, normal_qty)
                break  # Since scanning from max aizu down, first found is optimal
        
        return best_answer

class InputParser:
    def __init__(self, source: Iterator[str]):
        self.source = source
    
    def parse(self) -> Iterator[MeatPurchaseProblem]:
        for line in self.source:
            line = line.strip()
            if line == '0':
                break
            if not line:
                continue
            parts = line.split()
            if len(parts) != 5:
                continue
            q1, b, c1, c2, q2 = map(int, parts)
            yield MeatPurchaseProblem(q1, b, c1, c2, q2)

class OutputFormatter:
    @staticmethod
    def format(solution: Optional[Tuple[int,int]]) -> str:
        if solution is None:
            return "NA"
        return f"{solution[0]} {solution[1]}"

class MeatPurchaseApplication:
    def __init__(self, parser: InputParser, solver: SolutionStrategy, formatter: OutputFormatter):
        self.parser = parser
        self.solver = solver
        self.formatter = formatter
    
    def run(self):
        for problem in self.parser.parse():
            solution = self.solver.solve(problem)
            print(self.formatter.format(solution))

if __name__ == "__main__":
    import sys
    app = MeatPurchaseApplication(
        parser=InputParser(iter(sys.stdin.readline, '')),
        solver=SophisticatedMeatPurchaseSolver(),
        formatter=OutputFormatter()
    )
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1270483285188675
    2. 'ABC' → logprob: -2.1270482540130615
    3. 'AB' → logprob: -10.00204849243164
    4. ' A' → logprob: -10.37704849243164
    5. 'ABCDE' → logprob: -11.25204849243164
    6. 'abc' → logprob: -11.75204849243164
    7. 'abstract' → logprob: -12.25204849243164
    8. 'A' → logprob: -12.37704849243164
    9. ' ' → logprob: -12.75204849243164
    10. ' ' → logprob: -12.75204849243164

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28183513879776
    2. ',' → logprob: -1.4068350791931152
    3. 'import' → logprob: -8.156835556030273
    4. '```' → logprob: -9.406835556030273
    5. ' ,' → logprob: -9.906835556030273
    6. '' → logprob: -10.156835556030273
    7. ' ' → logprob: -10.281835556030273
    8. ',
' → logprob: -10.281835556030273
    9. ':' → logprob: -10.406835556030273
    10. ' .' → logprob: -10.781835556030273

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48189130425453186
    2. '```' → logprob: -1.4818912744522095
    3. 'class' → logprob: -2.356891393661499
    4. '

' → logprob: -4.23189115524292
    5. '<|end|>' → logprob: -4.35689115524292
    6. '' → logprob: -4.60689115524292
    7. '\n' → logprob: -4.85689115524292
    8. ' class' → logprob: -5.98189115524292
    9. '
' → logprob: -6.10689115524292
    10. '\' → logprob: -6.10689115524292

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4584696590900421
    2. '

' → logprob: -1.3334696292877197
    3. 'class' → logprob: -2.5834696292877197
    4. '```' → logprob: -4.333469867706299
    5. '' → logprob: -5.083469867706299
    6. '
' → logprob: -5.833469867706299
    7. ' 

' → logprob: -6.458469867706299
    8. ' class' → logprob: -6.708469867706299
    9. '


' → logprob: -6.958469867706299
    10. '``' → logprob: -7.583469867706299

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.11171971261501312
    2. ' collections' → logprob: -2.7367196083068848
    3. ' abc' → logprob: -4.236719608306885
    4. ' dat' → logprob: -4.361719608306885
    5. ' os' → logprob: -5.861719608306885
    6. ' sys' → logprob: -6.236719608306885
    7. ' math' → logprob: -6.486719608306885
    8. 'typing' → logprob: -6.736719608306885
    9. ' ' → logprob: -6.861719608306885
    10. ' datetime' → logprob: -6.986719608306885

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' Optional' (ID: 19351)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.7460431456565857
    2. 'Any' → logprob: -0.8710431456565857
    3. ' Union' → logprob: -3.6210432052612305
    4. ' List' → logprob: -3.6210432052612305
    5. ' Protocol' → logprob: -4.2460432052612305
    6. 'List' → logprob: -4.6210432052612305
    7. 'Union' → logprob: -4.7460432052612305
    8. ' Callable' → logprob: -4.8710432052612305
    9. 'Protocol' → logprob: -5.2460432052612305
    10. 'Callable' → logprob: -5.8710432052612305

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.48632997274398804
    2. '
' → logprob: -0.986329972743988
    3. 'class' → logprob: -4.736330032348633
    4. '```' → logprob: -6.611330032348633
    5. '


' → logprob: -6.736330032348633
    6. '\n' → logprob: -7.611330032348633
    7. '
' → logprob: -8.486330032348633
    8. '``' → logprob: -10.361330032348633
    9. ' 

' → logprob: -10.861330032348633
    10. '  
' → logprob: -10.986330032348633

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.8425820469856262
    2. 'Union' → logprob: -1.7175819873809814
    3. 'Any' → logprob: -2.4675819873809814
    4. ' List' → logprob: -2.4675819873809814
    5. ' Callable' → logprob: -2.7175819873809814
    6. ' Any' → logprob: -2.9675819873809814
    7. 'List' → logprob: -2.9675819873809814
    8. 'Callable' → logprob: -3.7175819873809814
    9. ' Protocol' → logprob: -4.7175822257995605
    10. 'Protocol' → logprob: -5.2175822257995605

Token 14: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7663174867630005
    2. '
' → logprob: -0.8913174867630005
    3. '

' → logprob: -2.141317367553711
    4. '\n' → logprob: -5.766317367553711
    5. '```' → logprob: -5.891317367553711
    6. '


' → logprob: -7.641317367553711
    7. ' class' → logprob: -7.891317367553711
    8. '
' → logprob: -8.516317367553711
    9. '<class' → logprob: -9.016317367553711
    10. '  
' → logprob: -9.391317367553711

Token 15: ' Iterator' (ID: 41994)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.2891089916229248
    2. 'Union' → logprob: -1.6641089916229248
    3. ' List' → logprob: -1.7891089916229248
    4. 'Any' → logprob: -2.164108991622925
    5. 'List' → logprob: -2.289108991622925
    6. ' Callable' → logprob: -2.789108991622925
    7. ' Any' → logprob: -3.039108991622925
    8. 'Callable' → logprob: -3.789108991622925
    9. 'Iterable' → logprob: -5.289109230041504
    10. ' Protocol' → logprob: -5.539109230041504

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6111008524894714
    2. 'class' → logprob: -1.2361009120941162
    3. '

' → logprob: -1.8611009120941162
    4. '```' → logprob: -4.986100673675537
    5. '\n' → logprob: -5.861100673675537
    6. ' class' → logprob: -7.611100673675537
    7. '
' → logprob: -8.361101150512695
    8. '


' → logprob: -8.361101150512695
    9. '``' → logprob: -8.486101150512695
    10. '<class' → logprob: -8.861101150512695

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00041994822095148265
    2. '
' → logprob: -8.250419616699219
    3. '```' → logprob: -9.250419616699219
    4. ' class' → logprob: -10.125419616699219
    5. '\n' → logprob: -11.625419616699219
    6. '<class' → logprob: -12.250419616699219
    7. '

' → logprob: -12.750419616699219
    8. '"class' → logprob: -13.500419616699219
    9. '``' → logprob: -14.000419616699219
    10. ' 
' → logprob: -14.250419616699219

Token 18: ' Meat' (ID: 89131)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02276444435119629
    2. ' Abstract' → logprob: -4.647764205932617
    3. ' Base' → logprob: -5.897764205932617
    4. ' Space' → logprob: -6.272764205932617
    5. ' My' → logprob: -6.522764205932617
    6. ' ABC' → logprob: -6.897764205932617
    7. ' Serializer' → logprob: -6.897764205932617
    8. ' Parser' → logprob: -7.272764205932617
    9. ' Basic' → logprob: -7.272764205932617
    10. ' Iterable' → logprob: -7.897764205932617

Token 19: 'Purchase' (ID: 38522)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002387302927672863
    2. ':' → logprob: -6.627387523651123
    3. '():' → logprob: -7.252387523651123
    4. 'Type' → logprob: -9.377387046813965
    5. '(Abstract' → logprob: -10.252387046813965
    6. 'Processor' → logprob: -10.502387046813965
    7. 'Product' → logprob: -10.752387046813965
    8. '):' → logprob: -10.877387046813965
    9. '(
' → logprob: -10.877387046813965
    10. '(S' → logprob: -11.252387046813965

Token 20: 'Problem' (ID: 36177)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0276644229888916
    2. ':' → logprob: -3.6526644229888916
    3. '(Abstract' → logprob: -6.6526641845703125
    4. '):' → logprob: -11.027664184570312
    5. '(
' → logprob: -11.152664184570312
    6. '():' → logprob: -11.402664184570312
    7. ' :' → logprob: -12.152664184570312
    8. ':
' → logprob: -12.402664184570312
    9. ')' → logprob: -12.902664184570312
    10. '(Base' → logprob: -13.152664184570312

Token 21: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12896259129047394
    2. ':' → logprob: -2.128962516784668
    3. '(Abstract' → logprob: -6.253962516784668
    4. '(:' → logprob: -10.503962516784668
    5. '():' → logprob: -10.503962516784668
    6. ' :' → logprob: -11.003962516784668
    7. '```' → logprob: -11.753962516784668
    8. '(Exception' → logprob: -12.378962516784668
    9. '(object' → logprob: -12.503962516784668
    10. '(Base' → logprob: -12.753962516784668

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5255667567253113
    2. '   ' → logprob: -1.025566816329956
    3. '(' → logprob: -4.275566577911377
    4. ' :' → logprob: -4.400566577911377
    5. '<|end|>' → logprob: -5.025566577911377
    6. '    ' → logprob: -5.275566577911377
    7. ' ' → logprob: -5.650566577911377
    8. '<|end|>' → logprob: -6.400566577911377
    9. '  ' → logprob: -6.650566577911377
    10. '(object' → logprob: -6.775566577911377

Token 23: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19745823740959167
    2. '<|end|>' → logprob: -2.697458267211914
    3. ':' → logprob: -2.822458267211914
    4. '```' → logprob: -4.322458267211914
    5. '    
' → logprob: -4.822458267211914
    6. '<|end|>' → logprob: -5.072458267211914
    7. 'class' → logprob: -5.072458267211914
    8. 'def' (adapté à ' def') → logprob: -5.447458267211914
    9. ' ' → logprob: -5.822458267211914
    10. '    ' → logprob: -5.947458267211914

Token 24: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.0994484424591064
    2. 't' → logprob: -1.7244484424591064
    3. '```' → logprob: -2.2244484424591064
    4. 'e' → logprob: -2.3494484424591064
    5. 'i' → logprob: -3.3494484424591064
    6. '__' → logprob: -3.3494484424591064
    7. '_' → logprob: -3.3494484424591064
    8. '_init' → logprob: -3.7244484424591064
    9. 'itialize' → logprob: -3.8494484424591064
    10. 'init' → logprob: -3.8494484424591064

Token 25: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.5
    3. 'int' → logprob: -18.5
    4. ' init' → logprob: -19.0
    5. '_init' → logprob: -19.25
    6. 'inite' → logprob: -20.0
    7. 'new' → logprob: -20.25
    8. 'in' → logprob: -20.25
    9. 'call' → logprob: -20.5
    10. 'innit' → logprob: -21.0

Token 26: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.032260194420814514
    2. '__' → logprob: -4.032260417938232
    3. '__(
' → logprob: -4.907260417938232
    4. '(' → logprob: -5.532260417938232
    5. '(self' → logprob: -6.532260417938232
    6. ' (' → logprob: -8.157259941101074
    7. '__(*' → logprob: -8.407259941101074
    8. '<|end|>' → logprob: -8.407259941101074
    9. '__((' → logprob: -9.157259941101074
    10. '<|end|>' → logprob: -9.532259941101074

Token 27: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008695407770574093
    2. ' self' → logprob: -4.758695602416992
    3. ')' → logprob: -9.883695602416992
    4. '       ' → logprob: -11.758695602416992
    5. '   ' → logprob: -11.883695602416992
    6. '_self' → logprob: -12.133695602416992
    7. ',' → logprob: -13.258695602416992
    8. ' ' → logprob: -13.508695602416992
    9. '	self' → logprob: -13.758695602416992
    10. '0' → logprob: -13.883695602416992

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056224897503852844
    2. ' ,' → logprob: -3.056224822998047
    3. 'self' → logprob: -5.431224822998047
    4. ' self' → logprob: -6.056224822998047
    5. ')' → logprob: -8.181224822998047
    6. ' )' → logprob: -8.306224822998047
    7. ' ' → logprob: -9.556224822998047
    8. '<|end|>' → logprob: -9.681224822998047
    9. '_self' → logprob: -9.806224822998047
    10. ',self' → logprob: -10.806224822998047

Token 29: ' 
' (ID: 793)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2883818447589874
    2. 'self' → logprob: -1.413381814956665
    3. '       ' → logprob: -5.038382053375244
    4. '   ' → logprob: -9.038381576538086
    5. ' quantity' → logprob: -9.663381576538086
    6. ' price' → logprob: -9.788381576538086
    7. ')' → logprob: -9.913381576538086
    8. ' max' → logprob: -9.913381576538086
    9. '    ' → logprob: -10.038381576538086
    10. 'quantity' → logprob: -10.413381576538086

Token 30: '                ' (ID: 408)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.48831674456596375
    2. 'self' → logprob: -2.363316774368286
    3. ' max' → logprob: -2.488316774368286
    4. ' budget' → logprob: -3.113316774368286
    5. ' quantity' → logprob: -3.738316774368286
    6. ' meat' → logprob: -3.863316774368286
    7. ' weight' → logprob: -4.238316535949707
    8. ' price' → logprob: -4.363316535949707
    9. ' min' → logprob: -4.488316535949707
    10. '   ' → logprob: -4.988316535949707

Token 31: ' min' (ID: 1349)
  Prédit: ' budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' budget' → logprob: -1.4676446914672852
    2. ' max' → logprob: -1.8426446914672852
    3. 'max' → logprob: -1.9676446914672852
    4. 'budget' → logprob: -2.467644691467285
    5. 'min' (adapté à ' min') → logprob: -2.842644691467285
    6. 'self' → logprob: -2.967644691467285
    7. ' min' → logprob: -3.467644691467285
    8. 'me' → logprob: -3.467644691467285
    9. ' meat' → logprob: -3.592644691467285
    10. ' self' → logprob: -3.967644691467285

Token 32: '_quantity' (ID: 73348)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.8073307871818542
    2. '_purchase' → logprob: -1.432330846786499
    3. '_price' → logprob: -1.932330846786499
    4. '_' → logprob: -3.307330846786499
    5. '_quantity' → logprob: -3.432330846786499
    6. '_length' → logprob: -3.807330846786499
    7. '_amount' → logprob: -3.932330846786499
    8. '_me' → logprob: -4.05733060836792
    9. '_qty' → logprob: -4.93233060836792
    10. '_size' → logprob: -4.93233060836792

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026641277596354485
    2. '=' → logprob: -3.776641368865967
    3. ':int' → logprob: -6.026641368865967
    4. ',' → logprob: -7.776641368865967
    5. ')' → logprob: -8.026640892028809
    6. '<|end|>' → logprob: -9.776640892028809
    7. ' =' → logprob: -10.026640892028809
    8. '=int' → logprob: -10.151640892028809
    9. ' :' → logprob: -10.151640892028809
    10. '<|end|>' → logprob: -11.401640892028809

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05802677571773529
    2. 'int' → logprob: -2.9330267906188965
    3. ' float' → logprob: -5.8080267906188965
    4. 'float' → logprob: -9.808026313781738
    5. ' ' → logprob: -9.933026313781738
    6. ' Optional' → logprob: -10.808026313781738
    7. ':int' → logprob: -12.558026313781738
    8. '[int' → logprob: -12.933026313781738
    9. ')' → logprob: -13.558026313781738
    10. '=int' → logprob: -13.683026313781738

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036917629186064005
    2. ':' → logprob: -6.503691673278809
    3. ')' → logprob: -6.753691673278809
    4. '):' → logprob: -7.628691673278809
    5. '=' → logprob: -8.003691673278809
    6. ',
' → logprob: -8.753691673278809
    7. ' ,' → logprob: -10.628691673278809
    8. ' ' → logprob: -13.003691673278809
    9. '<|end|>' → logprob: -13.003691673278809
    10. '   ' → logprob: -13.128691673278809

Token 36: '  ' (ID: 256)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6613373756408691
    2. '                ' → logprob: -1.1613373756408691
    3. '                 ' → logprob: -2.411337375640869
    4. 'max' → logprob: -2.536337375640869
    5. '                  ' → logprob: -7.661337375640869
    6. ' min' → logprob: -8.161336898803711
    7. ' maximum' → logprob: -8.161336898803711
    8. ' available' → logprob: -9.411336898803711
    9. 'unit' → logprob: -9.411336898803711
    10. '               ' → logprob: -9.661336898803711

Token 37: ' #' (ID: 1069)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.4871509373188019
    2. '                 ' → logprob: -1.2371509075164795
    3. ',' → logprob: -3.4871509075164795
    4. ')' → logprob: -3.8621509075164795
    5. 'quantity' → logprob: -4.362151145935059
    6. 'max' → logprob: -5.237151145935059
    7. '                  ' → logprob: -5.487151145935059
    8. '                     ' → logprob: -5.612151145935059
    9. '                    ' → logprob: -5.612151145935059
    10. ' quantity' → logprob: -6.362151145935059

Token 38: ' q' (ID: 2335)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4796799421310425
    2. ' int' → logprob: -1.3546799421310425
    3. 'minimum' → logprob: -3.479680061340332
    4. ' minimum' → logprob: -3.979680061340332
    5. ')' → logprob: -4.479680061340332
    6. 'Optional' → logprob: -4.729680061340332
    7. 'min' → logprob: -4.854680061340332
    8. 'quantity' → logprob: -5.104680061340332
    9. ' ' → logprob: -5.229680061340332
    10. 'The' → logprob: -5.604680061340332

Token 39: '1' (ID: 16)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.026480501517653465
    2. 'uant' → logprob: -4.026480674743652
    3. 'ual' → logprob: -5.026480674743652
    4. 'uity' → logprob: -7.901480674743652
    5. 'ue' → logprob: -8.026480674743652
    6. 'ty' → logprob: -8.151480674743652
    7. ':' → logprob: -9.151480674743652
    8. ',' → logprob: -9.276480674743652
    9. '   ' → logprob: -9.776480674743652
    10. 'antity' → logprob: -10.026480674743652

Token 40: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1476675420999527
    2. ')' → logprob: -2.647667646408081
    3. '=' → logprob: -3.647667646408081
    4. '):' → logprob: -3.647667646408081
    5. ':' → logprob: -5.022667407989502
    6. ' ,' → logprob: -5.647667407989502
    7. ' ' → logprob: -6.647667407989502
    8. '<|end|>' → logprob: -7.397667407989502
    9. ' )' → logprob: -7.772667407989502
    10. ',
' → logprob: -8.02266788482666

Token 41: ' ' (ID: 220)
  Prédit: ' kilograms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' kilograms' → logprob: -0.6106531023979187
    2. ' grams' → logprob: -1.6106531620025635
    3. ' kg' → logprob: -3.1106531620025635
    4. 'the' → logprob: -3.1106531620025635
    5. ' meat' → logprob: -3.3606531620025635
    6. 'kil' → logprob: -3.4856531620025635
    7. 'purchase' → logprob: -4.360652923583984
    8. ' the' → logprob: -4.360652923583984
    9. 'kg' → logprob: -5.110652923583984
    10. ' problem' → logprob: -5.110652923583984

Token 42: '100' (ID: 1353)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.5916935205459595
    2. 'the' → logprob: -1.8416935205459595
    3. 'comments' → logprob: -2.34169340133667
    4. 'code' → logprob: -2.84169340133667
    5. 'comment' → logprob: -3.09169340133667
    6. 'doc' → logprob: -4.34169340133667
    7. 'Chinese' → logprob: -4.46669340133667
    8. 'description' → logprob: -4.84169340133667
    9. 'context' → logprob: -4.96669340133667
    10. 'purchase' → logprob: -5.09169340133667

Token 43: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0499651432037354
    2. ')' → logprob: -1.4249651432037354
    3. 'grams' → logprob: -1.7999651432037354
    4. '0' → logprob: -2.4249651432037354
    5. ' grams' → logprob: -2.9249651432037354
    6. 'gram' → logprob: -3.5499651432037354
    7. 's' → logprob: -3.6749651432037354
    8. '   ' → logprob: -4.299964904785156
    9. ',' → logprob: -5.049964904785156
    10. '_' → logprob: -5.174964904785156

Token 44: ' units' (ID: 13306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0427212119102478
    2. '<|end|>' → logprob: -3.6677212715148926
    3. ',
' → logprob: -5.042721271514893
    4. '):' → logprob: -5.292721271514893
    5. ')' → logprob: -5.542721271514893
    6. '<|end|>' → logprob: -8.167720794677734
    7. '):
' → logprob: -8.542720794677734
    8. '),' → logprob: -9.167720794677734
    9. ' ,' → logprob: -9.292720794677734
    10. ' ' → logprob: -10.292720794677734

Token 45: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055048152804374695
    2. '):' → logprob: -3.0550482273101807
    3. '                ' → logprob: -5.555047988891602
    4. ')' → logprob: -6.805047988891602
    5. ',
' → logprob: -7.055047988891602
    6. '   ' → logprob: -9.180047988891602
    7. ' ,' → logprob: -9.305047988891602
    8. ':' → logprob: -9.555047988891602
    9. '):
' → logprob: -9.930047988891602
    10. '               ' → logprob: -10.055047988891602

Token 46: '                ' (ID: 408)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4264380931854248
    2. '                ' → logprob: -1.3014380931854248
    3. ')' → logprob: -3.426438093185425
    4. '   ' → logprob: -4.301438331604004
    5. '                 ' → logprob: -5.051438331604004
    6. '):' → logprob: -5.301438331604004
    7. 'max' → logprob: -5.551438331604004
    8. ' ,' → logprob: -6.051438331604004
    9. ' ' → logprob: -6.176438331604004
    10. 'quantity' → logprob: -6.551438331604004

Token 47: ' budget' (ID: 9946)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.380014032125473
    2. 'max' → logprob: -1.2550140619277954
    3. '                ' → logprob: -4.755013942718506
    4. ' min' → logprob: -5.380013942718506
    5. ' q' → logprob: -5.755013942718506
    6. '                 ' → logprob: -5.880013942718506
    7. 'min' → logprob: -6.505013942718506
    8. ' meat' → logprob: -6.505013942718506
    9. '                  ' → logprob: -6.630013942718506
    10. 'q' → logprob: -7.442513942718506

Token 48: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.580929347255733e-05
    2. ' :' → logprob: -11.500016212463379
    3. ':int' → logprob: -12.250016212463379
    4. ')' → logprob: -15.750016212463379
    5. '):' → logprob: -15.750016212463379
    6. '_:' → logprob: -16.375015258789062
    7. ',' → logprob: -16.625015258789062
    8. '=' → logprob: -17.000015258789062
    9. ' ' → logprob: -17.125015258789062
    10. '<|end|>' → logprob: -17.125015258789062

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.23156729340553284
    2. 'int' → logprob: -1.6065672636032104
    3. ' float' → logprob: -5.2315673828125
    4. 'float' → logprob: -7.7315673828125
    5. ' ' → logprob: -8.3565673828125
    6. ' Optional' → logprob: -9.8565673828125
    7. 'Optional' → logprob: -10.4815673828125
    8. '   ' → logprob: -11.9815673828125
    9. ':int' → logprob: -12.1065673828125
    10. '    ' → logprob: -12.3565673828125

Token 50: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3169855773448944
    2. ',' → logprob: -1.3169856071472168
    3. '):
' → logprob: -6.566985607147217
    4. ':' → logprob: -7.066985607147217
    5. ',
' → logprob: -7.316985607147217
    6. ')' → logprob: -7.691985607147217
    7. '<|end|>' → logprob: -9.066985130310059
    8. '   ' → logprob: -9.816985130310059
    9. '<|end|>' → logprob: -10.066985130310059
    10. ' ):' → logprob: -10.566985130310059

Token 51: '        ' (ID: 269)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.1253988891839981
    2. '                 ' → logprob: -2.250398874282837
    3. ')' → logprob: -5.500399112701416
    4. '               ' → logprob: -6.625399112701416
    5. '                  ' → logprob: -6.875399112701416
    6. '             ' → logprob: -7.250399112701416
    7. ' ' → logprob: -7.375399112701416
    8. '                     ' → logprob: -7.500399112701416
    9. '                    ' → logprob: -7.625399112701416
    10. '<|end|>' → logprob: -7.625399112701416

Token 52: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.99857497215271
    2. ',' → logprob: -1.12357497215271
    3. '):' → logprob: -1.87357497215271
    4. '   ' → logprob: -3.12357497215271
    5. '         ' → logprob: -4.498575210571289
    6. ' ,' → logprob: -4.498575210571289
    7. '                ' → logprob: -4.748575210571289
    8. '<|end|>' → logprob: -4.748575210571289
    9. '          ' → logprob: -4.748575210571289
    10. '  ' → logprob: -4.873575210571289

Token 53: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3687741756439209
    2. ' in' → logprob: -1.868774175643921
    3. 'in' → logprob: -3.618774175643921
    4. ' max' → logprob: -3.743774175643921
    5. '   ' → logprob: -3.993774175643921
    6. '  ' → logprob: -4.6187744140625
    7. 'max' → logprob: -4.6187744140625
    8. ' price' → logprob: -4.7437744140625
    9. '    ' → logprob: -4.8687744140625
    10. 'int' → logprob: -5.3687744140625

Token 54: '
' (ID: 198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4372749626636505
    2. ')' → logprob: -1.3122749328613281
    3. '<|end|>' → logprob: -3.312274932861328
    4. 'in' → logprob: -4.437274932861328
    5. ',' → logprob: -4.437274932861328
    6. ':' → logprob: -4.687274932861328
    7. '<|end|>' → logprob: -5.687274932861328
    8. '):' → logprob: -5.687274932861328
    9. '_quantity' → logprob: -6.312274932861328
    10. '_budget' → logprob: -6.437274932861328

Token 55: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.05723060294985771
    2. '                 ' → logprob: -3.0572307109832764
    3. ')' → logprob: -5.432230472564697
    4. ',' → logprob: -6.682230472564697
    5. '               ' → logprob: -7.182230472564697
    6. '   ' → logprob: -7.807230472564697
    7. '<|end|>' → logprob: -7.932230472564697
    8. '                  ' → logprob: -8.682230949401855
    9. ' ' → logprob: -8.682230949401855
    10. '             ' → logprob: -9.182230949401855

Token 56: ' price' (ID: 3911)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.8103818893432617
    2. 'max' → logprob: -1.9353818893432617
    3. 'price' (adapté à ' price') → logprob: -2.1853818893432617
    4. ' price' → logprob: -2.3103818893432617
    5. 'me' → logprob: -2.4353818893432617
    6. ' meat' → logprob: -2.9353818893432617
    7. '                ' → logprob: -3.0603818893432617
    8. ' min' → logprob: -3.5603818893432617
    9. ' prices' → logprob: -3.5603818893432617
    10. 'prices' → logprob: -3.6853818893432617

Token 57: '_a' (ID: 10852)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.518703818321228
    2. '1' → logprob: -2.0187039375305176
    3. '_per' → logprob: -2.0187039375305176
    4. ':' → logprob: -2.3937039375305176
    5. '_a' → logprob: -3.7687039375305176
    6. '_' → logprob: -4.518703937530518
    7. 'A' → logprob: -6.518703937530518
    8. '_p' → logprob: -6.643703937530518
    9. '_s' → logprob: -6.768703937530518
    10. '_list' → logprob: -6.893703937530518

Token 58: 'izu' (ID: 75080)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028331294655799866
    2. '1' → logprob: -4.028331279754639
    3. '_a' → logprob: -5.028331279754639
    4. '_per' → logprob: -6.028331279754639
    5. 'a' → logprob: -7.278331279754639
    6. ':int' → logprob: -9.278331756591797
    7. 's' → logprob: -9.278331756591797
    8. '_' → logprob: -9.653331756591797
    9. 'per' → logprob: -9.903331756591797
    10. '_:' → logprob: -10.403331756591797

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001213806332089007
    2. '1' → logprob: -8.251214027404785
    3. '_a' → logprob: -8.501214027404785
    4. '_:' → logprob: -8.501214027404785
    5. '_price' → logprob: -9.626214027404785
    6. 'a' → logprob: -9.751214027404785
    7. ' :' → logprob: -9.751214027404785
    8. '_' → logprob: -9.876214027404785
    9. '_per' → logprob: -10.251214027404785
    10. '_t' → logprob: -10.751214027404785

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5241904854774475
    2. 'int' → logprob: -0.8991904854774475
    3. ' float' → logprob: -8.149190902709961
    4. 'Optional' → logprob: -8.899190902709961
    5. ')' → logprob: -9.024190902709961
    6. '[int' → logprob: -9.149190902709961
    7. ' Optional' → logprob: -9.149190902709961
    8. 'float' → logprob: -9.274190902709961
    9. ':int' → logprob: -9.399190902709961
    10. ' ' → logprob: -9.899190902709961

Token 61: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27225643396377563
    2. '):' → logprob: -1.6472563743591309
    3. ',' → logprob: -3.147256374359131
    4. ':int' → logprob: -7.022256374359131
    5. ')' → logprob: -7.147256374359131
    6. '):
' → logprob: -7.272256374359131
    7. ',
' → logprob: -8.647256851196289
    8. ' ):' → logprob: -10.272256851196289
    9. '<|end|>' → logprob: -10.522256851196289
    10. '   ' → logprob: -10.772256851196289

Token 62: '    ' (ID: 257)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.5052040219306946
    2. ')' → logprob: -1.8802039623260498
    3. '                 ' → logprob: -2.63020396232605
    4. ' ' → logprob: -3.75520396232605
    5. '         ' → logprob: -4.130204200744629
    6. ' #' → logprob: -4.380204200744629
    7. '):' → logprob: -4.380204200744629
    8. 'price' → logprob: -4.505204200744629
    9. 'int' → logprob: -4.755204200744629
    10. '               ' → logprob: -4.880204200744629

Token 63: ' #' (ID: 1069)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36501362919807434
    2. ')' → logprob: -1.990013599395752
    3. ',' → logprob: -2.740013599395752
    4. '                ' → logprob: -3.365013599395752
    5. 'int' → logprob: -4.615013599395752
    6. '                 ' → logprob: -4.865013599395752
    7. '         ' → logprob: -5.240013599395752
    8. '):
' → logprob: -5.240013599395752
    9. ' ' → logprob: -5.490013599395752
    10. '   ' → logprob: -5.490013599395752

Token 64: ' c' (ID: 274)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27673766016960144
    2. ' p' → logprob: -2.276737689971924
    3. 'pa' → logprob: -2.526737689971924
    4. 'a' → logprob: -3.276737689971924
    5. 'price' → logprob: -4.901737689971924
    6. ' pa' → logprob: -5.151737689971924
    7. ' price' → logprob: -5.901737689971924
    8. ' a' → logprob: -6.151737689971924
    9. 'c' → logprob: -8.089237213134766
    10. 'w' → logprob: -8.151737213134766

Token 65: '1' (ID: 16)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.08882013708353043
    2. ')' → logprob: -3.213820219039917
    3. 'a' → logprob: -3.213820219039917
    4. '1' → logprob: -6.588819980621338
    5. ',' → logprob: -6.963819980621338
    6. 'A' → logprob: -7.213819980621338
    7. '_' → logprob: -7.588819980621338
    8. '<|end|>' → logprob: -8.713820457458496
    9. '),' → logprob: -8.838820457458496
    10. '<|end|>' → logprob: -9.338820457458496

Token 66: ' per' (ID: 777)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3468203544616699
    2. ',' → logprob: -1.47182035446167
    3. ')' → logprob: -2.84682035446167
    4. '):
' → logprob: -5.72182035446167
    5. ' ):' → logprob: -7.97182035446167
    6. ',
' → logprob: -8.221820831298828
    7. '):
' → logprob: -8.596820831298828
    8. '):

' → logprob: -8.596820831298828
    9. '}' → logprob: -8.846820831298828
    10. ' ' → logprob: -8.971820831298828

Token 67: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.17894960939884186
    2. ' ' → logprob: -1.9289495944976807
    3. ' unit' → logprob: -4.42894983291626
    4. 'unit' → logprob: -5.55394983291626
    5. '1' → logprob: -6.67894983291626
    6. '10' → logprob: -8.428949356079102
    7. '
' → logprob: -8.616449356079102
    8. '_' → logprob: -8.678949356079102
    9. '-unit' → logprob: -9.303949356079102
    10. '```' → logprob: -9.303949356079102

Token 68: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.05298255756497383
    2. 'unit' → logprob: -3.0529825687408447
    3. '```' → logprob: -6.927982330322266
    4. 'q' → logprob: -7.052982330322266
    5. '1' → logprob: -7.052982330322266
    6. 'kg' → logprob: -7.552982330322266
    7. ' unit' → logprob: -8.427982330322266
    8. '0' → logprob: -9.302982330322266
    9. 'hund' → logprob: -9.302982330322266
    10. '
' → logprob: -9.365482330322266

Token 69: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -8.518582762917504e-05
    2. ')' → logprob: -9.87508487701416
    3. '):
' → logprob: -11.12508487701416
    4. 'г' → logprob: -12.12508487701416
    5. '),' → logprob: -12.75008487701416
    6. '<|end|>' → logprob: -12.75008487701416
    7. ',' → logprob: -13.00008487701416
    8. '):' → logprob: -14.00008487701416
    9. '
' → logprob: -14.25008487701416
    10. '   ' → logprob: -14.25008487701416

Token 70: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5263152718544006
    2. '):' → logprob: -1.0263152122497559
    3. '):
' → logprob: -3.526315212249756
    4. ')' → logprob: -4.776315212249756
    5. '                ' → logprob: -4.901315212249756
    6. ',
' → logprob: -5.526315212249756
    7. '<|end|>' → logprob: -8.026315689086914
    8. '   ' → logprob: -8.151315689086914
    9. '):

' → logprob: -8.526315689086914
    10. '),' → logprob: -8.776315689086914

Token 71: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.008602278307080269
    2. '                 ' → logprob: -5.508602142333984
    3. '   ' → logprob: -5.758602142333984
    4. '               ' → logprob: -8.008602142333984
    5. 'price' → logprob: -8.383602142333984
    6. ' price' → logprob: -8.633602142333984
    7. '                    ' → logprob: -9.133602142333984
    8. '):' → logprob: -9.258602142333984
    9. '    ' → logprob: -9.258602142333984
    10. '                  ' → logprob: -9.883602142333984

Token 72: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' (adapté à ' price') → logprob: -0.030722925439476967
    2. ' price' → logprob: -3.5307228565216064
    3. '    ' → logprob: -8.030722618103027
    4. '                ' → logprob: -8.405722618103027
    5. '   ' → logprob: -9.030722618103027
    6. 'c' → logprob: -9.655722618103027
    7. '                 ' → logprob: -10.155722618103027
    8. '	price' → logprob: -10.405722618103027
    9. 'cost' → logprob: -10.780722618103027
    10. ' ' → logprob: -11.093222618103027

Token 73: '_normal' (ID: 30994)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8912221193313599
    2. '_a' → logprob: -2.3912220001220703
    3. '_y' → logprob: -2.7662220001220703
    4. '_j' → logprob: -2.7662220001220703
    5. '_h' → logprob: -2.8912220001220703
    6. '_k' → logprob: -2.8912220001220703
    7. '_n' → logprob: -3.0162220001220703
    8. '_t' → logprob: -3.0162220001220703
    9. '_f' → logprob: -3.5162220001220703
    10. '_tok' → logprob: -3.7662220001220703

Token 74: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025329755153506994
    2. 'a' → logprob: -7.002532958984375
    3. '_a' → logprob: -7.877532958984375
    4. ':int' → logprob: -8.127532958984375
    5. ')' → logprob: -8.377532958984375
    6. '_me' → logprob: -9.002532958984375
    7. '_' → logprob: -9.627532958984375
    8. ' :' → logprob: -9.752532958984375
    9. '   ' → logprob: -9.877532958984375
    10. '=' → logprob: -10.002532958984375

Token 75: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2523001432418823
    2. ' int' → logprob: -1.5023001432418823
    3. '=int' → logprob: -9.002300262451172
    4. '[int' → logprob: -9.127300262451172
    5. ':int' → logprob: -9.877300262451172
    6. '<|end|>' → logprob: -10.502300262451172
    7. '	int' → logprob: -11.127300262451172
    8. ']int' → logprob: -11.252300262451172
    9. ' ' → logprob: -11.627300262451172
    10. '<int' → logprob: -12.377300262451172

Token 76: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22993899881839752
    2. ',' → logprob: -1.6049389839172363
    3. ':' → logprob: -6.354938983917236
    4. '   ' → logprob: -6.729938983917236
    5. ')' → logprob: -7.979938983917236
    6. ' ):' → logprob: -8.604939460754395
    7. '#' → logprob: -8.854939460754395
    8. ',int' → logprob: -8.979939460754395
    9. ' ' → logprob: -9.479939460754395
    10. '          ' → logprob: -9.479939460754395

Token 77: '  ' (ID: 256)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.7390472292900085
    2. '   ' → logprob: -2.2390472888946533
    3. ' #' → logprob: -2.7390472888946533
    4. '    ' → logprob: -2.7390472888946533
    5. 'int' → logprob: -2.7390472888946533
    6. ' ' → logprob: -3.3640472888946533
    7. '                 ' → logprob: -3.4890472888946533
    8. ' int' → logprob: -3.9890472888946533
    9. ')' → logprob: -3.9890472888946533
    10. '#' → logprob: -4.114047050476074

Token 78: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.6220946311950684
    2. '#' (adapté à ' #') → logprob: -0.9970946311950684
    3. ' ' → logprob: -3.2470946311950684
    4. '   ' → logprob: -4.122094631195068
    5. '    ' → logprob: -5.122094631195068
    6. '         ' → logprob: -5.497094631195068
    7. ')' → logprob: -5.497094631195068
    8. 'c' → logprob: -5.622094631195068
    9. 'int' → logprob: -5.747094631195068
    10. '  ' → logprob: -5.747094631195068

Token 79: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2525882422924042
    2. 'c' → logprob: -1.5025882720947266
    3. ' ' → logprob: -8.127588272094727
    4. '   ' → logprob: -9.127588272094727
    5. '    ' → logprob: -10.252588272094727
    6. ' price' → logprob: -10.252588272094727
    7. '  ' → logprob: -10.627588272094727
    8. ')' → logprob: -10.690088272094727
    9. 'price' → logprob: -10.752588272094727
    10. ' ' → logprob: -11.002588272094727

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003656841581687331
    2. '1' → logprob: -7.00365686416626
    3. 'a' → logprob: -7.25365686416626
    4. '_normal' → logprob: -7.37865686416626
    5. ')' → logprob: -7.62865686416626
    6. ' ' → logprob: -8.128656387329102
    7. '_' → logprob: -9.003656387329102
    8. 'normal' → logprob: -9.128656387329102
    9. '  ' → logprob: -9.753656387329102
    10. ',' → logprob: -10.128656387329102

Token 81: ' per' (ID: 777)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10465158522129059
    2. ' per' → logprob: -3.479651689529419
    3. '   ' → logprob: -3.729651689529419
    4. ' ' → logprob: -3.979651689529419
    5. ' ):' → logprob: -4.85465145111084
    6. ',' → logprob: -5.22965145111084
    7. '):
' → logprob: -5.35465145111084
    8. ')' → logprob: -5.72965145111084
    9. '  ' → logprob: -7.22965145111084
    10. 'per' → logprob: -7.22965145111084

Token 82: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.020569443702697754
    2. ' ' → logprob: -3.895569324493408
    3. '```' → logprob: -11.958069801330566
    4. '  ' → logprob: -12.020569801330566
    5. '1' → logprob: -12.895569801330566
    6. '１００' → logprob: -13.458069801330566
    7. '<|end|>' → logprob: -13.583069801330566
    8. '   ' → logprob: -13.708069801330566
    9. '    ' → logprob: -13.958069801330566
    10. 'unit' → logprob: -14.208069801330566

Token 83: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.00013464801304508
    2. ' ' → logprob: -9.500134468078613
    3. '```' → logprob: -10.875134468078613
    4. 'g' → logprob: -11.000134468078613
    5. '1' → logprob: -11.875134468078613
    6. 'unit' → logprob: -12.562634468078613
    7. '１００' → logprob: -13.187634468078613
    8. 'kg' → logprob: -13.187634468078613
    9. '
' → logprob: -14.375134468078613
    10. '  ' → logprob: -14.375134468078613

Token 84: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00038288687937892973
    2. ')' → logprob: -7.875382900238037
    3. '0' → logprob: -13.500382423400879
    4. 'г' → logprob: -15.500382423400879
    5. '<|end|>' → logprob: -15.500382423400879
    6. '),' → logprob: -16.000383377075195
    7. ' g' → logprob: -16.000383377075195
    8. '#g' → logprob: -16.250383377075195
    9. ' )' → logprob: -17.000383377075195
    10. '):' → logprob: -17.000383377075195

Token 85: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036316693294793367
    2. ')' → logprob: -6.003631591796875
    3. ',' → logprob: -6.878631591796875
    4. '):
' → logprob: -9.628631591796875
    5. ' ):' → logprob: -10.253631591796875
    6. '   ' → logprob: -11.003631591796875
    7. ' ' → logprob: -13.378631591796875
    8. ':' → logprob: -13.378631591796875
    9. '):
' → logprob: -13.878631591796875
    10. '),' → logprob: -14.378631591796875

Token 86: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.11503390967845917
    2. '   ' → logprob: -2.7400338649749756
    3. '):' → logprob: -3.3650338649749756
    4. '               ' → logprob: -5.990034103393555
    5. '):
' → logprob: -6.115034103393555
    6. ')' → logprob: -6.490034103393555
    7. '                 ' → logprob: -6.740034103393555
    8. '```' → logprob: -6.990034103393555
    9. '       ' → logprob: -8.490034103393555
    10. '    ' → logprob: -8.615034103393555

Token 87: ' limit' (ID: 5967)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9155534505844116
    2. '                ' → logprob: -2.415553569793701
    3. 'me' → logprob: -2.665553569793701
    4. ' max' → logprob: -2.790553569793701
    5. 'min' → logprob: -2.915553569793701
    6. 'purchase' → logprob: -3.040553569793701
    7. 'unit' → logprob: -3.790553569793701
    8. 'quantity' → logprob: -4.040553569793701
    9. ' min' → logprob: -4.415553569793701
    10. 'total' → logprob: -4.540553569793701

Token 88: '_a' (ID: 10852)
  Prédit: '_normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.7209056615829468
    2. '_a' → logprob: -1.0959056615829468
    3. ':' → logprob: -1.8459056615829468
    4. '_per' → logprob: -4.095905780792236
    5. '_quantity' → logprob: -6.220905780792236
    6. 'a' → logprob: -7.220905780792236
    7. '_' → logprob: -7.845905780792236
    8. '_amount' → logprob: -8.095905303955078
    9. '_limit' → logprob: -8.470905303955078
    10. 'normal' → logprob: -8.720905303955078

Token 89: 'izu' (ID: 75080)
  Prédit: 'imit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imit' → logprob: -0.7844161987304688
    2. '_quantity' → logprob: -0.7844161987304688
    3. 'u' → logprob: -2.9094161987304688
    4. 'ue' → logprob: -5.159416198730469
    5. 'ual' → logprob: -5.159416198730469
    6. 'quantity' → logprob: -5.534416198730469
    7. '```' → logprob: -5.659416198730469
    8. 'ua' → logprob: -6.159416198730469
    9. 'uit' → logprob: -6.409416198730469
    10. 'uity' → logprob: -6.534416198730469

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003936152206733823
    2. ' :' → logprob: -8.750393867492676
    3. ':int' → logprob: -9.875393867492676
    4. '_per' → logprob: -9.875393867492676
    5. ')' → logprob: -10.500393867492676
    6. '_' → logprob: -10.625393867492676
    7. '_quantity' → logprob: -10.750393867492676
    8. '_amount' → logprob: -11.250393867492676
    9. '_:' → logprob: -11.375393867492676
    10. ' ' → logprob: -12.500393867492676

Token 91: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5417917966842651
    2. ' Optional' → logprob: -1.2917917966842651
    3. 'int' → logprob: -2.4167919158935547
    4. 'Optional' → logprob: -2.9167919158935547
    5. ' None' → logprob: -9.166791915893555
    6. ' ' → logprob: -10.291791915893555
    7. 'None' → logprob: -11.041791915893555
    8. ':int' → logprob: -11.541791915893555
    9. '	Optional' → logprob: -11.666791915893555
    10. ')' → logprob: -11.916791915893555

Token 92: '     ' (ID: 530)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009672634303569794
    2. '):' → logprob: -4.75967264175415
    3. ':int' → logprob: -7.13467264175415
    4. ')' → logprob: -8.509672164916992
    5. '   ' → logprob: -10.259672164916992
    6. ' :' → logprob: -11.634672164916992
    7. '):
' → logprob: -12.634672164916992
    8. '  ' → logprob: -12.759672164916992
    9. ' ):' → logprob: -12.884672164916992
    10. ',' → logprob: -13.634672164916992

Token 93: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02288050949573517
    2. '):' → logprob: -3.8978805541992188
    3. ':int' → logprob: -6.147880554199219
    4. ')' → logprob: -8.772880554199219
    5. ',' → logprob: -11.272880554199219
    6. '   ' → logprob: -11.647880554199219
    7. 'int' → logprob: -12.022880554199219
    8. ' :' → logprob: -12.397880554199219
    9. '):
' → logprob: -12.647880554199219
    10. '=int' → logprob: -12.897880554199219

Token 94: ' q' (ID: 2335)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3506787121295929
    2. 'int' → logprob: -1.9756786823272705
    3. ')' → logprob: -2.2256786823272705
    4. ' maximum' → logprob: -4.60067892074585
    5. '100' → logprob: -4.85067892074585
    6. ' max' → logprob: -4.97567892074585
    7. 'max' → logprob: -5.47567892074585
    8. ' Optional' → logprob: -5.47567892074585
    9. 'Optional' → logprob: -5.60067892074585
    10. ' in' → logprob: -5.72567892074585

Token 95: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12097712606191635
    2. ')' → logprob: -3.1209771633148193
    3. 'a' → logprob: -3.4959771633148193
    4. 'u' → logprob: -4.62097692489624
    5. '_max' → logprob: -4.62097692489624
    6. '2' → logprob: -5.62097692489624
    7. '_a' → logprob: -5.62097692489624
    8. '_' → logprob: -6.12097692489624
    9. 'max' → logprob: -6.24597692489624
    10. 'A' → logprob: -6.37097692489624

Token 96: ' max' (ID: 2999)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010099450126290321
    2. ':' → logprob: -5.010099411010742
    3. '):
' → logprob: -6.010099411010742
    4. ')' → logprob: -7.135099411010742
    5. '   ' → logprob: -10.385099411010742
    6. ':int' → logprob: -10.635099411010742
    7. ' ):' → logprob: -10.760099411010742
    8. ',' → logprob: -11.010099411010742
    9. '```' → logprob: -11.510099411010742
    10. '):
' → logprob: -11.760099411010742

Token 97: ' per' (ID: 777)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003635707776993513
    2. '   ' → logprob: -6.753635883331299
    3. '):
' → logprob: -6.878635883331299
    4. ')' → logprob: -7.503635883331299
    5. ':' → logprob: -7.878635883331299
    6. ' ):' → logprob: -8.25363540649414
    7. '100' → logprob: -9.87863540649414
    8. ' ' → logprob: -10.25363540649414
    9. '       ' → logprob: -10.37863540649414
    10. ' in' → logprob: -11.00363540649414

Token 98: ' person' (ID: 1647)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' day' → logprob: -1.2722710371017456
    2. ' purchase' → logprob: -1.3972710371017456
    3. ' ' → logprob: -1.8972710371017456
    4. 'purchase' → logprob: -2.022271156311035
    5. '100' → logprob: -2.147271156311035
    6. 'day' → logprob: -3.147271156311035
    7. ' order' → logprob: -5.022271156311035
    8. 'order' → logprob: -5.772271156311035
    9. 'package' → logprob: -5.897271156311035
    10. '_purchase' → logprob: -5.897271156311035

Token 99: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002356264041736722
    2. '):
' → logprob: -6.252356052398682
    3. ')' → logprob: -7.877356052398682
    4. ',' → logprob: -11.12735652923584
    5. ':' → logprob: -11.12735652923584
    6. ' ):' → logprob: -12.00235652923584
    7. '):
' → logprob: -12.25235652923584
    8. '   ' → logprob: -12.37735652923584
    9. ' ' → logprob: -13.25235652923584
    10. '```' → logprob: -14.37735652923584

Token 100: '100' (ID: 1353)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32065144181251526
    2. ')' → logprob: -1.4456514120101929
    3. '):
' → logprob: -3.8206515312194824
    4. ' in' → logprob: -5.070651531219482
    5. ' ):' → logprob: -6.195651531219482
    6. '100' → logprob: -6.320651531219482
    7. ' )' → logprob: -6.820651531219482
    8. '       ' → logprob: -6.945651531219482
    9. '   ' → logprob: -7.070651531219482
    10. 'in' → logprob: -7.195651531219482

Token 101: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0001601539261173457
    2. ')' → logprob: -8.750160217285156
    3. 'г' → logprob: -14.750160217285156
    4. ' g' → logprob: -15.125160217285156
    5. '   ' → logprob: -15.375160217285156
    6. '_g' → logprob: -15.875160217285156
    7. '#g' → logprob: -16.000160217285156
    8. '):' → logprob: -16.125160217285156
    9. '```' → logprob: -16.625160217285156
    10. ' )' → logprob: -17.125160217285156

Token 102: ' units' (ID: 13306)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5145898461341858
    2. ')' → logprob: -1.139589786529541
    3. '):
' → logprob: -2.764589786529541
    4. ' units' → logprob: -4.514589786529541
    5. 'units' → logprob: -5.264589786529541
    6. '):

' → logprob: -6.264589786529541
    7. '   ' → logprob: -7.514589786529541
    8. '),' → logprob: -8.3895902633667
    9. '):
' → logprob: -8.7645902633667
    10. '_units' → logprob: -9.1395902633667

Token 103: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01401082705706358
    2. ')' → logprob: -4.639010906219482
    3. '):
' → logprob: -5.514010906219482
    4. '   ' → logprob: -8.889010429382324
    5. ':' → logprob: -10.139010429382324
    6. ' ):' → logprob: -11.014010429382324
    7. ',' → logprob: -11.639010429382324
    8. '):
' → logprob: -12.139010429382324
    9. ' ' → logprob: -12.639010429382324
    10. '```' → logprob: -13.514010429382324

Token 104: '                ' (ID: 408)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.205741286277771
    2. '):
' → logprob: -1.705741286277771
    3. '   ' → logprob: -6.3307414054870605
    4. ')' → logprob: -6.5807414054870605
    5. ':' → logprob: -7.3307414054870605
    6. ',' → logprob: -8.455740928649902
    7. '```' → logprob: -9.330740928649902
    8. '       ' → logprob: -9.580740928649902
    9. '):
' → logprob: -9.955740928649902
    10. ':
' → logprob: -11.455740928649902

Token 105: ' ):
' (ID: 48169)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004981847479939461
    2. ')' → logprob: -6.004981994628906
    3. '):
' (adapté à ' ):
') → logprob: -6.004981994628906
    4. '   ' → logprob: -11.129981994628906
    5. ':' → logprob: -11.879981994628906
    6. '):
' → logprob: -11.879981994628906
    7. ',' → logprob: -12.129981994628906
    8. ' ):' → logprob: -13.879981994628906
    9. ')->' → logprob: -15.004981994628906
    10. '       ' → logprob: -15.254981994628906

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6405310816480778e-05
    2. 'self' → logprob: -12.250016212463379
    3. '   ' → logprob: -12.625016212463379
    4. ' self' → logprob: -12.875016212463379
    5. '<|end|>' → logprob: -13.000016212463379
    6. '```' → logprob: -13.500016212463379
    7. '      ' → logprob: -15.125016212463379
    8. ',' → logprob: -15.250016212463379
    9. '           ' → logprob: -15.500016212463379
    10. '<|end|>' → logprob: -15.500016212463379

Token 107: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05314330384135246
    2. 'self' (adapté à ' self') → logprob: -3.053143262863159
    3. ' self' → logprob: -5.428143501281738
    4. '   ' → logprob: -9.053143501281738
    5. 'super' → logprob: -10.803143501281738
    6. ' ' → logprob: -12.678143501281738
    7. '           ' → logprob: -12.678143501281738
    8. ' super' → logprob: -12.928143501281738
    9. '      ' → logprob: -13.178143501281738
    10. '        ' → logprob: -13.303143501281738

Token 108: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.07896590977907181
    2. '.' → logprob: -2.578965902328491
    3. '.minimum' → logprob: -10.20396614074707
    4. ' .' → logprob: -10.57896614074707
    5. 'min' → logprob: -13.07896614074707
    6. '.m' → logprob: -13.07896614074707
    7. '.max' → logprob: -13.57896614074707
    8. '.data' → logprob: -13.82896614074707
    9. '.MIN' → logprob: -13.95396614074707
    10. '.Min' → logprob: -14.07896614074707

Token 109: '_quantity' (ID: 73348)
  Prédit: '_quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -7.171581091824919e-05
    2. '_' → logprob: -9.75007152557373
    3. '_purchase' → logprob: -11.62507152557373
    4. '_quant' → logprob: -12.62507152557373
    5. 'quantity' → logprob: -14.75007152557373
    6. '_quality' → logprob: -16.000072479248047
    7. '_q' → logprob: -16.250072479248047
    8. 'Quantity' → logprob: -16.375072479248047
    9. '_queryset' → logprob: -17.125072479248047
    10. ' _' → logprob: -17.125072479248047

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4288649260997772
    2. '=' → logprob: -1.0538649559020996
    3. ' ' → logprob: -8.928864479064941
    4. ')' → logprob: -11.428864479064941
    5. ',' → logprob: -11.803864479064941
    6. '<|end|>' → logprob: -12.678864479064941
    7. '   ' → logprob: -12.928864479064941
    8. '    ' → logprob: -13.303864479064941
    9. '        ' → logprob: -13.678864479064941
    10. ':' → logprob: -13.678864479064941

Token 111: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0429999977350235
    2. 'min' → logprob: -3.1679999828338623
    3. '    ' → logprob: -15.543000221252441
    4. '	min' → logprob: -15.543000221252441
    5. ' ' → logprob: -16.167999267578125
    6. '_min' → logprob: -16.542999267578125
    7. '        ' → logprob: -16.792999267578125
    8. 'int' → logprob: -17.167999267578125
    9. '   ' → logprob: -17.167999267578125
    10. '       ' → logprob: -17.542999267578125

Token 112: '_quantity' (ID: 73348)
  Prédit: '_quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -4.127333340875339e-06
    2. 'quantity' → logprob: -12.500003814697266
    3. '_' → logprob: -16.250003814697266
    4. 'Quantity' → logprob: -16.750003814697266
    5. '_quant' → logprob: -17.500003814697266
    6. '_purchase' → logprob: -18.000003814697266
    7. '_qu' → logprob: -18.125003814697266
    8. ' quantity' → logprob: -18.500003814697266
    9. '_quality' → logprob: -18.625003814697266
    10. '(quantity' → logprob: -18.875003814697266

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023549893870949745
    2. '<|end|>' → logprob: -3.773549795150757
    3. 'self' → logprob: -9.398550033569336
    4. ',' → logprob: -9.398550033569336
    5. '        ' → logprob: -9.898550033569336
    6. '
' → logprob: -11.023550033569336
    7. '<|end|>' → logprob: -11.273550033569336
    8. '      ' → logprob: -11.398550033569336
    9. '        
' → logprob: -11.523550033569336
    10. ' ' → logprob: -11.773550033569336

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028946425300091505
    2. 'self' → logprob: -8.375289916992188
    3. ' self' → logprob: -10.250289916992188
    4. '<|end|>' → logprob: -10.750289916992188
    5. ',' → logprob: -14.375289916992188
    6. '      ' → logprob: -15.000289916992188
    7. '        ' → logprob: -15.750289916992188
    8. '   ' → logprob: -15.750289916992188
    9. '	self' → logprob: -15.750289916992188
    10. '	' → logprob: -15.875289916992188

Token 115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.058383967727422714
    2. ' self' → logprob: -3.1833839416503906
    3. '       ' → logprob: -4.183383941650391
    4. '   ' → logprob: -11.30838394165039
    5. '        ' → logprob: -12.68338394165039
    6. '	self' → logprob: -13.68338394165039
    7. ' ' → logprob: -14.05838394165039
    8. '      ' → logprob: -14.18338394165039
    9. '     ' → logprob: -14.55838394165039
    10. '    ' → logprob: -14.68338394165039

Token 116: '.b' (ID: 1292)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1276182383298874
    2. '.min' → logprob: -2.1276183128356934
    3. '.max' → logprob: -8.252617835998535
    4. '.limit' → logprob: -8.627617835998535
    5. '.user' → logprob: -10.377617835998535
    6. ' .' → logprob: -10.377617835998535
    7. '.price' → logprob: -10.877617835998535
    8. '.purchase' → logprob: -10.877617835998535
    9. '.period' → logprob: -11.127617835998535
    10. '​.' → logprob: -11.377617835998535

Token 117: 'udget' (ID: 36671)
  Prédit: 'udget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udget' → logprob: -7.107425062713446e-06
    2. 'ud' → logprob: -12.875006675720215
    3. '_budget' → logprob: -12.875006675720215
    4. 'udge' → logprob: -13.875006675720215
    5. 'u' → logprob: -14.875006675720215
    6. '_' → logprob: -15.125006675720215
    7. 'budget' → logprob: -15.250006675720215
    8. '```' → logprob: -17.12500762939453
    9. '   ' → logprob: -18.25000762939453
    10. 'ucket' → logprob: -18.62500762939453

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2527365982532501
    2. ' =' → logprob: -1.5027365684509277
    3. '<|end|>' → logprob: -7.502736568450928
    4. ',' → logprob: -9.127737045288086
    5. ')' → logprob: -9.627737045288086
    6. '_' → logprob: -10.502737045288086
    7. '.' → logprob: -10.877737045288086
    8. '<|end|>' → logprob: -11.002737045288086
    9. '        ' → logprob: -12.502737045288086
    10. ' ' → logprob: -12.752737045288086

Token 119: ' budget' (ID: 9946)
  Prédit: ' budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' budget' → logprob: -0.47407931089401245
    2. 'budget' → logprob: -0.9740793108940125
    3. 'b' → logprob: -13.849079132080078
    4. '_budget' → logprob: -14.599079132080078
    5. 'bud' → logprob: -15.599079132080078
    6. 'int' → logprob: -15.724079132080078
    7. '```' → logprob: -15.724079132080078
    8. '       ' → logprob: -16.474079132080078
    9. '预算' → logprob: -16.849079132080078
    10. 'Budget' → logprob: -16.974079132080078

Token 120: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004967942950315773
    2. 'self' → logprob: -9.250496864318848
    3. '        
' → logprob: -9.250496864318848
    4. ',' → logprob: -9.500496864318848
    5. '<|end|>' → logprob: -9.500496864318848
    6. '        ' → logprob: -9.750496864318848
    7. '```' → logprob: -10.000496864318848
    8. '      ' → logprob: -11.875496864318848
    9. ' 
' → logprob: -12.125496864318848
    10. '
' → logprob: -12.250496864318848

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006551315891556442
    2. '        ' → logprob: -8.250655174255371
    3. '<|end|>' → logprob: -8.500655174255371
    4. 'self' → logprob: -9.500655174255371
    5. ',' → logprob: -10.000655174255371
    6. '      ' → logprob: -10.875655174255371
    7. ' self' → logprob: -11.375655174255371
    8. ' ' → logprob: -11.875655174255371
    9. '        
' → logprob: -11.875655174255371
    10. '     ' → logprob: -12.375655174255371

Token 122: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0667128935456276
    2. '       ' → logprob: -3.3167128562927246
    3. ' self' → logprob: -3.5667128562927246
    4. '	self' → logprob: -12.316713333129883
    5. '```' → logprob: -12.566713333129883
    6. '   ' → logprob: -13.066713333129883
    7. '        ' → logprob: -13.316713333129883
    8. '
' → logprob: -13.816713333129883
    9. ' ' → logprob: -14.191713333129883
    10. '           ' → logprob: -14.941713333129883

Token 123: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.3160876929759979
    2. '.' → logprob: -1.3160877227783203
    3. '.limit' → logprob: -6.44108772277832
    4. '.purchase' → logprob: -7.94108772277832
    5. '.cost' → logprob: -8.44108772277832
    6. ' .' → logprob: -8.69108772277832
    7. '.user' → logprob: -9.94108772277832
    8. '.prec' → logprob: -10.06608772277832
    9. '.min' → logprob: -10.06608772277832
    10. '.max' → logprob: -10.19108772277832

Token 124: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0002644351334311068
    2. '_' → logprob: -8.250264167785645
    3. '_an' → logprob: -13.125264167785645
    4. '_normal' → logprob: -15.375264167785645
    5. '_ai' → logprob: -15.500264167785645
    6. 'a' → logprob: -16.00026512145996
    7. ' _' → logprob: -16.00026512145996
    8. '_space' → logprob: -16.75026512145996
    9. '_s' → logprob: -16.75026512145996
    10. '_e' → logprob: -16.87526512145996

Token 125: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.0003951648832298815
    2. 'iz' → logprob: -8.875394821166992
    3. '_' → logprob: -9.125394821166992
    4. 'i' → logprob: -10.375394821166992
    5. 'a' → logprob: -10.375394821166992
    6. '_a' → logprob: -11.750394821166992
    7. 'uzu' → logprob: -12.125394821166992
    8. 'import' → logprob: -12.125394821166992
    9. 'izou' → logprob: -12.250394821166992
    10. '__' → logprob: -12.625394821166992

Token 126: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.886931836605072
    2. '.' → logprob: -1.1369318962097168
    3. '<|end|>' → logprob: -2.386931896209717
    4. ',' → logprob: -2.511931896209717
    5. '_a' → logprob: -3.136931896209717
    6. ')' → logprob: -4.261931896209717
    7. '=' → logprob: -4.636931896209717
    8. '.price' → logprob: -5.261931896209717
    9. '_price' → logprob: -5.511931896209717
    10. ' .' → logprob: -6.511931896209717

Token 127: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.47407880425453186
    2. ' price' → logprob: -0.9740787744522095
    3. '	price' → logprob: -14.599079132080078
    4. '        ' → logprob: -15.099079132080078
    5. '(price' → logprob: -15.474079132080078
    6. '_price' → logprob: -16.099079132080078
    7. 'pr' → logprob: -16.224079132080078
    8. '    ' → logprob: -16.224079132080078
    9. ' ' → logprob: -16.599079132080078
    10. ' code' → logprob: -17.099079132080078

Token 128: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.006068510469049215
    2. '_' → logprob: -5.131068706512451
    3. ' _' → logprob: -10.131068229675293
    4. 'a' → logprob: -10.256068229675293
    5. '_an' → logprob: -10.756068229675293
    6. '._' → logprob: -11.756068229675293
    7. '_s' → logprob: -12.506068229675293
    8. '_normal' → logprob: -12.631068229675293
    9. '```' → logprob: -12.756068229675293
    10. '_ai' → logprob: -13.131068229675293

Token 129: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.22233061492443085
    2. 'zu' → logprob: -1.7223305702209473
    3. 'z' → logprob: -4.097330570220947
    4. 'iz' → logprob: -6.722330570220947
    5. 'a' → logprob: -7.722330570220947
    6. 'zug' → logprob: -8.222331047058105
    7. '_' → logprob: -8.347331047058105
    8. 'import' → logprob: -8.597331047058105
    9. 'uzu' → logprob: -8.597331047058105
    10. ' ' → logprob: -8.847331047058105

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00872093252837658
    2. 'self' → logprob: -5.508720874786377
    3. '<|end|>' → logprob: -5.508720874786377
    4. ',' → logprob: -8.383721351623535
    5. ' self' → logprob: -8.883721351623535
    6. '        ' → logprob: -9.508721351623535
    7. '        
' → logprob: -10.883721351623535
    8. ' ' → logprob: -11.008721351623535
    9. '   ' → logprob: -11.133721351623535
    10. '           ' → logprob: -11.508721351623535

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009961126372218132
    2. 'self' → logprob: -4.634961128234863
    3. ' self' → logprob: -8.509961128234863
    4. ',' → logprob: -14.009961128234863
    5. '	' → logprob: -14.759961128234863
    6. '	self' → logprob: -14.759961128234863
    7. '   ' → logprob: -14.884961128234863
    8. '      ' → logprob: -14.884961128234863
    9. '<|end|>' → logprob: -14.884961128234863
    10. '```' → logprob: -15.634961128234863

Token 132: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10558991879224777
    2. '       ' → logprob: -2.3555898666381836
    3. ' self' → logprob: -5.230589866638184
    4. '   ' → logprob: -11.480589866638184
    5. 'price' → logprob: -12.480589866638184
    6. '        ' → logprob: -13.480589866638184
    7. ' ' → logprob: -13.855589866638184
    8. '	self' → logprob: -14.355589866638184
    9. '      ' → logprob: -14.605589866638184
    10. '     ' → logprob: -15.230589866638184

Token 133: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.0011252141557633877
    2. '.' → logprob: -7.001125335693359
    3. 'price' → logprob: -8.87612533569336
    4. '.limit' → logprob: -10.12612533569336
    5. ' .' → logprob: -11.37612533569336
    6. '.period' → logprob: -11.87612533569336
    7. '.normal' → logprob: -12.00112533569336
    8. '.purchase' → logprob: -13.12612533569336
    9. '	price' → logprob: -14.00112533569336
    10. '.payment' → logprob: -14.25112533569336

Token 134: '_normal' (ID: 30994)
  Prédit: '_normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.18104730546474457
    2. '_a' → logprob: -1.8060473203659058
    3. '_' → logprob: -6.806047439575195
    4. 'a' → logprob: -9.431047439575195
    5. '_an' → logprob: -9.806047439575195
    6. '_norm' → logprob: -11.806047439575195
    7. '_price' → logprob: -11.931047439575195
    8. '_s' → logprob: -12.306047439575195
    9. '_n' → logprob: -12.681047439575195
    10. '_c' → logprob: -12.806047439575195

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2843664288520813
    2. ' =' → logprob: -1.4093663692474365
    3. '<|end|>' → logprob: -6.034366607666016
    4. ',' → logprob: -7.659366607666016
    5. ')' → logprob: -9.159366607666016
    6. '_' → logprob: -9.534366607666016
    7. '<|end|>' → logprob: -9.659366607666016
    8. ' ' → logprob: -10.034366607666016
    9. ' ,' → logprob: -11.659366607666016
    10. ':' → logprob: -11.909366607666016

Token 136: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.20141683518886566
    2. 'price' → logprob: -1.7014168500900269
    3. ' ' → logprob: -13.826416969299316
    4. '	price' → logprob: -13.826416969299316
    5. '(price' → logprob: -14.576416969299316
    6. '    ' → logprob: -15.576416969299316
    7. ' pric' → logprob: -15.701416969299316
    8. '   ' → logprob: -15.951416969299316
    9. '  ' → logprob: -16.076416015625
    10. '     ' → logprob: -16.451416015625

Token 137: '_normal' (ID: 30994)
  Prédit: '_normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.10376356542110443
    2. '_a' → logprob: -2.3537635803222656
    3. '_' → logprob: -5.853763580322266
    4. 'a' → logprob: -7.478763580322266
    5. 'Normal' → logprob: -10.353763580322266
    6. ' _' → logprob: -10.978763580322266
    7. 'normal' → logprob: -11.353763580322266
    8. '_
' → logprob: -11.978763580322266
    9. '_an' → logprob: -12.103763580322266
    10. '```' → logprob: -12.103763580322266

Token 138: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016300508752465248
    2. 'self' → logprob: -4.141300678253174
    3. ' self' → logprob: -8.266300201416016
    4. '   ' → logprob: -12.016300201416016
    5. '	self' → logprob: -14.016300201416016
    6. '      ' → logprob: -15.016300201416016
    7. '
' → logprob: -15.266300201416016
    8. ',' → logprob: -15.391300201416016
    9. '	' → logprob: -15.516300201416016
    10. '<|end|>' → logprob: -15.516300201416016

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023866787552833557
    2. 'self' → logprob: -3.773866891860962
    3. ' self' → logprob: -7.398866653442383
    4. '   ' → logprob: -11.898866653442383
    5. '      ' → logprob: -14.023866653442383
    6. '	self' → logprob: -14.523866653442383
    7. 'def' → logprob: -15.648866653442383
    8. ' ' → logprob: -15.773866653442383
    9. '```' → logprob: -15.898866653442383
    10. '     ' → logprob: -16.023866653442383

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004146068822592497
    2. '       ' → logprob: -5.504146099090576
    3. ' self' → logprob: -9.629145622253418
    4. '   ' → logprob: -13.754145622253418
    5. 'def' → logprob: -15.129145622253418
    6. 'class' → logprob: -15.379145622253418
    7. '	self' → logprob: -15.879145622253418
    8. '```' → logprob: -16.754146575927734
    9. ' ' → logprob: -17.254146575927734
    10. '      ' → logprob: -17.254146575927734

Token 141: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -14.12500286102295
    3. ' .' → logprob: -14.12500286102295
    4. '.max' → logprob: -14.62500286102295
    5. 'limit' → logprob: -14.87500286102295
    6. '.l' → logprob: -15.50000286102295
    7. '.min' → logprob: -17.375001907348633
    8. ' limit' → logprob: -18.875001907348633
    9. '.bound' → logprob: -19.500001907348633
    10. '_limit' → logprob: -19.625001907348633

Token 142: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -13.375004768371582
    3. 'a' → logprob: -13.625004768371582
    4. '=_' → logprob: -14.875004768371582
    5. '_limit' → logprob: -15.250004768371582
    6. '=' → logprob: -15.500004768371582
    7. '_ai' → logprob: -15.500004768371582
    8. '_amount' → logprob: -16.125003814697266
    9. ' =' → logprob: -16.375003814697266
    10. ' _' → logprob: -16.500003814697266

Token 143: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -1.259079363080673e-05
    2. 'iz' → logprob: -12.250012397766113
    3. '_' → logprob: -13.250012397766113
    4. 'i' → logprob: -13.375012397766113
    5. '

' → logprob: -14.000012397766113
    6. '
' → logprob: -14.625012397766113
    7. '`' → logprob: -15.000012397766113
    8. '1' → logprob: -15.000012397766113
    9. 'uzu' → logprob: -15.125012397766113
    10. 'a' → logprob: -15.125012397766113

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196970492601395
    2. '=' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.311969757080078
    4. '    ' → logprob: -15.311969757080078
    5. '   ' → logprob: -15.686969757080078
    6. ' =
' → logprob: -18.186969757080078
    7. '        ' → logprob: -18.311969757080078
    8. '```' → logprob: -18.436969757080078
    9. '=line' → logprob: -19.186969757080078
    10. '=int' → logprob: -19.186969757080078

Token 145: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.006715967319905758
    2. ' limit' → logprob: -5.006715774536133
    3. 'lim' → logprob: -14.881715774536133
    4. '(limit' → logprob: -15.506715774536133
    5. ' ' → logprob: -17.756715774536133
    6. '   ' → logprob: -18.131715774536133
    7. 'limited' → logprob: -18.256715774536133
    8. '0' → logprob: -18.506715774536133
    9. 'l' → logprob: -18.631715774536133
    10. 'int' → logprob: -18.881715774536133

Token 146: '_a' (ID: 10852)
  Prédit: '_quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.48520517349243164
    2. '_a' → logprob: -0.9852051734924316
    3. 'quantity' → logprob: -5.110205173492432
    4. 'a' → logprob: -6.235205173492432
    5. 'it' → logprob: -6.360205173492432
    6. '_qty' → logprob: -8.735204696655273
    7. '   ' → logprob: -8.860204696655273
    8. '_q' → logprob: -9.110204696655273
    9. '_unit' → logprob: -9.110204696655273
    10. '       ' → logprob: -9.235204696655273

Token 147: 'izu' (ID: 75080)
  Prédit: 'zu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zu' → logprob: -0.006022768095135689
    2. 'izu' → logprob: -5.256022930145264
    3. 'z' → logprob: -7.381022930145264
    4. '2' → logprob: -10.256022453308105
    5. 'зу' → logprob: -10.381022453308105
    6. 'uzu' → logprob: -10.506022453308105
    7. '1' → logprob: -11.756022453308105
    8. 'u' → logprob: -12.006022453308105
    9. 'iz' → logprob: -12.256022453308105
    10. 'ズ' → logprob: -12.256022453308105

Token 148: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09887954592704773
    2. '<|end|>' → logprob: -2.59887957572937
    3. '   ' → logprob: -4.098879337310791
    4. '<|end|>' → logprob: -6.973879337310791
    5. '

' → logprob: -7.223879337310791
    6. 'class' → logprob: -7.223879337310791
    7. '    
' → logprob: -7.723879337310791
    8. ')' → logprob: -9.34887981414795
    9. '  
' → logprob: -10.34887981414795
    10. ' 
' → logprob: -10.34887981414795

Token 149: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03831436112523079
    2. 'class' → logprob: -3.5383143424987793
    3. '   ' → logprob: -5.038314342498779
    4. '    
' → logprob: -7.538314342498779
    5. '

' → logprob: -7.913314342498779
    6. '<|end|>' → logprob: -7.913314342498779
    7. '
    
' → logprob: -8.163314819335938
    8. '\n' → logprob: -8.413314819335938
    9. ' 
' → logprob: -9.788314819335938
    10. '```' → logprob: -9.913314819335938

Token 150: ' Solution' (ID: 20858)
  Prédit: ' Meat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Meat' → logprob: -0.1398930698633194
    2. 'Me' → logprob: -2.264893054962158
    3. 'Solution' → logprob: -4.514893054962158
    4. 'Solver' → logprob: -5.264893054962158
    5. ' Solver' → logprob: -5.514893054962158
    6. ' Solution' → logprob: -5.764893054962158
    7. 'ABC' → logprob: -7.264893054962158
    8. 'Abstract' → logprob: -7.639893054962158
    9. 'Optimal' → logprob: -7.639893054962158
    10. ' Me' → logprob: -8.139893531799316

Token 151: 'Strategy' (ID: 21488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12746156752109528
    2. ':' → logprob: -2.1274616718292236
    3. '(Abstract' → logprob: -8.502461433410645
    4. '():' → logprob: -8.627461433410645
    5. ':
' → logprob: -10.377461433410645
    6. '(
' → logprob: -10.752461433410645
    7. '(object' → logprob: -10.877461433410645
    8. '(Me' → logprob: -11.502461433410645
    9. '```' → logprob: -11.627461433410645
    10. '(P' → logprob: -12.252461433410645

Token 152: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001696902181720361
    2. ':' → logprob: -8.87516975402832
    3. '(Abstract' → logprob: -10.50016975402832
    4. ' (' → logprob: -13.87516975402832
    5. '(QWidget' → logprob: -15.50016975402832
    6. '(
' → logprob: -15.50016975402832
    7. '():' → logprob: -15.62516975402832
    8. '```' → logprob: -15.62516975402832
    9. '(Blueprint' → logprob: -16.25016975402832
    10. '(object' → logprob: -16.87516975402832

Token 153: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.014167269691824913
    2. ' ABC' → logprob: -4.264167308807373
    3. 'abc' → logprob: -13.889166831970215
    4. 'ABCDE' → logprob: -14.014166831970215
    5. ')' → logprob: -14.389166831970215
    6. '(' → logprob: -14.764166831970215
    7. 'AB' → logprob: -14.889166831970215
    8. 'Abstract' → logprob: -15.514166831970215
    9. '):
' → logprob: -15.639166831970215
    10. ' ' → logprob: -15.764166831970215

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00046284322161227465
    2. '):
' → logprob: -7.875463008880615
    3. ':' → logprob: -9.500462532043457
    4. ')' → logprob: -12.625462532043457
    5. '):
' → logprob: -13.500462532043457
    6. ' ):' → logprob: -13.500462532043457
    7. '):

' → logprob: -13.750462532043457
    8. '():' → logprob: -14.875462532043457
    9. ',' → logprob: -15.875462532043457
    10. '[' → logprob: -16.875463485717773

Token 155: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6391239166259766
    2. '   ' → logprob: -0.7641239166259766
    3. '<|end|>' → logprob: -6.264123916625977
    4. ' :' → logprob: -7.014123916625977
    5. '    
' → logprob: -7.264123916625977
    6. '
' → logprob: -7.264123916625977
    7. ' indentation' → logprob: -7.764123916625977
    8. ':
' → logprob: -7.764123916625977
    9. '):' → logprob: -8.264123916625977
    10. '):
' → logprob: -8.264123916625977

Token 156: ' @' (ID: 759)
  Prédit: ' @'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' @' → logprob: -0.2640966773033142
    2. '   ' → logprob: -1.639096736907959
    3. '@' (adapté à ' @') → logprob: -3.639096736907959
    4. '
' → logprob: -5.139096736907959
    5. '    
' → logprob: -5.889096736907959
    6. ' 
' → logprob: -6.014096736907959
    7. '    ' → logprob: -8.0140962600708
    8. ' def' → logprob: -9.1390962600708
    9. 'def' → logprob: -10.5140962600708
    10. '     
' → logprob: -10.6390962600708

Token 157: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -7.896309739408025e-07
    2. 'staticmethod' → logprob: -14.500000953674316
    3. ' abstract' → logprob: -15.375000953674316
    4. 'property' → logprob: -17.25
    5. 'abc' → logprob: -17.375
    6. 'classmethod' → logprob: -18.625
    7. '.abstract' → logprob: -19.25
    8. 'abs' → logprob: -20.0
    9. 'ab' → logprob: -20.5
    10. '@' → logprob: -23.125

Token 158: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.001933873863890767
    2. '_method' → logprob: -6.251934051513672
    3. 'classmethod' → logprob: -13.001934051513672
    4. '.method' → logprob: -13.376934051513672
    5. 'meth' → logprob: -14.376934051513672
    6. 'staticmethod' → logprob: -15.626934051513672
    7. 'ethod' → logprob: -16.001934051513672
    8. ' method' → logprob: -16.251934051513672
    9. 'property' → logprob: -16.626934051513672
    10. 'def' → logprob: -16.626934051513672

Token 159: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8964318037033081
    2. 'def' → logprob: -0.8964318037033081
    3. ' def' → logprob: -2.0214319229125977
    4. 'method' → logprob: -3.2714319229125977
    5. '    
' → logprob: -5.021431922912598
    6. '_method' → logprob: -6.271431922912598
    7. '<|end|>' → logprob: -6.521431922912598
    8. '  
' → logprob: -7.021431922912598
    9. ' method' → logprob: -7.396431922912598
    10. '(method' → logprob: -8.021431922912598

Token 160: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03551919385790825
    2. ' def' → logprob: -3.6605191230773926
    3. 'method' → logprob: -5.035519123077393
    4. '
' → logprob: -6.660519123077393
    5. '_method' → logprob: -6.785519123077393
    6. 'classmethod' → logprob: -10.03551959991455
    7. '    
' → logprob: -10.16051959991455
    8. ' method' → logprob: -10.41051959991455
    9. '   ' → logprob: -10.41051959991455
    10. '_token' → logprob: -10.53551959991455

Token 161: ' def' (ID: 1056)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.4399198889732361
    2. 'def' (adapté à ' def') → logprob: -1.6899199485778809
    3. 'call' → logprob: -2.189919948577881
    4. 'staticmethod' → logprob: -3.689919948577881
    5. 'classmethod' → logprob: -3.689919948577881
    6. 'property' → logprob: -5.189919948577881
    7. 'abstract' → logprob: -5.814919948577881
    8. '
' → logprob: -8.064919471740723
    9. 'code' → logprob: -8.314919471740723
    10. 'iterator' → logprob: -9.314919471740723

Token 162: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.8137789964675903
    2. ' solve' → logprob: -1.0637789964675903
    3. ' find' → logprob: -2.063778877258301
    4. ' generate' → logprob: -3.313778877258301
    5. 'generate' → logprob: -3.563778877258301
    6. 'find' → logprob: -4.063778877258301
    7. ' search' → logprob: -7.813778877258301
    8. 'search' → logprob: -8.1887788772583
    9. ' ' → logprob: -8.1887788772583
    10. ' next' → logprob: -8.1887788772583

Token 163: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016177361831068993
    2. '(' → logprob: -4.141177177429199
    3. ' (' → logprob: -9.5161771774292
    4. '(
' → logprob: -9.7661771774292
    5. 'self' → logprob: -11.7661771774292
    6. '(s' → logprob: -13.8911771774292
    7. ' self' → logprob: -13.8911771774292
    8. '(

' → logprob: -14.3911771774292
    9. ')(' → logprob: -14.7661771774292
    10. ' ' → logprob: -15.2661771774292

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0065117948688566685
    2. ')' → logprob: -5.131511688232422
    3. 'self' → logprob: -7.881511688232422
    4. ' ,' → logprob: -9.506511688232422
    5. '):' → logprob: -9.631511688232422
    6. ',
' → logprob: -10.131511688232422
    7. ' )' → logprob: -10.881511688232422
    8. ',self' → logprob: -13.381511688232422
    9. ' self' → logprob: -13.506511688232422
    10. '(self' → logprob: -14.131511688232422

Token 165: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.5294305086135864
    2. 'self' → logprob: -1.6544305086135864
    3. ' problem' → logprob: -1.9044305086135864
    4. ' self' → logprob: -2.904430389404297
    5. ')' → logprob: -4.154430389404297
    6. ' )' → logprob: -7.904430389404297
    7. '   ' → logprob: -9.779430389404297
    8. ' ' → logprob: -11.654430389404297
    9. '       ' → logprob: -12.154430389404297
    10. 'prob' → logprob: -12.404430389404297

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030316898482851684
    2. '):' → logprob: -8.625303268432617
    3. ')' → logprob: -9.125303268432617
    4. ' :' → logprob: -11.250303268432617
    5. ' ):' → logprob: -14.625303268432617
    6. ' )' → logprob: -14.875303268432617
    7. ')->' → logprob: -15.500303268432617
    8. '):
' → logprob: -15.625303268432617
    9. ':)' → logprob: -16.375303268432617
    10. '<|end|>' → logprob: -16.500303268432617

Token 167: ' Meat' (ID: 89131)
  Prédit: ' Meat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Meat' → logprob: -0.006764160469174385
    2. 'Me' → logprob: -5.006763935089111
    3. ' ' → logprob: -10.75676441192627
    4. ' Me' → logprob: -11.88176441192627
    5. ')' → logprob: -12.00676441192627
    6. ' meat' → logprob: -12.13176441192627
    7. '	Me' → logprob: -12.13176441192627
    8. ' ' → logprob: -13.63176441192627
    9. ' Meal' → logprob: -14.38176441192627
    10. 'Meal' → logprob: -14.38176441192627

Token 168: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -6.704273118884885e-07
    2. ' Purchase' → logprob: -15.500000953674316
    3. 'urchase' → logprob: -16.0
    4. '_purchase' → logprob: -16.125
    5. 'Purch' → logprob: -16.125
    6. 'Problem' → logprob: -19.25
    7. 'purchase' → logprob: -19.375
    8. ' purchase' → logprob: -21.5
    9. 'Purchased' → logprob: -21.625
    10. '_PUR' → logprob: -22.0

Token 169: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -1.9361264946837764e-07
    2. ' Problem' → logprob: -16.625
    3. '_problem' → logprob: -16.875
    4. 'problem' → logprob: -18.375
    5. 'Proble' → logprob: -18.875
    6. ' problem' → logprob: -18.875
    7. 'Prob' → logprob: -19.75
    8. ')' → logprob: -20.125
    9. 'Problems' → logprob: -20.5
    10. 'Pro' → logprob: -21.0

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. ' )' → logprob: -10.500029563903809
    3. ',' → logprob: -14.125029563903809
    4. ')->' → logprob: -14.875029563903809
    5. ',)' → logprob: -15.625029563903809
    6. '   ' → logprob: -16.250028610229492
    7. '
' → logprob: -16.750028610229492
    8. '`)' → logprob: -16.875028610229492
    9. '")' → logprob: -17.875028610229492
    10. '):' → logprob: -17.875028610229492

Token 171: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.27013787627220154
    2. ')' → logprob: -2.0201377868652344
    3. '->' → logprob: -2.2701377868652344
    4. ')->' → logprob: -7.270137786865234
    5. ':' → logprob: -9.895137786865234
    6. ' )->' → logprob: -11.395137786865234
    7. '-' → logprob: -11.520137786865234
    8. '   ' → logprob: -11.645137786865234
    9. ' )' → logprob: -11.770137786865234
    10. '()' → logprob: -13.770137786865234

Token 172: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.1271960288286209
    2. ' Optional' → logprob: -2.1271960735321045
    3. 'Iterator' → logprob: -8.377196311950684
    4. 'Tuple' → logprob: -11.002196311950684
    5. ' Iterator' → logprob: -11.752196311950684
    6. '	Optional' → logprob: -11.877196311950684
    7. '   ' → logprob: -12.752196311950684
    8. ' Tuple' → logprob: -13.127196311950684
    9. ' ' → logprob: -14.377196311950684
    10. '(Optional' → logprob: -15.627196311950684

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '[
' → logprob: -13.37500286102295
    3. '[int' → logprob: -13.62500286102295
    4. '<Tuple' → logprob: -16.250003814697266
    5. '[str' → logprob: -16.625003814697266
    6. ' [' → logprob: -16.750003814697266
    7. '['' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.375003814697266
    9. '["' → logprob: -18.000003814697266
    10. '[List' → logprob: -18.625003814697266

Token 174: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.00013572083844337612
    2. 'Iterator' → logprob: -9.50013542175293
    3. ' Tuple' → logprob: -9.75013542175293
    4. 'tuple' → logprob: -13.37513542175293
    5. 'Tu' → logprob: -14.37513542175293
    6. '   ' → logprob: -16.00013542175293
    7. ' ' → logprob: -17.37513542175293
    8. '[' → logprob: -17.50013542175293
    9. 'Generator' → logprob: -17.50013542175293
    10. 'int' → logprob: -17.50013542175293

Token 175: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.7697225252486533e-06
    2. 'int' → logprob: -13.375003814697266
    3. '[' → logprob: -13.750003814697266
    4. '[str' → logprob: -14.000003814697266
    5. '[
' → logprob: -15.750003814697266
    6. '(int' → logprob: -16.875003814697266
    7. '[in' → logprob: -17.375003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '[Int' → logprob: -17.875003814697266
    10. ',int' → logprob: -18.500003814697266

Token 176: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02921830117702484
    2. ',int' → logprob: -3.9042181968688965
    3. ' ,' → logprob: -4.7792181968688965
    4. '[int' → logprob: -8.654218673706055
    5. 'int' → logprob: -9.904218673706055
    6. ' int' → logprob: -12.654218673706055
    7. ']int' → logprob: -12.904218673706055
    8. '[' → logprob: -13.279218673706055
    9. ',float' → logprob: -13.654218673706055
    10. ' ' → logprob: -14.654218673706055

Token 177: ']]:
' (ID: 183340)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.12819159030914307
    2. ')' → logprob: -2.2531914710998535
    3. ')]' → logprob: -4.7531914710998535
    4. ']):' → logprob: -6.1281914710998535
    5. ']' → logprob: -6.2531914710998535
    6. ']]:
' → logprob: -6.2531914710998535
    7. ']:' → logprob: -8.128191947937012
    8. '):' → logprob: -9.253191947937012
    9. ',' → logprob: -9.878191947937012
    10. ' ]' → logprob: -10.503191947937012

Token 178: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2904326319694519
    2. '   ' → logprob: -1.9154326915740967
    3. '       ' → logprob: -2.7904326915740967
    4. '):' → logprob: -4.040432453155518
    5. '():' → logprob: -4.540432453155518
    6. ' :' → logprob: -5.290432453155518
    7. '<|end|>' → logprob: -5.665432453155518
    8. '    ' → logprob: -6.540432453155518
    9. ' ):' → logprob: -6.665432453155518
    10. ':
' → logprob: -7.290432453155518

Token 179: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.17591752111911774
    2. 'pass' (adapté à ' pass') → logprob: -2.425917625427246
    3. '       ' → logprob: -2.675917625427246
    4. '...' → logprob: -5.675917625427246
    5. ' ...' → logprob: -7.800917625427246
    6. '        ' → logprob: -9.300917625427246
    7. '    ' → logprob: -10.050917625427246
    8. '   ' → logprob: -10.175917625427246
    9. 'raise' → logprob: -11.425917625427246
    10. ' raise' → logprob: -11.425917625427246

Token 180: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014281622134149075
    2. '
' → logprob: -4.264281749725342
    3. '

' → logprob: -9.639281272888184
    4. ' class' → logprob: -10.639281272888184
    5. ' 
' → logprob: -11.264281272888184
    6. '\n' → logprob: -12.514281272888184
    7. '<|end|>' → logprob: -12.639281272888184
    8. '  
' → logprob: -13.139281272888184
    9. 'import' → logprob: -13.389281272888184
    10. '    
' → logprob: -13.514281272888184

Token 182: ' Soph' (ID: 44483)
  Prédit: 'Br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Br' → logprob: -0.40542271733283997
    2. ' Br' → logprob: -2.4054226875305176
    3. 'Ex' → logprob: -3.1554226875305176
    4. 'Na' → logprob: -3.2804226875305176
    5. 'Gre' → logprob: -3.2804226875305176
    6. 'A' → logprob: -3.4054226875305176
    7. 'Simple' → logprob: -3.6554226875305176
    8. ' Exhaust' → logprob: -3.7804226875305176
    9. ' Na' → logprob: -5.530422687530518
    10. 'Exact' → logprob: -5.655422687530518

Token 183: 'isticated' (ID: 33986)
  Prédit: 'isticated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isticated' → logprob: -0.005673271603882313
    2. 'ie' → logprob: -5.755673408508301
    3. 'ist' → logprob: -6.380673408508301
    4. 'i' → logprob: -9.1306734085083
    5. 'est' → logprob: -9.1306734085083
    6. 'o' → logprob: -9.2556734085083
    7. 'ia' → logprob: -9.3806734085083
    8. 'astic' → logprob: -9.5056734085083
    9. 'os' → logprob: -9.6306734085083
    10. 'istic' → logprob: -10.3806734085083

Token 184: 'Me' (ID: 5507)
  Prédit: 'Strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.43078717589378357
    2. 'Solution' → logprob: -1.180787205696106
    3. 'Purchase' → logprob: -3.9307870864868164
    4. 'Gre' → logprob: -4.555787086486816
    5. 'Solver' → logprob: -4.805787086486816
    6. 'Br' → logprob: -5.930787086486816
    7. 'Exact' → logprob: -7.430787086486816
    8. 'Buy' → logprob: -8.180787086486816
    9. 'Purch' → logprob: -8.680787086486816
    10. 'Dynamic' → logprob: -9.055787086486816

Token 185: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.3438327843905427e-05
    2. ' at' → logprob: -11.87502384185791
    3. 'a' → logprob: -12.12502384185791
    4. 'ats' → logprob: -13.12502384185791
    5. 'ат' → logprob: -13.37502384185791
    6. '	at' → logprob: -13.62502384185791
    7. '
' → logprob: -14.43752384185791
    8. 'atform' → logprob: -14.43752384185791
    9. 'aty' → logprob: -14.50002384185791
    10. 'ate' → logprob: -14.81252384185791

Token 186: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -0.0015124812489375472
    2. 'Strategy' → logprob: -7.75151252746582
    3. 'Optimizer' → logprob: -8.37651252746582
    4. 'Purch' → logprob: -8.50151252746582
    5. 'Buyer' → logprob: -8.62651252746582
    6. 'Solution' → logprob: -9.12651252746582
    7. 'Solver' → logprob: -9.12651252746582
    8. 'Buying' → logprob: -10.00151252746582
    9. 'Problem' → logprob: -10.25151252746582
    10. 'Buy' → logprob: -10.37651252746582

Token 187: 'Solver' (ID: 70484)
  Prédit: 'Strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.16110840439796448
    2. 'Solver' → logprob: -2.1611084938049316
    3. 'Solution' → logprob: -4.036108493804932
    4. 'Problem' → logprob: -4.161108493804932
    5. 'Optimizer' → logprob: -8.286108016967773
    6. 'Purchase' → logprob: -11.036108016967773
    7. 'Finder' → logprob: -11.661108016967773
    8. 'Planner' → logprob: -11.786108016967773
    9. 'Method' → logprob: -12.036108016967773
    10. '(' → logprob: -12.036108016967773

Token 188: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.3509761393070221
    2. ':' → logprob: -1.2259761095046997
    3. '(' → logprob: -6.22597599029541
    4. ' :' → logprob: -7.72597599029541
    5. ':
' → logprob: -9.97597599029541
    6. '():' → logprob: -10.72597599029541
    7. 'Solution' → logprob: -11.22597599029541
    8. ' (' → logprob: -12.10097599029541
    9. '(Abstract' → logprob: -12.10097599029541
    10. '):' → logprob: -13.10097599029541

Token 189: 'olution' (ID: 13625)
  Prédit: 'oph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oph' → logprob: -0.13989141583442688
    2. 'olution' → logprob: -2.2648913860321045
    3. 'o' → logprob: -4.764891624450684
    4. 'olve' → logprob: -4.764891624450684
    5. 'op' → logprob: -6.264891624450684
    6. '(' → logprob: -6.389891624450684
    7. 'ol' → logprob: -6.764891624450684
    8. 'ophy' → logprob: -7.139891624450684
    9. '```' → logprob: -7.264891624450684
    10. 'Solution' → logprob: -7.889891624450684

Token 190: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -5.200166469876422e-06
    2. 'Strateg' → logprob: -12.375004768371582
    3. 'Stra' → logprob: -14.875004768371582
    4. 'Str' → logprob: -15.375004768371582
    5. 'St' → logprob: -16.1250057220459
    6. 'strategy' → logprob: -16.6250057220459
    7. 'S' → logprob: -16.8750057220459
    8. '_strategy' → logprob: -16.8750057220459
    9. 'Strategies' → logprob: -17.1250057220459
    10. 'Star' → logprob: -17.2500057220459

Token 191: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003280751989223063
    2. '):
' → logprob: -8.500328063964844
    3. ')' → logprob: -9.250328063964844
    4. ':' → logprob: -11.250328063964844
    5. ' ):' → logprob: -11.250328063964844
    6. ']:' → logprob: -14.625328063964844
    7. '):
' → logprob: -14.750328063964844
    8. '   ' → logprob: -15.000328063964844
    9. '):

' → logprob: -15.375328063964844
    10. '():' → logprob: -15.500328063964844

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021188464597798884
    2. '
' → logprob: -8.750211715698242
    3. '    
' → logprob: -10.125211715698242
    4. ' def' → logprob: -11.875211715698242
    5. 'def' → logprob: -12.250211715698242
    6. '[' → logprob: -15.250211715698242
    7. '    ' → logprob: -15.375211715698242
    8. '<|end|>' → logprob: -15.625211715698242
    9. ' indentation' → logprob: -16.125211715698242
    10. ')' → logprob: -16.375211715698242

Token 193: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16047677397727966
    2. ' def' → logprob: -1.910476803779602
    3. '   ' → logprob: -8.285476684570312
    4. '
' → logprob: -16.035476684570312
    5. ' ' → logprob: -16.035476684570312
    6. 'class' → logprob: -16.410476684570312
    7. '    ' → logprob: -16.535476684570312
    8. '	def' → logprob: -16.660476684570312
    9. '  ' → logprob: -17.410476684570312
    10. '    
' → logprob: -18.535476684570312

Token 194: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.013807565905153751
    2. ' def' → logprob: -4.388807773590088
    3. 'solve' → logprob: -7.263807773590088
    4. ' ' → logprob: -7.763807773590088
    5. ' _' → logprob: -9.13880729675293
    6. ' ' → logprob: -10.51380729675293
    7. '_' → logprob: -11.01380729675293
    8. 'def' → logprob: -11.51380729675293
    9. '_s' → logprob: -12.63880729675293
    10. ' s' → logprob: -13.38880729675293

Token 195: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.250017166137695
    3. ' (' → logprob: -12.375017166137695
    4. '(
' → logprob: -15.375017166137695
    5. 'self' → logprob: -17.250017166137695
    6. '(s' → logprob: -18.000017166137695
    7. '(sel' → logprob: -19.000017166137695
    8. '(Self' → logprob: -19.000017166137695
    9. ' ' → logprob: -19.375017166137695
    10. '   ' → logprob: -19.500017166137695

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006612073048017919
    2. 'self' → logprob: -7.375661373138428
    3. '(self' → logprob: -11.50066089630127
    4. ',self' → logprob: -11.50066089630127
    5. ' ,' → logprob: -11.62566089630127
    6. ',
' → logprob: -13.37566089630127
    7. ' self' → logprob: -13.50066089630127
    8. '   ' → logprob: -13.75066089630127
    9. ')' → logprob: -14.25066089630127
    10. '       ' → logprob: -14.25066089630127

Token 197: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.22862614691257477
    2. ' self' → logprob: -1.9786261320114136
    3. 'problem' → logprob: -3.103626251220703
    4. 'self' → logprob: -3.853626251220703
    5. '       ' → logprob: -10.603626251220703
    6. ' ' → logprob: -15.103626251220703
    7. '   ' → logprob: -15.728626251220703
    8. 'Problem' → logprob: -15.853626251220703
    9. '_problem' → logprob: -15.853626251220703
    10. 'proble' → logprob: -15.978626251220703

Token 198: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3530184030532837
    2. '):' → logprob: -1.2280184030532837
    3. ' ):' → logprob: -5.853018283843994
    4. '):
' → logprob: -7.228018283843994
    5. ' :' → logprob: -7.728018283843994
    6. ')' → logprob: -8.228018760681152
    7. '       ' → logprob: -9.103018760681152
    8. '   ' → logprob: -9.478018760681152
    9. ',' → logprob: -10.978018760681152
    10. ' )' → logprob: -11.728018760681152

Token 199: ' Meat' (ID: 89131)
  Prédit: ' Meat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Meat' → logprob: -0.062087006866931915
    2. 'Me' → logprob: -2.812087059020996
    3. ' Me' → logprob: -9.187087059020996
    4. '(Me' → logprob: -11.937087059020996
    5. ')' → logprob: -12.687087059020996
    6. '	Me' → logprob: -13.062087059020996
    7. ' meat' → logprob: -13.312087059020996
    8. ' ' → logprob: -13.937087059020996
    9. '_me' → logprob: -14.062087059020996
    10. '.Me' → logprob: -14.312087059020996

Token 200: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -0.0020016769412904978
    2. '_purchase' → logprob: -7.127001762390137
    3. '   ' → logprob: -8.252001762390137
    4. '_' → logprob: -8.377001762390137
    5. ' Purchase' → logprob: -9.002001762390137
    6. '._' → logprob: -9.127001762390137
    7. '.' → logprob: -9.252001762390137
    8. '       ' → logprob: -9.502001762390137
    9. '):
' → logprob: -9.752001762390137
    10. ')' → logprob: -9.877001762390137

Token 201: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -4.36574100604048e-06
    2. '_problem' → logprob: -13.750004768371582
    3. ' Problem' → logprob: -13.875004768371582
    4. '):' → logprob: -14.375004768371582
    5. '):
' → logprob: -14.875004768371582
    6. ')' → logprob: -15.375004768371582
    7. '       ' → logprob: -15.375004768371582
    8. ':' → logprob: -15.500004768371582
    9. 'problem' → logprob: -15.750004768371582
    10. ',' → logprob: -15.750004768371582

Token 202: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.233804303221405e-05
    2. ' )' → logprob: -9.375092506408691
    3. '):' → logprob: -12.625092506408691
    4. '   ' → logprob: -12.875092506408691
    5. '):
' → logprob: -13.875092506408691
    6. ')->' → logprob: -15.125092506408691
    7. ':' → logprob: -15.625092506408691
    8. '       ' → logprob: -16.250091552734375
    9. 'self' → logprob: -16.625091552734375
    10. '`)' → logprob: -17.500091552734375

Token 203: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016360903158783913
    2. ' ->' → logprob: -4.516360759735107
    3. '->' → logprob: -5.891360759735107
    4. ')->' → logprob: -7.016360759735107
    5. ':
' → logprob: -7.266360759735107
    6. ')' → logprob: -7.766360759735107
    7. '(self' → logprob: -8.516361236572266
    8. '):' → logprob: -8.891361236572266
    9. '():' → logprob: -9.891361236572266
    10. '       ' → logprob: -10.391361236572266

Token 204: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.0009115827269852161
    2. 'Optional' → logprob: -7.000911712646484
    3. '	Optional' → logprob: -18.250911712646484
    4. '(Optional' → logprob: -18.375911712646484
    5. ' Option' → logprob: -21.750911712646484
    6. ' Opt' → logprob: -22.000911712646484
    7. ' optional' → logprob: -22.125911712646484
    8. ' Tuple' → logprob: -22.500911712646484
    9. '.Optional' → logprob: -22.875911712646484
    10. '_optional' → logprob: -23.000911712646484

Token 205: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.41866585687967e-06
    2. '[
' → logprob: -12.375008583068848
    3. '[(' → logprob: -12.500008583068848
    4. ' [' → logprob: -14.625008583068848
    5. '<Tuple' → logprob: -17.62500762939453
    6. '```' → logprob: -18.12500762939453
    7. '[int' → logprob: -18.37500762939453
    8. '[[' → logprob: -18.62500762939453
    9. '   ' → logprob: -18.62500762939453
    10. '[List' → logprob: -19.37500762939453

Token 206: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.339278580620885e-06
    2. ' Tuple' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '[' → logprob: -19.375001907348633
    5. 'Tu' → logprob: -19.875001907348633
    6. '<Tuple' → logprob: -21.375001907348633
    7. '```' → logprob: -21.625001907348633
    8. ' ' → logprob: -21.625001907348633
    9. '           ' → logprob: -21.750001907348633
    10. '.Tuple' → logprob: -21.750001907348633

Token 207: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.25
    3. '<int' → logprob: -17.625
    4. 'int' → logprob: -17.625
    5. '[
' → logprob: -19.375
    6. '[' → logprob: -19.75
    7. '[Int' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. '(int' → logprob: -21.375
    10. ',int' → logprob: -21.5

Token 208: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.005121211521327496
    2. '[int' → logprob: -5.755121231079102
    3. ',' → logprob: -6.255121231079102
    4. 'int' → logprob: -11.255121231079102
    5. ' ,' → logprob: -11.880121231079102
    6. '   ' → logprob: -14.505121231079102
    7. ']int' → logprob: -15.255121231079102
    8. '<int' → logprob: -16.0051212310791
    9. ':int' → logprob: -16.1301212310791
    10. '(int' → logprob: -16.6301212310791

Token 209: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.7730043530464172
    2. ']:' → logprob: -0.8980043530464172
    3. ']' → logprob: -2.6480042934417725
    4. ']]' → logprob: -3.0230042934417725
    5. ']):' → logprob: -5.273004531860352
    6. ']>' → logprob: -5.898004531860352
    7. ')]' → logprob: -6.648004531860352
    8. ')' → logprob: -6.898004531860352
    9. '>' → logprob: -7.523004531860352
    10. ']:
' → logprob: -8.273004531860352

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07997070997953415
    2. '
' → logprob: -2.579970598220825
    3. '        
' → logprob: -7.079970836639404
    4. ' 
' → logprob: -8.829970359802246
    5. '\n' → logprob: -10.454970359802246
    6. '    
' → logprob: -11.329970359802246
    7. '        ' → logprob: -11.454970359802246
    8. '```' → logprob: -11.454970359802246
    9. '  
' → logprob: -12.329970359802246
    10. '
' → logprob: -12.454970359802246

Token 211: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7936294078826904
    2. ' min' → logprob: -1.4186294078826904
    3. ' best' → logprob: -2.5436294078826904
    4. 'for' → logprob: -2.6686294078826904
    5. '       ' → logprob: -3.4186294078826904
    6. 'min' → logprob: -3.5436294078826904
    7. 'best' → logprob: -3.6686294078826904
    8. ' max' → logprob: -3.7936294078826904
    9. ' q' → logprob: -4.0436296463012695
    10. ' n' → logprob: -4.1686296463012695

Token 212: ' Constraints' (ID: 189637)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5499194860458374
    2. ' for' → logprob: -2.174919605255127
    3. ' n' → logprob: -2.549919605255127
    4. ' best' → logprob: -2.674919605255127
    5. ' max' → logprob: -3.299919605255127
    6. ' q' → logprob: -3.424919605255127
    7. 'for' → logprob: -3.674919605255127
    8. 'min' → logprob: -3.799919605255127
    9. '#' → logprob: -5.049919605255127
    10. ' #' → logprob: -5.049919605255127

Token 213: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030447982251644135
    2. ' for' → logprob: -4.780447959899902
    3. '        
' → logprob: -4.780447959899902
    4. '        ' → logprob: -5.905447959899902
    5. ' q' → logprob: -5.905447959899902
    6. ':' → logprob: -6.530447959899902
    7. '#' → logprob: -6.780447959899902
    8. 'for' → logprob: -6.905447959899902
    9. '
' → logprob: -7.030447959899902
    10. 'q' → logprob: -7.155447959899902

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10460305213928223
    2. '        ' → logprob: -2.4796030521392822
    3. ' q' → logprob: -5.104602813720703
    4. ' for' → logprob: -5.729602813720703
    5. ' max' → logprob: -5.979602813720703
    6. 'q' → logprob: -7.104602813720703
    7. '        
' → logprob: -7.354602813720703
    8. ' min' → logprob: -7.479602813720703
    9. 'for' → logprob: -7.729602813720703
    10. ' n' → logprob: -8.104602813720703

Token 215: ' #' (ID: 1069)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7100269794464111
    2. 'q' → logprob: -1.8350269794464111
    3. ' q' → logprob: -2.085026979446411
    4. 'min' → logprob: -2.085026979446411
    5. ' max' → logprob: -3.710026979446411
    6. ' for' → logprob: -3.710026979446411
    7. 'max' → logprob: -3.835026979446411
    8. 'for' → logprob: -4.585026741027832
    9. '#' (adapté à ' #') → logprob: -5.460026741027832
    10. ' best' → logprob: -6.085026741027832

Token 216: ' ' (ID: 220)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.682583749294281
    2. ' for' → logprob: -1.9325838088989258
    3. 'min' → logprob: -2.182583808898926
    4. 'for' → logprob: -2.807583808898926
    5. 'q' → logprob: -2.932583808898926
    6. ' q' → logprob: -3.057583808898926
    7. ' max' → logprob: -3.807583808898926
    8. 'max' → logprob: -4.057583808898926
    9. ' total' → logprob: -4.557583808898926
    10. '#' → logprob: -4.682583808898926

Token 217: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9726918339729309
    2. 'min' → logprob: -1.2226917743682861
    3. 'max' → logprob: -1.3476917743682861
    4. 'q' → logprob: -3.347691774368286
    5. 'total' → logprob: -4.097692012786865
    6. '#' → logprob: -5.222692012786865
    7. 'best' → logprob: -6.097692012786865
    8. 'required' → logprob: -6.472692012786865
    9. 'quantity' → logprob: -6.472692012786865
    10. 'result' → logprob: -6.597692012786865

Token 218: ')' (ID: 8)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.6836797595024109
    2. '.' → logprob: -2.0586798191070557
    3. ' for' → logprob: -2.3086798191070557
    4. ' ' → logprob: -2.3086798191070557
    5. ' q' → logprob: -3.0586798191070557
    6. ' total' → logprob: -3.5586798191070557
    7. ' min' → logprob: -3.6836798191070557
    8. '#' → logprob: -4.683679580688477
    9. ' max' → logprob: -4.933679580688477
    10. '        ' → logprob: -5.058679580688477

Token 219: ' total' (ID: 3609)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5090222358703613
    2. ' q' → logprob: -1.6340222358703613
    3. ' min' → logprob: -2.0090222358703613
    4. ' total' → logprob: -2.5090222358703613
    5. 'min' → logprob: -2.7590222358703613
    6. 'total' → logprob: -2.8840222358703613
    7. ' for' → logprob: -3.1340222358703613
    8. 'for' → logprob: -3.3840222358703613
    9. 'problem' → logprob: -3.6340222358703613
    10. ' problem' → logprob: -3.7590222358703613

Token 220: ' grams' (ID: 55637)
  Prédit: '_quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.13876433670520782
    2. '_weight' → logprob: -2.8887643814086914
    3. '_' → logprob: -3.3887643814086914
    4. ' quantity' → logprob: -4.888764381408691
    5. '_cost' → logprob: -5.013764381408691
    6. 'quantity' → logprob: -5.138764381408691
    7. ' =' → logprob: -5.388764381408691
    8. '_price' → logprob: -5.888764381408691
    9. '_qty' → logprob: -5.888764381408691
    10. '_me' → logprob: -6.013764381408691

Token 221: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5916211605072021
    2. ' purchased' → logprob: -1.0916211605072021
    3. '_a' → logprob: -2.966621160507202
    4. ' of' → logprob: -4.716621398925781
    5. '_purchase' → logprob: -5.216621398925781
    6. ' >=' → logprob: -5.341621398925781
    7. '       ' → logprob: -5.466621398925781
    8. 'A' → logprob: -5.466621398925781
    9. 'a' → logprob: -5.466621398925781
    10. ' <=' → logprob: -5.466621398925781

Token 222: ' q' (ID: 2335)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.14279711246490479
    2. ' problem' → logprob: -2.0177969932556152
    3. '100' → logprob: -10.267797470092773
    4. 'self' → logprob: -10.642797470092773
    5. '       ' → logprob: -11.267797470092773
    6. '   ' → logprob: -11.392797470092773
    7. '(problem' → logprob: -11.392797470092773
    8. '           ' → logprob: -11.767797470092773
    9. ' self' → logprob: -12.767797470092773
    10. 'prob' → logprob: -12.892797470092773

Token 223: '1' (ID: 16)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06026306748390198
    2. '1' → logprob: -2.935263156890869
    3. '_quantity' → logprob: -5.935263156890869
    4. 'uity' → logprob: -7.185263156890869
    5. 'uant' → logprob: -7.685263156890869
    6. '_' → logprob: -8.185262680053711
    7. 'antity' → logprob: -8.185262680053711
    8. '_u' → logprob: -8.685262680053711
    9. '       ' → logprob: -8.810262680053711
    10. 'quantity' → logprob: -8.935262680053711

Token 224: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05615502968430519
    2. '
' → logprob: -3.05615496635437
    3. '        
' → logprob: -5.181155204772949
    4. '\n' → logprob: -7.556155204772949
    5. '<|end|>' → logprob: -8.30615520477295
    6. '#' → logprob: -8.43115520477295
    7. '        ' → logprob: -8.68115520477295
    8. ',' → logprob: -8.68115520477295
    9. '  
' → logprob: -8.80615520477295
    10. '<|end|>' → logprob: -9.30615520477295

Token 225: 'min' (ID: 1493)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5608499050140381
    2. ')' → logprob: -1.435849905014038
    3. '100' → logprob: -2.810849905014038
    4. ' )
' → logprob: -3.560849905014038
    5. 'problem' → logprob: -3.560849905014038
    6. ' problem' → logprob: -4.060850143432617
    7. '       ' → logprob: -4.060850143432617
    8. '```' → logprob: -4.560850143432617
    9. '*' → logprob: -4.935850143432617
    10. ' )' → logprob: -5.435850143432617

Token 226: '_quantity' (ID: 73348)
  Prédit: '_quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.006922688335180283
    2. '_' → logprob: -5.506922721862793
    3. '_purchase' → logprob: -7.131922721862793
    4. ' _' → logprob: -7.381922721862793
    5. ')' → logprob: -7.631922721862793
    6. ' quantity' → logprob: -8.756922721862793
    7. '       ' → logprob: -8.881922721862793
    8. '   ' → logprob: -9.131922721862793
    9. 'quantity' → logprob: -9.381922721862793
    10. ' )' → logprob: -9.631922721862793

Token 227: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08281668275594711
    2. ')' → logprob: -2.5828166007995605
    3. '       ' → logprob: -5.9578166007995605
    4. ')
' → logprob: -7.4578166007995605
    5. ' )
' → logprob: -7.5828166007995605
    6. '):
' → logprob: -9.832817077636719
    7. ')

' → logprob: -9.832817077636719
    8. ' )' → logprob: -10.582817077636719
    9. '),' → logprob: -10.707817077636719
    10. ' and' → logprob: -11.207817077636719

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01248658075928688
    2. '#' → logprob: -5.262486457824707
    3. '
' → logprob: -5.262486457824707
    4. '        
' → logprob: -6.387486457824707
    5. ' #' → logprob: -8.637486457824707
    6. '   ' → logprob: -9.762486457824707
    7. '        ' → logprob: -10.262486457824707
    8. '\n' → logprob: -11.262486457824707
    9. '  
' → logprob: -11.512486457824707
    10. ' 
' → logprob: -11.762486457824707

Token 229: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14874126017093658
    2. '
' → logprob: -2.2737412452697754
    3. '#' (adapté à ' #') → logprob: -3.6487412452697754
    4. ' #' → logprob: -5.648741245269775
    5. '        
' → logprob: -5.773741245269775
    6. ' for' → logprob: -7.523741245269775
    7. 'for' → logprob: -7.898741245269775
    8. '\n' → logprob: -8.273741722106934
    9. ' 
' → logprob: -8.523741722106934
    10. ' ' → logprob: -8.523741722106934

Token 230: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5782692432403564
    2. '#' → logprob: -1.8282692432403564
    3. '       ' → logprob: -1.8282692432403564
    4. ' ' → logprob: -2.4532692432403564
    5. ' #' → logprob: -3.7032692432403564
    6. '
' → logprob: -6.078269004821777
    7. '   ' → logprob: -6.953269004821777
    8. 'budget' → logprob: -7.453269004821777
    9. '1' → logprob: -7.578269004821777
    10. '        ' → logprob: -7.703269004821777

Token 231: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08544051647186279
    2. 'budget' → logprob: -3.0854406356811523
    3. '#' → logprob: -3.4604406356811523
    4. '       ' → logprob: -5.835440635681152
    5. 'b' → logprob: -6.835440635681152
    6. '
' → logprob: -8.585440635681152
    7. 'if' → logprob: -9.210440635681152
    8. '   ' → logprob: -9.460440635681152
    9. 'total' → logprob: -9.460440635681152
    10. 'for' → logprob: -9.710440635681152

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013435659930109978
    2. ' )' → logprob: -6.876343727111816
    3. '   ' → logprob: -9.001343727111816
    4. '*' → logprob: -9.626343727111816
    5. ' *' → logprob: -10.251343727111816
    6. ' <=' → logprob: -11.001343727111816
    7. '#' → logprob: -11.376343727111816
    8. ')
' → logprob: -11.876343727111816
    9. '    ' → logprob: -11.876343727111816
    10. ' ' → logprob: -12.126343727111816

Token 233: ' buy' (ID: 3877)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.66206294298172
    2. ' total' → logprob: -0.78706294298172
    3. 'cost' → logprob: -4.787063121795654
    4. ' cost' → logprob: -5.287063121795654
    5. 'Total' → logprob: -5.287063121795654
    6. '(total' → logprob: -6.162063121795654
    7. 'price' → logprob: -6.787063121795654
    8. 'problem' → logprob: -6.787063121795654
    9. ' (' → logprob: -6.912063121795654
    10. 'budget' → logprob: -7.037063121795654

Token 234: ' A' (ID: 355)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0100418329238892
    2. '_a' → logprob: -1.2600418329238892
    3. ' at' → logprob: -2.1350417137145996
    4. 'A' → logprob: -2.2600417137145996
    5. ' limit' → logprob: -3.1350417137145996
    6. 'a' → logprob: -3.6350417137145996
    7. ' both' → logprob: -4.6350417137146
    8. ' A' → logprob: -5.0100417137146
    9. ' quantity' → logprob: -5.2600417137146
    10. ' amount' → logprob: -5.3850417137146

Token 235: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.02742401324212551
    2. '_' → logprob: -4.277423858642578
    3. 'iz' → logprob: -6.027423858642578
    4. '_i' → logprob: -7.089923858642578
    5. 'i' → logprob: -7.214923858642578
    6. '```' → logprob: -7.277423858642578
    7. ' ' → logprob: -7.339923858642578
    8. '   ' → logprob: -7.464923858642578
    9. '1' → logprob: -7.589923858642578
    10. ' _' → logprob: -7.964923858642578

Token 236: ' chicken' (ID: 21663)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.7729989886283875
    2. '_' → logprob: -1.0229990482330322
    3. '_me' → logprob: -3.5229990482330322
    4. '_price' → logprob: -3.6479990482330322
    5. '_u' → logprob: -4.147998809814453
    6. ' _' → logprob: -4.147998809814453
    7. ' limit' → logprob: -4.772998809814453
    8. '   ' → logprob: -5.022998809814453
    9. ' meat' → logprob: -5.022998809814453
    10. '_s' → logprob: -5.272998809814453

Token 237: ' at' (ID: 540)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -2.044447183609009
    2. '       ' → logprob: -2.294447183609009
    3. ' if' → logprob: -2.419447183609009
    4. 's' → logprob: -2.669447183609009
    5. ' at' → logprob: -2.919447183609009
    6. '_' → logprob: -3.044447183609009
    7. ' for' → logprob: -3.294447183609009
    8. 'if' → logprob: -3.294447183609009
    9. 'a' → logprob: -3.419447183609009
    10. '_limit' → logprob: -3.419447183609009

Token 238: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -1.007554531097412
    2. ' most' → logprob: -1.382554531097412
    3. 'most' → logprob: -1.382554531097412
    4. 'least' → logprob: -2.132554531097412
    5. ' at' → logprob: -5.757554531097412
    6. 'a' → logprob: -6.382554531097412
    7. ' ' → logprob: -6.632554531097412
    8. 'limit' → logprob: -6.632554531097412
    9. '#' → logprob: -7.507554531097412
    10. 'max' → logprob: -7.507554531097412

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9654401540756226
    2. ' ' → logprob: -1.4654401540756226
    3. ' min' → logprob: -1.8404401540756226
    4. ' problem' → logprob: -2.590440273284912
    5. ' one' → logprob: -3.215440273284912
    6. 'min' → logprob: -3.590440273284912
    7. '1' → logprob: -3.715440273284912
    8. 'problem' → logprob: -3.965440273284912
    9. ' q' → logprob: -4.215440273284912
    10. 'q' → logprob: -4.465440273284912

Token 240: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7972700595855713
    2. '1' → logprob: -1.0472700595855713
    3. 'min' → logprob: -2.6722700595855713
    4. 'q' → logprob: -3.1722700595855713
    5. 'problem' → logprob: -3.4222700595855713
    6. 'one' → logprob: -3.7972700595855713
    7. '100' → logprob: -5.047269821166992
    8. ' ' → logprob: -5.672269821166992
    9. 'max' → logprob: -5.797269821166992
    10. 'limit' → logprob: -5.797269821166992

Token 241: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22696807980537415
    2. ' if' → logprob: -2.9769680500030518
    3. ',' → logprob: -3.4769680500030518
    4. ' and' → logprob: -3.6019680500030518
    5. '
' → logprob: -3.9769680500030518
    6. '        
' → logprob: -3.9769680500030518
    7. '        ' → logprob: -5.101968288421631
    8. ' ' → logprob: -5.351968288421631
    9. ' 
' → logprob: -5.351968288421631
    10. ' or' → logprob: -5.351968288421631

Token 242: 'mandatory' (ID: 176268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2688731253147125
    2. ' )' → logprob: -2.1438732147216797
    3. ' if' → logprob: -3.0188732147216797
    4. ' and' → logprob: -3.6438732147216797
    5. ' or' → logprob: -4.51887321472168
    6. ')
' → logprob: -5.01887321472168
    7. ' )
' → logprob: -5.14387321472168
    8. 'if' → logprob: -5.14387321472168
    9. 'and' → logprob: -5.64387321472168
    10. '       ' → logprob: -6.01887321472168

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2753669023513794
    2. ')
' → logprob: -1.5253669023513794
    3. ',' → logprob: -5.27536678314209
    4. ' if' → logprob: -5.65036678314209
    5. ' )' → logprob: -5.77536678314209
    6. ' )
' → logprob: -5.90036678314209
    7. '       ' → logprob: -6.02536678314209
    8. ' and' → logprob: -6.40036678314209
    9. '),' → logprob: -6.77536678314209
    10. ' or' → logprob: -6.77536678314209

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002965696156024933
    2. '        
' → logprob: -6.377965927124023
    3. '
' → logprob: -7.502965927124023
    4. ',' → logprob: -8.502965927124023
    5. '#' → logprob: -9.002965927124023
    6. '<|end|>' → logprob: -9.002965927124023
    7. '        ' → logprob: -10.377965927124023
    8. '\n' → logprob: -10.502965927124023
    9. '```' → logprob: -10.752965927124023
    10. '<|end|>' → logprob: -10.752965927124023

Token 245: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030108900740742683
    2. '
' → logprob: -4.15510892868042
    3. '#' (adapté à ' #') → logprob: -4.90510892868042
    4. '        
' → logprob: -5.90510892868042
    5. ' #' → logprob: -6.15510892868042
    6. ' 
' → logprob: -7.78010892868042
    7. '  
' → logprob: -8.030108451843262
    8. ' for' → logprob: -8.655108451843262
    9. '   ' → logprob: -9.280108451843262
    10. ' n' → logprob: -9.405108451843262

Token 246: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31926557421684265
    2. '#' → logprob: -2.819265604019165
    3. ' #' → logprob: -2.819265604019165
    4. '3' → logprob: -3.194265604019165
    5. ' ' → logprob: -3.319265604019165
    6. '
' → logprob: -3.694265604019165
    7. ' max' → logprob: -4.194265365600586
    8. ' for' → logprob: -4.819265365600586
    9. ' total' → logprob: -5.569265365600586
    10. ' if' → logprob: -5.694265365600586

Token 247: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16086667776107788
    2. '#' → logprob: -2.1608667373657227
    3. 'if' → logprob: -4.410866737365723
    4. '       ' → logprob: -5.035866737365723
    5. 'for' → logprob: -5.285866737365723
    6. 'max' → logprob: -5.535866737365723
    7. 'total' → logprob: -6.160866737365723
    8. '   ' → logprob: -7.535866737365723
    9. ' #' → logprob: -7.660866737365723
    10. ' if' → logprob: -7.910866737365723

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006820533308200538
    2. ' )' → logprob: -7.5006818771362305
    3. '   ' → logprob: -9.12568187713623
    4. ')
' → logprob: -12.25068187713623
    5. 'def' → logprob: -13.12568187713623
    6. ')#' → logprob: -13.12568187713623
    7. '#' → logprob: -13.12568187713623
    8. ' ' → logprob: -13.62568187713623
    9. '       ' → logprob: -13.75068187713623
    10. '    ' → logprob: -14.12568187713623

Token 249: ' A' (ID: 355)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2636873126029968
    2. 'total' → logprob: -1.7636873722076416
    3. ' max' → logprob: -4.1386871337890625
    4. 'max' → logprob: -5.1386871337890625
    5. ' cost' → logprob: -5.3886871337890625
    6. ' budget' → logprob: -5.6386871337890625
    7. '#' → logprob: -5.7636871337890625
    8. 'Total' → logprob: -6.0136871337890625
    9. ' buy' → logprob: -6.0136871337890625
    10. ' #' → logprob: -6.2636871337890625

Token 250: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.054000016301870346
    2. '_' → logprob: -4.678999900817871
    3. 't' → logprob: -4.678999900817871
    4. ' ' → logprob: -5.053999900817871
    5. '   ' → logprob: -5.053999900817871
    6. '  ' → logprob: -6.053999900817871
    7. 'i' → logprob: -6.178999900817871
    8. 'iz' → logprob: -6.491499900817871
    9. '_i' → logprob: -6.678999900817871
    10. ' #' → logprob: -7.178999900817871

Token 251: ' chicken' (ID: 21663)
  Prédit: '_ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.22632689774036407
    2. ' chicken' → logprob: -2.1013269424438477
    3. '_' → logprob: -3.1013269424438477
    4. 'ch' → logprob: -3.9763269424438477
    5. '_limit' → logprob: -5.726326942443848
    6. ' ' → logprob: -5.851326942443848
    7. ' _' → logprob: -6.351326942443848
    8. '_quantity' → logprob: -6.476326942443848
    9. '_me' → logprob: -6.476326942443848
    10. '_price' → logprob: -6.601326942443848

Token 252: ' <=' (ID: 5017)
  Prédit: ' quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantity' → logprob: -1.0405771732330322
    2. 'quantity' → logprob: -1.4155771732330322
    3. ' <=' → logprob: -2.0405771732330322
    4. ' grams' → logprob: -2.4155771732330322
    5. '<=' → logprob: -3.1655771732330322
    6. ' units' → logprob: -3.6655771732330322
    7. 'amount' → logprob: -4.290576934814453
    8. 'units' → logprob: -4.290576934814453
    9. '_quantity' → logprob: -4.290576934814453
    10. 'grams' → logprob: -4.290576934814453

Token 253: ' q' (ID: 2335)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.11284487694501877
    2. ' problem' → logprob: -2.237844944000244
    3. 'limit' → logprob: -10.987844467163086
    4. ' limit' → logprob: -12.612844467163086
    5. '(problem' → logprob: -13.987844467163086
    6. 'self' → logprob: -14.737844467163086
    7. '```' → logprob: -15.612844467163086
    8. 'proble' → logprob: -15.862844467163086
    9. '.problem' → logprob: -16.612844467163086
    10. '_problem' → logprob: -16.737844467163086

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4462794363498688
    2. 'problem' → logprob: -1.4462794065475464
    3. 'limit' → logprob: -2.696279525756836
    4. '_limit' → logprob: -3.571279525756836
    5. '_a' → logprob: -3.946279525756836
    6. ' problem' → logprob: -6.196279525756836
    7. '_problem' → logprob: -6.321279525756836
    8. '       ' → logprob: -7.071279525756836
    9. '(problem' → logprob: -7.071279525756836
    10. '_' → logprob: -7.196279525756836

Token 255: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6302693486213684
    2. '
' → logprob: -0.8802693486213684
    3. '        
' → logprob: -3.1302692890167236
    4. '<|end|>' → logprob: -5.630269527435303
    5. ',' → logprob: -6.755269527435303
    6. '  
' → logprob: -7.130269527435303
    7. '        ' → logprob: -7.630269527435303
    8. '
' → logprob: -7.755269527435303
    9. ' 
' → logprob: -8.005269050598145
    10. '<|end|>' → logprob: -8.380269050598145

Token 256: 'limit' (ID: 19698)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.2786313593387604
    2. ' problem' → logprob: -2.1536314487457275
    3. 'limit' → logprob: -2.4036314487457275
    4. ')' → logprob: -3.9036314487457275
    5. ' limit' → logprob: -4.403631210327148
    6. ' )' → logprob: -6.903631210327148
    7. ')
' → logprob: -7.028631210327148
    8. '):
' → logprob: -8.028631210327148
    9. '(problem' → logprob: -8.028631210327148
    10. '),' → logprob: -8.778631210327148

Token 257: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0006590616540051997
    2. ')' → logprob: -7.625658988952637
    3. '   ' → logprob: -9.625658988952637
    4. ')
' → logprob: -10.750658988952637
    5. 'a' → logprob: -10.875658988952637
    6. '       ' → logprob: -11.250658988952637
    7. '           ' → logprob: -11.375658988952637
    8. '```' → logprob: -11.625658988952637
    9. '):
' → logprob: -12.375658988952637
    10. '),' → logprob: -12.500658988952637

Token 258: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.0012951197568327188
    2. '_' → logprob: -7.75129508972168
    3. 'iz' → logprob: -8.37629508972168
    4. 'i' → logprob: -8.87629508972168
    5. ')' → logprob: -9.00129508972168
    6. 'zu' → logprob: -10.12629508972168
    7. '}' → logprob: -10.37629508972168
    8. 'uzu' → logprob: -10.62629508972168
    9. '_i' → logprob: -10.75129508972168
    10. ' ' → logprob: -10.75129508972168

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3900693356990814
    2. ')
' → logprob: -1.1400693655014038
    3. ')
' → logprob: -6.765069484710693
    4. '):
' → logprob: -7.515069484710693
    5. '):' → logprob: -7.640069484710693
    6. '       ' → logprob: -8.015069007873535
    7. ')

' → logprob: -8.015069007873535
    8. ' )
' → logprob: -8.765069007873535
    9. ' )' → logprob: -9.265069007873535
    10. '   ' → logprob: -11.015069007873535

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008631468750536442
    2. '        
' → logprob: -5.383631706237793
    3. '
' → logprob: -5.758631706237793
    4. '<|end|>' → logprob: -8.508631706237793
    5. '\n' → logprob: -9.008631706237793
    6. ',' → logprob: -9.508631706237793
    7. 'n' → logprob: -9.758631706237793
    8. '        ' → logprob: -9.883631706237793
    9. ' 
' → logprob: -10.008631706237793
    10. '  
' → logprob: -10.008631706237793

Token 261: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04691683128476143
    2. '#' (adapté à ' #') → logprob: -4.921916961669922
    3. ' min' → logprob: -4.921916961669922
    4. '
' → logprob: -5.046916961669922
    5. ' #' → logprob: -5.171916961669922
    6. ' best' → logprob: -5.671916961669922
    7. 'result' → logprob: -6.046916961669922
    8. ' result' → logprob: -6.296916961669922
    9. ' for' → logprob: -6.671916961669922
    10. ' n' → logprob: -6.671916961669922

Token 262: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7189162969589233
    2. ' min' → logprob: -1.8439162969589233
    3. ' best' → logprob: -2.218916416168213
    4. ' #' → logprob: -2.218916416168213
    5. '#' → logprob: -2.968916416168213
    6. 'best' → logprob: -3.968916416168213
    7. ' result' → logprob: -4.093916416168213
    8. 'min' → logprob: -4.968916416168213
    9. ' max' → logprob: -5.718916416168213
    10. 'result' → logprob: -5.718916416168213

Token 263: '4' (ID: 19)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1380783319473267
    2. '4' → logprob: -1.3880783319473267
    3. 'budget' → logprob: -1.3880783319473267
    4. 'max' → logprob: -2.888078212738037
    5. 'total' → logprob: -3.263078212738037
    6. 'for' → logprob: -4.138078212738037
    7. 'b' → logprob: -4.263078212738037
    8. '   ' → logprob: -4.888078212738037
    9. 'q' → logprob: -5.263078212738037
    10. 'min' → logprob: -5.263078212738037

Token 264: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016218038217630237
    2. ' )' → logprob: -8.875162124633789
    3. '   ' → logprob: -11.250162124633789
    4. '#' → logprob: -12.375162124633789
    5. ')
' → logprob: -14.250162124633789
    6. ' ' → logprob: -14.375162124633789
    7. ')#' → logprob: -14.750162124633789
    8. '*' → logprob: -14.875162124633789
    9. '）' → logprob: -15.250162124633789
    10. 'def' → logprob: -15.375162124633789

Token 265: ' budget' (ID: 9946)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3657030463218689
    2. 'total' → logprob: -1.7407031059265137
    3. ' budget' → logprob: -2.8657031059265137
    4. 'Total' → logprob: -3.6157031059265137
    5. 'budget' → logprob: -3.7407031059265137
    6. ' Total' → logprob: -4.740703105926514
    7. '#' → logprob: -5.490703105926514
    8. ' cost' → logprob: -6.240703105926514
    9. 'Budget' → logprob: -6.490703105926514
    10. ' #' → logprob: -6.740703105926514

Token 266: ' b' (ID: 287)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.13158436119556427
    2. '>=' → logprob: -2.256584405899048
    3. '=' → logprob: -4.506584167480469
    4. ' =' → logprob: -5.756584167480469
    5. '>' → logprob: -6.631584167480469
    6. ':' → logprob: -7.506584167480469
    7. '-' → logprob: -8.256584167480469
    8. ')' → logprob: -8.256584167480469
    9. ' >' → logprob: -8.381584167480469
    10. ' ' → logprob: -8.506584167480469

Token 267: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34982535243034363
    2. '       ' → logprob: -2.099825382232666
    3. '
' → logprob: -2.724825382232666
    4. ':
' → logprob: -3.724825382232666
    5. ' and' → logprob: -4.474825382232666
    6. '<|end|>' → logprob: -4.849825382232666
    7. ' <=' → logprob: -5.224825382232666
    8. '   ' → logprob: -5.224825382232666
    9. ' =' → logprob: -5.349825382232666
    10. ' >=' → logprob: -5.474825382232666

Token 268: ' max' (ID: 2999)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2120846509933472
    2. ' >=' → logprob: -1.2120846509933472
    3. ' problem' → logprob: -1.8370846509933472
    4. ' total' → logprob: -3.0870847702026367
    5. 'not' → logprob: -3.2120847702026367
    6. '>=' → logprob: -3.3370847702026367
    7. ' at' → logprob: -3.4620847702026367
    8. ' enough' → logprob: -4.087084770202637
    9. ' sufficient' → logprob: -4.212084770202637
    10. ' ' → logprob: -4.837084770202637

Token 269: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08735933899879456
    2. '
' → logprob: -2.9623594284057617
    3. '<|end|>' → logprob: -4.087359428405762
    4. '        
' → logprob: -4.462359428405762
    5. '<|end|>' → logprob: -6.712359428405762
    6. ',' → logprob: -6.962359428405762
    7. '        ' → logprob: -8.462359428405762
    8. ')' → logprob: -8.837359428405762
    9. ':' → logprob: -8.962359428405762
    10. '   ' → logprob: -9.212359428405762

Token 270: ' total' (ID: 3609)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2059985399246216
    2. ' total' → logprob: -1.5809985399246216
    3. ' purchase' → logprob: -1.7059985399246216
    4. 'the' → logprob: -2.580998420715332
    5. 'purchase' → logprob: -2.955998420715332
    6. 'total' → logprob: -3.080998420715332
    7. ' buying' → logprob: -3.455998420715332
    8. ' purchasing' → logprob: -3.705998420715332
    9. ' problem' → logprob: -3.830998420715332
    10. 'problem' → logprob: -4.955998420715332

Token 271: ' purchase' (ID: 7314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.445576548576355
    2. '
' → logprob: -1.070576548576355
    3. '        
' → logprob: -4.5705766677856445
    4. '#' → logprob: -6.5705766677856445
    5. '  
' → logprob: -7.3205766677856445
    6. 'import' → logprob: -7.6955766677856445
    7. ' 
' → logprob: -7.6955766677856445
    8. '\n' → logprob: -7.9455766677856445
    9. 'n' → logprob: -8.070576667785645
    10. '   ' → logprob: -8.195576667785645

Token 272: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40641215443611145
    2. '
' → logprob: -1.156412124633789
    3. '        
' → logprob: -4.031412124633789
    4. '<|end|>' → logprob: -7.781412124633789
    5. ' 
' → logprob: -8.406412124633789
    6. ',' → logprob: -9.031412124633789
    7. '  
' → logprob: -9.031412124633789
    8. '\n' → logprob: -9.156412124633789
    9. '#' → logprob: -9.656412124633789
    10. '```' → logprob: -9.781412124633789

Token 273: ' c' (ID: 274)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.18694455921649933
    2. 'problem' → logprob: -1.811944603919983
    3. ' (' → logprob: -5.811944484710693
    4. '(problem' → logprob: -6.061944484710693
    5. ' price' → logprob: -7.311944484710693
    6. 'price' → logprob: -8.561944961547852
    7. '(' → logprob: -8.686944961547852
    8. ' self' → logprob: -8.811944961547852
    9. '   ' → logprob: -9.061944961547852
    10. '```' → logprob: -9.311944961547852

Token 274: '1' (ID: 16)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.5641099214553833
    2. '1' → logprob: -1.3141099214553833
    3. '_' → logprob: -2.3141098022460938
    4. 'ost' → logprob: -3.9391098022460938
    5. '_problem' → logprob: -4.689109802246094
    6. '(problem' → logprob: -4.939109802246094
    7. '   ' → logprob: -5.189109802246094
    8. '_total' → logprob: -5.189109802246094
    9. ' problem' → logprob: -6.064109802246094
    10. '       ' → logprob: -6.564109802246094

Token 275: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1821802854537964
    2. '*' → logprob: -1.8071802854537964
    3. '1' → logprob: -7.557180404663086
    4. '*(' → logprob: -7.682180404663086
    5. ' ' → logprob: -8.057180404663086
    6. ')' → logprob: -8.307180404663086
    7. '   ' → logprob: -8.682180404663086
    8. '```' → logprob: -8.932180404663086
    9. ',' → logprob: -9.182180404663086
    10. ' ' → logprob: -9.432180404663086

Token 276: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8246440887451172
    2. 'q' → logprob: -1.4496440887451172
    3. 'x' → logprob: -2.199644088745117
    4. 'A' → logprob: -2.824644088745117
    5. 'problem' → logprob: -2.824644088745117
    6. ' q' → logprob: -3.449644088745117
    7. ' a' → logprob: -3.949644088745117
    8. ' x' → logprob: -4.074644088745117
    9. ' problem' → logprob: -4.449644088745117
    10. ' A' → logprob: -5.824644088745117

Token 277: 'izu' (ID: 75080)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05241607502102852
    2. '+' → logprob: -3.3024160861968994
    3. ' *' → logprob: -5.80241584777832
    4. ' ' → logprob: -6.30241584777832
    5. '_' → logprob: -6.55241584777832
    6. '*' → logprob: -7.30241584777832
    7. '   ' → logprob: -7.42741584777832
    8. '_amount' → logprob: -7.42741584777832
    9. 'a' → logprob: -7.55241584777832
    10. 'mt' → logprob: -7.55241584777832

Token 278: ' +' (ID: 659)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2062921524047852
    2. ' +' → logprob: -1.4562921524047852
    3. ' *' → logprob: -1.7062921524047852
    4. '_a' → logprob: -1.8312921524047852
    5. '*' → logprob: -3.081292152404785
    6. 'a' → logprob: -3.956292152404785
    7. '_qty' → logprob: -4.206292152404785
    8. '+' → logprob: -4.706292152404785
    9. '_quantity' → logprob: -4.956292152404785
    10. '_amount' → logprob: -5.331292152404785

Token 279: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.35123440623283386
    2. ' price' → logprob: -1.8512344360351562
    3. 'c' → logprob: -2.4762344360351562
    4. 'price' → logprob: -3.3512344360351562
    5. ' problem' → logprob: -4.351234436035156
    6. '"' → logprob: -6.101234436035156
    7. 'problem' → logprob: -6.726234436035156
    8. ''' → logprob: -6.726234436035156
    9. ' ' → logprob: -7.101234436035156
    10. ' self' → logprob: -7.976234436035156

Token 280: '2' (ID: 17)
  Prédit: '_normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.30405426025390625
    2. 'price' → logprob: -1.8040542602539062
    3. '_price' → logprob: -3.1790542602539062
    4. 'normal' → logprob: -4.179054260253906
    5. '_' → logprob: -4.429054260253906
    6. '2' → logprob: -4.679054260253906
    7. '1' → logprob: -4.804054260253906
    8. ' _' → logprob: -5.679054260253906
    9. '_norm' → logprob: -5.929054260253906
    10. ' price' → logprob: -6.679054260253906

Token 281: ' *' (ID: 425)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.18261516094207764
    2. '_' → logprob: -2.807615280151367
    3. ' _' → logprob: -3.182615280151367
    4. 'a' → logprob: -4.432615280151367
    5. '_me' → logprob: -4.932615280151367
    6. '_max' → logprob: -5.182615280151367
    7. ' a' → logprob: -5.307615280151367
    8. '_ch' → logprob: -5.807615280151367
    9. '_normal' → logprob: -5.932615280151367
    10. ')' → logprob: -5.932615280151367

Token 282: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.42898979783058167
    2. ' normal' → logprob: -1.0539897680282593
    3. '(normal' → logprob: -9.55398941040039
    4. '(' → logprob: -10.05398941040039
    5. 'norm' → logprob: -10.30398941040039
    6. '_normal' → logprob: -10.42898941040039
    7. ' (' → logprob: -11.05398941040039
    8. ''' → logprob: -11.05398941040039
    9. '"' → logprob: -11.74148941040039
    10. 'Normal' → logprob: -11.74148941040039

Token 283: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18387509882450104
    2. '
' → logprob: -1.8088750839233398
    3. '        
' → logprob: -5.55887508392334
    4. ' 
' → logprob: -9.68387508392334
    5. ',' → logprob: -10.55887508392334
    6. '  
' → logprob: -10.55887508392334
    7. '    
' → logprob: -10.93387508392334
    8. '   ' → logprob: -10.93387508392334
    9. '       
' → logprob: -11.05887508392334
    10. '<|end|>' → logprob: -11.05887508392334

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033607007935643196
    2. '
' → logprob: -6.378360748291016
    3. '        
' → logprob: -6.628360748291016
    4. ' 
' → logprob: -9.503360748291016
    5. '        ' → logprob: -10.003360748291016
    6. ' n' → logprob: -10.378360748291016
    7. 'n' → logprob: -10.503360748291016
    8. '```' → logprob: -11.003360748291016
    9. '  
' → logprob: -11.128360748291016
    10. '#' → logprob: -11.128360748291016

Token 285: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034015752375125885
    2. '
' → logprob: -3.534015655517578
    3. '        
' → logprob: -6.534015655517578
    4. 'a' → logprob: -7.159015655517578
    5. ' a' → logprob: -7.409015655517578
    6. ' 
' → logprob: -7.659015655517578
    7. 'n' → logprob: -8.659015655517578
    8. '#' (adapté à ' #') → logprob: -9.034015655517578
    9. '  
' → logprob: -9.159015655517578
    10. '```' → logprob: -9.659015655517578

Token 286: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09453292191028595
    2. ' best' → logprob: -3.2195329666137695
    3. ' min' → logprob: -3.8445329666137695
    4. '
' → logprob: -4.4695329666137695
    5. ' a' → logprob: -5.8445329666137695
    6. 'best' → logprob: -5.9695329666137695
    7. ' n' → logprob: -6.5945329666137695
    8. ' #' → logprob: -6.8445329666137695
    9. ' def' → logprob: -6.9695329666137695
    10. 'def' → logprob: -6.9695329666137695

Token 287: '5' (ID: 20)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.7946842908859253
    2. 'min' → logprob: -0.9196842908859253
    3. '#' → logprob: -3.044684410095215
    4. ' min' → logprob: -3.294684410095215
    5. '       ' → logprob: -4.044684410095215
    6. ' best' → logprob: -4.419684410095215
    7. 'result' → logprob: -4.419684410095215
    8. 'a' → logprob: -5.169684410095215
    9. 'n' → logprob: -5.669684410095215
    10. 'q' → logprob: -5.794684410095215

Token 288: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036174089182168245
    2. ' )' → logprob: -5.753617286682129
    3. '       ' → logprob: -9.253617286682129
    4. '#' → logprob: -9.753617286682129
    5. ')
' → logprob: -9.878617286682129
    6. 'def' → logprob: -10.003617286682129
    7. '   ' → logprob: -10.128617286682129
    8. ')#' → logprob: -10.628617286682129
    9. '
' → logprob: -10.878617286682129
    10. '        ' → logprob: -11.003617286682129

Token 289: ' maximize' (ID: 44207)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.288626790046692
    2. 'We' → logprob: -1.913626790046692
    3. ' min' → logprob: -2.4136266708374023
    4. ' #' → logprob: -2.6636266708374023
    5. 'from' → logprob: -3.1636266708374023
    6. '       ' → logprob: -3.2886266708374023
    7. ' for' → logprob: -3.5386266708374023
    8. ' a' → logprob: -3.5386266708374023
    9. ' We' → logprob: -3.9136266708374023
    10. 'Try' → logprob: -3.9136266708374023

Token 290: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2227097451686859
    2. 'a' → logprob: -1.9727097749710083
    3. ' the' → logprob: -3.3477096557617188
    4. ' total' → logprob: -4.347709655761719
    5. 'total' → logprob: -5.972709655761719
    6. 'the' → logprob: -6.097709655761719
    7. '    ' → logprob: -6.722709655761719
    8. '   ' → logprob: -6.847709655761719
    9. ' ' → logprob: -6.847709655761719
    10. ' amount' → logprob: -7.597709655761719

Token 291: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.45575007796287537
    2. '_' → logprob: -1.4557501077651978
    3. '_i' → logprob: -2.830749988555908
    4. '_a' → logprob: -3.080749988555908
    5. '   ' → logprob: -4.580749988555908
    6. ')' → logprob: -5.955749988555908
    7. ' _' → logprob: -5.955749988555908
    8. ' =' → logprob: -6.330749988555908
    9. ' ' → logprob: -6.705749988555908
    10. '  ' → logprob: -6.955749988555908

Token 292: ' chicken' (ID: 21663)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6204184293746948
    2. '       ' → logprob: -0.8704184293746948
    3. '        
' → logprob: -3.2454185485839844
    4. ',' → logprob: -6.370418548583984
    5. '```' → logprob: -7.745418548583984
    6. ':' → logprob: -7.870418548583984
    7. ' 
' → logprob: -8.495418548583984
    8. '  
' → logprob: -8.620418548583984
    9. '
' → logprob: -8.620418548583984
    10. '   ' → logprob: -8.745418548583984

Token 293: ' quantity' (ID: 17245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19005857408046722
    2. '
' → logprob: -1.8150585889816284
    3. '        
' → logprob: -4.690058708190918
    4. ' 
' → logprob: -8.690058708190918
    5. '  
' → logprob: -8.815058708190918
    6. ',' → logprob: -9.065058708190918
    7. ':' → logprob: -9.190058708190918
    8. '```' → logprob: -9.315058708190918
    9. '    
' → logprob: -9.690058708190918
    10. '
' → logprob: -9.690058708190918

Token 294: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10672926902770996
    2. '
' → logprob: -2.35672926902771
    3. '        
' → logprob: -5.231729507446289
    4. ' 
' → logprob: -7.981729507446289
    5. '  
' → logprob: -8.731729507446289
    6. ',' → logprob: -8.981729507446289
    7. 'n' → logprob: -9.106729507446289
    8. ':' → logprob: -9.731729507446289
    9. '\n' → logprob: -9.981729507446289
    10. '    
' → logprob: -10.231729507446289

Token 295: '<=' (ID: 16672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7649115324020386
    2. ')
' → logprob: -2.389911651611328
    3. 'problem' → logprob: -2.389911651611328
    4. 'within' → logprob: -2.639911651611328
    5. 'a' → logprob: -2.889911651611328
    6. '#' → logprob: -3.014911651611328
    7. '),' → logprob: -3.139911651611328
    8. ' problem' → logprob: -3.139911651611328
    9. ' within' → logprob: -3.264911651611328
    10. 'while' → logprob: -3.389911651611328

Token 296: ' limit' (ID: 5967)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.05622827634215355
    2. ' problem' → logprob: -2.9312281608581543
    3. 'limit' → logprob: -6.681228160858154
    4. ' limit' → logprob: -9.431228637695312
    5. '(problem' → logprob: -12.681228637695312
    6. 'self' → logprob: -13.806228637695312
    7. 'proble' → logprob: -13.931228637695312
    8. 'q' → logprob: -14.056228637695312
    9. '```' → logprob: -14.431228637695312
    10. 'Problem' → logprob: -14.556228637695312

Token 297: ')
' (ID: 446)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0006743087433278561
    2. ')' → logprob: -7.500674247741699
    3. '_)' → logprob: -10.0006742477417
    4. '_' → logprob: -10.1256742477417
    5. ')
' → logprob: -11.8756742477417
    6. 'a' → logprob: -12.1256742477417
    7. '_
' → logprob: -12.6256742477417
    8. ' _' → logprob: -12.6256742477417
    9. '   ' → logprob: -12.7506742477417
    10. ')_' → logprob: -13.0006742477417

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03032529726624489
    2. '
' → logprob: -4.030325412750244
    3. '        
' → logprob: -4.530325412750244
    4. ' 
' → logprob: -7.405325412750244
    5. '\n' → logprob: -9.280324935913086
    6. '        ' → logprob: -9.405324935913086
    7. '  
' → logprob: -9.530324935913086
    8. '       
' → logprob: -9.530324935913086
    9. '   ' → logprob: -10.155324935913086
    10. '    
' → logprob: -10.155324935913086

Token 299: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05925830081105232
    2. '
' → logprob: -3.059258222579956
    3. ' 
' → logprob: -5.684258460998535
    4. '        
' → logprob: -5.809258460998535
    5. 'a' → logprob: -6.559258460998535
    6. ' a' → logprob: -7.184258460998535
    7. 'n' → logprob: -7.434258460998535
    8. '\n' → logprob: -8.059258460998535
    9. '  
' → logprob: -8.309258460998535
    10. '```' → logprob: -8.934258460998535

Token 300: ' ' (ID: 220)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.5296528339385986
    2. '       ' → logprob: -2.0296528339385986
    3. ' best' → logprob: -2.0296528339385986
    4. ' q' → logprob: -2.0296528339385986
    5. ' for' → logprob: -2.5296528339385986
    6. ' max' → logprob: -2.6546528339385986
    7. 'best' → logprob: -2.9046528339385986
    8. ' a' → logprob: -3.5296528339385986
    9. 'q' → logprob: -3.7796528339385986
    10. 'a' → logprob: -3.7796528339385986

Token 301: '6' (ID: 21)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6393088102340698
    2. 'min' → logprob: -0.8893088102340698
    3. 'max' → logprob: -3.5143089294433594
    4. 'q' → logprob: -4.639308929443359
    5. ' min' → logprob: -5.014308929443359
    6. 'result' → logprob: -5.514308929443359
    7. 'a' → logprob: -5.889308929443359
    8. ' best' → logprob: -6.139308929443359
    9. '#' → logprob: -6.514308929443359
    10. 'for' → logprob: -6.639308929443359

Token 302: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009124781005084515
    2. ' )' → logprob: -5.259124755859375
    3. '       ' → logprob: -5.759124755859375
    4. '        ' → logprob: -8.134124755859375
    5. '    ' → logprob: -8.884124755859375
    6. 'def' → logprob: -9.509124755859375
    7. '   ' → logprob: -9.634124755859375
    8. '#' → logprob: -10.884124755859375
    9. ' ' → logprob: -11.009124755859375
    10. ',' → logprob: -11.009124755859375

Token 303: ' maximize' (ID: 44207)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0551644563674927
    2. 'for' → logprob: -1.5551644563674927
    3. '#' → logprob: -1.9301644563674927
    4. ' min' → logprob: -2.430164337158203
    5. ' best' → logprob: -3.305164337158203
    6. 'min' → logprob: -3.555164337158203
    7. '       ' → logprob: -3.805164337158203
    8. ' #' → logprob: -3.930164337158203
    9. 'Try' → logprob: -4.680164337158203
    10. 'We' → logprob: -4.805164337158203

Token 304: ' normal' (ID: 6078)
  Prédit: ' normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.42345935106277466
    2. 'normal' → logprob: -1.5484592914581299
    3. ' a' → logprob: -2.54845929145813
    4. 'a' → logprob: -3.17345929145813
    5. ' total' → logprob: -4.798459529876709
    6. 'total' → logprob: -6.048459529876709
    7. ' the' → logprob: -7.548459529876709
    8. ' problem' → logprob: -7.923459529876709
    9. '   ' → logprob: -8.29845905303955
    10. ' ' → logprob: -8.29845905303955

Token 305: ' chicken' (ID: 21663)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.493941068649292
    2. '_' → logprob: -1.618941068649292
    3. '_quantity' → logprob: -2.118941068649292
    4. '   ' → logprob: -3.993941068649292
    5. '_ch' → logprob: -4.368941307067871
    6. '       ' → logprob: -4.868941307067871
    7. '_me' → logprob: -4.993941307067871
    8. 'a' → logprob: -5.368941307067871
    9. '_normal' → logprob: -5.743941307067871
    10. ' _' → logprob: -5.993941307067871

Token 306: ' quantity' (ID: 17245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07004313915967941
    2. '
' → logprob: -3.0700430870056152
    3. '        
' → logprob: -4.320043087005615
    4. ':' → logprob: -6.195043087005615
    5. '   ' → logprob: -6.320043087005615
    6. ',' → logprob: -7.070043087005615
    7. '\n' → logprob: -7.570043087005615
    8. ':
' → logprob: -8.195043563842773
    9. '  
' → logprob: -8.320043563842773
    10. '<|end|>' → logprob: -8.320043563842773

Token 307: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15956997871398926
    2. '
' → logprob: -2.0345699787139893
    3. '        
' → logprob: -4.15956974029541
    4. ',' → logprob: -7.90956974029541
    5. '  
' → logprob: -9.03456974029541
    6. ':' → logprob: -9.28456974029541
    7. ' 
' → logprob: -9.65956974029541
    8. '    
' → logprob: -9.90956974029541
    9. '<|end|>' → logprob: -10.03456974029541
    10. '       
' → logprob: -10.15956974029541

Token 308: ' leftover' (ID: 97990)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6800004243850708
    2. 'the' → logprob: -2.0550003051757812
    3. ' the' → logprob: -2.1800003051757812
    4. ' remaining' → logprob: -2.5550003051757812
    5. 'remaining' → logprob: -2.5550003051757812
    6. 'a' → logprob: -3.0550003051757812
    7. ' same' → logprob: -4.555000305175781
    8. ' given' → logprob: -4.680000305175781
    9. ' a' → logprob: -5.180000305175781
    10. 'same' → logprob: -5.680000305175781

Token 309: ' budget' (ID: 9946)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2297700047492981
    2. '
' → logprob: -1.8547699451446533
    3. ':' → logprob: -4.104770183563232
    4. '        
' → logprob: -4.354770183563232
    5. ' 
' → logprob: -4.979770183563232
    6. '\n' → logprob: -5.229770183563232
    7. '   ' → logprob: -6.979770183563232
    8. '  
' → logprob: -7.104770183563232
    9. ':
' → logprob: -7.354770183563232
    10. '<|end|>' → logprob: -7.479770183563232

Token 310: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.592168927192688
    2. '
' → logprob: -0.842168927192688
    3. '        
' → logprob: -4.342168807983398
    4. ' 
' → logprob: -7.342168807983398
    5. '\n' → logprob: -7.467168807983398
    6. 'n' → logprob: -7.592168807983398
    7. '  
' → logprob: -7.717168807983398
    8. '    
' → logprob: -8.342168807983398
    9. '\' → logprob: -9.092168807983398
    10. ',' → logprob: -9.717168807983398

Token 311: ' buying' (ID: 12398)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2873601913452148
    2. 'a' → logprob: -1.6623601913452148
    3. 'buy' → logprob: -1.7873601913452148
    4. '#' → logprob: -2.162360191345215
    5. 'p' → logprob: -2.537360191345215
    6. ' maximizing' → logprob: -2.912360191345215
    7. ' buying' → logprob: -3.412360191345215
    8. 'cho' → logprob: -3.787360191345215
    9. 'select' → logprob: -4.162360191345215
    10. ' purchasing' → logprob: -4.662360191345215

Token 312: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0664391964673996
    2. '        
' → logprob: -3.691439151763916
    3. '
' → logprob: -3.941439151763916
    4. '   ' → logprob: -5.691439151763916
    5. ' 
' → logprob: -5.816439151763916
    6. ',' → logprob: -6.066439151763916
    7. '\n' → logprob: -6.816439151763916
    8. ')' → logprob: -6.941439151763916
    9. '        ' → logprob: -7.066439151763916
    10. ' ' → logprob: -7.191439151763916

Token 313: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.5354576706886292
    2. '_' → logprob: -1.2854576110839844
    3. 'i' → logprob: -3.2854576110839844
    4. '1' → logprob: -4.410457611083984
    5. 'iz' → logprob: -4.410457611083984
    6. ' _' → logprob: -4.410457611083984
    7. '_i' → logprob: -4.410457611083984
    8. ' ' → logprob: -4.660457611083984
    9. '```' → logprob: -5.472957611083984
    10. '   ' → logprob: -5.535457611083984

Token 314: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14467984437942505
    2. '
' → logprob: -2.1446797847747803
    3. '        
' → logprob: -4.269680023193359
    4. ' 
' → logprob: -6.644680023193359
    5. 'n' → logprob: -7.644680023193359
    6. '\n' → logprob: -7.769680023193359
    7. ':' → logprob: -8.26968002319336
    8. '  
' → logprob: -8.39468002319336
    9. '    
' → logprob: -8.76968002319336
    10. ':
' → logprob: -9.26968002319336

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024599602911621332
    2. '
' → logprob: -6.12746000289917
    3. '        
' → logprob: -8.377459526062012
    4. 'a' → logprob: -11.377459526062012
    5. 'n' → logprob: -11.877459526062012
    6. '   ' → logprob: -12.377459526062012
    7. '       
' → logprob: -12.752459526062012
    8. ' 
' → logprob: -12.877459526062012
    9. '      ' → logprob: -13.002459526062012
    10. '        ' → logprob: -13.127459526062012

Token 316: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.46872878074646
    2. 'a' → logprob: -1.71872878074646
    3. 'best' → logprob: -1.84372878074646
    4. 'max' → logprob: -2.09372878074646
    5. ' min' → logprob: -2.46872878074646
    6. 'min' → logprob: -2.59372878074646
    7. ' q' → logprob: -3.09372878074646
    8. ' max' → logprob: -3.21872878074646
    9. ' best' → logprob: -3.59372878074646
    10. ' a' → logprob: -5.093729019165039

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005209682509303093
    2. ' =' → logprob: -5.380209445953369
    3. '=' → logprob: -7.880209445953369
    4. '_' → logprob: -9.380209922790527
    5. 'u' → logprob: -9.380209922790527
    6. '=q' → logprob: -11.880209922790527
    7. '```' → logprob: -12.130209922790527
    8. 'q' → logprob: -12.255209922790527
    9. ' ' → logprob: -12.380209922790527
    10. '   ' → logprob: -12.880209922790527

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1231401115655899
    2. '=' → logprob: -2.9981400966644287
    3. ',' → logprob: -3.1231400966644287
    4. ' >=' → logprob: -5.123140335083008
    5. ' ' → logprob: -5.248140335083008
    6. ' <=' → logprob: -5.373140335083008
    7. ' ,' → logprob: -5.998140335083008
    8. ')' → logprob: -6.373140335083008
    9. '        ' → logprob: -7.873140335083008
    10. ' >' → logprob: -7.873140335083008

Token 319: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.4740789234638214
    2. ' problem' → logprob: -0.974078893661499
    3. '       ' → logprob: -13.349079132080078
    4. '(problem' → logprob: -15.224079132080078
    5. '        ' → logprob: -16.599079132080078
    6. 'proble' → logprob: -17.099079132080078
    7. '_problem' → logprob: -17.724079132080078
    8. '.problem' → logprob: -17.974079132080078
    9. '   ' → logprob: -18.599079132080078
    10. ' proble' → logprob: -18.724079132080078

Token 320: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -12.87500286102295
    3. '.max' → logprob: -15.37500286102295
    4. ' .' → logprob: -15.87500286102295
    5. 'min' → logprob: -16.500003814697266
    6. '.minimum' → logprob: -16.750003814697266
    7. '	min' → logprob: -19.375003814697266
    8. '.m' → logprob: -19.500003814697266
    9. '.mean' → logprob: -20.125003814697266
    10. '.me' → logprob: -20.625003814697266

Token 321: '_quantity' (ID: 73348)
  Prédit: '_quantity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -6.704273118884885e-07
    2. 'quantity' → logprob: -14.500000953674316
    3. 'Quantity' → logprob: -16.5
    4. '_' → logprob: -18.75
    5. '_quant' → logprob: -19.125
    6. ' quantity' → logprob: -21.125
    7. '_quality' → logprob: -21.25
    8. '_q' → logprob: -21.625
    9. '_purchase' → logprob: -21.625
    10. ' _' → logprob: -21.875

Token 322: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18798869848251343
    2. '        
' → logprob: -2.812988758087158
    3. 'q' → logprob: -3.062988758087158
    4. '       ' → logprob: -3.687988758087158
    5. ',' → logprob: -4.187988758087158
    6. ' 
' → logprob: -4.687988758087158
    7. 'b' → logprob: -5.312988758087158
    8. '        ' → logprob: -6.062988758087158
    9. ',q' → logprob: -6.062988758087158
    10. ' q' → logprob: -6.562988758087158

Token 323: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7174944281578064
    2. 'b' → logprob: -0.9674944281578064
    3. ' budget' → logprob: -2.592494487762451
    4. 'budget' → logprob: -3.842494487762451
    5. '       ' → logprob: -4.342494487762451
    6. 'q' → logprob: -5.217494487762451
    7. ' q' → logprob: -5.467494487762451
    8. ' 
' → logprob: -5.717494487762451
    9. '        
' → logprob: -5.842494487762451
    10. '        ' → logprob: -6.342494487762451

Token 324: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.002679463941603899
    2. 'q' → logprob: -6.502679347991943
    3. 'budget' → logprob: -6.752679347991943
    4. ' b' → logprob: -12.502679824829102
    5. 'self' → logprob: -13.252679824829102
    6. '       ' → logprob: -14.252679824829102
    7. '
' → logprob: -14.377679824829102
    8. '   ' → logprob: -15.002679824829102
    9. 'qb' → logprob: -15.377679824829102
    10. ' budget' → logprob: -15.502679824829102

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018189044669270515
    2. '=' → logprob: -4.018188953399658
    3. '        ' → logprob: -11.143189430236816
    4. ',' → logprob: -11.643189430236816
    5. '<|end|>' → logprob: -11.893189430236816
    6. ' ' → logprob: -12.518189430236816
    7. ' ,' → logprob: -13.643189430236816
    8. ')' → logprob: -14.518189430236816
    9. 'space' → logprob: -14.643189430236816
    10. '.' → logprob: -14.643189430236816

Token 326: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.07888978719711304
    2. ' problem' → logprob: -2.578889846801758
    3. '(problem' → logprob: -17.203889846801758
    4. 'proble' → logprob: -18.453889846801758
    5. 'prob' → logprob: -19.453889846801758
    6. 'pro' → logprob: -20.453889846801758
    7. '       ' → logprob: -20.578889846801758
    8. 'Problem' → logprob: -20.703889846801758
    9. '.problem' → logprob: -20.828889846801758
    10. '   ' → logprob: -21.703889846801758

Token 327: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.002587073715403676
    2. '.' → logprob: -6.002586841583252
    3. ' .' → logprob: -9.12758731842041
    4. 'budget' → logprob: -13.87758731842041
    5. '.price' → logprob: -14.62758731842041
    6. '.B' → logprob: -15.00258731842041
    7. '.
' → logprob: -16.377586364746094
    8. ' budget' → logprob: -16.502586364746094
    9. '_budget' → logprob: -16.502586364746094
    10. '.buy' → logprob: -16.627586364746094

Token 328: 'udget' (ID: 36671)
  Prédit: 'udget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udget' → logprob: -0.0028363727033138275
    2. ',' → logprob: -6.627836227416992
    3. 'ud' → logprob: -7.627836227416992
    4. 'udge' → logprob: -7.627836227416992
    5. '       ' → logprob: -9.127836227416992
    6. '        ' → logprob: -9.502836227416992
    7. ' ' → logprob: -9.627836227416992
    8. '<|end|>' → logprob: -9.752836227416992
    9. ')' → logprob: -10.252836227416992
    10. 'budget' → logprob: -10.502836227416992

Token 329: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3886406421661377
    2. '       ' → logprob: -2.1386406421661377
    3. ',' → logprob: -3.1386406421661377
    4. '
' → logprob: -3.3886406421661377
    5. '        
' → logprob: -3.3886406421661377
    6. 'q' → logprob: -4.013640403747559
    7. '        ' → logprob: -4.138640403747559
    8. ' ' → logprob: -4.138640403747559
    9. ' q' → logprob: -4.388640403747559
    10. '         
' → logprob: -4.888640403747559

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3527607023715973
    2. ' price' → logprob: -2.2277607917785645
    3. ' c' → logprob: -2.2277607917785645
    4. '        ' → logprob: -3.6027607917785645
    5. ' q' → logprob: -3.9777607917785645
    6. 'price' → logprob: -4.1027607917785645
    7. 'c' → logprob: -4.7277607917785645
    8. 'q' → logprob: -5.1027607917785645
    9. ' p' → logprob: -6.6027607917785645
    10. ' ' → logprob: -7.8527607917785645

Token 331: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.005429289303719997
    2. 'price' → logprob: -6.255429267883301
    3. 'q' → logprob: -6.380429267883301
    4. 'p' → logprob: -6.505429267883301
    5. '       ' → logprob: -9.1304292678833
    6. 'a' → logprob: -9.1304292678833
    7. ' c' → logprob: -9.5054292678833
    8. ' price' → logprob: -13.0054292678833
    9. 'qa' → logprob: -13.5054292678833
    10. 'pa' → logprob: -13.8804292678833

Token 332: '1' (ID: 16)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.21966955065727234
    2. '1' → logprob: -1.7196695804595947
    3. '_' → logprob: -4.344669342041016
    4. 'a' → logprob: -5.844669342041016
    5. '_price' → logprob: -7.594669342041016
    6. '=' → logprob: -7.719669342041016
    7. 'price' → logprob: -7.844669342041016
    8. ' =' → logprob: -7.969669342041016
    9. '_ai' → logprob: -8.844669342041016
    10. '_i' → logprob: -9.094669342041016

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012535199522972107
    2. '=' → logprob: -4.387535095214844
    3. '<|end|>' → logprob: -11.387535095214844
    4. ' ' → logprob: -11.637535095214844
    5. ',' → logprob: -12.637535095214844
    6. '<|end|>' → logprob: -14.387535095214844
    7. ' =)' → logprob: -15.137535095214844
    8. ' =
' → logprob: -15.637535095214844
    9. 'space' → logprob: -15.762535095214844
    10. ' ,' → logprob: -16.012535095214844

Token 334: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.0024756586644798517
    2. ' problem' → logprob: -6.002475738525391
    3. '(problem' → logprob: -19.50247573852539
    4. 'proble' → logprob: -20.12747573852539
    5. 'prob' → logprob: -21.87747573852539
    6. 'Problem' → logprob: -22.50247573852539
    7. '.problem' → logprob: -22.50247573852539
    8. 'pro' → logprob: -22.50247573852539
    9. '_problem' → logprob: -23.50247573852539
    10. 'project' → logprob: -25.75247573852539

Token 335: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.0005940204137004912
    2. '.' → logprob: -7.750594139099121
    3. '.problem' → logprob: -9.875594139099121
    4. '.a' → logprob: -10.000594139099121
    5. '._' → logprob: -11.125594139099121
    6. ' .' → logprob: -11.250594139099121
    7. '_a' → logprob: -11.375594139099121
    8. 'price' → logprob: -12.125594139099121
    9. '_.' → logprob: -12.500594139099121
    10. 'A' → logprob: -12.750594139099121

Token 336: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00015586259542033076
    2. 'a' → logprob: -9.000155448913574
    3. '_' → logprob: -10.375155448913574
    4. '_ai' → logprob: -14.875155448913574
    5. '_price' → logprob: -15.625155448913574
    6. ' _' → logprob: -16.25015640258789
    7. '\' → logprob: -16.75015640258789
    8. 'A' → logprob: -16.87515640258789
    9. '_e' → logprob: -17.00015640258789
    10. ')_' → logprob: -17.37515640258789

Token 337: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.0008678716840222478
    2. 'zu' → logprob: -7.50086784362793
    3. 'iz' → logprob: -8.87586784362793
    4. 'uzu' → logprob: -10.25086784362793
    5. ' ' → logprob: -10.37586784362793
    6. '_' → logprob: -10.62586784362793
    7. 'i' → logprob: -10.75086784362793
    8. 'a' → logprob: -11.87586784362793
    9. ' iz' → logprob: -12.00086784362793
    10. 'z' → logprob: -12.25086784362793

Token 338: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.17091216146945953
    2. 'c' → logprob: -3.170912265777588
    3. '       ' → logprob: -3.295912265777588
    4. ' ' → logprob: -3.670912265777588
    5. '        
' → logprob: -3.795912265777588
    6. ' c' → logprob: -4.295912265777588
    7. ',' → logprob: -4.795912265777588
    8. '        ' → logprob: -6.170912265777588
    9. '
' → logprob: -6.545912265777588
    10. '         
' → logprob: -6.795912265777588

Token 339: '       ' (ID: 309)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08514846116304398
    2. 'c' → logprob: -3.085148572921753
    3. ' ' → logprob: -3.335148572921753
    4. ' 
' → logprob: -8.960148811340332
    5. ' ' → logprob: -10.335148811340332
    6. '       ' → logprob: -10.460148811340332
    7. '        ' → logprob: -10.460148811340332
    8. '	c' → logprob: -10.585148811340332
    9. '    ' → logprob: -11.835148811340332
    10. ' )' → logprob: -12.210148811340332

Token 340: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0488002672791481
    2. ' c' → logprob: -3.048800230026245
    3. ' ' → logprob: -8.923800468444824
    4. '        ' → logprob: -9.923800468444824
    5. 'price' → logprob: -11.548800468444824
    6. '    ' → logprob: -12.048800468444824
    7. '       ' → logprob: -12.173800468444824
    8. ' 
' → logprob: -13.048800468444824
    9. '	c' → logprob: -13.048800468444824
    10. ' ' → logprob: -13.173800468444824

Token 341: '2' (ID: 17)
  Prédit: '_normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.5155704617500305
    2. '2' → logprob: -1.0155704021453857
    3. '_' → logprob: -3.7655704021453857
    4. '=' → logprob: -5.515570640563965
    5. 'price' → logprob: -5.640570640563965
    6. ' =' → logprob: -5.765570640563965
    7. 'Normal' → logprob: -6.390570640563965
    8. '_price' → logprob: -6.390570640563965
    9. ',' → logprob: -7.390570640563965
    10. 'normal' → logprob: -7.640570640563965

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044705986976624
    2. '=' → logprob: -3.2880446910858154
    3. '<|end|>' → logprob: -13.288044929504395
    4. ' ' → logprob: -13.913044929504395
    5. ',' → logprob: -15.163044929504395
    6. ')' → logprob: -15.913044929504395
    7. ' =
' → logprob: -16.163043975830078
    8. '<|end|>' → logprob: -16.663043975830078
    9. ' =)' → logprob: -16.913043975830078
    10. '.' → logprob: -17.663043975830078

Token 343: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.0019286326132714748
    2. ' problem' → logprob: -6.251928806304932
    3. '(problem' → logprob: -18.876928329467773
    4. 'proble' → logprob: -21.251928329467773
    5. 'prob' → logprob: -21.501928329467773
    6. 'Problem' → logprob: -22.001928329467773
    7. '.problem' → logprob: -22.626928329467773
    8. 'pro' → logprob: -22.876928329467773
    9. 'project' → logprob: -23.001928329467773
    10. '_problem' → logprob: -24.001928329467773

Token 344: '.price' (ID: 31587)
  Prédit: '.price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.price' → logprob: -0.00879183504730463
    2. 'price' → logprob: -4.758791923522949
    3. ' price' → logprob: -9.13379192352295
    4. '.' → logprob: -10.13379192352295
    5. ' .' → logprob: -11.25879192352295
    6. '_price' → logprob: -12.00879192352295
    7. '	price' → logprob: -12.38379192352295
    8. '.normal' → logprob: -13.50879192352295
    9. ',' → logprob: -13.63379192352295
    10. '.space' → logprob: -14.00879192352295

Token 345: '_normal' (ID: 30994)
  Prédit: '_normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_normal' → logprob: -0.0008364312816411257
    2. 'normal' → logprob: -7.125836372375488
    3. 'Normal' → logprob: -10.625836372375488
    4. '_' → logprob: -13.125836372375488
    5. 'a' → logprob: -13.375836372375488
    6. '_NORMAL' → logprob: -13.500836372375488
    7. '_Normal' → logprob: -15.000836372375488
    8. 'c' → logprob: -15.125836372375488
    9. '```' → logprob: -15.625836372375488
    10. ' normal' → logprob: -15.625836372375488

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6343589425086975
    2. 'q' → logprob: -2.0093588829040527
    3. ' q' → logprob: -2.5093588829040527
    4. '
' → logprob: -2.6343588829040527
    5. '        
' → logprob: -3.0093588829040527
    6. ' for' → logprob: -3.0093588829040527
    7. 'a' → logprob: -3.6343588829040527
    8. ' limit' → logprob: -4.259358882904053
    9. 'for' → logprob: -4.759358882904053
    10. 'limit' → logprob: -5.009358882904053

Token 347: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6779072880744934
    2. ' q' → logprob: -1.6779072284698486
    3. 'limit' → logprob: -1.6779072284698486
    4. ' limit' → logprob: -2.4279072284698486
    5. 'a' → logprob: -4.927907466888428
    6. '
' → logprob: -5.177907466888428
    7. '       ' → logprob: -5.177907466888428
    8. '	q' → logprob: -6.552907466888428
    9. ' for' → logprob: -6.677907466888428
    10. ' a' → logprob: -6.677907466888428

Token 348: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.009567305445671082
    2. 'limit' → logprob: -4.8845672607421875
    3. 'l' → logprob: -6.3845672607421875
    4. 'max' → logprob: -9.009567260742188
    5. ' q' → logprob: -9.509567260742188
    6. 'lim' → logprob: -11.009567260742188
    7. ' limit' → logprob: -12.134567260742188
    8. 'def' → logprob: -12.134567260742188
    9. 'ql' → logprob: -12.259567260742188
    10. 'result' → logprob: -12.572067260742188

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.927930654550437e-05
    2. 'limit' → logprob: -11.250029563903809
    3. '=' → logprob: -12.125029563903809
    4. '_limit' → logprob: -12.625029563903809
    5. '1' → logprob: -12.750029563903809
    6. ' =' → logprob: -13.625029563903809
    7. '_' → logprob: -14.750029563903809
    8. '```' → logprob: -14.875029563903809
    9. 'q' → logprob: -15.125029563903809
    10. 'a' → logprob: -15.500029563903809

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -14.77975082397461
    4. ',' → logprob: -19.02975082397461
    5. '        ' → logprob: -19.52975082397461
    6. ')' → logprob: -19.52975082397461
    7. '   ' → logprob: -19.90475082397461
    8. '    ' → logprob: -20.02975082397461
    9. '＝' → logprob: -20.15475082397461
    10. '.' → logprob: -20.40475082397461

Token 351: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.0485873706638813
    2. ' problem' → logprob: -3.0485873222351074
    3. '(problem' → logprob: -17.173587799072266
    4. 'Problem' → logprob: -18.798587799072266
    5. 'proble' → logprob: -19.548587799072266
    6. '.problem' → logprob: -19.798587799072266
    7. '_problem' → logprob: -20.548587799072266
    8. 'prob' → logprob: -20.798587799072266
    9. '       ' → logprob: -20.923587799072266
    10. '   ' → logprob: -21.298587799072266

Token 352: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -1.3856492842023727e-06
    2. 'limit' → logprob: -13.625000953674316
    3. ' .' → logprob: -16.875001907348633
    4. '.' → logprob: -17.375001907348633
    5. ' limit' → logprob: -18.000001907348633
    6. '.max' → logprob: -19.750001907348633
    7. '_limit' → logprob: -20.875001907348633
    8. '.l' → logprob: -21.250001907348633
    9. '.lock' → logprob: -21.375001907348633
    10. '(limit' → logprob: -21.500001907348633

Token 353: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.7159857786027715e-05
    2. 'a' → logprob: -10.000046730041504
    3. '_' → logprob: -14.375046730041504
    4. 'A' → logprob: -14.500046730041504
    5. '_ai' → logprob: -15.500046730041504
    6. '_me' → logprob: -16.12504768371582
    7. '_A' → logprob: -16.87504768371582
    8. '   ' → logprob: -17.00004768371582
    9. '_auc' → logprob: -17.25004768371582
    10. '```' → logprob: -17.37504768371582

Token 354: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.013252931647002697
    2. 'zu' → logprob: -4.3882527351379395
    3. 'z' → logprob: -7.8882527351379395
    4. 'a' → logprob: -9.138253211975098
    5. 'iz' → logprob: -10.013253211975098
    6. 'uzu' → logprob: -10.013253211975098
    7. 'ziu' → logprob: -10.263253211975098
    8. 'azu' → logprob: -10.263253211975098
    9. 'import' → logprob: -10.888253211975098
    10. 'i' → logprob: -11.013253211975098

Token 355: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19593723118305206
    2. '        
' → logprob: -2.570937156677246
    3. ' for' → logprob: -2.820937156677246
    4. '
' → logprob: -3.945937156677246
    5. 'for' → logprob: -4.070937156677246
    6. 'a' → logprob: -6.445937156677246
    7. ' 
' → logprob: -7.070937156677246
    8. '        
        
' → logprob: -7.570937156677246
    9. '<|end|>' → logprob: -8.070937156677246
    10. ' a' → logprob: -8.195937156677246

Token 356: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9638320207595825
    2. '       ' → logprob: -1.3388320207595825
    3. 'for' → logprob: -1.7138320207595825
    4. 'a' → logprob: -2.588831901550293
    5. ' best' → logprob: -3.463831901550293
    6. ' a' → logprob: -3.713831901550293
    7. 'best' → logprob: -4.088831901550293
    8. 'result' → logprob: -5.088831901550293
    9. ' max' → logprob: -5.213831901550293
    10. 'max' → logprob: -5.588831901550293

Token 357: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.2628207802772522
    2. 'for' → logprob: -1.8878207206726074
    3. 'max' → logprob: -3.1378207206726074
    4. 'result' → logprob: -4.012820720672607
    5. '#' (adapté à ' #') → logprob: -4.637820720672607
    6. 'a' → logprob: -5.512820720672607
    7. ' best' → logprob: -7.012820720672607
    8. 'solution' → logprob: -7.387820720672607
    9. 'possible' → logprob: -7.512820720672607
    10. 'results' → logprob: -7.512820720672607

Token 358: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9896820187568665
    2. 'best' → logprob: -0.9896820187568665
    3. 'a' → logprob: -2.6146819591522217
    4. 'max' → logprob: -2.7396819591522217
    5. 'result' → logprob: -2.9896819591522217
    6. '#' → logprob: -3.6146819591522217
    7. ' best' → logprob: -4.489682197570801
    8. ' for' → logprob: -4.864682197570801
    9. 'if' → logprob: -5.489682197570801
    10. 'def' → logprob: -5.864682197570801

Token 359: ' all' (ID: 722)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4743228852748871
    2. 'a' → logprob: -1.2243229150772095
    3. ' for' → logprob: -2.59932279586792
    4. 'for' → logprob: -4.84932279586792
    5. '   ' → logprob: -7.97432279586792
    6. ' q' → logprob: -8.349323272705078
    7. ' range' → logprob: -8.849323272705078
    8. ' amount' → logprob: -9.099323272705078
    9. 'q' → logprob: -9.349323272705078
    10. 'amount' → logprob: -9.724323272705078

Token 360: ' feasible' (ID: 58866)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25254565477371216
    2. ' a' → logprob: -1.5025455951690674
    3. ' possible' → logprob: -8.752545356750488
    4. '   ' → logprob: -9.002545356750488
    5. ' for' → logprob: -9.252545356750488
    6. 'i' → logprob: -10.252545356750488
    7. ' i' → logprob: -10.627545356750488
    8. 'possible' → logprob: -10.627545356750488
    9. 'amount' → logprob: -10.877545356750488
    10. 'q' → logprob: -10.877545356750488

Token 361: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3876793682575226
    2. ' a' → logprob: -1.1376793384552002
    3. 'ai' → logprob: -8.012679100036621
    4. 'q' → logprob: -9.137679100036621
    5. ' amounts' → logprob: -9.262679100036621
    6. 'amount' → logprob: -9.887679100036621
    7. ' q' → logprob: -10.262679100036621
    8. 'A' → logprob: -10.762679100036621
    9. '```' → logprob: -10.762679100036621
    10. '   ' → logprob: -11.012679100036621

Token 362: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.07467538863420486
    2. 'i' → logprob: -3.5746753215789795
    3. '_' → logprob: -3.9496753215789795
    4. '_i' → logprob: -5.074675559997559
    5. 'iz' → logprob: -5.574675559997559
    6. ' _' → logprob: -5.699675559997559
    7. ' i' → logprob: -5.699675559997559
    8. '1' → logprob: -6.199675559997559
    9. ' ' → logprob: -6.449675559997559
    10. 'a' → logprob: -7.762175559997559

Token 363: ' chicken' (ID: 21663)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3072863519191742
    2. ' =' → logprob: -2.307286262512207
    3. '_ch' → logprob: -2.307286262512207
    4. '_qty' → logprob: -3.432286262512207
    5. '_amount' → logprob: -4.307286262512207
    6. '_quantity' → logprob: -4.932286262512207
    7. '_q' → logprob: -5.807286262512207
    8. '_a' → logprob: -6.307286262512207
    9. '_amt' → logprob: -6.432286262512207
    10. ' for' → logprob: -6.557286262512207

Token 364: ' quantities' (ID: 49540)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.5821382403373718
    2. ' =' → logprob: -1.4571382999420166
    3. '_quantity' → logprob: -2.4571382999420166
    4. '_amount' → logprob: -3.5821382999420166
    5. 'a' → logprob: -4.0821380615234375
    6. ' in' → logprob: -4.4571380615234375
    7. '_amt' → logprob: -4.7071380615234375
    8. ' quantities' → logprob: -4.8321380615234375
    9. 'q' → logprob: -5.2071380615234375
    10. '_a' → logprob: -5.2071380615234375

Token 365: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18442632257938385
    2. '       ' → logprob: -2.1844263076782227
    3. 'for' → logprob: -2.9344263076782227
    4. ' in' → logprob: -6.684426307678223
    5. ' from' → logprob: -8.184426307678223
    6. ',' → logprob: -8.684426307678223
    7. 'range' → logprob: -8.809426307678223
    8. ' range' → logprob: -8.934426307678223
    9. 'from' → logprob: -9.059426307678223
    10. ' a' → logprob: -9.184426307678223

Token 366: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.14792728424072266
    2. '1' → logprob: -2.1479272842407227
    3. ' q' → logprob: -3.8979272842407227
    4. ' ' → logprob: -8.022927284240723
    5. 'min' → logprob: -9.647927284240723
    6. 'limit' → logprob: -10.397927284240723
    7. 'max' → logprob: -10.897927284240723
    8. '   ' → logprob: -11.272927284240723
    9. 'range' → logprob: -11.272927284240723
    10. ' min' → logprob: -11.397927284240723

Token 367: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35079464316368103
    2. '1' → logprob: -1.2257946729660034
    3. ' ' → logprob: -6.100794792175293
    4. '_' → logprob: -10.975794792175293
    5. '   ' → logprob: -10.975794792175293
    6. 'u' → logprob: -11.100794792175293
    7. '(' → logprob: -11.475794792175293
    8. '=' → logprob: -11.725794792175293
    9. 'i' → logprob: -12.288294792175293
    10. ' =' → logprob: -12.663294792175293

Token 368: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.6902236342430115
    2. ' down' → logprob: -1.0652236938476562
    3. ',' → logprob: -2.0652236938476562
    4. ' to' → logprob: -4.440223693847656
    5. 'to' → logprob: -4.565223693847656
    6. 'dow' → logprob: -6.065223693847656
    7. ' ,' → logprob: -6.940223693847656
    8. 'for' → logprob: -7.690223693847656
    9. ' ' → logprob: -8.065223693847656
    10. '   ' → logprob: -8.440223693847656

Token 369: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1689697802066803
    2. 'to' → logprob: -2.0439698696136475
    3. '       ' → logprob: -3.7939698696136475
    4. 'wards' → logprob: -6.168969631195068
    5. '        ' → logprob: -7.543969631195068
    6. ',' → logprob: -7.918969631195068
    7. 'ward' → logprob: -9.793970108032227
    8. '   ' → logprob: -9.918970108032227
    9. '_to' → logprob: -10.168970108032227
    10. ' ' → logprob: -10.293970108032227

Token 370: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234952084720135
    2. ' ' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.005234718322754
    4. '    ' → logprob: -16.13023567199707
    5. 'q' → logprob: -16.25523567199707
    6. ' q' → logprob: -16.75523567199707
    7. '```' → logprob: -17.00523567199707
    8. '`' → logprob: -17.50523567199707
    9. '       ' → logprob: -17.63023567199707
    10. '           ' → logprob: -17.88023567199707

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.250003814697266
    4. 'q' → logprob: -18.375003814697266
    5. '0' → logprob: -19.250003814697266
    6. 'max' → logprob: -19.312503814697266
    7. '```' → logprob: -19.562503814697266
    8. 'a' → logprob: -20.437503814697266
    9. '       ' → logprob: -20.500003814697266
    10. '`' → logprob: -20.500003814697266

Token 372: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.521334707736969
    2. ' for' → logprob: -1.0213346481323242
    3. 'for' → logprob: -3.396334648132324
    4. '        
' → logprob: -5.021334648132324
    5. '
' → logprob: -5.396334648132324
    6. ':' → logprob: -7.521334648132324
    7. ',' → logprob: -7.646334648132324
    8. ':
' → logprob: -8.771334648132324
    9. ' in' → logprob: -9.521334648132324
    10. '   ' → logprob: -9.646334648132324

Token 373: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09186186641454697
    2. 'for' → logprob: -2.4668619632720947
    3. '       ' → logprob: -6.216861724853516
    4. '        
' → logprob: -9.091861724853516
    5. ' q' → logprob: -9.091861724853516
    6. ' 
' → logprob: -9.341861724853516
    7. ' ' → logprob: -9.466861724853516
    8. ' because' → logprob: -9.591861724853516
    9. '	for' → logprob: -9.841861724853516
    10. ' i' → logprob: -9.966861724853516

Token 374: ' maximize' (ID: 44207)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.7862260341644287
    2. ' maximize' → logprob: -1.5362260341644287
    3. 'maximize' → logprob: -1.5362260341644287
    4. 'find' → logprob: -2.2862260341644287
    5. 'max' → logprob: -5.786226272583008
    6. '#' → logprob: -5.786226272583008
    7. '       ' → logprob: -6.286226272583008
    8. ' check' → logprob: -7.286226272583008
    9. '   ' → logprob: -7.286226272583008
    10. ' ensure' → logprob: -7.536226272583008

Token 375: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12277431786060333
    2. ' a' → logprob: -2.247774362564087
    3. 'q' → logprob: -5.497774124145508
    4. ' q' → logprob: -6.622774124145508
    5. 'ai' → logprob: -6.872774124145508
    6. ' for' → logprob: -7.122774124145508
    7. '   ' → logprob: -7.372774124145508
    8. 'i' → logprob: -7.622774124145508
    9. 'for' → logprob: -7.872774124145508
    10. '_a' → logprob: -9.122774124145508

Token 376: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.003352140076458454
    2. 'iz' → logprob: -6.253352165222168
    3. 'i' → logprob: -6.753352165222168
    4. '1' → logprob: -9.253352165222168
    5. '2' → logprob: -10.503352165222168
    6. ' ' → logprob: -10.753352165222168
    7. '_' → logprob: -11.253352165222168
    8. ' i' → logprob: -11.628352165222168
    9. 'ziu' → logprob: -11.628352165222168
    10. '`' → logprob: -12.003352165222168

Token 377: ' chicken' (ID: 21663)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7649310827255249
    2. '_ch' → logprob: -2.1399312019348145
    3. '_a' → logprob: -2.5149312019348145
    4. '_quantity' → logprob: -2.5149312019348145
    5. ':' → logprob: -2.6399312019348145
    6. '       ' → logprob: -2.8899312019348145
    7. '_' → logprob: -3.5149312019348145
    8. 'for' → logprob: -3.6399312019348145
    9. ':
' → logprob: -3.8899312019348145
    10. '_qty' → logprob: -4.1399312019348145

Token 378: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31638413667678833
    2. 'for' → logprob: -1.8163840770721436
    3. '       ' → logprob: -2.9413840770721436
    4. ':' → logprob: -3.3163840770721436
    5. ',' → logprob: -4.941384315490723
    6. '        
' → logprob: -5.691384315490723
    7. '
' → logprob: -6.066384315490723
    8. ':
' → logprob: -6.566384315490723
    9. '   ' → logprob: -7.441384315490723
    10. 'quantity' → logprob: -7.441384315490723

Token 379: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5642337799072266
    2. 'for' → logprob: -1.3142337799072266
    3. '       ' → logprob: -2.1892337799072266
    4. ':' → logprob: -4.064233779907227
    5. '
' → logprob: -4.314233779907227
    6. ':
' → logprob: -5.064233779907227
    7. ',' → logprob: -5.814233779907227
    8. '        
' → logprob: -5.939233779907227
    9. '   ' → logprob: -6.564233779907227
    10. '\n' → logprob: -6.689233779907227

Token 380: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28886696696281433
    2. ' for' → logprob: -1.4138669967651367
    3. '       ' → logprob: -4.913866996765137
    4. '
' → logprob: -8.163866996765137
    5. '        
' → logprob: -10.913866996765137
    6. '```' → logprob: -11.038866996765137
    7. '   ' → logprob: -11.538866996765137
    8. 'a' → logprob: -12.663866996765137
    9. ' 
' → logprob: -13.038866996765137
    10. 'q' → logprob: -13.038866996765137

Token 381: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1448972523212433
    2. ' for' → logprob: -2.019897222518921
    3. '       ' → logprob: -6.1448974609375
    4. 'a' → logprob: -10.6448974609375
    5. 'result' → logprob: -10.6448974609375
    6. '```' → logprob: -12.3948974609375
    7. '
' → logprob: -12.5198974609375
    8. ' a' → logprob: -12.7698974609375
    9. ' result' → logprob: -13.1448974609375
    10. '   ' → logprob: -13.3948974609375

Token 382: ' each' (ID: 2454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5869251489639282
    2. ' a' → logprob: -0.8369251489639282
    3. ' normal' → logprob: -5.586925029754639
    4. 'normal' → logprob: -6.961925029754639
    5. ' q' → logprob: -7.336925029754639
    6. ' ai' → logprob: -7.336925029754639
    7. 'ai' → logprob: -7.649425029754639
    8. 'q' → logprob: -7.711925029754639
    9. ' i' → logprob: -7.774425029754639
    10. ' n' → logprob: -7.899425029754639

Token 383: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7036046981811523
    2. ' a' → logprob: -0.7036046981811523
    3. ' q' → logprob: -6.828604698181152
    4. ' possible' → logprob: -6.828604698181152
    5. 'amount' → logprob: -7.078604698181152
    6. 'q' → logprob: -7.203604698181152
    7. ' amount' → logprob: -7.266104698181152
    8. ' quantity' → logprob: -7.453604698181152
    9. 'quantity' → logprob: -7.516104698181152
    10. 'ai' → logprob: -7.516104698181152

Token 384: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5305884480476379
    2. ' a' → logprob: -1.4055883884429932
    3. 'a' → logprob: -2.905588388442993
    4. ' normal' → logprob: -3.030588388442993
    5. 'for' → logprob: -3.530588388442993
    6. ' leftover' → logprob: -5.155588626861572
    7. '       ' → logprob: -5.530588626861572
    8. ' purchase' → logprob: -5.655588626861572
    9. ' max' → logprob: -5.655588626861572
    10. '           ' → logprob: -5.780588626861572

Token 385: ' to' (ID: 316)
  Prédit: ' normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.532754123210907
    2. 'normal' → logprob: -0.907754123210907
    3. 'a' → logprob: -5.907753944396973
    4. '   ' → logprob: -6.282753944396973
    5. 'n' → logprob: -6.782753944396973
    6. ' a' → logprob: -6.907753944396973
    7. 'from' → logprob: -7.157753944396973
    8. ' n' → logprob: -8.032753944396973
    9. 'all' → logprob: -8.032753944396973
    10. ' all' → logprob: -8.157753944396973

Token 386: ' maximize' (ID: 44207)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.0946253538131714
    2. ' purchase' → logprob: -1.3446253538131714
    3. ' buy' → logprob: -1.5946253538131714
    4. 'buy' → logprob: -2.469625473022461
    5. 'find' → logprob: -3.469625473022461
    6. 'purchase' → logprob: -3.594625473022461
    7. 'maximize' → logprob: -3.719625473022461
    8. ' maximize' → logprob: -4.094625473022461
    9. ' range' → logprob: -4.969625473022461
    10. 'a' → logprob: -6.219625473022461

Token 387: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.6329323053359985
    2. ' normal' → logprob: -0.7579323053359985
    3. ' the' → logprob: -9.007932662963867
    4. 'the' → logprob: -9.507932662963867
    5. 'n' → logprob: -10.757932662963867
    6. '```' → logprob: -11.007932662963867
    7. '   ' → logprob: -11.132932662963867
    8. 'norm' → logprob: -11.257932662963867
    9. '_normal' → logprob: -11.632932662963867
    10. ' n' → logprob: -11.757932662963867

Token 388: ' chicken' (ID: 21663)
  Prédit: '_ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.03269904479384422
    2. '_' → logprob: -4.657699108123779
    3. '_quantity' → logprob: -4.782699108123779
    4. '_qty' → logprob: -4.782699108123779
    5. ' =' → logprob: -6.532699108123779
    6. '_normal' → logprob: -6.907699108123779
    7. '   ' → logprob: -7.032699108123779
    8. 'ch' → logprob: -7.532699108123779
    9. '_amount' → logprob: -7.907699108123779
    10. '```' → logprob: -8.157698631286621

Token 389: ' quantity' (ID: 17245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12839952111244202
    2. ' for' → logprob: -3.003399610519409
    3. 'for' → logprob: -3.628399610519409
    4. '        
' → logprob: -3.878399610519409
    5. '
' → logprob: -4.12839937210083
    6. ',' → logprob: -6.12839937210083
    7. '   ' → logprob: -6.75339937210083
    8. 'quantity' → logprob: -7.62839937210083
    9. '```' → logprob: -7.87839937210083
    10. ':' → logprob: -8.128399848937988

Token 390: ' given' (ID: 4335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12948019802570343
    2. ' for' → logprob: -2.8794801235198975
    3. '
' → logprob: -3.5044801235198975
    4. 'for' → logprob: -4.004480361938477
    5. '        
' → logprob: -4.129480361938477
    6. ',' → logprob: -8.379480361938477
    7. '   ' → logprob: -9.254480361938477
    8. '<|end|>' → logprob: -9.254480361938477
    9. '  
' → logprob: -9.504480361938477
    10. '    
' → logprob: -9.879480361938477

Token 391: ' leftover' (ID: 97990)
  Prédit: ' leftover'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leftover' → logprob: -0.6120116114616394
    2. ' the' → logprob: -0.9870116114616394
    3. 'the' → logprob: -2.987011671066284
    4. ' budget' → logprob: -4.612011432647705
    5. 'budget' → logprob: -4.737011432647705
    6. ' remaining' → logprob: -4.862011432647705
    7. 'remaining' → logprob: -5.862011432647705
    8. ' available' → logprob: -6.237011432647705
    9. 'available' → logprob: -7.237011432647705
    10. ' leftovers' → logprob: -7.487011432647705

Token 392: ' budget' (ID: 9946)
  Prédit: '_budget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -0.288229763507843
    2. ' budget' → logprob: -1.6632297039031982
    3. 'budget' → logprob: -3.1632297039031982
    4. '_' → logprob: -5.038229942321777
    5. '   ' → logprob: -5.913229942321777
    6. '       ' → logprob: -6.163229942321777
    7. ' ' → logprob: -6.413229942321777
    8. ' for' → logprob: -6.913229942321777
    9. ' _' → logprob: -7.413229942321777
    10. '```' → logprob: -7.538229942321777

Token 393: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11250905692577362
    2. ' for' → logprob: -3.11250901222229
    3. '
' → logprob: -3.61250901222229
    4. '        
' → logprob: -3.73750901222229
    5. 'for' → logprob: -4.612509250640869
    6. ',' → logprob: -7.612509250640869
    7. '<|end|>' → logprob: -8.737508773803711
    8. '   ' → logprob: -9.487508773803711
    9. '<|end|>' → logprob: -9.612508773803711
    10. '  
' → logprob: -9.737508773803711

Token 394: ' total' (ID: 3609)
  Prédit: ' quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantity' → logprob: -1.1786377429962158
    2. ' min' → logprob: -1.8036377429962158
    3. 'quantity' → logprob: -2.178637742996216
    4. ' total' → logprob: -2.303637742996216
    5. ' remaining' → logprob: -2.678637742996216
    6. 'min' → logprob: -3.178637742996216
    7. ' minimum' → logprob: -3.303637742996216
    8. ' q' → logprob: -3.553637742996216
    9. ' leftover' → logprob: -3.678637742996216
    10. ' constraints' → logprob: -4.053637504577637

Token 395: ' must' (ID: 2804)
  Prédit: '_quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.3434244394302368
    2. ' quantity' → logprob: -1.9684244394302368
    3. 'quantity' → logprob: -2.4684243202209473
    4. '_' → logprob: -3.5934243202209473
    5. '_qty' → logprob: -5.343424320220947
    6. ' grams' → logprob: -5.343424320220947
    7. '   ' → logprob: -5.593424320220947
    8. '_a' → logprob: -5.718424320220947
    9. '_purchase' → logprob: -5.718424320220947
    10. '```' → logprob: -6.218424320220947

Token 396: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.3240915536880493
    2. '_quantity' → logprob: -1.3240915536880493
    3. 'be' → logprob: -1.4490915536880493
    4. ' be' → logprob: -2.1990914344787598
    5. '_be' → logprob: -3.3240914344787598
    6. '       ' → logprob: -3.8240914344787598
    7. ' >=' → logprob: -4.07409143447876
    8. '```' → logprob: -4.69909143447876
    9. '_' → logprob: -5.19909143447876
    10. '_purchase' → logprob: -5.19909143447876

Token 397: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3869190514087677
    2. ' q' → logprob: -1.1369190216064453
    3. '(q' → logprob: -11.886919021606445
    4. '
' → logprob: -12.136919021606445
    5. ' (' → logprob: -12.386919021606445
    6. '       ' → logprob: -12.386919021606445
    7. '```' → logprob: -12.386919021606445
    8. '   ' → logprob: -12.511919021606445
    9. ' ' → logprob: -12.636919021606445
    10. '           ' → logprob: -13.261919021606445

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019806181080639362
    2. '2' → logprob: -7.376980781555176
    3. '_' → logprob: -8.001980781555176
    4. '       ' → logprob: -8.376980781555176
    5. 'u' → logprob: -8.751980781555176
    6. '
' → logprob: -8.876980781555176
    7. ',' → logprob: -9.251980781555176
    8. ')' → logprob: -9.876980781555176
    9. '   ' → logprob: -9.876980781555176
    10. ')
' → logprob: -10.626980781555176

Token 399: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05875014141201973
    2. ' for' → logprob: -3.5587501525878906
    3. 'for' → logprob: -4.433750152587891
    4. '
' → logprob: -4.683750152587891
    5. '        
' → logprob: -4.933750152587891
    6. '```' → logprob: -9.93375015258789
    7. '<|end|>' → logprob: -10.30875015258789
    8. ',' → logprob: -10.68375015258789
    9. '   ' → logprob: -10.80875015258789
    10. '\n' → logprob: -10.93375015258789

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14617151021957397
    2. ' for' → logprob: -2.3961715698242188
    3. 'for' → logprob: -3.3961715698242188
    4. '
' → logprob: -5.021171569824219
    5. '        
' → logprob: -5.521171569824219
    6. '```' → logprob: -7.896171569824219
    7. '\n' → logprob: -8.396171569824219
    8. 'n' → logprob: -10.146171569824219
    9. '   ' → logprob: -10.521171569824219
    10. '    
' → logprob: -10.896171569824219

Token 401: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09950360655784607
    2. ' for' → logprob: -2.599503517150879
    3. '       ' → logprob: -4.849503517150879
    4. 'best' → logprob: -4.849503517150879
    5. 'result' → logprob: -6.099503517150879
    6. ' best' → logprob: -6.224503517150879
    7. ' result' → logprob: -7.974503517150879
    8. 'a' → logprob: -9.974503517150879
    9. 'max' → logprob: -10.224503517150879
    10. 'results' → logprob: -10.849503517150879

Token 402: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3873656392097473
    2. 'best' → logprob: -1.3873655796051025
    3. ' for' → logprob: -3.7623655796051025
    4. ' best' → logprob: -4.137365818023682
    5. 'result' → logprob: -4.137365818023682
    6. 'max' → logprob: -5.012365818023682
    7. '       ' → logprob: -5.262365818023682
    8. 'a' → logprob: -6.762365818023682
    9. ' result' → logprob: -7.512365818023682
    10. 'results' → logprob: -7.762365818023682

Token 403: ' pre' (ID: 876)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1269859075546265
    2. 'for' → logprob: -1.2519859075546265
    3. ' =' → logprob: -1.8769859075546265
    4. '        ' → logprob: -2.626986026763916
    5. ' for' → logprob: -2.751986026763916
    6. ' ' → logprob: -3.376986026763916
    7. ' try' → logprob: -4.626986026763916
    8. 'space' → logprob: -4.751986026763916
    9. 'n' → logprob: -4.876986026763916
    10. ' n' → logprob: -5.126986026763916

Token 404: '-opt' (ID: 104111)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.6579704880714417
    2. 'fer' → logprob: -1.0329704284667969
    3. 'd' → logprob: -3.282970428466797
    4. 's' → logprob: -4.157970428466797
    5. 'sum' → logprob: -4.157970428466797
    6. '       ' → logprob: -4.532970428466797
    7. 'sent' → logprob: -4.782970428466797
    8. 'compute' → logprob: -4.782970428466797
    9. 'ferred' → logprob: -5.032970428466797
    10. '        ' → logprob: -5.907970428466797

Token 405: 'imize' (ID: 16368)
  Prédit: 'imize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imize' → logprob: -0.15600131452083588
    2. 'imized' → logprob: -2.656001329421997
    3. 'im' → logprob: -3.531001329421997
    4. 't' → logprob: -3.781001329421997
    5. 'imal' → logprob: -4.406001091003418
    6. 'tim' → logprob: -5.281001091003418
    7. 'ime' → logprob: -6.406001091003418
    8. 'm' → logprob: -6.906001091003418
    9. 'ed' → logprob: -7.531001091003418
    10. '```' → logprob: -8.406001091003418

Token 406: ' by' (ID: 656)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6884143948554993
    2. ' for' → logprob: -1.4384143352508545
    3. ' a' → logprob: -2.3134143352508545
    4. 'for' → logprob: -3.1884143352508545
    5. '       ' → logprob: -3.3134143352508545
    6. 'max' → logprob: -3.8134143352508545
    7. ' max' → logprob: -4.688414573669434
    8. 'd' → logprob: -5.188414573669434
    9. ' =' → logprob: -5.688414573669434
    10. ',' → logprob: -5.688414573669434

Token 407: ' scanning' (ID: 53387)
  Prédit: ' checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' checking' → logprob: -1.0904220342636108
    2. ' iter' → logprob: -1.8404220342636108
    3. 'for' → logprob: -1.9654220342636108
    4. 'checking' → logprob: -2.0904221534729004
    5. 'max' → logprob: -3.3404221534729004
    6. ' for' → logprob: -3.9654221534729004
    7. ' initializing' → logprob: -4.0904221534729
    8. ' calculating' → logprob: -4.2154221534729
    9. 'return' → logprob: -4.3404221534729
    10. 'starting' → logprob: -4.4654221534729

Token 408: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.456852525472641
    2. ' a' → logprob: -1.5818525552749634
    3. 'a' → logprob: -2.331852436065674
    4. 'for' → logprob: -3.331852436065674
    5. ' from' → logprob: -4.706852436065674
    6. 'from' → logprob: -4.956852436065674
    7. ' q' → logprob: -5.581852436065674
    8. 'q' → logprob: -5.831852436065674
    9. 'range' → logprob: -6.081852436065674
    10. ' range' → logprob: -7.206852436065674

Token 409: ' maximal' (ID: 65414)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05488724634051323
    2. ' q' → logprob: -2.929887294769287
    3. 'limit' → logprob: -12.929886817932129
    4. '$q' → logprob: -14.429886817932129
    5. '	q' → logprob: -14.554886817932129
    6. '_q' → logprob: -15.304886817932129
    7. '[q' → logprob: -15.929886817932129
    8. 'range' → logprob: -16.054887771606445
    9. ' ' → logprob: -16.179887771606445
    10. '   ' → logprob: -16.179887771606445

Token 410: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40346017479896545
    2. ' a' → logprob: -1.778460144996643
    3. 'q' → logprob: -2.4034602642059326
    4. ' q' → logprob: -2.9034602642059326
    5. ' limit' → logprob: -5.7784600257873535
    6. ' to' → logprob: -6.0284600257873535
    7. ' possible' → logprob: -6.4034600257873535
    8. ' feasible' → logprob: -6.4034600257873535
    9. 'possible' → logprob: -6.4034600257873535
    10. 'limit' → logprob: -6.4034600257873535

Token 411: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.0008666796493344009
    2. 'q' → logprob: -7.625866889953613
    3. 'i' → logprob: -9.125866889953613
    4. '2' → logprob: -9.500866889953613
    5. 'isu' → logprob: -10.625866889953613
    6. '1' → logprob: -10.750866889953613
    7. ' ' → logprob: -10.875866889953613
    8. 'iz' → logprob: -11.000866889953613
    9. 'ziu' → logprob: -11.000866889953613
    10. 'izou' → logprob: -11.250866889953613

Token 412: ' down' (ID: 1917)
  Prédit: '_ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.2794549763202667
    2. '_' → logprob: -2.4044549465179443
    3. '_quantity' → logprob: -2.5294549465179443
    4. 'ch' → logprob: -4.154455184936523
    5. '_qty' → logprob: -4.529455184936523
    6. ' quantity' → logprob: -5.029455184936523
    7. ' to' → logprob: -5.154455184936523
    8. ' chicken' → logprob: -5.279455184936523
    9. 'quantity' → logprob: -5.529455184936523
    10. ' ' → logprob: -5.529455184936523

Token 413: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2965306043624878
    2. 'wards' → logprob: -1.7965306043624878
    3. 'to' → logprob: -2.9215307235717773
    4. 'ward' → logprob: -4.296530723571777
    5. '       ' → logprob: -4.796530723571777
    6. 'for' → logprob: -5.171530723571777
    7. '   ' → logprob: -6.046530723571777
    8. ' for' → logprob: -6.421530723571777
    9. '1' → logprob: -6.921530723571777
    10. 'from' → logprob: -7.296530723571777

Token 414: ' minimal' (ID: 19957)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02373349294066429
    2. ' ' → logprob: -3.898733377456665
    3. ' q' → logprob: -6.148733615875244
    4. 'q' → logprob: -6.898733615875244
    5. '0' → logprob: -10.273733139038086
    6. '   ' → logprob: -12.898733139038086
    7. '```' → logprob: -14.148733139038086
    8. '    ' → logprob: -14.273733139038086
    9. ' one' → logprob: -14.773733139038086
    10. '`' → logprob: -15.023733139038086

Token 415: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9439653158187866
    2. 'a' → logprob: -1.4439653158187866
    3. 'for' → logprob: -2.193965435028076
    4. ' a' → logprob: -2.443965435028076
    5. '       ' → logprob: -2.568965435028076
    6. '   ' → logprob: -3.068965435028076
    7. '_a' → logprob: -4.943965435028076
    8. ' quantity' → logprob: -4.943965435028076
    9. 'q' → logprob: -5.068965435028076
    10. 'quantity' → logprob: -5.193965435028076

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029225599020719528
    2. ' ' → logprob: -3.7792255878448486
    3. ')' → logprob: -6.029225826263428
    4. '   ' → logprob: -6.654225826263428
    5. '       ' → logprob: -7.404225826263428
    6. '):
' → logprob: -8.27922534942627
    7. ' for' → logprob: -8.52922534942627
    8. 'q' → logprob: -8.52922534942627
    9. 'for' → logprob: -8.65422534942627
    10. 'a' → logprob: -9.27922534942627

Token 417: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2943711578845978
    2. ')' → logprob: -1.6693711280822754
    3. '):
' → logprob: -2.7943711280822754
    4. ' )' → logprob: -6.794371128082275
    5. ' ):' → logprob: -7.169371128082275
    6. '):
' → logprob: -7.294371128082275
    7. ',' → logprob: -7.419371128082275
    8. '):

' → logprob: -7.669371128082275
    9. '       ' → logprob: -7.794371128082275
    10. ')
' → logprob: -8.169371604919434

Token 418: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11658582836389542
    2. ' for' → logprob: -2.3665857315063477
    3. '
' → logprob: -4.991585731506348
    4. 'for' → logprob: -5.491585731506348
    5. '        
' → logprob: -5.616585731506348
    6. ',' → logprob: -7.116585731506348
    7. '<|end|>' → logprob: -8.366585731506348
    8. ' and' → logprob: -8.991585731506348
    9. '   ' → logprob: -9.116585731506348
    10. ':' → logprob: -9.741585731506348

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2963894307613373
    2. ' for' → logprob: -1.7963894605636597
    3. 'for' → logprob: -3.17138934135437
    4. 'result' → logprob: -3.42138934135437
    5. ' result' → logprob: -4.421389579772949
    6. ' best' → logprob: -6.546389579772949
    7. '        
' → logprob: -7.171389579772949
    8. 'best' → logprob: -7.171389579772949
    9. 'results' → logprob: -8.54638957977295
    10. '
' → logprob: -8.54638957977295

Token 420: ' best' (ID: 1636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6450836062431335
    2. 'best' (adapté à ' best') → logprob: -1.1450836658477783
    3. ' for' → logprob: -2.8950836658477783
    4. 'result' → logprob: -2.8950836658477783
    5. ' best' → logprob: -3.3950836658477783
    6. '       ' → logprob: -4.895083427429199
    7. ' result' → logprob: -5.520083427429199
    8. '   ' → logprob: -7.645083427429199
    9. 'solution' → logprob: -7.895083427429199
    10. 'answer' → logprob: -8.7700834274292

Token 421: '_answer' (ID: 65702)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.13603627681732178
    2. '_solution' → logprob: -3.1360363960266113
    3. '_quantity' → logprob: -3.5110363960266113
    4. ' =' → logprob: -4.386036396026611
    5. '_result' → logprob: -4.386036396026611
    6. '_amount' → logprob: -4.636036396026611
    7. '_' → logprob: -4.761036396026611
    8. '_purchase' → logprob: -5.511036396026611
    9. '_qty' → logprob: -5.636036396026611
    10. '_quant' → logprob: -7.761036396026611

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018585097044706345
    2. '=' → logprob: -4.518585205078125
    3. ':' → logprob: -4.893585205078125
    4. '=None' → logprob: -11.268585205078125
    5. ' :' → logprob: -13.518585205078125
    6. ',' → logprob: -15.643585205078125
    7. ' ' → logprob: -16.518585205078125
    8. '```' → logprob: -16.768585205078125
    9. ')' → logprob: -16.893585205078125
    10. ':int' → logprob: -17.143585205078125

Token 423: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008659947663545609
    2. ' None' → logprob: -4.758659839630127
    3. '(None' → logprob: -10.008660316467285
    4. '=None' → logprob: -15.633660316467285
    5. '(' → logprob: -16.38365936279297
    6. ',None' → logprob: -16.88365936279297
    7. '_None' → logprob: -16.88365936279297
    8. 'Optional' → logprob: -18.00865936279297
    9. '   ' → logprob: -18.13365936279297
    10. 'none' → logprob: -18.38365936279297

Token 424: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19890542328357697
    2. '       ' → logprob: -2.4489054679870605
    3. '        
' → logprob: -2.4489054679870605
    4. '<|end|>' → logprob: -5.9489054679870605
    5. ',' → logprob: -6.6989054679870605
    6. ' for' → logprob: -7.0739054679870605
    7. '\n' → logprob: -7.3239054679870605
    8. ' 
' → logprob: -7.8239054679870605
    9. 'for' → logprob: -7.9489054679870605
    10. '    
' → logprob: -7.9489054679870605

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25369274616241455
    2. 'for' → logprob: -2.128692626953125
    3. ' for' → logprob: -2.253692626953125
    4. '   ' → logprob: -10.253692626953125
    5. '        
' → logprob: -10.878692626953125
    6. '
' → logprob: -12.503692626953125
    7. 'a' → logprob: -12.753692626953125
    8. '```' → logprob: -13.378692626953125
    9. ' a' → logprob: -14.128692626953125
    10. ' ' → logprob: -14.128692626953125

Token 426: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018065694894175977
    2. ' for' → logprob: -8.8751802444458
    3. '       ' → logprob: -10.1251802444458
    4. '   ' → logprob: -15.0001802444458
    5. 'a' → logprob: -15.7501802444458
    6. 'best' → logprob: -16.375181198120117
    7. '```' → logprob: -16.750181198120117
    8. '
' → logprob: -17.375181198120117
    9. 'fo' → logprob: -18.125181198120117
    10. '        
' → logprob: -18.250181198120117

Token 427: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006775288376957178
    2. ' for' → logprob: -5.006775379180908
    3. '       ' → logprob: -10.13177490234375
    4. 'a' → logprob: -11.00677490234375
    5. '   ' → logprob: -13.00677490234375
    6. 'range' → logprob: -14.50677490234375
    7. '```' → logprob: -15.75677490234375
    8. ' a' → logprob: -16.00677490234375
    9. '
' → logprob: -16.00677490234375
    10. 'q' → logprob: -16.50677490234375

Token 428: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6763557195663452
    2. 'q' → logprob: -0.9263557195663452
    3. ' for' → logprob: -3.3013558387756348
    4. 'a' → logprob: -4.051355838775635
    5. 'for' → logprob: -4.426355838775635
    6. ' a' → logprob: -4.551355838775635
    7. ' the' → logprob: -6.176355838775635
    8. 'possible' → logprob: -6.176355838775635
    9. ' (' → logprob: -6.301355838775635
    10. '1' → logprob: -6.301355838775635

Token 429: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -12.125019073486328
    3. '1' → logprob: -12.375019073486328
    4. 'q' → logprob: -12.875019073486328
    5. '_' → logprob: -13.500019073486328
    6. '   ' → logprob: -13.750019073486328
    7. '=' → logprob: -14.250019073486328
    8. '
' → logprob: -14.375019073486328
    9. '```' → logprob: -15.062519073486328
    10. '  ' → logprob: -15.375019073486328

Token 430: ',' (ID: 11)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.19534572958946228
    2. ' >' → logprob: -2.445345640182495
    3. '<=' → logprob: -3.070345640182495
    4. '>' → logprob: -3.820345640182495
    5. ' >=' → logprob: -4.945345878601074
    6. ' is' → logprob: -5.695345878601074
    7. ':' → logprob: -6.195345878601074
    8. ' ' → logprob: -6.320345878601074
    9. ',' → logprob: -6.320345878601074
    10. '   ' → logprob: -6.820345878601074

Token 431: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22721724212169647
    2. ' q' → logprob: -1.602217197418213
    3. 'limit' → logprob: -8.227217674255371
    4. 'range' → logprob: -8.227217674255371
    5. '1' → logprob: -8.602217674255371
    6. ' and' → logprob: -8.727217674255371
    7. 'b' → logprob: -8.727217674255371
    8. ' for' → logprob: -8.977217674255371
    9. 'for' → logprob: -9.102217674255371
    10. ',' → logprob: -9.852217674255371

Token 432: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. '1' → logprob: -12.250006675720215
    3. ',' → logprob: -15.000006675720215
    4. '   ' → logprob: -15.125006675720215
    5. ' ' → logprob: -15.250006675720215
    6. 'q' → logprob: -15.250006675720215
    7. '=' → logprob: -15.750006675720215
    8. '```' → logprob: -15.750006675720215
    9. '
' → logprob: -15.875006675720215
    10. ' =' → logprob: -16.75000762939453

Token 433: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6652148365974426
    2. ',' → logprob: -1.4152147769927979
    3. 'and' → logprob: -2.290214776992798
    4. ' are' → logprob: -2.790214776992798
    5. ' can' → logprob: -3.790214776992798
    6. '<=' → logprob: -4.540215015411377
    7. ' <=' → logprob: -4.915215015411377
    8. '>' → logprob: -5.040215015411377
    9. ')' → logprob: -5.290215015411377
    10. ' may' → logprob: -5.415215015411377

Token 434: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07443109154701233
    2. '10' → logprob: -2.6994311809539795
    3. ' ' → logprob: -5.9494309425354
    4. 'q' → logprob: -7.3244309425354
    5. '200' → logprob: -7.3244309425354
    6. '1' → logprob: -8.324431419372559
    7. '500' → logprob: -9.199431419372559
    8. 'b' → logprob: -9.699431419372559
    9. '300' → logprob: -10.324431419372559
    10. 'int' → logprob: -10.449431419372559

Token 435: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3525727093219757
    2. '10' → logprob: -1.2275726795196533
    3. '200' → logprob: -5.977572917938232
    4. '500' → logprob: -6.977572917938232
    5. '300' → logprob: -8.352572441101074
    6. 'q' → logprob: -8.977572441101074
    7. ' ' → logprob: -9.602572441101074
    8. '150' → logprob: -9.602572441101074
    9. '400' → logprob: -10.477572441101074
    10. '250' → logprob: -10.602572441101074

Token 436: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.14666886627674103
    2. '00' → logprob: -2.1466689109802246
    3. '0' → logprob: -4.021668910980225
    4. '_' → logprob: -6.521668910980225
    5. '<<' → logprob: -9.021668434143066
    6. 'e' → logprob: -10.896668434143066
    7. ' ' → logprob: -12.771668434143066
    8. ':' → logprob: -12.896668434143066
    9. ' <<' → logprob: -13.646668434143066
    10. '       ' → logprob: -14.021668434143066

Token 437: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.008361025713384151
    2. '00' → logprob: -5.133360862731934
    3. ' ' → logprob: -6.258360862731934
    4. '0' → logprob: -7.633360862731934
    5. '100' → logprob: -11.133360862731934
    6. '10' → logprob: -12.133360862731934
    7. '500' → logprob: -13.008360862731934
    8. '_' → logprob: -13.133360862731934
    9. '200' → logprob: -14.195860862731934
    10. 'q' → logprob: -14.195860862731934

Token 438: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5737264752388
    2. '000' → logprob: -0.9487264752388
    3. '
' → logprob: -3.8237264156341553
    4. '0' → logprob: -4.448726654052734
    5. ',' → logprob: -4.948726654052734
    6. '        
' → logprob: -5.948726654052734
    7. '00' → logprob: -6.698726654052734
    8. '       ' → logprob: -6.823726654052734
    9. ' and' → logprob: -6.823726654052734
    10. ':' → logprob: -7.823726654052734

Token 439: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00012070851516909897
    2. '001' → logprob: -9.750121116638184
    3. ' ' → logprob: -10.250121116638184
    4. 'q' → logprob: -11.750121116638184
    5. '100' → logprob: -12.375121116638184
    6. 'range' → logprob: -12.625121116638184
    7. '
' → logprob: -13.250121116638184
    8. '00' → logprob: -13.250121116638184
    9. '002' → logprob: -13.750121116638184
    10. '0' → logprob: -13.750121116638184

Token 440: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3363181948661804
    2. ' for' → logprob: -2.336318254470825
    3. '       ' → logprob: -2.586318254470825
    4. ',' → logprob: -2.836318254470825
    5. 'for' → logprob: -3.336318254470825
    6. '        
' → logprob: -4.461318016052246
    7. ',
' → logprob: -6.086318016052246
    8. ' and' → logprob: -6.836318016052246
    9. ':' → logprob: -7.211318016052246
    10. '
' → logprob: -7.461318016052246

Token 441: ' prices' (ID: 8451)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3990725874900818
    2. 'b' → logprob: -2.2740726470947266
    3. ' c' → logprob: -2.5240726470947266
    4. 'q' → logprob: -2.6490726470947266
    5. ' q' → logprob: -4.024072647094727
    6. ' b' → logprob: -4.274072647094727
    7. 'price' → logprob: -5.274072647094727
    8. ' the' → logprob: -5.274072647094727
    9. ' price' → logprob: -5.274072647094727
    10. ' prices' → logprob: -5.649072647094727

Token 442: ' up' (ID: 869)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.3735049366950989
    2. ' <=' → logprob: -2.373504877090454
    3. ' may' → logprob: -2.498504877090454
    4. ' can' → logprob: -3.373504877090454
    5. '<=' → logprob: -3.373504877090454
    6. ' could' → logprob: -3.748504877090454
    7. ' might' → logprob: -3.873504877090454
    8. 'are' → logprob: -4.498505115509033
    9. ',' → logprob: -6.248505115509033
    10. ' likely' → logprob: -6.373505115509033

Token 443: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0074310386553406715
    2. '100' → logprob: -6.1324310302734375
    3. ' to' → logprob: -6.3824310302734375
    4. 'up' → logprob: -7.0074310302734375
    5. 'q' → logprob: -7.1324310302734375
    6. '1' → logprob: -7.6324310302734375
    7. '<=' → logprob: -8.257431030273438
    8. 'p' → logprob: -8.632431030273438
    9. '_to' → logprob: -8.757431030273438
    10. '=' → logprob: -9.132431030273438

Token 444: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3671197295188904
    2. '10' → logprob: -1.2421197891235352
    3. '1' → logprob: -3.992119789123535
    4. ' ' → logprob: -11.242119789123535
    5. '200' → logprob: -11.867119789123535
    6. '
' → logprob: -12.492119789123535
    7. 'b' → logprob: -12.742119789123535
    8. 'int' → logprob: -12.992119789123535
    9. '300' → logprob: -12.992119789123535
    10. 'max' → logprob: -13.117119789123535

Token 445: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5360509753227234
    2. '10' → logprob: -1.1610510349273682
    3. '1' → logprob: -2.286051034927368
    4. ' ' → logprob: -9.161050796508789
    5. '
' → logprob: -12.161050796508789
    6. 'int' → logprob: -12.786050796508789
    7. '500' → logprob: -13.536050796508789
    8. '200' → logprob: -13.661050796508789
    9. '

' → logprob: -14.286050796508789
    10. '2' → logprob: -14.411050796508789

Token 446: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00680323364213109
    2. '_' → logprob: -5.006803035736084
    3. ',' → logprob: -10.131803512573242
    4. 'e' → logprob: -11.131803512573242
    5. '00' → logprob: -11.131803512573242
    6. '0' → logprob: -11.381803512573242
    7. '10' → logprob: -13.881803512573242
    8. '```' → logprob: -13.881803512573242
    9. '       ' → logprob: -14.381803512573242
    10. ' ' → logprob: -14.506803512573242

Token 447: '000' (ID: 1302)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4782981276512146
    2. '6' → logprob: -2.1032981872558594
    3. '7' → logprob: -2.1032981872558594
    4. '100' → logprob: -2.6032981872558594
    5. '10' → logprob: -3.1032981872558594
    6. '8' → logprob: -4.353298187255859
    7. '000' → logprob: -5.728298187255859
    8. '5' → logprob: -8.47829818725586
    9. '12' → logprob: -8.60329818725586
    10. '1' → logprob: -8.60329818725586

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2958354949951172
    2. '
' → logprob: -2.045835494995117
    3. ':' → logprob: -3.045835494995117
    4. ',
' → logprob: -3.420835494995117
    5. '        
' → logprob: -4.170835494995117
    6. '       ' → logprob: -4.295835494995117
    7. '000' → logprob: -5.920835494995117
    8. '_' → logprob: -6.045835494995117
    9. '   ' → logprob: -6.295835494995117
    10. 'for' → logprob: -6.420835494995117

Token 449: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0006913475226610899
    2. '0' → logprob: -8.500691413879395
    3. ' ' → logprob: -9.125691413879395
    4. ' we' → logprob: -9.750691413879395
    5. '
' → logprob: -10.000691413879395
    6. '       ' → logprob: -10.750691413879395
    7. '   ' → logprob: -10.750691413879395
    8. ' the' → logprob: -10.875691413879395
    9. '```' → logprob: -10.875691413879395
    10. '    ' → logprob: -11.000691413879395

Token 450: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09884660691022873
    2. ',
' → logprob: -3.848846673965454
    3. ':' → logprob: -3.973846673965454
    4. ' for' → logprob: -4.098846435546875
    5. '
' → logprob: -4.348846435546875
    6. '       ' → logprob: -4.473846435546875
    7. 'for' → logprob: -5.223846435546875
    8. ':
' → logprob: -5.848846435546875
    9. '        
' → logprob: -6.598846435546875
    10. '   ' → logprob: -6.973846435546875

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25341901183128357
    2. ' for' → logprob: -1.628419041633606
    3. 'for' → logprob: -4.128418922424316
    4. '        
' → logprob: -5.003418922424316
    5. ',' → logprob: -5.628418922424316
    6. '   ' → logprob: -8.128418922424316
    7. '
' → logprob: -8.378418922424316
    8. '<|end|>' → logprob: -8.628418922424316
    9. '  
' → logprob: -9.128418922424316
    10. '#' → logprob: -9.378418922424316

Token 452: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5883110165596008
    2. ' for' → logprob: -0.8383110165596008
    3. '       ' → logprob: -4.838311195373535
    4. 'a' → logprob: -5.713311195373535
    5. ' a' → logprob: -7.713311195373535
    6. '#' (adapté à ' #') → logprob: -8.713311195373535
    7. 'import' → logprob: -8.838311195373535
    8. 'max' → logprob: -9.213311195373535
    9. '        
' → logprob: -10.588311195373535
    10. ' #' → logprob: -10.588311195373535

Token 453: ' brute' (ID: 128602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11698601394891739
    2. ' for' → logprob: -2.241986036300659
    3. '       ' → logprob: -6.49198579788208
    4. 'import' → logprob: -6.86698579788208
    5. 'a' → logprob: -7.11698579788208
    6. '#' → logprob: -7.74198579788208
    7. 'from' → logprob: -8.991986274719238
    8. 'max' → logprob: -9.491986274719238
    9. ' a' → logprob: -9.741986274719238
    10. ' #' → logprob: -10.741986274719238

Token 454: ' force' (ID: 9578)
  Prédit: ' force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -0.3562435209751129
    2. '_force' → logprob: -1.2312434911727905
    3. '-force' → logprob: -5.48124361038208
    4. 'force' → logprob: -5.98124361038208
    5. '_' → logprob: -7.23124361038208
    6. 'for' → logprob: -8.856243133544922
    7. ' for' → logprob: -9.856243133544922
    8. ' ' → logprob: -9.981243133544922
    9. ' _' → logprob: -10.356243133544922
    10. '_FORCE' → logprob: -10.606243133544922

Token 455: ' over' (ID: 1072)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08149844408035278
    2. 'for' → logprob: -2.581498384475708
    3. ' a' → logprob: -7.581498622894287
    4. ' q' → logprob: -7.706498622894287
    5. 'q' → logprob: -8.206498146057129
    6. '   ' → logprob: -8.331498146057129
    7. ' ' → logprob: -8.956498146057129
    8. ',' → logprob: -8.956498146057129
    9. ' i' → logprob: -9.081498146057129
    10. ':' → logprob: -9.081498146057129

Token 456: ' q' (ID: 2335)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9157774448394775
    2. 'range' → logprob: -1.2907774448394775
    3. ' range' → logprob: -1.9157774448394775
    4. 'q' → logprob: -2.7907774448394775
    5. ' q' → logprob: -2.7907774448394775
    6. ' a' → logprob: -2.9157774448394775
    7. '_a' → logprob: -9.665777206420898
    8. 'i' → logprob: -9.665777206420898
    9. 'quantity' → logprob: -9.665777206420898
    10. ' quantity' → logprob: -10.165777206420898

Token 457: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022606621496379375
    2. '1' → logprob: -8.750226020812988
    3. 'u' → logprob: -10.500226020812988
    4. '_' → logprob: -11.125226020812988
    5. 'a' → logprob: -12.750226020812988
    6. 'i' → logprob: -12.875226020812988
    7. 't' → logprob: -13.000226020812988
    8. 'ty' → logprob: -13.000226020812988
    9. '```' → logprob: -13.250226020812988
    10. 'uant' → logprob: -13.375226020812988

Token 458: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4887295365333557
    2. ' for' → logprob: -2.238729476928711
    3. ' +' → logprob: -2.363729476928711
    4. '+' → logprob: -2.488729476928711
    5. 'for' → logprob: -3.113729476928711
    6. ':' → logprob: -3.738729476928711
    7. '   ' → logprob: -4.238729476928711
    8. '
' → logprob: -4.863729476928711
    9. '        
' → logprob: -5.738729476928711
    10. ',' → logprob: -6.488729476928711

Token 459: 'buy' (ID: 30564)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16503119468688965
    2. ' +' → logprob: -2.0400311946868896
    3. ' for' → logprob: -5.040031433105469
    4. ')' → logprob: -5.165031433105469
    5. 'for' → logprob: -6.040031433105469
    6. 'q' → logprob: -6.790031433105469
    7. ' q' → logprob: -7.165031433105469
    8. ',' → logprob: -7.165031433105469
    9. ' )' → logprob: -7.290031433105469
    10. ' range' → logprob: -7.540031433105469

Token 460: 'able' (ID: 562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8136603832244873
    2. ' in' → logprob: -2.0636603832244873
    3. '   ' → logprob: -2.1886603832244873
    4. ')' → logprob: -2.1886603832244873
    5. ' =' → logprob: -2.3136603832244873
    6. '_' → logprob: -2.6886603832244873
    7. '       ' → logprob: -3.0636603832244873
    8. ' for' → logprob: -3.1886603832244873
    9. ' ' → logprob: -3.4386603832244873
    10. '1' → logprob: -3.9386603832244873

Token 461: ' a' (ID: 261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.634973406791687
    2. ' +' → logprob: -1.009973406791687
    3. ')' → logprob: -3.0099735260009766
    4. '):' → logprob: -4.509973526000977
    5. '):
' → logprob: -5.009973526000977
    6. 'a' → logprob: -5.384973526000977
    7. 'quantity' → logprob: -5.509973526000977
    8. '_a' → logprob: -6.009973526000977
    9. ' down' → logprob: -6.009973526000977
    10. 'down' → logprob: -6.259973526000977

Token 462: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.03639676794409752
    2. 'i' → logprob: -4.2863969802856445
    3. 'iz' → logprob: -5.4113969802856445
    4. '_' → logprob: -5.7863969802856445
    5. '```' → logprob: -6.1613969802856445
    6. '_i' → logprob: -6.1613969802856445
    7. '1' → logprob: -6.4113969802856445
    8. ')' → logprob: -7.0363969802856445
    9. 'a' → logprob: -7.5988969802856445
    10. '   ' → logprob: -7.6613969802856445

Token 463: ' max' (ID: 2999)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6158642172813416
    2. ' +' → logprob: -0.9908642172813416
    3. ')' → logprob: -3.2408642768859863
    4. '):' → logprob: -3.6158642768859863
    5. ' ' → logprob: -5.990864276885986
    6. ')+' → logprob: -5.990864276885986
    7. 'quantity' → logprob: -5.990864276885986
    8. '_quantity' → logprob: -6.115864276885986
    9. ':' → logprob: -6.365864276885986
    10. ' chicken' → logprob: -6.865864276885986

Token 464: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0322978496551514
    2. '+' → logprob: -1.6572978496551514
    3. 'quantity' → logprob: -2.0322978496551514
    4. ' +' → logprob: -2.5322978496551514
    5. '):' → logprob: -2.9072978496551514
    6. '_quantity' → logprob: -3.0322978496551514
    7. ' quantity' → logprob: -3.1572978496551514
    8. ' for' → logprob: -4.2822980880737305
    9. '):
' → logprob: -4.9072980880737305
    10. 'a' → logprob: -5.0322980880737305

Token 465: ' is' (ID: 382)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38341858983039856
    2. 'for' → logprob: -1.5084185600280762
    3. '       ' → logprob: -2.383418560028076
    4. ',' → logprob: -6.383418560028076
    5. '        
' → logprob: -6.758418560028076
    6. '
' → logprob: -7.133418560028076
    7. ':' → logprob: -7.508418560028076
    8. '<|end|>' → logprob: -9.008419036865234
    9. ' =' → logprob: -9.508419036865234
    10. '=' → logprob: -9.633419036865234

Token 466: ' acceptable' (ID: 34028)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fe' → logprob: -1.2249534130096436
    2. 'possible' → logprob: -1.3499534130096436
    3. ' feasible' → logprob: -1.4749534130096436
    4. '100' → logprob: -2.3499534130096436
    5. 'min' → logprob: -3.5999534130096436
    6. 'q' → logprob: -3.8499534130096436
    7. 'for' → logprob: -4.099953651428223
    8. 'int' → logprob: -4.474953651428223
    9. ' possible' → logprob: -4.599953651428223
    10. '   ' → logprob: -4.849953651428223

Token 467: ' here' (ID: 2105)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23788422346115112
    2. ' for' → logprob: -2.237884283065796
    3. '        
' → logprob: -2.862884283065796
    4. '
' → logprob: -3.237884283065796
    5. 'for' → logprob: -4.862884044647217
    6. '  
' → logprob: -8.612884521484375
    7. ',' → logprob: -8.862884521484375
    8. '   ' → logprob: -9.237884521484375
    9. '    
' → logprob: -9.237884521484375
    10. '\n' → logprob: -9.487884521484375

Token 468: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1677357256412506
    2. '
' → logprob: -2.5427358150482178
    3. ' for' → logprob: -3.1677358150482178
    4. 'for' → logprob: -4.042735576629639
    5. '        
' → logprob: -4.167735576629639
    6. '   ' → logprob: -9.042736053466797
    7. '\n' → logprob: -9.167736053466797
    8. ',' → logprob: -9.292736053466797
    9. '    
' → logprob: -9.667736053466797
    10. '  
' → logprob: -9.917736053466797

Token 469: 'max' (ID: 3228)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7508013248443604
    2. 'q' → logprob: -1.6258013248443604
    3. 'for' → logprob: -1.8758013248443604
    4. ' q' → logprob: -2.2508013248443604
    5. ')' → logprob: -2.8758013248443604
    6. '       ' → logprob: -5.250801086425781
    7. ' range' → logprob: -5.750801086425781
    8. 'range' → logprob: -6.625801086425781
    9. ' )' → logprob: -6.875801086425781
    10. '):
' → logprob: -7.250801086425781

Token 470: ' ' (ID: 220)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -1.4959529638290405
    2. ' =' → logprob: -1.7459529638290405
    3. '=' → logprob: -1.8709529638290405
    4. '(q' → logprob: -2.12095308303833
    5. '   ' → logprob: -2.62095308303833
    6. 'q' → logprob: -2.62095308303833
    7. ':' → logprob: -3.49595308303833
    8. ')' → logprob: -3.74595308303833
    9. '_q' → logprob: -3.87095308303833
    10. ' for' → logprob: -3.87095308303833

Token 471: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3876775801181793
    2. '10' → logprob: -1.387677550315857
    3. '1' → logprob: -2.6376776695251465
    4. 'q' → logprob: -8.637677192687988
    5. ' ' → logprob: -12.262677192687988
    6. 'range' → logprob: -13.387677192687988
    7. '2' → logprob: -14.262677192687988
    8. '200' → logprob: -14.387677192687988
    9. 'limit' → logprob: -14.887677192687988
    10. '
' → logprob: -15.137677192687988

Token 472: ' million' (ID: 5749)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2520912289619446
    2. '_' → logprob: -1.5020911693572998
    3. '0' → logprob: -9.752091407775879
    4. '00' → logprob: -10.002091407775879
    5. ')' → logprob: -10.502091407775879
    6. ',' → logprob: -10.627091407775879
    7. '       ' → logprob: -14.377091407775879
    8. '      ' → logprob: -14.377091407775879
    9. ' _' → logprob: -14.627091407775879
    10. 'e' → logprob: -14.627091407775879

Token 473: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020616983994841576
    2. ')
' → logprob: -5.0206170082092285
    3. ' for' → logprob: -5.0206170082092285
    4. '):
' → logprob: -6.0206170082092285
    5. '):' → logprob: -6.6456170082092285
    6. ' )' → logprob: -7.0206170082092285
    7. 'for' → logprob: -7.3956170082092285
    8. ',' → logprob: -8.14561653137207
    9. '+' → logprob: -8.27061653137207
    10. '   ' → logprob: -8.27061653137207

Token 474: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3800389766693115
    2. ' but' → logprob: -2.3800389766693115
    3. ' for' → logprob: -2.8800389766693115
    4. '       ' → logprob: -3.8800389766693115
    5. 'for' → logprob: -4.255039215087891
    6. ' and' → logprob: -4.255039215087891
    7. '```' → logprob: -4.255039215087891
    8. ' given' → logprob: -4.505039215087891
    9. ' which' → logprob: -4.755039215087891
    10. ').' → logprob: -5.130039215087891

Token 475: ' input' (ID: 3422)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1136586666107178
    2. 'we' → logprob: -2.3636586666107178
    3. 'likely' → logprob: -3.2386586666107178
    4. ' q' → logprob: -3.3636586666107178
    5. 'still' → logprob: -3.3636586666107178
    6. ' feasible' → logprob: -3.4886586666107178
    7. ' may' → logprob: -3.4886586666107178
    8. ' will' → logprob: -3.6136586666107178
    9. 'break' → logprob: -3.7386586666107178
    10. '#' → logprob: -3.8636586666107178

Token 476: ' constraints' (ID: 31060)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6882503032684326
    2. ')' → logprob: -1.9382503032684326
    3. ' may' → logprob: -2.5632503032684326
    4. ' might' → logprob: -2.6882503032684326
    5. ' can' → logprob: -2.9382503032684326
    6. ' could' → logprob: -3.5632503032684326
    7. ' will' → logprob: -4.063250541687012
    8. ' space' → logprob: -4.563250541687012
    9. ' would' → logprob: -4.688250541687012
    10. ' feasible' → logprob: -4.938250541687012

Token 477: ' say' (ID: 2891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9377439022064209
    2. ' are' → logprob: -1.187743902206421
    3. ' allow' → logprob: -2.187743902206421
    4. ' not' → logprob: -3.187743902206421
    5. ' may' → logprob: -3.187743902206421
    6. ' might' → logprob: -3.812743902206421
    7. 'allow' → logprob: -4.187744140625
    8. ').' → logprob: -4.937744140625
    9. ' can' → logprob: -4.937744140625
    10. '),' → logprob: -5.187744140625

Token 478: ' per' (ID: 777)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9894955158233643
    2. '"' → logprob: -2.3644955158233643
    3. 'nothing' → logprob: -2.3644955158233643
    4. ' q' → logprob: -2.9894955158233643
    5. 'the' → logprob: -3.1144955158233643
    6. 'usually' → logprob: -3.2394955158233643
    7. '#' → logprob: -3.6144955158233643
    8. 'likely' → logprob: -3.7394955158233643
    9. 'it' → logprob: -3.7394955158233643
    10. 'we' → logprob: -3.9894955158233643

Token 479: ' problem' (ID: 4792)
  Prédit: 'haps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haps' → logprob: -0.5147582292556763
    2. 'problem' → logprob: -2.0147581100463867
    3. 'person' → logprob: -2.3897581100463867
    4. 'formance' → logprob: -2.5147581100463867
    5. 'unit' → logprob: -4.264758110046387
    6. ' problem' → logprob: -4.389758110046387
    7. 'son' → logprob: -4.514758110046387
    8. 'token' → logprob: -4.889758110046387
    9. 'user' → logprob: -5.014758110046387
    10. 'f' → logprob: -5.014758110046387

Token 480: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5756406784057617
    2. ' are' → logprob: -1.5756406784057617
    3. ' size' → logprob: -2.8256406784057617
    4. ').' → logprob: -3.4506406784057617
    5. '),' → logprob: -4.075640678405762
    6. '))' → logprob: -4.075640678405762
    7. 'size' → logprob: -4.200640678405762
    8. ',' → logprob: -4.325640678405762
    9. ' may' → logprob: -4.825640678405762
    10. ')
' → logprob: -5.325640678405762

Token 481: ' input' (ID: 3422)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.164473295211792
    2. ' size' → logprob: -2.164473295211792
    3. ' =' → logprob: -2.414473295211792
    4. 'q' → logprob: -2.539473295211792
    5. '_size' → logprob: -2.789473295211792
    6. 'size' → logprob: -2.789473295211792
    7. ' q' → logprob: -2.914473295211792
    8. '=' → logprob: -3.914473295211792
    9. '):' → logprob: -4.164473533630371
    10. '_q' → logprob: -4.164473533630371

Token 482: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.620125949382782
    2. ' size' → logprob: -1.3701260089874268
    3. 'size' → logprob: -1.9951260089874268
    4. ' are' → logprob: -3.7451260089874268
    5. ' constraints' → logprob: -5.120125770568848
    6. ').' → logprob: -5.245125770568848
    7. '),' → logprob: -5.995125770568848
    8. ' value' → logprob: -6.120125770568848
    9. ' values' → logprob: -6.120125770568848
    10. 'q' → logprob: -6.120125770568848

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0923417806625366
    2. '100' → logprob: -1.2173417806625366
    3. 'are' → logprob: -2.717341899871826
    4. 'is' → logprob: -2.717341899871826
    5. '=' → logprob: -2.842341899871826
    6. 'q' → logprob: -3.467341899871826
    7. '<=' → logprob: -3.842341899871826
    8. ' is' → logprob: -3.967341899871826
    9. ' ' → logprob: -3.967341899871826
    10. ' are' → logprob: -4.092341899871826

Token 484: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5773900151252747
    2. '_' → logprob: -0.8273900151252747
    3. ',' → logprob: -6.702390193939209
    4. 'e' → logprob: -10.07738971710205
    5. '00' → logprob: -10.20238971710205
    6. '   ' → logprob: -11.07738971710205
    7. ' ' → logprob: -11.07738971710205
    8. '
' → logprob: -11.13988971710205
    9. ')' → logprob: -11.20238971710205
    10. '       ' → logprob: -11.32738971710205

Token 485: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.0802738870552275e-05
    2. '_' → logprob: -12.62501049041748
    3. '00' → logprob: -13.50001049041748
    4. '048' → logprob: -13.87501049041748
    5. '0' → logprob: -14.12501049041748
    6. '```' → logprob: -14.25001049041748
    7. 'million' → logprob: -14.62501049041748
    8. '100' → logprob: -14.62501049041748
    9. '   ' → logprob: -14.75001049041748
    10. 'q' → logprob: -15.62501049041748

Token 486: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.46052441000938416
    2. '_' → logprob: -1.5855244398117065
    3. ',' → logprob: -1.8355244398117065
    4. ')' → logprob: -6.335524559020996
    5. '   ' → logprob: -7.585524559020996
    6. ' ' → logprob: -8.210524559020996
    7. '       ' → logprob: -8.335524559020996
    8. ',
' → logprob: -8.460524559020996
    9. '```' → logprob: -8.710524559020996
    10. '
' → logprob: -8.773024559020996

Token 487: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -5.300083648762666e-05
    2. ')' → logprob: -11.125053405761719
    3. '00' → logprob: -11.750053405761719
    4. ' ' → logprob: -11.750053405761719
    5. '0' → logprob: -11.875053405761719
    6. '       ' → logprob: -12.750053405761719
    7. '   ' → logprob: -13.125053405761719
    8. 'q' → logprob: -13.375053405761719
    9. '100' → logprob: -13.375053405761719
    10. '001' → logprob: -13.375053405761719

Token 488: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07690209150314331
    2. '):' → logprob: -2.826902151107788
    3. ').' → logprob: -5.701901912689209
    4. '):
' → logprob: -5.951901912689209
    5. '       ' → logprob: -5.951901912689209
    6. ')
' → logprob: -6.451901912689209
    7. ',' → logprob: -7.076901912689209
    8. ' for' → logprob: -7.076901912689209
    9. '),' → logprob: -7.576901912689209
    10. '#' → logprob: -7.701901912689209

Token 489: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.16102002561092377
    2. ')' → logprob: -2.661020040512085
    3. '       ' → logprob: -2.911020040512085
    4. ' and' → logprob: -5.161019802093506
    5. ' not' → logprob: -5.786019802093506
    6. ' which' → logprob: -5.911019802093506
    7. ' for' → logprob: -6.411019802093506
    8. '#' → logprob: -6.536019802093506
    9. ' continue' → logprob: -6.661019802093506
    10. '```' → logprob: -6.661019802093506

Token 490: ' test' (ID: 1746)
  Prédit: 'usually'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usually' → logprob: -2.3519585132598877
    2. ' usually' → logprob: -2.6019585132598877
    3. 'the' → logprob: -2.8519585132598877
    4. 'q' → logprob: -2.8519585132598877
    5. ' q' → logprob: -2.9769585132598877
    6. ' may' → logprob: -2.9769585132598877
    7. 'we' → logprob: -3.1019585132598877
    8. ' the' → logprob: -3.2269585132598877
    9. ' might' → logprob: -3.3519585132598877
    10. ' can' → logprob: -3.3519585132598877

Token 491: ' cases' (ID: 7911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5683735609054565
    2. ')' → logprob: -1.9433735609054565
    3. '       ' → logprob: -2.443373680114746
    4. 'cases' → logprob: -2.693373680114746
    5. 'ing' → logprob: -2.943373680114746
    6. 's' → logprob: -3.068373680114746
    7. '_quantity' → logprob: -3.068373680114746
    8. 'case' → logprob: -3.568373680114746
    9. '   ' → logprob: -3.693373680114746
    10. '_limit' → logprob: -3.693373680114746

Token 492: ' ~' (ID: 6574)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' may' → logprob: -0.8668819069862366
    2. ' are' → logprob: -1.7418818473815918
    3. ' might' → logprob: -1.9918818473815918
    4. 'may' → logprob: -2.616881847381592
    5. ')' → logprob: -2.741881847381592
    6. ' can' → logprob: -3.741881847381592
    7. ' often' → logprob: -3.991881847381592
    8. ' could' → logprob: -4.241881847381592
    9. ' will' → logprob: -4.241881847381592
    10. 'are' → logprob: -5.116881847381592

Token 493: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4592791795730591
    2. '10' → logprob: -2.8342790603637695
    3. 'sm' → logprob: -3.3342790603637695
    4. ' ' → logprob: -3.4592790603637695
    5. 'usually' → logprob: -3.5842790603637695
    6. 'likely' → logprob: -3.9592790603637695
    7. 'few' → logprob: -4.2092790603637695
    8. 'not' → logprob: -4.2092790603637695
    9. '500' → logprob: -4.3342790603637695
    10. 'small' → logprob: -4.4592790603637695

Token 494: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.09601769596338272
    2. '10' → logprob: -2.471017599105835
    3. '500' → logprob: -6.221017837524414
    4. '1' → logprob: -6.721017837524414
    5. '200' → logprob: -7.346017837524414
    6. 'small' → logprob: -7.471017837524414
    7. '20' → logprob: -7.596017837524414
    8. '50' → logprob: -7.721017837524414
    9. 'sm' → logprob: -8.096017837524414
    10. 'few' → logprob: -8.221017837524414

Token 495: ' sets' (ID: 11982)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046994972974061966
    2. '0' → logprob: -4.046995162963867
    3. '000' → logprob: -4.671995162963867
    4. '       ' → logprob: -5.671995162963867
    5. ' for' → logprob: -5.921995162963867
    6. ',' → logprob: -5.921995162963867
    7. ' lines' → logprob: -6.171995162963867
    8. ' )' → logprob: -6.296995162963867
    9. 'for' → logprob: -7.296995162963867
    10. 'q' → logprob: -7.546995162963867

Token 496: ' so' (ID: 813)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20189234614372253
    2. '       ' → logprob: -1.951892375946045
    3. ' for' → logprob: -4.076892375946045
    4. 'for' → logprob: -5.201892375946045
    5. ',' → logprob: -5.326892375946045
    6. '):' → logprob: -5.576892375946045
    7. '):
' → logprob: -5.951892375946045
    8. '   ' → logprob: -6.701892375946045
    9. ').' → logprob: -7.201892375946045
    10. ')
' → logprob: -7.451892375946045

Token 497: ' ok' (ID: 4763)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -2.6122164726257324
    2. 'this' → logprob: -2.6122164726257324
    3. ')' → logprob: -2.7372164726257324
    4. ' it' → logprob: -3.2372164726257324
    5. 'should' → logprob: -3.2372164726257324
    6. 'likely' → logprob: -3.2372164726257324
    7. ' this' → logprob: -3.3622164726257324
    8. 'the' → logprob: -3.3622164726257324
    9. 'may' → logprob: -3.4872164726257324
    10. 'timeout' → logprob: -3.6122164726257324

Token 498: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11781216412782669
    2. '       ' → logprob: -2.367812156677246
    3. ' for' → logprob: -4.992812156677246
    4. '):
' → logprob: -6.242812156677246
    5. '):' → logprob: -6.242812156677246
    6. 'for' → logprob: -6.367812156677246
    7. ')
' → logprob: -6.367812156677246
    8. '        
' → logprob: -7.117812156677246
    9. ').' → logprob: -7.367812156677246
    10. ',' → logprob: -7.367812156677246

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03249066323041916
    2. '        
' → logprob: -4.0324907302856445
    3. ' for' → logprob: -5.0324907302856445
    4. '
' → logprob: -5.4074907302856445
    5. 'for' → logprob: -5.7824907302856445
    6. '<|end|>' → logprob: -10.282490730285645
    7. '```' → logprob: -10.657490730285645
    8. '   ' → logprob: -10.657490730285645
    9. '    
' → logprob: -11.032490730285645
    10. '  
' → logprob: -11.782490730285645

Token 500: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13442641496658325
    2. '       ' → logprob: -2.5094263553619385
    3. ' for' → logprob: -3.2594263553619385
    4. 'a' → logprob: -5.134426593780518
    5. 'i' → logprob: -10.13442611694336
    6. 'ai' → logprob: -10.50942611694336
    7. ' a' → logprob: -10.63442611694336
    8. '        
' → logprob: -10.63442611694336
    9. '   ' → logprob: -11.13442611694336
    10. '```' → logprob: -11.25942611694336

Token 501: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06035880744457245
    2. ' for' → logprob: -3.185358762741089
    3. 'a' → logprob: -4.435359001159668
    4. '       ' → logprob: -5.310359001159668
    5. '   ' → logprob: -8.560359001159668
    6. ' a' → logprob: -8.935359001159668
    7. 'import' → logprob: -10.560359001159668
    8. 'ai' → logprob: -11.310359001159668
    9. 'i' → logprob: -11.560359001159668
    10. '```' → logprob: -11.560359001159668

Token 502: ' can' (ID: 665)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7031146287918091
    2. 'for' → logprob: -0.8281146287918091
    3. '       ' → logprob: -3.9531145095825195
    4. ' can' → logprob: -4.5781145095825195
    5. 'import' → logprob: -4.5781145095825195
    6. 'def' → logprob: -4.8281145095825195
    7. ' continue' → logprob: -5.5781145095825195
    8. '    ' → logprob: -5.9531145095825195
    9. ' =' → logprob: -6.0781145095825195
    10. '   ' → logprob: -6.2031145095825195

Token 503: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.145723581314087
    2. ' for' → logprob: -1.770723581314087
    3. 'opt' → logprob: -2.520723581314087
    4. '   ' → logprob: -2.895723581314087
    5. ' use' → logprob: -3.020723581314087
    6. ' try' → logprob: -3.270723581314087
    7. 'return' → logprob: -3.270723581314087
    8. '```' → logprob: -3.270723581314087
    9. 'try' → logprob: -3.520723581314087
    10. '       ' → logprob: -3.770723581314087

Token 504: ' optimization' (ID: 34658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33553847670555115
    2. ' for' → logprob: -1.5855385065078735
    3. 'a' → logprob: -3.085538387298584
    4. '       ' → logprob: -4.085538387298584
    5. ' a' → logprob: -5.085538387298584
    6. '   ' → logprob: -5.835538387298584
    7. 'q' → logprob: -5.835538387298584
    8. '```' → logprob: -6.710538387298584
    9. 'def' → logprob: -6.835538387298584
    10. ' q' → logprob: -7.335538387298584

Token 505: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9323521256446838
    2. '       ' → logprob: -1.307352066040039
    3. '        
' → logprob: -1.307352066040039
    4. '
' → logprob: -3.307352066040039
    5. 'for' → logprob: -4.057352066040039
    6. '        
        
' → logprob: -6.557352066040039
    7. '        

' → logprob: -6.932352066040039
    8. '    
' → logprob: -7.057352066040039
    9. '  
' → logprob: -7.057352066040039
    10. '
        
' → logprob: -7.307352066040039

Token 506: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0252503156661987
    2. ' max' → logprob: -1.7752503156661987
    3. 'for' → logprob: -1.9002503156661987
    4. '       ' → logprob: -2.7752504348754883
    5. 'max' → logprob: -3.0252504348754883
    6. ' left' → logprob: -3.4002504348754883
    7. 'a' → logprob: -3.4002504348754883
    8. ' a' → logprob: -3.6502504348754883
    9. 'left' → logprob: -3.9002504348754883
    10. 'import' → logprob: -4.400250434875488

Token 507: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4379672110080719
    2. ' for' → logprob: -1.9379671812057495
    3. ' def' → logprob: -3.312967300415039
    4. 'for' → logprob: -3.562967300415039
    5. ' try' → logprob: -3.812967300415039
    6. ' don't' → logprob: -4.187967300415039
    7. 'def' → logprob: -4.187967300415039
    8. ' will' → logprob: -4.312967300415039
    9. ' know' → logprob: -4.437967300415039
    10. ' do' → logprob: -4.687967300415039

Token 508: ' break' (ID: 2338)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.6096982955932617
    2. 'calculate' → logprob: -1.9846982955932617
    3. ' use' → logprob: -2.4846982955932617
    4. ' calculate' → logprob: -2.6096982955932617
    5. ' compute' → logprob: -2.9846982955932617
    6. ' start' → logprob: -3.1096982955932617
    7. 'skip' → logprob: -3.2346982955932617
    8. 'break' → logprob: -3.2346982955932617
    9. 'compute' → logprob: -3.2346982955932617
    10. 'binary' → logprob: -3.3596982955932617

Token 509: ' early' (ID: 6047)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0365331172943115
    2. 'if' → logprob: -1.4115331172943115
    3. '   ' → logprob: -2.6615331172943115
    4. ' early' → logprob: -2.7865331172943115
    5. '       ' → logprob: -3.1615331172943115
    6. 'for' → logprob: -3.4115331172943115
    7. ' the' → logprob: -3.5365331172943115
    8. 'the' → logprob: -3.5365331172943115
    9. '<|end|>' → logprob: -3.5365331172943115
    10. 'early' → logprob: -3.6615331172943115

Token 510: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4469212591648102
    2. '        
' → logprob: -1.4469212293624878
    3. ' for' → logprob: -2.3219213485717773
    4. 'for' → logprob: -4.071921348571777
    5. '
' → logprob: -5.071921348571777
    6. '        
        
' → logprob: -7.571921348571777
    7. ' if' → logprob: -7.821921348571777
    8. '        ' → logprob: -7.946921348571777
    9. '   ' → logprob: -8.321921348571777
    10. ' in' → logprob: -8.446921348571777

Token 511: ' total' (ID: 3609)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.4396139681339264
    2. 'best' → logprob: -1.439613938331604
    3. ' a' → logprob: -3.6896140575408936
    4. ' c' → logprob: -3.8146140575408936
    5. ' q' → logprob: -4.0646138191223145
    6. 'c' → logprob: -4.9396138191223145
    7. ' True' → logprob: -5.0646138191223145
    8. ' False' → logprob: -5.0646138191223145
    9. 'b' → logprob: -5.1896138191223145
    10. 'a' → logprob: -5.1896138191223145

Token 512: ' quantity' (ID: 17245)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.7474992871284485
    2. '_' → logprob: -1.1224992275238037
    3. '_quantity' → logprob: -1.9974992275238037
    4. '_cost' → logprob: -3.6224992275238037
    5. 'a' → logprob: -4.372499465942383
    6. ' a' → logprob: -4.497499465942383
    7. '_price' → logprob: -5.747499465942383
    8. '_purchase' → logprob: -6.372499465942383
    9. 'cost' → logprob: -6.497499465942383
    10. ' cost' → logprob: -6.622499465942383

Token 513: ' is' (ID: 382)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6096431016921997
    2. ' <' → logprob: -1.2346431016921997
    3. '>=' → logprob: -2.35964298248291
    4. '_a' → logprob: -4.10964298248291
    5. ' is' → logprob: -4.60964298248291
    6. 'a' → logprob: -4.85964298248291
    7. '<' → logprob: -5.23464298248291
    8. ' >' → logprob: -5.60964298248291
    9. '>' → logprob: -5.85964298248291
    10. ' =' → logprob: -5.85964298248291

Token 514: ' below' (ID: 4895)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5123778581619263
    2. '>=' → logprob: -1.1373778581619263
    3. 'en' → logprob: -3.5123777389526367
    4. 'greater' → logprob: -4.137377738952637
    5. 'less' → logprob: -4.637377738952637
    6. 'already' → logprob: -5.012377738952637
    7. '<' → logprob: -5.137377738952637
    8. '>' → logprob: -6.137377738952637
    9. ' >=' → logprob: -6.262377738952637
    10. ' q' → logprob: -6.762377738952637

Token 515: ' q' (ID: 2335)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9131192564964294
    2. 'q' → logprob: -0.9131192564964294
    3. ' q' → logprob: -2.038119316101074
    4. ' a' → logprob: -3.038119316101074
    5. ' the' → logprob: -5.163119316101074
    6. 'the' → logprob: -5.538119316101074
    7. 'possible' → logprob: -6.038119316101074
    8. '       ' → logprob: -7.288119316101074
    9. 'current' → logprob: -7.413119316101074
    10. 'required' → logprob: -7.538119316101074

Token 516: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1445891559123993
    2. '1' → logprob: -2.0195891857147217
    3. 'i' → logprob: -6.894588947296143
    4. 'a' → logprob: -8.7695894241333
    5. '_' → logprob: -9.3945894241333
    6. '       ' → logprob: -9.3945894241333
    7. '```' → logprob: -9.9570894241333
    8. ')' → logprob: -10.0195894241333
    9. '_i' → logprob: -10.0195894241333
    10. 'q' → logprob: -10.0195894241333

Token 517: ' anyway' (ID: 22332)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11387080699205399
    2. '        
' → logprob: -2.988870859146118
    3. ' for' → logprob: -3.488870859146118
    4. '
' → logprob: -3.738870859146118
    5. 'for' → logprob: -6.238870620727539
    6. '<|end|>' → logprob: -8.363870620727539
    7. ',' → logprob: -8.738870620727539
    8. '  
' → logprob: -8.863870620727539
    9. '\n' → logprob: -9.238870620727539
    10. '    
' → logprob: -9.363870620727539

Token 518: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1232001781463623
    2. ' for' → logprob: -2.7482001781463623
    3. '
' → logprob: -3.8732001781463623
    4. '        
' → logprob: -3.8732001781463623
    5. 'for' → logprob: -4.623200416564941
    6. '\n' → logprob: -9.248200416564941
    7. '   ' → logprob: -9.373200416564941
    8. '```' → logprob: -9.748200416564941
    9. '    
' → logprob: -10.248200416564941
    10. ',' → logprob: -10.623200416564941

Token 519: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007533394731581211
    2. '        
' → logprob: -5.507533550262451
    3. 'for' → logprob: -6.382533550262451
    4. ' for' → logprob: -6.757533550262451
    5. '
' → logprob: -7.632533550262451
    6. '   ' → logprob: -10.132533073425293
    7. '    
' → logprob: -11.382533073425293
    8. '	' → logprob: -11.882533073425293
    9. '<|end|>' → logprob: -11.882533073425293
    10. '\n' → logprob: -12.007533073425293

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015051016816869378
    2. 'for' → logprob: -7.001504898071289
    3. ' for' → logprob: -7.501504898071289
    4. '        
' → logprob: -10.501504898071289
    5. '   ' → logprob: -11.626504898071289
    6. '
' → logprob: -12.751504898071289
    7. 'a' → logprob: -14.751504898071289
    8. '	' → logprob: -15.001504898071289
    9. '	for' → logprob: -15.126504898071289
    10. '```' → logprob: -15.126504898071289

Token 521: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0026461677625775337
    2. '       ' → logprob: -6.627645969390869
    3. ' for' → logprob: -7.127645969390869
    4. 'a' → logprob: -7.627645969390869
    5. 'i' → logprob: -10.752646446228027
    6. 'import' → logprob: -13.127646446228027
    7. '```' → logprob: -13.502646446228027
    8. 'ai' → logprob: -13.627646446228027
    9. 'max' → logprob: -14.127646446228027
    10. '   ' → logprob: -14.377646446228027

Token 522: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2847760021686554
    2. 'a' → logprob: -1.409775972366333
    3. ' ai' → logprob: -7.034776210784912
    4. ' q' → logprob: -7.284776210784912
    5. ' amount' → logprob: -7.534776210784912
    6. 'ai' → logprob: -8.034775733947754
    7. 'q' → logprob: -8.409775733947754
    8. 'amount' → logprob: -8.909775733947754
    9. ' quantity' → logprob: -8.909775733947754
    10. ' x' → logprob: -9.409775733947754

Token 523: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.044595878571271896
    2. 'i' → logprob: -3.794595956802368
    3. ' in' → logprob: -4.544595718383789
    4. '_' → logprob: -5.544595718383789
    5. 'iz' → logprob: -5.919595718383789
    6. '_i' → logprob: -6.294595718383789
    7. '1' → logprob: -7.544595718383789
    8. 'a' → logprob: -8.169595718383789
    9. ' i' → logprob: -8.294595718383789
    10. '`' → logprob: -9.169595718383789

Token 524: '_qty' (ID: 80847)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024298302829265594
    2. '_qty' → logprob: -4.524298191070557
    3. 'in' → logprob: -4.899298191070557
    4. '_quantity' → logprob: -5.524298191070557
    5. '_in' → logprob: -7.399298191070557
    6. '_' → logprob: -7.649298191070557
    7. '_amount' → logprob: -8.649298667907715
    8. 'qty' → logprob: -9.024298667907715
    9. '_count' → logprob: -9.524298667907715
    10. '_q' → logprob: -9.774298667907715

Token 525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01603730209171772
    2. 'in' → logprob: -4.141037464141846
    3. ' ' → logprob: -13.391036987304688
    4. 'In' → logprob: -15.141036987304688
    5. '_in' → logprob: -15.391036987304688
    6. '	in' → logprob: -15.516036987304688
    7. 'int' → logprob: -15.891036987304688
    8. '```' → logprob: -16.266036987304688
    9. 's' → logprob: -16.641036987304688
    10. 'range' → logprob: -16.641036987304688

Token 526: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. 're' → logprob: -15.000261306762695
    4. 'reverse' → logprob: -18.625261306762695
    5. '(range' → logprob: -19.125261306762695
    6. ' reversed' → logprob: -19.750261306762695
    7. '	range' → logprob: -20.375261306762695
    8. '   ' → logprob: -20.625261306762695
    9. 'ranges' → logprob: -21.500261306762695
    10. ' ' → logprob: -21.625261306762695

Token 527: '(min' (ID: 26035)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -8.2994620242971e-06
    2. '(problem' → logprob: -12.250008583068848
    3. 'q' → logprob: -12.750008583068848
    4. '(' → logprob: -14.750008583068848
    5. '(min' → logprob: -17.37500762939453
    6. 'problem' → logprob: -17.62500762939453
    7. '[q' → logprob: -19.25000762939453
    8. '(query' → logprob: -19.50000762939453
    9. '(prob' → logprob: -19.87500762939453
    10. '(question' → logprob: -20.25000762939453

Token 528: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0003500050224829465
    2. '(problem' → logprob: -8.125349998474121
    3. '(' → logprob: -10.000349998474121
    4. 'q' → logprob: -12.500349998474121
    5. 'problem' → logprob: -12.750349998474121
    6. '(max' → logprob: -15.250349998474121
    7. '_q' → logprob: -15.500349998474121
    8. '(question' → logprob: -15.500349998474121
    9. ',q' → logprob: -15.875349998474121
    10. '(a' → logprob: -16.125350952148438

Token 529: '2' (ID: 17)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.001484270323999226
    2. '(' → logprob: -7.126484394073486
    3. '2' → logprob: -7.501484394073486
    4. '(problem' → logprob: -9.751483917236328
    5. 'q' → logprob: -10.126483917236328
    6. '(a' → logprob: -11.626483917236328
    7. '1' → logprob: -12.126483917236328
    8. 'a' → logprob: -12.751483917236328
    9. '[q' → logprob: -13.376483917236328
    10. 'problem' → logprob: -13.751483917236328

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011571277864277363
    2. ',q' → logprob: -7.251157283782959
    3. ' ,' → logprob: -7.751157283782959
    4. ',b' → logprob: -11.6261568069458
    5. 'q' → logprob: -12.5011568069458
    6. '),' → logprob: -13.8761568069458
    7. '   ' → logprob: -14.8761568069458
    8. ' ' → logprob: -15.0011568069458
    9. ',p' → logprob: -15.1261568069458
    10. 'b' → logprob: -15.1261568069458

Token 531: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006784639321267605
    2. 'q' → logprob: -5.256784439086914
    3. ' b' → logprob: -7.006784439086914
    4. 'problem' → logprob: -8.006784439086914
    5. '(b' → logprob: -9.381784439086914
    6. '(q' → logprob: -10.131784439086914
    7. ' q' → logprob: -10.256784439086914
    8. '   ' → logprob: -10.381784439086914
    9. '100' → logprob: -10.506784439086914
    10. ' (' → logprob: -11.006784439086914

Token 532: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4303518533706665
    2. '//' → logprob: -1.0553518533706665
    3. ')' → logprob: -6.555351734161377
    4. '   ' → logprob: -9.305352210998535
    5. ' ' → logprob: -9.805352210998535
    6. ')//' → logprob: -10.180352210998535
    7. '),' → logprob: -10.930352210998535
    8. '    ' → logprob: -12.055352210998535
    9. '       ' → logprob: -12.180352210998535
    10. '  ' → logprob: -12.680352210998535

Token 533: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004309076175559312
    2. ' c' → logprob: -7.750431060791016
    3. ')c' → logprob: -16.000431060791016
    4. '   ' → logprob: -16.750431060791016
    5. '	c' → logprob: -17.250431060791016
    6. '$c' → logprob: -18.625431060791016
    7. ')' → logprob: -18.750431060791016
    8. '(c' → logprob: -18.750431060791016
    9. '_c' → logprob: -19.000431060791016
    10. '       ' → logprob: -19.000431060791016

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.5
    3. ')' → logprob: -17.125
    4. '১' → logprob: -17.6875
    5. '```' → logprob: -17.75
    6. '<|end|>' → logprob: -18.0
    7. 'c' → logprob: -18.0625
    8. '۱' → logprob: -18.0625
    9. '１' → logprob: -18.4375
    10. 's' → logprob: -18.4375

Token 535: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0030570924282073975
    2. ' ),' → logprob: -6.25305700302124
    3. ',' → logprob: -7.50305700302124
    4. ')' → logprob: -7.62805700302124
    5. '   ' → logprob: -10.253057479858398
    6. ')+' → logprob: -10.378057479858398
    7. ' ' → logprob: -12.378057479858398
    8. ' ,' → logprob: -12.628057479858398
    9. '    ' → logprob: -13.128057479858398
    10. '0' → logprob: -13.503057479858398

Token 536: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00091217877343297
    2. ' ' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.500911712646484
    4. '  ' → logprob: -16.875911712646484
    5. '1' → logprob: -17.750911712646484
    6. '  
' → logprob: -18.250911712646484
    7. '    ' → logprob: -18.625911712646484
    8. '```' → logprob: -18.750911712646484
    9. '	' → logprob: -19.375911712646484
    10. '     ' → logprob: -19.375911712646484

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.12501049041748
    4. '1' → logprob: -15.37501049041748
    5. '```' → logprob: -17.125011444091797
    6. '-' → logprob: -17.625011444091797
    7. '  ' → logprob: -17.875011444091797
    8. 'max' → logprob: -18.375011444091797
    9. '
' → logprob: -18.875011444091797
    10. '

' → logprob: -18.937511444091797

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28588545322418213
    2. '-' → logprob: -1.4108854532241821
    3. ',-' → logprob: -5.910885334014893
    4. ' -' → logprob: -6.410885334014893
    5. ' ,' → logprob: -8.91088581085205
    6. '   ' → logprob: -9.16088581085205
    7. '0' → logprob: -9.91088581085205
    8. '-,' → logprob: -10.53588581085205
    9. '       ' → logprob: -10.78588581085205
    10. ',
' → logprob: -12.03588581085205

Token 539: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006278486107476056
    2. ' -' → logprob: -7.3756279945373535
    3. '```' → logprob: -14.250627517700195
    4. '   ' → logprob: -14.375627517700195
    5. '  ' → logprob: -16.625627517700195
    6. ' ' → logprob: -18.500627517700195
    7. '1' → logprob: -18.500627517700195
    8. '       ' → logprob: -19.000627517700195
    9. ')' → logprob: -19.125627517700195
    10. '﻿' → logprob: -19.250627517700195

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '-' → logprob: -11.875007629394531
    3. ' ' → logprob: -14.875007629394531
    4. ' -' → logprob: -16.12500762939453
    5. ')' → logprob: -16.87500762939453
    6. '   ' → logprob: -18.75000762939453
    7. '```' → logprob: -19.00000762939453
    8. '):
' → logprob: -20.00000762939453
    9. '2' → logprob: -20.75000762939453
    10. '  ' → logprob: -21.12500762939453

Token 541: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001359997782856226
    2. '):
' → logprob: -6.626359939575195
    3. ':' → logprob: -11.376359939575195
    4. '):
' → logprob: -11.501359939575195
    5. ' ):' → logprob: -11.751359939575195
    6. ')' → logprob: -12.751359939575195
    7. '       ' → logprob: -14.001359939575195
    8. '   ' → logprob: -14.626359939575195
    9. ',' → logprob: -16.501359939575195
    10. '):

' → logprob: -16.501359939575195

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037959083914756775
    2. '   ' → logprob: -4.037959098815918
    3. '       ' → logprob: -4.787959098815918
    4. '            
' → logprob: -5.912959098815918
    5. '            ' → logprob: -6.537959098815918
    6. '        ' → logprob: -6.912959098815918
    7. '        
' → logprob: -7.037959098815918
    8. '
' → logprob: -7.162959098815918
    9. '    
' → logprob: -7.162959098815918
    10. ' ' → logprob: -7.412959098815918

Token 543: ' cost' (ID: 3097)
  Prédit: ' leftover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leftover' → logprob: -0.22553926706314087
    2. '           ' → logprob: -2.225539207458496
    3. 'budget' → logprob: -3.850539207458496
    4. 'left' → logprob: -3.975539207458496
    5. ' normal' → logprob: -4.850539207458496
    6. ' max' → logprob: -4.850539207458496
    7. ' left' → logprob: -4.975539207458496
    8. ' budget' → logprob: -4.975539207458496
    9. 'max' → logprob: -5.225539207458496
    10. 'normal' → logprob: -5.350539207458496

Token 544: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01333787851035595
    2. '=' → logprob: -4.638338088989258
    3. '_a' → logprob: -5.638338088989258
    4. '_' → logprob: -11.888338088989258
    5. 'a' → logprob: -12.888338088989258
    6. '   ' → logprob: -12.888338088989258
    7. 'A' → logprob: -13.763338088989258
    8. 's' → logprob: -14.388338088989258
    9. '_total' → logprob: -14.513338088989258
    10. '_c' → logprob: -14.513338088989258

Token 545: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.0003886086633428931
    2. '1' → logprob: -8.875388145446777
    3. ' =' → logprob: -9.125388145446777
    4. 'iz' → logprob: -10.125388145446777
    5. 'i' → logprob: -10.375388145446777
    6. '`' → logprob: -11.250388145446777
    7. '_' → logprob: -11.250388145446777
    8. '=' → logprob: -12.000388145446777
    9. 'a' → logprob: -12.125388145446777
    10. '

' → logprob: -12.500388145446777

Token 546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740782678127289
    2. '=' → logprob: -0.9740782976150513
    3. ')' → logprob: -14.474078178405762
    4. '=c' → logprob: -15.224078178405762
    5. ' ' → logprob: -15.474078178405762
    6. '=a' → logprob: -16.849079132080078
    7. '*' → logprob: -17.474079132080078
    8. ':' → logprob: -17.599079132080078
    9. '	' → logprob: -17.599079132080078
    10. '```' → logprob: -17.599079132080078

Token 547: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22093971073627472
    2. ' a' → logprob: -1.7209397554397583
    3. 'c' → logprob: -4.470939636230469
    4. ' c' → logprob: -4.845939636230469
    5. '   ' → logprob: -10.720939636230469
    6. ' ' → logprob: -11.845939636230469
    7. '	a' → logprob: -12.345939636230469
    8. ' ' → logprob: -13.658439636230469
    9. '    ' → logprob: -13.845939636230469
    10. '	c' → logprob: -13.908439636230469

Token 548: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.00035786881926469505
    2. 'iz' → logprob: -8.750357627868652
    3. 'i' → logprob: -9.375357627868652
    4. ' ' → logprob: -11.000357627868652
    5. ' =' → logprob: -11.500357627868652
    6. '1' → logprob: -11.750357627868652
    7. '`' → logprob: -11.875357627868652
    8. 'c' → logprob: -11.875357627868652
    9. '

' → logprob: -12.250357627868652
    10. '=' → logprob: -12.375357627868652

Token 549: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -4.692145012086257e-05
    2. 'qty' → logprob: -10.750046730041504
    3. '*_' → logprob: -11.625046730041504
    4. '_amt' → logprob: -12.750046730041504
    5. '*' → logprob: -12.875046730041504
    6. '_' → logprob: -12.875046730041504
    7. '_q' → logprob: -13.625046730041504
    8. 'Qty' → logprob: -13.625046730041504
    9. '```' → logprob: -13.875046730041504
    10. ' _' → logprob: -14.500046730041504

Token 550: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1269443929195404
    2. '*' → logprob: -2.1269443035125732
    3. '*c' → logprob: -11.251944541931152
    4. '   ' → logprob: -13.376944541931152
    5. ' ' → logprob: -13.751944541931152
    6. ' ' → logprob: -15.251944541931152
    7. '    ' → logprob: -16.126943588256836
    8. '=' → logprob: -16.376943588256836
    9. ')' → logprob: -16.376943588256836
    10. '
' → logprob: -17.001943588256836

Token 551: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004306692280806601
    2. ' c' → logprob: -7.750430583953857
    3. '	c' → logprob: -20.875431060791016
    4. ')c' → logprob: -21.875431060791016
    5. '_c' → logprob: -22.000431060791016
    6. '```' → logprob: -23.625431060791016
    7. '$c' → logprob: -24.000431060791016
    8. '*c' → logprob: -24.000431060791016
    9. '   ' → logprob: -24.000431060791016
    10. ' ' → logprob: -24.000431060791016

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.0
    3. '<|end|>' → logprob: -16.0
    4. ' ' → logprob: -16.625
    5. '```' → logprob: -17.625
    6. 'a' → logprob: -18.375
    7. '.' → logprob: -18.75
    8. '۱' → logprob: -18.875
    9. ')' → logprob: -18.875
    10. '１' → logprob: -18.9375

Token 553: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23825272917747498
    2. '
' → logprob: -2.238252639770508
    3. '            
' → logprob: -2.613252639770508
    4. '<|end|>' → logprob: -3.738252639770508
    5. ' 
' → logprob: -6.738252639770508
    6. '       ' → logprob: -6.863252639770508
    7. ',' → logprob: -6.863252639770508
    8. ')' → logprob: -7.113252639770508
    9. '            ' → logprob: -7.613252639770508
    10. '  
' → logprob: -7.613252639770508

Token 554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011948409490287304
    2. '            
' → logprob: -4.761948585510254
    3. '            ' → logprob: -6.386948585510254
    4. '       ' → logprob: -7.636948585510254
    5. '    
' → logprob: -8.636948585510254
    6. ' leftover' → logprob: -9.011948585510254
    7. '
' → logprob: -9.136948585510254
    8. '        
' → logprob: -9.136948585510254
    9. ' normal' → logprob: -9.261948585510254
    10. '               ' → logprob: -9.636948585510254

Token 555: ' if' (ID: 538)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04393557086586952
    2. 'remaining' → logprob: -3.543935537338257
    3. 'if' (adapté à ' if') → logprob: -5.418935775756836
    4. ' leftover' → logprob: -5.543935775756836
    5. 'budget' → logprob: -6.043935775756836
    6. 'remain' → logprob: -6.668935775756836
    7. 'rem' → logprob: -7.043935775756836
    8. 'max' → logprob: -7.543935775756836
    9. '           ' → logprob: -7.793935775756836
    10. ' left' → logprob: -9.418935775756836

Token 556: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.011047935113310814
    2. ' cost' → logprob: -4.511047840118408
    3. '_cost' → logprob: -17.38604736328125
    4. '(cost' → logprob: -17.38604736328125
    5. 'Cost' → logprob: -18.01104736328125
    6. '           ' → logprob: -20.38604736328125
    7. '   ' → logprob: -20.51104736328125
    8. '.cost' → logprob: -21.38604736328125
    9. 'c' → logprob: -21.38604736328125
    10. 'b' → logprob: -21.88604736328125

Token 557: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.1008713702030946e-06
    2. 'a' → logprob: -13.750001907348633
    3. '_' → logprob: -13.875001907348633
    4. '_b' → logprob: -17.500001907348633
    5. ' _' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '_c' → logprob: -19.250001907348633
    8. '_ai' → logprob: -19.250001907348633
    9. '_an' → logprob: -19.625001907348633
    10. ' ' → logprob: -19.750001907348633

Token 558: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -3.7385154428193346e-05
    2. 'iz' → logprob: -11.00003719329834
    3. '1' → logprob: -12.12503719329834
    4. 'zu' → logprob: -12.25003719329834
    5. 'i' → logprob: -13.00003719329834
    6. 'a' → logprob: -13.37503719329834
    7. '>' → logprob: -13.37503719329834
    8. 'uzu' → logprob: -14.00003719329834
    9. '_' → logprob: -14.50003719329834
    10. '#' → logprob: -15.25003719329834

Token 559: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014164687134325504
    2. ' >' → logprob: -4.264164924621582
    3. '<=' → logprob: -15.139164924621582
    4. '>b' → logprob: -15.139164924621582
    5. '">' → logprob: -15.889164924621582
    6. ')' → logprob: -16.014163970947266
    7. ')>' → logprob: -16.389163970947266
    8. '```' → logprob: -17.014163970947266
    9. '>=' → logprob: -17.139163970947266
    10. '>`' → logprob: -17.264163970947266

Token 560: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. '	b' → logprob: -19.25001335144043
    4. ')b' → logprob: -19.37501335144043
    5. '>b' → logprob: -21.25001335144043
    6. '=b' → logprob: -21.62501335144043
    7. '_b' → logprob: -22.62501335144043
    8. '$b' → logprob: -22.75001335144043
    9. 'budget' → logprob: -22.75001335144043
    10. 'user' → logprob: -22.75001335144043

Token 561: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08355855941772461
    2. ':
' → logprob: -2.5835585594177246
    3. '               ' → logprob: -5.708558559417725
    4. '           ' → logprob: -6.708558559417725
    5. ' or' → logprob: -9.458559036254883
    6. ':
' → logprob: -11.208559036254883
    7. ':return' → logprob: -11.708559036254883
    8. 'continue' → logprob: -11.958559036254883
    9. ' continue' → logprob: -12.583559036254883
    10. '   ' → logprob: -12.958559036254883

Token 562: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025657136575318873
    2. 'continue' → logprob: -9.000256538391113
    3. ' continue' → logprob: -9.125256538391113
    4. '           ' → logprob: -10.750256538391113
    5. '                   ' → logprob: -14.375256538391113
    6. ' break' → logprob: -14.625256538391113
    7. 'break' → logprob: -14.750256538391113
    8. '\n' → logprob: -15.375256538391113
    9. '   ' → logprob: -15.625256538391113
    10. '              ' → logprob: -15.750256538391113

Token 563: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0919882208108902
    2. '               ' → logprob: -2.5919883251190186
    3. ' continue' → logprob: -4.3419880867004395
    4. 'break' → logprob: -13.716988563537598
    5. '	continue' → logprob: -14.466988563537598
    6. '           ' → logprob: -15.091988563537598
    7. '_continue' → logprob: -15.091988563537598
    8. '                   ' → logprob: -16.21698760986328
    9. 'continu' → logprob: -16.21698760986328
    10. '   ' → logprob: -16.96698760986328

Token 564: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00630166893824935
    2. '
' → logprob: -5.5063018798828125
    3. '            
' → logprob: -6.1313018798828125
    4. '  
' → logprob: -11.506301879882812
    5. '    
' → logprob: -11.506301879882812
    6. '<|end|>' → logprob: -12.506301879882812
    7. ' 
' → logprob: -13.006301879882812
    8. '        
' → logprob: -13.006301879882812
    9. '           
' → logprob: -13.131301879882812
    10. 'a' → logprob: -13.131301879882812

Token 565: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03213298320770264
    2. '
' → logprob: -4.032133102416992
    3. '            
' → logprob: -4.282133102416992
    4. '    
' → logprob: -10.907133102416992
    5. '  
' → logprob: -11.282133102416992
    6. '           
' → logprob: -11.782133102416992
    7. '        
' → logprob: -12.282133102416992
    8. '<|end|>' → logprob: -12.407133102416992
    9. '                
' → logprob: -12.907133102416992
    10. '\n' → logprob: -12.907133102416992

Token 566: ' Can't' (ID: 58989)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41409075260162354
    2. 'continue' → logprob: -1.1640907526016235
    3. ' continue' → logprob: -4.289090633392334
    4. 'break' → logprob: -5.414090633392334
    5. '               ' → logprob: -5.789090633392334
    6. '```' → logprob: -5.789090633392334
    7. 'pass' → logprob: -7.414090633392334
    8. '            
' → logprob: -8.039091110229492
    9. 'next' → logprob: -8.164091110229492
    10. ')' → logprob: -8.414091110229492

Token 567: ' afford' (ID: 11532)
  Prédit: 'buy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buy' → logprob: -0.10826996713876724
    2. 'aff' → logprob: -2.3582699298858643
    3. ' afford' → logprob: -5.358270168304443
    4. 'purchase' → logprob: -6.108270168304443
    5. ' buy' → logprob: -7.108270168304443
    6. 'pay' → logprob: -8.358269691467285
    7. 'continue' → logprob: -10.733269691467285
    8. ' purchase' → logprob: -11.733269691467285
    9. 'use' → logprob: -12.608269691467285
    10. ' aff' → logprob: -12.858269691467285

Token 568: ' this' (ID: 495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01673762872815132
    2. '            
' → logprob: -4.641737461090088
    3. '
' → logprob: -5.016737461090088
    4. 'a' → logprob: -9.141737937927246
    5. '               ' → logprob: -9.766737937927246
    6. '        
' → logprob: -10.516737937927246
    7. '       ' → logprob: -10.516737937927246
    8. '    
' → logprob: -10.891737937927246
    9. '                
' → logprob: -11.016737937927246
    10. '            ' → logprob: -11.516737937927246

Token 569: ' much' (ID: 2009)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16430127620697021
    2. 'a' → logprob: -2.0393013954162598
    3. '
' → logprob: -4.41430139541626
    4. '            
' → logprob: -5.16430139541626
    5. ' a' → logprob: -5.91430139541626
    6. 'amount' → logprob: -8.414300918579102
    7. '               ' → logprob: -8.664300918579102
    8. ' ' → logprob: -9.789300918579102
    9. '                
' → logprob: -9.789300918579102
    10. '        
' → logprob: -9.914300918579102

Token 570: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00834447331726551
    2. 'a' → logprob: -5.133344650268555
    3. '            
' → logprob: -6.133344650268555
    4. '
' → logprob: -9.633344650268555
    5. ' a' → logprob: -9.758344650268555
    6. 'amount' → logprob: -11.008344650268555
    7. '               ' → logprob: -11.133344650268555
    8. '       ' → logprob: -11.258344650268555
    9. '            ' → logprob: -11.508344650268555
    10. '        
' → logprob: -11.633344650268555

Token 571: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.00012713817704934627
    2. 'i' → logprob: -9.750126838684082
    3. 'iz' → logprob: -9.750126838684082
    4. '1' → logprob: -13.125126838684082
    5. '

' → logprob: -13.875126838684082
    6. '_' → logprob: -14.000126838684082
    7. '```' → logprob: -14.375126838684082
    8. ' ' → logprob: -14.375126838684082
    9. '`' → logprob: -14.500126838684082
    10. '``' → logprob: -14.750126838684082

Token 572: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03848963975906372
    2. '            
' → logprob: -3.288489580154419
    3. '
' → logprob: -8.03848934173584
    4. '           
' → logprob: -10.66348934173584
    5. '        
' → logprob: -10.78848934173584
    6. '            
            
' → logprob: -11.16348934173584
    7. '                
' → logprob: -11.78848934173584
    8. '            
' → logprob: -11.91348934173584
    9. '_qty' → logprob: -11.91348934173584
    10. '          ' → logprob: -12.16348934173584

Token 573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3666546940803528
    2. 'normal' → logprob: -1.741654634475708
    3. 'left' → logprob: -2.741654634475708
    4. ' leftover' → logprob: -3.491654634475708
    5. 'remaining' → logprob: -3.491654634475708
    6. '            
' → logprob: -6.366654872894287
    7. '
' → logprob: -6.491654872894287
    8. 'available' → logprob: -7.241654872894287
    9. '```' → logprob: -7.741654872894287
    10. 'max' → logprob: -7.991654872894287

Token 574: ' leftover' (ID: 97990)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.024408360943198204
    2. 'remaining' → logprob: -4.524408340454102
    3. 'normal' → logprob: -4.774408340454102
    4. 'max' → logprob: -5.524408340454102
    5. 'budget' → logprob: -7.649408340454102
    6. 'remain' → logprob: -8.524408340454102
    7. 'rem' → logprob: -9.649408340454102
    8. 'min' → logprob: -10.274408340454102
    9. 'res' → logprob: -10.899408340454102
    10. ' leftover' → logprob: -11.274408340454102

Token 575: '_budget' (ID: 184538)
  Prédit: '_budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -0.030693095177412033
    2. ' =' → logprob: -3.5306930541992188
    3. '=' → logprob: -7.405693054199219
    4. '_' → logprob: -8.280693054199219
    5. '_b' → logprob: -9.905693054199219
    6. '_cost' → logprob: -11.405693054199219
    7. '_amount' → logprob: -11.780693054199219
    8. '_money' → logprob: -12.280693054199219
    9. '_space' → logprob: -12.655693054199219
    10. 'Budget' → logprob: -14.280693054199219

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. '   ' → logprob: -16.078889846801758
    4. ' ' → logprob: -16.703889846801758
    5. '    ' → logprob: -18.953889846801758
    6. '=b' → logprob: -18.953889846801758
    7. '           ' → logprob: -19.203889846801758
    8. '       ' → logprob: -19.703889846801758
    9. '＝' → logprob: -19.828889846801758
    10. '  ' → logprob: -20.328889846801758

Token 577: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0028049908578395844
    2. ' b' → logprob: -5.877804756164551
    3. '	b' → logprob: -16.127805709838867
    4. '           ' → logprob: -18.127805709838867
    5. '       ' → logprob: -18.377805709838867
    6. '   ' → logprob: -18.627805709838867
    7. '_b' → logprob: -19.127805709838867
    8. ' ' → logprob: -20.377805709838867
    9. '(b' → logprob: -20.377805709838867
    10. ')b' → logprob: -20.877805709838867

Token 578: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1269831359386444
    2. '-' → logprob: -2.126983165740967
    3. '           ' → logprob: -10.251982688903809
    4. ' ' → logprob: -11.501982688903809
    5. '   ' → logprob: -13.001982688903809
    6. '            ' → logprob: -13.126982688903809
    7. ' ' → logprob: -14.001982688903809
    8. '    ' → logprob: -14.126982688903809
    9. '        ' → logprob: -14.376982688903809
    10. '               ' → logprob: -14.751982688903809

Token 579: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00015860427811276168
    2. ' cost' → logprob: -8.750158309936523
    3. '(cost' → logprob: -16.500158309936523
    4. '           ' → logprob: -20.625158309936523
    5. 'Cost' → logprob: -20.750158309936523
    6. '_cost' → logprob: -20.875158309936523
    7. 'code' → logprob: -21.000158309936523
    8. '               ' → logprob: -21.750158309936523
    9. '   ' → logprob: -22.125158309936523
    10. 'c' → logprob: -22.500158309936523

Token 580: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0002572865632828325
    2. 'a' → logprob: -9.50025749206543
    3. 'cost' → logprob: -9.75025749206543
    4. '_budget' → logprob: -9.75025749206543
    5. '_cost' → logprob: -10.62525749206543
    6. '_' → logprob: -10.75025749206543
    7. 'ow' → logprob: -13.12525749206543
    8. 'left' → logprob: -13.37525749206543
    9. '_b' → logprob: -13.37525749206543
    10. 'ut' → logprob: -13.62525749206543

Token 581: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.642940878868103
    2. 'zu' → logprob: -0.767940878868103
    3. 'z' → logprob: -5.142940998077393
    4. 'a' → logprob: -6.017940998077393
    5. 'iz' → logprob: -6.517940998077393
    6. 'i' → logprob: -8.767940521240234
    7. 'zi' → logprob: -9.642940521240234
    8. 'uz' → logprob: -9.892940521240234
    9. 'ziu' → logprob: -9.892940521240234
    10. 'uzu' → logprob: -10.392940521240234

Token 582: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07072266936302185
    2. 'normal' → logprob: -2.8207225799560547
    3. 'max' → logprob: -5.445722579956055
    4. ' normal' → logprob: -5.695722579956055
    5. '            
' → logprob: -7.070722579956055
    6. ' max' → logprob: -9.070722579956055
    7. 'norm' → logprob: -11.445722579956055
    8. '#' → logprob: -11.570722579956055
    9. 'n' → logprob: -11.570722579956055
    10. '
' → logprob: -11.820722579956055

Token 583: '           ' (ID: 352)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.03652997687458992
    2. '           ' → logprob: -3.786530017852783
    3. 'min' → logprob: -4.786530017852783
    4. 'max' → logprob: -5.411530017852783
    5. '#' → logprob: -8.786529541015625
    6. 'norm' → logprob: -8.911529541015625
    7. 'required' → logprob: -10.286529541015625
    8. 'remaining' → logprob: -10.286529541015625
    9. ' normal' → logprob: -11.411529541015625
    10. 'import' → logprob: -11.911529541015625

Token 584: ' #' (ID: 1069)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.07855714857578278
    2. 'min' → logprob: -3.328557252883911
    3. 'max' → logprob: -3.328557252883911
    4. '#' (adapté à ' #') → logprob: -6.078557014465332
    5. 'norm' → logprob: -7.703557014465332
    6. '           ' → logprob: -8.078557014465332
    7. 'remaining' → logprob: -8.203557014465332
    8. 'required' → logprob: -8.328557014465332
    9. 'needed' → logprob: -8.578557014465332
    10. 'total' → logprob: -10.203557014465332

Token 585: ' At' (ID: 3604)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.08287199586629868
    2. 'min' → logprob: -2.957871913909912
    3. 'max' → logprob: -3.707871913909912
    4. '#' → logprob: -6.332871913909912
    5. 'norm' → logprob: -6.832871913909912
    6. 'remaining' → logprob: -9.58287239074707
    7. 'minimal' → logprob: -9.95787239074707
    8. 'start' → logprob: -10.58287239074707
    9. 'required' → logprob: -11.20787239074707
    10. 'total' → logprob: -11.20787239074707

Token 586: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.1337326318025589
    2. 'min' → logprob: -3.008732557296753
    3. ' least' → logprob: -3.008732557296753
    4. 'most' → logprob: -4.633732795715332
    5. 'max' → logprob: -4.883732795715332
    6. 'normal' → logprob: -5.133732795715332
    7. '#' → logprob: -6.633732795715332
    8. 'minimum' → logprob: -7.008732795715332
    9. 'for' → logprob: -8.258732795715332
    10. ' normal' → logprob: -8.633732795715332

Token 587: ' total' (ID: 3609)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.003366754623129964
    2. 'q' → logprob: -6.628366947174072
    3. ' normal' → logprob: -6.878366947174072
    4. '           ' → logprob: -7.503366947174072
    5. 'one' → logprob: -8.878366470336914
    6. 'total' → logprob: -9.878366470336914
    7. 'a' → logprob: -9.878366470336914
    8. '1' → logprob: -10.003366470336914
    9. 'n' → logprob: -10.128366470336914
    10. 'min' → logprob: -10.253366470336914

Token 588: ' quantity' (ID: 17245)
  Prédit: '_quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.5127242803573608
    2. '_qty' → logprob: -1.3877242803573608
    3. 'quantity' → logprob: -2.1377243995666504
    4. 'qty' → logprob: -4.38772439956665
    5. ' quantity' → logprob: -4.63772439956665
    6. '           ' → logprob: -5.88772439956665
    7. ' =' → logprob: -6.13772439956665
    8. 'normal' → logprob: -6.38772439956665
    9. '       ' → logprob: -6.51272439956665
    10. ' normal' → logprob: -7.26272439956665

Token 589: ' q' (ID: 2335)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6166514158248901
    2. ' =' → logprob: -0.8666514158248901
    3. '           ' → logprob: -3.3666515350341797
    4. '_needed' → logprob: -6.11665153503418
    5. 'normal' → logprob: -7.11665153503418
    6. '>=' → logprob: -7.36665153503418
    7. 'needed' → logprob: -8.36665153503418
    8. '_normal' → logprob: -8.49165153503418
    9. 'total' → logprob: -8.74165153503418
    10. ' normal' → logprob: -8.86665153503418

Token 590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005548797082155943
    2. '           ' → logprob: -6.25554895401001
    3. ' =' → logprob: -6.38054895401001
    4. '       ' → logprob: -7.88054895401001
    5. 'total' → logprob: -7.88054895401001
    6. '=' → logprob: -8.130548477172852
    7. '_needed' → logprob: -8.255548477172852
    8. '```' → logprob: -8.255548477172852
    9. '_total' → logprob: -10.130548477172852
    10. '_qty' → logprob: -10.255548477172852

Token 591: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004070920869708061
    2. 'normal' → logprob: -6.12907075881958
    3. ' normal' → logprob: -6.75407075881958
    4. ',' → logprob: -8.379071235656738
    5. ' =' → logprob: -9.129071235656738
    6. '            
' → logprob: -9.379071235656738
    7. '<|end|>' → logprob: -9.879071235656738
    8. '=' → logprob: -10.004071235656738
    9. ':' → logprob: -10.129071235656738
    10. '_normal' → logprob: -10.629071235656738

Token 592: ' so' (ID: 813)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.02087864838540554
    2. '           ' → logprob: -4.395878791809082
    3. ' normal' → logprob: -5.645878791809082
    4. 'min' → logprob: -6.020878791809082
    5. 'remaining' → logprob: -6.895878791809082
    6. 'needed' → logprob: -7.520878791809082
    7. 'norm' → logprob: -8.270878791809082
    8. 'required' → logprob: -8.645878791809082
    9. 'for' → logprob: -8.895878791809082
    10. 'max' → logprob: -9.270878791809082

Token 593: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.001753714750520885
    2. ' normal' → logprob: -7.001753807067871
    3. '           ' → logprob: -7.376753807067871
    4. 'min' → logprob: -9.626753807067871
    5. 'remaining' → logprob: -9.876753807067871
    6. 'needed' → logprob: -9.876753807067871
    7. 'required' → logprob: -11.376753807067871
    8. 'max' → logprob: -11.501753807067871
    9. 'norm' → logprob: -11.751753807067871
    10. 'need' → logprob: -11.876753807067871

Token 594: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.027446988970041275
    2. '_needed' → logprob: -3.652446985244751
    3. '_min' → logprob: -7.52744722366333
    4. '_need' → logprob: -8.152446746826172
    5. '_required' → logprob: -8.402446746826172
    6. 'qty' → logprob: -10.652446746826172
    7. '_req' → logprob: -11.152446746826172
    8. '_quantity' → logprob: -11.527446746826172
    9. ' =' → logprob: -11.652446746826172
    10. '_amt' → logprob: -11.652446746826172

Token 595: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46363842487335205
    2. ' =' → logprob: -1.088638424873352
    3. '_min' → logprob: -4.2136383056640625
    4. '_needed' → logprob: -4.3386383056640625
    5. '>=' → logprob: -6.3386383056640625
    6. '_required' → logprob: -6.3386383056640625
    7. 'min' → logprob: -6.4636383056640625
    8. '_qty' → logprob: -7.2136383056640625
    9. '           ' → logprob: -8.463638305664062
    10. '≥' → logprob: -9.338638305664062

Token 596: ' q' (ID: 2335)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6331232786178589
    2. 'q' → logprob: -0.7581232786178589
    3. ' max' → logprob: -8.133123397827148
    4. ' q' → logprob: -9.133123397827148
    5. '(q' → logprob: -9.633123397827148
    6. '(max' → logprob: -10.133123397827148
    7. '   ' → logprob: -12.133123397827148
    8. '	q' → logprob: -12.883123397827148
    9. '[q' → logprob: -13.633123397827148
    10. '=max' → logprob: -13.883123397827148

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.500000953674316
    3. '(' → logprob: -15.125000953674316
    4. '[' → logprob: -15.625000953674316
    5. '{' → logprob: -16.625001907348633
    6. '`' → logprob: -17.250001907348633
    7. '１' → logprob: -17.375001907348633
    8. '
' → logprob: -17.375001907348633
    9. ' ' → logprob: -17.875001907348633
    10. '۱' → logprob: -18.000001907348633

Token 598: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018167614936828613
    2. '-' → logprob: -4.018167495727539
    3. '           ' → logprob: -11.768167495727539
    4. ' if' → logprob: -13.018167495727539
    5. '[' → logprob: -13.518167495727539
    6. ' ' → logprob: -13.768167495727539
    7. '-q' → logprob: -14.518167495727539
    8. ' ' → logprob: -14.518167495727539
    9. '<|end|>' → logprob: -14.518167495727539
    10. ',' → logprob: -14.643167495727539

Token 599: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014036978245712817
    2. ' a' → logprob: -8.875140190124512
    3. '	a' → logprob: -16.000141143798828
    4. ' ' → logprob: -16.250141143798828
    5. 'ai' → logprob: -16.250141143798828
    6. '   ' → logprob: -16.875141143798828
    7. '```' → logprob: -17.250141143798828
    8. ' aiz' → logprob: -17.875141143798828
    9. 'au' → logprob: -18.250141143798828
    10. 'aise' → logprob: -18.437641143798828

Token 600: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.00016957100888248533
    2. 'iz' → logprob: -8.87516975402832
    3. 'a' → logprob: -11.12516975402832
    4. 'i' → logprob: -11.50016975402832
    5. 'ziu' → logprob: -13.25016975402832
    6. ' ' → logprob: -14.25016975402832
    7. 'zu' → logprob: -14.25016975402832
    8. '_' → logprob: -14.37516975402832
    9. '1' → logprob: -16.00016975402832
    10. 'z' → logprob: -16.12516975402832

Token 601: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -8.268254896393046e-05
    2. '_amt' → logprob: -11.000082969665527
    3. '           ' → logprob: -11.125082969665527
    4. 'qty' → logprob: -11.625082969665527
    5. '_' → logprob: -11.625082969665527
    6. '_quantity' → logprob: -11.875082969665527
    7. '_q' → logprob: -12.000082969665527
    8. '```' → logprob: -12.750082969665527
    9. '       ' → logprob: -12.875082969665527
    10. '   ' → logprob: -13.125082969665527

Token 602: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12559667229652405
    2. '            
' → logprob: -2.625596761703491
    3. ' normal' → logprob: -3.750596761703491
    4. 'normal' → logprob: -4.375596523284912
    5. '
' → logprob: -5.875596523284912
    6. '            ' → logprob: -6.125596523284912
    7. ' 
' → logprob: -6.750596523284912
    8. ' if' → logprob: -7.625596523284912
    9. '_normal' → logprob: -8.00059700012207
    10. '           
' → logprob: -8.00059700012207

Token 603: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11379452049732208
    2. ' if' → logprob: -2.4887945652008057
    3. 'if' → logprob: -4.363794326782227
    4. '           ' → logprob: -5.113794326782227
    5. ')
' → logprob: -6.488794326782227
    6. 'normal' → logprob: -6.738794326782227
    7. '```' → logprob: -7.238794326782227
    8. ' normal' → logprob: -7.613794326782227
    9. ',' → logprob: -8.238794326782227
    10. ' )' → logprob: -8.238794326782227

Token 604: ' positive' (ID: 8841)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.044472742825746536
    2. ' q' → logprob: -3.1694726943969727
    3. '>' → logprob: -7.419472694396973
    4. 'positive' → logprob: -7.919472694396973
    5. '(q' → logprob: -8.294472694396973
    6. '0' → logprob: -9.044472694396973
    7. ' positive' → logprob: -9.294472694396973
    8. 'normal' → logprob: -10.919472694396973
    9. 'possible' → logprob: -12.294472694396973
    10. ' >' → logprob: -12.419472694396973

Token 605: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07114686071872711
    2. ')
' → logprob: -2.9461469650268555
    3. ' if' → logprob: -5.3211469650268555
    4. '):
' → logprob: -5.3211469650268555
    5. '           ' → logprob: -6.0711469650268555
    6. '),' → logprob: -7.4461469650268555
    7. ' else' → logprob: -7.6961469650268555
    8. ',' → logprob: -7.8211469650268555
    9. ' and' → logprob: -7.8211469650268555
    10. 'if' → logprob: -7.8211469650268555

Token 606: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03097633831202984
    2. 'normal' → logprob: -3.9059762954711914
    3. ' normal' → logprob: -4.780976295471191
    4. '            
' → logprob: -6.280976295471191
    5. '
' → logprob: -9.780976295471191
    6. '            ' → logprob: -11.655976295471191
    7. '           
' → logprob: -11.905976295471191
    8. '          ' → logprob: -11.905976295471191
    9. '(normal' → logprob: -11.905976295471191
    10. '```' → logprob: -12.280976295471191

Token 607: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' (adapté à ' normal') → logprob: -0.5863498449325562
    2. ' normal' → logprob: -1.3363498449325562
    3. '           ' → logprob: -1.7113498449325562
    4. '            
' → logprob: -9.086349487304688
    5. '```' → logprob: -9.961349487304688
    6. 'min' → logprob: -12.086349487304688
    7. ' if' → logprob: -12.211349487304688
    8. '
' → logprob: -12.211349487304688
    9. '               ' → logprob: -12.336349487304688
    10. '(normal' → logprob: -12.461349487304688

Token 608: '_min' (ID: 15950)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.08296822011470795
    2. '_min' → logprob: -2.582968235015869
    3. '_req' → logprob: -6.207968235015869
    4. '_required' → logprob: -7.082968235015869
    5. '_needed' → logprob: -7.082968235015869
    6. '_need' → logprob: -8.207967758178711
    7. '_q' → logprob: -10.832967758178711
    8. '_max' → logprob: -11.207967758178711
    9. '_amt' → logprob: -11.207967758178711
    10. '_' → logprob: -11.207967758178711

Token 609: ' =' (ID: 314)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.40787431597709656
    2. ' =' → logprob: -1.407874345779419
    3. '=' → logprob: -2.407874345779419
    4. '_quantity' → logprob: -9.53287410736084
    5. 'qty' → logprob: -9.90787410736084
    6. '_' → logprob: -9.90787410736084
    7. '=_' → logprob: -10.15787410736084
    8. '_req' → logprob: -11.40787410736084
    9. '_amt' → logprob: -11.40787410736084
    10. '_required' → logprob: -11.40787410736084

Token 610: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03923624008893967
    2. 'q' → logprob: -3.289236307144165
    3. ' max' → logprob: -6.789236068725586
    4. ' q' → logprob: -10.414236068725586
    5. '(q' → logprob: -10.664236068725586
    6. '(max' → logprob: -11.289236068725586
    7. '0' → logprob: -13.539236068725586
    8. '   ' → logprob: -14.664236068725586
    9. '	max' → logprob: -15.789236068725586
    10. '	q' → logprob: -16.539236068725586

Token 611: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023247458040714264
    2. '(q' → logprob: -3.773247480392456
    3. '0' → logprob: -13.273247718811035
    4. '((' → logprob: -16.27324676513672
    5. ' (' → logprob: -16.39824676513672
    6. 'q' → logprob: -16.89824676513672
    7. '(
' → logprob: -18.77324676513672
    8. '(

' → logprob: -19.89824676513672
    9. ',q' → logprob: -21.39824676513672
    10. '(Q' → logprob: -21.52324676513672

Token 612: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4650385081768036
    2. '0' → logprob: -1.465038537979126
    3. '(q' → logprob: -1.965038537979126
    4. 'q' → logprob: -7.340038299560547
    5. ' ' → logprob: -11.840038299560547
    6. ' (' → logprob: -12.340038299560547
    7. ' q' → logprob: -13.340038299560547
    8. '((' → logprob: -13.590038299560547
    9. '{' → logprob: -13.715038299560547
    10. '(
' → logprob: -13.715038299560547

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.825890159234405e-05
    2. ' ,' → logprob: -9.875068664550781
    3. ',q' → logprob: -11.375068664550781
    4. ',
' → logprob: -12.250068664550781
    5. ')' → logprob: -15.875068664550781
    6. '           ' → logprob: -16.50006866455078
    7. ',

' → logprob: -17.25006866455078
    8. '   ' → logprob: -17.37506866455078
    9. ',(' → logprob: -17.37506866455078
    10. ',int' → logprob: -17.62506866455078

Token 614: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007453064317815006
    2. ' q' → logprob: -7.2507452964782715
    3. '(q' → logprob: -10.37574577331543
    4. '	q' → logprob: -13.00074577331543
    5. '           ' → logprob: -13.75074577331543
    6. '   ' → logprob: -14.62574577331543
    7. '               ' → logprob: -15.87574577331543
    8. '                   ' → logprob: -17.00074577331543
    9. '       ' → logprob: -17.00074577331543
    10. '$q' → logprob: -17.12574577331543

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. '１' → logprob: -18.25
    4. '۱' → logprob: -18.75
    5. ')' → logprob: -18.75
    6. '১' → logprob: -19.375
    7. '
' → logprob: -19.6875
    8. '१' → logprob: -19.75
    9. '_' → logprob: -19.8125
    10. '>' → logprob: -19.875

Token 616: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804401680827141
    2. '-' → logprob: -3.288043975830078
    3. ' ' → logprob: -14.038043975830078
    4. ')' → logprob: -14.663043975830078
    5. '   ' → logprob: -14.913043975830078
    6. '           ' → logprob: -15.663043975830078
    7. '    ' → logprob: -16.288043975830078
    8. '<|end|>' → logprob: -16.413043975830078
    9. '[' → logprob: -16.538043975830078
    10. '        ' → logprob: -16.788043975830078

Token 617: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023250321100931615
    2. ' a' → logprob: -8.375232696533203
    3. 'ai' → logprob: -14.750232696533203
    4. '   ' → logprob: -15.000232696533203
    5. ' ' → logprob: -15.500232696533203
    6. '	a' → logprob: -15.625232696533203
    7. '```' → logprob: -15.937732696533203
    8. ' aiz' → logprob: -16.500232696533203
    9. 'au' → logprob: -17.000232696533203
    10. '<|end|>' → logprob: -17.125232696533203

Token 618: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -4.8351892473874614e-05
    2. 'a' → logprob: -10.250048637390137
    3. 'iz' → logprob: -11.500048637390137
    4. 'ziu' → logprob: -14.250048637390137
    5. 'i' → logprob: -14.500048637390137
    6. 'zu' → logprob: -15.250048637390137
    7. 'uzu' → logprob: -15.375048637390137
    8. 'izou' → logprob: -15.500048637390137
    9. '1' → logprob: -16.12504768371582
    10. '_' → logprob: -16.25004768371582

Token 619: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -8.590104698669165e-05
    2. 'qty' → logprob: -9.375085830688477
    3. 'Qty' → logprob: -14.875085830688477
    4. '_amt' → logprob: -15.500085830688477
    5. 'a' → logprob: -15.625085830688477
    6. '_quantity' → logprob: -16.375085830688477
    7. '_' → logprob: -17.875085830688477
    8. 'q' → logprob: -18.000085830688477
    9. '.qty' → logprob: -18.250085830688477
    10. 'quantity' → logprob: -18.375085830688477

Token 620: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5798073410987854
    2. ')' → logprob: -0.8298073410987854
    3. '           ' → logprob: -5.579807281494141
    4. ')
' → logprob: -9.70480728149414
    5. ')`
' → logprob: -11.95480728149414
    6. ' )
' → logprob: -12.20480728149414
    7. ')

' → logprob: -12.32980728149414
    8. '       ' → logprob: -12.45480728149414
    9. '               ' → logprob: -12.95480728149414
    10. ' )' → logprob: -13.57980728149414

Token 621: '            
' (ID: 7048)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06909194588661194
    2. 'normal' → logprob: -3.194092035293579
    3. ' normal' → logprob: -3.694092035293579
    4. '            
' → logprob: -7.069091796875
    5. '            ' → logprob: -11.819091796875
    6. '```' → logprob: -12.194091796875
    7. '           
' → logprob: -12.819091796875
    8. 'max' → logprob: -13.069091796875
    9. '(normal' → logprob: -13.194091796875
    10. '          ' → logprob: -13.194091796875

Token 622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10781295597553253
    2. 'normal' → logprob: -2.4828128814697266
    3. ' normal' → logprob: -3.9828128814697266
    4. '            
' → logprob: -10.232812881469727
    5. 'max' → logprob: -11.107812881469727
    6. '```' → logprob: -12.982812881469727
    7. ' max' → logprob: -13.107812881469727
    8. '       ' → logprob: -13.982812881469727
    9. '		' → logprob: -14.232812881469727
    10. '            ' → logprob: -14.357812881469727

Token 623: ' #' (ID: 1069)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.039176858961582184
    2. 'max' → logprob: -3.2891769409179688
    3. 'if' → logprob: -7.289176940917969
    4. '           ' → logprob: -8.289176940917969
    5. '#' (adapté à ' #') → logprob: -8.914176940917969
    6. ' normal' → logprob: -9.789176940917969
    7. ' max' → logprob: -12.789176940917969
    8. 'possible' → logprob: -12.789176940917969
    9. 'norm' → logprob: -13.539176940917969
    10. 'left' → logprob: -14.914176940917969

Token 624: ' Maximum' (ID: 49848)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.057542286813259125
    2. 'max' → logprob: -2.932542324066162
    3. '#' → logprob: -6.807542324066162
    4. 'if' → logprob: -7.307542324066162
    5. ' normal' → logprob: -7.307542324066162
    6. '           ' → logprob: -9.182541847229004
    7. ' max' → logprob: -9.807541847229004
    8. 'left' → logprob: -10.307541847229004
    9. 'possible' → logprob: -12.432541847229004
    10. 'maximum' → logprob: -12.557541847229004

Token 625: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.28855934739112854
    2. ' normal' → logprob: -1.4135593175888062
    3. '_normal' → logprob: -4.913559436798096
    4. 'possible' → logprob: -11.163558959960938
    5. '_possible' → logprob: -12.288558959960938
    6. '           ' → logprob: -12.788558959960938
    7. '(normal' → logprob: -12.913558959960938
    8. ' possible' → logprob: -13.413558959960938
    9. '_aff' → logprob: -13.413558959960938
    10. '.normal' → logprob: -13.663558959960938

Token 626: ' quantity' (ID: 17245)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.02579517662525177
    2. '_normal' → logprob: -4.400794982910156
    3. 'normal' → logprob: -4.650794982910156
    4. ' =' → logprob: -5.775794982910156
    5. ' normal' → logprob: -9.025794982910156
    6. '=' → logprob: -9.025794982910156
    7. '_max' → logprob: -9.025794982910156
    8. 'qty' → logprob: -9.650794982910156
    9. '_norm' → logprob: -10.400794982910156
    10. 'max' → logprob: -11.275794982910156

Token 627: ' we' (ID: 581)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025729250628501177
    2. '=' → logprob: -6.002573013305664
    3. 'normal' → logprob: -10.002573013305664
    4. ' normal' → logprob: -10.502573013305664
    5. '           ' → logprob: -10.877573013305664
    6. '=max' → logprob: -12.752573013305664
    7. '_normal' → logprob: -13.377573013305664
    8. 'max' → logprob: -14.502573013305664
    9. '            ' → logprob: -15.752573013305664
    10. ' ' → logprob: -16.252573013305664

Token 628: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.18227456510066986
    2. ' can' → logprob: -1.932274580001831
    3. '=' → logprob: -4.057274341583252
    4. '_can' → logprob: -5.557274341583252
    5. '	can' → logprob: -8.18227481842041
    6. ' =' → logprob: -8.55727481842041
    7. 'could' → logprob: -9.93227481842041
    8. 's' → logprob: -10.80727481842041
    9. 'canf' → logprob: -11.05727481842041
    10. '=int' → logprob: -11.30727481842041

Token 629: ' buy' (ID: 3877)
  Prédit: ' afford'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' afford' → logprob: -0.024201611056923866
    2. 'aff' → logprob: -4.024201393127441
    3. 'buy' → logprob: -5.274201393127441
    4. '_aff' → logprob: -7.149201393127441
    5. ' buy' → logprob: -10.149201393127441
    6. 'max' → logprob: -10.899201393127441
    7. 'have' → logprob: -11.024201393127441
    8. 'purchase' → logprob: -11.774201393127441
    9. 'normal' → logprob: -11.899201393127441
    10. ' normal' → logprob: -12.024201393127441

Token 630: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007762669585645199
    2. '=' → logprob: -4.882762432098389
    3. '           ' → logprob: -9.007762908935547
    4. ' normal' → logprob: -11.257762908935547
    5. 'normal' → logprob: -11.382762908935547
    6. '=max' → logprob: -12.007762908935547
    7. 'max' → logprob: -13.757762908935547
    8. '            ' → logprob: -14.007762908935547
    9. ' max' → logprob: -15.132762908935547
    10. ' ' → logprob: -15.132762908935547

Token 631: ' leftover' (ID: 97990)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04876188561320305
    2. ' leftover' → logprob: -3.0487618446350098
    3. ' left' → logprob: -8.673762321472168
    4. 'normal' → logprob: -13.673762321472168
    5. '(left' → logprob: -14.173762321472168
    6. ' leftovers' → logprob: -14.423762321472168
    7. '[left' → logprob: -15.298762321472168
    8. '	left' → logprob: -15.798762321472168
    9. '   ' → logprob: -15.923762321472168
    10. ' normal' → logprob: -16.17376136779785

Token 632: '_budget' (ID: 184538)
  Prédit: '_budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -0.002901282161474228
    2. 'left' → logprob: -6.377901077270508
    3. 'budget' → logprob: -7.377901077270508
    4. ' //' → logprob: -8.752901077270508
    5. ' left' → logprob: -8.877901077270508
    6. ' leftover' → logprob: -9.252901077270508
    7. '//' → logprob: -9.627901077270508
    8. ' budget' → logprob: -9.877901077270508
    9. ' =' → logprob: -10.877901077270508
    10. 'normal' → logprob: -11.252901077270508

Token 633: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0079751992598176
    2. '=' → logprob: -4.882975101470947
    3. '           ' → logprob: -8.257975578308105
    4. ' normal' → logprob: -9.507975578308105
    5. 'normal' → logprob: -10.382975578308105
    6. '            ' → logprob: -14.007975578308105
    7. '=max' → logprob: -14.007975578308105
    8. ' ' → logprob: -14.257975578308105
    9. ' //' → logprob: -14.632975578308105
    10. '   ' → logprob: -14.882975578308105

Token 634: '           ' (ID: 352)
  Prédit: ' normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.9311569333076477
    2. ' leftover' → logprob: -0.9311569333076477
    3. ' left' → logprob: -2.431156873703003
    4. 'left' → logprob: -2.681156873703003
    5. 'normal' → logprob: -3.181156873703003
    6. '           ' → logprob: -4.681157112121582
    7. ' max' → logprob: -6.556157112121582
    8. ' (' → logprob: -7.181157112121582
    9. '            ' → logprob: -7.431157112121582
    10. '(left' → logprob: -7.681157112121582

Token 635: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' (adapté à ' normal') → logprob: -0.011852755211293697
    2. 'max' → logprob: -4.761852741241455
    3. ' normal' → logprob: -5.761852741241455
    4. ' max' → logprob: -9.636853218078613
    5. '           ' → logprob: -10.761853218078613
    6. 'maximum' → logprob: -14.386853218078613
    7. 'left' → logprob: -15.386853218078613
    8. 'norm' → logprob: -16.261852264404297
    9. '   ' → logprob: -16.511852264404297
    10. '               ' → logprob: -17.011852264404297

Token 636: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0002560945285949856
    2. '_qty' → logprob: -8.500256538391113
    3. 'max' → logprob: -9.875256538391113
    4. '_capacity' → logprob: -15.125256538391113
    5. '=' → logprob: -15.750256538391113
    6. '_cap' → logprob: -16.000255584716797
    7. 'Max' → logprob: -16.000255584716797
    8. ' =' → logprob: -16.125255584716797
    9. '_min' → logprob: -16.125255584716797
    10. '_MAX' → logprob: -16.625255584716797

Token 637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. ' ' → logprob: -17.501928329467773
    4. '   ' → logprob: -17.626928329467773
    5. '＝' → logprob: -17.751928329467773
    6. ',' → logprob: -18.126928329467773
    7. '=cut' → logprob: -18.251928329467773
    8. '=int' → logprob: -18.376928329467773
    9. '=max' → logprob: -19.376928329467773
    10. '=}' → logprob: -19.376928329467773

Token 638: ' leftover' (ID: 97990)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.008682413026690483
    2. ' leftover' → logprob: -4.7586822509765625
    3. ' left' → logprob: -9.633682250976562
    4. '	left' → logprob: -13.508682250976562
    5. ' leftovers' → logprob: -14.883682250976562
    6. '   ' → logprob: -15.508682250976562
    7. '[left' → logprob: -15.633682250976562
    8. '(left' → logprob: -15.758682250976562
    9. ' ' → logprob: -16.508682250976562
    10. ',left' → logprob: -17.133682250976562

Token 639: '_budget' (ID: 184538)
  Prédit: '_budget'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_budget' → logprob: -3.128163257315464e-07
    2. 'budget' → logprob: -15.75
    3. 'Budget' → logprob: -16.625
    4. ' _' → logprob: -18.5
    5. '_' → logprob: -18.875
    6. '-budget' → logprob: -19.0
    7. '```' → logprob: -19.125
    8. '\' → logprob: -19.5
    9. '_b' → logprob: -19.625
    10. ' budget' → logprob: -19.625

Token 640: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.01816035620868206
    2. '//' → logprob: -4.018160343170166
    3. ' ' → logprob: -12.768160820007324
    4. '   ' → logprob: -12.893160820007324
    5. ' ' → logprob: -13.018160820007324
    6. '#' → logprob: -13.143160820007324
    7. ' #' → logprob: -15.018160820007324
    8. '           ' → logprob: -15.518160820007324
    9. '
' → logprob: -16.143159866333008
    10. '    ' → logprob: -16.393159866333008

Token 641: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0040785204619169235
    2. ' c' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.504077911376953
    4. '	c' → logprob: -18.754077911376953
    5. '           ' → logprob: -19.129077911376953
    6. ' ' → logprob: -19.129077911376953
    7. '       ' → logprob: -19.754077911376953
    8. '(c' → logprob: -20.129077911376953
    9. '_c' → logprob: -20.504077911376953
    10. '```' → logprob: -20.629077911376953

Token 642: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -16.5
    3. '۲' → logprob: -17.75
    4. '₂' → logprob: -19.0
    5. '２' → logprob: -19.25
    6. 's' → logprob: -19.375
    7. '২' → logprob: -20.5
    8. '```' → logprob: -21.0
    9. '_' → logprob: -21.125
    10. 'a' → logprob: -21.25

Token 643: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23889927566051483
    2. '            
' → logprob: -1.6138992309570312
    3. '<|end|>' → logprob: -5.488899230957031
    4. '
' → logprob: -5.613899230957031
    5. ' if' → logprob: -6.363899230957031
    6. '       ' → logprob: -7.488899230957031
    7. '        
' → logprob: -7.613899230957031
    8. ' normal' → logprob: -7.613899230957031
    9. '    
' → logprob: -7.988899230957031
    10. ' 
' → logprob: -7.988899230957031

Token 644: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002614550176076591
    2. ' c' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.000261306762695
    4. '	c' → logprob: -17.750261306762695
    5. ' ' → logprob: -18.375261306762695
    6. '           ' → logprob: -19.125261306762695
    7. 'normal' → logprob: -19.625261306762695
    8. '  ' → logprob: -19.875261306762695
    9. 'problem' → logprob: -20.250261306762695
    10. ')c' → logprob: -20.625261306762695

Token 645: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.750004768371582
    3. '₂' → logprob: -13.375004768371582
    4. '۲' → logprob: -15.000004768371582
    5. 'c' → logprob: -16.6250057220459
    6. '>' → logprob: -16.6250057220459
    7. '1' → logprob: -17.5000057220459
    8. '_c' → logprob: -17.6250057220459
    9. '２' → logprob: -17.7500057220459
    10. '২' → logprob: -17.7500057220459

Token 646: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.013536169193685055
    2. '!=' → logprob: -4.388535976409912
    3. ' >' → logprob: -7.638535976409912
    4. 'else' → logprob: -7.888535976409912
    5. ' !=' → logprob: -8.76353645324707
    6. ' else' → logprob: -11.76353645324707
    7. 'and' → logprob: -13.38853645324707
    8. '!==' → logprob: -13.76353645324707
    9. '">' → logprob: -14.63853645324707
    10. '&gt' → logprob: -14.76353645324707

Token 647: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.2500057220459
    4. '=' → logprob: -20.0000057220459
    5. '>' → logprob: -20.7500057220459
    6. '```' → logprob: -20.7500057220459
    7. '۰' → logprob: -20.7500057220459
    8. '`' → logprob: -22.2500057220459
    9. '  ' → logprob: -22.8750057220459
    10. '０' → logprob: -23.0000057220459

Token 648: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.00000762939453
    4. '```' → logprob: -20.00000762939453
    5. '۰' → logprob: -20.50000762939453
    6. '=' → logprob: -21.00000762939453
    7. '`' → logprob: -21.62500762939453
    8. '  ' → logprob: -22.00000762939453
    9. 'c' → logprob: -22.12500762939453
    10. 'zero' → logprob: -22.12500762939453

Token 649: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.17988495528697968
    2. ' else' → logprob: -1.804884910583496
    3. '<|end|>' → logprob: -9.179884910583496
    4. '	else' → logprob: -11.304884910583496
    5. '<|end|>' → logprob: -11.804884910583496
    6. ' ' → logprob: -12.179884910583496
    7. '           ' → logprob: -12.929884910583496
    8. '            ' → logprob: -13.429884910583496
    9. ',' → logprob: -13.804884910583496
    10. '_else' → logprob: -14.054884910583496

Token 650: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4209878146648407
    2. '10' → logprob: -1.920987844467163
    3. 'left' → logprob: -2.295987844467163
    4. 'normal' → logprob: -2.795987844467163
    5. 'float' → logprob: -3.420987844467163
    6. '100' → logprob: -7.045987606048584
    7. 'q' → logprob: -7.420987606048584
    8. '1' → logprob: -7.545987606048584
    9. 'max' → logprob: -8.670988082885742
    10. '(' → logprob: -8.920988082885742

Token 651: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2555301785469055
    2. '10' → logprob: -2.2555301189422607
    3. 'left' → logprob: -2.7555301189422607
    4. 'float' → logprob: -3.3805301189422607
    5. 'normal' → logprob: -3.8805301189422607
    6. '100' → logprob: -7.13053035736084
    7. '(' → logprob: -7.50553035736084
    8. '1' → logprob: -7.63053035736084
    9. 'max' → logprob: -8.88053035736084
    10. 'q' → logprob: -9.38053035736084

Token 652: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2883495092391968
    2. '            
' → logprob: -1.5383495092391968
    3. ' normal' → logprob: -4.163349628448486
    4. '<|end|>' → logprob: -4.913349628448486
    5. ' if' → logprob: -5.788349628448486
    6. '
' → logprob: -5.788349628448486
    7. '<|end|>' → logprob: -6.913349628448486
    8. ' for' → logprob: -6.913349628448486
    9. '       ' → logprob: -7.288349628448486
    10. ' 
' → logprob: -7.413349628448486

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01762840524315834
    2. '            
' → logprob: -4.267628192901611
    3. ' normal' → logprob: -6.392628192901611
    4. 'normal' → logprob: -7.142628192901611
    5. '<|end|>' → logprob: -7.892628192901611
    6. '            ' → logprob: -9.26762866973877
    7. '<|end|>' → logprob: -9.39262866973877
    8. ' if' → logprob: -9.39262866973877
    9. '```' → logprob: -9.64262866973877
    10. '          ' → logprob: -10.14262866973877

Token 654: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4920661151409149
    2. 'normal' → logprob: -0.9920661449432373
    3. '           ' → logprob: -4.242065906524658
    4. ' if' → logprob: -6.367065906524658
    5. 'for' → logprob: -7.367065906524658
    6. ' normal' → logprob: -7.617065906524658
    7. 'possible' → logprob: -8.367066383361816
    8. 'max' → logprob: -8.742066383361816
    9. '#' → logprob: -8.742066383361816
    10. '            
' → logprob: -10.367066383361816

Token 655: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.014208049513399601
    2. ' normal' → logprob: -4.26420783996582
    3. '   ' → logprob: -10.51420783996582
    4. '           ' → logprob: -12.01420783996582
    5. 'max' → logprob: -12.63920783996582
    6. '(normal' → logprob: -13.01420783996582
    7. 'a' → logprob: -13.26420783996582
    8. ' ' → logprob: -14.63920783996582
    9. '    ' → logprob: -14.63920783996582
    10. 'left' → logprob: -15.13920783996582

Token 656: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.023304060101509094
    2. '_min' → logprob: -3.773303985595703
    3. 'max' → logprob: -9.773303985595703
    4. '_normal' → logprob: -13.523303985595703
    5. 'min' → logprob: -15.773303985595703
    6. 'Max' → logprob: -16.648303985595703
    7. ' max' → logprob: -17.273303985595703
    8. '_' → logprob: -17.523303985595703
    9. '>=' → logprob: -17.648303985595703
    10. '_MAX' → logprob: -18.398303985595703

Token 657: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5931566953659058
    2. ' <' → logprob: -0.9681566953659058
    3. '>=' → logprob: -3.2181568145751953
    4. ' >=' → logprob: -3.5931568145751953
    5. '<n' → logprob: -10.468156814575195
    6. ' ' → logprob: -11.093156814575195
    7. '<int' → logprob: -11.468156814575195
    8. '<m' → logprob: -11.968156814575195
    9. '<th' → logprob: -12.468156814575195
    10. '<p' → logprob: -12.718156814575195

Token 658: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -7.493430894101039e-05
    2. ' normal' → logprob: -9.500075340270996
    3. '(normal' → logprob: -20.75007438659668
    4. '_normal' → logprob: -21.00007438659668
    5. '.normal' → logprob: -21.37507438659668
    6. 'norm' → logprob: -21.50007438659668
    7. 'Normal' → logprob: -22.12507438659668
    8. '0' → logprob: -23.25007438659668
    9. 'ormal' → logprob: -23.50007438659668
    10. '   ' → logprob: -23.62507438659668

Token 659: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -9.088346359931165e-07
    2. '_max' → logprob: -14.625000953674316
    3. 'min' → logprob: -14.750000953674316
    4. '_normal' → logprob: -18.5
    5. '_MIN' → logprob: -18.875
    6. '_' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. 'Min' → logprob: -20.375
    9. '_Min' → logprob: -20.375
    10. ' _' → logprob: -20.75

Token 660: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7144184112548828
    2. '               ' → logprob: -1.3394184112548828
    3. ':' → logprob: -1.4644184112548828
    4. '           ' → logprob: -4.089418411254883
    5. ' continue' → logprob: -8.214418411254883
    6. 'continue' → logprob: -8.464418411254883
    7. '       ' → logprob: -11.214418411254883
    8. ':
' → logprob: -11.589418411254883
    9. ' or' → logprob: -11.714418411254883
    10. '):
' → logprob: -11.839418411254883

Token 661: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009951811283826828
    2. 'continue' → logprob: -5.259951591491699
    3. '           ' → logprob: -5.509951591491699
    4. ' continue' → logprob: -7.384951591491699
    5. '   ' → logprob: -10.7599515914917
    6. '	continue' → logprob: -11.8849515914917
    7. '       ' → logprob: -11.8849515914917
    8. '_continue' → logprob: -13.6349515914917
    9. '                   ' → logprob: -13.8849515914917
    10. '```' → logprob: -14.0099515914917

Token 662: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09583064913749695
    2. '               ' → logprob: -2.5958306789398193
    3. ' continue' → logprob: -4.09583044052124
    4. '           ' → logprob: -8.970830917358398
    5. '   ' → logprob: -10.595830917358398
    6. '	continue' → logprob: -12.595830917358398
    7. '_continue' → logprob: -15.220830917358398
    8. '                   ' → logprob: -15.345830917358398
    9. ' ' → logprob: -16.0958309173584
    10. '       ' → logprob: -16.2208309173584

Token 663: ' Can't' (ID: 58989)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0018389179604128003
    2. ' continue' → logprob: -6.501838684082031
    3. '               ' → logprob: -8.251838684082031
    4. '           ' → logprob: -9.501838684082031
    5. '   ' → logprob: -14.376838684082031
    6. '	continue' → logprob: -15.001838684082031
    7. '```' → logprob: -16.75183868408203
    8. '_continue' → logprob: -16.87683868408203
    9. 'Continue' → logprob: -17.25183868408203
    10. '       ' → logprob: -17.62683868408203

Token 664: ' fulfill' (ID: 29139)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9623359441757202
    2. ' afford' → logprob: -1.5873359441757202
    3. 'aff' → logprob: -1.7123359441757202
    4. 'buy' → logprob: -2.2123360633850098
    5. 'ful' → logprob: -3.4623360633850098
    6. 'meet' → logprob: -3.5873360633850098
    7. ' continue' → logprob: -4.21233606338501
    8. 'ach' → logprob: -4.33733606338501
    9. 's' → logprob: -4.83733606338501
    10. ' buy' → logprob: -4.96233606338501

Token 665: ' quantity' (ID: 17245)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2838444709777832
    2. ' the' → logprob: -1.4088444709777832
    3. 'total' → logprob: -1.6588444709777832
    4. 'continue' → logprob: -1.9088444709777832
    5. ' total' → logprob: -2.408844470977783
    6. '               ' → logprob: -4.033844470977783
    7. '           ' → logprob: -4.658844470977783
    8. 'required' → logprob: -5.158844470977783
    9. 'quantity' → logprob: -5.533844470977783
    10. 'requirements' → logprob: -6.158844470977783

Token 666: ' lower' (ID: 6931)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44498369097709656
    2. '           ' → logprob: -1.069983720779419
    3. 'continue' → logprob: -4.56998348236084
    4. ' continue' → logprob: -5.19498348236084
    5. ',' → logprob: -8.94498348236084
    6. '_continue' → logprob: -10.31998348236084
    7. '                   ' → logprob: -10.94498348236084
    8. '       ' → logprob: -11.31998348236084
    9. '<|end|>' → logprob: -11.56998348236084
    10. '.' → logprob: -12.06998348236084

Token 667: ' bound' (ID: 11608)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.2719041407108307
    2. 'bound' → logprob: -1.8969041109085083
    3. ' than' → logprob: -2.896904230117798
    4. 'limit' → logprob: -3.771904230117798
    5. '_bound' → logprob: -5.771903991699219
    6. '_than' → logprob: -6.396903991699219
    7. ' bound' → logprob: -6.896903991699219
    8. '           ' → logprob: -6.896903991699219
    9. 'quantity' → logprob: -7.021903991699219
    10. '               ' → logprob: -7.146903991699219

Token 668: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027840077877044678
    2. '           ' → logprob: -3.6528401374816895
    3. ' continue' → logprob: -6.6528401374816895
    4. 'continue' → logprob: -8.527839660644531
    5. ',' → logprob: -10.777839660644531
    6. '                   ' → logprob: -10.902839660644531
    7. '   ' → logprob: -13.277839660644531
    8. '<|end|>' → logprob: -13.277839660644531
    9. '.' → logprob: -13.402839660644531
    10. '       ' → logprob: -13.527839660644531

Token 669: ' this' (ID: 495)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.35753944516181946
    2. 'this' → logprob: -1.732539415359497
    3. ' normal' → logprob: -2.982539415359497
    4. 'current' → logprob: -3.482539415359497
    5. ' this' → logprob: -4.232539653778076
    6. ' current' → logprob: -4.607539653778076
    7. ' leftover' → logprob: -5.232539653778076
    8. 'given' → logprob: -5.482539653778076
    9. 'remaining' → logprob: -6.107539653778076
    10. ' given' → logprob: -6.357539653778076

Token 670: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31455913186073303
    2. ' a' → logprob: -1.3145591020584106
    3. 'choice' → logprob: -7.689558982849121
    4. ' choice' → logprob: -8.439558982849121
    5. ' iteration' → logprob: -9.064558982849121
    6. '           ' → logprob: -9.439558982849121
    7. 'amount' → logprob: -9.939558982849121
    8. '               ' → logprob: -10.189558982849121
    9. ' amount' → logprob: -10.314558982849121
    10. 'option' → logprob: -10.314558982849121

Token 671: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.003436134662479162
    2. 'a' → logprob: -6.628436088562012
    3. 'iz' → logprob: -7.253436088562012
    4. 'i' → logprob: -8.378436088562012
    5. '```' → logprob: -8.378436088562012
    6. 'izou' → logprob: -8.753436088562012
    7. '   ' → logprob: -9.503436088562012
    8. ' a' → logprob: -9.878436088562012
    9. ' ' → logprob: -10.065936088562012
    10. 'uzu' → logprob: -10.128436088562012

Token 672: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.021485906094312668
    2. '           ' → logprob: -4.021485805511475
    3. '               ' → logprob: -7.146485805511475
    4. '            
' → logprob: -7.396485805511475
    5. 'qty' → logprob: -7.646485805511475
    6. '_quantity' → logprob: -8.521486282348633
    7. ' quantity' → logprob: -8.521486282348633
    8. '   ' → logprob: -8.646486282348633
    9. 'Qty' → logprob: -8.771486282348633
    10. 'quantity' → logprob: -8.771486282348633

Token 673: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021998681768309325
    2. ' continue' → logprob: -9.25022029876709
    3. 'continue' → logprob: -9.62522029876709
    4. '           ' → logprob: -9.87522029876709
    5. '                   ' → logprob: -12.50022029876709
    6. '   ' → logprob: -13.87522029876709
    7. ',' → logprob: -14.37522029876709
    8. '.' → logprob: -15.75022029876709
    9. '       ' → logprob: -15.75022029876709
    10. '              ' → logprob: -15.87522029876709

Token 674: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038229089113883674
    2. 'continue' → logprob: -8.625382423400879
    3. ' continue' → logprob: -8.750382423400879
    4. '                   ' → logprob: -10.375382423400879
    5. '           ' → logprob: -11.500382423400879
    6. '   ' → logprob: -13.250382423400879
    7. '```' → logprob: -14.750382423400879
    8. '       ' → logprob: -15.750382423400879
    9. '	continue' → logprob: -15.875382423400879
    10. '              ' → logprob: -16.000381469726562

Token 675: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0002661039761733264
    2. ' continue' → logprob: -8.500266075134277
    3. '               ' → logprob: -9.750266075134277
    4. '           ' → logprob: -12.500266075134277
    5. '	continue' → logprob: -14.625266075134277
    6. '                   ' → logprob: -16.750267028808594
    7. '_continue' → logprob: -17.375267028808594
    8. '   ' → logprob: -17.750267028808594
    9. 'break' → logprob: -17.875267028808594
    10. 'continu' → logprob: -18.500267028808594

Token 676: '
            
' (ID: 45334)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.5725735425949097
    2. '           ' → logprob: -0.9475735425949097
    3. '
' → logprob: -3.197573661804199
    4. 'normal' → logprob: -5.197573661804199
    5. '    
' → logprob: -7.322573661804199
    6. '        
' → logprob: -8.0725736618042
    7. '           
' → logprob: -8.3225736618042
    8. '  
' → logprob: -8.5725736618042
    9. ' normal' → logprob: -9.3225736618042
    10. '```' → logprob: -9.4475736618042

Token 677: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012022378854453564
    2. 'normal' → logprob: -4.762022495269775
    3. '            
' → logprob: -6.137022495269775
    4. ' normal' → logprob: -6.887022495269775
    5. '
' → logprob: -9.137022018432617
    6. '       ' → logprob: -9.762022018432617
    7. '```' → logprob: -10.387022018432617
    8. '        
' → logprob: -11.887022018432617
    9. '           
' → logprob: -12.637022018432617
    10. '   ' → logprob: -12.887022018432617

Token 678: ' #' (ID: 1069)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.003058403730392456
    2. '           ' → logprob: -6.253058433532715
    3. ' normal' → logprob: -7.128058433532715
    4. '#' (adapté à ' #') → logprob: -8.378058433532715
    5. 'for' → logprob: -10.128058433532715
    6. 'best' → logprob: -10.503058433532715
    7. 'if' → logprob: -11.753058433532715
    8. 'norm' → logprob: -12.003058433532715
    9. 'total' → logprob: -12.878058433532715
    10. 'candidate' → logprob: -13.003058433532715

Token 679: ' Among' (ID: 32417)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -3.452426608419046e-05
    2. '#' → logprob: -10.87503433227539
    3. '           ' → logprob: -11.25003433227539
    4. ' normal' → logprob: -13.00003433227539
    5. 'optimal' → logprob: -16.75003433227539
    6. '               ' → logprob: -17.00003433227539
    7. 'for' → logprob: -17.00003433227539
    8. 'norm' → logprob: -17.62503433227539
    9. 'best' → logprob: -17.75003433227539
    10. 'candidate' → logprob: -17.87503433227539

Token 680: ' all' (ID: 722)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.16608130931854248
    2. ' normal' → logprob: -2.416081428527832
    3. 'all' → logprob: -3.041081428527832
    4. 'possible' → logprob: -4.666081428527832
    5. ' all' → logprob: -5.916081428527832
    6. 'for' → logprob: -6.666081428527832
    7. ' possible' → logprob: -7.166081428527832
    8. 'range' → logprob: -7.416081428527832
    9. 'the' → logprob: -7.791081428527832
    10. '           ' → logprob: -8.541081428527832

Token 681: ' possible' (ID: 4149)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.09621120244264603
    2. ' normal' → logprob: -3.2212111949920654
    3. 'possible' → logprob: -3.4712111949920654
    4. ' feasible' → logprob: -4.2212114334106445
    5. 'valid' → logprob: -5.5962114334106445
    6. 'fe' → logprob: -6.8462114334106445
    7. ' possible' → logprob: -7.2212114334106445
    8. ' valid' → logprob: -8.596211433410645
    9. ' viable' → logprob: -8.721211433410645
    10. '           ' → logprob: -10.096211433410645

Token 682: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.20144939422607422
    2. ' normal' → logprob: -1.7014493942260742
    3. '           ' → logprob: -10.576449394226074
    4. 'possible' → logprob: -12.826449394226074
    5. '_normal' → logprob: -12.826449394226074
    6. ' normals' → logprob: -13.701449394226074
    7. 'norm' → logprob: -13.826449394226074
    8. ' normales' → logprob: -14.201449394226074
    9. 'values' → logprob: -14.951449394226074
    10. '(normal' → logprob: -15.326449394226074

Token 683: ' quantities' (ID: 49540)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.0011649841908365488
    2. '_quant' → logprob: -7.62616491317749
    3. '_max' → logprob: -8.126165390014648
    4. '_' → logprob: -9.126165390014648
    5. '_amt' → logprob: -9.501165390014648
    6. '_normal' → logprob: -10.376165390014648
    7. '_q' → logprob: -10.501165390014648
    8. '```' → logprob: -10.751165390014648
    9. ' _' → logprob: -10.876165390014648
    10. '           ' → logprob: -11.126165390014648

Token 684: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5324216485023499
    2. '           ' → logprob: -1.407421588897705
    3. ' for' → logprob: -2.282421588897705
    4. 'for' → logprob: -3.032421588897705
    5. ' normal' → logprob: -5.282421588897705
    6. 'normal' → logprob: -5.657421588897705
    7. ' =' → logprob: -6.282421588897705
    8. ' at' → logprob: -6.532421588897705
    9. ' in' → logprob: -6.782421588897705
    10. '=' → logprob: -7.157421588897705

Token 685: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0001584850688232109
    2. ' normal' → logprob: -8.750158309936523
    3. '(normal' → logprob: -18.375158309936523
    4. '```' → logprob: -19.250158309936523
    5. '`' → logprob: -20.250158309936523
    6. '
' → logprob: -20.875158309936523
    7. 'Normal' → logprob: -20.875158309936523
    8. '_normal' → logprob: -21.250158309936523
    9. 'normalized' → logprob: -21.250158309936523
    10. 'minimal' → logprob: -21.500158309936523

Token 686: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.25229281187057495
    2. '_max' → logprob: -1.5022928714752197
    3. 'max' → logprob: -8.37729263305664
    4. 'min' → logprob: -9.00229263305664
    5. '_normal' → logprob: -12.12729263305664
    6. '_qty' → logprob: -12.62729263305664
    7. '```' → logprob: -15.25229263305664
    8. '   ' → logprob: -15.37729263305664
    9. '_quant' → logprob: -16.25229263305664
    10. 'normal' → logprob: -16.37729263305664

Token 687: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.43348973989486694
    2. 'to' → logprob: -1.0584897994995117
    3. ',' → logprob: -5.933489799499512
    4. '           ' → logprob: -6.433489799499512
    5. '            ' → logprob: -8.808489799499512
    6. '<|end|>' → logprob: -9.308489799499512
    7. ' ' → logprob: -10.058489799499512
    8. 'normal' → logprob: -10.433489799499512
    9. ' normal' → logprob: -10.683489799499512
    10. ')' → logprob: -10.683489799499512

Token 688: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.011047814972698689
    2. ' normal' → logprob: -4.511047840118408
    3. '(normal' → logprob: -17.88604736328125
    4. '
' → logprob: -18.63604736328125
    5. '```' → logprob: -19.38604736328125
    6. '_normal' → logprob: -19.38604736328125
    7. '           ' → logprob: -19.63604736328125
    8. 'Normal' → logprob: -19.76104736328125
    9. '   ' → logprob: -20.38604736328125
    10. '`' → logprob: -20.51104736328125

Token 689: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00709552364423871
    2. '_min' → logprob: -5.0070953369140625
    3. 'max' → logprob: -7.8820953369140625
    4. '_normal' → logprob: -14.007095336914062
    5. 'Max' → logprob: -14.507095336914062
    6. 'min' → logprob: -14.757095336914062
    7. '_qty' → logprob: -15.132095336914062
    8. '	max' → logprob: -15.257095336914062
    9. '+' → logprob: -15.757095336914062
    10. ' max' → logprob: -16.632095336914062

Token 690: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.541164219379425
    2. ',' → logprob: -1.1661641597747803
    3. ':' → logprob: -2.5411641597747803
    4. ' normal' → logprob: -4.291164398193359
    5. ' for' → logprob: -5.166164398193359
    6. 'normal' → logprob: -6.541164398193359
    7. '            ' → logprob: -6.666164398193359
    8. '            
' → logprob: -7.041164398193359
    9. ')' → logprob: -7.416164398193359
    10. '               ' → logprob: -7.541164398193359

Token 691: ' choose' (ID: 5655)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.8115876913070679
    2. ' normal' → logprob: -0.9365876913070679
    3. '           ' → logprob: -1.8115876913070679
    4. '#' → logprob: -9.0615873336792
    5. '               ' → logprob: -9.0615873336792
    6. ' for' → logprob: -9.1865873336792
    7. 'for' → logprob: -10.4365873336792
    8. 'max' → logprob: -10.6865873336792
    9. '            ' → logprob: -11.1865873336792
    10. ' #' → logprob: -11.1865873336792

Token 692: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.4740924537181854
    2. ' normal' → logprob: -0.9740924835205078
    3. '           ' → logprob: -11.724092483520508
    4. 'the' → logprob: -13.099092483520508
    5. '(normal' → logprob: -13.099092483520508
    6. ' the' → logprob: -13.849092483520508
    7. '_normal' → logprob: -14.099092483520508
    8. '            ' → logprob: -14.349092483520508
    9. '```' → logprob: -15.224092483520508
    10. 'max' → logprob: -15.474092483520508

Token 693: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0043642520904541016
    2. '_qty' → logprob: -5.629364013671875
    3. '_min' → logprob: -7.254364013671875
    4. 'max' → logprob: -9.879364013671875
    5. '_normal' → logprob: -13.254364013671875
    6. 'Max' → logprob: -14.379364013671875
    7. '_quantity' → logprob: -14.504364013671875
    8. '_' → logprob: -14.754364013671875
    9. '_MAX' → logprob: -14.754364013671875
    10. '```' → logprob: -14.879364013671875

Token 694: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03205195069313049
    2. '<|end|>' → logprob: -4.407052040100098
    3. '<|end|>' → logprob: -5.282052040100098
    4. '            
' → logprob: -5.407052040100098
    5. '            ' → logprob: -5.657052040100098
    6. ')' → logprob: -6.407052040100098
    7. ':' → logprob: -7.532052040100098
    8. '
' → logprob: -7.532052040100098
    9. ' ' → logprob: -7.657052040100098
    10. ',' → logprob: -7.657052040100098

Token 695: 'maximize' (ID: 187381)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03940815478563309
    2. '<|end|>' → logprob: -3.6644082069396973
    3. 'normal' → logprob: -5.164408206939697
    4. ' )' → logprob: -6.039408206939697
    5. '<|end|>' → logprob: -6.539408206939697
    6. ' normal' → logprob: -6.914408206939697
    7. '           ' → logprob: -7.414408206939697
    8. ').' → logprob: -8.164407730102539
    9. ')
' → logprob: -8.789407730102539
    10. '.' → logprob: -9.039407730102539

Token 696: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.4034935534000397
    2. ' normal' → logprob: -1.1534935235977173
    3. '_normal' → logprob: -4.528493404388428
    4. ')' → logprob: -5.278493404388428
    5. '(normal' → logprob: -8.028493881225586
    6. '<|end|>' → logprob: -9.653493881225586
    7. ' )' → logprob: -9.903493881225586
    8. '_' → logprob: -10.028493881225586
    9. ' ' → logprob: -11.278493881225586
    10. 'Normal' → logprob: -11.528493881225586

Token 697: ' chicken' (ID: 21663)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.5841214060783386
    2. ')' → logprob: -0.8341214060783386
    3. ')_' → logprob: -5.209121227264404
    4. '_quantity' → logprob: -7.084121227264404
    5. '```' → logprob: -7.959121227264404
    6. '_' → logprob: -7.959121227264404
    7. ' )' → logprob: -8.459121704101562
    8. '_amt' → logprob: -8.834121704101562
    9. '_normal' → logprob: -9.209121704101562
    10. '_max' → logprob: -9.584121704101562

Token 698: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009037835523486137
    2. '_qty' → logprob: -5.634037971496582
    3. 'quantity' → logprob: -6.384037971496582
    4. ')
' → logprob: -6.634037971496582
    5. ' quantity' → logprob: -6.884037971496582
    6. '_quantity' → logprob: -7.509037971496582
    7. ' )' → logprob: -8.134037971496582
    8. '           ' → logprob: -8.259037971496582
    9. ').' → logprob: -9.509037971496582
    10. '```' → logprob: -10.009037971496582

Token 699: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022397199645638466
    2. ' normal' → logprob: -4.272397041320801
    3. '            
' → logprob: -5.022397041320801
    4. 'normal' → logprob: -6.897397041320801
    5. '       ' → logprob: -9.2723970413208
    6. '   ' → logprob: -9.6473970413208
    7. '<|end|>' → logprob: -10.0223970413208
    8. '        
' → logprob: -10.0223970413208
    9. '    
' → logprob: -10.1473970413208
    10. '               ' → logprob: -10.3973970413208

Token 700: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' (adapté à ' normal') → logprob: -0.04110891371965408
    2. ' normal' → logprob: -3.7911088466644287
    3. '           ' → logprob: -4.041109085083008
    4. 'answer' → logprob: -9.916109085083008
    5. 'return' → logprob: -10.541109085083008
    6. '       ' → logprob: -11.041109085083008
    7. '               ' → logprob: -11.791109085083008
    8. '   ' → logprob: -11.791109085083008
    9. 'solution' → logprob: -12.666109085083008
    10. '
' → logprob: -12.791109085083008

Token 701: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.07924842834472656
    2. '_max' → logprob: -2.5792484283447266
    3. '_normal' → logprob: -9.454248428344727
    4. '_' → logprob: -9.454248428344727
    5. '_amt' → logprob: -9.829248428344727
    6. '_quantity' → logprob: -9.954248428344727
    7. '_q' → logprob: -10.579248428344727
    8. '_norm' → logprob: -11.204248428344727
    9. '_quant' → logprob: -11.579248428344727
    10. '```' → logprob: -11.579248428344727

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. '=int' → logprob: -17.563261032104492
    4. '＝' → logprob: -17.813261032104492
    5. '=
' → logprob: -17.938261032104492
    6. ' =
' → logprob: -18.063261032104492
    7. ' ' → logprob: -18.438261032104492
    8. ')' → logprob: -18.813261032104492
    9. ':' → logprob: -18.938261032104492
    10. ',' → logprob: -18.938261032104492

Token 703: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.03804149478673935
    2. ' normal' → logprob: -3.288041591644287
    3. 'Normal' → logprob: -17.538042068481445
    4. '_normal' → logprob: -17.538042068481445
    5. '(normal' → logprob: -18.163042068481445
    6. 'norm' → logprob: -19.163042068481445
    7. 'max' → logprob: -19.288042068481445
    8. '   ' → logprob: -19.288042068481445
    9. '           ' → logprob: -19.413042068481445
    10. '.normal' → logprob: -19.663042068481445

Token 704: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.2471589798224159e-05
    2. 'max' → logprob: -12.000012397766113
    3. '_qty' → logprob: -12.125012397766113
    4. '_min' → logprob: -14.375012397766113
    5. 'Max' → logprob: -16.37501335144043
    6. '```' → logprob: -16.62501335144043
    7. '_MAX' → logprob: -16.87501335144043
    8. '\' → logprob: -18.25001335144043
    9. '_' → logprob: -18.75001335144043
    10. ')_' → logprob: -19.12501335144043

Token 705: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14316216111183167
    2. '            
' → logprob: -2.393162250518799
    3. '
' → logprob: -3.268162250518799
    4. 'if' → logprob: -5.893162250518799
    5. '<|end|>' → logprob: -7.643162250518799
    6. ' if' → logprob: -8.51816177368164
    7. '           
' → logprob: -9.39316177368164
    8. ',
' → logprob: -9.64316177368164
    9. '        
' → logprob: -9.64316177368164
    10. ',' → logprob: -9.89316177368164

Token 706: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019144967198371887
    2. '
' → logprob: -4.3941450119018555
    3. 'if' → logprob: -5.8941450119018555
    4. '            
' → logprob: -5.8941450119018555
    5. ' if' → logprob: -7.1441450119018555
    6. 'answer' → logprob: -9.394145011901855
    7. 'cost' → logprob: -9.394145011901855
    8. 'total' → logprob: -10.019145011901855
    9. 'return' → logprob: -10.769145011901855
    10. 'candidate' → logprob: -11.394145011901855

Token 707: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.23892715573310852
    2. 'if' → logprob: -1.8639271259307861
    3. '           ' → logprob: -3.863927125930786
    4. '#' (adapté à ' #') → logprob: -4.488927364349365
    5. 'current' → logprob: -5.113927364349365
    6. ' total' → logprob: -5.238927364349365
    7. 'best' → logprob: -5.238927364349365
    8. ' if' → logprob: -5.363927364349365
    9. 'answer' → logprob: -6.488927364349365
    10. 'candidate' → logprob: -6.863927364349365

Token 708: ' We' (ID: 1416)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.12586894631385803
    2. 'if' → logprob: -2.625869035720825
    3. 'answer' → logprob: -4.625868797302246
    4. 'cost' → logprob: -4.750868797302246
    5. 'current' → logprob: -4.875868797302246
    6. '           ' → logprob: -5.125868797302246
    7. '#' → logprob: -5.250868797302246
    8. 'candidate' → logprob: -5.750868797302246
    9. ' total' → logprob: -5.875868797302246
    10. 'best' → logprob: -6.500868797302246

Token 709: ' have' (ID: 679)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8613400459289551
    2. 'if' → logprob: -1.236340045928955
    3. ' if' → logprob: -1.361340045928955
    4. '            
' → logprob: -4.361340045928955
    5. 'total' → logprob: -5.736340045928955
    6. ' =' → logprob: -5.986340045928955
    7. '
' → logprob: -5.986340045928955
    8. '#' → logprob: -6.111340045928955
    9. '=' → logprob: -6.861340045928955
    10. ')' → logprob: -7.361340045928955

Token 710: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.319405436515808
    2. ' a' → logprob: -1.569405436515808
    3. ' total' → logprob: -1.569405436515808
    4. 'total' → logprob: -2.0694055557250977
    5. 'if' → logprob: -2.5694055557250977
    6. '           ' → logprob: -2.6944055557250977
    7. 'a' → logprob: -3.6944055557250977
    8. ' candidate' → logprob: -5.569405555725098
    9. 'candidate' → logprob: -5.819405555725098
    10. ' current' → logprob: -6.444405555725098

Token 711: 'izu' (ID: 75080)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.535439133644104
    2. ' total' → logprob: -2.1604390144348145
    3. 'valid' → logprob: -2.4104390144348145
    4. ' candidate' → logprob: -3.4104390144348145
    5. ' if' → logprob: -3.7854390144348145
    6. 'n' → logprob: -3.9104390144348145
    7. 'if' → logprob: -3.9104390144348145
    8. 'candidate' → logprob: -3.9104390144348145
    9. 'total' → logprob: -4.0354390144348145
    10. ' solution' → logprob: -4.2854390144348145

Token 712: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -5.44312788406387e-05
    2. '_quantity' → logprob: -10.875054359436035
    3. '           ' → logprob: -11.500054359436035
    4. 'qty' → logprob: -12.125054359436035
    5. '_q' → logprob: -12.125054359436035
    6. '_' → logprob: -12.500054359436035
    7. ' _' → logprob: -13.125054359436035
    8. '_amt' → logprob: -13.125054359436035
    9. '```' → logprob: -13.375054359436035
    10. '_quant' → logprob: -14.250054359436035

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1688360869884491
    2. ' and' → logprob: -2.5438361167907715
    3. 'and' → logprob: -3.1688361167907715
    4. ' ,' → logprob: -4.6688361167907715
    5. '<|end|>' → logprob: -4.9188361167907715
    6. '+' → logprob: -5.0438361167907715
    7. ' +' → logprob: -5.9188361167907715
    8. ' normal' → logprob: -6.1688361167907715
    9. 'normal' → logprob: -6.2938361167907715
    10. '           ' → logprob: -7.1688361167907715

Token 714: ' normal' (ID: 6078)
  Prédit: ' normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.4740775227546692
    2. 'normal' → logprob: -0.9740775227546692
    3. '(normal' → logprob: -16.099077224731445
    4. '"' → logprob: -16.474077224731445
    5. 'space' → logprob: -16.474077224731445
    6. ',' → logprob: -16.724077224731445
    7. '_normal' → logprob: -16.724077224731445
    8. ' ' → logprob: -16.849077224731445
    9. '            ' → logprob: -17.599077224731445
    10. '           ' → logprob: -17.724077224731445

Token 715: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -1.27099974633893e-05
    2. '_quantity' → logprob: -12.750012397766113
    3. '_q' → logprob: -12.875012397766113
    4. 'qty' → logprob: -13.250012397766113
    5. '_' → logprob: -13.375012397766113
    6. 'Qty' → logprob: -13.875012397766113
    7. '```' → logprob: -14.000012397766113
    8. '_amt' → logprob: -14.125012397766113
    9. ',' → logprob: -15.375012397766113
    10. '_idx' → logprob: -15.500012397766113

Token 716: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0953226238489151
    2. '
' → logprob: -2.720322608947754
    3. 'return' → logprob: -3.970322608947754
    4. '            
' → logprob: -5.345322608947754
    5. ' return' → logprob: -7.345322608947754
    6. ',' → logprob: -7.595322608947754
    7. '<|end|>' → logprob: -9.220322608947754
    8. '
' → logprob: -9.970322608947754
    9. '<|end|>' → logprob: -11.095322608947754
    10. ')' → logprob: -11.220322608947754

Token 717: ' candidate' (ID: 17098)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.012326955795288
    2. 'a' → logprob: -1.262326955795288
    3. ' the' → logprob: -2.637326955795288
    4. 'the' → logprob: -2.637326955795288
    5. ' valid' → logprob: -2.762326955795288
    6. 'candidate' → logprob: -3.137326955795288
    7. 'best' → logprob: -3.637326955795288
    8. ' current' → logprob: -3.887326955795288
    9. ' candidate' → logprob: -3.887326955795288
    10. 'valid' → logprob: -4.387327194213867

Token 718: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.539209246635437
    2. '
' → logprob: -0.914209246635437
    3. '            
' → logprob: -4.164209365844727
    4. '
' → logprob: -8.664209365844727
    5. '  
' → logprob: -10.164209365844727
    6. '        
' → logprob: -10.289209365844727
    7. '    
' → logprob: -10.414209365844727
    8. 'if' → logprob: -10.414209365844727
    9. '       ' → logprob: -11.039209365844727
    10. '<|end|>' → logprob: -11.164209365844727

Token 719: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026975996792316437
    2. '
' → logprob: -4.026976108551025
    3. '            
' → logprob: -4.901976108551025
    4. '<|end|>' → logprob: -8.151975631713867
    5. ',' → logprob: -8.276975631713867
    6. '\n' → logprob: -8.526975631713867
    7. '       ' → logprob: -9.026975631713867
    8. '  
' → logprob: -9.151975631713867
    9. '        
' → logprob: -9.651975631713867
    10. ',
' → logprob: -9.901975631713867

Token 720: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20452924072742462
    2. 'if' → logprob: -2.079529285430908
    3. ' if' → logprob: -2.954529285430908
    4. 'best' → logprob: -6.079529285430908
    5. 'candidate' → logprob: -6.579529285430908
    6. 'total' → logprob: -6.579529285430908
    7. 'answer' → logprob: -6.829529285430908
    8. 'current' → logprob: -7.204529285430908
    9. 'cost' → logprob: -8.45452880859375
    10. '            
' → logprob: -8.95452880859375

Token 721: ' Verify' (ID: 44630)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2790456712245941
    2. '           ' → logprob: -1.6540457010269165
    3. 'total' → logprob: -3.404045581817627
    4. ' if' → logprob: -4.279045581817627
    5. 'cost' → logprob: -5.779045581817627
    6. 'current' → logprob: -6.904045581817627
    7. 'candidate' → logprob: -7.654045581817627
    8. ' total' → logprob: -8.654046058654785
    9. '#' → logprob: -8.654046058654785
    10. '       ' → logprob: -9.654046058654785

Token 722: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2938530743122101
    2. 'if' → logprob: -2.0438530445098877
    3. '           ' → logprob: -2.2938530445098877
    4. ' total' → logprob: -4.168853282928467
    5. 'total' → logprob: -4.918853282928467
    6. '            
' → logprob: -6.668853282928467
    7. '       ' → logprob: -10.043852806091309
    8. '
' → logprob: -10.543852806091309
    9. '            ' → logprob: -10.668852806091309
    10. ' 
' → logprob: -11.543852806091309

Token 723: ' quantity' (ID: 17245)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.18972080945968628
    2. '_quantity' → logprob: -1.814720869064331
    3. 'quantity' → logprob: -5.189720630645752
    4. 'qty' → logprob: -6.189720630645752
    5. ' =' → logprob: -7.564720630645752
    6. '_' → logprob: -7.814720630645752
    7. '>=' → logprob: -7.939720630645752
    8. 'if' → logprob: -8.18972110748291
    9. ' >=' → logprob: -8.43972110748291
    10. ' quantity' → logprob: -8.68972110748291

Token 724: ' >=' (ID: 5064)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03548756614327431
    2. 'total' → logprob: -3.535487651824951
    3. ' total' → logprob: -5.660487651824951
    4. ' if' → logprob: -6.785487651824951
    5. 'if' → logprob: -7.660487651824951
    6. '            
' → logprob: -7.910487651824951
    7. '
' → logprob: -9.160487174987793
    8. '       ' → logprob: -10.035487174987793
    9. ',' → logprob: -10.160487174987793
    10. '(total' → logprob: -10.660487174987793

Token 725: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004307884373702109
    2. ' q' → logprob: -7.750430583953857
    3. 'normal' → logprob: -17.375431060791016
    4. '	q' → logprob: -18.375431060791016
    5. '   ' → logprob: -18.500431060791016
    6. '```' → logprob: -18.500431060791016
    7. ' normal' → logprob: -19.250431060791016
    8. '
' → logprob: -19.500431060791016
    9. '           ' → logprob: -19.750431060791016
    10. '       ' → logprob: -20.000431060791016

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. 'q' → logprob: -13.250004768371582
    3. '```' → logprob: -14.000004768371582
    4. '           ' → logprob: -14.625004768371582
    5. '       ' → logprob: -15.625004768371582
    6. 'a' → logprob: -15.875004768371582
    7. '_' → logprob: -16.000003814697266
    8. ' ' → logprob: -16.000003814697266
    9. '   ' → logprob: -16.125003814697266
    10. 'u' → logprob: -16.125003814697266

Token 727: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03442263603210449
    2. '
' → logprob: -4.284422874450684
    3. '            
' → logprob: -4.659422874450684
    4. ' if' → logprob: -4.909422874450684
    5. 'if' → logprob: -6.409422874450684
    6. '<|end|>' → logprob: -7.659422874450684
    7. ',' → logprob: -8.284422874450684
    8. '\n' → logprob: -8.409422874450684
    9. '  
' → logprob: -9.284422874450684
    10. ' 
' → logprob: -9.409422874450684

Token 728: ' budget' (ID: 9946)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.1293290853500366
    2. '(cost' → logprob: -1.1293290853500366
    3. '(a' → logprob: -1.8793290853500366
    4. 'normal' → logprob: -2.879329204559326
    5. '(normal' → logprob: -3.004329204559326
    6. '(best' → logprob: -3.504329204559326
    7. '(total' → logprob: -4.379329204559326
    8. 'best' → logprob: -4.504329204559326
    9. '(b' → logprob: -4.629329204559326
    10. '(' → logprob: -4.879329204559326

Token 729: ' ok' (ID: 4763)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1852206289768219
    2. ' if' → logprob: -1.9352205991744995
    3. 'if' → logprob: -4.310220718383789
    4. '            
' → logprob: -4.935220718383789
    5. ' and' → logprob: -6.310220718383789
    6. ',' → logprob: -6.560220718383789
    7. '
' → logprob: -8.810220718383789
    8. 'and' → logprob: -9.060220718383789
    9. '```' → logprob: -9.560220718383789
    10. 'total' → logprob: -9.935220718383789

Token 730: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007996371947228909
    2. '
' → logprob: -5.632996559143066
    3. '            
' → logprob: -5.882996559143066
    4. 'if' → logprob: -6.882996559143066
    5. ' if' → logprob: -7.757996559143066
    6. 'total' → logprob: -9.257996559143066
    7. '```' → logprob: -11.507996559143066
    8. '       ' → logprob: -11.632996559143066
    9. ',' → logprob: -11.757996559143066
    10. '           
' → logprob: -12.007996559143066

Token 731: 'should' (ID: 10618)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07268165796995163
    2. 'a' → logprob: -3.5726816654205322
    3. '#' → logprob: -4.322681427001953
    4. ' cost' → logprob: -4.447681427001953
    5. 'c' → logprob: -5.197681427001953
    6. 'True' → logprob: -5.822681427001953
    7. '(cost' → logprob: -6.822681427001953
    8. '           ' → logprob: -7.072681427001953
    9. 'already' → logprob: -7.197681427001953
    10. 'normal' → logprob: -7.572681427001953

Token 732: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.228792205452919
    2. 'be' → logprob: -2.103792190551758
    3. 'always' → logprob: -3.353792190551758
    4. 'hold' → logprob: -3.728792190551758
    5. ' always' → logprob: -4.603792190551758
    6. 'already' → logprob: -5.228792190551758
    7. ' hold' → logprob: -5.603792190551758
    8. ' already' → logprob: -5.978792190551758
    9. 'pass' → logprob: -7.353792190551758
    10. '```' → logprob: -7.728792190551758

Token 733: ' ok' (ID: 4763)
  Prédit: 'true'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'true' → logprob: -0.8495596051216125
    2. 'gu' → logprob: -1.5995595455169678
    3. 'True' → logprob: -2.2245595455169678
    4. 'already' → logprob: -2.4745595455169678
    5. 'ok' → logprob: -2.9745595455169678
    6. 'ens' → logprob: -2.9745595455169678
    7. 'ob' → logprob: -3.3495595455169678
    8. 'redu' → logprob: -4.724559783935547
    9. 's' → logprob: -4.849559783935547
    10. 'covered' → logprob: -4.974559783935547

Token 734: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31994250416755676
    2. ')
' → logprob: -1.8199424743652344
    3. '           ' → logprob: -2.3199424743652344
    4. '):
' → logprob: -4.444942474365234
    5. '):

' → logprob: -7.569942474365234
    6. '):' → logprob: -8.194942474365234
    7. ')

' → logprob: -8.944942474365234
    8. ' because' → logprob: -9.069942474365234
    9. ' since' → logprob: -9.194942474365234
    10. ').' → logprob: -9.194942474365234

Token 735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007056219037622213
    2. '
' → logprob: -5.25705623626709
    3. '            
' → logprob: -6.38205623626709
    4. ' if' → logprob: -10.25705623626709
    5. 'if' → logprob: -10.50705623626709
    6. '       ' → logprob: -10.63205623626709
    7. '  
' → logprob: -11.63205623626709
    8. '```' → logprob: -11.88205623626709
    9. '        
' → logprob: -12.00705623626709
    10. 'return' → logprob: -12.13205623626709

Token 736: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2145930975675583
    2. 'total' (adapté à ' total') → logprob: -2.2145931720733643
    3. 'if' → logprob: -3.2145931720733643
    4. ' if' → logprob: -3.8395931720733643
    5. '
' → logprob: -4.464592933654785
    6. ' total' → logprob: -4.714592933654785
    7. '            
' → logprob: -6.589592933654785
    8. '       ' → logprob: -8.839592933654785
    9. 'return' → logprob: -9.214592933654785
    10. 'assert' → logprob: -10.214592933654785

Token 737: '_qty' (ID: 80847)
  Prédit: '_quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quantity' → logprob: -0.21468006074428558
    2. '_qty' → logprob: -1.7146800756454468
    3. '_' → logprob: -4.339680194854736
    4. 'quantity' → logprob: -10.339679718017578
    5. '_quant' → logprob: -10.464679718017578
    6. ' =' → logprob: -10.589679718017578
    7. '_q' → logprob: -10.839679718017578
    8. ' _' → logprob: -11.214679718017578
    9. '=' → logprob: -12.089679718017578
    10. '_amount' → logprob: -12.839679718017578

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16030505299568176
    2. ' =' → logprob: -1.9103050231933594
    3. '>=' → logprob: -9.53530502319336
    4. ' >=' → logprob: -11.78530502319336
    5. ')' → logprob: -15.53530502319336
    6. '＝' → logprob: -16.03530502319336
    7. '≥' → logprob: -16.16030502319336
    8. '=a' → logprob: -16.41030502319336
    9. '>' → logprob: -16.53530502319336
    10. '=
' → logprob: -16.66030502319336

Token 739: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014163863845169544
    2. ' a' → logprob: -4.264163970947266
    3. '           ' → logprob: -16.389163970947266
    4. '	a' → logprob: -16.389163970947266
    5. ' normal' → logprob: -16.514163970947266
    6. '   ' → logprob: -16.889163970947266
    7. '_a' → logprob: -17.014163970947266
    8. 'normal' → logprob: -17.389163970947266
    9. 'ai' → logprob: -17.889163970947266
    10. ' ' → logprob: -18.764163970947266

Token 740: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.0001478796184528619
    2. 'a' → logprob: -9.625147819519043
    3. 'iz' → logprob: -9.750147819519043
    4. 'ziu' → logprob: -11.500147819519043
    5. 'i' → logprob: -11.750147819519043
    6. '_' → logprob: -14.250147819519043
    7. '1' → logprob: -14.250147819519043
    8. 'uzu' → logprob: -14.375147819519043
    9. 'zu' → logprob: -14.750147819519043
    10. 'izou' → logprob: -14.750147819519043

Token 741: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -5.200166469876422e-06
    2. 'qty' → logprob: -12.250004768371582
    3. '_' → logprob: -15.375004768371582
    4. '_amt' → logprob: -16.3750057220459
    5. 'Qty' → logprob: -16.7500057220459
    6. '_q' → logprob: -17.0000057220459
    7. '```' → logprob: -18.0000057220459
    8. 'a' → logprob: -18.6250057220459
    9. '*_' → logprob: -19.1250057220459
    10. '_quantity' → logprob: -19.1250057220459

Token 742: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759424567222595
    2. '+' → logprob: -0.8259424567222595
    3. '+
' → logprob: -13.825942039489746
    4. ' +
' → logprob: -14.325942039489746
    5. '           ' → logprob: -14.700942039489746
    6. '<|end|>' → logprob: -14.825942039489746
    7. ' ' → logprob: -15.575942039489746
    8. ' ' → logprob: -16.450942993164062
    9. ')' → logprob: -16.825942993164062
    10. '```' → logprob: -16.950942993164062

Token 743: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0001584850688232109
    2. ' normal' → logprob: -8.750158309936523
    3. '_normal' → logprob: -20.500158309936523
    4. '(normal' → logprob: -21.375158309936523
    5. 'Normal' → logprob: -21.750158309936523
    6. '.normal' → logprob: -22.500158309936523
    7. '           ' → logprob: -22.625158309936523
    8. 'norm' → logprob: -23.000158309936523
    9. '   ' → logprob: -23.375158309936523
    10. ' ' → logprob: -24.250158309936523

Token 744: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -1.3856492842023727e-06
    2. 'qty' → logprob: -14.250000953674316
    3. '_max' → logprob: -15.625000953674316
    4. '_amt' → logprob: -15.750000953674316
    5. '_q' → logprob: -16.000001907348633
    6. '```' → logprob: -16.125001907348633
    7. 'Qty' → logprob: -17.250001907348633
    8. '_idx' → logprob: -17.625001907348633
    9. '\' → logprob: -17.750001907348633
    10. '_' → logprob: -18.000001907348633

Token 745: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026208097115159035
    2. '<|end|>' → logprob: -4.27620792388916
    3. 'if' → logprob: -5.52620792388916
    4. '            
' → logprob: -5.77620792388916
    5. ' if' → logprob: -6.02620792388916
    6. '
' → logprob: -6.15120792388916
    7. '       ' → logprob: -9.40120792388916
    8. '```' → logprob: -9.77620792388916
    9. '            ' → logprob: -10.52620792388916
    10. '<|end|>' → logprob: -10.52620792388916

Token 746: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027246330864727497
    2. ' if' → logprob: -6.877724647521973
    3. 'if' → logprob: -7.002724647521973
    4. '            
' → logprob: -7.752724647521973
    5. '
' → logprob: -8.877724647521973
    6. '<|end|>' → logprob: -8.877724647521973
    7. '       ' → logprob: -10.127724647521973
    8. '```' → logprob: -11.502724647521973
    9. '   ' → logprob: -11.877724647521973
    10. ',' → logprob: -12.502724647521973

Token 747: ' total' (ID: 3609)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25418904423713684
    2. '           ' → logprob: -1.5041890144348145
    3. ' if' → logprob: -6.1291890144348145
    4. '```' → logprob: -9.754189491271973
    5. '       ' → logprob: -11.004189491271973
    6. '            
' → logprob: -13.629189491271973
    7. '   ' → logprob: -13.754189491271973
    8. '<|end|>' → logprob: -14.129189491271973
    9. '               ' → logprob: -14.379189491271973
    10. '          ' → logprob: -15.504189491271973

Token 748: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0005499334656633437
    2. 'cost' → logprob: -8.000550270080566
    3. '_price' → logprob: -8.750550270080566
    4. '_qty' → logprob: -10.500550270080566
    5. '_' → logprob: -11.000550270080566
    6. '_budget' → logprob: -12.625550270080566
    7. ' cost' → logprob: -13.125550270080566
    8. 'Cost' → logprob: -13.250550270080566
    9. '_quantity' → logprob: -14.000550270080566
    10. '_c' → logprob: -14.125550270080566

Token 749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. '<|end|>' → logprob: -14.688262939453125
    4. ')' → logprob: -15.938262939453125
    5. '```' → logprob: -16.688262939453125
    6. ' ' → logprob: -16.688262939453125
    7. ':' → logprob: -17.313262939453125
    8. '＝' → logprob: -17.438262939453125
    9. 'cost' → logprob: -17.938262939453125
    10. '<|end|>' → logprob: -17.938262939453125

Token 750: ' a' (ID: 261)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.007286554202437401
    2. 'a' → logprob: -5.632286548614502
    3. ' cost' → logprob: -5.632286548614502
    4. 'c' → logprob: -9.38228702545166
    5. '(cost' → logprob: -11.75728702545166
    6. ' a' → logprob: -12.38228702545166
    7. '   ' → logprob: -13.25728702545166
    8. 'price' → logprob: -15.25728702545166
    9. '           ' → logprob: -16.007286071777344
    10. '```' → logprob: -16.007286071777344

Token 751: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -6.837811088189483e-05
    2. '1' → logprob: -10.750068664550781
    3. 'a' → logprob: -11.375068664550781
    4. '`' → logprob: -11.750068664550781
    5. 'i' → logprob: -12.125068664550781
    6. 'iz' → logprob: -13.125068664550781
    7. '\
' → logprob: -13.250068664550781
    8. '_' → logprob: -13.250068664550781
    9. 'ziu' → logprob: -13.250068664550781
    10. '[' → logprob: -13.375068664550781

Token 752: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.0048449537716805935
    2. 'qty' → logprob: -5.629845142364502
    3. '_cost' → logprob: -7.129845142364502
    4. 'cost' → logprob: -8.254844665527344
    5. 'a' → logprob: -9.004844665527344
    6. 'q' → logprob: -10.879844665527344
    7. 'u' → logprob: -11.754844665527344
    8. 'Qty' → logprob: -11.754844665527344
    9. 'z' → logprob: -12.754844665527344
    10. '_amt' → logprob: -13.004844665527344

Token 753: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47408732771873474
    2. '*' → logprob: -0.9740873575210571
    3. '*c' → logprob: -11.849087715148926
    4. ' ' → logprob: -13.724087715148926
    5. '```' → logprob: -14.474087715148926
    6. ' ' → logprob: -14.849087715148926
    7. '**' → logprob: -14.849087715148926
    8. '`' → logprob: -15.099087715148926
    9. '*object' → logprob: -15.599087715148926
    10. '   ' → logprob: -16.22408676147461

Token 754: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170225441455841
    2. ' c' → logprob: -6.7511701583862305
    3. '	c' → logprob: -18.876171112060547
    4. '```' → logprob: -19.126171112060547
    5. 'price' → logprob: -19.376171112060547
    6. '   ' → logprob: -19.501171112060547
    7. '_c' → logprob: -20.001171112060547
    8. ')c' → logprob: -20.126171112060547
    9. ' ' → logprob: -20.251171112060547
    10. '$c' → logprob: -21.001171112060547

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.5
    3. '```' → logprob: -17.625
    4. '_' → logprob: -18.625
    5. '１' → logprob: -18.625
    6. 'price' → logprob: -19.25
    7. ' ' → logprob: -19.625
    8. '۱' → logprob: -19.6875
    9. '*' → logprob: -19.75
    10. 'ost' → logprob: -20.0

Token 756: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519315779209137
    2. '+' → logprob: -1.5019315481185913
    3. '           ' → logprob: -13.376931190490723
    4. '```' → logprob: -15.626931190490723
    5. '+
' → logprob: -15.876931190490723
    6. '          ' → logprob: -16.25193214416504
    7. '        ' → logprob: -16.25193214416504
    8. ' ' → logprob: -16.25193214416504
    9. '            ' → logprob: -16.37693214416504
    10. '       ' → logprob: -16.37693214416504

Token 757: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -7.493430894101039e-05
    2. ' normal' → logprob: -9.500075340270996
    3. '_normal' → logprob: -19.00007438659668
    4. '(normal' → logprob: -20.00007438659668
    5. '           ' → logprob: -20.87507438659668
    6. 'Normal' → logprob: -21.25007438659668
    7. 'norm' → logprob: -22.00007438659668
    8. '.normal' → logprob: -22.75007438659668
    9. '   ' → logprob: -23.12507438659668
    10. 'ormal' → logprob: -23.50007438659668

Token 758: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -4.320199877838604e-07
    2. 'qty' → logprob: -15.5
    3. '_' → logprob: -16.375
    4. '_amt' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. '_quantity' → logprob: -18.25
    7. 'Qty' → logprob: -18.25
    8. '_q' → logprob: -18.375
    9. '_max' → logprob: -18.625
    10. '_\' → logprob: -19.75

Token 759: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029751762747764587
    2. '*' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.279751777648926
    4. '```' → logprob: -15.154751777648926
    5. '*c' → logprob: -15.529751777648926
    6. ' ' → logprob: -16.27975082397461
    7. '`' → logprob: -17.02975082397461
    8. '**' → logprob: -17.77975082397461
    9. ')' → logprob: -17.77975082397461
    10. '[' → logprob: -18.02975082397461

Token 760: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170225441455841
    2. ' c' → logprob: -6.7511701583862305
    3. '   ' → logprob: -19.501171112060547
    4. '	c' → logprob: -20.251171112060547
    5. ')c' → logprob: -21.001171112060547
    6. '```' → logprob: -21.001171112060547
    7. '$c' → logprob: -21.376171112060547
    8. ' ' → logprob: -21.751171112060547
    9. '  ' → logprob: -21.751171112060547
    10. '    ' → logprob: -22.251171112060547

Token 761: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.375
    3. '۲' → logprob: -17.875
    4. '₂' → logprob: -18.0
    5. '２' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. 's' → logprob: -19.25
    8. 'a' → logprob: -20.0625
    9. '২' → logprob: -20.25
    10. '२' → logprob: -20.25

Token 762: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13233131170272827
    2. ' if' → logprob: -3.132331371307373
    3. '<|end|>' → logprob: -3.632331371307373
    4. '            
' → logprob: -3.882331371307373
    5. '       ' → logprob: -4.132331371307373
    6. '
' → logprob: -4.882331371307373
    7. 'if' → logprob: -5.132331371307373
    8. ')' → logprob: -6.757331371307373
    9. '               ' → logprob: -7.632331371307373
    10. '<|end|>' → logprob: -7.882331371307373

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.165027217415627e-05
    2. 'if' → logprob: -11.375021934509277
    3. '            
' → logprob: -12.250021934509277
    4. '       ' → logprob: -13.250021934509277
    5. '<|end|>' → logprob: -13.375021934509277
    6. ' if' → logprob: -13.750021934509277
    7. '               ' → logprob: -15.625021934509277
    8. '```' → logprob: -15.625021934509277
    9. '
' → logprob: -16.00002098083496
    10. '          ' → logprob: -16.12502098083496

Token 764: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014320284128189087
    2. '           ' → logprob: -4.264320373535156
    3. ' if' → logprob: -8.764320373535156
    4. '       ' → logprob: -15.264320373535156
    5. 'assert' → logprob: -15.389320373535156
    6. '```' → logprob: -16.264320373535156
    7. 'If' → logprob: -18.764320373535156
    8. '   ' → logprob: -18.889320373535156
    9. '	if' → logprob: -19.389320373535156
    10. 'return' → logprob: -19.639320373535156

Token 765: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.006798140238970518
    2. ' total' → logprob: -5.006798267364502
    3. '           ' → logprob: -9.881797790527344
    4. '(total' → logprob: -11.506797790527344
    5. 'best' → logprob: -11.881797790527344
    6. '               ' → logprob: -11.881797790527344
    7. '   ' → logprob: -12.631797790527344
    8. '                   ' → logprob: -13.506797790527344
    9. ' (' → logprob: -14.506797790527344
    10. '            ' → logprob: -15.006797790527344

Token 766: '_qty' (ID: 80847)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.03372223675251007
    2. '_qty' → logprob: -3.408722162246704
    3. 'cost' → logprob: -9.783721923828125
    4. '_' → logprob: -11.533721923828125
    5. 'qty' → logprob: -12.783721923828125
    6. '_quantity' → logprob: -13.158721923828125
    7. '_total' → logprob: -13.158721923828125
    8. '_COST' → logprob: -14.658721923828125
    9. ' cost' → logprob: -14.783721923828125
    10. 'Cost' → logprob: -14.783721923828125

Token 767: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.012562633492052555
    2. ' >=' → logprob: -4.3875627517700195
    3. '>' → logprob: -10.38756275177002
    4. ')>=' → logprob: -11.01256275177002
    5. ']>=' → logprob: -12.26256275177002
    6. '≥' → logprob: -14.63756275177002
    7. ')' → logprob: -15.13756275177002
    8. '   ' → logprob: -16.512561798095703
    9. '=' → logprob: -17.137561798095703
    10. '<|end|>' → logprob: -17.262561798095703

Token 768: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5048530030981055e-06
    2. ' q' → logprob: -13.500001907348633
    3. '	q' → logprob: -21.125001907348633
    4. '$q' → logprob: -21.625001907348633
    5. '[q' → logprob: -22.625001907348633
    6. '*q' → logprob: -24.000001907348633
    7. '           ' → logprob: -24.125001907348633
    8. '_q' → logprob: -24.750001907348633
    9. '       ' → logprob: -25.125001907348633
    10. '   ' → logprob: -25.375001907348633

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.75
    3. 'q' → logprob: -16.75
    4. '۱' → logprob: -18.0
    5. '１' → logprob: -18.25
    6. '১' → logprob: -18.5
    7. '१' → logprob: -18.625
    8. '_' → logprob: -19.0
    9. 'u' → logprob: -19.25
    10. '' → logprob: -20.1875

Token 770: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0197275560349226
    2. 'and' → logprob: -4.01972770690918
    3. ':' → logprob: -7.14472770690918
    4. '           ' → logprob: -7.26972770690918
    5. '               ' → logprob: -9.89472770690918
    6. ':
' → logprob: -10.64472770690918
    7. '<|end|>' → logprob: -11.64472770690918
    8. '          ' → logprob: -13.26972770690918
    9. '            ' → logprob: -13.51972770690918
    10. '       ' → logprob: -13.76972770690918

Token 771: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0007101670489646494
    2. ' total' → logprob: -7.2507100105285645
    3. 'cost' → logprob: -15.375710487365723
    4. '           ' → logprob: -18.375709533691406
    5. '(total' → logprob: -19.750709533691406
    6. '	total' → logprob: -19.875709533691406
    7. '$total' → logprob: -19.875709533691406
    8. '   ' → logprob: -20.000709533691406
    9. ' ' → logprob: -20.375709533691406
    10. '
' → logprob: -20.625709533691406

Token 772: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0008087906171567738
    2. 'cost' → logprob: -7.1258087158203125
    3. '_budget' → logprob: -12.625808715820312
    4. ' cost' → logprob: -14.875808715820312
    5. '_' → logprob: -15.625808715820312
    6. 'Cost' → logprob: -16.125808715820312
    7. '_COST' → logprob: -16.125808715820312
    8. '<=' → logprob: -16.875808715820312
    9. 'budget' → logprob: -17.375808715820312
    10. '```' → logprob: -17.625808715820312

Token 773: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759396553039551
    2. ' <=' → logprob: -0.8259396553039551
    3. ')<=' → logprob: -15.950939178466797
    4. ']<=' → logprob: -16.450939178466797
    5. '```' → logprob: -16.825939178466797
    6. '\' → logprob: -18.200939178466797
    7. ' ' → logprob: -18.450939178466797
    8. '≤' → logprob: -19.075939178466797
    9. ' ' → logprob: -19.200939178466797
    10. 'le' → logprob: -19.325939178466797

Token 774: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. '	b' → logprob: -18.258615493774414
    4. '```' → logprob: -19.758615493774414
    5. ')b' → logprob: -20.133615493774414
    6. '           ' → logprob: -20.508615493774414
    7. '       ' → logprob: -20.883615493774414
    8. '   ' → logprob: -20.883615493774414
    9. ' ' → logprob: -21.008615493774414
    10. 'budget' → logprob: -21.633615493774414

Token 775: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003177952254191041
    2. ' and' → logprob: -6.003178119659424
    3. ':
' → logprob: -7.628178119659424
    4. 'and' → logprob: -9.253177642822266
    5. '           ' → logprob: -9.628177642822266
    6. '               ' → logprob: -10.253177642822266
    7. ',' → logprob: -11.503177642822266
    8. '<|end|>' → logprob: -13.003177642822266
    9. ':return' → logprob: -13.503177642822266
    10. '):' → logprob: -13.753177642822266

Token 776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026314113289117813
    2. '           ' → logprob: -3.6513140201568604
    3. '```' → logprob: -11.901313781738281
    4. 'return' → logprob: -12.401313781738281
    5. '                   ' → logprob: -13.901313781738281
    6. '              ' → logprob: -14.651313781738281
    7. ' return' → logprob: -14.651313781738281
    8. '   ' → logprob: -15.276313781738281
    9. '       ' → logprob: -15.776313781738281
    10. '                       ' → logprob: -16.02631378173828

Token 777: ' best' (ID: 1636)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5883077383041382
    2. 'best' (adapté à ' best') → logprob: -0.8383077383041382
    3. 'return' → logprob: -4.838307857513428
    4. '           ' → logprob: -5.713307857513428
    5. ' best' → logprob: -6.963307857513428
    6. '                   ' → logprob: -9.33830738067627
    7. ' return' → logprob: -10.83830738067627
    8. '   ' → logprob: -12.08830738067627
    9. 'if' → logprob: -12.58830738067627
    10. '```' → logprob: -13.21330738067627

Token 778: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -6.153795766294934e-06
    2. 'answer' → logprob: -13.000005722045898
    3. 'Answer' → logprob: -13.000005722045898
    4. '_' → logprob: -14.125005722045898
    5. '_ans' → logprob: -15.125005722045898
    6. '_purchase' → logprob: -15.750005722045898
    7. '=_' → logprob: -16.5000057220459
    8. '\' → logprob: -16.5000057220459
    9. '_answers' → logprob: -16.5000057220459
    10. '=' → logprob: -16.8750057220459

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023246292024850845
    2. ' =' → logprob: -3.7732462882995605
    3. '<|end|>' → logprob: -14.773246765136719
    4. '=None' → logprob: -15.898246765136719
    5. '＝' → logprob: -16.14824676513672
    6. '=True' → logprob: -16.14824676513672
    7. '=}' → logprob: -17.64824676513672
    8. ')' → logprob: -18.52324676513672
    9. '=

' → logprob: -18.52324676513672
    10. ',' → logprob: -18.77324676513672

Token 780: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003181159496307373
    2. ' (' → logprob: -5.753180980682373
    3. '(ai' → logprob: -12.878181457519531
    4. '   ' → logprob: -14.503181457519531
    5. '(' → logprob: -15.878181457519531
    6. '           ' → logprob: -16.50318145751953
    7. 'a' → logprob: -17.12818145751953
    8. '(A' → logprob: -17.12818145751953
    9. ' ' → logprob: -17.25318145751953
    10. '               ' → logprob: -18.25318145751953

Token 781: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.375000953674316
    3. '	a' → logprob: -18.375
    4. '   ' → logprob: -18.5
    5. 'ai' → logprob: -19.0
    6. ')a' → logprob: -20.625
    7. 'azu' → logprob: -20.875
    8. '```' → logprob: -21.0
    9. 'aie' → logprob: -21.625
    10. 'а' → logprob: -21.625

Token 782: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.004108796361833811
    2. 'zu' → logprob: -5.754108905792236
    3. 'iz' → logprob: -7.504108905792236
    4. 'a' → logprob: -8.254108428955078
    5. 'ziu' → logprob: -10.004108428955078
    6. 'i' → logprob: -10.629108428955078
    7. 'z' → logprob: -11.129108428955078
    8. 'uzu' → logprob: -12.129108428955078
    9. '[' → logprob: -12.379108428955078
    10. '1' → logprob: -12.504108428955078

Token 783: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -5.860340752406046e-05
    2. 'qty' → logprob: -9.7500581741333
    3. 'a' → logprob: -15.7500581741333
    4. 'Qty' → logprob: -17.000059127807617
    5. '_q' → logprob: -17.375059127807617
    6. '_amt' → logprob: -17.625059127807617
    7. '```' → logprob: -18.625059127807617
    8. 'q' → logprob: -19.125059127807617
    9. '_' → logprob: -19.125059127807617
    10. '\' → logprob: -19.375059127807617

Token 784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ',
' → logprob: -10.750032424926758
    3. ',n' → logprob: -12.125032424926758
    4. ' ,' → logprob: -12.875032424926758
    5. ',user' → logprob: -15.375032424926758
    6. 'normal' → logprob: -15.375032424926758
    7. ',

' → logprob: -15.500032424926758
    8. ',",' → logprob: -15.625032424926758
    9. '<|end|>' → logprob: -15.625032424926758
    10. '‌,' → logprob: -15.875032424926758

Token 785: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0002613358374219388
    2. ' normal' → logprob: -8.250261306762695
    3. 'Normal' → logprob: -21.125261306762695
    4. '_normal' → logprob: -21.125261306762695
    5. '(normal' → logprob: -22.500261306762695
    6. 'norm' → logprob: -22.625261306762695
    7. '   ' → logprob: -24.500261306762695
    8. '.normal' → logprob: -24.875261306762695
    9. 'ormal' → logprob: -26.000261306762695
    10. '正常' → logprob: -26.125261306762695

Token 786: '_qty' (ID: 80847)
  Prédit: '_qty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -3.297462171758525e-05
    2. 'qty' → logprob: -10.375033378601074
    3. 'Qty' → logprob: -14.250033378601074
    4. 'normal' → logprob: -14.750033378601074
    5. '_max' → logprob: -14.875033378601074
    6. 'max' → logprob: -15.625033378601074
    7. '_normal' → logprob: -17.125032424926758
    8. ')' → logprob: -17.125032424926758
    9. '_amt' → logprob: -17.500032424926758
    10. '```' → logprob: -17.625032424926758

Token 787: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062017086893320084
    2. ')
' → logprob: -2.8120172023773193
    3. '               ' → logprob: -10.187017440795898
    4. '           ' → logprob: -11.687017440795898
    5. ')
' → logprob: -13.437017440795898
    6. ')

' → logprob: -14.312017440795898
    7. ' )' → logprob: -14.687017440795898
    8. ')return' → logprob: -15.062017440795898
    9. '                   ' → logprob: -15.437017440795898
    10. '       ' → logprob: -15.812017440795898

Token 788: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002209615893661976
    2. '           ' → logprob: -6.127209663391113
    3. 'break' → logprob: -11.252209663391113
    4. '			' → logprob: -12.752209663391113
    5. '       ' → logprob: -13.252209663391113
    6. 'return' → logprob: -13.502209663391113
    7. '		       ' → logprob: -13.627209663391113
    8. '	           ' → logprob: -13.752209663391113
    9. '                   ' → logprob: -13.877209663391113
    10. '              ' → logprob: -15.002209663391113

Token 789: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.012335403822362423
    2. '               ' → logprob: -4.512335300445557
    3. '           ' → logprob: -6.762335300445557
    4. ' break' → logprob: -9.012335777282715
    5. 'return' → logprob: -12.137335777282715
    6. '	break' → logprob: -12.887335777282715
    7. '       ' → logprob: -15.262335777282715
    8. '   ' → logprob: -16.0123348236084
    9. '                   ' → logprob: -17.0123348236084
    10. '			' → logprob: -17.6373348236084

Token 790: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09641138464212418
    2. '        
' → logprob: -2.4714114665985107
    3. '
' → logprob: -6.096411228179932
    4. '		
' → logprob: -6.346411228179932
    5. '	' → logprob: -6.971411228179932
    6. 'return' → logprob: -7.096411228179932
    7. '<|end|>' → logprob: -7.346411228179932
    8. '   ' → logprob: -7.971411228179932
    9. '    
' → logprob: -9.09641170501709
    10. '	return' → logprob: -9.47141170501709

Token 791: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007587694562971592
    2. 'return' → logprob: -5.257587909698486
    3. '        
' → logprob: -6.257587909698486
    4. '
' → logprob: -8.257587432861328
    5. '   ' → logprob: -9.882587432861328
    6. '	' → logprob: -10.007587432861328
    7. '	return' → logprob: -10.132587432861328
    8. ' return' → logprob: -11.132587432861328
    9. '		
' → logprob: -11.757587432861328
    10. '           ' → logprob: -12.757587432861328

Token 792: ' Since' (ID: 12265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5762114524841309
    2. '       ' → logprob: -0.8262114524841309
    3. ' return' → logprob: -8.326211929321289
    4. '        
' → logprob: -10.951211929321289
    5. '	return' → logprob: -12.326211929321289
    6. '   ' → logprob: -12.576211929321289
    7. '           ' → logprob: -13.701211929321289
    8. '
' → logprob: -14.076211929321289
    9. '	' → logprob: -14.451211929321289
    10. '```' → logprob: -14.951211929321289

Token 793: ' scanning' (ID: 53387)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.026371359825134277
    2. 'a' → logprob: -4.401371479034424
    3. ' we' → logprob: -4.401371479034424
    4. 'max' → logprob: -7.026371479034424
    5. ' we're' → logprob: -8.901371002197266
    6. 'this' → logprob: -9.151371002197266
    7. ' a' → logprob: -9.276371002197266
    8. 'maximize' → logprob: -9.901371002197266
    9. ' maximizing' → logprob: -10.276371002197266
    10. 'highest' → logprob: -10.276371002197266

Token 794: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.011066683568060398
    2. 'down' → logprob: -4.511066913604736
    3. ' from' → logprob: -11.011066436767578
    4. 'descending' → logprob: -13.761066436767578
    5. 'de' → logprob: -14.011066436767578
    6. 'a' → logprob: -15.386066436767578
    7. '```' → logprob: -16.261066436767578
    8. 'reverse' → logprob: -16.261066436767578
    9. 'back' → logprob: -16.511066436767578
    10. 'in' → logprob: -17.261066436767578

Token 795: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.395220011472702
    2. 'high' → logprob: -2.0202200412750244
    3. 'q' → logprob: -2.5202200412750244
    4. 'highest' → logprob: -2.7702200412750244
    5. 'maximum' → logprob: -3.7702200412750244
    6. 'largest' → logprob: -4.645219802856445
    7. 'the' → logprob: -5.270219802856445
    8. 'top' → logprob: -5.395219802856445
    9. 'higher' → logprob: -6.020219802856445
    10. ' high' → logprob: -6.145219802856445

Token 796: ' a' (ID: 261)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8685539960861206
    2. 'to' → logprob: -0.9935539960861206
    3. 'down' → logprob: -1.9935539960861206
    4. 'a' → logprob: -2.74355411529541
    5. ' down' → logprob: -5.86855411529541
    6. 'return' → logprob: -6.36855411529541
    7. '       ' → logprob: -6.99355411529541
    8. ' a' → logprob: -7.49355411529541
    9. ')' → logprob: -7.74355411529541
    10. ',' → logprob: -7.74355411529541

Token 797: 'izu' (ID: 75080)
  Prédit: 'izu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izu' → logprob: -0.00018375257786829025
    2. 'iz' → logprob: -9.500184059143066
    3. 'i' → logprob: -10.125184059143066
    4. '1' → logprob: -10.125184059143066
    5. '`' → logprob: -11.500184059143066
    6. '

' → logprob: -13.125184059143066
    7. '#' → logprob: -13.750184059143066
    8. 'n' → logprob: -13.750184059143066
    9. '[' → logprob: -13.875184059143066
    10. '"' → logprob: -13.875184059143066

Token 798: ' down' (ID: 1917)
  Prédit: '_qty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_qty' → logprob: -0.007770944386720657
    2. ' to' → logprob: -5.507771015167236
    3. 'quantity' → logprob: -7.007771015167236
    4. '_quantity' → logprob: -7.507771015167236
    5. '       ' → logprob: -7.507771015167236
    6. ',' → logprob: -7.757771015167236
    7. 'qty' → logprob: -8.007770538330078
    8. 'to' → logprob: -8.507770538330078
    9. ' down' → logprob: -8.507770538330078
    10. ' quantity' → logprob: -8.882770538330078

Token 799: ',' (ID: 11)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03888450935482979
    2. ',' → logprob: -3.663884401321411
    3. ' to' → logprob: -5.16388463973999
    4. 'wards' → logprob: -5.41388463973999
    5. '               ' → logprob: -7.03888463973999
    6. '           ' → logprob: -7.03888463973999
    7. '1' → logprob: -8.163884162902832
    8. '=' → logprob: -10.163884162902832
    9. ')' → logprob: -10.288884162902832
    10. '       ' → logprob: -10.413884162902832

Token 800: ' first' (ID: 1577)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.49747994542121887
    2. '#' → logprob: -1.4974799156188965
    3. ' we' → logprob: -3.2474799156188965
    4. '           ' → logprob: -3.4974799156188965
    5. '               ' → logprob: -3.6224799156188965
    6. 'break' → logprob: -3.7474799156188965
    7. 'best' → logprob: -4.1224799156188965
    8. 'return' → logprob: -4.3724799156188965
    9. 'the' → logprob: -5.6224799156188965
    10. ' best' → logprob: -5.9974799156188965

Token 801: ' found' (ID: 2491)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.7485553622245789
    2. 'valid' → logprob: -0.7485553622245789
    3. 'found' → logprob: -3.9985554218292236
    4. ' feasible' → logprob: -3.9985554218292236
    5. ' valid' → logprob: -4.6235551834106445
    6. 'one' → logprob: -6.6235551834106445
    7. 's' → logprob: -6.9985551834106445
    8. 'solution' → logprob: -6.9985551834106445
    9. 'best' → logprob: -7.4985551834106445
    10. ' viable' → logprob: -7.6235551834106445

Token 802: ' is' (ID: 382)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.0539075136184692
    2. '_answer' → logprob: -1.8039075136184692
    3. 'best' → logprob: -1.9289075136184692
    4. 'answer' → logprob: -2.5539073944091797
    5. ' is' → logprob: -3.0539073944091797
    6. ' solution' → logprob: -3.5539073944091797
    7. 'return' → logprob: -3.8039073944091797
    8. ' best' → logprob: -3.8039073944091797
    9. '_token' → logprob: -3.8039073944091797
    10. 'solution' → logprob: -4.05390739440918

Token 803: ' optimal' (ID: 24174)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.03268415853381157
    2. ' best' → logprob: -4.032684326171875
    3. 'optimal' → logprob: -4.782684326171875
    4. 'the' → logprob: -5.282684326171875
    5. ' optimal' → logprob: -7.032684326171875
    6. ' the' → logprob: -9.282684326171875
    7. 'answer' → logprob: -15.032684326171875
    8. '最佳' → logprob: -15.157684326171875
    9. '   ' → logprob: -15.532684326171875
    10. '	best' → logprob: -15.532684326171875

Token 804: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07261160016059875
    2. 'return' → logprob: -3.1976115703582764
    3. '        
' → logprob: -3.5726115703582764
    4. ' return' → logprob: -7.8226118087768555
    5. '
' → logprob: -8.322611808776855
    6. '   ' → logprob: -8.697611808776855
    7. '	return' → logprob: -9.447611808776855
    8. '    
' → logprob: -9.697611808776855
    9. '	' → logprob: -9.947611808776855
    10. '		
' → logprob: -10.447611808776855

Token 805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007183883571997285
    2. 'return' → logprob: -7.250718593597412
    3. '   ' → logprob: -11.875718116760254
    4. ' return' → logprob: -14.125718116760254
    5. '           ' → logprob: -14.875718116760254
    6. '```' → logprob: -15.500718116760254
    7. '        
' → logprob: -16.12571907043457
    8. '
' → logprob: -18.12571907043457
    9. '	' → logprob: -18.12571907043457
    10. '      ' → logprob: -18.25071907043457

Token 806: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012170211412012577
    2. 'if' → logprob: -6.751216888427734
    3. '       ' → logprob: -10.001216888427734
    4. ' return' → logprob: -13.501216888427734
    5. '```' → logprob: -17.251216888427734
    6. '   ' → logprob: -17.376216888427734
    7. '	return' → logprob: -19.126216888427734
    8. ' if' → logprob: -19.126216888427734
    9. '{return' → logprob: -19.251216888427734
    10. '        
' → logprob: -20.751216888427734

Token 807: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.029750484973192215
    2. ' best' → logprob: -3.5297505855560303
    3. '	best' → logprob: -17.52975082397461
    4. '       ' → logprob: -19.27975082397461
    5. '   ' → logprob: -19.90475082397461
    6. '(best' → logprob: -20.02975082397461
    7. '_best' → logprob: -21.15475082397461
    8. '.best' → logprob: -21.65475082397461
    9. 'None' → logprob: -22.52975082397461
    10. '    ' → logprob: -23.27975082397461

Token 808: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -1.1472419600977446e-06
    2. 'Answer' → logprob: -13.875000953674316
    3. 'answer' → logprob: -15.625000953674316
    4. 'ANSWER' → logprob: -17.375001907348633
    5. '_answers' → logprob: -18.500001907348633
    6. '_ans' → logprob: -18.500001907348633
    7. '__' → logprob: -19.250001907348633
    8. '\' → logprob: -19.500001907348633
    9. 's' → logprob: -20.000001907348633
    10. '```' → logprob: -20.250001907348633

Token 809: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 810: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: ' Input' (ID: 10090)
  Prédit: 'Simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Simple' → logprob: -0.7823147773742676
    2. 'Basic' → logprob: -1.2823147773742676
    3. 'Br' → logprob: -2.0323147773742676
    4. 'Na' → logprob: -3.1573147773742676
    5. ' Basic' → logprob: -4.032314777374268
    6. 'Gre' → logprob: -4.157314777374268
    7. ' Br' → logprob: -4.282314777374268
    8. ' Simple' → logprob: -4.532314777374268
    9. 'Me' → logprob: -4.782314777374268
    10. 'Random' → logprob: -5.157314777374268

Token 812: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.6324487328529358
    2. 'Handler' → logprob: -1.507448673248291
    3. 'Parser' → logprob: -1.757448673248291
    4. 'Data' → logprob: -3.382448673248291
    5. 'Processor' → logprob: -4.007448673248291
    6. 'Tokenizer' → logprob: -5.257448673248291
    7. 'Stream' → logprob: -5.382448673248291
    8. 'Generator' → logprob: -6.007448673248291
    9. 'Provider' → logprob: -6.382448673248291
    10. 'Adapter' → logprob: -6.632448673248291

Token 813: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006728991866111755
    2. ':
' → logprob: -5.0067291259765625
    3. '():' → logprob: -12.631729125976562
    4. '<|end|>' → logprob: -13.381729125976562
    5. '(' → logprob: -13.631729125976562
    6. '(Parser' → logprob: -13.756729125976562
    7. '(object' → logprob: -14.131729125976562
    8. '():
' → logprob: -14.131729125976562
    9. ' :' → logprob: -14.131729125976562
    10. ':def' → logprob: -14.256729125976562

Token 814: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00039349604048766196
    2. 'def' → logprob: -8.375393867492676
    3. ':' → logprob: -9.000393867492676
    4. ' def' → logprob: -10.500393867492676
    5. '```' → logprob: -12.750393867492676
    6. '   ' → logprob: -13.125393867492676
    7. '	def' → logprob: -13.750393867492676
    8. 'classmethod' → logprob: -14.000393867492676
    9. ' indentation' → logprob: -14.375393867492676
    10. 'Indented' → logprob: -14.500393867492676

Token 815: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.18764391541481018
    2. 'def' (adapté à ' def') → logprob: -1.9376438856124878
    3. '   ' → logprob: -3.6876440048217773
    4. ' @' → logprob: -6.687644004821777
    5. ' def' → logprob: -7.187644004821777
    6. 'staticmethod' → logprob: -11.312644004821777
    7. 'class' → logprob: -13.687644004821777
    8. '```' → logprob: -14.937644004821777
    9. 'import' → logprob: -15.937644004821777
    10. ' ' → logprob: -16.31264305114746

Token 816: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.005876059643924236
    2. 'def' → logprob: -5.255876064300537
    3. 'static' → logprob: -7.880876064300537
    4. 'init' → logprob: -9.005875587463379
    5. 'nit' → logprob: -9.880875587463379
    6. '_static' → logprob: -9.880875587463379
    7. 'classmethod' → logprob: -11.505875587463379
    8. ' static' → logprob: -11.630875587463379
    9. ' def' → logprob: -11.755875587463379
    10. 'int' → logprob: -12.130875587463379

Token 817: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.000145137935760431
    2. 'staticmethod' → logprob: -9.000144958496094
    3. 'static' → logprob: -11.000144958496094
    4. 'new' → logprob: -13.000144958496094
    5. 'iter' → logprob: -13.500144958496094
    6. 'classmethod' → logprob: -15.000144958496094
    7. 'int' → logprob: -15.625144958496094
    8. ' init' → logprob: -15.750144958496094
    9. 'it' → logprob: -15.875144958496094
    10. 'parse' → logprob: -16.375144958496094

Token 818: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013154871703591198
    2. '__(' → logprob: -9.750131607055664
    3. '(' → logprob: -10.000131607055664
    4. 'self' → logprob: -10.875131607055664
    5. ' (' → logprob: -12.375131607055664
    6. '=self' → logprob: -13.125131607055664
    7. '   ' → logprob: -13.625131607055664
    8. ' self' → logprob: -14.625131607055664
    9. '(
' → logprob: -15.500131607055664
    10. ')(' → logprob: -15.625131607055664

Token 819: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006133131100796163
    2. ')' → logprob: -7.500613212585449
    3. '):
' → logprob: -10.37561321258545
    4. ' self' → logprob: -11.62561321258545
    5. '):' → logprob: -11.62561321258545
    6. '
' → logprob: -12.62561321258545
    7. '   ' → logprob: -12.75061321258545
    8. '	self' → logprob: -12.87561321258545
    9. '(self' → logprob: -13.50061321258545
    10. '       ' → logprob: -15.00061321258545

Token 820: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9150788187980652
    2. '):
' → logprob: -1.29007887840271
    3. ',' → logprob: -1.54007887840271
    4. '):' → logprob: -2.29007887840271
    5. '(self' → logprob: -5.540078639984131
    6. '   ' → logprob: -5.665078639984131
    7. ' self' → logprob: -7.665078639984131
    8. ')' → logprob: -8.165079116821289
    9. ',self' → logprob: -8.415079116821289
    10. '       ' → logprob: -9.040079116821289

Token 821: ' source' (ID: 4256)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.33903175592422485
    2. 'lines' → logprob: -1.46403169631958
    3. 'self' → logprob: -3.21403169631958
    4. 'raw' → logprob: -5.08903169631958
    5. ' lines' → logprob: -5.46403169631958
    6. ' input' → logprob: -6.33903169631958
    7. 'text' → logprob: -6.96403169631958
    8. ')' → logprob: -7.46403169631958
    9. 'source' → logprob: -7.46403169631958
    10. 'stream' → logprob: -7.46403169631958

Token 822: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4679654538631439
    2. '):' → logprob: -1.2179654836654663
    3. '=None' → logprob: -3.4679653644561768
    4. '):
' → logprob: -3.4679653644561768
    5. '=' → logprob: -4.717965602874756
    6. ')' → logprob: -5.092965602874756
    7. ' :' → logprob: -8.217965126037598
    8. ' ):' → logprob: -10.342965126037598
    9. ':str' → logprob: -10.592965126037598
    10. '):
' → logprob: -10.967965126037598

Token 823: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.0019031742122024298
    2. 'str' → logprob: -6.626903057098389
    3. ' Iterator' → logprob: -8.376903533935547
    4. 'iter' → logprob: -8.501903533935547
    5. 'Iterable' → logprob: -9.376903533935547
    6. 'Optional' → logprob: -11.376903533935547
    7. '	Iterator' → logprob: -11.376903533935547
    8. 'Callable' → logprob: -11.501903533935547
    9. ')' → logprob: -11.876903533935547
    10. 'iterator' → logprob: -11.876903533935547

Token 824: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.054500666621607e-06
    2. 'str' → logprob: -12.75000286102295
    3. '=str' → logprob: -17.000003814697266
    4. '):
' → logprob: -17.875003814697266
    5. '[int' → logprob: -17.875003814697266
    6. '	str' → logprob: -18.125003814697266
    7. ')' → logprob: -18.250003814697266
    8. '```' → logprob: -18.375003814697266
    9. '):' → logprob: -19.875003814697266
    10. ':str' → logprob: -20.000003814697266

Token 825: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.0027884691953659058
    2. ']):' → logprob: -6.127788543701172
    3. '])' → logprob: -8.252788543701172
    4. ']' → logprob: -8.502788543701172
    5. '):
' → logprob: -9.252788543701172
    6. '[str' → logprob: -11.002788543701172
    7. '   ' → logprob: -11.002788543701172
    8. '']):
' → logprob: -12.127788543701172
    9. ')' → logprob: -13.752788543701172
    10. '       ' → logprob: -13.877788543701172

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001007919549010694
    2. 'self' → logprob: -7.251008033752441
    3. ' self' → logprob: -8.501008033752441
    4. '   ' → logprob: -9.751008033752441
    5. 'def' → logprob: -11.001008033752441
    6. '<|end|>' → logprob: -12.376008033752441
    7. '```' → logprob: -12.876008033752441
    8. '(self' → logprob: -13.126008033752441
    9. ',' → logprob: -13.376008033752441
    10. ' ' → logprob: -13.626008033752441

Token 827: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004648696631193161
    2. '       ' → logprob: -8.25046443939209
    3. ' self' → logprob: -8.50046443939209
    4. '	self' → logprob: -16.000465393066406
    5. '   ' → logprob: -16.750465393066406
    6. '(self' → logprob: -18.750465393066406
    7. ' ' → logprob: -20.000465393066406
    8. '	' → logprob: -20.250465393066406
    9. 'def' → logprob: -20.250465393066406
    10. 'import' → logprob: -20.750465393066406

Token 828: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0033914719242602587
    2. '.lines' → logprob: -5.753391265869141
    3. '._' → logprob: -9.00339126586914
    4. '.tokens' → logprob: -9.62839126586914
    5. '.iterator' → logprob: -11.75339126586914
    6. '.buffer' → logprob: -11.87839126586914
    7. 'source' → logprob: -12.25339126586914
    8. '.' → logprob: -12.87839126586914
    9. '.next' → logprob: -14.37839126586914
    10. '.input' → logprob: -14.37839126586914

Token 829: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023598328698426485
    2. ' =' → logprob: -6.377359867095947
    3. '   ' → logprob: -8.377359390258789
    4. '=self' → logprob: -8.627359390258789
    5. 'self' → logprob: -10.002359390258789
    6. '.readline' → logprob: -10.127359390258789
    7. '.' → logprob: -10.252359390258789
    8. '=None' → logprob: -10.752359390258789
    9. '       ' → logprob: -10.877359390258789
    10. ':' → logprob: -11.127359390258789

Token 830: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.00018613664724398404
    2. '(source' → logprob: -8.6251859664917
    3. 'iter' → logprob: -12.0001859664917
    4. ' source' → logprob: -14.8751859664917
    5. '	source' → logprob: -18.000186920166016
    6. '[source' → logprob: -18.125186920166016
    7. '(iter' → logprob: -18.500186920166016
    8. '(' → logprob: -18.750186920166016
    9. 'self' → logprob: -19.875186920166016
    10. '_source' → logprob: -19.875186920166016

Token 831: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04565328359603882
    2. '
' → logprob: -3.1706533432006836
    3. '    
' → logprob: -6.545653343200684
    4. 'def' → logprob: -6.920653343200684
    5. '        
' → logprob: -9.295653343200684
    6. ' def' → logprob: -9.920653343200684
    7. '       ' → logprob: -10.420653343200684
    8. '	def' → logprob: -11.045653343200684
    9. '<|end|>' → logprob: -11.295653343200684
    10. 'Next' → logprob: -12.670653343200684

Token 832: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005576772149652243
    2. '   ' → logprob: -5.5055766105651855
    3. ' def' → logprob: -6.5055766105651855
    4. '
' → logprob: -13.630577087402344
    5. '	def' → logprob: -14.130577087402344
    6. '_def' → logprob: -17.630577087402344
    7. ' ' → logprob: -17.755577087402344
    8. '  ' → logprob: -18.005577087402344
    9. 'import' → logprob: -18.755577087402344
    10. 'self' → logprob: -18.755577087402344

Token 833: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.0
    4. '
' → logprob: -19.0
    5. 'next' → logprob: -20.0
    6. 'line' → logprob: -20.375
    7. '_def' → logprob: -20.375
    8. '	def' → logprob: -20.875
    9. '_next' → logprob: -21.25
    10. '    
' → logprob: -21.75

Token 834: ' parse' (ID: 8420)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006467910134233534
    2. 'parse' → logprob: -7.750646591186523
    3. 'read' → logprob: -9.250646591186523
    4. '_next' → logprob: -9.500646591186523
    5. 'next' → logprob: -10.750646591186523
    6. ' __' → logprob: -11.375646591186523
    7. '_parse' → logprob: -11.750646591186523
    8. '_read' → logprob: -12.500646591186523
    9. '_' → logprob: -15.625646591186523
    10. '___' → logprob: -15.750646591186523

Token 835: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004622253589332104
    2. '_line' → logprob: -5.504622459411621
    3. 'self' → logprob: -8.129622459411621
    4. 'line' → logprob: -8.879622459411621
    5. '_next' → logprob: -9.754622459411621
    6. '(' → logprob: -10.754622459411621
    7. '()' → logprob: -11.629622459411621
    8. 'next' → logprob: -11.754622459411621
    9. ' line' → logprob: -12.629622459411621
    10. 'def' → logprob: -13.129622459411621

Token 836: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2847543954849243
    2. 'self' → logprob: -1.6597543954849243
    3. '_line' → logprob: -3.4097542762756348
    4. '):
' → logprob: -4.284754276275635
    5. '):' → logprob: -5.409754276275635
    6. 'line' → logprob: -5.659754276275635
    7. ')->' → logprob: -7.034754276275635
    8. ',' → logprob: -7.284754276275635
    9. '(self' → logprob: -7.534754276275635
    10. '   ' → logprob: -8.159754753112793

Token 837: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005037117283791304
    2. 'self' → logprob: -5.630037307739258
    3. '->' → logprob: -7.005037307739258
    4. '_line' → logprob: -8.130037307739258
    5. ' ->' → logprob: -9.130037307739258
    6. '(' → logprob: -10.755037307739258
    7. '_next' → logprob: -11.130037307739258
    8. ' line' → logprob: -11.130037307739258
    9. 'line' → logprob: -11.380037307739258
    10. ' self' → logprob: -11.380037307739258

Token 838: ' Iterator' (ID: 41994)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.007694405969232321
    2. 'Tuple' → logprob: -5.382694244384766
    3. 'int' → logprob: -6.007694244384766
    4. ' Optional' → logprob: -8.007694244384766
    5. 'Iterator' → logprob: -8.257694244384766
    6. 'None' → logprob: -11.757694244384766
    7. 'tuple' → logprob: -12.382694244384766
    8. 'List' → logprob: -13.007694244384766
    9. 'optional' → logprob: -14.007694244384766
    10. ' Tuple' → logprob: -14.257694244384766

Token 839: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004751457367092371
    2. '[int' → logprob: -6.254751682281494
    3. 'Me' → logprob: -6.754751682281494
    4. '[
' → logprob: -7.129751682281494
    5. '[str' → logprob: -8.254751205444336
    6. '(Me' → logprob: -8.629751205444336
    7. '[List' → logprob: -9.004751205444336
    8. ':
' → logprob: -9.254751205444336
    9. '[(' → logprob: -10.004751205444336
    10. '   ' → logprob: -10.129751205444336

Token 840: 'Me' (ID: 5507)
  Prédit: 'Me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Me' → logprob: -0.18044286966323853
    2. 'Tuple' → logprob: -1.8054428100585938
    3. 'tuple' → logprob: -7.555442810058594
    4. 'Optional' → logprob: -9.180442810058594
    5. ' Meat' → logprob: -10.805442810058594
    6. 'Tu' → logprob: -11.555442810058594
    7. 'Meal' → logprob: -11.680442810058594
    8. 'me' → logprob: -11.805442810058594
    9. 'str' → logprob: -11.805442810058594
    10. 'int' → logprob: -12.180442810058594

Token 841: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -16.0
    3. 'At' → logprob: -16.375
    4. 'ат' → logprob: -17.25
    5. '
' → logprob: -17.875
    6. '(at' → logprob: -18.25
    7. ' at' → logprob: -18.375
    8. '	at' → logprob: -18.75
    9. '``' → logprob: -18.875
    10. '```' → logprob: -19.0

Token 842: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -4.320199877838604e-07
    2. '_purchase' → logprob: -15.125
    3. 'Purch' → logprob: -15.875
    4. ' Purchase' → logprob: -17.5
    5. 'urchase' → logprob: -17.875
    6. 'purchase' → logprob: -20.0
    7. 'Problem' → logprob: -20.625
    8. 'Purchased' → logprob: -21.0
    9. '```' → logprob: -21.25
    10. '_PUR' → logprob: -21.5

Token 843: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -1.9361264946837764e-07
    2. 'Purchase' → logprob: -17.0
    3. '_problem' → logprob: -17.75
    4. 'Proble' → logprob: -18.125
    5. 'Problems' → logprob: -18.25
    6. 'problem' → logprob: -18.625
    7. 'Pro' → logprob: -20.375
    8. ' Problem' → logprob: -20.375
    9. 'Solution' → logprob: -20.625
    10. '```' → logprob: -21.0

Token 844: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.04480494558811188
    2. ']:' → logprob: -3.1698050498962402
    3. '():
' → logprob: -6.91980504989624
    4. ']:
' → logprob: -8.044804573059082
    5. '):
' → logprob: -8.544804573059082
    6. '[' → logprob: -9.169804573059082
    7. ']' → logprob: -9.669804573059082
    8. '():' → logprob: -10.044804573059082
    9. ':
' → logprob: -10.669804573059082
    10. ']:

' → logprob: -11.294804573059082

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.47495681833243e-05
    2. '```' → logprob: -10.875024795532227
    3. '   ' → logprob: -13.000024795532227
    4. '	' → logprob: -14.250024795532227
    5. '           ' → logprob: -14.375024795532227
    6. ' line' → logprob: -14.750024795532227
    7. 'token' → logprob: -15.375024795532227
    8. ' for' → logprob: -15.375024795532227
    9. ' while' → logprob: -15.750024795532227
    10. ',' → logprob: -15.750024795532227

Token 846: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41207244992256165
    2. 'for' (adapté à ' for') → logprob: -1.1620724201202393
    3. ' for' → logprob: -4.037072658538818
    4. '```' → logprob: -5.787072658538818
    5. 'while' → logprob: -6.287072658538818
    6. 'line' → logprob: -6.412072658538818
    7. '   ' → logprob: -7.537072658538818
    8. 'try' → logprob: -10.16207218170166
    9. ' line' → logprob: -10.41207218170166
    10. '``' → logprob: -10.91207218170166

Token 847: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00033546582562848926
    2. ' line' → logprob: -8.000335693359375
    3. '_line' → logprob: -18.250335693359375
    4. 'raw' → logprob: -19.250335693359375
    5. '	line' → logprob: -19.375335693359375
    6. 'lines' → logprob: -21.000335693359375
    7. '(line' → logprob: -21.750335693359375
    8. ' raw' → logprob: -24.250335693359375
    9. '=line' → logprob: -24.250335693359375
    10. '

' → logprob: -24.500335693359375

Token 848: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001712901284918189
    2. 'in' → logprob: -6.376712799072266
    3. 'line' → logprob: -12.876712799072266
    4. ' ' → logprob: -13.001712799072266
    5. '	in' → logprob: -13.126712799072266
    6. '[line' → logprob: -14.626712799072266
    7. ' =' → logprob: -14.751712799072266
    8. '        ' → logprob: -15.126712799072266
    9. 's' → logprob: -15.251712799072266
    10. '=' → logprob: -15.501712799072266

Token 849: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. ' self' → logprob: -14.250000953674316
    3. '(self' → logprob: -19.625
    4. '	self' → logprob: -20.75
    5. '
' → logprob: -21.5
    6. '[self' → logprob: -22.0
    7. 'source' → logprob: -22.5
    8. '=self' → logprob: -22.625
    9. 'line' → logprob: -23.625
    10. '

' → logprob: -23.75

Token 850: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0021885682363063097
    2. 'source' → logprob: -6.127188682556152
    3. '	source' → logprob: -13.877188682556152
    4. ':' → logprob: -14.002188682556152
    5. '.' → logprob: -14.627188682556152
    6. ':
' → logprob: -15.002188682556152
    7. 's' → logprob: -15.252188682556152
    8. ' .' → logprob: -15.502188682556152
    9. ' source' → logprob: -15.752188682556152
    10. '_source' → logprob: -17.002187728881836

Token 851: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45860108733177185
    2. ':
' → logprob: -1.0836011171340942
    3. '.strip' → logprob: -4.333600997924805
    4. '():
' → logprob: -4.958600997924805
    5. '.rstrip' → logprob: -5.833600997924805
    6. ' in' → logprob: -6.833600997924805
    7. '.' → logprob: -7.083600997924805
    8. '       ' → logprob: -7.583600997924805
    9. '<|end|>' → logprob: -7.583600997924805
    10. ',' → logprob: -7.583600997924805

Token 852: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.23917081207037e-05
    2. ' if' → logprob: -11.750041961669922
    3. '	       ' → logprob: -11.875041961669922
    4. 'tokens' → logprob: -12.625041961669922
    5. '```' → logprob: -12.875041961669922
    6. '       ' → logprob: -12.875041961669922
    7. '            
' → logprob: -13.000041961669922
    8. '.strip' → logprob: -13.125041961669922
    9. ' line' → logprob: -13.250041961669922
    10. 'rstrip' → logprob: -13.250041961669922

Token 853: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.14185652136802673
    2. '           ' → logprob: -2.8918564319610596
    3. ' line' → logprob: -3.2668564319610596
    4. 'if' → logprob: -3.3918564319610596
    5. ' if' → logprob: -6.266856670379639
    6. 'parts' → logprob: -6.516856670379639
    7. ' stripped' → logprob: -7.266856670379639
    8. 'tokens' → logprob: -8.26685619354248
    9. 'strip' → logprob: -8.64185619354248
    10. ' parts' → logprob: -9.26685619354248

Token 854: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.579051673412323
    2. '=' → logprob: -0.829051673412323
    3. '=line' → logprob: -5.829051494598389
    4. '.strip' → logprob: -8.829051971435547
    5. '_strip' → logprob: -11.829051971435547
    6. '.rstrip' → logprob: -12.579051971435547
    7. '=str' → logprob: -12.579051971435547
    8. 'strip' → logprob: -13.454051971435547
    9. '_tokens' → logprob: -14.079051971435547
    10. '.' → logprob: -14.204051971435547

Token 855: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00020354038861114532
    2. ' line' → logprob: -8.500203132629395
    3. '=line' → logprob: -19.62520408630371
    4. '(line' → logprob: -19.75020408630371
    5. '	line' → logprob: -21.37520408630371
    6. '#line' → logprob: -21.62520408630371
    7. '[line' → logprob: -23.00020408630371
    8. 'lin' → logprob: -23.25020408630371
    9. 'Line' → logprob: -23.37520408630371
    10. 'lines' → logprob: -24.37520408630371

Token 856: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00043591417488642037
    2. '.rstrip' → logprob: -8.000435829162598
    3. '.' → logprob: -9.250435829162598
    4. 'strip' → logprob: -12.375435829162598
    5. '.split' → logprob: -17.125436782836914
    6. '.str' → logprob: -17.125436782836914
    7. ' .' → logprob: -17.500436782836914
    8. 'rstrip' → logprob: -17.500436782836914
    9. '.trim' → logprob: -17.750436782836914
    10. '.readline' → logprob: -17.750436782836914

Token 857: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0093437684699893
    2. 'if' → logprob: -4.88434362411499
    3. ' if' → logprob: -7.13434362411499
    4. ',' → logprob: -8.384344100952148
    5. ':
' → logprob: -8.759344100952148
    6. '<|end|>' → logprob: -8.884344100952148
    7. '            
' → logprob: -9.009344100952148
    8. '<|end|>' → logprob: -9.634344100952148
    9. '               ' → logprob: -10.134344100952148
    10. ';if' → logprob: -10.759344100952148

Token 858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031097445636987686
    2. 'if' → logprob: -3.656097412109375
    3. ' if' → logprob: -5.406097412109375
    4. ',' → logprob: -9.781097412109375
    5. '	       ' → logprob: -9.906097412109375
    6. '<|end|>' → logprob: -9.906097412109375
    7. '       ' → logprob: -10.031097412109375
    8. 'tokens' → logprob: -10.906097412109375
    9. '            
' → logprob: -11.406097412109375
    10. 'token' → logprob: -11.531097412109375

Token 859: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.3451433409936726e-05
    2. ' if' → logprob: -11.000033378601074
    3. '           ' → logprob: -11.000033378601074
    4. '            
' → logprob: -17.62503433227539
    5. 'If' → logprob: -18.75003433227539
    6. ';if' → logprob: -19.00003433227539
    7. '```' → logprob: -20.00003433227539
    8. '       ' → logprob: -20.00003433227539
    9. '               ' → logprob: -20.12503433227539
    10. '	if' → logprob: -20.12503433227539

Token 860: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47410136461257935
    2. ' not' → logprob: -0.9741013646125793
    3. 'line' → logprob: -10.724101066589355
    4. ' line' → logprob: -12.974101066589355
    5. '(not' → logprob: -17.849102020263672
    6. '```' → logprob: -18.099102020263672
    7. '!' → logprob: -18.474102020263672
    8. 'len' → logprob: -18.724102020263672
    9. '
' → logprob: -18.849102020263672
    10. ':not' → logprob: -19.099102020263672

Token 861: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.055084142833948135
    2. ' ==' → logprob: -2.930084228515625
    3. 'and' → logprob: -9.430084228515625
    4. ':' → logprob: -9.930084228515625
    5. '.startswith' → logprob: -10.555084228515625
    6. '=="' → logprob: -11.555084228515625
    7. '=' → logprob: -11.930084228515625
    8. '()==' → logprob: -12.055084228515625
    9. '==
' → logprob: -12.055084228515625
    10. '===' → logprob: -12.305084228515625

Token 862: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.7090259194374084
    2. '"":' → logprob: -1.2090258598327637
    3. ''' → logprob: -1.9590258598327637
    4. '""' → logprob: -2.7090258598327637
    5. '"' → logprob: -6.334025859832764
    6. ''end' → logprob: -12.834026336669922
    7. ''ex' → logprob: -12.959026336669922
    8. ''e' → logprob: -13.084026336669922
    9. ''',' → logprob: -13.709026336669922
    10. ''or' → logprob: -14.084026336669922

Token 863: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.15700623393058777
    2. ''' → logprob: -2.28200626373291
    3. '':
' → logprob: -3.40700626373291
    4. '0' → logprob: -5.03200626373291
    5. '''' → logprob: -5.90700626373291
    6. ''''' → logprob: -8.53200626373291
    7. 'end' → logprob: -8.78200626373291
    8. '':
' → logprob: -9.15700626373291
    9. '```' → logprob: -9.40700626373291
    10. 'END' → logprob: -10.03200626373291

Token 864: '':
' (ID: 7669)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4362011253833771
    2. '0' → logprob: -1.0612010955810547
    3. '':' → logprob: -5.436201095581055
    4. '':
' → logprob: -6.061201095581055
    5. ''' → logprob: -7.311201095581055
    6. '':
' → logprob: -9.436201095581055
    7. '<|end|>' → logprob: -11.561201095581055
    8. '<|end|>' → logprob: -12.186201095581055
    9. ''):
' → logprob: -12.436201095581055
    10. '   ' → logprob: -13.061201095581055

Token 865: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06826790422201157
    2. '           ' → logprob: -2.943267822265625
    3. ':' → logprob: -4.568267822265625
    4. ':
' → logprob: -6.068267822265625
    5. '<|end|>' → logprob: -8.943267822265625
    6. ' or' → logprob: -9.193267822265625
    7. '	           ' → logprob: -9.318267822265625
    8. '              ' → logprob: -10.193267822265625
    9. ':return' → logprob: -10.193267822265625
    10. ' break' → logprob: -10.568267822265625

Token 866: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04727153852581978
    2. ' break' → logprob: -3.547271490097046
    3. 'return' → logprob: -4.547271728515625
    4. '               ' → logprob: -5.047271728515625
    5. '           ' → logprob: -8.297271728515625
    6. ' return' → logprob: -9.422271728515625
    7. '	break' → logprob: -11.672271728515625
    8. '                   ' → logprob: -12.047271728515625
    9. '```' → logprob: -14.672271728515625
    10. '_break' → logprob: -15.422271728515625

Token 867: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021431241184473038
    2. '            
' → logprob: -6.252142906188965
    3. '
' → logprob: -9.502142906188965
    4. 'yield' → logprob: -10.502142906188965
    5. '               ' → logprob: -10.877142906188965
    6. '```' → logprob: -11.002142906188965
    7. '<|end|>' → logprob: -11.377142906188965
    8. ' if' → logprob: -11.502142906188965
    9. '           
' → logprob: -11.877142906188965
    10. '       ' → logprob: -12.002142906188965

Token 868: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004732102679554373
    2. 'tokens' → logprob: -8.000473022460938
    3. '            
' → logprob: -9.875473022460938
    4. '       ' → logprob: -10.750473022460938
    5. ' tokens' → logprob: -11.125473022460938
    6. '```' → logprob: -11.250473022460938
    7. 'token' → logprob: -11.375473022460938
    8. 'yield' → logprob: -11.875473022460938
    9. '               ' → logprob: -12.500473022460938
    10. '          ' → logprob: -12.750473022460938

Token 869: ' if' (ID: 538)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.12825053930282593
    2. 'values' → logprob: -2.3782505989074707
    3. 'params' → logprob: -4.128250598907471
    4. 'if' (adapté à ' if') → logprob: -4.628250598907471
    5. 'tokens' → logprob: -7.128250598907471
    6. 'fields' → logprob: -7.878250598907471
    7. 'vals' → logprob: -8.503250122070312
    8. '           ' → logprob: -8.503250122070312
    9. ' parts' → logprob: -9.503250122070312
    10. 'q' → logprob: -10.128250122070312

Token 870: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7031131386756897
    2. 'not' → logprob: -0.7031131386756897
    3. 'line' → logprob: -4.703113079071045
    4. ' line' → logprob: -7.078113079071045
    5. 'len' → logprob: -12.328113555908203
    6. ' len' → logprob: -14.703113555908203
    7. ' ' → logprob: -15.078113555908203
    8. '```' → logprob: -15.203113555908203
    9. '	not' → logprob: -15.828113555908203
    10. '   ' → logprob: -16.078113555908203

Token 871: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006715370807796717
    2. ' line' → logprob: -5.006715297698975
    3. '	line' → logprob: -19.131715774536133
    4. '
' → logprob: -19.881715774536133
    5. ' ' → logprob: -22.006715774536133
    6. 'len' → logprob: -22.131715774536133
    7. 'Line' → logprob: -22.131715774536133
    8. '#line' → logprob: -22.506715774536133
    9. '(line' → logprob: -23.506715774536133
    10. '   ' → logprob: -23.506715774536133

Token 872: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9629888534545898
    2. ':
' → logprob: -1.3379888534545898
    3. '.' → logprob: -1.7129888534545898
    4. '.strip' → logprob: -1.9629888534545898
    5. '.startswith' → logprob: -3.71298885345459
    6. ' or' → logprob: -5.08798885345459
    7. '<|end|>' → logprob: -6.96298885345459
    8. '=' → logprob: -7.21298885345459
    9. '.endswith' → logprob: -7.33798885345459
    10. '==' → logprob: -7.71298885345459

Token 873: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008247529622167349
    2. '           ' → logprob: -7.750824928283691
    3. ' continue' → logprob: -8.125824928283691
    4. 'continue' → logprob: -10.250824928283691
    5. ':' → logprob: -10.375824928283691
    6. '	           ' → logprob: -11.875824928283691
    7. '       ' → logprob: -12.500824928283691
    8. '   ' → logprob: -12.750824928283691
    9. '                   ' → logprob: -12.750824928283691
    10. '<|end|>' → logprob: -12.750824928283691

Token 874: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.030467649921774864
    2. ' continue' → logprob: -3.5304677486419678
    3. '               ' → logprob: -7.280467510223389
    4. '           ' → logprob: -10.655467987060547
    5. '                   ' → logprob: -13.030467987060547
    6. '	continue' → logprob: -13.530467987060547
    7. '   ' → logprob: -14.530467987060547
    8. '_continue' → logprob: -15.405467987060547
    9. '```' → logprob: -15.655467987060547
    10. 'contin' → logprob: -16.405467987060547

Token 875: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00460729980841279
    2. 'tokens' → logprob: -5.754607200622559
    3. '            
' → logprob: -7.004607200622559
    4. ' tokens' → logprob: -8.254607200622559
    5. 'token' → logprob: -9.754607200622559
    6. '       ' → logprob: -10.129607200622559
    7. '_tokens' → logprob: -10.254607200622559
    8. ' parts' → logprob: -10.254607200622559
    9. 'yield' → logprob: -10.504607200622559
    10. '```' → logprob: -10.754607200622559

Token 876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021343177650123835
    2. 'parts' → logprob: -6.627134323120117
    3. 'tokens' → logprob: -8.002134323120117
    4. ' parts' → logprob: -8.377134323120117
    5. 'params' → logprob: -9.377134323120117
    6. '       ' → logprob: -9.377134323120117
    7. 'yield' → logprob: -10.002134323120117
    8. 'fields' → logprob: -11.377134323120117
    9. '            
' → logprob: -12.002134323120117
    10. ' tokens' → logprob: -12.127134323120117

Token 877: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.02991016022861004
    2. 'values' → logprob: -3.779910087585449
    3. 'params' → logprob: -5.779910087585449
    4. 'tokens' → logprob: -6.404910087585449
    5. 'fields' → logprob: -7.279910087585449
    6. ' parts' → logprob: -7.654910087585449
    7. '           ' → logprob: -8.02991008758545
    8. 'q' → logprob: -9.15491008758545
    9. 'nums' → logprob: -9.15491008758545
    10. 'numbers' → logprob: -9.27991008758545

Token 878: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889353483915329
    2. ' =' → logprob: -2.5788934230804443
    3. '=line' → logprob: -12.703893661499023
    4. '＝' → logprob: -15.078893661499023
    5. '_tokens' → logprob: -15.453893661499023
    6. 'tokens' → logprob: -15.703893661499023
    7. '.=' → logprob: -17.703893661499023
    8. '[' → logprob: -17.828893661499023
    9. '=[]' → logprob: -17.953893661499023
    10. 'token' → logprob: -18.203893661499023

Token 879: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0003434488025959581
    2. ' line' → logprob: -8.000343322753906
    3. 'list' → logprob: -11.750343322753906
    4. '[line' → logprob: -16.500343322753906
    5. ' list' → logprob: -19.750343322753906
    6. '(line' → logprob: -21.000343322753906
    7. '	line' → logprob: -21.625343322753906
    8. '[' → logprob: -22.875343322753906
    9. 'Line' → logprob: -23.375343322753906
    10. '=line' → logprob: -23.625343322753906

Token 880: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004647504829335958
    2. ' =' → logprob: -8.25046443939209
    3. '=line' → logprob: -8.50046443939209
    4. '.=' → logprob: -16.500465393066406
    5. '＝' → logprob: -17.625465393066406
    6. '.' → logprob: -18.250465393066406
    7. '.split' → logprob: -18.625465393066406
    8. '=
' → logprob: -18.750465393066406
    9. '[line' → logprob: -20.250465393066406
    10. '+=' → logprob: -21.375465393066406

Token 881: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019702657591551542
    2. '('' → logprob: -6.251970291137695
    3. '(' → logprob: -10.501970291137695
    4. '()
' → logprob: -12.001970291137695
    5. '())' → logprob: -12.751970291137695
    6. '()]' → logprob: -13.251970291137695
    7. '("' → logprob: -13.501970291137695
    8. '();' → logprob: -15.001970291137695
    9. '(None' → logprob: -15.126970291137695
    10. '()

' → logprob: -15.626970291137695

Token 882: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03902267664670944
    2. 'if' → logprob: -3.28902268409729
    3. 'yield' → logprob: -7.289022445678711
    4. ' if' → logprob: -8.289022445678711
    5. '```' → logprob: -10.289022445678711
    6. '            
' → logprob: -12.539022445678711
    7. '       ' → logprob: -13.164022445678711
    8. 'tokens' → logprob: -13.289022445678711
    9. '
' → logprob: -13.539022445678711
    10. ' yield' → logprob: -14.039022445678711

Token 883: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008725428953766823
    2. 'q' → logprob: -5.758725643157959
    3. 'yield' → logprob: -5.758725643157959
    4. '           ' → logprob: -6.258725643157959
    5. ' if' → logprob: -8.0087251663208
    6. '       ' → logprob: -9.3837251663208
    7. 'qty' → logprob: -11.1337251663208
    8. '               ' → logprob: -12.0087251663208
    9. 'min' → logprob: -12.3837251663208
    10. 'params' → logprob: -12.3837251663208

Token 884: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020354038861114532
    2. ' len' → logprob: -8.500203132629395
    3. '(len' → logprob: -19.25020408630371
    4. '	len' → logprob: -22.12520408630371
    5. '           ' → logprob: -22.50020408630371
    6. '   ' → logprob: -23.00020408630371
    7. 'parts' → logprob: -23.37520408630371
    8. '
' → logprob: -23.87520408630371
    9. '       ' → logprob: -24.50020408630371
    10. '[len' → logprob: -24.87520408630371

Token 885: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0005157403065823019
    2. 'parts' → logprob: -8.000515937805176
    3. '(' → logprob: -9.250515937805176
    4. '==' → logprob: -10.125515937805176
    5. ' parts' → logprob: -10.375515937805176
    6. ' ==' → logprob: -12.125515937805176
    7. '<' → logprob: -12.875515937805176
    8. '!=' → logprob: -14.125515937805176
    9. '_parts' → logprob: -14.500515937805176
    10. '```' → logprob: -14.625515937805176

Token 886: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.2516366243362427
    2. '!=' → logprob: -1.2516366243362427
    3. '==' → logprob: -1.7516366243362427
    4. ')' → logprob: -1.8766366243362427
    5. '<' → logprob: -2.626636505126953
    6. ' ==' → logprob: -3.876636505126953
    7. ' <' → logprob: -5.876636505126953
    8. ')!=' → logprob: -6.376636505126953
    9. '[' → logprob: -6.876636505126953
    10. ')<' → logprob: -7.376636505126953

Token 887: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07593918591737747
    2. ' !=' → logprob: -3.200939178466797
    3. '<' → logprob: -3.825939178466797
    4. '==' → logprob: -4.575939178466797
    5. ' ==' → logprob: -9.200939178466797
    6. '<int' → logprob: -10.325939178466797
    7. '()!=' → logprob: -10.325939178466797
    8. '>=' → logprob: -10.700939178466797
    9. ' <' → logprob: -10.825939178466797
    10. '!==' → logprob: -10.950939178466797

Token 888: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00861456897109747
    2. '5' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.258615493774414
    4. '４' → logprob: -19.633615493774414
    5. '6' → logprob: -19.883615493774414
    6. '```' → logprob: -21.383615493774414
    7. '۴' → logprob: -21.758615493774414
    8. '' → logprob: -21.883615493774414
    9. 'four' → logprob: -22.008615493774414
    10. '   ' → logprob: -22.258615493774414

Token 889: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.31326186656951904
    2. '5' → logprob: -1.313261866569519
    3. '6' → logprob: -16.813261032104492
    4. ' ' → logprob: -17.563261032104492
    5. '1' → logprob: -18.063261032104492
    6. '```' → logprob: -18.063261032104492
    7. '４' → logprob: -19.250761032104492
    8. '3' → logprob: -19.625761032104492
    9. '５' → logprob: -20.125761032104492
    10. '7' → logprob: -20.250761032104492

Token 890: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007996371947228909
    2. ':
' → logprob: -5.007996559143066
    3. ' or' → logprob: -7.132996559143066
    4. ':return' → logprob: -7.757996559143066
    5. ' and' → logprob: -10.882996559143066
    6. '           ' → logprob: -11.132996559143066
    7. 'and' → logprob: -12.132996559143066
    8. '):' → logprob: -12.632996559143066
    9. '<|end|>' → logprob: -12.882996559143066
    10. ')' → logprob: -13.257996559143066

Token 891: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007730845827609301
    2. 'continue' → logprob: -5.007730960845947
    3. ' continue' → logprob: -7.632730960845947
    4. '           ' → logprob: -7.632730960845947
    5. 'return' → logprob: -11.132730484008789
    6. 'raise' → logprob: -11.507730484008789
    7. '```' → logprob: -12.007730484008789
    8. '                   ' → logprob: -12.507730484008789
    9. '   ' → logprob: -12.757730484008789
    10. '	           ' → logprob: -13.132730484008789

Token 892: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.12941578030586243
    2. '               ' → logprob: -2.12941575050354
    3. ' continue' → logprob: -6.379415988922119
    4. 'return' → logprob: -7.629415988922119
    5. '           ' → logprob: -8.879415512084961
    6. '                   ' → logprob: -9.504415512084961
    7. 'raise' → logprob: -9.879415512084961
    8. '```' → logprob: -10.629415512084961
    9. '	continue' → logprob: -11.504415512084961
    10. 'break' → logprob: -13.629415512084961

Token 893: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002128137508407235
    2. '            
' → logprob: -6.2521281242370605
    3. 'yield' → logprob: -9.877128601074219
    4. '               ' → logprob: -10.627128601074219
    5. '
' → logprob: -10.752128601074219
    6. ' yield' → logprob: -11.002128601074219
    7. '    
' → logprob: -11.002128601074219
    8. '       ' → logprob: -11.502128601074219
    9. '          ' → logprob: -11.752128601074219
    10. '            ' → logprob: -12.002128601074219

Token 894: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022201328829396516
    2. 'yield' → logprob: -9.000222206115723
    3. '```' → logprob: -9.625222206115723
    4. '       ' → logprob: -11.000222206115723
    5. '            
' → logprob: -11.875222206115723
    6. ' yield' → logprob: -12.500222206115723
    7. '               ' → logprob: -13.000222206115723
    8. 'try' → logprob: -13.750222206115723
    9. '          ' → logprob: -14.250222206115723
    10. '   ' → logprob: -15.750222206115723

Token 895: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.8326244950294495
    2. 'min' → logprob: -0.8326244950294495
    3. 'try' → logprob: -2.9576244354248047
    4. 'yield' → logprob: -2.9576244354248047
    5. '           ' → logprob: -4.457624435424805
    6. 'a' → logprob: -4.832624435424805
    7. ' min' → logprob: -6.457624435424805
    8. 'problem' → logprob: -6.707624435424805
    9. '               ' → logprob: -7.332624435424805
    10. 'params' → logprob: -7.457624435424805

Token 896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. '=' → logprob: -11.750020980834961
    3. '_quantity' → logprob: -12.750020980834961
    4. ' =' → logprob: -12.875020980834961
    5. 'u' → logprob: -13.500020980834961
    6. ',' → logprob: -14.375020980834961
    7. '_min' → logprob: -14.375020980834961
    8. '_parts' → logprob: -14.500020980834961
    9. 'min' → logprob: -14.750020980834961
    10. '=int' → logprob: -14.750020980834961

Token 897: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005160462576895952
    2. ' =' → logprob: -5.380160331726074
    3. '=' → logprob: -7.880160331726074
    4. '=int' → logprob: -9.380160331726074
    5. ',q' → logprob: -9.880160331726074
    6. ',int' → logprob: -11.255160331726074
    7. ' ,' → logprob: -11.380160331726074
    8. 'int' → logprob: -14.130160331726074
    9. ',p' → logprob: -15.755160331726074
    10. ',b' → logprob: -15.755160331726074

Token 898: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003032881941180676
    2. ' b' → logprob: -8.125303268432617
    3. 'q' → logprob: -12.125303268432617
    4. 'budget' → logprob: -13.625303268432617
    5. 'c' → logprob: -14.625303268432617
    6. 'int' → logprob: -16.375303268432617
    7. ' budget' → logprob: -18.250303268432617
    8. ' q' → logprob: -18.250303268432617
    9. '   ' → logprob: -18.625303268432617
    10. '       ' → logprob: -18.625303268432617

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009982750052586198
    2. '=' → logprob: -7.000998497009277
    3. ' ,' → logprob: -9.875998497009277
    4. ',c' → logprob: -11.000998497009277
    5. ' =' → logprob: -11.125998497009277
    6. ',q' → logprob: -13.125998497009277
    7. 'c' → logprob: -14.000998497009277
    8. ',int' → logprob: -14.875998497009277
    9. 'int' → logprob: -16.00099754333496
    10. ',a' → logprob: -16.12599754333496

Token 900: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014168102643452585
    2. ' c' → logprob: -9.000142097473145
    3. 'q' → logprob: -11.000142097473145
    4. 'p' → logprob: -14.750142097473145
    5. 'price' → logprob: -14.875142097473145
    6. '   ' → logprob: -15.375142097473145
    7. '	c' → logprob: -16.125141143798828
    8. ' ' → logprob: -16.500141143798828
    9. '  ' → logprob: -16.500141143798828
    10. '    ' → logprob: -17.000141143798828

Token 901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '=' → logprob: -14.625000953674316
    3. 'q' → logprob: -15.375000953674316
    4. 'a' → logprob: -16.375001907348633
    5. ' =' → logprob: -16.375001907348633
    6. '_' → logprob: -16.375001907348633
    7. '' → logprob: -17.125001907348633
    8. '```' → logprob: -17.500001907348633
    9. 'price' → logprob: -17.625001907348633
    10. ',' → logprob: -17.750001907348633

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ',c' → logprob: -12.625006675720215
    3. ' ,' → logprob: -12.875006675720215
    4. '=' → logprob: -14.500006675720215
    5. 'c' → logprob: -15.000006675720215
    6. ',q' → logprob: -15.875006675720215
    7. '_,' → logprob: -16.75000762939453
    8. '‌,' → logprob: -17.87500762939453
    9. ',
' → logprob: -17.87500762939453
    10. 'q' → logprob: -18.00000762939453

Token 903: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.273621405242011e-05
    2. ' c' → logprob: -10.375032424926758
    3. 'q' → logprob: -13.500032424926758
    4. '	c' → logprob: -18.750032424926758
    5. '   ' → logprob: -19.500032424926758
    6. '
' → logprob: -20.000032424926758
    7. 'ct' → logprob: -20.000032424926758
    8. 'price' → logprob: -20.125032424926758
    9. '<|end|>' → logprob: -20.125032424926758
    10. '_c' → logprob: -20.250032424926758

Token 904: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. 'c' → logprob: -15.375000953674316
    3. '```' → logprob: -15.625000953674316
    4. 'o' → logprob: -15.875000953674316
    5. ' ' → logprob: -16.25
    6. '
' → logprob: -16.875
    7. '   ' → logprob: -17.0
    8. '``' → logprob: -17.25
    9. ',' → logprob: -17.375
    10. '1' → logprob: -18.0

Token 905: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. '=' → logprob: -11.625015258789062
    3. ' ,' → logprob: -12.500015258789062
    4. ',q' → logprob: -13.125015258789062
    5. ',c' → logprob: -15.000015258789062
    6. ' =' → logprob: -16.000015258789062
    7. 'q' → logprob: -18.000015258789062
    8. ',
' → logprob: -18.000015258789062
    9. '_,' → logprob: -18.125015258789062
    10. ',user' → logprob: -18.500015258789062

Token 906: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4617256056226324e-05
    2. ' q' → logprob: -11.250014305114746
    3. 'limit' → logprob: -13.875014305114746
    4. 'c' → logprob: -15.000014305114746
    5. '	q' → logprob: -16.125015258789062
    6. 'lim' → logprob: -16.625015258789062
    7. '_q' → logprob: -17.375015258789062
    8. 'l' → logprob: -17.375015258789062
    9. 'ql' → logprob: -18.375015258789062
    10. 'max' → logprob: -18.500015258789062

Token 907: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -14.125001907348633
    3. '_' → logprob: -15.500001907348633
    4. '=' → logprob: -15.750001907348633
    5. '۲' → logprob: -15.750001907348633
    6. '₂' → logprob: -15.875001907348633
    7. '２' → logprob: -16.375001907348633
    8. ' ' → logprob: -16.750001907348633
    9. '```' → logprob: -17.000001907348633
    10. '٢' → logprob: -17.750001907348633

Token 908: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326404213905334
    2. ' =' → logprob: -1.313264012336731
    3. '=int' → logprob: -13.563263893127441
    4. '＝' → logprob: -14.563263893127441
    5. ',' → logprob: -15.063263893127441
    6. '=
' → logprob: -16.813264846801758
    7. ' ' → logprob: -16.938264846801758
    8. ')=' → logprob: -17.313264846801758
    9. ')' → logprob: -17.438264846801758
    10. '=

' → logprob: -17.563264846801758

Token 909: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009473071550019085
    2. ' map' → logprob: -7.00094747543335
    3. '(map' → logprob: -10.250946998596191
    4. '[int' → logprob: -15.375946998596191
    5. '[' → logprob: -16.125947952270508
    6. 'int' → logprob: -16.500947952270508
    7. '	map' → logprob: -18.500947952270508
    8. '.map' → logprob: -19.375947952270508
    9. '
' → logprob: -19.750947952270508
    10. '(int' → logprob: -20.000947952270508

Token 910: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024758970830589533
    2. '(int' → logprob: -6.002475738525391
    3. ' int' → logprob: -15.87747573852539
    4. '[int' → logprob: -16.50247573852539
    5. '=int' → logprob: -17.25247573852539
    6. '<int' → logprob: -18.37747573852539
    7. '	int' → logprob: -19.00247573852539
    8. '```' → logprob: -19.25247573852539
    9. ',int' → logprob: -19.62747573852539
    10. '   ' → logprob: -20.12747573852539

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023330846801400185
    2. '(parts' → logprob: -3.7733309268951416
    3. 'parts' → logprob: -9.523330688476562
    4. ' ,' → logprob: -11.773330688476562
    5. ' parts' → logprob: -12.523330688476562
    6. '(' → logprob: -14.898330688476562
    7. ',
' → logprob: -16.023330688476562
    8. 'Parts' → logprob: -16.148330688476562
    9. '(part' → logprob: -16.273330688476562
    10. ',(' → logprob: -16.773330688476562

Token 912: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -3.774276774493046e-05
    2. ' parts' → logprob: -10.250038146972656
    3. '(parts' → logprob: -13.000038146972656
    4. 'part' → logprob: -17.875038146972656
    5. '
' → logprob: -18.500038146972656
    6. '   ' → logprob: -18.875038146972656
    7. 'Parts' → logprob: -19.750038146972656
    8. 'pieces' → logprob: -19.750038146972656
    9. '.parts' → logprob: -20.125038146972656
    10. ' ' → logprob: -20.250038146972656

Token 913: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031812789384275675
    2. ')
' → logprob: -5.753181457519531
    3. ' )' → logprob: -13.628181457519531
    4. ')
' → logprob: -14.253181457519531
    5. ')return' → logprob: -14.753181457519531
    6. '           ' → logprob: -14.878181457519531
    7. ')`' → logprob: -15.003181457519531
    8. ')

' → logprob: -15.753181457519531
    9. '),' → logprob: -16.12818145751953
    10. ')`
' → logprob: -16.62818145751953

Token 914: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008934747893363237
    2. 'yield' → logprob: -7.125893592834473
    3. ' yield' → logprob: -9.625893592834473
    4. '```' → logprob: -11.500893592834473
    5. '<|end|>' → logprob: -12.375893592834473
    6. '	yield' → logprob: -12.750893592834473
    7. '            
' → logprob: -12.875893592834473
    8. '       ' → logprob: -13.625893592834473
    9. 'Yield' → logprob: -14.625893592834473
    10. '          ' → logprob: -14.750893592834473

Token 915: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.019660579040646553
    2. '           ' → logprob: -4.019660472869873
    3. ' yield' → logprob: -6.519660472869873
    4. 'problem' → logprob: -10.894660949707031
    5. '	yield' → logprob: -11.019660949707031
    6. 'if' → logprob: -15.394660949707031
    7. 'Yield' → logprob: -16.14466094970703
    8. '       ' → logprob: -16.26966094970703
    9. '            
' → logprob: -18.01966094970703
    10. '```' → logprob: -18.51966094970703

Token 916: ' Meat' (ID: 89131)
  Prédit: 'Me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Me' → logprob: -0.0011741555063053966
    2. ' Meat' → logprob: -6.751173973083496
    3. ' Me' → logprob: -12.501173973083496
    4. '	Me' → logprob: -15.751173973083496
    5. '(Me' → logprob: -15.876173973083496
    6. '   ' → logprob: -18.126174926757812
    7. '.Me' → logprob: -18.751174926757812
    8. '           ' → logprob: -19.251174926757812
    9. 'Meal' → logprob: -19.376174926757812
    10. '_me' → logprob: -19.376174926757812

Token 917: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -1.9361264946837764e-07
    2. '_purchase' → logprob: -16.5
    3. ' Purchase' → logprob: -18.0
    4. 'Purch' → logprob: -19.125
    5. 'urchase' → logprob: -20.125
    6. 'purchase' → logprob: -20.25
    7. 'PUR' → logprob: -23.25
    8. '```' → logprob: -23.875
    9. 'Purchased' → logprob: -24.125
    10. 'Buy' → logprob: -24.125

Token 918: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -5.512236498361744e-07
    2. 'problem' → logprob: -14.875000953674316
    3. '_problem' → logprob: -16.125
    4. 'Proble' → logprob: -17.125
    5. 'Problems' → logprob: -17.875
    6. 'Purchase' → logprob: -18.625
    7. ' problem' → logprob: -18.875
    8. ' Problem' → logprob: -19.5
    9. 'Pro' → logprob: -20.875
    10. '```' → logprob: -22.25

Token 919: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.37500286102295
    3. '(
' → logprob: -13.87500286102295
    4. 'q' → logprob: -16.250001907348633
    5. ' (' → logprob: -19.875001907348633
    6. '   ' → logprob: -21.375001907348633
    7. '(query' → logprob: -21.625001907348633
    8. '(qu' → logprob: -21.750001907348633
    9. '	q' → logprob: -21.875001907348633
    10. '(

' → logprob: -21.875001907348633

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. 'q' → logprob: -10.750025749206543
    3. '(q' → logprob: -12.875025749206543
    4. ',q' → logprob: -14.625025749206543
    5. '```' → logprob: -16.125024795532227
    6. '[q' → logprob: -16.250024795532227
    7. ' q' → logprob: -16.375024795532227
    8. 'u' → logprob: -16.750024795532227
    9. '	q' → logprob: -16.750024795532227
    10. '(' → logprob: -16.750024795532227

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032200184650719166
    2. ',b' → logprob: -5.753220081329346
    3. ' ,' → logprob: -10.878219604492188
    4. 'b' → logprob: -10.878219604492188
    5. ',q' → logprob: -12.878219604492188
    6. ',
' → logprob: -13.253219604492188
    7. '=' → logprob: -16.253219604492188
    8. 'q' → logprob: -17.503219604492188
    9. ')' → logprob: -17.753219604492188
    10. '   ' → logprob: -17.878219604492188

Token 922: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.318681188422488e-05
    2. ' b' → logprob: -11.25001335144043
    3. '           ' → logprob: -17.37501335144043
    4. '       ' → logprob: -18.25001335144043
    5. '   ' → logprob: -20.00001335144043
    6. '
' → logprob: -20.12501335144043
    7. '	b' → logprob: -20.12501335144043
    8. '               ' → logprob: -20.75001335144043
    9. '          ' → logprob: -21.00001335144043
    10. '        ' → logprob: -21.12501335144043

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16753269731998444
    2. 'c' → logprob: -2.0425326824188232
    3. ',c' → logprob: -3.9175326824188232
    4. ' c' → logprob: -5.542532920837402
    5. ' ,' → logprob: -7.292532920837402
    6. '           ' → logprob: -10.042532920837402
    7. ',
' → logprob: -11.917532920837402
    8. '   ' → logprob: -12.292532920837402
    9. '       ' → logprob: -12.917532920837402
    10. '               ' → logprob: -13.417532920837402

Token 924: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.750021934509277
    3. '           ' → logprob: -17.12502098083496
    4. '       ' → logprob: -18.25002098083496
    5. '   ' → logprob: -18.75002098083496
    6. '
' → logprob: -19.75002098083496
    7. '     ' → logprob: -20.25002098083496
    8. '    ' → logprob: -20.37502098083496
    9. ')c' → logprob: -20.37502098083496
    10. '               ' → logprob: -20.50002098083496

Token 925: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '2' → logprob: -12.000006675720215
    3. 'a' → logprob: -15.750006675720215
    4. '
' → logprob: -16.43750762939453
    5. ')' → logprob: -16.62500762939453
    6. '-' → logprob: -16.81250762939453
    7. '```' → logprob: -17.12500762939453
    8. '_' → logprob: -17.25000762939453
    9. ',' → logprob: -17.43750762939453
    10. 'c' → logprob: -17.56250762939453

Token 926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016373354010283947
    2. ',c' → logprob: -6.5016374588012695
    3. ' ,' → logprob: -9.00163745880127
    4. 'c' → logprob: -11.50163745880127
    5. ',
' → logprob: -14.00163745880127
    6. ',q' → logprob: -15.12663745880127
    7. '   ' → logprob: -15.62663745880127
    8. ' c' → logprob: -15.87663745880127
    9. ')' → logprob: -17.126636505126953
    10. ' ' → logprob: -17.626636505126953

Token 927: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001584850688232109
    2. ' c' → logprob: -8.750158309936523
    3. '	c' → logprob: -19.625158309936523
    4. '   ' → logprob: -19.625158309936523
    5. ')c' → logprob: -20.125158309936523
    6. '    ' → logprob: -20.625158309936523
    7. ' ' → logprob: -20.875158309936523
    8. '
' → logprob: -21.625158309936523
    9. '  ' → logprob: -21.750158309936523
    10. '       ' → logprob: -21.875158309936523

Token 928: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.627176768844947e-05
    2. '1' → logprob: -9.250096321105957
    3. ')' → logprob: -17.62509536743164
    4. '```' → logprob: -17.62509536743164
    5. '   ' → logprob: -17.81259536743164
    6. ' ' → logprob: -18.00009536743164
    7. '_' → logprob: -18.37509536743164
    8. 'a' → logprob: -18.43759536743164
    9. '
' → logprob: -18.87509536743164
    10. '-' → logprob: -18.93759536743164

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001366744691040367
    2. ',q' → logprob: -9.375136375427246
    3. ' ,' → logprob: -9.875136375427246
    4. 'q' → logprob: -16.750137329101562
    5. ',c' → logprob: -16.875137329101562
    6. ',p' → logprob: -17.000137329101562
    7. ',
' → logprob: -17.000137329101562
    8. '           ' → logprob: -18.000137329101562
    9. '   ' → logprob: -18.375137329101562
    10. ')' → logprob: -18.375137329101562

Token 930: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.611323624383658e-05
    2. ' q' → logprob: -9.625065803527832
    3. '	q' → logprob: -18.62506675720215
    4. '   ' → logprob: -20.50006675720215
    5. '           ' → logprob: -21.12506675720215
    6. '       ' → logprob: -21.12506675720215
    7. '$q' → logprob: -21.25006675720215
    8. ')' → logprob: -22.12506675720215
    9. '    ' → logprob: -22.50006675720215
    10. '```' → logprob: -22.50006675720215

Token 931: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -19.375
    3. '۲' → logprob: -19.5
    4. '₂' → logprob: -19.75
    5. '２' → logprob: -19.875
    6. '
' → logprob: -19.875
    7. '_' → logprob: -20.0
    8. '   ' → logprob: -20.0625
    9. ')' → logprob: -20.3125
    10. ' ' → logprob: -20.5

Token 932: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -11.875007629394531
    3. '           ' → logprob: -14.875007629394531
    4. ' )' → logprob: -17.25000762939453
    5. '       ' → logprob: -17.50000762939453
    6. '<|end|>' → logprob: -17.87500762939453
    7. ')}' → logprob: -18.75000762939453
    8. ')return' → logprob: -18.87500762939453
    9. ')
' → logprob: -18.87500762939453
    10. '),' → logprob: -19.25000762939453

Token 933: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7644667625427246
    2. '```' → logprob: -0.7644667625427246
    3. 'class' → logprob: -3.5144667625427246
    4. 'if' → logprob: -3.6394667625427246
    5. '<|end|>' → logprob: -4.764466762542725
    6. 'import' → logprob: -5.764466762542725
    7. '#' → logprob: -7.014466762542725
    8. 'from' → logprob: -9.389467239379883
    9. '``' → logprob: -9.889467239379883
    10. ' if' → logprob: -10.139467239379883

Token 934: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.6668404340744019
    2. 'Me' → logprob: -1.2918404340744019
    3. 'Solver' → logprob: -2.6668405532836914
    4. 'Main' → logprob: -3.2918405532836914
    5. 'Solution' → logprob: -3.2918405532836914
    6. 'Runner' → logprob: -3.4168405532836914
    7. 'Problem' → logprob: -4.291840553283691
    8. ' Meat' → logprob: -4.291840553283691
    9. 'Processor' → logprob: -6.416840553283691
    10. 'Printer' → logprob: -6.541840553283691

Token 935: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.026894759386777878
    2. 'Printer' → logprob: -4.026894569396973
    3. 'Formatter' → logprob: -5.526894569396973
    4. 'ter' → logprob: -5.776894569396973
    5. 'Handler' → logprob: -6.526894569396973
    6. 'Generator' → logprob: -9.026894569396973
    7. 'Builder' → logprob: -10.776894569396973
    8. 'Manager' → logprob: -11.901894569396973
    9. 'Processor' → logprob: -12.026894569396973
    10. 'writer' → logprob: -13.151894569396973

Token 936: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16095365583896637
    2. ':
' → logprob: -1.9109536409378052
    3. '():
' → logprob: -8.660953521728516
    4. '```' → logprob: -8.785953521728516
    5. '<|end|>' → logprob: -8.910953521728516
    6. '(object' → logprob: -9.910953521728516
    7. 'class' → logprob: -10.160953521728516
    8. ':def' → logprob: -10.285953521728516
    9. '<class' → logprob: -10.660953521728516
    10. ':

' → logprob: -11.160953521728516

Token 937: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01121510285884142
    2. 'class' → logprob: -4.5112152099609375
    3. 'def' → logprob: -8.886215209960938
    4. '```' → logprob: -10.761215209960938
    5. ' class' → logprob: -12.261215209960938
    6. ' def' → logprob: -14.261215209960938
    7. '@dat' → logprob: -14.261215209960938
    8. ':' → logprob: -14.261215209960938
    9. 'from' → logprob: -15.386215209960938
    10. 'classmethod' → logprob: -15.386215209960938

Token 938: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045045334263704717
    2. '@' (adapté à ' @') → logprob: -7.750450611114502
    3. 'class' → logprob: -11.000450134277344
    4. ' def' → logprob: -13.000450134277344
    5. '   ' → logprob: -14.250450134277344
    6. '```' → logprob: -15.500450134277344
    7. '	def' → logprob: -19.875450134277344
    8. 'staticmethod' → logprob: -20.125450134277344
    9. '@dat' → logprob: -20.500450134277344
    10. ' @' → logprob: -20.875450134277344

Token 939: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -3.4121114822482923e-06
    2. 'classmethod' → logprob: -13.000003814697266
    3. 'dat' → logprob: -13.750003814697266
    4. 'static' → logprob: -17.250003814697266
    5. 'abstract' → logprob: -17.875003814697266
    6. 'property' → logprob: -20.125003814697266
    7. 'abc' → logprob: -21.875003814697266
    8. ' static' → logprob: -23.125003814697266
    9. 'Static' → logprob: -25.125003814697266
    10. 'final' → logprob: -25.500003814697266

Token 940: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3987307548522949
    2. '   ' → logprob: -1.273730754852295
    3. ' def' → logprob: -3.023730754852295
    4. '
' → logprob: -8.648731231689453
    5. '	def' → logprob: -9.523731231689453
    6. '(' → logprob: -9.898731231689453
    7. '(def' → logprob: -10.773731231689453
    8. '  ' → logprob: -11.023731231689453
    9. ' ' → logprob: -11.148731231689453
    10. '<|end|>' → logprob: -11.148731231689453

Token 941: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019457722082734108
    2. ' def' → logprob: -6.501945972442627
    3. '   ' → logprob: -7.751945972442627
    4. '
' → logprob: -11.251945495605469
    5. '	def' → logprob: -15.251945495605469
    6. '_def' → logprob: -16.37694549560547
    7. '```' → logprob: -16.50194549560547
    8. ':def' → logprob: -16.62694549560547
    9. '(def' → logprob: -17.62694549560547
    10. '  ' → logprob: -18.37694549560547

Token 942: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.842555426876061e-06
    2. ' def' → logprob: -12.250004768371582
    3. '
' → logprob: -18.1250057220459
    4. '   ' → logprob: -21.0000057220459
    5. '	def' → logprob: -22.1250057220459
    6. 'class' → logprob: -22.3750057220459
    7. '```' → logprob: -23.1250057220459
    8. '    
' → logprob: -23.2500057220459
    9. ' ' → logprob: -23.5000057220459
    10. 'de' → logprob: -24.5000057220459

Token 943: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -4.060365608893335e-05
    2. 'print' → logprob: -10.125041007995605
    3. ' format' → logprob: -15.375041007995605
    4. 'display' → logprob: -17.00004005432129
    5. 'solve' → logprob: -17.00004005432129
    6. 'write' → logprob: -17.62504005432129
    7. 'render' → logprob: -17.75004005432129
    8. 'output' → logprob: -17.87504005432129
    9. 'present' → logprob: -18.00004005432129
    10. 'answer' → logprob: -18.12504005432129

Token 944: '(solution' (ID: 126940)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5535768270492554
    2. '(solution' → logprob: -1.8035768270492554
    3. '(problem' → logprob: -1.8035768270492554
    4. '(answer' → logprob: -2.928576946258545
    5. '(p' → logprob: -3.303576946258545
    6. '(quantity' → logprob: -6.428576946258545
    7. '(best' → logprob: -7.178576946258545
    8. '(ans' → logprob: -7.303576946258545
    9. '(' → logprob: -7.678576946258545
    10. '(prob' → logprob: -7.803576946258545

Token 945: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031408123672008514
    2. ':' → logprob: -3.6564080715179443
    3. '(solution' → logprob: -5.406408309936523
    4. '   ' → logprob: -8.281408309936523
    5. ')' → logprob: -9.656408309936523
    6. '       ' → logprob: -9.656408309936523
    7. 'result' → logprob: -10.031408309936523
    8. ',result' → logprob: -10.156408309936523
    9. '(result' → logprob: -10.531408309936523
    10. '```' → logprob: -10.906408309936523

Token 946: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.2566513419151306
    2. 'tuple' → logprob: -1.5066514015197754
    3. 'Tuple' → logprob: -5.756651401519775
    4. ' tuple' → logprob: -7.881651401519775
    5. ')' → logprob: -8.006650924682617
    6. ' Optional' → logprob: -8.381650924682617
    7. '(Optional' → logprob: -8.506650924682617
    8. 'Solution' → logprob: -8.881650924682617
    9. '(tuple' → logprob: -9.131650924682617
    10. 'lambda' → logprob: -9.881650924682617

Token 947: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. 'Tuple' → logprob: -14.75
    3. '[
' → logprob: -16.75
    4. '[int' → logprob: -17.75
    5. '<Tuple' → logprob: -18.75
    6. '[str' → logprob: -19.25
    7. '[(' → logprob: -19.375
    8. '```' → logprob: -20.0
    9. ')' → logprob: -20.25
    10. '[[' → logprob: -21.625

Token 948: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -8.895480277715251e-06
    2. 'tuple' → logprob: -11.750008583068848
    3. ' Tuple' → logprob: -14.125008583068848
    4. '[' → logprob: -15.625008583068848
    5. '_tuple' → logprob: -17.000009536743164
    6. '.Tuple' → logprob: -17.625009536743164
    7. '<Tuple' → logprob: -17.875009536743164
    8. ' tuple' → logprob: -19.875009536743164
    9. 'Tu' → logprob: -21.250009536743164
    10. 'int' → logprob: -22.125009536743164

Token 949: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.704273118884885e-07
    2. 'int' → logprob: -14.250000953674316
    3. '(int' → logprob: -19.625
    4. '<int' → logprob: -19.75
    5. ',int' → logprob: -21.375
    6. '[' → logprob: -22.0
    7. '[str' → logprob: -22.25
    8. '[
' → logprob: -22.375
    9. '	int' → logprob: -23.25
    10. '[Int' → logprob: -23.625

Token 950: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.25518426299095154
    2. '[int' → logprob: -1.505184292793274
    3. 'int' → logprob: -5.755184173583984
    4. ',' → logprob: -9.505184173583984
    5. ']int' → logprob: -12.255184173583984
    6. '<int' → logprob: -13.005184173583984
    7. '(int' → logprob: -13.630184173583984
    8. ':int' → logprob: -14.380184173583984
    9. '=int' → logprob: -16.880184173583984
    10. '[' → logprob: -17.005184173583984

Token 951: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011133065447211266
    2. ']])' → logprob: -4.511133193969727
    3. ']):
' → logprob: -10.261133193969727
    4. '],' → logprob: -11.011133193969727
    5. ')' → logprob: -11.636133193969727
    6. ')])' → logprob: -11.761133193969727
    7. '])]' → logprob: -11.886133193969727
    8. ']]' → logprob: -12.011133193969727
    9. ']):' → logprob: -14.011133193969727
    10. ']' → logprob: -14.636133193969727

Token 952: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.05258789286017418
    2. ':' → logprob: -3.5525879859924316
    3. ' ->' → logprob: -3.9275879859924316
    4. '()->' → logprob: -6.927587985992432
    5. ')->' → logprob: -7.302587985992432
    6. ':return' → logprob: -7.552587985992432
    7. '(' → logprob: -8.302587509155273
    8. '   ' → logprob: -8.927587509155273
    9. ')' → logprob: -9.427587509155273
    10. '->[' → logprob: -9.552587509155273

Token 953: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -7.839121826691553e-05
    2. ' str' → logprob: -9.500078201293945
    3. '[str' → logprob: -13.125078201293945
    4. '(str' → logprob: -13.500078201293945
    5. '   ' → logprob: -18.250078201293945
    6. 'None' → logprob: -18.375078201293945
    7. 'print' → logprob: -19.375078201293945
    8. '=str' → logprob: -19.375078201293945
    9. 'int' → logprob: -20.875078201293945
    10. 'Optional' → logprob: -21.125078201293945

Token 954: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2334040105342865
    2. ':
' → logprob: -1.7334040403366089
    3. '   ' → logprob: -4.483404159545898
    4. '       ' → logprob: -5.233404159545898
    5. '->' → logprob: -5.483404159545898
    6. ':return' → logprob: -5.483404159545898
    7. '(' → logprob: -6.358404159545898
    8. '(
' → logprob: -7.733404159545898
    9. '{' → logprob: -7.733404159545898
    10. ' ->' → logprob: -7.858404159545898

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042133133858442307
    2. '   ' → logprob: -3.542133092880249
    3. ' if' → logprob: -4.792133331298828
    4. 'if' → logprob: -5.542133331298828
    5. 'return' → logprob: -9.667133331298828
    6. ' return' → logprob: -11.167133331298828
    7. '```' → logprob: -12.167133331298828
    8. '	if' → logprob: -12.667133331298828
    9. '           ' → logprob: -13.667133331298828
    10. '    ' → logprob: -14.167133331298828

Token 956: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004430001601576805
    2. 'return' → logprob: -5.754429817199707
    3. '"' → logprob: -7.629429817199707
    4. '   ' → logprob: -8.504429817199707
    5. ' if' → logprob: -9.004429817199707
    6. 'f' → logprob: -9.004429817199707
    7. ''' → logprob: -9.254429817199707
    8. '       ' → logprob: -9.254429817199707
    9. '""' → logprob: -9.254429817199707
    10. '"""' → logprob: -11.254429817199707

Token 957: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.0017070822650566697
    2. ' solution' → logprob: -6.376707077026367
    3. 'not' → logprob: -12.501707077026367
    4. ' not' → logprob: -14.751707077026367
    5. '   ' → logprob: -14.876707077026367
    6. '(solution' → logprob: -15.001707077026367
    7. ' ' → logprob: -17.126707077026367
    8. '  ' → logprob: -17.751707077026367
    9. '       ' → logprob: -18.751707077026367
    10. '    ' → logprob: -18.876707077026367

Token 958: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04859906807541847
    2. 'is' → logprob: -3.0485990047454834
    3. '[' → logprob: -11.673599243164062
    4. '==' → logprob: -12.923599243164062
    5. ' ==' → logprob: -15.548599243164062
    6. '	is' → logprob: -15.548599243164062
    7. ':' → logprob: -16.423599243164062
    8. 'and' → logprob: -16.548599243164062
    9. ')' → logprob: -16.673599243164062
    10. '===' → logprob: -17.173599243164062

Token 959: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.754368223482743e-05
    2. ' None' → logprob: -9.750067710876465
    3. 'not' → logprob: -11.625067710876465
    4. '   ' → logprob: -15.875067710876465
    5. 'none' → logprob: -16.50006675720215
    6. '(None' → logprob: -17.50006675720215
    7. 'Not' → logprob: -17.87506675720215
    8. '_None' → logprob: -18.00006675720215
    9. ' not' → logprob: -18.37506675720215
    10. ' ' → logprob: -19.25006675720215

Token 960: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04073037952184677
    2. ':' → logprob: -3.5407304763793945
    3. ' or' → logprob: -5.4157304763793945
    4. '           ' → logprob: -5.7907304763793945
    5. '       ' → logprob: -6.6657304763793945
    6. '   ' → logprob: -6.7907304763793945
    7. ':return' → logprob: -7.0407304763793945
    8. 'return' → logprob: -9.790730476379395
    9. 'or' → logprob: -10.540730476379395
    10. ',' → logprob: -11.040730476379395

Token 961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019362466409802437
    2. 'return' → logprob: -4.269362449645996
    3. ' return' → logprob: -5.269362449645996
    4. '       ' → logprob: -10.269362449645996
    5. '   ' → logprob: -13.519362449645996
    6. '	       ' → logprob: -13.894362449645996
    7. '	return' → logprob: -14.894362449645996
    8. '               ' → logprob: -15.019362449645996
    9. '          ' → logprob: -15.394362449645996
    10. '		' → logprob: -15.394362449645996

Token 962: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4609188735485077
    2. '"' → logprob: -1.58591890335083
    3. ' return' → logprob: -2.21091890335083
    4. '"-' → logprob: -3.33591890335083
    5. '"No' → logprob: -5.46091890335083
    6. '   ' → logprob: -5.58591890335083
    7. ''' → logprob: -5.71091890335083
    8. ' "' → logprob: -6.21091890335083
    9. '       ' → logprob: -6.33591890335083
    10. ''-' → logprob: -6.58591890335083

Token 963: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3670988976955414
    2. '"No' → logprob: -1.8670989274978638
    3. ''' → logprob: -2.617098808288574
    4. '"-' → logprob: -2.742098808288574
    5. ''-' → logprob: -4.367098808288574
    6. '"N' → logprob: -7.367098808288574
    7. '-' → logprob: -8.367098808288574
    8. '"\' → logprob: -8.367098808288574
    9. ' "' → logprob: -8.367098808288574
    10. ''\' → logprob: -8.867098808288574

Token 964: 'NA' (ID: 9555)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0839439108967781
    2. 'Impossible' → logprob: -2.8339438438415527
    3. 'NA' → logprob: -4.958943843841553
    4. '0' → logprob: -5.458943843841553
    5. 'UN' → logprob: -5.583943843841553
    6. 'im' → logprob: -5.958943843841553
    7. 'failed' → logprob: -6.708943843841553
    8. 'No' → logprob: -7.333943843841553
    9. 'none' → logprob: -7.833943843841553
    10. 'NONE' → logprob: -7.958943843841553

Token 965: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.5395979881286621
    2. '"' → logprob: -0.9145979881286621
    3. '\n' → logprob: -4.164597988128662
    4. '")' → logprob: -8.28959846496582
    5. '"
' → logprob: -8.53959846496582
    6. '")
' → logprob: -9.03959846496582
    7. '"\' → logprob: -10.16459846496582
    8. '0' → logprob: -10.28959846496582
    9. ')' → logprob: -10.66459846496582
    10. ')"
' → logprob: -10.66459846496582

Token 966: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06532800197601318
    2. '
' → logprob: -2.8153281211853027
    3. '\n' → logprob: -6.565328121185303
    4. '        
' → logprob: -6.565328121185303
    5. 'return' → logprob: -7.815328121185303
    6. '  
' → logprob: -9.940327644348145
    7. ' return' → logprob: -10.690327644348145
    8. '    
' → logprob: -11.065327644348145
    9. 'a' → logprob: -11.565327644348145
    10. ' 
' → logprob: -12.065327644348145

Token 967: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13597363233566284
    2. ' a' → logprob: -2.5109736919403076
    3. 'return' (adapté à ' return') → logprob: -3.6359736919403076
    4. ' return' → logprob: -4.0109734535217285
    5. '       ' → logprob: -6.6359734535217285
    6. '(a' → logprob: -10.260973930358887
    7. '           ' → logprob: -10.260973930358887
    8. 'q' → logprob: -10.635973930358887
    9. '   ' → logprob: -10.760973930358887
    10. 'ai' → logprob: -10.885973930358887

Token 968: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.048590436577796936
    2. ' f' → logprob: -3.0485904216766357
    3. '"' → logprob: -13.173590660095215
    4. ' "{}' → logprob: -14.298590660095215
    5. 'str' → logprob: -14.923590660095215
    6. '(f' → logprob: -16.4235897064209
    7. '   ' → logprob: -17.0485897064209
    8. '"{' → logprob: -17.1735897064209
    9. ''' → logprob: -17.7985897064209
    10. '	f' → logprob: -18.0485897064209

Token 969: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0010149452136829495
    2. '{' → logprob: -7.001014709472656
    3. '"' → logprob: -9.626014709472656
    4. ''{' → logprob: -10.251014709472656
    5. 'solution' → logprob: -13.626014709472656
    6. 'f' → logprob: -14.626014709472656
    7. '("{' → logprob: -15.376014709472656
    8. ' "{' → logprob: -15.501014709472656
    9. '{}' → logprob: -17.626014709472656
    10. '(solution' → logprob: -18.001014709472656

Token 970: 'solution' (ID: 84819)
  Prédit: 'solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -2.935296834039036e-06
    2. '(solution' → logprob: -13.62500286102295
    3. ' solution' → logprob: -14.00000286102295
    4. '{' → logprob: -15.00000286102295
    5. 'problem' → logprob: -16.375003814697266
    6. ''' → logprob: -16.625003814697266
    7. '100' → logprob: -16.750003814697266
    8. 'result' → logprob: -17.250003814697266
    9. '0' → logprob: -17.250003814697266
    10. '.solution' → logprob: -17.250003814697266

Token 971: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -14.875000953674316
    3. '}' → logprob: -16.875
    4. '(' → logprob: -17.125
    5. '.' → logprob: -17.875
    6. '{' → logprob: -18.375
    7. '!' → logprob: -18.625
    8. '#' → logprob: -18.75
    9. '1' → logprob: -18.75
    10. ' ' → logprob: -18.75

Token 972: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.87500286102295
    3. '
' → logprob: -14.81250286102295
    4. '1' → logprob: -15.12500286102295
    5. '[' → logprob: -15.12500286102295
    6. '۰' → logprob: -15.93750286102295
    7. '   ' → logprob: -16.000003814697266
    8. '00' → logprob: -16.125003814697266
    9. '```' → logprob: -16.125003814697266
    10. '٠' → logprob: -16.437503814697266

Token 973: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -3.2855416066013277e-05
    2. '},{' → logprob: -10.750032424926758
    3. ' }' → logprob: -11.875032424926758
    4. '}{' → logprob: -12.875032424926758
    5. '},' → logprob: -13.875032424926758
    6. '}/{' → logprob: -15.750032424926758
    7. '}:{' → logprob: -16.000032424926758
    8. '}}' → logprob: -16.125032424926758
    9. '}-{' → logprob: -16.500032424926758
    10. '[' → logprob: -16.750032424926758

Token 974: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.08627141267061234
    2. '}' → logprob: -2.5862715244293213
    3. '{' → logprob: -4.961271286010742
    4. '"' → logprob: -8.586271286010742
    5. '}{' → logprob: -10.586271286010742
    6. 'solution' → logprob: -10.711271286010742
    7. '},{' → logprob: -10.961271286010742
    8. ' ' → logprob: -11.148771286010742
    9. ' +' → logprob: -11.273771286010742
    10. ' solution' → logprob: -11.336271286010742

Token 975: 'solution' (ID: 84819)
  Prédit: 'solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -1.6240566083070007e-06
    2. ' solution' → logprob: -13.500001907348633
    3. '(solution' → logprob: -15.625001907348633
    4. '.solution' → logprob: -19.375001907348633
    5. '_solution' → logprob: -20.500001907348633
    6. '0' → logprob: -22.625001907348633
    7. 'olution' → logprob: -22.750001907348633
    8. 'Solution' → logprob: -22.875001907348633
    9. '{' → logprob: -23.750001907348633
    10. 'solver' → logprob: -24.125001907348633

Token 976: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4736459888808895e-05
    2. '1' → logprob: -11.500014305114746
    3. '}' → logprob: -13.375014305114746
    4. '.' → logprob: -14.250014305114746
    5. '```' → logprob: -14.500014305114746
    6. ']' → logprob: -14.625014305114746
    7. 'solution' → logprob: -15.125014305114746
    8. '_' → logprob: -15.750014305114746
    9. '   ' → logprob: -16.250015258789062
    10. '_solution' → logprob: -16.375015258789062

Token 977: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '[' → logprob: -16.875
    4. '0' → logprob: -17.125
    5. 'solution' → logprob: -18.0
    6. '```' → logprob: -18.0
    7. '2' → logprob: -18.125
    8. '4' → logprob: -18.25
    9. '3' → logprob: -18.75
    10. '   ' → logprob: -19.5

Token 978: ']}' (ID: 28000)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -9.233804303221405e-05
    2. '}' → logprob: -9.375092506408691
    3. ']}"' → logprob: -12.375092506408691
    4. '"}' → logprob: -14.125092506408691
    5. '}}"' → logprob: -14.375092506408691
    6. '}"
' → logprob: -14.625092506408691
    7. ')"' → logprob: -14.750092506408691
    8. ' }' → logprob: -14.875092506408691
    9. '"' → logprob: -15.000092506408691
    10. ']"' → logprob: -15.375092506408691

Token 979: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.990154047845863e-05
    2. '\n' → logprob: -10.250049591064453
    3. '"
' → logprob: -11.375049591064453
    4. '<|end|>' → logprob: -13.125049591064453
    5. '}"' → logprob: -14.875049591064453
    6. '"#' → logprob: -15.750049591064453
    7. '```' → logprob: -15.750049591064453
    8. '"}' → logprob: -16.000049591064453
    9. '"

' → logprob: -16.375049591064453
    10. ' "' → logprob: -16.625049591064453

Token 980: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38785603642463684
    2. 'if' → logprob: -1.1378560066223145
    3. 'from' → logprob: -7.3878560066223145
    4. 'import' → logprob: -8.262856483459473
    5. '```' → logprob: -9.762856483459473
    6. '#' → logprob: -10.012856483459473
    7. ' if' → logprob: -12.137856483459473
    8. '#!/' → logprob: -16.137855529785156
    9. ' def' → logprob: -16.887855529785156
    10. 'class' → logprob: -17.137855529785156

Token 981: ' Meat' (ID: 89131)
  Prédit: 'Me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Me' → logprob: -0.8608924150466919
    2. 'Main' → logprob: -0.9858924150466919
    3. 'Solver' → logprob: -2.6108922958374023
    4. ' Meat' → logprob: -2.8608922958374023
    5. 'Runner' → logprob: -3.1108922958374023
    6. 'Solution' → logprob: -3.9858922958374023
    7. 'main' → logprob: -5.110892295837402
    8. 'Problem' → logprob: -6.485892295837402
    9. 'Application' → logprob: -7.485892295837402
    10. 'Executor' → logprob: -7.610892295837402

Token 982: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -0.001817862968891859
    2. 'Purch' → logprob: -6.37681770324707
    3. 'Processor' → logprob: -9.62681770324707
    4. 'Solver' → logprob: -11.12681770324707
    5. 'Problem' → logprob: -11.50181770324707
    6. 'Buyer' → logprob: -12.00181770324707
    7. '_purchase' → logprob: -12.25181770324707
    8. 'purchase' → logprob: -12.37681770324707
    9. 'Solution' → logprob: -13.37681770324707
    10. 'Demand' → logprob: -14.00181770324707

Token 983: 'Application' (ID: 6817)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.2960071861743927
    2. 'Problem' → logprob: -1.4210071563720703
    3. 'Processor' → logprob: -5.54600715637207
    4. 'Optimizer' → logprob: -5.92100715637207
    5. 'Manager' → logprob: -6.04600715637207
    6. 'Planner' → logprob: -6.92100715637207
    7. 'Solution' → logprob: -7.54600715637207
    8. 'Runner' → logprob: -7.67100715637207
    9. 'Simulator' → logprob: -7.67100715637207
    10. 'Pro' → logprob: -7.92100715637207

Token 984: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028582511004060507
    2. ':
' → logprob: -5.8778581619262695
    3. ':def' → logprob: -11.37785816192627
    4. '(' → logprob: -11.62785816192627
    5. '<|end|>' → logprob: -11.87785816192627
    6. '(Abstract' → logprob: -12.62785816192627
    7. '(S' → logprob: -12.75285816192627
    8. '(object' → logprob: -12.87785816192627
    9. '   ' → logprob: -12.87785816192627
    10. '():' → logprob: -13.00285816192627

Token 985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030412263004109263
    2. 'class' → logprob: -8.125304222106934
    3. 'def' → logprob: -12.000304222106934
    4. ' class' → logprob: -13.875304222106934
    5. '```' → logprob: -14.500304222106934
    6. ' def' → logprob: -14.750304222106934
    7. '	def' → logprob: -16.625303268432617
    8. '
' → logprob: -17.750303268432617
    9. '    
' → logprob: -18.125303268432617
    10. '   ' → logprob: -18.375303268432617

Token 986: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04861972853541374
    2. ' def' → logprob: -3.0486197471618652
    3. '   ' → logprob: -10.548619270324707
    4. 'class' → logprob: -12.048619270324707
    5. '	def' → logprob: -15.423619270324707
    6. '```' → logprob: -17.173620223999023
    7. ':def' → logprob: -18.548620223999023
    8. '    ' → logprob: -19.048620223999023
    9. '@' → logprob: -20.173620223999023
    10. 'de' → logprob: -20.798620223999023

Token 987: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.15250402688980103
    2. 'def' → logprob: -2.5275039672851562
    3. '__' → logprob: -3.4025039672851562
    4. ' __' → logprob: -4.027503967285156
    5. ' def' → logprob: -5.402503967285156
    6. '_init' → logprob: -5.402503967285156
    7. ' init' → logprob: -7.277503967285156
    8. 'int' → logprob: -7.652503967285156
    9. 'iter' → logprob: -9.027503967285156
    10. '```' → logprob: -9.527503967285156

Token 988: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. 'new' → logprob: -14.625000953674316
    3. '__' → logprob: -15.500000953674316
    4. '```' → logprob: -16.875
    5. ' init' → logprob: -17.0
    6. 'int' → logprob: -17.375
    7. '   ' → logprob: -18.25
    8. '	init' → logprob: -19.125
    9. '_init' → logprob: -19.375
    10. 'iter' → logprob: -19.5

Token 989: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20857128500938416
    2. '(self' → logprob: -1.7085713148117065
    3. '(' → logprob: -5.458571434020996
    4. '__(
' → logprob: -6.583571434020996
    5. ' (' → logprob: -7.208571434020996
    6. 'self' → logprob: -8.333571434020996
    7. '(
' → logprob: -8.708571434020996
    8. '   ' → logprob: -8.958571434020996
    9. '__' → logprob: -9.583571434020996
    10. '<>(' → logprob: -10.333571434020996

Token 990: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.0590548703912646e-05
    2. ' self' → logprob: -10.750030517578125
    3. '
' → logprob: -12.375030517578125
    4. ')' → logprob: -12.875030517578125
    5. '   ' → logprob: -13.375030517578125
    6. '(self' → logprob: -15.500030517578125
    7. '):
' → logprob: -15.750030517578125
    8. '    
' → logprob: -16.250030517578125
    9. '	self' → logprob: -16.375030517578125
    10. 'source' → logprob: -16.625030517578125

Token 991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18732339143753052
    2. '(self' → logprob: -2.4373233318328857
    3. 'self' → logprob: -2.5623233318328857
    4. '):
' → logprob: -5.812323570251465
    5. '   ' → logprob: -6.437323570251465
    6. '       ' → logprob: -7.312323570251465
    7. ' (' → logprob: -7.812323570251465
    8. ',self' → logprob: -8.562323570251465
    9. ' self' → logprob: -8.687323570251465
    10. ')' → logprob: -9.687323570251465

Token 992: ' parser' (ID: 14216)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07484453171491623
    2. 'solver' → logprob: -3.4498445987701416
    3. 'source' → logprob: -3.5748445987701416
    4. 'self' → logprob: -4.9498443603515625
    5. 'strategy' → logprob: -6.0748443603515625
    6. ' input' → logprob: -6.3248443603515625
    7. 'parser' → logprob: -7.5748443603515625
    8. 'solution' → logprob: -8.949844360351562
    9. 'stdin' → logprob: -8.949844360351562
    10. ' solver' → logprob: -9.199844360351562

Token 993: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22632214426994324
    2. ':' → logprob: -1.6013221740722656
    3. '):' → logprob: -7.601322174072266
    4. ' ,' → logprob: -8.476322174072266
    5. '   ' → logprob: -9.976322174072266
    6. '):
' → logprob: -9.976322174072266
    7. ' :' → logprob: -10.101322174072266
    8. ')' → logprob: -10.476322174072266
    9. '       ' → logprob: -10.976322174072266
    10. ':,' → logprob: -12.476322174072266

Token 994: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -7.896309739408025e-07
    2. ' Input' → logprob: -14.250000953674316
    3. 'input' → logprob: -17.5
    4. '   ' → logprob: -19.125
    5. 'Iterator' → logprob: -20.125
    6. '	Input' → logprob: -20.25
    7. ')' → logprob: -20.25
    8. 'Output' → logprob: -20.375
    9. 'Parser' → logprob: -20.5
    10. '<Input' → logprob: -20.5

Token 995: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.6405310816480778e-05
    2. 'parser' → logprob: -11.750016212463379
    3. '_parser' → logprob: -12.625016212463379
    4. '):
' → logprob: -13.125016212463379
    5. ',' → logprob: -13.750016212463379
    6. ':' → logprob: -14.250016212463379
    7. '   ' → logprob: -14.750016212463379
    8. 'Iterator' → logprob: -15.125016212463379
    9. ')' → logprob: -15.250016212463379
    10. '):' → logprob: -15.625016212463379

Token 996: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003589416155591607
    2. '):
' → logprob: -8.375358581542969
    3. '):' → logprob: -9.875358581542969
    4. ' ,' → logprob: -10.375358581542969
    5. ',
' → logprob: -10.750358581542969
    6. ')' → logprob: -11.500358581542969
    7. '   ' → logprob: -11.625358581542969
    8. '       ' → logprob: -12.500358581542969
    9. ',input' → logprob: -15.000358581542969
    10. '<|end|>' → logprob: -15.875358581542969

Token 997: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.0703895166516304
    2. 'formatter' → logprob: -2.82038950920105
    3. ' solver' → logprob: -4.945389747619629
    4. 'strategy' → logprob: -7.695389747619629
    5. ' formatter' → logprob: -7.945389747619629
    6. 'output' → logprob: -8.695389747619629
    7. 'solution' → logprob: -8.695389747619629
    8. ' strategy' → logprob: -9.695389747619629
    9. ' output' → logprob: -10.945389747619629
    10. 'sol' → logprob: -11.070389747619629

Token 998: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2524771988391876
    2. ',' → logprob: -1.5024771690368652
    3. '):' → logprob: -7.752477169036865
    4. '):
' → logprob: -9.877477645874023
    5. ' ,' → logprob: -10.752477645874023
    6. ')' → logprob: -11.377477645874023
    7. '   ' → logprob: -11.627477645874023
    8. ',
' → logprob: -12.127477645874023
    9. ':s' → logprob: -12.377477645874023
    10. ' :' → logprob: -12.627477645874023

Token 999: ' Solution' (ID: 20858)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.0009139667963609099
    2. ' Solution' → logprob: -7.000914096832275
    3. 'Soph' → logprob: -13.000913619995117
    4. '   ' → logprob: -15.625913619995117
    5. 'Solver' → logprob: -17.000913619995117
    6. 'S' → logprob: -18.500913619995117
    7. ' solution' → logprob: -18.625913619995117
    8. 'solution' → logprob: -18.750913619995117
    9. ' ' → logprob: -19.250913619995117
    10. '       ' → logprob: -19.375913619995117

Token 1000: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.6240566083070007e-06
    2. 'Strateg' → logprob: -14.375001907348633
    3. 'Solver' → logprob: -14.500001907348633
    4. '_strategy' → logprob: -15.625001907348633
    5. ',' → logprob: -16.000001907348633
    6. ' Strategy' → logprob: -16.875001907348633
    7. 'Strategies' → logprob: -16.875001907348633
    8. 'strategy' → logprob: -17.125001907348633
    9. 'Solution' → logprob: -17.500001907348633
    10. ')' → logprob: -17.875001907348633

Token 1001: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.047807276248931885
    2. ',' → logprob: -3.547807216644287
    3. '):' → logprob: -4.047807216644287
    4. '   ' → logprob: -8.422807693481445
    5. ')' → logprob: -8.672807693481445
    6. '):
' → logprob: -11.422807693481445
    7. '       ' → logprob: -11.547807693481445
    8. ' ):
' → logprob: -11.797807693481445
    9. ' ,' → logprob: -12.297807693481445
    10. ' ' → logprob: -13.047807693481445

Token 1002: ' formatter' (ID: 50323)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -0.13108156621456146
    2. 'output' → logprob: -2.1310815811157227
    3. ' output' → logprob: -5.756081581115723
    4. ' formatter' → logprob: -7.756081581115723
    5. 'printer' → logprob: -8.131081581115723
    6. 'writer' → logprob: -8.881081581115723
    7. '   ' → logprob: -9.131081581115723
    8. ' ' → logprob: -12.756081581115723
    9. 'out' → logprob: -13.006081581115723
    10. 'stdout' → logprob: -13.506081581115723

Token 1003: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5537971258163452
    2. '):
' → logprob: -1.1787971258163452
    3. ':' → logprob: -2.1787972450256348
    4. ')' → logprob: -6.053797245025635
    5. '   ' → logprob: -6.678797245025635
    6. ' ):' → logprob: -8.428796768188477
    7. ',' → logprob: -8.678796768188477
    8. '):
' → logprob: -8.803796768188477
    9. '):

' → logprob: -9.053796768188477
    10. ' ):
' → logprob: -10.178796768188477

Token 1004: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -4.6087021473795176e-05
    2. ' Output' → logprob: -10.000045776367188
    3. '	Output' → logprob: -14.750045776367188
    4. '   ' → logprob: -15.500045776367188
    5. 'output' → logprob: -17.125045776367188
    6. ' ' → logprob: -18.000045776367188
    7. '_Output' → logprob: -18.000045776367188
    8. '_output' → logprob: -18.500045776367188
    9. '  ' → logprob: -18.625045776367188
    10. '.Output' → logprob: -18.750045776367188

Token 1005: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -7.822646693966817e-06
    2. ' Formatter' → logprob: -12.750007629394531
    3. '_formatter' → logprob: -13.000007629394531
    4. 'formatter' → logprob: -13.125007629394531
    5. 'Format' → logprob: -14.375007629394531
    6. '   ' → logprob: -17.37500762939453
    7. '):
' → logprob: -18.25000762939453
    8. 'Formatting' → logprob: -18.25000762939453
    9. 'Parser' → logprob: -18.37500762939453
    10. 'Handler' → logprob: -19.37500762939453

Token 1006: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47484201192855835
    2. '):' → logprob: -0.9748420119285583
    3. '   ' → logprob: -7.599842071533203
    4. ')' → logprob: -8.349842071533203
    5. '):
' → logprob: -10.974842071533203
    6. '       ' → logprob: -12.224842071533203
    7. ' ' → logprob: -13.224842071533203
    8. '):

' → logprob: -14.224842071533203
    9. '  ' → logprob: -14.474842071533203
    10. ',' → logprob: -14.474842071533203

Token 1007: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5615160465240479
    2. '       ' → logprob: -0.9365160465240479
    3. 'def' → logprob: -3.311516046524048
    4. ' def' → logprob: -6.936515808105469
    5. '
' → logprob: -9.811515808105469
    6. '	def' → logprob: -9.811515808105469
    7. 'self' → logprob: -10.436515808105469
    8. '    ' → logprob: -11.436515808105469
    9. ' ' → logprob: -11.436515808105469
    10. '    
' → logprob: -11.686515808105469

Token 1008: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009218233171850443
    2. '       ' → logprob: -7.000921726226807
    3. ' self' → logprob: -11.500922203063965
    4. '   ' → logprob: -15.500922203063965
    5. '	self' → logprob: -18.12592124938965
    6. '(self' → logprob: -21.12592124938965
    7. ' ' → logprob: -21.62592124938965
    8. 'def' → logprob: -21.62592124938965
    9. '     ' → logprob: -22.37592124938965
    10. '      ' → logprob: -22.75092124938965

Token 1009: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.0004670153430197388
    2. '.' → logprob: -8.000467300415039
    3. 'parser' → logprob: -9.750467300415039
    4. '.source' → logprob: -9.875467300415039
    5. ' .' → logprob: -12.125467300415039
    6. '.input' → logprob: -12.250467300415039
    7. ' parser' → logprob: -12.375467300415039
    8. '   ' → logprob: -12.625467300415039
    9. '	parser' → logprob: -13.375467300415039
    10. '.processor' → logprob: -13.750467300415039

Token 1010: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8973519206047058
    2. ' =' → logprob: -1.0223519802093506
    3. '.' → logprob: -2.0223519802093506
    4. '.parser' → logprob: -2.6473519802093506
    5. '.source' → logprob: -4.8973517417907715
    6. '   ' → logprob: -5.0223517417907715
    7. '       ' → logprob: -5.5223517417907715
    8. ',' → logprob: -5.5223517417907715
    9. '_parser' → logprob: -6.5223517417907715
    10. '=self' → logprob: -6.8973517417907715

Token 1011: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.0052377874962985516
    2. ' parser' → logprob: -5.255237579345703
    3. 'self' → logprob: -12.755237579345703
    4. '(parser' → logprob: -14.255237579345703
    5. '	parser' → logprob: -14.505237579345703
    6. '.parser' → logprob: -16.755237579345703
    7. '   ' → logprob: -18.130237579345703
    8. '/parser' → logprob: -18.755237579345703
    9. ' self' → logprob: -19.005237579345703
    10. 'parse' → logprob: -19.630237579345703

Token 1012: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009345670696347952
    2. 'self' → logprob: -7.250934600830078
    3. ' self' → logprob: -9.500934600830078
    4. ',' → logprob: -9.625934600830078
    5. '   ' → logprob: -10.375934600830078
    6. '
' → logprob: -10.375934600830078
    7. '<|end|>' → logprob: -11.125934600830078
    8. ',
' → logprob: -13.625934600830078
    9. ',self' → logprob: -13.875934600830078
    10. '(self' → logprob: -14.000934600830078

Token 1013: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2075182944536209
    2. 'self' → logprob: -1.7075183391571045
    3. ' self' → logprob: -5.207518100738525
    4. '   ' → logprob: -7.457518100738525
    5. 'def' → logprob: -10.582518577575684
    6. '	self' → logprob: -12.332518577575684
    7. ' ' → logprob: -13.957518577575684
    8. '
' → logprob: -14.457518577575684
    9. '           ' → logprob: -14.582518577575684
    10. '        ' → logprob: -14.957518577575684

Token 1014: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012640443164855242
    2. 'solver' → logprob: -6.7512640953063965
    3. ' self' → logprob: -9.501263618469238
    4. '       ' → logprob: -11.001263618469238
    5. '   ' → logprob: -13.126263618469238
    6. ' solver' → logprob: -16.126264572143555
    7. '	self' → logprob: -16.501264572143555
    8. 'sol' → logprob: -16.876264572143555
    9. '
' → logprob: -17.126264572143555
    10. ' ' → logprob: -17.501264572143555

Token 1015: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.002201644005253911
    2. '.format' → logprob: -7.127201557159424
    3. '.parser' → logprob: -7.127201557159424
    4. 'solver' → logprob: -8.002202033996582
    5. 'formatter' → logprob: -9.002202033996582
    6. '.' → logprob: -9.752202033996582
    7. '.solution' → logprob: -10.502202033996582
    8. '.source' → logprob: -11.002202033996582
    9. '._' → logprob: -11.627202033996582
    10. '.processor' → logprob: -12.002202033996582

Token 1016: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -1.759734732331708e-05
    2. '   ' → logprob: -12.375017166137695
    3. 'erializer' → logprob: -12.500017166137695
    4. 'olution' → logprob: -12.875017166137695
    5. 'ource' → logprob: -13.375017166137695
    6. '_' → logprob: -14.000017166137695
    7. 'ol' → logprob: -14.500017166137695
    8. 't' → logprob: -14.625017166137695
    9. 'ov' → logprob: -14.625017166137695
    10. 'etter' → logprob: -15.000017166137695

Token 1017: ' =' (ID: 314)
  Prédit: '.solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.003995173145085573
    2. '.' → logprob: -5.753994941711426
    3. ' =' → logprob: -7.628994941711426
    4. '=' → logprob: -8.378994941711426
    5. 'solve' → logprob: -10.253994941711426
    6. '   ' → logprob: -11.003994941711426
    7. ',' → logprob: -11.253994941711426
    8. '.s' → logprob: -11.628994941711426
    9. '.sol' → logprob: -12.253994941711426
    10. ' .' → logprob: -12.378994941711426

Token 1018: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.020559873431921005
    2. ' solver' → logprob: -3.895559787750244
    3. 'solution' → logprob: -11.270560264587402
    4. 'self' → logprob: -13.020560264587402
    5. 'sol' → logprob: -13.645560264587402
    6. 'formatter' → logprob: -14.520560264587402
    7. ' solution' → logprob: -15.145560264587402
    8. '       ' → logprob: -15.270560264587402
    9. '_solver' → logprob: -16.020559310913086
    10. 'solve' → logprob: -16.020559310913086

Token 1019: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0605817548930645
    2. '
' → logprob: -3.310581684112549
    3. '    
' → logprob: -4.435581684112549
    4. '<|end|>' → logprob: -5.185581684112549
    5. 'def' → logprob: -5.685581684112549
    6. '        
' → logprob: -7.435581684112549
    7. '       ' → logprob: -7.685581684112549
    8. ' def' → logprob: -9.185582160949707
    9. '<|end|>' → logprob: -9.435582160949707
    10. '```' → logprob: -9.810582160949707

Token 1020: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08140789717435837
    2. 'def' → logprob: -2.7064077854156494
    3. ' def' → logprob: -5.3314080238342285
    4. '
' → logprob: -5.5814080238342285
    5. '       ' → logprob: -6.2064080238342285
    6. '```' → logprob: -8.20640754699707
    7. '<|end|>' → logprob: -8.58140754699707
    8. '    
' → logprob: -9.45640754699707
    9. '	def' → logprob: -9.45640754699707
    10. ' ' → logprob: -9.58140754699707

Token 1021: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009674987755715847
    2. 'def' → logprob: -5.259675025939941
    3. '       ' → logprob: -5.759675025939941
    4. ' self' → logprob: -6.759675025939941
    5. '   ' → logprob: -9.259675025939941
    6. '
' → logprob: -10.759675025939941
    7. '	self' → logprob: -13.259675025939941
    8. ' def' → logprob: -14.634675025939941
    9. '        
' → logprob: -15.759675025939941
    10. '  ' → logprob: -16.009674072265625

Token 1022: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.0001342903997283429
    2. 'formatter' → logprob: -9.000134468078613
    3. '.form' → logprob: -12.375134468078613
    4. '.source' → logprob: -12.625134468078613
    5. '.parser' → logprob: -13.750134468078613
    6. '.' → logprob: -14.000134468078613
    7. 'format' → logprob: -14.625134468078613
    8. '.processor' → logprob: -14.875134468078613
    9. '.output' → logprob: -15.375134468078613
    10. '_formatter' → logprob: -16.875133514404297

Token 1023: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.00042221311014145613
    2. 'er' → logprob: -8.750422477722168
    3. '   ' → logprob: -8.875422477722168
    4. 'atter' → logprob: -9.500422477722168
    5. '       ' → logprob: -11.375422477722168
    6. '  ' → logprob: -12.000422477722168
    7. ' =' → logprob: -12.250422477722168
    8. '=' → logprob: -12.500422477722168
    9. '```' → logprob: -13.000422477722168
    10. 't' → logprob: -13.125422477722168

Token 1024: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6358891725540161
    2. '=' → logprob: -0.7608891725540161
    3. '.' → logprob: -6.135889053344727
    4. '   ' → logprob: -7.260889053344727
    5. '.format' → logprob: -8.135889053344727
    6. ' ' → logprob: -10.510889053344727
    7. '       ' → logprob: -11.260889053344727
    8. '.=' → logprob: -11.510889053344727
    9. '=format' → logprob: -11.635889053344727
    10. '    ' → logprob: -11.760889053344727

Token 1025: ' formatter' (ID: 50323)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -0.00010628487507347018
    2. ' formatter' → logprob: -9.250105857849121
    3. 'format' → logprob: -11.500105857849121
    4. '   ' → logprob: -19.000106811523438
    5. 'output' → logprob: -19.500106811523438
    6. '(format' → logprob: -20.000106811523438
    7. 'Formatter' → logprob: -20.000106811523438
    8. '_formatter' → logprob: -20.125106811523438
    9. 'formatted' → logprob: -20.375106811523438
    10. 'fmt' → logprob: -20.500106811523438

Token 1026: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013159511145204306
    2. 'def' → logprob: -7.126316070556641
    3. '
' → logprob: -7.876316070556641
    4. '    
' → logprob: -9.00131607055664
    5. '```' → logprob: -12.25131607055664
    6. ' def' → logprob: -13.25131607055664
    7. '        
' → logprob: -14.00131607055664
    8. '<|end|>' → logprob: -14.25131607055664
    9. ' 
' → logprob: -16.00131607055664
    10. '  
' → logprob: -16.12631607055664

Token 1027: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020558119285851717
    2. ' def' → logprob: -6.502055644989014
    3. '   ' → logprob: -7.502055644989014
    4. '	def' → logprob: -13.627056121826172
    5. ' ' → logprob: -16.377056121826172
    6. '```' → logprob: -16.877056121826172
    7. '  ' → logprob: -19.877056121826172
    8. '
' → logprob: -20.377056121826172
    9. '_def' → logprob: -20.627056121826172
    10. 'Def' → logprob: -20.877056121826172

Token 1028: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.941850526549388e-06
    2. ' def' → logprob: -11.750007629394531
    3. '	def' → logprob: -19.37500762939453
    4. '   ' → logprob: -20.12500762939453
    5. '
' → logprob: -23.12500762939453
    6. 'd' → logprob: -23.50000762939453
    7. 'de' → logprob: -24.12500762939453
    8. 'ndef' → logprob: -25.12500762939453
    9. '```' → logprob: -25.25000762939453
    10. ' ' → logprob: -25.87500762939453

Token 1029: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.0002646735229063779
    2. ' run' → logprob: -8.250265121459961
    3. 'process' → logprob: -13.125265121459961
    4. 'execute' → logprob: -14.000265121459961
    5. '_run' → logprob: -15.750265121459961
    6. '.run' → logprob: -15.875265121459961
    7. 'main' → logprob: -15.875265121459961
    8. 'solve' → logprob: -16.37526512145996
    9. '	run' → logprob: -16.37526512145996
    10. 'start' → logprob: -17.62526512145996

Token 1030: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9743012671824545e-05
    2. '(' → logprob: -11.000020027160645
    3. 'self' → logprob: -13.625020027160645
    4. '   ' → logprob: -14.250020027160645
    5. '(
' → logprob: -14.250020027160645
    6. '       ' → logprob: -14.750020027160645
    7. ' (' → logprob: -16.875019073486328
    8. 'def' → logprob: -18.875019073486328
    9. '
' → logprob: -19.250019073486328
    10. '```' → logprob: -19.750019073486328

Token 1031: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04211015999317169
    2. ')' → logprob: -4.417109966278076
    3. '):' → logprob: -4.792109966278076
    4. 'self' → logprob: -4.792109966278076
    5. ',' → logprob: -5.917109966278076
    6. '()' → logprob: -6.167109966278076
    7. '():' → logprob: -6.292109966278076
    8. '   ' → logprob: -6.667109966278076
    9. '):
' → logprob: -6.667109966278076
    10. ')(' → logprob: -6.792109966278076

Token 1032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005686411168426275
    2. 'for' → logprob: -8.125568389892578
    3. ' for' → logprob: -8.500568389892578
    4. '   ' → logprob: -9.625568389892578
    5. '```' → logprob: -13.375568389892578
    6. '	' → logprob: -14.375568389892578
    7. '	for' → logprob: -15.375568389892578
    8. '	   ' → logprob: -15.375568389892578
    9. '           ' → logprob: -15.750568389892578
    10. 'import' → logprob: -15.875568389892578

Token 1033: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008496518130414188
    2. ' for' → logprob: -7.500849723815918
    3. '       ' → logprob: -8.250849723815918
    4. 'import' → logprob: -10.250849723815918
    5. '```' → logprob: -15.875849723815918
    6. 'from' → logprob: -16.7508487701416
    7. 'while' → logprob: -16.8758487701416
    8. '   ' → logprob: -18.1258487701416
    9. '	for' → logprob: -19.2508487701416
    10. 'source' → logprob: -20.2508487701416

Token 1034: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -5.848420551046729e-05
    2. ' problem' → logprob: -9.7500581741333
    3. 'line' → logprob: -16.500059127807617
    4. 'prob' → logprob: -18.000059127807617
    5. '   ' → logprob: -18.250059127807617
    6. 'proble' → logprob: -19.750059127807617
    7. '(problem' → logprob: -19.875059127807617
    8. ' ' → logprob: -20.250059127807617
    9. '_problem' → logprob: -20.250059127807617
    10. 'case' → logprob: -21.375059127807617

Token 1035: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036022020503878593
    2. 'in' → logprob: -5.628602027893066
    3. '	in' → logprob: -14.503602027893066
    4. ',' → logprob: -14.753602027893066
    5. '   ' → logprob: -14.753602027893066
    6. ' ' → logprob: -15.378602027893066
    7. ' =' → logprob: -16.003602981567383
    8. '       ' → logprob: -16.628602981567383
    9. '_in' → logprob: -16.878602981567383
    10. '        ' → logprob: -16.878602981567383

Token 1036: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170225441455841
    2. ' self' → logprob: -6.7511701583862305
    3. '(self' → logprob: -19.876171112060547
    4. '       ' → logprob: -20.876171112060547
    5. '   ' → logprob: -21.501171112060547
    6. '           ' → logprob: -22.001171112060547
    7. '	self' → logprob: -22.626171112060547
    8. '=self' → logprob: -25.001171112060547
    9. '[self' → logprob: -25.126171112060547
    10. '
' → logprob: -25.376171112060547

Token 1037: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.0001097417771234177
    2. 'parser' → logprob: -9.125109672546387
    3. '	parser' → logprob: -14.875109672546387
    4. '.' → logprob: -16.375110626220703
    5. ' parser' → logprob: -16.500110626220703
    6. '.parse' → logprob: -16.500110626220703
    7. '.parsers' → logprob: -17.375110626220703
    8. '.par' → logprob: -17.375110626220703
    9. '   ' → logprob: -18.125110626220703
    10. ' .' → logprob: -18.250110626220703

Token 1038: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.0010573413455858827
    2. ':
' → logprob: -7.001057147979736
    3. '   ' → logprob: -10.001057624816895
    4. ':' → logprob: -10.376057624816895
    5. 'parse' → logprob: -10.626057624816895
    6. '.' → logprob: -10.876057624816895
    7. '           ' → logprob: -12.251057624816895
    8. '.solve' → logprob: -12.251057624816895
    9. '.parser' → logprob: -12.626057624816895
    10. '       ' → logprob: -12.626057624816895

Token 1039: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.06021895259618759
    2. ':
' → logprob: -3.0602190494537354
    3. '           ' → logprob: -4.935218811035156
    4. ':' → logprob: -6.060218811035156
    5. '():' → logprob: -6.310218811035156
    6. '()' → logprob: -8.810218811035156
    7. '):
' → logprob: -10.310218811035156
    8. '():
' → logprob: -11.935218811035156
    9. '()):
' → logprob: -12.185218811035156
    10. '(' → logprob: -12.435218811035156

Token 1040: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.318681188422488e-05
    2. '```' → logprob: -12.00001335144043
    3. ' solution' → logprob: -13.12501335144043
    4. 'solution' → logprob: -13.12501335144043
    5. '<|end|>' → logprob: -14.25001335144043
    6. '               ' → logprob: -14.87501335144043
    7. '            
' → logprob: -15.00001335144043
    8. '	       ' → logprob: -15.50001335144043
    9. '<|end|>' → logprob: -15.75001335144043
    10. '_solution' → logprob: -16.00001335144043

Token 1041: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -0.0018628339748829603
    2. ' solution' → logprob: -6.5018630027771
    3. 'result' → logprob: -8.501862525939941
    4. '           ' → logprob: -8.876862525939941
    5. 'answer' → logprob: -11.126862525939941
    6. '               ' → logprob: -13.126862525939941
    7. '_solution' → logprob: -14.626862525939941
    8. 'Solution' → logprob: -15.876862525939941
    9. ' result' → logprob: -16.126863479614258
    10. 'sol' → logprob: -16.126863479614258

Token 1042: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012509997934103012
    2. '=' → logprob: -4.387509822845459
    3. '<|end|>' → logprob: -16.637510299682617
    4. '        ' → logprob: -16.762510299682617
    5. '       ' → logprob: -16.887510299682617
    6. '=self' → logprob: -17.012510299682617
    7. '           ' → logprob: -17.512510299682617
    8. '    ' → logprob: -17.637510299682617
    9. '＝' → logprob: -17.637510299682617
    10. ' =
' → logprob: -17.762510299682617

Token 1043: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029751529917120934
    2. ' self' → logprob: -3.5297515392303467
    3. '           ' → logprob: -13.779751777648926
    4. '(self' → logprob: -18.52975082397461
    5. '	self' → logprob: -18.90475082397461
    6. '               ' → logprob: -20.52975082397461
    7. '=self' → logprob: -20.77975082397461
    8. '[self' → logprob: -21.65475082397461
    9. '       ' → logprob: -23.52975082397461
    10. '   ' → logprob: -23.65475082397461

Token 1044: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00035536551149562
    2. '.solve' → logprob: -8.00035572052002
    3. 'solver' → logprob: -11.12535572052002
    4. '.' → logprob: -12.50035572052002
    5. '.sol' → logprob: -13.75035572052002
    6. 'solve' → logprob: -16.125354766845703
    7. ' .' → logprob: -16.750354766845703
    8. 'olver' → logprob: -17.625354766845703
    9. '   ' → logprob: -17.625354766845703
    10. 's' → logprob: -17.625354766845703

Token 1045: 'olver' (ID: 13941)
  Prédit: 'olve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.2519793212413788
    2. 'olver' → logprob: -1.5019793510437012
    3. '.solve' → logprob: -11.626978874206543
    4. 'solver' → logprob: -11.751978874206543
    5. 'solve' → logprob: -12.001978874206543
    6. 'elf' → logprob: -12.126978874206543
    7. 'olv' → logprob: -12.376978874206543
    8. 'l' → logprob: -12.376978874206543
    9. 'olved' → logprob: -12.751978874206543
    10. 'ov' → logprob: -13.501978874206543

Token 1046: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -2.558399319241289e-05
    2. '.' → logprob: -10.750025749206543
    3. 'solve' → logprob: -12.875025749206543
    4. ' .' → logprob: -13.500025749206543
    5. '.sol' → logprob: -16.500024795532227
    6. '.run' → logprob: -16.750024795532227
    7. '       ' → logprob: -17.750024795532227
    8. '   ' → logprob: -17.750024795532227
    9. '().' → logprob: -18.000024795532227
    10. '           ' → logprob: -18.750024795532227

Token 1047: '(problem' (ID: 190865)
  Prédit: '(problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(problem' → logprob: -3.128163257315464e-07
    2. '(prob' → logprob: -15.75
    3. 'problem' → logprob: -16.5
    4. '(' → logprob: -18.125
    5. '(pro' → logprob: -19.75
    6. ' problem' → logprob: -21.875
    7. '(
' → logprob: -22.0
    8. '(p' → logprob: -22.0
    9. '(pr' → logprob: -22.125
    10. '.problem' → logprob: -22.25

Token 1048: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03372315689921379
    2. '           ' → logprob: -3.6587231159210205
    3. ')' → logprob: -4.9087233543396
    4. ')
' → logprob: -11.908722877502441
    5. '       ' → logprob: -12.908722877502441
    6. '               ' → logprob: -13.533722877502441
    7. '):
' → logprob: -13.783722877502441
    8. ' )
' → logprob: -14.408722877502441
    9. '          ' → logprob: -15.283722877502441
    10. ')

' → logprob: -15.908722877502441

Token 1049: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006310671451501548
    2. 'print' → logprob: -7.375630855560303
    3. ' print' → logprob: -12.500631332397461
    4. '		' → logprob: -14.625631332397461
    5. '	       ' → logprob: -15.750631332397461
    6. '       ' → logprob: -16.25063133239746
    7. 'output' → logprob: -17.37563133239746
    8. '               ' → logprob: -17.37563133239746
    9. '   ' → logprob: -18.25063133239746
    10. '          ' → logprob: -19.50063133239746

Token 1050: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002714681322686374
    2. '           ' → logprob: -8.250271797180176
    3. ' print' → logprob: -11.500271797180176
    4. 'output' → logprob: -16.37527084350586
    5. 'result' → logprob: -18.75027084350586
    6. '	print' → logprob: -20.75027084350586
    7. '               ' → logprob: -21.87527084350586
    8. 'println' → logprob: -21.87527084350586
    9. '```' → logprob: -22.00027084350586
    10. 'for' → logprob: -22.12527084350586

Token 1051: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. 'self' → logprob: -16.750001907348633
    4. '(
' → logprob: -20.875001907348633
    5. '(Output' → logprob: -21.750001907348633
    6. '[self' → logprob: -21.875001907348633
    7. ' self' → logprob: -22.625001907348633
    8. '=self' → logprob: -22.750001907348633
    9. '	self' → logprob: -23.375001907348633
    10. '(Self' → logprob: -23.500001907348633

Token 1052: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -3.128163257315464e-07
    2. '.form' → logprob: -15.5
    3. '.' → logprob: -18.375
    4. 'formatter' → logprob: -18.375
    5. '.output' → logprob: -18.375
    6. ' .' → logprob: -19.625
    7. '.s' → logprob: -20.625
    8. '=format' → logprob: -20.75
    9. ').' → logprob: -21.0
    10. '.Format' → logprob: -21.125

Token 1053: 'ter' (ID: 399)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6636899709701538
    2. 'ter' → logprob: -0.7886899709701538
    3. '(self' → logprob: -4.163690090179443
    4. '(solution' → logprob: -5.038690090179443
    5. 'self' → logprob: -5.913690090179443
    6. 'ation' → logprob: -6.413690090179443
    7. 'r' → logprob: -6.413690090179443
    8. 'solution' → logprob: -6.788690090179443
    9. 't' → logprob: -7.913690090179443
    10. 'at' → logprob: -8.288689613342285

Token 1054: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -9.13388703338569e-06
    2. 'format' → logprob: -11.750009536743164
    3. ').' → logprob: -14.125009536743164
    4. '.' → logprob: -14.625009536743164
    5. ' .' → logprob: -17.500009536743164
    6. ')' → logprob: -18.250009536743164
    7. '=format' → logprob: -18.375009536743164
    8. ' format' → logprob: -19.125009536743164
    9. '(format' → logprob: -19.500009536743164
    10. '`.' → logprob: -19.875009536743164

Token 1055: '(solution' (ID: 126940)
  Prédit: '(solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(solution' → logprob: -1.9361264946837764e-07
    2. 'solution' → logprob: -15.875
    3. '(sol' → logprob: -17.125
    4. '(' → logprob: -18.25
    5. ')' → logprob: -19.125
    6. '(s' → logprob: -20.375
    7. '(
' → logprob: -20.625
    8. ' (' → logprob: -20.75
    9. '.solution' → logprob: -20.875
    10. ')(' → logprob: -21.0

Token 1056: '))

' (ID: 9746)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009838967584073544
    2. ')' → logprob: -5.134839057922363
    3. '(solution' → logprob: -5.759839057922363
    4. '()' → logprob: -8.134839057922363
    5. '(problem' → logprob: -8.134839057922363
    6. '(' → logprob: -9.509839057922363
    7. '())
' → logprob: -9.509839057922363
    8. ' ())' → logprob: -11.634839057922363
    9. '())

' → logprob: -13.509839057922363
    10. '(()' → logprob: -14.259839057922363

Token 1057: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06263524293899536
    2. 'import' → logprob: -2.8126351833343506
    3. 'def' → logprob: -8.06263542175293
    4. '#' → logprob: -8.56263542175293
    5. '```' → logprob: -9.18763542175293
    6. 'from' → logprob: -10.43763542175293
    7. ' if' → logprob: -10.68763542175293
    8. '<|end|>' → logprob: -12.06263542175293
    9. '#!/' → logprob: -14.81263542175293
    10. '<|end|>' → logprob: -15.93763542175293

Token 1058: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0297523383051157
    2. ' __' → logprob: -3.529752254486084
    3. 'name' → logprob: -13.404752731323242
    4. '```' → logprob: -15.654752731323242
    5. '/__' → logprob: -16.154752731323242
    6. '_name' → logprob: -16.779752731323242
    7. '___' → logprob: -17.154752731323242
    8. 'Name' → logprob: -17.904752731323242
    9. '(__' → logprob: -18.279752731323242
    10. 'if' → logprob: -18.779752731323242

Token 1059: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014126953668892384
    2. ' __' → logprob: -4.889126777648926
    3. 'if' → logprob: -5.764126777648926
    4. 'name' → logprob: -6.639126777648926
    5. ' ==' → logprob: -7.389126777648926
    6. '==' → logprob: -7.389126777648926
    7. ' if' → logprob: -8.764126777648926
    8. '```' → logprob: -9.264126777648926
    9. '_name' → logprob: -9.889126777648926
    10. '__":
' → logprob: -9.889126777648926

Token 1060: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.392202976712724e-06
    2. '__.__' → logprob: -12.125006675720215
    3. '__.' → logprob: -14.875006675720215
    4. '___' → logprob: -15.750006675720215
    5. '__('' → logprob: -16.3750057220459
    6. '__
' → logprob: -16.3750057220459
    7. '____' → logprob: -16.5000057220459
    8. '__["' → logprob: -16.8750057220459
    9. '==' → logprob: -17.0000057220459
    10. 'name' → logprob: -17.2500057220459

Token 1061: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8032684326171875
    2. ' ==' → logprob: -0.8032684326171875
    3. '==' → logprob: -2.4282684326171875
    4. '=="' → logprob: -4.1782684326171875
    5. '=='' → logprob: -7.5532684326171875
    6. '__.__' → logprob: -9.428268432617188
    7. '__":
' → logprob: -9.678268432617188
    8. '"' → logprob: -11.303268432617188
    9. '   ' → logprob: -11.678268432617188
    10. '('__' → logprob: -11.803268432617188

Token 1062: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029757322743535042
    2. ''' → logprob: -3.529757261276245
    3. ' "__' → logprob: -12.029757499694824
    4. '__' → logprob: -14.279757499694824
    5. ' '__' → logprob: -16.029756546020508
    6. '   ' → logprob: -17.779756546020508
    7. '("__' → logprob: -18.154756546020508
    8. '"class' → logprob: -18.154756546020508
    9. '"name' → logprob: -18.154756546020508
    10. '"user' → logprob: -18.279756546020508

Token 1063: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014180435799062252
    2. '__' → logprob: -4.264180660247803
    3. 'name' → logprob: -11.264180183410645
    4. '_main' → logprob: -13.139180183410645
    5. 'built' → logprob: -13.639180183410645
    6. '__":
' → logprob: -15.764180183410645
    7. ' main' → logprob: -15.889180183410645
    8. 'print' → logprob: -16.26418113708496
    9. 'py' → logprob: -16.26418113708496
    10. '___' → logprob: -17.01418113708496

Token 1064: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.017723271623253822
    2. '__' → logprob: -4.267723083496094
    3. '__':
' → logprob: -5.642723083496094
    4. '__
' → logprob: -12.642723083496094
    5. '__:' → logprob: -12.892723083496094
    6. '__.__' → logprob: -13.267723083496094
    7. '__.' → logprob: -13.767723083496094
    8. '__);
' → logprob: -14.767723083496094
    9. '__["' → logprob: -14.767723083496094
    10. '__
' → logprob: -15.267723083496094

Token 1065: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.017227759584784508
    2. '   ' → logprob: -4.767227649688721
    3. ' import' → logprob: -4.767227649688721
    4. '```' → logprob: -10.267228126525879
    5. '	import' → logprob: -10.517228126525879
    6. 'from' → logprob: -11.892228126525879
    7. '    
' → logprob: -13.517228126525879
    8. '
' → logprob: -13.892228126525879
    9. ' from' → logprob: -14.642228126525879
    10. '``' → logprob: -15.017228126525879

Token 1066: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -2.9875325708417222e-05
    2. 'from' → logprob: -11.375029563903809
    3. 'app' → logprob: -11.500029563903809
    4. ' import' → logprob: -11.875029563903809
    5. '   ' → logprob: -13.750029563903809
    6. 'application' → logprob: -15.875029563903809
    7. 'parser' → logprob: -17.000030517578125
    8. '	import' → logprob: -17.375030517578125
    9. 'source' → logprob: -17.875030517578125
    10. 'problem' → logprob: -19.250030517578125

Token 1067: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -6.704273118884885e-07
    2. ' sys' → logprob: -14.250000953674316
    3. '=sys' → logprob: -17.625
    4. 'io' → logprob: -18.625
    5. 'stdin' → logprob: -19.375
    6. '	sys' → logprob: -19.875
    7. '```' → logprob: -21.25
    8. '.sys' → logprob: -21.375
    9. 'os' → logprob: -21.375
    10. 'sy' → logprob: -22.25

Token 1068: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03529447689652443
    2. 'app' → logprob: -4.035294532775879
    3. 'parser' → logprob: -4.160294532775879
    4. '    
' → logprob: -7.410294532775879
    5. 'input' → logprob: -8.285294532775879
    6. ' parser' → logprob: -8.910294532775879
    7. 'application' → logprob: -9.035294532775879
    8. 'source' → logprob: -9.285294532775879
    9. '	parser' → logprob: -9.285294532775879
    10. 'import' → logprob: -10.535294532775879

Token 1069: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42113175988197327
    2. 'app' → logprob: -1.1711317300796509
    3. 'parser' → logprob: -3.4211318492889404
    4. 'input' → logprob: -7.421131610870361
    5. 'application' → logprob: -8.54613208770752
    6. 'source' → logprob: -8.79613208770752
    7. ' app' → logprob: -10.79613208770752
    8. ' parser' → logprob: -11.42113208770752
    9. 'import' → logprob: -12.04613208770752
    10. '    
' → logprob: -12.42113208770752

Token 1070: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -0.05251166969537735
    2. 'parser' → logprob: -3.052511692047119
    3. '   ' → logprob: -6.052511692047119
    4. 'input' → logprob: -7.427511692047119
    5. 'application' → logprob: -7.427511692047119
    6. 'source' → logprob: -8.052511215209961
    7. 'import' → logprob: -10.427511215209961
    8. 'def' → logprob: -11.552511215209961
    9. ' app' → logprob: -11.802511215209961
    10. ' parser' → logprob: -12.677511215209961

Token 1071: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002252910751849413
    2. '=' → logprob: -6.12725305557251
    3. '   ' → logprob: -10.002252578735352
    4. 'lication' → logprob: -11.752252578735352
    5. ' ' → logprob: -12.002252578735352
    6. 'app' → logprob: -13.252252578735352
    7. '_app' → logprob: -13.877252578735352
    8. '.' → logprob: -14.127252578735352
    9. '.py' → logprob: -14.252252578735352
    10. '	' → logprob: -14.252252578735352

Token 1072: ' Meat' (ID: 89131)
  Prédit: 'Me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Me' → logprob: -1.1994775377388578e-05
    2. ' Meat' → logprob: -11.375012397766113
    3. '	Me' → logprob: -15.250012397766113
    4. 'Meal' → logprob: -16.250011444091797
    5. 'M' → logprob: -17.000011444091797
    6. 'Met' → logprob: -18.000011444091797
    7. 'Milk' → logprob: -18.375011444091797
    8. '(Me' → logprob: -18.750011444091797
    9. 'Mo' → logprob: -19.000011444091797
    10. '   ' → logprob: -19.000011444091797

Token 1073: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: 0.0
    2. '_purchase' → logprob: -17.25
    3. ' Purchase' → logprob: -17.875
    4. 'Purch' → logprob: -18.375
    5. 'urchase' → logprob: -19.5
    6. 'purchase' → logprob: -20.5
    7. '   ' → logprob: -22.0
    8. '```' → logprob: -22.0
    9. '
' → logprob: -22.125
    10. 'a' → logprob: -22.5

Token 1074: 'Application' (ID: 6817)
  Prédit: 'Application'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Application' → logprob: -7.896309739408025e-07
    2. 'application' → logprob: -14.625000953674316
    3. 'App' → logprob: -15.500000953674316
    4. 'Problem' → logprob: -18.25
    5. '_application' → logprob: -18.75
    6. 'Me' → logprob: -18.75
    7. ' application' → logprob: -19.625
    8. '	Application' → logprob: -20.0
    9. 'APPLICATION' → logprob: -20.125
    10. 'Purchase' → logprob: -20.375

Token 1075: '(
' (ID: 1607)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.18452869355678558
    2. '(Input' → logprob: -1.8095287084579468
    3. '   ' → logprob: -5.934528827667236
    4. '(
' → logprob: -6.559528827667236
    5. '(iter' → logprob: -8.059528350830078
    6. '(parser' → logprob: -9.184528350830078
    7. ' Input' → logprob: -9.309528350830078
    8. 'parser' → logprob: -9.309528350830078
    9. '(sys' → logprob: -10.434528350830078
    10. '(' → logprob: -10.559528350830078

Token 1076: '       ' (ID: 309)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0007456640596501529
    2. 'parser' → logprob: -7.25074577331543
    3. '       ' → logprob: -11.00074577331543
    4. '   ' → logprob: -11.00074577331543
    5. ' Input' → logprob: -13.12574577331543
    6. ' parser' → logprob: -15.75074577331543
    7. 'Parser' → logprob: -16.62574577331543
    8. '	Input' → logprob: -16.87574577331543
    9. '(Input' → logprob: -17.87574577331543
    10. '(parser' → logprob: -18.12574577331543

Token 1077: ' parser' (ID: 14216)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0015046248445287347
    2. 'parser' (adapté à ' parser') → logprob: -6.501504421234131
    3. 'source' → logprob: -13.501504898071289
    4. ' Input' → logprob: -14.126504898071289
    5. 'input' → logprob: -17.00150489807129
    6. 'Source' → logprob: -17.12650489807129
    7. ' parser' → logprob: -17.62650489807129
    8. 'Parser' → logprob: -17.75150489807129
    9. '(Input' → logprob: -18.62650489807129
    10. '_input' → logprob: -19.37650489807129

Token 1078: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007229181355796754
    2. 'Input' → logprob: -7.250722885131836
    3. '(Input' → logprob: -11.375722885131836
    4. '=input' → logprob: -14.125722885131836
    5. '=sys' → logprob: -14.625722885131836
    6. '=
' → logprob: -16.000722885131836
    7. '<Input' → logprob: -16.000722885131836
    8. 'source' → logprob: -17.000722885131836
    9. ' Input' → logprob: -17.250722885131836
    10. 'Source' → logprob: -17.625722885131836

Token 1079: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -17.75
    3. '   ' → logprob: -20.75
    4. 'input' → logprob: -22.25
    5. '	Input' → logprob: -22.875
    6. '_input' → logprob: -24.875
    7. '<Input' → logprob: -25.0
    8. 'INPUT' → logprob: -25.75
    9. '\Input' → logprob: -25.75
    10. '_Input' → logprob: -26.375

Token 1080: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'parser' → logprob: -15.875
    3. 'Processor' → logprob: -18.75
    4. 'sys' → logprob: -19.25
    5. 'Parse' → logprob: -19.625
    6. 'Handler' → logprob: -20.0
    7. '=sys' → logprob: -20.0
    8. 'Router' → logprob: -20.625
    9. 'Iterator' → logprob: -20.625
    10. '_parser' → logprob: -20.75

Token 1081: '(iter' (ID: 61014)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.062004204839468
    2. '(iter' → logprob: -2.8120040893554688
    3. 'sys' → logprob: -10.562004089355469
    4. 'iter' → logprob: -12.062004089355469
    5. ' iter' → logprob: -13.562004089355469
    6. '=sys' → logprob: -13.687004089355469
    7. '(map' → logprob: -14.062004089355469
    8. '((' → logprob: -14.437004089355469
    9. '(
' → logprob: -15.062004089355469
    10. '   ' → logprob: -15.062004089355469

Token 1082: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -2.1008713702030946e-06
    2. 'sys' → logprob: -13.250001907348633
    3. '=sys' → logprob: -15.125001907348633
    4. ' sys' → logprob: -16.875001907348633
    5. '(input' → logprob: -17.750001907348633
    6. '	sys' → logprob: -18.750001907348633
    7. '(system' → logprob: -20.250001907348633
    8. '(' → logprob: -21.250001907348633
    9. '/sys' → logprob: -21.250001907348633
    10. '(stdin' → logprob: -21.375001907348633

Token 1083: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.758300438988954e-05
    2. '.argv' → logprob: -9.250097274780273
    3. 'stdin' → logprob: -15.000097274780273
    4. '(stdin' → logprob: -15.125097274780273
    5. '.stdout' → logprob: -15.750097274780273
    6. '```' → logprob: -16.250097274780273
    7. '.' → logprob: -16.500097274780273
    8. '.__' → logprob: -16.625097274780273
    9. '.sys' → logprob: -16.750097274780273
    10. ' .' → logprob: -16.875097274780273

Token 1084: '.readline' (ID: 74673)
  Prédit: '())),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())),
' → logprob: -0.420576274394989
    2. ')),
' → logprob: -2.045576333999634
    3. '()' → logprob: -2.670576333999634
    4. '()))' → logprob: -3.045576333999634
    5. '))' → logprob: -3.045576333999634
    6. ')),' → logprob: -3.170576333999634
    7. '.readline' → logprob: -4.920576095581055
    8. '()))
' → logprob: -9.045576095581055
    9. ')),
' → logprob: -9.295576095581055
    10. '.readlines' → logprob: -9.795576095581055

Token 1085: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6165620684623718
    2. '())),
' → logprob: -0.8665620684623718
    3. '()))' → logprob: -4.1165618896484375
    4. ')),
' → logprob: -4.6165618896484375
    5. ')),' → logprob: -5.2415618896484375
    6. 's' → logprob: -5.4915618896484375
    7. '))' → logprob: -6.4915618896484375
    8. 'lines' → logprob: -7.6165618896484375
    9. '())' → logprob: -7.9915618896484375
    10. ',' → logprob: -7.9915618896484375

Token 1086: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.003124479204416275
    2. ''\' → logprob: -6.503124713897705
    3. ''' → logprob: -6.753124713897705
    4. '""' → logprob: -8.253124237060547
    5. '"' → logprob: -8.628124237060547
    6. '"\' → logprob: -11.378124237060547
    7. '''
' → logprob: -13.128124237060547
    8. '''.' → logprob: -15.378124237060547
    9. ''',' → logprob: -16.003124237060547
    10. ' ''' → logprob: -16.253124237060547

Token 1087: '')),
' (ID: 54168)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -1.0625554323196411
    2. '''' → logprob: -1.3125554323196411
    3. '')),' → logprob: -1.5625554323196411
    4. '')),
' → logprob: -1.8125554323196411
    5. ''' → logprob: -4.687555313110352
    6. ''\' → logprob: -6.687555313110352
    7. '')' → logprob: -7.312555313110352
    8. ''))
' → logprob: -8.312555313110352
    9. '''
' → logprob: -8.562555313110352
    10. '")),' → logprob: -8.687555313110352

Token 1088: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.694191038608551
    2. 'solver' → logprob: -0.694191038608551
    3. ' solver' → logprob: -7.194190979003906
    4. '   ' → logprob: -8.319190979003906
    5. '           ' → logprob: -10.069190979003906
    6. '      ' → logprob: -13.819190979003906
    7. 'sol' → logprob: -13.819190979003906
    8. '        ' → logprob: -14.069190979003906
    9. '     ' → logprob: -14.444190979003906
    10. '_solver' → logprob: -14.569190979003906

Token 1089: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.00019293125660624355
    2. '       ' → logprob: -8.625192642211914
    3. ' solver' → logprob: -11.250192642211914
    4. '           ' → logprob: -16.125192642211914
    5. 'sol' → logprob: -16.250192642211914
    6. '   ' → logprob: -16.250192642211914
    7. '        ' → logprob: -17.750192642211914
    8. 'solution' → logprob: -17.750192642211914
    9. 'solve' → logprob: -18.375192642211914
    10. '     ' → logprob: -19.125192642211914

Token 1090: '=S' (ID: 165586)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018350813537836075
    2. '=S' → logprob: -4.018350601196289
    3. 'Soph' → logprob: -8.518350601196289
    4. '=s' → logprob: -14.643350601196289
    5. ' Soph' → logprob: -14.768350601196289
    6. '=
' → logprob: -16.14335060119629
    7. '=

' → logprob: -16.64335060119629
    8. 'S' → logprob: -17.26835060119629
    9. '=`' → logprob: -19.51835060119629
    10. '=A' → logprob: -19.64335060119629

Token 1091: 'oph' (ID: 6502)
  Prédit: 'oph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oph' → logprob: -0.00012368128227535635
    2. 'Soph' → logprob: -9.000123977661133
    3. 'ophi' → logprob: -15.500123977661133
    4. 's' → logprob: -19.250123977661133
    5. ' Soph' → logprob: -19.250123977661133
    6. 'o' → logprob: -19.625123977661133
    7. 'ph' → logprob: -20.000123977661133
    8. 'S' → logprob: -20.000123977661133
    9. 'op' → logprob: -20.250123977661133
    10. '```' → logprob: -20.250123977661133

Token 1092: 'isticated' (ID: 33986)
  Prédit: 'isticated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isticated' → logprob: -1.1472419600977446e-06
    2. 'icated' → logprob: -14.500000953674316
    3. 'istic' → logprob: -14.875000953674316
    4. 'ist' → logprob: -15.375000953674316
    5. 'enticated' → logprob: -17.875001907348633
    6. 'isti' → logprob: -18.500001907348633
    7. 'st' → logprob: -19.000001907348633
    8. 't' → logprob: -20.125001907348633
    9. 'istica' → logprob: -20.125001907348633
    10. 'licated' → logprob: -20.250001907348633

Token 1093: 'Me' (ID: 5507)
  Prédit: 'Me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Me' → logprob: -3.128163257315464e-07
    2. '	Me' → logprob: -15.5
    3. ' Me' → logprob: -18.375
    4. '_me' → logprob: -20.0
    5. '(Me' → logprob: -20.875
    6. '.Me' → logprob: -22.0
    7. 'M' → logprob: -22.125
    8. 'М' → logprob: -22.75
    9. 'Ma' → logprob: -23.0
    10. 'Mer' → logprob: -23.25

Token 1094: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -5.512236498361744e-07
    2. 'ат' → logprob: -16.375
    3. 'At' → logprob: -16.375
    4. ' meat' → logprob: -16.5
    5. ' Meat' → logprob: -16.5
    6. '
' → logprob: -17.0
    7. 'a' → logprob: -17.125
    8. 'att' → logprob: -18.125
    9. 'Purchase' → logprob: -18.25
    10. 'et' → logprob: -18.25

Token 1095: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -4.60414821645827e-06
    2. 'urchase' → logprob: -12.875004768371582
    3. 'purchase' → logprob: -13.750004768371582
    4. '_purchase' → logprob: -14.000004768371582
    5. ' Purchase' → logprob: -16.750003814697266
    6. 'Purch' → logprob: -18.500003814697266
    7. ' purchase' → logprob: -19.125003814697266
    8. '```' → logprob: -19.625003814697266
    9. '_PUR' → logprob: -20.250003814697266
    10. 'Pur' → logprob: -20.500003814697266

Token 1096: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.8624639324116288e-06
    2. 'solver' → logprob: -13.625001907348633
    3. '_solver' → logprob: -15.000001907348633
    4. 'Solve' → logprob: -16.625001907348633
    5. 'Sol' → logprob: -17.375001907348633
    6. ' Solver' → logprob: -17.500001907348633
    7. 'S' → logprob: -18.000001907348633
    8. 'olver' → logprob: -18.125001907348633
    9. ' solver' → logprob: -18.250001907348633
    10. 'Saver' → logprob: -18.625001907348633

Token 1097: '(),
' (ID: 5757)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.4039011597633362
    2. ',' → logprob: -1.2789011001586914
    3. '       ' → logprob: -3.0289011001586914
    4. '   ' → logprob: -5.903901100158691
    5. '(),
' → logprob: -6.028901100158691
    6. ')' → logprob: -9.028901100158691
    7. '(),' → logprob: -9.153901100158691
    8. '),' → logprob: -9.278901100158691
    9. '),
' → logprob: -9.903901100158691
    10. '()' → logprob: -11.278901100158691

Token 1098: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009352823253720999
    2. 'formatter' → logprob: -7.000935077667236
    3. 'format' → logprob: -10.750935554504395
    4. '   ' → logprob: -13.000935554504395
    5. ' formatter' → logprob: -16.750934600830078
    6. 'fmt' → logprob: -18.500934600830078
    7. '      ' → logprob: -18.500934600830078
    8. '           ' → logprob: -18.500934600830078
    9. '     ' → logprob: -18.875934600830078
    10. '_formatter' → logprob: -19.000934600830078

Token 1099: ' formatter' (ID: 50323)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' (adapté à ' formatter') → logprob: -0.00012701898231171072
    2. '       ' → logprob: -9.000126838684082
    3. 'format' → logprob: -12.750126838684082
    4. '   ' → logprob: -14.625126838684082
    5. ' formatter' → logprob: -15.125126838684082
    6. '           ' → logprob: -21.0001277923584
    7. '_formatter' → logprob: -21.8751277923584
    8. 'fmt' → logprob: -22.0001277923584
    9. ' ' → logprob: -22.3751277923584
    10. '  ' → logprob: -22.8751277923584

Token 1100: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05043468996882439
    2. 'Output' → logprob: -3.0504345893859863
    3. '(Output' → logprob: -6.300434589385986
    4. '()' → logprob: -12.050435066223145
    5. '	Output' → logprob: -12.800435066223145
    6. ' Output' → logprob: -14.050435066223145
    7. '.Output' → logprob: -15.550435066223145
    8. ')' → logprob: -15.675435066223145
    9. '_Output' → logprob: -15.925435066223145
    10. '())' → logprob: -16.425434112548828

Token 1101: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. ' Output' → logprob: -20.0
    3. '	Output' → logprob: -20.375
    4. '(Output' → logprob: -21.375
    5. 'output' → logprob: -22.75
    6. 'Input' → logprob: -24.75
    7. '_Output' → logprob: -25.0
    8. '   ' → logprob: -25.75
    9. '.Output' → logprob: -26.25
    10. 'OUTPUT' → logprob: -26.625

Token 1102: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: 0.0
    2. 'Format' → logprob: -19.0
    3. ' Formatter' → logprob: -20.625
    4. 'Parser' → logprob: -20.75
    5. 'formatter' → logprob: -21.5
    6. '_formatter' → logprob: -21.875
    7. 'Form' → logprob: -22.25
    8. 'Printer' → logprob: -22.625
    9. 'Formatted' → logprob: -23.0
    10. 'Validator' → logprob: -24.0

Token 1103: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12755505740642548
    2. ')' → logprob: -2.1275551319122314
    3. ')
' → logprob: -7.377554893493652
    4. '       ' → logprob: -14.377554893493652
    5. ' )' → logprob: -14.752554893493652
    6. '())' → logprob: -15.752554893493652
    7. '()' → logprob: -15.752554893493652
    8. '	' → logprob: -15.752554893493652
    9. ' ' → logprob: -16.00255584716797
    10. '  ' → logprob: -16.37755584716797

Token 1104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007411516737192869
    2. ')
' → logprob: -5.257411479949951
    3. ')' → logprob: -6.132411479949951
    4. ').' → logprob: -12.88241195678711
    5. '    
' → logprob: -15.00741195678711
    6. ' )
' → logprob: -15.38241195678711
    7. ' ' → logprob: -15.50741195678711
    8. '  ' → logprob: -15.88241195678711
    9. ')
' → logprob: -16.00741195678711
    10. '       ' → logprob: -16.25741195678711

Token 1105: ' )
' (ID: 3270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039257798343896866
    2. ')
' (adapté à ' )
') → logprob: -3.539257764816284
    3. ')' → logprob: -4.664258003234863
    4. 'app' → logprob: -10.789258003234863
    5. ').' → logprob: -11.664258003234863
    6. '    
' → logprob: -13.414258003234863
    7. '
' → logprob: -13.539258003234863
    8. ' ' → logprob: -13.914258003234863
    9. '       ' → logprob: -13.914258003234863
    10. '(app' → logprob: -14.664258003234863

Token 1106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016539888747502118
    2. 'app' → logprob: -8.750164985656738
    3. '    
' → logprob: -12.375164985656738
    4. '	app' → logprob: -13.000164985656738
    5. '
' → logprob: -15.625164985656738
    6. '(app' → logprob: -16.250165939331055
    7. ' app' → logprob: -16.500165939331055
    8. '       ' → logprob: -17.375165939331055
    9. '```' → logprob: -17.500165939331055
    10. '   ' → logprob: -18.500165939331055

Token 1107: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -0.01117007341235876
    2. '   ' → logprob: -4.511169910430908
    3. ' app' → logprob: -9.011170387268066
    4. '	app' → logprob: -15.886170387268066
    5. '(app' → logprob: -17.63616943359375
    6. '.app' → logprob: -18.01116943359375
    7. '_app' → logprob: -18.01116943359375
    8. '  ' → logprob: -18.76116943359375
    9. '       ' → logprob: -19.88616943359375
    10. '    
' → logprob: -20.13616943359375

Token 1108: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.000431861262768507
    2. '.' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.250432014465332
    4. ' .' → logprob: -14.750432014465332
    5. '.mainloop' → logprob: -16.625431060791016
    6. '().' → logprob: -17.250431060791016
    7. ' ' → logprob: -17.375431060791016
    8. 'run' → logprob: -17.750431060791016
    9. '	run' → logprob: -18.375431060791016
    10. '.Run' → logprob: -18.625431060791016

Token 1109: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1107
Tokens correctement prédits (1ère position, stricte): 423
Tokens correctement prédits (1ère position, avec adaptation): 471
Tokens correctement prédits (top 10): 847
Précision stricte (1ère position): 38.21%
Précision adaptée (1ère position): 42.55%
Précision (top 10): 76.51%
================================================================================
