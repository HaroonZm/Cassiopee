================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    while True:
        N = int(input())
        if N == 0:
            break
        gems = set()
        for _ in range(N):
            x, y = map(int, input().split())
            gems.add((x, y))
        M = int(input())
        x, y = 10, 10
        collected = set()
        direction_map = {'N': (0, 1), 'E': (1, 0), 'S': (0, -1), 'W': (-1, 0)}
        # Check initial position if there's a gem
        if (x, y) in gems:
            collected.add((x, y))
        for _ in range(M):
            d, l = input().split()
            l = int(l)
            dx, dy = direction_map[d]
            for _ in range(l):
                x += dx
                y += dy
                if (x, y) in gems:
                    collected.add((x, y))
        print("Yes" if collected == gems else "No")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.37190642952919006
    2. '\n' → logprob: -1.7469063997268677
    3. '   ' → logprob: -3.6219065189361572
    4. '    
' → logprob: -3.7469065189361572
    5. ' 
' → logprob: -3.8719065189361572
    6. ''' → logprob: -4.121906280517578
    7. '(' → logprob: -4.621906280517578
    8. '```' → logprob: -4.746906280517578
    9. ' ' → logprob: -5.246906280517578
    10. '    ' → logprob: -5.496906280517578

Token 4: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5992159247398376
    2. '   ' → logprob: -1.4742159843444824
    3. 'pass' → logprob: -2.0992159843444824
    4. 'return' → logprob: -2.8492159843444824
    5. '#' → logprob: -4.224215984344482
    6. 'p' → logprob: -5.224215984344482
    7. '```' → logprob: -5.724215984344482
    8. 'r' → logprob: -5.724215984344482
    9. 'a' → logprob: -5.974215984344482
    10. '\' → logprob: -5.974215984344482

Token 5: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09805969893932343
    2. ' True' → logprob: -2.47305965423584
    3. '  ' → logprob: -5.34805965423584
    4. '    ' → logprob: -5.97305965423584
    5. ' not' → logprob: -7.34805965423584
    6. ' (' → logprob: -7.84805965423584
    7. 'True' → logprob: -9.09805965423584
    8. '"' → logprob: -9.47305965423584
    9. '     ' → logprob: -9.59805965423584
    10. ' ' → logprob: -9.72305965423584

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007713899831287563
    2. ' :' → logprob: -8.250771522521973
    3. '():' → logprob: -8.250771522521973
    4. '       ' → logprob: -9.000771522521973
    5. ':
' → logprob: -9.875771522521973
    6. '):' → logprob: -10.750771522521973
    7. ':**' → logprob: -11.500771522521973
    8. '    ' → logprob: -11.625771522521973
    9. '   ' → logprob: -11.750771522521973
    10. '(:' → logprob: -12.375771522521973

Token 7: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08031278103590012
    2. '        
' → logprob: -3.080312728881836
    3. '```' → logprob: -4.955312728881836
    4. '\n' → logprob: -5.330312728881836
    5. '(' → logprob: -5.705312728881836
    6. '   ' → logprob: -5.830312728881836
    7. '\' → logprob: -6.080312728881836
    8. '`' → logprob: -6.080312728881836
    9. '    ' → logprob: -6.705312728881836
    10. '    
' → logprob: -6.955312728881836

Token 8: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1844078302383423
    2. '    ' → logprob: -1.5594078302383423
    3. '       ' → logprob: -1.8094078302383423
    4. 'user' → logprob: -2.8094077110290527
    5. 'i' → logprob: -2.9344077110290527
    6. 'input' → logprob: -3.1844077110290527
    7. ' ' → logprob: -3.4344077110290527
    8. '        ' → logprob: -3.5594077110290527
    9. 'pass' → logprob: -3.9344077110290527
    10. 'n' → logprob: -4.559407711029053

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5377282500267029
    2. '=' → logprob: -1.7877283096313477
    3. 'o' → logprob: -2.7877283096313477
    4. ' ' → logprob: -2.7877283096313477
    5. '   ' → logprob: -3.5377283096313477
    6. '  ' → logprob: -3.6627283096313477
    7. '_' → logprob: -4.162728309631348
    8. '.' → logprob: -4.912728309631348
    9. '    ' → logprob: -4.912728309631348
    10. 'u' → logprob: -5.037728309631348

Token 10: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.719375729560852
    2. ' input' → logprob: -0.719375729560852
    3. 'input' → logprob: -3.9693756103515625
    4. 'int' → logprob: -4.9693756103515625
    5. ' ' → logprob: -11.094375610351562
    6. '=int' → logprob: -11.719375610351562
    7. ' eval' → logprob: -12.094375610351562
    8. ' randint' → logprob: -12.094375610351562
    9. '<int' → logprob: -12.594375610351562
    10. ' i' → logprob: -12.719375610351562

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013749953359365463
    2. '(input' → logprob: -6.626375198364258
    3. ' (' → logprob: -11.251375198364258
    4. 'input' → logprob: -11.626375198364258
    5. ''' → logprob: -11.751375198364258
    6. '()' → logprob: -11.876375198364258
    7. '('' → logprob: -12.126375198364258
    8. '(
' → logprob: -13.751375198364258
    9. '(space' → logprob: -14.376375198364258
    10. '```' → logprob: -14.376375198364258

Token 12: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027298633009195328
    2. '()' → logprob: -4.027298450469971
    3. '('' → logprob: -5.152298450469971
    4. '("("' → logprob: -6.527298450469971
    5. ')' → logprob: -6.777298450469971
    6. '())' → logprob: -8.652298927307129
    7. '(
' → logprob: -9.152298927307129
    8. ''' → logprob: -9.527298927307129
    9. '(""))' → logprob: -9.652298927307129
    10. '("")' → logprob: -9.902298927307129

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03398948162794113
    2. '<|end|>' → logprob: -4.033989429473877
    3. ')' → logprob: -4.908989429473877
    4. ' ' → logprob: -5.908989429473877
    5. '#' → logprob: -6.908989429473877
    6. '```' → logprob: -7.408989429473877
    7. '        
' → logprob: -7.408989429473877
    8. '        ' → logprob: -7.783989429473877
    9. '   ' → logprob: -7.908989429473877
    10. '    ' → logprob: -8.033989906311035

Token 14: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008773165754973888
    2. ' if' → logprob: -5.758773326873779
    3. '<|end|>' → logprob: -5.883773326873779
    4. '```' → logprob: -7.258773326873779
    5. 'if' (adapté à ' if') → logprob: -7.633773326873779
    6. ' ' → logprob: -7.883773326873779
    7. '   ' → logprob: -8.258772850036621
    8. '        ' → logprob: -8.383772850036621
    9. ')' → logprob: -8.633772850036621
    10. '           ' → logprob: -8.883772850036621

Token 15: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.026128670200705528
    2. ' not' → logprob: -3.7761287689208984
    3. ' ' → logprob: -6.151128768920898
    4. 'N' → logprob: -7.276128768920898
    5. 'not' → logprob: -10.276128768920898
    6. ' ' → logprob: -11.151128768920898
    7. '<|end|>' → logprob: -12.651128768920898
    8. '  ' → logprob: -13.776128768920898
    9. ')' → logprob: -13.776128768920898
    10. ' )' → logprob: -14.901128768920898

Token 16: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030144067481160164
    2. ' <=' → logprob: -4.155144214630127
    3. '==' → logprob: -4.780144214630127
    4. ' <' → logprob: -5.655144214630127
    5. ' >' → logprob: -6.405144214630127
    6. '<|end|>' → logprob: -9.155143737792969
    7. '<=' → logprob: -9.530143737792969
    8. '>' → logprob: -9.655143737792969
    9. '<' → logprob: -9.780143737792969
    10. ')' → logprob: -9.905143737792969

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.043001942336559296
    2. '0' → logprob: -3.168001890182495
    3. ' -' → logprob: -13.293002128601074
    4. ' ' → logprob: -14.918002128601074
    5. '-' → logprob: -15.043002128601074
    6. '  ' → logprob: -16.293001174926758
    7. ')' → logprob: -16.855501174926758
    8. '1' → logprob: -17.105501174926758
    9. '=' → logprob: -17.293001174926758
    10. 's' → logprob: -17.418001174926758

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005245260428637266
    2. ' ' → logprob: -5.255245208740234
    3. '-' → logprob: -11.505245208740234
    4. ' -' → logprob: -14.130245208740234
    5. '   ' → logprob: -16.005245208740234
    6. '1' → logprob: -16.255245208740234
    7. '  ' → logprob: -16.317745208740234
    8. '```' → logprob: -16.380245208740234
    9. '42' → logprob: -16.942745208740234
    10. '=' → logprob: -17.255245208740234

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004135112394578755
    2. '       ' → logprob: -8.37541389465332
    3. ':
' → logprob: -8.87541389465332
    4. '           ' → logprob: -10.87541389465332
    5. ' :' → logprob: -11.75041389465332
    6. ':return' → logprob: -12.12541389465332
    7. '   ' → logprob: -12.37541389465332
    8. '<|end|>' → logprob: -13.62541389465332
    9. '):' → logprob: -13.87541389465332
    10. '():' → logprob: -14.12541389465332

Token 20: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10789289325475693
    2. ':' → logprob: -2.9828929901123047
    3. '       ' → logprob: -2.9828929901123047
    4. '   ' → logprob: -8.482892990112305
    5. ' break' → logprob: -8.482892990112305
    6. '<|end|>' → logprob: -9.357892990112305
    7. '\n' → logprob: -9.482892990112305
    8. ':
' → logprob: -9.607892990112305
    9. '          ' → logprob: -9.857892990112305
    10. '        ' → logprob: -10.107892990112305

Token 21: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3545835316181183
    2. '           ' → logprob: -1.479583501815796
    3. '       ' → logprob: -2.729583501815796
    4. 'break' (adapté à ' break') → logprob: -5.354583740234375
    5. '```' → logprob: -8.479583740234375
    6. '        ' → logprob: -8.604583740234375
    7. '\n' → logprob: -9.354583740234375
    8. '   ' → logprob: -9.479583740234375
    9. '_break' → logprob: -9.604583740234375
    10. '	break' → logprob: -9.604583740234375

Token 22: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.422649621963501
    2. '<|end|>' → logprob: -1.172649621963501
    3. '\' → logprob: -4.547649383544922
    4. '        
' → logprob: -4.922649383544922
    5. '
' → logprob: -5.297649383544922
    6. '\n' → logprob: -5.547649383544922
    7. '```' → logprob: -6.172649383544922
    8. '<|end|>' → logprob: -6.422649383544922
    9. ')' → logprob: -6.547649383544922
    10. '#' → logprob: -7.047649383544922

Token 24: ' gems' (ID: 68945)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03046799823641777
    2. '=' → logprob: -4.280467987060547
    3. '_count' → logprob: -5.405467987060547
    4. '[' → logprob: -5.530467987060547
    5. '_' → logprob: -5.655467987060547
    6. '.' → logprob: -6.155467987060547
    7. 's' → logprob: -6.780467987060547
    8. '_counts' → logprob: -8.155467987060547
    9. '_list' → logprob: -8.780467987060547
    10. ')' → logprob: -9.530467987060547

Token 26: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.028317974880337715
    2. '[]' → logprob: -3.903317928314209
    3. ' list' → logprob: -5.528317928314209
    4. ' [' → logprob: -5.778317928314209
    5. ' {}' → logprob: -7.778317928314209
    6. ' set' → logprob: -9.153318405151367
    7. 'list' → logprob: -9.528318405151367
    8. ' ' → logprob: -10.653318405151367
    9. '[' → logprob: -10.778318405151367
    10. '{}' → logprob: -11.028318405151367

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4298169016838074
    2. '(' → logprob: -1.0548169612884521
    3. '(g' → logprob: -7.804816722869873
    4. '())' → logprob: -9.054817199707031
    5. '([' → logprob: -9.179817199707031
    6. '(range' → logprob: -9.179817199707031
    7. ' ()' → logprob: -9.429817199707031
    8. '(input' → logprob: -10.054817199707031
    9. '([]' → logprob: -10.679817199707031
    10. '()]' → logprob: -10.804817199707031

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35116660594940186
    2. '<|end|>' → logprob: -1.6011666059494019
    3. '   ' → logprob: -2.8511667251586914
    4. ' ' → logprob: -4.226166725158691
    5. ')' → logprob: -4.976166725158691
    6. '<|end|>' → logprob: -5.476166725158691
    7. '    ' → logprob: -6.226166725158691
    8. '\' → logprob: -6.601166725158691
    9. '        
' → logprob: -6.726166725158691
    10. '        ' → logprob: -7.101166725158691

Token 29: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7264881134033203
    2. ' for' → logprob: -0.9764881134033203
    3. '       ' → logprob: -2.7264881134033203
    4. '   ' → logprob: -2.7264881134033203
    5. ' ' → logprob: -5.85148811340332
    6. '	for' → logprob: -6.10148811340332
    7. '    ' → logprob: -6.35148811340332
    8. '        ' → logprob: -8.10148811340332
    9. '```' → logprob: -8.22648811340332
    10. '	' → logprob: -8.60148811340332

Token 30: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.009106588549911976
    2. ' ' → logprob: -5.384106636047363
    3. ' i' → logprob: -5.759106636047363
    4. '_' → logprob: -6.634106636047363
    5. ' ‌' → logprob: -12.759106636047363
    6. ' ' → logprob: -13.509106636047363
    7. 'i' → logprob: -13.759106636047363
    8. ' range' → logprob: -14.509106636047363
    9. ' ▁' → logprob: -14.759106636047363
    10. ' ​' → logprob: -15.009106636047363

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031319864094257355
    2. 'in' → logprob: -3.5313198566436768
    3. ' ' → logprob: -6.531320095062256
    4. ' _' → logprob: -10.406319618225098
    5. 'range' → logprob: -10.531319618225098
    6. 'i' → logprob: -11.031319618225098
    7. ' i' → logprob: -11.031319618225098
    8. '  ' → logprob: -12.156319618225098
    9. '```' → logprob: -12.531319618225098
    10. '_' → logprob: -13.031319618225098

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01605595462024212
    2. ' range' → logprob: -4.141056060791016
    3. 'g' → logprob: -11.641056060791016
    4. '	range' → logprob: -12.141056060791016
    5. '_range' → logprob: -13.141056060791016
    6. 'rang' → logprob: -13.391056060791016
    7. '(range' → logprob: -13.891056060791016
    8. '[' → logprob: -14.641056060791016
    9. 'ran' → logprob: -14.766056060791016
    10. '<|end|>' → logprob: -14.891056060791016

Token 33: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.25396502017974854
    2. '(' → logprob: -1.5039650201797485
    3. ' (' → logprob: -6.503964900970459
    4. '(range' → logprob: -7.878964900970459
    5. ' N' → logprob: -9.753965377807617
    6. '(n' → logprob: -10.003965377807617
    7. ' range' → logprob: -10.378965377807617
    8. 'N' → logprob: -11.253965377807617
    9. 'range' → logprob: -13.003965377807617
    10. ' ' → logprob: -13.253965377807617

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005056452471762896
    2. ')' → logprob: -6.130056381225586
    3. ' ):' → logprob: -6.505056381225586
    4. ':' → logprob: -7.130056381225586
    5. '):
' → logprob: -8.255056381225586
    6. '   ' → logprob: -8.755056381225586
    7. '       ' → logprob: -9.380056381225586
    8. '():' → logprob: -10.630056381225586
    9. ' )' → logprob: -11.505056381225586
    10. ' :' → logprob: -11.630056381225586

Token 35: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3474925458431244
    2. '    ' → logprob: -1.7224925756454468
    3. '<|end|>' → logprob: -2.8474924564361572
    4. '       ' → logprob: -3.8474924564361572
    5. ' ' → logprob: -4.347492694854736
    6. '           ' → logprob: -4.722492694854736
    7. '    
' → logprob: -6.097492694854736
    8. '        ' → logprob: -6.347492694854736
    9. '<|end|>' → logprob: -6.472492694854736
    10. 'input' → logprob: -6.722492694854736

Token 36: ' x' (ID: 1215)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7619568705558777
    2. ' gems' → logprob: -0.8869568705558777
    3. ' line' → logprob: -4.011956691741943
    4. '   ' → logprob: -4.011956691741943
    5. ' gem' → logprob: -4.011956691741943
    6. ' g' → logprob: -4.636956691741943
    7. 'gem' → logprob: -4.761956691741943
    8. 's' → logprob: -5.011956691741943
    9. 'line' → logprob: -5.136956691741943
    10. ' name' → logprob: -5.386956691741943

Token 37: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010068888776004314
    2. '=' → logprob: -4.635068893432617
    3. ',' → logprob: -8.635068893432617
    4. '=int' → logprob: -9.510068893432617
    5. 's' → logprob: -11.135068893432617
    6. '=input' → logprob: -11.260068893432617
    7. ' ' → logprob: -11.760068893432617
    8. '_' → logprob: -11.885068893432617
    9. ' ,' → logprob: -12.385068893432617
    10. 'y' → logprob: -12.885068893432617

Token 38: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08909966796636581
    2. ' y' → logprob: -2.464099645614624
    3. ' ' → logprob: -9.089099884033203
    4. '=' → logprob: -11.214099884033203
    5. '_y' → logprob: -11.464099884033203
    6. '_' → logprob: -12.214099884033203
    7. 'space' → logprob: -12.464099884033203
    8. ' =' → logprob: -12.464099884033203
    9. '    ' → logprob: -12.714099884033203
    10. '	y' → logprob: -12.964099884033203

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07923851162195206
    2. '=' → logprob: -2.7042384147644043
    3. ',' → logprob: -4.704238414764404
    4. ')' → logprob: -8.704238891601562
    5. ' ,' → logprob: -11.329238891601562
    6. ' ' → logprob: -11.579238891601562
    7. '<|end|>' → logprob: -12.204238891601562
    8. ' =)' → logprob: -13.579238891601562
    9. '   ' → logprob: -13.704238891601562
    10. ')=' → logprob: -13.829238891601562

Token 40: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0015171191189438105
    2. 'map' → logprob: -6.501517295837402
    3. ' input' → logprob: -11.501517295837402
    4. ' ' → logprob: -12.876517295837402
    5. ' list' → logprob: -14.501517295837402
    6. '	map' → logprob: -14.501517295837402
    7. ' mapa' → logprob: -15.001517295837402
    8. 'input' → logprob: -15.251517295837402
    9. '   ' → logprob: -16.251516342163086
    10. ' [' → logprob: -16.251516342163086

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0077307261526584625
    2. '(' → logprob: -4.882730960845947
    3. '(input' → logprob: -9.507730484008789
    4. '(str' → logprob: -10.882730484008789
    5. 'int' → logprob: -11.507730484008789
    6. '<int' → logprob: -11.632730484008789
    7. '(lambda' → logprob: -12.257730484008789
    8. '<|end|>' → logprob: -13.132730484008789
    9. ' (' → logprob: -13.882730484008789
    10. '(
' → logprob: -14.132730484008789

Token 42: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09094767272472382
    2. ')' → logprob: -3.5909476280212402
    3. ',' → logprob: -3.7159476280212402
    4. ',input' → logprob: -3.9659476280212402
    5. '<|end|>' → logprob: -4.84094762802124
    6. '(' → logprob: -5.59094762802124
    7. 'input' → logprob: -5.71594762802124
    8. '(),' → logprob: -8.215948104858398
    9. ' input' → logprob: -8.215948104858398
    10. '()' → logprob: -8.715948104858398

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20152007043361664
    2. 'input' → logprob: -1.7015200853347778
    3. ')' → logprob: -9.326519966125488
    4. ' )' → logprob: -11.326519966125488
    5. ',input' → logprob: -13.326519966125488
    6. '(input' → logprob: -13.826519966125488
    7. '=input' → logprob: -13.951519966125488
    8. '	input' → logprob: -14.201519966125488
    9. ' ' → logprob: -14.576519966125488
    10. '<input' → logprob: -15.076519966125488

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5451681974809617e-05
    2. '()' → logprob: -11.125015258789062
    3. '())' → logprob: -15.375015258789062
    4. ' ().' → logprob: -15.500015258789062
    5. ')' → logprob: -16.500015258789062
    6. '()
' → logprob: -16.750015258789062
    7. '(' → logprob: -17.375015258789062
    8. '()))' → logprob: -19.500015258789062
    9. '()[' → logprob: -19.750015258789062
    10. '.split' → logprob: -19.750015258789062

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001613459608051926
    2. 'strip' → logprob: -8.750161170959473
    3. 'rstrip' → logprob: -13.125161170959473
    4. ' split' → logprob: -14.375161170959473
    5. '(split' → logprob: -15.875161170959473
    6. ')' → logprob: -16.87516212463379
    7. 'spl' → logprob: -17.37516212463379
    8. 's' → logprob: -18.37516212463379
    9. '.split' → logprob: -18.50016212463379
    10. ' ' → logprob: -18.87516212463379

Token 46: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06436773389577866
    2. ')' → logprob: -2.9393677711486816
    3. '()' → logprob: -5.564367771148682
    4. '()))' → logprob: -5.689367771148682
    5. '))' → logprob: -6.189367771148682
    6. '())
' → logprob: -9.064367294311523
    7. '')' → logprob: -10.939367294311523
    8. '(' → logprob: -11.564367294311523
    9. '('' → logprob: -12.564367294311523
    10. ' ())' → logprob: -12.689367294311523

Token 47: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5956717729568481
    2. '<|end|>' → logprob: -1.0956717729568481
    3. ')' → logprob: -3.2206716537475586
    4. '           ' → logprob: -3.3456716537475586
    5. ' ' → logprob: -4.470671653747559
    6. '        
' → logprob: -5.345671653747559
    7. '<|end|>' → logprob: -5.345671653747559
    8. '        ' → logprob: -5.845671653747559
    9. '   ' → logprob: -6.220671653747559
    10. ' )' → logprob: -6.345671653747559

Token 48: ' gems' (ID: 68945)
  Prédit: ' gems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gems' → logprob: -0.40405863523483276
    2. 'g' → logprob: -1.1540586948394775
    3. 's' → logprob: -5.529058456420898
    4. ' g' → logprob: -5.904058456420898
    5. '       ' → logprob: -6.154058456420898
    6. '    ' → logprob: -6.654058456420898
    7. ' gem' → logprob: -6.904058456420898
    8. '<|end|>' → logprob: -7.154058456420898
    9. ' ' → logprob: -7.279058456420898
    10. '        ' → logprob: -7.529058456420898

Token 49: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.3872653543949127
    2. '.' → logprob: -1.1372653245925903
    3. '.setdefault' → logprob: -8.7622652053833
    4. '.update' → logprob: -9.0122652053833
    5. ' .' → logprob: -9.5122652053833
    6. '.append' → logprob: -10.5122652053833
    7. ').' → logprob: -12.8872652053833
    8. '.insert' → logprob: -13.3872652053833
    9. '.=' → logprob: -13.5122652053833
    10. '.Add' → logprob: -13.5122652053833

Token 50: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.06438461691141129
    2. '(' → logprob: -2.814384698867798
    3. ' (' → logprob: -6.189384460449219
    4. ' ((' → logprob: -8.189384460449219
    5. '(x' → logprob: -9.439384460449219
    6. ' ' → logprob: -12.439384460449219
    7. '(tuple' → logprob: -14.189384460449219
    8. '(
' → logprob: -14.314384460449219
    9. '   ' → logprob: -15.314384460449219
    10. '(('' → logprob: -16.31438446044922

Token 51: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.000000953674316
    3. ')x' → logprob: -19.375
    4. '   ' → logprob: -20.5
    5. '(x' → logprob: -21.375
    6. ')' → logprob: -21.5
    7. '"x' → logprob: -22.0
    8. '	x' → logprob: -22.0
    9. ' ' → logprob: -22.375
    10. '  ' → logprob: -23.375

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010977147612720728
    2. ',y' → logprob: -7.001097679138184
    3. ' ,' → logprob: -8.626097679138184
    4. ',
' → logprob: -12.501097679138184
    5. '<|end|>' → logprob: -14.876097679138184
    6. '‌,' → logprob: -15.126097679138184
    7. '',' → logprob: -15.251097679138184
    8. ',

' → logprob: -15.376097679138184
    9. '`,' → logprob: -15.501097679138184
    10. '   ' → logprob: -15.626097679138184

Token 53: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25193166732788086
    2. ' y' → logprob: -1.5019316673278809
    3. ' ' → logprob: -13.876932144165039
    4. ')y' → logprob: -14.376932144165039
    5. '	y' → logprob: -14.751932144165039
    6. '    ' → logprob: -15.001932144165039
    7. ')' → logprob: -15.876932144165039
    8. ' ' → logprob: -16.25193214416504
    9. '   ' → logprob: -17.25193214416504
    10. ',y' → logprob: -17.87693214416504

Token 54: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010899738408625126
    2. ')' → logprob: -7.001090049743652
    3. '))
' → logprob: -8.751090049743652
    4. ')))' → logprob: -11.001090049743652
    5. ' ))' → logprob: -13.626090049743652
    6. '       ' → logprob: -13.876090049743652
    7. ')
' → logprob: -15.376090049743652
    8. '))

' → logprob: -15.501090049743652
    9. '   ' → logprob: -15.626090049743652
    10. '),' → logprob: -15.626090049743652

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' M' (ID: 391)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036047017201781273
    2. '=' → logprob: -5.628604888916016
    3. ' ' → logprob: -13.628604888916016
    4. '=int' → logprob: -13.628604888916016
    5. '   ' → logprob: -14.753604888916016
    6. ')' → logprob: -15.253604888916016
    7. '  ' → logprob: -15.378604888916016
    8. '    ' → logprob: -15.378604888916016
    9. '<|end|>' → logprob: -15.378604888916016
    10. ' =)' → logprob: -15.503604888916016

Token 58: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3868839740753174
    2. 'int' → logprob: -1.1368839740753174
    3. '=int' → logprob: -11.886883735656738
    4. '<int' → logprob: -13.011883735656738
    5. '[int' → logprob: -13.386883735656738
    6. '(int' → logprob: -14.136883735656738
    7. ' in' → logprob: -15.011883735656738
    8. '	int' → logprob: -15.136883735656738
    9. ':int' → logprob: -15.261883735656738
    10. '   ' → logprob: -15.886883735656738

Token 59: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0017105208244174719
    2. '(' → logprob: -6.376710414886475
    3. ' (' → logprob: -11.876710891723633
    4. 'input' → logprob: -14.001710891723633
    5. '=input' → logprob: -15.376710891723633
    6. '()' → logprob: -16.001710891723633
    7. ' input' → logprob: -16.376710891723633
    8. '(
' → logprob: -17.251710891723633
    9. '(inputs' → logprob: -17.376710891723633
    10. '<input' → logprob: -17.626710891723633

Token 60: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17098942399024963
    2. '()' → logprob: -1.9209893941879272
    3. ')' → logprob: -4.545989513397217
    4. '()
' → logprob: -9.795989036560059
    5. '())
' → logprob: -10.545989036560059
    6. ' ())' → logprob: -11.920989036560059
    7. '();)' → logprob: -12.420989036560059
    8. ' )' → logprob: -14.045989036560059
    9. '(' → logprob: -14.295989036560059
    10. '()))' → logprob: -14.420989036560059

Token 61: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.16764497756958
    2. ' collected' → logprob: -2.16764497756958
    3. ' count' → logprob: -3.16764497756958
    4. 'count' → logprob: -3.48014497756958
    5. 'caught' → logprob: -3.48014497756958
    6. ' counter' → logprob: -3.66764497756958
    7. ' gems' → logprob: -3.66764497756958
    8. ' jewels' → logprob: -3.66764497756958
    9. ' collection' → logprob: -3.79264497756958
    10. ' points' → logprob: -4.23014497756958

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14563436806201935
    2. 's' → logprob: -2.145634412765503
    3. ',y' → logprob: -5.395634174346924
    4. '_,' → logprob: -5.770634174346924
    5. 'y' → logprob: -6.395634174346924
    6. '_' → logprob: -6.520634174346924
    7. '1' → logprob: -6.520634174346924
    8. '_s' → logprob: -6.645634174346924
    9. '0' → logprob: -7.395634174346924
    10. '2' → logprob: -8.145634651184082

Token 64: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47418105602264404
    2. ' y' → logprob: -0.974181056022644
    3. ' ' → logprob: -10.849181175231934
    4. ' =' → logprob: -11.224181175231934
    5. '    ' → logprob: -11.349181175231934
    6. '<|end|>' → logprob: -11.349181175231934
    7. '	y' → logprob: -11.599181175231934
    8. ',' → logprob: -11.849181175231934
    9. '=' → logprob: -11.974181175231934
    10. '_' → logprob: -11.974181175231934

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47184520959854126
    2. ',' → logprob: -1.3468451499938965
    3. '=' → logprob: -2.2218451499938965
    4. ' +=' → logprob: -5.7218451499938965
    5. ' ' → logprob: -6.9718451499938965
    6. '<|end|>' → logprob: -7.0968451499938965
    7. ' ,' → logprob: -7.3468451499938965
    8. '+' → logprob: -7.5968451499938965
    9. 's' → logprob: -8.096845626831055
    10. '+=' → logprob: -8.346845626831055

Token 66: ' ' (ID: 220)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05778050795197487
    2. 'map' → logprob: -3.6827805042266846
    3. ' ' → logprob: -4.182780742645264
    4. '0' → logprob: -4.307780742645264
    5. ' gems' → logprob: -6.682780742645264
    6. ' list' → logprob: -7.432780742645264
    7. ' input' → logprob: -9.432780265808105
    8. ' gem' → logprob: -9.557780265808105
    9. 'list' → logprob: -10.307780265808105
    10. '1' → logprob: -10.307780265808105

Token 67: '10' (ID: 702)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12231165915727615
    2. '0' → logprob: -2.247311592102051
    3. ' map' → logprob: -5.122311592102051
    4. 'g' → logprob: -6.247311592102051
    5. 'list' → logprob: -7.622311592102051
    6. '1' → logprob: -7.747311592102051
    7. ' ' → logprob: -8.37231159210205
    8. 'gem' → logprob: -9.74731159210205
    9. '[' → logprob: -10.24731159210205
    10. 'int' → logprob: -10.62231159210205

Token 68: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0055490355007350445
    2. ' ' → logprob: -6.25554895401001
    3. '-' → logprob: -7.00554895401001
    4. '**' → logprob: -7.75554895401001
    5. ' -' → logprob: -8.005549430847168
    6. '1' → logprob: -8.380549430847168
    7. ' +' → logprob: -8.630549430847168
    8. '00' → logprob: -8.630549430847168
    9. '7' → logprob: -8.755549430847168
    10. '000' → logprob: -8.755549430847168

Token 69: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12030036747455597
    2. '0' → logprob: -2.37030029296875
    3. ' ' → logprob: -4.12030029296875
    4. '5' → logprob: -6.87030029296875
    5. '1' → logprob: -7.12030029296875
    6. '9' → logprob: -7.74530029296875
    7. '-' → logprob: -7.74530029296875
    8. '20' → logprob: -8.37030029296875
    9. '4' → logprob: -8.62030029296875
    10. '100' → logprob: -8.99530029296875

Token 70: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.022973358631134033
    2. '0' → logprob: -4.022973537445068
    3. '-' → logprob: -6.647973537445068
    4. '1' → logprob: -7.022973537445068
    5. '9' → logprob: -7.147973537445068
    6. '5' → logprob: -7.522973537445068
    7. '20' → logprob: -7.897973537445068
    8. ' ' → logprob: -8.02297306060791
    9. '100' → logprob: -9.02297306060791
    10. '4' → logprob: -9.27297306060791

Token 71: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' collected' (ID: 20480)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27881231904029846
    2. '=' → logprob: -2.1538124084472656
    3. '_' → logprob: -2.5288124084472656
    4. '_g' → logprob: -3.1538124084472656
    5. 'g' → logprob: -6.403812408447266
    6. 'G' → logprob: -6.778812408447266
    7. 's' → logprob: -7.778812408447266
    8. ',' → logprob: -7.903812408447266
    9. '<|end|>' → logprob: -7.903812408447266
    10. '_tokens' → logprob: -8.153812408447266

Token 75: ' set' (ID: 920)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6133193969726562
    2. 'set' → logprob: -0.9883193969726562
    3. ' set' → logprob: -2.9883193969726562
    4. ' ' → logprob: -3.3633193969726562
    5. ' []' → logprob: -7.613319396972656
    6. '[]' → logprob: -7.863319396972656
    7. 'False' → logprob: -9.238319396972656
    8. '{' → logprob: -9.613319396972656
    9. ' {' → logprob: -10.113319396972656
    10. ' False' → logprob: -10.113319396972656

Token 76: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013834332639817148
    2. '(' → logprob: -9.000138282775879
    3. ' ()' → logprob: -12.125138282775879
    4. '(),' → logprob: -13.625138282775879
    5. '()</' → logprob: -13.625138282775879
    6. '()
' → logprob: -14.125138282775879
    7. '()]' → logprob: -14.125138282775879
    8. '()

' → logprob: -14.250138282775879
    9. '([]' → logprob: -14.250138282775879
    10. '()<' → logprob: -14.375138282775879

Token 77: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' direction' (ID: 9262)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023819992318749428
    2. 's' → logprob: -4.398819923400879
    3. '=' → logprob: -4.523819923400879
    4. ' ' → logprob: -8.773819923400879
    5. '_' → logprob: -8.773819923400879
    6. ',' → logprob: -10.023819923400879
    7. ' ,' → logprob: -12.023819923400879
    8. ')' → logprob: -12.023819923400879
    9. '<|end|>' → logprob: -12.023819923400879
    10. ' s' → logprob: -12.273819923400879

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01948172226548195
    2. '=' → logprob: -4.019481658935547
    3. '[' → logprob: -6.644481658935547
    4. ' ' → logprob: -11.769481658935547
    5. ',' → logprob: -12.769481658935547
    6. '<|end|>' → logprob: -12.894481658935547
    7. '  ' → logprob: -13.394481658935547
    8. '={'' → logprob: -13.644481658935547
    9. 's' → logprob: -13.644481658935547
    10. '{' → logprob: -13.769481658935547

Token 81: ' {'' (ID: 11881)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.17081639170646667
    2. '{' → logprob: -2.420816421508789
    3. ' {'' → logprob: -2.795816421508789
    4. '{'' → logprob: -5.545816421508789
    5. ' {"' → logprob: -6.295816421508789
    6. '{"' → logprob: -7.170816421508789
    7. ' {
' → logprob: -8.170816421508789
    8. '{
' → logprob: -9.795816421508789
    9. ' '' → logprob: -9.920816421508789
    10. ' ' → logprob: -10.170816421508789

Token 82: 'N' (ID: 45)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.6946637034416199
    2. 'N' → logprob: -1.6946637630462646
    3. 'R' → logprob: -2.3196637630462646
    4. 'L' → logprob: -2.8196637630462646
    5. 'W' → logprob: -2.9446637630462646
    6. 'w' → logprob: -3.1946637630462646
    7. 'D' → logprob: -4.3196635246276855
    8. 'E' → logprob: -4.5696635246276855
    9. 'u' → logprob: -4.5696635246276855
    10. '^' → logprob: -5.4446635246276855

Token 83: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004251488950103521
    2. ''' → logprob: -5.504251480102539
    3. ':' → logprob: -9.629251480102539
    4. '':'' → logprob: -9.754251480102539
    5. ' ':' → logprob: -10.879251480102539
    6. 'o' → logprob: -11.879251480102539
    7. '':[' → logprob: -12.254251480102539
    8. ''}' → logprob: -12.629251480102539
    9. ''E' → logprob: -12.879251480102539
    10. 'E' → logprob: -12.879251480102539

Token 84: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1434442698955536
    2. ' (' → logprob: -2.018444299697876
    3. '(-' → logprob: -7.643444061279297
    4. '0' → logprob: -8.518444061279297
    5. ' (-' → logprob: -9.768444061279297
    6. '1' → logprob: -11.393444061279297
    7. '(x' → logprob: -11.893444061279297
    8. '[' → logprob: -12.143444061279297
    9. ' ' → logprob: -12.893444061279297
    10. '   ' → logprob: -13.018444061279297

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010387832298874855
    2. ' ' → logprob: -4.635387897491455
    3. '-' → logprob: -7.510387897491455
    4. '(' → logprob: -10.135387420654297
    5. ' -' → logprob: -10.635387420654297
    6. '1' → logprob: -12.135387420654297
    7. ' (' → logprob: -12.510387420654297
    8. ')' → logprob: -13.260387420654297
    9. '   ' → logprob: -13.260387420654297
    10. '  ' → logprob: -13.510387420654297

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013357517309486866
    2. ',-' → logprob: -10.125133514404297
    3. ' ,' → logprob: -10.125133514404297
    4. '1' → logprob: -10.500133514404297
    5. '-' → logprob: -11.750133514404297
    6. ',

' → logprob: -12.500133514404297
    7. ' ' → logprob: -12.875133514404297
    8. ')' → logprob: -12.875133514404297
    9. ',)' → logprob: -13.000133514404297
    10. '<|end|>' → logprob: -13.375133514404297

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2095203995704651
    2. ' ' → logprob: -1.9595203399658203
    3. '-' → logprob: -3.0845203399658203
    4. ' -' → logprob: -6.08452033996582
    5. '   ' → logprob: -10.08452033996582
    6. ')' → logprob: -11.64702033996582
    7. '  ' → logprob: -11.83452033996582
    8. '```' → logprob: -13.02202033996582
    9. '    ' → logprob: -13.45952033996582
    10. '0' → logprob: -13.77202033996582

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09232240170240402
    2. '-' → logprob: -2.59232234954834
    3. ' ' → logprob: -4.34232234954834
    4. ' -' → logprob: -8.09232234954834
    5. ')' → logprob: -11.84232234954834
    6. '   ' → logprob: -12.09232234954834
    7. '2' → logprob: -12.77982234954834
    8. '  ' → logprob: -12.84232234954834
    9. '0' → logprob: -13.90482234954834
    10. '```' → logprob: -13.90482234954834

Token 89: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0067590675316751
    2. ')' → logprob: -5.131759166717529
    3. '),
' → logprob: -7.381759166717529
    4. ' ),' → logprob: -9.506758689880371
    5. ',' → logprob: -10.506758689880371
    6. '),

' → logprob: -10.506758689880371
    7. ')}' → logprob: -10.881758689880371
    8. '   ' → logprob: -11.256758689880371
    9. '       ' → logprob: -11.256758689880371
    10. ''),' → logprob: -11.881758689880371

Token 90: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22048234939575195
    2. ' '' → logprob: -1.845482349395752
    3. '        ' → logprob: -4.095482349395752
    4. '       ' → logprob: -4.720482349395752
    5. ''S' → logprob: -5.220482349395752
    6. '           ' → logprob: -5.970482349395752
    7. ' ' → logprob: -6.095482349395752
    8. '         ' → logprob: -7.220482349395752
    9. ''s' → logprob: -7.470482349395752
    10. ''N' → logprob: -8.095481872558594

Token 91: 'E' (ID: 36)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2970157563686371
    2. 'E' → logprob: -1.4220157861709595
    3. ''S' → logprob: -4.92201566696167
    4. ''E' → logprob: -5.29701566696167
    5. ''' → logprob: -6.29701566696167
    6. ' S' → logprob: -7.29701566696167
    7. ''s' → logprob: -8.672016143798828
    8. 'W' → logprob: -8.672016143798828
    9. 'L' → logprob: -8.797016143798828
    10. ' E' → logprob: -8.922016143798828

Token 92: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04017983376979828
    2. '':' → logprob: -3.29017972946167
    3. '):' → logprob: -7.29017972946167
    4. ',' → logprob: -7.29017972946167
    5. ' :' → logprob: -7.91517972946167
    6. '<|end|>' → logprob: -8.540180206298828
    7. ''):' → logprob: -9.665180206298828
    8. ')' → logprob: -10.290180206298828
    9. '',' → logprob: -11.040180206298828
    10. ''),' → logprob: -11.165180206298828

Token 93: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02672426588833332
    2. '(' → logprob: -3.651724338531494
    3. ' ' → logprob: -8.026723861694336
    4. '<|end|>' → logprob: -9.276723861694336
    5. '0' → logprob: -13.151723861694336
    6. ')' → logprob: -15.026723861694336
    7. ',' → logprob: -15.151723861694336
    8. '  ' → logprob: -15.526723861694336
    9. '1' → logprob: -16.026723861694336
    10. ' ' → logprob: -16.276723861694336

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018610725179314613
    2. ' ' → logprob: -4.268610954284668
    3. '0' → logprob: -5.518610954284668
    4. '(' → logprob: -7.893610954284668
    5. ' (' → logprob: -10.268610954284668
    6. '-' → logprob: -12.518610954284668
    7. '  ' → logprob: -12.643610954284668
    8. '   ' → logprob: -12.643610954284668
    9. ')' → logprob: -13.143610954284668
    10. '```' → logprob: -13.393610954284668

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.504040356958285e-05
    2. ' ,' → logprob: -9.750064849853516
    3. '),' → logprob: -12.875064849853516
    4. ')' → logprob: -13.625064849853516
    5. '<|end|>' → logprob: -13.750064849853516
    6. '0' → logprob: -14.250064849853516
    7. ',),' → logprob: -15.375064849853516
    8. ' ' → logprob: -15.375064849853516
    9. '```' → logprob: -15.625064849853516
    10. ',
' → logprob: -15.875064849853516

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132772147655487
    2. ' ' → logprob: -1.313277244567871
    3. ')' → logprob: -12.063277244567871
    4. '<|end|>' → logprob: -12.563277244567871
    5. ' )' → logprob: -13.250777244567871
    6. '),' → logprob: -13.813277244567871
    7. ' ),' → logprob: -14.500777244567871
    8. '  ' → logprob: -14.625777244567871
    9. ' ' → logprob: -15.125777244567871
    10. ',' → logprob: -15.250777244567871

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815205067396164
    2. ' ' → logprob: -4.018152236938477
    3. ')' → logprob: -13.893152236938477
    4. '  ' → logprob: -15.205652236938477
    5. '   ' → logprob: -15.955652236938477
    6. '),' → logprob: -16.018152236938477
    7. '```' → logprob: -16.080652236938477
    8. '۰' → logprob: -16.268152236938477
    9. ' )' → logprob: -16.705652236938477
    10. ' ' → logprob: -16.768152236938477

Token 98: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02054118551313877
    2. ')' → logprob: -4.020541191101074
    3. ',' → logprob: -6.645541191101074
    4. ')}' → logprob: -7.895541191101074
    5. ' ),' → logprob: -8.020541191101074
    6. ''),' → logprob: -9.020541191101074
    7. '),
' → logprob: -9.395541191101074
    8. '       ' → logprob: -10.020541191101074
    9. '},' → logprob: -10.020541191101074
    10. '   ' → logprob: -10.645541191101074

Token 99: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.4216093122959137
    2. ' '' → logprob: -1.1716092824935913
    3. ''' → logprob: -3.421609401702881
    4. ' ' → logprob: -7.171609401702881
    5. ' S' → logprob: -8.046608924865723
    6. ''s' → logprob: -8.671608924865723
    7. '       ' → logprob: -10.671608924865723
    8. 's' → logprob: -10.796608924865723
    9. '           ' → logprob: -11.046608924865723
    10. '        ' → logprob: -11.171608924865723

Token 100: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20611976087093353
    2. ''S' → logprob: -1.7061197757720947
    3. ''' → logprob: -5.456119537353516
    4. 'W' → logprob: -9.081119537353516
    5. ''s' → logprob: -9.081119537353516
    6. ' S' → logprob: -9.206119537353516
    7. '')' → logprob: -11.206119537353516
    8. ''N' → logprob: -11.206119537353516
    9. ' '' → logprob: -11.956119537353516
    10. '   ' → logprob: -12.081119537353516

Token 101: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.06357927620410919
    2. ':' → logprob: -3.0635793209075928
    3. '):' → logprob: -4.813579082489014
    4. ',' → logprob: -6.188579082489014
    5. '',' → logprob: -6.188579082489014
    6. ''):' → logprob: -6.313579082489014
    7. '')' → logprob: -7.938579082489014
    8. ')' → logprob: -8.188579559326172
    9. ''),' → logprob: -9.563579559326172
    10. '),' → logprob: -10.563579559326172

Token 102: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.34959933161735535
    2. '(' → logprob: -1.2245993614196777
    3. '0' → logprob: -6.974599361419678
    4. ' ' → logprob: -8.59959888458252
    5. ')' → logprob: -11.47459888458252
    6. '<|end|>' → logprob: -11.97459888458252
    7. '```' → logprob: -12.22459888458252
    8. ',' → logprob: -12.34959888458252
    9. ' -' → logprob: -13.22459888458252
    10. '(-' → logprob: -13.47459888458252

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3883839249610901
    2. '-' → logprob: -1.1383838653564453
    3. ' ' → logprob: -7.013383865356445
    4. '(' → logprob: -8.138383865356445
    5. ' -' → logprob: -8.513383865356445
    6. ',' → logprob: -9.888383865356445
    7. '   ' → logprob: -10.763383865356445
    8. '```' → logprob: -11.013383865356445
    9. ')' → logprob: -11.888383865356445
    10. '  ' → logprob: -12.825883865356445

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005854414775967598
    2. '-' → logprob: -7.750585556030273
    3. ',-' → logprob: -9.500585556030273
    4. ' ,' → logprob: -9.750585556030273
    5. ' -' → logprob: -11.750585556030273
    6. '   ' → logprob: -11.875585556030273
    7. '```' → logprob: -13.125585556030273
    8. '-,' → logprob: -14.000585556030273
    9. ' ' → logprob: -14.500585556030273
    10. '       ' → logprob: -14.625585556030273

Token 105: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.4868770196917467e-05
    2. ' -' → logprob: -10.625024795532227
    3. '1' → logprob: -15.375024795532227
    4. '   ' → logprob: -16.375024795532227
    5. ' ' → logprob: -16.625024795532227
    6. '```' → logprob: -16.750024795532227
    7. ')' → logprob: -17.500024795532227
    8. '  ' → logprob: -18.125024795532227
    9. '−' → logprob: -18.125024795532227
    10. '-
' → logprob: -18.375024795532227

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011534435179783031
    2. ' ' → logprob: -9.125115394592285
    3. '),' → logprob: -13.000115394592285
    4. ')' → logprob: -13.250115394592285
    5. '       ' → logprob: -14.500115394592285
    6. '   ' → logprob: -14.625115394592285
    7. ')}' → logprob: -14.750115394592285
    8. '```' → logprob: -15.125115394592285
    9. '0' → logprob: -16.06261444091797
    10. '           ' → logprob: -16.50011444091797

Token 107: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.023438571020960808
    2. ')' → logprob: -4.523438453674316
    3. ')}' → logprob: -4.523438453674316
    4. ',' → logprob: -7.648438453674316
    5. '},' → logprob: -8.023438453674316
    6. ' ),' → logprob: -8.648438453674316
    7. '),'' → logprob: -8.648438453674316
    8. '}' → logprob: -9.398438453674316
    9. '       ' → logprob: -9.523438453674316
    10. '),
' → logprob: -9.773438453674316

Token 108: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.06159977242350578
    2. ''' → logprob: -2.9365997314453125
    3. ''w' → logprob: -5.4365997314453125
    4. ' W' → logprob: -6.8115997314453125
    5. 'W' → logprob: -8.311599731445312
    6. '       ' → logprob: -8.436599731445312
    7. ' ' → logprob: -8.936599731445312
    8. '        ' → logprob: -9.561599731445312
    9. '"W' → logprob: -9.561599731445312
    10. '           ' → logprob: -9.686599731445312

Token 109: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0023241525050252676
    2. ''' → logprob: -6.377324104309082
    3. ' W' → logprob: -7.502324104309082
    4. '   ' → logprob: -11.377324104309082
    5. ' ' → logprob: -11.877324104309082
    6. '')' → logprob: -12.002324104309082
    7. '```' → logprob: -12.002324104309082
    8. '"W' → logprob: -12.127324104309082
    9. ''w' → logprob: -12.252324104309082
    10. '`' → logprob: -12.627324104309082

Token 110: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3320090174674988
    2. ''):' → logprob: -1.4570090770721436
    3. '):' → logprob: -3.2070090770721436
    4. ':' → logprob: -4.8320088386535645
    5. '')' → logprob: -7.3320088386535645
    6. '')}' → logprob: -9.082009315490723
    7. '   ' → logprob: -9.582009315490723
    8. '}:' → logprob: -9.832009315490723
    9. ')':' → logprob: -10.332009315490723
    10. ')' → logprob: -10.457009315490723

Token 111: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.26746174693107605
    2. ' (-' → logprob: -1.5174617767333984
    3. '(' → logprob: -4.267461776733398
    4. ' (' → logprob: -6.642461776733398
    5. ' ' → logprob: -10.142461776733398
    6. '   ' → logprob: -10.767461776733398
    7. ')' → logprob: -11.517461776733398
    8. ' -' → logprob: -11.767461776733398
    9. '  ' → logprob: -13.142461776733398
    10. '-' → logprob: -13.142461776733398

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. ',' → logprob: -14.750032424926758
    4. ')' → logprob: -15.625032424926758
    5. '   ' → logprob: -15.750032424926758
    6. '0' → logprob: -17.625032424926758
    7. '```' → logprob: -18.000032424926758
    8. '    ' → logprob: -18.250032424926758
    9. '<|end|>' → logprob: -18.312532424926758
    10. '  ' → logprob: -18.437532424926758

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009661292657256126
    2. ')}' → logprob: -5.0096611976623535
    3. ')' → logprob: -6.2596611976623535
    4. ' ,' → logprob: -7.2596611976623535
    5. ')}}' → logprob: -9.009661674499512
    6. '),' → logprob: -10.134661674499512
    7. '0' → logprob: -10.384661674499512
    8. ')},' → logprob: -10.634661674499512
    9. ');}' → logprob: -10.634661674499512
    10. ' )' → logprob: -10.759661674499512

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300010949373245
    2. ' ' → logprob: -3.1680002212524414
    3. '   ' → logprob: -14.543000221252441
    4. ')' → logprob: -15.668000221252441
    5. '```' → logprob: -16.417999267578125
    6. '  ' → logprob: -16.605499267578125
    7. '1' → logprob: -16.667999267578125
    8. ' ' → logprob: -16.855499267578125
    9. '۰' → logprob: -17.667999267578125
    10. '    ' → logprob: -17.792999267578125

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017082560807466507
    2. ' ' → logprob: -6.376708030700684
    3. '1' → logprob: -12.126708030700684
    4. '   ' → logprob: -15.126708030700684
    5. ')' → logprob: -15.251708030700684
    6. '```' → logprob: -16.501708984375
    7. '  ' → logprob: -17.814208984375
    8. '       ' → logprob: -17.876708984375
    9. ',' → logprob: -18.064208984375
    10. '۰' → logprob: -18.376708984375

Token 116: ')}
' (ID: 19324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6061588525772095
    2. ')}' → logprob: -0.8561588525772095
    3. '})' → logprob: -4.23115873336792
    4. '}' → logprob: -4.23115873336792
    5. ')}
' → logprob: -8.731159210205078
    6. '   ' → logprob: -8.981159210205078
    7. '       ' → logprob: -9.231159210205078
    8. ' })' → logprob: -9.481159210205078
    9. ' )' → logprob: -10.106159210205078
    10. '')}' → logprob: -10.231159210205078

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010076324455440044
    2. '<|end|>' → logprob: -6.010076522827148
    3. 's' → logprob: -6.260076522827148
    4. ' for' → logprob: -6.760076522827148
    5. 'moves' → logprob: -6.760076522827148
    6. 'movement' → logprob: -7.135076522827148
    7. ' movement' → logprob: -7.760076522827148
    8. ' directions' → logprob: -8.260076522827148
    9. 'for' → logprob: -8.260076522827148
    10. '        
' → logprob: -8.385076522827148

Token 118: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5765402317047119
    2. ' for' → logprob: -2.076540231704712
    3. 'moves' → logprob: -2.076540231704712
    4. '       ' → logprob: -2.326540231704712
    5. 'dire' → logprob: -3.701540231704712
    6. 'commands' → logprob: -4.451539993286133
    7. 'move' → logprob: -4.576539993286133
    8. 'instructions' → logprob: -4.826539993286133
    9. 'steps' → logprob: -5.326539993286133
    10. ' directions' → logprob: -5.326539993286133

Token 119: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7369742393493652
    2. ' for' → logprob: -0.9869742393493652
    3. ' move' → logprob: -3.8619742393493652
    4. ' directions' → logprob: -4.111974239349365
    5. 'moves' → logprob: -4.111974239349365
    6. 'move' → logprob: -4.236974239349365
    7. ' instructions' → logprob: -4.486974239349365
    8. 'dire' → logprob: -4.736974239349365
    9. ' direction' → logprob: -4.986974239349365
    10. 'instructions' → logprob: -4.986974239349365

Token 120: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8075774312019348
    2. ' if' → logprob: -1.18257737159729
    3. ' for' → logprob: -1.80757737159729
    4. ' directions' → logprob: -4.432577610015869
    5. 's' → logprob: -4.682577610015869
    6. 'for' → logprob: -4.807577610015869
    7. '<|end|>' → logprob: -4.807577610015869
    8. ' the' → logprob: -5.182577610015869
    9. 'if' → logprob: -5.432577610015869
    10. 'tokens' → logprob: -5.807577610015869

Token 121: ' position' (ID: 4010)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39552661776542664
    2. ' gems' → logprob: -1.395526647567749
    3. ' for' → logprob: -2.895526647567749
    4. ' collected' → logprob: -4.89552640914917
    5. '_' → logprob: -5.27052640914917
    6. 'g' → logprob: -6.27052640914917
    7. 'if' → logprob: -6.39552640914917
    8. ' ' → logprob: -6.64552640914917
    9. ' _' → logprob: -6.89552640914917
    10. '   ' → logprob: -7.02052640914917

Token 122: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' there's' (ID: 15333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25229308009147644
    2. '(x' → logprob: -1.5022931098937988
    3. ' (' → logprob: -8.00229263305664
    4. '   ' → logprob: -11.87729263305664
    5. '(N' → logprob: -12.00229263305664
    6. ' ' → logprob: -12.75229263305664
    7. 'x' → logprob: -13.00229263305664
    8. '0' → logprob: -13.25229263305664
    9. 'g' → logprob: -13.25229263305664
    10. '  ' → logprob: -13.62729263305664

Token 124: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05903616175055504
    2. 'a' → logprob: -3.3090362548828125
    3. ' (' → logprob: -4.5590362548828125
    4. '(' → logprob: -4.6840362548828125
    5. ' any' → logprob: -7.0590362548828125
    6. 'g' → logprob: -9.684036254882812
    7. ' ' → logprob: -10.559036254882812
    8. '(a' → logprob: -10.934036254882812
    9. ' an' → logprob: -11.184036254882812
    10. 'any' → logprob: -11.309036254882812

Token 125: ' gem' (ID: 9986)
  Prédit: 'gem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gem' → logprob: -0.20319172739982605
    2. ' gem' → logprob: -1.7031917572021484
    3. 'g' → logprob: -6.453191757202148
    4. ' gemstone' → logprob: -9.703191757202148
    5. '```' → logprob: -10.328191757202148
    6. ' ' → logprob: -10.703191757202148
    7. 'Gem' → logprob: -11.328191757202148
    8. ' jewel' → logprob: -11.328191757202148
    9. ' ' → logprob: -11.703191757202148
    10. 'gift' → logprob: -11.828191757202148

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.380639910697937
    2. '
' → logprob: -1.380639910697937
    3. '<|end|>' → logprob: -2.8806400299072266
    4. '        
' → logprob: -5.380640029907227
    5. ' if' → logprob: -6.130640029907227
    6. '  
' → logprob: -7.505640029907227
    7. '<|end|>' → logprob: -7.755640029907227
    8. ',' → logprob: -7.755640029907227
    9. '```' → logprob: -8.630640029907227
    10. 'if' → logprob: -9.130640029907227

Token 127: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6260967254638672
    2. '       ' → logprob: -0.8760967254638672
    3. '<|end|>' → logprob: -3.251096725463867
    4. '   ' → logprob: -6.126096725463867
    5. ' if' → logprob: -6.376096725463867
    6. '        
' → logprob: -6.501096725463867
    7. '  
' → logprob: -6.751096725463867
    8. ' 
' → logprob: -7.126096725463867
    9. '    
' → logprob: -7.251096725463867
    10. '\n' → logprob: -7.751096725463867

Token 128: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31381896138191223
    2. '
' → logprob: -2.31381893157959
    3. 'if' (adapté à ' if') → logprob: -2.43881893157959
    4. '       ' → logprob: -2.56381893157959
    5. ' 
' → logprob: -5.68881893157959
    6. '        
' → logprob: -6.68881893157959
    7. '  
' → logprob: -7.68881893157959
    8. '   ' → logprob: -7.93881893157959
    9. '\n' → logprob: -8.43881893157959
    10. '    
' → logprob: -8.56381893157959

Token 129: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.018260687589645386
    2. '(x' → logprob: -4.018260478973389
    3. '(' → logprob: -9.143260955810547
    4. ' ' → logprob: -13.393260955810547
    5. '(y' → logprob: -13.893260955810547
    6. '   ' → logprob: -14.268260955810547
    7. '(s' → logprob: -15.393260955810547
    8. ' ' → logprob: -16.268260955810547
    9. '(n' → logprob: -16.393260955810547
    10. '(g' → logprob: -16.393260955810547

Token 130: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015594969736412168
    2. '10' → logprob: -6.626559734344482
    3. ' x' → logprob: -8.501559257507324
    4. '0' → logprob: -10.501559257507324
    5. '   ' → logprob: -13.501559257507324
    6. ' ' → logprob: -14.001559257507324
    7. '(x' → logprob: -15.251559257507324
    8. '	x' → logprob: -16.12656021118164
    9. '20' → logprob: -16.50156021118164
    10. '1' → logprob: -16.50156021118164

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001532401074655354
    2. ',y' → logprob: -9.000153541564941
    3. ' ,' → logprob: -10.500153541564941
    4. '<|end|>' → logprob: -14.375153541564941
    5. ',x' → logprob: -14.500153541564941
    6. ',
' → logprob: -14.500153541564941
    7. ')' → logprob: -15.250153541564941
    8. '‌,' → logprob: -16.500152587890625
    9. '```' → logprob: -17.000152587890625
    10. '-' → logprob: -17.562652587890625

Token 132: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007107630372047424
    2. ' y' → logprob: -7.250710964202881
    3. '10' → logprob: -15.000710487365723
    4. '	y' → logprob: -15.375710487365723
    5. '   ' → logprob: -15.750710487365723
    6. ' ' → logprob: -16.87571144104004
    7. '    ' → logprob: -17.12571144104004
    8. '  ' → logprob: -18.12571144104004
    9. ')y' → logprob: -18.37571144104004
    10. '     ' → logprob: -18.37571144104004

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.049755782238208e-05
    2. ' )' → logprob: -10.62505054473877
    3. 'in' → logprob: -11.00005054473877
    4. ' in' → logprob: -11.75005054473877
    5. '')' → logprob: -15.50005054473877
    6. '")' → logprob: -15.87505054473877
    7. '       ' → logprob: -16.000049591064453
    8. '   ' → logprob: -16.000049591064453
    9. ')==' → logprob: -16.125049591064453
    10. '())' → logprob: -16.250049591064453

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00976305641233921
    2. 'in' → logprob: -4.634763240814209
    3. ')' → logprob: -12.63476276397705
    4. ' ' → logprob: -13.13476276397705
    5. ' ' → logprob: -13.75976276397705
    6. '	in' → logprob: -15.75976276397705
    7. 'In' → logprob: -15.88476276397705
    8. ' not' → logprob: -15.88476276397705
    9. '   ' → logprob: -16.259763717651367
    10. '[' → logprob: -16.384763717651367

Token 135: ' gems' (ID: 68945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.06995043158531189
    2. ' gems' → logprob: -2.6949503421783447
    3. 'gem' → logprob: -12.319950103759766
    4. '	g' → logprob: -12.819950103759766
    5. '_g' → logprob: -12.819950103759766
    6. 's' → logprob: -13.319950103759766
    7. ' g' → logprob: -14.819950103759766
    8. '(g' → logprob: -15.194950103759766
    9. ' germs' → logprob: -15.319950103759766
    10. ' gem' → logprob: -15.569950103759766

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.286479115486145
    2. ':
' → logprob: -1.411479115486145
    3. '           ' → logprob: -5.2864789962768555
    4. '):
' → logprob: -9.161478996276855
    5. '):' → logprob: -9.661478996276855
    6. ',' → logprob: -10.161478996276855
    7. ' and' → logprob: -10.411478996276855
    8. '       ' → logprob: -12.536478996276855
    9. ')' → logprob: -12.786478996276855
    10. '.' → logprob: -12.786478996276855

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009578176774084568
    2. ' collected' → logprob: -5.009578227996826
    3. ':
' → logprob: -6.259578227996826
    4. ',' → logprob: -7.509578227996826
    5. ':' → logprob: -9.509577751159668
    6. '
' → logprob: -9.634577751159668
    7. 'col' → logprob: -9.759577751159668
    8. '   ' → logprob: -10.259577751159668
    9. '):
' → logprob: -10.759577751159668
    10. '       ' → logprob: -10.884577751159668

Token 138: ' collected' (ID: 20480)
  Prédit: ' collected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collected' → logprob: -0.13518667221069336
    2. 'col' → logprob: -2.1351866722106934
    3. '           ' → logprob: -5.135186672210693
    4. '               ' → logprob: -6.510186672210693
    5. '   ' → logprob: -7.385186672210693
    6. '       ' → logprob: -9.010187149047852
    7. ' col' → logprob: -10.760187149047852
    8. '
' → logprob: -10.885187149047852
    9. ' ' → logprob: -11.385187149047852
    10. '_col' → logprob: -11.885187149047852

Token 139: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0038183683063834906
    2. '.' → logprob: -5.628818511962891
    3. '.update' → logprob: -8.50381851196289
    4. '.append' → logprob: -11.75381851196289
    5. '.remove' → logprob: -12.25381851196289
    6. 'add' → logprob: -13.87881851196289
    7. '.setdefault' → logprob: -14.62881851196289
    8. '.insert' → logprob: -14.87881851196289
    9. '.union' → logprob: -14.87881851196289
    10. ' .' → logprob: -15.12881851196289

Token 140: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. ' ((' → logprob: -16.12502098083496
    4. '(((' → logprob: -17.62502098083496
    5. '(x' → logprob: -18.00002098083496
    6. '(
' → logprob: -18.12502098083496
    7. ' ' → logprob: -19.62502098083496
    8. ' (' → logprob: -20.50002098083496
    9. '(('' → logprob: -20.50002098083496
    10. '   ' → logprob: -21.50002098083496

Token 141: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. '10' → logprob: -13.500001907348633
    3. ' x' → logprob: -15.000001907348633
    4. '(x' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '(' → logprob: -19.125001907348633
    7. ' ' → logprob: -19.125001907348633
    8. '```' → logprob: -20.750001907348633
    9. '"x' → logprob: -20.750001907348633
    10. '0' → logprob: -21.000001907348633

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.621933451038785e-05
    2. 'x' → logprob: -10.250056266784668
    3. ' ,' → logprob: -11.875056266784668
    4. ',x' → logprob: -12.250056266784668
    5. '[' → logprob: -13.125056266784668
    6. ',y' → logprob: -13.125056266784668
    7. ')' → logprob: -13.500056266784668
    8. '<|end|>' → logprob: -13.750056266784668
    9. '```' → logprob: -14.875056266784668
    10. '-' → logprob: -14.875056266784668

Token 143: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001706963055767119
    2. ' y' → logprob: -6.376707077026367
    3. '10' → logprob: -12.376707077026367
    4. ' ' → logprob: -14.876707077026367
    5. '20' → logprob: -16.876707077026367
    6. 'x' → logprob: -17.126707077026367
    7. '	y' → logprob: -17.876707077026367
    8. ')y' → logprob: -18.001707077026367
    9. '```' → logprob: -18.251707077026367
    10. 'y's' → logprob: -18.376707077026367

Token 144: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004203882534056902
    2. '))' → logprob: -5.504203796386719
    3. ')
' → logprob: -9.004203796386719
    4. ')

' → logprob: -14.754203796386719
    5. ' )' → logprob: -14.754203796386719
    6. '))
' → logprob: -14.754203796386719
    7. ')`' → logprob: -15.004203796386719
    8. '           ' → logprob: -15.129203796386719
    9. ')))' → logprob: -15.504203796386719
    10. ')}' → logprob: -15.629203796386719

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6002682447433472
    2. '<|end|>' → logprob: -0.9752682447433472
    3. '
' → logprob: -2.7252683639526367
    4. '        
' → logprob: -5.725268363952637
    5. '<|end|>' → logprob: -5.975268363952637
    6. ' 
' → logprob: -7.600268363952637
    7. ',' → logprob: -7.725268363952637
    8. '  
' → logprob: -8.225268363952637
    9. '    
' → logprob: -8.475268363952637
    10. ' for' → logprob: -8.725268363952637

Token 146: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14437167346477509
    2. ' for' → logprob: -2.644371747970581
    3. 'for' (adapté à ' for') → logprob: -2.894371747970581
    4. '        
' → logprob: -6.019371509552002
    5. ' directions' → logprob: -6.019371509552002
    6. '
' → logprob: -6.769371509552002
    7. 'moves' → logprob: -8.14437198638916
    8. 'dire' → logprob: -8.14437198638916
    9. 'direction' → logprob: -8.64437198638916
    10. '```' → logprob: -8.64437198638916

Token 147: ' _' (ID: 1175)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.0175930261611938
    2. ' move' → logprob: -1.2675930261611938
    3. ' command' → logprob: -2.3925929069519043
    4. ' _' → logprob: -3.1425929069519043
    5. ' cmd' → logprob: -3.1425929069519043
    6. ' i' → logprob: -3.3925929069519043
    7. ' step' → logprob: -3.5175929069519043
    8. ' instruction' → logprob: -3.6425929069519043
    9. 'c' → logprob: -4.267592906951904
    10. 'move' → logprob: -4.392592906951904

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28742387890815735
    2. 'range' → logprob: -1.787423849105835
    3. ' range' → logprob: -2.787423849105835
    4. 'in' → logprob: -4.537424087524414
    5. ' ' → logprob: -5.537424087524414
    6. ''' → logprob: -6.037424087524414
    7. ' '' → logprob: -6.787424087524414
    8. '(' → logprob: -7.912424087524414
    9. ''s' → logprob: -8.162424087524414
    10. ' line' → logprob: -8.287424087524414

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1256653219461441
    2. 'input' → logprob: -2.6256654262542725
    3. ' range' → logprob: -3.1256654262542725
    4. ' input' → logprob: -6.500665187835693
    5. 'g' → logprob: -9.375665664672852
    6. '(range' → logprob: -9.875665664672852
    7. 'ange' → logprob: -10.000665664672852
    8. ' ' → logprob: -11.250665664672852
    9. 'put' → logprob: -11.500665664672852
    10. '(input' → logprob: -11.688165664672852

Token 150: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0009404043667018414
    2. '(' → logprob: -7.000940322875977
    3. ' (' → logprob: -10.750940322875977
    4. 'M' → logprob: -12.375940322875977
    5. ' M' → logprob: -13.750940322875977
    6. '(m' → logprob: -14.125940322875977
    7. '()' → logprob: -15.125940322875977
    8. '(
' → logprob: -15.750940322875977
    9. '(N' → logprob: -15.875940322875977
    10. '(S' → logprob: -16.250940322875977

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07046940177679062
    2. '):
' → logprob: -2.695469379425049
    3. ':' → logprob: -7.820469379425049
    4. ' ):' → logprob: -10.195469856262207
    5. '   ' → logprob: -10.320469856262207
    6. '):
' → logprob: -10.695469856262207
    7. ',' → logprob: -11.445469856262207
    8. '       ' → logprob: -11.695469856262207
    9. ':
' → logprob: -12.070469856262207
    10. '):

' → logprob: -12.820469856262207

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05826466158032417
    2. '       ' → logprob: -3.05826473236084
    3. ':' → logprob: -5.43326473236084
    4. ',' → logprob: -6.18326473236084
    5. '   ' → logprob: -6.68326473236084
    6. ':
' → logprob: -7.43326473236084
    7. '<|end|>' → logprob: -7.93326473236084
    8. 'n' → logprob: -8.68326473236084
    9. 'tokens' → logprob: -9.30826473236084
    10. 's' → logprob: -9.43326473236084

Token 153: ' d' (ID: 272)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.7797605991363525
    2. 'move' → logprob: -1.1547605991363525
    3. 'cmd' → logprob: -2.6547605991363525
    4. 'command' → logprob: -3.1547605991363525
    5. 'd' (adapté à ' d') → logprob: -3.7797605991363525
    6. ' command' → logprob: -3.7797605991363525
    7. ' cmd' → logprob: -4.404760360717773
    8. ' d' → logprob: -5.029760360717773
    9. '   ' → logprob: -5.029760360717773
    10. 's' → logprob: -5.279760360717773

Token 154: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10534350574016571
    2. '=' → logprob: -2.9803435802459717
    3. 'irection' → logprob: -3.4803435802459717
    4. ',' → logprob: -4.480343341827393
    5. 'ir' → logprob: -5.230343341827393
    6. 'irections' → logprob: -6.605343341827393
    7. 'ire' → logprob: -9.23034381866455
    8. 'irect' → logprob: -9.48034381866455
    9. 'IRECTION' → logprob: -9.98034381866455
    10. 'i' → logprob: -10.48034381866455

Token 155: ' l' (ID: 305)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -1.127502202987671
    2. 's' → logprob: -1.377502202987671
    3. 'k' → logprob: -1.752502202987671
    4. 'l' → logprob: -2.502502202987671
    5. '_' → logprob: -2.627502202987671
    6. ' s' → logprob: -3.877502202987671
    7. '_=' → logprob: -4.00250244140625
    8. ' steps' → logprob: -4.75250244140625
    9. 't' → logprob: -4.87750244140625
    10. 'c' → logprob: -5.00250244140625

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760549306869507
    2. ' =' → logprob: -0.8260549306869507
    3. 'ength' → logprob: -9.451054573059082
    4. 'en' → logprob: -10.951054573059082
    5. ' ' → logprob: -11.576054573059082
    6. 'ine' → logprob: -12.951054573059082
    7. '=input' → logprob: -13.201054573059082
    8. '=int' → logprob: -13.326054573059082
    9. '=line' → logprob: -13.951054573059082
    10. 'ist' → logprob: -14.451054573059082

Token 157: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868755102157593
    2. ' input' → logprob: -1.1368755102157593
    3. ' ' → logprob: -12.63687515258789
    4. '(input' → logprob: -15.26187515258789
    5. '   ' → logprob: -15.38687515258789
    6. '	input' → logprob: -15.63687515258789
    7. 'map' → logprob: -15.76187515258789
    8. '=input' → logprob: -15.76187515258789
    9. '    ' → logprob: -16.13687515258789
    10. '  ' → logprob: -16.88687515258789

Token 158: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9027791495318525e-05
    2. '()' → logprob: -11.750019073486328
    3. '(' → logprob: -12.375019073486328
    4. ' ().' → logprob: -12.625019073486328
    5. '('' → logprob: -12.750019073486328
    6. '()
' → logprob: -16.000019073486328
    7. '   ' → logprob: -16.125019073486328
    8. '=' → logprob: -16.375019073486328
    9. '.' → logprob: -16.500019073486328
    10. '.split' → logprob: -16.875019073486328

Token 159: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -14.250000953674316
    3. 'strip' → logprob: -14.750000953674316
    4. 'spl' → logprob: -17.000001907348633
    5. '(split' → logprob: -17.625001907348633
    6. 'rstrip' → logprob: -19.250001907348633
    7. '.split' → logprob: -21.000001907348633
    8. '_split' → logprob: -22.250001907348633
    9. 'rs' → logprob: -22.500001907348633
    10. 'sp' → logprob: -22.750001907348633

Token 160: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0064802877604961395
    2. ',' → logprob: -5.2564802169799805
    3. '()
' → logprob: -7.6314802169799805
    4. ')' → logprob: -7.7564802169799805
    5. '(' → logprob: -9.25648021697998
    6. '<|end|>' → logprob: -9.38148021697998
    7. '(),' → logprob: -9.75648021697998
    8. '();' → logprob: -10.50648021697998
    9. '<|end|>' → logprob: -11.50648021697998
    10. '[' → logprob: -11.88148021697998

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11270514875650406
    2. '<|end|>' → logprob: -2.4877052307128906
    3. '       ' → logprob: -4.487705230712891
    4. '<|end|>' → logprob: -4.862705230712891
    5. '            
' → logprob: -6.987705230712891
    6. ',' → logprob: -7.237705230712891
    7. '               ' → logprob: -7.737705230712891
    8. '            ' → logprob: -7.862705230712891
    9. ' ' → logprob: -7.862705230712891
    10. ' l' → logprob: -8.23770523071289

Token 162: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.10909420996904373
    2. ' ' → logprob: -2.4840941429138184
    3. 'l' (adapté à ' l') → logprob: -4.484094142913818
    4. ' 
' → logprob: -5.359094142913818
    5. '            ' → logprob: -6.609094142913818
    6. '<|end|>' → logprob: -6.984094142913818
    7. '           ' → logprob: -7.984094142913818
    8. ' for' → logprob: -8.234094619750977
    9. ' ' → logprob: -8.484094619750977
    10. 'for' → logprob: -8.734094619750977

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12705199420452118
    2. ' =' → logprob: -2.127052068710327
    3. '=int' → logprob: -9.002052307128906
    4. ')' → logprob: -14.752052307128906
    5. 'int' → logprob: -15.877052307128906
    6. '=
' → logprob: -16.502052307128906
    7. ' ' → logprob: -16.627052307128906
    8. ' =
' → logprob: -17.627052307128906
    9. '=l' → logprob: -17.752052307128906
    10. ',' → logprob: -17.877052307128906

Token 164: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020667314529419
    2. ' int' → logprob: -2.3502066135406494
    3. ' ' → logprob: -19.60020637512207
    4. '=int' → logprob: -19.60020637512207
    5. '[int' → logprob: -20.10020637512207
    6. '<int' → logprob: -20.60020637512207
    7. '	int' → logprob: -21.10020637512207
    8. '(int' → logprob: -21.60020637512207
    9. ':int' → logprob: -21.97520637512207
    10. ' ' → logprob: -22.72520637512207

Token 165: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0004338877333793789
    2. '(' → logprob: -7.750433921813965
    3. ' (' → logprob: -12.750433921813965
    4. '()' → logprob: -16.37543296813965
    5. ')' → logprob: -16.50043296813965
    6. '(li' → logprob: -17.37543296813965
    7. '(
' → logprob: -17.50043296813965
    8. '(line' → logprob: -17.87543296813965
    9. ',l' → logprob: -18.12543296813965
    10. '(len' → logprob: -18.50043296813965

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008111746865324676
    2. ')
' → logprob: -7.1258111000061035
    3. ' )' → logprob: -12.250811576843262
    4. ')

' → logprob: -15.000811576843262
    5. ')
' → logprob: -15.125811576843262
    6. '<|end|>' → logprob: -15.125811576843262
    7. '       ' → logprob: -15.250811576843262
    8. ')#' → logprob: -16.000810623168945
    9. '   ' → logprob: -16.375810623168945
    10. ' )
' → logprob: -16.500810623168945

Token 167: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4702475070953369
    2. '           ' → logprob: -1.095247507095337
    3. '<|end|>' → logprob: -3.845247507095337
    4. '       ' → logprob: -4.845247268676758
    5. ' for' → logprob: -4.970247268676758
    6. '            
' → logprob: -6.720247268676758
    7. '  
' → logprob: -7.220247268676758
    8. '<|end|>' → logprob: -7.345247268676758
    9. '        
' → logprob: -7.470247268676758
    10. 'for' → logprob: -8.095247268676758

Token 168: ' dx' (ID: 29472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2049856036901474
    2. 'for' → logprob: -1.7049856185913086
    3. '       ' → logprob: -5.829985618591309
    4. '           ' → logprob: -7.454985618591309
    5. '
' → logprob: -10.704985618591309
    6. ' 
' → logprob: -12.079985618591309
    7. '        
' → logprob: -12.204985618591309
    8. '        ' → logprob: -12.329985618591309
    9. '   ' → logprob: -13.079985618591309
    10. '            
' → logprob: -13.329985618591309

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.458980300929397e-05
    2. ',d' → logprob: -10.00008487701416
    3. ' ,' → logprob: -10.75008487701416
    4. '<|end|>' → logprob: -11.75008487701416
    5. ',y' → logprob: -12.50008487701416
    6. ',
' → logprob: -12.75008487701416
    7. ',n' → logprob: -14.12508487701416
    8. '‌,' → logprob: -14.62508487701416
    9. ',user' → logprob: -15.75008487701416
    10. ')' → logprob: -15.75008487701416

Token 170: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.5009579062461853
    2. 'dy' → logprob: -1.00095796585083
    3. ' direction' → logprob: -4.12595796585083
    4. 'direction' → logprob: -4.62595796585083
    5. '<|end|>' → logprob: -7.75095796585083
    6. ' ' → logprob: -9.250957489013672
    7. 'd' → logprob: -10.875957489013672
    8. 'y' → logprob: -12.375957489013672
    9. '.dy' → logprob: -12.500957489013672
    10. '<|end|>' → logprob: -12.875957489013672

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693503499031067
    2. '=' → logprob: -2.1269350051879883
    3. ')' → logprob: -12.501935005187988
    4. '<|end|>' → logprob: -12.876935005187988
    5. ' ' → logprob: -15.876935005187988
    6. '   ' → logprob: -16.001935958862305
    7. ')=' → logprob: -16.376935958862305
    8. ']' → logprob: -16.626935958862305
    9. ' =)' → logprob: -16.626935958862305
    10. '<|end|>' → logprob: -16.876935958862305

Token 172: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.014163863845169544
    2. 'direction' → logprob: -4.264163970947266
    3. '(direction' → logprob: -14.889163970947266
    4. 'dire' → logprob: -17.639163970947266
    5. '_direction' → logprob: -18.139163970947266
    6. ' ' → logprob: -18.139163970947266
    7. 'd' → logprob: -19.014163970947266
    8. '.direction' → logprob: -19.014163970947266
    9. '方向' → logprob: -19.014163970947266
    10. ' directions' → logprob: -19.264163970947266

Token 173: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.749814019713085e-06
    2. 's' → logprob: -12.500006675720215
    3. '_' → logprob: -13.500006675720215
    4. 'map' → logprob: -14.875006675720215
    5. '=_' → logprob: -15.125006675720215
    6. '[_' → logprob: -15.250006675720215
    7. ' _' → logprob: -15.375006675720215
    8. '_maps' → logprob: -15.625006675720215
    9. '=' → logprob: -16.25000762939453
    10. ' =' → logprob: -16.62500762939453

Token 174: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -4.990154047845863e-05
    2. '[' → logprob: -10.000049591064453
    3. 'd' → logprob: -13.000049591064453
    4. ' [' → logprob: -13.750049591064453
    5. '(d' → logprob: -14.500049591064453
    6. '[(' → logprob: -15.500049591064453
    7. '[c' → logprob: -16.875049591064453
    8. '[df' → logprob: -16.875049591064453
    9. '[s' → logprob: -17.000049591064453
    10. '=d' → logprob: -17.125049591064453

Token 175: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011695112101733685
    2. ')' → logprob: -4.51169490814209
    3. '<|end|>' → logprob: -8.01169490814209
    4. ')]' → logprob: -9.01169490814209
    5. ']
' → logprob: -9.38669490814209
    6. '       ' → logprob: -9.88669490814209
    7. '])' → logprob: -10.63669490814209
    8. '<|end|>' → logprob: -11.63669490814209
    9. ' ]' → logprob: -11.76169490814209
    10. '   ' → logprob: -12.51169490814209

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0932074636220932
    2. ' for' → logprob: -3.343207359313965
    3. '
' → logprob: -3.843207359313965
    4. '       ' → logprob: -4.468207359313965
    5. '<|end|>' → logprob: -4.468207359313965
    6. ' 
' → logprob: -6.218207359313965
    7. '  
' → logprob: -6.218207359313965
    8. 'for' → logprob: -6.218207359313965
    9. '            
' → logprob: -6.468207359313965
    10. '    
' → logprob: -8.093207359313965

Token 177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11387952417135239
    2. 'for' (adapté à ' for') → logprob: -2.238879442214966
    3. ' 
' → logprob: -7.613879680633545
    4. '       ' → logprob: -8.113879203796387
    5. '
' → logprob: -9.738879203796387
    6. ' ' → logprob: -9.988879203796387
    7. '           ' → logprob: -10.238879203796387
    8. '    ' → logprob: -10.488879203796387
    9. '        ' → logprob: -10.488879203796387
    10. '<|end|>' → logprob: -10.863879203796387

Token 178: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00033951509976759553
    2. '_' → logprob: -8.12533950805664
    3. ' i' → logprob: -10.12533950805664
    4. ' ' → logprob: -13.12533950805664
    5. ' __' → logprob: -14.25033950805664
    6. '_i' → logprob: -14.62533950805664
    7. ' ' → logprob: -15.75033950805664
    8. 'i' → logprob: -15.87533950805664
    9. ' step' → logprob: -16.37533950805664
    10. '_step' → logprob: -17.37533950805664

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2525126039981842
    2. 'in' → logprob: -1.5025125741958618
    3. 'range' → logprob: -7.752512454986572
    4. ' ' → logprob: -8.87751293182373
    5. '  ' → logprob: -12.25251293182373
    6. ' range' → logprob: -12.62751293182373
    7. '<|end|>' → logprob: -13.62751293182373
    8. '```' → logprob: -13.87751293182373
    9. ')' → logprob: -14.37751293182373
    10. '    ' → logprob: -14.75251293182373

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476724097505212
    2. ' range' → logprob: -6.002476692199707
    3. '(range' → logprob: -14.252476692199707
    4. '	range' → logprob: -15.502476692199707
    5. 'rang' → logprob: -16.627477645874023
    6. '   ' → logprob: -17.502477645874023
    7. 'ange' → logprob: -17.877477645874023
    8. '```' → logprob: -18.002477645874023
    9. ' ' → logprob: -18.127477645874023
    10. 'l' → logprob: -18.127477645874023

Token 181: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.01108542736619711
    2. ' l' → logprob: -4.761085510253906
    3. 'l' → logprob: -6.261085510253906
    4. '(' → logprob: -7.761085510253906
    5. ' (' → logprob: -9.011085510253906
    6. '	l' → logprob: -11.761085510253906
    7. '   ' → logprob: -13.386085510253906
    8. ',l' → logprob: -15.011085510253906
    9. '    ' → logprob: -15.261085510253906
    10. '_l' → logprob: -16.511085510253906

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5790281891822815
    2. '):
' → logprob: -0.8290281891822815
    3. ':' → logprob: -6.204028129577637
    4. '   ' → logprob: -8.454028129577637
    5. '           ' → logprob: -8.579028129577637
    6. ':
' → logprob: -9.079028129577637
    7. ')' → logprob: -9.329028129577637
    8. ' ):' → logprob: -9.329028129577637
    9. ' ):
' → logprob: -9.454028129577637
    10. '       ' → logprob: -9.579028129577637

Token 183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004225016571581364
    2. '           ' → logprob: -6.629225254058838
    3. '<|end|>' → logprob: -6.879225254058838
    4. '
' → logprob: -7.379225254058838
    5. ' x' → logprob: -8.25422477722168
    6. 'x' → logprob: -8.25422477722168
    7. '```' → logprob: -8.75422477722168
    8. ':
' → logprob: -8.87922477722168
    9. '                
' → logprob: -9.37922477722168
    10. ',' → logprob: -9.75422477722168

Token 184: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25277677178382874
    2. 'x' (adapté à ' x') → logprob: -1.5027767419815063
    3. '   ' → logprob: -7.252776622772217
    4. '    ' → logprob: -10.377777099609375
    5. ' ' → logprob: -10.502777099609375
    6. '                   ' → logprob: -10.752777099609375
    7. '           ' → logprob: -10.877777099609375
    8. '               ' → logprob: -11.502777099609375
    9. '       ' → logprob: -12.002777099609375
    10. ' 
' → logprob: -12.002777099609375

Token 185: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28120848536491394
    2. '+=' → logprob: -1.4062085151672363
    3. '+' → logprob: -10.156208038330078
    4. ']+=' → logprob: -11.781208038330078
    5. '=' → logprob: -12.406208038330078
    6. ',' → logprob: -13.031208038330078
    7. '+=(' → logprob: -13.281208038330078
    8. 'x' → logprob: -14.031208038330078
    9. ' x' → logprob: -14.531208038330078
    10. ' +' → logprob: -14.781208038330078

Token 186: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.061967913061380386
    2. ' dx' → logprob: -2.8119678497314453
    3. '_dx' → logprob: -15.561967849731445
    4. '(dx' → logprob: -17.936967849731445
    5. '.dx' → logprob: -19.436967849731445
    6. 'd' → logprob: -20.561967849731445
    7. ' ' → logprob: -21.186967849731445
    8. 'Dx' → logprob: -21.436967849731445
    9. 'DX' → logprob: -21.936967849731445
    10. '
' → logprob: -21.936967849731445

Token 187: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4457554221153259
    2. '               ' → logprob: -1.1957554817199707
    3. '<|end|>' → logprob: -3.3207554817199707
    4. ',y' → logprob: -4.820755481719971
    5. ',
' → logprob: -5.320755481719971
    6. '
' → logprob: -5.570755481719971
    7. ' y' → logprob: -6.070755481719971
    8. 'y' → logprob: -7.820755481719971
    9. ' ,' → logprob: -7.945755481719971
    10. '                ' → logprob: -8.070755004882812

Token 188: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2706710398197174
    2. '<|end|>' → logprob: -2.1456711292266846
    3. ' y' → logprob: -2.3956711292266846
    4. 'y' → logprob: -4.3956708908081055
    5. '               ' → logprob: -4.6456708908081055
    6. ',y' → logprob: -6.1456708908081055
    7. ' dy' → logprob: -6.3956708908081055
    8. ' ,' → logprob: -6.8956708908081055
    9. '                ' → logprob: -7.7706708908081055
    10. ' ' → logprob: -7.8956708908081055

Token 189: ' y' (ID: 342)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.031825993210077286
    2. ' y' → logprob: -3.7818260192871094
    3. 'dy' → logprob: -4.906826019287109
    4. 'y' (adapté à ' y') → logprob: -6.781826019287109
    5. ' ' → logprob: -12.53182601928711
    6. ' ' → logprob: -12.78182601928711
    7. '<|end|>' → logprob: -12.78182601928711
    8. '.dy' → logprob: -13.90682601928711
    9. 'Dy' → logprob: -15.03182601928711
    10. ' ddy' → logprob: -15.03182601928711

Token 190: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.015295843593776226
    2. '+=' → logprob: -4.26529598236084
    3. '<|end|>' → logprob: -7.01529598236084
    4. ' +' → logprob: -9.26529598236084
    5. '+' → logprob: -9.76529598236084
    6. ' ' → logprob: -10.76529598236084
    7. '                ' → logprob: -11.26529598236084
    8. ')' → logprob: -11.51529598236084
    9. '               ' → logprob: -11.51529598236084
    10. ' ' → logprob: -11.76529598236084

Token 191: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.005233882926404476
    2. ' dy' → logprob: -5.2552337646484375
    3. '.dy' → logprob: -16.880233764648438
    4. 'd' → logprob: -17.755233764648438
    5. ' ' → logprob: -18.380233764648438
    6. '1' → logprob: -18.505233764648438
    7. 'Dy' → logprob: -19.255233764648438
    8. '   ' → logprob: -20.130233764648438
    9. 'dym' → logprob: -20.380233764648438
    10. '0' → logprob: -20.505233764648438

Token 192: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2060442864894867
    2. '
' → logprob: -2.2060441970825195
    3. ' if' → logprob: -2.7060441970825195
    4. '<|end|>' → logprob: -6.2060441970825195
    5. '```' → logprob: -6.2060441970825195
    6. 'if' → logprob: -6.3310441970825195
    7. '           ' → logprob: -6.4560441970825195
    8. '                
' → logprob: -7.0810441970825195
    9. '       ' → logprob: -8.20604419708252
    10. '  
' → logprob: -8.58104419708252

Token 193: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020098237320780754
    2. ' if' → logprob: -4.0200982093811035
    3. '```' → logprob: -7.5200982093811035
    4. '           ' → logprob: -7.7700982093811035
    5. '<|end|>' → logprob: -8.270098686218262
    6. 'if' → logprob: -8.270098686218262
    7. '       ' → logprob: -8.520098686218262
    8. '                
' → logprob: -9.270098686218262
    9. '
' → logprob: -9.395098686218262
    10. '                ' → logprob: -10.645098686218262

Token 194: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03816117346286774
    2. ' if' → logprob: -3.288161277770996
    3. '               ' → logprob: -9.038161277770996
    4. '           ' → logprob: -14.413161277770996
    5. '```' → logprob: -15.288161277770996
    6. '   ' → logprob: -16.66316032409668
    7. '       ' → logprob: -17.16316032409668
    8. '                   ' → logprob: -17.78816032409668
    9. ' ' → logprob: -18.78816032409668
    10. 'If' → logprob: -18.91316032409668

Token 195: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01815076172351837
    2. '(x' → logprob: -4.018150806427002
    3. '(' → logprob: -14.768150329589844
    4. ' ' → logprob: -15.393150329589844
    5. ' ' → logprob: -16.268150329589844
    6. '(y' → logprob: -17.143150329589844
    7. '(g' → logprob: -17.393150329589844
    8. '(f' → logprob: -17.518150329589844
    9. '   ' → logprob: -17.768150329589844
    10. '(n' → logprob: -18.018150329589844

Token 196: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.440506407059729e-05
    2. '(x' → logprob: -11.00003433227539
    3. ' x' → logprob: -11.00003433227539
    4. ' (' → logprob: -14.00003433227539
    5. '(' → logprob: -16.37503433227539
    6. ')x' → logprob: -18.25003433227539
    7. '{x' → logprob: -18.50003433227539
    8. ')' → logprob: -18.62503433227539
    9. ',' → logprob: -19.00003433227539
    10. '   ' → logprob: -19.25003433227539

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ',y' → logprob: -10.625031471252441
    3. ' ,' → logprob: -11.875031471252441
    4. ',x' → logprob: -16.250032424926758
    5. ',
' → logprob: -16.375032424926758
    6. '‌,' → logprob: -16.500032424926758
    7. 'in' → logprob: -16.625032424926758
    8. '<|end|>' → logprob: -16.875032424926758
    9. ' in' → logprob: -17.125032424926758
    10. '```' → logprob: -17.125032424926758

Token 198: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01416398212313652
    2. ' y' → logprob: -4.264163970947266
    3. '<|end|>' → logprob: -15.764163970947266
    4. ',y' → logprob: -16.139163970947266
    5. ' ' → logprob: -16.514163970947266
    6. ',' → logprob: -17.264163970947266
    7. '	y' → logprob: -17.514163970947266
    8. '   ' → logprob: -17.639163970947266
    9. ')y' → logprob: -17.764163970947266
    10. '    ' → logprob: -18.889163970947266

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11459200829267502
    2. ' in' → logprob: -2.2395920753479004
    3. 'in' → logprob: -6.8645920753479
    4. ' )' → logprob: -7.2395920753479
    5. ' not' → logprob: -12.864591598510742
    6. ' ' → logprob: -13.739591598510742
    7. '<|end|>' → logprob: -13.739591598510742
    8. ',' → logprob: -15.614591598510742
    9. 'not' → logprob: -15.864591598510742
    10. '`)' → logprob: -15.864591598510742

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043003883212804794
    2. 'in' → logprob: -3.168003797531128
    3. ' ' → logprob: -12.668004035949707
    4. ')' → logprob: -14.043004035949707
    5. '<|end|>' → logprob: -15.793004035949707
    6. ' not' → logprob: -15.918004035949707
    7. '	in' → logprob: -16.54300308227539
    8. '   ' → logprob: -16.54300308227539
    9. '           ' → logprob: -16.79300308227539
    10. ' ' → logprob: -16.91800308227539

Token 201: ' gems' (ID: 68945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.20154596865177155
    2. ' gems' → logprob: -1.7015459537506104
    3. 's' → logprob: -10.326545715332031
    4. ' g' → logprob: -10.451545715332031
    5. 'gem' → logprob: -11.076545715332031
    6. '	g' → logprob: -11.326545715332031
    7. '_g' → logprob: -12.139045715332031
    8. '```' → logprob: -12.201545715332031
    9. ' ' → logprob: -12.326545715332031
    10. '   ' → logprob: -12.576545715332031

Token 202: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006407923996448517
    2. '                   ' → logprob: -6.006407737731934
    3. 'and' → logprob: -6.381407737731934
    4. ':' → logprob: -6.381407737731934
    5. ':
' → logprob: -8.131407737731934
    6. '               ' → logprob: -8.506407737731934
    7. '           ' → logprob: -11.381407737731934
    8. '                       ' → logprob: -11.881407737731934
    9. ')' → logprob: -12.506407737731934
    10. '<|end|>' → logprob: -12.631407737731934

Token 203: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0243223849684
    2. ' collected' → logprob: -3.774322271347046
    3. '           ' → logprob: -7.524322509765625
    4. '               ' → logprob: -8.024322509765625
    5. 'col' → logprob: -9.399322509765625
    6. 'Collected' → logprob: -9.774322509765625
    7. '
' → logprob: -11.524322509765625
    8. '                    
' → logprob: -11.649322509765625
    9. '<|end|>' → logprob: -11.649322509765625
    10. '   ' → logprob: -11.774322509765625

Token 204: ' collected' (ID: 20480)
  Prédit: ' collected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collected' → logprob: -0.017725961282849312
    2. 'col' → logprob: -4.267725944519043
    3. '                   ' → logprob: -5.892725944519043
    4. '                       ' → logprob: -7.392725944519043
    5. '               ' → logprob: -9.267725944519043
    6. ' col' → logprob: -10.267725944519043
    7. '
' → logprob: -11.017725944519043
    8. '       ' → logprob: -12.017725944519043
    9. 'Collected' → logprob: -12.017725944519043
    10. '           ' → logprob: -12.267725944519043

Token 205: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0059532104060053825
    2. '.' → logprob: -5.130953311920166
    3. '.update' → logprob: -11.380952835083008
    4. '.setdefault' → logprob: -11.630952835083008
    5. '.remove' → logprob: -13.880952835083008
    6. ' .' → logprob: -14.005952835083008
    7. '<|end|>' → logprob: -14.130952835083008
    8. '.union' → logprob: -14.630952835083008
    9. '.append' → logprob: -15.255952835083008
    10. '.Add' → logprob: -15.255952835083008

Token 206: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.000000953674316
    3. ' ((' → logprob: -15.125000953674316
    4. '(((' → logprob: -17.625
    5. '(
' → logprob: -19.0
    6. '   ' → logprob: -19.875
    7. '([(' → logprob: -19.875
    8. '<|end|>' → logprob: -20.125
    9. ')((' → logprob: -20.375
    10. '__((' → logprob: -20.5

Token 207: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008689505979418755
    2. '(x' → logprob: -4.7586894035339355
    3. ' x' → logprob: -9.758689880371094
    4. ' (' → logprob: -11.008689880371094
    5. ')x' → logprob: -15.258689880371094
    6. '"x' → logprob: -15.383689880371094
    7. '(' → logprob: -16.133689880371094
    8. '   ' → logprob: -16.758689880371094
    9. ' ' → logprob: -17.258689880371094
    10. '{x' → logprob: -17.508689880371094

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ',y' → logprob: -10.750039100646973
    3. ' ,' → logprob: -12.125039100646973
    4. '(x' → logprob: -13.125039100646973
    5. '(' → logprob: -13.250039100646973
    6. 'x' → logprob: -13.375039100646973
    7. ',
' → logprob: -13.500039100646973
    8. ')' → logprob: -14.000039100646973
    9. '[' → logprob: -14.250039100646973
    10. '                   ' → logprob: -14.375039100646973

Token 209: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141352713108063
    2. ' y' → logprob: -1.7014135122299194
    3. '	y' → logprob: -16.201414108276367
    4. ')y' → logprob: -16.951414108276367
    5. ''y' → logprob: -17.951414108276367
    6. '(y' → logprob: -18.201414108276367
    7. ' ' → logprob: -18.326414108276367
    8. ')' → logprob: -18.326414108276367
    9. ',y' → logprob: -18.451414108276367
    10. '<|end|>' → logprob: -18.951414108276367

Token 210: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003233070601709187
    2. ')
' → logprob: -8.125323295593262
    3. '))' → logprob: -11.750323295593262
    4. '())' → logprob: -12.125323295593262
    5. '               ' → logprob: -12.750323295593262
    6. ')

' → logprob: -12.875323295593262
    7. '       ' → logprob: -13.000323295593262
    8. '                   ' → logprob: -13.375323295593262
    9. ')return' → logprob: -14.125323295593262
    10. '()' → logprob: -14.125323295593262

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012478696182370186
    2. '   ' → logprob: -4.512478828430176
    3. '
' → logprob: -6.887478828430176
    4. 'print' → logprob: -7.887478828430176
    5. '```' → logprob: -11.637478828430176
    6. ' print' → logprob: -11.762478828430176
    7. '<|end|>' → logprob: -11.887478828430176
    8. '    
' → logprob: -13.137478828430176
    9. '           ' → logprob: -13.137478828430176
    10. '        
' → logprob: -13.387478828430176

Token 212: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10492746531963348
    2. '   ' → logprob: -2.6049275398254395
    3. 'print' (adapté à ' print') → logprob: -3.7299275398254395
    4. '
' → logprob: -6.7299275398254395
    5. '    
' → logprob: -8.729927062988281
    6. ' print' → logprob: -8.729927062988281
    7. '        
' → logprob: -8.854927062988281
    8. '```' → logprob: -10.354927062988281
    9. '
' → logprob: -12.729927062988281
    10. '<|end|>' → logprob: -12.979927062988281

Token 213: '("' (ID: 568)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00823948998004198
    2. '(' → logprob: -5.008239269256592
    3. '(f' → logprob: -6.883239269256592
    4. '()' → logprob: -8.00823974609375
    5. '(col' → logprob: -9.13323974609375
    6. '(sum' → logprob: -11.00823974609375
    7. 'len' → logprob: -11.25823974609375
    8. '('' → logprob: -11.38323974609375
    9. '((' → logprob: -11.88323974609375
    10. '("' → logprob: -13.00823974609375

Token 214: 'Yes' (ID: 13022)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0014336821623146534
    2. '(len' → logprob: -7.376433849334717
    3. ' len' → logprob: -7.376433849334717
    4. 'Collected' → logprob: -9.126433372497559
    5. 'Len' → logprob: -10.376433372497559
    6. 'col' → logprob: -10.626433372497559
    7. ',len' → logprob: -12.376433372497559
    8. '{' → logprob: -12.876433372497559
    9. '[len' → logprob: -13.251433372497559
    10. '"' → logprob: -13.251433372497559

Token 215: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005692371050827205
    2. ',' → logprob: -8.500569343566895
    3. ' if' → logprob: -8.750569343566895
    4. '!"' → logprob: -9.250569343566895
    5. '")' → logprob: -10.250569343566895
    6. ' "' → logprob: -10.625569343566895
    7. ',"' → logprob: -11.000569343566895
    8. ' collected' → logprob: -11.125569343566895
    9. 'if' → logprob: -12.375569343566895
    10. '!' → logprob: -12.375569343566895

Token 216: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030707895755767822
    2. 'if' → logprob: -3.530707836151123
    3. ')' → logprob: -7.030707836151123
    4. '"' → logprob: -10.155708312988281
    5. ',' → logprob: -10.655708312988281
    6. ' ' → logprob: -12.530708312988281
    7. '   ' → logprob: -13.155708312988281
    8. '*' → logprob: -14.155708312988281
    9. '  ' → logprob: -14.530708312988281
    10. '    ' → logprob: -14.655708312988281

Token 217: ' collected' (ID: 20480)
  Prédit: ' collected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collected' → logprob: -0.5149250626564026
    2. ' len' → logprob: -1.6399250030517578
    3. 'g' → logprob: -2.639925003051758
    4. 'len' → logprob: -2.764925003051758
    5. ' gems' → logprob: -2.764925003051758
    6. 'col' → logprob: -4.639925003051758
    7. '   ' → logprob: -7.639925003051758
    8. ' ' → logprob: -7.764925003051758
    9. 'gem' → logprob: -9.014925003051758
    10. '(len' → logprob: -9.514925003051758

Token 218: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04989444836974144
    2. ' ==' → logprob: -3.049894332885742
    3. '>=' → logprob: -6.799894332885742
    4. '.' → logprob: -9.049894332885742
    5. ' >=' → logprob: -11.174894332885742
    6. ')' → logprob: -11.549894332885742
    7. ')==' → logprob: -11.674894332885742
    8. '   ' → logprob: -11.799894332885742
    9. '==
' → logprob: -12.049894332885742
    10. ' ' → logprob: -12.049894332885742

Token 219: ' gems' (ID: 68945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07891501486301422
    2. ' gems' → logprob: -2.5789151191711426
    3. 'gem' → logprob: -11.703914642333984
    4. ' g' → logprob: -11.828914642333984
    5. '   ' → logprob: -12.578914642333984
    6. '	g' → logprob: -13.203914642333984
    7. ' ' → logprob: -13.703914642333984
    8. ' Gems' → logprob: -14.703914642333984
    9. '```' → logprob: -14.828914642333984
    10. ' gem' → logprob: -14.953914642333984

Token 220: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.09006280452013016
    2. 'else' → logprob: -2.4650628566741943
    3. ')' → logprob: -6.840062618255615
    4. '       ' → logprob: -10.840063095092773
    5. '	else' → logprob: -11.090063095092773
    6. '   ' → logprob: -12.590063095092773
    7. '```' → logprob: -12.590063095092773
    8. '<|end|>' → logprob: -12.965063095092773
    9. ' )' → logprob: -13.590063095092773
    10. ' ' → logprob: -13.590063095092773

Token 221: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00015633940347470343
    2. ' "' → logprob: -8.87515640258789
    3. ' ' → logprob: -12.50015640258789
    4. '   ' → logprob: -12.75015640258789
    5. ''' → logprob: -13.00015640258789
    6. ')' → logprob: -13.12515640258789
    7. '"No' → logprob: -13.12515640258789
    8. '
' → logprob: -13.37515640258789
    9. '       ' → logprob: -14.25015640258789
    10. '("' → logprob: -15.00015640258789

Token 222: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.5762910842895508
    2. '"No' → logprob: -0.8262910842895508
    3. ' No' → logprob: -8.45129108428955
    4. '"' → logprob: -8.95129108428955
    5. ''' → logprob: -12.32629108428955
    6. '“No' → logprob: -13.95129108428955
    7. ' ' → logprob: -14.20129108428955
    8. 'NO' → logprob: -14.45129108428955
    9. ' "' → logprob: -14.57629108428955
    10. '   ' → logprob: -15.32629108428955

Token 223: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.15318553149700165
    2. ')' → logprob: -2.1531856060028076
    3. ')")' → logprob: -3.6531856060028076
    4. ')"' → logprob: -12.403185844421387
    5. '}")' → logprob: -14.153185844421387
    6. '")
' → logprob: -14.528185844421387
    7. ')")
' → logprob: -15.028185844421387
    8. ')",' → logprob: -15.278185844421387
    9. ')">' → logprob: -15.528185844421387
    10. '!")' → logprob: -15.653185844421387

Token 224: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020375922322273254
    2. '<|end|>' → logprob: -4.895375728607178
    3. 'if' → logprob: -5.395375728607178
    4. '```' → logprob: -5.770375728607178
    5. '\n' → logprob: -6.145375728607178
    6. 'main' → logprob: -6.520375728607178
    7. '\' → logprob: -7.895375728607178
    8. '

' → logprob: -8.145376205444336
    9. '#' → logprob: -8.770376205444336
    10. '  
' → logprob: -9.395376205444336

Token 225: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.026379259303212166
    2. '__' → logprob: -3.651379346847534
    3. ' ' → logprob: -10.276379585266113
    4. '_' → logprob: -10.276379585266113
    5. '_name' → logprob: -12.026379585266113
    6. '___' → logprob: -14.026379585266113
    7. ' ' → logprob: -14.026379585266113
    8. ' ' → logprob: -14.401379585266113
    9. 'name' → logprob: -14.526379585266113
    10. ' _' → logprob: -14.526379585266113

Token 226: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004498573543969542
    2. ' __' → logprob: -8.000450134277344
    3. 'name' → logprob: -10.375450134277344
    4. '_' → logprob: -10.375450134277344
    5. '==' → logprob: -11.125450134277344
    6. '__.__' → logprob: -11.625450134277344
    7. ' ==' → logprob: -11.750450134277344
    8. '__.' → logprob: -12.375450134277344
    9. '(__' → logprob: -12.375450134277344
    10. '.__' → logprob: -13.250450134277344

Token 227: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.9160102712921798e-05
    2. '__.__' → logprob: -10.500029563903809
    3. '__.' → logprob: -14.250029563903809
    4. '==' → logprob: -14.875029563903809
    5. '__('' → logprob: -15.625029563903809
    6. '__("' → logprob: -16.125028610229492
    7. '__["' → logprob: -16.625028610229492
    8. '____' → logprob: -17.000028610229492
    9. '__
' → logprob: -17.125028610229492
    10. '___' → logprob: -17.375028610229492

Token 228: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5647155046463013
    2. ' ==' → logprob: -1.1897155046463013
    3. '==' → logprob: -2.0647153854370117
    4. '=="' → logprob: -8.689715385437012
    5. '_' → logprob: -9.564715385437012
    6. '=='' → logprob: -10.814715385437012
    7. '__.__' → logprob: -11.064715385437012
    8. '=' → logprob: -12.064715385437012
    9. ' =="' → logprob: -12.064715385437012
    10. '___' → logprob: -12.189715385437012

Token 229: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06201966851949692
    2. ''' → logprob: -2.8120195865631104
    3. ' "__' → logprob: -10.062019348144531
    4. '__' → logprob: -11.812019348144531
    5. ' '__' → logprob: -13.437019348144531
    6. '"user' → logprob: -15.687019348144531
    7. '"name' → logprob: -16.56201934814453
    8. ''"' → logprob: -17.06201934814453
    9. '"_' → logprob: -17.56201934814453
    10. '("__' → logprob: -17.68701934814453

Token 230: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003224652726203203
    2. 'name' → logprob: -6.253224849700928
    3. '__' → logprob: -6.753224849700928
    4. '"' → logprob: -9.00322437286377
    5. ''' → logprob: -13.50322437286377
    6. ' main' → logprob: -14.12822437286377
    7. '```' → logprob: -14.12822437286377
    8. '__":
' → logprob: -14.37822437286377
    9. '"name' → logprob: -14.62822437286377
    10. '_main' → logprob: -16.003225326538086

Token 231: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12725113332271576
    2. '__' → logprob: -2.127251148223877
    3. '__':
' → logprob: -8.252250671386719
    4. '__:' → logprob: -10.127250671386719
    5. '__.' → logprob: -11.502250671386719
    6. '_' → logprob: -11.877250671386719
    7. '__.__' → logprob: -13.002250671386719
    8. '__["' → logprob: -13.252250671386719
    9. '__("' → logprob: -15.127250671386719
    10. '__
' → logprob: -15.502250671386719

Token 232: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10143357515335083
    2. '   ' → logprob: -2.601433515548706
    3. 'main' → logprob: -3.851433515548706
    4. '	main' → logprob: -6.976433753967285
    5. '    
' → logprob: -9.851433753967285
    6. '_main' → logprob: -10.601433753967285
    7. '<|end|>' → logprob: -11.601433753967285
    8. '  ' → logprob: -11.851433753967285
    9. '(main' → logprob: -12.226433753967285
    10. ' ' → logprob: -12.476433753967285

Token 233: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00015860427811276168
    2. ' main' → logprob: -8.750158309936523
    3. '	main' → logprob: -16.875158309936523
    4. '   ' → logprob: -17.500158309936523
    5. 'm' → logprob: -18.875158309936523
    6. 'mai' → logprob: -19.500158309936523
    7. 'ma' → logprob: -19.625158309936523
    8. '.main' → logprob: -19.750158309936523
    9. '(main' → logprob: -19.875158309936523
    10. '_main' → logprob: -20.125158309936523

Token 234: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 232
Tokens correctement prédits (1ère position, stricte): 118
Tokens correctement prédits (1ère position, avec adaptation): 121
Tokens correctement prédits (top 10): 201
Précision stricte (1ère position): 50.86%
Précision adaptée (1ère position): 52.16%
Précision (top 10): 86.64%
================================================================================
