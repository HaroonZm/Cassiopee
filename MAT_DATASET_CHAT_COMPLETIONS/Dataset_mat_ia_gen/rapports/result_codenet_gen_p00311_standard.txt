================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h1,h2=map(int,input().split())
k1,k2=map(int,input().split())
a,b,c,d=map(int,input().split())
score_h=h1*a+h2*b+(h1//10)*c+(h2//20)*d
score_k=k1*a+k2*b+(k1//10)*c+(k2//20)*d
if score_h>score_k:
    print("hiroshi")
elif score_k>score_h:
    print("kenjiro")
else:
    print("even")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 2: ',h' (ID: 42751)
  → Token d'amorce (pas de prédiction)

Token 3: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03769657015800476
    2. '{' → logprob: -3.662696599960327
    3. '1' → logprob: -4.537696361541748
    4. '```' → logprob: -8.787696838378906
    5. ',' → logprob: -9.287696838378906
    6. 't' → logprob: -9.537696838378906
    7. '{}' → logprob: -9.662696838378906
    8. 'tml' → logprob: -9.787696838378906
    9. '{
' → logprob: -9.787696838378906
    10. 'h' → logprob: -10.287696838378906

Token 4: '=' (ID: 28)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.05377184599637985
    2. ',' → logprob: -3.053771734237671
    3. '```' → logprob: -5.80377197265625
    4. ' {' → logprob: -6.55377197265625
    5. ',{' → logprob: -7.92877197265625
    6. '{
' → logprob: -8.92877197265625
    7. ',h' → logprob: -9.30377197265625
    8. '{}' → logprob: -9.55377197265625
    9. '``' → logprob: -11.30377197265625
    10. '`' → logprob: -11.42877197265625

Token 5: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37173348665237427
    2. '[]' → logprob: -2.1217334270477295
    3. ' ' → logprob: -3.1217334270477295
    4. 'document' → logprob: -3.3717334270477295
    5. '1' → logprob: -3.8717334270477295
    6. ' []' → logprob: -4.246733665466309
    7. 'map' → logprob: -4.371733665466309
    8. '10' → logprob: -4.871733665466309
    9. ' document' → logprob: -4.871733665466309
    10. '()' → logprob: -4.996733665466309

Token 6: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3669443726539612
    2. '(lambda' → logprob: -1.7419443130493164
    3. '(int' → logprob: -2.2419443130493164
    4. '(str' → logprob: -3.7419443130493164
    5. '(input' → logprob: -7.616944313049316
    6. '(eval' → logprob: -7.866944313049316
    7. '```' → logprob: -8.241944313049316
    8. '(len' → logprob: -9.366944313049316
    9. '<|end|>' → logprob: -9.366944313049316
    10. '(float' → logprob: -9.616944313049316

Token 7: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2846095561981201
    2. ')' → logprob: -1.5346095561981201
    3. 'input' → logprob: -3.65960955619812
    4. '(' → logprob: -5.534609794616699
    5. ' input' → logprob: -7.409609794616699
    6. ',input' → logprob: -7.784609794616699
    7. '`)' → logprob: -7.909609794616699
    8. '=input' → logprob: -8.5346097946167
    9. '```' → logprob: -8.6596097946167
    10. ')(' → logprob: -8.9096097946167

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17955318093299866
    2. '()' → logprob: -2.929553270339966
    3. ')' → logprob: -3.179553270339966
    4. '(' → logprob: -3.804553270339966
    5. '```' → logprob: -4.679553031921387
    6. '(""))' → logprob: -5.304553031921387
    7. '`()' → logprob: -5.679553031921387
    8. '());' → logprob: -5.804553031921387
    9. '().' → logprob: -5.929553031921387
    10. '<|end|>' → logprob: -6.054553031921387

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9266199160483666e-05
    2. ' split' → logprob: -11.375019073486328
    3. 'strip' → logprob: -12.000019073486328
    4. '(split' → logprob: -14.500019073486328
    5. 'rstrip' → logprob: -14.500019073486328
    6. 'spl' → logprob: -14.625019073486328
    7. 'read' → logprob: -17.125019073486328
    8. ')' → logprob: -17.625019073486328
    9. 'startswith' → logprob: -18.125019073486328
    10. 's' → logprob: -18.375019073486328

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4409501552581787
    2. '())' → logprob: -1.0659501552581787
    3. '()' → logprob: -4.940950393676758
    4. '))' → logprob: -5.815950393676758
    5. '`)' → logprob: -7.190950393676758
    6. '(' → logprob: -7.565950393676758
    7. '('' → logprob: -8.315950393676758
    8. '()))' → logprob: -8.440950393676758
    9. '')' → logprob: -9.315950393676758
    10. ' ())' → logprob: -9.815950393676758

Token 11: 'k' (ID: 74)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1297063827514648
    2. '+' → logprob: -1.2547063827514648
    3. 'print' → logprob: -2.004706382751465
    4. '#' → logprob: -2.879706382751465
    5. ',' → logprob: -2.879706382751465
    6. '*' → logprob: -3.129706382751465
    7. ' ' → logprob: -4.254706382751465
    8. '```' → logprob: -4.629706382751465
    9. '\n' → logprob: -4.629706382751465
    10. 'a' → logprob: -4.754706382751465

Token 12: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03712194785475731
    2. ' =' → logprob: -3.5371220111846924
    3. '=k' → logprob: -5.787121772766113
    4. '+' → logprob: -6.412121772766113
    5. '=int' → logprob: -7.162121772766113
    6. '-' → logprob: -8.287121772766113
    7. '+=' → logprob: -8.412121772766113
    8. 'e' → logprob: -8.787121772766113
    9. ',' → logprob: -8.787121772766113
    10. '%' → logprob: -8.912121772766113

Token 13: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.28210848569869995
    2. ',' → logprob: -2.0321085453033447
    3. '=' → logprob: -2.2821085453033447
    4. ' =' → logprob: -5.282108306884766
    5. '+' → logprob: -6.282108306884766
    6. '*' → logprob: -7.157108306884766
    7. '=int' → logprob: -7.782108306884766
    8. '+=' → logprob: -7.782108306884766
    9. '=k' → logprob: -7.907108306884766
    10. '.' → logprob: -8.032108306884766

Token 14: '2' (ID: 17)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.3184681534767151
    2. '1' → logprob: -1.4434680938720703
    3. ',' → logprob: -3.4434680938720703
    4. '=' → logprob: -6.31846809387207
    5. '2' → logprob: -6.81846809387207
    6. ',_' → logprob: -6.81846809387207
    7. ',j' → logprob: -8.56846809387207
    8. '_' → logprob: -9.44346809387207
    9. '=k' → logprob: -9.56846809387207
    10. ',w' → logprob: -10.19346809387207

Token 15: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.468279752880335e-05
    2. ',' → logprob: -10.375064849853516
    3. ' =' → logprob: -10.500064849853516
    4. '=input' → logprob: -12.875064849853516
    5. '=int' → logprob: -13.250064849853516
    6. '=k' → logprob: -14.375064849853516
    7. ',k' → logprob: -14.875064849853516
    8. '=

' → logprob: -16.000064849853516
    9. '=list' → logprob: -17.125064849853516
    10. '=value' → logprob: -17.125064849853516

Token 16: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0004989399458281696
    2. ' map' → logprob: -7.6254987716674805
    3. 'input' → logprob: -12.25049877166748
    4. '0' → logprob: -13.50049877166748
    5. 'list' → logprob: -13.50049877166748
    6. 'k' → logprob: -13.87549877166748
    7. 'm' → logprob: -15.00049877166748
    8. '[' → logprob: -15.00049877166748
    9. '(map' → logprob: -15.12549877166748
    10. '1' → logprob: -15.37549877166748

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020926215802319348
    2. '(' → logprob: -8.625208854675293
    3. '<int' → logprob: -11.000208854675293
    4. '[int' → logprob: -12.000208854675293
    5. 'int' → logprob: -13.000208854675293
    6. ' (' → logprob: -13.750208854675293
    7. '=int' → logprob: -13.875208854675293
    8. '(str' → logprob: -13.875208854675293
    9. '(lambda' → logprob: -14.125208854675293
    10. '```' → logprob: -15.500208854675293

Token 18: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6931641101837158
    2. '().' → logprob: -1.3181641101837158
    3. ',input' → logprob: -1.5681641101837158
    4. '.' → logprob: -5.193163871765137
    5. ',' → logprob: -5.318163871765137
    6. ').' → logprob: -5.693163871765137
    7. ')' → logprob: -6.318163871765137
    8. '=input' → logprob: -6.693163871765137
    9. '(' → logprob: -6.818163871765137
    10. '<input' → logprob: -7.193163871765137

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.796184723294573e-06
    2. '()' → logprob: -12.875005722045898
    3. ' ().' → logprob: -12.875005722045898
    4. '.' → logprob: -14.875005722045898
    5. '(' → logprob: -16.5000057220459
    6. '().__' → logprob: -16.7500057220459
    7. '>().' → logprob: -17.1250057220459
    8. ').' → logprob: -17.5000057220459
    9. '()).' → logprob: -17.8750057220459
    10. '().'' → logprob: -18.5000057220459

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -14.125000953674316
    3. '(split' → logprob: -14.875000953674316
    4. 'spl' → logprob: -17.625001907348633
    5. 'plit' → logprob: -18.375001907348633
    6. 'strip' → logprob: -18.375001907348633
    7. ')' → logprob: -18.500001907348633
    8. '_split' → logprob: -19.375001907348633
    9. 'read' → logprob: -19.875001907348633
    10. '()' → logprob: -20.000001907348633

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.29369980096817017
    2. '()' → logprob: -1.4186997413635254
    3. ')' → logprob: -4.418699741363525
    4. '().' → logprob: -8.418700218200684
    5. '();)' → logprob: -10.293700218200684
    6. ' ())' → logprob: -10.418700218200684
    7. '`)' → logprob: -10.668700218200684
    8. '()>' → logprob: -11.168700218200684
    9. '()))' → logprob: -11.293700218200684
    10. '())
' → logprob: -11.293700218200684

Token 22: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28905779123306274
    2. 'h' → logprob: -2.289057731628418
    3. 'd' → logprob: -3.789057731628418
    4. 's' → logprob: -4.164057731628418
    5. 'for' → logprob: -4.164057731628418
    6. 'x' → logprob: -4.164057731628418
    7. 'a' → logprob: -4.414057731628418
    8. 'while' → logprob: -4.539057731628418
    9. 'n' → logprob: -4.789057731628418
    10. ' if' → logprob: -5.164057731628418

Token 23: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.32801353931427
    2. '1' → logprob: -2.3280134201049805
    3. '=' → logprob: -2.3280134201049805
    4. ',k' → logprob: -3.5780134201049805
    5. ' =' → logprob: -4.9530134201049805
    6. ',' → logprob: -4.9530134201049805
    7. 'dd' → logprob: -5.3280134201049805
    8. 'd' → logprob: -5.5780134201049805
    9. ',d' → logprob: -5.7030134201049805
    10. '[' → logprob: -5.7030134201049805

Token 24: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00035060103982686996
    2. ',' → logprob: -8.125350952148438
    3. ' =' → logprob: -10.250350952148438
    4. ',k' → logprob: -11.750350952148438
    5. '=input' → logprob: -12.625350952148438
    6. '=int' → logprob: -12.875350952148438
    7. ')' → logprob: -13.875350952148438
    8. ',a' → logprob: -14.750350952148438
    9. '=

' → logprob: -14.750350952148438
    10. ',c' → logprob: -15.000350952148438

Token 25: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010641285916790366
    2. ',' → logprob: -7.376064300537109
    3. ' =' → logprob: -8.37606430053711
    4. ',d' → logprob: -9.00106430053711
    5. ',k' → logprob: -10.25106430053711
    6. '=input' → logprob: -11.50106430053711
    7. ',s' → logprob: -12.37606430053711
    8. '=int' → logprob: -12.37606430053711
    9. '=d' → logprob: -12.62606430053711
    10. ',j' → logprob: -12.87606430053711

Token 26: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1041145626222715e-05
    2. ' =' → logprob: -11.875011444091797
    3. '=input' → logprob: -13.250011444091797
    4. ',' → logprob: -13.625011444091797
    5. '=int' → logprob: -15.125011444091797
    6. '=list' → logprob: -15.500011444091797
    7. '=

' → logprob: -16.000011444091797
    8. '=end' → logprob: -16.375011444091797
    9. '=line' → logprob: -16.750011444091797
    10. '=value' → logprob: -16.875011444091797

Token 27: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00019138160860165954
    2. ' map' → logprob: -8.625191688537598
    3. '4' → logprob: -12.375191688537598
    4. '0' → logprob: -12.875191688537598
    5. '	map' → logprob: -13.625191688537598
    6. '1' → logprob: -14.000191688537598
    7. 'h' → logprob: -14.625191688537598
    8. '5' → logprob: -15.125191688537598
    9. ' ' → logprob: -15.625191688537598
    10. '6' → logprob: -15.625191688537598

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00032485672272741795
    2. '<int' → logprob: -8.250325202941895
    3. '[int' → logprob: -10.500325202941895
    4. '(' → logprob: -10.750325202941895
    5. 'int' → logprob: -12.375325202941895
    6. '=int' → logprob: -12.500325202941895
    7. '<|end|>' → logprob: -12.875325202941895
    8. ']int' → logprob: -13.125325202941895
    9. '```' → logprob: -14.375325202941895
    10. ' (' → logprob: -15.125325202941895

Token 29: ',input' (ID: 123014)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -2.045823566731997e-05
    2. '()' → logprob: -11.125020027160645
    3. '(input' → logprob: -12.250020027160645
    4. ' ().' → logprob: -15.375020027160645
    5. '(' → logprob: -15.750020027160645
    6. '.' → logprob: -15.750020027160645
    7. '(),' → logprob: -16.00002098083496
    8. '(.' → logprob: -16.37502098083496
    9. '())' → logprob: -17.00002098083496
    10. ')' → logprob: -17.12502098083496

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.375006675720215
    3. ')' → logprob: -13.875006675720215
    4. '>().' → logprob: -14.375006675720215
    5. ' ().' → logprob: -14.750006675720215
    6. ').' → logprob: -14.750006675720215
    7. '.' → logprob: -16.12500762939453
    8. '()).' → logprob: -17.00000762939453
    9. '().__' → logprob: -17.00000762939453
    10. '().'' → logprob: -17.50000762939453

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. ' split' → logprob: -13.875001907348633
    3. '(split' → logprob: -15.250001907348633
    4. 'plit' → logprob: -15.500001907348633
    5. 'spl' → logprob: -17.250001907348633
    6. ')' → logprob: -17.875001907348633
    7. '.split' → logprob: -17.875001907348633
    8. '())' → logprob: -17.875001907348633
    9. '```' → logprob: -18.000001907348633
    10. '_split' → logprob: -18.750001907348633

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14301937818527222
    2. '()' → logprob: -2.143019437789917
    3. ')' → logprob: -4.143019199371338
    4. '().' → logprob: -10.518019676208496
    5. ' ())' → logprob: -11.143019676208496
    6. '())
' → logprob: -11.268019676208496
    7. '();)' → logprob: -11.643019676208496
    8. '()))' → logprob: -12.143019676208496
    9. '()>' → logprob: -12.768019676208496
    10. '`)' → logprob: -12.893019676208496

Token 33: 'score' (ID: 21200)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2897849977016449
    2. 'if' → logprob: -1.7897850275039673
    3. '
' → logprob: -3.5397849082946777
    4. 'n' → logprob: -4.539784908294678
    5. ' 
' → logprob: -5.039784908294678
    6. '\n' → logprob: -5.164784908294678
    7. 't' → logprob: -5.164784908294678
    8. 'total' → logprob: -5.414784908294678
    9. 's' → logprob: -5.789784908294678
    10. 'x' → logprob: -6.164784908294678

Token 34: '_h' (ID: 3434)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6929240226745605
    2. ' =' → logprob: -1.3179240226745605
    3. '1' → logprob: -1.8179240226745605
    4. '_' → logprob: -2.9429240226745605
    5. 's' → logprob: -4.3179240226745605
    6. '(' → logprob: -6.9429240226745605
    7. '_=' → logprob: -7.3179240226745605
    8. ' ' → logprob: -7.4429240226745605
    9. '=(' → logprob: -8.317924499511719
    10. '=_' → logprob: -8.567924499511719

Token 35: '=h' (ID: 126422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0060554747469723225
    2. '_' → logprob: -5.1310553550720215
    3. '=' → logprob: -10.38105583190918
    4. '_a' → logprob: -10.88105583190918
    5. '_s' → logprob: -11.25605583190918
    6. 'a' → logprob: -11.38105583190918
    7. 'ome' → logprob: -12.00605583190918
    8. '_score' → logprob: -12.00605583190918
    9. '[' → logprob: -12.38105583190918
    10. 's' → logprob: -12.63105583190918

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.240481914370321e-05
    2. '_' → logprob: -10.625052452087402
    3. '[' → logprob: -11.500052452087402
    4. '```' → logprob: -12.250052452087402
    5. '2' → logprob: -12.625052452087402
    6. 's' → logprob: -12.875052452087402
    7. '-' → logprob: -13.250052452087402
    8. '**' → logprob: -14.125052452087402
    9. '<|end|>' → logprob: -14.187552452087402
    10. 'h' → logprob: -14.625052452087402

Token 37: '*a' (ID: 78448)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10013462603092194
    2. '*' → logprob: -2.7251346111297607
    3. '+k' → logprob: -3.9751346111297607
    4. '+h' → logprob: -5.22513484954834
    5. ' +' → logprob: -5.72513484954834
    6. '-' → logprob: -6.85013484954834
    7. '-k' → logprob: -8.22513484954834
    8. '+b' → logprob: -8.72513484954834
    9. '*k' → logprob: -8.97513484954834
    10. '+a' → logprob: -9.22513484954834

Token 38: '+h' (ID: 150992)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.769930899143219
    2. '+h' → logprob: -1.3949308395385742
    3. '+k' → logprob: -2.269930839538574
    4. ' +' → logprob: -2.394930839538574
    5. '+b' → logprob: -2.644930839538574
    6. '<|end|>' → logprob: -4.144930839538574
    7. ' ' → logprob: -6.644930839538574
    8. '-k' → logprob: -7.019930839538574
    9. '+(' → logprob: -7.144930839538574
    10. '-' → logprob: -7.269930839538574

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.024604277219623e-05
    2. '1' → logprob: -10.625040054321289
    3. 'b' → logprob: -12.000040054321289
    4. '```' → logprob: -12.125040054321289
    5. '`' → logprob: -13.625040054321289
    6. ' ' → logprob: -14.500040054321289
    7. 's' → logprob: -14.750040054321289
    8. '[' → logprob: -15.125040054321289
    9. 'space' → logprob: -15.125040054321289
    10. 'f' → logprob: -15.250040054321289

Token 40: '*b' (ID: 72162)
  Prédit: '*c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.5763780474662781
    2. '*b' → logprob: -0.8263780474662781
    3. '*a' → logprob: -8.326377868652344
    4. '*' → logprob: -8.826377868652344
    5. '*d' → logprob: -10.451377868652344
    6. ' *' → logprob: -11.576377868652344
    7. '*k' → logprob: -12.451377868652344
    8. 'b' → logprob: -13.201377868652344
    9. ''*' → logprob: -13.451377868652344
    10. 'c' → logprob: -13.701377868652344

Token 41: '+(' (ID: 31717)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.225917249917984
    2. '-score' → logprob: -1.9759172201156616
    3. '-' → logprob: -3.100917339324951
    4. '+' → logprob: -4.600917339324951
    5. ' score' → logprob: -5.100917339324951
    6. '
' → logprob: -7.225917339324951
    7. '<|end|>' → logprob: -7.475917339324951
    8. '-s' → logprob: -7.600917339324951
    9. ' ' → logprob: -8.850916862487793
    10. '-
' → logprob: -9.225916862487793

Token 42: 'h' (ID: 71)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1448162943124771
    2. 'h' → logprob: -2.1448163986206055
    3. '100' → logprob: -5.1448163986206055
    4. ' k' → logprob: -5.6448163986206055
    5. 'c' → logprob: -6.5198163986206055
    6. ' h' → logprob: -6.8948163986206055
    7. 'max' → logprob: -6.8948163986206055
    8. '1' → logprob: -6.8948163986206055
    9. '(' → logprob: -7.2698163986206055
    10. '(k' → logprob: -7.5198163986206055

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019236369989812374
    2. '2' → logprob: -6.501923561096191
    3. '-' → logprob: -8.126923561096191
    4. '```' → logprob: -10.126923561096191
    5. '-k' → logprob: -10.939423561096191
    6. '*' → logprob: -11.564423561096191
    7. '_' → logprob: -12.126923561096191
    8. 'c' → logprob: -12.314423561096191
    9. 'k' → logprob: -12.501923561096191
    10. '>' → logprob: -12.626923561096191

Token 44: '//' (ID: 393)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*k' → logprob: -1.5659880638122559
    2. '+k' → logprob: -1.6909880638122559
    3. '+' → logprob: -1.8159880638122559
    4. '+h' → logprob: -1.8159880638122559
    5. '+c' → logprob: -2.315988063812256
    6. '*c' → logprob: -2.565988063812256
    7. '-k' → logprob: -3.690988063812256
    8. '*' → logprob: -4.065988063812256
    9. ' +' → logprob: -4.315988063812256
    10. '*h' → logprob: -4.440988063812256

Token 45: '10' (ID: 702)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1343403309583664
    2. 'c' → logprob: -2.259340286254883
    3. '2' → logprob: -3.884340286254883
    4. '3' → logprob: -8.634340286254883
    5. '1' → logprob: -9.134340286254883
    6. '16' → logprob: -9.259340286254883
    7. ' k' → logprob: -9.259340286254883
    8. ' ' → logprob: -9.509340286254883
    9. ' c' → logprob: -10.134340286254883
    10. '50' → logprob: -10.634340286254883

Token 46: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.002439266536384821
    2. ')' → logprob: -6.127439498901367
    3. '*k' → logprob: -9.502439498901367
    4. ' )' → logprob: -9.627439498901367
    5. '*' → logprob: -10.127439498901367
    6. '*c' → logprob: -10.502439498901367
    7. ')*(' → logprob: -10.752439498901367
    8. ')**' → logprob: -12.252439498901367
    9. '+k' → logprob: -12.627439498901367
    10. ' *' → logprob: -12.627439498901367

Token 47: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003174387151375413
    2. 'k' → logprob: -6.253174304962158
    3. 'd' → logprob: -7.003174304962158
    4. ' c' → logprob: -8.378174781799316
    5. '1' → logprob: -10.128174781799316
    6. 'a' → logprob: -10.878174781799316
    7. '2' → logprob: -11.753174781799316
    8. 'b' → logprob: -12.378174781799316
    9. '	c' → logprob: -12.503174781799316
    10. '10' → logprob: -12.753174781799316

Token 48: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009333016350865364
    2. '+k' → logprob: -5.50933313369751
    3. '+h' → logprob: -5.63433313369751
    4. '+d' → logprob: -6.75933313369751
    5. '<|end|>' → logprob: -8.134332656860352
    6. ' +' → logprob: -9.134332656860352
    7. '+c' → logprob: -10.259332656860352
    8. '+b' → logprob: -10.384332656860352
    9. '+a' → logprob: -11.509332656860352
    10. '+(' → logprob: -11.884332656860352

Token 49: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06345263868570328
    2. ' h' → logprob: -2.81345272064209
    3. '(h' → logprob: -6.68845272064209
    4. ' (' → logprob: -8.56345272064209
    5. ' ' → logprob: -10.43845272064209
    6. '	h' → logprob: -12.43845272064209
    7. '(' → logprob: -12.56345272064209
    8. '2' → logprob: -14.12595272064209
    9. '   ' → logprob: -14.12595272064209
    10. ')' → logprob: -14.12595272064209

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.546478935983032e-05
    2. '1' → logprob: -11.250025749206543
    3. ' ' → logprob: -12.500025749206543
    4. 'h' → logprob: -12.875025749206543
    5. '```' → logprob: -13.250025749206543
    6. '<|end|>' → logprob: -13.937525749206543
    7. '/' → logprob: -14.250025749206543
    8. '//' → logprob: -14.375025749206543
    9. '<|end|>' → logprob: -14.750025749206543
    10. 's' → logprob: -15.000025749206543

Token 51: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.8074162653647363e-05
    2. ' //' → logprob: -11.625018119812012
    3. '//=' → logprob: -12.750018119812012
    4. '*' → logprob: -13.250018119812012
    5. '<|end|>' → logprob: -13.500018119812012
    6. '//*' → logprob: -13.875018119812012
    7. '```' → logprob: -14.125018119812012
    8. '//'' → logprob: -15.750018119812012
    9. '`' → logprob: -15.750018119812012
    10. '/' → logprob: -15.875018119812012

Token 52: '20' (ID: 455)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9981420336989686e-05
    2. '<|end|>' → logprob: -11.375020027160645
    3. ' ' → logprob: -12.125020027160645
    4. '1' → logprob: -13.875020027160645
    5. '```' → logprob: -14.500020027160645
    6. '<|end|>' → logprob: -15.000020027160645
    7. '20' → logprob: -15.125020027160645
    8. '۱۰' → logprob: -15.500020027160645
    9. '`' → logprob: -16.125019073486328
    10. '100' → logprob: -16.187519073486328

Token 53: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.0012741618556901813
    2. ')' → logprob: -6.876274108886719
    3. '*d' → logprob: -8.751274108886719
    4. '*)' → logprob: -10.251274108886719
    5. '*' → logprob: -10.376274108886719
    6. ')d' → logprob: -11.126274108886719
    7. ' )' → logprob: -14.501274108886719
    8. ')**' → logprob: -14.626274108886719
    9. '	' → logprob: -14.876274108886719
    10. ')*(' → logprob: -15.251274108886719

Token 54: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.084206375409849e-05
    2. ' d' → logprob: -10.125041007995605
    3. 'c' → logprob: -15.125041007995605
    4. '	d' → logprob: -15.375041007995605
    5. ' ' → logprob: -16.25004005432129
    6. '<|end|>' → logprob: -16.87504005432129
    7. '  ' → logprob: -17.12504005432129
    8. 'a' → logprob: -17.25004005432129
    9. '   ' → logprob: -17.62504005432129
    10. 'e' → logprob: -17.87504005432129

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2263510376214981
    2. '<|end|>' → logprob: -2.101351022720337
    3. '+' → logprob: -2.726351022720337
    4. ' ' → logprob: -5.226351261138916
    5. '\n' → logprob: -5.976351261138916
    6. '#' → logprob: -7.101351261138916
    7. '*' → logprob: -7.226351261138916
    8. '+
' → logprob: -7.476351261138916
    9. '
' → logprob: -7.601351261138916
    10. ')' → logprob: -7.601351261138916

Token 56: 'score' (ID: 21200)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6888287663459778
    2. 'if' → logprob: -0.8138287663459778
    3. '
' → logprob: -3.063828706741333
    4. ' if' → logprob: -5.688828945159912
    5. '```' → logprob: -6.438828945159912
    6. '+' → logprob: -6.688828945159912
    7. '<|end|>' → logprob: -7.938828945159912
    8. '\n' → logprob: -8.188828468322754
    9. '#' → logprob: -8.438828468322754
    10. '
' → logprob: -8.688828468322754

Token 57: '_k' (ID: 11637)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00529008824378252
    2. '_' → logprob: -5.2552900314331055
    3. '_s' → logprob: -10.630290031433105
    4. '_a' → logprob: -11.130290031433105
    5. ' _' → logprob: -12.630290031433105
    6. '_

' → logprob: -13.005290031433105
    7. '_k' → logprob: -13.130290031433105
    8. '_r' → logprob: -13.255290031433105
    9. '_
' → logprob: -13.255290031433105
    10. '<|end|>' → logprob: -13.630290031433105

Token 58: '=k' (ID: 105633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6969259977340698
    2. '=k' → logprob: -0.6969259977340698
    3. '1' → logprob: -5.696926116943359
    4. '_=' → logprob: -8.94692611694336
    5. ' =' → logprob: -9.57192611694336
    6. '=_' → logprob: -9.82192611694336
    7. '=
' → logprob: -10.44692611694336
    8. '=h' → logprob: -10.69692611694336
    9. '=s' → logprob: -11.19692611694336
    10. '+=' → logprob: -11.44692611694336

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033730410039424896
    2. '2' → logprob: -3.4087305068969727
    3. 'k' → logprob: -9.408730506896973
    4. 's' → logprob: -13.408730506896973
    5. 'a' → logprob: -14.908730506896973
    6. 'f' → logprob: -15.033730506896973
    7. '_' → logprob: -16.408729553222656
    8. '```' → logprob: -16.533729553222656
    9. 'b' → logprob: -17.221229553222656
    10. 'e' → logprob: -17.221229553222656

Token 60: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -2.0100624169572257e-05
    2. 'a' → logprob: -11.250020027160645
    3. '*' → logprob: -12.875020027160645
    4. '*c' → logprob: -13.000020027160645
    5. ' *' → logprob: -13.875020027160645
    6. '*b' → logprob: -15.750020027160645
    7. '**' → logprob: -15.875020027160645
    8. '*x' → logprob: -16.12502098083496
    9. '```' → logprob: -16.12502098083496
    10. '#a' → logprob: -16.37502098083496

Token 61: '+k' (ID: 110434)
  Prédit: '+k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.0019852598197758198
    2. '+' → logprob: -6.2519850730896
    3. ' +' → logprob: -10.001985549926758
    4. 'k' → logprob: -12.001985549926758
    5. '*k' → logprob: -12.626985549926758
    6. '+
' → logprob: -14.376985549926758
    7. '+b' → logprob: -14.876985549926758
    8. '+h' → logprob: -15.001985549926758
    9. '+a' → logprob: -15.001985549926758
    10. '```' → logprob: -16.626985549926758

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012523093027994037
    2. 'k' → logprob: -9.00012493133545
    3. '1' → logprob: -13.87512493133545
    4. '```' → logprob: -14.87512493133545
    5. ' ' → logprob: -15.50012493133545
    6. '[' → logprob: -16.750125885009766
    7. '`' → logprob: -17.125125885009766
    8. 'token' → logprob: -17.625125885009766
    9. '<|end|>' → logprob: -17.750125885009766
    10. ' k' → logprob: -17.875125885009766

Token 63: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.001186299603432417
    2. 'b' → logprob: -7.001186370849609
    3. '*' → logprob: -8.25118637084961
    4. ' *' → logprob: -11.37618637084961
    5. ' b' → logprob: -13.87618637084961
    6. '*a' → logprob: -15.12618637084961
    7. '	b' → logprob: -15.62618637084961
    8. ' ' → logprob: -15.75118637084961
    9. '```' → logprob: -16.12618637084961
    10. '+b' → logprob: -16.87618637084961

Token 64: '+(' (ID: 31717)
  Prédit: '+('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+(' → logprob: -0.016947442665696144
    2. '+' → logprob: -4.266947269439697
    3. '+c' → logprob: -6.016947269439697
    4. '+k' → logprob: -8.266947746276855
    5. ' +(' → logprob: -10.766947746276855
    6. ' +' → logprob: -10.891947746276855
    7. '```' → logprob: -11.516947746276855
    8. '+d' → logprob: -12.141947746276855
    9. '+[' → logprob: -12.266947746276855
    10. '+s' → logprob: -12.391947746276855

Token 65: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07389140129089355
    2. '(k' → logprob: -2.6988914012908936
    3. ' k' → logprob: -5.823891639709473
    4. ' (' → logprob: -6.948891639709473
    5. '
' → logprob: -11.448891639709473
    6. '(' → logprob: -12.573891639709473
    7. ' ' → logprob: -12.823891639709473
    8. ')(' → logprob: -12.823891639709473
    9. '{k' → logprob: -13.323891639709473
    10. '1' → logprob: -13.636391639709473

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -14.375001907348633
    3. ' ' → logprob: -15.000001907348633
    4. '2' → logprob: -15.125001907348633
    5. '<|end|>' → logprob: -15.125001907348633
    6. '<|end|>' → logprob: -15.375001907348633
    7. '#' → logprob: -16.562501907348633
    8. '`' → logprob: -16.687501907348633
    9. '۱' → logprob: -16.750001907348633
    10. '১' → logprob: -16.812501907348633

Token 67: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -3.531315314830863e-06
    2. ' //' → logprob: -12.875003814697266
    3. '```' → logprob: -14.875003814697266
    4. '#' → logprob: -15.000003814697266
    5. '//=' → logprob: -16.125003814697266
    6. '>//' → logprob: -17.375003814697266
    7. '/' → logprob: -17.500003814697266
    8. ')//' → logprob: -18.125003814697266
    9. '`' → logprob: -18.750003814697266
    10. '//#' → logprob: -18.750003814697266

Token 68: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.750011444091797
    3. '20' → logprob: -13.875011444091797
    4. '1' → logprob: -14.125011444091797
    5. '```' → logprob: -14.437511444091797
    6. '۱۰' → logprob: -15.250011444091797
    7. '<|end|>' → logprob: -15.562511444091797
    8. '１０' → logprob: -16.125011444091797
    9. '१०' → logprob: -16.375011444091797
    10. '  ' → logprob: -16.625011444091797

Token 69: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.0015243870439007878
    2. ')' → logprob: -6.501524448394775
    3. '*)' → logprob: -11.251523971557617
    4. '*' → logprob: -11.751523971557617
    5. ' )' → logprob: -14.501523971557617
    6. ')**' → logprob: -14.876523971557617
    7. ')*(' → logprob: -16.376523971557617
    8. ')#' → logprob: -16.501523971557617
    9. '	' → logprob: -16.626523971557617
    10. ' ' → logprob: -17.001523971557617

Token 70: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.3120038501219824e-05
    2. ' c' → logprob: -9.875053405761719
    3. '<|end|>' → logprob: -14.500053405761719
    4. ' ' → logprob: -14.875053405761719
    5. '	c' → logprob: -15.500053405761719
    6. ')c' → logprob: -15.500053405761719
    7. '*c' → logprob: -15.875053405761719
    8. '  ' → logprob: -16.37505340576172
    9. '   ' → logprob: -17.00005340576172
    10. 'с' → logprob: -17.62505340576172

Token 71: '+(' (ID: 31717)
  Prédit: '+('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+(' → logprob: -0.004513788968324661
    2. '+' → logprob: -5.629513740539551
    3. '+d' → logprob: -7.254513740539551
    4. ' +(' → logprob: -9.12951374053955
    5. ' +' → logprob: -9.75451374053955
    6. '+k' → logprob: -10.25451374053955
    7. '(' → logprob: -13.12951374053955
    8. '(d' → logprob: -14.25451374053955
    9. '+
' → logprob: -14.37951374053955
    10. 'd' → logprob: -15.00451374053955

Token 72: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010733000235632062
    2. ' k' → logprob: -6.876073360443115
    3. '(k' → logprob: -10.126072883605957
    4. ' (' → logprob: -15.126072883605957
    5. '	k' → logprob: -16.126073837280273
    6. ' ' → logprob: -18.001073837280273
    7. '(' → logprob: -18.126073837280273
    8. '"k' → logprob: -18.126073837280273
    9. '*k' → logprob: -18.376073837280273
    10. '{k' → logprob: -18.626073837280273

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. ' ' → logprob: -16.125
    4. '1' → logprob: -16.125
    5. '//' → logprob: -16.5
    6. 'k' → logprob: -17.625
    7. '۲' → logprob: -17.75
    8. '२' → logprob: -18.375
    9. '২' → logprob: -18.875
    10. '２' → logprob: -19.125

Token 74: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.6240566083070007e-06
    2. ' //' → logprob: -13.875001907348633
    3. '```' → logprob: -14.875001907348633
    4. '//=' → logprob: -16.000001907348633
    5. '#' → logprob: -16.250001907348633
    6. '/' → logprob: -17.750001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. ')//' → logprob: -18.875001907348633
    9. '>//' → logprob: -19.125001907348633
    10. '`' → logprob: -19.125001907348633

Token 75: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.0683535037969705e-05
    2. '10' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.87501049041748
    4. '<|end|>' → logprob: -16.500011444091797
    5. '2' → logprob: -17.500011444091797
    6. ')' → logprob: -18.625011444091797
    7. '30' → logprob: -18.750011444091797
    8. '  ' → logprob: -19.250011444091797
    9. '۲۰' → logprob: -19.250011444091797
    10. '```' → logprob: -19.250011444091797

Token 76: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.002506578341126442
    2. ')' → logprob: -6.002506732940674
    3. '*)' → logprob: -10.877506256103516
    4. '*' → logprob: -11.502506256103516
    5. '	' → logprob: -14.627506256103516
    6. ' )' → logprob: -14.627506256103516
    7. ')d' → logprob: -15.252506256103516
    8. ')**' → logprob: -15.752506256103516
    9. ' ' → logprob: -16.002506256103516
    10. '*d' → logprob: -16.127506256103516

Token 77: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.5577775128767826e-06
    2. ' d' → logprob: -12.125005722045898
    3. '	d' → logprob: -18.2500057220459
    4. ')d' → logprob: -19.8750057220459
    5. '```' → logprob: -20.0000057220459
    6. '>d' → logprob: -20.7500057220459
    7. '`' → logprob: -21.1250057220459
    8. '*d' → logprob: -21.2500057220459
    9. 'c' → logprob: -21.6250057220459
    10. '_d' → logprob: -21.8750057220459

Token 78: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00687000248581171
    2. 'print' → logprob: -5.381869792938232
    3. '
' → logprob: -6.256869792938232
    4. '\n' → logprob: -8.88187026977539
    5. '```' → logprob: -9.13187026977539
    6. ' if' → logprob: -10.00687026977539
    7. '
' → logprob: -11.00687026977539
    8. '`
' → logprob: -12.38187026977539
    9. '\' → logprob: -12.75687026977539
    10. '``' → logprob: -12.88187026977539

Token 79: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011083542369306087
    2. 'print' → logprob: -4.511083602905273
    3. ' if' → logprob: -10.886083602905273
    4. '```' → logprob: -11.886083602905273
    5. '
' → logprob: -12.011083602905273
    6. '\n' → logprob: -13.011083602905273
    7. 'i' → logprob: -14.511083602905273
    8. '' → logprob: -15.136083602905273
    9. '\' → logprob: -15.511083602905273
    10. '#' → logprob: -15.511083602905273

Token 80: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.47409385442733765
    2. ' score' → logprob: -0.9740938544273376
    3. '	score' → logprob: -11.724093437194824
    4. '(score' → logprob: -11.849093437194824
    5. ' ' → logprob: -13.974093437194824
    6. ' ' → logprob: -14.724093437194824
    7. '  ' → logprob: -16.47409439086914
    8. '   ' → logprob: -16.72409439086914
    9. 'sc' → logprob: -17.34909439086914
    10. '_score' → logprob: -17.47409439086914

Token 81: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.002476016292348504
    2. '_' → logprob: -6.002476215362549
    3. '_

' → logprob: -16.12747573852539
    4. '_a' → logprob: -17.50247573852539
    5. '_g' → logprob: -17.62747573852539
    6. '_b' → logprob: -17.62747573852539
    7. '_s' → logprob: -17.75247573852539
    8. '_k' → logprob: -17.87747573852539
    9. '_f' → logprob: -18.00247573852539
    10. '>' → logprob: -18.00247573852539

Token 82: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5238772034645081
    2. ' >' → logprob: -0.8988772034645081
    3. ' <' → logprob: -7.898877143859863
    4. '<' → logprob: -8.023877143859863
    5. '><' → logprob: -11.023877143859863
    6. ' ' → logprob: -11.648877143859863
    7. '==' → logprob: -11.898877143859863
    8. ' ' → logprob: -11.898877143859863
    9. ' ><' → logprob: -12.148877143859863
    10. ' ==' → logprob: -12.523877143859863

Token 83: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.003600544296205044
    2. ' score' → logprob: -5.628600597381592
    3. '	score' → logprob: -14.753600120544434
    4. ' ' → logprob: -16.75360107421875
    5. '(score' → logprob: -17.25360107421875
    6. 'scores' → logprob: -17.75360107421875
    7. 'Score' → logprob: -18.25360107421875
    8. '0' → logprob: -18.37860107421875
    9. '_score' → logprob: -18.62860107421875
    10. '.score' → logprob: -18.87860107421875

Token 84: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -5.512236498361744e-07
    2. '_h' → logprob: -15.250000953674316
    3. '_' → logprob: -15.375000953674316
    4. '	k' → logprob: -19.875
    5. '_r' → logprob: -20.125
    6. 'k' → logprob: -20.5
    7. '```' → logprob: -20.875
    8. '_K' → logprob: -21.125
    9. '_a' → logprob: -21.25
    10. ' _' → logprob: -21.625

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035348518285900354
    2. ':
' → logprob: -6.00353479385376
    3. 'print' → logprob: -7.00353479385376
    4. ' print' → logprob: -8.878535270690918
    5. ' :' → logprob: -12.128535270690918
    6. '>' → logprob: -13.753535270690918
    7. ':
' → logprob: -13.878535270690918
    8. '):' → logprob: -14.503535270690918
    9. '.print' → logprob: -14.878535270690918
    10. '>:' → logprob: -15.128535270690918

Token 86: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31378471851348877
    2. ' print' → logprob: -1.3137847185134888
    3. '   ' → logprob: -7.688784599304199
    4. '	print' → logprob: -9.6887845993042
    5. '```' → logprob: -13.5637845993042
    6. ' ' → logprob: -14.9387845993042
    7. '
' → logprob: -15.3137845993042
    8. '.print' → logprob: -15.5637845993042
    9. '
' → logprob: -16.438785552978516
    10. '_print' → logprob: -16.438785552978516

Token 87: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007235141238197684
    2. ' print' → logprob: -7.250723361968994
    3. '   ' → logprob: -11.375723838806152
    4. '```' → logprob: -14.375723838806152
    5. 'pr' → logprob: -14.625723838806152
    6. 'prin' → logprob: -15.500723838806152
    7. '	print' → logprob: -15.750723838806152
    8. 'prit' → logprob: -15.750723838806152
    9. '`' → logprob: -15.875723838806152
    10. ' ' → logprob: -16.000722885131836

Token 88: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0435139425098896
    2. '(' → logprob: -3.5435140132904053
    3. '('' → logprob: -4.293513774871826
    4. '(`' → logprob: -12.918514251708984
    5. '"' → logprob: -13.418514251708984
    6. '("("' → logprob: -13.543514251708984
    7. ' ("' → logprob: -13.918514251708984
    8. '(H' → logprob: -14.043514251708984
    9. '(("' → logprob: -14.168514251708984
    10. '(h' → logprob: -14.293514251708984

Token 89: 'hiro' (ID: 105513)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1777173280715942
    2. 'Yes' → logprob: -2.6777172088623047
    3. 'H' → logprob: -2.8027172088623047
    4. '"' → logprob: -2.8027172088623047
    5. 'First' → logprob: -2.9277172088623047
    6. 'Home' → logprob: -3.3027172088623047
    7. 'h' → logprob: -3.5527172088623047
    8. 'High' → logprob: -3.6777172088623047
    9. 'Hex' → logprob: -3.8027172088623047
    10. 'M' → logprob: -4.052717208862305

Token 90: 'shi' (ID: 33444)
  Prédit: 'shi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shi' → logprob: -1.06890869140625
    2. 'shima' → logprob: -1.31890869140625
    3. '")' → logprob: -1.44390869140625
    4. 'oki' → logprob: -3.06890869140625
    5. 's' → logprob: -3.44390869140625
    6. ')' → logprob: -3.44390869140625
    7. 'sh' → logprob: -5.06890869140625
    8. 'g' → logprob: -5.69390869140625
    9. '>' → logprob: -5.69390869140625
    10. 't' → logprob: -5.81890869140625

Token 91: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008892393670976162
    2. '")' → logprob: -5.00889253616333
    3. '<|end|>' → logprob: -6.25889253616333
    4. '<|end|>' → logprob: -10.008892059326172
    5. '"' → logprob: -10.133892059326172
    6. '```' → logprob: -10.383892059326172
    7. '')' → logprob: -10.758892059326172
    8. '`)' → logprob: -11.133892059326172
    9. '\n' → logprob: -11.258892059326172
    10. '#' → logprob: -11.383892059326172

Token 92: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0001793457195162773
    2. '<|end|>' → logprob: -8.875179290771484
    3. ' elif' → logprob: -10.875179290771484
    4. '```' → logprob: -11.500179290771484
    5. 'else' → logprob: -12.375179290771484
    6. 'el' → logprob: -13.000179290771484
    7. '#elif' → logprob: -13.625179290771484
    8. '	elif' → logprob: -14.125179290771484
    9. 'elseif' → logprob: -14.375179290771484
    10. '<|end|>' → logprob: -15.000179290771484

Token 93: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.002498609945178032
    2. 'score' → logprob: -6.002498626708984
    3. ' ' → logprob: -11.502498626708984
    4. '	score' → logprob: -11.752498626708984
    5. '(score' → logprob: -12.627498626708984
    6. ' ' → logprob: -14.002498626708984
    7. '  ' → logprob: -14.502498626708984
    8. '_score' → logprob: -16.252498626708984
    9. '   ' → logprob: -16.252498626708984
    10. 'Score' → logprob: -17.752498626708984

Token 94: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.3872738182544708
    2. '_h' → logprob: -1.1372737884521484
    3. '_' → logprob: -9.137273788452148
    4. '_r' → logprob: -9.387273788452148
    5. '_t' → logprob: -9.762273788452148
    6. '_j' → logprob: -10.387273788452148
    7. '_b' → logprob: -10.637273788452148
    8. '_c' → logprob: -11.012273788452148
    9. '_s' → logprob: -11.137273788452148
    10. '_i' → logprob: -11.387273788452148

Token 95: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00016349162615370005
    2. ' >' → logprob: -8.750163078308105
    3. '">' → logprob: -12.875163078308105
    4. ':' → logprob: -13.875163078308105
    5. '>:' → logprob: -14.500163078308105
    6. '>a' → logprob: -15.250163078308105
    7. ' ' → logprob: -16.375164031982422
    8. '>b' → logprob: -16.750164031982422
    9. '>`' → logprob: -16.875164031982422
    10. ''>' → logprob: -17.000164031982422

Token 96: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.001171056181192398
    2. ' score' → logprob: -6.751171112060547
    3. '	score' → logprob: -15.501171112060547
    4. ' ' → logprob: -15.751171112060547
    5. 'sc' → logprob: -16.251171112060547
    6. '(score' → logprob: -16.376171112060547
    7. 'scores' → logprob: -17.001171112060547
    8. 'code' → logprob: -17.126171112060547
    9. 's' → logprob: -17.376171112060547
    10. '   ' → logprob: -17.626171112060547

Token 97: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -13.000004768371582
    3. '_k' → logprob: -13.375004768371582
    4. 'h' → logprob: -14.125004768371582
    5. '_i' → logprob: -16.625003814697266
    6. '_a' → logprob: -17.000003814697266
    7. '_u' → logprob: -18.625003814697266
    8. '_f' → logprob: -18.875003814697266
    9. '_j' → logprob: -18.875003814697266
    10. '_

' → logprob: -18.875003814697266

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.572941179503687e-05
    2. ':
' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '):' → logprob: -16.375045776367188
    5. ' :' → logprob: -17.125045776367188
    6. ':

' → logprob: -18.250045776367188
    7. ':**' → logprob: -18.750045776367188
    8. ')' → logprob: -19.125045776367188
    9. ':`' → logprob: -19.250045776367188
    10. ':
' → logprob: -19.375045776367188

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004858953412622213
    2. 'print' → logprob: -5.37985897064209
    3. '```' → logprob: -9.25485897064209
    4. '    
' → logprob: -9.75485897064209
    5. ' print' → logprob: -11.00485897064209
    6. '"' → logprob: -11.00485897064209
    7. '    ' → logprob: -11.12985897064209
    8. '
' → logprob: -11.75485897064209
    9. '       ' → logprob: -11.87985897064209
    10. '  ' → logprob: -12.37985897064209

Token 100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001329287188127637
    2. ' print' → logprob: -6.87632942199707
    3. '   ' → logprob: -8.12632942199707
    4. '	print' → logprob: -14.50132942199707
    5. '```' → logprob: -16.00132942199707
    6. '    ' → logprob: -16.87632942199707
    7. ' ' → logprob: -17.00132942199707
    8. '  ' → logprob: -17.75132942199707
    9. '.print' → logprob: -17.87632942199707
    10. 'printf' → logprob: -18.37632942199707

Token 101: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008655345998704433
    2. '(' → logprob: -4.758655548095703
    3. '("("' → logprob: -10.133655548095703
    4. '('' → logprob: -14.508655548095703
    5. '("(' → logprob: -15.508655548095703
    6. '("")' → logprob: -16.508655548095703
    7. '(""' → logprob: -16.508655548095703
    8. '("\"' → logprob: -16.758655548095703
    9. '(("' → logprob: -17.008655548095703
    10. '"' → logprob: -17.008655548095703

Token 102: 'ken' (ID: 2144)
  Prédit: 'ken'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.44930335879325867
    2. 'kens' → logprob: -1.574303388595581
    3. 'kaz' → logprob: -2.324303388595581
    4. 'k' → logprob: -3.449303388595581
    5. 'kent' → logprob: -4.824303150177002
    6. 'kan' → logprob: -5.449303150177002
    7. 'ko' → logprob: -6.074303150177002
    8. 'ke' → logprob: -6.074303150177002
    9. 'ka' → logprob: -6.324303150177002
    10. 'kou' → logprob: -7.199303150177002

Token 103: 'ji' (ID: 4133)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6839129328727722
    2. 'ji' → logprob: -1.183912992477417
    3. ')' → logprob: -1.933912992477417
    4. 'o' → logprob: -3.183912992477417
    5. '"' → logprob: -6.808912754058838
    6. 'shir' → logprob: -8.308913230895996
    7. 'os' → logprob: -9.058913230895996
    8. '")
' → logprob: -9.183913230895996
    9. 'jie' → logprob: -9.183913230895996
    10. 'shi' → logprob: -9.183913230895996

Token 104: 'ro' (ID: 298)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.4778522849082947
    2. '")' → logprob: -0.9778522849082947
    3. ')
' → logprob: -6.2278523445129395
    4. ')' → logprob: -7.1028523445129395
    5. 'else' → logprob: -7.1028523445129395
    6. ')")
' → logprob: -9.727851867675781
    7. '")
' → logprob: -9.852851867675781
    8. '"' → logprob: -11.227851867675781
    9. ')")' → logprob: -11.477851867675781
    10. '()' → logprob: -12.602851867675781

Token 105: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.16049472987651825
    2. '")
' → logprob: -1.9104946851730347
    3. '")
' → logprob: -8.535494804382324
    4. ')' → logprob: -10.035494804382324
    5. ')
' → logprob: -11.285494804382324
    6. 'else' → logprob: -11.535494804382324
    7. ')")
' → logprob: -12.785494804382324
    8. ')")' → logprob: -12.785494804382324
    9. '"' → logprob: -13.410494804382324
    10. '")

' → logprob: -15.035494804382324

Token 106: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.2664456789934775e-06
    2. ' else' → logprob: -13.750000953674316
    3. '```' → logprob: -17.125001907348633
    4. '#else' → logprob: -17.375001907348633
    5. 'elser' → logprob: -17.375001907348633
    6. 'e' → logprob: -17.625001907348633
    7. 'elif' → logprob: -17.750001907348633
    8. '_else' → logprob: -18.125001907348633
    9. 'elses' → logprob: -18.375001907348633
    10. 'els' → logprob: -18.375001907348633

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007110013975761831
    2. ':
' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.250711441040039
    4. ':
' → logprob: -15.375711441040039
    5. ':

' → logprob: -17.00071144104004
    6. ' :' → logprob: -17.12571144104004
    7. 'print' → logprob: -17.62571144104004
    8. '):' → logprob: -17.62571144104004
    9. ':return' → logprob: -17.87571144104004
    10. ':def' → logprob: -18.37571144104004

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033725807443261147
    2. 'print' → logprob: -5.878372669219971
    3. ' print' → logprob: -7.503372669219971
    4. '	print' → logprob: -11.753372192382812
    5. '   ' → logprob: -13.003372192382812
    6. '```' → logprob: -13.253372192382812
    7. '       ' → logprob: -13.378372192382812
    8. '    ' → logprob: -13.878372192382812
    9. '    
' → logprob: -14.503372192382812
    10. '<|end|>' → logprob: -15.128372192382812

Token 109: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017042214749380946
    2. ' print' → logprob: -6.376704216003418
    3. '   ' → logprob: -13.376704216003418
    4. '	print' → logprob: -15.376704216003418
    5. 'pr' → logprob: -16.001705169677734
    6. 'printf' → logprob: -17.376705169677734
    7. 'Print' → logprob: -17.376705169677734
    8. ' ' → logprob: -17.501705169677734
    9. 'println' → logprob: -18.251705169677734
    10. '.print' → logprob: -19.001705169677734

Token 110: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.0231359004974365
    2. '("("' → logprob: -1.0231359004974365
    3. '(' → logprob: -1.2731359004974365
    4. '()' → logprob: -7.523136138916016
    5. '('' → logprob: -8.523136138916016
    6. '("(' → logprob: -8.773136138916016
    7. '("="' → logprob: -8.898136138916016
    8. '("")' → logprob: -9.648136138916016
    9. '("""' → logprob: -12.273136138916016
    10. '(("' → logprob: -12.773136138916016

Token 111: 'even' (ID: 28689)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.576616108417511
    2. '"' → logprob: -1.3266160488128662
    3. 'b' → logprob: -1.8266160488128662
    4. 'even' → logprob: -5.451616287231445
    5. 'Draw' → logprob: -6.076616287231445
    6. 'DRAW' → logprob: -7.326616287231445
    7. 'emp' → logprob: -7.451616287231445
    8. 'tie' → logprob: -7.451616287231445
    9. 'equal' → logprob: -7.701616287231445
    10. 'nak' → logprob: -8.076616287231445

Token 112: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.011373155459296e-05
    2. ')")' → logprob: -11.125030517578125
    3. '"' → logprob: -11.375030517578125
    4. ')' → logprob: -13.375030517578125
    5. '()' → logprob: -13.875030517578125
    6. '")
' → logprob: -14.000030517578125
    7. '!")' → logprob: -15.000030517578125
    8. '("' → logprob: -17.000030517578125
    9. 'e' → logprob: -17.500030517578125
    10. '}")' → logprob: -17.750030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 58.18%
Précision adaptée (1ère position): 60.91%
Précision (top 10): 85.45%
================================================================================
