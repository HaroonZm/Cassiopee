================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from heapq import heappush, heappop

def dist(a, b):
    return math.hypot(a[0]-b[0], a[1]-b[1])

def min_dist_to_monsters(p, monsters):
    return min(dist(p,m) for m in monsters) if monsters else float('inf')

def min_dist_count(p, monsters):
    dists = [dist(p,m) for m in monsters]
    if not dists:
        return 0
    mind = min(dists)
    return sum(1 for v in dists if abs(v-mind)<1e-10)

def inside_area(p):
    return 0.0<=p[0]<=4.0 and 0.0<=p[1]<=4.0

def can_be_safe(p, monsters):
    cnt = min_dist_count(p, monsters)
    return cnt>=2

def solve(monsters):
    start_points = [(0,y) for y in [i*0.5 for i in range(9)] if can_be_safe((0,y),monsters)]
    end_x = 4.0
    EPS=1e-7

    nodes = []
    nodes.extend(start_points)
    nodes.extend(monsters)
    nodes.append((end_x,0.0))
    nodes.append((end_x,4.0))

    # filter end points if safe
    end_points = []
    for y in [i*0.5 for i in range(9)]:
        p = (end_x,y)
        if can_be_safe(p, monsters):
            nodes.append(p)
            end_points.append(p)
    if not end_points:
        return 'impossible'

    # Build graph of edges between nodes where the path is safe all along
    # We approximate safety over each edge by small steps along the segment
    graph = {i:[] for i in range(len(nodes))}
    n = len(nodes)
    for i in range(n):
        for j in range(i+1,n):
            a,b = nodes[i], nodes[j]
            # Check if whole segment is inside region and safe
            length = dist(a,b)
            if length==0:
                continue
            steps = max(10,int(length/0.05))
            safe = True
            for k in range(steps+1):
                t = k/steps
                x = a[0]+(b[0]-a[0])*t
                y = a[1]+(b[1]-a[1])*t
                p = (x,y)
                if not inside_area(p) or not can_be_safe(p, monsters):
                    safe = False
                    break
            if safe:
                graph[i].append((j,length))
                graph[j].append((i,length))

    # Start nodes indices
    start_ids = [i for i,p in enumerate(nodes) if p in start_points]
    end_ids = [i for i,p in enumerate(nodes) if p in end_points]

    # Dijkstra from all start points
    dist_arr = [float('inf')]*n
    hq = []
    for s in start_ids:
        dist_arr[s]=0.0
        heappush(hq,(0.0,s))

    while hq:
        cd,u=heappop(hq)
        if dist_arr[u]<cd-1e-10:
            continue
        if u in end_ids:
            return '{:.12f}'.format(cd)
        for v,w in graph[u]:
            nd = cd+w
            if nd<dist_arr[v]-1e-10:
                dist_arr[v]=nd
                heappush(hq,(nd,v))
    return 'impossible'

input=sys.stdin.readline
while True:
    n=int(input())
    if n==0:
        break
    monsters = [tuple(map(float, input().split())) for _ in range(n)]
    print(solve(monsters))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10138683021068573
    2. '\' → logprob: -3.601386785507202
    3. '\n' → logprob: -3.976386785507202
    4. 'import' → logprob: -4.351387023925781
    5. '<|end|>' → logprob: -4.601387023925781
    6. '```' → logprob: -4.726387023925781
    7. '
' → logprob: -4.976387023925781
    8. '

' → logprob: -5.476387023925781
    9. '<|end|>' → logprob: -6.601387023925781
    10. '' → logprob: -6.601387023925781

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.423870712518692
    2. '\n' → logprob: -2.298870801925659
    3. 'import' → logprob: -2.548870801925659
    4. '
' → logprob: -3.048870801925659
    5. '\' → logprob: -3.423870801925659
    6. '```' → logprob: -3.548870801925659
    7. '<|end|>' → logprob: -3.798870801925659
    8. '

' → logprob: -4.42387056350708
    9. ',' → logprob: -4.54887056350708
    10. '<|end|>' → logprob: -6.04887056350708

Token 7: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6535660624504089
    2. ' os' → logprob: -0.7785660624504089
    3. 'collections' → logprob: -4.903565883636475
    4. 'os' → logprob: -5.278565883636475
    5. ' datetime' → logprob: -5.778565883636475
    6. ' itertools' → logprob: -6.653565883636475
    7. ' typing' → logprob: -6.778565883636475
    8. ' numpy' → logprob: -7.528565883636475
    9. ' statistics' → logprob: -7.653565883636475
    10. ' math' → logprob: -7.903565883636475

Token 8: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.054500666621607e-06
    2. ' import' → logprob: -13.50000286102295
    3. 'import' → logprob: -13.62500286102295
    4. ' queue' → logprob: -15.12500286102295
    5. 'queue' → logprob: -15.62500286102295
    6. 'dict' → logprob: -18.500003814697266
    7. 'space' → logprob: -18.875003814697266
    8. ' q' → logprob: -19.000003814697266
    9. 's' → logprob: -19.500003814697266
    10. 'i' → logprob: -19.750003814697266

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01821303926408291
    2. 'import' → logprob: -4.018213272094727
    3. '.' → logprob: -10.518213272094727
    4. ' ' → logprob: -10.643213272094727
    5. '	import' → logprob: -12.393213272094727
    6. '<|end|>' → logprob: -13.018213272094727
    7. '_import' → logprob: -14.018213272094727
    8. 'space' → logprob: -14.143213272094727
    9. ' space' → logprob: -14.268213272094727
    10. '.import' → logprob: -14.393213272094727

Token 10: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.6946641802787781
    2. ' he' → logprob: -0.6946641802787781
    3. ' n' → logprob: -7.069664001464844
    4. 'heap' → logprob: -8.069664001464844
    5. 'n' → logprob: -8.694664001464844
    6. 'nl' → logprob: -9.069664001464844
    7. ' ' → logprob: -10.444664001464844
    8. 'import' → logprob: -10.944664001464844
    9. ' heap' → logprob: -11.944664001464844
    10. 'merge' → logprob: -12.069664001464844

Token 11: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.006781808100640774
    2. 'ap' → logprob: -5.006781578063965
    3. 'a' → logprob: -9.631781578063965
    4. 'apl' → logprob: -15.631781578063965
    5. 'q' → logprob: -15.756781578063965
    6. 'aq' → logprob: -15.881781578063965
    7. 'appen' → logprob: -16.25678253173828
    8. 'appa' → logprob: -16.38178253173828
    9. 'ап' → logprob: -16.75678253173828
    10. 'apput' → logprob: -17.38178253173828

Token 12: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.660315895918757e-05
    2. 'op' → logprob: -9.500076293945312
    3. 'us' → logprob: -13.625076293945312
    4. 'u' → logprob: -14.750076293945312
    5. 'o' → logprob: -17.125076293945312
    6. '[' → logprob: -19.375076293945312
    7. '```' → logprob: -20.250076293945312
    8. 'ut' → logprob: -20.375076293945312
    9. 'USH' → logprob: -20.625076293945312
    10. 'osh' → logprob: -21.375076293945312

Token 13: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6378688812255859
    2. 'he' → logprob: -1.137868881225586
    3. ',' → logprob: -2.387868881225586
    4. 'import' → logprob: -3.137868881225586
    5. ' ' → logprob: -4.887868881225586
    6. '(
' → logprob: -6.137868881225586
    7. ' he' → logprob: -6.137868881225586
    8. ' (' → logprob: -6.637868881225586
    9. ' and' → logprob: -7.637868881225586
    10. ')' → logprob: -7.762868881225586

Token 14: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.08897273242473602
    2. ' he' → logprob: -2.463972806930542
    3. 'heap' → logprob: -10.463973045349121
    4. '.he' → logprob: -13.213973045349121
    5. ' ' → logprob: -14.338973045349121
    6. '_he' → logprob: -14.338973045349121
    7. ' heap' → logprob: -14.463973045349121
    8. '```' → logprob: -14.838973045349121
    9. 'hep' → logprob: -15.713973045349121
    10. 'hev' → logprob: -15.713973045349121

Token 15: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.7610454708337784e-05
    2. 'ap' → logprob: -10.500027656555176
    3. 'appen' → logprob: -18.25002670288086
    4. 'a' → logprob: -18.75002670288086
    5. 'APP' → logprob: -19.75002670288086
    6. ' app' → logprob: -19.87502670288086
    7. 'appt' → logprob: -20.25002670288086
    8. '_app' → logprob: -20.37502670288086
    9. '	app' → logprob: -20.87502670288086
    10. '(app' → logprob: -21.00002670288086

Token 16: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00043162284418940544
    2. 'ush' → logprob: -7.750431537628174
    3. 'o' → logprob: -14.500432014465332
    4. 'opp' → logprob: -15.750432014465332
    5. 'opl' → logprob: -16.500431060791016
    6. 'opleft' → logprob: -16.750431060791016
    7. 'p' → logprob: -17.375431060791016
    8. ' op' → logprob: -17.500431060791016
    9. 'opf' → logprob: -18.250431060791016
    10. 'оп' → logprob: -18.375431060791016

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9740530848503113
    2. '(' → logprob: -1.724053144454956
    3. '

' → logprob: -2.224053144454956
    4. '\n' → logprob: -2.349053144454956
    5. '(
' → logprob: -2.599053144454956
    6. '\' → logprob: -2.849053144454956
    7. 'def' → logprob: -3.224053144454956
    8. '```' → logprob: -3.849053144454956
    9. '' → logprob: -4.974052906036377
    10. '`' → logprob: -5.224052906036377

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2858995497226715
    2. 'd' → logprob: -1.6608995199203491
    3. '(' → logprob: -3.0358996391296387
    4. 'de' → logprob: -5.660899639129639
    5. 'class' → logprob: -6.285899639129639
    6. '\' → logprob: -6.285899639129639
    7. '```' → logprob: -7.160899639129639
    8. '(
' → logprob: -7.535899639129639
    9. '#' → logprob: -7.660899639129639
    10. '.' → logprob: -8.16089916229248

Token 19: ' dist' (ID: 3601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0938001424074173
    2. ' find' → logprob: -3.2188000679016113
    3. ' d' → logprob: -3.8438000679016113
    4. ' a' → logprob: -4.343800067901611
    5. ' shortest' → logprob: -4.593800067901611
    6. ' calculate' → logprob: -6.343800067901611
    7. ' D' → logprob: -7.093800067901611
    8. ' space' → logprob: -7.468800067901611
    9. ' compute' → logprob: -8.09380054473877
    10. ' solve' → logprob: -8.34380054473877

Token 20: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11119420826435089
    2. '(a' → logprob: -2.361194133758545
    3. 'ance' → logprob: -4.611194133758545
    4. '(x' → logprob: -7.986194133758545
    5. 'ANCE' → logprob: -7.986194133758545
    6. '(p' → logprob: -9.236194610595703
    7. 'a' → logprob: -9.736194610595703
    8. ' (' → logprob: -10.611194610595703
    9. 'an' → logprob: -10.986194610595703
    10. 'anc' → logprob: -11.111194610595703

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015859126579016447
    2. ',b' → logprob: -7.001585960388184
    3. ' ,' → logprob: -8.001585960388184
    4. '[' → logprob: -8.751585960388184
    5. ',a' → logprob: -9.126585960388184
    6. ')' → logprob: -10.376585960388184
    7. '):' → logprob: -11.126585960388184
    8. 'a' → logprob: -12.001585960388184
    9. ',p' → logprob: -12.751585960388184
    10. '[],' → logprob: -13.376585960388184

Token 22: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759857892990112
    2. ' b' → logprob: -0.8259857892990112
    3. ')' → logprob: -10.7009859085083
    4. '<|end|>' → logprob: -11.7009859085083
    5. ' )' → logprob: -11.8259859085083
    6. ' ' → logprob: -12.4509859085083
    7. ')b' → logprob: -12.7009859085083
    8. '<|end|>' → logprob: -14.8259859085083
    9. '):' → logprob: -15.4509859085083
    10. ',' → logprob: -15.8259859085083

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004111880902200937
    2. ')' → logprob: -5.5041117668151855
    3. ',' → logprob: -11.004112243652344
    4. '):
' → logprob: -11.629112243652344
    5. ':' → logprob: -12.754112243652344
    6. ' ):' → logprob: -13.379112243652344
    7. '[' → logprob: -14.129112243652344
    8. 'a' → logprob: -14.629112243652344
    9. '),' → logprob: -15.129112243652344
    10. '.' → logprob: -15.379112243652344

Token 24: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13785327970981598
    2. ':' → logprob: -2.2628533840179443
    3. '):' → logprob: -3.8878533840179443
    4. '():' → logprob: -6.762853145599365
    5. '(
' → logprob: -6.887853145599365
    6. '(a' → logprob: -7.137853145599365
    7. ')' → logprob: -8.012853622436523
    8. '.' → logprob: -8.637853622436523
    9. ',' → logprob: -9.012853622436523
    10. '(x' → logprob: -9.387853622436523

Token 25: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8916212320327759
    2. '(' → logprob: -1.3916212320327759
    3. 'return' (adapté à ' return') → logprob: -1.8916212320327759
    4. ' math' → logprob: -2.3916211128234863
    5. '   ' → logprob: -3.1416211128234863
    6. ' (' → logprob: -4.016621112823486
    7. '(math' → logprob: -4.141621112823486
    8. 'math' → logprob: -4.766621112823486
    9. '    ' → logprob: -5.516621112823486
    10. ' ' → logprob: -5.641621112823486

Token 26: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.008757446892559528
    2. '(math' → logprob: -5.133757591247559
    3. 'math' → logprob: -6.633757591247559
    4. ' (' → logprob: -7.008757591247559
    5. ' ' → logprob: -8.008757591247559
    6. ' ((' → logprob: -8.383757591247559
    7. '(' → logprob: -11.133757591247559
    8. ' int' → logprob: -11.383757591247559
    9. '((' → logprob: -12.133757591247559
    10. ' ' → logprob: -12.508757591247559

Token 27: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.039458125829696655
    2. '.' → logprob: -3.2894580364227295
    3. '.dist' → logprob: -7.164458274841309
    4. '.h' → logprob: -7.664458274841309
    5. '.s' → logprob: -8.789458274841309
    6. '.atan' → logprob: -11.664458274841309
    7. '.f' → logprob: -12.664458274841309
    8. '.pow' → logprob: -12.664458274841309
    9. '.ceil' → logprob: -13.789458274841309
    10. '.Sqrt' → logprob: -13.914458274841309

Token 28: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.0006764543941244483
    2. 'a' → logprob: -7.75067663192749
    3. 'av' → logprob: -8.375676155090332
    4. 'hyp' → logprob: -11.875676155090332
    5. 'y' → logprob: -12.625676155090332
    6. 'sqrt' → logprob: -13.375676155090332
    7. 'avers' → logprob: -13.500676155090332
    8. 'at' → logprob: -14.625676155090332
    9. 'ash' → logprob: -15.625676155090332
    10. 'avit' → logprob: -15.750676155090332

Token 29: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -1.981667537620524e-06
    2. 'otl' → logprob: -14.000001907348633
    3. 'o' → logprob: -14.125001907348633
    4. 'otlin' → logprob: -15.750001907348633
    5. 'otp' → logprob: -16.000001907348633
    6. 't' → logprob: -17.125001907348633
    7. 'от' → logprob: -17.250001907348633
    8. 'ots' → logprob: -17.500001907348633
    9. '```' → logprob: -17.750001907348633
    10. '2' → logprob: -18.625001907348633

Token 30: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6935199499130249
    2. '(a' → logprob: -0.6935199499130249
    3. '((' → logprob: -8.193519592285156
    4. '(b' → logprob: -9.693519592285156
    5. 'a' → logprob: -11.318519592285156
    6. '(
' → logprob: -11.818519592285156
    7. '(abs' → logprob: -12.068519592285156
    8. '(x' → logprob: -12.318519592285156
    9. '(

' → logprob: -14.068519592285156
    10. '(s' → logprob: -14.318519592285156

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -11.62501049041748
    3. '.x' → logprob: -13.50001049041748
    4. 'x' → logprob: -15.75001049041748
    5. '0' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.375011444091797
    7. 'a' → logprob: -16.875011444091797
    8. ' ' → logprob: -17.000011444091797
    9. '(' → logprob: -17.250011444091797
    10. ',' → logprob: -17.375011444091797

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -16.125
    4. '   ' → logprob: -19.0
    5. '[' → logprob: -19.5
    6. '
' → logprob: -20.125
    7. '۰' → logprob: -20.125
    8. '-' → logprob: -21.0
    9. '

' → logprob: -21.0
    10. '０' → logprob: -21.0

Token 33: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931613683700562
    2. ' -' → logprob: -0.6931613683700562
    3. ' ' → logprob: -11.693161010742188
    4. '-b' → logprob: -13.443161010742188
    5. '<|end|>' → logprob: -14.693161010742188
    6. ',' → logprob: -14.818161010742188
    7. ' ' → logprob: -14.943161010742188
    8. '‌' → logprob: -14.943161010742188
    9. '[' → logprob: -14.943161010742188
    10. '-a' → logprob: -15.068161010742188

Token 34: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.611323624383658e-05
    2. ' b' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -17.62506675720215
    4. ')b' → logprob: -17.75006675720215
    5. ' ' → logprob: -18.37506675720215
    6. '	b' → logprob: -19.25006675720215
    7. ')' → logprob: -19.87506675720215
    8. '   ' → logprob: -20.62506675720215
    9. '  ' → logprob: -20.87506675720215
    10. ' б' → logprob: -21.50006675720215

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.600714161526412e-05
    2. '0' → logprob: -9.500076293945312
    3. '[
' → logprob: -14.750076293945312
    4. ']' → logprob: -15.875076293945312
    5. '1' → logprob: -15.875076293945312
    6. ' [' → logprob: -16.375076293945312
    7. '(' → logprob: -16.500076293945312
    8. ' ' → logprob: -16.875076293945312
    9. ')' → logprob: -17.187576293945312
    10. '<|end|>' → logprob: -17.250076293945312

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -10.875020980834961
    3. '1' → logprob: -13.875020980834961
    4. '[' → logprob: -13.875020980834961
    5. '۰' → logprob: -17.62502098083496
    6. ')' → logprob: -17.75002098083496
    7. '<|end|>' → logprob: -17.75002098083496
    8. ']' → logprob: -18.00002098083496
    9. '<|end|>' → logprob: -18.56252098083496
    10. '  ' → logprob: -18.81252098083496

Token 37: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.184812031686306e-05
    2. ' ,' → logprob: -10.250082015991211
    3. '),' → logprob: -10.500082015991211
    4. ')' → logprob: -11.000082015991211
    5. ',
' → logprob: -13.750082015991211
    6. ',

' → logprob: -14.875082015991211
    7. ',)' → logprob: -15.375082015991211
    8. '],' → logprob: -16.00008201599121
    9. '‌,' → logprob: -16.37508201599121
    10. ',a' → logprob: -16.37508201599121

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2903124988079071
    2. 'a' → logprob: -1.5403125286102295
    3. ' ' → logprob: -3.5403125286102295
    4. '<|end|>' → logprob: -5.29031229019165
    5. ' b' → logprob: -6.91531229019165
    6. ')' → logprob: -7.29031229019165
    7. ' ' → logprob: -7.29031229019165
    8. 's' → logprob: -7.41531229019165
    9. ' )' → logprob: -8.040312767028809
    10. 'b' → logprob: -8.540312767028809

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -16.0
    3. '[
' → logprob: -16.375
    4. '<|end|>' → logprob: -16.375
    5. '.' → logprob: -17.125
    6. ' [' → logprob: -17.125
    7. '```' → logprob: -17.25
    8. ')' → logprob: -17.625
    9. '-' → logprob: -18.3125
    10. '<|end|>' → logprob: -18.5625

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. ' ' → logprob: -16.5
    4. '-' → logprob: -16.875
    5. ']' → logprob: -17.625
    6. '0' → logprob: -18.125
    7. '```' → logprob: -18.5
    8. '' → logprob: -18.875
    9. '   ' → logprob: -19.0
    10. ')' → logprob: -19.4375

Token 41: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05166635289788246
    2. ']' → logprob: -3.551666259765625
    3. ']-' → logprob: -4.551666259765625
    4. '<|end|>' → logprob: -5.801666259765625
    5. ' -' → logprob: -5.926666259765625
    6. '[' → logprob: -6.051666259765625
    7. ')' → logprob: -7.051666259765625
    8. '<|end|>' → logprob: -7.301666259765625
    9. '-)' → logprob: -7.551666259765625
    10. '])' → logprob: -8.051666259765625

Token 42: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.505351095460355e-05
    2. ' b' → logprob: -9.500075340270996
    3. ')b' → logprob: -16.25007438659668
    4. ' ' → logprob: -18.87507438659668
    5. 'a' → logprob: -19.37507438659668
    6. '1' → logprob: -19.62507438659668
    7. '	b' → logprob: -20.25007438659668
    8. '```' → logprob: -20.62507438659668
    9. '>b' → logprob: -20.75007438659668
    10. '<|end|>' → logprob: -21.00007438659668

Token 43: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14763586223125458
    2. '[' → logprob: -2.0226359367370605
    3. '])' → logprob: -5.3976359367370605
    4. ']' → logprob: -8.147635459899902
    5. ')' → logprob: -9.397635459899902
    6. '-' → logprob: -10.272635459899902
    7. ' ' → logprob: -12.397635459899902
    8. '])-' → logprob: -13.522635459899902
    9. ']])' → logprob: -13.647635459899902
    10. '][' → logprob: -13.772635459899902

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. '])' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.87501335144043
    4. ']' → logprob: -14.50001335144043
    5. ')' → logprob: -14.87501335144043
    6. '0' → logprob: -15.12501335144043
    7. ']])' → logprob: -17.37501335144043
    8. '```' → logprob: -17.43751335144043
    9. '   ' → logprob: -17.62501335144043
    10. '' → logprob: -17.62501335144043

Token 45: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -13.875000953674316
    3. ')
' → logprob: -16.250001907348633
    4. '])' → logprob: -16.375001907348633
    5. ' )' → logprob: -16.500001907348633
    6. ']' → logprob: -17.500001907348633
    7. ')])' → logprob: -18.000001907348633
    8. '）' → logprob: -18.500001907348633
    9. ')**' → logprob: -18.625001907348633
    10. '`)' → logprob: -18.625001907348633

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14439882338047028
    2. '
' → logprob: -2.0193989276885986
    3. '\' → logprob: -7.2693986892700195
    4. '

' → logprob: -8.01939868927002
    5. '```' → logprob: -8.26939868927002
    6. 'd' → logprob: -8.64439868927002
    7. '\n' → logprob: -9.76939868927002
    8. '
' → logprob: -10.14439868927002
    9. 'newline' → logprob: -10.39439868927002
    10. ':' → logprob: -10.64439868927002

Token 47: ' min' (ID: 1349)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6688268184661865
    2. ' a' → logprob: -1.4188268184661865
    3. ' shortest' → logprob: -2.5438268184661865
    4. ' solve' → logprob: -2.6688268184661865
    5. ' ast' → logprob: -2.9188268184661865
    6. ' main' → logprob: -4.418827056884766
    7. ' tsp' → logprob: -4.543827056884766
    8. ' prim' → logprob: -5.043827056884766
    9. 'd' → logprob: -5.418827056884766
    10. 'a' → logprob: -6.043827056884766

Token 48: '_dist' (ID: 37968)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.44010093808174133
    2. '_distance' → logprob: -2.065100908279419
    3. 'imum' → logprob: -2.440100908279419
    4. '_cost' → logprob: -2.940100908279419
    5. '_' → logprob: -3.440100908279419
    6. '_sp' → logprob: -3.815100908279419
    7. '_dist' → logprob: -4.315101146697998
    8. '_span' → logprob: -4.565101146697998
    9. '_heap' → logprob: -5.065101146697998
    10. '_cut' → logprob: -6.815101146697998

Token 49: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12979087233543396
    2. '(a' → logprob: -2.129790782928467
    3. '(A' → logprob: -7.754790782928467
    4. '(_' → logprob: -8.004791259765625
    5. '(points' → logprob: -8.004791259765625
    6. '(u' → logprob: -8.129791259765625
    7. '((' → logprob: -8.754791259765625
    8. '(p' → logprob: -8.754791259765625
    9. '(x' → logprob: -8.879791259765625
    10. ' (' → logprob: -8.879791259765625

Token 50: '_mon' (ID: 80615)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.9825398921966553
    2. '_point' → logprob: -1.1075398921966553
    3. '_target' → logprob: -1.7325398921966553
    4. '_ob' → logprob: -4.357540130615234
    5. '_goal' → logprob: -4.607540130615234
    6. '_nodes' → logprob: -4.607540130615234
    7. '(points' → logprob: -4.607540130615234
    8. 'arget' → logprob: -5.107540130615234
    9. '_cluster' → logprob: -5.107540130615234
    10. '_source' → logprob: -5.357540130615234

Token 51: 'sters' (ID: 17541)
  Prédit: 'ster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.049318622797727585
    2. 'sters' → logprob: -3.174318552017212
    3. 'st' → logprob: -6.424318790435791
    4. 'ument' → logprob: -6.549318790435791
    5. 's' → logprob: -7.174318790435791
    6. 'stre' → logprob: -7.861818790435791
    7. 'stern' → logprob: -8.174318313598633
    8. 'u' → logprob: -8.611818313598633
    9. '```' → logprob: -9.236818313598633
    10. 'uments' → logprob: -9.361818313598633

Token 52: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017336132004857063
    2. '(a' → logprob: -4.142336368560791
    3. '():' → logprob: -7.767336368560791
    4. ' (' → logprob: -8.142335891723633
    5. '(p' → logprob: -9.017335891723633
    6. '(node' → logprob: -9.392335891723633
    7. '(s' → logprob: -9.892335891723633
    8. '(x' → logprob: -10.017335891723633
    9. '(user' → logprob: -10.142335891723633
    10. '(parent' → logprob: -10.392335891723633

Token 53: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6936013102531433
    2. 'oints' → logprob: -1.318601369857788
    3. 'oint' → logprob: -2.318601369857788
    4. ',' → logprob: -2.318601369857788
    5. 'os' → logprob: -3.943601369857788
    6. ')' → logprob: -4.568601131439209
    7. 'o' → logprob: -5.943601131439209
    8. 'osition' → logprob: -7.193601131439209
    9. 's' → logprob: -7.568601131439209
    10. 'r' → logprob: -7.818601131439209

Token 54: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.5507683753967285
    2. 'm' → logprob: -1.4257683753967285
    3. ' monsters' → logprob: -1.8007683753967285
    4. ' m' → logprob: -4.6757683753967285
    5. 'points' → logprob: -6.6757683753967285
    6. ' points' → logprob: -6.8007683753967285
    7. 'ms' → logprob: -6.9257683753967285
    8. 'mons' → logprob: -6.9257683753967285
    9. 'monster' → logprob: -7.1757683753967285
    10. ')' → logprob: -7.6757683753967285

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000533967511728406
    2. ')' → logprob: -7.6255340576171875
    3. '):
' → logprob: -10.250534057617188
    4. ',' → logprob: -12.125534057617188
    5. ' ):' → logprob: -12.500534057617188
    6. ':' → logprob: -14.750534057617188
    7. ']:' → logprob: -15.250534057617188
    8. ')):' → logprob: -15.625534057617188
    9. '_list' → logprob: -16.125534057617188
    10. '):

' → logprob: -16.125534057617188

Token 56: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47309279441833496
    2. '   ' → logprob: -1.098092794418335
    3. '(' → logprob: -4.223093032836914
    4. ':
' → logprob: -5.348093032836914
    5. '():' → logprob: -5.598093032836914
    6. '(p' → logprob: -5.598093032836914
    7. '    
' → logprob: -5.723093032836914
    8. '):' → logprob: -5.848093032836914
    9. '<|end|>' → logprob: -6.098093032836914
    10. ' ' → logprob: -6.473093032836914

Token 57: ' return' (ID: 622)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.9424701929092407
    2. ' max' → logprob: -1.5674701929092407
    3. '0' → logprob: -2.067470073699951
    4. ' ' → logprob: -2.942470073699951
    5. 'max' → logprob: -3.192470073699951
    6. '   ' → logprob: -3.692470073699951
    7. 'min' → logprob: -3.942470073699951
    8. 'd' → logprob: -4.067470073699951
    9. ' d' → logprob: -4.317470073699951
    10. 'inf' → logprob: -4.317470073699951

Token 58: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.002696339739486575
    2. 'min' → logprob: -6.002696514129639
    3. ' math' → logprob: -9.12769603729248
    4. ' float' → logprob: -9.50269603729248
    5. ' max' → logprob: -11.12769603729248
    6. '   ' → logprob: -12.12769603729248
    7. '	min' → logprob: -13.00269603729248
    8. ' ' → logprob: -13.25269603729248
    9. ' ' → logprob: -13.25269603729248
    10. ' sys' → logprob: -13.50269603729248

Token 59: '(dist' (ID: 78981)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03501054644584656
    2. '(dist' → logprob: -3.785010576248169
    3. '(lambda' → logprob: -4.91001033782959
    4. '([' → logprob: -5.66001033782959
    5. '((' → logprob: -7.66001033782959
    6. '(distance' → logprob: -8.91001033782959
    7. '(p' → logprob: -9.16001033782959
    8. '([(' → logprob: -10.41001033782959
    9. '(
' → logprob: -10.53501033782959
    10. '(mon' → logprob: -10.66001033782959

Token 60: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0067780157551169395
    2. '(' → logprob: -5.006778240203857
    3. ')' → logprob: -10.6317777633667
    4. '(mon' → logprob: -10.6317777633667
    5. '((' → logprob: -11.6317777633667
    6. ' (' → logprob: -13.6317777633667
    7. '(
' → logprob: -14.0067777633667
    8. '<|end|>' → logprob: -14.5067777633667
    9. ')(' → logprob: -14.6317777633667
    10. '(m' → logprob: -14.8817777633667

Token 61: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3959953486919403
    2. '(m' → logprob: -1.1459953784942627
    3. '(mon' → logprob: -5.395995140075684
    4. ',m' → logprob: -6.145995140075684
    5. '(' → logprob: -7.020995140075684
    6. ' ,' → logprob: -7.145995140075684
    7. ' (' → logprob: -8.145995140075684
    8. ' m' → logprob: -9.020995140075684
    9. 'm' → logprob: -9.145995140075684
    10. ',(' → logprob: -9.395995140075684

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004116076452191919
    2. 'on' → logprob: -7.875411510467529
    3. '))' → logprob: -10.625411987304688
    4. ')
' → logprob: -13.375411987304688
    5. 'ont' → logprob: -13.500411987304688
    6. ')`' → logprob: -14.750411987304688
    7. 'onter' → logprob: -15.125411987304688
    8. 'er' → logprob: -15.250411987304688
    9. ')m' → logprob: -15.250411987304688
    10. ' )' → logprob: -15.375411987304688

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33192744851112366
    2. ')' → logprob: -1.3319274187088013
    3. 'for' → logprob: -4.081927299499512
    4. '   ' → logprob: -6.956927299499512
    5. ',' → logprob: -7.956927299499512
    6. ' )' → logprob: -8.581927299499512
    7. ')m' → logprob: -11.081927299499512
    8. '	for' → logprob: -11.206927299499512
    9. '    ' → logprob: -11.206927299499512
    10. ' m' → logprob: -11.331927299499512

Token 64: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.007918902672827244
    2. ' monsters' → logprob: -5.007918834686279
    3. 'm' → logprob: -6.882918834686279
    4. 'mon' → logprob: -9.632919311523438
    5. ' monst' → logprob: -10.257919311523438
    6. ' p' → logprob: -10.757919311523438
    7. ' mon' → logprob: -10.757919311523438
    8. '	m' → logprob: -11.007919311523438
    9. '<|end|>' → logprob: -13.007919311523438
    10. ')m' → logprob: -13.007919311523438

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03810437396168709
    2. 'in' → logprob: -3.288104295730591
    3. '<|end|>' → logprob: -10.413104057312012
    4. ' ' → logprob: -11.163104057312012
    5. ')' → logprob: -11.663104057312012
    6. 's' → logprob: -11.913104057312012
    7. 'm' → logprob: -14.413104057312012
    8. '	in' → logprob: -14.538104057312012
    9. ' )' → logprob: -14.663104057312012
    10. '<|end|>' → logprob: -15.038104057312012

Token 66: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.011077879928052425
    2. ' monsters' → logprob: -4.511077880859375
    3. 'monster' → logprob: -11.886077880859375
    4. 'mons' → logprob: -11.886077880859375
    5. ' mon' → logprob: -12.636077880859375
    6. ')' → logprob: -12.761077880859375
    7. ' monst' → logprob: -13.261077880859375
    8. '_mon' → logprob: -13.386077880859375
    9. '(mon' → logprob: -13.511077880859375
    10. ' ' → logprob: -13.511077880859375

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. '))' → logprob: -11.000022888183594
    3. ' )' → logprob: -12.625022888183594
    4. ')
' → logprob: -13.625022888183594
    5. ')}' → logprob: -14.125022888183594
    6. '   ' → logprob: -14.875022888183594
    7. ')))' → logprob: -15.375022888183594
    8. ')`' → logprob: -15.750022888183594
    9. ')p' → logprob: -16.000022888183594
    10. ')+' → logprob: -16.125022888183594

Token 68: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2508105933666229
    2. '

' → logprob: -1.7508106231689453
    3. 'def' → logprob: -3.3758106231689453
    4. '\n' → logprob: -5.000810623168945
    5. '
' → logprob: -6.500810623168945
    6. '\' → logprob: -6.500810623168945
    7. '' → logprob: -6.875810623168945
    8. '


' → logprob: -7.125810623168945
    9. ''\' → logprob: -7.750810623168945
    10. '"\' → logprob: -8.000810623168945

Token 69: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.6942768692970276
    2. ' monsters' → logprob: -0.6942768692970276
    3. ' len' → logprob: -7.819276809692383
    4. 'len' → logprob: -8.444276809692383
    5. ' mon' → logprob: -8.819276809692383
    6. 'mons' → logprob: -9.569276809692383
    7. '(mon' → logprob: -9.819276809692383
    8. ' p' → logprob: -10.069276809692383
    9. ' monst' → logprob: -10.194276809692383
    10. '   ' → logprob: -10.319276809692383

Token 70: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1230049803853035
    2. 'else' → logprob: -2.748004913330078
    3. '<|end|>' → logprob: -2.998004913330078
    4. ')' → logprob: -7.373004913330078
    5. ':' → logprob: -7.623004913330078
    6. '<|end|>' → logprob: -7.748004913330078
    7. ' and' → logprob: -9.748004913330078
    8. '	else' → logprob: -10.248004913330078
    9. '>' → logprob: -10.373004913330078
    10. '```' → logprob: -11.123004913330078

Token 71: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4792046546936035
    2. 'float' → logprob: -0.9792046546936035
    3. '0' → logprob: -6.1042046546936035
    4. 'math' → logprob: -6.4792046546936035
    5. ' math' → logprob: -6.8542046546936035
    6. ' ' → logprob: -9.229204177856445
    7. 'inf' → logprob: -9.479204177856445
    8. ' None' → logprob: -10.229204177856445
    9. ' inf' → logprob: -10.604204177856445
    10. '1' → logprob: -10.979204177856445

Token 72: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00012190054985694587
    2. ''s' → logprob: -10.0001220703125
    3. ''' → logprob: -10.2501220703125
    4. ''in' → logprob: -11.0001220703125
    5. 'inf' → logprob: -11.3751220703125
    6. '(' → logprob: -11.8751220703125
    7. '("' → logprob: -13.5001220703125
    8. '('.' → logprob: -14.5001220703125
    9. '('+' → logprob: -14.7501220703125
    10. ' ('' → logprob: -15.0001220703125

Token 73: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -8.537868779967539e-06
    2. ''in' → logprob: -12.250008583068848
    3. ''' → logprob: -12.750008583068848
    4. 'in' → logprob: -14.250008583068848
    5. ' inf' → logprob: -16.75000762939453
    6. 'info' → logprob: -17.12500762939453
    7. ''i' → logprob: -17.25000762939453
    8. '.inf' → logprob: -17.37500762939453
    9. '('' → logprob: -18.00000762939453
    10. 'i' → logprob: -18.12500762939453

Token 74: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005933417472988367
    2. '')' → logprob: -5.1309332847595215
    3. '()' → logprob: -13.50593376159668
    4. ' )' → logprob: -14.25593376159668
    5. '`)' → logprob: -14.38093376159668
    6. '")' → logprob: -14.50593376159668
    7. '())' → logprob: -15.13093376159668
    8. '<|end|>' → logprob: -15.13093376159668
    9. '))' → logprob: -15.25593376159668
    10. ')'' → logprob: -15.75593376159668

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.362307223957032e-05
    2. '
' → logprob: -10.000073432922363
    3. 'class' → logprob: -11.000073432922363
    4. '\' → logprob: -12.750073432922363
    5. '

' → logprob: -12.875073432922363
    6. '```' → logprob: -13.125073432922363
    7. 'ndef' → logprob: -13.750073432922363
    8. '<|end|>' → logprob: -14.500073432922363
    9. ' def' → logprob: -15.250073432922363
    10. '  
' → logprob: -15.500073432922363

Token 76: ' min' (ID: 1349)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.71660315990448
    2. ' d' → logprob: -1.84160315990448
    3. ' solve' → logprob: -2.0916032791137695
    4. ' shortest' → logprob: -2.4666032791137695
    5. ' a' → logprob: -2.9666032791137695
    6. ' find' → logprob: -3.5916032791137695
    7. ' ast' → logprob: -4.5916032791137695
    8. ' dfs' → logprob: -4.7166032791137695
    9. ' bfs' → logprob: -5.0916032791137695
    10. ' space' → logprob: -5.2166032791137695

Token 77: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.005888025742024183
    2. '_distance' → logprob: -6.005887985229492
    3. '_' → logprob: -6.630887985229492
    4. '_path' → logprob: -7.380887985229492
    5. '_cost' → logprob: -8.005887985229492
    6. 'dist' → logprob: -8.755887985229492
    7. '_diff' → logprob: -9.505887985229492
    8. '_points' → logprob: -9.505887985229492
    9. 'Dist' → logprob: -9.755887985229492
    10. '_d' → logprob: -9.880887985229492

Token 78: '_count' (ID: 7536)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.05640620365738869
    2. '(p' → logprob: -3.681406259536743
    3. '(' → logprob: -4.056406021118164
    4. '_between' → logprob: -5.556406021118164
    5. '(a' → logprob: -5.806406021118164
    6. '_from' → logprob: -5.806406021118164
    7. 'to' → logprob: -7.181406021118164
    8. '_' → logprob: -7.681406021118164
    9. 'from' → logprob: -8.431406021118164
    10. '(_' → logprob: -9.056406021118164

Token 79: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6427357196807861
    2. '(p' → logprob: -0.7677357196807861
    3. '_to' → logprob: -4.767735481262207
    4. '(s' → logprob: -8.017735481262207
    5. 's' → logprob: -8.642735481262207
    6. '(a' → logprob: -8.642735481262207
    7. 'to' → logprob: -8.767735481262207
    8. '(points' → logprob: -9.142735481262207
    9. '_' → logprob: -9.267735481262207
    10. ' (' → logprob: -9.267735481262207

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00955691747367382
    2. ',p' → logprob: -4.759556770324707
    3. ' ,' → logprob: -7.259556770324707
    4. ',m' → logprob: -9.134556770324707
    5. ')' → logprob: -9.509556770324707
    6. '):' → logprob: -11.009556770324707
    7. '(p' → logprob: -12.134556770324707
    8. '   ' → logprob: -12.259556770324707
    9. ',count' → logprob: -12.259556770324707
    10. ',s' → logprob: -12.509556770324707

Token 81: ' monsters' (ID: 59311)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.2004842758178711
    2. 'points' → logprob: -2.075484275817871
    3. ' monsters' → logprob: -4.325484275817871
    4. 'p' → logprob: -4.450484275817871
    5. 'mon' → logprob: -4.575484275817871
    6. ' players' → logprob: -5.950484275817871
    7. 'players' → logprob: -6.200484275817871
    8. ' p' → logprob: -6.325484275817871
    9. ' positions' → logprob: -6.575484275817871
    10. ' pts' → logprob: -6.700484275817871

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04352204501628876
    2. ',' → logprob: -3.1685221195220947
    3. ')' → logprob: -8.418521881103516
    4. ',p' → logprob: -8.668521881103516
    5. ' ):' → logprob: -9.168521881103516
    6. '):
' → logprob: -11.543521881103516
    7. '   ' → logprob: -11.918521881103516
    8. ' ,' → logprob: -12.293521881103516
    9. ':' → logprob: -13.418521881103516
    10. ',m' → logprob: -14.543521881103516

Token 83: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5690494179725647
    2. ':' → logprob: -0.9440494179725647
    3. '   ' → logprob: -3.56904935836792
    4. '(p' → logprob: -5.69404935836792
    5. '():' → logprob: -5.81904935836792
    6. '):' → logprob: -5.94404935836792
    7. ' :' → logprob: -6.31904935836792
    8. ' (' → logprob: -6.44404935836792
    9. ' ' → logprob: -7.31904935836792
    10. '<|end|>' → logprob: -7.94404935836792

Token 84: ' d' (ID: 272)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23223218321800232
    2. '    ' → logprob: -2.732232093811035
    3. 'return' → logprob: -2.732232093811035
    4. ' ' → logprob: -3.732232093811035
    5. '   ' → logprob: -3.857232093811035
    6. ' 
' → logprob: -4.232232093811035
    7. '0' → logprob: -4.732232093811035
    8. '     
' → logprob: -6.482232093811035
    9. 'count' → logprob: -6.607232093811035
    10. '1' → logprob: -6.982232093811035

Token 85: 'ists' (ID: 2549)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6740632057189941
    2. '=' → logprob: -0.7990632057189941
    3. 'ist' → logprob: -3.549063205718994
    4. 'istance' → logprob: -5.674063205718994
    5. 'ef' → logprob: -5.924063205718994
    6. '   ' → logprob: -6.049063205718994
    7. ',' → logprob: -6.549063205718994
    8. '_' → logprob: -7.424063205718994
    9. 'ists' → logprob: -8.049062728881836
    10. 'f' → logprob: -8.424062728881836

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011132356710731983
    2. '=' → logprob: -4.51113224029541
    3. ' ' → logprob: -11.01113224029541
    4. ' =[' → logprob: -11.13613224029541
    5. ')' → logprob: -11.38613224029541
    6. '[' → logprob: -11.76113224029541
    7. ',' → logprob: -12.01113224029541
    8. '(' → logprob: -12.13613224029541
    9. '=[]' → logprob: -12.38613224029541
    10. '.' → logprob: -12.63613224029541

Token 87: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05055800452828407
    2. '[min' → logprob: -3.050558090209961
    3. ' [' → logprob: -6.800558090209961
    4. '[p' → logprob: -7.550558090209961
    5. 'sorted' → logprob: -9.550558090209961
    6. '[m' → logprob: -10.050558090209961
    7. '[len' → logprob: -10.550558090209961
    8. '[d' → logprob: -10.550558090209961
    9. '[list' → logprob: -10.550558090209961
    10. '   ' → logprob: -10.925558090209961

Token 88: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001957179047167301
    2. ' dist' → logprob: -6.751957416534424
    3. '(dist' → logprob: -7.626957416534424
    4. 'min' → logprob: -8.376956939697266
    5. 'int' → logprob: -10.376956939697266
    6. '	dist' → logprob: -11.501956939697266
    7. 'math' → logprob: -12.126956939697266
    8. '   ' → logprob: -12.376956939697266
    9. 'max' → logprob: -12.501956939697266
    10. 'round' → logprob: -12.626956939697266

Token 89: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02976229228079319
    2. '(' → logprob: -3.5297622680664062
    3. '<|end|>' → logprob: -12.529762268066406
    4. '(m' → logprob: -12.654762268066406
    5. '(
' → logprob: -12.904762268066406
    6. ' (' → logprob: -14.404762268066406
    7. '(x' → logprob: -15.529762268066406
    8. 's' → logprob: -15.654762268066406
    9. '(user' → logprob: -15.779762268066406
    10. '](' → logprob: -15.904762268066406

Token 90: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.1691827028989792
    2. ',' → logprob: -1.9191826581954956
    3. '(m' → logprob: -4.794182777404785
    4. '(' → logprob: -8.169182777404785
    5. ' ,' → logprob: -8.794182777404785
    6. ',(' → logprob: -8.919182777404785
    7. 'm' → logprob: -11.294182777404785
    8. ')' → logprob: -11.544182777404785
    9. ',n' → logprob: -11.669182777404785
    10. ')(' → logprob: -12.419182777404785

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -13.250005722045898
    3. ' for' → logprob: -13.750005722045898
    4. '')' → logprob: -14.375005722045898
    5. ')
' → logprob: -14.500005722045898
    6. ')]' → logprob: -15.250005722045898
    7. 'for' → logprob: -15.250005722045898
    8. ' ' → logprob: -16.0000057220459
    9. '))' → logprob: -16.3750057220459
    10. ']' → logprob: -16.5000057220459

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.017330633476376534
    2. ')' → logprob: -4.517330646514893
    3. 'for' → logprob: -5.142330646514893
    4. ' ' → logprob: -8.392330169677734
    5. '	for' → logprob: -8.892330169677734
    6. ']' → logprob: -11.267330169677734
    7. ' )' → logprob: -11.392330169677734
    8. '>' → logprob: -12.017330169677734
    9. '<|end|>' → logprob: -12.392330169677734
    10. '=' → logprob: -12.892330169677734

Token 93: ' m' (ID: 284)
  Prédit: ' monsters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.4446105360984802
    2. 'mon' → logprob: -1.819610595703125
    3. ' m' → logprob: -2.069610595703125
    4. 'm' → logprob: -2.694610595703125
    5. ' mon' → logprob: -6.069610595703125
    6. ' monst' → logprob: -8.194610595703125
    7. 'mons' → logprob: -9.069610595703125
    8. ' monster' → logprob: -9.319610595703125
    9. '	m' → logprob: -9.819610595703125
    10. ' monkeys' → logprob: -10.444610595703125

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018279647454619408
    2. 'in' → logprob: -4.018279552459717
    3. ' ' → logprob: -10.643280029296875
    4. '	in' → logprob: -10.643280029296875
    5. 'on' → logprob: -10.768280029296875
    6. 'o' → logprob: -11.018280029296875
    7. 's' → logprob: -11.268280029296875
    8. 'm' → logprob: -11.393280029296875
    9. 'i' → logprob: -13.018280029296875
    10. '   ' → logprob: -13.143280029296875

Token 95: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.029955852776765823
    2. ' monsters' → logprob: -3.5299558639526367
    3. 'm' → logprob: -9.404955863952637
    4. 'mons' → logprob: -9.779955863952637
    5. 'monster' → logprob: -11.154955863952637
    6. ' mon' → logprob: -11.404955863952637
    7. 'mo' → logprob: -11.529955863952637
    8. ' ' → logprob: -12.029955863952637
    9. ' monst' → logprob: -12.029955863952637
    10. '(mon' → logprob: -12.529955863952637

Token 96: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02486092783510685
    2. '   ' → logprob: -4.649860858917236
    3. ' if' → logprob: -4.899860858917236
    4. ')' → logprob: -5.399860858917236
    5. ' ]' → logprob: -6.149860858917236
    6. ']
' → logprob: -7.899860858917236
    7. '
' → logprob: -8.774861335754395
    8. ')]' → logprob: -9.399861335754395
    9. 'if' → logprob: -9.524861335754395
    10. ' ' → logprob: -9.649861335754395

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02944832295179367
    2. ' return' → logprob: -4.154448509216309
    3. 'return' → logprob: -4.529448509216309
    4. 'd' → logprob: -6.904448509216309
    5. '
' → logprob: -7.029448509216309
    6. 'count' → logprob: -8.404448509216309
    7. ' d' → logprob: -8.779448509216309
    8. '```' → logprob: -9.779448509216309
    9. '    
' → logprob: -10.154448509216309
    10. 'counts' → logprob: -10.529448509216309

Token 98: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8343614935874939
    2. 'return' → logprob: -0.8343614935874939
    3. 'd' → logprob: -2.8343615531921387
    4. 'count' → logprob: -3.2093615531921387
    5. ' return' → logprob: -4.584361553192139
    6. 'c' → logprob: -5.334361553192139
    7. 'counts' → logprob: -5.334361553192139
    8. 'min' → logprob: -5.459361553192139
    9. 'counter' → logprob: -5.834361553192139
    10. 'dist' → logprob: -6.084361553192139

Token 99: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3729606866836548
    2. ' d' → logprob: -1.2479606866836548
    3. ' len' → logprob: -4.372960567474365
    4. 'd' → logprob: -5.247960567474365
    5. 'not' → logprob: -5.497960567474365
    6. 'len' → logprob: -6.872960567474365
    7. ' monsters' → logprob: -7.372960567474365
    8. ' all' → logprob: -8.372961044311523
    9. ' ' → logprob: -8.622961044311523
    10. 'mon' → logprob: -9.935461044311523

Token 100: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08051090687513351
    2. 'd' → logprob: -2.5805108547210693
    3. ' monsters' → logprob: -6.705511093139648
    4. 'mon' → logprob: -8.080511093139648
    5. ' ' → logprob: -10.705511093139648
    6. ' len' → logprob: -11.518011093139648
    7. '	d' → logprob: -11.893011093139648
    8. 'len' → logprob: -12.143011093139648
    9. ' p' → logprob: -12.455511093139648
    10. ' m' → logprob: -12.580511093139648

Token 101: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -7.958325295476243e-05
    2. 'ist' → logprob: -10.875079154968262
    3. '`' → logprob: -11.750079154968262
    4. 'd' → logprob: -11.750079154968262
    5. '[' → logprob: -11.875079154968262
    6. '(' → logprob: -12.250079154968262
    7. 'm' → logprob: -12.375079154968262
    8. 'irst' → logprob: -12.875079154968262
    9. '   ' → logprob: -13.000079154968262
    10. 'p' → logprob: -13.000079154968262

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020345149096101522
    2. ' or' → logprob: -6.377034664154053
    3. ':
' → logprob: -8.627034187316895
    4. ':return' → logprob: -8.877034187316895
    5. 'or' → logprob: -11.627034187316895
    6. ' :' → logprob: -12.627034187316895
    7. '   ' → logprob: -14.002034187316895
    8. ')' → logprob: -16.12703514099121
    9. '):' → logprob: -16.87703514099121
    10. 'return' → logprob: -17.12703514099121

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038645623717457056
    2. '   ' → logprob: -5.878864765167236
    3. ':' → logprob: -7.128864765167236
    4. '    ' → logprob: -9.628864288330078
    5. ' return' → logprob: -9.878864288330078
    6. ' ' → logprob: -10.503864288330078
    7. '	   ' → logprob: -10.503864288330078
    8. ':return' → logprob: -11.003864288330078
    9. '      ' → logprob: -11.253864288330078
    10. ' :' → logprob: -11.753864288330078

Token 104: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.312818706035614
    2. '       ' → logprob: -1.5628187656402588
    3. 'return' (adapté à ' return') → logprob: -2.937818765640259
    4. '   ' → logprob: -5.18781852722168
    5. '	return' → logprob: -9.06281852722168
    6. '    ' → logprob: -9.18781852722168
    7. ' ' → logprob: -9.56281852722168
    8. ':return' → logprob: -9.93781852722168
    9. '0' → logprob: -10.18781852722168
    10. '           ' → logprob: -10.81281852722168

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2656497359275818
    2. ' ' → logprob: -1.6406497955322266
    3. ' (' → logprob: -4.265649795532227
    4. ' None' → logprob: -4.640649795532227
    5. ' float' → logprob: -5.015649795532227
    6. '(' → logprob: -5.640649795532227
    7. 'float' → logprob: -5.765649795532227
    8. 'None' → logprob: -6.765649795532227
    9. ' len' → logprob: -7.890649795532227
    10. '(None' → logprob: -8.515649795532227

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2637990117073059
    2. 'float' → logprob: -1.6387989521026611
    3. '(' → logprob: -3.638798952102661
    4. '(float' → logprob: -5.51379919052124
    5. '{}' → logprob: -6.13879919052124
    6. '[]' → logprob: -6.38879919052124
    7. ' ' → logprob: -6.76379919052124
    8. ' float' → logprob: -7.63879919052124
    9. 'None' → logprob: -7.76379919052124
    10. '(None' → logprob: -8.513798713684082

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01364106498658657
    2. '
' → logprob: -4.513640880584717
    3. '<|end|>' → logprob: -6.763640880584717
    4. '    
' → logprob: -7.263640880584717
    5. ',' → logprob: -7.638640880584717
    6. '0' → logprob: -10.013641357421875
    7. '<|end|>' → logprob: -10.513641357421875
    8. '  ' → logprob: -11.138641357421875
    9. '  
' → logprob: -11.138641357421875
    10. '    ' → logprob: -11.138641357421875

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002340089064091444
    2. '    
' → logprob: -6.502340316772461
    3. '
' → logprob: -7.377340316772461
    4. ',' → logprob: -9.877340316772461
    5. 'return' → logprob: -10.252340316772461
    6. '    ' → logprob: -10.502340316772461
    7. ' return' → logprob: -11.002340316772461
    8. '<|end|>' → logprob: -11.377340316772461
    9. 'd' → logprob: -11.627340316772461
    10. '  ' → logprob: -11.877340316772461

Token 109: ' mind' (ID: 4246)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9326077699661255
    2. '   ' → logprob: -1.0576077699661255
    3. 'return' → logprob: -2.432607650756836
    4. ' min' → logprob: -2.432607650756836
    5. 'count' → logprob: -3.432607650756836
    6. ' return' → logprob: -3.557607650756836
    7. '
' → logprob: -5.307607650756836
    8. 'd' → logprob: -5.807607650756836
    9. ' d' → logprob: -6.307607650756836
    10. ' count' → logprob: -6.432607650756836

Token 110: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.034855134785175323
    2. ' =' → logprob: -4.284855365753174
    3. 'ex' → logprob: -4.409855365753174
    4. 'x' → logprob: -5.409855365753174
    5. '=' → logprob: -6.159855365753174
    6. 'istance' → logprob: -7.034855365753174
    7. '   ' → logprob: -8.284854888916016
    8. 'e' → logprob: -9.034854888916016
    9. '_dist' → logprob: -9.659854888916016
    10. 'ax' → logprob: -9.784854888916016

Token 111: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25193676352500916
    2. ' min' → logprob: -1.5019367933273315
    3. '   ' → logprob: -12.251936912536621
    4. '	min' → logprob: -13.751936912536621
    5. 'm' → logprob: -14.501936912536621
    6. '(min' → logprob: -15.251936912536621
    7. 'minimum' → logprob: -15.751936912536621
    8. '[min' → logprob: -15.876936912536621
    9. 'mi' → logprob: -16.001935958862305
    10. 'd' → logprob: -16.001935958862305

Token 112: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00016671013145241886
    2. '(' → logprob: -9.000166893005371
    3. 'd' → logprob: -10.125166893005371
    4. '(dist' → logprob: -13.500166893005371
    5. ' (' → logprob: -13.625166893005371
    6. ' d' → logprob: -15.750166893005371
    7. '(
' → logprob: -16.000165939331055
    8. '	d' → logprob: -16.125165939331055
    9. '(m' → logprob: -17.250165939331055
    10. 's' → logprob: -17.625165939331055

Token 113: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -4.656383680412546e-05
    2. 'ist' → logprob: -10.625046730041504
    3. 'd' → logprob: -12.000046730041504
    4. ')' → logprob: -13.250046730041504
    5. 'i' → logprob: -13.375046730041504
    6. '   ' → logprob: -13.500046730041504
    7. '`' → logprob: -13.500046730041504
    8. '[' → logprob: -13.625046730041504
    9. '(' → logprob: -13.750046730041504
    10. 's' → logprob: -13.875046730041504

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03705164045095444
    2. ')
' → logprob: -3.4120516777038574
    3. ')d' → logprob: -6.787051677703857
    4. ' )' → logprob: -7.162051677703857
    5. '   ' → logprob: -7.662051677703857
    6. ',' → logprob: -7.787051677703857
    7. ' )
' → logprob: -8.2870512008667
    8. 'd' → logprob: -8.4120512008667
    9. ',d' → logprob: -10.2870512008667
    10. ')
' → logprob: -10.9120512008667

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.56102097814437e-05
    2. '    
' → logprob: -10.375045776367188
    3. 'return' → logprob: -12.125045776367188
    4. '
' → logprob: -12.250045776367188
    5. ' return' → logprob: -13.375045776367188
    6. '       ' → logprob: -13.750045776367188
    7. '<|end|>' → logprob: -15.250045776367188
    8. '	return' → logprob: -15.500045776367188
    9. '   
' → logprob: -15.625045776367188
    10. '        
' → logprob: -15.625045776367188

Token 116: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015363347716629505
    2. 'return' (adapté à ' return') → logprob: -4.5153632164001465
    3. ' return' → logprob: -5.5153632164001465
    4. '
' → logprob: -8.265363693237305
    5. '    
' → logprob: -11.015363693237305
    6. 'count' → logprob: -12.640363693237305
    7. '  ' → logprob: -13.515363693237305
    8. '	return' → logprob: -14.265363693237305
    9. ' ' → logprob: -14.390363693237305
    10. '       ' → logprob: -14.515363693237305

Token 117: ' sum' (ID: 4215)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4359093904495239
    2. 'd' → logprob: -1.310909390449524
    3. ' sum' → logprob: -2.6859092712402344
    4. 'sum' → logprob: -4.185909271240234
    5. ' ' → logprob: -9.060909271240234
    6. 'len' → logprob: -9.060909271240234
    7. ' len' → logprob: -9.310909271240234
    8. '   ' → logprob: -10.060909271240234
    9. ' ' → logprob: -12.935909271240234
    10. 's' → logprob: -13.060909271240234

Token 118: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16048873960971832
    2. '(d' → logprob: -1.9104887247085571
    3. '(m' → logprob: -9.285489082336426
    4. '(dist' → logprob: -9.285489082336426
    5. '(x' → logprob: -10.035489082336426
    6. '((' → logprob: -10.910489082336426
    7. '(int' → logprob: -11.785489082336426
    8. '(abs' → logprob: -12.785489082336426
    9. '([' → logprob: -13.410489082336426
    10. '(di' → logprob: -14.160489082336426

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004627002868801355
    2. 'd' → logprob: -5.629627227783203
    3. '(' → logprob: -8.129627227783203
    4. '(d' → logprob: -8.254627227783203
    5. ' ' → logprob: -8.754627227783203
    6. 'dist' → logprob: -8.879627227783203
    7. 'abs' → logprob: -9.504627227783203
    8. 'int' → logprob: -10.254627227783203
    9. ' d' → logprob: -11.004627227783203
    10. '   ' → logprob: -11.004627227783203

Token 120: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34303244948387146
    2. '(d' → logprob: -1.3430324792861938
    3. '(m' → logprob: -3.7180323600769043
    4. '(dist' → logprob: -5.843032360076904
    5. ')' → logprob: -6.843032360076904
    6. ' (' → logprob: -7.968032360076904
    7. '(x' → logprob: -8.718032836914062
    8. '1' → logprob: -9.093032836914062
    9. '   ' → logprob: -9.468032836914062
    10. ' for' → logprob: -9.843032836914062

Token 121: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3744560480117798
    2. ' x' → logprob: -1.7494560480117798
    3. 'd' → logprob: -2.4994559288024902
    4. ' d' → logprob: -3.3744559288024902
    5. 'dist' → logprob: -4.24945592880249
    6. ' dist' → logprob: -4.99945592880249
    7. 'dd' → logprob: -8.124456405639648
    8. 'di' → logprob: -8.249456405639648
    9. ' di' → logprob: -8.624456405639648
    10. ' dd' → logprob: -9.499456405639648

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02327284961938858
    2. 'in' → logprob: -3.773272752761841
    3. ' ' → logprob: -11.273272514343262
    4. 'd' → logprob: -11.773272514343262
    5. 'v' → logprob: -12.773272514343262
    6. ' v' → logprob: -14.148272514343262
    7. '	in' → logprob: -14.273272514343262
    8. 'i' → logprob: -14.398272514343262
    9. ' i' → logprob: -14.773272514343262
    10. 's' → logprob: -15.273272514343262

Token 123: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22541841864585876
    2. 'd' → logprob: -1.6004184484481812
    3. ' ' → logprob: -12.600418090820312
    4. ')d' → logprob: -14.350418090820312
    5. '	d' → logprob: -14.725418090820312
    6. '
' → logprob: -14.725418090820312
    7. '>d' → logprob: -15.350418090820312
    8. '_d' → logprob: -15.850418090820312
    9. '   ' → logprob: -15.975418090820312
    10. '```' → logprob: -16.287918090820312

Token 124: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.00033081689616665244
    2. '`' → logprob: -9.250330924987793
    3. '   ' → logprob: -9.625330924987793
    4. '```' → logprob: -10.000330924987793
    5. '[' → logprob: -10.875330924987793
    6. 'd' → logprob: -11.250330924987793
    7. 'ist' → logprob: -11.375330924987793
    8. 's' → logprob: -11.750330924987793
    9. '  ' → logprob: -12.000330924987793
    10. '``' → logprob: -12.125330924987793

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.001038883114233613
    2. 'if' → logprob: -7.001039028167725
    3. ' ' → logprob: -9.376038551330566
    4. ' in' → logprob: -10.126038551330566
    5. '    ' → logprob: -13.626038551330566
    6. '   ' → logprob: -14.501038551330566
    7. '	if' → logprob: -15.251038551330566
    8. ' v' → logprob: -15.376038551330566
    9. '  ' → logprob: -15.626038551330566
    10. 'v' → logprob: -16.751039505004883

Token 126: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.3610277771949768
    2. ' v' → logprob: -2.111027717590332
    3. 'abs' → logprob: -2.111027717590332
    4. 'v' → logprob: -2.861027717590332
    5. ' math' → logprob: -5.736027717590332
    6. 'math' → logprob: -8.486027717590332
    7. ' ' → logprob: -9.611027717590332
    8. '(abs' → logprob: -9.736027717590332
    9. '   ' → logprob: -11.236027717590332
    10. ' (' → logprob: -11.611027717590332

Token 127: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00020544764993246645
    2. '(' → logprob: -8.500205039978027
    3. '(m' → logprob: -13.750205039978027
    4. '(
' → logprob: -15.500205039978027
    5. '(value' → logprob: -15.625205039978027
    6. ' (' → logprob: -15.750205039978027
    7. '(p' → logprob: -15.750205039978027
    8. '((' → logprob: -16.750205993652344
    9. '<|end|>' → logprob: -18.000205993652344
    10. 'v' → logprob: -18.500205993652344

Token 128: '-m' (ID: 2126)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31889787316322327
    2. ' -' → logprob: -1.3188978433609009
    3. '-m' → logprob: -5.193897724151611
    4. '-v' → logprob: -9.69389820098877
    5. '(v' → logprob: -13.06889820098877
    6. '-
' → logprob: -13.69389820098877
    7. '(' → logprob: -13.69389820098877
    8. ' ' → logprob: -14.06889820098877
    9. '()-' → logprob: -14.56889820098877
    10. '-min' → logprob: -14.81889820098877

Token 129: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.9146995327901095e-05
    2. 'in' → logprob: -11.375019073486328
    3. '[ind' → logprob: -12.375019073486328
    4. '(ind' → logprob: -14.250019073486328
    5. '
' → logprob: -14.375019073486328
    6. '```' → logprob: -14.625019073486328
    7. 'mind' → logprob: -15.000019073486328
    8. '

' → logprob: -15.500019073486328
    9. 'i' → logprob: -15.875019073486328
    10. '1' → logprob: -16.125019073486328

Token 130: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05876396968960762
    2. ')<=' → logprob: -3.5587639808654785
    3. ')<' → logprob: -3.5587639808654785
    4. '<=' → logprob: -10.05876350402832
    5. '<' → logprob: -10.30876350402832
    6. ' )' → logprob: -11.18376350402832
    7. ' <=' → logprob: -11.43376350402832
    8. ' <' → logprob: -11.68376350402832
    9. ']<=' → logprob: -12.55876350402832
    10. 'v' → logprob: -12.80876350402832

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028104635421186686
    2. ' ' → logprob: -5.877810478210449
    3. '=' → logprob: -13.00281047821045
    4. '0' → logprob: -13.00281047821045
    5. '   ' → logprob: -14.87781047821045
    6. '```' → logprob: -15.87781047821045
    7. '
' → logprob: -16.002809524536133
    8. ' ' → logprob: -16.252809524536133
    9. '10' → logprob: -16.377809524536133
    10. '  ' → logprob: -16.502809524536133

Token 132: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -7.107425062713446e-06
    2. '-' → logprob: -11.875006675720215
    3. '1' → logprob: -16.87500762939453
    4. '-e' → logprob: -16.87500762939453
    5. '0' → logprob: -17.12500762939453
    6. '.e' → logprob: -17.75000762939453
    7. '.' → logprob: -18.50000762939453
    8. 'E' → logprob: -18.62500762939453
    9. 'е' → logprob: -19.87500762939453
    10. '```' → logprob: -20.50000762939453

Token 133: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. '6' → logprob: -16.75
    3. '3' → logprob: -17.0
    4. '9' → logprob: -17.0
    5. ' -' → logprob: -17.625
    6. '```' → logprob: -17.875
    7. '5' → logprob: -18.25
    8. '7' → logprob: -18.25
    9. '4' → logprob: -18.5
    10. '1' → logprob: -18.875

Token 134: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1174594983458519
    2. '8' → logprob: -2.992459535598755
    3. '7' → logprob: -3.117459535598755
    4. '6' → logprob: -4.367459297180176
    5. '10' → logprob: -6.117459297180176
    6. '12' → logprob: -6.742459297180176
    7. '5' → logprob: -8.242459297180176
    8. '09' → logprob: -10.742459297180176
    9. '11' → logprob: -11.992459297180176
    10. '4' → logprob: -12.117459297180176

Token 135: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3902033970225602e-05
    2. ' )' → logprob: -11.250014305114746
    3. ')
' → logprob: -15.000014305114746
    4. '   ' → logprob: -15.250014305114746
    5. ')return' → logprob: -15.625014305114746
    6. '))' → logprob: -17.12501335144043
    7. ' ' → logprob: -17.12501335144043
    8. '),' → logprob: -17.62501335144043
    9. ')

' → logprob: -18.00001335144043
    10. ')}' → logprob: -18.12501335144043

Token 136: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26915132999420166
    2. '
' → logprob: -2.144151210784912
    3. '<|end|>' → logprob: -2.894151210784912
    4. '\' → logprob: -4.019151210784912
    5. '(' → logprob: -4.019151210784912
    6. ')' → logprob: -4.894151210784912
    7. '#' → logprob: -5.269151210784912
    8. '

' → logprob: -5.644151210784912
    9. '\n' → logprob: -5.894151210784912
    10. ' def' → logprob: -7.019151210784912

Token 137: ' inside' (ID: 6772)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0698332786560059
    2. ' ast' → logprob: -1.6948332786560059
    3. ' a' → logprob: -1.9448332786560059
    4. ' main' → logprob: -2.319833278656006
    5. ' solve' → logprob: -2.569833278656006
    6. ' shortest' → logprob: -2.944833278656006
    7. ' find' → logprob: -3.819833278656006
    8. 'd' → logprob: -3.944833278656006
    9. 'astar' → logprob: -4.569833278656006
    10. ' prim' → logprob: -4.819833278656006

Token 138: '_area' (ID: 34097)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.46382737159729004
    2. '(' → logprob: -1.08882737159729
    3. '(point' → logprob: -3.46382737159729
    4. '(x' → logprob: -7.088827133178711
    5. '(Point' → logprob: -8.338827133178711
    6. '_' → logprob: -8.338827133178711
    7. '_rectangle' → logprob: -8.588827133178711
    8. '(points' → logprob: -8.838827133178711
    9. '<|end|>' → logprob: -8.838827133178711
    10. '_polygon' → logprob: -8.963827133178711

Token 139: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.127502903342247
    2. '(' → logprob: -2.127502918243408
    3. '(point' → logprob: -7.877502918243408
    4. '(x' → logprob: -9.12750244140625
    5. ' (' → logprob: -10.37750244140625
    6. '(a' → logprob: -11.25250244140625
    7. '(P' → logprob: -12.25250244140625
    8. '(pos' → logprob: -12.62750244140625
    9. '(pl' → logprob: -12.75250244140625
    10. '(s' → logprob: -12.87750244140625

Token 140: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005629173945635557
    2. '(p' → logprob: -5.630629062652588
    3. ',p' → logprob: -6.630629062652588
    4. '):' → logprob: -7.505629062652588
    5. ' ,' → logprob: -9.630629539489746
    6. '(' → logprob: -10.255629539489746
    7. '   ' → logprob: -10.880629539489746
    8. ',
' → logprob: -11.380629539489746
    9. ')' → logprob: -11.880629539489746
    10. '):
' → logprob: -12.130629539489746

Token 141: '   ' (ID: 271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8378626704216003
    2. ' return' → logprob: -1.2128627300262451
    3. '   ' → logprob: -2.337862730026245
    4. '(' → logprob: -2.337862730026245
    5. ' (' → logprob: -2.837862730026245
    6. ' p' → logprob: -4.962862491607666
    7. '(
' → logprob: -5.087862491607666
    8. 'return' → logprob: -6.212862491607666
    9. ' (
' → logprob: -7.087862491607666
    10. ',' → logprob: -7.337862491607666

Token 142: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.002103567123413
    2. 'return' (adapté à ' return') → logprob: -1.002103567123413
    3. ' return' → logprob: -1.377103567123413
    4. '   ' → logprob: -4.752103805541992
    5. '(' → logprob: -6.252103805541992
    6. ' ' → logprob: -6.752103805541992
    7. 'x' → logprob: -7.252103805541992
    8. 'p' → logprob: -8.002103805541992
    9. ' p' → logprob: -8.377103805541992
    10. ' (' → logprob: -8.502103805541992

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.044050320982933044
    2. ' ' → logprob: -3.1690502166748047
    3. 'p' → logprob: -8.169050216674805
    4. '-' → logprob: -8.169050216674805
    5. ' p' → logprob: -8.419050216674805
    6. '(' → logprob: -9.169050216674805
    7. ' -' → logprob: -9.669050216674805
    8. ' (' → logprob: -10.044050216674805
    9. '100' → logprob: -10.919050216674805
    10. '   ' → logprob: -12.169050216674805

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011110436171293259
    2. '(' → logprob: -7.251111030578613
    3. 'p' → logprob: -8.251111030578613
    4. '-' → logprob: -9.126111030578613
    5. ' ' → logprob: -11.126111030578613
    6. '(p' → logprob: -11.876111030578613
    7. 'all' → logprob: -12.751111030578613
    8. '100' → logprob: -13.626111030578613
    9. '(-' → logprob: -13.751111030578613
    10. 'x' → logprob: -14.126111030578613

Token 145: '.' (ID: 13)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20227549970149994
    2. '<=' → logprob: -1.7022755146026611
    3. '<' → logprob: -8.077275276184082
    4. '0' → logprob: -8.327275276184082
    5. ' <' → logprob: -8.577275276184082
    6. 'p' → logprob: -10.077275276184082
    7. '[' → logprob: -10.827275276184082
    8. '<p' → logprob: -11.327275276184082
    9. ' p' → logprob: -11.702275276184082
    10. ' ' → logprob: -11.827275276184082

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09112484753131866
    2. '<=' → logprob: -2.4661247730255127
    3. '5' → logprob: -6.591125011444092
    4. 'p' → logprob: -7.716125011444092
    5. '1' → logprob: -9.466124534606934
    6. 'x' → logprob: -9.841124534606934
    7. '<' → logprob: -9.966124534606934
    8. ')<=' → logprob: -10.091124534606934
    9. ')' → logprob: -11.216124534606934
    10. ']<=' → logprob: -11.341124534606934

Token 147: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04486684128642082
    2. ' <=' → logprob: -3.1698668003082275
    3. '<' → logprob: -6.419867038726807
    4. ' <' → logprob: -9.544866561889648
    5. '<p' → logprob: -9.794866561889648
    6. '0' → logprob: -10.044866561889648
    7. 'p' → logprob: -11.169866561889648
    8. ' p' → logprob: -11.419866561889648
    9. ')<=' → logprob: -12.294866561889648
    10. ' ' → logprob: -12.419866561889648

Token 148: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.988221684878226e-06
    2. ' p' → logprob: -11.875006675720215
    3. '<p' → logprob: -21.62500762939453
    4. '	p' → logprob: -22.25000762939453
    5. '```' → logprob: -22.25000762939453
    6. ')p' → logprob: -22.75000762939453
    7. '   ' → logprob: -23.62500762939453
    8. '_p' → logprob: -23.75000762939453
    9. 'pi' → logprob: -24.12500762939453
    10. '
' → logprob: -24.87500762939453

Token 149: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1398757123970427e-05
    2. ' [' → logprob: -12.250011444091797
    3. '0' → logprob: -13.125011444091797
    4. 'p' → logprob: -13.375011444091797
    5. 'x' → logprob: -13.625011444091797
    6. '```' → logprob: -14.750011444091797
    7. '.' → logprob: -15.250011444091797
    8. '
' → logprob: -15.500011444091797
    9. ' ' → logprob: -16.312511444091797
    10. '(' → logprob: -16.500011444091797

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -14.750001907348633
    4. 'x' → logprob: -16.375001907348633
    5. '
' → logprob: -16.625001907348633
    6. 'p' → logprob: -16.625001907348633
    7. '1' → logprob: -17.375001907348633
    8. '

' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '```' → logprob: -18.437501907348633

Token 151: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3937923014163971
    2. '<' → logprob: -1.1437922716140747
    3. ' <=' → logprob: -5.893792152404785
    4. 'and' → logprob: -6.143792152404785
    5. ' and' → logprob: -6.893792152404785
    6. '0' → logprob: -8.518792152404785
    7. '<|end|>' → logprob: -8.518792152404785
    8. ' <' → logprob: -9.268792152404785
    9. ']<=' → logprob: -9.518792152404785
    10. '[' → logprob: -9.518792152404785

Token 152: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4057316482067108
    2. '100' → logprob: -1.1557316780090332
    3. '10' → logprob: -4.155731678009033
    4. '200' → logprob: -7.280731678009033
    5. '50' → logprob: -8.155731201171875
    6. '500' → logprob: -8.155731201171875
    7. '20' → logprob: -8.405731201171875
    8. '2' → logprob: -8.405731201171875
    9. ' ' → logprob: -8.655731201171875
    10. '250' → logprob: -9.155731201171875

Token 153: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9868251085281372
    2. '0' → logprob: -1.1118251085281372
    3. 'and' → logprob: -1.8618251085281372
    4. ' and' → logprob: -2.6118249893188477
    5. '2' → logprob: -3.1118249893188477
    6. '1' → logprob: -4.486824989318848
    7. '5' → logprob: -5.736824989318848
    8. '3' → logprob: -5.861824989318848
    9. '   ' → logprob: -6.486824989318848
    10. ' ' → logprob: -6.861824989318848

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0050332024693489075
    2. '5' → logprob: -5.380033016204834
    3. '2' → logprob: -8.505033493041992
    4. '1' → logprob: -10.130033493041992
    5. '4' → logprob: -10.380033493041992
    6. '9' → logprob: -10.380033493041992
    7. '7' → logprob: -11.005033493041992
    8. '8' → logprob: -11.255033493041992
    9. ' ' → logprob: -11.255033493041992
    10. '6' → logprob: -11.380033493041992

Token 155: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014217807911336422
    2. 'and' → logprob: -4.264217853546143
    3. '   ' → logprob: -10.389217376708984
    4. ' ' → logprob: -11.139217376708984
    5. '0' → logprob: -12.139217376708984
    6. '  ' → logprob: -14.014217376708984
    7. '    ' → logprob: -14.639217376708984
    8. '
' → logprob: -14.764217376708984
    9. ' a' → logprob: -14.764217376708984
    10. '<|end|>' → logprob: -14.764217376708984

Token 156: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234121344983578
    2. ' ' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.755233764648438
    4. '  ' → logprob: -16.255233764648438
    5. '4' → logprob: -16.755233764648438
    6. '1' → logprob: -17.380233764648438
    7. ' ' → logprob: -17.380233764648438
    8. '2' → logprob: -18.755233764648438
    9. ' -' → logprob: -18.880233764648438
    10. '    ' → logprob: -19.130233764648438

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029720881138928235
    2. ' ' → logprob: -8.125297546386719
    3. 'p' → logprob: -14.750297546386719
    4. '1' → logprob: -15.125297546386719
    5. '   ' → logprob: -15.750297546386719
    6. '4' → logprob: -16.37529754638672
    7. '-' → logprob: -16.50029754638672
    8. ' p' → logprob: -16.81279754638672
    9. '2' → logprob: -17.12529754638672
    10. '  ' → logprob: -17.12529754638672

Token 158: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0018170286202803254
    2. '<=' → logprob: -6.376817226409912
    3. '[' → logprob: -9.751816749572754
    4. ' <=' → logprob: -10.501816749572754
    5. '.<' → logprob: -11.376816749572754
    6. '<' → logprob: -12.501816749572754
    7. '<p' → logprob: -12.876816749572754
    8. 'p' → logprob: -13.126816749572754
    9. ')<=' → logprob: -13.126816749572754
    10. ' p' → logprob: -13.501816749572754

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. '4' → logprob: -12.875008583068848
    3. '5' → logprob: -13.125008583068848
    4. '<=' → logprob: -13.500008583068848
    5. 'p' → logprob: -14.375008583068848
    6. ' ' → logprob: -14.625008583068848
    7. '999' → logprob: -14.750008583068848
    8. '9' → logprob: -15.500008583068848
    9. '```' → logprob: -15.875008583068848
    10. '   ' → logprob: -16.00000762939453

Token 160: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0007481599459424615
    2. '>=' → logprob: -7.375748157501221
    3. '<' → logprob: -9.750748634338379
    4. ' <=' → logprob: -10.125748634338379
    5. '<p' → logprob: -10.875748634338379
    6. 'p' → logprob: -13.250748634338379
    7. ' p' → logprob: -14.625748634338379
    8. '[' → logprob: -14.875748634338379
    9. '```' → logprob: -15.000748634338379
    10. ')<=' → logprob: -15.000748634338379

Token 161: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.935296834039036e-06
    2. ' p' → logprob: -12.75000286102295
    3. '4' → logprob: -17.250003814697266
    4. '<p' → logprob: -20.750003814697266
    5. ')p' → logprob: -20.875003814697266
    6. '	p' → logprob: -22.000003814697266
    7. '
' → logprob: -22.125003814697266
    8. ''p' → logprob: -22.500003814697266
    9. '<|end|>' → logprob: -22.625003814697266
    10. '```' → logprob: -22.750003814697266

Token 162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'p' → logprob: -15.875000953674316
    3. '<|end|>' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.0
    5. '```' → logprob: -16.0
    6. '>[' → logprob: -17.0
    7. '[
' → logprob: -17.25
    8. '][' → logprob: -17.375
    9. ')[' → logprob: -17.75
    10. '1' → logprob: -17.875

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01410920824855566
    2. '0' → logprob: -4.389109134674072
    3. '[' → logprob: -6.514109134674072
    4. 'p' → logprob: -9.13910961151123
    5. ' ' → logprob: -12.88910961151123
    6. '```' → logprob: -13.26410961151123
    7. '   ' → logprob: -14.01410961151123
    8. '
' → logprob: -14.01410961151123
    9. ']' → logprob: -14.26410961151123
    10. '(' → logprob: -14.51410961151123

Token 164: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.049437541514635086
    2. ']<=' → logprob: -3.1744375228881836
    3. 'p' → logprob: -5.799437522888184
    4. '[' → logprob: -6.299437522888184
    5. ')<=' → logprob: -7.174437522888184
    6. ' <=' → logprob: -7.924437522888184
    7. '<' → logprob: -9.174437522888184
    8. '[]' → logprob: -9.549437522888184
    9. '0' → logprob: -9.799437522888184
    10. ' p' → logprob: -10.049437522888184

Token 165: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03020559251308441
    2. '3' → logprob: -3.905205488204956
    3. '2' → logprob: -5.155205726623535
    4. '1' → logprob: -6.655205726623535
    5. '6' → logprob: -7.030205726623535
    6. '5' → logprob: -7.155205726623535
    7. ' ' → logprob: -8.155205726623535
    8. '7' → logprob: -8.530205726623535
    9. '8' → logprob: -8.655205726623535
    10. '10' → logprob: -9.155205726623535

Token 166: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011931557208299637
    2. '.' → logprob: -5.886931419372559
    3. ')' → logprob: -6.261931419372559
    4. ':' → logprob: -6.636931419372559
    5. '
' → logprob: -6.636931419372559
    6. '*' → logprob: -7.136931419372559
    7. '0' → logprob: -7.261931419372559
    8. '(' → logprob: -7.261931419372559
    9. ' def' → logprob: -7.636931419372559
    10. '

' → logprob: -8.136931419372559

Token 167: '0' (ID: 15)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01896836794912815
    2. '
' → logprob: -4.39396858215332
    3. '

' → logprob: -5.51896858215332
    4. '\' → logprob: -7.39396858215332
    5. '0' → logprob: -7.51896858215332
    6. '\n' → logprob: -8.01896858215332
    7. '4' → logprob: -8.39396858215332
    8. ' def' → logprob: -9.01896858215332
    9. '    
' → logprob: -9.39396858215332
    10. '2' → logprob: -9.51896858215332

Token 168: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0526692233979702
    2. '<|end|>' → logprob: -3.3026692867279053
    3. '
' → logprob: -4.552669048309326
    4. ')' → logprob: -6.302669048309326
    5. '<|end|>' → logprob: -7.927669048309326
    6. '\n' → logprob: -8.052669525146484
    7. '

' → logprob: -8.052669525146484
    8. '  
' → logprob: -8.552669525146484
    9. '\' → logprob: -8.677669525146484
    10. ',' → logprob: -8.802669525146484

Token 169: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010413920972496271
    2. 'class' → logprob: -9.750103950500488
    3. '
' → logprob: -10.250103950500488
    4. '<|end|>' → logprob: -13.125103950500488
    5. '\' → logprob: -13.375103950500488
    6. '  
' → logprob: -13.875103950500488
    7. ' 
' → logprob: -14.000103950500488
    8. ' def' → logprob: -14.375103950500488
    9. 'ndef' → logprob: -14.375103950500488
    10. '    
' → logprob: -14.500103950500488

Token 170: ' can' (ID: 665)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.6305956840515137
    2. 'solve' → logprob: -1.8805956840515137
    3. ' find' → logprob: -2.0055956840515137
    4. ' d' → logprob: -2.1305956840515137
    5. ' shortest' → logprob: -2.1305956840515137
    6. 'astar' → logprob: -2.8805956840515137
    7. ' main' → logprob: -3.3805956840515137
    8. 'd' → logprob: -3.5055956840515137
    9. ' a' → logprob: -4.005595684051514
    10. 'main' → logprob: -4.130595684051514

Token 171: '_be' (ID: 40729)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.26777616143226624
    2. '_pass' → logprob: -2.8927762508392334
    3. '_go' → logprob: -3.0177762508392334
    4. '_re' → logprob: -3.2677762508392334
    5. '_continue' → logprob: -4.017776012420654
    6. '_walk' → logprob: -4.017776012420654
    7. '_jump' → logprob: -4.017776012420654
    8. '_' → logprob: -4.142776012420654
    9. '_run' → logprob: -5.392776012420654
    10. '(' → logprob: -5.642776012420654

Token 172: '_safe' (ID: 87847)
  Prédit: 'come'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'come' → logprob: -1.5319606065750122
    2. '_re' → logprob: -1.5319606065750122
    3. '_at' → logprob: -2.1569604873657227
    4. '_here' → logprob: -2.4069604873657227
    5. '_' → logprob: -2.7819604873657227
    6. '_pass' → logprob: -2.9069604873657227
    7. '_in' → logprob: -3.1569604873657227
    8. '_safe' → logprob: -3.7819604873657227
    9. '_inside' → logprob: -3.9069604873657227
    10. '_on' → logprob: -4.031960487365723

Token 173: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0011967786122113466
    2. '(' → logprob: -6.75119686126709
    3. '(point' → logprob: -11.50119686126709
    4. '(P' → logprob: -12.50119686126709
    5. ' (' → logprob: -12.62619686126709
    6. '_at' → logprob: -13.12619686126709
    7. '(x' → logprob: -13.75119686126709
    8. '(
' → logprob: -13.87619686126709
    9. '_to' → logprob: -14.00119686126709
    10. '((' → logprob: -14.37619686126709

Token 174: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20728451013565063
    2. ',' → logprob: -1.7072844505310059
    3. '):
' → logprob: -5.332284450531006
    4. ',p' → logprob: -7.707284450531006
    5. ')' → logprob: -8.332284927368164
    6. ' ):' → logprob: -8.457284927368164
    7. ' ,' → logprob: -10.082284927368164
    8. '   ' → logprob: -10.332284927368164
    9. '):
' → logprob: -11.207284927368164
    10. '(p' → logprob: -12.207284927368164

Token 175: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.1828707456588745
    2. ' monsters' → logprob: -2.057870864868164
    3. ' safe' → logprob: -4.307870864868164
    4. 'safe' → logprob: -5.057870864868164
    5. 'm' → logprob: -5.307870864868164
    6. 'p' → logprob: -6.182870864868164
    7. '   ' → logprob: -6.557870864868164
    8. 't' → logprob: -6.932870864868164
    9. 'dist' → logprob: -7.245370864868164
    10. ')' → logprob: -7.307870864868164

Token 176: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10140341520309448
    2. '):' → logprob: -2.3514034748077393
    3. ' ):' → logprob: -7.72640323638916
    4. ' ,' → logprob: -7.85140323638916
    5. ')' → logprob: -8.22640323638916
    6. '):
' → logprob: -10.10140323638916
    7. ',p' → logprob: -11.10140323638916
    8. ',m' → logprob: -11.35140323638916
    9. '   ' → logprob: -11.72640323638916
    10. ',
' → logprob: -12.35140323638916

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038699046708643436
    2. ' return' → logprob: -5.753870010375977
    3. 'return' → logprob: -7.753870010375977
    4. ' min' → logprob: -9.253870010375977
    5. '    
' → logprob: -9.878870010375977
    6. 'min' → logprob: -10.128870010375977
    7. ')' → logprob: -11.128870010375977
    8. '   ' → logprob: -11.378870010375977
    9. '    ' → logprob: -12.128870010375977
    10. ',' → logprob: -12.253870010375977

Token 178: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4218226671218872
    2. 'return' → logprob: -1.1718226671218872
    3. ' return' → logprob: -3.5468225479125977
    4. 'min' → logprob: -5.796822547912598
    5. 'if' → logprob: -6.546822547912598
    6. ' if' → logprob: -7.796822547912598
    7. '    
' → logprob: -8.921822547912598
    8. ' min' → logprob: -8.921822547912598
    9. 'for' → logprob: -9.546822547912598
    10. 'mind' → logprob: -10.046822547912598

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5731868147850037
    2. '=' → logprob: -0.9481868147850037
    3. '(p' → logprob: -3.0731868743896484
    4. '(' → logprob: -7.073186874389648
    5. ')' → logprob: -7.323186874389648
    6. '=p' → logprob: -7.823186874389648
    7. '=count' → logprob: -8.698186874389648
    8. '_count' → logprob: -9.323186874389648
    9. '_' → logprob: -9.323186874389648
    10. ',' → logprob: -9.448186874389648

Token 180: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3870268166065216
    2. ' min' → logprob: -1.1370267868041992
    3. '0' → logprob: -9.0120267868042
    4. 'len' → logprob: -11.0120267868042
    5. ' len' → logprob: -12.3870267868042
    6. '1' → logprob: -12.6370267868042
    7. 'max' → logprob: -13.0120267868042
    8. ' ' → logprob: -13.0120267868042
    9. '(min' → logprob: -13.2620267868042
    10. '[min' → logprob: -14.0120267868042

Token 181: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -13.500003814697266
    3. 'dist' → logprob: -13.500003814697266
    4. '_count' → logprob: -15.375003814697266
    5. '(dist' → logprob: -15.500003814697266
    6. 'Dist' → logprob: -15.875003814697266
    7. ' _' → logprob: -16.000003814697266
    8. '_cnt' → logprob: -16.125003814697266
    9. '_DIST' → logprob: -17.250003814697266
    10. '(' → logprob: -17.625003814697266

Token 182: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1472419600977446e-06
    2. '_to' → logprob: -14.250000953674316
    3. 'count' → logprob: -15.375000953674316
    4. ' _' → logprob: -16.875001907348633
    5. '_counts' → logprob: -16.875001907348633
    6. '(p' → logprob: -17.625001907348633
    7. '_' → logprob: -17.875001907348633
    8. '_c' → logprob: -18.250001907348633
    9. '_cont' → logprob: -18.750001907348633
    10. ' count' → logprob: -18.750001907348633

Token 183: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.20734242349863e-05
    2. '(' → logprob: -9.625072479248047
    3. ' (' → logprob: -12.125072479248047
    4. '(
' → logprob: -14.875072479248047
    5. '(P' → logprob: -17.375072479248047
    6. ' ' → logprob: -17.875072479248047
    7. ',' → logprob: -18.250072479248047
    8. '(point' → logprob: -18.375072479248047
    9. '((' → logprob: -18.500072479248047
    10. '```' → logprob: -18.875072479248047

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15169945359230042
    2. '(p' → logprob: -2.0266995429992676
    3. ',p' → logprob: -4.776699542999268
    4. '(' → logprob: -7.776699542999268
    5. ')' → logprob: -9.40169906616211
    6. ' ,' → logprob: -10.40169906616211
    7. ',m' → logprob: -11.40169906616211
    8. '(mon' → logprob: -11.77669906616211
    9. ',
' → logprob: -13.27669906616211
    10. ',(' → logprob: -13.65169906616211

Token 185: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.00764223700389266
    2. ' monsters' → logprob: -4.8826422691345215
    3. 'monster' → logprob: -11.257641792297363
    4. 'mons' → logprob: -11.882641792297363
    5. ' mon' → logprob: -12.507641792297363
    6. '(mon' → logprob: -12.632641792297363
    7. '   ' → logprob: -13.257641792297363
    8. ')' → logprob: -13.632641792297363
    9. 'm' → logprob: -14.007641792297363
    10. '_mon' → logprob: -14.257641792297363

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022206762805581093
    2. ')
' → logprob: -6.127220630645752
    3. '   ' → logprob: -11.50222110748291
    4. ')==' → logprob: -11.50222110748291
    5. ')>=' → logprob: -11.87722110748291
    6. ')>' → logprob: -13.12722110748291
    7. ' )' → logprob: -13.37722110748291
    8. ')<=' → logprob: -13.50222110748291
    9. ')<' → logprob: -13.75222110748291
    10. ')

' → logprob: -13.87722110748291

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005692588165402412
    2. ' <=' → logprob: -6.380692481994629
    3. '<|end|>' → logprob: -6.380692481994629
    4. '<=' → logprob: -7.630692481994629
    5. '==' → logprob: -7.630692481994629
    6. ' ==' → logprob: -7.755692481994629
    7. ' >=' → logprob: -9.130692481994629
    8. '  ' → logprob: -9.255692481994629
    9. ' if' → logprob: -9.380692481994629
    10. ' and' → logprob: -9.380692481994629

Token 188: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.592180073261261
    2. '   ' → logprob: -0.967180073261261
    3. ' return' → logprob: -2.717180013656616
    4. 'if' → logprob: -7.842180252075195
    5. ' if' → logprob: -9.217180252075195
    6. '
' → logprob: -9.342180252075195
    7. ' ' → logprob: -10.717180252075195
    8. '  ' → logprob: -10.842180252075195
    9. '	return' → logprob: -10.967180252075195
    10. '    
' → logprob: -11.842180252075195

Token 189: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.57622230052948
    2. ' cnt' → logprob: -0.82622230052948
    3. '(cnt' → logprob: -8.20122241973877
    4. '	cnt' → logprob: -13.07622241973877
    5. '   ' → logprob: -13.95122241973877
    6. '[cnt' → logprob: -14.32622241973877
    7. 'count' → logprob: -14.32622241973877
    8. ' True' → logprob: -14.57622241973877
    9. ' (' → logprob: -14.57622241973877
    10. ' ' → logprob: -14.70122241973877

Token 190: '>=' (ID: 20974)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0259536504745483
    2. ' ==' → logprob: -1.6509536504745483
    3. '<=' → logprob: -2.025953769683838
    4. ' <=' → logprob: -2.150953769683838
    5. '>=' → logprob: -2.775953769683838
    6. '>' → logprob: -3.275953769683838
    7. ' >=' → logprob: -3.275953769683838
    8. ' <' → logprob: -4.150953769683838
    9. ' >' → logprob: -4.150953769683838
    10. '<' → logprob: -4.275953769683838

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06414896249771118
    2. '1' → logprob: -3.0641489028930664
    3. '3' → logprob: -4.314148902893066
    4. 'len' → logprob: -6.814148902893066
    5. ' ' → logprob: -7.689148902893066
    6. '4' → logprob: -7.814148902893066
    7. '0' → logprob: -9.939148902893066
    8. '5' → logprob: -10.814148902893066
    9. '
' → logprob: -12.126648902893066
    10. '6' → logprob: -12.501648902893066

Token 192: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27170830965042114
    2. '
' → logprob: -1.8967082500457764
    3. '

' → logprob: -3.1467082500457764
    4. '<|end|>' → logprob: -3.1467082500457764
    5. '\n' → logprob: -7.5217084884643555
    6. '<|end|>' → logprob: -7.7717084884643555
    7. '\' → logprob: -8.646708488464355
    8. ' and' → logprob: -8.646708488464355
    9. '#' → logprob: -9.646708488464355
    10. 'and' → logprob: -9.646708488464355

Token 193: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009480869397521019
    2. '
' → logprob: -5.259480953216553
    3. '

' → logprob: -5.509480953216553
    4. '<|end|>' → logprob: -9.259480476379395
    5. '\' → logprob: -10.759480476379395
    6. '#' → logprob: -11.259480476379395
    7. ':' → logprob: -11.509480476379395
    8. '\n' → logprob: -11.884480476379395
    9. '<|end|>' → logprob: -12.259480476379395
    10. 'and' → logprob: -12.884480476379395

Token 194: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5876438021659851
    2. ' find' → logprob: -1.8376438617706299
    3. ' solve' → logprob: -1.9626438617706299
    4. ' safe' → logprob: -2.96264386177063
    5. ' shortest' → logprob: -3.21264386177063
    6. ' d' → logprob: -4.462643623352051
    7. ' can' → logprob: -4.837643623352051
    8. 'main' → logprob: -5.212643623352051
    9. ' escape' → logprob: -5.337643623352051
    10. 'solve' → logprob: -5.462643623352051

Token 195: '(mon' (ID: 142845)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6465564370155334
    2. '():' → logprob: -0.7715564370155334
    3. '(' → logprob: -4.396556377410889
    4. '(s' → logprob: -7.396556377410889
    5. '(points' → logprob: -9.021556854248047
    6. '(P' → logprob: -9.521556854248047
    7. ' ():' → logprob: -9.521556854248047
    8. '(a' → logprob: -9.646556854248047
    9. '()' → logprob: -9.771556854248047
    10. '():
' → logprob: -9.771556854248047

Token 196: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -5.800739018013701e-05
    2. '```' → logprob: -11.1250581741333
    3. 'st' → logprob: -11.2500581741333
    4. 'ster' → logprob: -11.5000581741333
    5. 's' → logprob: -11.6250581741333
    6. ')' → logprob: -13.1250581741333
    7. 'ters' → logprob: -13.2500581741333
    8. '   ' → logprob: -13.6250581741333
    9. '=' → logprob: -13.7500581741333
    10. 'stars' → logprob: -14.3750581741333

Token 197: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42904898524284363
    2. '):' → logprob: -1.054049015045166
    3. '):
' → logprob: -8.929048538208008
    4. ' ):' → logprob: -9.054048538208008
    5. ' ,' → logprob: -10.054048538208008
    6. ')' → logprob: -10.304048538208008
    7. ',p' → logprob: -12.179048538208008
    8. ',
' → logprob: -12.304048538208008
    9. '   ' → logprob: -13.179048538208008
    10. ':' → logprob: -13.179048538208008

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013628548476845026
    2. '    ' → logprob: -7.1263628005981445
    3. '    
' → logprob: -8.126362800598145
    4. '
' → logprob: -9.626362800598145
    5. ',' → logprob: -9.876362800598145
    6. 'n' → logprob: -10.251362800598145
    7. ' import' → logprob: -11.001362800598145
    8. 'import' → logprob: -11.001362800598145
    9. '```' → logprob: -11.126362800598145
    10. '   ' → logprob: -11.251362800598145

Token 199: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.6513872742652893
    2. 'pq' → logprob: -1.6513872146606445
    3. 'n' → logprob: -1.9013872146606445
    4. '   ' → logprob: -2.7763872146606445
    5. 'N' → logprob: -4.1513872146606445
    6. 'q' → logprob: -4.4013872146606445
    7. 'heap' → logprob: -4.4013872146606445
    8. 'import' → logprob: -4.4013872146606445
    9. 'queue' → logprob: -5.2763872146606445
    10. 'Q' → logprob: -5.4013872146606445

Token 200: '_points' (ID: 30070)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020336804445832968
    2. '=' → logprob: -6.252033710479736
    3. ',' → logprob: -10.002033233642578
    4. ' =(' → logprob: -10.002033233642578
    5. ' =[' → logprob: -12.252033233642578
    6. '=(' → logprob: -12.377033233642578
    7. ')' → logprob: -13.752033233642578
    8. ' ' → logprob: -14.002033233642578
    9. '=[' → logprob: -14.127033233642578
    10. '(' → logprob: -14.627033233642578

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008667871356010437
    2. '=' → logprob: -4.758667945861816
    3. ' =[' → logprob: -10.383667945861816
    4. '=[]' → logprob: -11.508667945861816
    5. ' ' → logprob: -12.258667945861816
    6. '[' → logprob: -12.883667945861816
    7. '=[' → logprob: -13.008667945861816
    8. ',' → logprob: -14.383667945861816
    9. '[]' → logprob: -15.008667945861816
    10. ')' → logprob: -15.258667945861816

Token 202: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.012979622930288315
    2. ' [(' → logprob: -4.512979507446289
    3. '[]' → logprob: -6.387979507446289
    4. '[' → logprob: -9.262979507446289
    5. '[((' → logprob: -9.762979507446289
    6. ' []' → logprob: -10.637979507446289
    7. '[[' → logprob: -10.762979507446289
    8. ' [' → logprob: -10.887979507446289
    9. '[
' → logprob: -11.012979507446289
    10. '[]
' → logprob: -11.762979507446289

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3789531886577606
    2. '(' → logprob: -1.253953218460083
    3. '1' → logprob: -4.753952980041504
    4. 'x' → logprob: -5.378952980041504
    5. ' (' → logprob: -5.378952980041504
    6. '(x' → logprob: -5.628952980041504
    7. '(i' → logprob: -6.003952980041504
    8. ' ' → logprob: -6.628952980041504
    9. '2' → logprob: -6.753952980041504
    10. ')' → logprob: -7.128952980041504

Token 204: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38844987750053406
    2. '.' → logprob: -1.1384499073028564
    3. '0' → logprob: -7.013449668884277
    4. ' ,' → logprob: -8.263449668884277
    5. '[' → logprob: -8.763449668884277
    6. '.,' → logprob: -9.138449668884277
    7. ')' → logprob: -10.013449668884277
    8. '+' → logprob: -10.513449668884277
    9. '),' → logprob: -11.513449668884277
    10. '```' → logprob: -11.513449668884277

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.24179228907451e-05
    2. ' )' → logprob: -10.750061988830566
    3. 'y' → logprob: -11.250061988830566
    4. '/' → logprob: -11.375061988830566
    5. ')
' → logprob: -12.375061988830566
    6. '0' → logprob: -12.750061988830566
    7. '*' → logprob: -12.875061988830566
    8. ',' → logprob: -13.250061988830566
    9. ')]' → logprob: -13.625061988830566
    10. '(' → logprob: -14.375061988830566

Token 206: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3869219422340393
    2. 'for' → logprob: -1.1369218826293945
    3. ')' → logprob: -10.261921882629395
    4. 'y' → logprob: -11.636921882629395
    5. '	for' → logprob: -12.511921882629395
    6. ' ' → logprob: -13.511921882629395
    7. ' y' → logprob: -13.761921882629395
    8. '0' → logprob: -14.886921882629395
    9. '```' → logprob: -15.886921882629395
    10. '
' → logprob: -16.26192283630371

Token 207: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014195124618709087
    2. ' y' → logprob: -4.264194965362549
    3. '[' → logprob: -10.639195442199707
    4. 'i' → logprob: -12.389195442199707
    5. 'x' → logprob: -13.514195442199707
    6. '[y' → logprob: -14.139195442199707
    7. 'f' → logprob: -15.139195442199707
    8. ' ' → logprob: -15.389195442199707
    9. 'range' → logprob: -15.389195442199707
    10. ' [' → logprob: -15.514195442199707

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02060086466372013
    2. 'in' → logprob: -3.8956007957458496
    3. ' ' → logprob: -10.895601272583008
    4. ')' → logprob: -11.770601272583008
    5. '0' → logprob: -12.145601272583008
    6. '<|end|>' → logprob: -12.270601272583008
    7. 'range' → logprob: -12.270601272583008
    8. 'import' → logprob: -12.770601272583008
    9. 's' → logprob: -12.895601272583008
    10. 'n' → logprob: -13.145601272583008

Token 209: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011316951364278793
    2. 'range' → logprob: -5.136316776275635
    3. ' [' → logprob: -5.386316776275635
    4. ' range' → logprob: -7.636316776275635
    5. '(' → logprob: -8.761317253112793
    6. '[i' → logprob: -9.636317253112793
    7. 'fr' → logprob: -10.386317253112793
    8. ' (' → logprob: -11.386317253112793
    9. '[y' → logprob: -11.886317253112793
    10. '[-' → logprob: -12.136317253112793

Token 210: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010735921561717987
    2. 'i' → logprob: -4.760735988616943
    3. '1' → logprob: -6.635735988616943
    4. '4' → logprob: -7.885735988616943
    5. ' ' → logprob: -9.135735511779785
    6. 'round' → logprob: -9.260735511779785
    7. 'x' → logprob: -9.635735511779785
    8. 'float' → logprob: -9.760735511779785
    9. '2' → logprob: -10.385735511779785
    10. ' i' → logprob: -10.510735511779785

Token 211: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03233405947685242
    2. ' *' → logprob: -3.532334089279175
    3. '/' → logprob: -6.657333850860596
    4. '0' → logprob: -6.782333850860596
    5. ' for' → logprob: -9.907334327697754
    6. '*(' → logprob: -10.032334327697754
    7. ' ' → logprob: -10.532334327697754
    8. 'for' → logprob: -12.157334327697754
    9. '*
' → logprob: -12.282334327697754
    10. '*.' → logprob: -12.532334327697754

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07945500314235687
    2. '1' → logprob: -2.5794548988342285
    3. ' ' → logprob: -7.5794548988342285
    4. '4' → logprob: -10.579455375671387
    5. '.' → logprob: -11.516955375671387
    6. '2' → logprob: -11.641955375671387
    7. '```' → logprob: -13.329455375671387
    8. '   ' → logprob: -13.516955375671387
    9. '(' → logprob: -13.704455375671387
    10. ',' → logprob: -14.079455375671387

Token 213: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00048775310278870165
    2. '0' → logprob: -7.750487804412842
    3. '1' → logprob: -10.000487327575684
    4. '2' → logprob: -11.875487327575684
    5. '4' → logprob: -13.125487327575684
    6. '.
' → logprob: -14.250487327575684
    7. '3' → logprob: -14.625487327575684
    8. ' .' → logprob: -15.000487327575684
    9. '5' → logprob: -15.375487327575684
    10. ' ' → logprob: -15.875487327575684

Token 214: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2917325794696808
    2. '25' → logprob: -1.7917325496673584
    3. '1' → logprob: -3.0417325496673584
    4. '2' → logprob: -3.4167325496673584
    5. '05' → logprob: -5.6667327880859375
    6. '4' → logprob: -7.1667327880859375
    7. '0' → logprob: -7.4167327880859375
    8. '01' → logprob: -8.041732788085938
    9. '125' → logprob: -8.416732788085938
    10. '8' → logprob: -9.416732788085938

Token 215: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08911493420600891
    2. 'for' → logprob: -2.4641149044036865
    3. ' ' → logprob: -8.839115142822266
    4. ',' → logprob: -11.089115142822266
    5. '	for' → logprob: -12.214115142822266
    6. '
' → logprob: -12.839115142822266
    7. '  ' → logprob: -13.339115142822266
    8. '   ' → logprob: -14.089115142822266
    9. ' fo' → logprob: -14.339115142822266
    10. '<|end|>' → logprob: -14.464115142822266

Token 216: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2620656192302704
    2. 'range' → logprob: -2.2620656490325928
    3. ' i' → logprob: -2.7620656490325928
    4. ' range' → logprob: -2.7620656490325928
    5. ' ' → logprob: -10.262065887451172
    6. ' in' → logprob: -11.137065887451172
    7. 'in' → logprob: -11.512065887451172
    8. '<|end|>' → logprob: -12.137065887451172
    9. '	range' → logprob: -12.887065887451172
    10. ' xrange' → logprob: -13.012065887451172

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016221702098846436
    2. 'in' → logprob: -4.141221523284912
    3. 'range' → logprob: -8.89122200012207
    4. ' range' → logprob: -10.76622200012207
    5. ' ' → logprob: -10.89122200012207
    6. '<|end|>' → logprob: -11.76622200012207
    7. 'import' → logprob: -13.76622200012207
    8. 'n' → logprob: -15.89122200012207
    9. '
' → logprob: -16.01622200012207
    10. ' xrange' → logprob: -16.26622200012207

Token 218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042180240154266
    2. ' range' → logprob: -3.2880420684814453
    3. '(range' → logprob: -14.663042068481445
    4. 'list' → logprob: -16.663042068481445
    5. '	range' → logprob: -17.038042068481445
    6. '[' → logprob: -17.288042068481445
    7. ' ' → logprob: -17.538042068481445
    8. '
' → logprob: -17.913042068481445
    9. '8' → logprob: -18.038042068481445
    10. ' xrange' → logprob: -18.788042068481445

Token 219: '(' (ID: 7)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004633757285773754
    2. '(' → logprob: -5.379633903503418
    3. ' ' → logprob: -12.129633903503418
    4. '
' → logprob: -12.629633903503418
    5. '```' → logprob: -13.254633903503418
    6. '1' → logprob: -14.004633903503418
    7. '   ' → logprob: -14.879633903503418
    8. '0' → logprob: -15.129633903503418
    9. ' (' → logprob: -15.379633903503418
    10. '=' → logprob: -15.504633903503418

Token 220: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.337155355140567e-05
    2. '11' → logprob: -10.250062942504883
    3. '10' → logprob: -10.750062942504883
    4. '1' → logprob: -12.500062942504883
    5. '0' → logprob: -13.375062942504883
    6. ' ' → logprob: -14.875062942504883
    7. '```' → logprob: -15.125062942504883
    8. '17' → logprob: -16.125062942504883
    9. '5' → logprob: -16.500062942504883
    10. '3' → logprob: -16.625062942504883

Token 221: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04423794150352478
    2. ')' → logprob: -3.4192378520965576
    3. '])]' → logprob: -4.794238090515137
    4. ']' → logprob: -6.919238090515137
    5. ']]' → logprob: -7.794238090515137
    6. ')])' → logprob: -7.919238090515137
    7. '])' → logprob: -8.669238090515137
    8. ',' → logprob: -8.919238090515137
    9. ']]]' → logprob: -9.794238090515137
    10. ' )' → logprob: -10.419238090515137

Token 222: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019149534637108445
    2. ' ]' → logprob: -6.376914978027344
    3. ',' → logprob: -8.501914978027344
    4. '   ' → logprob: -12.501914978027344
    5. ')]' → logprob: -13.126914978027344
    6. '],' → logprob: -13.876914978027344
    7. '])' → logprob: -14.001914978027344
    8. ']+' → logprob: -14.376914978027344
    9. ' ,' → logprob: -14.876914978027344
    10. ')' → logprob: -14.876914978027344

Token 223: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.6713926196098328
    2. 'inside' → logprob: -1.6713926792144775
    3. 'all' → logprob: -2.0463926792144775
    4. 'not' → logprob: -2.9213926792144775
    5. ' all' → logprob: -3.1713926792144775
    6. ' can' → logprob: -3.4213926792144775
    7. 'any' → logprob: -4.171392440795898
    8. ' inside' → logprob: -4.546392440795898
    9. ' not' → logprob: -4.546392440795898
    10. '0' → logprob: -6.296392440795898

Token 224: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -0.0005766240647062659
    2. '_can' → logprob: -7.500576496124268
    3. '(' → logprob: -11.000576972961426
    4. '_BE' → logprob: -13.750576972961426
    5. '_safe' → logprob: -13.875576972961426
    6. ' (' → logprob: -14.375576972961426
    7. ' _' → logprob: -14.375576972961426
    8. ' ' → logprob: -14.625576972961426
    9. '(be' → logprob: -14.875576972961426
    10. '_have' → logprob: -15.125576972961426

Token 225: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -0.0005831766175106168
    2. 'safe' → logprob: -7.625583171844482
    3. ' safe' → logprob: -9.37558364868164
    4. '_save' → logprob: -12.50058364868164
    5. 'afe' → logprob: -13.12558364868164
    6. '_SAFE' → logprob: -13.50058364868164
    7. '_' → logprob: -14.62558364868164
    8. '(' → logprob: -14.87558364868164
    9. '   ' → logprob: -15.12558364868164
    10. ' ' → logprob: -15.25058364868164

Token 226: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004799395799636841
    2. '(' → logprob: -5.3797993659973145
    3. ' ((' → logprob: -8.754799842834473
    4. ' (' → logprob: -11.254799842834473
    5. ' ' → logprob: -11.754799842834473
    6. '(((' → logprob: -15.379799842834473
    7. '(
' → logprob: -15.629799842834473
    8. '([' → logprob: -16.254798889160156
    9. '  ' → logprob: -16.629798889160156
    10. ',' → logprob: -16.754798889160156

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018363336857873946
    2. ' ' → logprob: -8.625184059143066
    3. '(' → logprob: -12.875184059143066
    4. 'start' → logprob: -15.000184059143066
    5. '
' → logprob: -15.125184059143066
    6. ',' → logprob: -15.375184059143066
    7. '   ' → logprob: -15.750184059143066
    8. '  
' → logprob: -16.25018310546875
    9. ')' → logprob: -16.43768310546875
    10. '  ' → logprob: -16.50018310546875

Token 228: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.3488418161869049
    2. ',' → logprob: -1.2238417863845825
    3. ' ,' → logprob: -8.098841667175293
    4. ',i' → logprob: -10.223841667175293
    5. 'y' → logprob: -10.723841667175293
    6. ',
' → logprob: -11.223841667175293
    7. ',x' → logprob: -11.973841667175293
    8. '0' → logprob: -12.598841667175293
    9. ',float' → logprob: -13.098841667175293
    10. ' ' → logprob: -13.348841667175293

Token 229: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005408184602856636
    2. ')]' → logprob: -5.63040828704834
    3. '),' → logprob: -7.13040828704834
    4. ',' → logprob: -8.00540828704834
    5. ' ))' → logprob: -8.25540828704834
    6. ')' → logprob: -8.50540828704834
    7. '))]
' → logprob: -9.13040828704834
    8. ')))' → logprob: -10.38040828704834
    9. '])]' → logprob: -10.63040828704834
    10. ')])' → logprob: -11.13040828704834

Token 230: 'mon' (ID: 3498)
  Prédit: 'mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.020824704319238663
    2. ' monsters' → logprob: -3.895824670791626
    3. 'monster' → logprob: -9.395824432373047
    4. '   ' → logprob: -9.520824432373047
    5. ' mon' → logprob: -10.020824432373047
    6. 'mons' → logprob: -11.020824432373047
    7. '(mon' → logprob: -11.520824432373047
    8. ' ' → logprob: -11.770824432373047
    9. ' monst' → logprob: -12.020824432373047
    10. '
' → logprob: -12.270824432373047

Token 231: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -2.176947600673884e-05
    2. 's' → logprob: -11.875021934509277
    3. 'ster' → logprob: -12.625021934509277
    4. 'st' → logprob: -13.125021934509277
    5. 'asters' → logprob: -13.500021934509277
    6. 'usters' → logprob: -13.625021934509277
    7. ')' → logprob: -13.625021934509277
    8. ' monsters' → logprob: -13.875021934509277
    9. 'osters' → logprob: -14.125021934509277
    10. 'mon' → logprob: -14.375021934509277

Token 232: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003086486831307411
    2. ']' → logprob: -8.750308990478516
    3. ')' → logprob: -9.375308990478516
    4. ' )' → logprob: -10.000308990478516
    5. '   ' → logprob: -11.875308990478516
    6. ' ]' → logprob: -13.125308990478516
    7. ')],' → logprob: -13.125308990478516
    8. ')]
' → logprob: -13.125308990478516
    9. '])]' → logprob: -13.500308990478516
    10. '),' → logprob: -13.750308990478516

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008319173008203506
    2. '
' → logprob: -5.13331937789917
    3. '    
' → logprob: -6.75831937789917
    4. ',' → logprob: -8.383318901062012
    5. 'result' → logprob: -8.758318901062012
    6. ')' → logprob: -9.008318901062012
    7. 'start' → logprob: -9.133318901062012
    8. 'results' → logprob: -9.383318901062012
    9. ' for' → logprob: -9.633318901062012
    10. '  
' → logprob: -10.008318901062012

Token 234: ' end' (ID: 1268)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9385921359062195
    2. ' heap' → logprob: -1.8135921955108643
    3. '   ' → logprob: -1.9385921955108643
    4. 'dist' → logprob: -2.5635921955108643
    5. 'if' → logprob: -2.6885921955108643
    6. 'pq' → logprob: -3.3135921955108643
    7. ' if' → logprob: -3.8135921955108643
    8. 'queue' → logprob: -3.9385921955108643
    9. 'q' → logprob: -3.9385921955108643
    10. 'visited' → logprob: -4.438591957092285

Token 235: '_x' (ID: 7054)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00023512568441219628
    2. '_' → logprob: -8.625235557556152
    3. 's' → logprob: -10.875235557556152
    4. 'points' → logprob: -11.625235557556152
    5. '_positions' → logprob: -11.750235557556152
    6. '_p' → logprob: -11.750235557556152
    7. '_tokens' → logprob: -12.625235557556152
    8. '_pts' → logprob: -12.875235557556152
    9. '```' → logprob: -13.875235557556152
    10. ' _' → logprob: -14.375235557556152

Token 236: ' =' (ID: 314)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.5116202235221863
    2. '=' → logprob: -1.386620283126831
    3. ' =' → logprob: -2.011620283126831
    4. 's' → logprob: -4.261620044708252
    5. 'points' → logprob: -6.511620044708252
    6. '_' → logprob: -8.13662052154541
    7. '_values' → logprob: -8.38662052154541
    8. 'oints' → logprob: -8.88662052154541
    9. '=_' → logprob: -9.01162052154541
    10. '_POINTS' → logprob: -9.63662052154541

Token 237: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.005248579662293196
    2. ' ' → logprob: -5.255248546600342
    3. '   ' → logprob: -12.0052490234375
    4. '3' → logprob: -12.2552490234375
    5. '  ' → logprob: -14.1302490234375
    6. '[' → logprob: -14.6302490234375
    7. '
' → logprob: -14.8177490234375
    8. '[]' → logprob: -15.1302490234375
    9. '```' → logprob: -15.2552490234375
    10. ' ' → logprob: -15.3802490234375

Token 238: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00019066639652010053
    2. ' ' → logprob: -8.625190734863281
    3. '3' → logprob: -12.500190734863281
    4. '[' → logprob: -12.750190734863281
    5. '   ' → logprob: -13.125190734863281
    6. '  ' → logprob: -14.750190734863281
    7. '[]' → logprob: -14.875190734863281
    8. '```' → logprob: -15.125190734863281
    9. '0' → logprob: -15.875190734863281
    10. ' [' → logprob: -15.937690734863281

Token 239: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18120324611663818
    2. '<|end|>' → logprob: -2.5562033653259277
    3. '
' → logprob: -3.0562033653259277
    4. '   ' → logprob: -4.056203365325928
    5. 'def' → logprob: -5.056203365325928
    6. 'end' → logprob: -5.431203365325928
    7. '<|end|>' → logprob: -5.431203365325928
    8. '0' → logprob: -5.806203365325928
    9. ')' → logprob: -6.431203365325928
    10. 'for' → logprob: -7.181203365325928

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043937109876424074
    2. '5' → logprob: -7.750439167022705
    3. '9' → logprob: -13.375439643859863
    4. ' ' → logprob: -13.375439643859863
    5. '1' → logprob: -13.625439643859863
    6. '999' → logprob: -13.625439643859863
    7. '
' → logprob: -14.250439643859863
    8. '```' → logprob: -14.375439643859863
    9. '   ' → logprob: -14.750439643859863
    10. '000' → logprob: -15.250439643859863

Token 241: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22065502405166626
    2. '
' → logprob: -2.2206549644470215
    3. 'end' → logprob: -2.4706549644470215
    4. 'start' → logprob: -6.0956549644470215
    5. ',' → logprob: -7.0956549644470215
    6. 'dist' → logprob: -7.9706549644470215
    7. 'def' → logprob: -8.34565544128418
    8. ',end' → logprob: -8.34565544128418
    9. '    
' → logprob: -8.72065544128418
    10. 'edges' → logprob: -9.22065544128418

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007310337852686644
    2. ',' → logprob: -6.257310390472412
    3. '
' → logprob: -6.382310390472412
    4. ' queue' → logprob: -7.007310390472412
    5. 'end' → logprob: -7.382310390472412
    6. ' for' → logprob: -7.632310390472412
    7. 'queue' → logprob: -8.007309913635254
    8. 'import' → logprob: -8.382309913635254
    9. ' edges' → logprob: -8.507309913635254
    10. 'edges' → logprob: -8.882309913635254

Token 243: ' EPS' (ID: 66979)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0967439413070679
    2. 'heap' → logprob: -1.2217439413070679
    3. 'pq' → logprob: -1.8467439413070679
    4. 'end' → logprob: -3.0967440605163574
    5. 'dp' → logprob: -3.4717440605163574
    6. 'visited' → logprob: -3.4717440605163574
    7. '   ' → logprob: -3.4717440605163574
    8. 'import' → logprob: -3.7217440605163574
    9. 'queue' → logprob: -3.7217440605163574
    10. 'graph' → logprob: -5.221744060516357

Token 244: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061972394585609436
    2. '=' → logprob: -2.8119723796844482
    3. ' ' → logprob: -13.436972618103027
    4. '   ' → logprob: -14.061972618103027
    5. ' =)' → logprob: -14.311972618103027
    6. '_' → logprob: -14.686972618103027
    7. ' =
' → logprob: -15.061972618103027
    8. '  ' → logprob: -15.186972618103027
    9. '    ' → logprob: -15.311972618103027
    10. ')' → logprob: -15.811972618103027

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -15.750051498413086
    4. '   ' → logprob: -16.625051498413086
    5. '=' → logprob: -17.625051498413086
    6. '-' → logprob: -18.000051498413086
    7. '+' → logprob: -19.250051498413086
    8. '```' → logprob: -20.000051498413086
    9. '10' → logprob: -20.000051498413086
    10. '.' → logprob: -20.250051498413086

Token 246: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005284157581627369
    2. 'e' → logprob: -5.255284309387207
    3. ' -' → logprob: -11.255284309387207
    4. '.' → logprob: -11.380284309387207
    5. '-
' → logprob: -11.630284309387207
    6. '```' → logprob: -11.755284309387207
    7. '0' → logprob: -12.380284309387207
    8. '-e' → logprob: -14.005284309387207
    9. '   ' → logprob: -14.255284309387207
    10. '=' → logprob: -14.380284309387207

Token 247: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2664456789934775e-06
    2. ' -' → logprob: -14.500000953674316
    3. '9' → logprob: -15.500000953674316
    4. '3' → logprob: -16.125001907348633
    5. '6' → logprob: -16.625001907348633
    6. '7' → logprob: -16.750001907348633
    7. '
' → logprob: -16.750001907348633
    8. '```' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '8' → logprob: -17.375001907348633

Token 248: '7' (ID: 22)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.32073673605918884
    2. '8' → logprob: -1.6957367658615112
    3. '10' → logprob: -2.9457366466522217
    4. '7' → logprob: -3.4457366466522217
    5. '12' → logprob: -5.320736885070801
    6. '6' → logprob: -6.570736885070801
    7. '11' → logprob: -9.3207368850708
    8. '14' → logprob: -10.1957368850708
    9. '5' → logprob: -10.4457368850708
    10. '13' → logprob: -11.3207368850708

Token 249: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.653118908405304
    2. '
' → logprob: -0.778118908405304
    3. ',' → logprob: -5.153119087219238
    4. '    
' → logprob: -5.153119087219238
    5. ',
' → logprob: -6.278119087219238
    6. 'dist' → logprob: -6.528119087219238
    7. ' 
' → logprob: -6.903119087219238
    8. ' heap' → logprob: -7.153119087219238
    9. 'heap' → logprob: -7.153119087219238
    10. '  
' → logprob: -7.403119087219238

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8958199620246887
    2. 'graph' → logprob: -1.520819902420044
    3. 'dist' → logprob: -1.895819902420044
    4. ' graph' → logprob: -2.270819902420044
    5. 'heap' → logprob: -3.770819902420044
    6. ' dist' → logprob: -3.895819902420044
    7. ',' → logprob: -4.395820140838623
    8. ' heap' → logprob: -4.645820140838623
    9. 'import' → logprob: -4.770820140838623
    10. 'distance' → logprob: -5.145820140838623

Token 251: ' nodes' (ID: 15749)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8326899409294128
    2. 'heap' → logprob: -0.8326899409294128
    3. 'pq' → logprob: -2.5826900005340576
    4. 'visited' → logprob: -3.8326900005340576
    5. 'graph' → logprob: -4.2076897621154785
    6. 'queue' → logprob: -4.5826897621154785
    7. 'import' → logprob: -5.8326897621154785
    8. 'hq' → logprob: -6.2076897621154785
    9. 'q' → logprob: -6.9576897621154785
    10. '   ' → logprob: -7.5826897621154785

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03885824605822563
    2. '=' → logprob: -3.28885817527771
    3. ',' → logprob: -7.788858413696289
    4. '=[]' → logprob: -7.913858413696289
    5. ' ' → logprob: -11.163858413696289
    6. ' ,' → logprob: -12.038858413696289
    7. ' =[' → logprob: -12.163858413696289
    8. '=[]
' → logprob: -13.038858413696289
    9. '=[],' → logprob: -13.663858413696289
    10. '   ' → logprob: -14.163858413696289

Token 253: ' []
' (ID: 8911)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8513869643211365
    2. '[]' → logprob: -1.4763870239257812
    3. '[(' → logprob: -1.7263870239257812
    4. '[start' → logprob: -1.9763870239257812
    5. 'list' → logprob: -4.851387023925781
    6. ' start' → logprob: -4.976387023925781
    7. ' []' → logprob: -5.351387023925781
    8. ' [(' → logprob: -5.851387023925781
    9. 'set' → logprob: -6.226387023925781
    10. '[]
' → logprob: -6.976387023925781

Token 254: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6038494110107422
    2. '   ' → logprob: -1.8538494110107422
    3. '[]' → logprob: -3.103849411010742
    4. 'nodes' → logprob: -3.353849411010742
    5. ' for' → logprob: -3.728849411010742
    6. 'for' → logprob: -4.103849411010742
    7. '=[]' → logprob: -4.103849411010742
    8. ',' → logprob: -4.228849411010742
    9. 'heap' → logprob: -4.228849411010742
    10. '<|end|>' → logprob: -4.478849411010742

Token 255: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.405272901058197
    2. 'points' → logprob: -2.030272960662842
    3. 'edges' → logprob: -2.655272960662842
    4. 'heap' → logprob: -3.280272960662842
    5. 'queue' → logprob: -3.780272960662842
    6. ' for' → logprob: -3.780272960662842
    7. 'positions' → logprob: -4.280272960662842
    8. 'nodes' (adapté à ' nodes') → logprob: -4.905272960662842
    9. 'node' → logprob: -5.030272960662842
    10. 'pos' → logprob: -6.155272960662842

Token 256: '.extend' (ID: 34151)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08732623606920242
    2. '.extend' → logprob: -2.7123262882232666
    3. '.' → logprob: -4.7123260498046875
    4. '=' → logprob: -5.3373260498046875
    5. ' =' → logprob: -6.0873260498046875
    6. '_append' → logprob: -8.087326049804688
    7. ' .' → logprob: -8.212326049804688
    8. '=[]' → logprob: -8.462326049804688
    9. 'append' → logprob: -8.712326049804688
    10. '.clear' → logprob: -9.462326049804688

Token 257: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.008364692330360413
    2. '([(' → logprob: -5.258364677429199
    3. '((' → logprob: -6.508364677429199
    4. '(' → logprob: -7.133364677429199
    5. 'start' → logprob: -7.758364677429199
    6. '([' → logprob: -8.1333646774292
    7. '([
' → logprob: -9.8833646774292
    8. '(((' → logprob: -10.7583646774292
    9. '(
' → logprob: -11.6333646774292
    10. '[start' → logprob: -12.1333646774292

Token 258: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.935296834039036e-06
    2. '_nodes' → logprob: -13.75000286102295
    3. 'points' → logprob: -13.87500286102295
    4. '_positions' → logprob: -15.12500286102295
    5. '```' → logprob: -15.25000286102295
    6. '_' → logprob: -16.625003814697266
    7. '_POINTS' → logprob: -16.875003814697266
    8. ')_' → logprob: -17.000003814697266
    9. '_tokens' → logprob: -17.000003814697266
    10. 'Points' → logprob: -17.875003814697266

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.329167369287461e-05
    2. ')
' → logprob: -9.625093460083008
    3. ' )' → logprob: -10.625093460083008
    4. '   ' → logprob: -13.625093460083008
    5. ')

' → logprob: -14.625093460083008
    6. ',' → logprob: -14.750093460083008
    7. ',)' → logprob: -15.125093460083008
    8. '
' → logprob: -15.500093460083008
    9. '))' → logprob: -16.000093460083008
    10. ' ' → logprob: -16.750093460083008

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485591888427734
    2. '
' → logprob: -1.0485591888427734
    3. '    
' → logprob: -3.1735591888427734
    4. 'for' → logprob: -4.423559188842773
    5. ' for' → logprob: -5.423559188842773
    6. ',' → logprob: -5.673559188842773
    7. ')' → logprob: -6.548559188842773
    8. 'nodes' → logprob: -6.548559188842773
    9. '  
' → logprob: -6.673559188842773
    10. '<|end|>' → logprob: -6.798559188842773

Token 261: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08823446184396744
    2. '   ' → logprob: -3.4632344245910645
    3. 'grid' → logprob: -4.2132344245910645
    4. 'layers' → logprob: -4.5882344245910645
    5. 'queue' → logprob: -5.3382344245910645
    6. 'points' → logprob: -5.3382344245910645
    7. 'nodes' (adapté à ' nodes') → logprob: -5.7132344245910645
    8. 'inter' → logprob: -6.4632344245910645
    9. ' for' → logprob: -6.5882344245910645
    10. 'c' → logprob: -6.7132344245910645

Token 262: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.2849747836589813
    2. '.append' → logprob: -1.4099748134613037
    3. '.' → logprob: -5.659974575042725
    4. '=' → logprob: -9.034975051879883
    5. '.pop' → logprob: -10.534975051879883
    6. 'append' → logprob: -10.784975051879883
    7. 'extend' → logprob: -10.784975051879883
    8. '_set' → logprob: -10.909975051879883
    9. '+=' → logprob: -10.909975051879883
    10. '_index' → logprob: -11.534975051879883

Token 263: '(mon' (ID: 142845)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.14657115936279297
    2. '((' → logprob: -2.646571159362793
    3. '(mon' → logprob: -3.271571159362793
    4. '(' → logprob: -4.271571159362793
    5. '([' → logprob: -4.396571159362793
    6. '(((' → logprob: -7.271571159362793
    7. '(m' → logprob: -9.021571159362793
    8. '[(' → logprob: -9.146571159362793
    9. '([
' → logprob: -9.521571159362793
    10. '(start' → logprob: -9.896571159362793

Token 264: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -6.32523515378125e-05
    2. 's' → logprob: -11.125062942504883
    3. 'st' → logprob: -11.125062942504883
    4. 'ters' → logprob: -11.500062942504883
    5. '=' → logprob: -12.375062942504883
    6. '[' → logprob: -12.750062942504883
    7. 'ster' → logprob: -13.000062942504883
    8. '```' → logprob: -13.500062942504883
    9. 'stars' → logprob: -13.875062942504883
    10. '
' → logprob: -13.875062942504883

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.407366916188039e-05
    2. ')
' → logprob: -10.500054359436035
    3. ' )' → logprob: -10.750054359436035
    4. '   ' → logprob: -12.625054359436035
    5. ' ' → logprob: -14.000054359436035
    6. '))' → logprob: -15.125054359436035
    7. '[' → logprob: -15.875054359436035
    8. ')}' → logprob: -16.12505340576172
    9. ')

' → logprob: -16.37505340576172
    10. ',' → logprob: -16.87505340576172

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005863024853169918
    2. '    
' → logprob: -6.255863189697266
    3. 'nodes' → logprob: -6.880863189697266
    4. '
' → logprob: -7.130863189697266
    5. 'for' → logprob: -7.130863189697266
    6. 'edges' → logprob: -7.880863189697266
    7. 'neighbors' → logprob: -8.005863189697266
    8. ' for' → logprob: -9.005863189697266
    9. '```' → logprob: -9.255863189697266
    10. ')' → logprob: -9.380863189697266

Token 267: ' nodes' (ID: 15749)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3589489758014679
    2. 'edges' → logprob: -1.8589489459991455
    3. 'graph' → logprob: -2.4839489459991455
    4. 'nodes' (adapté à ' nodes') → logprob: -4.108949184417725
    5. 'dist' → logprob: -4.108949184417725
    6. '
' → logprob: -4.733949184417725
    7. 'neighbors' → logprob: -5.733949184417725
    8. 'import' → logprob: -5.858949184417725
    9. 'safe' → logprob: -6.108949184417725
    10. 'points' → logprob: -6.483949184417725

Token 268: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7639015913009644
    2. '.extend' → logprob: -1.0139015913009644
    3. '.sort' → logprob: -2.513901710510254
    4. '.remove' → logprob: -3.513901710510254
    5. '=' → logprob: -3.638901710510254
    6. '.' → logprob: -4.388901710510254
    7. ' =' → logprob: -5.013901710510254
    8. ')' → logprob: -5.263901710510254
    9. '.pop' → logprob: -5.888901710510254
    10. '_index' → logprob: -6.513901710510254

Token 269: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.6286106983898208e-05
    2. '(' → logprob: -11.125016212463379
    3. '(((' → logprob: -13.500016212463379
    4. '([' → logprob: -18.500017166137695
    5. '(('' → logprob: -19.125017166137695
    6. ' ((' → logprob: -19.250017166137695
    7. '(([' → logprob: -19.750017166137695
    8. '(end' → logprob: -19.750017166137695
    9. '((-' → logprob: -20.000017166137695
    10. '(
' → logprob: -20.125017166137695

Token 270: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04504403844475746
    2. '4' → logprob: -3.1700439453125
    3. ' end' → logprob: -6.2950439453125
    4. '(end' → logprob: -8.7950439453125
    5. ' ' → logprob: -11.5450439453125
    6. '(' → logprob: -11.9200439453125
    7. '0' → logprob: -12.2950439453125
    8. ',end' → logprob: -12.4200439453125
    9. '   ' → logprob: -12.6700439453125
    10. '=end' → logprob: -13.0450439453125

Token 271: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.034592388459714e-06
    2. 'x' → logprob: -12.125005722045898
    3. ',' → logprob: -15.000005722045898
    4. '_points' → logprob: -16.3750057220459
    5. ',x' → logprob: -16.3750057220459
    6. '_' → logprob: -17.2500057220459
    7. '```' → logprob: -17.5000057220459
    8. '_,' → logprob: -17.6250057220459
    9. 'points' → logprob: -17.6250057220459
    10. ',_' → logprob: -18.0000057220459

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011400962248444557
    2. ' ,' → logprob: -6.876140117645264
    3. ',y' → logprob: -9.626139640808105
    4. ',
' → logprob: -11.001139640808105
    5. ',)' → logprob: -12.001139640808105
    6. ',

' → logprob: -12.376139640808105
    7. ',None' → logprob: -12.751139640808105
    8. ',n' → logprob: -13.251139640808105
    9. ',float' → logprob: -13.376139640808105
    10. ',p' → logprob: -13.876139640808105

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05003710463643074
    2. 'y' → logprob: -3.550037145614624
    3. '2' → logprob: -4.925036907196045
    4. ' y' → logprob: -5.425036907196045
    5. ' ' → logprob: -5.425036907196045
    6. '4' → logprob: -7.550036907196045
    7. '[' → logprob: -7.550036907196045
    8. 'any' → logprob: -7.550036907196045
    9. 'i' → logprob: -7.675036907196045
    10. '1' → logprob: -7.800036907196045

Token 274: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20205414295196533
    2. '))' → logprob: -1.7020541429519653
    3. ' ))' → logprob: -7.952054023742676
    4. '0' → logprob: -8.827054023742676
    5. '))
' → logprob: -9.452054023742676
    6. ')' → logprob: -10.077054023742676
    7. ' ' → logprob: -11.827054023742676
    8. ')))' → logprob: -11.952054023742676
    9. '))

' → logprob: -13.452054023742676
    10. ' ))
' → logprob: -13.827054023742676

Token 275: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030721822986379266
    2. '5' → logprob: -8.250307083129883
    3. '))' → logprob: -10.750307083129883
    4. '000' → logprob: -12.000307083129883
    5. '))
' → logprob: -12.500307083129883
    6. '4' → logprob: -12.750307083129883
    7. ')' → logprob: -12.875307083129883
    8. '1' → logprob: -13.250307083129883
    9. ')))' → logprob: -13.250307083129883
    10. '999' → logprob: -13.375307083129883

Token 276: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008649671450257301
    2. ')' → logprob: -4.758649826049805
    3. ' ))' → logprob: -11.008649826049805
    4. '))
' → logprob: -11.133649826049805
    5. ')))' → logprob: -13.133649826049805
    6. ' )' → logprob: -14.133649826049805
    7. ')
' → logprob: -14.383649826049805
    8. '),' → logprob: -15.133649826049805
    9. ' ' → logprob: -16.383649826049805
    10. '))

' → logprob: -16.383649826049805

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03617086261510849
    2. '
' → logprob: -3.9111709594726562
    3. '    
' → logprob: -4.911170959472656
    4. 'neighbors' → logprob: -6.411170959472656
    5. 'edges' → logprob: -6.536170959472656
    6. 'dist' → logprob: -6.786170959472656
    7. ',' → logprob: -7.411170959472656
    8. 'nodes' → logprob: -7.536170959472656
    9. ' edges' → logprob: -7.786170959472656
    10. ' distances' → logprob: -7.911170959472656

Token 278: ' nodes' (ID: 15749)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9454426765441895
    2. 'graph' → logprob: -1.1954426765441895
    3. 'nodes' (adapté à ' nodes') → logprob: -2.0704426765441895
    4. '   ' → logprob: -2.4454426765441895
    5. 'edges' → logprob: -3.0704426765441895
    6. '
' → logprob: -3.6954426765441895
    7. 'distance' → logprob: -5.4454426765441895
    8. 'visited' → logprob: -5.4454426765441895
    9. 'import' → logprob: -5.8204426765441895
    10. 'n' → logprob: -6.4454426765441895

Token 279: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1324681043624878
    2. '.extend' → logprob: -1.3824681043624878
    3. '.pop' → logprob: -1.7574681043624878
    4. '=' → logprob: -2.7574682235717773
    5. '.remove' → logprob: -2.8824682235717773
    6. ',' → logprob: -3.0074682235717773
    7. ' =' → logprob: -3.2574682235717773
    8. ')' → logprob: -4.507468223571777
    9. '.sort' → logprob: -4.757468223571777
    10. '<|end|>' → logprob: -4.757468223571777

Token 280: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.570319702499546e-05
    2. ' ((' → logprob: -11.375025749206543
    3. '(' → logprob: -11.625025749206543
    4. ' ' → logprob: -12.875025749206543
    5. '(((' → logprob: -13.500025749206543
    6. '>((' → logprob: -14.750025749206543
    7. '(end' → logprob: -15.375025749206543
    8. '(
' → logprob: -16.250024795532227
    9. '```' → logprob: -16.250024795532227
    10. '   ' → logprob: -16.375024795532227

Token 281: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0004933410091325641
    2. ' end' → logprob: -8.125493049621582
    3. '4' → logprob: -8.625493049621582
    4. '(end' → logprob: -11.000493049621582
    5. '[end' → logprob: -15.125493049621582
    6. ',end' → logprob: -15.375493049621582
    7. ' ' → logprob: -15.500493049621582
    8. '   ' → logprob: -15.750493049621582
    9. '=end' → logprob: -16.2504940032959
    10. '	end' → logprob: -17.2504940032959

Token 282: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -14.750000953674316
    3. '_' → logprob: -16.875
    4. ',' → logprob: -17.375
    5. ' _' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. ')_' → logprob: -18.375
    8. ')' → logprob: -18.375
    9. '   ' → logprob: -19.5
    10. '._' → logprob: -19.75

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012070851516909897
    2. ',
' → logprob: -9.875121116638184
    3. ' ,' → logprob: -10.625121116638184
    4. ',y' → logprob: -10.875121116638184
    5. '4' → logprob: -11.250121116638184
    6. ',

' → logprob: -12.625121116638184
    7. ',float' → logprob: -12.750121116638184
    8. '```' → logprob: -14.250121116638184
    9. '`,' → logprob: -14.625121116638184
    10. ',end' → logprob: -14.875121116638184

Token 284: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.184812031686306e-05
    2. ' ' → logprob: -9.500082015991211
    3. '1' → logprob: -12.625082015991211
    4. '0' → logprob: -12.875082015991211
    5. '2' → logprob: -15.000082015991211
    6. '   ' → logprob: -15.125082015991211
    7. '3' → logprob: -16.62508201599121
    8. 'y' → logprob: -16.87508201599121
    9. 'float' → logprob: -16.93758201599121
    10. '' → logprob: -17.37508201599121

Token 285: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -13.625001907348633
    3. '0' → logprob: -14.875001907348633
    4. '))' → logprob: -17.375001907348633
    5. ',' → logprob: -17.750001907348633
    6. ' .' → logprob: -19.000001907348633
    7. ')}' → logprob: -19.500001907348633
    8. '.
' → logprob: -19.625001907348633
    9. '4' → logprob: -19.750001907348633
    10. '.

' → logprob: -20.125001907348633

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ')' → logprob: -12.375004768371582
    3. '))' → logprob: -15.125004768371582
    4. ' ' → logprob: -16.2500057220459
    5. ')]' → logprob: -16.7500057220459
    6. ')))' → logprob: -17.5000057220459
    7. '```' → logprob: -17.6875057220459
    8. ')])' → logprob: -17.9375057220459
    9. '])' → logprob: -18.5000057220459
    10. '.' → logprob: -18.7500057220459

Token 287: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001818489981815219
    2. '))' → logprob: -8.625182151794434
    3. ')
' → logprob: -13.375182151794434
    4. ' )' → logprob: -15.625182151794434
    5. ')))' → logprob: -15.875182151794434
    6. ')]' → logprob: -16.125181198120117
    7. ')}' → logprob: -16.375181198120117
    8. '   ' → logprob: -17.250181198120117
    9. '),' → logprob: -17.625181198120117
    10. ')`' → logprob: -17.875181198120117

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48909780383110046
    2. 'graph' → logprob: -1.8640978336334229
    3. '
' → logprob: -1.9890978336334229
    4. 'dist' → logprob: -3.489097833633423
    5. '    
' → logprob: -4.114097595214844
    6. ' graph' → logprob: -4.364097595214844
    7. 'edges' → logprob: -4.614097595214844
    8. ',' → logprob: -5.614097595214844
    9. 'neighbors' → logprob: -5.989097595214844
    10. 'distance' → logprob: -6.114097595214844

Token 289: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09886205196380615
    2. 'n' → logprob: -2.7238621711730957
    3. 'edges' → logprob: -4.348862171173096
    4. 'dist' → logprob: -4.723862171173096
    5. 'adj' → logprob: -5.723862171173096
    6. 'g' → logprob: -6.473862171173096
    7. 'index' → logprob: -8.098861694335938
    8. ' graph' → logprob: -8.223861694335938
    9. '   ' → logprob: -8.223861694335938
    10. 'N' → logprob: -8.223861694335938

Token 290: ' filter' (ID: 6690)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0953979417681694
    2. 'dist' → logprob: -2.72039794921875
    3. 'edges' → logprob: -4.59539794921875
    4. 'adj' → logprob: -5.09539794921875
    5. 'g' → logprob: -6.09539794921875
    6. ' graph' → logprob: -6.59539794921875
    7. 'visited' → logprob: -6.72039794921875
    8. 'n' → logprob: -6.84539794921875
    9. '#' → logprob: -6.84539794921875
    10. 'def' → logprob: -7.47039794921875

Token 291: ' end' (ID: 1268)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.63518226146698
    2. 'nodes' → logprob: -1.38518226146698
    3. '_nodes' → logprob: -2.7601823806762695
    4. 'def' → logprob: -3.1351823806762695
    5. ' safe' → logprob: -4.2601823806762695
    6. ' valid' → logprob: -4.3851823806762695
    7. 'safe' → logprob: -4.3851823806762695
    8. 'filtered' → logprob: -4.6351823806762695
    9. 'ed' → logprob: -5.0101823806762695
    10. '   ' → logprob: -5.0101823806762695

Token 292: ' points' (ID: 5571)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.1874329149723053
    2. '_points' → logprob: -1.812432885169983
    3. 'points' → logprob: -5.062432765960693
    4. '_' → logprob: -7.937432765960693
    5. 'nodes' → logprob: -8.187433242797852
    6. 's' → logprob: -8.187433242797852
    7. '_candidates' → logprob: -9.187433242797852
    8. '_indices' → logprob: -9.437433242797852
    9. '_tokens' → logprob: -9.562433242797852
    10. ' points' → logprob: -10.562433242797852

Token 293: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05743175745010376
    2. ' =' → logprob: -3.057431697845459
    3. 'nodes' → logprob: -5.432431697845459
    4. '_nodes' → logprob: -6.557431697845459
    5. 'filtered' → logprob: -7.182431697845459
    6. 'valid' → logprob: -8.432432174682617
    7. ',' → logprob: -8.557432174682617
    8. '=[]' → logprob: -8.682432174682617
    9. '=end' → logprob: -8.807432174682617
    10. 'new' → logprob: -8.932432174682617

Token 294: ' safe' (ID: 7703)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.44013676047325134
    2. ' not' → logprob: -1.6901367902755737
    3. 'can' → logprob: -2.065136671066284
    4. 'any' → logprob: -3.690136671066284
    5. ' can' → logprob: -4.440136909484863
    6. ' any' → logprob: -5.315136909484863
    7. 'all' → logprob: -6.565136909484863
    8. 'inside' → logprob: -7.940136909484863
    9. 'len' → logprob: -8.065136909484863
    10. ' all' → logprob: -8.440136909484863

Token 295: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8102940320968628
    2. 'if' → logprob: -1.9352940320968628
    3. '_points' → logprob: -2.0602941513061523
    4. '=' → logprob: -2.4352941513061523
    5. '_nodes' → logprob: -2.5602941513061523
    6. '_end' → logprob: -2.8102941513061523
    7. '_start' → logprob: -3.6852941513061523
    8. ' if' → logprob: -4.685294151306152
    9. '_' → logprob: -5.435294151306152
    10. 'points' → logprob: -5.810294151306152

Token 296: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9248712062835693
    2. '
' → logprob: -1.9248712062835693
    3. ' if' → logprob: -2.0498712062835693
    4. '   ' → logprob: -2.1748712062835693
    5. 'safe' → logprob: -2.1748712062835693
    6. ' safe' → logprob: -3.0498712062835693
    7. 'end' → logprob: -3.6748712062835693
    8. ' for' → logprob: -5.049871444702148
    9. 'for' → logprob: -5.049871444702148
    10. 'nodes' → logprob: -5.674871444702148

Token 297: ' end' (ID: 1268)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4496670663356781
    2. 'end' (adapté à ' end') → logprob: -1.5746670961380005
    3. ' if' → logprob: -2.449666976928711
    4. 'nodes' → logprob: -3.699666976928711
    5. 'for' → logprob: -4.324666976928711
    6. ' end' → logprob: -4.824666976928711
    7. 'safe' → logprob: -5.199666976928711
    8. ' for' → logprob: -5.449666976928711
    9. ' nodes' → logprob: -5.574666976928711
    10. '   ' → logprob: -5.824666976928711

Token 298: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0007841374608688056
    2. '_pts' → logprob: -8.250783920288086
    3. '_safe' → logprob: -8.750783920288086
    4. 'points' → logprob: -8.750783920288086
    5. '_nodes' → logprob: -9.500783920288086
    6. '_indices' → logprob: -9.625783920288086
    7. '_' → logprob: -10.875783920288086
    8. '_candidates' → logprob: -11.500783920288086
    9. 'safe' → logprob: -11.625783920288086
    10. '1' → logprob: -12.625783920288086

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196003913879395
    2. ' =' → logprob: -1.501960039138794
    3. '=[]' → logprob: -10.501959800720215
    4. '=[' → logprob: -13.001959800720215
    5. ' =[' → logprob: -13.876959800720215
    6. '=[]
' → logprob: -17.50196075439453
    7. ' ' → logprob: -17.50196075439453
    8. '＝' → logprob: -17.50196075439453
    9. '[:]' → logprob: -17.50196075439453
    10. '_' → logprob: -18.00196075439453

Token 300: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.06017136946320534
    2. '[]
' → logprob: -3.185171365737915
    3. '[]' → logprob: -4.560171604156494
    4. '[' → logprob: -6.310171604156494
    5. ' [' → logprob: -6.435171604156494
    6. ' [(' → logprob: -6.435171604156494
    7. '[((' → logprob: -7.310171604156494
    8. '[]

' → logprob: -8.185171127319336
    9. '[x' → logprob: -9.060171127319336
    10. '[i' → logprob: -9.685171127319336

Token 301: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0649261325597763
    2. ' for' → logprob: -2.8149261474609375
    3. '   ' → logprob: -6.4399261474609375
    4. 'if' → logprob: -6.6899261474609375
    5. ' if' → logprob: -9.939926147460938
    6. '
' → logprob: -10.189926147460938
    7. '<|end|>' → logprob: -11.314926147460938
    8. '	for' → logprob: -11.939926147460938
    9. '[' → logprob: -12.939926147460938
    10. '    
' → logprob: -13.189926147460938

Token 302: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011058318428695202
    2. 'if' → logprob: -4.511058330535889
    3. ' for' → logprob: -11.51105785369873
    4. '
' → logprob: -14.63605785369873
    5. ' if' → logprob: -16.386058807373047
    6. '   ' → logprob: -18.511058807373047
    7. '```' → logprob: -19.011058807373047
    8. '	for' → logprob: -19.886058807373047
    9. '    
' → logprob: -21.011058807373047
    10. 'from' → logprob: -21.386058807373047

Token 303: ' y' (ID: 342)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3568371832370758
    2. 'pt' → logprob: -1.6068371534347534
    3. 'x' → logprob: -2.481837272644043
    4. ' p' → logprob: -5.356837272644043
    5. 'point' → logprob: -5.731837272644043
    6. ' pt' → logprob: -5.731837272644043
    7. 'node' → logprob: -6.356837272644043
    8. 'ep' → logprob: -7.231837272644043
    9. 'y' → logprob: -7.356837272644043
    10. ' x' → logprob: -7.481837272644043

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20151419937610626
    2. 'in' → logprob: -1.7015142440795898
    3. ' ' → logprob: -9.32651424407959
    4. ',' → logprob: -12.32651424407959
    5. ')' → logprob: -12.95151424407959
    6. 'n' → logprob: -13.70151424407959
    7. 'y' → logprob: -13.95151424407959
    8. ' ' → logprob: -14.32651424407959
    9. '	in' → logprob: -15.07651424407959
    10. ' y' → logprob: -15.32651424407959

Token 305: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019649125169962645
    2. ' [' → logprob: -6.376965045928955
    3. '[i' → logprob: -8.376964569091797
    4. 'range' → logprob: -10.751964569091797
    5. ' ' → logprob: -13.001964569091797
    6. '(' → logprob: -13.001964569091797
    7. ' range' → logprob: -13.501964569091797
    8. '0' → logprob: -13.751964569091797
    9. '[start' → logprob: -14.001964569091797
    10. '   ' → logprob: -14.126964569091797

Token 306: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02658555656671524
    2. '0' → logprob: -3.651585578918457
    3. ' i' → logprob: -8.651585578918457
    4. 'j' → logprob: -10.151585578918457
    5. '(i' → logprob: -11.026585578918457
    6. '4' → logprob: -11.276585578918457
    7. 'end' → logprob: -11.651585578918457
    8. 'round' → logprob: -11.651585578918457
    9. 'float' → logprob: -12.026585578918457
    10. '   ' → logprob: -12.151585578918457

Token 307: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -5.991464786347933e-05
    2. ' *' → logprob: -9.875060081481934
    3. 'for' → logprob: -12.500060081481934
    4. ' for' → logprob: -13.000060081481934
    5. '0' → logprob: -13.250060081481934
    6. '*(' → logprob: -16.000059127807617
    7. '*
' → logprob: -16.000059127807617
    8. '
' → logprob: -16.375059127807617
    9. ' ' → logprob: -16.500059127807617
    10. '**' → logprob: -17.125059127807617

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.7530574849806726e-05
    2. ' ' → logprob: -10.000057220458984
    3. '1' → logprob: -12.312557220458984
    4. 'import' → logprob: -13.375057220458984
    5. 'for' → logprob: -14.375057220458984
    6. 'from' → logprob: -14.500057220458984
    7. '.' → logprob: -14.625057220458984
    8. '
' → logprob: -14.750057220458984
    9. '[' → logprob: -15.125057220458984
    10. '...' → logprob: -15.312557220458984

Token 309: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04309510439634323
    2. '0' → logprob: -3.168095111846924
    3. 'for' → logprob: -9.793094635009766
    4. ' .' → logprob: -10.793094635009766
    5. ' ' → logprob: -12.418094635009766
    6. '5' → logprob: -12.668094635009766
    7. '(' → logprob: -13.043094635009766
    8. ' for' → logprob: -13.418094635009766
    9. '1' → logprob: -13.543094635009766
    10. '4' → logprob: -13.668094635009766

Token 310: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.465036105713807e-06
    2. '0' → logprob: -12.375007629394531
    3. '25' → logprob: -14.125007629394531
    4. '```' → logprob: -14.375007629394531
    5. '4' → logprob: -15.250007629394531
    6. '   ' → logprob: -15.750007629394531
    7. '50' → logprob: -15.812507629394531
    8. 'import' → logprob: -15.937507629394531
    9. ' ' → logprob: -16.25000762939453
    10. 'for' → logprob: -16.50000762939453

Token 311: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47407954931259155
    2. 'for' → logprob: -0.9740795493125916
    3. ' ' → logprob: -14.224079132080078
    4. 'range' → logprob: -14.724079132080078
    5. '	for' → logprob: -14.724079132080078
    6. ' in' → logprob: -14.849079132080078
    7. '   ' → logprob: -15.224079132080078
    8. 'in' → logprob: -15.974079132080078
    9. '```' → logprob: -16.349079132080078
    10. '
' → logprob: -16.599079132080078

Token 312: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012171403504908085
    2. ' i' → logprob: -7.251217365264893
    3. 'range' → logprob: -7.626217365264893
    4. ' range' → logprob: -11.251216888427734
    5. 'in' → logprob: -12.251216888427734
    6. ' in' → logprob: -14.876216888427734
    7. ' ' → logprob: -15.251216888427734
    8. 'y' → logprob: -15.251216888427734
    9. '	i' → logprob: -15.626216888427734
    10. '
' → logprob: -16.126216888427734

Token 313: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38176897168159485
    2. ' in' → logprob: -1.6317689418792725
    3. 'range' → logprob: -2.1317689418792725
    4. ' range' → logprob: -5.881769180297852
    5. '(' → logprob: -8.256769180297852
    6. '(range' → logprob: -9.381769180297852
    7. 'ange' → logprob: -14.006769180297852
    8. ' ' → logprob: -14.006769180297852
    9. 'for' → logprob: -15.131769180297852
    10. ')' → logprob: -15.631769180297852

Token 314: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.6087021473795176e-05
    2. ' range' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '
' → logprob: -16.000045776367188
    5. ' ' → logprob: -16.375045776367188
    6. '(range' → logprob: -16.500045776367188
    7. '[' → logprob: -16.875045776367188
    8. '  ' → logprob: -17.875045776367188
    9. '(' → logprob: -18.500045776367188
    10. 'list' → logprob: -18.500045776367188

Token 315: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22552944719791412
    2. '9' → logprob: -1.600529432296753
    3. '1' → logprob: -9.225529670715332
    4. ' (' → logprob: -11.225529670715332
    5. '((' → logprob: -13.850529670715332
    6. '8' → logprob: -14.350529670715332
    7. '5' → logprob: -14.600529670715332
    8. '(
' → logprob: -14.600529670715332
    9. '0' → logprob: -14.975529670715332
    10. '(-' → logprob: -14.975529670715332

Token 316: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.5822400857578032e-05
    2. '1' → logprob: -10.625025749206543
    3. '(' → logprob: -14.500025749206543
    4. ' ' → logprob: -14.750025749206543
    5. '5' → logprob: -15.250025749206543
    6. '0' → logprob: -15.625025749206543
    7. '```' → logprob: -17.06252670288086
    8. '8' → logprob: -17.25002670288086
    9. '7' → logprob: -17.68752670288086
    10. '   ' → logprob: -18.00002670288086

Token 317: ')]' (ID: 15710)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4747563302516937
    2. ']:
' → logprob: -0.9747563600540161
    3. ']' → logprob: -7.974756240844727
    4. ']:
' → logprob: -8.849756240844727
    5. ' if' → logprob: -9.849756240844727
    6. ']:

' → logprob: -9.849756240844727
    7. ' ]' → logprob: -10.099756240844727
    8. '):
' → logprob: -11.099756240844727
    9. 'if' → logprob: -11.599756240844727
    10. '   ' → logprob: -11.724756240844727

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024525273591279984
    2. ':
' → logprob: -3.8995251655578613
    3. '       ' → logprob: -6.149525165557861
    4. '   ' → logprob: -6.524525165557861
    5. ',' → logprob: -8.14952564239502
    6. ' :' → logprob: -10.64952564239502
    7. ' :
' → logprob: -11.77452564239502
    8. '):
' → logprob: -11.89952564239502
    9. '	   ' → logprob: -12.14952564239502
    10. '):' → logprob: -12.14952564239502

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010740641504526138
    2. '   ' → logprob: -4.885740756988525
    3. ' if' → logprob: -7.010740756988525
    4. '<|end|>' → logprob: -7.135740756988525
    5. '
' → logprob: -7.885740756988525
    6. ' ' → logprob: -8.135740280151367
    7. '    ' → logprob: -8.760740280151367
    8. '        
' → logprob: -9.010740280151367
    9. '     ' → logprob: -9.010740280151367
    10. ',' → logprob: -9.510740280151367

Token 320: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10243292897939682
    2. 'p' (adapté à ' p') → logprob: -2.3524329662323
    3. '   ' → logprob: -7.352432727813721
    4. ' if' → logprob: -7.602432727813721
    5. ' pt' → logprob: -7.602432727813721
    6. '       ' → logprob: -8.602433204650879
    7. 'pt' → logprob: -8.727433204650879
    8. ' point' → logprob: -8.727433204650879
    9. 'if' → logprob: -9.852433204650879
    10. 'point' → logprob: -11.602433204650879

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049943044781685
    2. ' =' → logprob: -4.511049747467041
    3. '=(' → logprob: -13.3860502243042
    4. '=
' → logprob: -15.1360502243042
    5. 'p' → logprob: -15.7610502243042
    6. '=end' → logprob: -16.136049270629883
    7. ' =(' → logprob: -17.386049270629883
    8. '=

' → logprob: -18.011049270629883
    9. '_=' → logprob: -18.136049270629883
    10. '(' → logprob: -18.636049270629883

Token 322: ' (' (ID: 350)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.014300551265478134
    2. ' (' → logprob: -4.264300346374512
    3. '(' → logprob: -9.014300346374512
    4. '   ' → logprob: -11.639300346374512
    5. '[end' → logprob: -13.014300346374512
    6. '=end' → logprob: -13.889300346374512
    7. ' ' → logprob: -14.139300346374512
    8. '  ' → logprob: -14.889300346374512
    9. '(start' → logprob: -14.889300346374512
    10. '(exit' → logprob: -15.014300346374512

Token 323: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.028667058795690536
    2. '4' → logprob: -4.153666973114014
    3. '(end' → logprob: -4.403666973114014
    4. ' end' → logprob: -8.528667449951172
    5. '(' → logprob: -9.153667449951172
    6. ' ' → logprob: -12.153667449951172
    7. '=end' → logprob: -12.653667449951172
    8. '   ' → logprob: -12.903667449951172
    9. '[end' → logprob: -12.903667449951172
    10. ' (' → logprob: -13.028667449951172

Token 324: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00023131117632146925
    2. 'x' → logprob: -8.375231742858887
    3. '4' → logprob: -15.250231742858887
    4. ',' → logprob: -15.750231742858887
    5. '_' → logprob: -16.62523078918457
    6. ',x' → logprob: -17.00023078918457
    7. ')' → logprob: -17.25023078918457
    8. '_points' → logprob: -17.37523078918457
    9. '   ' → logprob: -17.62523078918457
    10. '```' → logprob: -17.62523078918457

Token 325: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.030019022524356842
    2. ',' → logprob: -3.5300190448760986
    3. ' ,' → logprob: -8.65501880645752
    4. ',p' → logprob: -9.28001880645752
    5. ',
' → logprob: -14.15501880645752
    6. ',Y' → logprob: -16.780019760131836
    7. ',z' → logprob: -17.280019760131836
    8. 'p' → logprob: -17.280019760131836
    9. ',t' → logprob: -17.780019760131836
    10. ',x' → logprob: -17.780019760131836

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31330761313438416
    2. ')
' → logprob: -1.3133076429367065
    3. ')
' → logprob: -10.688307762145996
    4. ' )
' → logprob: -11.688307762145996
    5. ' )' → logprob: -11.688307762145996
    6. ')

' → logprob: -12.313307762145996
    7. ',' → logprob: -14.313307762145996
    8. '   ' → logprob: -14.563307762145996
    9. '       ' → logprob: -15.438307762145996
    10. ',)' → logprob: -16.43830680847168

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003474270924925804
    2. '<|end|>' → logprob: -6.378474235534668
    3. '        
' → logprob: -7.753474235534668
    4. '   ' → logprob: -7.753474235534668
    5. ',' → logprob: -8.003474235534668
    6. '
' → logprob: -8.378474235534668
    7. '<|end|>' → logprob: -8.878474235534668
    8. ' if' → logprob: -9.378474235534668
    9. '  
' → logprob: -10.628474235534668
    10. ' ' → logprob: -10.753474235534668

Token 328: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07696257531642914
    2. '       ' → logprob: -3.076962471008301
    3. ' if' → logprob: -3.576962471008301
    4. '   ' → logprob: -11.4519624710083
    5. '	if' → logprob: -12.4519624710083
    6. ' ' → logprob: -14.2019624710083
    7. '    ' → logprob: -16.076963424682617
    8. '        
' → logprob: -16.451963424682617
    9. '      ' → logprob: -16.451963424682617
    10. '           ' → logprob: -16.576963424682617

Token 329: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.008615161292254925
    2. ' can' → logprob: -4.758615016937256
    3. '	can' → logprob: -15.008615493774414
    4. '   ' → logprob: -15.383615493774414
    5. '(can' → logprob: -16.383615493774414
    6. ' not' → logprob: -16.883615493774414
    7. ' ' → logprob: -17.133615493774414
    8. 'not' → logprob: -17.133615493774414
    9. '.can' → logprob: -17.633615493774414
    10. '  ' → logprob: -18.633615493774414

Token 330: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -4.320199877838604e-07
    2. '_can' → logprob: -15.375
    3. ' _' → logprob: -16.75
    4. 'be' → logprob: -17.75
    5. '_b' → logprob: -18.375
    6. '_' → logprob: -18.625
    7. '_have' → logprob: -18.75
    8. '_BE' → logprob: -19.0
    9. ' be' → logprob: -19.75
    10. '\' → logprob: -20.125

Token 331: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -0.5761546492576599
    2. 'safe' → logprob: -0.8261546492576599
    3. ' safe' → logprob: -8.576154708862305
    4. 'Safe' → logprob: -11.701154708862305
    5. '(p' → logprob: -11.951154708862305
    6. 'afe' → logprob: -12.576154708862305
    7. 'p' → logprob: -13.076154708862305
    8. '_SAFE' → logprob: -13.451154708862305
    9. 'can' → logprob: -13.951154708862305
    10. 'save' → logprob: -14.201154708862305

Token 332: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.23917081207037e-05
    2. ' (' → logprob: -10.375041961669922
    3. '(' → logprob: -11.500041961669922
    4. ')' → logprob: -14.250041961669922
    5. ',' → logprob: -15.750041961669922
    6. '(
' → logprob: -15.875041961669922
    7. ')(' → logprob: -17.125041961669922
    8. '((' → logprob: -17.375041961669922
    9. ' )' → logprob: -18.500041961669922
    10. '
' → logprob: -18.500041961669922

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007311395602300763
    2. ' ,' → logprob: -7.250730991363525
    3. ',
' → logprob: -11.000731468200684
    4. ')' → logprob: -13.625731468200684
    5. ',p' → logprob: -14.250731468200684
    6. ',m' → logprob: -14.250731468200684
    7. '(mon' → logprob: -14.375731468200684
    8. '       ' → logprob: -14.750731468200684
    9. '),' → logprob: -14.875731468200684
    10. '   ' → logprob: -16.000730514526367

Token 334: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.00024239711638074368
    2. ' monsters' → logprob: -8.375242233276367
    3. 'monster' → logprob: -12.375242233276367
    4. 'mons' → logprob: -12.375242233276367
    5. ')' → logprob: -14.000242233276367
    6. '(mon' → logprob: -14.000242233276367
    7. ' mon' → logprob: -15.000242233276367
    8. '   ' → logprob: -15.000242233276367
    9. 'mo' → logprob: -15.500242233276367
    10. '.mon' → logprob: -16.250242233276367

Token 335: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16046357154846191
    2. '):
' → logprob: -1.910463571548462
    3. ')' → logprob: -9.160463333129883
    4. '       ' → logprob: -9.285463333129883
    5. '   ' → logprob: -10.910463333129883
    6. ':' → logprob: -11.160463333129883
    7. '):
' → logprob: -12.035463333129883
    8. '):

' → logprob: -13.910463333129883
    9. ' ):' → logprob: -14.160463333129883
    10. '           ' → logprob: -14.785463333129883

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012110683601349592
    2. ' end' → logprob: -7.126211166381836
    3. 'end' → logprob: -8.001211166381836
    4. ',end' → logprob: -10.626211166381836
    5. '
' → logprob: -11.501211166381836
    6. '       ' → logprob: -11.751211166381836
    7. '[end' → logprob: -12.251211166381836
    8. '          ' → logprob: -12.501211166381836
    9. ',' → logprob: -12.626211166381836
    10. '(end' → logprob: -12.751211166381836

Token 337: ' nodes' (ID: 15749)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.048607006669044495
    2. ' end' → logprob: -3.048607110977173
    3. '           ' → logprob: -11.173606872558594
    4. '               ' → logprob: -13.048606872558594
    5. '   ' → logprob: -14.048606872558594
    6. '[end' → logprob: -14.048606872558594
    7. '(end' → logprob: -14.423606872558594
    8. '       ' → logprob: -14.548606872558594
    9. '	end' → logprob: -15.173606872558594
    10. ',end' → logprob: -15.548606872558594

Token 338: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011099820025265217
    2. '.' → logprob: -4.511099815368652
    3. ' .' → logprob: -10.261099815368652
    4. '.app' → logprob: -11.386099815368652
    5. '.ap' → logprob: -13.261099815368652
    6. ').' → logprob: -13.636099815368652
    7. '.extend' → logprob: -13.886099815368652
    8. 'append' → logprob: -14.636099815368652
    9. '.insert' → logprob: -15.386099815368652
    10. '].' → logprob: -15.511099815368652

Token 339: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.4259644558478612e-05
    2. '(' → logprob: -11.750014305114746
    3. '((' → logprob: -12.000014305114746
    4. ' (' → logprob: -16.62501335144043
    5. '(
' → logprob: -18.12501335144043
    6. 'p' → logprob: -18.12501335144043
    7. '(tuple' → logprob: -20.62501335144043
    8. '```' → logprob: -21.25001335144043
    9. ')' → logprob: -21.37501335144043
    10. '(P' → logprob: -21.50001335144043

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006152204005047679
    2. '<|end|>' → logprob: -7.625615119934082
    3. ')
' → logprob: -9.250615119934082
    4. '<|end|>' → logprob: -11.500615119934082
    5. ')return' → logprob: -12.375615119934082
    6. '           ' → logprob: -12.500615119934082
    7. ' )' → logprob: -12.625615119934082
    8. '       ' → logprob: -13.125615119934082
    9. '
' → logprob: -13.750615119934082
    10. ')n' → logprob: -13.750615119934082

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015478266403079033
    2. '
' → logprob: -4.390478134155273
    3. '<|end|>' → logprob: -6.265478134155273
    4. '       ' → logprob: -7.640478134155273
    5. '   ' → logprob: -8.265478134155273
    6. '<|end|>' → logprob: -8.640478134155273
    7. ',' → logprob: -10.765478134155273
    8. '          ' → logprob: -10.890478134155273
    9. ',end' → logprob: -11.265478134155273
    10. '            
' → logprob: -11.390478134155273

Token 342: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.026749571785330772
    2. ' end' → logprob: -3.651749610900879
    3. '           ' → logprob: -7.901749610900879
    4. '   ' → logprob: -10.276749610900879
    5. '       ' → logprob: -10.401749610900879
    6. '(end' → logprob: -12.026749610900879
    7. '[end' → logprob: -13.151749610900879
    8. '
' → logprob: -13.651749610900879
    9. '=end' → logprob: -13.651749610900879
    10. '	end' → logprob: -14.526749610900879

Token 343: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.4021237802808173e-05
    2. 'points' → logprob: -11.500014305114746
    3. '_' → logprob: -13.625014305114746
    4. 'Points' → logprob: -14.375014305114746
    5. '_POINTS' → logprob: -14.375014305114746
    6. '_tokens' → logprob: -14.750014305114746
    7. ' points' → logprob: -15.000014305114746
    8. '<|end|>' → logprob: -15.125014305114746
    9. '_point' → logprob: -15.625014305114746
    10. '_p' → logprob: -16.12501335144043

Token 344: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12699803709983826
    2. '.' → logprob: -2.126997947692871
    3. ' .' → logprob: -11.001997947692871
    4. '.app' → logprob: -11.126997947692871
    5. '.extend' → logprob: -11.376997947692871
    6. '.ap' → logprob: -11.626997947692871
    7. '.add' → logprob: -11.876997947692871
    8. '.push' → logprob: -11.876997947692871
    9. '.setdefault' → logprob: -14.251997947692871
    10. '+=' → logprob: -14.751997947692871

Token 345: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.500011444091797
    3. ' (' → logprob: -14.250011444091797
    4. 'p' → logprob: -14.500011444091797
    5. '((' → logprob: -15.500011444091797
    6. '(
' → logprob: -17.250011444091797
    7. ' p' → logprob: -17.750011444091797
    8. '   ' → logprob: -20.000011444091797
    9. ' ' → logprob: -21.250011444091797
    10. '(P' → logprob: -21.375011444091797

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.656383680412546e-05
    2. ' )' → logprob: -11.375046730041504
    3. ')
' → logprob: -11.375046730041504
    4. '<|end|>' → logprob: -11.500046730041504
    5. '   ' → logprob: -11.625046730041504
    6. '       ' → logprob: -13.000046730041504
    7. ')return' → logprob: -14.375046730041504
    8. '
' → logprob: -14.750046730041504
    9. '<|end|>' → logprob: -15.750046730041504
    10. ' ' → logprob: -16.125045776367188

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44550997018814087
    2. '
' → logprob: -1.695509910583496
    3. '<|end|>' → logprob: -1.945509910583496
    4. '    
' → logprob: -3.820509910583496
    5. '<|end|>' → logprob: -5.820509910583496
    6. ' 
' → logprob: -6.070509910583496
    7. ')' → logprob: -6.570509910583496
    8. ',' → logprob: -6.820509910583496
    9. ' for' → logprob: -7.195509910583496
    10. '  
' → logprob: -7.820509910583496

Token 348: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2942524254322052
    2. '   ' → logprob: -1.7942523956298828
    3. '    
' → logprob: -3.419252395629883
    4. 'graph' → logprob: -4.294252395629883
    5. 'edges' → logprob: -4.919252395629883
    6. ' edges' → logprob: -5.044252395629883
    7. ' graph' → logprob: -5.044252395629883
    8. 'dist' → logprob: -5.544252395629883
    9. ' distances' → logprob: -5.919252395629883
    10. '  
' → logprob: -5.919252395629883

Token 349: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0437314473092556
    2. 'not' → logprob: -3.168731451034546
    3. ' len' → logprob: -7.668731212615967
    4. 'len' → logprob: -8.793731689453125
    5. ' end' → logprob: -10.168731689453125
    6. ' no' → logprob: -10.293731689453125
    7. 'end' → logprob: -11.043731689453125
    8. ' ' → logprob: -11.793731689453125
    9. ' can' → logprob: -12.668731689453125
    10. 'no' → logprob: -13.418731689453125

Token 350: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4310896396636963
    2. ' end' → logprob: -1.0560896396636963
    3. 'start' → logprob: -6.306089401245117
    4. ' start' → logprob: -7.806089401245117
    5. '(end' → logprob: -9.056089401245117
    6. 'nodes' → logprob: -11.431089401245117
    7. ' nodes' → logprob: -11.931089401245117
    8. ' can' → logprob: -12.181089401245117
    9. 'can' → logprob: -12.181089401245117
    10. '(' → logprob: -13.181089401245117

Token 351: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -7.465036105713807e-06
    2. 'points' → logprob: -11.875007629394531
    3. '_' → logprob: -14.875007629394531
    4. '_point' → logprob: -17.62500762939453
    5. 'Points' → logprob: -17.75000762939453
    6. '_
' → logprob: -18.00000762939453
    7. '_p' → logprob: -18.25000762939453
    8. '
' → logprob: -18.37500762939453
    9. '_nodes' → logprob: -18.62500762939453
    10. '_POINTS' → logprob: -18.75000762939453

Token 352: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002003580564633012
    2. ':return' → logprob: -6.8770036697387695
    3. ':
' → logprob: -7.1270036697387695
    4. ' :' → logprob: -8.75200366973877
    5. '):' → logprob: -12.50200366973877
    6. 'return' → logprob: -13.75200366973877
    7. ' :
' → logprob: -13.87700366973877
    8. ' return' → logprob: -13.87700366973877
    9. '   ' → logprob: -14.12700366973877
    10. ' or' → logprob: -15.00200366973877

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002024519955739379
    2. ' return' → logprob: -6.2520246505737305
    3. 'return' → logprob: -9.62702465057373
    4. '   ' → logprob: -11.25202465057373
    5. ',' → logprob: -11.62702465057373
    6. ':' → logprob: -13.25202465057373
    7. ':return' → logprob: -13.50202465057373
    8. '           ' → logprob: -13.87702465057373
    9. '
' → logprob: -14.00202465057373
    10. '#' → logprob: -14.25202465057373

Token 354: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2904317378997803
    2. 'return' (adapté à ' return') → logprob: -1.6654317378997803
    3. '       ' → logprob: -3.0404317378997803
    4. '   ' → logprob: -4.415431976318359
    5. ' print' → logprob: -6.165431976318359
    6. 'print' → logprob: -7.165431976318359
    7. '    ' → logprob: -9.16543197631836
    8. '	return' → logprob: -10.79043197631836
    9. '           ' → logprob: -11.79043197631836
    10. '
' → logprob: -11.79043197631836

Token 355: ' '' (ID: 461)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.22930851578712463
    2. 'None' → logprob: -1.6043084859848022
    3. '-' → logprob: -6.854308605194092
    4. ' ' → logprob: -6.979308605194092
    5. 'False' → logprob: -7.604308605194092
    6. ' -' → logprob: -7.854308605194092
    7. ' False' → logprob: -8.354308128356934
    8. ' float' → logprob: -8.854308128356934
    9. ' 
' → logprob: -8.979308128356934
    10. '
' → logprob: -9.104308128356934

Token 356: 'im' (ID: 321)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.151010513305664
    2. 'NO' → logprob: -1.276010513305664
    3. 'IMP' → logprob: -2.151010513305664
    4. 'im' → logprob: -2.151010513305664
    5. '"' → logprob: -2.901010513305664
    6. 'No' → logprob: -3.026010513305664
    7. 'None' → logprob: -3.901010513305664
    8. 'Impossible' → logprob: -4.401010513305664
    9. '"No' → logprob: -4.901010513305664
    10. '0' → logprob: -5.026010513305664

Token 357: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.000122608442325145
    2. 'poss' → logprob: -10.000123023986816
    3. 'pos' → logprob: -10.625123023986816
    4. 'pass' → logprob: -10.750123023986816
    5. ''' → logprob: -11.625123023986816
    6. '_possible' → logprob: -11.625123023986816
    7. 'Possible' → logprob: -11.875123023986816
    8. 'p' → logprob: -12.625123023986816
    9. ' possible' → logprob: -14.125123023986816
    10. '
' → logprob: -14.375123023986816

Token 358: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006724014529027045
    2. ''
' → logprob: -7.750672340393066
    3. '\n' → logprob: -8.375672340393066
    4. ''

' → logprob: -11.750672340393066
    5. '"' → logprob: -13.750672340393066
    6. '   ' → logprob: -13.875672340393066
    7. '')' → logprob: -14.625672340393066
    8. '',' → logprob: -14.875672340393066
    9. ''\' → logprob: -16.250673294067383
    10. ''
' → logprob: -16.375673294067383

Token 359: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2519353926181793
    2. '    
' → logprob: -2.1269354820251465
    3. '<|end|>' → logprob: -3.2519354820251465
    4. '   ' → logprob: -3.5019354820251465
    5. ' 
' → logprob: -4.2519354820251465
    6. '  
' → logprob: -4.5019354820251465
    7. '```' → logprob: -6.7519354820251465
    8. '   
' → logprob: -6.8769354820251465
    9. ' graph' → logprob: -6.8769354820251465
    10. ',' → logprob: -7.1269354820251465

Token 360: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5981789231300354
    2. 'dist' → logprob: -0.9731789231300354
    3. ' graph' → logprob: -3.2231788635253906
    4. ' dist' → logprob: -4.348178863525391
    5. 'queue' → logprob: -5.598178863525391
    6. 'heap' → logprob: -6.098178863525391
    7. '
' → logprob: -6.223178863525391
    8. '   ' → logprob: -6.223178863525391
    9. 'prev' → logprob: -6.598178863525391
    10. 'visited' → logprob: -6.723178863525391

Token 361: ' Build' (ID: 10885)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13595521450042725
    2. 'dist' → logprob: -2.260955333709717
    3. '#' → logprob: -5.260955333709717
    4. 'n' → logprob: -5.385955333709717
    5. ' graph' → logprob: -5.760955333709717
    6. 'adj' → logprob: -5.760955333709717
    7. 'g' → logprob: -6.135955333709717
    8. 'visited' → logprob: -6.260955333709717
    9. 'def' → logprob: -7.010955333709717
    10. 'edges' → logprob: -7.135955333709717

Token 362: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2743464708328247
    2. 'graph' → logprob: -1.5243464708328247
    3. ' edges' → logprob: -4.149346351623535
    4. ' n' → logprob: -5.899346351623535
    5. 'n' → logprob: -6.524346351623535
    6. 'edges' → logprob: -7.024346351623535
    7. 'adj' → logprob: -7.649346351623535
    8. ' adj' → logprob: -8.149346351623535
    9. 'dist' → logprob: -8.274346351623535
    10. ' adjacency' → logprob: -9.024346351623535

Token 363: ' of' (ID: 328)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5651301741600037
    2. 'graph' → logprob: -1.1901302337646484
    3. '   ' → logprob: -2.5651302337646484
    4. '
' → logprob: -3.3151302337646484
    5. ' edges' → logprob: -4.565130233764648
    6. 'edges' → logprob: -6.440130233764648
    7. '	graph' → logprob: -7.190130233764648
    8. '_graph' → logprob: -7.815130233764648
    9. '(graph' → logprob: -8.565130233764648
    10. '    
' → logprob: -8.690130233764648

Token 364: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.30256423354148865
    2. 'edges' → logprob: -1.552564263343811
    3. ' nodes' → logprob: -3.4275641441345215
    4. 'nodes' → logprob: -4.4275641441345215
    5. 'neighbors' → logprob: -6.1775641441345215
    6. ' connections' → logprob: -7.0525641441345215
    7. 'connections' → logprob: -7.1775641441345215
    8. ' neighbors' → logprob: -7.5525641441345215
    9. 'adj' → logprob: -7.9275641441345215
    10. ' adjacency' → logprob: -8.55256462097168

Token 365: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25666481256484985
    2. ' edges' → logprob: -2.131664752960205
    3. 'edges' → logprob: -3.381664752960205
    4. 'graph' → logprob: -3.506664752960205
    5. ' graph' → logprob: -3.631664752960205
    6. '
' → logprob: -4.256664752960205
    7. '    
' → logprob: -7.381664752960205
    8. ',' → logprob: -7.381664752960205
    9. ':' → logprob: -7.631664752960205
    10. ' with' → logprob: -8.881665229797363

Token 366: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.7049576044082642
    2. ' nodes' → logprob: -0.8299576044082642
    3. ' all' → logprob: -3.0799574851989746
    4. 'all' → logprob: -3.8299574851989746
    5. 'safe' → logprob: -6.954957485198975
    6. ' safe' → logprob: -7.329957485198975
    7. ' every' → logprob: -9.204957962036133
    8. 'every' → logprob: -9.329957962036133
    9. '	nodes' → logprob: -9.579957962036133
    10. ' points' → logprob: -9.829957962036133

Token 367: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5005342960357666
    2. '
' → logprob: -1.1255342960357666
    3. 'edges' → logprob: -3.3755342960357666
    4. ' edges' → logprob: -3.7505342960357666
    5. 'graph' → logprob: -5.3755340576171875
    6. ',' → logprob: -6.6255340576171875
    7. ' graph' → logprob: -6.6255340576171875
    8. ':' → logprob: -6.8755340576171875
    9. '    
' → logprob: -7.0005340576171875
    10. 'n' → logprob: -7.7505340576171875

Token 368: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4282204508781433
    2. 'can' → logprob: -1.428220510482788
    3. ' dist' → logprob: -2.803220510482788
    4. ' can' → logprob: -3.178220510482788
    5. 'min' → logprob: -6.553220272064209
    6. 'inside' → logprob: -6.553220272064209
    7. ' inside' → logprob: -7.053220272064209
    8. '   ' → logprob: -7.553220272064209
    9. ' all' → logprob: -7.928220272064209
    10. ' the' → logprob: -8.303220748901367

Token 369: ' path' (ID: 3104)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7480186223983765
    2. 'distance' → logprob: -0.9980186223983765
    3. ' distance' → logprob: -2.498018741607666
    4. ' dist' → logprob: -3.873018741607666
    5. 'can' → logprob: -4.373018741607666
    6. 'min' → logprob: -4.373018741607666
    7. 'def' → logprob: -4.748018741607666
    8. ' min' → logprob: -5.748018741607666
    9. 'max' → logprob: -5.873018741607666
    10. ' can' → logprob: -5.998018741607666

Token 370: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1462039947509766
    2. ' can' → logprob: -1.7712039947509766
    3. 'is' → logprob: -2.2712039947509766
    4. ' between' → logprob: -2.3962039947509766
    5. 'from' → logprob: -2.3962039947509766
    6. 'can' → logprob: -2.7712039947509766
    7. '   ' → logprob: -3.1462039947509766
    8. 'between' → logprob: -3.5212039947509766
    9. 's' → logprob: -4.021203994750977
    10. 'distance' → logprob: -4.396203994750977

Token 371: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.44123560190200806
    2. ' safe' → logprob: -1.3162355422973633
    3. 'clear' → logprob: -2.8162355422973633
    4. ' clear' → logprob: -4.316235542297363
    5. 'valid' → logprob: -5.816235542297363
    6. 'possible' → logprob: -5.941235542297363
    7. 'straight' → logprob: -6.191235542297363
    8. 'not' → logprob: -6.691235542297363
    9. 'direct' → logprob: -6.941235542297363
    10. ' not' → logprob: -6.941235542297363

Token 372: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008507021702826023
    2. '
' → logprob: -5.008507251739502
    3. 'edges' → logprob: -7.008507251739502
    4. ' edges' → logprob: -7.883507251739502
    5. '    
' → logprob: -8.133506774902344
    6. ',' → logprob: -9.133506774902344
    7. 'graph' → logprob: -9.883506774902344
    8. ' graph' → logprob: -10.758506774902344
    9. ':' → logprob: -12.383506774902344
    10. '<|end|>' → logprob: -12.383506774902344

Token 373: ' along' (ID: 4251)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.7473469972610474
    2. 'points' → logprob: -1.9973469972610474
    3. 'def' → logprob: -2.122346878051758
    4. ' points' → logprob: -2.622346878051758
    5. ' ' → logprob: -2.997346878051758
    6. ' around' → logprob: -2.997346878051758
    7. 'around' → logprob: -3.122346878051758
    8. ')' → logprob: -3.247346878051758
    9. 'between' → logprob: -3.247346878051758
    10. ' between' → logprob: -3.497346878051758

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040915198624134064
    2. '.' → logprob: -4.415915012359619
    3. ':' → logprob: -4.665915012359619
    4. '
' → logprob: -4.915915012359619
    5. ',' → logprob: -5.415915012359619
    6. ' edges' → logprob: -6.165915012359619
    7. '<|end|>' → logprob: -6.415915012359619
    8. 'edges' → logprob: -7.165915012359619
    9. 'def' → logprob: -7.540915012359619
    10. ' for' → logprob: -7.790915012359619

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04272601008415222
    2. '
' → logprob: -3.2927260398864746
    3. ' edges' → logprob: -6.292726039886475
    4. ',' → logprob: -6.917726039886475
    5. 'edges' → logprob: -7.417726039886475
    6. '    
' → logprob: -7.667726039886475
    7. ' graph' → logprob: -7.792726039886475
    8. 'graph' → logprob: -9.042725563049316
    9. ',
' → logprob: -10.417725563049316
    10. ':' → logprob: -10.417725563049316

Token 376: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.05806906893849373
    2. ' graph' → logprob: -3.1830689907073975
    3. 'edges' → logprob: -4.683069229125977
    4. '   ' → logprob: -5.808069229125977
    5. ' edges' → logprob: -6.058069229125977
    6. 'n' → logprob: -9.183069229125977
    7. '
' → logprob: -9.433069229125977
    8. '	graph' → logprob: -10.433069229125977
    9. 'def' → logprob: -10.558069229125977
    10. ' n' → logprob: -10.558069229125977

Token 377: ' We' (ID: 1416)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06711940467357635
    2. 'edges' → logprob: -3.4421193599700928
    3. ' graph' → logprob: -4.067119598388672
    4. 'n' → logprob: -4.942119598388672
    5. ' edges' → logprob: -5.817119598388672
    6. '   ' → logprob: -5.942119598388672
    7. ' n' → logprob: -6.692119598388672
    8. '#' → logprob: -7.442119598388672
    9. 'adj' → logprob: -8.442119598388672
    10. '
' → logprob: -8.442119598388672

Token 378: ' approximate' (ID: 68753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07144225388765335
    2. ' for' → logprob: -3.3214423656463623
    3. 'def' → logprob: -4.446442127227783
    4. 'n' → logprob: -4.571442127227783
    5. 'len' → logprob: -6.321442127227783
    6. 'size' → logprob: -6.321442127227783
    7. 'edges' → logprob: -6.446442127227783
    8. '=' → logprob: -7.196442127227783
    9. ' =' → logprob: -7.696442127227783
    10. '   ' → logprob: -7.696442127227783

Token 379: ' safety' (ID: 9246)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.147443175315857
    2. ' the' → logprob: -1.397443175315857
    3. ' by' → logprob: -1.397443175315857
    4. ' nodes' → logprob: -3.2724432945251465
    5. 'edges' → logprob: -3.3974432945251465
    6. '<|end|>' → logprob: -3.6474432945251465
    7. 'the' → logprob: -3.8974432945251465
    8. ' distances' → logprob: -4.7724432945251465
    9. 'by' → logprob: -4.8974432945251465
    10. '<|end|>' → logprob: -5.2724432945251465

Token 380: ' over' (ID: 1072)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.22813215851783752
    2. ',' → logprob: -2.6031322479248047
    3. ' for' → logprob: -2.6031322479248047
    4. ':' → logprob: -4.478132247924805
    5. '.' → logprob: -4.853132247924805
    6. 'for' → logprob: -5.228132247924805
    7. ' ' → logprob: -5.478132247924805
    8. ' with' → logprob: -5.728132247924805
    9. 'by' → logprob: -5.978132247924805
    10. '<|end|>' → logprob: -5.978132247924805

Token 381: ' each' (ID: 2454)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.5137033462524414
    2. ' a' → logprob: -2.5137033462524414
    3. ' ' → logprob: -2.6387033462524414
    4. '0' → logprob: -2.6387033462524414
    5. '50' → logprob: -2.6387033462524414
    6. 'the' → logprob: -2.7637033462524414
    7. 'nodes' → logprob: -2.7637033462524414
    8. '20' → logprob: -2.8887033462524414
    9. ' nodes' → logprob: -2.8887033462524414
    10. 'a' → logprob: -2.8887033462524414

Token 382: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.5503336787223816
    2. 'edge' → logprob: -1.1753337383270264
    3. 'segment' → logprob: -3.0503337383270264
    4. ' segment' → logprob: -4.050333499908447
    5. ' line' → logprob: -4.175333499908447
    6. 'line' → logprob: -4.550333499908447
    7. 'def' → logprob: -5.050333499908447
    8. 'pair' → logprob: -5.175333499908447
    9. ' pair' → logprob: -5.675333499908447
    10. 'node' → logprob: -6.925333499908447

Token 383: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4279569983482361
    2. ',' → logprob: -2.177957057952881
    3. '
' → logprob: -2.802957057952881
    4. ':' → logprob: -3.052957057952881
    5. ' edges' → logprob: -3.177957057952881
    6. '.' → logprob: -3.802957057952881
    7. 'edges' → logprob: -3.927957057952881
    8. ' by' → logprob: -4.302957057952881
    9. ' for' → logprob: -4.927957057952881
    10. ' with' → logprob: -5.177957057952881

Token 384: ' small' (ID: 3291)
  Prédit: 'checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checking' → logprob: -0.8648370504379272
    2. ' checking' → logprob: -1.3648370504379272
    3. 'sampling' → logprob: -1.6148370504379272
    4. ' sampling' → logprob: -2.114837169647217
    5. ' subdiv' → logprob: -6.614837169647217
    6. ' dividing' → logprob: -7.364837169647217
    7. 'connecting' → logprob: -7.864837169647217
    8. 'adding' → logprob: -7.864837169647217
    9. 'def' → logprob: -8.364836692810059
    10. ' connecting' → logprob: -8.614836692810059

Token 385: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.29220449924468994
    2. ' steps' → logprob: -1.54220449924469
    3. 'segments' → logprob: -3.6672043800354004
    4. ' segments' → logprob: -4.5422043800354
    5. 'step' → logprob: -7.1672043800354
    6. ' increments' → logprob: -7.1672043800354
    7. 'increments' → logprob: -7.1672043800354
    8. '_steps' → logprob: -7.5422043800354
    9. 'def' → logprob: -8.917204856872559
    10. ' step' → logprob: -9.417204856872559

Token 386: ' along' (ID: 4251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013636828400194645
    2. '
' → logprob: -4.513637065887451
    3. '    
' → logprob: -7.013637065887451
    4. 'def' → logprob: -8.013636589050293
    5. ',' → logprob: -8.388636589050293
    6. 'n' → logprob: -8.388636589050293
    7. ' for' → logprob: -8.638636589050293
    8. ' step' → logprob: -8.888636589050293
    9. 'for' → logprob: -8.888636589050293
    10. ':' → logprob: -9.638636589050293

Token 387: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5819854736328125
    2. 'the' → logprob: -0.8319854736328125
    3. ' each' → logprob: -5.7069854736328125
    4. 'each' → logprob: -6.7069854736328125
    5. '<|end|>' → logprob: -7.8319854736328125
    6. ' edges' → logprob: -8.331985473632812
    7. ' it' → logprob: -8.831985473632812
    8. ' ' → logprob: -8.831985473632812
    9. 'def' → logprob: -9.206985473632812
    10. 'edges' → logprob: -9.331985473632812

Token 388: ' segment' (ID: 14806)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.006586643401533365
    2. 'edge' → logprob: -5.25658655166626
    3. ' line' → logprob: -7.25658655166626
    4. ' edges' → logprob: -7.63158655166626
    5. ' path' → logprob: -9.256587028503418
    6. 'edges' → logprob: -11.006587028503418
    7. 'line' → logprob: -11.506587028503418
    8. '_edge' → logprob: -11.881587028503418
    9. ''' → logprob: -12.006587028503418
    10. ' segment' → logprob: -12.381587028503418

Token 389: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009601548314094543
    2. '
' → logprob: -5.134601593017578
    3. ',' → logprob: -7.134601593017578
    4. ':' → logprob: -7.259601593017578
    5. '.' → logprob: -7.259601593017578
    6. ' edges' → logprob: -8.009601593017578
    7. '    
' → logprob: -8.384601593017578
    8. 'n' → logprob: -8.509601593017578
    9. 'edges' → logprob: -8.509601593017578
    10. ' for' → logprob: -9.009601593017578

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01642822101712227
    2. '
' → logprob: -4.391427993774414
    3. ':' → logprob: -6.141427993774414
    4. '    
' → logprob: -7.266427993774414
    5. ',' → logprob: -7.516427993774414
    6. '.' → logprob: -8.641427993774414
    7. ' for' → logprob: -9.891427993774414
    8. ' edges' → logprob: -9.891427993774414
    9. 'edges' → logprob: -10.766427993774414
    10. '  
' → logprob: -11.141427993774414

Token 391: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.7746601700782776
    2. ' graph' → logprob: -1.2746601104736328
    3. '   ' → logprob: -1.5246601104736328
    4. '
' → logprob: -3.649660110473633
    5. ' edges' → logprob: -4.774660110473633
    6. 'edges' → logprob: -5.274660110473633
    7. 'n' → logprob: -7.149660110473633
    8. '    
' → logprob: -7.274660110473633
    9. ' n' → logprob: -7.649660110473633
    10. '	graph' → logprob: -8.774660110473633

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201569065451622
    2. '=' → logprob: -1.7015690803527832
    3. '={}' → logprob: -8.826568603515625
    4. '={' → logprob: -12.201568603515625
    5. ' ={' → logprob: -13.451568603515625
    6. '=[]' → logprob: -13.826568603515625
    7. '={}
' → logprob: -14.451568603515625
    8. ' ' → logprob: -15.326568603515625
    9. '   ' → logprob: -15.951568603515625
    10. ',' → logprob: -16.076568603515625

Token 393: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.24085327982902527
    2. ' {' → logprob: -2.2408533096313477
    3. '{}' → logprob: -2.2408533096313477
    4. ' {}' → logprob: -6.990853309631348
    5. 'default' → logprob: -8.490853309631348
    6. ' [[]' → logprob: -8.865853309631348
    7. ' defaultdict' → logprob: -10.490853309631348
    8. '[' → logprob: -12.115853309631348
    9. '{}
' → logprob: -12.365853309631348
    10. '{}

' → logprob: -13.990853309631348

Token 394: 'i' (ID: 72)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.36069533228874207
    2. 'n' → logprob: -1.4856953620910645
    3. ' node' → logprob: -2.9856953620910645
    4. 'i' → logprob: -3.9856953620910645
    5. 'p' → logprob: -5.6106953620910645
    6. ' n' → logprob: -6.2356953620910645
    7. 'k' → logprob: -7.4856953620910645
    8. 'v' → logprob: -7.8606953620910645
    9. ' p' → logprob: -8.485694885253906
    10. 'u' → logprob: -8.735694885253906

Token 395: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9266199160483666e-05
    2. ' :' → logprob: -12.125019073486328
    3. ':[' → logprob: -12.125019073486328
    4. ':set' → logprob: -12.625019073486328
    5. ':list' → logprob: -12.750019073486328
    6. '=[]' → logprob: -14.000019073486328
    7. ':i' → logprob: -14.625019073486328
    8. ':{}' → logprob: -14.875019073486328
    9. '[]' → logprob: -15.750019073486328
    10. 'for' → logprob: -16.625019073486328

Token 396: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0004676113894674927
    2. '[]}' → logprob: -7.750467777252197
    3. ' []' → logprob: -10.750467300415039
    4. 'set' → logprob: -12.000467300415039
    5. '[]
' → logprob: -12.000467300415039
    6. '{}' → logprob: -12.750467300415039
    7. '[]

' → logprob: -15.375467300415039
    8. '[' → logprob: -17.62546730041504
    9. '[]>' → logprob: -18.37546730041504
    10. '[])' → logprob: -18.62546730041504

Token 397: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.054946381598711014
    2. 'for' → logprob: -2.9299464225769043
    3. ' ' → logprob: -10.429945945739746
    4. '	for' → logprob: -11.304945945739746
    5. '   ' → logprob: -12.179945945739746
    6. ',' → logprob: -12.179945945739746
    7. '}' → logprob: -12.179945945739746
    8. ')' → logprob: -12.804945945739746
    9. '
' → logprob: -13.429945945739746
    10. '<|end|>' → logprob: -14.054945945739746

Token 398: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024756586644798517
    2. ' i' → logprob: -6.002475738525391
    3. 'range' → logprob: -17.25247573852539
    4. '	i' → logprob: -17.87747573852539
    5. ' range' → logprob: -19.12747573852539
    6. ' ' → logprob: -19.62747573852539
    7. ',i' → logprob: -20.00247573852539
    8. ' ' → logprob: -20.00247573852539
    9. ',' → logprob: -20.75247573852539
    10. '{i' → logprob: -21.50247573852539

Token 399: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08896192908287048
    2. 'in' → logprob: -2.4639618396759033
    3. ',' → logprob: -11.838961601257324
    4. 'range' → logprob: -12.213961601257324
    5. 'i' → logprob: -12.463961601257324
    6. 'n' → logprob: -12.713961601257324
    7. ' i' → logprob: -14.088961601257324
    8. ' ' → logprob: -14.213961601257324
    9. ',n' → logprob: -14.463961601257324
    10. ' range' → logprob: -14.713961601257324

Token 400: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '	range' → logprob: -21.375553131103516
    4. '(range' → logprob: -22.125553131103516
    5. '
' → logprob: -22.875553131103516
    6. '   ' → logprob: -23.125553131103516
    7. ' ' → logprob: -23.625553131103516
    8. 'Range' → logprob: -24.625553131103516
    9. '  ' → logprob: -25.000553131103516
    10. '

' → logprob: -25.625553131103516

Token 401: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.008616226725280285
    2. 'len' → logprob: -4.7586164474487305
    3. ' len' → logprob: -13.50861644744873
    4. '(' → logprob: -15.63361644744873
    5. ',len' → logprob: -16.883615493774414
    6. '[len' → logprob: -17.383615493774414
    7. '=len' → logprob: -17.508615493774414
    8. '	len' → logprob: -17.883615493774414
    9. '<len' → logprob: -18.133615493774414
    10. '```' → logprob: -20.008615493774414

Token 402: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -5.574251918005757e-05
    2. 'nodes' → logprob: -9.875055313110352
    3. ' nodes' → logprob: -13.500055313110352
    4. '(' → logprob: -13.750055313110352
    5. '	nodes' → logprob: -14.000055313110352
    6. '(graph' → logprob: -15.000055313110352
    7. '(n' → logprob: -15.750055313110352
    8. ' (' → logprob: -15.875055313110352
    9. '(node' → logprob: -16.37505531311035
    10. '(
' → logprob: -16.50005531311035

Token 403: '))}
' (ID: 153682)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.005909123457968235
    2. '))' → logprob: -5.255908966064453
    3. ')' → logprob: -7.505908966064453
    4. ')}}' → logprob: -9.755908966064453
    5. '})' → logprob: -10.130908966064453
    6. '}' → logprob: -11.005908966064453
    7. ' )' → logprob: -12.130908966064453
    8. ')}
' → logprob: -13.630908966064453
    9. ')}

' → logprob: -13.880908966064453
    10. ');}' → logprob: -13.880908966064453

Token 404: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8759955167770386
    2. '   ' → logprob: -1.2509955167770386
    3. ' for' → logprob: -1.5009955167770386
    4. 'for' → logprob: -2.625995635986328
    5. '    
' → logprob: -6.875995635986328
    6. '<|end|>' → logprob: -7.500995635986328
    7. '  
' → logprob: -9.125995635986328
    8. ' 
' → logprob: -9.375995635986328
    9. '	for' → logprob: -9.625995635986328
    10. '```' → logprob: -10.125995635986328

Token 405: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4324062168598175
    2. 'for' → logprob: -1.0574061870574951
    3. '   ' → logprob: -5.932406425476074
    4. 'n' (adapté à ' n') → logprob: -7.807406425476074
    5. 'step' → logprob: -8.182406425476074
    6. ' step' → logprob: -8.682406425476074
    7. '
' → logprob: -9.432406425476074
    8. ' n' → logprob: -9.807406425476074
    9. 'def' → logprob: -10.932406425476074
    10. 'steps' → logprob: -11.432406425476074

Token 406: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44245442748069763
    2. 'odes' → logprob: -1.56745445728302
    3. ' =' → logprob: -1.94245445728302
    4. '=len' → logprob: -5.4424543380737305
    5. '_nodes' → logprob: -6.8174543380737305
    6. 'o' → logprob: -10.19245433807373
    7. '```' → logprob: -10.19245433807373
    8. 'for' → logprob: -10.81745433807373
    9. 'ode' → logprob: -11.06745433807373
    10. 'ODES' → logprob: -11.31745433807373

Token 407: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004306692280806601
    2. ' len' → logprob: -7.750430583953857
    3. '(len' → logprob: -18.500431060791016
    4. '   ' → logprob: -19.875431060791016
    5. '[len' → logprob: -20.500431060791016
    6. '=len' → logprob: -21.125431060791016
    7. '	len' → logprob: -21.375431060791016
    8. ' ' → logprob: -21.625431060791016
    9. '  ' → logprob: -22.625431060791016
    10. ',len' → logprob: -22.875431060791016

Token 408: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.9361264946837764e-07
    2. 'nodes' → logprob: -16.0
    3. '(' → logprob: -17.125
    4. '(graph' → logprob: -19.5
    5. '	nodes' → logprob: -19.625
    6. ' (' → logprob: -19.75
    7. '(n' → logprob: -20.125
    8. '(vertices' → logprob: -20.125
    9. '(
' → logprob: -20.25
    10. ' nodes' → logprob: -20.375

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039766079862602055
    2. ')
' → logprob: -7.875397682189941
    3. ' )' → logprob: -11.375397682189941
    4. '   ' → logprob: -12.625397682189941
    5. ')}' → logprob: -14.125397682189941
    6. ')

' → logprob: -14.500397682189941
    7. ')n' → logprob: -15.500397682189941
    8. '<|end|>' → logprob: -15.625397682189941
    9. '),' → logprob: -16.000396728515625
    10. '))' → logprob: -16.125396728515625

Token 410: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6311079263687134
    2. ' for' → logprob: -1.1311079263687134
    3. 'for' → logprob: -2.131107807159424
    4. '   ' → logprob: -4.131107807159424
    5. ' 
' → logprob: -5.256107807159424
    6. '    
' → logprob: -6.006107807159424
    7. '  
' → logprob: -6.131107807159424
    8. '<|end|>' → logprob: -8.256108283996582
    9. '   
' → logprob: -8.756108283996582
    10. '	for' → logprob: -9.631108283996582

Token 411: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005797720979899168
    2. 'step' → logprob: -5.255797863006592
    3. ' for' → logprob: -7.630797863006592
    4. '   ' → logprob: -10.380797386169434
    5. 'def' → logprob: -10.505797386169434
    6. 'steps' → logprob: -11.505797386169434
    7. 'STEP' → logprob: -11.880797386169434
    8. ' step' → logprob: -13.755797386169434
    9. 'delta' → logprob: -14.380797386169434
    10. '
' → logprob: -14.505797386169434

Token 412: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11299512535333633
    2. 'i' → logprob: -2.237995147705078
    3. ' u' → logprob: -8.987995147705078
    4. 'u' → logprob: -10.612995147705078
    5. '	i' → logprob: -10.987995147705078
    6. ' ' → logprob: -12.612995147705078
    7. '   ' → logprob: -13.862995147705078
    8. '```' → logprob: -14.612995147705078
    9. '_i' → logprob: -14.987995147705078
    10. ' ' → logprob: -14.987995147705078

Token 413: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18122582137584686
    2. 'in' → logprob: -1.8062257766723633
    3. '+' → logprob: -6.681225776672363
    4. ' ' → logprob: -8.681225776672363
    5. ',' → logprob: -11.556225776672363
    6. '1' → logprob: -11.681225776672363
    7. ' i' → logprob: -11.931225776672363
    8. 'n' → logprob: -12.056225776672363
    9. ' +' → logprob: -12.181225776672363
    10. '	in' → logprob: -12.181225776672363

Token 414: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28779956698417664
    2. ' range' → logprob: -1.537799596786499
    3. 'n' → logprob: -3.537799596786499
    4. ' n' → logprob: -5.16279935836792
    5. '0' → logprob: -7.91279935836792
    6. ' ' → logprob: -9.912799835205078
    7. '(n' → logprob: -11.912799835205078
    8. '(range' → logprob: -12.037799835205078
    9. '
' → logprob: -14.287799835205078
    10. ')' → logprob: -14.662799835205078

Token 415: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6439026594161987
    2. ' n' → logprob: -1.2689026594161987
    3. '(n' → logprob: -1.6439026594161987
    4. '(' → logprob: -8.268902778625488
    5. ' (' → logprob: -9.643902778625488
    6. ' ' → logprob: -10.143902778625488
    7. '1' → logprob: -10.893902778625488
    8. '	n' → logprob: -11.768902778625488
    9. '0' → logprob: -12.893902778625488
    10. 'i' → logprob: -13.018902778625488

Token 416: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2530847489833832
    2. '):
' → logprob: -1.5030847787857056
    3. '-' → logprob: -6.878084659576416
    4. '   ' → logprob: -10.253085136413574
    5. ')' → logprob: -10.378085136413574
    6. ' ):' → logprob: -10.378085136413574
    7. '):
' → logprob: -11.378085136413574
    8. ' -' → logprob: -12.628085136413574
    9. ':' → logprob: -13.003085136413574
    10. ' ):
' → logprob: -13.128085136413574

Token 417: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2822973430156708
    2. '   ' → logprob: -1.4072973728179932
    3. 'for' → logprob: -7.282297134399414
    4. '	for' → logprob: -8.407297134399414
    5. '       ' → logprob: -8.907297134399414
    6. ' ' → logprob: -9.407297134399414
    7. '<|end|>' → logprob: -12.282297134399414
    8. ',' → logprob: -12.907297134399414
    9. '   ' → logprob: -13.407297134399414
    10. '    ' → logprob: -13.532297134399414

Token 418: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07898154854774475
    2. 'for' (adapté à ' for') → logprob: -2.578981637954712
    3. '   ' → logprob: -9.328981399536133
    4. ' j' → logprob: -12.953981399536133
    5. '	for' → logprob: -14.578981399536133
    6. 'j' → logprob: -16.078981399536133
    7. '    ' → logprob: -16.453981399536133
    8. ' ' → logprob: -17.453981399536133
    9. '  ' → logprob: -18.078981399536133
    10. ' x' → logprob: -18.453981399536133

Token 419: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5475484132766724
    2. 'i' → logprob: -1.5475484132766724
    3. ' j' → logprob: -1.7975484132766724
    4. 'j' → logprob: -3.172548294067383
    5. ' range' → logprob: -6.797548294067383
    6. 'range' → logprob: -9.297548294067383
    7. '   ' → logprob: -10.047548294067383
    8. ' ' → logprob: -12.422548294067383
    9. '	i' → logprob: -12.672548294067383
    10. '    ' → logprob: -12.922548294067383

Token 420: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01293526217341423
    2. 'in' → logprob: -4.887935161590576
    3. ' i' → logprob: -5.512935161590576
    4. '=i' → logprob: -7.137935161590576
    5. ' ' → logprob: -8.012935638427734
    6. '=' → logprob: -9.637935638427734
    7. '	in' → logprob: -10.387935638427734
    8. ' =' → logprob: -10.762935638427734
    9. 'i' → logprob: -11.012935638427734
    10. '	i' → logprob: -12.012935638427734

Token 421: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03808223456144333
    2. ' range' → logprob: -3.2880821228027344
    3. 'i' → logprob: -10.413082122802734
    4. '(range' → logprob: -11.788082122802734
    5. ' i' → logprob: -12.913082122802734
    6. '(i' → logprob: -15.538082122802734
    7. '	range' → logprob: -15.663082122802734
    8. '   ' → logprob: -16.038082122802734
    9. ' ' → logprob: -16.538082122802734
    10. '[i' → logprob: -17.038082122802734

Token 422: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0032121767289936543
    2. ' i' → logprob: -6.378211975097656
    3. ' (' → logprob: -6.878211975097656
    4. 'i' → logprob: -7.878211975097656
    5. ' range' → logprob: -9.878211975097656
    6. '(' → logprob: -10.128211975097656
    7. 'range' → logprob: -12.503211975097656
    8. '(range' → logprob: -13.503211975097656
    9. '(
' → logprob: -14.253211975097656
    10. '[i' → logprob: -14.253211975097656

Token 423: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00039039674447849393
    2. ' +' → logprob: -7.875390529632568
    3. '+i' → logprob: -11.87539005279541
    4. '+
' → logprob: -12.87539005279541
    5. '1' → logprob: -15.12539005279541
    6. '+j' → logprob: -15.62539005279541
    7. ' ' → logprob: -16.875391006469727
    8. ')+' → logprob: -16.875391006469727
    9. '+

' → logprob: -17.000391006469727
    10. ',' → logprob: -17.000391006469727

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'n' → logprob: -16.375019073486328
    4. '2' → logprob: -17.625019073486328
    5. '0' → logprob: -17.750019073486328
    6. '   ' → logprob: -17.750019073486328
    7. 'i' → logprob: -18.000019073486328
    8. '
' → logprob: -18.437519073486328
    9. 'int' → logprob: -19.187519073486328
    10. '```' → logprob: -19.312519073486328

Token 425: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05830131471157074
    2. ',n' → logprob: -3.5583012104034424
    3. '):' → logprob: -3.6833012104034424
    4. '):
' → logprob: -6.6833014488220215
    5. ' ,' → logprob: -7.0583014488220215
    6. 'n' → logprob: -7.5583014488220215
    7. ' ):' → logprob: -8.183300971984863
    8. '1' → logprob: -11.558300971984863
    9. ',j' → logprob: -11.683300971984863
    10. ' ):
' → logprob: -11.808300971984863

Token 426: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05492414906620979
    2. '):
' → logprob: -2.929924249649048
    3. ':' → logprob: -10.804924011230469
    4. ' ):' → logprob: -11.679924011230469
    5. ')' → logprob: -11.804924011230469
    6. '):
' → logprob: -12.929924011230469
    7. '):

' → logprob: -13.304924011230469
    8. '   ' → logprob: -14.554924011230469
    9. ' ):
' → logprob: -14.679924011230469
    10. ',' → logprob: -15.804924011230469

Token 427: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032411739230155945
    2. '        
' → logprob: -4.157411575317383
    3. '           ' → logprob: -4.782411575317383
    4. ',' → logprob: -6.282411575317383
    5. ' 
' → logprob: -6.282411575317383
    6. '        ' → logprob: -6.782411575317383
    7. ' ' → logprob: -7.532411575317383
    8. ' if' → logprob: -7.907411575317383
    9. ':' → logprob: -8.157411575317383
    10. '   ' → logprob: -8.282411575317383

Token 428: ' a' (ID: 261)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4132489264011383
    2. 'p' → logprob: -1.538248896598816
    3. '   ' → logprob: -2.4132490158081055
    4. '           ' → logprob: -4.4132490158081055
    5. ' dx' → logprob: -5.2882490158081055
    6. ' xi' → logprob: -6.1632490158081055
    7. ' safe' → logprob: -6.2882490158081055
    8. 'pi' → logprob: -6.2882490158081055
    9. 'dx' → logprob: -6.2882490158081055
    10. 'xi' → logprob: -6.6632490158081055

Token 429: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0571328401565552
    2. ',' → logprob: -1.1821328401565552
    3. ' =' → logprob: -1.1821328401565552
    4. ',a' → logprob: -3.5571327209472656
    5. ',p' → logprob: -5.807132720947266
    6. 'a' → logprob: -6.057132720947266
    7. '=a' → logprob: -6.182132720947266
    8. ',b' → logprob: -6.432132720947266
    9. 'p' → logprob: -7.932132720947266
    10. ' ,' → logprob: -8.182132720947266

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033711519092321396
    2. ' =' → logprob: -3.4087114334106445
    3. '=a' → logprob: -10.033711433410645
    4. ')=' → logprob: -12.158711433410645
    5. ')' → logprob: -12.533711433410645
    6. '=i' → logprob: -12.533711433410645
    7. '=
' → logprob: -12.908711433410645
    8. '=(' → logprob: -13.033711433410645
    9. ',' → logprob: -13.408711433410645
    10. '=p' → logprob: -13.783711433410645

Token 431: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.10021767020225525
    2. ' nodes' → logprob: -2.350217580795288
    3. '(nodes' → logprob: -11.600217819213867
    4. '	nodes' → logprob: -13.350217819213867
    5. '   ' → logprob: -15.975217819213867
    6. '.nodes' → logprob: -16.350217819213867
    7. 'node' → logprob: -16.725217819213867
    8. 'n' → logprob: -17.475217819213867
    9. ' ' → logprob: -17.600217819213867
    10. '_nodes' → logprob: -17.850217819213867

Token 432: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017743845819495618
    2. 'i' → logprob: -9.375177383422852
    3. '
' → logprob: -10.500177383422852
    4. '[' → logprob: -10.750177383422852
    5. ',i' → logprob: -10.875177383422852
    6. ' [' → logprob: -11.250177383422852
    7. ' i' → logprob: -12.250177383422852
    8. ',' → logprob: -12.750177383422852
    9. '[j' → logprob: -13.375177383422852
    10. '   ' → logprob: -14.375177383422852

Token 433: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2198564112186432
    2. '],' → logprob: -1.7198563814163208
    3. ',n' → logprob: -4.094856262207031
    4. ' ,' → logprob: -7.094856262207031
    5. ']' → logprob: -8.094856262207031
    6. '),' → logprob: -8.219856262207031
    7. ',b' → logprob: -9.219856262207031
    8. ',j' → logprob: -10.094856262207031
    9. '],[' → logprob: -10.719856262207031
    10. ' ],' → logprob: -10.844856262207031

Token 434: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.2519310414791107
    2. ' nodes' → logprob: -1.501931071281433
    3. '	nodes' → logprob: -13.376931190490723
    4. '(nodes' → logprob: -15.126931190490723
    5. '.nodes' → logprob: -16.626930236816406
    6. '_nodes' → logprob: -18.376930236816406
    7. 'tokens' → logprob: -18.876930236816406
    8. '
' → logprob: -19.126930236816406
    9. ' ' → logprob: -19.626930236816406
    10. 'n' → logprob: -19.751930236816406

Token 435: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.203409844194539e-05
    2. 'j' → logprob: -10.125041961669922
    3. '[
' → logprob: -13.625041961669922
    4. '[i' → logprob: -15.250041961669922
    5. '```' → logprob: -15.250041961669922
    6. '
' → logprob: -16.875041961669922
    7. '[' → logprob: -16.875041961669922
    8. '	j' → logprob: -17.000041961669922
    9. '   ' → logprob: -17.500041961669922
    10. ' [' → logprob: -17.750041961669922

Token 436: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6282340288162231
    2. ']
' → logprob: -1.3782340288162231
    3. '           ' → logprob: -2.3782339096069336
    4. ')' → logprob: -2.5032339096069336
    5. ')
' → logprob: -3.2532339096069336
    6. '
' → logprob: -8.128233909606934
    7. '       ' → logprob: -8.378233909606934
    8. ']
' → logprob: -8.503233909606934
    9. ']

' → logprob: -9.003233909606934
    10. '            
' → logprob: -9.503233909606934

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000217006730963476
    2. '            
' → logprob: -8.75021743774414
    3. ' distance' → logprob: -11.12521743774414
    4. '       ' → logprob: -11.75021743774414
    5. 'distance' → logprob: -12.25021743774414
    6. ' if' → logprob: -12.62521743774414
    7. '   ' → logprob: -12.75021743774414
    8. '
' → logprob: -12.87521743774414
    9. ' 
' → logprob: -13.25021743774414
    10. '          ' → logprob: -13.25021743774414

Token 438: ' #' (ID: 1069)
  Prédit: ' safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.5750868320465088
    2. 'safe' → logprob: -0.9500868320465088
    3. 'dx' → logprob: -4.32508659362793
    4. 'steps' → logprob: -4.45008659362793
    5. '           ' → logprob: -4.70008659362793
    6. 'dist' → logprob: -4.95008659362793
    7. 'step' → logprob: -6.45008659362793
    8. ' dx' → logprob: -6.70008659362793
    9. 'length' → logprob: -6.95008659362793
    10. 'vec' → logprob: -6.95008659362793

Token 439: ' Check' (ID: 6208)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.27602583169937134
    2. 'steps' → logprob: -1.7760257720947266
    3. ' safe' → logprob: -3.5260257720947266
    4. 'dx' → logprob: -4.651025772094727
    5. 'dist' → logprob: -4.776025772094727
    6. 'step' → logprob: -4.901025772094727
    7. 'length' → logprob: -5.401025772094727
    8. 'ok' → logprob: -5.776025772094727
    9. 'vec' → logprob: -5.901025772094727
    10. 'valid' → logprob: -6.401025772094727

Token 440: ' if' (ID: 538)
  Prédit: ' safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.8461424708366394
    2. ' steps' → logprob: -1.5961425304412842
    3. 'steps' → logprob: -2.096142530441284
    4. 'safe' → logprob: -2.096142530441284
    5. ' if' → logprob: -3.346142530441284
    6. ' step' → logprob: -4.096142292022705
    7. 'step' → logprob: -4.346142292022705
    8. ' length' → logprob: -4.471142292022705
    9. 'length' → logprob: -4.846142292022705
    10. '   ' → logprob: -5.346142292022705

Token 441: ' whole' (ID: 6062)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.5339785814285278
    2. ' safe' → logprob: -1.7839785814285278
    3. 'can' → logprob: -1.7839785814285278
    4. 'a' → logprob: -2.0339784622192383
    5. 'safe' → logprob: -2.1589784622192383
    6. 'dist' → logprob: -2.6589784622192383
    7. ' all' → logprob: -3.2839784622192383
    8. ' a' → logprob: -3.2839784622192383
    9. 'all' → logprob: -4.158978462219238
    10. ' dist' → logprob: -4.283978462219238

Token 442: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6556469798088074
    2. ' segment' → logprob: -1.2806470394134521
    3. ' line' → logprob: -1.9056470394134521
    4. 'line' → logprob: -3.780647039413452
    5. 'distance' → logprob: -4.655646800994873
    6. 'a' → logprob: -5.405646800994873
    7. ' edge' → logprob: -5.655646800994873
    8. 'path' → logprob: -6.155646800994873
    9. '_segment' → logprob: -6.280646800994873
    10. ' path' → logprob: -6.405646800994873

Token 443: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07358013838529587
    2. 'is' → logprob: -2.698580026626587
    3. '[' → logprob: -6.823580265045166
    4. ' between' → logprob: -7.198580265045166
    5. ' [' → logprob: -8.073579788208008
    6. 'a' → logprob: -8.323579788208008
    7. ' can' → logprob: -8.573579788208008
    8. '[a' → logprob: -8.698579788208008
    9. '[i' → logprob: -8.823579788208008
    10. '           ' → logprob: -9.323579788208008

Token 444: ' inside' (ID: 6772)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.38700932264328003
    2. ' safe' → logprob: -1.1370093822479248
    3. '_safe' → logprob: -9.012009620666504
    4. '
' → logprob: -12.512009620666504
    5. ' ' → logprob: -12.512009620666504
    6. '   ' → logprob: -12.762009620666504
    7. 's' → logprob: -13.387009620666504
    8. '```' → logprob: -13.762009620666504
    9. '-safe' → logprob: -14.137009620666504
    10. '.safe' → logprob: -14.387009620666504

Token 445: ' region' (ID: 7967)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.2699642479419708
    2. 'area' → logprob: -2.0199642181396484
    3. '_area' → logprob: -2.5199642181396484
    4. ' the' → logprob: -4.269964218139648
    5. ' inside' → logprob: -6.394964218139648
    6. 'Area' → logprob: -6.519964218139648
    7. '(' → logprob: -6.644964218139648
    8. ' (' → logprob: -6.894964218139648
    9. 'the' → logprob: -6.894964218139648
    10. 'inside' → logprob: -7.269964218139648

Token 446: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20652419328689575
    2. '           ' → logprob: -1.706524133682251
    3. 'and' → logprob: -5.70652437210083
    4. ',' → logprob: -7.45652437210083
    5. '   ' → logprob: -7.45652437210083
    6. ':' → logprob: -8.331523895263672
    7. '            
' → logprob: -9.331523895263672
    8. '               ' → logprob: -9.831523895263672
    9. '       ' → logprob: -10.081523895263672
    10. ' with' → logprob: -10.456523895263672

Token 447: ' safe' (ID: 7703)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7677437663078308
    2. ' all' → logprob: -0.8927437663078308
    3. 'can' → logprob: -2.2677438259124756
    4. 'all' → logprob: -4.1427435874938965
    5. ' safe' → logprob: -5.1427435874938965
    6. '           ' → logprob: -7.8927435874938965
    7. 'safe' → logprob: -8.267744064331055
    8. ' not' → logprob: -9.017744064331055
    9. ' is' → logprob: -9.267744064331055
    10. '
' → logprob: -9.642744064331055

Token 448: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019044855143874884
    2. ':' → logprob: -7.751904487609863
    3. '            
' → logprob: -7.876904487609863
    4. ' and' → logprob: -8.001904487609863
    5. '
' → logprob: -8.501904487609863
    6. ',' → logprob: -8.501904487609863
    7. ':
' → logprob: -9.376904487609863
    8. '.' → logprob: -9.751904487609863
    9. ' with' → logprob: -10.751904487609863
    10. '   ' → logprob: -10.876904487609863

Token 449: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009998210007324815
    2. '            
' → logprob: -7.375999927520752
    3. ',' → logprob: -9.000999450683594
    4. '
' → logprob: -9.375999450683594
    5. ' and' → logprob: -10.125999450683594
    6. ':' → logprob: -10.250999450683594
    7. ' with' → logprob: -11.500999450683594
    8. '.' → logprob: -11.625999450683594
    9. '    
' → logprob: -11.625999450683594
    10. '               ' → logprob: -11.875999450683594

Token 450: ' length' (ID: 5517)
  Prédit: ' safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.07139419764280319
    2. '           ' → logprob: -3.446394205093384
    3. 'safe' → logprob: -3.946394205093384
    4. ' steps' → logprob: -5.321393966674805
    5. ' length' → logprob: -5.446393966674805
    6. 'steps' → logprob: -6.321393966674805
    7. 'length' (adapté à ' length') → logprob: -7.196393966674805
    8. ' ok' → logprob: -7.196393966674805
    9. ' step' → logprob: -7.196393966674805
    10. ' dx' → logprob: -7.196393966674805

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933313012123108
    2. ' =' → logprob: -0.6933313012123108
    3. '   ' → logprob: -9.318331718444824
    4. '=a' → logprob: -9.568331718444824
    5. '           ' → logprob: -12.318331718444824
    6. 'a' → logprob: -12.943331718444824
    7. '=max' → logprob: -12.943331718444824
    8. '=int' → logprob: -13.068331718444824
    9. '=line' → logprob: -13.068331718444824
    10. '=len' → logprob: -13.443331718444824

Token 452: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00018125296628568321
    2. ' dist' → logprob: -9.250181198120117
    3. 'math' → logprob: -9.375181198120117
    4. ' math' → logprob: -15.375181198120117
    5. '   ' → logprob: -17.125181198120117
    6. '	dist' → logprob: -17.125181198120117
    7. '(dist' → logprob: -17.625181198120117
    8. 'Dist' → logprob: -18.875181198120117
    9. 'distance' → logprob: -19.250181198120117
    10. ' ' → logprob: -19.375181198120117

Token 453: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004272123333066702
    2. '(' → logprob: -8.00042724609375
    3. 'a' → logprob: -9.50042724609375
    4. '(nodes' → logprob: -11.50042724609375
    5. '(
' → logprob: -12.37542724609375
    6. 'nodes' → logprob: -13.37542724609375
    7. ' (' → logprob: -14.12542724609375
    8. '(points' → logprob: -16.00042724609375
    9. '```' → logprob: -17.50042724609375
    10. '(*' → logprob: -17.75042724609375

Token 454: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07736139744520187
    2. ',b' → logprob: -2.7023613452911377
    3. ',a' → logprob: -4.952361583709717
    4. ',j' → logprob: -9.077361106872559
    5. ' ,' → logprob: -9.327361106872559
    6. ',
' → logprob: -10.327361106872559
    7. 'a' → logprob: -10.702361106872559
    8. ')' → logprob: -11.452361106872559
    9. ',p' → logprob: -11.702361106872559
    10. ',n' → logprob: -11.702361106872559

Token 455: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.523495614528656
    2. ')' → logprob: -0.898495614528656
    3. ')
' → logprob: -8.5234956741333
    4. '           ' → logprob: -9.1484956741333
    5. '
' → logprob: -10.2734956741333
    6. ' )
' → logprob: -11.2734956741333
    7. ')

' → logprob: -12.3984956741333
    8. ' )' → logprob: -12.5234956741333
    9. ',' → logprob: -13.0234956741333
    10. ')*' → logprob: -14.0234956741333

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004210412967950106
    2. '
' → logprob: -5.879210472106934
    3. '            
' → logprob: -7.254210472106934
    4. ' if' → logprob: -8.004210472106934
    5. ',' → logprob: -8.879210472106934
    6. ' step' → logprob: -9.504210472106934
    7. 'if' → logprob: -11.004210472106934
    8. '	       ' → logprob: -11.004210472106934
    9. '<|end|>' → logprob: -11.379210472106934
    10. '    
' → logprob: -11.379210472106934

Token 457: ' if' (ID: 538)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.03251270949840546
    2. 'if' (adapté à ' if') → logprob: -3.907512664794922
    3. 'step' → logprob: -5.782512664794922
    4. '           ' → logprob: -5.782512664794922
    5. 'num' → logprob: -5.907512664794922
    6. 'safe' → logprob: -6.657512664794922
    7. 'segments' → logprob: -7.032512664794922
    8. ' steps' → logprob: -7.407512664794922
    9. ' if' → logprob: -9.032512664794922
    10. ' safe' → logprob: -10.282512664794922

Token 458: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6326420903205872
    2. ' length' → logprob: -0.7576420903205872
    3. 'inside' → logprob: -11.257641792297363
    4. ' inside' → logprob: -11.507641792297363
    5. ' not' → logprob: -11.757641792297363
    6. '(length' → logprob: -12.507641792297363
    7. ' ' → logprob: -13.257641792297363
    8. 'dist' → logprob: -13.507641792297363
    9. '	length' → logprob: -13.632641792297363
    10. 'not' → logprob: -13.882641792297363

Token 459: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1590249240398407
    2. '>' → logprob: -2.034024953842163
    3. ' <' → logprob: -4.784024715423584
    4. ' <=' → logprob: -5.659024715423584
    5. '<' → logprob: -5.909024715423584
    6. '<=' → logprob: -6.909024715423584
    7. ' ==' → logprob: -8.159025192260742
    8. '==' → logprob: -8.534025192260742
    9. ' >=' → logprob: -9.284025192260742
    10. '>=' → logprob: -10.409025192260742

Token 460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '۰' → logprob: -17.75247573852539
    4. '  ' → logprob: -18.00247573852539
    5. '
' → logprob: -18.31497573852539
    6. '   ' → logprob: -18.43997573852539
    7. ' ' → logprob: -18.56497573852539
    8. '```' → logprob: -18.93997573852539
    9. '

' → logprob: -19.12747573852539
    10. ' 
' → logprob: -19.62747573852539

Token 461: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00818426813930273
    2. ':
' → logprob: -4.883184432983398
    3. ' or' → logprob: -8.258184432983398
    4. ':return' → logprob: -8.258184432983398
    5. ' :' → logprob: -10.508184432983398
    6. '   ' → logprob: -11.258184432983398
    7. ')' → logprob: -12.633184432983398
    8. 'continue' → logprob: -12.758184432983398
    9. ' continue' → logprob: -12.883184432983398
    10. ' ' → logprob: -12.883184432983398

Token 462: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19806784391403198
    2. ' continue' → logprob: -1.8230679035186768
    3. ':' → logprob: -4.823067665100098
    4. '       ' → logprob: -5.698067665100098
    5. '   ' → logprob: -6.323067665100098
    6. '           ' → logprob: -6.573067665100098
    7. ':
' → logprob: -6.698067665100098
    8. 'continue' → logprob: -6.698067665100098
    9. '	continue' → logprob: -7.448067665100098
    10. ' or' → logprob: -8.448067665100098

Token 463: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.03002098575234413
    2. 'continue' (adapté à ' continue') → logprob: -3.5300209522247314
    3. '               ' → logprob: -8.655020713806152
    4. '	continue' → logprob: -9.405020713806152
    5. '                   ' → logprob: -12.155020713806152
    6. '   ' → logprob: -12.405020713806152
    7. ' continues' → logprob: -13.780020713806152
    8. '           ' → logprob: -14.155020713806152
    9. 'contin' → logprob: -14.530020713806152
    10. '_continue' → logprob: -14.530020713806152

Token 464: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002438789699226618
    2. '            
' → logprob: -6.502439022064209
    3. '
' → logprob: -7.252439022064209
    4. '    
' → logprob: -9.87743854522705
    5. ' 
' → logprob: -10.62743854522705
    6. '  
' → logprob: -10.87743854522705
    7. ',' → logprob: -10.87743854522705
    8. '<|end|>' → logprob: -11.00243854522705
    9. 'n' → logprob: -11.50243854522705
    10. ' s' → logprob: -12.00243854522705

Token 465: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010528572835028172
    2. '            
' → logprob: -4.885528564453125
    3. '
' → logprob: -6.760528564453125
    4. ' 
' → logprob: -7.135528564453125
    5. '<|end|>' → logprob: -8.385528564453125
    6. '       ' → logprob: -9.010528564453125
    7. '            ' → logprob: -9.135528564453125
    8. '  
' → logprob: -9.385528564453125
    9. '           
' → logprob: -10.010528564453125
    10. '               ' → logprob: -10.135528564453125

Token 466: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -1.1429342031478882
    2. ' steps' → logprob: -1.3929342031478882
    3. ' safe' → logprob: -1.5179342031478882
    4. '           ' → logprob: -2.0179343223571777
    5. 'step' → logprob: -3.5179343223571777
    6. ' step' → logprob: -3.8929343223571777
    7. 'safe' → logprob: -4.017934322357178
    8. 'num' → logprob: -4.892934322357178
    9. ' num' → logprob: -6.392934322357178
    10. 'n' → logprob: -7.267934322357178

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16054986417293549
    2. '=' → logprob: -1.9105498790740967
    3. '=int' → logprob: -8.035550117492676
    4. ',' → logprob: -14.785550117492676
    5. ' ' → logprob: -15.285550117492676
    6. ' =
' → logprob: -15.285550117492676
    7. '   ' → logprob: -15.410550117492676
    8. '=num' → logprob: -15.660550117492676
    9. '    ' → logprob: -16.16054916381836
    10. '=max' → logprob: -16.66054916381836

Token 468: ' max' (ID: 2999)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38871678709983826
    2. 'max' → logprob: -1.1387168169021606
    3. ' max' → logprob: -7.013716697692871
    4. ' int' → logprob: -7.013716697692871
    5. '10' → logprob: -10.638716697692871
    6. '20' → logprob: -11.138716697692871
    7. ' ' → logprob: -13.013716697692871
    8. 'math' → logprob: -13.763716697692871
    9. '	int' → logprob: -14.263716697692871
    10. '100' → logprob: -14.513716697692871

Token 469: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16025470197200775
    2. '(int' → logprob: -1.910254716873169
    3. '1' → logprob: -10.53525447845459
    4. 'int' → logprob: -12.78525447845459
    5. ' (' → logprob: -14.16025447845459
    6. '(
' → logprob: -15.16025447845459
    7. '10' → logprob: -16.285255432128906
    8. ' int' → logprob: -17.035255432128906
    9. '[int' → logprob: -17.660255432128906
    10. '   ' → logprob: -18.535255432128906

Token 470: '10' (ID: 702)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.21586763858795166
    2. '1' → logprob: -1.7158676385879517
    3. '10' → logprob: -4.340867519378662
    4. ' int' → logprob: -7.215867519378662
    5. '(int' → logprob: -7.590867519378662
    6. '20' → logprob: -10.59086799621582
    7. '5' → logprob: -10.96586799621582
    8. '100' → logprob: -11.21586799621582
    9. ' ' → logprob: -11.71586799621582
    10. '50' → logprob: -11.84086799621582

Token 471: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35152313113212585
    2. ',int' → logprob: -1.2265231609344482
    3. ' ,' → logprob: -5.851522922515869
    4. ',
' → logprob: -9.476523399353027
    5. 'int' → logprob: -9.976523399353027
    6. ',(' → logprob: -10.976523399353027
    7. '(int' → logprob: -11.726523399353027
    8. ',length' → logprob: -11.851523399353027
    9. ',min' → logprob: -12.226523399353027
    10. ',len' → logprob: -12.351523399353027

Token 472: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -1.8908587662735954e-05
    2. '(math' → logprob: -11.000019073486328
    3. '(' → logprob: -13.250019073486328
    4. 'length' → logprob: -15.000019073486328
    5. '((' → logprob: -16.875019073486328
    6. '(distance' → logprob: -17.250019073486328
    7. '[length' → logprob: -17.750019073486328
    8. ',length' → logprob: -18.000019073486328
    9. '(round' → logprob: -18.125019073486328
    10. ' length' → logprob: -18.500019073486328

Token 473: '/' (ID: 14)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3647899031639099
    2. '/' → logprob: -1.3647899627685547
    3. ' /' → logprob: -3.3647899627685547
    4. ' *' → logprob: -4.364789962768555
    5. '/E' → logprob: -5.864789962768555
    6. '))' → logprob: -10.114789962768555
    7. ')' → logprob: -11.239789962768555
    8. '/(' → logprob: -11.614789962768555
    9. ')*' → logprob: -11.739789962768555
    10. ' ' → logprob: -12.739789962768555

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041327282087877393
    2. '(' → logprob: -8.375412940979004
    3. ' ' → logprob: -8.750412940979004
    4. '1' → logprob: -11.375412940979004
    5. ' (' → logprob: -12.125412940979004
    6. '   ' → logprob: -13.000412940979004
    7. 'EPS' → logprob: -13.687912940979004
    8. '
' → logprob: -14.687912940979004
    9. '=' → logprob: -14.937912940979004
    10. '  ' → logprob: -15.437912940979004

Token 475: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.8624639324116288e-06
    2. '.
' → logprob: -14.500001907348633
    3. '0' → logprob: -14.625001907348633
    4. ' .' → logprob: -15.875001907348633
    5. '
' → logprob: -16.250001907348633
    6. '..' → logprob: -16.625001907348633
    7. '1' → logprob: -16.750001907348633
    8. '`.' → logprob: -16.750001907348633
    9. '```' → logprob: -16.875001907348633
    10. '‌.' → logprob: -17.312501907348633

Token 476: '05' (ID: 2922)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6985074281692505
    2. '2' → logprob: -1.1985074281692505
    3. '05' → logprob: -2.448507308959961
    4. '4' → logprob: -3.448507308959961
    5. '5' → logprob: -3.573507308959961
    6. '3' → logprob: -3.698507308959961
    7. '01' → logprob: -4.198507308959961
    8. '25' → logprob: -4.948507308959961
    9. '02' → logprob: -5.073507308959961
    10. '15' → logprob: -7.823507308959961

Token 477: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11743608862161636
    2. ')+' → logprob: -2.992436170578003
    3. '))
' → logprob: -3.492436170578003
    4. ')' → logprob: -3.617436170578003
    5. '))+' → logprob: -6.242435932159424
    6. ' ))' → logprob: -6.867435932159424
    7. ' ))
' → logprob: -8.742436408996582
    8. ' )' → logprob: -9.617436408996582
    9. '+' → logprob: -9.867436408996582
    10. '))

' → logprob: -10.117436408996582

Token 478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035266599152237177
    2. '            
' → logprob: -6.00352668762207
    3. '
' → logprob: -7.75352668762207
    4. ',' → logprob: -8.00352668762207
    5. ' 
' → logprob: -10.12852668762207
    6. '    
' → logprob: -10.50352668762207
    7. ' for' → logprob: -10.87852668762207
    8. '  
' → logprob: -10.87852668762207
    9. ' step' → logprob: -10.87852668762207
    10. '<|end|>' → logprob: -11.25352668762207

Token 479: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' (adapté à ' safe') → logprob: -0.12341715395450592
    2. ' safe' → logprob: -2.6234171390533447
    3. 'ok' → logprob: -3.6234171390533447
    4. '           ' → logprob: -4.248417377471924
    5. 'flag' → logprob: -7.623417377471924
    6. 'valid' → logprob: -7.623417377471924
    7. ' ok' → logprob: -7.748417377471924
    8. 'dx' → logprob: -8.498416900634766
    9. '            
' → logprob: -8.498416900634766
    10. 'segment' → logprob: -8.998416900634766

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04095147177577019
    2. ' =' → logprob: -3.2909514904022217
    3. '=True' → logprob: -5.915951251983643
    4. '_=' → logprob: -9.2909517288208
    5. '_segment' → logprob: -9.7909517288208
    6. '_' → logprob: -11.1659517288208
    7. '_line' → logprob: -11.9159517288208
    8. '=False' → logprob: -12.1659517288208
    9. '_edge' → logprob: -12.2909517288208
    10. '_path' → logprob: -12.2909517288208

Token 481: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0683535037969705e-05
    2. ' True' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.75001049041748
    4. '           ' → logprob: -15.87501049041748
    5. '       ' → logprob: -19.375011444091797
    6. 'true' → logprob: -19.500011444091797
    7. '(True' → logprob: -19.625011444091797
    8. '               ' → logprob: -20.250011444091797
    9. '=True' → logprob: -21.000011444091797
    10. 'all' → logprob: -21.125011444091797

Token 482: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016877970192581415
    2. '
' → logprob: -6.876688003540039
    3. ' for' → logprob: -7.876688003540039
    4. '            
' → logprob: -9.126688003540039
    5. 'for' → logprob: -9.626688003540039
    6. '		' → logprob: -11.001688003540039
    7. '	       ' → logprob: -11.001688003540039
    8. ',' → logprob: -11.251688003540039
    9. '<|end|>' → logprob: -11.876688003540039
    10. '   ' → logprob: -12.001688003540039

Token 483: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5420303344726562
    2. '           ' → logprob: -1.0420303344726562
    3. ' for' → logprob: -3.6670303344726562
    4. '\n' → logprob: -4.417030334472656
    5. '    
' → logprob: -5.167030334472656
    6. '            
' → logprob: -5.292030334472656
    7. '  
' → logprob: -5.542030334472656
    8. '<|end|>' → logprob: -5.917030334472656
    9. ',' → logprob: -6.167030334472656
    10. ' 
' → logprob: -6.542030334472656

Token 484: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2157261073589325
    2. ' for' → logprob: -2.215726137161255
    3. '           ' → logprob: -2.465726137161255
    4. '            
' → logprob: -11.090725898742676
    5. '	for' → logprob: -12.840725898742676
    6. 'dx' → logprob: -13.215725898742676
    7. '
' → logprob: -14.090725898742676
    8. ' ' → logprob: -14.465725898742676
    9. '	       ' → logprob: -14.965725898742676
    10. '		' → logprob: -15.465725898742676

Token 485: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011619128286838531
    2. 'step' → logprob: -4.5116190910339355
    3. 's' → logprob: -7.7616190910339355
    4. 't' → logprob: -9.511619567871094
    5. 'st' → logprob: -10.011619567871094
    6. ' k' → logprob: -10.636619567871094
    7. ' step' → logprob: -13.136619567871094
    8. 'si' → logprob: -15.386619567871094
    9. 'Step' → logprob: -16.511619567871094
    10. 'ti' → logprob: -16.761619567871094

Token 486: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061984602361917496
    2. 'in' → logprob: -2.8119845390319824
    3. ' ' → logprob: -11.43698501586914
    4. '	in' → logprob: -12.43698501586914
    5. ',' → logprob: -14.31198501586914
    6. '1' → logprob: -14.93698501586914
    7. 'In' → logprob: -15.68698501586914
    8. ',in' → logprob: -16.18698501586914
    9. 'from' → logprob: -16.43698501586914
    10. 'import' → logprob: -16.43698501586914

Token 487: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -16.626928329467773
    4. '(range' → logprob: -16.751928329467773
    5. '1' → logprob: -17.376928329467773
    6. '[' → logprob: -18.251928329467773
    7. ' ' → logprob: -19.001928329467773
    8. '
' → logprob: -19.501928329467773
    9. '   ' → logprob: -19.626928329467773
    10. '  ' → logprob: -20.751928329467773

Token 488: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5305039882659912
    2. '(' → logprob: -1.0305039882659912
    3. 'steps' → logprob: -2.905503988265991
    4. ' steps' → logprob: -9.15550422668457
    5. ' ' → logprob: -10.78050422668457
    6. '10' → logprob: -12.28050422668457
    7. '0' → logprob: -12.28050422668457
    8. '(
' → logprob: -12.78050422668457
    9. ' (' → logprob: -13.28050422668457
    10. '   ' → logprob: -14.90550422668457

Token 489: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.004082909319549799
    2. '1' → logprob: -5.504082679748535
    3. ' steps' → logprob: -12.379082679748535
    4. '0' → logprob: -15.504082679748535
    5. '(' → logprob: -16.00408363342285
    6. '
' → logprob: -18.00408363342285
    7. ' ' → logprob: -18.62908363342285
    8. 'step' → logprob: -19.37908363342285
    9. 'Steps' → logprob: -19.50408363342285
    10. '   ' → logprob: -19.87908363342285

Token 490: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04002087563276291
    2. '):' → logprob: -3.4150209426879883
    3. '):
' → logprob: -5.290020942687988
    4. ' +' → logprob: -6.665020942687988
    5. '1' → logprob: -10.540020942687988
    6. ' ):' → logprob: -12.540020942687988
    7. '   ' → logprob: -13.165020942687988
    8. ':' → logprob: -13.665020942687988
    9. ')' → logprob: -13.915020942687988
    10. '+k' → logprob: -14.415020942687988

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.250001907348633
    4. '
' → logprob: -18.000001907348633
    5. '```' → logprob: -19.375001907348633
    6. '2' → logprob: -20.000001907348633
    7. '  ' → logprob: -20.625001907348633
    8. ')' → logprob: -20.750001907348633
    9. '0' → logprob: -21.625001907348633
    10. '

' → logprob: -21.750001907348633

Token 492: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04397708550095558
    2. '):' → logprob: -3.1689770221710205
    3. ':' → logprob: -7.5439772605896
    4. ':
' → logprob: -8.168976783752441
    5. '):
' → logprob: -9.543976783752441
    6. ',' → logprob: -10.418976783752441
    7. ' ):
' → logprob: -10.668976783752441
    8. '):

' → logprob: -11.793976783752441
    9. '():
' → logprob: -12.168976783752441
    10. '           ' → logprob: -12.293976783752441

Token 493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006530280690640211
    2. ' x' → logprob: -6.256530284881592
    3. ' s' → logprob: -6.506530284881592
    4. '                
' → logprob: -6.631530284881592
    5. '           ' → logprob: -7.506530284881592
    6. ' 
' → logprob: -8.631529808044434
    7. '	           ' → logprob: -8.881529808044434
    8. '<|end|>' → logprob: -8.881529808044434
    9. ' ' → logprob: -9.006529808044434
    10. '            
' → logprob: -9.131529808044434

Token 494: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.14663642644882202
    2. '               ' → logprob: -2.646636486053467
    3. 't' (adapté à ' t') → logprob: -3.771636486053467
    4. ' x' → logprob: -4.396636486053467
    5. ' p' → logprob: -5.021636486053467
    6. ' point' → logprob: -5.021636486053467
    7. ' pos' → logprob: -5.146636486053467
    8. 'pos' → logprob: -5.521636486053467
    9. 'x' → logprob: -6.021636486053467
    10. ' s' → logprob: -6.146636486053467

Token 495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34851038455963135
    2. '=' → logprob: -1.2235103845596313
    3. '=k' → logprob: -9.9735107421875
    4. '=float' → logprob: -12.3485107421875
    5. ' =
' → logprob: -12.3485107421875
    6. '=
' → logprob: -12.8485107421875
    7. ' ' → logprob: -13.4735107421875
    8. ')' → logprob: -13.7235107421875
    9. '<|end|>' → logprob: -13.8485107421875
    10. 'k' → logprob: -14.3485107421875

Token 496: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4740813970565796
    2. 'k' → logprob: -0.9740813970565796
    3. ' ' → logprob: -13.349081039428711
    4. ' float' → logprob: -13.474081039428711
    5. 'float' → logprob: -13.974081039428711
    6. '0' → logprob: -15.224081039428711
    7. '1' → logprob: -15.974081039428711
    8. '	k' → logprob: -16.47408103942871
    9. '(k' → logprob: -16.84908103942871
    10. ' (' → logprob: -17.47408103942871

Token 497: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.011051355861127377
    2. ' /' → logprob: -4.511051177978516
    3. '*' → logprob: -13.011051177978516
    4. '/(' → logprob: -14.261051177978516
    5. '/
' → logprob: -15.261051177978516
    6. ' *' → logprob: -16.011051177978516
    7. '/
/' → logprob: -16.136051177978516
    8. ' step' → logprob: -16.636051177978516
    9. '
' → logprob: -17.011051177978516
    10. ' ' → logprob: -17.136051177978516

Token 498: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.00010413920972496271
    2. ' steps' → logprob: -9.250103950500488
    3. 'float' → logprob: -11.750103950500488
    4. 'step' → logprob: -16.500104904174805
    5. 'Steps' → logprob: -18.875104904174805
    6. '_steps' → logprob: -19.000104904174805
    7. '.steps' → logprob: -19.250104904174805
    8. '(' → logprob: -19.250104904174805
    9. 'esteps' → logprob: -19.250104904174805
    10. '```' → logprob: -19.375104904174805

Token 499: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01737925596535206
    2. ' p' → logprob: -5.392379283905029
    3. ' x' → logprob: -5.392379283905029
    4. '                
' → logprob: -6.267379283905029
    5. 'p' → logprob: -6.767379283905029
    6. ' point' → logprob: -7.142379283905029
    7. '<|end|>' → logprob: -7.142379283905029
    8. ',' → logprob: -7.517379283905029
    9. ' ' → logprob: -7.767379283905029
    10. ' s' → logprob: -8.267378807067871

Token 501: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005604869220405817
    2. ' x' → logprob: -5.5056047439575195
    3. 'px' → logprob: -7.2556047439575195
    4. 'p' → logprob: -7.7556047439575195
    5. 'pt' → logprob: -8.25560474395752
    6. 'point' → logprob: -9.88060474395752
    7. ' px' → logprob: -10.00560474395752
    8. 'pos' → logprob: -11.50560474395752
    9. 'xp' → logprob: -12.00560474395752
    10. ' point' → logprob: -12.50560474395752

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1804777830839157
    2. ' =' → logprob: -1.8054777383804321
    3. ',' → logprob: -7.430477619171143
    4. '=a' → logprob: -9.3054780960083
    5. '=
' → logprob: -11.1804780960083
    6. ',a' → logprob: -11.3054780960083
    7. ',y' → logprob: -12.8054780960083
    8. '=p' → logprob: -13.0554780960083
    9. '=x' → logprob: -13.0554780960083
    10. '=(' → logprob: -13.1804780960083

Token 503: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078758880496025
    2. ' a' → logprob: -5.5040788650512695
    3. '(a' → logprob: -15.37907886505127
    4. '   ' → logprob: -16.379077911376953
    5. ' ' → logprob: -17.129077911376953
    6. '(' → logprob: -17.504077911376953
    7. '	a' → logprob: -18.504077911376953
    8. ' (' → logprob: -19.379077911376953
    9. '```' → logprob: -20.504077911376953
    10. '
' → logprob: -21.004077911376953

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003187459195032716
    2. '0' → logprob: -5.753187656402588
    3. '(' → logprob: -12.75318717956543
    4. ' ' → logprob: -13.50318717956543
    5. ' [' → logprob: -13.75318717956543
    6. '
' → logprob: -13.75318717956543
    7. '[
' → logprob: -13.87818717956543
    8. 'x' → logprob: -15.00318717956543
    9. '=' → logprob: -15.12818717956543
    10. 'import' → logprob: -15.25318717956543

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '
' → logprob: -15.375003814697266
    4. '   ' → logprob: -17.562503814697266
    5. '1' → logprob: -17.875003814697266
    6. '۰' → logprob: -18.687503814697266
    7. ' ' → logprob: -18.812503814697266
    8. '

' → logprob: -19.062503814697266
    9. '```' → logprob: -19.187503814697266
    10. ']' → logprob: -19.250003814697266

Token 506: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7254167795181274
    2. '*(' → logprob: -1.1004167795181274
    3. '+(' → logprob: -1.9754167795181274
    4. ' +' → logprob: -3.225416660308838
    5. '*' → logprob: -5.850416660308838
    6. ' +(' → logprob: -7.225416660308838
    7. ']+' → logprob: -7.850416660308838
    8. ']*(' → logprob: -8.725417137145996
    9. ')+(' → logprob: -8.850417137145996
    10. '(' → logprob: -9.350417137145996

Token 507: '(' (ID: 7)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.19838255643844604
    2. '(b' → logprob: -2.573382616043091
    3. ' (' → logprob: -2.823382616043091
    4. ' t' → logprob: -3.448382616043091
    5. '(t' → logprob: -4.573382377624512
    6. 'b' → logprob: -7.073382377624512
    7. '(a' → logprob: -7.323382377624512
    8. '(x' → logprob: -7.573382377624512
    9. ' b' → logprob: -9.698382377624512
    10. '(' → logprob: -10.323382377624512

Token 508: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0014805786777287722
    2. ' b' → logprob: -6.626480579376221
    3. '(b' → logprob: -9.501480102539062
    4. 't' → logprob: -9.876480102539062
    5. ' (' → logprob: -11.001480102539062
    6. ')b' → logprob: -12.001480102539062
    7. 'j' → logprob: -13.376480102539062
    8. ' t' → logprob: -13.376480102539062
    9. '   ' → logprob: -14.251480102539062
    10. ' ' → logprob: -15.001480102539062

Token 509: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0232619009912014
    2. '0' → logprob: -3.773261785507202
    3. '[
' → logprob: -11.773262023925781
    4. 'import' → logprob: -13.523262023925781
    5. '][' → logprob: -13.773262023925781
    6. '<|end|>' → logprob: -14.023262023925781
    7. '```' → logprob: -14.273262023925781
    8. 'x' → logprob: -14.398262023925781
    9. ')' → logprob: -14.398262023925781
    10. ')[' → logprob: -14.523262023925781

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.25
    4. '
' → logprob: -18.125
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -18.5
    7. '1' → logprob: -18.75
    8. '۰' → logprob: -19.0
    9. 'x' → logprob: -19.25
    10. '<|end|>' → logprob: -19.4375

Token 511: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000377049611415714
    2. '0' → logprob: -8.62537670135498
    3. '][' → logprob: -8.62537670135498
    4. '-' → logprob: -11.75037670135498
    5. ']' → logprob: -13.00037670135498
    6. '1' → logprob: -13.25037670135498
    7. ')[' → logprob: -13.50037670135498
    8. '[
' → logprob: -14.12537670135498
    9. 'x' → logprob: -14.25037670135498
    10. ']-' → logprob: -14.62537670135498

Token 512: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020461321400944144
    2. ' a' → logprob: -8.500205039978027
    3. '<|end|>' → logprob: -14.125205039978027
    4. ')' → logprob: -15.375205039978027
    5. ')a' → logprob: -15.750205039978027
    6. '<|end|>' → logprob: -17.37520408630371
    7. '	a' → logprob: -17.62520408630371
    8. ' ' → logprob: -18.75020408630371
    9. '[' → logprob: -19.50020408630371
    10. '0' → logprob: -20.25020408630371

Token 513: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1270192414522171
    2. '0' → logprob: -2.127019166946411
    3. ')' → logprob: -10.127018928527832
    4. ' ' → logprob: -10.752018928527832
    5. '[
' → logprob: -11.127018928527832
    6. 'x' → logprob: -12.752018928527832
    7. '
' → logprob: -13.127018928527832
    8. ' [' → logprob: -13.127018928527832
    9. '][' → logprob: -14.002018928527832
    10. '   ' → logprob: -14.127018928527832

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.125001907348633
    4. 'x' → logprob: -16.750001907348633
    5. 'i' → logprob: -17.625001907348633
    6. ')' → logprob: -17.875001907348633
    7. '۰' → logprob: -17.875001907348633
    8. ']' → logprob: -17.875001907348633
    9. '
' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.500001907348633

Token 515: '])*' (ID: 114661)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.00010342398309148848
    2. ')' → logprob: -9.250102996826172
    3. '[' → logprob: -12.750102996826172
    4. ')*(' → logprob: -13.375102996826172
    5. ']*' → logprob: -13.625102996826172
    6. '])*' → logprob: -14.750102996826172
    7. ' )' → logprob: -14.750102996826172
    8. ')t' → logprob: -15.125102996826172
    9. ')
' → logprob: -16.000102996826172
    10. '0' → logprob: -16.125102996826172

Token 516: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.547789674485102e-05
    2. ' t' → logprob: -10.250035285949707
    3. '	t' → logprob: -18.500036239624023
    4. '`t' → logprob: -18.500036239624023
    5. ')t' → logprob: -20.250036239624023
    6. '(t' → logprob: -20.875036239624023
    7. '<|end|>' → logprob: -21.875036239624023
    8. '
' → logprob: -22.500036239624023
    9. '_t' → logprob: -22.625036239624023
    10. '*t' → logprob: -22.625036239624023

Token 517: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8997435569763184
    2. '
' → logprob: -1.1497435569763184
    3. '<|end|>' → logprob: -1.3997435569763184
    4. ',y' → logprob: -4.149743556976318
    5. ',
' → logprob: -4.524743556976318
    6. '<|end|>' → logprob: -6.399743556976318
    7. ' ,' → logprob: -7.399743556976318
    8. '  
' → logprob: -8.399744033813477
    9. ' 
' → logprob: -9.274744033813477
    10. ' ' → logprob: -9.649744033813477

Token 518: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10113680362701416
    2. '<|end|>' → logprob: -2.7261366844177246
    3. ',
' → logprob: -4.226136684417725
    4. ',y' → logprob: -4.851136684417725
    5. ' ,' → logprob: -5.476136684417725
    6. '               ' → logprob: -6.601136684417725
    7. '
' → logprob: -6.851136684417725
    8. 'y' → logprob: -7.601136684417725
    9. ' y' → logprob: -8.226137161254883
    10. '<|end|>' → logprob: -8.476137161254883

Token 519: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.6337319016456604
    2. ' y' → logprob: -0.7587319016456604
    3. ' ' → logprob: -7.383731842041016
    4. ' 
' → logprob: -8.383731842041016
    5. 'x' → logprob: -9.508731842041016
    6. '                ' → logprob: -9.758731842041016
    7. '               ' → logprob: -9.758731842041016
    8. ' x' → logprob: -11.133731842041016
    9. 's' → logprob: -11.258731842041016
    10. '<|end|>' → logprob: -11.258731842041016

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860984906554222
    2. ' =' → logprob: -3.048609733581543
    3. '=a' → logprob: -11.673609733581543
    4. '<|end|>' → logprob: -12.048609733581543
    5. ',' → logprob: -12.923609733581543
    6. '=
' → logprob: -13.173609733581543
    7. '=b' → logprob: -13.923609733581543
    8. '=y' → logprob: -14.298609733581543
    9. ')' → logprob: -15.048609733581543
    10. '=A' → logprob: -15.423609733581543

Token 521: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011706985533237457
    2. ' a' → logprob: -6.751170635223389
    3. '(a' → logprob: -15.501171112060547
    4. '	a' → logprob: -16.376171112060547
    5. '   ' → logprob: -17.126171112060547
    6. ')a' → logprob: -18.126171112060547
    7. '#a' → logprob: -18.251171112060547
    8. ' ' → logprob: -18.501171112060547
    9. '_a' → logprob: -18.501171112060547
    10. 'а' → logprob: -18.751171112060547

Token 522: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4021237802808173e-05
    2. '(' → logprob: -12.125014305114746
    3. '1' → logprob: -12.250014305114746
    4. '0' → logprob: -13.000014305114746
    5. '.' → logprob: -14.000014305114746
    6. '```' → logprob: -16.37501335144043
    7. ' ' → logprob: -16.75001335144043
    8. 's' → logprob: -17.00001335144043
    9. '[
' → logprob: -17.12501335144043
    10. 'y' → logprob: -17.12501335144043

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010411443654447794
    2. '0' → logprob: -6.876040935516357
    3. '[' → logprob: -11.876041412353516
    4. '(' → logprob: -14.751041412353516
    5. '
' → logprob: -14.876041412353516
    6. ' ' → logprob: -15.376041412353516
    7. '```' → logprob: -16.501041412353516
    8. 'y' → logprob: -16.938541412353516
    9. '
' → logprob: -17.313541412353516
    10. '

' → logprob: -17.313541412353516

Token 524: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2912523150444031
    2. '+(' → logprob: -1.4162523746490479
    3. ')+(' → logprob: -4.916252136230469
    4. '+' → logprob: -6.041252136230469
    5. ']' → logprob: -8.291252136230469
    6. ')+' → logprob: -10.291252136230469
    7. ' +' → logprob: -10.791252136230469
    8. ' +(' → logprob: -11.541252136230469
    9. '+y' → logprob: -12.041252136230469
    10. '}+' → logprob: -12.166252136230469

Token 525: '(' (ID: 7)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015392655041068792
    2. '(a' → logprob: -6.50153923034668
    3. ' (' → logprob: -10.37653923034668
    4. '((' → logprob: -12.62653923034668
    5. '(p' → logprob: -13.12653923034668
    6. 'a' → logprob: -16.12653923034668
    7. '(B' → logprob: -16.25153923034668
    8. '   ' → logprob: -16.50153923034668
    9. '(t' → logprob: -16.87653923034668
    10. '(' → logprob: -17.50153923034668

Token 526: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.014121662825345993
    2. '(a' → logprob: -4.6391215324401855
    3. 'b' → logprob: -6.3891215324401855
    4. 'a' → logprob: -6.6391215324401855
    5. 'p' → logprob: -7.0141215324401855
    6. '(p' → logprob: -8.264122009277344
    7. ' (' → logprob: -9.014122009277344
    8. '[b' → logprob: -10.264122009277344
    9. '0' → logprob: -10.389122009277344
    10. '(' → logprob: -12.139122009277344

Token 527: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16171513497829437
    2. '1' → logprob: -1.9117151498794556
    3. '0' → logprob: -6.786715030670166
    4. '(' → logprob: -8.411715507507324
    5. ')' → logprob: -10.786715507507324
    6. '-' → logprob: -10.911715507507324
    7. ']' → logprob: -10.911715507507324
    8. '][' → logprob: -10.911715507507324
    9. ' ' → logprob: -11.411715507507324
    10. '
' → logprob: -11.536715507507324

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0714525654911995
    2. '0' → logprob: -2.6964526176452637
    3. '(' → logprob: -7.446452617645264
    4. '[' → logprob: -7.446452617645264
    5. '-' → logprob: -8.946452140808105
    6. ']' → logprob: -9.946452140808105
    7. '
' → logprob: -10.196452140808105
    8. ']*' → logprob: -10.321452140808105
    9. '```' → logprob: -10.571452140808105
    10. ']*(' → logprob: -11.196452140808105

Token 529: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.05267487093806267
    2. ')-' → logprob: -4.052674770355225
    3. '-' → logprob: -4.302674770355225
    4. ']*' → logprob: -4.552674770355225
    5. '0' → logprob: -5.302674770355225
    6. ']' → logprob: -6.177674770355225
    7. '[' → logprob: -6.677674770355225
    8. ']*(' → logprob: -7.552674770355225
    9. '()-' → logprob: -8.427675247192383
    10. ')' → logprob: -8.677675247192383

Token 530: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018334655091166496
    2. '(a' → logprob: -4.268334865570068
    3. '(b' → logprob: -5.768334865570068
    4. 'b' → logprob: -8.26833438873291
    5. '(' → logprob: -8.89333438873291
    6. '(p' → logprob: -9.01833438873291
    7. ' a' → logprob: -9.14333438873291
    8. 'p' → logprob: -9.26833438873291
    9. '(t' → logprob: -9.26833438873291
    10. '0' → logprob: -9.26833438873291

Token 531: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3380883038043976
    2. '1' → logprob: -1.9630882740020752
    3. '0' → logprob: -2.338088274002075
    4. ']*' → logprob: -3.963088274002075
    5. '-' → logprob: -4.588088512420654
    6. '(' → logprob: -5.463088512420654
    7. '*' → logprob: -5.588088512420654
    8. ')*' → logprob: -5.713088512420654
    9. ' ' → logprob: -6.588088512420654
    10. ']' → logprob: -6.588088512420654

Token 532: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716317031532526
    2. '1' → logprob: -5.006716251373291
    3. '-' → logprob: -14.88171672821045
    4. '[' → logprob: -15.00671672821045
    5. ' ' → logprob: -16.256715774536133
    6. '   ' → logprob: -17.131715774536133
    7. '```' → logprob: -17.131715774536133
    8. '
' → logprob: -17.319215774536133
    9. ']' → logprob: -17.819215774536133
    10. '
' → logprob: -18.194215774536133

Token 533: '])*' (ID: 114661)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.00012511172099038959
    2. ']*' → logprob: -9.62512493133545
    3. ')' → logprob: -10.37512493133545
    4. ')*(' → logprob: -10.75012493133545
    5. '])*' → logprob: -12.87512493133545
    6. '   ' → logprob: -13.25012493133545
    7. ' ' → logprob: -14.87512493133545
    8. ' )' → logprob: -14.87512493133545
    9. ')**' → logprob: -15.00012493133545
    10. '))*' → logprob: -15.75012493133545

Token 534: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0018734284676611423
    2. ' t' → logprob: -6.75187349319458
    3. '(t' → logprob: -7.50187349319458
    4. '(' → logprob: -9.251873016357422
    5. '*t' → logprob: -9.876873016357422
    6. ')t' → logprob: -13.876873016357422
    7. '`t' → logprob: -14.376873016357422
    8. ' (' → logprob: -14.501873016357422
    9. '((' → logprob: -14.751873016357422
    10. '	t' → logprob: -15.001873016357422

Token 535: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008498902898281813
    2. '<|end|>' → logprob: -8.000849723815918
    3. '                
' → logprob: -8.500849723815918
    4. '       ' → logprob: -9.500849723815918
    5. '           ' → logprob: -9.500849723815918
    6. ' if' → logprob: -9.750849723815918
    7. '
' → logprob: -10.625849723815918
    8. '  
' → logprob: -11.125849723815918
    9. ' 
' → logprob: -11.750849723815918
    10. '                   ' → logprob: -11.750849723815918

Token 537: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15408244729042053
    2. 'if' → logprob: -2.4040825366973877
    3. 'p' (adapté à ' p') → logprob: -3.6540825366973877
    4. ' p' → logprob: -4.154082298278809
    5. '               ' → logprob: -4.654082298278809
    6. ' point' → logprob: -7.029082298278809
    7. 'point' → logprob: -8.154082298278809
    8. 'pos' → logprob: -9.904082298278809
    9. 'pt' → logprob: -10.154082298278809
    10. ' pt' → logprob: -10.904082298278809

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00975868571549654
    2. ' =' → logprob: -4.634758472442627
    3. '=(' → logprob: -13.134758949279785
    4. '(' → logprob: -15.134758949279785
    5. '=
' → logprob: -16.00975799560547
    6. ')' → logprob: -16.13475799560547
    7. ',' → logprob: -17.00975799560547
    8. ')=' → logprob: -17.00975799560547
    9. ' =(' → logprob: -17.00975799560547
    10. '<|end|>' → logprob: -17.13475799560547

Token 539: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0010348338400945067
    2. ' (' → logprob: -7.001034736633301
    3. '(' → logprob: -9.0010347366333
    4. 'x' → logprob: -16.251035690307617
    5. '   ' → logprob: -18.876035690307617
    6. '(
' → logprob: -19.626035690307617
    7. ' ' → logprob: -19.876035690307617
    8. ' x' → logprob: -20.126035690307617
    9. '(t' → logprob: -20.376035690307617
    10. '(y' → logprob: -21.126035690307617

Token 540: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.0
    3. '	x' → logprob: -22.875
    4. '(x' → logprob: -23.875
    5. ')x' → logprob: -24.125
    6. '"x' → logprob: -25.25
    7. '{x' → logprob: -26.125
    8. '_x' → logprob: -26.5
    9. ' ' → logprob: -26.625
    10. '   ' → logprob: -27.0

Token 541: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38694632053375244
    2. ',y' → logprob: -1.1369463205337524
    3. ' ,' → logprob: -9.761946678161621
    4. ',p' → logprob: -11.761946678161621
    5. ',
' → logprob: -11.761946678161621
    6. '<|end|>' → logprob: -14.136946678161621
    7. ',Y' → logprob: -15.011946678161621
    8. ',x' → logprob: -15.386946678161621
    9. ',user' → logprob: -15.761946678161621
    10. ',n' → logprob: -16.136945724487305

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048637669533491135
    2. ')
' → logprob: -3.048637628555298
    3. ',' → logprob: -10.173637390136719
    4. ')

' → logprob: -12.048637390136719
    5. ',)' → logprob: -12.923637390136719
    6. ')
' → logprob: -13.173637390136719
    7. ' )' → logprob: -14.423637390136719
    8. ',
' → logprob: -14.548637390136719
    9. ',)
' → logprob: -14.923637390136719
    10. '),' → logprob: -15.923637390136719

Token 543: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000993272173218429
    2. '                
' → logprob: -7.875993251800537
    3. '<|end|>' → logprob: -8.000993728637695
    4. '           ' → logprob: -9.125993728637695
    5. ' if' → logprob: -9.625993728637695
    6. '
' → logprob: -10.750993728637695
    7. '<|end|>' → logprob: -11.125993728637695
    8. '                ' → logprob: -11.250993728637695
    9. '              ' → logprob: -11.750993728637695
    10. '            
' → logprob: -11.875993728637695

Token 544: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8270503878593445
    2. ' if' → logprob: -0.8270503878593445
    3. '               ' → logprob: -2.0770504474639893
    4. '           ' → logprob: -10.70205020904541
    5. '   ' → logprob: -14.20205020904541
    6. ' ' → logprob: -14.32705020904541
    7. '                
' → logprob: -14.45205020904541
    8. '	           ' → logprob: -14.45205020904541
    9. '	if' → logprob: -15.20205020904541
    10. '
' → logprob: -15.45205020904541

Token 545: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4742220938205719
    2. 'not' → logprob: -0.9742220640182495
    3. '(not' → logprob: -9.349222183227539
    4. '               ' → logprob: -9.974222183227539
    5. '                   ' → logprob: -12.474222183227539
    6. 'inside' → logprob: -13.099222183227539
    7. '!' → logprob: -13.474222183227539
    8. ' (' → logprob: -13.849222183227539
    9. '                ' → logprob: -13.974222183227539
    10. ' inside' → logprob: -14.599222183227539

Token 546: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.8590787649154663
    2. 'can' → logprob: -1.2340787649154663
    3. ' can' → logprob: -1.8590787649154663
    4. ' inside' → logprob: -2.234078884124756
    5. '(' → logprob: -4.109078884124756
    6. '(can' → logprob: -5.609078884124756
    7. ' (' → logprob: -6.109078884124756
    8. ' ' → logprob: -10.984078407287598
    9. 'Inside' → logprob: -11.109078407287598
    10. '	can' → logprob: -11.234078407287598

Token 547: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.0280383548888494e-06
    2. 'area' → logprob: -14.125000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_AREA' → logprob: -17.500001907348633
    5. '```' → logprob: -18.125001907348633
    6. 'Area' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '(area' → logprob: -18.875001907348633
    9. '(p' → logprob: -19.000001907348633
    10. '_are' → logprob: -19.250001907348633

Token 548: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.500033378601074
    3. ' (' → logprob: -12.250033378601074
    4. '(
' → logprob: -14.125033378601074
    5. ' or' → logprob: -15.500033378601074
    6. ')' → logprob: -16.87503433227539
    7. 'p' → logprob: -17.00003433227539
    8. '((' → logprob: -19.25003433227539
    9. 'or' → logprob: -19.37503433227539
    10. '(

' → logprob: -19.50003433227539

Token 549: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022828424349427223
    2. ' or' → logprob: -3.8978283405303955
    3. ' )' → logprob: -6.397828578948975
    4. 'or' → logprob: -7.397828578948975
    5. '):
' → logprob: -13.022828102111816
    6. '):' → logprob: -13.147828102111816
    7. '        ' → logprob: -15.147828102111816
    8. '    ' → logprob: -15.647828102111816
    9. '           ' → logprob: -15.647828102111816
    10. '	or' → logprob: -15.647828102111816

Token 550: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.004624749533832073
    2. 'or' → logprob: -5.379624843597412
    3. '	or' → logprob: -12.629624366760254
    4. '               ' → logprob: -15.004624366760254
    5. '           ' → logprob: -15.254624366760254
    6. ' ' → logprob: -15.879624366760254
    7. ':' → logprob: -16.50462532043457
    8. '              ' → logprob: -16.75462532043457
    9. '                   ' → logprob: -16.87962532043457
    10. ')' → logprob: -17.25462532043457

Token 551: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023246755823493004
    2. 'not' → logprob: -3.7732467651367188
    3. '(not' → logprob: -14.023246765136719
    4. '!' → logprob: -15.523246765136719
    5. ' ' → logprob: -16.39824676513672
    6. ' can' → logprob: -16.77324676513672
    7. '               ' → logprob: -17.39824676513672
    8. '
' → logprob: -17.77324676513672
    9. '   ' → logprob: -18.14824676513672
    10. ' or' → logprob: -18.39824676513672

Token 552: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.001170225441455841
    2. ' can' → logprob: -6.7511701583862305
    3. '(can' → logprob: -18.376171112060547
    4. '	can' → logprob: -18.501171112060547
    5. '.can' → logprob: -20.376171112060547
    6. '_can' → logprob: -20.751171112060547
    7. ' ' → logprob: -21.501171112060547
    8. 'could' → logprob: -22.501171112060547
    9. '   ' → logprob: -22.501171112060547
    10. '
' → logprob: -22.876171112060547

Token 553: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -1.9361264946837764e-07
    2. '_can' → logprob: -16.375
    3. '_have' → logprob: -16.875
    4. ' _' → logprob: -17.375
    5. 'be' → logprob: -17.875
    6. '_BE' → logprob: -18.375
    7. '_b' → logprob: -18.375
    8. 'Be' → logprob: -18.875
    9. ' be' → logprob: -19.375
    10. '_' → logprob: -19.375

Token 554: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -5.943783253314905e-05
    2. 'safe' → logprob: -9.750059127807617
    3. ' safe' → logprob: -13.875059127807617
    4. '_SAFE' → logprob: -16.625059127807617
    5. 'afe' → logprob: -17.375059127807617
    6. '.safe' → logprob: -18.375059127807617
    7. '_save' → logprob: -18.500059127807617
    8. '-safe' → logprob: -19.125059127807617
    9. '_' → logprob: -19.250059127807617
    10. '\' → logprob: -19.250059127807617

Token 555: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0006932547548785806
    2. '(' → logprob: -7.500693321228027
    3. ' (' → logprob: -8.875693321228027
    4. '(
' → logprob: -14.875693321228027
    5. ')' → logprob: -16.87569236755371
    6. '((' → logprob: -17.25069236755371
    7. '(P' → logprob: -17.25069236755371
    8. '(

' → logprob: -18.62569236755371
    9. '\(' → logprob: -18.87569236755371
    10. '```' → logprob: -19.12569236755371

Token 556: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.482821431243792e-05
    2. ' (' → logprob: -9.62508487701416
    3. '(' → logprob: -11.25008487701416
    4. ')' → logprob: -12.87508487701416
    5. ',p' → logprob: -13.75008487701416
    6. ',' → logprob: -13.75008487701416
    7. '(
' → logprob: -14.25008487701416
    8. '               ' → logprob: -17.000083923339844
    9. '                   ' → logprob: -17.250083923339844
    10. ')(' → logprob: -17.500083923339844

Token 557: ' monsters' (ID: 59311)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005667583085596561
    2. ' p' → logprob: -5.255667686462402
    3. 'mon' → logprob: -7.755667686462402
    4. '(p' → logprob: -12.755667686462402
    5. ' monsters' → logprob: -13.755667686462402
    6. ')' → logprob: -15.005667686462402
    7. '(mon' → logprob: -15.755667686462402
    8. '[' → logprob: -15.880667686462402
    9. '[p' → logprob: -16.130666732788086
    10. 'mons' → logprob: -16.255666732788086

Token 558: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47442296147346497
    2. '):' → logprob: -0.9744229316711426
    3. ')' → logprob: -8.0994234085083
    4. '):
' → logprob: -11.0994234085083
    5. '):

' → logprob: -11.2244234085083
    6. ':' → logprob: -12.0994234085083
    7. ':
' → logprob: -13.2244234085083
    8. '               ' → logprob: -13.3494234085083
    9. '                   ' → logprob: -13.4744234085083
    10. '():
' → logprob: -14.4744234085083

Token 559: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003984127659350634
    2. '               ' → logprob: -6.003983974456787
    3. '                       ' → logprob: -7.378983974456787
    4. ':
' → logprob: -8.253984451293945
    5. '                    
' → logprob: -8.503984451293945
    6. '                  ' → logprob: -9.128984451293945
    7. '                           ' → logprob: -9.628984451293945
    8. '
' → logprob: -10.128984451293945
    9. '):
' → logprob: -10.503984451293945
    10. ':' → logprob: -10.628984451293945

Token 560: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' (adapté à ' safe') → logprob: -0.0048262071795761585
    2. ' safe' → logprob: -5.754826068878174
    3. '                   ' → logprob: -7.004826068878174
    4. '
' → logprob: -7.254826068878174
    5. '               ' → logprob: -11.254826545715332
    6. '                       ' → logprob: -11.254826545715332
    7. '                    
' → logprob: -12.629826545715332
    8. '_safe' → logprob: -13.504826545715332
    9. '                        
' → logprob: -14.629826545715332
    10. '           ' → logprob: -14.754826545715332

Token 561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08446355909109116
    2. ' =' → logprob: -2.584463596343994
    3. '=False' → logprob: -5.209463596343994
    4. '=True' → logprob: -9.334463119506836
    5. '=
' → logprob: -13.459463119506836
    6. '=false' → logprob: -13.959463119506836
    7. '==' → logprob: -14.209463119506836
    8. '                   ' → logprob: -14.709463119506836
    9. '                       ' → logprob: -15.334463119506836
    10. '=None' → logprob: -15.709463119506836

Token 562: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. 'false' → logprob: -19.12502670288086
    4. '(False' → logprob: -19.87502670288086
    5. '=False' → logprob: -19.87502670288086
    6. 'break' → logprob: -20.00002670288086
    7. 'F' → logprob: -21.25002670288086
    8. 'FALSE' → logprob: -22.37502670288086
    9. '_false' → logprob: -22.50002670288086
    10. '
' → logprob: -23.12502670288086

Token 563: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.264322317088954e-05
    2. '               ' → logprob: -10.875052452087402
    3. '                       ' → logprob: -11.250052452087402
    4. '				' → logprob: -11.750052452087402
    5. '           ' → logprob: -12.625052452087402
    6. '<|end|>' → logprob: -13.000052452087402
    7. '                    
' → logprob: -13.500052452087402
    8. '                  ' → logprob: -13.625052452087402
    9. '                           ' → logprob: -13.750052452087402
    10. '		           ' → logprob: -13.875052452087402

Token 564: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.991464786347933e-05
    2. '               ' → logprob: -10.750060081481934
    3. '                    
' → logprob: -11.500060081481934
    4. '                       ' → logprob: -11.625060081481934
    5. '           ' → logprob: -12.250060081481934
    6. '<|end|>' → logprob: -12.500060081481934
    7. '				' → logprob: -12.625060081481934
    8. '                  ' → logprob: -13.000060081481934
    9. '		           ' → logprob: -13.750060081481934
    10. '                    ' → logprob: -14.000060081481934

Token 565: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06445246189832687
    2. '                   ' → logprob: -2.8144524097442627
    3. ' break' → logprob: -6.064452648162842
    4. '               ' → logprob: -9.439452171325684
    5. '	break' → logprob: -9.939452171325684
    6. '                       ' → logprob: -11.064452171325684
    7. '           ' → logprob: -11.939452171325684
    8. '                    
' → logprob: -13.314452171325684
    9. '                  ' → logprob: -13.939452171325684
    10. '                           ' → logprob: -13.939452171325684

Token 566: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001387850963510573
    2. '
' → logprob: -7.751388072967529
    3. '<|end|>' → logprob: -7.876388072967529
    4. ',' → logprob: -8.626387596130371
    5. '       ' → logprob: -9.251387596130371
    6. '            
' → logprob: -9.626387596130371
    7. '               ' → logprob: -10.251387596130371
    8. '                   ' → logprob: -10.626387596130371
    9. '  
' → logprob: -10.626387596130371
    10. '    
' → logprob: -10.876387596130371

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019293125660624355
    2. '       ' → logprob: -10.250192642211914
    3. '               ' → logprob: -10.375192642211914
    4. '<|end|>' → logprob: -10.500192642211914
    5. '          ' → logprob: -10.625192642211914
    6. '                   ' → logprob: -10.875192642211914
    7. '		' → logprob: -11.000192642211914
    8. '```' → logprob: -12.000192642211914
    9. '   ' → logprob: -12.125192642211914
    10. '            
' → logprob: -12.125192642211914

Token 568: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007962666451931
    2. 'if' (adapté à ' if') → logprob: -5.757962703704834
    3. '       ' → logprob: -6.007962703704834
    4. ' if' → logprob: -6.132962703704834
    5. '   ' → logprob: -9.632962226867676
    6. '```' → logprob: -11.257962226867676
    7. '<|end|>' → logprob: -11.507962226867676
    8. 'If' → logprob: -11.757962226867676
    9. '          ' → logprob: -12.382962226867676
    10. '		' → logprob: -12.382962226867676

Token 569: ' safe' (ID: 7703)
  Prédit: ' safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.019226010888814926
    2. 'safe' → logprob: -4.39422607421875
    3. ' not' → logprob: -5.01922607421875
    4. 'not' → logprob: -9.39422607421875
    5. '_safe' → logprob: -15.01922607421875
    6. 's' → logprob: -15.39422607421875
    7. ' saf' → logprob: -15.64422607421875
    8. ' ' → logprob: -16.01922607421875
    9. ' ' → logprob: -16.01922607421875
    10. '   ' → logprob: -16.51922607421875

Token 570: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2021694779396057
    2. ':
' → logprob: -1.702169418334961
    3. '               ' → logprob: -8.202169418334961
    4. '):
' → logprob: -8.452169418334961
    5. '           ' → logprob: -8.952169418334961
    6. '       ' → logprob: -9.952169418334961
    7. '):' → logprob: -10.452169418334961
    8. '[' → logprob: -11.327169418334961
    9. '   ' → logprob: -11.702169418334961
    10. ',' → logprob: -11.702169418334961

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007125350181013346
    2. ' graph' → logprob: -5.132125377655029
    3. '           ' → logprob: -7.882125377655029
    4. '	graph' → logprob: -8.007124900817871
    5. '   ' → logprob: -8.632124900817871
    6. 'graph' → logprob: -9.132124900817871
    7. '	           ' → logprob: -9.632124900817871
    8. '	       ' → logprob: -9.882124900817871
    9. '       ' → logprob: -10.507124900817871
    10. ',' → logprob: -11.507124900817871

Token 572: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3676985502243042
    2. 'graph' (adapté à ' graph') → logprob: -1.2426985502243042
    3. '   ' → logprob: -4.367698669433594
    4. ' dist' → logprob: -5.992698669433594
    5. '               ' → logprob: -6.867698669433594
    6. 'dist' → logprob: -6.992698669433594
    7. 'distance' → logprob: -7.617698669433594
    8. '	graph' → logprob: -7.867698669433594
    9. ' distance' → logprob: -7.992698669433594
    10. ' cost' → logprob: -8.242698669433594

Token 573: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.625000953674316
    4. ')[' → logprob: -16.75
    5. '[a' → logprob: -16.875
    6. '[j' → logprob: -17.625
    7. '][' → logprob: -17.75
    8. '.setdefault' → logprob: -17.75
    9. '[I' → logprob: -18.0
    10. '   ' → logprob: -18.0

Token 574: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.018345659598708153
    2. '.' → logprob: -4.643345832824707
    3. '.append' → logprob: -4.768345832824707
    4. ').' → logprob: -10.143345832824707
    5. '.app' → logprob: -12.643345832824707
    6. ']' → logprob: -12.768345832824707
    7. '           ' → logprob: -12.893345832824707
    8. '   ' → logprob: -13.018345832824707
    9. ' .' → logprob: -13.143345832824707
    10. '.setdefault' → logprob: -14.018345832824707

Token 575: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -14.750000953674316
    3. ' append' → logprob: -15.500000953674316
    4. 'app' → logprob: -19.125
    5. 'appen' → logprob: -19.375
    6. 'Append' → logprob: -20.0
    7. '_append' → logprob: -20.625
    8. '	append' → logprob: -21.25
    9. 'push' → logprob: -21.375
    10. 'he' → logprob: -21.75

Token 576: '((' (ID: 2054)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -8.065608562901616e-05
    2. '((' → logprob: -9.750081062316895
    3. 'j' → logprob: -10.875081062316895
    4. '(' → logprob: -12.750081062316895
    5. ' (' → logprob: -15.125081062316895
    6. '(
' → logprob: -15.500081062316895
    7. ',j' → logprob: -16.750080108642578
    8. ' j' → logprob: -17.875080108642578
    9. '(i' → logprob: -18.625080108642578
    10. '	j' → logprob: -19.000080108642578

Token 577: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6405310816480778e-05
    2. ' j' → logprob: -11.250016212463379
    3. '   ' → logprob: -12.625016212463379
    4. '	j' → logprob: -17.375017166137695
    5. ',j' → logprob: -18.375017166137695
    6. '  ' → logprob: -18.750017166137695
    7. '
' → logprob: -18.750017166137695
    8. ' ' → logprob: -18.875017166137695
    9. '           ' → logprob: -19.125017166137695
    10. '    ' → logprob: -19.375017166137695

Token 578: ',length' (ID: 133718)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9650025428272784e-05
    2. ' ,' → logprob: -10.750040054321289
    3. ',length' → logprob: -11.375040054321289
    4. ',
' → logprob: -13.000040054321289
    5. ',float' → logprob: -13.125040054321289
    6. ',int' → logprob: -14.500040054321289
    7. ',d' → logprob: -15.125040054321289
    8. ',len' → logprob: -15.125040054321289
    9. ',(' → logprob: -15.625040054321289
    10. ',n' → logprob: -15.750040054321289

Token 579: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08993620425462723
    2. '))' → logprob: -2.4649362564086914
    3. ' ,' → logprob: -7.339936256408691
    4. ' ))' → logprob: -8.964936256408691
    5. ',
' → logprob: -9.589936256408691
    6. ',))
' → logprob: -10.089936256408691
    7. '))
' → logprob: -11.589936256408691
    8. ')' → logprob: -11.714936256408691
    9. '<|end|>' → logprob: -11.714936256408691
    10. ',k' → logprob: -11.839936256408691

Token 580: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.137130498653278e-05
    2. '<|end|>' → logprob: -9.750081062316895
    3. '           ' → logprob: -11.500081062316895
    4. '              ' → logprob: -12.875081062316895
    5. '       ' → logprob: -13.125081062316895
    6. ' graph' → logprob: -13.375081062316895
    7. '	graph' → logprob: -13.875081062316895
    8. ')' → logprob: -14.000081062316895
    9. ' and' → logprob: -14.250081062316895
    10. '   ' → logprob: -14.250081062316895

Token 581: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0809791311621666
    2. ' graph' → logprob: -2.580979108810425
    3. '               ' → logprob: -6.205979347229004
    4. '	graph' → logprob: -9.705979347229004
    5. '           ' → logprob: -12.205979347229004
    6. '       ' → logprob: -13.705979347229004
    7. '(graph' → logprob: -13.705979347229004
    8. '   ' → logprob: -13.830979347229004
    9. '_graph' → logprob: -15.455979347229004
    10. '.graph' → logprob: -16.330978393554688

Token 582: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20142045617103577
    2. '[j' → logprob: -1.7014204263687134
    3. '[' → logprob: -12.076420783996582
    4. '][' → logprob: -14.451420783996582
    5. ' [' → logprob: -15.451420783996582
    6. ')[' → logprob: -15.951420783996582
    7. 'j' → logprob: -16.451419830322266
    8. 'i' → logprob: -16.451419830322266
    9. '

' → logprob: -17.201419830322266
    10. '```' → logprob: -17.201419830322266

Token 583: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.10624358057975769
    2. ').' → logprob: -2.73124361038208
    3. '.append' → logprob: -3.35624361038208
    4. '.' → logprob: -7.48124361038208
    5. ',' → logprob: -9.606243133544922
    6. ']' → logprob: -9.731243133544922
    7. ')' → logprob: -10.481243133544922
    8. '   ' → logprob: -11.356243133544922
    9. '.app' → logprob: -11.356243133544922
    10. ',j' → logprob: -11.731243133544922

Token 584: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.5
    3. 'app' → logprob: -16.375
    4. '.append' → logprob: -16.75
    5. 'appen' → logprob: -18.375
    6. '	append' → logprob: -19.375
    7. 'add' → logprob: -21.875
    8. '_append' → logprob: -22.75
    9. 'Append' → logprob: -23.0
    10. '```' → logprob: -23.375

Token 585: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.10026220977306366
    2. '((' → logprob: -2.35026216506958
    3. '(' → logprob: -10.725262641906738
    4. ' (' → logprob: -10.725262641906738
    5. '(
' → logprob: -12.100262641906738
    6. '   ' → logprob: -12.350262641906738
    7. '(I' → logprob: -13.975262641906738
    8. '```' → logprob: -14.725262641906738
    9. ' ' → logprob: -16.475261688232422
    10. '  ' → logprob: -16.975261688232422

Token 586: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0564331205387134e-05
    2. ' i' → logprob: -11.50001049041748
    3. ',i' → logprob: -14.87501049041748
    4. '   ' → logprob: -17.000011444091797
    5. '(i' → logprob: -17.500011444091797
    6. '	i' → logprob: -18.750011444091797
    7. '
' → logprob: -19.125011444091797
    8. ')i' → logprob: -19.250011444091797
    9. ' ' → logprob: -19.375011444091797
    10. ',' → logprob: -19.500011444091797

Token 587: ',length' (ID: 133718)
  Prédit: ',length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',length' → logprob: -0.04860541597008705
    2. ',' → logprob: -3.048605442047119
    3. ',(' → logprob: -11.923604965209961
    4. ',len' → logprob: -12.548604965209961
    5. ' ,' → logprob: -12.798604965209961
    6. ',
' → logprob: -13.298604965209961
    7. '[length' → logprob: -13.423604965209961
    8. ',l' → logprob: -14.548604965209961
    9. ',line' → logprob: -15.173604965209961
    10. '(length' → logprob: -15.798604965209961

Token 588: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000844172143843025
    2. ')' → logprob: -7.1258440017700195
    3. ' ))' → logprob: -10.25084400177002
    4. '))
' → logprob: -12.87584400177002
    5. ')))' → logprob: -14.25084400177002
    6. ' )' → logprob: -14.62584400177002
    7. '));' → logprob: -15.75084400177002
    8. '),' → logprob: -16.000844955444336
    9. '               ' → logprob: -16.625844955444336
    10. ')}' → logprob: -16.875844955444336

Token 589: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7768830060958862
    2. 'def' → logprob: -0.9018830060958862
    3. '
' → logprob: -2.776883125305176
    4. '```' → logprob: -3.276883125305176
    5. 'd' → logprob: -4.776883125305176
    6. '   ' → logprob: -4.901883125305176
    7. 'import' → logprob: -5.276883125305176
    8. '    
' → logprob: -5.526883125305176
    9. 'heap' → logprob: -5.901883125305176
    10. ' dist' → logprob: -6.651883125305176

Token 590: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005002243909984827
    2. '   ' → logprob: -5.755002021789551
    3. 'import' → logprob: -7.630002021789551
    4. ' dist' → logprob: -7.880002021789551
    5. 'heap' → logprob: -8.25500202178955
    6. 'pq' → logprob: -8.38000202178955
    7. 'queue' → logprob: -8.38000202178955
    8. 'def' → logprob: -9.00500202178955
    9. '```' → logprob: -10.38000202178955
    10. 'start' → logprob: -10.50500202178955

Token 591: ' Start' (ID: 7972)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0006217729533091187
    2. 'import' → logprob: -8.125621795654297
    3. 'pq' → logprob: -9.250621795654297
    4. 'queue' → logprob: -9.750621795654297
    5. ' dist' → logprob: -10.125621795654297
    6. 'heap' → logprob: -10.250621795654297
    7. 'start' → logprob: -10.250621795654297
    8. '#' → logprob: -10.500621795654297
    9. 'q' → logprob: -11.625621795654297
    10. 'def' → logprob: -12.000621795654297

Token 592: ' nodes' (ID: 15749)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01638096012175083
    2. ' dist' → logprob: -4.266380786895752
    3. 'import' → logprob: -6.891380786895752
    4. '_dist' → logprob: -8.14138126373291
    5. ' =' → logprob: -8.39138126373291
    6. '   ' → logprob: -8.89138126373291
    7. 'd' → logprob: -9.26638126373291
    8. 'idx' → logprob: -9.39138126373291
    9. '    
' → logprob: -10.01638126373291
    10. 'points' → logprob: -10.01638126373291

Token 593: ' indices' (ID: 30378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14935491979122162
    2. 'start' → logprob: -2.399354934692383
    3. 'dist' → logprob: -3.524354934692383
    4. ' start' → logprob: -5.399354934692383
    5. 'import' → logprob: -5.524354934692383
    6. ' dist' → logprob: -6.149354934692383
    7. 'queue' → logprob: -6.149354934692383
    8. 'pq' → logprob: -6.774354934692383
    9. 'heap' → logprob: -6.899354934692383
    10. 'q' → logprob: -7.024354934692383

Token 594: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03554818406701088
    2. ' start' → logprob: -3.910548210144043
    3. '   ' → logprob: -4.910548210144043
    4. '=' → logprob: -5.785548210144043
    5. ' =' → logprob: -6.160548210144043
    6. '[start' → logprob: -7.035548210144043
    7. '=start' → logprob: -8.035548210144043
    8. 's' → logprob: -8.035548210144043
    9. '0' → logprob: -8.785548210144043
    10. 'starts' → logprob: -8.910548210144043

Token 595: '   ' (ID: 271)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.02945191226899624
    2. ' start' → logprob: -4.529451847076416
    3. 'starts' → logprob: -5.279451847076416
    4. ' =' → logprob: -5.529451847076416
    5. '=' → logprob: -5.654451847076416
    6. '[start' → logprob: -6.029451847076416
    7. 's' → logprob: -6.654451847076416
    8. '=start' → logprob: -7.779451847076416
    9. 'for' → logprob: -7.904451847076416
    10. ' starts' → logprob: -8.029452323913574

Token 596: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.007760181091725826
    2. ' start' → logprob: -4.882760047912598
    3. 'starts' → logprob: -8.882760047912598
    4. ' starts' → logprob: -11.632760047912598
    5. 's' → logprob: -12.757760047912598
    6. '   ' → logprob: -13.882760047912598
    7. '```' → logprob: -13.882760047912598
    8. '[start' → logprob: -14.507760047912598
    9. 'end' → logprob: -15.632760047912598
    10. 'import' → logprob: -15.882760047912598

Token 597: '_ids' (ID: 17465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.057323932647705
    2. '_indices' → logprob: -1.182323932647705
    3. '=' → logprob: -1.432323932647705
    4. ' =' → logprob: -2.307323932647705
    5. '_idxs' → logprob: -5.557323932647705
    6. 'indices' → logprob: -6.057323932647705
    7. '_inds' → logprob: -8.057323455810547
    8. '_idx' → logprob: -8.182323455810547
    9. '_ids' → logprob: -8.307323455810547
    10. '_nodes' → logprob: -8.807323455810547

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25204193592071533
    2. '=' → logprob: -1.5020419359207153
    3. ' =[' → logprob: -9.627041816711426
    4. '=[' → logprob: -10.502041816711426
    5. '=[]' → logprob: -11.127041816711426
    6. ',' → logprob: -13.127041816711426
    7. '[' → logprob: -14.377041816711426
    8. '=set' → logprob: -15.252041816711426
    9. ' =
' → logprob: -15.377041816711426
    10. '=[
' → logprob: -15.877041816711426

Token 599: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01984337531030178
    2. '[i' → logprob: -4.019843578338623
    3. ' [' → logprob: -6.519843578338623
    4. '[]' → logprob: -9.644843101501465
    5. '[s' → logprob: -10.394843101501465
    6. '[idx' → logprob: -10.894843101501465
    7. '[]
' → logprob: -10.894843101501465
    8. '[node' → logprob: -11.269843101501465
    9. '[n' → logprob: -11.519843101501465
    10. '[j' → logprob: -11.894843101501465

Token 600: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18291960656642914
    2. 'nodes' → logprob: -1.9329196214675903
    3. '0' → logprob: -4.307919502258301
    4. ' nodes' → logprob: -5.307919502258301
    5. ' i' → logprob: -5.557919502258301
    6. 'idx' → logprob: -10.1829195022583
    7. '	nodes' → logprob: -10.5579195022583
    8. ' ' → logprob: -10.9329195022583
    9. '(nodes' → logprob: -10.9329195022583
    10. 'node' → logprob: -11.6829195022583

Token 601: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1002412959933281
    2. 'for' → logprob: -2.350241184234619
    3. ' ' → logprob: -11.100241661071777
    4. '
' → logprob: -11.475241661071777
    5. ' 
' → logprob: -12.850241661071777
    6. '	for' → logprob: -13.350241661071777
    7. '   ' → logprob: -13.725241661071777
    8. '        ' → logprob: -14.725241661071777
    9. '       ' → logprob: -14.975241661071777
    10. '  ' → logprob: -15.225241661071777

Token 602: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006883976515382528
    2. ' i' → logprob: -5.0068840980529785
    3. 'range' → logprob: -9.50688362121582
    4. 'x' → logprob: -10.38188362121582
    5. ',' → logprob: -10.38188362121582
    6. ' range' → logprob: -11.50688362121582
    7. '0' → logprob: -12.00688362121582
    8. ',i' → logprob: -12.50688362121582
    9. ' ' → logprob: -12.63188362121582
    10. 'node' → logprob: -12.75688362121582

Token 603: ',p' (ID: 14835)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12917234003543854
    2. ' in' → logprob: -2.6291723251342773
    3. ',' → logprob: -3.6291723251342773
    4. ',n' → logprob: -4.004172325134277
    5. ',node' → logprob: -5.629172325134277
    6. ',x' → logprob: -8.629172325134277
    7. ',in' → logprob: -9.004172325134277
    8. ',p' → logprob: -9.004172325134277
    9. ',v' → logprob: -9.879172325134277
    10. 'n' → logprob: -9.879172325134277

Token 604: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17449669539928436
    2. ' in' → logprob: -1.9244966506958008
    3. ',' → logprob: -4.299496650695801
    4. ',p' → logprob: -7.799496650695801
    5. ',in' → logprob: -9.0494966506958
    6. 'n' → logprob: -11.1744966506958
    7. ',n' → logprob: -11.2994966506958
    8. ',i' → logprob: -11.4244966506958
    9. ',value' → logprob: -12.2994966506958
    10. ' ,' → logprob: -12.2994966506958

Token 605: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.018165510147809982
    2. ' enumerate' → logprob: -4.018165588378906
    3. 'range' → logprob: -11.893165588378906
    4. '
' → logprob: -11.893165588378906
    5. ',' → logprob: -14.893165588378906
    6. 'nodes' → logprob: -15.143165588378906
    7. 'en' → logprob: -15.268165588378906
    8. '```' → logprob: -15.518165588378906
    9. 'enum' → logprob: -15.768165588378906
    10. 'in' → logprob: -15.893165588378906

Token 606: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.6387025117874146
    2. 'nodes' → logprob: -0.7637025117874146
    3. ' nodes' → logprob: -5.138702392578125
    4. 'start' → logprob: -9.638702392578125
    5. '	nodes' → logprob: -10.138702392578125
    6. '(n' → logprob: -10.888702392578125
    7. '(start' → logprob: -11.138702392578125
    8. ')' → logprob: -11.138702392578125
    9. '([' → logprob: -11.638702392578125
    10. ' (' → logprob: -11.888702392578125

Token 607: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3186163008213043
    2. ')' → logprob: -1.443616271018982
    3. 'if' → logprob: -3.3186163902282715
    4. '()' → logprob: -7.8186163902282715
    5. ' )' → logprob: -10.193615913391113
    6. ' ' → logprob: -10.193615913391113
    7. '   ' → logprob: -10.318615913391113
    8. 'p' → logprob: -11.193615913391113
    9. ']' → logprob: -11.693615913391113
    10. '	if' → logprob: -11.818615913391113

Token 608: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16022604703903198
    2. 'if' → logprob: -1.9102261066436768
    3. ' in' → logprob: -14.410225868225098
    4. ' ' → logprob: -14.785225868225098
    5. 'in' → logprob: -14.785225868225098
    6. '[:' → logprob: -15.535225868225098
    7. '   ' → logprob: -15.785225868225098
    8. '	if' → logprob: -16.660226821899414
    9. ' for' → logprob: -17.410226821899414
    10. 'for' → logprob: -18.035226821899414

Token 609: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.025947708636522293
    2. 'abs' → logprob: -4.275947570800781
    3. ' p' → logprob: -5.150947570800781
    4. '0' → logprob: -5.275947570800781
    5. ' abs' → logprob: -7.525947570800781
    6. ' ' → logprob: -8.525947570800781
    7. '(' → logprob: -10.650947570800781
    8. '(p' → logprob: -11.150947570800781
    9. '(abs' → logprob: -11.275947570800781
    10. ' (' → logprob: -12.150947570800781

Token 610: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. ' [' → logprob: -12.500004768371582
    3. '0' → logprob: -14.750004768371582
    4. '(' → logprob: -15.750004768371582
    5. '[
' → logprob: -15.750004768371582
    6. '==' → logprob: -16.0000057220459
    7. '```' → logprob: -16.0000057220459
    8. 'import' → logprob: -16.1250057220459
    9. '][' → logprob: -16.1250057220459
    10. ' ' → logprob: -17.1250057220459

Token 611: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004630907438695431
    2. ' start' → logprob: -5.379631042480469
    3. 'set' → logprob: -11.879631042480469
    4. '[start' → logprob: -13.504631042480469
    5. '(start' → logprob: -14.004631042480469
    6. '   ' → logprob: -14.379631042480469
    7. '
' → logprob: -15.004631042480469
    8. ' ' → logprob: -15.254631042480469
    9. '	start' → logprob: -16.12963104248047
    10. ' set' → logprob: -16.87963104248047

Token 612: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.2664456789934775e-06
    2. 'points' → logprob: -14.125000953674316
    3. '_positions' → logprob: -16.000001907348633
    4. '_ids' → logprob: -16.000001907348633
    5. 's' → logprob: -16.125001907348633
    6. 'Points' → logprob: -16.875001907348633
    7. '_POINTS' → logprob: -17.000001907348633
    8. '_nodes' → logprob: -17.125001907348633
    9. '```' → logprob: -18.000001907348633
    10. ' points' → logprob: -18.000001907348633

Token 613: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005691178957931697
    2. ' ]' → logprob: -7.5005693435668945
    3. ']
' → logprob: -11.375569343566895
    4. '   ' → logprob: -13.250569343566895
    5. ']

' → logprob: -13.500569343566895
    6. ' and' → logprob: -14.125569343566895
    7. ' or' → logprob: -14.875569343566895
    8. '()]' → logprob: -16.125568389892578
    9. ')]' → logprob: -16.500568389892578
    10. '`]' → logprob: -16.750568389892578

Token 614: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1075984537601471
    2. 'distance' → logprob: -2.8575985431671143
    3. '```' → logprob: -4.232598304748535
    4. '   ' → logprob: -4.357598304748535
    5. ' distances' → logprob: -4.857598304748535
    6. 'd' → logprob: -5.732598304748535
    7. 'end' → logprob: -6.482598304748535
    8. '
' → logprob: -6.857598304748535
    9. ' dist' → logprob: -7.107598304748535
    10. '<|end|>' → logprob: -7.482598304748535

Token 615: ' end' (ID: 1268)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08533205091953278
    2. 'end' (adapté à ' end') → logprob: -2.835332155227661
    3. 'import' → logprob: -4.835331916809082
    4. 'distance' → logprob: -5.335331916809082
    5. '#' → logprob: -5.585331916809082
    6. '   ' → logprob: -5.585331916809082
    7. ' dist' → logprob: -7.085331916809082
    8. 'queue' → logprob: -7.710331916809082
    9. 'heap' → logprob: -7.960331916809082
    10. '```' → logprob: -8.335331916809082

Token 616: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -2.1888679839321412e-05
    2. '_indices' → logprob: -11.625021934509277
    3. '_' → logprob: -12.000021934509277
    4. 's' → logprob: -13.125021934509277
    5. '_points' → logprob: -13.875021934509277
    6. '```' → logprob: -14.125021934509277
    7. '_idxs' → logprob: -14.375021934509277
    8. '_i' → logprob: -14.875021934509277
    9. '
' → logprob: -15.125021934509277
    10. '_nodes' → logprob: -15.375021934509277

Token 617: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326448917388916
    2. '=' → logprob: -1.3132644891738892
    3. ' =[' → logprob: -12.938264846801758
    4. '=[' → logprob: -15.813264846801758
    5. '=[]' → logprob: -16.313264846801758
    6. ' =
' → logprob: -17.188264846801758
    7. '＝' → logprob: -17.688264846801758
    8. '=

' → logprob: -18.188264846801758
    9. ' ' → logprob: -18.313264846801758
    10. ',' → logprob: -18.813264846801758

Token 618: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12729983031749725
    2. ' [' → logprob: -2.1272997856140137
    3. '{i' → logprob: -8.377300262451172
    4. '[' → logprob: -9.377300262451172
    5. '{' → logprob: -10.627300262451172
    6. '[j' → logprob: -11.627300262451172
    7. ' {' → logprob: -11.627300262451172
    8. ' ' → logprob: -12.752300262451172
    9. ' set' → logprob: -13.252300262451172
    10. '   ' → logprob: -13.252300262451172

Token 619: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.726595241460018e-05
    2. ' i' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.87503719329834
    4. '{i' → logprob: -15.62503719329834
    5. '[i' → logprob: -15.75003719329834
    6. '       ' → logprob: -16.125038146972656
    7. '     ' → logprob: -16.625038146972656
    8. 'node' → logprob: -16.750038146972656
    9. 'nodes' → logprob: -16.750038146972656
    10. '           ' → logprob: -16.875038146972656

Token 620: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018153101205825806
    2. 'for' → logprob: -4.018153190612793
    3. '(p' → logprob: -13.143153190612793
    4. ' ' → logprob: -15.143153190612793
    5. 'p' → logprob: -15.393153190612793
    6. '	for' → logprob: -15.643153190612793
    7. '
' → logprob: -15.768153190612793
    8. ' 
' → logprob: -16.518152236938477
    9. ' in' → logprob: -16.893152236938477
    10. '   ' → logprob: -16.893152236938477

Token 621: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6935142874717712
    2. 'i' → logprob: -0.9435142874717712
    3. ' range' → logprob: -2.568514347076416
    4. 'enumer' → logprob: -4.318514347076416
    5. ' i' → logprob: -4.943514347076416
    6. 'p' → logprob: -5.318514347076416
    7. 'node' → logprob: -6.193514347076416
    8. ' ' → logprob: -6.693514347076416
    9. 'nodes' → logprob: -6.818514347076416
    10. ' p' → logprob: -6.818514347076416

Token 622: ',p' (ID: 14835)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5348740220069885
    2. 'for' → logprob: -1.6598739624023438
    3. ',p' → logprob: -2.2848739624023438
    4. ' in' → logprob: -2.4098739624023438
    5. ',' → logprob: -4.409873962402344
    6. 'p' → logprob: -4.409873962402344
    7. ' for' → logprob: -5.284873962402344
    8. ',n' → logprob: -6.284873962402344
    9. ',node' → logprob: -7.534873962402344
    10. '
' → logprob: -9.034873962402344

Token 623: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519761621952057
    2. 'in' → logprob: -1.5019761323928833
    3. 'import' → logprob: -10.251976013183594
    4. ' ' → logprob: -11.876976013183594
    5. '```' → logprob: -14.126976013183594
    6. '   ' → logprob: -14.876976013183594
    7. '
' → logprob: -14.876976013183594
    8. '  ' → logprob: -15.001976013183594
    9. '[' → logprob: -15.189476013183594
    10. ')' → logprob: -15.439476013183594

Token 624: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00021188464597798884
    2. ' enumerate' → logprob: -8.500211715698242
    3. 'nodes' → logprob: -11.750211715698242
    4. 'end' → logprob: -16.125211715698242
    5. '(nodes' → logprob: -16.375211715698242
    6. 'enum' → logprob: -16.625211715698242
    7. '[end' → logprob: -16.875211715698242
    8. 'en' → logprob: -17.125211715698242
    9. '[(' → logprob: -17.125211715698242
    10. 'indices' → logprob: -17.125211715698242

Token 625: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.10024075955152512
    2. 'nodes' → logprob: -2.350240707397461
    3. ' nodes' → logprob: -10.850240707397461
    4. 'graph' → logprob: -12.225240707397461
    5. '(graph' → logprob: -12.600240707397461
    6. '(end' → logprob: -13.100240707397461
    7. '	nodes' → logprob: -13.475240707397461
    8. '(node' → logprob: -14.350240707397461
    9. 'end' → logprob: -14.350240707397461
    10. '
' → logprob: -14.725240707397461

Token 626: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0015041481237858534
    2. 'if' → logprob: -6.501503944396973
    3. ' in' → logprob: -13.626503944396973
    4. ')' → logprob: -15.001503944396973
    5. ' ' → logprob: -16.50150489807129
    6. ',' → logprob: -17.12650489807129
    7. 'in' → logprob: -17.50150489807129
    8. ' for' → logprob: -17.87650489807129
    9. '
' → logprob: -18.00150489807129
    10. ']' → logprob: -18.37650489807129

Token 627: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31329116225242615
    2. 'if' → logprob: -1.3132911920547485
    3. 'in' → logprob: -11.063291549682617
    4. ' in' → logprob: -11.563291549682617
    5. '   ' → logprob: -13.313291549682617
    6. '        ' → logprob: -14.563291549682617
    7. '    ' → logprob: -14.688291549682617
    8. ' ' → logprob: -14.813291549682617
    9. 'import' → logprob: -14.813291549682617
    10. '	if' → logprob: -16.063291549682617

Token 628: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08894862979650497
    2. ' p' → logprob: -2.4639487266540527
    3. '(p' → logprob: -12.713948249816895
    4. '(' → logprob: -13.213948249816895
    5. ' (' → logprob: -13.963948249816895
    6. 'nodes' → logprob: -13.963948249816895
    7. ' ' → logprob: -14.088948249816895
    8. ' nodes' → logprob: -14.463948249816895
    9. '   ' → logprob: -15.776448249816895
    10. 'any' → logprob: -16.15144920349121

Token 629: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6065628528594971
    2. '[' → logprob: -1.481562852859497
    3. 'in' → logprob: -1.481562852859497
    4. 'p' → logprob: -8.981562614440918
    5. ' ' → logprob: -9.731562614440918
    6. '   ' → logprob: -12.106562614440918
    7. '==' → logprob: -12.481562614440918
    8. ' p' → logprob: -12.606562614440918
    9. ' [' → logprob: -12.856562614440918
    10. '[-' → logprob: -13.356562614440918

Token 630: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.009642645716667175
    2. ' end' → logprob: -4.759642601013184
    3. '(end' → logprob: -7.384642601013184
    4. '[(' → logprob: -8.634642601013184
    5. '[end' → logprob: -9.134642601013184
    6. 'nodes' → logprob: -10.134642601013184
    7. '[' → logprob: -11.384642601013184
    8. '(' → logprob: -11.384642601013184
    9. ' ' → logprob: -11.634642601013184
    10. '{' → logprob: -11.634642601013184

Token 631: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -5.080963092041202e-06
    2. 'points' → logprob: -12.375004768371582
    3. 'end' → logprob: -14.875004768371582
    4. '_positions' → logprob: -15.500004768371582
    5. '_ids' → logprob: -16.2500057220459
    6. '_end' → logprob: -16.3750057220459
    7. 'Points' → logprob: -17.3750057220459
    8. '_nodes' → logprob: -17.6250057220459
    9. '
' → logprob: -17.8750057220459
    10. '_POINTS' → logprob: -18.2500057220459

Token 632: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017021986423060298
    2. ']

' → logprob: -6.501702308654785
    3. ' ]' → logprob: -8.876702308654785
    4. ']
' → logprob: -10.001702308654785
    5. '   ' → logprob: -12.251702308654785
    6. '()]' → logprob: -12.876702308654785
    7. ')]' → logprob: -13.126702308654785
    8. ']

' → logprob: -13.376702308654785
    9. ')' → logprob: -13.501702308654785
    10. 'def' → logprob: -14.251702308654785

Token 633: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39583060145378113
    2. '   ' → logprob: -1.1458306312561035
    3. '```' → logprob: -5.0208306312561035
    4. ' dist' → logprob: -7.1458306312561035
    5. 'heap' → logprob: -7.6458306312561035
    6. '
' → logprob: -8.145830154418945
    7. 'def' → logprob: -8.520830154418945
    8. 'import' → logprob: -8.645830154418945
    9. 'queue' → logprob: -8.770830154418945
    10. 'distance' → logprob: -9.145830154418945

Token 634: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013391263782978058
    2. '   ' → logprob: -4.763391494750977
    3. '
' → logprob: -5.513391494750977
    4. 'import' → logprob: -7.888391494750977
    5. ' dist' → logprob: -8.138391494750977
    6. 'heap' → logprob: -10.763391494750977
    7. 'queue' → logprob: -10.888391494750977
    8. 'distance' → logprob: -11.638391494750977
    9. '    
' → logprob: -11.888391494750977
    10. 'pq' → logprob: -12.388391494750977

Token 635: ' D' (ID: 415)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005571202374994755
    2. 'import' → logprob: -5.505571365356445
    3. '#' → logprob: -7.255571365356445
    4. ' dist' → logprob: -7.755571365356445
    5. 'def' → logprob: -8.880571365356445
    6. 'pq' → logprob: -9.380571365356445
    7. 'heap' → logprob: -9.505571365356445
    8. 'queue' → logprob: -10.755571365356445
    9. '
' → logprob: -11.380571365356445
    10. 'INF' → logprob: -12.005571365356445

Token 636: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.021242603659629822
    2. 'ijk' → logprob: -3.896242618560791
    3. 'ij' → logprob: -7.646242618560791
    4. '```' → logprob: -9.271242141723633
    5. 'ist' → logprob: -9.521242141723633
    6. 'ijs' → logprob: -11.646242141723633
    7. '
' → logprob: -11.896242141723633
    8. '``' → logprob: -12.146242141723633
    9. 'import' → logprob: -12.146242141723633
    10. '   ' → logprob: -12.146242141723633

Token 637: ' from' (ID: 591)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14439065754413605
    2. '(
' → logprob: -3.01939058303833
    3. '(dist' → logprob: -3.51939058303833
    4. '_dist' → logprob: -3.89439058303833
    5. '(' → logprob: -4.01939058303833
    6. 'import' → logprob: -5.89439058303833
    7. '(queue' → logprob: -5.89439058303833
    8. ' distances' → logprob: -5.89439058303833
    9. '(heap' → logprob: -6.51939058303833
    10. 'distance' → logprob: -6.76939058303833

Token 638: ' all' (ID: 722)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.013901966623961926
    2. ' start' → logprob: -4.763902187347412
    3. 'heap' → logprob: -5.888902187347412
    4. 'import' → logprob: -6.638902187347412
    5. 'i' → logprob: -7.638902187347412
    6. 'the' → logprob: -8.888901710510254
    7. '0' → logprob: -9.263901710510254
    8. '[start' → logprob: -9.638901710510254
    9. 'all' → logprob: -9.763901710510254
    10. 'multiple' → logprob: -9.888901710510254

Token 639: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2247312068939209
    2. ' start' → logprob: -1.974731206893921
    3. '(start' → logprob: -4.3497314453125
    4. 'starts' → logprob: -4.5997314453125
    5. 's' → logprob: -5.2247314453125
    6. 'sources' → logprob: -5.3497314453125
    7. ' starts' → logprob: -5.7247314453125
    8. '(i' → logprob: -6.0997314453125
    9. 'node' → logprob: -6.2247314453125
    10. 'nodes' → logprob: -6.2247314453125

Token 640: ' points' (ID: 5571)
  Prédit: '_ids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.8912749886512756
    2. '   ' → logprob: -1.7662749290466309
    3. 'dist' → logprob: -1.8912749290466309
    4. '_nodes' → logprob: -2.266274929046631
    5. '_points' → logprob: -2.891274929046631
    6. 'import' → logprob: -3.141274929046631
    7. ' ' → logprob: -4.016274929046631
    8. 'points' → logprob: -4.391274929046631
    9. 'nodes' → logprob: -4.891274929046631
    10. '_dist' → logprob: -5.641274929046631

Token 641: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6011838316917419
    2. '   ' → logprob: -0.8511838316917419
    3. '
' → logprob: -4.351183891296387
    4. 'import' → logprob: -4.851183891296387
    5. 'pq' → logprob: -6.101183891296387
    6. 'heap' → logprob: -7.351183891296387
    7. ' dist' → logprob: -7.476183891296387
    8. 'queue' → logprob: -8.226183891296387
    9. '    
' → logprob: -8.976183891296387
    10. ' distances' → logprob: -9.101183891296387

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1738377958536148
    2. 'dist' → logprob: -1.9238377809524536
    3. ' dist' → logprob: -4.673837661743164
    4. '
' → logprob: -6.173837661743164
    5. 'import' → logprob: -6.673837661743164
    6. ' distances' → logprob: -8.173837661743164
    7. 'pq' → logprob: -8.923837661743164
    8. ' import' → logprob: -9.173837661743164
    9. '	dist' → logprob: -9.798837661743164
    10. 'heap' → logprob: -9.923837661743164

Token 643: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.027651209384202957
    2. 'import' → logprob: -3.777651309967041
    3. ' dist' → logprob: -5.777651309967041
    4. '   ' → logprob: -7.277651309967041
    5. ' import' → logprob: -7.777651309967041
    6. 'heap' → logprob: -9.027650833129883
    7. 'queue' → logprob: -9.902650833129883
    8. '
' → logprob: -11.527650833129883
    9. 'pq' → logprob: -12.277650833129883
    10. ' heap' → logprob: -13.027650833129883

Token 644: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.070656917989254
    2. '=' → logprob: -2.8206570148468018
    3. 'ances' → logprob: -4.820656776428223
    4. 's' → logprob: -8.945656776428223
    5. 'ance' → logprob: -9.195656776428223
    6. '=[' → logprob: -9.320656776428223
    7. '_' → logprob: -9.570656776428223
    8. ' =[' → logprob: -9.820656776428223
    9. ' ' → logprob: -10.320656776428223
    10. '=[]' → logprob: -10.570656776428223

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16046376526355743
    2. '=' → logprob: -1.910463809967041
    3. '=[' → logprob: -8.410463333129883
    4. ' =[' → logprob: -11.160463333129883
    5. ' ' → logprob: -13.535463333129883
    6. '=[]' → logprob: -14.535463333129883
    7. ',' → logprob: -15.160463333129883
    8. 's' → logprob: -15.410463333129883
    9. '={' → logprob: -16.035463333129883
    10. '   ' → logprob: -16.285463333129883

Token 646: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08159194886684418
    2. '[' → logprob: -2.581591844558716
    3. ' [' → logprob: -6.081592082977295
    4. ' {' → logprob: -7.831592082977295
    5. '[len' → logprob: -12.331591606140137
    6. '[node' → logprob: -12.706591606140137
    7. '[n' → logprob: -13.706591606140137
    8. '[start' → logprob: -13.956591606140137
    9. '[min' → logprob: -14.206591606140137
    10. '[a' → logprob: -14.331591606140137

Token 647: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.3319124011322856e-05
    2. 'math' → logprob: -10.750022888183594
    3. ' float' → logprob: -13.250022888183594
    4. '(float' → logprob: -20.500022888183594
    5. '	float' → logprob: -20.750022888183594
    6. 'sys' → logprob: -20.875022888183594
    7. '   ' → logprob: -20.875022888183594
    8. '1' → logprob: -21.125022888183594
    9. ',float' → logprob: -21.375022888183594
    10. '=float' → logprob: -21.875022888183594

Token 648: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.7432603272027336e-06
    2. ''in' → logprob: -13.375001907348633
    3. ''' → logprob: -16.875001907348633
    4. '("' → logprob: -17.750001907348633
    5. ''s' → logprob: -17.875001907348633
    6. '(' → logprob: -18.000001907348633
    7. ''i' → logprob: -18.875001907348633
    8. '(in' → logprob: -19.875001907348633
    9. ' ('' → logprob: -20.000001907348633
    10. ''inc' → logprob: -20.500001907348633

Token 649: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -9.031157969729975e-05
    2. ''in' → logprob: -9.750090599060059
    3. ''' → logprob: -10.625090599060059
    4. 'in' → logprob: -12.625090599060059
    5. '64' → logprob: -14.500090599060059
    6. '1' → logprob: -14.625090599060059
    7. 'info' → logprob: -14.625090599060059
    8. '('' → logprob: -14.625090599060059
    9. '7' → logprob: -15.000090599060059
    10. 'max' → logprob: -15.125090599060059

Token 650: '')' (ID: 1542)
  Prédit: '')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.10464535653591156
    2. ')]' → logprob: -2.354645252227783
    3. ')' → logprob: -6.229645252227783
    4. '')' → logprob: -6.479645252227783
    5. ']' → logprob: -7.104645252227783
    6. '']' → logprob: -9.729645729064941
    7. ''' → logprob: -10.854645729064941
    8. '")]' → logprob: -11.104645729064941
    9. '')]
' → logprob: -13.729645729064941
    10. ',' → logprob: -13.729645729064941

Token 651: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.38202646374702454
    2. ']' → logprob: -1.2570264339447021
    3. ' for' → logprob: -3.507026433944702
    4. 'for' → logprob: -5.882026672363281
    5. ' ]' → logprob: -9.007026672363281
    6. ']*(' → logprob: -9.882026672363281
    7. ']+' → logprob: -10.632026672363281
    8. ',' → logprob: -11.007026672363281
    9. '   ' → logprob: -12.007026672363281
    10. '	for' → logprob: -12.507026672363281

Token 652: 'n' (ID: 77)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.73446003627032e-05
    2. '(len' → logprob: -9.250097274780273
    3. ' len' → logprob: -14.000097274780273
    4. 'n' → logprob: -14.750097274780273
    5. '(n' → logprob: -20.375097274780273
    6. '
' → logprob: -20.625097274780273
    7. '   ' → logprob: -20.625097274780273
    8. '[len' → logprob: -20.750097274780273
    9. '	len' → logprob: -21.750097274780273
    10. '=len' → logprob: -22.875097274780273

Token 653: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0011097323149442673
    2. '
' → logprob: -8.001110076904297
    3. 'heap' → logprob: -8.001110076904297
    4. 'pq' → logprob: -8.501110076904297
    5. 'dist' → logprob: -9.626110076904297
    6. '   ' → logprob: -9.751110076904297
    7. 'queue' → logprob: -10.251110076904297
    8. '    
' → logprob: -10.626110076904297
    9. '  
' → logprob: -11.501110076904297
    10. '' → logprob: -11.626110076904297

Token 654: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4657391607761383
    2. 'pq' → logprob: -1.715739130973816
    3. 'for' → logprob: -2.2157392501831055
    4. 'import' → logprob: -2.9657392501831055
    5. '   ' → logprob: -3.8407392501831055
    6. 'queue' → logprob: -5.2157392501831055
    7. ' heap' → logprob: -5.8407392501831055
    8. ' for' → logprob: -6.8407392501831055
    9. 'hq' → logprob: -7.5907392501831055
    10. ' pq' → logprob: -7.9657392501831055

Token 655: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.17854464054107666
    2. 'pq' → logprob: -2.178544521331787
    3. 'hq' → logprob: -3.428544521331787
    4. 'for' → logprob: -4.678544521331787
    5. 'h' (adapté à ' h') → logprob: -5.178544521331787
    6. 'queue' → logprob: -6.428544521331787
    7. 'import' → logprob: -6.678544521331787
    8. 'q' → logprob: -10.303544998168945
    9. ' heap' → logprob: -11.053544998168945
    10. 'hp' → logprob: -11.428544998168945

Token 656: 'q' (ID: 80)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.6150423288345337
    2. ' =' → logprob: -0.9900423288345337
    3. '=' → logprob: -3.115042209625244
    4. 'e' → logprob: -3.615042209625244
    5. '=[]
' → logprob: -4.615042209625244
    6. 'q' → logprob: -5.365042209625244
    7. '=[' → logprob: -6.490042209625244
    8. '[]' → logprob: -9.490042686462402
    9. 'push' → logprob: -9.990042686462402
    10. '=[]
' → logprob: -10.115042686462402

Token 657: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.5753401517868042
    2. '=' → logprob: -1.4503401517868042
    3. ' =' → logprob: -1.8253401517868042
    4. 'import' → logprob: -3.8253402709960938
    5. '.' → logprob: -4.825340270996094
    6. '=[]
' → logprob: -5.450340270996094
    7. '<|end|>' → logprob: -6.200340270996094
    8. 'he' → logprob: -6.325340270996094
    9. '.push' → logprob: -7.075340270996094
    10. ')' → logprob: -7.700340270996094

Token 658: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0012672555167227983
    2. '[(' → logprob: -7.251267433166504
    3. '[]
' → logprob: -7.501267433166504
    4. '[]

' → logprob: -12.501267433166504
    5. ' []' → logprob: -14.126267433166504
    6. '[' → logprob: -15.376267433166504
    7. '[])' → logprob: -16.626266479492188
    8. '[]}' → logprob: -17.501266479492188
    9. '[]>' → logprob: -18.626266479492188
    10. '[]"' → logprob: -18.751266479492188

Token 659: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47959864139556885
    2. ' for' → logprob: -0.9795986413955688
    3. '   ' → logprob: -5.229598522186279
    4. '	for' → logprob: -9.354598999023438
    5. '
' → logprob: -9.729598999023438
    6. ' ' → logprob: -13.354598999023438
    7. '  ' → logprob: -13.979598999023438
    8. ' 
' → logprob: -14.229598999023438
    9. '    
' → logprob: -14.229598999023438
    10. '<|end|>' → logprob: -15.104598999023438

Token 660: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019479141337797046
    2. ' for' → logprob: -6.25194787979126
    3. '   ' → logprob: -11.001948356628418
    4. '
' → logprob: -13.251948356628418
    5. '	for' → logprob: -14.001948356628418
    6. '```' → logprob: -16.6269474029541
    7. '    
' → logprob: -17.5019474029541
    8. 'For' → logprob: -20.1269474029541
    9. 'import' → logprob: -20.5019474029541
    10. ' 
' → logprob: -20.6269474029541

Token 661: ' s' (ID: 265)
  Prédit: 'sid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sid' → logprob: -0.49082332849502563
    2. 'i' → logprob: -1.4908232688903809
    3. 's' → logprob: -1.9908232688903809
    4. 'si' → logprob: -4.490823268890381
    5. 'start' → logprob: -4.490823268890381
    6. 'idx' → logprob: -5.740823268890381
    7. 'id' → logprob: -7.740823268890381
    8. ' sid' → logprob: -11.115823745727539
    9. 'src' → logprob: -11.865823745727539
    10. 'st' → logprob: -12.240823745727539

Token 662: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21306584775447845
    2. 'in' → logprob: -2.3380658626556396
    3. '_id' → logprob: -2.5880658626556396
    4. '_i' → logprob: -5.0880656242370605
    5. '_idx' → logprob: -5.3380656242370605
    6. 'id' → logprob: -5.7130656242370605
    7. '_in' → logprob: -6.0880656242370605
    8. 'i' → logprob: -6.7130656242370605
    9. '_' → logprob: -6.7130656242370605
    10. ',' → logprob: -8.213066101074219

Token 663: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0004307884373702109
    2. ' start' → logprob: -7.750430583953857
    3. '[start' → logprob: -16.125431060791016
    4. '
' → logprob: -18.000431060791016
    5. ' ' → logprob: -18.375431060791016
    6. '   ' → logprob: -18.625431060791016
    7. '(start' → logprob: -18.625431060791016
    8. '	start' → logprob: -19.125431060791016
    9. '=start' → logprob: -19.250431060791016
    10. 'range' → logprob: -19.500431060791016

Token 664: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.00905260443687439
    2. '_points' → logprob: -4.884052753448486
    3. 's' → logprob: -7.634052753448486
    4. '_id' → logprob: -8.509052276611328
    5. ')' → logprob: -8.634052276611328
    6. 'points' → logprob: -9.634052276611328
    7. '):' → logprob: -9.759052276611328
    8. '_pts' → logprob: -9.759052276611328
    9. '_nodes' → logprob: -9.884052276611328
    10. '_indices' → logprob: -10.009052276611328

Token 665: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34982535243034363
    2. ':' → logprob: -1.224825382232666
    3. ',' → logprob: -6.724825382232666
    4. '   ' → logprob: -9.349824905395508
    5. '):
' → logprob: -10.474824905395508
    6. 'he' → logprob: -11.099824905395508
    7. ':
' → logprob: -11.349824905395508
    8. '=' → logprob: -11.599824905395508
    9. ' :
' → logprob: -11.599824905395508
    10. ':

' → logprob: -12.849824905395508

Token 666: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5477839112281799
    2. 'he' → logprob: -1.4227838516235352
    3. 'dist' → logprob: -2.422783851623535
    4. ' he' → logprob: -2.547783851623535
    5. ' dist' → logprob: -4.297783851623535
    6. '	dist' → logprob: -9.172783851623535
    7. '  ' → logprob: -10.672783851623535
    8. '    ' → logprob: -11.547783851623535
    9. '	' → logprob: -11.547783851623535
    10. '_dist' → logprob: -11.672783851623535

Token 667: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.5782722234725952
    2. 'he' → logprob: -0.8282722234725952
    3. ' he' → logprob: -6.703272342681885
    4. ' dist' → logprob: -7.453272342681885
    5. '   ' → logprob: -7.828272342681885
    6. 'heap' → logprob: -9.078271865844727
    7. ' ' → logprob: -13.078271865844727
    8. '	dist' → logprob: -13.453271865844727
    9. '  ' → logprob: -13.703271865844727
    10. '```' → logprob: -13.953271865844727

Token 668: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.5577775128767826e-06
    2. '[_' → logprob: -13.625005722045898
    3. ' _' → logprob: -13.875005722045898
    4. '(_' → logprob: -13.875005722045898
    5. 'arr' → logprob: -14.375005722045898
    6. '_array' → logprob: -15.375005722045898
    7. 'push' → logprob: -15.625005722045898
    8. ',_' → logprob: -15.625005722045898
    9. '   ' → logprob: -15.875005722045898
    10. '
' → logprob: -16.1250057220459

Token 669: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.375
    3. '[' → logprob: -16.5
    4. 's' → logprob: -17.125
    5. ' s' → logprob: -19.5
    6. '[S' → logprob: -20.0
    7. '[
' → logprob: -20.25
    8. '[q' → logprob: -20.625
    9. '=s' → logprob: -21.125
    10. '(s' → logprob: -21.25

Token 670: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.5607302188873291
    2. ']' → logprob: -0.9357302188873291
    3. '=' → logprob: -3.310730218887329
    4. ' =' → logprob: -8.43572998046875
    5. ' ]' → logprob: -9.43572998046875
    6. ')=' → logprob: -9.43572998046875
    7. ')' → logprob: -11.06072998046875
    8. ',' → logprob: -11.43572998046875
    9. ']+=' → logprob: -12.56072998046875
    10. '0' → logprob: -13.56072998046875

Token 671: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.875
    4. '۰' → logprob: -19.375
    5. '```' → logprob: -20.375
    6. '=' → logprob: -20.875
    7. '  ' → logprob: -21.0625
    8. '00' → logprob: -21.3125
    9. '(' → logprob: -21.3125
    10. '
' → logprob: -21.5

Token 672: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037836082628928125
    2. ' he' → logprob: -8.875378608703613
    3. '   ' → logprob: -9.125378608703613
    4. ',' → logprob: -9.625378608703613
    5. '
' → logprob: -11.000378608703613
    6. 'he' → logprob: -11.375378608703613
    7. '<|end|>' → logprob: -11.500378608703613
    8. '           ' → logprob: -11.625378608703613
    9. '               ' → logprob: -12.500378608703613
    10. '	' → logprob: -13.125378608703613

Token 673: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08984086662530899
    2. 'he' → logprob: -2.714840888977051
    3. 'push' → logprob: -4.339840888977051
    4. ' he' → logprob: -5.214840888977051
    5. 'heap' → logprob: -7.339840888977051
    6. '   ' → logprob: -7.839840888977051
    7. '
' → logprob: -9.83984088897705
    8. '    
' → logprob: -10.21484088897705
    9. '       ' → logprob: -10.33984088897705
    10. ' ' → logprob: -11.08984088897705

Token 674: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016008909791707993
    2. ' he' → logprob: -4.8910088539123535
    3. 'he' → logprob: -5.1410088539123535
    4. '   ' → logprob: -6.0160088539123535
    5. ',' → logprob: -10.141009330749512
    6. '           ' → logprob: -11.391009330749512
    7. '               ' → logprob: -12.016009330749512
    8. '
' → logprob: -12.141009330749512
    9. '	' → logprob: -12.641009330749512
    10. 'heap' → logprob: -12.641009330749512

Token 675: '       ' (ID: 309)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.028291551396250725
    2. '   ' → logprob: -4.278291702270508
    3. ' he' → logprob: -4.278291702270508
    4. '       ' → logprob: -8.903291702270508
    5. 'heap' → logprob: -11.528291702270508
    6. '```' → logprob: -11.903291702270508
    7. '_he' → logprob: -12.903291702270508
    8. ',' → logprob: -13.028291702270508
    9. '
' → logprob: -13.153291702270508
    10. '.he' → logprob: -13.528291702270508

Token 676: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -6.704273118884885e-07
    2. ' he' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '       ' → logprob: -21.375
    5. '```' → logprob: -22.25
    6. 'heap' → logprob: -22.375
    7. '  ' → logprob: -23.0
    8. '    
' → logprob: -23.375
    9. '
' → logprob: -23.5
    10. '    ' → logprob: -23.75

Token 677: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.127333340875339e-06
    2. 'ap' → logprob: -12.625003814697266
    3. ' app' → logprob: -15.000003814697266
    4. 'pp' → logprob: -15.875003814697266
    5. 'push' → logprob: -16.000003814697266
    6. 'a' → logprob: -16.375003814697266
    7. '```' → logprob: -17.375003814697266
    8. 'append' → logprob: -17.625003814697266
    9. '   ' → logprob: -18.375003814697266
    10. 'he' → logprob: -18.500003814697266

Token 678: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00033581978641450405
    2. 'push' → logprob: -8.000335693359375
    3. 'sh' → logprob: -14.750335693359375
    4. 'USH' → logprob: -18.750335693359375
    5. 'p' → logprob: -19.250335693359375
    6. '```' → logprob: -19.375335693359375
    7. 'pp' → logprob: -19.500335693359375
    8. 'Push' → logprob: -19.500335693359375
    9. '_push' → logprob: -20.000335693359375
    10. '.push' → logprob: -20.000335693359375

Token 679: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: 0.0
    2. ',h' → logprob: -18.0
    3. '(' → logprob: -18.125
    4. '(q' → logprob: -18.375
    5. ' (' → logprob: -18.875
    6. '(
' → logprob: -20.625
    7. '[h' → logprob: -21.375
    8. '	h' → logprob: -21.5
    9. 'h' → logprob: -22.125
    10. ' h' → logprob: -22.25

Token 680: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.1008713702030946e-06
    2. '(q' → logprob: -13.500001907348633
    3. '(h' → logprob: -15.625001907348633
    4. 'hq' → logprob: -15.875001907348633
    5. 'qh' → logprob: -16.000001907348633
    6. ' q' → logprob: -16.625001907348633
    7. '_q' → logprob: -16.750001907348633
    8. 'sq' → logprob: -16.750001907348633
    9. '	q' → logprob: -17.250001907348633
    10. 'vq' → logprob: -17.500001907348633

Token 681: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.03860032558441162
    2. ',' → logprob: -3.913600444793701
    3. '(' → logprob: -4.538600444793701
    4. ',h' → logprob: -5.663600444793701
    5. ',(' → logprob: -6.038600444793701
    6. '(s' → logprob: -7.413600444793701
    7. '(q' → logprob: -7.788600444793701
    8. ' (' → logprob: -8.788599967956543
    9. ' ,' → logprob: -9.413599967956543
    10. '((' → logprob: -9.788599967956543

Token 682: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'dist' → logprob: -18.125001907348633
    4. '
' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.375001907348633
    6. ')' → logprob: -18.625001907348633
    7. '(' → logprob: -18.875001907348633
    8. '```' → logprob: -19.875001907348633
    9. '۰' → logprob: -20.187501907348633
    10. '  ' → logprob: -20.312501907348633

Token 683: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.504259467124939
    2. ',s' → logprob: -1.129259467124939
    3. ',' → logprob: -2.6292595863342285
    4. 's' → logprob: -7.7542595863342285
    5. '.s' → logprob: -9.12925910949707
    6. ' ,' → logprob: -9.50425910949707
    7. ' s' → logprob: -11.75425910949707
    8. '```' → logprob: -12.62925910949707
    9. ')' → logprob: -13.00425910949707
    10. ' ' → logprob: -13.00425910949707

Token 684: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010499580530449748
    2. '0' → logprob: -7.251049995422363
    3. ' s' → logprob: -8.001049995422363
    4. ',' → logprob: -12.626049995422363
    5. ',s' → logprob: -15.001049995422363
    6. ' ' → logprob: -15.001049995422363
    7. ')' → logprob: -15.626049995422363
    8. '   ' → logprob: -15.751049995422363
    9. '```' → logprob: -15.751049995422363
    10. '{s' → logprob: -17.001049041748047

Token 685: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.20154568552970886
    2. ',' → logprob: -1.7015457153320312
    3. ' ,' → logprob: -8.951545715332031
    4. 's' → logprob: -13.451545715332031
    5. ' s' → logprob: -13.826545715332031
    6. ',
' → logprob: -15.576545715332031
    7. '	s' → logprob: -16.82654571533203
    8. ',n' → logprob: -17.82654571533203
    9. '   ' → logprob: -18.20154571533203
    10. ',y' → logprob: -18.20154571533203

Token 686: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002096197713399306
    2. '))
' → logprob: -8.50020980834961
    3. ')' → logprob: -12.87520980834961
    4. '   ' → logprob: -13.62520980834961
    5. ' ))' → logprob: -13.87520980834961
    6. ')))' → logprob: -14.12520980834961
    7. '))
' → logprob: -15.62520980834961
    8. '))

' → logprob: -15.62520980834961
    9. '));' → logprob: -16.12520980834961
    10. '       ' → logprob: -16.25020980834961

Token 687: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2907097041606903
    2. '   ' → logprob: -2.0407097339630127
    3. '```' → logprob: -2.2907097339630127
    4. ' while' → logprob: -4.040709495544434
    5. '	while' → logprob: -5.915709495544434
    6. 'While' → logprob: -7.665709495544434
    7. '<|end|>' → logprob: -8.915709495544434
    8. ')' → logprob: -9.165709495544434
    9. '``' → logprob: -9.665709495544434
    10. '
' → logprob: -9.790709495544434

Token 688: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0028418414294719696
    2. '   ' → logprob: -6.002841949462891
    3. ' while' → logprob: -8.00284194946289
    4. '
' → logprob: -10.62784194946289
    5. '	while' → logprob: -12.00284194946289
    6. '```' → logprob: -14.00284194946289
    7. 'While' → logprob: -14.62784194946289
    8. '    
' → logprob: -17.25284194946289
    9. '

' → logprob: -19.25284194946289
    10. '``' → logprob: -19.87784194946289

Token 689: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.16034425795078278
    2. ' h' → logprob: -1.9103442430496216
    3. '(h' → logprob: -9.160344123840332
    4. '	h' → logprob: -11.285344123840332
    5. '[h' → logprob: -14.160344123840332
    6. 'h' → logprob: -14.785344123840332
    7. '   ' → logprob: -15.035344123840332
    8. '
' → logprob: -15.035344123840332
    9. ',h' → logprob: -15.785344123840332
    10. ' len' → logprob: -15.785344123840332

Token 690: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.650518920039758e-06
    2. '_q' → logprob: -14.125003814697266
    3. ' q' → logprob: -14.500003814697266
    4. 'qh' → logprob: -14.750003814697266
    5. '(q' → logprob: -14.750003814697266
    6. 'Q' → logprob: -15.125003814697266
    7. '?q' → logprob: -15.625003814697266
    8. '	q' → logprob: -15.750003814697266
    9. '.q' → logprob: -15.875003814697266
    10. '
' → logprob: -16.500003814697266

Token 691: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23532892763614655
    2. ':
' → logprob: -1.8603289127349854
    3. '[' → logprob: -2.9853289127349854
    4. ' and' → logprob: -7.1103291511535645
    5. 'and' → logprob: -7.2353291511535645
    6. ',' → logprob: -7.3603291511535645
    7. '   ' → logprob: -7.9853291511535645
    8. '!=' → logprob: -8.235328674316406
    9. '):
' → logprob: -8.485328674316406
    10. '{' → logprob: -9.110328674316406

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32450249791145325
    2. 'dist' → logprob: -1.4495024681091309
    3. 'd' → logprob: -4.074502468109131
    4. ' dist' → logprob: -4.449502468109131
    5. ',' → logprob: -4.949502468109131
    6. '   ' → logprob: -5.949502468109131
    7. 'cost' → logprob: -7.074502468109131
    8. ' d' → logprob: -7.574502468109131
    9. '	dist' → logprob: -7.824502468109131
    10. '0' → logprob: -7.949502468109131

Token 693: ' cd' (ID: 24852)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11651220172643661
    2. 'cur' → logprob: -2.3665122985839844
    3. 'dist' → logprob: -5.116512298583984
    4. '   ' → logprob: -5.866512298583984
    5. ' d' → logprob: -5.866512298583984
    6. 'curr' → logprob: -6.116512298583984
    7. 'cost' → logprob: -6.616512298583984
    8. ' cur' → logprob: -7.241512298583984
    9. 'cd' (adapté à ' cd') → logprob: -9.366512298583984
    10. 'current' → logprob: -9.741512298583984

Token 694: ',u' (ID: 80698)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.3183209002017975
    2. ',' → logprob: -1.318320870399475
    3. ',d' → logprob: -6.8183207511901855
    4. 'istance' → logprob: -7.3183207511901855
    5. ',c' → logprob: -7.3183207511901855
    6. 'st' → logprob: -7.3183207511901855
    7. 'dist' → logprob: -7.6933207511901855
    8. 'is' → logprob: -7.8183207511901855
    9. ',current' → logprob: -8.443321228027344
    10. 't' → logprob: -9.068321228027344

Token 695: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007521800696849823
    2. ' =' → logprob: -5.507521629333496
    3. 'dist' → logprob: -5.882521629333496
    4. '=
' → logprob: -8.882521629333496
    5. 'distance' → logprob: -9.132521629333496
    6. '_dist' → logprob: -9.507521629333496
    7. ',' → logprob: -9.632521629333496
    8. '   ' → logprob: -9.882521629333496
    9. ')=' → logprob: -10.382521629333496
    10. '_distance' → logprob: -10.507521629333496

Token 696: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0015024791937321424
    2. ' he' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.376502990722656
    4. 'heap' → logprob: -17.751502990722656
    5. '
' → logprob: -18.626502990722656
    6. '    ' → logprob: -20.751502990722656
    7. '
' → logprob: -20.876502990722656
    8. 'h' → logprob: -21.001502990722656
    9. ' ' → logprob: -21.001502990722656
    10. '  ' → logprob: -21.001502990722656

Token 697: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.9361264946837764e-07
    2. 'ap' → logprob: -16.375
    3. 'pp' → logprob: -17.875
    4. ' app' → logprob: -18.375
    5. '(app' → logprob: -18.875
    6. 'a' → logprob: -19.0
    7. 'q' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. '_app' → logprob: -20.0
    10. '[' → logprob: -20.0

Token 698: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -7.76759916334413e-05
    2. 'ush' → logprob: -9.500077247619629
    3. '[' → logprob: -14.250077247619629
    4. 'o' → logprob: -14.500077247619629
    5. 'pop' → logprob: -14.500077247619629
    6. '(op' → logprob: -15.500077247619629
    7. 'p' → logprob: -15.875077247619629
    8. 'оп' → logprob: -16.250078201293945
    9. '   ' → logprob: -16.500078201293945
    10. '
' → logprob: -16.625078201293945

Token 699: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1472419600977446e-06
    2. 'hq' → logprob: -14.500000953674316
    3. '(' → logprob: -15.750000953674316
    4. '(q' → logprob: -15.875000953674316
    5. ',h' → logprob: -16.625001907348633
    6. 'h' → logprob: -16.625001907348633
    7. ' (' → logprob: -16.750001907348633
    8. '(
' → logprob: -17.375001907348633
    9. '
' → logprob: -17.875001907348633
    10. '   ' → logprob: -19.125001907348633

Token 700: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'Q' → logprob: -17.5
    3. '
' → logprob: -18.625
    4. '_q' → logprob: -19.0
    5. '[' → logprob: -19.375
    6. '```' → logprob: -20.125
    7. '	q' → logprob: -20.25
    8. ')' → logprob: -20.5
    9. 'qs' → logprob: -20.5
    10. ',' → logprob: -20.625

Token 701: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25196197628974915
    2. ')
' → logprob: -1.5019619464874268
    3. '       ' → logprob: -11.626961708068848
    4. '   ' → logprob: -12.501961708068848
    5. ')
' → logprob: -12.501961708068848
    6. '
' → logprob: -12.876961708068848
    7. ',' → logprob: -12.876961708068848
    8. ' )' → logprob: -13.001961708068848
    9. ' )
' → logprob: -13.376961708068848
    10. ')#' → logprob: -14.001961708068848

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01202720683068037
    2. '
' → logprob: -4.512027263641357
    3. '<|end|>' → logprob: -7.262027263641357
    4. '        
' → logprob: -8.7620267868042
    5. 'if' → logprob: -9.7620267868042
    6. ' if' → logprob: -10.2620267868042
    7. ' 
' → logprob: -11.6370267868042
    8. '  
' → logprob: -12.1370267868042
    9. ',' → logprob: -12.8870267868042
    10. '   ' → logprob: -13.1370267868042

Token 703: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00018149138486478478
    2. ' if' → logprob: -8.750181198120117
    3. '       ' → logprob: -10.750181198120117
    4. '
' → logprob: -13.500181198120117
    5. '        
' → logprob: -15.750181198120117
    6. '   ' → logprob: -16.875181198120117
    7. '           ' → logprob: -17.375181198120117
    8. ';if' → logprob: -17.625181198120117
    9. '```' → logprob: -18.000181198120117
    10. '	if' → logprob: -19.125181198120117

Token 704: ' dist' (ID: 3601)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.6337283253669739
    2. 'dist' → logprob: -0.7587283253669739
    3. ' dist' → logprob: -7.258728504180908
    4. ' cd' → logprob: -7.883728504180908
    5. 'abs' → logprob: -11.00872802734375
    6. 'u' → logprob: -11.13372802734375
    7. '	cd' → logprob: -12.63372802734375
    8. 'cdn' → logprob: -12.75872802734375
    9. '(cd' → logprob: -13.13372802734375
    10. '	dist' → logprob: -13.38372802734375

Token 705: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.6240566083070007e-06
    2. '[u' → logprob: -13.750001907348633
    3. '_u' → logprob: -15.625001907348633
    4. 's' → logprob: -16.250001907348633
    5. 'arr' → logprob: -16.375001907348633
    6. 'u' → logprob: -17.250001907348633
    7. '_array' → logprob: -18.000001907348633
    8. 'Arr' → logprob: -18.500001907348633
    9. '_[' → logprob: -19.250001907348633
    10. '<u' → logprob: -19.250001907348633

Token 706: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.630610641877865e-06
    2. 'u' → logprob: -12.625006675720215
    3. '[' → logprob: -12.750006675720215
    4. ' [' → logprob: -15.250006675720215
    5. '[c' → logprob: -16.8750057220459
    6. '   ' → logprob: -16.8750057220459
    7. ' u' → logprob: -17.6250057220459
    8. '```' → logprob: -18.2500057220459
    9. '
' → logprob: -18.3750057220459
    10. '       ' → logprob: -18.6250057220459

Token 707: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3988693952560425
    2. ' <' → logprob: -1.1488693952560425
    3. '>' → logprob: -4.898869514465332
    4. ' >' → logprob: -7.148869514465332
    5. '<u' → logprob: -7.273869514465332
    6. '<int' → logprob: -7.898869514465332
    7. '<=' → logprob: -8.148869514465332
    8. '><' → logprob: -8.273869514465332
    9. '<data' → logprob: -8.273869514465332
    10. '<ll' → logprob: -8.523869514465332

Token 708: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -6.623244553338736e-05
    2. ' cd' → logprob: -9.625065803527832
    3. '	cd' → logprob: -15.625065803527832
    4. '
' → logprob: -18.12506675720215
    5. '_cd' → logprob: -18.25006675720215
    6. 'cdn' → logprob: -19.00006675720215
    7. ' ' → logprob: -19.12506675720215
    8. '(cd' → logprob: -19.25006675720215
    9. '```' → logprob: -20.75006675720215
    10. '   ' → logprob: -20.75006675720215

Token 709: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10802366584539413
    2. ':
' → logprob: -2.4830236434936523
    3. 'continue' → logprob: -4.233023643493652
    4. ' continue' → logprob: -5.483023643493652
    5. '   ' → logprob: -9.608023643493652
    6. '_continue' → logprob: -10.233023643493652
    7. '       ' → logprob: -10.483023643493652
    8. '	continue' → logprob: -10.483023643493652
    9. ':return' → logprob: -10.983023643493652
    10. '):' → logprob: -11.358023643493652

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.375019073486328
    3. 'EPS' → logprob: -11.875019073486328
    4. '
' → logprob: -16.750019073486328
    5. ' EPS' → logprob: -17.125019073486328
    6. '   ' → logprob: -17.500019073486328
    7. '=' → logprob: -17.750019073486328
    8. '-' → logprob: -18.125019073486328
    9. '```' → logprob: -18.250019073486328
    10. ' ' → logprob: -18.500019073486328

Token 711: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1517960956552997e-05
    2. '-' → logprob: -11.500011444091797
    3. '1' → logprob: -14.250011444091797
    4. '0' → logprob: -15.000011444091797
    5. 'E' → logprob: -16.000011444091797
    6. '7' → logprob: -16.375011444091797
    7. '```' → logprob: -16.375011444091797
    8. '2' → logprob: -16.500011444091797
    9. '
' → logprob: -17.500011444091797
    10. '-e' → logprob: -18.625011444091797

Token 712: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0979054719209671
    2. '9' → logprob: -2.597905397415161
    3. '8' → logprob: -4.47290563583374
    4. '7' → logprob: -5.09790563583374
    5. '10' → logprob: -7.22290563583374
    6. '12' → logprob: -7.47290563583374
    7. '```' → logprob: -12.222905158996582
    8. '15' → logprob: -13.097905158996582
    9. '
' → logprob: -13.597905158996582
    10. '6' → logprob: -13.597905158996582

Token 713: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.833344042301178
    2. '10' → logprob: -1.3333439826965332
    3. '12' → logprob: -1.4583439826965332
    4. '8' → logprob: -2.958343982696533
    5. '7' → logprob: -4.208343982696533
    6. '14' → logprob: -6.333343982696533
    7. '15' → logprob: -7.708343982696533
    8. '-' → logprob: -9.458344459533691
    9. '13' → logprob: -9.708344459533691
    10. '11' → logprob: -10.333344459533691

Token 714: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07064614444971085
    2. ':
' → logprob: -2.695646047592163
    3. '       ' → logprob: -7.570646286010742
    4. '   ' → logprob: -10.070646286010742
    5. ' continue' → logprob: -10.195646286010742
    6. ')' → logprob: -10.320646286010742
    7. 'continue' → logprob: -10.570646286010742
    8. '):
' → logprob: -10.695646286010742
    9. '):' → logprob: -10.945646286010742
    10. ':return' → logprob: -12.070646286010742

Token 715: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40429040789604187
    2. '       ' → logprob: -1.1542904376983643
    3. ' continue' → logprob: -4.654290199279785
    4. 'continue' → logprob: -4.904290199279785
    5. '   ' → logprob: -8.404290199279785
    6. '	continue' → logprob: -9.529290199279785
    7. '_continue' → logprob: -11.029290199279785
    8. '		' → logprob: -12.154290199279785
    9. '	   ' → logprob: -12.779290199279785
    10. '	       ' → logprob: -12.779290199279785

Token 716: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10113119333982468
    2. '           ' → logprob: -2.8511312007904053
    3. ' continue' → logprob: -3.3511312007904053
    4. '       ' → logprob: -5.726130962371826
    5. '	continue' → logprob: -9.851131439208984
    6. '   ' → logprob: -10.226131439208984
    7. '_continue' → logprob: -12.101131439208984
    8. '               ' → logprob: -12.726131439208984
    9. 'contin' → logprob: -13.351131439208984
    10. '	       ' → logprob: -13.726131439208984

Token 717: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011142584262415767
    2. '<|end|>' → logprob: -7.001114368438721
    3. ' for' → logprob: -9.501113891601562
    4. ' if' → logprob: -10.376113891601562
    5. '
' → logprob: -10.501113891601562
    6. '   ' → logprob: -10.876113891601562
    7. ')' → logprob: -11.251113891601562
    8. 'if' → logprob: -11.501113891601562
    9. 'for' → logprob: -11.751113891601562
    10. ',' → logprob: -12.126113891601562

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033284336677752435
    2. '<|end|>' → logprob: -8.750332832336426
    3. ' for' → logprob: -9.250332832336426
    4. '   ' → logprob: -9.750332832336426
    5. 'for' → logprob: -12.375332832336426
    6. ')' → logprob: -12.500332832336426
    7. '```' → logprob: -12.875332832336426
    8. '      ' → logprob: -13.250332832336426
    9. '
' → logprob: -13.375332832336426
    10. '           ' → logprob: -13.500332832336426

Token 719: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.36341825127601624
    2. '       ' → logprob: -1.3634182214736938
    3. ' if' → logprob: -3.2384183406829834
    4. 'for' → logprob: -4.738418102264404
    5. ' for' → logprob: -7.613418102264404
    6. '   ' → logprob: -7.738418102264404
    7. '	if' → logprob: -12.113418579101562
    8. '
' → logprob: -13.738418579101562
    9. '        
' → logprob: -13.738418579101562
    10. ' ' → logprob: -13.988418579101562

Token 720: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.020542122423648834
    2. ' u' → logprob: -3.8955421447753906
    3. '	u' → logprob: -16.77054214477539
    4. '   ' → logprob: -17.39554214477539
    5. ' any' → logprob: -17.52054214477539
    6. '
' → logprob: -18.14554214477539
    7. ' ' → logprob: -18.27054214477539
    8. '(u' → logprob: -18.64554214477539
    9. '[u' → logprob: -18.77054214477539
    10. 'any' → logprob: -18.89554214477539

Token 721: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005965414922684431
    2. 'in' → logprob: -5.130965232849121
    3. ' ==' → logprob: -11.130965232849121
    4. '<|end|>' → logprob: -11.755965232849121
    5. '==' → logprob: -12.130965232849121
    6. ' ' → logprob: -12.255965232849121
    7. ')' → logprob: -12.880965232849121
    8. ' ' → logprob: -14.130965232849121
    9. ']' → logprob: -16.130966186523438
    10. 'In' → logprob: -16.380966186523438

Token 722: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.011048170737922192
    2. ' end' → logprob: -4.511048316955566
    3. 'set' → logprob: -15.261048316955566
    4. '(end' → logprob: -16.13604736328125
    5. '   ' → logprob: -17.88604736328125
    6. ' ' → logprob: -18.01104736328125
    7. '[end' → logprob: -18.38604736328125
    8. '=end' → logprob: -19.26104736328125
    9. '	end' → logprob: -19.51104736328125
    10. '```' → logprob: -20.63604736328125

Token 723: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -4.000763510703109e-05
    2. '_points' → logprob: -10.250040054321289
    3. '_' → logprob: -12.875040054321289
    4. '_pts' → logprob: -14.875040054321289
    5. '```' → logprob: -15.125040054321289
    6. '\' → logprob: -15.375040054321289
    7. '_
' → logprob: -15.500040054321289
    8. 's' → logprob: -15.875040054321289
    9. '
' → logprob: -16.00004005432129
    10. '_IDS' → logprob: -16.25004005432129

Token 724: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3899680972099304
    2. ':
' → logprob: -1.1399681568145752
    3. '           ' → logprob: -5.889967918395996
    4. ':return' → logprob: -8.889967918395996
    5. '       ' → logprob: -9.639967918395996
    6. '<|end|>' → logprob: -10.264967918395996
    7. ' and' → logprob: -10.764967918395996
    8. '):
' → logprob: -10.889967918395996
    9. '          ' → logprob: -11.764967918395996
    10. ' :
' → logprob: -11.889967918395996

Token 725: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003243798855692148
    2. ' return' → logprob: -8.250324249267578
    3. 'return' → logprob: -10.375324249267578
    4. '
' → logprob: -11.625324249267578
    5. '               ' → logprob: -11.750324249267578
    6. '       ' → logprob: -12.375324249267578
    7. '	       ' → logprob: -12.625324249267578
    8. '		' → logprob: -13.250324249267578
    9. '<|end|>' → logprob: -13.375324249267578
    10. ',' → logprob: -13.750324249267578

Token 726: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5975698232650757
    2. 'return' (adapté à ' return') → logprob: -0.8475698232650757
    3. 'print' → logprob: -4.097569942474365
    4. ' return' → logprob: -5.722569942474365
    5. '       ' → logprob: -6.722569942474365
    6. '
' → logprob: -8.597569465637207
    7. '   ' → logprob: -9.597569465637207
    8. '               ' → logprob: -10.597569465637207
    9. ' print' → logprob: -10.847569465637207
    10. '{return' → logprob: -12.597569465637207

Token 727: ' '{' (ID: 24918)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0017067246371880174
    2. ' cd' → logprob: -6.376706600189209
    3. '	cd' → logprob: -13.376707077026367
    4. 'round' → logprob: -13.876707077026367
    5. '(cd' → logprob: -14.251707077026367
    6. 'dist' → logprob: -14.626707077026367
    7. '   ' → logprob: -15.001707077026367
    8. '_cd' → logprob: -15.501707077026367
    9. '
' → logprob: -16.751707077026367
    10. 'cdf' → logprob: -16.751707077026367

Token 728: ':.' (ID: 27474)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.021555785089731216
    2. ':.' → logprob: -4.2715559005737305
    3. '0' → logprob: -5.2715559005737305
    4. 'dist' → logprob: -6.3965559005737305
    5. ':' → logprob: -8.02155590057373
    6. '.' → logprob: -8.77155590057373
    7. '.cd' → logprob: -10.02155590057373
    8. '(cd' → logprob: -12.02155590057373
    9. '{' → logprob: -12.14655590057373
    10. '_cd' → logprob: -12.77155590057373

Token 729: '12' (ID: 899)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.10040184110403061
    2. '7' → logprob: -2.8504018783569336
    3. '8' → logprob: -3.6004018783569336
    4. '9' → logprob: -5.100401878356934
    5. '3' → logprob: -5.850401878356934
    6. '12' → logprob: -6.975401878356934
    7. '10' → logprob: -8.350401878356934
    8. '2' → logprob: -9.100401878356934
    9. '4' → logprob: -9.850401878356934
    10. '5' → logprob: -9.850401878356934

Token 730: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.016616291366518e-05
    2. 'g' → logprob: -9.625070571899414
    3. '{' → logprob: -12.750070571899414
    4. '```' → logprob: -14.000070571899414
    5. 'e' → logprob: -16.250070571899414
    6. '}' → logprob: -16.375070571899414
    7. '
' → logprob: -16.375070571899414
    8. '.' → logprob: -17.375070571899414
    9. ''f' → logprob: -17.625070571899414
    10. ' f' → logprob: -17.750070571899414

Token 731: '}'.' (ID: 58336)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.10024064034223557
    2. '}'.' → logprob: -2.350240707397461
    3. '{}'.' → logprob: -10.350240707397461
    4. ''' → logprob: -14.100240707397461
    5. '}' → logprob: -14.475240707397461
    6. '}".' → logprob: -15.100240707397461
    7. '}.' → logprob: -15.850240707397461
    8. '".' → logprob: -15.975240707397461
    9. '''.' → logprob: -16.10024070739746
    10. '{' → logprob: -16.47524070739746

Token 732: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -4.320199877838604e-07
    2. ' format' → logprob: -14.75
    3. 'form' → logprob: -17.75
    4. 'ormat' → logprob: -18.625
    5. '	format' → logprob: -18.875
    6. '
' → logprob: -19.125
    7. '.format' → logprob: -19.375
    8. '(format' → logprob: -19.375
    9. 'f' → logprob: -20.0
    10. '```' → logprob: -20.125

Token 733: '(cd' (ID: 144776)
  Prédit: '(cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cd' → logprob: -0.0007587654399685562
    2. 'cd' → logprob: -7.250758647918701
    3. '(dist' → logprob: -10.25075912475586
    4. 'dist' → logprob: -11.37575912475586
    5. ' cd' → logprob: -13.62575912475586
    6. '	cd' → logprob: -14.25075912475586
    7. '(c' → logprob: -15.75075912475586
    8. '_cd' → logprob: -16.87575912475586
    9. '.cd' → logprob: -18.00075912475586
    10. 'Cd' → logprob: -18.37575912475586

Token 734: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.143808109802194e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -13.750041007995605
    4. '')' → logprob: -15.625041007995605
    5. '}' → logprob: -17.000041961669922
    6. '))' → logprob: -17.375041961669922
    7. ')return' → logprob: -17.375041961669922
    8. '       ' → logprob: -17.750041961669922
    9. ')}' → logprob: -17.875041961669922
    10. ')

' → logprob: -18.125041961669922

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006404250394552946
    2. '   ' → logprob: -5.256404399871826
    3. 'for' → logprob: -7.131404399871826
    4. ' for' → logprob: -8.881403923034668
    5. '
' → logprob: -9.256403923034668
    6. '        
' → logprob: -10.006403923034668
    7. '<|end|>' → logprob: -10.256403923034668
    8. '```' → logprob: -10.381403923034668
    9. '           ' → logprob: -11.631403923034668
    10. '    
' → logprob: -12.256403923034668

Token 736: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12839187681674957
    2. '       ' → logprob: -2.128391981124878
    3. ' for' → logprob: -6.628391742706299
    4. '   ' → logprob: -9.003392219543457
    5. '	for' → logprob: -11.503392219543457
    6. '        
' → logprob: -12.503392219543457
    7. '```' → logprob: -13.128392219543457
    8. '           ' → logprob: -13.753392219543457
    9. '
' → logprob: -15.253392219543457
    10. ' ' → logprob: -16.87839126586914

Token 737: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0034520532935857773
    2. '(v' → logprob: -5.753451824188232
    3. ' v' → logprob: -8.75345230102539
    4. 'w' → logprob: -9.12845230102539
    5. 'vv' → logprob: -13.00345230102539
    6. 'vj' → logprob: -13.00345230102539
    7. 'to' → logprob: -13.87845230102539
    8. 'length' → logprob: -14.62845230102539
    9. 'vn' → logprob: -14.87845230102539
    10. ',v' → logprob: -14.87845230102539

Token 738: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13068237900733948
    2. ',d' → logprob: -3.0056824684143066
    3. ',w' → logprob: -3.3806824684143066
    4. ',length' → logprob: -3.3806824684143066
    5. ',c' → logprob: -5.755682468414307
    6. ',l' → logprob: -6.880682468414307
    7. ' ,' → logprob: -7.630682468414307
    8. ',v' → logprob: -9.880681991577148
    9. ',len' → logprob: -10.380681991577148
    10. ',
' → logprob: -10.380681991577148

Token 739: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3486848473548889
    2. 'in' → logprob: -1.2236847877502441
    3. ')' → logprob: -8.723685264587402
    4. '
' → logprob: -10.598685264587402
    5. ',' → logprob: -10.848685264587402
    6. ' ' → logprob: -11.473685264587402
    7. 'import' → logprob: -12.848685264587402
    8. ' )' → logprob: -12.973685264587402
    9. ' 
' → logprob: -12.973685264587402
    10. '```' → logprob: -13.723685264587402

Token 740: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -3.547789674485102e-05
    2. ' graph' → logprob: -10.250035285949707
    3. '(graph' → logprob: -17.375036239624023
    4. '	graph' → logprob: -18.875036239624023
    5. ' ' → logprob: -21.500036239624023
    6. 'Graph' → logprob: -22.500036239624023
    7. '_graph' → logprob: -22.500036239624023
    8. 'grid' → logprob: -22.750036239624023
    9. '.graph' → logprob: -22.750036239624023
    10. '
' → logprob: -22.750036239624023

Token 741: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '(u' → logprob: -18.625
    3. '[' → logprob: -18.875
    4. 'u' → logprob: -19.0
    5. '	u' → logprob: -20.0
    6. '```' → logprob: -20.875
    7. '   ' → logprob: -21.0
    8. ' [' → logprob: -21.25
    9. ',u' → logprob: -21.625
    10. ' u' → logprob: -21.75

Token 742: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8918213248252869
    2. '):
' → logprob: -1.1418213844299316
    3. ']:
' → logprob: -1.8918213844299316
    4. '):' → logprob: -3.1418213844299316
    5. ']:' → logprob: -3.2668213844299316
    6. ':' → logprob: -4.516821384429932
    7. ':
' → logprob: -4.891821384429932
    8. ',w' → logprob: -5.141821384429932
    9. '   ' → logprob: -5.266821384429932
    10. ']):' → logprob: -6.141821384429932

Token 743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006340435356833041
    2. '	       ' → logprob: -8.00063419342041
    3. ' if' → logprob: -8.50063419342041
    4. '<|end|>' → logprob: -11.25063419342041
    5. '       ' → logprob: -11.50063419342041
    6. ',' → logprob: -11.50063419342041
    7. '            
' → logprob: -11.62563419342041
    8. 'if' → logprob: -11.75063419342041
    9. '          ' → logprob: -11.87563419342041
    10. '
' → logprob: -11.87563419342041

Token 744: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.04841145500540733
    2. 'nd' (adapté à ' nd') → logprob: -3.1734113693237305
    3. '           ' → logprob: -5.2984113693237305
    4. 'new' → logprob: -8.54841136932373
    5. 'if' → logprob: -9.54841136932373
    6. ' if' → logprob: -10.04841136932373
    7. 'nv' → logprob: -10.67341136932373
    8. ' new' → logprob: -11.04841136932373
    9. '(nd' → logprob: -11.29841136932373
    10. 'n' → logprob: -12.04841136932373

Token 745: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03806409612298012
    2. ' =' → logprob: -3.2880640029907227
    3. '=
' → logprob: -10.913064002990723
    4. '=w' → logprob: -13.913064002990723
    5. '=d' → logprob: -14.163064002990723
    6. '=v' → logprob: -14.663064002990723
    7. '=cut' → logprob: -14.913064002990723
    8. '=c' → logprob: -14.913064002990723
    9. '=pd' → logprob: -15.288064002990723
    10. '=int' → logprob: -15.538064002990723

Token 746: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.15310683415737e-05
    2. ' cd' → logprob: -10.750021934509277
    3. '	cd' → logprob: -18.75002098083496
    4. '(cd' → logprob: -18.87502098083496
    5. '_cd' → logprob: -21.25002098083496
    6. 'cdn' → logprob: -21.25002098083496
    7. ' ' → logprob: -22.87502098083496
    8. 'dist' → logprob: -23.25002098083496
    9. '   ' → logprob: -23.25002098083496
    10. 'cad' → logprob: -23.37502098083496

Token 747: '+w' (ID: 155687)
  Prédit: '+w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+w' → logprob: -0.6802790760993958
    2. '+' → logprob: -1.180279016494751
    3. ' +' → logprob: -1.680279016494751
    4. '+
' → logprob: -12.180278778076172
    5. '+c' → logprob: -13.305278778076172
    6. ' +
' → logprob: -14.305278778076172
    7. '＋' → logprob: -14.805278778076172
    8. ' ' → logprob: -14.930278778076172
    9. '<w' → logprob: -15.805278778076172
    10. ' plus' → logprob: -15.930278778076172

Token 748: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4906177818775177
    2. '
' → logprob: -0.9906177520751953
    3. '<|end|>' → logprob: -4.615617752075195
    4. ' 
' → logprob: -6.115617752075195
    5. '            
' → logprob: -6.615617752075195
    6. '       ' → logprob: -7.365617752075195
    7. '  
' → logprob: -7.740617752075195
    8. ' if' → logprob: -7.740617752075195
    9. '<|end|>' → logprob: -7.865617752075195
    10. '               ' → logprob: -8.365617752075195

Token 749: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009018116979859769
    2. ' if' → logprob: -8.00090217590332
    3. '<|end|>' → logprob: -8.12590217590332
    4. '
' → logprob: -9.25090217590332
    5. ' 
' → logprob: -10.12590217590332
    6. '	       ' → logprob: -10.62590217590332
    7. '<|end|>' → logprob: -11.00090217590332
    8. '            
' → logprob: -11.00090217590332
    9. '		' → logprob: -11.50090217590332
    10. '          ' → logprob: -11.50090217590332

Token 750: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13690729439258575
    2. ' if' → logprob: -2.1369073390960693
    3. 'if' (adapté à ' if') → logprob: -4.63690710067749
    4. '            ' → logprob: -9.636907577514648
    5. ' 
' → logprob: -10.011907577514648
    6. '            
' → logprob: -10.136907577514648
    7. '
' → logprob: -10.886907577514648
    8. '               ' → logprob: -11.261907577514648
    9. '<|end|>' → logprob: -11.386907577514648
    10. ' ' → logprob: -11.386907577514648

Token 751: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.5273429155349731
    2. 'nd' → logprob: -0.9023429155349731
    3. ' dist' → logprob: -5.652342796325684
    4. 'dist' → logprob: -7.277342796325684
    5. '(nd' → logprob: -12.027342796325684
    6. '   ' → logprob: -13.527342796325684
    7. 'ndl' → logprob: -14.527342796325684
    8. '	dist' → logprob: -14.777342796325684
    9. '
' → logprob: -15.152342796325684
    10. ' ' → logprob: -15.277342796325684

Token 752: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11368249356746674
    2. ' <' → logprob: -2.238682508468628
    3. '<float' → logprob: -7.363682270050049
    4. '<n' → logprob: -9.363682746887207
    5. '<std' → logprob: -10.488682746887207
    6. '[' → logprob: -10.863682746887207
    7. '<th' → logprob: -10.988682746887207
    8. '<int' → logprob: -11.113682746887207
    9. '<|end|>' → logprob: -11.988682746887207
    10. '<size' → logprob: -12.113682746887207

Token 753: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004306692280806601
    2. ' dist' → logprob: -7.750430583953857
    3. '	dist' → logprob: -19.375431060791016
    4. '(dist' → logprob: -19.500431060791016
    5. '   ' → logprob: -19.875431060791016
    6. '
' → logprob: -21.375431060791016
    7. ' ' → logprob: -21.500431060791016
    8. '_dist' → logprob: -21.500431060791016
    9. '```' → logprob: -22.625431060791016
    10. '  ' → logprob: -23.125431060791016

Token 754: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -6.630610641877865e-06
    2. '_dist' → logprob: -12.375006675720215
    3. 'arr' → logprob: -13.625006675720215
    4. '[v' → logprob: -15.125006675720215
    5. 'dist' → logprob: -15.125006675720215
    6. '[u' → logprob: -15.375006675720215
    7. '_[' → logprob: -15.750006675720215
    8. 'Arr' → logprob: -16.3750057220459
    9. '_' → logprob: -17.1250057220459
    10. 'ance' → logprob: -17.5000057220459

Token 755: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. '[u' → logprob: -15.25
    3. 'v' → logprob: -15.625
    4. '<v' → logprob: -19.625
    5. ' [' → logprob: -20.375
    6. '[' → logprob: -20.625
    7. '[
' → logprob: -21.0
    8. ' v' → logprob: -21.125
    9. '[w' → logprob: -21.375
    10. '	v' → logprob: -21.5

Token 756: ']-' (ID: 27107)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3568614721298218
    2. ' -' → logprob: -1.7318614721298218
    3. ':
' → logprob: -2.7318615913391113
    4. '-' → logprob: -3.6068615913391113
    5. '):
' → logprob: -4.606861591339111
    6. '):' → logprob: -4.606861591339111
    7. '[' → logprob: -5.106861591339111
    8. '       ' → logprob: -6.481861591339111
    9. '   ' → logprob: -6.856861591339111
    10. ')' → logprob: -7.856861591339111

Token 757: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '0' → logprob: -18.125
    4. '   ' → logprob: -18.875
    5. '-' → logprob: -21.25
    6. '
' → logprob: -21.75
    7. '```' → logprob: -22.375
    8. '           ' → logprob: -22.625
    9. '``' → logprob: -23.25
    10. '(' → logprob: -23.25

Token 758: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -5.347765181795694e-05
    2. '-' → logprob: -10.125053405761719
    3. '1' → logprob: -11.750053405761719
    4. '.' → logprob: -12.500053405761719
    5. '[' → logprob: -13.750053405761719
    6. '```' → logprob: -15.125053405761719
    7. '10' → logprob: -15.750053405761719
    8. '           ' → logprob: -16.37505340576172
    9. '-e' → logprob: -16.87505340576172
    10. '+' → logprob: -16.87505340576172

Token 759: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. '```' → logprob: -17.25
    3. '10' → logprob: -18.5
    4. '-
' → logprob: -20.125
    5. '   ' → logprob: -21.375
    6. '7' → logprob: -22.125
    7. '−' → logprob: -22.125
    8. '9' → logprob: -22.25
    9. '{-' → logprob: -22.25
    10. ' -' → logprob: -22.375

Token 760: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003460712905507535
    2. '12' → logprob: -8.000346183776855
    3. '9' → logprob: -11.875346183776855
    4. '8' → logprob: -13.125346183776855
    5. '14' → logprob: -14.625346183776855
    6. '15' → logprob: -14.875346183776855
    7. '13' → logprob: -14.875346183776855
    8. '-' → logprob: -15.500346183776855
    9. '11' → logprob: -15.500346183776855
    10. '7' → logprob: -16.37534523010254

Token 761: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3495925962924957
    2. ':' → logprob: -1.2245925664901733
    3. '               ' → logprob: -7.849592685699463
    4. '           ' → logprob: -7.974592685699463
    5. '):
' → logprob: -8.224592208862305
    6. '       ' → logprob: -10.224592208862305
    7. '<|end|>' → logprob: -10.849592208862305
    8. ' :
' → logprob: -11.224592208862305
    9. ',' → logprob: -11.474592208862305
    10. ':
' → logprob: -11.599592208862305

Token 762: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002432620618492365
    2. 'dist' → logprob: -6.127432823181152
    3. ' dist' → logprob: -8.377432823181152
    4. '                   ' → logprob: -12.252432823181152
    5. '           ' → logprob: -13.127432823181152
    6. '	dist' → logprob: -13.252432823181152
    7. '```' → logprob: -13.252432823181152
    8. 'Dist' → logprob: -13.627432823181152
    9. '_dist' → logprob: -13.752432823181152
    10. '              ' → logprob: -13.752432823181152

Token 763: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.018363801762461662
    2. ' dist' → logprob: -4.018363952636719
    3. '                   ' → logprob: -8.893363952636719
    4. '               ' → logprob: -9.518363952636719
    5. '	dist' → logprob: -12.893363952636719
    6. '_dist' → logprob: -15.643363952636719
    7. '                ' → logprob: -16.26836395263672
    8. '   ' → logprob: -16.51836395263672
    9. '                       ' → logprob: -16.76836395263672
    10. 'Dist' → logprob: -17.26836395263672

Token 764: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -6.704273118884885e-07
    2. 'arr' → logprob: -14.250000953674316
    3. '	arr' → logprob: -17.375
    4. 'Arr' → logprob: -18.25
    5. '_array' → logprob: -18.5
    6. '_dist' → logprob: -19.625
    7. '[arr' → logprob: -20.0
    8. '_ar' → logprob: -20.625
    9. 'a' → logprob: -20.625
    10. 's' → logprob: -20.875

Token 765: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.5
    3. '[u' → logprob: -19.25
    4. '[val' → logprob: -19.25
    5. '<v' → logprob: -19.875
    6. '[' → logprob: -20.0
    7. '=v' → logprob: -20.625
    8. '	v' → logprob: -20.75
    9. '[var' → logprob: -21.0
    10. '[
' → logprob: -21.375

Token 766: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26685282588005066
    2. ']=' → logprob: -2.516852855682373
    3. '=v' → logprob: -2.516852855682373
    4. '[v' → logprob: -2.766852855682373
    5. ']' → logprob: -5.266852855682373
    6. ' =' → logprob: -5.391852855682373
    7. ')=' → logprob: -9.016852378845215
    8. ',v' → logprob: -10.391852378845215
    9. '=
' → logprob: -11.016852378845215
    10. '[' → logprob: -11.641852378845215

Token 767: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0005532711511477828
    2. ' nd' → logprob: -7.500553131103516
    3. '(nd' → logprob: -15.250553131103516
    4. '_nd' → logprob: -16.875553131103516
    5. 'ndl' → logprob: -19.250553131103516
    6. '
' → logprob: -19.375553131103516
    7. '.nd' → logprob: -20.250553131103516
    8. 'nt' → logprob: -20.500553131103516
    9. 'ng' → logprob: -20.625553131103516
    10. 'n' → logprob: -20.875553131103516

Token 768: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013524403038900346
    2. ' he' → logprob: -9.12513542175293
    3. ',' → logprob: -12.00013542175293
    4. 'he' → logprob: -12.00013542175293
    5. '              ' → logprob: -12.50013542175293
    6. '<|end|>' → logprob: -13.00013542175293
    7. '       ' → logprob: -13.37513542175293
    8. '           ' → logprob: -13.62513542175293
    9. '                ' → logprob: -13.87513542175293
    10. '                
' → logprob: -14.12513542175293

Token 769: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011224760673940182
    2. 'he' → logprob: -7.50112247467041
    3. ' he' → logprob: -7.50112247467041
    4. '              ' → logprob: -12.00112247467041
    5. '                   ' → logprob: -12.75112247467041
    6. '           ' → logprob: -12.87612247467041
    7. '                ' → logprob: -13.25112247467041
    8. '       ' → logprob: -13.87612247467041
    9. '```' → logprob: -14.50112247467041
    10. '                
' → logprob: -14.50112247467041

Token 770: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.0001234428636962548
    2. ' he' → logprob: -9.000123023986816
    3. '               ' → logprob: -18.000123977661133
    4. 'heap' → logprob: -19.250123977661133
    5. '           ' → logprob: -21.250123977661133
    6. '                   ' → logprob: -22.750123977661133
    7. '              ' → logprob: -23.500123977661133
    8. '_he' → logprob: -23.875123977661133
    9. '             ' → logprob: -24.250123977661133
    10. '```' → logprob: -24.500123977661133

Token 771: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.981667537620524e-06
    2. 'pp' → logprob: -13.625001907348633
    3. 'ap' → logprob: -14.125001907348633
    4. '```' → logprob: -17.375001907348633
    5. ' app' → logprob: -18.000001907348633
    6. 'a' → logprob: -19.375001907348633
    7. 'push' → logprob: -19.375001907348633
    8. 'appen' → logprob: -20.000001907348633
    9. 'append' → logprob: -20.375001907348633
    10. 'p' → logprob: -20.500001907348633

Token 772: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.001940057729370892
    2. 'push' → logprob: -6.2519402503967285
    3. 'op' → logprob: -12.25193977355957
    4. 'app' → logprob: -12.62693977355957
    5. 'p' → logprob: -13.25193977355957
    6. 'pp' → logprob: -13.87693977355957
    7. 'sh' → logprob: -14.75193977355957
    8. '```' → logprob: -15.75193977355957
    9. '_push' → logprob: -16.50193977355957
    10. 'Push' → logprob: -17.75193977355957

Token 773: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.975612187583465e-05
    2. '(q' → logprob: -10.500029563903809
    3. '(' → logprob: -13.250029563903809
    4. '(
' → logprob: -16.250030517578125
    5. ' (' → logprob: -16.500030517578125
    6. 'h' → logprob: -16.500030517578125
    7. '(n' → logprob: -17.000030517578125
    8. '	h' → logprob: -17.625030517578125
    9. '(v' → logprob: -17.875030517578125
    10. ' h' → logprob: -17.875030517578125

Token 774: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1160349458805285e-05
    2. 'hq' → logprob: -12.250011444091797
    3. '(q' → logprob: -12.500011444091797
    4. '(h' → logprob: -13.125011444091797
    5. 'qh' → logprob: -15.500011444091797
    6. 'sq' → logprob: -15.625011444091797
    7. '	q' → logprob: -16.625011444091797
    8. 'qs' → logprob: -17.000011444091797
    9. ' q' → logprob: -17.000011444091797
    10. 'p' → logprob: -17.375011444091797

Token 775: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00032271104282699525
    2. '(q' → logprob: -9.125322341918945
    3. '(' → logprob: -9.375322341918945
    4. ',h' → logprob: -9.875322341918945
    5. ',' → logprob: -10.000322341918945
    6. ' (' → logprob: -11.000322341918945
    7. '(
' → logprob: -12.250322341918945
    8. ')' → logprob: -12.500322341918945
    9. '(n' → logprob: -12.875322341918945
    10. ',(' → logprob: -13.375322341918945

Token 776: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.7120533811976202e-05
    2. ' nd' → logprob: -11.000017166137695
    3. '(nd' → logprob: -14.750017166137695
    4. '_nd' → logprob: -19.625017166137695
    5. 'ndl' → logprob: -19.875017166137695
    6. '   ' → logprob: -20.750017166137695
    7. '```' → logprob: -21.375017166137695
    8. '               ' → logprob: -21.750017166137695
    9. 'nds' → logprob: -21.875017166137695
    10. ' ' → logprob: -22.125017166137695

Token 777: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.16027621924877167
    2. ',' → logprob: -1.910276174545288
    3. 'v' → logprob: -10.535276412963867
    4. ',
' → logprob: -11.160276412963867
    5. ' ,' → logprob: -12.035276412963867
    6. ',w' → logprob: -12.410276412963867
    7. ' v' → logprob: -15.035276412963867
    8. ',n' → logprob: -15.660276412963867
    9. ',s' → logprob: -16.285276412963867
    10. '<|end|>' → logprob: -16.410276412963867

Token 778: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010006214492022991
    2. ')' → logprob: -4.635006427764893
    3. ',v' → logprob: -9.135005950927734
    4. '))
' → logprob: -9.385005950927734
    5. ')v' → logprob: -11.010005950927734
    6. ',' → logprob: -11.010005950927734
    7. ' ))' → logprob: -11.260005950927734
    8. ')))' → logprob: -12.010005950927734
    9. ',u' → logprob: -12.510005950927734
    10. ' )' → logprob: -14.635005950927734

Token 779: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 780: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.073596548754722e-05
    2. ' return' → logprob: -10.25005054473877
    3. '
' → logprob: -11.62505054473877
    4. '   ' → logprob: -12.75005054473877
    5. '	return' → logprob: -12.87505054473877
    6. '    
' → logprob: -14.50005054473877
    7. '```' → logprob: -15.87505054473877
    8. '{return' → logprob: -16.375051498413086
    9. ':return' → logprob: -16.625051498413086
    10. ')return' → logprob: -17.875051498413086

Token 781: ' '' (ID: 461)
  Prédit: ''im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''im' → logprob: -0.004058333113789558
    2. ' '' → logprob: -5.879058361053467
    3. ''impression' → logprob: -7.129058361053467
    4. '"' → logprob: -8.004057884216309
    5. 'None' → logprob: -10.504057884216309
    6. '   ' → logprob: -10.754057884216309
    7. ''imp' → logprob: -11.254057884216309
    8. '`' → logprob: -11.254057884216309
    9. '('' → logprob: -12.254057884216309
    10. '  ' → logprob: -12.504057884216309

Token 782: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -2.8087270038668066e-05
    2. ''im' → logprob: -10.500027656555176
    3. ' impossible' → logprob: -15.500027656555176
    4. 'Impossible' → logprob: -15.500027656555176
    5. '	im' → logprob: -16.375028610229492
    6. 'imp' → logprob: -16.875028610229492
    7. '(im' → logprob: -17.750028610229492
    8. 'possible' → logprob: -18.000028610229492
    9. '-im' → logprob: -18.250028610229492
    10. '   ' → logprob: -18.750028610229492

Token 783: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -7.703443770878948e-06
    2. 'poss' → logprob: -12.000007629394531
    3. '_possible' → logprob: -14.000007629394531
    4. 'Possible' → logprob: -14.875007629394531
    5. 'pos' → logprob: -15.875007629394531
    6. ' possible' → logprob: -17.00000762939453
    7. 'port' → logprob: -18.25000762939453
    8. 'p' → logprob: -18.87500762939453
    9. 'posable' → logprob: -19.25000762939453
    10. 'possibly' → logprob: -19.37500762939453

Token 784: ''

' (ID: 7497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 785: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 786: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011761689558625221
    2. '_data' → logprob: -4.636761665344238
    3. '_line' → logprob: -7.386761665344238
    4. '_lines' → logprob: -7.511761665344238
    5. '().' → logprob: -7.761761665344238
    6. ' =' → logprob: -9.636761665344238
    7. '()
' → logprob: -9.886761665344238
    8. 'data' → logprob: -10.011761665344238
    9. '_text' → logprob: -10.011761665344238
    10. '=' → logprob: -10.261761665344238

Token 787: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7890510559082031
    2. '.readline' → logprob: -0.7890510559082031
    3. '.stdin' → logprob: -2.414051055908203
    4. '.read' → logprob: -7.414051055908203
    5. '.argv' → logprob: -7.914051055908203
    6. '.stdout' → logprob: -8.789051055908203
    7. 'stdin' → logprob: -8.789051055908203
    8. '.setdefault' → logprob: -9.414051055908203
    9. '```' → logprob: -9.414051055908203
    10. '<|end|>' → logprob: -9.539051055908203

Token 788: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01803450658917427
    2. 'read' → logprob: -4.1430344581604
    3. '.readlines' → logprob: -6.7680344581604
    4. '.read' → logprob: -7.8930344581604
    5. '_read' → logprob: -8.768034934997559
    6. '=' → logprob: -9.143034934997559
    7. '<|end|>' → logprob: -9.393034934997559
    8. ' readline' → logprob: -10.143034934997559
    9. '.' → logprob: -10.893034934997559
    10. '
' → logprob: -11.893034934997559

Token 789: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5051171779632568
    2. '()
' → logprob: -1.2551171779632568
    3. '
' → logprob: -2.255117177963257
    4. 'def' → logprob: -5.880117416381836
    5. '().' → logprob: -6.255117416381836
    6. '()

' → logprob: -7.380117416381836
    7. '()\' → logprob: -7.630117416381836
    8. '(' → logprob: -8.505117416381836
    9. 'for' → logprob: -9.380117416381836
    10. '

' → logprob: -9.380117416381836

Token 790: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004843407776206732
    2. 'N' → logprob: -6.379843235015869
    3. 'T' → logprob: -6.629843235015869
    4. 't' → logprob: -7.004843235015869
    5. 'num' → logprob: -7.629843235015869
    6. '```' → logprob: -9.004843711853027
    7. 'def' → logprob: -9.254843711853027
    8. 'Q' → logprob: -9.879843711853027
    9. '
' → logprob: -10.004843711853027
    10. '_' → logprob: -10.879843711853027

Token 791: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25245267152786255
    2. ' True' → logprob: -1.5024526119232178
    3. '(True' → logprob: -8.127452850341797
    4. ' line' → logprob: -8.877452850341797
    5. 'line' → logprob: -9.502452850341797
    6. '1' → logprob: -11.627452850341797
    7. '=True' → logprob: -13.002452850341797
    8. 'true' → logprob: -13.377452850341797
    9. '
' → logprob: -14.627452850341797
    10. '(line' → logprob: -15.752452850341797

Token 792: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9327908754348755
    2. '():' → logprob: -0.9327908754348755
    3. '():
' → logprob: -2.307790756225586
    4. ' line' → logprob: -3.057790756225586
    5. ':
' → logprob: -4.182790756225586
    6. '(' → logprob: -4.307790756225586
    7. '   ' → logprob: -4.307790756225586
    8. '(line' → logprob: -4.932790756225586
    9. '(True' → logprob: -4.932790756225586
    10. ' (' → logprob: -6.307790756225586

Token 793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015425682067871094
    2. ' line' → logprob: -4.765425682067871
    3. 'line' → logprob: -5.015425682067871
    4. '	line' → logprob: -8.890425682067871
    5. 'try' → logprob: -12.265425682067871
    6. '```' → logprob: -12.515425682067871
    7. '   ' → logprob: -12.890425682067871
    8. 'l' → logprob: -14.015425682067871
    9. '_line' → logprob: -14.140425682067871
    10. '(line' → logprob: -14.265425682067871

Token 794: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0013901159400120378
    2. ' line' → logprob: -7.001389980316162
    3. 'n' (adapté à ' n') → logprob: -8.25139045715332
    4. 'N' → logprob: -9.00139045715332
    5. 'l' → logprob: -9.87639045715332
    6. 'L' → logprob: -10.25139045715332
    7. 's' → logprob: -12.37639045715332
    8. '   ' → logprob: -13.00139045715332
    9. '	line' → logprob: -14.75139045715332
    10. 'try' → logprob: -15.12639045715332

Token 795: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04373932257294655
    2. ' =' → logprob: -3.1687393188476562
    3. '=int' → logprob: -7.418739318847656
    4. '=input' → logprob: -9.043739318847656
    5. '=line' → logprob: -11.918739318847656
    6. '=n' → logprob: -12.668739318847656
    7. '=
' → logprob: -12.668739318847656
    8. '_=' → logprob: -13.418739318847656
    9. '   ' → logprob: -13.543739318847656
    10. ',' → logprob: -14.043739318847656

Token 796: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010937226936221123
    2. 'input' → logprob: -4.760937213897705
    3. '()' → logprob: -6.260937213897705
    4. '(sys' → logprob: -8.010937690734863
    5. '()
' → logprob: -10.510937690734863
    6. 'sys' → logprob: -10.510937690734863
    7. '(' → logprob: -11.385937690734863
    8. '=input' → logprob: -11.635937690734863
    9. ' (' → logprob: -14.385937690734863
    10. '();' → logprob: -14.635937690734863

Token 797: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5827569365501404
    2. '())
' → logprob: -0.8327569365501404
    3. '().' → logprob: -5.332756996154785
    4. '()' → logprob: -6.332756996154785
    5. '()
' → logprob: -8.707756996154785
    6. '())

' → logprob: -11.332756996154785
    7. '(' → logprob: -12.707756996154785
    8. '())
' → logprob: -12.832756996154785
    9. ')' → logprob: -13.207756996154785
    10. ' ())' → logprob: -14.582756996154785

Token 798: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22525198757648468
    2. ' if' → logprob: -1.7252520322799683
    3. '<|end|>' → logprob: -3.8502519130706787
    4. '   ' → logprob: -6.225252151489258
    5. '<|end|>' → logprob: -9.475252151489258
    6. '	if' → logprob: -9.600252151489258
    7. ';if' → logprob: -9.725252151489258
    8. ')' → logprob: -10.725252151489258
    9. '```' → logprob: -10.850252151489258
    10. ',' → logprob: -11.225252151489258

Token 799: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0046503725461661816
    2. ' if' → logprob: -5.379650592803955
    3. '<|end|>' → logprob: -10.629650115966797
    4. '   ' → logprob: -12.629650115966797
    5. '	if' → logprob: -13.879650115966797
    6. 'break' → logprob: -15.004650115966797
    7. ';if' → logprob: -15.004650115966797
    8. '
' → logprob: -15.379650115966797
    9. 'If' → logprob: -16.004650115966797
    10. '<|end|>' → logprob: -16.004650115966797

Token 800: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1305282860994339
    2. ' n' → logprob: -2.130528211593628
    3. ' not' → logprob: -5.630528450012207
    4. 'not' → logprob: -11.880528450012207
    5. '	n' → logprob: -15.880528450012207
    6. 'n't' → logprob: -16.13052749633789
    7. '_n' → logprob: -17.50552749633789
    8. '(n' → logprob: -17.88052749633789
    9. '0' → logprob: -18.13052749633789
    10. ' ' → logprob: -18.25552749633789

Token 801: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04695584997534752
    2. '<=' → logprob: -3.6719558238983154
    3. ' ==' → logprob: -3.9219558238983154
    4. '=' → logprob: -7.7969560623168945
    5. ' <=' → logprob: -8.921956062316895
    6. '0' → logprob: -10.296956062316895
    7. '()==' → logprob: -11.171956062316895
    8. '===' → logprob: -11.296956062316895
    9. ')==' → logprob: -11.546956062316895
    10. '==
' → logprob: -11.921956062316895

Token 802: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -19.375001907348633
    4. '=' → logprob: -21.375001907348633
    5. '  ' → logprob: -22.250001907348633
    6. '   ' → logprob: -22.375001907348633
    7. '۰' → logprob: -22.375001907348633
    8. ' -' → logprob: -22.875001907348633
    9. 'n' → logprob: -23.375001907348633
    10. '    ' → logprob: -23.875001907348633

Token 803: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2971668541431427
    2. ':
' → logprob: -1.6721668243408203
    3. '   ' → logprob: -2.6721668243408203
    4. '	break' → logprob: -10.04716682434082
    5. ':return' → logprob: -10.67216682434082
    6. '       ' → logprob: -11.04716682434082
    7. '  ' → logprob: -11.67216682434082
    8. '.' → logprob: -11.92216682434082
    9. '<|end|>' → logprob: -11.92216682434082
    10. ' ' → logprob: -12.29716682434082

Token 804: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02986919693648815
    2. '       ' → logprob: -3.5298690795898438
    3. '	break' → logprob: -10.154869079589844
    4. '   ' → logprob: -10.279869079589844
    5. ' break' → logprob: -11.529869079589844
    6. '	' → logprob: -11.654869079589844
    7. ' ' → logprob: -11.779869079589844
    8. ' ' → logprob: -12.154869079589844
    9. 'break' → logprob: -12.654869079589844
    10. '```' → logprob: -12.779869079589844

Token 805: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0034791433718055487
    2. ' break' → logprob: -5.75347900390625
    3. '   ' → logprob: -8.50347900390625
    4. '	break' → logprob: -9.25347900390625
    5. '
' → logprob: -13.62847900390625
    6. '_break' → logprob: -14.12847900390625
    7. '       ' → logprob: -15.37847900390625
    8. 'return' → logprob: -16.00347900390625
    9. '```' → logprob: -16.25347900390625
    10. ' ' → logprob: -16.37847900390625

Token 806: '
' (ID: 198)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.0001720742875477299
    2. '   ' → logprob: -10.000171661376953
    3. 'monster' → logprob: -10.500171661376953
    4. '```' → logprob: -10.750171661376953
    5. 'm' → logprob: -11.125171661376953
    6. '
' → logprob: -11.500171661376953
    7. 'mons' → logprob: -11.625171661376953
    8. '    
' → logprob: -11.750171661376953
    9. ' monsters' → logprob: -11.750171661376953
    10. '<|end|>' → logprob: -11.875171661376953

Token 807: '   ' (ID: 271)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.000133098365040496
    2. 'monster' → logprob: -10.250133514404297
    3. 'm' → logprob: -10.375133514404297
    4. 'points' → logprob: -10.875133514404297
    5. 'mons' → logprob: -11.250133514404297
    6. '```' → logprob: -11.250133514404297
    7. '   ' → logprob: -11.625133514404297
    8. ' monsters' → logprob: -12.625133514404297
    9. '<|end|>' → logprob: -13.375133514404297
    10. '_mon' → logprob: -13.625133514404297

Token 808: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.00024048985505942255
    2. 'm' → logprob: -9.000240325927734
    3. '   ' → logprob: -10.250240325927734
    4. 'monster' → logprob: -10.375240325927734
    5. 'mons' → logprob: -10.375240325927734
    6. 'points' → logprob: -11.750240325927734
    7. ' monsters' → logprob: -11.875240325927734
    8. 'ms' → logprob: -13.875240325927734
    9. '```' → logprob: -14.000240325927734
    10. 'mo' → logprob: -14.375240325927734

Token 809: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0634738951921463
    2. ' =' → logprob: -3.18847393989563
    3. '=[]' → logprob: -4.063473701477051
    4. '=[' → logprob: -5.813473701477051
    5. '=list' → logprob: -9.93847370147705
    6. '=[]
' → logprob: -10.81347370147705
    7. ' =[' → logprob: -11.68847370147705
    8. '=input' → logprob: -12.56347370147705
    9. '＝' → logprob: -13.43847370147705
    10. '=sys' → logprob: -13.68847370147705

Token 810: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004398905672132969
    2. '[int' → logprob: -5.754398822784424
    3. '[n' → logprob: -8.504399299621582
    4. '[input' → logprob: -8.754399299621582
    5. '[m' → logprob: -9.254399299621582
    6. '[str' → logprob: -9.254399299621582
    7. '[t' → logprob: -9.504399299621582
    8. '[]' → logprob: -10.129399299621582
    9. '[array' → logprob: -10.129399299621582
    10. '[token' → logprob: -10.254399299621582

Token 811: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0002783783129416406
    2. '(tuple' → logprob: -8.50027847290039
    3. ' tuple' → logprob: -9.50027847290039
    4. '
' → logprob: -18.12527847290039
    5. 'float' → logprob: -18.12527847290039
    6. '   ' → logprob: -19.00027847290039
    7. '_tuple' → logprob: -19.87527847290039
    8. 'Tuple' → logprob: -20.50027847290039
    9. 'list' → logprob: -20.87527847290039
    10. '(' → logprob: -21.00027847290039

Token 812: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.018152983859181404
    2. 'map' → logprob: -4.018153190612793
    3. '(float' → logprob: -13.518153190612793
    4. 'float' → logprob: -13.768153190612793
    5. ' map' → logprob: -14.893153190612793
    6. ',map' → logprob: -16.393152236938477
    7. '	map' → logprob: -16.893152236938477
    8. '_map' → logprob: -17.268152236938477
    9. '.map' → logprob: -17.643152236938477
    10. '
' → logprob: -17.768152236938477

Token 813: '(float' (ID: 17830)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.25244230031967163
    2. '(float' → logprob: -1.5024423599243164
    3. 'int' → logprob: -8.627442359924316
    4. '(int' → logprob: -9.002442359924316
    5. 'map' → logprob: -9.627442359924316
    6. ',float' → logprob: -9.752442359924316
    7. '(map' → logprob: -10.252442359924316
    8. ' float' → logprob: -11.252442359924316
    9. '=float' → logprob: -11.627442359924316
    10. '```' → logprob: -11.752442359924316

Token 814: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.011580943129956722
    2. ',' → logprob: -4.761580944061279
    3. '(input' → logprob: -5.886580944061279
    4. 'input' → logprob: -8.636580467224121
    5. '   ' → logprob: -12.386580467224121
    6. ' input' → logprob: -13.761580467224121
    7. ' ,' → logprob: -13.761580467224121
    8. '(' → logprob: -14.636580467224121
    9. '=input' → logprob: -15.261580467224121
    10. ',int' → logprob: -15.386580467224121

Token 815: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005530327325686812
    2. ' input' → logprob: -7.500553131103516
    3. '(input' → logprob: -17.125553131103516
    4. 'sys' → logprob: -19.000553131103516
    5. ',input' → logprob: -20.000553131103516
    6. '[input' → logprob: -20.000553131103516
    7. '	input' → logprob: -20.125553131103516
    8. '
' → logprob: -20.625553131103516
    9. ' ' → logprob: -20.875553131103516
    10. '   ' → logprob: -21.750553131103516

Token 816: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0802738870552275e-05
    2. '.readline' → logprob: -11.50001049041748
    3. '()' → logprob: -14.62501049041748
    4. '.strip' → logprob: -16.750011444091797
    5. '()))' → logprob: -16.875011444091797
    6. '()
' → logprob: -17.125011444091797
    7. '.split' → logprob: -17.250011444091797
    8. '   ' → logprob: -18.750011444091797
    9. '()[' → logprob: -18.875011444091797
    10. '(' → logprob: -19.250011444091797

Token 817: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.39305293560028076
    2. 'strip' → logprob: -1.1430529356002808
    3. 'read' → logprob: -5.51805305480957
    4. 'rstrip' → logprob: -6.39305305480957
    5. '().' → logprob: -8.01805305480957
    6. '.readline' → logprob: -9.01805305480957
    7. ')' → logprob: -12.01805305480957
    8. '.strip' → logprob: -12.51805305480957
    9. ' readline' → logprob: -12.89305305480957
    10. '(split' → logprob: -13.26805305480957

Token 818: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0019642009865492582
    2. '))' → logprob: -6.376964092254639
    3. '()' → logprob: -8.751964569091797
    4. '()))
' → logprob: -9.376964569091797
    5. '(' → logprob: -11.501964569091797
    6. '().' → logprob: -12.626964569091797
    7. '()
' → logprob: -13.001964569091797
    8. '())))' → logprob: -14.126964569091797
    9. '())' → logprob: -14.626964569091797
    10. '('' → logprob: -14.626964569091797

Token 819: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032793101854622364
    2. '())' → logprob: -6.628279209136963
    3. '()' → logprob: -6.753279209136963
    4. ')]' → logprob: -7.378279209136963
    5. '(n' → logprob: -9.628279685974121
    6. 'for' → logprob: -10.378279685974121
    7. ' for' → logprob: -10.753279685974121
    8. ' )' → logprob: -11.628279685974121
    9. '))' → logprob: -12.003279685974121
    10. '(' → logprob: -12.003279685974121

Token 820: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006877937354147434
    2. '_range' → logprob: -5.131877899169922
    3. 'range' → logprob: -7.131877899169922
    4. ' range' → logprob: -8.881877899169922
    5. '_i' → logprob: -12.881877899169922
    6. '_=' → logprob: -13.131877899169922
    7. '_in' → logprob: -13.381877899169922
    8. '_
' → logprob: -13.631877899169922
    9. ' _' → logprob: -14.506877899169922
    10. '	range' → logprob: -14.506877899169922

Token 821: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03123229369521141
    2. 'in' → logprob: -3.5312323570251465
    3. ' range' → logprob: -6.6562323570251465
    4. ' in' → logprob: -8.781231880187988
    5. '(range' → logprob: -10.906231880187988
    6. 'n' → logprob: -11.031231880187988
    7. '(' → logprob: -12.531231880187988
    8. ')' → logprob: -14.281231880187988
    9. '	range' → logprob: -14.281231880187988
    10. '(n' → logprob: -15.031231880187988

Token 822: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.392202976712724e-06
    2. ' range' → logprob: -12.000006675720215
    3. '(range' → logprob: -16.0000057220459
    4. 'n' → logprob: -20.3750057220459
    5. '	range' → logprob: -20.3750057220459
    6. '
' → logprob: -21.6250057220459
    7. '.range' → logprob: -21.7500057220459
    8. '[' → logprob: -23.8750057220459
    9. '[n' → logprob: -25.0000057220459
    10. '(n' → logprob: -25.0000057220459

Token 823: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47408226132392883
    2. '(n' → logprob: -0.9740822315216064
    3. '(' → logprob: -12.474081993103027
    4. ')n' → logprob: -14.099081993103027
    5. ' n' → logprob: -14.599081993103027
    6. '	n' → logprob: -16.474082946777344
    7. '_n' → logprob: -16.849082946777344
    8. ' (' → logprob: -16.849082946777344
    9. '
' → logprob: -16.974082946777344
    10. ')' → logprob: -17.224082946777344

Token 824: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.692145012086257e-05
    2. ']' → logprob: -10.125046730041504
    3. '   ' → logprob: -12.875046730041504
    4. ')' → logprob: -13.125046730041504
    5. ')]
' → logprob: -13.250046730041504
    6. ' )' → logprob: -15.750046730041504
    7. ')],' → logprob: -16.62504768371582
    8. '])]' → logprob: -16.75004768371582
    9. '()]' → logprob: -17.00004768371582
    10. '')]' → logprob: -17.25004768371582

Token 825: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011753206141293049
    2. '   ' → logprob: -4.511753082275391
    3. 'result' → logprob: -7.886753082275391
    4. '```' → logprob: -8.13675308227539
    5. ' print' → logprob: -10.88675308227539
    6. 'output' → logprob: -11.76175308227539
    7. '``' → logprob: -12.51175308227539
    8. '    
' → logprob: -12.63675308227539
    9. '	print' → logprob: -13.63675308227539
    10. '
' → logprob: -14.51175308227539

Token 826: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.0484450437361374e-05
    2. 'result' → logprob: -10.750040054321289
    3. 'res' → logprob: -11.000040054321289
    4. ' print' → logprob: -13.500040054321289
    5. '   ' → logprob: -14.125040054321289
    6. 'ans' → logprob: -16.00004005432129
    7. 'answer' → logprob: -17.75004005432129
    8. 'out' → logprob: -17.87504005432129
    9. 'output' → logprob: -18.00004005432129
    10. 'r' → logprob: -19.00004005432129

Token 827: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.1637164789135568e-05
    2. 'solve' → logprob: -11.625011444091797
    3. '(' → logprob: -12.875011444091797
    4. '(sol' → logprob: -17.000011444091797
    5. '(solution' → logprob: -17.125011444091797
    6. '()' → logprob: -18.000011444091797
    7. ' solve' → logprob: -18.250011444091797
    8. '(
' → logprob: -18.375011444091797
    9. '(min' → logprob: -19.500011444091797
    10. 's' → logprob: -19.500011444091797

Token 828: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -3.128163257315464e-07
    2. 'solve' → logprob: -15.125
    3. 'ol' → logprob: -17.75
    4. 'olver' → logprob: -18.0
    5. 'ove' → logprob: -18.375
    6. 'OLVE' → logprob: -19.0
    7. 'olv' → logprob: -19.5
    8. '(' → logprob: -19.875
    9. 'olved' → logprob: -21.125
    10. 'ole' → logprob: -21.25

Token 829: '(mon' (ID: 142845)
  Prédit: '(mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mon' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.625
    3. 'mon' → logprob: -16.0
    4. '(m' → logprob: -16.125
    5. '(' → logprob: -18.375
    6. ')(' → logprob: -18.75
    7. '```' → logprob: -18.875
    8. ')' → logprob: -19.625
    9. '((' → logprob: -20.0
    10. '(min' → logprob: -20.25

Token 830: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -5.796184723294573e-06
    2. 'ters' → logprob: -12.125005722045898
    3. 's' → logprob: -15.250005722045898
    4. 'ster' → logprob: -17.1250057220459
    5. 'ons' → logprob: -17.6250057220459
    6. 'st' → logprob: -18.0000057220459
    7. 'ers' → logprob: -18.2500057220459
    8. 'ors' → logprob: -18.3750057220459
    9. 'asters' → logprob: -18.7500057220459
    10. 'sts' → logprob: -19.0000057220459

Token 831: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011164903844473884
    2. ')' → logprob: -9.25011157989502
    3. '()))' → logprob: -11.12511157989502
    4. ' ))' → logprob: -15.25011157989502
    5. ')))' → logprob: -15.37511157989502
    6. '))
' → logprob: -15.50011157989502
    7. '())' → logprob: -17.125112533569336
    8. '()' → logprob: -17.250112533569336
    9. '(' → logprob: -17.500112533569336
    10. '   ' → logprob: -17.625112533569336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 829
Tokens correctement prédits (1ère position, stricte): 390
Tokens correctement prédits (1ère position, avec adaptation): 422
Tokens correctement prédits (top 10): 725
Précision stricte (1ère position): 47.04%
Précision adaptée (1ère position): 50.90%
Précision (top 10): 87.45%
================================================================================
