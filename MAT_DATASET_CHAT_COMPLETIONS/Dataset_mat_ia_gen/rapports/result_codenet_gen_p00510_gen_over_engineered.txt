================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TunnelTrafficData:
    def __init__(self, initial_time: int, initial_cars: int):
        self._n = initial_time
        self._m = initial_cars
        self._interval_data = []

    def add_interval_data(self, entering: int, leaving: int):
        if not (0 <= entering <= 100 and 0 <= leaving <= 100):
            raise ValueError("車の台数は 0 以上 100 以下でなければなりません")
        self._interval_data.append((entering, leaving))

    @property
    def n(self):
        return self._n

    @property
    def initial_cars(self):
        return self._m

    @property
    def intervals(self):
        return self._interval_data


class TrafficAnalyzer:
    def __init__(self, traffic_data: TunnelTrafficData):
        self._data = traffic_data

    def calculate_max_cars_in_tunnel(self) -> int:
        cars_in_tunnel = self._data.initial_cars
        max_cars = cars_in_tunnel

        for i, (entered, left) in enumerate(self._data.intervals, 1):
            cars_in_tunnel += entered - left
            if cars_in_tunnel < 0:
                return 0
            max_cars = max(max_cars, cars_in_tunnel)
        return max_cars


class TunnelTrafficProcessor:
    def __init__(self, input_lines):
        self._input_lines = input_lines

    def process(self) -> int:
        n = int(self._input_lines[0].strip())
        m = int(self._input_lines[1].strip())

        traffic_data = TunnelTrafficData(n, m)

        for line in self._input_lines[2:2 + n]:
            entered_str, left_str = line.strip().split()
            entered, left = int(entered_str), int(left_str)
            traffic_data.add_interval_data(entered, left)

        analyzer = TrafficAnalyzer(traffic_data)
        return analyzer.calculate_max_cars_in_tunnel()


def main():
    import sys
    input_lines = sys.stdin.readlines()
    processor = TunnelTrafficProcessor(input_lines)
    result = processor.process()
    print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Tunnel' (ID: 105803)
  → Token d'amorce (pas de prédiction)

Token 2: 'Traffic' (ID: 79386)
  → Token d'amorce (pas de prédiction)

Token 3: 'Data' (ID: 1186)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6095889210700989
    2. ':' → logprob: -1.234588861465454
    3. '(' → logprob: -2.109588861465454
    4. ' {' → logprob: -3.734588861465454
    5. '.' → logprob: -3.984588861465454
    6. '```' → logprob: -6.859589099884033
    7. '[' → logprob: -8.984588623046875
    8. ' ' → logprob: -9.109588623046875
    9. ' :' → logprob: -9.484588623046875
    10. '(:' → logprob: -9.484588623046875

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6577434539794922
    2. '(' → logprob: -1.4077434539794922
    3. '{' → logprob: -1.6577434539794922
    4. '.' → logprob: -3.157743453979492
    5. ' {' → logprob: -5.657743453979492
    6. ' ' → logprob: -8.782743453979492
    7. '[' → logprob: -8.782743453979492
    8. '```' → logprob: -9.407743453979492
    9. '(:' → logprob: -9.532743453979492
    10. ' :' → logprob: -9.657743453979492

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11755256354808807
    2. '(' → logprob: -2.2425525188446045
    3. '.' → logprob: -6.367552757263184
    4. '   ' → logprob: -6.742552757263184
    5. '():' → logprob: -7.242552757263184
    6. '```' → logprob: -7.367552757263184
    7. ':
' → logprob: -8.867552757263184
    8. '(
' → logprob: -8.992552757263184
    9. '()' → logprob: -10.617552757263184
    10. ' :' → logprob: -10.867552757263184

Token 6: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4902433753013611
    2. ' pass' → logprob: -2.240243434906006
    3. '    ' → logprob: -2.365243434906006
    4. '   ' → logprob: -2.365243434906006
    5. '<|end|>' → logprob: -3.615243434906006
    6. '\n' → logprob: -4.240243434906006
    7. '```' → logprob: -4.365243434906006
    8. ' 
' → logprob: -4.615243434906006
    9. '    
' → logprob: -5.240243434906006
    10. '\' → logprob: -5.365243434906006

Token 7: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.37123605608940125
    2. ' __' → logprob: -1.4962360858917236
    3. ' ' → logprob: -2.4962360858917236
    4. ' ' → logprob: -6.7462358474731445
    5. '_' → logprob: -7.3712358474731445
    6. ' init' → logprob: -7.9962358474731445
    7. '  ' → logprob: -7.9962358474731445
    8. 'space' → logprob: -8.871235847473145
    9. '_init' → logprob: -9.121235847473145
    10. '___' → logprob: -9.246235847473145

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7697225252486533e-06
    2. ' init' → logprob: -12.500003814697266
    3. '_init' → logprob: -17.750003814697266
    4. 'ini' → logprob: -18.125003814697266
    5. '	init' → logprob: -18.375003814697266
    6. 'inite' → logprob: -20.625003814697266
    7. '   ' → logprob: -21.500003814697266
    8. '```' → logprob: -21.500003814697266
    9. 'innit' → logprob: -21.625003814697266
    10. 'int' → logprob: -21.625003814697266

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11535507440567017
    2. '(' → logprob: -2.6153550148010254
    3. '__' → logprob: -3.7403550148010254
    4. '__(
' → logprob: -5.115355014801025
    5. '(self' → logprob: -5.615355014801025
    6. '__((' → logprob: -7.115355014801025
    7. '<|end|>' → logprob: -7.490355014801025
    8. ' (' → logprob: -8.740355491638184
    9. '__('' → logprob: -8.865355491638184
    10. '_' → logprob: -8.865355491638184

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021974791307002306
    2. ' self' → logprob: -6.127197265625
    3. ')' → logprob: -11.752197265625
    4. '(self' → logprob: -13.627197265625
    5. ' ' → logprob: -13.752197265625
    6. '	self' → logprob: -15.002197265625
    7. '       ' → logprob: -15.002197265625
    8. '   ' → logprob: -15.127197265625
    9. ' )' → logprob: -15.252197265625
    10. '_self' → logprob: -15.877197265625

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011889276094734669
    2. '):' → logprob: -4.761889457702637
    3. 'self' → logprob: -6.386889457702637
    4. ' ,' → logprob: -7.011889457702637
    5. ')' → logprob: -8.261889457702637
    6. '<|end|>' → logprob: -8.886889457702637
    7. ',self' → logprob: -9.261889457702637
    8. '   ' → logprob: -10.386889457702637
    9. '       ' → logprob: -10.886889457702637
    10. ' self' → logprob: -11.136889457702637

Token 12: ' initial' (ID: 4871)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6345601081848145
    2. 'self' → logprob: -0.7595601081848145
    3. ' traffic' → logprob: -6.3845601081848145
    4. ')' → logprob: -9.134559631347656
    5. ' )' → logprob: -9.884559631347656
    6. 'traffic' → logprob: -10.259559631347656
    7. 'space' → logprob: -11.509559631347656
    8. ' data' → logprob: -11.634559631347656
    9. 'data' → logprob: -12.009559631347656
    10. '    ' → logprob: -12.384559631347656

Token 13: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01558262761682272
    2. ' _' → logprob: -5.14058256149292
    3. '_data' → logprob: -6.01558256149292
    4. ')' → logprob: -6.64058256149292
    5. '_value' → logprob: -7.01558256149292
    6. '):' → logprob: -7.01558256149292
    7. ' ' → logprob: -7.14058256149292
    8. ' ):' → logprob: -7.14058256149292
    9. ' )' → logprob: -7.89058256149292
    10. '_space' → logprob: -8.140583038330078

Token 14: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3260679543018341
    2. ',' → logprob: -1.3260679244995117
    3. '=' → logprob: -5.576067924499512
    4. ':' → logprob: -5.701067924499512
    5. '_' → logprob: -6.201067924499512
    6. '_timestamp' → logprob: -6.576067924499512
    7. '_time' → logprob: -7.326067924499512
    8. ')' → logprob: -7.951067924499512
    9. ' ):' → logprob: -8.076067924499512
    10. ' ,' → logprob: -8.576067924499512

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7510419487953186
    2. ' int' → logprob: -0.8760419487953186
    3. ')' → logprob: -2.876041889190674
    4. ' )' → logprob: -3.251041889190674
    5. ' float' → logprob: -5.251041889190674
    6. ' datetime' → logprob: -5.501041889190674
    7. 'float' → logprob: -5.751041889190674
    8. ' ' → logprob: -6.751041889190674
    9. 'datetime' → logprob: -7.001041889190674
    10. ' str' → logprob: -7.251041889190674

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09042692184448242
    2. '):' → logprob: -2.4654269218444824
    3. ')' → logprob: -6.965426921844482
    4. '):
' → logprob: -8.09042739868164
    5. '   ' → logprob: -9.71542739868164
    6. ' ,' → logprob: -9.96542739868164
    7. ':' → logprob: -10.46542739868164
    8. ',
' → logprob: -10.59042739868164
    9. '<|end|>' → logprob: -11.71542739868164
    10. ',int' → logprob: -11.84042739868164

Token 17: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.20574991405010223
    2. ' current' → logprob: -2.205749988555908
    3. 'initial' → logprob: -3.830749988555908
    4. ' traffic' → logprob: -3.830749988555908
    5. '    ' → logprob: -4.455749988555908
    6. 'current' → logprob: -5.455749988555908
    7. ' source' → logprob: -5.455749988555908
    8. ' tunnel' → logprob: -5.455749988555908
    9. ' total' → logprob: -6.830749988555908
    10. ' start' → logprob: -7.080749988555908

Token 18: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11956645548343658
    2. '_time' → logprob: -2.8695664405822754
    3. '_speed' → logprob: -3.8695664405822754
    4. ' _' → logprob: -4.619566440582275
    5. '_position' → logprob: -5.244566440582275
    6. '_space' → logprob: -5.494566440582275
    7. '_value' → logprob: -5.744566440582275
    8. '_timestamp' → logprob: -5.869566440582275
    9. '_velocity' → logprob: -6.494566440582275
    10. '_state' → logprob: -6.994566440582275

Token 19: 'ars' (ID: 1904)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.47589290142059326
    2. 'ap' → logprob: -2.475893020629883
    3. 'on' → logprob: -2.725893020629883
    4. 'ar' → logprob: -2.975893020629883
    5. 'urrent' → logprob: -3.225893020629883
    6. 'ounter' → logprob: -3.350893020629883
    7. 'lass' → logprob: -3.850893020629883
    8. 'ho' → logprob: -4.475893020629883
    9. 'umulative' → logprob: -4.725893020629883
    10. '_' → logprob: -4.850893020629883

Token 20: ':' (ID: 25)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0153117179870605
    2. '):' → logprob: -1.3903117179870605
    3. ':' → logprob: -1.6403117179870605
    4. ',' → logprob: -2.3903117179870605
    5. ')' → logprob: -3.6403117179870605
    6. '_' → logprob: -4.0153117179870605
    7. '=' → logprob: -4.3903117179870605
    8. '_in' → logprob: -4.6403117179870605
    9. '_per' → logprob: -5.0153117179870605
    10. ' ):' → logprob: -5.2653117179870605

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3494257628917694
    2. 'int' → logprob: -1.2244257926940918
    3. ' ' → logprob: -8.724425315856934
    4. '[int' → logprob: -8.724425315856934
    5. ' list' → logprob: -8.974425315856934
    6. ')' → logprob: -9.099425315856934
    7. ' List' → logprob: -9.474425315856934
    8. ' dict' → logprob: -9.849425315856934
    9. '=int' → logprob: -9.849425315856934
    10. 'dict' → logprob: -9.974425315856934

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03978077694773674
    2. ',' → logprob: -3.414780855178833
    3. ')' → logprob: -5.164780616760254
    4. '):
' → logprob: -8.289780616760254
    5. '   ' → logprob: -9.289780616760254
    6. ':' → logprob: -10.539780616760254
    7. ' ):' → logprob: -11.914780616760254
    8. '```' → logprob: -12.539780616760254
    9. '       ' → logprob: -12.789780616760254
    10. ' ,' → logprob: -12.914780616760254

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18081553280353546
    2. ':' → logprob: -2.0558154582977295
    3. '   ' → logprob: -4.305815696716309
    4. '    ' → logprob: -4.805815696716309
    5. '\n' → logprob: -6.055815696716309
    6. '):' → logprob: -6.180815696716309
    7. '\' → logprob: -6.180815696716309
    8. '<|end|>' → logprob: -6.555815696716309
    9. ')' → logprob: -6.680815696716309
    10. 'newline' → logprob: -6.930815696716309

Token 24: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.27030837535858154
    2. '       ' → logprob: -1.6453083753585815
    3. '```' → logprob: -4.270308494567871
    4. '\n' → logprob: -4.520308494567871
    5. ' self' → logprob: -5.020308494567871
    6. '\' → logprob: -5.145308494567871
    7. 'newline' → logprob: -6.020308494567871
    8. '<|end|>' → logprob: -6.145308494567871
    9. '        
' → logprob: -8.020308494567871
    10. '   ' → logprob: -8.145308494567871

Token 25: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010492119938135147
    2. '.initial' → logprob: -4.635492324829102
    3. ' .' → logprob: -8.010492324829102
    4. '._' → logprob: -8.885492324829102
    5. '.current' → logprob: -9.885492324829102
    6. '.t' → logprob: -10.260492324829102
    7. 'self' → logprob: -10.260492324829102
    8. '.self' → logprob: -10.760492324829102
    9. '.initialize' → logprob: -10.885492324829102
    10. '.__' → logprob: -11.760492324829102

Token 26: 'n' (ID: 77)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.13851380348205566
    2. 'time' → logprob: -2.1385138034820557
    3. '_initial' → logprob: -5.638513565063477
    4. 'current' → logprob: -5.888513565063477
    5. '_time' → logprob: -6.763513565063477
    6. ' initial' → logprob: -7.013513565063477
    7. 'cars' → logprob: -7.013513565063477
    8. 'traffic' → logprob: -7.263513565063477
    9. 'last' → logprob: -7.888513565063477
    10. 'car' → logprob: -8.513513565063477

Token 27: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47463056445121765
    2. '_c' → logprob: -1.09963059425354
    3. 'umber' → logprob: -3.59963059425354
    4. '_o' → logprob: -4.849630355834961
    5. 'um' → logprob: -6.099630355834961
    6. ' _' → logprob: -6.349630355834961
    7. 'o' → logprob: -6.349630355834961
    8. '_u' → logprob: -7.224630355834961
    9. '_initial' → logprob: -7.599630355834961
    10. '_car' → logprob: -7.599630355834961

Token 28: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.3883821368217468
    2. 'initial' → logprob: -1.1383821964263916
    3. '0' → logprob: -7.0133819580078125
    4. ' ' → logprob: -7.5133819580078125
    5. '(initial' → logprob: -10.513381958007812
    6. '	initial' → logprob: -11.263381958007812
    7. ' int' → logprob: -11.888381958007812
    8. '_initial' → logprob: -12.013381958007812
    9. 'int' → logprob: -12.763381958007812
    10. '.initial' → logprob: -13.638381958007812

Token 29: '_time' (ID: 6425)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.9311863780021667
    2. '_time' → logprob: -0.9311863780021667
    3. '_' → logprob: -1.5561864376068115
    4. '_car' → logprob: -7.931186199188232
    5. '_t' → logprob: -8.18118667602539
    6. ' _' → logprob: -9.18118667602539
    7. '_times' → logprob: -10.80618667602539
    8. '_space' → logprob: -11.18118667602539
    9. '_o' → logprob: -11.30618667602539
    10. '_a' → logprob: -11.55618667602539

Token 30: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11671758443117142
    2. '.' → logprob: -2.241717576980591
    3. ' .' → logprob: -5.86671781539917
    4. '_' → logprob: -7.24171781539917
    5. ')._' → logprob: -9.616717338562012
    6. '```' → logprob: -10.241717338562012
    7. ' ' → logprob: -10.741717338562012
    8. ')' → logprob: -10.866717338562012
    9. ').' → logprob: -10.991717338562012
    10. '<|end|>' → logprob: -10.991717338562012

Token 34: 'm' (ID: 76)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.019799906760454178
    2. 'car' → logprob: -5.144799709320068
    3. 'm' → logprob: -5.644799709320068
    4. 'c' → logprob: -5.894799709320068
    5. 'initial' → logprob: -6.144799709320068
    6. 'total' → logprob: -7.144799709320068
    7. 'count' → logprob: -7.269799709320068
    8. 'traffic' → logprob: -7.894799709320068
    9. 'current' → logprob: -8.019800186157227
    10. 'time' → logprob: -8.144800186157227

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1839030683040619
    2. '=' → logprob: -1.8089030981063843
    3. '_' → logprob: -5.558903217315674
    4. ' ' → logprob: -9.183902740478516
    5. '_c' → logprob: -9.683902740478516
    6. '<|end|>' → logprob: -10.308902740478516
    7. ' _' → logprob: -10.558902740478516
    8. '  ' → logprob: -11.308902740478516
    9. ')' → logprob: -11.433902740478516
    10. '_=' → logprob: -11.808902740478516

Token 36: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.02981390617787838
    2. 'initial' → logprob: -3.5298140048980713
    3. ' ' → logprob: -10.154813766479492
    4. ' ' → logprob: -11.529813766479492
    5. '(initial' → logprob: -12.154813766479492
    6. '	initial' → logprob: -12.654813766479492
    7. '_initial' → logprob: -12.904813766479492
    8. 'Initial' → logprob: -13.904813766479492
    9. ' inicial' → logprob: -14.154813766479492
    10. '  ' → logprob: -14.154813766479492

Token 37: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.3464544432936236e-05
    2. '_car' → logprob: -11.125043869018555
    3. '_' → logprob: -11.250043869018555
    4. '_time' → logprob: -11.375043869018555
    5. 'cars' → logprob: -13.250043869018555
    6. ' _' → logprob: -14.250043869018555
    7. 'Cars' → logprob: -14.875043869018555
    8. '```' → logprob: -15.125043869018555
    9. '_space' → logprob: -15.625043869018555
    10. ' cars' → logprob: -15.750043869018555

Token 38: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.00019221604452468455
    2. 'ar' → logprob: -9.375192642211914
    3. '_' → logprob: -10.875192642211914
    4. 'ols' → logprob: -10.875192642211914
    5. '```' → logprob: -11.375192642211914
    6. '[' → logprob: -11.750192642211914
    7. 'cars' → logprob: -12.375192642211914
    8. 'ats' → logprob: -12.562692642211914
    9. '   ' → logprob: -12.687692642211914
    10. '\' → logprob: -12.875192642211914

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12805819511413574
    2. '._' → logprob: -2.1280581951141357
    3. ' .' → logprob: -7.128058433532715
    4. '_' → logprob: -8.253058433532715
    5. '.__' → logprob: -11.628058433532715
    6. ' ' → logprob: -12.003058433532715
    7. '.user' → logprob: -12.253058433532715
    8. '```' → logprob: -12.378058433532715
    9. '."""' → logprob: -12.628058433532715
    10. 'def' → logprob: -12.753058433532715

Token 43: 'interval' (ID: 37558)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -1.807582974433899
    2. 'time' → logprob: -2.0575828552246094
    3. 'traffic' → logprob: -2.1825828552246094
    4. 'car' → logprob: -2.3075828552246094
    5. 'data' → logprob: -2.3075828552246094
    6. 'times' → logprob: -2.8075828552246094
    7. 'queue' → logprob: -3.5575828552246094
    8. 'total' → logprob: -3.6825828552246094
    9. 'max' → logprob: -3.8075828552246094
    10. 'counts' → logprob: -3.9325828552246094

Token 44: '_data' (ID: 3537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06364315003156662
    2. '_' → logprob: -3.813643217086792
    3. ' =' → logprob: -3.938643217086792
    4. '_s' → logprob: -5.188642978668213
    5. '_data' → logprob: -5.563642978668213
    6. '_counts' → logprob: -5.813642978668213
    7. '=' → logprob: -6.063642978668213
    8. '_time' → logprob: -7.063642978668213
    9. '_length' → logprob: -7.188642978668213
    10. '_times' → logprob: -7.438642978668213

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07010894268751144
    2. '=' → logprob: -2.6951088905334473
    3. 's' → logprob: -8.945109367370605
    4. '=[]' → logprob: -10.945109367370605
    5. ' ' → logprob: -11.445109367370605
    6. ':' → logprob: -11.820109367370605
    7. '[' → logprob: -12.945109367370605
    8. '  ' → logprob: -13.695109367370605
    9. ')' → logprob: -14.445109367370605
    10. '<|end|>' → logprob: -14.570109367370605

Token 46: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3334936797618866
    2. '{}' → logprob: -1.458493709564209
    3. ' []' → logprob: -3.083493709564209
    4. ' {}' → logprob: -5.333493709564209
    5. '[' → logprob: -8.33349323272705
    6. ' ' → logprob: -10.70849323272705
    7. 'dict' → logprob: -10.95849323272705
    8. '[]}' → logprob: -11.08349323272705
    9. '   ' → logprob: -11.20849323272705
    10. '{' → logprob: -11.45849323272705

Token 47: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3390192687511444
    2. 'def' → logprob: -1.9640192985534668
    3. '   ' → logprob: -2.839019298553467
    4. ' def' → logprob: -3.089019298553467
    5. '<|end|>' → logprob: -4.464019298553467
    6. ' ' → logprob: -4.714019298553467
    7. '[' → logprob: -5.089019298553467
    8. '\' → logprob: -5.464019298553467
    9. ')' → logprob: -5.839019298553467
    10. '
' → logprob: -6.089019298553467

Token 48: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4136500060558319
    2. ' def' → logprob: -1.6636500358581543
    3. '   ' → logprob: -1.9136500358581543
    4. ' ' → logprob: -7.163650035858154
    5. 'd' → logprob: -8.413649559020996
    6. '    
' → logprob: -8.413649559020996
    7. '       ' → logprob: -8.913649559020996
    8. ' 
' → logprob: -9.038649559020996
    9. '<|end|>' → logprob: -9.538649559020996
    10. '	def' → logprob: -9.663649559020996

Token 49: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.08471636474132538
    2. ' append' → logprob: -2.709716320037842
    3. ' insert' → logprob: -4.834716320037842
    4. ' update' → logprob: -6.209716320037842
    5. ' record' → logprob: -6.584716320037842
    6. ' get' → logprob: -7.459716320037842
    7. '_add' → logprob: -7.709716320037842
    8. ' track' → logprob: -7.834716320037842
    9. ' process' → logprob: -8.084716796875
    10. 'append' → logprob: -8.584716796875

Token 50: '_interval' (ID: 49009)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38723382353782654
    2. '_interval' → logprob: -1.512233853340149
    3. '_data' → logprob: -2.8872337341308594
    4. '_car' → logprob: -3.3872337341308594
    5. '_inter' → logprob: -6.137233734130859
    6. '_entry' → logprob: -6.512233734130859
    7. '_point' → logprob: -7.012233734130859
    8. '_trip' → logprob: -7.012233734130859
    9. '(' → logprob: -7.387233734130859
    10. '_time' → logprob: -7.387233734130859

Token 51: '_data' (ID: 3537)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2916963994503021
    2. '(' → logprob: -1.9166964292526245
    3. '_data' → logprob: -2.291696310043335
    4. '_' → logprob: -5.666696548461914
    5. '   ' → logprob: -8.041696548461914
    6. '_interval' → logprob: -8.541696548461914
    7. ' (' → logprob: -9.166696548461914
    8. 'data' → logprob: -9.291696548461914
    9. '```' → logprob: -9.416696548461914
    10. '_car' → logprob: -9.541696548461914

Token 52: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026441946625709534
    2. '(' → logprob: -3.651442050933838
    3. ' (' → logprob: -8.90144157409668
    4. '(
' → logprob: -13.27644157409668
    5. 'self' → logprob: -13.27644157409668
    6. ' ' → logprob: -14.27644157409668
    7. '   ' → logprob: -14.65144157409668
    8. ' self' → logprob: -15.02644157409668
    9. '(s' → logprob: -15.90144157409668
    10. '	self' → logprob: -16.02644157409668

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015312091272789985
    2. ' ,' → logprob: -9.375153541564941
    3. '):' → logprob: -10.000153541564941
    4. 'self' → logprob: -11.500153541564941
    5. ')' → logprob: -13.000153541564941
    6. ',data' → logprob: -13.250153541564941
    7. ',self' → logprob: -13.750153541564941
    8. ':' → logprob: -14.000153541564941
    9. ',line' → logprob: -14.250153541564941
    10. '‌,' → logprob: -14.625153541564941

Token 54: ' entering' (ID: 25605)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.6889655590057373
    2. 'interval' → logprob: -1.8139655590057373
    3. ' time' → logprob: -2.8139655590057373
    4. ' data' → logprob: -3.0639655590057373
    5. ' cars' → logprob: -3.0639655590057373
    6. ' self' → logprob: -3.0639655590057373
    7. ' start' → logprob: -3.1889655590057373
    8. 'self' → logprob: -4.188965797424316
    9. 'time' → logprob: -4.313965797424316
    10. 'data' → logprob: -4.688965797424316

Token 55: ':' (ID: 25)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.08909835666418076
    2. ',' → logprob: -2.8390984535217285
    3. ':' → logprob: -3.8390984535217285
    4. '_count' → logprob: -6.3390984535217285
    5. '):' → logprob: -6.7140984535217285
    6. ' ,' → logprob: -7.3390984535217285
    7. '_car' → logprob: -7.4640984535217285
    8. '_time' → logprob: -8.33909797668457
    9. '_' → logprob: -8.58909797668457
    10. '_number' → logprob: -9.46409797668457

Token 56: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.26987698674201965
    2. 'int' → logprob: -2.1448769569396973
    3. ' cars' → logprob: -2.3948769569396973
    4. 'cars' → logprob: -4.394876956939697
    5. ',' → logprob: -4.769876956939697
    6. ' ,' → logprob: -6.644876956939697
    7. ':int' → logprob: -6.894876956939697
    8. ' ' → logprob: -6.894876956939697
    9. ' car' → logprob: -7.519876956939697
    10. 'car' → logprob: -7.644876956939697

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030578780570067465
    2. '):' → logprob: -8.500306129455566
    3. ')' → logprob: -10.000306129455566
    4. ' ,' → logprob: -10.250306129455566
    5. ',
' → logprob: -11.750306129455566
    6. '<|end|>' → logprob: -12.250306129455566
    7. ':' → logprob: -12.500306129455566
    8. '<|end|>' → logprob: -13.500306129455566
    9. '):
' → logprob: -13.875306129455566
    10. '‌,' → logprob: -14.375306129455566

Token 58: ' leaving' (ID: 15021)
  Prédit: ' exiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exiting' → logprob: -0.4378640353679657
    2. ' leaving' → logprob: -1.687864065170288
    3. 'le' → logprob: -2.312864065170288
    4. 'ex' → logprob: -2.937864065170288
    5. ' ' → logprob: -5.062863826751709
    6. '    ' → logprob: -5.937863826751709
    7. '   ' → logprob: -6.375363826751709
    8. ' outgoing' → logprob: -6.875363826751709
    9. ' departing' → logprob: -7.062863826751709
    10. ' remaining' → logprob: -7.875363826751709

Token 59: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4762316644191742
    2. ':' → logprob: -0.9762316942214966
    3. ',' → logprob: -6.726231575012207
    4. ' ):' → logprob: -7.476231575012207
    5. ')' → logprob: -8.601231575012207
    6. '):
' → logprob: -9.351231575012207
    7. ':int' → logprob: -10.351231575012207
    8. ' :' → logprob: -10.726231575012207
    9. '):

' → logprob: -11.851231575012207
    10. '<|end|>' → logprob: -11.976231575012207

Token 60: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16059240698814392
    2. ' int' → logprob: -1.9105924367904663
    3. ')' → logprob: -8.285592079162598
    4. ':int' → logprob: -9.785592079162598
    5. '[int' → logprob: -10.535592079162598
    6. ' ' → logprob: -11.785592079162598
    7. '(int' → logprob: -12.035592079162598
    8. ']int' → logprob: -12.660592079162598
    9. '<|end|>' → logprob: -12.660592079162598
    10. ' )' → logprob: -12.785592079162598

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012130453251302242
    2. ')' → logprob: -9.250121116638184
    3. '):
' → logprob: -11.500121116638184
    4. ':' → logprob: -12.000121116638184
    5. ',' → logprob: -12.125121116638184
    6. ' ):' → logprob: -13.000121116638184
    7. '   ' → logprob: -14.000121116638184
    8. '):
' → logprob: -16.3751220703125
    9. '       ' → logprob: -17.0001220703125
    10. ' ' → logprob: -17.2501220703125

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018229777924716473
    2. '<|end|>' → logprob: -6.8768229484558105
    3. '        
' → logprob: -8.751823425292969
    4. ',' → logprob: -8.751823425292969
    5. '\' → logprob: -9.251823425292969
    6. 'self' → logprob: -9.376823425292969
    7. ')' → logprob: -9.876823425292969
    8. '   ' → logprob: -10.001823425292969
    9. '
' → logprob: -10.501823425292969
    10. ' self' → logprob: -10.626823425292969

Token 63: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25798696279525757
    2. 'self' → logprob: -1.8829870223999023
    3. ' self' → logprob: -2.8829870223999023
    4. ')' → logprob: -5.132987022399902
    5. '        ' → logprob: -5.632987022399902
    6. ' ' → logprob: -6.632987022399902
    7. '        
' → logprob: -6.757987022399902
    8. '<|end|>' → logprob: -6.882987022399902
    9. ' ' → logprob: -7.007987022399902
    10. '\' → logprob: -7.132987022399902

Token 64: ' not' (ID: 625)
  Prédit: ' entering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entering' → logprob: -0.0008046258008107543
    2. ' self' → logprob: -7.875804424285889
    3. ' len' → logprob: -8.250804901123047
    4. ' not' → logprob: -9.875804901123047
    5. ' leaving' → logprob: -10.375804901123047
    6. ' enter' → logprob: -10.500804901123047
    7. 'enter' → logprob: -11.125804901123047
    8. '	enter' → logprob: -11.625804901123047
    9. 'Entering' → logprob: -11.625804901123047
    10. '_enter' → logprob: -12.125804901123047

Token 65: ' (' (ID: 350)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.21348068118095398
    2. ' self' → logprob: -1.7134807109832764
    3. ' (' → logprob: -4.713480472564697
    4. ' ' → logprob: -6.588480472564697
    5. ' hasattr' → logprob: -7.088480472564697
    6. 'self' → logprob: -7.463480472564697
    7. ' ' → logprob: -9.213480949401855
    8. ' any' → logprob: -9.963480949401855
    9. '<|end|>' → logprob: -10.338480949401855
    10. '(self' → logprob: -10.713480949401855

Token 66: '0' (ID: 15)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.3325279951095581
    2. '0' → logprob: -1.332527995109558
    3. ' ' → logprob: -5.332528114318848
    4. 'is' → logprob: -5.707528114318848
    5. 'enter' → logprob: -5.707528114318848
    6. 'self' → logprob: -6.332528114318848
    7. ' entering' → logprob: -6.457528114318848
    8. ' self' → logprob: -6.582528114318848
    9. ' (' → logprob: -6.582528114318848
    10. ' enter' → logprob: -7.582528114318848

Token 67: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11289620399475098
    2. '<=' → logprob: -2.237896203994751
    3. ')' → logprob: -10.987895965576172
    4. ' ' → logprob: -10.987895965576172
    5. ' <' → logprob: -11.237895965576172
    6. '=' → logprob: -12.362895965576172
    7. ' ' → logprob: -12.487895965576172
    8. '<' → logprob: -12.612895965576172
    9. '<|end|>' → logprob: -12.862895965576172
    10. ',' → logprob: -13.112895965576172

Token 68: ' entering' (ID: 25605)
  Prédit: ' entering'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entering' → logprob: -0.5760164260864258
    2. 'enter' → logprob: -0.8260164260864258
    3. ' enter' → logprob: -10.326016426086426
    4. '	enter' → logprob: -11.701016426086426
    5. ' leaving' → logprob: -11.826016426086426
    6. 'Entering' → logprob: -12.201016426086426
    7. 'entr' → logprob: -12.451016426086426
    8. ' ' → logprob: -12.576016426086426
    9. '.enter' → logprob: -12.826016426086426
    10. 'le' → logprob: -12.951016426086426

Token 69: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3364068567752838
    2. ' and' → logprob: -1.3364068269729614
    3. '<=' → logprob: -4.211406707763672
    4. '<|end|>' → logprob: -5.336406707763672
    5. 'and' → logprob: -6.711406707763672
    6. ')' → logprob: -7.336406707763672
    7. ' ' → logprob: -7.336406707763672
    8. '<|end|>' → logprob: -8.086406707763672
    9. ' <' → logprob: -9.086406707763672
    10. ' )' → logprob: -9.711406707763672

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7405598163604736
    2. '100' → logprob: -1.2405598163604736
    3. 'self' → logprob: -2.1155598163604736
    4. ' self' → logprob: -2.7405598163604736
    5. '999' → logprob: -3.6155598163604736
    6. '10' → logprob: -4.2405595779418945
    7. ' entering' → logprob: -6.1155595779418945
    8. 'le' → logprob: -6.7405595779418945
    9. 'enter' → logprob: -7.1155595779418945
    10. '1' → logprob: -7.4905595779418945

Token 71: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3783048391342163
    2. 'self' → logprob: -1.8783048391342163
    3. '10' → logprob: -2.378304958343506
    4. ' ' → logprob: -3.503304958343506
    5. '999' → logprob: -3.503304958343506
    6. ' self' → logprob: -6.378304958343506
    7. 'enter' → logprob: -6.628304958343506
    8. '1' → logprob: -6.878304958343506
    9. '500' → logprob: -7.378304958343506
    10. '99' → logprob: -7.378304958343506

Token 72: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016318101435899734
    2. '):' → logprob: -4.891318321228027
    3. 'and' → logprob: -5.766318321228027
    4. ')' → logprob: -5.891318321228027
    5. '0' → logprob: -6.016318321228027
    6. '):
' → logprob: -9.016318321228027
    7. '00' → logprob: -9.391318321228027
    8. ' ' → logprob: -9.766318321228027
    9. '000' → logprob: -10.141318321228027
    10. '   ' → logprob: -11.766318321228027

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10026339441537857
    2. '0' → logprob: -2.3502633571624756
    3. '<|end|>' → logprob: -10.850263595581055
    4. '  ' → logprob: -11.975263595581055
    5. ' ' → logprob: -11.975263595581055
    6. ')' → logprob: -12.600263595581055
    7. '    ' → logprob: -12.725263595581055
    8. ' (' → logprob: -12.850263595581055
    9. ' isinstance' → logprob: -13.225263595581055
    10. 'le' → logprob: -13.225263595581055

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003606005571782589
    2. ' ' → logprob: -5.628605842590332
    3. 'le' → logprob: -12.628605842590332
    4. '   ' → logprob: -14.003605842590332
    5. '  ' → logprob: -14.503605842590332
    6. 'leave' → logprob: -15.691105842590332
    7. '    ' → logprob: -15.816105842590332
    8. '```' → logprob: -16.31610679626465
    9. ' leaving' → logprob: -16.37860679626465
    10. ' ' → logprob: -16.56610679626465

Token 75: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03986131027340889
    2. '<=' → logprob: -3.2898612022399902
    3. '<|end|>' → logprob: -6.53986120223999
    4. ' ' → logprob: -8.789861679077148
    5. ' <' → logprob: -9.164861679077148
    6. '<|end|>' → logprob: -10.539861679077148
    7. ' and' → logprob: -11.289861679077148
    8. ' ≤' → logprob: -11.289861679077148
    9. '   ' → logprob: -11.914861679077148
    10. ' >=' → logprob: -12.039861679077148

Token 76: ' leaving' (ID: 15021)
  Prédit: ' leaving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leaving' → logprob: -0.47438696026802063
    2. 'le' → logprob: -0.9743869304656982
    3. ' entering' → logprob: -8.974387168884277
    4. ' le' → logprob: -9.099387168884277
    5. ' ' → logprob: -9.974387168884277
    6. 'leave' → logprob: -11.849387168884277
    7. 'enter' → logprob: -12.599387168884277
    8. ' leaves' → logprob: -12.849387168884277
    9. '  ' → logprob: -13.474387168884277
    10. '```' → logprob: -13.474387168884277

Token 77: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.005644586402922869
    2. '<=' → logprob: -5.755644798278809
    3. '<|end|>' → logprob: -6.255644798278809
    4. ')' → logprob: -8.880644798278809
    5. ' ' → logprob: -8.880644798278809
    6. ')<=' → logprob: -9.380644798278809
    7. '<|end|>' → logprob: -9.755644798278809
    8. ' and' → logprob: -10.130644798278809
    9. ' )' → logprob: -10.255644798278809
    10. ' <' → logprob: -10.755644798278809

Token 78: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.38699576258659363
    2. ' ' → logprob: -1.136995792388916
    3. ' entering' → logprob: -10.011995315551758
    4. 'enter' → logprob: -11.011995315551758
    5. '10' → logprob: -11.136995315551758
    6. '  ' → logprob: -11.824495315551758
    7. '   ' → logprob: -11.886995315551758
    8. '1' → logprob: -12.636995315551758
    9. '50' → logprob: -12.886995315551758
    10. ' enter' → logprob: -13.074495315551758

Token 79: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.026529252529144287
    2. ' ' → logprob: -3.651529312133789
    3. 'enter' → logprob: -9.401529312133789
    4. '10' → logprob: -10.026529312133789
    5. ' entering' → logprob: -10.276529312133789
    6. '  ' → logprob: -11.526529312133789
    7. '1' → logprob: -11.651529312133789
    8. '   ' → logprob: -11.901529312133789
    9. '50' → logprob: -11.901529312133789
    10. 'self' → logprob: -12.151529312133789

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022982919588685036
    2. '):
' → logprob: -4.647983074188232
    3. ' ):' → logprob: -5.022983074188232
    4. ' and' → logprob: -5.147983074188232
    5. ')' → logprob: -7.897983074188232
    6. '       ' → logprob: -8.897982597351074
    7. ' ):
' → logprob: -9.022982597351074
    8. ':' → logprob: -9.897982597351074
    9. 'and' → logprob: -10.897982597351074
    10. ' )' → logprob: -11.147982597351074

Token 81: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044085681438446045
    2. '           ' → logprob: -3.919085741043091
    3. '       ' → logprob: -4.419085502624512
    4. ':
' → logprob: -4.794085502624512
    5. ' :' → logprob: -6.669085502624512
    6. ':return' → logprob: -7.419085502624512
    7. ' and' → logprob: -7.669085502624512
    8. '):' → logprob: -7.919085502624512
    9. ' :
' → logprob: -9.794085502624512
    10. '):
' → logprob: -10.294085502624512

Token 82: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0684838816523552
    2. ' return' → logprob: -3.193483829498291
    3. ' raise' → logprob: -3.943483829498291
    4. 'return' → logprob: -5.693483829498291
    5. 'raise' (adapté à ' raise') → logprob: -6.568483829498291
    6. '            ' → logprob: -7.318483829498291
    7. '
' → logprob: -8.56848430633545
    8. '               ' → logprob: -9.94348430633545
    9. '```' → logprob: -10.94348430633545
    10. ':return' → logprob: -11.06848430633545

Token 83: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -9.662937372922897e-05
    2. 'Value' → logprob: -9.375096321105957
    3. ' ' → logprob: -11.500096321105957
    4. ' Val' → logprob: -14.125096321105957
    5. '	Value' → logprob: -14.625096321105957
    6. '_Value' → logprob: -16.125097274780273
    7. ' ' → logprob: -16.125097274780273
    8. ' Va' → logprob: -16.750097274780273
    9. '  ' → logprob: -16.750097274780273
    10. '_value' → logprob: -17.125097274780273

Token 84: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.5765535235404968
    2. 'Error' → logprob: -0.8265535235404968
    3. 'ror' → logprob: -7.8265533447265625
    4. 'd' → logprob: -8.576553344726562
    5. 'r' → logprob: -11.576553344726562
    6. 'Value' → logprob: -12.076553344726562
    7. 'ption' → logprob: -12.326553344726562
    8. 'ry' → logprob: -12.576553344726562
    9. 'ration' → logprob: -13.951553344726562
    10. 'error' → logprob: -14.701553344726562

Token 85: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0711572989821434
    2. '(' → logprob: -2.696157217025757
    3. '('' → logprob: -6.821157455444336
    4. '(
' → logprob: -9.196157455444336
    5. '()' → logprob: -10.946157455444336
    6. '("")' → logprob: -12.821157455444336
    7. '(f' → logprob: -12.946157455444336
    8. '(

' → logprob: -13.196157455444336
    9. '("'' → logprob: -14.571157455444336
    10. '(",' → logprob: -14.571157455444336

Token 86: '車' (ID: 35939)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -1.3007785081863403
    2. 'Entering' → logprob: -1.3007785081863403
    3. 'Traffic' → logprob: -2.050778388977051
    4. 'Number' → logprob: -2.550778388977051
    5. 'Car' → logprob: -2.925778388977051
    6. 'Values' → logprob: -3.175778388977051
    7. 'Interval' → logprob: -3.675778388977051
    8. 'Enter' → logprob: -3.925778388977051
    9. ' Number' → logprob: -4.550778388977051
    10. ' Traffic' → logprob: -4.925778388977051

Token 87: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.6559916138648987
    2. '\xe4\xb8' → logprob: -0.7809916138648987
    3. 'が' → logprob: -5.155991554260254
    4. '\xe8\xbc' → logprob: -5.280991554260254
    5. '台' → logprob: -5.655991554260254
    6. '辆' → logprob: -6.530991554260254
    7. ' の' → logprob: -6.655991554260254
    8. 'を' → logprob: -6.780991554260254
    9. '数' → logprob: -7.030991554260254
    10. 'に' → logprob: -7.530991554260254

Token 88: '台' (ID: 3735)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.05842636153101921
    2. '台' → logprob: -3.0584263801574707
    3. '出' → logprob: -5.558426380157471
    4. '入力' → logprob: -7.058426380157471
    5. '```' → logprob: -7.308426380157471
    6. '進' → logprob: -7.433426380157471
    7. '増' → logprob: -7.558426380157471
    8. '   ' → logprob: -7.933426380157471
    9. '乗' → logprob: -8.183425903320312
    10. '人数' → logprob: -8.308425903320312

Token 89: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -1.259079363080673e-05
    2. '數' → logprob: -11.875012397766113
    3. '```' → logprob: -13.375012397766113
    4. 's' → logprob: -13.875012397766113
    5. ' 数' → logprob: -14.875012397766113
    6. '車' → logprob: -15.000012397766113
    7. 'count' → logprob: -15.125012397766113
    8. '수를' → logprob: -15.375012397766113
    9. '

' → logprob: -15.750012397766113
    10. '수가' → logprob: -15.750012397766113

Token 90: 'は' (ID: 5205)
  Prédit: 'は'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'は' → logprob: -0.0857970342040062
    2. ' must' → logprob: -3.335797071456909
    3. 'が' → logprob: -3.335797071456909
    4. 'には' → logprob: -5.83579683303833
    5. 'must' → logprob: -6.46079683303833
    6. 'を' → logprob: -6.46079683303833
    7. ' should' → logprob: -6.58579683303833
    8. ' は' → logprob: -6.58579683303833
    9. 'として' → logprob: -7.21079683303833
    10. ' is' → logprob: -7.46079683303833

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014329778496176004
    2. ' ' → logprob: -6.8764328956604
    3. '100' → logprob: -8.126433372497559
    4. '０' → logprob: -9.501433372497559
    5. '1' → logprob: -11.626433372497559
    6. '整数' → logprob: -12.626433372497559
    7. '```' → logprob: -12.626433372497559
    8. 'ゼ' → logprob: -13.501433372497559
    9. 'それ' → logprob: -13.501433372497559
    10. 'は' → logprob: -13.876433372497559

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031746976310387254
    2. ' ' → logprob: -8.750317573547363
    3. '100' → logprob: -9.625317573547363
    4. '０' → logprob: -9.875317573547363
    5. '1' → logprob: -10.875317573547363
    6. '```' → logprob: -12.125317573547363
    7. '整数' → logprob: -12.250317573547363
    8. '[' → logprob: -14.062817573547363
    9. 'それ' → logprob: -14.187817573547363
    10. '   ' → logprob: -14.187817573547363

Token 93: ' ' (ID: 220)
  Prédit: 'から'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.8044919371604919
    2. '〜' → logprob: -1.5544919967651367
    3. '以上' → logprob: -1.8044919967651367
    4. ' ' → logprob: -2.0544919967651367
    5. '～' → logprob: -3.5544919967651367
    6. '~' → logprob: -4.304491996765137
    7. '<=' → logprob: -5.304491996765137
    8. ' <=' → logprob: -7.554491996765137
    9. ' ~' → logprob: -7.804491996765137
    10. 'か' → logprob: -8.054491996765137

Token 94: '以上' (ID: 27177)
  Prédit: '以上'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '以上' → logprob: -0.7094231247901917
    2. 'から' → logprob: -0.7094231247901917
    3. '〜' → logprob: -4.584423065185547
    4. '～' → logprob: -6.084423065185547
    5. '~' → logprob: -6.709423065185547
    6. ' ' → logprob: -6.959423065185547
    7. '<=' → logprob: -6.959423065185547
    8. 'か' → logprob: -7.834423065185547
    9. 'と' → logprob: -10.084423065185547
    10. '-' → logprob: -10.959423065185547

Token 95: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.27961263060569763
    2. 'か' → logprob: -1.52961266040802
    3. 'で' → logprob: -4.0296125411987305
    4. ' ' → logprob: -4.7796125411987305
    5. '、' → logprob: -7.7796125411987305
    6. 'and' → logprob: -8.40461254119873
    7. '１００' → logprob: -8.90461254119873
    8. 'から' → logprob: -9.40461254119873
    9. ' and' → logprob: -9.52961254119873
    10. '且' → logprob: -10.27961254119873

Token 96: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1140616312623024
    2. 'か' → logprob: -2.3640615940093994
    3. ' ' → logprob: -4.6140618324279785
    4. 'で' → logprob: -6.4890618324279785
    5. 'and' → logprob: -6.8640618324279785
    6. '、' → logprob: -8.36406135559082
    7. 'お' → logprob: -8.48906135559082
    8. ' and' → logprob: -8.48906135559082
    9. 'そして' → logprob: -8.73906135559082
    10. '且' → logprob: -9.11406135559082

Token 97: ' 以下' (ID: 133507)
  Prédit: 'まで'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'まで' → logprob: -0.26518961787223816
    2. 'で' → logprob: -2.2651896476745605
    3. 'です' → logprob: -2.8901896476745605
    4. '以下' → logprob: -3.1401896476745605
    5. '台' → logprob: -4.3901896476745605
    6. 'の' → logprob: -4.3901896476745605
    7. '以内' → logprob: -5.3901896476745605
    8. ' ' → logprob: -8.015189170837402
    9. 'か' → logprob: -9.140189170837402
    10. 'に' → logprob: -9.515189170837402

Token 98: 'で' (ID: 4344)
  Prédit: 'です'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'です' → logprob: -0.15588106215000153
    2. 'で' → logprob: -2.03088116645813
    3. ' ' → logprob: -4.405880928039551
    4. 'の' → logprob: -7.405880928039551
    5. 'に' → logprob: -9.15588092803955
    6. ')' → logprob: -10.15588092803955
    7. ' の' → logprob: -10.53088092803955
    8. '）' → logprob: -10.90588092803955
    9. '")' → logprob: -11.03088092803955
    10. ' に' → logprob: -11.28088092803955

Token 99: 'な' (ID: 5784)
  Prédit: 'な'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.1551734209060669
    2. 'ある' → logprob: -2.6551733016967773
    3. 'ください' → logprob: -3.4051733016967773
    4. 'す' → logprob: -3.7801733016967773
    5. '入力' → logprob: -5.280173301696777
    6. '```' → logprob: -5.530173301696777
    7. 'なく' → logprob: -6.155173301696777
    8. ' な' → logprob: -6.280173301696777
    9. 'お願いします' → logprob: -6.280173301696777
    10. ' ' → logprob: -7.905173301696777

Token 100: 'け' (ID: 15707)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.0023410427384078503
    2. 'け' → logprob: -6.252341270446777
    3. '```' → logprob: -8.252341270446777
    4. 'は' → logprob: -9.377341270446777
    5. 'な' → logprob: -10.252341270446777
    6. 'き' → logprob: -11.377341270446777
    7. 'い' → logprob: -12.752341270446777
    8. 's' → logprob: -12.752341270446777
    9. 'わ' → logprob: -13.002341270446777
    10. 'しょう' → logprob: -13.252341270446777

Token 101: 'れば' (ID: 139693)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.43504083156585693
    2. 'ます' → logprob: -1.060040831565857
    3. 'しょう' → logprob: -6.5600409507751465
    4. 'る' → logprob: -6.5600409507751465
    5. '```' → logprob: -6.8100409507751465
    6. 'な' → logprob: -7.0600409507751465
    7. 'い' → logprob: -7.6850409507751465
    8. 'ら' → logprob: -8.185040473937988
    9. 'ません' → logprob: -8.310040473937988
    10. 'た' → logprob: -9.185040473937988

Token 102: 'な' (ID: 5784)
  Prédit: 'な'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.013951807282865047
    2. 'い' → logprob: -4.513951778411865
    3. '```' → logprob: -6.013951778411865
    4. 'なら' → logprob: -8.138952255249023
    5. 'ありません' → logprob: -9.013952255249023
    6. ' な' → logprob: -11.013952255249023
    7. '``' → logprob: -11.138952255249023
    8. '   ' → logprob: -12.013952255249023
    9. '           ' → logprob: -14.013952255249023
    10. ' ' → logprob: -14.138952255249023

Token 103: 'り' (ID: 7297)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.598815381526947
    2. 'り' → logprob: -0.848815381526947
    3. 'ら' → logprob: -3.848815441131592
    4. '```' → logprob: -7.223815441131592
    5. 'な' → logprob: -8.848814964294434
    6. 'れ' → logprob: -9.473814964294434
    7. 'ります' → logprob: -9.598814964294434
    8. 'け' → logprob: -9.598814964294434
    9. 'ir' → logprob: -9.973814964294434
    10. '   ' → logprob: -10.348814964294434

Token 104: 'ません' (ID: 63366)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.0021609680261462927
    2. 'り' → logprob: -6.252161026000977
    3. 'ません' → logprob: -9.002161026000977
    4. '   ' → logprob: -10.127161026000977
    5. '```' → logprob: -10.502161026000977
    6. 'す' → logprob: -10.627161026000977
    7. 'i' → logprob: -12.627161026000977
    8. '       ' → logprob: -12.752161026000977
    9. 'し' → logprob: -13.002161026000977
    10. '           ' → logprob: -13.502161026000977

Token 105: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.16754832863807678
    2. '")
' → logprob: -1.9175482988357544
    3. '。' → logprob: -5.167548179626465
    4. '.")' → logprob: -7.167548179626465
    5. '")
' → logprob: -7.542548179626465
    6. '.")
' → logprob: -8.667548179626465
    7. '.' → logprob: -10.542548179626465
    8. ')' → logprob: -10.917548179626465
    9. '")

' → logprob: -11.167548179626465
    10. ')")' → logprob: -11.292548179626465

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014637044630944729
    2. '<|end|>' → logprob: -5.014636993408203
    3. '
' → logprob: -5.264636993408203
    4. '        
' → logprob: -6.264636993408203
    5. ')' → logprob: -8.139636993408203
    6. ',' → logprob: -8.889636993408203
    7. ' 
' → logprob: -9.639636993408203
    8. ')
' → logprob: -10.014636993408203
    9. '<|end|>' → logprob: -10.139636993408203
    10. '  
' → logprob: -10.139636993408203

Token 107: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015996240079402924
    2. 'self' (adapté à ' self') → logprob: -4.26599645614624
    3. ' self' → logprob: -6.39099645614624
    4. '        
' → logprob: -9.515995979309082
    5. '
' → logprob: -10.140995979309082
    6. '```' → logprob: -11.515995979309082
    7. '	self' → logprob: -12.515995979309082
    8. '   ' → logprob: -12.515995979309082
    9. '      ' → logprob: -12.765995979309082
    10. ' ' → logprob: -12.765995979309082

Token 108: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.125210297293961e-05
    2. ' .' → logprob: -9.625081062316895
    3. '.' → logprob: -11.375081062316895
    4. '       ' → logprob: -13.000081062316895
    5. '   ' → logprob: -14.875081062316895
    6. '.__' → logprob: -15.000081062316895
    7. ']._' → logprob: -15.375081062316895
    8. ')._' → logprob: -15.625081062316895
    9. ' ' → logprob: -16.00008201599121
    10. '	' → logprob: -16.87508201599121

Token 109: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -2.081584716506768e-05
    2. '_interval' → logprob: -11.125020980834961
    3. 'n' → logprob: -12.625020980834961
    4. ' interval' → logprob: -13.875020980834961
    5. '(interval' → logprob: -14.375020980834961
    6. '_n' → logprob: -14.500020980834961
    7. '.interval' → logprob: -15.250020980834961
    8. 'inter' → logprob: -16.12502098083496
    9. '_' → logprob: -16.37502098083496
    10. 'm' → logprob: -16.62502098083496

Token 110: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -3.128163257315464e-07
    2. '_d' → logprob: -15.75
    3. '_' → logprob: -16.5
    4. 'data' → logprob: -17.625
    5. '   ' → logprob: -17.875
    6. ' _' → logprob: -18.125
    7. '_datas' → logprob: -18.25
    8. 's' → logprob: -18.5
    9. '._' → logprob: -19.125
    10. '_name' → logprob: -19.625

Token 111: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008644239977002144
    2. '.' → logprob: -4.758644104003906
    3. ' .' → logprob: -10.883644104003906
    4. '.extend' → logprob: -12.633644104003906
    5. '.ap' → logprob: -13.258644104003906
    6. '.app' → logprob: -13.383644104003906
    7. '       ' → logprob: -13.633644104003906
    8. '.add' → logprob: -14.133644104003906
    9. '.setdefault' → logprob: -14.133644104003906
    10. ').' → logprob: -14.758644104003906

Token 112: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00010092071170220152
    2. '(' → logprob: -9.250101089477539
    3. '([' → logprob: -12.625101089477539
    4. '({'' → logprob: -14.000101089477539
    5. '(('' → logprob: -15.625101089477539
    6. '(
' → logprob: -15.875101089477539
    7. '(("' → logprob: -16.62510108947754
    8. '({"' → logprob: -16.62510108947754
    9. '   ' → logprob: -17.00010108947754
    10. '({' → logprob: -17.12510108947754

Token 113: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.00011224505578866228
    2. ' entering' → logprob: -9.125112533569336
    3. 'entr' → logprob: -13.250112533569336
    4. 'entered' → logprob: -14.250112533569336
    5. 'ent' → logprob: -15.125112533569336
    6. '   ' → logprob: -15.125112533569336
    7. 'Entering' → logprob: -16.000112533569336
    8. '	enter' → logprob: -16.625112533569336
    9. '           ' → logprob: -16.750112533569336
    10. '       ' → logprob: -16.750112533569336

Token 114: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.629921436891891e-05
    2. '_ing' → logprob: -12.00002670288086
    3. 'ng' → logprob: -12.12502670288086
    4. 'ring' → logprob: -12.25002670288086
    5. 'g' → logprob: -13.00002670288086
    6. 'ging' → logprob: -13.25002670288086
    7. '   ' → logprob: -13.87502670288086
    8. ',' → logprob: -14.00002670288086
    9. '_' → logprob: -14.00002670288086
    10. 'eing' → logprob: -14.00002670288086

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020687808864749968
    2. ' ,' → logprob: -8.50020694732666
    3. ',
' → logprob: -13.37520694732666
    4. ')' → logprob: -14.50020694732666
    5. ',

' → logprob: -15.12520694732666
    6. '‌,' → logprob: -15.62520694732666
    7. '<|end|>' → logprob: -16.125205993652344
    8. '),' → logprob: -16.625205993652344
    9. '   ' → logprob: -16.875205993652344
    10. '```' → logprob: -17.000205993652344

Token 116: ' leaving' (ID: 15021)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.386995404958725
    2. ' leaving' → logprob: -1.1369954347610474
    3. ' le' → logprob: -9.636995315551758
    4. ' ' → logprob: -11.136995315551758
    5. 'leave' → logprob: -11.136995315551758
    6. 'Leaving' → logprob: -11.761995315551758
    7. ')' → logprob: -12.136995315551758
    8. ' leaves' → logprob: -12.386995315551758
    9. '_le' → logprob: -13.386995315551758
    10. ' ' → logprob: -13.574495315551758

Token 117: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31350812315940857
    2. ')' → logprob: -1.313508152961731
    3. '))
' → logprob: -8.813508033752441
    4. ')
' → logprob: -9.438508033752441
    5. '       ' → logprob: -11.813508033752441
    6. ',' → logprob: -12.938508033752441
    7. '),' → logprob: -12.938508033752441
    8. ' ))' → logprob: -13.063508033752441
    9. ')))' → logprob: -13.438508033752441
    10. ' )' → logprob: -13.688508033752441

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2795157730579376
    2. '<|end|>' → logprob: -1.6545157432556152
    3. '
' → logprob: -3.6545157432556152
    4. '    
' → logprob: -4.404515743255615
    5. 'def' → logprob: -5.904515743255615
    6. ' 
' → logprob: -5.904515743255615
    7. ' ' → logprob: -6.279515743255615
    8. '       ' → logprob: -6.404515743255615
    9. '<|end|>' → logprob: -6.904515743255615
    10. '  
' → logprob: -7.029515743255615

Token 119: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4114087224006653
    2. '   ' → logprob: -1.4114086627960205
    3. ' def' → logprob: -2.4114086627960205
    4. ' ' → logprob: -6.0364089012146
    5. '<|end|>' → logprob: -7.6614089012146
    6. '    
' → logprob: -8.286408424377441
    7. '
' → logprob: -8.411408424377441
    8. '  ' → logprob: -9.036408424377441
    9. '  
' → logprob: -9.911408424377441
    10. ' 
' → logprob: -9.911408424377441

Token 120: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.0002632430987432599
    2. 'proper' → logprob: -9.250263214111328
    3. 'staticmethod' → logprob: -9.375263214111328
    4. 'classmethod' → logprob: -9.875263214111328
    5. 'pro' → logprob: -10.750263214111328
    6. 'dat' → logprob: -11.875263214111328
    7. 'prop' → logprob: -14.250263214111328
    8. ' property' → logprob: -14.250263214111328
    9. 'p' → logprob: -14.750263214111328
    10. 'pr' → logprob: -15.500263214111328

Token 121: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005312258377671242
    2. '
' → logprob: -6.130312442779541
    3. ' def' → logprob: -6.255312442779541
    4. '   ' → logprob: -7.130312442779541
    5. '<|end|>' → logprob: -8.005311965942383
    6. '<|end|>' → logprob: -10.380311965942383
    7. '	def' → logprob: -11.630311965942383
    8. '    
' → logprob: -11.755311965942383
    9. '_def' → logprob: -12.505311965942383
    10. 'ndef' → logprob: -12.505311965942383

Token 122: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00018530222587287426
    2. '
' → logprob: -9.375185012817383
    3. ' def' → logprob: -9.375185012817383
    4. '   ' → logprob: -11.625185012817383
    5. '<|end|>' → logprob: -12.750185012817383
    6. '	def' → logprob: -13.500185012817383
    7. '<|end|>' → logprob: -14.125185012817383
    8. '    
' → logprob: -14.625185012817383
    9. 'ndef' → logprob: -14.750185012817383
    10. '_def' → logprob: -15.375185012817383

Token 123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01777140609920025
    2. 'n' → logprob: -4.142771244049072
    3. ' def' → logprob: -7.267771244049072
    4. 'interval' → logprob: -8.01777172088623
    5. 'total' → logprob: -8.26777172088623
    6. '
' → logprob: -8.76777172088623
    7. 'data' → logprob: -9.64277172088623
    8. ' n' → logprob: -10.26777172088623
    9. 'current' → logprob: -10.26777172088623
    10. '_n' → logprob: -10.64277172088623

Token 124: ' n' (ID: 297)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5297488570213318
    2. ' current' → logprob: -2.1547489166259766
    3. ' n' → logprob: -2.4047489166259766
    4. 'total' → logprob: -2.4047489166259766
    5. 'n' → logprob: -3.7797489166259766
    6. ' average' → logprob: -4.154748916625977
    7. 'current' → logprob: -4.279748916625977
    8. ' traffic' → logprob: -4.529748916625977
    9. ' car' → logprob: -4.779748916625977
    10. 'car' → logprob: -5.279748916625977

Token 125: '(self' (ID: 2402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29519879817962646
    2. '):' → logprob: -1.4201987981796265
    3. '):
' → logprob: -4.295198917388916
    4. '):

' → logprob: -10.045198440551758
    5. ' )' → logprob: -10.170198440551758
    6. 'self' → logprob: -10.295198440551758
    7. ')return' → logprob: -10.295198440551758
    8. '<|end|>' → logprob: -10.420198440551758
    9. '   ' → logprob: -10.545198440551758
    10. ' ):' → logprob: -10.795198440551758

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14638109505176544
    2. '   ' → logprob: -2.396381139755249
    3. '<|end|>' → logprob: -4.52138090133667
    4. ' return' → logprob: -4.64638090133667
    5. 'return' → logprob: -4.64638090133667
    6. '
' → logprob: -4.89638090133667
    7. '    
' → logprob: -5.77138090133667
    8. '        
' → logprob: -6.02138090133667
    9. '	return' → logprob: -7.89638090133667
    10. ' 
' → logprob: -8.021381378173828

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06197160854935646
    2. ' return' → logprob: -2.811971664428711
    3. '       ' → logprob: -12.561971664428711
    4. '   ' → logprob: -15.186971664428711
    5. 'self' → logprob: -16.68697166442871
    6. '	return' → logprob: -17.56197166442871
    7. ':return' → logprob: -18.93697166442871
    8. ' ' → logprob: -19.81197166442871
    9. '{return' → logprob: -19.81197166442871
    10. '```' → logprob: -20.06197166442871

Token 129: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.575943648815155
    2. 'self' → logprob: -0.825943648815155
    3. '	self' → logprob: -12.700943946838379
    4. ' ' → logprob: -15.075943946838379
    5. '   ' → logprob: -15.200943946838379
    6. '_self' → logprob: -15.450943946838379
    7. '(self' → logprob: -15.575943946838379
    8. ' ' → logprob: -15.700943946838379
    9. '       ' → logprob: -16.950942993164062
    10. '$self' → logprob: -17.825942993164062

Token 130: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.500011444091797
    3. ' .' → logprob: -13.625011444091797
    4. '.n' → logprob: -15.000011444091797
    5. '.__' → logprob: -16.625011444091797
    6. '_n' → logprob: -16.875011444091797
    7. '   ' → logprob: -19.000011444091797
    8. 'self' → logprob: -19.375011444091797
    9. ' ' → logprob: -19.625011444091797
    10. '_' → logprob: -19.625011444091797

Token 131: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. '_n' → logprob: -14.250000953674316
    3. '	n' → logprob: -19.125
    4. ' n' → logprob: -19.75
    5. 'н' → logprob: -20.5
    6. '_' → logprob: -20.875
    7. '-n' → logprob: -21.25
    8. '.n' → logprob: -22.125
    9. 'nitt' → logprob: -22.5
    10. '[n' → logprob: -22.625

Token 132: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12664908170700073
    2. '<|end|>' → logprob: -2.5016491413116455
    3. '   ' → logprob: -3.3766491413116455
    4. '    
' → logprob: -6.626648902893066
    5. 'newline' → logprob: -8.001648902893066
    6. '<|end|>' → logprob: -8.126648902893066
    7. '@property' → logprob: -8.501648902893066
    8. '```' → logprob: -8.501648902893066
    9. '\n' → logprob: -8.626648902893066
    10. '

' → logprob: -9.376648902893066

Token 134: ' @' (ID: 759)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -0.08942870795726776
    2. '@' (adapté à ' @') → logprob: -2.464428663253784
    3. '   ' → logprob: -8.089428901672363
    4. ' @' → logprob: -9.589428901672363
    5. '@return' → logprob: -10.464428901672363
    6. '@index' → logprob: -10.714428901672363
    7. '    
' → logprob: -11.214428901672363
    8. 'def' → logprob: -11.339428901672363
    9. '@n' → logprob: -11.339428901672363
    10. ' ' → logprob: -12.214428901672363

Token 135: 'property' (ID: 8813)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5760130286216736
    2. 'property' → logprob: -0.8260130286216736
    3. '@property' → logprob: -10.70101261138916
    4. 'interval' → logprob: -11.07601261138916
    5. 'n' → logprob: -11.32601261138916
    6. ' property' → logprob: -12.32601261138916
    7. '_m' → logprob: -12.32601261138916
    8. 'staticmethod' → logprob: -12.57601261138916
    9. 'method' → logprob: -12.70101261138916
    10. '_property' → logprob: -13.57601261138916

Token 136: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04747368022799492
    2. ' def' → logprob: -3.172473669052124
    3. '
' → logprob: -6.297473907470703
    4. '   ' → logprob: -6.422473907470703
    5. '<|end|>' → logprob: -7.297473907470703
    6. 'n' → logprob: -9.672473907470703
    7. '    
' → logprob: -9.672473907470703
    8. '_n' → logprob: -10.297473907470703
    9. ' ' → logprob: -10.422473907470703
    10. '  
' → logprob: -10.672473907470703

Token 137: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.138313889503479
    2. ' def' → logprob: -2.2633137702941895
    3. '
' → logprob: -4.0133137702941895
    4. '   ' → logprob: -5.0133137702941895
    5. '    
' → logprob: -8.888314247131348
    6. '<|end|>' → logprob: -9.388314247131348
    7. '	def' → logprob: -10.013314247131348
    8. ' ' → logprob: -10.013314247131348
    9. '(' → logprob: -10.513314247131348
    10. '  
' → logprob: -10.888314247131348

Token 138: ' def' (ID: 1056)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3933299481868744
    2. 'def' (adapté à ' def') → logprob: -1.1433299779891968
    3. '_m' → logprob: -5.518330097198486
    4. '   ' → logprob: -6.768330097198486
    5. ' def' → logprob: -7.393330097198486
    6. ''m' → logprob: -7.768330097198486
    7. '
' → logprob: -8.768329620361328
    8. ' m' → logprob: -10.143329620361328
    9. '```' → logprob: -11.268329620361328
    10. '`' → logprob: -12.143329620361328

Token 139: ' initial' (ID: 4871)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5766147375106812
    2. 'm' → logprob: -0.8266147375106812
    3. '_m' → logprob: -7.326614856719971
    4. '_' → logprob: -11.951614379882812
    5. ' _' → logprob: -12.201614379882812
    6. ' ' → logprob: -13.576614379882812
    7. '	m' → logprob: -13.701614379882812
    8. '```' → logprob: -13.701614379882812
    9. '   ' → logprob: -15.639114379882812
    10. ' ' → logprob: -15.764114379882812

Token 140: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.009408252313733101
    2. '_m' → logprob: -4.884408473968506
    3. '_car' → logprob: -6.509408473968506
    4. '_' → logprob: -8.259407997131348
    5. '_time' → logprob: -10.509407997131348
    6. ' _' → logprob: -11.759407997131348
    7. '_s' → logprob: -12.384407997131348
    8. '_n' → logprob: -13.259407997131348
    9. '```' → logprob: -13.384407997131348
    10. ')_' → logprob: -14.134407997131348

Token 141: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.002124684164300561
    2. '_c' → logprob: -7.002124786376953
    3. 'ar' → logprob: -7.502124786376953
    4. '_' → logprob: -8.127124786376953
    5. 'cars' → logprob: -8.752124786376953
    6. '_m' → logprob: -8.877124786376953
    7. 'a' → logprob: -11.002124786376953
    8. '_ar' → logprob: -11.877124786376953
    9. '```' → logprob: -12.127124786376953
    10. '_a' → logprob: -12.502124786376953

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04629446193575859
    2. '(' → logprob: -3.2962944507598877
    3. '<|end|>' → logprob: -5.171294689178467
    4. '()' → logprob: -6.921294689178467
    5. '(
' → logprob: -7.546294689178467
    6. 'self' → logprob: -8.296294212341309
    7. '   ' → logprob: -8.421294212341309
    8. '():' → logprob: -8.546294212341309
    9. '():
' → logprob: -9.546294212341309
    10. '       ' → logprob: -9.796294212341309

Token 143: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5401359796524048
    2. '):' → logprob: -1.4151359796524048
    3. ')' → logprob: -1.7901359796524048
    4. '<|end|>' → logprob: -5.415135860443115
    5. '():
' → logprob: -7.290135860443115
    6. '   ' → logprob: -7.290135860443115
    7. '):

' → logprob: -7.415135860443115
    8. '()' → logprob: -8.415136337280273
    9. ')
' → logprob: -8.790136337280273
    10. '():' → logprob: -9.165136337280273

Token 144: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21844911575317383
    2. 'return' → logprob: -1.8434491157531738
    3. '       ' → logprob: -3.593449115753174
    4. '   ' → logprob: -5.343449115753174
    5. ' self' → logprob: -5.718449115753174
    6. 'self' → logprob: -6.343449115753174
    7. '    ' → logprob: -8.218448638916016
    8. '<|end|>' → logprob: -9.093448638916016
    9. '_return' → logprob: -10.093448638916016
    10. '(self' → logprob: -10.468448638916016

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015115276910364628
    2. ' return' → logprob: -6.501511573791504
    3. '       ' → logprob: -11.626511573791504
    4. '   ' → logprob: -15.626511573791504
    5. ':return' → logprob: -16.626510620117188
    6. '{return' → logprob: -17.126510620117188
    7. 'self' → logprob: -17.501510620117188
    8. '	return' → logprob: -18.126510620117188
    9. 'eturn' → logprob: -19.751510620117188
    10. '```' → logprob: -20.126510620117188

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10020871460437775
    2. 'self' → logprob: -2.3502087593078613
    3. ' ' → logprob: -14.350208282470703
    4. '(self' → logprob: -14.600208282470703
    5. '_self' → logprob: -14.975208282470703
    6. '	self' → logprob: -15.100208282470703
    7. ' _' → logprob: -15.350208282470703
    8. ' ' → logprob: -16.225208282470703
    9. '   ' → logprob: -16.475208282470703
    10. '_' → logprob: -17.600208282470703

Token 147: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.729906196298543e-06
    2. '.' → logprob: -11.750009536743164
    3. '_' → logprob: -14.250009536743164
    4. '.user' → logprob: -15.250009536743164
    5. ')._' → logprob: -15.250009536743164
    6. ' .' → logprob: -15.875009536743164
    7. '_m' → logprob: -16.875009536743164
    8. '_user' → logprob: -17.000009536743164
    9. '.__' → logprob: -17.125009536743164
    10. '->_' → logprob: -17.250009536743164

Token 148: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.128163257315464e-07
    2. '_m' → logprob: -15.625
    3. 'м' → logprob: -17.25
    4. '	m' → logprob: -17.25
    5. '_' → logprob: -17.625
    6. 'initial' → logprob: -17.875
    7. ' m' → logprob: -18.625
    8. 'ｍ' → logprob: -18.75
    9. '-m' → logprob: -19.4375
    10. 'n' → logprob: -19.5625

Token 149: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.917852520942688
    2. '
' → logprob: -1.167852520942688
    3. '<|end|>' → logprob: -1.292852520942688
    4. '    
' → logprob: -5.292852401733398
    5. '<|end|>' → logprob: -5.917852401733398
    6. '

' → logprob: -6.042852401733398
    7. 'def' → logprob: -6.417852401733398
    8. '@property' → logprob: -6.542852401733398
    9. '```' → logprob: -7.417852401733398
    10. '  
' → logprob: -8.167852401733398

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045428793877363205
    2. '@property' → logprob: -3.42042875289917
    3. '<|end|>' → logprob: -4.54542875289917
    4. '
' → logprob: -8.045429229736328
    5. 'def' → logprob: -8.045429229736328
    6. '    
' → logprob: -8.920429229736328
    7. '<|end|>' → logprob: -9.795429229736328
    8. '```' → logprob: -9.920429229736328
    9. '@return' → logprob: -10.420429229736328
    10. ')' → logprob: -10.420429229736328

Token 151: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6935321688652039
    2. '@property' → logprob: -0.6935321688652039
    3. '@' (adapté à ' @') → logprob: -8.94353199005127
    4. ' def' → logprob: -9.19353199005127
    5. '   ' → logprob: -9.19353199005127
    6. '@end' → logprob: -10.94353199005127
    7. ' @' → logprob: -11.69353199005127
    8. '@return' → logprob: -11.94353199005127
    9. '@param' → logprob: -12.44353199005127
    10. '@index' → logprob: -13.44353199005127

Token 152: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.00028612653841264546
    2. 'interval' → logprob: -8.375286102294922
    3. 'staticmethod' → logprob: -10.500286102294922
    4. '@property' → logprob: -11.750286102294922
    5. 'classmethod' → logprob: -11.750286102294922
    6. '_property' → logprob: -12.125286102294922
    7. 'n' → logprob: -12.625286102294922
    8. '_interval' → logprob: -13.625286102294922
    9. 'len' → logprob: -14.125286102294922
    10. ' property' → logprob: -14.125286102294922

Token 153: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03042416274547577
    2. '
' → logprob: -3.530424118041992
    3. ' def' → logprob: -7.530424118041992
    4. '   ' → logprob: -9.905424118041992
    5. '<|end|>' → logprob: -9.905424118041992
    6. '<|end|>' → logprob: -11.655424118041992
    7. '_def' → logprob: -11.780424118041992
    8. '	def' → logprob: -11.905424118041992
    9. '    
' → logprob: -12.030424118041992
    10. ':def' → logprob: -13.030424118041992

Token 154: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012097173370420933
    2. '
' → logprob: -4.762097358703613
    3. '   ' → logprob: -6.387097358703613
    4. ' def' → logprob: -6.512097358703613
    5. '	def' → logprob: -8.512097358703613
    6. '<|end|>' → logprob: -10.387097358703613
    7. '<|end|>' → logprob: -10.512097358703613
    8. '_def' → logprob: -10.762097358703613
    9. '    
' → logprob: -12.012097358703613
    10. ' ' → logprob: -12.762097358703613

Token 155: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04676394537091255
    2. 'interval' → logprob: -3.2967638969421387
    3. '
' → logprob: -5.046763896942139
    4. '_interval' → logprob: -6.421763896942139
    5. ' def' → logprob: -7.796763896942139
    6. '   ' → logprob: -9.421764373779297
    7. '_' → logprob: -10.296764373779297
    8. '    
' → logprob: -10.671764373779297
    9. '_def' → logprob: -10.671764373779297
    10. ' interval' → logprob: -11.421764373779297

Token 156: ' intervals' (ID: 49900)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.3897879123687744
    2. 'interval' → logprob: -1.1397879123687744
    3. '_interval' → logprob: -6.264787673950195
    4. ' _' → logprob: -7.639787673950195
    5. '_' → logprob: -7.889787673950195
    6. ' ' → logprob: -10.139787673950195
    7. ' intervals' → logprob: -10.639787673950195
    8. ' total' → logprob: -11.264787673950195
    9. '(interval' → logprob: -11.577287673950195
    10. 'total' → logprob: -12.139787673950195

Token 157: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025615072809159756
    2. '(' → logprob: -6.752561569213867
    3. '   ' → logprob: -7.127561569213867
    4. 'self' → logprob: -7.877561569213867
    5. '_count' → logprob: -9.877561569213867
    6. ':' → logprob: -10.627561569213867
    7. 'def' → logprob: -10.752561569213867
    8. 's' → logprob: -11.127561569213867
    9. 'count' → logprob: -11.127561569213867
    10. ' (' → logprob: -11.252561569213867

Token 158: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055913932621479034
    2. '):' → logprob: -3.0559139251708984
    3. '   ' → logprob: -5.555913925170898
    4. ')' → logprob: -6.930913925170898
    5. '(self' → logprob: -7.055913925170898
    6. 'self' → logprob: -7.305913925170898
    7. '():
' → logprob: -7.555913925170898
    8. '       ' → logprob: -8.680913925170898
    9. ' ' → logprob: -10.055913925170898
    10. '
' → logprob: -10.180913925170898

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06338270753622055
    2. 'return' → logprob: -2.813382625579834
    3. ' return' → logprob: -6.563382625579834
    4. '   ' → logprob: -13.813383102416992
    5. 'len' → logprob: -13.938383102416992
    6. 'self' → logprob: -14.813383102416992
    7. '	return' → logprob: -14.938383102416992
    8. '      ' → logprob: -15.688383102416992
    9. ':return' → logprob: -16.063383102416992
    10. '     ' → logprob: -16.813383102416992

Token 160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002879414474591613
    2. ' return' → logprob: -6.127879619598389
    3. 'self' → logprob: -7.877879619598389
    4. '       ' → logprob: -8.12787914276123
    5. 'len' → logprob: -11.37787914276123
    6. '   ' → logprob: -11.87787914276123
    7. ' self' → logprob: -13.87787914276123
    8. '	return' → logprob: -16.252880096435547
    9. 'yield' → logprob: -16.502880096435547
    10. ' ' → logprob: -16.752880096435547

Token 161: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006728872191160917
    2. ' self' → logprob: -5.006728649139404
    3. 'len' → logprob: -11.256729125976562
    4. 'list' → logprob: -15.006729125976562
    5. ' len' → logprob: -15.381729125976562
    6. '	self' → logprob: -16.756729125976562
    7. '   ' → logprob: -17.131729125976562
    8. '(self' → logprob: -17.131729125976562
    9. ' ' → logprob: -17.381729125976562
    10. '[self' → logprob: -17.381729125976562

Token 162: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.491498531133402e-06
    2. '.' → logprob: -11.750009536743164
    3. ' .' → logprob: -14.750009536743164
    4. '_interval' → logprob: -15.000009536743164
    5. '_inter' → logprob: -15.250009536743164
    6. '_data' → logprob: -15.625009536743164
    7. '   ' → logprob: -15.875009536743164
    8. '.__' → logprob: -16.375009536743164
    9. '_t' → logprob: -17.500009536743164
    10. '_' → logprob: -17.625009536743164

Token 163: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.6240566083070007e-06
    2. '_interval' → logprob: -14.000001907348633
    3. 'inter' → logprob: -14.625001907348633
    4. '(interval' → logprob: -16.375001907348633
    5. 'int' → logprob: -16.625001907348633
    6. '_' → logprob: -16.875001907348633
    7. 'n' → logprob: -17.750001907348633
    8. '.interval' → logprob: -18.375001907348633
    9. ' interval' → logprob: -18.875001907348633
    10. 'interface' → logprob: -19.625001907348633

Token 164: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -6.2729995988775045e-06
    2. 'ata' → logprob: -12.625006675720215
    3. 'data' → logprob: -12.875006675720215
    4. 'a' → logprob: -15.375006675720215
    5. '_' → logprob: -16.1250057220459
    6. 'val' → logprob: -17.8750057220459
    7. '   ' → logprob: -18.2500057220459
    8. '_DATA' → logprob: -18.2500057220459
    9. 'e' → logprob: -18.3750057220459
    10. 'f' → logprob: -18.5000057220459

Token 165: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5989343523979187
    2. '   ' → logprob: -1.3489344120025635
    3. '<|end|>' → logprob: -1.8489344120025635
    4. 'def' → logprob: -3.7239344120025635
    5. '    
' → logprob: -5.348934173583984
    6. '<|end|>' → logprob: -6.598934173583984
    7. '

' → logprob: -6.973934173583984
    8. '  
' → logprob: -7.098934173583984
    9. ' def' → logprob: -7.723934173583984
    10. '```' → logprob: -7.848934173583984

Token 166: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.057244110852479935
    2. '
' → logprob: -3.182244062423706
    3. '   ' → logprob: -5.182244300842285
    4. ' def' → logprob: -5.182244300842285
    5. '

' → logprob: -7.432244300842285
    6. ' ' → logprob: -7.432244300842285
    7. '@' → logprob: -7.557244300842285
    8. '@property' → logprob: -8.432244300842285
    9. '    
' → logprob: -8.557244300842285
    10. 'd' → logprob: -8.682244300842285

Token 167: ' Traffic' (ID: 52059)
  Prédit: ' Tunnel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tunnel' → logprob: -0.533440113067627
    2. ' Traffic' → logprob: -1.908440113067627
    3. 'Tunnel' → logprob: -1.908440113067627
    4. 'Traffic' → logprob: -2.408440113067627
    5. ' Road' → logprob: -4.783440113067627
    6. 'Road' → logprob: -5.408440113067627
    7. 'Car' → logprob: -5.658440113067627
    8. ' Highway' → logprob: -5.783440113067627
    9. ' Car' → logprob: -5.783440113067627
    10. 'T' → logprob: -7.158440113067627

Token 168: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -0.404909610748291
    2. 'Simulator' → logprob: -2.154909610748291
    3. 'Data' → logprob: -2.529909610748291
    4. 'Counter' → logprob: -3.029909610748291
    5. 'Monitor' → logprob: -3.404909610748291
    6. 'Flow' → logprob: -4.404909610748291
    7. 'Estimator' → logprob: -4.904909610748291
    8. 'Calculator' → logprob: -5.404909610748291
    9. 'Predict' → logprob: -5.404909610748291
    10. 'Simulation' → logprob: -5.904909610748291

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012071382952854037
    2. ':
' → logprob: -6.75120735168457
    3. '(T' → logprob: -10.50120735168457
    4. '(' → logprob: -12.50120735168457
    5. ' :' → logprob: -13.12620735168457
    6. ':T' → logprob: -14.00120735168457
    7. ':def' → logprob: -14.37620735168457
    8. ':

' → logprob: -14.50120735168457
    9. '():' → logprob: -15.00120735168457
    10. '<T' → logprob: -15.12620735168457

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011783831752836704
    2. ' def' → logprob: -4.511783599853516
    3. 'def' → logprob: -7.261783599853516
    4. ':' → logprob: -10.636783599853516
    5. ':
' → logprob: -11.886783599853516
    6. '   ' → logprob: -14.011783599853516
    7. ':def' → logprob: -14.886783599853516
    8. '	def' → logprob: -14.886783599853516
    9. '    
' → logprob: -15.011783599853516
    10. '```' → logprob: -15.011783599853516

Token 171: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5760185718536377
    2. 'def' (adapté à ' def') → logprob: -0.8260185718536377
    3. '   ' → logprob: -9.451018333435059
    4. ' ' → logprob: -15.451018333435059
    5. 'class' → logprob: -16.451019287109375
    6. '    ' → logprob: -17.201019287109375
    7. '@' → logprob: -17.201019287109375
    8. '  ' → logprob: -17.326019287109375
    9. '	def' → logprob: -17.326019287109375
    10. ':def' → logprob: -17.576019287109375

Token 172: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014911653473973274
    2. ' init' → logprob: -4.264911651611328
    3. '__' → logprob: -7.889911651611328
    4. ' def' → logprob: -8.514911651611328
    5. 'init' → logprob: -9.639911651611328
    6. '_init' → logprob: -10.139911651611328
    7. ' ' → logprob: -10.514911651611328
    8. ' ' → logprob: -11.139911651611328
    9. ' _' → logprob: -11.514911651611328
    10. ' analyze' → logprob: -12.014911651611328

Token 173: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -16.0
    3. 'i' → logprob: -16.125
    4. ' init' → logprob: -16.375
    5. 'in' → logprob: -16.5
    6. 'int' → logprob: -17.125
    7. '   ' → logprob: -18.0
    8. 'def' → logprob: -18.625
    9. 'inite' → logprob: -18.75
    10. '```' → logprob: -18.875

Token 174: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0002457238151691854
    2. '__' → logprob: -9.000246047973633
    3. '(self' → logprob: -9.375246047973633
    4. '__(
' → logprob: -10.250246047973633
    5. '_(' → logprob: -14.125246047973633
    6. ' (' → logprob: -14.875246047973633
    7. '   ' → logprob: -15.125246047973633
    8. '__((' → logprob: -15.125246047973633
    9. '(' → logprob: -16.250246047973633
    10. 'self' → logprob: -16.250246047973633

Token 175: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012130453251302242
    2. ' self' → logprob: -9.125121116638184
    3. '   ' → logprob: -12.000121116638184
    4. '
' → logprob: -13.000121116638184
    5. ')' → logprob: -13.500121116638184
    6. '):
' → logprob: -13.625121116638184
    7. '       ' → logprob: -14.750121116638184
    8. ',' → logprob: -15.375121116638184
    9. 't' → logprob: -15.500121116638184
    10. '0' → logprob: -16.2501220703125

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005224120686762035
    2. 'self' → logprob: -7.875522613525391
    3. ' ,' → logprob: -9.50052261352539
    4. '):
' → logprob: -10.50052261352539
    5. '):' → logprob: -10.87552261352539
    6. '       ' → logprob: -12.00052261352539
    7. ' self' → logprob: -12.50052261352539
    8. '   ' → logprob: -12.62552261352539
    9. ',
' → logprob: -13.37552261352539
    10. '
' → logprob: -13.50052261352539

Token 177: ' traffic' (ID: 12769)
  Prédit: ' traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traffic' → logprob: -1.346664309501648
    2. ' data' → logprob: -1.596664309501648
    3. ' tunnel' → logprob: -1.721664309501648
    4. 'traffic' → logprob: -1.721664309501648
    5. 'data' → logprob: -2.2216644287109375
    6. 't' → logprob: -2.7216644287109375
    7. 'self' → logprob: -6.5966644287109375
    8. '   ' → logprob: -7.0966644287109375
    9. ' self' → logprob: -7.0966644287109375
    10. '):
' → logprob: -7.5966644287109375

Token 178: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.001460354425944388
    2. 'data' → logprob: -7.251460552215576
    3. ':' → logprob: -7.626460552215576
    4. '):' → logprob: -9.251460075378418
    5. 'Data' → logprob: -9.376460075378418
    6. '):
' → logprob: -10.126460075378418
    7. ')' → logprob: -10.751460075378418
    8. ' data' → logprob: -11.751460075378418
    9. '   ' → logprob: -12.251460075378418
    10. '_' → logprob: -12.751460075378418

Token 179: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4297337830066681
    2. ':' → logprob: -1.0547337532043457
    3. '):
' → logprob: -7.304733753204346
    4. ' ):' → logprob: -8.679734230041504
    5. ')' → logprob: -9.179734230041504
    6. ' :' → logprob: -9.929734230041504
    7. '_data' → logprob: -11.054734230041504
    8. 'data' → logprob: -12.429734230041504
    9. '   ' → logprob: -12.554734230041504
    10. '}:' → logprob: -12.554734230041504

Token 180: ' Tunnel' (ID: 105803)
  Prédit: 'Tunnel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tunnel' → logprob: -0.47420328855514526
    2. ' Tunnel' → logprob: -0.9742032885551453
    3. ' ' → logprob: -9.599203109741211
    4. 'T' → logprob: -10.349203109741211
    5. ')' → logprob: -11.974203109741211
    6. '   ' → logprob: -12.099203109741211
    7. '  ' → logprob: -12.224203109741211
    8. 'Traffic' → logprob: -12.224203109741211
    9. 'Tun' → logprob: -13.849203109741211
    10. ' Traffic' → logprob: -14.224203109741211

Token 181: 'Traffic' (ID: 79386)
  Prédit: 'Traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -6.704273118884885e-07
    2. ' Traffic' → logprob: -14.750000953674316
    3. 'traffic' → logprob: -16.5
    4. 'Data' → logprob: -17.25
    5. ' traffic' → logprob: -18.125
    6. '```' → logprob: -18.625
    7. 'Travel' → logprob: -19.875
    8. 'Tra' → logprob: -20.125
    9. '>' → logprob: -20.25
    10. 'Trajectory' → logprob: -20.25

Token 182: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -3.4121114822482923e-06
    2. ' Data' → logprob: -13.500003814697266
    3. '_data' → logprob: -13.750003814697266
    4. 'data' → logprob: -15.250003814697266
    5. '_Data' → logprob: -16.000003814697266
    6. '	Data' → logprob: -16.250003814697266
    7. ' data' → logprob: -16.500003814697266
    8. '   ' → logprob: -17.000003814697266
    9. '<Data' → logprob: -17.125003814697266
    10. '_DATA' → logprob: -17.500003814697266

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017176620895043015
    2. '):
' → logprob: -6.376717567443848
    3. ')' → logprob: -11.626717567443848
    4. ',' → logprob: -13.376717567443848
    5. '   ' → logprob: -13.501717567443848
    6. ':' → logprob: -13.501717567443848
    7. '):
' → logprob: -14.001717567443848
    8. ' ):' → logprob: -14.501717567443848
    9. '       ' → logprob: -15.001717567443848
    10. '():' → logprob: -15.626717567443848

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014573395310435444
    2. ' self' → logprob: -9.50014591217041
    3. 'self' → logprob: -9.75014591217041
    4. '   ' → logprob: -12.25014591217041
    5. ',' → logprob: -13.37514591217041
    6. '<|end|>' → logprob: -13.37514591217041
    7. ':' → logprob: -13.50014591217041
    8. ')' → logprob: -13.62514591217041
    9. '):' → logprob: -14.62514591217041
    10. '      ' → logprob: -15.12514591217041

Token 185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018815194489434361
    2. ' self' → logprob: -6.7518815994262695
    3. '       ' → logprob: -7.2518815994262695
    4. '   ' → logprob: -13.12688159942627
    5. '	self' → logprob: -15.50188159942627
    6. 'def' → logprob: -18.501880645751953
    7. ' ' → logprob: -18.876880645751953
    8. '(self' → logprob: -18.876880645751953
    9. '     ' → logprob: -19.751880645751953
    10. '
' → logprob: -19.751880645751953

Token 186: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11317335069179535
    2. '.' → logprob: -2.238173246383667
    3. ' .' → logprob: -8.113173484802246
    4. '   ' → logprob: -10.613173484802246
    5. '_' → logprob: -11.863173484802246
    6. '.__' → logprob: -11.988173484802246
    7. ' ' → logprob: -12.363173484802246
    8. '	' → logprob: -13.488173484802246
    9. '

' → logprob: -13.863173484802246
    10. '       ' → logprob: -14.113173484802246

Token 187: 'data' (ID: 1074)
  Prédit: 'traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'traffic' → logprob: -0.001509150955826044
    2. 'data' → logprob: -6.501509189605713
    3. ' traffic' → logprob: -13.251508712768555
    4. '_' → logprob: -13.376508712768555
    5. 't' → logprob: -14.126508712768555
    6. '_data' → logprob: -14.751508712768555
    7. '

' → logprob: -15.126508712768555
    8. '   ' → logprob: -15.251508712768555
    9. 'traf' → logprob: -15.376508712768555
    10. '
' → logprob: -15.876508712768555

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931505799293518
    2. ' =' → logprob: -0.6931505799293518
    3. '   ' → logprob: -14.193150520324707
    4. '.' → logprob: -14.193150520324707
    5. '=data' → logprob: -14.693150520324707
    6. '＝' → logprob: -14.818150520324707
    7. ')' → logprob: -15.318150520324707
    8. ' ' → logprob: -15.443150520324707
    9. '_' → logprob: -16.068151473999023
    10. '    ' → logprob: -16.068151473999023

Token 189: ' traffic' (ID: 12769)
  Prédit: ' traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traffic' → logprob: -0.6931524872779846
    2. 'traffic' → logprob: -0.6931524872779846
    3. '       ' → logprob: -13.31815242767334
    4. ' trafic' → logprob: -13.81815242767334
    5. '   ' → logprob: -14.06815242767334
    6. 'traf' → logprob: -14.94315242767334
    7. ' traf' → logprob: -15.56815242767334
    8. ' ' → logprob: -15.69315242767334
    9. 'Traffic' → logprob: -15.94315242767334
    10. '        ' → logprob: -16.068153381347656

Token 190: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.0564331205387134e-05
    2. '_' → logprob: -11.75001049041748
    3. '._' → logprob: -14.25001049041748
    4. 'data' → logprob: -14.37501049041748
    5. '_an' → logprob: -14.87501049041748
    6. 'an' → logprob: -15.37501049041748
    7. ' _' → logprob: -16.125011444091797
    8. '.' → logprob: -16.375011444091797
    9. 'Data' → logprob: -16.500011444091797
    10. '   ' → logprob: -16.875011444091797

Token 191: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018573159351944923
    2. '

' → logprob: -4.64357328414917
    3. '   ' → logprob: -5.01857328414917
    4. '    
' → logprob: -7.01857328414917
    5. '<|end|>' → logprob: -7.39357328414917
    6. 'def' → logprob: -8.018572807312012
    7. ' def' → logprob: -9.143572807312012
    8. '  
' → logprob: -9.768572807312012
    9. '<|end|>' → logprob: -9.768572807312012
    10. ' 
' → logprob: -10.268572807312012

Token 192: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3967660963535309
    2. '   ' → logprob: -1.1467660665512085
    3. 'def' → logprob: -4.771766185760498
    4. '    
' → logprob: -7.396766185760498
    5. ' def' → logprob: -7.771766185760498
    6. '

' → logprob: -8.52176570892334
    7. '<|end|>' → logprob: -9.89676570892334
    8. ' 
' → logprob: -11.14676570892334
    9. '  
' → logprob: -11.27176570892334
    10. ')' → logprob: -11.39676570892334

Token 193: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.849109119386412e-06
    2. ' def' → logprob: -11.625009536743164
    3. '@property' → logprob: -14.125009536743164
    4. '   ' → logprob: -16.000009536743164
    5. '@' → logprob: -19.125009536743164
    6. 'class' → logprob: -20.250009536743164
    7. 'de' → logprob: -20.875009536743164
    8. '	def' → logprob: -21.125009536743164
    9. 'from' → logprob: -21.375009536743164
    10. ' ' → logprob: -22.250009536743164

Token 194: ' calculate' (ID: 17950)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.56034255027771
    2. ' analyze' → logprob: -1.81034255027771
    3. ' total' → logprob: -1.93534255027771
    4. ' max' → logprob: -2.31034255027771
    5. 'an' → logprob: -2.56034255027771
    6. ' calculate' → logprob: -2.56034255027771
    7. 'calculate' → logprob: -2.56034255027771
    8. 'total' → logprob: -3.18534255027771
    9. 'get' → logprob: -3.18534255027771
    10. 'max' → logprob: -3.68534255027771

Token 195: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.5863558650016785
    2. '_average' → logprob: -1.5863559246063232
    3. '_' → logprob: -2.4613559246063232
    4. '_net' → logprob: -2.9613559246063232
    5. '_total' → logprob: -3.3363559246063232
    6. '_peak' → logprob: -4.211355686187744
    7. '_density' → logprob: -4.461355686187744
    8. '(self' → logprob: -4.711355686187744
    9. '_flow' → logprob: -5.086355686187744
    10. '_current' → logprob: -5.961355686187744

Token 196: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.17651252448558807
    2. '_' → logprob: -1.9265124797821045
    3. '_con' → logprob: -5.926512718200684
    4. '```' → logprob: -6.551512718200684
    5. '_inside' → logprob: -6.676512718200684
    6. '_in' → logprob: -6.676512718200684
    7. '_car' → logprob: -6.926512718200684
    8. 'imum' → logprob: -7.051512718200684
    9. '_count' → logprob: -7.426512718200684
    10. '_load' → logprob: -7.426512718200684

Token 197: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.02676987461745739
    2. 'ar' → logprob: -3.7767698764801025
    3. 'ount' → logprob: -6.276769638061523
    4. 'on' → logprob: -7.651769638061523
    5. 'ont' → logprob: -7.901769638061523
    6. 'urrent' → logprob: -8.151769638061523
    7. '_' → logprob: -9.651769638061523
    8. ' ars' → logprob: -10.026769638061523
    9. 'umulative' → logprob: -10.276769638061523
    10. ' ar' → logprob: -10.401769638061523

Token 198: '_in' (ID: 2267)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024292864836752415
    2. '(' → logprob: -6.877429485321045
    3. '_inside' → logprob: -7.377429485321045
    4. '_in' → logprob: -8.127429008483887
    5. '   ' → logprob: -8.502429008483887
    6. '_on' → logprob: -9.752429008483887
    7. '       ' → logprob: -9.877429008483887
    8. ' (' → logprob: -10.127429008483887
    9. '_present' → logprob: -10.127429008483887
    10. '_at' → logprob: -11.127429008483887

Token 199: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0467132106423378
    2. 't' → logprob: -3.17171311378479
    3. '_interval' → logprob: -7.171713352203369
    4. '_' → logprob: -7.671713352203369
    5. '   ' → logprob: -7.671713352203369
    6. 'Tunnel' → logprob: -8.046712875366211
    7. ' tunnel' → logprob: -8.171712875366211
    8. '```' → logprob: -8.421712875366211
    9. 'interval' → logprob: -8.671712875366211
    10. 'side' → logprob: -8.921712875366211

Token 200: 'unnel' (ID: 24757)
  Prédit: 'unnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unnel' → logprob: -0.002006199210882187
    2. 'un' → logprob: -7.0020060539245605
    3. 'he' → logprob: -7.8770060539245605
    4. 'unn' → logprob: -8.752006530761719
    5. '   ' → logprob: -9.627006530761719
    6. '```' → logprob: -9.752006530761719
    7. '
' → logprob: -10.002006530761719
    8. '       ' → logprob: -10.127006530761719
    9. 'unnels' → logprob: -10.439506530761719
    10. '

' → logprob: -10.877006530761719

Token 201: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006066487403586507
    2. '(' → logprob: -7.500606536865234
    3. '   ' → logprob: -10.500606536865234
    4. '       ' → logprob: -11.375606536865234
    5. 'self' → logprob: -11.750606536865234
    6. ' (' → logprob: -12.125606536865234
    7. 's' → logprob: -15.125606536865234
    8. '():' → logprob: -15.750606536865234
    9. '(s' → logprob: -16.250606536865234
    10. ' self' → logprob: -16.250606536865234

Token 202: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30387699604034424
    2. '):
' → logprob: -1.6788769960403442
    3. 'self' → logprob: -2.8038768768310547
    4. '   ' → logprob: -5.178876876831055
    5. ',' → logprob: -5.678876876831055
    6. ')' → logprob: -6.053876876831055
    7. '       ' → logprob: -6.303876876831055
    8. '(self' → logprob: -7.178876876831055
    9. ' ):' → logprob: -8.053876876831055
    10. '):
' → logprob: -8.928876876831055

Token 203: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006012698635458946
    2. '(' → logprob: -6.131012916564941
    3. ':' → logprob: -6.256012916564941
    4. '       ' → logprob: -6.381012916564941
    5. ':
' → logprob: -9.006012916564941
    6. '   ' → logprob: -9.881012916564941
    7. 'self' → logprob: -10.756012916564941
    8. '(
' → logprob: -12.506012916564941
    9. '():' → logprob: -13.256012916564941
    10. ' (' → logprob: -13.256012916564941

Token 204: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023247458040714264
    2. ' int' → logprob: -3.773247480392456
    3. '   ' → logprob: -14.148247718811035
    4. '[int' → logprob: -14.273247718811035
    5. '(int' → logprob: -14.773247718811035
    6. 'None' → logprob: -15.648247718811035
    7. ':int' → logprob: -16.77324676513672
    8. '	int' → logprob: -17.52324676513672
    9. ' None' → logprob: -17.77324676513672
    10. '<int' → logprob: -17.89824676513672

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.584235668182373
    2. ':
' → logprob: -1.334235668182373
    3. '       ' → logprob: -1.959235668182373
    4. '(self' → logprob: -3.334235668182373
    5. '):
' → logprob: -7.084235668182373
    6. '   ' → logprob: -7.084235668182373
    7. 'self' → logprob: -8.209236145019531
    8. '():
' → logprob: -8.959236145019531
    9. ':self' → logprob: -8.959236145019531
    10. '):' → logprob: -9.084236145019531

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018661033362150192
    2. 'current' → logprob: -4.518661022186279
    3. ' current' → logprob: -5.643661022186279
    4. 'max' → logprob: -6.018661022186279
    5. ' max' → logprob: -6.893661022186279
    6. 'cars' → logprob: -8.518661499023438
    7. '   ' → logprob: -9.143661499023438
    8. 'count' → logprob: -9.268661499023438
    9. 'car' → logprob: -9.518661499023438
    10. ' cars' → logprob: -9.643661499023438

Token 207: ' cars' (ID: 13653)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7046115398406982
    2. 'current' → logprob: -0.7046115398406982
    3. 'cars' (adapté à ' cars') → logprob: -5.079611778259277
    4. '       ' → logprob: -5.954611778259277
    5. 'count' → logprob: -7.204611778259277
    6. ' max' → logprob: -7.329611778259277
    7. 'car' → logprob: -7.704611778259277
    8. ' current' → logprob: -7.954611778259277
    9. 'total' → logprob: -8.329611778259277
    10. 'curr' → logprob: -9.704611778259277

Token 208: '_in' (ID: 2267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011942634359002113
    2. '=' → logprob: -4.5119428634643555
    3. '   ' → logprob: -7.8869428634643555
    4. '_in' → logprob: -8.136942863464355
    5. '_count' → logprob: -9.261942863464355
    6. '       ' → logprob: -9.386942863464355
    7. '    ' → logprob: -11.386942863464355
    8. '_current' → logprob: -11.886942863464355
    9. ' ' → logprob: -12.011942863464355
    10. '        ' → logprob: -12.261942863464355

Token 209: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.05383837968111038
    2. '=' → logprob: -3.8038384914398193
    3. 't' → logprob: -4.17883825302124
    4. ' =' → logprob: -5.05383825302124
    5. ' tunnel' → logprob: -5.92883825302124
    6. '_' → logprob: -6.05383825302124
    7. '   ' → logprob: -7.05383825302124
    8. 'self' → logprob: -7.05383825302124
    9. ' _' → logprob: -7.80383825302124
    10. ' ' → logprob: -7.80383825302124

Token 210: 'unnel' (ID: 24757)
  Prédit: 'unnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unnel' → logprob: -0.0019135229522362351
    2. 'un' → logprob: -7.001913547515869
    3. 'he' → logprob: -7.626913547515869
    4. '=' → logprob: -9.376913070678711
    5. 'unn' → logprob: -9.751913070678711
    6. '```' → logprob: -10.001913070678711
    7. '   ' → logprob: -10.251913070678711
    8. 'nel' → logprob: -10.501913070678711
    9. '_' → logprob: -10.751913070678711
    10. '
' → logprob: -10.876913070678711

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929863080382347
    2. '=' → logprob: -5.130929946899414
    3. ' ' → logprob: -13.880929946899414
    4. '=self' → logprob: -15.630929946899414
    5. '       ' → logprob: -17.130929946899414
    6. '   ' → logprob: -17.505929946899414
    7. '=int' → logprob: -17.630929946899414
    8. '        ' → logprob: -17.880929946899414
    9. ',' → logprob: -18.005929946899414
    10. '＝' → logprob: -18.380929946899414

Token 212: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04301563277840614
    2. ' self' → logprob: -3.168015718460083
    3. '       ' → logprob: -11.918015480041504
    4. '0' → logprob: -12.918015480041504
    5. '=self' → logprob: -13.168015480041504
    6. '_self' → logprob: -13.293015480041504
    7. '[self' → logprob: -13.543015480041504
    8. '	self' → logprob: -13.668015480041504
    9. '(self' → logprob: -14.418015480041504
    10. '$self' → logprob: -15.793015480041504

Token 213: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002814775798469782
    2. '.' → logprob: -8.37528133392334
    3. ' .' → logprob: -10.12528133392334
    4. '_initial' → logprob: -12.37528133392334
    5. '.initial' → logprob: -13.62528133392334
    6. '_' → logprob: -13.62528133392334
    7. '
' → logprob: -14.12528133392334
    8. '   ' → logprob: -14.50028133392334
    9. ' ' → logprob: -14.62528133392334
    10. '.
' → logprob: -14.62528133392334

Token 214: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0010201864643022418
    2. 'm' → logprob: -7.0010199546813965
    3. '.data' → logprob: -10.126020431518555
    4. '_data' → logprob: -11.001020431518555
    5. '_m' → logprob: -11.126020431518555
    6. 'initial' → logprob: -11.376020431518555
    7. '
' → logprob: -11.876020431518555
    8. ' data' → logprob: -12.501020431518555
    9. 'd' → logprob: -12.751020431518555
    10. '.' → logprob: -13.001020431518555

Token 215: '.initial' (ID: 58290)
  Prédit: '.initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -2.7014437364414334e-05
    2. '._' → logprob: -10.87502670288086
    3. ' .' → logprob: -12.87502670288086
    4. '.' → logprob: -13.12502670288086
    5. 'initial' → logprob: -13.12502670288086
    6. '.m' → logprob: -14.37502670288086
    7. '
' → logprob: -15.87502670288086
    8. '.original' → logprob: -16.00002670288086
    9. '.int' → logprob: -16.25002670288086
    10. '.Initial' → logprob: -16.62502670288086

Token 216: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.2113979209971149e-05
    2. '_' → logprob: -12.125012397766113
    3. ' _' → logprob: -12.750012397766113
    4. '```' → logprob: -13.625012397766113
    5. 's' → logprob: -13.750012397766113
    6. '_s' → logprob: -15.000012397766113
    7. ')_' → logprob: -15.625012397766113
    8. 'cars' → logprob: -15.750012397766113
    9. '_car' → logprob: -15.875012397766113
    10. '_cards' → logprob: -16.000011444091797

Token 217: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0003261679667048156
    2. '_' → logprob: -9.000326156616211
    3. 'cars' → logprob: -9.000326156616211
    4. 'ar' → logprob: -9.750326156616211
    5. '_c' → logprob: -12.875326156616211
    6. '   ' → logprob: -12.875326156616211
    7. '
' → logprob: -13.250326156616211
    8. 'a' → logprob: -13.375326156616211
    9. '```' → logprob: -13.375326156616211
    10. ' _' → logprob: -13.875326156616211

Token 218: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010764464735984802
    2. '<|end|>' → logprob: -5.2607645988464355
    3. '       ' → logprob: -5.5107645988464355
    4. '        
' → logprob: -7.8857645988464355
    5. '        ' → logprob: -8.510764122009277
    6. '+' → logprob: -9.010764122009277
    7. '```' → logprob: -9.135764122009277
    8. '<|end|>' → logprob: -9.135764122009277
    9. ' +' → logprob: -9.260764122009277
    10. ' 
' → logprob: -9.385764122009277

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.401802659034729
    2. '
' → logprob: -1.151802659034729
    3. ' for' → logprob: -4.6518025398254395
    4. 'for' → logprob: -6.1518025398254395
    5. '        
' → logprob: -6.1518025398254395
    6. ' 
' → logprob: -7.4018025398254395
    7. '' → logprob: -9.401803016662598
    8. '        ' → logprob: -9.651803016662598
    9. '
' → logprob: -9.651803016662598
    10. '  
' → logprob: -10.151803016662598

Token 220: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -9.758300438988954e-05
    2. ' max' → logprob: -9.250097274780273
    3. 'maximum' → logprob: -13.500097274780273
    4. '       ' → logprob: -16.750097274780273
    5. '
' → logprob: -18.000097274780273
    6. '_max' → logprob: -18.125097274780273
    7. '	max' → logprob: -18.750097274780273
    8. '   ' → logprob: -19.250097274780273
    9. '最大' → logprob: -20.000097274780273
    10. 'current' → logprob: -20.000097274780273

Token 221: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0015531904064118862
    2. '_' → logprob: -6.501553058624268
    3. '_car' → logprob: -11.001553535461426
    4. ' _' → logprob: -11.376553535461426
    5. '_in' → logprob: -12.001553535461426
    6. '```' → logprob: -12.376553535461426
    7. '_max' → logprob: -12.876553535461426
    8. '_space' → logprob: -13.251553535461426
    9. 'cars' → logprob: -13.376553535461426
    10. ' cars' → logprob: -13.751553535461426

Token 222: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.001235583913512528
    2. '_' → logprob: -7.501235485076904
    3. 'ar' → logprob: -8.001235961914062
    4. '_c' → logprob: -9.626235961914062
    5. '
' → logprob: -9.876235961914062
    6. '   ' → logprob: -10.126235961914062
    7. 'cars' → logprob: -10.126235961914062
    8. '_
' → logprob: -10.501235961914062
    9. '```' → logprob: -10.876235961914062
    10. ' _' → logprob: -11.001235961914062

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23387567698955536
    2. '=' → logprob: -1.6088756322860718
    3. '_in' → logprob: -4.983875751495361
    4. '_' → logprob: -6.608875751495361
    5. ' ' → logprob: -9.733875274658203
    6. '       ' → logprob: -9.858875274658203
    7. 'in' → logprob: -10.483875274658203
    8. '   ' → logprob: -10.733875274658203
    9. '        ' → logprob: -10.733875274658203
    10. ' in' → logprob: -11.358875274658203

Token 224: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.14380328357219696
    2. ' cars' → logprob: -2.018803358078003
    3. 'self' → logprob: -7.643803119659424
    4. 'car' → logprob: -8.018803596496582
    5. ' self' → logprob: -8.518803596496582
    6. '       ' → logprob: -9.143803596496582
    7. 'cards' → logprob: -12.768803596496582
    8. '   ' → logprob: -13.643803596496582
    9. '```' → logprob: -13.643803596496582
    10. '           ' → logprob: -13.893803596496582

Token 225: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0017451542662456632
    2. 'in' → logprob: -6.376745223999023
    3. 'int' → logprob: -11.376745223999023
    4. '   ' → logprob: -12.126745223999023
    5. 'In' → logprob: -12.376745223999023
    6. 'n' → logprob: -12.501745223999023
    7. '       ' → logprob: -13.001745223999023
    8. ' in' → logprob: -13.626745223999023
    9. '_' → logprob: -13.751745223999023
    10. '=' → logprob: -13.751745223999023

Token 226: '_t' (ID: 838)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5810350179672241
    2. '_t' → logprob: -0.8310350179672241
    3. 'cars' → logprob: -6.331035137176514
    4. ' tunnel' → logprob: -6.831035137176514
    5. 'tun' → logprob: -7.831035137176514
    6. 'in' → logprob: -7.831035137176514
    7. '_' → logprob: -7.956035137176514
    8. 'unnel' → logprob: -8.581034660339355
    9. ' ' → logprob: -9.456034660339355
    10. '_c' → logprob: -9.456034660339355

Token 227: 'unnel' (ID: 24757)
  Prédit: 'unnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unnel' → logprob: -0.016702113673090935
    2. 'un' → logprob: -5.016702175140381
    3. 'nel' → logprob: -5.016702175140381
    4. 'n' → logprob: -6.516702175140381
    5. 'el' → logprob: -6.891702175140381
    6. 'u' → logprob: -8.766701698303223
    7. '
' → logprob: -9.391701698303223
    8. 'a' → logprob: -9.516701698303223
    9. 'unn' → logprob: -9.766701698303223
    10. 'e' → logprob: -10.266701698303223

Token 228: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005941396811977029
    2. ' for' → logprob: -8.625594139099121
    3. ' 
' → logprob: -9.000594139099121
    4. '
' → logprob: -9.875594139099121
    5. '        
' → logprob: -9.875594139099121
    6. '       ' → logprob: -10.125594139099121
    7. '  
' → logprob: -10.250594139099121
    8. '\n' → logprob: -10.250594139099121
    9. 'for' → logprob: -10.375594139099121
    10. '    
' → logprob: -10.750594139099121

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07750923186540604
    2. ' for' → logprob: -3.0775091648101807
    3. '
' → logprob: -4.20250940322876
    4. 'for' → logprob: -4.32750940322876
    5. '        
' → logprob: -8.202508926391602
    6. '    
' → logprob: -11.452508926391602
    7. '' → logprob: -11.452508926391602
    8. '   ' → logprob: -11.577508926391602
    9. '\n' → logprob: -11.577508926391602
    10. ' 
' → logprob: -11.702508926391602

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.9361264946837764e-07
    2. '       ' → logprob: -16.625
    3. ' for' → logprob: -17.25
    4. '```' → logprob: -19.75
    5. '
' → logprob: -20.125
    6. '   ' → logprob: -21.5
    7. '        
' → logprob: -22.25
    8. '``' → logprob: -24.25
    9. '	for' → logprob: -24.5
    10. 'current' → logprob: -24.75

Token 231: ' i' (ID: 575)
  Prédit: ' entering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entering' → logprob: -0.2533699572086334
    2. 'enter' → logprob: -1.503369927406311
    3. 'interval' → logprob: -6.8783698081970215
    4. ' interval' → logprob: -8.50337028503418
    5. ' enter' → logprob: -9.12837028503418
    6. '(' → logprob: -10.62837028503418
    7. ' (' → logprob: -10.75337028503418
    8. 'entry' → logprob: -11.00337028503418
    9. 'Entering' → logprob: -11.12837028503418
    10. '   ' → logprob: -12.12837028503418

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23800168931484222
    2. ' in' → logprob: -1.7380017042160034
    3. 'in' → logprob: -3.863001585006714
    4. ' ,' → logprob: -4.613001823425293
    5. '_enter' → logprob: -6.363001823425293
    6. 'enter' → logprob: -6.738001823425293
    7. ' entering' → logprob: -7.238001823425293
    8. '_,' → logprob: -7.613001823425293
    9. ',(' → logprob: -8.113001823425293
    10. '       ' → logprob: -9.363001823425293

Token 233: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.570793867111206
    2. '(interval' → logprob: -1.320793867111206
    3. ' (' → logprob: -2.070793867111206
    4. '(entry' → logprob: -3.195793867111206
    5. '(le' → logprob: -8.695794105529785
    6. '(in' → logprob: -8.945794105529785
    7. '(event' → logprob: -9.070794105529785
    8. '(ent' → logprob: -9.195794105529785
    9. '(inter' → logprob: -9.320794105529785
    10. 'enter' → logprob: -10.070794105529785

Token 234: 'entered' (ID: 148198)
  Prédit: 'enter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.006749716121703386
    2. ' entering' → logprob: -5.006749629974365
    3. 'entered' → logprob: -11.631750106811523
    4. 'entr' → logprob: -12.006750106811523
    5. 'ent' → logprob: -12.006750106811523
    6. '_enter' → logprob: -12.631750106811523
    7. 'Entering' → logprob: -12.881750106811523
    8. ' enter' → logprob: -12.881750106811523
    9. '   ' → logprob: -13.381750106811523
    10. 'entry' → logprob: -13.756750106811523

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002043748099822551
    2. ' ,' → logprob: -8.500204086303711
    3. '‌,' → logprob: -16.00020408630371
    4. '_,' → logprob: -16.12520408630371
    5. 'le' → logprob: -16.50020408630371
    6. ' ' → logprob: -16.50020408630371
    7. ',
' → logprob: -16.62520408630371
    8. ' cars' → logprob: -16.75020408630371
    9. 's' → logprob: -17.00020408630371
    10. ',int' → logprob: -17.00020408630371

Token 236: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.12794440984725952
    2. 'left' → logprob: -2.5029444694519043
    3. 'le' → logprob: -3.3779444694519043
    4. ' le' → logprob: -5.877944469451904
    5. ' leaving' → logprob: -7.252944469451904
    6. 'ex' → logprob: -8.377943992614746
    7. ' exited' → logprob: -8.877943992614746
    8. '_left' → logprob: -10.127943992614746
    9. ' departed' → logprob: -10.377943992614746
    10. ' ' → logprob: -10.627943992614746

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008489366737194359
    2. ' )' → logprob: -7.125848770141602
    3. 'in' → logprob: -10.875848770141602
    4. ' in' → logprob: -11.250848770141602
    5. '_)' → logprob: -12.625848770141602
    6. ')
' → logprob: -13.125848770141602
    7. '）' → logprob: -13.250848770141602
    8. '   ' → logprob: -13.625848770141602
    9. '_in' → logprob: -13.625848770141602
    10. '_' → logprob: -14.750848770141602

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2896212637424469
    2. 'in' → logprob: -1.4146212339401245
    3. ')' → logprob: -4.789621353149414
    4. ' )' → logprob: -9.289621353149414
    5. ' ' → logprob: -11.664621353149414
    6. '_in' → logprob: -12.539621353149414
    7. '   ' → logprob: -12.914621353149414
    8. '	in' → logprob: -12.914621353149414
    9. '    ' → logprob: -13.289621353149414
    10. '）' → logprob: -13.289621353149414

Token 239: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.22777783870697021
    2. ' self' → logprob: -2.3527779579162598
    3. 'self' → logprob: -2.8527779579162598
    4. 'enumer' → logprob: -2.9777779579162598
    5. ')' → logprob: -13.852777481079102
    6. ' in' → logprob: -14.102777481079102
    7. '(self' → logprob: -14.727777481079102
    8. '[self' → logprob: -15.102777481079102
    9. '```' → logprob: -15.102777481079102
    10. '.enumer' → logprob: -15.352777481079102

Token 240: '(self' (ID: 2402)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07004491239786148
    2. 'self' → logprob: -2.695044994354248
    3. '(self' → logprob: -9.19504451751709
    4. ')' → logprob: -12.82004451751709
    5. '	self' → logprob: -13.69504451751709
    6. '       ' → logprob: -14.19504451751709
    7. '_self' → logprob: -14.44504451751709
    8. '   ' → logprob: -14.69504451751709
    9. ' in' → logprob: -15.19504451751709
    10. '[self' → logprob: -15.32004451751709

Token 241: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.787507714354433e-05
    2. '.' → logprob: -10.62504768371582
    3. ' .' → logprob: -11.75004768371582
    4. '
' → logprob: -12.12504768371582
    5. ')._' → logprob: -13.12504768371582
    6. '.
' → logprob: -13.50004768371582
    7. ']._' → logprob: -13.50004768371582
    8. '_.' → logprob: -13.50004768371582
    9. '_data' → logprob: -14.50004768371582
    10. '   ' → logprob: -14.50004768371582

Token 242: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6937251687049866
    2. 'interval' → logprob: -0.6937251687049866
    3. '_data' → logprob: -7.693725109100342
    4. '_interval' → logprob: -9.3187255859375
    5. '.data' → logprob: -11.9437255859375
    6. '.interval' → logprob: -12.5687255859375
    7. '
' → logprob: -13.1312255859375
    8. ' data' → logprob: -13.1937255859375
    9. 'inter' → logprob: -13.2562255859375
    10. '(interval' → logprob: -13.3187255859375

Token 243: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.002318557118996978
    2. '._' → logprob: -6.252318382263184
    3. ' .' → logprob: -8.502318382263184
    4. '.interval' → logprob: -9.252318382263184
    5. '.' → logprob: -9.752318382263184
    6. 'interval' → logprob: -10.502318382263184
    7. '_inter' → logprob: -13.127318382263184
    8. '   ' → logprob: -13.502318382263184
    9. '.period' → logprob: -15.002318382263184
    10. 'inter' → logprob: -15.002318382263184

Token 244: 'vals' (ID: 44567)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.011728815734386444
    2. 'erval' → logprob: -4.761728763580322
    3. 'vals' → logprob: -6.511728763580322
    4. 'al' → logprob: -6.886728763580322
    5. 'interval' → logprob: -7.886728763580322
    6. '_val' → logprob: -9.63672924041748
    7. '_interval' → logprob: -10.13672924041748
    8. 'var' → logprob: -11.01172924041748
    9. 'erv' → logprob: -11.13672924041748
    10. '   ' → logprob: -11.26172924041748

Token 245: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043318986892700195
    2. '):
' → logprob: -3.1683189868927
    3. ' ):' → logprob: -8.918318748474121
    4. '       ' → logprob: -8.918318748474121
    5. ':' → logprob: -10.168318748474121
    6. '):
' → logprob: -11.918318748474121
    7. ' ):
' → logprob: -12.793318748474121
    8. '   ' → logprob: -13.293318748474121
    9. '):

' → logprob: -14.168318748474121
    10. '           ' → logprob: -14.668318748474121

Token 246: ' ' (ID: 220)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04175327718257904
    2. '):
' → logprob: -4.04175329208374
    3. 'start' → logprob: -5.04175329208374
    4. '1' → logprob: -5.41675329208374
    5. ' ):' → logprob: -5.41675329208374
    6. '0' → logprob: -5.54175329208374
    7. ' start' → logprob: -6.54175329208374
    8. '       ' → logprob: -6.91675329208374
    9. ' ' → logprob: -7.66675329208374
    10. '   ' → logprob: -7.91675329208374

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005989231634885073
    2. 'start' → logprob: -5.505989074707031
    3. '0' → logprob: -6.505989074707031
    4. '):' → logprob: -8.505989074707031
    5. ' ' → logprob: -8.880989074707031
    6. ')' → logprob: -10.380989074707031
    7. '):
' → logprob: -10.630989074707031
    8. ' start' → logprob: -11.880989074707031
    9. 'i' → logprob: -12.255989074707031
    10. '   ' → logprob: -13.005989074707031

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048982229083776474
    2. '):
' → logprob: -3.0489821434020996
    3. ':' → logprob: -8.048982620239258
    4. '       ' → logprob: -10.173982620239258
    5. ' ):' → logprob: -10.673982620239258
    6. '):
' → logprob: -11.548982620239258
    7. ' ):
' → logprob: -13.548982620239258
    8. ')' → logprob: -14.048982620239258
    9. '):

' → logprob: -14.298982620239258
    10. '   ' → logprob: -14.423982620239258

Token 249: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7040505409240723
    2. '        
' → logprob: -1.4540505409240723
    3. '           ' → logprob: -2.5790505409240723
    4. 'cars' → logprob: -2.5790505409240723
    5. '            
' → logprob: -2.7040505409240723
    6. ' cars' → logprob: -3.8290505409240723
    7. '
' → logprob: -4.329050540924072
    8. '        ' → logprob: -5.079050540924072
    9. '<|end|>' → logprob: -5.829050540924072
    10. '       
' → logprob: -6.454050540924072

Token 250: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' (adapté à ' cars') → logprob: -0.1206941157579422
    2. ' cars' → logprob: -2.245694160461426
    3. '       ' → logprob: -4.995694160461426
    4. '           ' → logprob: -7.745694160461426
    5. '   ' → logprob: -7.995694160461426
    6. 'car' → logprob: -9.370694160461426
    7. '
' → logprob: -9.370694160461426
    8. '        ' → logprob: -10.870694160461426
    9. ' ' → logprob: -10.995694160461426
    10. 'left' → logprob: -11.495694160461426

Token 251: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.00022034443099983037
    2. ' +=' → logprob: -9.87522029876709
    3. '_' → logprob: -10.00022029876709
    4. 'in' → logprob: -10.37522029876709
    5. '+=' → logprob: -10.62522029876709
    6. '=' → logprob: -10.87522029876709
    7. ' =' → logprob: -11.25022029876709
    8. '   ' → logprob: -11.62522029876709
    9. '           ' → logprob: -11.75022029876709
    10. 'In' → logprob: -12.50022029876709

Token 252: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.013184941373765469
    2. 't' → logprob: -4.388185024261475
    3. 'in' → logprob: -8.138184547424316
    4. '_' → logprob: -8.763184547424316
    5. '_in' → logprob: -9.138184547424316
    6. ' tunnel' → logprob: -10.013184547424316
    7. '=' → logprob: -10.763184547424316
    8. '
' → logprob: -11.513184547424316
    9. 'tun' → logprob: -11.638184547424316
    10. '   ' → logprob: -12.638184547424316

Token 253: 'unnel' (ID: 24757)
  Prédit: 'unnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unnel' → logprob: -0.022623445838689804
    2. 'un' → logprob: -4.647623538970947
    3. 'nel' → logprob: -4.647623538970947
    4. 'n' → logprob: -6.647623538970947
    5. 'el' → logprob: -7.272623538970947
    6. 'annel' → logprob: -8.522623062133789
    7. 'u' → logprob: -9.147623062133789
    8. 't' → logprob: -9.522623062133789
    9. '__' → logprob: -9.647623062133789
    10. '```' → logprob: -10.147623062133789

Token 254: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006173367146402597
    2. ' +=' → logprob: -5.256173133850098
    3. '=' → logprob: -7.006173133850098
    4. '-=' → logprob: -10.381173133850098
    5. '+=(' → logprob: -14.131173133850098
    6. ' =' → logprob: -14.256173133850098
    7. ' -=' → logprob: -15.256173133850098
    8. '+' → logprob: -16.381174087524414
    9. ']+=' → logprob: -17.506174087524414
    10. '+='' → logprob: -18.006174087524414

Token 255: ' entered' (ID: 18375)
  Prédit: 'entered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -0.0022027131635695696
    2. ' entered' → logprob: -6.12720251083374
    3. 'enter' → logprob: -11.002202987670898
    4. 'ent' → logprob: -15.127202987670898
    5. '-enter' → logprob: -16.2522029876709
    6. 'entr' → logprob: -16.3772029876709
    7. '_enter' → logprob: -16.3772029876709
    8. '           ' → logprob: -16.7522029876709
    9. '   ' → logprob: -16.8772029876709
    10. 'Entered' → logprob: -16.8772029876709

Token 256: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740922451019287
    2. ' -' → logprob: -0.9740922451019287
    3. '           ' → logprob: -12.099092483520508
    4. ' ' → logprob: -12.849092483520508
    5. '
' → logprob: -13.099092483520508
    6. '-le' → logprob: -13.099092483520508
    7. ' ' → logprob: -13.349092483520508
    8. '-
' → logprob: -14.849092483520508
    9. '-left' → logprob: -15.224092483520508
    10. '   ' → logprob: -16.099092483520508

Token 257: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.048597704619169235
    2. ' left' → logprob: -3.048597812652588
    3. 'le' → logprob: -11.67359733581543
    4. ' lef' → logprob: -14.29859733581543
    5. 'leave' → logprob: -14.67359733581543
    6. '	left' → logprob: -14.92359733581543
    7. '           ' → logprob: -16.42359733581543
    8. ' ' → logprob: -16.67359733581543
    9. ' le' → logprob: -17.17359733581543
    10. '   ' → logprob: -17.17359733581543

Token 258: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18044085800647736
    2. '
' → logprob: -1.805440902709961
    3. '            
' → logprob: -8.805440902709961
    4. '  
' → logprob: -9.180440902709961
    5. ' if' → logprob: -9.305440902709961
    6. ' 
' → logprob: -9.430440902709961
    7. '<|end|>' → logprob: -9.680440902709961
    8. 'if' → logprob: -9.805440902709961
    9. '
' → logprob: -9.930440902709961
    10. '       ' → logprob: -10.180440902709961

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12909670174121857
    2. '
' → logprob: -2.129096746444702
    3. ' if' → logprob: -6.504096508026123
    4. '       ' → logprob: -8.754096984863281
    5. '            
' → logprob: -9.004096984863281
    6. 'if' → logprob: -9.254096984863281
    7. ' 
' → logprob: -9.379096984863281
    8. '
' → logprob: -9.379096984863281
    9. ',' → logprob: -10.379096984863281
    10. '  
' → logprob: -10.504096984863281

Token 260: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13234665989875793
    2. 'max' → logprob: -2.1323466300964355
    3. ' if' → logprob: -5.5073466300964355
    4. '           ' → logprob: -6.7573466300964355
    5. ' max' → logprob: -8.632347106933594
    6. '       ' → logprob: -12.632347106933594
    7. '
' → logprob: -13.882347106933594
    8. '   ' → logprob: -14.132347106933594
    9. '               ' → logprob: -14.132347106933594
    10. ' ' → logprob: -15.257347106933594

Token 261: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.42892393469810486
    2. ' cars' → logprob: -1.0539239645004272
    3. 'max' → logprob: -8.678923606872559
    4. ' max' → logprob: -10.553923606872559
    5. 'car' → logprob: -11.178923606872559
    6. ' ' → logprob: -12.678923606872559
    7. '           ' → logprob: -13.053923606872559
    8. 'c' → logprob: -13.678923606872559
    9. '   ' → logprob: -14.053923606872559
    10. 'self' → logprob: -14.303923606872559

Token 262: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -7.822646693966817e-06
    2. 'in' → logprob: -13.625007629394531
    3. '           ' → logprob: -13.875007629394531
    4. '_' → logprob: -14.125007629394531
    5. '>' → logprob: -14.500007629394531
    6. '_i' → logprob: -14.875007629394531
    7. '_to' → logprob: -15.062507629394531
    8. ' in' → logprob: -15.312507629394531
    9. 'In' → logprob: -15.312507629394531
    10. '   ' → logprob: -15.500007629394531

Token 263: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.004876504186540842
    2. 't' → logprob: -5.504876613616943
    3. ' tunnel' → logprob: -8.504876136779785
    4. 'unnel' → logprob: -8.629876136779785
    5. 'tun' → logprob: -8.629876136779785
    6. 'Tunnel' → logprob: -10.004876136779785
    7. '_' → logprob: -10.504876136779785
    8. '>' → logprob: -10.629876136779785
    9. '
' → logprob: -11.192376136779785
    10. 'in' → logprob: -11.379876136779785

Token 264: 'unnel' (ID: 24757)
  Prédit: 'unnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unnel' → logprob: -0.002203666837885976
    2. 'un' → logprob: -6.502203464508057
    3. '>' → logprob: -9.252203941345215
    4. 'n' → logprob: -9.502203941345215
    5. '
' → logprob: -9.877203941345215
    6. 'u' → logprob: -10.002203941345215
    7. 'nel' → logprob: -10.002203941345215
    8. 'r' → logprob: -10.127203941345215
    9. 'o' → logprob: -10.377203941345215
    10. 'ar' → logprob: -10.502203941345215

Token 265: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18413372337818146
    2. ' >' → logprob: -1.809133768081665
    3. '<' → logprob: -5.684133529663086
    4. ' <' → logprob: -6.934133529663086
    5. ' ' → logprob: -12.684133529663086
    6. 'max' → logprob: -14.559133529663086
    7. '><' → logprob: -15.184133529663086
    8. '>
' → logprob: -15.309133529663086
    9. '   ' → logprob: -15.809133529663086
    10. ' >
' → logprob: -15.809133529663086

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026419671485200524
    2. ' ' → logprob: -8.250264167785645
    3. '=' → logprob: -13.750264167785645
    4. '   ' → logprob: -14.125264167785645
    5. '           ' → logprob: -14.750264167785645
    6. '       ' → logprob: -15.000264167785645
    7. '```' → logprob: -16.68776512145996
    8. '         ' → logprob: -17.31276512145996
    9. '  ' → logprob: -17.56276512145996
    10. '۰' → logprob: -17.68776512145996

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.250036239624023
    3. '=' → logprob: -14.125036239624023
    4. '   ' → logprob: -15.500036239624023
    5. '1' → logprob: -16.562536239624023
    6. 'zero' → logprob: -17.000036239624023
    7. '۰' → logprob: -17.187536239624023
    8. '       ' → logprob: -17.187536239624023
    9. '```' → logprob: -17.312536239624023
    10. '           ' → logprob: -17.625036239624023

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2504972815513611
    2. ':
' → logprob: -1.6254973411560059
    3. '           ' → logprob: -4.250497341156006
    4. '               ' → logprob: -4.625497341156006
    5. ' or' → logprob: -8.000496864318848
    6. ' :
' → logprob: -8.750496864318848
    7. ',' → logprob: -9.750496864318848
    8. ' :' → logprob: -9.750496864318848
    9. ':return' → logprob: -10.250496864318848
    10. '):
' → logprob: -10.875496864318848

Token 269: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0434722900390625
    2. ' raise' → logprob: -3.4184722900390625
    3. 'raise' → logprob: -5.1684722900390625
    4. '           ' → logprob: -5.6684722900390625
    5. ' return' → logprob: -8.293472290039062
    6. 'return' → logprob: -8.418472290039062
    7. ' cars' → logprob: -9.168472290039062
    8. 'cars' → logprob: -10.793472290039062
    9. '                ' → logprob: -11.918472290039062
    10. '                
' → logprob: -12.168472290039062

Token 270: ' return' (ID: 622)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.521000325679779
    2. ' raise' → logprob: -1.1460003852844238
    3. 'cars' → logprob: -3.271000385284424
    4. '               ' → logprob: -3.396000385284424
    5. 'return' (adapté à ' return') → logprob: -4.396000385284424
    6. '           ' → logprob: -6.646000385284424
    7. ' cars' → logprob: -6.771000385284424
    8. 'break' → logprob: -7.146000385284424
    9. ' return' → logprob: -7.896000385284424
    10. '```' → logprob: -8.145999908447266

Token 271: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18431170284748077
    2. '0' → logprob: -1.9343117475509644
    3. '-i' → logprob: -4.184311866760254
    4. 'None' → logprob: -5.809311866760254
    5. 'i' → logprob: -6.059311866760254
    6. '"' → logprob: -6.559311866760254
    7. ' -' → logprob: -7.684311866760254
    8. '-value' → logprob: -8.309311866760254
    9. ' ' → logprob: -8.559311866760254
    10. '-s' → logprob: -8.934311866760254

Token 272: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04508848860859871
    2. '0' → logprob: -4.170088291168213
    3. 'None' → logprob: -4.420088291168213
    4. '-i' → logprob: -4.420088291168213
    5. '"' → logprob: -6.420088291168213
    6. 'i' → logprob: -6.670088291168213
    7. ' -' → logprob: -7.670088291168213
    8. '-value' → logprob: -8.545088768005371
    9. '-f' → logprob: -8.795088768005371
    10. ' ' → logprob: -9.045088768005371

Token 273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009224241599440575
    2. '
' → logprob: -4.8842244148254395
    3. '            
' → logprob: -7.0092244148254395
    4. '<|end|>' → logprob: -7.6342244148254395
    5. ' 
' → logprob: -9.759223937988281
    6. ',' → logprob: -9.884223937988281
    7. '          ' → logprob: -11.259223937988281
    8. '            ' → logprob: -11.259223937988281
    9. '       ' → logprob: -11.259223937988281
    10. '.' → logprob: -11.509223937988281

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023986559361219406
    2. '
' → logprob: -3.773986577987671
    3. '            
' → logprob: -7.648986339569092
    4. '<|end|>' → logprob: -9.64898681640625
    5. '       ' → logprob: -10.27398681640625
    6. ' 
' → logprob: -10.27398681640625
    7. '        
' → logprob: -10.52398681640625
    8. ',' → logprob: -11.14898681640625
    9. '    
' → logprob: -11.64898681640625
    10. '          ' → logprob: -11.64898681640625

Token 275: ' max' (ID: 2999)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7029862999916077
    2. '           ' → logprob: -0.9529862999916077
    3. 'if' → logprob: -2.577986240386963
    4. 'max' (adapté à ' max') → logprob: -3.827986240386963
    5. '       ' → logprob: -4.452986240386963
    6. ' max' → logprob: -4.702986240386963
    7. '
' → logprob: -7.452986240386963
    8. '            
' → logprob: -8.952986717224121
    9. '   ' → logprob: -9.452986717224121
    10. ',' → logprob: -11.327986717224121

Token 276: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.412610233994201e-05
    2. '_' → logprob: -9.375094413757324
    3. ' =' → logprob: -12.750094413757324
    4. '=' → logprob: -13.000094413757324
    5. ' _' → logprob: -13.750094413757324
    6. '_car' → logprob: -13.875094413757324
    7. 'cars' → logprob: -14.250094413757324
    8. '=_' → logprob: -14.625094413757324
    9. '=max' → logprob: -15.125094413757324
    10. ' cars' → logprob: -16.000093460083008

Token 277: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.003899107687175274
    2. 'cars' → logprob: -6.128899097442627
    3. 'ar' → logprob: -6.378899097442627
    4. '_c' → logprob: -12.378899574279785
    5. ' cars' → logprob: -13.003899574279785
    6. '   ' → logprob: -13.878899574279785
    7. '_' → logprob: -14.128899574279785
    8. 's' → logprob: -14.253899574279785
    9. 'a' → logprob: -14.378899574279785
    10. 'rs' → logprob: -14.378899574279785

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004082078114151955
    2. '=' → logprob: -5.504082202911377
    3. '=max' → logprob: -12.629081726074219
    4. 'max' → logprob: -15.379081726074219
    5. ' max' → logprob: -16.00408172607422
    6. '＝' → logprob: -19.12908172607422
    7. '   ' → logprob: -19.37908172607422
    8. ' ' → logprob: -19.62908172607422
    9. '           ' → logprob: -19.87908172607422
    10. ',max' → logprob: -20.12908172607422

Token 279: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.02324652671813965
    2. 'max' → logprob: -3.7732465267181396
    3. ' cars' → logprob: -13.898246765136719
    4. '	max' → logprob: -16.52324676513672
    5. 'cars' → logprob: -17.14824676513672
    6. '           ' → logprob: -18.02324676513672
    7. '(max' → logprob: -18.02324676513672
    8. '_max' → logprob: -18.27324676513672
    9. ',max' → logprob: -19.02324676513672
    10. '.max' → logprob: -19.02324676513672

Token 280: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0002790935104712844
    2. '(' → logprob: -8.250279426574707
    3. '(c' → logprob: -11.500279426574707
    4. 'max' → logprob: -11.875279426574707
    5. ',max' → logprob: -15.500279426574707
    6. ' (' → logprob: -15.875279426574707
    7. '(car' → logprob: -16.00027847290039
    8. ' max' → logprob: -16.00027847290039
    9. '(
' → logprob: -16.50027847290039
    10. 'cars' → logprob: -18.12527847290039

Token 281: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.981667537620524e-06
    2. '_car' → logprob: -14.625001907348633
    3. '(max' → logprob: -14.625001907348633
    4. 'max' → logprob: -14.875001907348633
    5. 'cars' → logprob: -16.000001907348633
    6. '_' → logprob: -16.375001907348633
    7. '_max' → logprob: -16.500001907348633
    8. ')' → logprob: -16.875001907348633
    9. '           ' → logprob: -17.125001907348633
    10. 's' → logprob: -17.375001907348633

Token 282: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.00167161098215729
    2. 'ar' → logprob: -6.50167179107666
    3. 'cars' → logprob: -9.75167179107666
    4. '_' → logprob: -10.12667179107666
    5. '_c' → logprob: -10.37667179107666
    6. '   ' → logprob: -12.37667179107666
    7. 'rs' → logprob: -12.62667179107666
    8. '[' → logprob: -12.81417179107666
    9. 'max' → logprob: -12.93917179107666
    10. '
' → logprob: -13.43917179107666

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -13.125003814697266
    3. ',c' → logprob: -13.250003814697266
    4. 'cars' → logprob: -15.375003814697266
    5. ' cars' → logprob: -16.375003814697266
    6. ',
' → logprob: -17.625003814697266
    7. 'c' → logprob: -17.625003814697266
    8. 's' → logprob: -18.125003814697266
    9. 'car' → logprob: -18.625003814697266
    10. '‌,' → logprob: -20.375003814697266

Token 284: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.3868843913078308
    2. ' cars' → logprob: -1.1368844509124756
    3. 'car' → logprob: -11.386884689331055
    4. '   ' → logprob: -14.886884689331055
    5. ' ' → logprob: -15.261884689331055
    6. '           ' → logprob: -15.386884689331055
    7. '       ' → logprob: -15.636884689331055
    8. 'cats' → logprob: -15.636884689331055
    9. ')' → logprob: -16.011884689331055
    10. 'cards' → logprob: -16.136884689331055

Token 285: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0002398938377154991
    2. 'in' → logprob: -8.500240325927734
    3. 's' → logprob: -10.750240325927734
    4. '_' → logprob: -12.750240325927734
    5. '           ' → logprob: -13.500240325927734
    6. ' in' → logprob: -13.625240325927734
    7. 'n' → logprob: -13.625240325927734
    8. 'int' → logprob: -14.000240325927734
    9. ')' → logprob: -14.125240325927734
    10. '   ' → logprob: -14.125240325927734

Token 286: '_t' (ID: 838)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07047618180513382
    2. '_t' → logprob: -2.6954762935638428
    3. 'unnel' → logprob: -8.320476531982422
    4. 'tun' → logprob: -8.570476531982422
    5. ' tunnel' → logprob: -10.320476531982422
    6. '
' → logprob: -11.695476531982422
    7. 'Tunnel' → logprob: -11.820476531982422
    8. '_' → logprob: -11.945476531982422
    9. '   ' → logprob: -12.195476531982422
    10. 'tain' → logprob: -12.820476531982422

Token 287: 'unnel' (ID: 24757)
  Prédit: 'unnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unnel' → logprob: -0.02644798904657364
    2. 'nel' → logprob: -4.151447772979736
    3. 'un' → logprob: -4.901447772979736
    4. 'el' → logprob: -6.026447772979736
    5. 'on' → logprob: -8.901448249816895
    6. 'n' → logprob: -9.401448249816895
    7. 'annel' → logprob: -10.151448249816895
    8. '
' → logprob: -10.401448249816895
    9. 'anel' → logprob: -10.776448249816895
    10. 'unn' → logprob: -11.026448249816895

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018594572320580482
    2. ')
' → logprob: -4.018594741821289
    3. '       ' → logprob: -7.768594741821289
    4. ')

' → logprob: -10.893594741821289
    5. ')return' → logprob: -13.518594741821289
    6. ')
' → logprob: -13.893594741821289
    7. ' )' → logprob: -14.518594741821289
    8. ')\
' → logprob: -17.14359474182129
    9. '
' → logprob: -17.26859474182129
    10. ' )
' → logprob: -17.26859474182129

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003343594027683139
    2. '
' → logprob: -6.00334358215332
    3. '<|end|>' → logprob: -8.25334358215332
    4. ' return' → logprob: -8.50334358215332
    5. 'return' → logprob: -8.87834358215332
    6. '        
' → logprob: -8.87834358215332
    7. '   ' → logprob: -10.50334358215332
    8. '	' → logprob: -11.00334358215332
    9. ',' → logprob: -11.12834358215332
    10. '	return' → logprob: -11.75334358215332

Token 290: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005018008523620665
    2. 'return' (adapté à ' return') → logprob: -8.25050163269043
    3. ' return' → logprob: -9.00050163269043
    4. '   ' → logprob: -9.87550163269043
    5. '<|end|>' → logprob: -10.25050163269043
    6. '	' → logprob: -11.50050163269043
    7. '	return' → logprob: -11.50050163269043
    8. '
' → logprob: -12.00050163269043
    9. '           ' → logprob: -14.00050163269043
    10. '        
' → logprob: -14.25050163269043

Token 291: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5759394764900208
    2. 'max' → logprob: -0.8259394764900208
    3. '	max' → logprob: -17.825939178466797
    4. '_max' → logprob: -18.450939178466797
    5. '(max' → logprob: -18.575939178466797
    6. '[max' → logprob: -20.450939178466797
    7. ',max' → logprob: -20.825939178466797
    8. ' ' → logprob: -20.950939178466797
    9. ' ' → logprob: -21.075939178466797
    10. '=max' → logprob: -21.700939178466797

Token 292: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.842555426876061e-06
    2. '_max' → logprob: -13.250004768371582
    3. '_car' → logprob: -13.375004768371582
    4. 'max' → logprob: -14.000004768371582
    5. '_' → logprob: -15.250004768371582
    6. '\' → logprob: -16.3750057220459
    7. ' _' → logprob: -17.0000057220459
    8. '(_' → logprob: -17.3750057220459
    9. '(max' → logprob: -17.5000057220459
    10. '._' → logprob: -17.6250057220459

Token 293: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0001596771035110578
    2. 'ar' → logprob: -9.00015926361084
    3. '_' → logprob: -10.50015926361084
    4. 'cars' → logprob: -12.25015926361084
    5. '_c' → logprob: -13.87515926361084
    6. '[' → logprob: -14.75015926361084
    7. 'a' → logprob: -15.00015926361084
    8. '
' → logprob: -15.50015926361084
    9. '```' → logprob: -15.62515926361084
    10. '__' → logprob: -15.62515926361084

Token 294: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42806288599967957
    2. 'def' → logprob: -1.428062915802002
    3. 't' → logprob: -3.178062915802002
    4. '```' → logprob: -3.553062915802002
    5. 'if' → logprob: -4.178062915802002
    6. 'n' → logprob: -4.178062915802002
    7. 'import' → logprob: -6.303062915802002
    8. '
' → logprob: -6.428062915802002
    9. '<|end|>' → logprob: -6.553062915802002
    10. 'a' → logprob: -7.803062915802002

Token 296: ' Tunnel' (ID: 105803)
  Prédit: 'Traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -0.9545422196388245
    2. ' Traffic' → logprob: -1.0795421600341797
    3. ' Tunnel' → logprob: -2.7045421600341797
    4. 'Tunnel' → logprob: -3.0795421600341797
    5. 'Solution' → logprob: -3.4545421600341797
    6. ' Solution' → logprob: -3.4545421600341797
    7. 'Vehicle' → logprob: -3.4545421600341797
    8. 'Car' → logprob: -4.45454216003418
    9. ' Vehicle' → logprob: -4.70454216003418
    10. 'Main' → logprob: -4.95454216003418

Token 297: 'Traffic' (ID: 79386)
  Prédit: 'Traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -0.48031550645828247
    2. ':
' → logprob: -2.9803154468536377
    3. 'Monitor' → logprob: -2.9803154468536377
    4. 'Capacity' → logprob: -2.9803154468536377
    5. 'Validator' → logprob: -3.7303154468536377
    6. 'Controller' → logprob: -4.105315685272217
    7. 'Data' → logprob: -4.230315685272217
    8. 'Length' → logprob: -4.230315685272217
    9. 'Status' → logprob: -4.355315685272217
    10. 'Entry' → logprob: -4.480315685272217

Token 298: 'Processor' (ID: 22334)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.40351760387420654
    2. 'Analyzer' → logprob: -2.528517723083496
    3. 'Simulator' → logprob: -2.528517723083496
    4. 'Monitor' → logprob: -3.153517723083496
    5. 'Report' → logprob: -3.653517723083496
    6. 'Validator' → logprob: -4.278517723083496
    7. 'Manager' → logprob: -4.528517723083496
    8. 'Status' → logprob: -5.028517723083496
    9. 'Simulation' → logprob: -5.028517723083496
    10. 'Summary' → logprob: -5.153517723083496

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048613931983709335
    2. ':
' → logprob: -3.048614025115967
    3. ':

' → logprob: -11.298613548278809
    4. '(T' → logprob: -11.923613548278809
    5. ':T' → logprob: -13.548613548278809
    6. ':def' → logprob: -13.548613548278809
    7. '(' → logprob: -13.798613548278809
    8. '<T' → logprob: -14.173613548278809
    9. '(object' → logprob: -14.548613548278809
    10. '<|end|>' → logprob: -14.548613548278809

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14807935059070587
    2. ' def' → logprob: -2.0230793952941895
    3. 'def' → logprob: -6.0230793952941895
    4. ':
' → logprob: -6.2730793952941895
    5. ':' → logprob: -7.0230793952941895
    6. '	def' → logprob: -10.023078918457031
    7. ':def' → logprob: -10.523078918457031
    8. 'class' → logprob: -10.773078918457031
    9. '    ' → logprob: -10.773078918457031
    10. '<|end|>' → logprob: -11.398078918457031

Token 301: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3141177296638489
    2. ' def' → logprob: -1.314117670059204
    3. '   ' → logprob: -7.064117908477783
    4. 'class' → logprob: -15.439117431640625
    5. '	def' → logprob: -16.314117431640625
    6. '  ' → logprob: -17.189117431640625
    7. ' ' → logprob: -17.439117431640625
    8. '__' → logprob: -17.939117431640625
    9. '    ' → logprob: -17.939117431640625
    10. ':def' → logprob: -18.314117431640625

Token 302: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.022294845432043076
    2. '__' → logprob: -3.897294759750366
    3. '_init' → logprob: -7.022294998168945
    4. 'init' → logprob: -8.522294998168945
    5. 'def' → logprob: -8.647294998168945
    6. ' _' → logprob: -8.772294998168945
    7. ' init' → logprob: -8.772294998168945
    8. '___' → logprob: -9.647294998168945
    9. ' def' → logprob: -10.022294998168945
    10. '_' → logprob: -10.147294998168945

Token 303: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.0219828002154827e-05
    2. 'def' → logprob: -11.125020027160645
    3. '   ' → logprob: -12.750020027160645
    4. 'it' → logprob: -13.625020027160645
    5. ' init' → logprob: -14.500020027160645
    6. 'iter' → logprob: -15.500020027160645
    7. '(init' → logprob: -15.625020027160645
    8. 'class' → logprob: -15.750020027160645
    9. '_init' → logprob: -16.37502098083496
    10. '	init' → logprob: -16.75002098083496

Token 304: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00028851060778833926
    2. '(self' → logprob: -8.625288963317871
    3. '__' → logprob: -9.250288963317871
    4. '_(' → logprob: -11.875288963317871
    5. '__(
' → logprob: -12.125288963317871
    6. '(' → logprob: -16.000288009643555
    7. ' (' → logprob: -16.500288009643555
    8. '___' → logprob: -16.500288009643555
    9. 'self' → logprob: -16.750288009643555
    10. '__((' → logprob: -16.875288009643555

Token 305: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3306015716807451e-05
    2. ' self' → logprob: -11.75001335144043
    3. '):
' → logprob: -13.00001335144043
    4. ')' → logprob: -13.75001335144043
    5. '
' → logprob: -14.12501335144043
    6. '       ' → logprob: -14.25001335144043
    7. '   ' → logprob: -15.00001335144043
    8. '(self' → logprob: -15.62501335144043
    9. 't' → logprob: -16.87501335144043
    10. ')
' → logprob: -17.37501335144043

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02133350633084774
    2. 'self' → logprob: -3.8963334560394287
    3. '       ' → logprob: -7.896333694458008
    4. ' ,' → logprob: -8.396333694458008
    5. '   ' → logprob: -8.896333694458008
    6. ',self' → logprob: -10.896333694458008
    7. ' self' → logprob: -11.146333694458008
    8. '
' → logprob: -12.021333694458008
    9. '):
' → logprob: -12.271333694458008
    10. '(self' → logprob: -12.771333694458008

Token 307: ' input' (ID: 3422)
  Prédit: 'traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'traffic' → logprob: -0.35837218165397644
    2. ' traffic' → logprob: -2.358372211456299
    3. 'initial' → logprob: -3.358372211456299
    4. 'input' → logprob: -3.483372211456299
    5. 't' → logprob: -3.733372211456299
    6. '):
' → logprob: -3.858372211456299
    7. 'n' → logprob: -4.233372211456299
    8. '):' → logprob: -4.483372211456299
    9. 'data' → logprob: -4.483372211456299
    10. ' initial' → logprob: -4.608372211456299

Token 308: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.5696932077407837
    2. '_lines' → logprob: -0.9446932077407837
    3. '_source' → logprob: -3.694693088531494
    4. '_stream' → logprob: -4.944693088531494
    5. '_path' → logprob: -5.319693088531494
    6. '_text' → logprob: -6.194693088531494
    7. '_reader' → logprob: -6.694693088531494
    8. '_file' → logprob: -6.694693088531494
    9. '_list' → logprob: -7.069693088531494
    10. '):' → logprob: -7.319693088531494

Token 309: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3725750148296356
    2. ':' → logprob: -1.372575044631958
    3. '):
' → logprob: -2.872575044631958
    4. ')' → logprob: -7.497574806213379
    5. '   ' → logprob: -8.372574806213379
    6. ' ):' → logprob: -9.622574806213379
    7. '       ' → logprob: -9.622574806213379
    8. ':list' → logprob: -10.247574806213379
    9. '=None' → logprob: -10.747574806213379
    10. '):
' → logprob: -10.747574806213379

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010580805974313989
    2. ' self' → logprob: -9.875105857849121
    3. 'self' → logprob: -10.250105857849121
    4. '   ' → logprob: -11.500105857849121
    5. '      ' → logprob: -12.875105857849121
    6. ',' → logprob: -13.625105857849121
    7. ':' → logprob: -13.875105857849121
    8. 'n' → logprob: -14.625105857849121
    9. '<|end|>' → logprob: -14.750105857849121
    10. '     ' → logprob: -15.125105857849121

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005999894347041845
    2. ' self' → logprob: -5.50600004196167
    3. '       ' → logprob: -6.25600004196167
    4. '   ' → logprob: -14.630999565124512
    5. '	self' → logprob: -15.630999565124512
    6. 'from' → logprob: -17.506000518798828
    7. 'class' → logprob: -17.756000518798828
    8. 'def' → logprob: -18.131000518798828
    9. 'lines' → logprob: -18.131000518798828
    10. '
' → logprob: -18.756000518798828

Token 312: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006975255440920591
    2. '.input' → logprob: -5.256975173950195
    3. '.' → logprob: -6.381975173950195
    4. '_input' → logprob: -10.631975173950195
    5. ' .' → logprob: -11.381975173950195
    6. 'input' → logprob: -13.256975173950195
    7. '   ' → logprob: -13.256975173950195
    8. '.INPUT' → logprob: -13.506975173950195
    9. '.lines' → logprob: -13.881975173950195
    10. '.data' → logprob: -14.006975173950195

Token 313: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0018341571558266878
    2. 'lines' → logprob: -6.376834392547607
    3. 'data' → logprob: -9.12683391571045
    4. '_input' → logprob: -11.87683391571045
    5. 'inputs' → logprob: -12.12683391571045
    6. ' input' → logprob: -12.75183391571045
    7. 'traffic' → logprob: -13.12683391571045
    8. 'raw' → logprob: -13.62683391571045
    9. 'line' → logprob: -13.62683391571045
    10. '_lines' → logprob: -13.62683391571045

Token 314: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.668304245569743e-05
    2. '_data' → logprob: -10.125046730041504
    3. '_' → logprob: -12.250046730041504
    4. 'lines' → logprob: -14.375046730041504
    5. ' =' → logprob: -15.000046730041504
    6. '_line' → logprob: -15.125046730041504
    7. '_LINES' → logprob: -16.500045776367188
    8. ' _' → logprob: -16.625045776367188
    9. '=_' → logprob: -16.875045776367188
    10. '=' → logprob: -17.125045776367188

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858759790658951
    2. ' =' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.173587799072266
    4. '=[]' → logprob: -17.298587799072266
    5. ')' → logprob: -17.423587799072266
    6. ' ' → logprob: -17.673587799072266
    7. '=input' → logprob: -17.923587799072266
    8. '＝' → logprob: -18.048587799072266
    9. '=index' → logprob: -19.173587799072266
    10. '=
' → logprob: -19.298587799072266

Token 316: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0006268949946388602
    2. ' input' → logprob: -7.375627040863037
    3. 'list' → logprob: -15.750626564025879
    4. '[input' → logprob: -16.125627517700195
    5. 'iter' → logprob: -16.500627517700195
    6. '	input' → logprob: -18.000627517700195
    7. '(input' → logprob: -18.000627517700195
    8. '[' → logprob: -18.125627517700195
    9. '<input' → logprob: -18.875627517700195
    10. '   ' → logprob: -20.000627517700195

Token 317: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.6047699318733066e-05
    2. 'lines' → logprob: -11.250016212463379
    3. '_' → logprob: -13.125016212463379
    4. '_LINES' → logprob: -15.250016212463379
    5. 'Lines' → logprob: -15.375016212463379
    6. '._' → logprob: -16.125015258789062
    7. '```' → logprob: -16.125015258789062
    8. '   ' → logprob: -16.500015258789062
    9. '_
' → logprob: -16.625015258789062
    10. '.lines' → logprob: -17.125015258789062

Token 318: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5615778565406799
    2. '   ' → logprob: -1.0615777969360352
    3. '<|end|>' → logprob: -2.811577796936035
    4. 'def' → logprob: -4.186577796936035
    5. '       ' → logprob: -5.436577796936035
    6. '    
' → logprob: -6.436577796936035
    7. '<|end|>' → logprob: -7.061577796936035
    8. '

' → logprob: -7.186577796936035
    9. ' def' → logprob: -7.311577796936035
    10. '	def' → logprob: -9.811577796936035

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.583393394947052
    2. 'def' → logprob: -1.0833933353424072
    3. '
' → logprob: -2.3333933353424072
    4. '       ' → logprob: -5.833393573760986
    5. ' def' → logprob: -6.083393573760986
    6. '

' → logprob: -7.208393573760986
    7. '    
' → logprob: -7.833393573760986
    8. 'self' → logprob: -9.333393096923828
    9. '<|end|>' → logprob: -9.833393096923828
    10. '        
' → logprob: -10.583393096923828

Token 320: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.688212614681106e-05
    2. ' def' → logprob: -11.000017166137695
    3. '
' → logprob: -16.375017166137695
    4. '   ' → logprob: -17.375017166137695
    5. 'self' → logprob: -18.125017166137695
    6. 'from' → logprob: -19.000017166137695
    7. 'class' → logprob: -19.125017166137695
    8. '_def' → logprob: -20.125017166137695
    9. '    
' → logprob: -20.250017166137695
    10. 'import' → logprob: -20.375017166137695

Token 321: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.008369065821170807
    2. ' process' → logprob: -5.008368968963623
    3. 'parse' → logprob: -6.508368968963623
    4. '_process' → logprob: -9.508369445800781
    5. 'run' → logprob: -9.883369445800781
    6. ' parse' → logprob: -10.758369445800781
    7. 'read' → logprob: -11.633369445800781
    8. 'execute' → logprob: -13.133369445800781
    9. ' run' → logprob: -13.383369445800781
    10. '__' → logprob: -14.133369445800781

Token 322: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.539801688631997e-05
    2. '_input' → logprob: -10.500065803527832
    3. '(' → logprob: -10.875065803527832
    4. '_(' → logprob: -11.500065803527832
    5. '_' → logprob: -12.750065803527832
    6. '_data' → logprob: -12.875065803527832
    7. 'self' → logprob: -13.750065803527832
    8. '_inputs' → logprob: -14.750065803527832
    9. '_self' → logprob: -14.750065803527832
    10. '_lines' → logprob: -14.750065803527832

Token 323: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01315199676901102
    2. '_' → logprob: -5.013152122497559
    3. 'self' → logprob: -5.763152122497559
    4. ')_' → logprob: -7.138152122497559
    5. '_lines' → logprob: -7.138152122497559
    6. '_self' → logprob: -7.263152122497559
    7. '):
' → logprob: -8.263152122497559
    8. '_input' → logprob: -8.263152122497559
    9. ')' → logprob: -8.388152122497559
    10. ',' → logprob: -8.638152122497559

Token 324: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0357765294611454
    2. ':' → logprob: -3.4107766151428223
    3. 'self' → logprob: -6.910776615142822
    4. '(' → logprob: -8.410776138305664
    5. '   ' → logprob: -8.410776138305664
    6. '():' → logprob: -8.410776138305664
    7. '       ' → logprob: -8.785776138305664
    8. ':
' → logprob: -9.285776138305664
    9. ':self' → logprob: -9.535776138305664
    10. '_input' → logprob: -10.035776138305664

Token 325: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6088473200798035
    2. 'Tunnel' → logprob: -1.1088473796844482
    3. 'list' → logprob: -2.7338473796844482
    4. ' Tunnel' → logprob: -3.8588473796844482
    5. 'None' → logprob: -3.9838473796844482
    6. ' int' → logprob: -4.733847141265869
    7. '[]' → logprob: -5.858847141265869
    8. ' list' → logprob: -6.233847141265869
    9. 'Tuple' → logprob: -6.483847141265869
    10. ' None' → logprob: -6.733847141265869

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5949501991271973
    2. '       ' → logprob: -0.9699501991271973
    3. ':
' → logprob: -2.7199501991271973
    4. '(self' → logprob: -5.969950199127197
    5. '   ' → logprob: -8.469949722290039
    6. '():' → logprob: -8.594949722290039
    7. '():
' → logprob: -8.719949722290039
    8. '):
' → logprob: -9.219949722290039
    9. 'self' → logprob: -9.969949722290039
    10. '):' → logprob: -10.219949722290039

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08348726481199265
    2. 'n' → logprob: -2.5834872722625732
    3. ' n' → logprob: -5.708487033843994
    4. 'data' → logprob: -8.083487510681152
    5. 'initial' → logprob: -8.458487510681152
    6. 'first' → logprob: -8.708487510681152
    7. 't' → logprob: -8.958487510681152
    8. 'line' → logprob: -9.083487510681152
    9. 'lines' → logprob: -9.083487510681152
    10. ' lines' → logprob: -9.708487510681152

Token 328: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011819647625088692
    2. 'first' → logprob: -5.511819839477539
    3. 'initial' → logprob: -5.761819839477539
    4. 'lines' → logprob: -5.886819839477539
    5. 'header' → logprob: -7.511819839477539
    6. ' n' → logprob: -7.636819839477539
    7. 'parts' → logprob: -8.636819839477539
    8. '       ' → logprob: -8.761819839477539
    9. 'time' → logprob: -9.261819839477539
    10. 'line' → logprob: -9.511819839477539

Token 329: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002975679701194167
    2. ' =' → logprob: -6.2529754638671875
    3. '=' → logprob: -7.1279754638671875
    4. ' ,' → logprob: -8.627975463867188
    5. ',m' → logprob: -10.502975463867188
    6. '_,' → logprob: -11.002975463867188
    7. ',line' → logprob: -12.252975463867188
    8. '_line' → logprob: -12.377975463867188
    9. '       ' → logprob: -13.127975463867188
    10. ',input' → logprob: -13.252975463867188

Token 330: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024758970830589533
    2. ' int' → logprob: -6.002475738525391
    3. 'len' → logprob: -15.25247573852539
    4. '   ' → logprob: -20.25247573852539
    5. ' len' → logprob: -20.25247573852539
    6. ' ' → logprob: -20.87747573852539
    7. 'self' → logprob: -21.37747573852539
    8. '(int' → logprob: -21.75247573852539
    9. '  ' → logprob: -22.00247573852539
    10. '	int' → logprob: -22.25247573852539

Token 331: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0921942703134846e-05
    2. '(' → logprob: -11.50001049041748
    3. 'self' → logprob: -14.12501049041748
    4. '(
' → logprob: -19.375011444091797
    5. ' self' → logprob: -19.875011444091797
    6. ' (' → logprob: -20.500011444091797
    7. '(next' → logprob: -21.125011444091797
    8. '[self' → logprob: -22.000011444091797
    9. '((' → logprob: -22.250011444091797
    10. '	self' → logprob: -22.375011444091797

Token 332: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0011204533511772752
    2. '(self' → logprob: -7.626120567321777
    3. 'self' → logprob: -8.501120567321777
    4. '.' → logprob: -9.001120567321777
    5. '_self' → logprob: -9.626120567321777
    6. '(' → logprob: -10.001120567321777
    7. '_' → logprob: -10.126120567321777
    8. ' _' → logprob: -10.251120567321777
    9. '   ' → logprob: -10.251120567321777
    10. '(_' → logprob: -11.126120567321777

Token 333: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00016623330884613097
    2. ' input' → logprob: -8.750165939331055
    3. '_input' → logprob: -12.000165939331055
    4. '(input' → logprob: -14.500165939331055
    5. ' ' → logprob: -15.250165939331055
    6. '.input' → logprob: -15.250165939331055
    7. '	input' → logprob: -15.750165939331055
    8. '_' → logprob: -16.250165939331055
    9. '   ' → logprob: -16.500165939331055
    10. 'Input' → logprob: -16.937665939331055

Token 334: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.034592388459714e-06
    2. 'lines' → logprob: -12.250005722045898
    3. '._' → logprob: -15.625005722045898
    4. '[' → logprob: -15.750005722045898
    5. '.lines' → logprob: -15.750005722045898
    6. '_line' → logprob: -15.875005722045898
    7. '
' → logprob: -16.1250057220459
    8. 'Lines' → logprob: -16.3750057220459
    9. '```' → logprob: -16.6250057220459
    10. '_' → logprob: -16.7500057220459

Token 335: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.25
    3. '   ' → logprob: -16.875
    4. '[
' → logprob: -17.875
    5. '()[' → logprob: -18.375
    6. '```' → logprob: -18.5
    7. '.pop' → logprob: -19.625
    8. '(' → logprob: -19.625
    9. ' ' → logprob: -19.75
    10. '0' → logprob: -20.25

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '[' → logprob: -15.125003814697266
    4. '
' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '       ' → logprob: -18.000003814697266
    7. '           ' → logprob: -18.250003814697266
    8. '    ' → logprob: -18.437503814697266
    9. '۰' → logprob: -18.500003814697266
    10. '(' → logprob: -18.937503814697266

Token 337: '].' (ID: 1651)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5256938338279724
    2. '].' → logprob: -0.9006938338279724
    3. '.strip' → logprob: -6.900693893432617
    4. '])
' → logprob: -7.650693893432617
    5. ' ])' → logprob: -7.775693893432617
    6. ']' → logprob: -8.025693893432617
    7. '.split' → logprob: -8.650693893432617
    8. ')' → logprob: -9.275693893432617
    9. ' ].' → logprob: -10.775693893432617
    10. ').' → logprob: -11.275693893432617

Token 338: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -6.456358823925257e-05
    2. 'split' → logprob: -9.750064849853516
    3. 'rstrip' → logprob: -12.250064849853516
    4. ' strip' → logprob: -13.500064849853516
    5. '.strip' → logprob: -19.250064849853516
    6. '_strip' → logprob: -21.625064849853516
    7. ' split' → logprob: -22.375064849853516
    8. ')' → logprob: -22.375064849853516
    9. 'trim' → logprob: -22.625064849853516
    10. '(strip' → logprob: -23.000064849853516

Token 339: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05048467218875885
    2. ')' → logprob: -3.0504846572875977
    3. '()' → logprob: -6.925484657287598
    4. '())
' → logprob: -7.050484657287598
    5. ')
' → logprob: -11.300484657287598
    6. ' )' → logprob: -11.425484657287598
    7. '())

' → logprob: -12.050484657287598
    8. '()
' → logprob: -12.175484657287598
    9. '(' → logprob: -12.300484657287598
    10. ' ())' → logprob: -12.550484657287598

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010915531776845455
    2. 'm' → logprob: -4.885915756225586
    3. 'initial' → logprob: -6.260915756225586
    4. 't' → logprob: -7.510915756225586
    5. ',' → logprob: -8.135915756225586
    6. ' initial' → logprob: -8.135915756225586
    7. ' m' → logprob: -10.010915756225586
    8. '_initial' → logprob: -10.135915756225586
    9. ',m' → logprob: -10.385915756225586
    10. '   ' → logprob: -10.510915756225586

Token 341: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.07968488335609436
    2. 'initial' → logprob: -2.5796849727630615
    3. 'current' → logprob: -7.829684734344482
    4. '_m' → logprob: -8.57968521118164
    5. '_initial' → logprob: -9.45468521118164
    6. 'cars' → logprob: -10.70468521118164
    7. 'car' → logprob: -11.32968521118164
    8. 'traffic' → logprob: -11.70468521118164
    9. 'interval' → logprob: -11.82968521118164
    10. 'data' → logprob: -11.82968521118164

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975604310631752
    2. '=' → logprob: -3.5297560691833496
    3. ' ' → logprob: -12.279755592346191
    4. '=int' → logprob: -14.279755592346191
    5. ',' → logprob: -16.654756546020508
    6. ' ' → logprob: -16.779756546020508
    7. '_' → logprob: -16.779756546020508
    8. ' =
' → logprob: -17.154756546020508
    9. '  ' → logprob: -17.404756546020508
    10. ')' → logprob: -17.404756546020508

Token 343: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05021806061267853
    2. ' int' → logprob: -3.050218105316162
    3. '0' → logprob: -6.425218105316162
    4. ' ' → logprob: -11.675217628479004
    5. '1' → logprob: -16.17521858215332
    6. '=int' → logprob: -16.17521858215332
    7. '(int' → logprob: -16.42521858215332
    8. '<int' → logprob: -16.42521858215332
    9. '[int' → logprob: -16.42521858215332
    10. '  ' → logprob: -16.42521858215332

Token 344: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04788466915488243
    2. 'self' → logprob: -3.172884702682495
    3. ' self' → logprob: -5.422884464263916
    4. '(' → logprob: -7.922884464263916
    5. ' (' → logprob: -10.297884941101074
    6. '(
' → logprob: -10.672884941101074
    7. '
' → logprob: -10.797884941101074
    8. '   ' → logprob: -11.547884941101074
    9. ' ' → logprob: -12.797884941101074
    10. '    ' → logprob: -13.047884941101074

Token 345: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0017107593594118953
    2. '.' → logprob: -7.126710891723633
    3. ' _' → logprob: -7.876710891723633
    4. '_' → logprob: -8.001710891723633
    5. ' .' → logprob: -9.376710891723633
    6. ' ' → logprob: -10.251710891723633
    7. '_self' → logprob: -10.751710891723633
    8. '   ' → logprob: -11.126710891723633
    9. '
' → logprob: -11.751710891723633
    10. '_input' → logprob: -12.501710891723633

Token 346: 'input' (ID: 2586)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.011060204356908798
    2. 'input' → logprob: -4.5110602378845215
    3. '_lines' → logprob: -11.761059761047363
    4. '.input' → logprob: -13.261059761047363
    5. ' input' → logprob: -14.386059761047363
    6. '_' → logprob: -14.511059761047363
    7. '
' → logprob: -15.136059761047363
    8. '[' → logprob: -15.761059761047363
    9. '_inputs' → logprob: -16.01106071472168
    10. 'lines' → logprob: -16.26106071472168

Token 347: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.4391956685576588e-05
    2. 'lines' → logprob: -10.750024795532227
    3. 'Lines' → logprob: -13.250024795532227
    4. '_' → logprob: -15.000024795532227
    5. 'ines' → logprob: -15.750024795532227
    6. '```' → logprob: -16.125024795532227
    7. '_line' → logprob: -16.250024795532227
    8. '[' → logprob: -16.250024795532227
    9. '._' → logprob: -17.125024795532227
    10. 'line' → logprob: -17.250024795532227

Token 348: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -12.125006675720215
    3. '```' → logprob: -15.125006675720215
    4. '
' → logprob: -16.0000057220459
    5. ' [' → logprob: -16.0000057220459
    6. '[
' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.7500057220459
    8. ')[' → logprob: -17.3750057220459
    9. '\[' → logprob: -18.1250057220459
    10. '][' → logprob: -18.2500057220459

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -11.000021934509277
    3. '   ' → logprob: -13.375021934509277
    4. '0' → logprob: -13.375021934509277
    5. '
' → logprob: -14.250021934509277
    6. '[' → logprob: -14.875021934509277
    7. '```' → logprob: -15.750021934509277
    8. '  ' → logprob: -16.00002098083496
    9. '2' → logprob: -16.31252098083496
    10. '     ' → logprob: -16.81252098083496

Token 350: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03493330627679825
    2. '.strip' → logprob: -3.40993332862854
    3. '().' → logprob: -7.409933090209961
    4. '.' → logprob: -7.534933090209961
    5. ').' → logprob: -9.409933090209961
    6. ' .' → logprob: -10.534933090209961
    7. ' ].' → logprob: -11.034933090209961
    8. ''].' → logprob: -11.909933090209961
    9. ']' → logprob: -12.284933090209961
    10. '   ' → logprob: -13.034933090209961

Token 351: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.6240566083070007e-06
    2. ' strip' → logprob: -13.500001907348633
    3. '.strip' → logprob: -16.375001907348633
    4. '(strip' → logprob: -16.375001907348633
    5. 'stripe' → logprob: -19.125001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '
' → logprob: -20.250001907348633
    8. 'rstrip' → logprob: -20.375001907348633
    9. '_strip' → logprob: -20.750001907348633
    10. ' ' → logprob: -21.875001907348633

Token 352: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23065637052059174
    2. ')' → logprob: -1.730656385421753
    3. '())
' → logprob: -4.105656147003174
    4. '()' → logprob: -4.480656147003174
    5. ')
' → logprob: -6.980656147003174
    6. '()
' → logprob: -9.980656623840332
    7. '())

' → logprob: -10.980656623840332
    8. ' )' → logprob: -11.855656623840332
    9. '(' → logprob: -12.730656623840332
    10. '       ' → logprob: -12.980656623840332

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007062261924147606
    2. 't' → logprob: -5.5070624351501465
    3. 'for' → logprob: -6.6320624351501465
    4. '
' → logprob: -7.0070624351501465
    5. ' for' → logprob: -8.382061958312988
    6. '   ' → logprob: -9.257061958312988
    7. 'self' → logprob: -9.382061958312988
    8. '        
' → logprob: -9.507061958312988
    9. 'result' → logprob: -10.132061958312988
    10. '	' → logprob: -10.132061958312988

Token 354: ' traffic' (ID: 12769)
  Prédit: 'traffic'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'traffic' (adapté à ' traffic') → logprob: -0.03491660952568054
    2. 'data' → logprob: -3.659916639328003
    3. 't' → logprob: -4.784916400909424
    4. 'td' → logprob: -9.659916877746582
    5. 'tt' → logprob: -9.909916877746582
    6. ' traffic' → logprob: -10.534916877746582
    7. '   ' → logprob: -10.909916877746582
    8. '       ' → logprob: -11.409916877746582
    9. 'processor' → logprob: -12.034916877746582
    10. ' tunnel' → logprob: -12.534916877746582

Token 355: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.000116655595775228
    2. '_' → logprob: -9.625116348266602
    3. 'data' → logprob: -10.625116348266602
    4. ' =' → logprob: -11.000116348266602
    5. '=' → logprob: -11.875116348266602
    6. 'Data' → logprob: -13.375116348266602
    7. '   ' → logprob: -14.750116348266602
    8. '       ' → logprob: -16.2501163482666
    9. ' _' → logprob: -16.2501163482666
    10. '=_' → logprob: -16.2501163482666

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. '=
' → logprob: -16.936967849731445
    4. ' =
' → logprob: -16.936967849731445
    5. ' ' → logprob: -17.686967849731445
    6. '＝' → logprob: -17.811967849731445
    7. ':' → logprob: -18.061967849731445
    8. '   ' → logprob: -18.436967849731445
    9. ')' → logprob: -19.061967849731445
    10. '	' → logprob: -19.311967849731445

Token 357: ' Tunnel' (ID: 105803)
  Prédit: ' Tunnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tunnel' → logprob: -0.10020741820335388
    2. 'Tunnel' → logprob: -2.3502073287963867
    3. 'T' → logprob: -14.350207328796387
    4. ' T' → logprob: -16.350208282470703
    5. ' Traffic' → logprob: -16.975208282470703
    6. 'Traffic' → logprob: -16.975208282470703
    7. ' Tun' → logprob: -17.600208282470703
    8. ' tunnel' → logprob: -17.725208282470703
    9. 'Tun' → logprob: -17.975208282470703
    10. '	T' → logprob: -18.225208282470703

Token 358: 'Traffic' (ID: 79386)
  Prédit: 'Traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -7.896309739408025e-07
    2. ' Traffic' → logprob: -14.500000953674316
    3. 'traffic' → logprob: -17.0
    4. '_' → logprob: -17.125
    5. '
' → logprob: -17.375
    6. 'T' → logprob: -17.375
    7. 'Travel' → logprob: -18.125
    8. ' traffic' → logprob: -18.25
    9. 'Tra' → logprob: -18.375
    10. '_T' → logprob: -19.0

Token 359: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.0005583931924775243
    2. 'Traffic' → logprob: -7.500558376312256
    3. 'ata' → logprob: -13.125558853149414
    4. '_data' → logprob: -13.875558853149414
    5. 'data' → logprob: -13.875558853149414
    6. 'D' → logprob: -15.500558853149414
    7. 'Dat' → logprob: -15.625558853149414
    8. 'Processor' → logprob: -15.625558853149414
    9. 'DATA' → logprob: -15.875558853149414
    10. '   ' → logprob: -16.250558853149414

Token 360: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.625004768371582
    3. '(
' → logprob: -14.250004768371582
    4. 'n' → logprob: -15.375004768371582
    5. '       ' → logprob: -16.625003814697266
    6. ' (' → logprob: -16.625003814697266
    7. '
' → logprob: -19.000003814697266
    8. '(m' → logprob: -19.250003814697266
    9. '((' → logprob: -19.625003814697266
    10. ' n' → logprob: -19.750003814697266

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003717892337590456
    2. ',m' → logprob: -5.62871789932251
    3. ' ,' → logprob: -9.128717422485352
    4. 'm' → logprob: -12.253717422485352
    5. ',
' → logprob: -12.753717422485352
    6. '       ' → logprob: -14.503717422485352
    7. '   ' → logprob: -14.503717422485352
    8. ',n' → logprob: -15.628717422485352
    9. ')' → logprob: -16.12871742248535
    10. '‌,' → logprob: -16.37871742248535

Token 362: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3132616877555847
    2. ' m' → logprob: -1.3132617473602295
    3. '	m' → logprob: -19.188261032104492
    4. ')m' → logprob: -19.813261032104492
    5. '       ' → logprob: -19.938261032104492
    6. '    ' → logprob: -20.688261032104492
    7. '   ' → logprob: -20.813261032104492
    8. '
' → logprob: -20.938261032104492
    9. ' ' → logprob: -21.313261032104492
    10. ' ' → logprob: -21.438261032104492

Token 363: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00524098752066493
    2. ')
' → logprob: -5.2552409172058105
    3. ')

' → logprob: -12.380241394042969
    4. '       ' → logprob: -12.880241394042969
    5. '   ' → logprob: -15.630241394042969
    6. ')
' → logprob: -16.13024139404297
    7. ' )' → logprob: -16.50524139404297
    8. '
' → logprob: -17.75524139404297
    9. '),' → logprob: -17.75524139404297
    10. '<|end|>' → logprob: -18.75524139404297

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25476375222206116
    2. 'for' → logprob: -1.5047637224197388
    3. ' for' → logprob: -5.879763603210449
    4. '	for' → logprob: -11.00476360321045
    5. '   ' → logprob: -11.25476360321045
    6. '	' → logprob: -13.00476360321045
    7. '
' → logprob: -13.25476360321045
    8. 'index' → logprob: -15.25476360321045
    9. '```' → logprob: -15.25476360321045
    10. '      ' → logprob: -15.62976360321045

Token 365: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.723352049040841e-06
    2. '       ' → logprob: -12.750004768371582
    3. ' for' → logprob: -13.250004768371582
    4. 'line' → logprob: -17.750003814697266
    5. 'index' → logprob: -18.250003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '	for' → logprob: -19.125003814697266
    8. 'current' → logprob: -19.125003814697266
    9. 'idx' → logprob: -19.250003814697266
    10. '
' → logprob: -23.125003814697266

Token 366: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10174857079982758
    2. 'i' → logprob: -2.351748466491699
    3. ' line' → logprob: -6.851748466491699
    4. ' i' → logprob: -7.851748466491699
    5. 'idx' → logprob: -9.6017484664917
    6. 'index' → logprob: -10.6017484664917
    7. ' idx' → logprob: -13.6017484664917
    8. '_line' → logprob: -15.6017484664917
    9. ' index' → logprob: -16.601749420166016
    10. '	line' → logprob: -17.226749420166016

Token 367: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002535236766561866
    2. 'in' → logprob: -6.002535343170166
    3. '_index' → logprob: -10.752534866333008
    4. '_idx' → logprob: -11.502534866333008
    5. ' ' → logprob: -12.127534866333008
    6. '       ' → logprob: -12.627534866333008
    7. '   ' → logprob: -12.752534866333008
    8. ',' → logprob: -13.002534866333008
    9. 'index' → logprob: -13.127534866333008
    10. ' i' → logprob: -13.627534866333008

Token 368: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '(self' → logprob: -16.626928329467773
    4. '	self' → logprob: -16.876928329467773
    5. '   ' → logprob: -17.751928329467773
    6. '       ' → logprob: -17.751928329467773
    7. '[self' → logprob: -17.751928329467773
    8. '=self' → logprob: -18.501928329467773
    9. 'elf' → logprob: -18.751928329467773
    10. '
' → logprob: -19.001928329467773

Token 369: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -15.500000953674316
    3. ' .' → logprob: -15.750000953674316
    4. '[' → logprob: -16.25
    5. '   ' → logprob: -16.25
    6. '       ' → logprob: -16.625
    7. '_' → logprob: -17.5
    8. ' ' → logprob: -17.625
    9. ' _' → logprob: -19.0
    10. 's' → logprob: -19.125

Token 370: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3856492842023727e-06
    2. '_input' → logprob: -14.375000953674316
    3. ' input' → logprob: -14.750000953674316
    4. '.input' → logprob: -16.750001907348633
    5. '	input' → logprob: -16.875001907348633
    6. '(input' → logprob: -17.375001907348633
    7. '<input' → logprob: -17.750001907348633
    8. '_' → logprob: -18.000001907348633
    9. 'import' → logprob: -18.375001907348633
    10. '[input' → logprob: -18.375001907348633

Token 371: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.88418151892256e-05
    2. 'lines' → logprob: -9.750059127807617
    3. 'Lines' → logprob: -15.000059127807617
    4. '_LINES' → logprob: -17.000059127807617
    5. '.lines' → logprob: -17.375059127807617
    6. '```' → logprob: -17.750059127807617
    7. ' lines' → logprob: -17.750059127807617
    8. 'line' → logprob: -18.625059127807617
    9. '[' → logprob: -18.750059127807617
    10. '	lines' → logprob: -19.125059127807617

Token 372: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011415231710998341
    2. '2' → logprob: -9.125114440917969
    3. 'from' → logprob: -13.125114440917969
    4. '(' → logprob: -13.500114440917969
    5. '   ' → logprob: -13.750114440917969
    6. '       ' → logprob: -15.500114440917969
    7. '
' → logprob: -16.37511444091797
    8. '3' → logprob: -16.37511444091797
    9. ' [' → logprob: -16.50011444091797
    10. '```' → logprob: -16.62511444091797

Token 373: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. '   ' → logprob: -13.750008583068848
    4. 'range' → logprob: -14.125008583068848
    5. '
' → logprob: -16.00000762939453
    6. '       ' → logprob: -16.62500762939453
    7. '3' → logprob: -16.62500762939453
    8. 'from' → logprob: -17.50000762939453
    9. '```' → logprob: -18.50000762939453
    10. ' range' → logprob: -18.50000762939453

Token 374: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020103710994590074
    2. ':].' → logprob: -9.125201225280762
    3. ':n' → logprob: -10.250201225280762
    4. ' :' → logprob: -10.500201225280762
    5. ':]' → logprob: -11.000201225280762
    6. ']:' → logprob: -11.625201225280762
    7. 'n' → logprob: -13.375201225280762
    8. '：' → logprob: -14.875201225280762
    9. '+:' → logprob: -15.375201225280762
    10. '].' → logprob: -15.500201225280762

Token 375: '2' (ID: 17)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.00662158103659749
    2. ']:' → logprob: -5.131621360778809
    3. '       ' → logprob: -8.006621360778809
    4. ':
' → logprob: -9.381621360778809
    5. '():
' → logprob: -9.881621360778809
    6. '   ' → logprob: -10.006621360778809
    7. ':' → logprob: -10.131621360778809
    8. ']' → logprob: -10.131621360778809
    9. ']:
' → logprob: -10.131621360778809
    10. '):
' → logprob: -10.881621360778809

Token 376: ' +' (ID: 659)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2346239686012268
    2. ':n' → logprob: -2.609623908996582
    3. ':' → logprob: -2.734623908996582
    4. '+n' → logprob: -3.109623908996582
    5. '   ' → logprob: -4.984623908996582
    6. 'n' → logprob: -5.359623908996582
    7. ']:
' → logprob: -5.484623908996582
    8. ' :' → logprob: -6.109623908996582
    9. ']:' → logprob: -6.484623908996582
    10. '+' → logprob: -6.609623908996582

Token 377: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.2378600735682994e-05
    2. ' n' → logprob: -10.375032424926758
    3. '_n' → logprob: -14.750032424926758
    4. '   ' → logprob: -15.250032424926758
    5. '(n' → logprob: -15.750032424926758
    6. '	n' → logprob: -15.875032424926758
    7. 'len' → logprob: -16.750032424926758
    8. '       ' → logprob: -17.375032424926758
    9. '
' → logprob: -17.625032424926758
    10. ')n' → logprob: -18.000032424926758

Token 378: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.16071483492851257
    2. ']:' → logprob: -1.910714864730835
    3. ']:
' → logprob: -7.910714626312256
    4. ']' → logprob: -9.410715103149414
    5. ' ]' → logprob: -10.910715103149414
    6. '].' → logprob: -11.410715103149414
    7. '       ' → logprob: -12.660715103149414
    8. ']:

' → logprob: -12.785715103149414
    9. '   ' → logprob: -13.285715103149414
    10. ']:


' → logprob: -13.535715103149414

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.804671233519912e-05
    2. '            
' → logprob: -10.00008773803711
    3. ',' → logprob: -10.87508773803711
    4. 'entered' → logprob: -11.50008773803711
    5. ' entering' → logprob: -12.87508773803711
    6. 'enter' → logprob: -13.37508773803711
    7. '          ' → logprob: -14.00008773803711
    8. ' enter' → logprob: -14.00008773803711
    9. '	       ' → logprob: -14.25008773803711
    10. '               ' → logprob: -14.37508773803711

Token 380: ' entered' (ID: 18375)
  Prédit: 'entered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' (adapté à ' entered') → logprob: -0.658765435218811
    2. ' entering' → logprob: -1.033765435218811
    3. 'enter' → logprob: -2.5337653160095215
    4. '           ' → logprob: -3.1587653160095215
    5. ' entered' → logprob: -5.7837653160095215
    6. '               ' → logprob: -7.1587653160095215
    7. 'Entering' → logprob: -7.9087653160095215
    8. ' enter' → logprob: -8.90876579284668
    9. 'entr' → logprob: -9.03376579284668
    10. 'ent' → logprob: -9.15876579284668

Token 381: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.840432565193623e-05
    2. ' ,' → logprob: -9.375088691711426
    3. ',line' → logprob: -13.750088691711426
    4. '‌,' → logprob: -14.250088691711426
    5. '_,' → logprob: -14.500088691711426
    6. ',left' → logprob: -14.500088691711426
    7. ',int' → logprob: -16.25008773803711
    8. '_str' → logprob: -16.25008773803711
    9. ',num' → logprob: -16.62508773803711
    10. ',
' → logprob: -16.87508773803711

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01825881190598011
    2. '=' → logprob: -4.018259048461914
    3. ' =' → logprob: -10.018259048461914
    4. ' ,' → logprob: -10.018259048461914
    5. ',line' → logprob: -11.893259048461914
    6. '=line' → logprob: -12.643259048461914
    7. '           ' → logprob: -13.518259048461914
    8. ',
' → logprob: -13.643259048461914
    9. '<|end|>' → logprob: -13.768259048461914
    10. ',user' → logprob: -14.018259048461914

Token 383: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.1468387097120285
    2. 'left' → logprob: -2.271838665008545
    3. 'le' → logprob: -3.771838665008545
    4. ' leaving' → logprob: -4.896838665008545
    5. ' le' → logprob: -5.896838665008545
    6. ' lef' → logprob: -8.646839141845703
    7. 'leave' → logprob: -11.771839141845703
    8. ' leave' → logprob: -11.771839141845703
    9. '	left' → logprob: -11.896839141845703
    10. 'lef' → logprob: -12.396839141845703

Token 384: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018811490386724472
    2. ' =' → logprob: -4.1438117027282715
    3. '_str' → logprob: -5.8938117027282715
    4. 'str' → logprob: -11.518811225891113
    5. '_' → logprob: -12.518811225891113
    6. '_=' → logprob: -13.518811225891113
    7. ',' → logprob: -14.268811225891113
    8. '=str' → logprob: -14.393811225891113
    9. '＝' → logprob: -15.893811225891113
    10. ')=' → logprob: -16.39381217956543

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324967086315155
    2. ' =' → logprob: -3.773249626159668
    3. '=line' → logprob: -12.398249626159668
    4. '＝' → logprob: -17.023250579833984
    5. ' ' → logprob: -18.148250579833984
    6. '=input' → logprob: -19.023250579833984
    7. '=}' → logprob: -19.273250579833984
    8. '=
' → logprob: -19.523250579833984
    9. '=

' → logprob: -19.773250579833984
    10. '_=' → logprob: -20.023250579833984

Token 386: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2014143168926239
    2. 'line' → logprob: -1.7014143466949463
    3. '=line' → logprob: -14.576414108276367
    4. '	line' → logprob: -15.076414108276367
    5. '[line' → logprob: -16.201414108276367
    6. '#line' → logprob: -16.576414108276367
    7. '           ' → logprob: -16.826414108276367
    8. '(line' → logprob: -16.951414108276367
    9. ',line' → logprob: -19.201414108276367
    10. 'map' → logprob: -19.451414108276367

Token 387: '.strip' (ID: 40613)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013610724359750748
    2. ' =' → logprob: -4.51361083984375
    3. '.split' → logprob: -6.26361083984375
    4. '.' → logprob: -7.88861083984375
    5. '.strip' → logprob: -8.26361083984375
    6. '.=' → logprob: -11.51361083984375
    7. '=line' → logprob: -12.26361083984375
    8. 'split' → logprob: -12.51361083984375
    9. '           ' → logprob: -13.51361083984375
    10. '＝' → logprob: -14.13861083984375

Token 388: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023643692838959396
    2. '()' → logprob: -8.375236511230469
    3. '.split' → logprob: -12.250236511230469
    4. ' ().' → logprob: -15.125236511230469
    5. '.' → logprob: -15.375236511230469
    6. '(' → logprob: -15.500236511230469
    7. 'split' → logprob: -16.37523651123047
    8. '().'' → logprob: -16.50023651123047
    9. '()='' → logprob: -16.87523651123047
    10. '()
' → logprob: -17.25023651123047

Token 389: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.0
    3. '(split' → logprob: -19.625
    4. 'strip' → logprob: -19.75
    5. 'spl' → logprob: -20.0
    6. '.split' → logprob: -20.25
    7. 'rstrip' → logprob: -22.625
    8. ' ' → logprob: -23.125
    9. 'partition' → logprob: -23.25
    10. '_split' → logprob: -23.375

Token 390: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3557529857498594e-05
    2. '(' → logprob: -11.62502384185791
    3. '()
' → logprob: -11.87502384185791
    4. '('' → logprob: -13.00002384185791
    5. ''' → logprob: -13.37502384185791
    6. '()

' → logprob: -13.62502384185791
    7. '<|end|>' → logprob: -14.37502384185791
    8. '()]' → logprob: -15.12502384185791
    9. '()='' → logprob: -15.25002384185791
    10. ' ()' → logprob: -15.25002384185791

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40135031938552856
    2. 'entered' → logprob: -1.4013502597808838
    3. ' entered' → logprob: -2.526350259780884
    4. '            
' → logprob: -6.526350498199463
    5. 'enter' → logprob: -7.151350498199463
    6. 'Entered' → logprob: -7.651350498199463
    7. ' enter' → logprob: -7.651350498199463
    8. ' entering' → logprob: -8.151350021362305
    9. ' 
' → logprob: -8.526350021362305
    10. ',' → logprob: -8.526350021362305

Token 392: ' entered' (ID: 18375)
  Prédit: 'entered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' (adapté à ' entered') → logprob: -0.02376900054514408
    2. ' entered' → logprob: -3.898768901824951
    3. '           ' → logprob: -5.773768901824951
    4. '       ' → logprob: -9.89876937866211
    5. 'enter' → logprob: -10.52376937866211
    6. 'traffic' → logprob: -11.27376937866211
    7. ' entering' → logprob: -11.52376937866211
    8. ' traffic' → logprob: -12.39876937866211
    9. '   ' → logprob: -13.52376937866211
    10. '         ' → logprob: -13.64876937866211

Token 393: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16881071031093597
    2. ' =' → logprob: -1.9188107252120972
    3. ',' → logprob: -4.793810844421387
    4. '=int' → logprob: -8.293810844421387
    5. 'int' → logprob: -11.293810844421387
    6. ' ,' → logprob: -13.543810844421387
    7. '_int' → logprob: -13.668810844421387
    8. ',int' → logprob: -13.793810844421387
    9. ' ' → logprob: -14.043810844421387
    10. '   ' → logprob: -14.918810844421387

Token 394: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.03011966124176979
    2. 'left' → logprob: -3.5301196575164795
    3. 'int' → logprob: -8.780119895935059
    4. ' =' → logprob: -9.030119895935059
    5. ' int' → logprob: -10.030119895935059
    6. '=' → logprob: -10.280119895935059
    7. '=int' → logprob: -11.655119895935059
    8. ' ' → logprob: -12.155119895935059
    9. ' lef' → logprob: -13.530119895935059
    10. '	left' → logprob: -13.655119895935059

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740805923938751
    2. ' =' → logprob: -0.9740805625915527
    3. '=int' → logprob: -12.724081039428711
    4. ' ' → logprob: -16.22408103942871
    5. ',' → logprob: -16.22408103942871
    6. ')' → logprob: -16.34908103942871
    7. '＝' → logprob: -16.47408103942871
    8. '=

' → logprob: -16.59908103942871
    9. '<|end|>' → logprob: -16.59908103942871
    10. 'int' → logprob: -17.34908103942871

Token 396: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008615754544734955
    2. ' int' → logprob: -4.758615970611572
    3. 'map' → logprob: -14.008615493774414
    4. ' map' → logprob: -15.008615493774414
    5. '(int' → logprob: -17.008615493774414
    6. '[int' → logprob: -17.008615493774414
    7. '           ' → logprob: -18.133615493774414
    8. '   ' → logprob: -18.508615493774414
    9. '=int' → logprob: -19.633615493774414
    10. '	int' → logprob: -19.758615493774414

Token 397: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2007883671903983e-05
    2. 'entered' → logprob: -10.750021934509277
    3. '(left' → logprob: -15.375021934509277
    4. ' (' → logprob: -15.375021934509277
    5. '(ent' → logprob: -17.000022888183594
    6. '(
' → logprob: -18.875022888183594
    7. '((' → logprob: -19.125022888183594
    8. '(entry' → logprob: -19.250022888183594
    9. ' entered' → logprob: -19.375022888183594
    10. ')' → logprob: -19.375022888183594

Token 398: 'entered' (ID: 148198)
  Prédit: 'entered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -2.45848218582978e-06
    2. ' entered' → logprob: -13.00000286102295
    3. '           ' → logprob: -17.125001907348633
    4. '
' → logprob: -18.000001907348633
    5. 'enter' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.375001907348633
    7. 'ent' → logprob: -18.750001907348633
    8. ' ' → logprob: -19.250001907348633
    9. 'left' → logprob: -19.250001907348633
    10. '          ' → logprob: -19.625001907348633

Token 399: '_str' (ID: 6182)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.017770003527402878
    2. ',' → logprob: -4.642769813537598
    3. '_str' → logprob: -5.267769813537598
    4. ')' → logprob: -6.142769813537598
    5. 'entered' → logprob: -8.017769813537598
    6. ' ' → logprob: -9.142769813537598
    7. ' ),' → logprob: -9.892769813537598
    8. '),(' → logprob: -10.017769813537598
    9. '   ' → logprob: -10.142769813537598
    10. '_' → logprob: -11.017769813537598

Token 400: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0007600766839459538
    2. ',' → logprob: -7.250760078430176
    3. ')' → logprob: -10.000760078430176
    4. ' ),' → logprob: -12.625760078430176
    5. ',),' → logprob: -14.125760078430176
    6. '),(' → logprob: -15.125760078430176
    7. '},' → logprob: -16.37575912475586
    8. '<|end|>' → logprob: -16.50075912475586
    9. ' ,' → logprob: -16.62575912475586
    10. '           ' → logprob: -17.00075912475586

Token 401: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889088988304138
    2. ' int' → logprob: -2.578890800476074
    3. 'left' → logprob: -13.953890800476074
    4. ' left' → logprob: -15.703890800476074
    5. '=int' → logprob: -16.95389175415039
    6. '(int' → logprob: -17.32889175415039
    7. '	int' → logprob: -17.57889175415039
    8. '<int' → logprob: -18.07889175415039
    9. '[int' → logprob: -18.45389175415039
    10. ' ' → logprob: -18.82889175415039

Token 402: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0037100540939718485
    2. 'left' → logprob: -5.7537102699279785
    3. '(' → logprob: -8.12870979309082
    4. ' left' → logprob: -8.37870979309082
    5. '	left' → logprob: -12.75370979309082
    6. ' (' → logprob: -13.00370979309082
    7. '[left' → logprob: -13.62870979309082
    8. ' ' → logprob: -14.62870979309082
    9. ':left' → logprob: -14.62870979309082
    10. ',left' → logprob: -15.87870979309082

Token 403: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0021736971102654934
    2. ')' → logprob: -6.627173900604248
    3. 'str' → logprob: -7.252173900604248
    4. 'left' → logprob: -9.00217342376709
    5. '_left' → logprob: -12.75217342376709
    6. '_)' → logprob: -12.87717342376709
    7. ')
' → logprob: -13.12717342376709
    8. 'Str' → logprob: -13.25217342376709
    9. ')_' → logprob: -13.62717342376709
    10. '_s' → logprob: -14.12717342376709

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022070204431656748
    2. ')
' → logprob: -8.50022029876709
    3. '<|end|>' → logprob: -11.12522029876709
    4. ')
' → logprob: -14.50022029876709
    5. '           ' → logprob: -14.62522029876709
    6. ' )' → logprob: -14.87522029876709
    7. ')

' → logprob: -15.00022029876709
    8. '<|end|>' → logprob: -15.12522029876709
    9. '       ' → logprob: -15.37522029876709
    10. '),' → logprob: -16.125221252441406

Token 405: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011129142512800172
    2. '<|end|>' → logprob: -9.62511157989502
    3. '       ' → logprob: -10.87511157989502
    4. '            
' → logprob: -11.37511157989502
    5. '               ' → logprob: -12.37511157989502
    6. ',' → logprob: -13.25011157989502
    7. '<|end|>' → logprob: -13.37511157989502
    8. '
' → logprob: -13.75011157989502
    9. '          ' → logprob: -13.87511157989502
    10. '   ' → logprob: -14.00011157989502

Token 406: ' traffic' (ID: 12769)
  Prédit: 'traffic'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'traffic' (adapté à ' traffic') → logprob: -0.20075641572475433
    2. ' traffic' → logprob: -1.9507564306259155
    3. '       ' → logprob: -3.700756311416626
    4. '           ' → logprob: -4.200756549835205
    5. '   ' → logprob: -11.200756072998047
    6. '               ' → logprob: -11.950756072998047
    7. 't' → logprob: -12.950756072998047
    8. ' ' → logprob: -13.700756072998047
    9. '
' → logprob: -13.950756072998047
    10. 'Traffic' → logprob: -14.200756072998047

Token 407: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.125005722045898
    3. 'data' → logprob: -16.7500057220459
    4. '   ' → logprob: -17.5000057220459
    5. ' _' → logprob: -18.7500057220459
    6. 'Data' → logprob: -19.5000057220459
    7. 'd' → logprob: -19.5000057220459
    8. '_d' → logprob: -19.7500057220459
    9. '_dat' → logprob: -19.7500057220459
    10. ' data' → logprob: -19.8750057220459

Token 408: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.0219828002154827e-05
    2. '.' → logprob: -10.875020027160645
    3. 'add' → logprob: -14.000020027160645
    4. ' .' → logprob: -15.875020027160645
    5. '.append' → logprob: -15.875020027160645
    6. '_add' → logprob: -17.25002098083496
    7. '   ' → logprob: -17.50002098083496
    8. ':add' → logprob: -17.62502098083496
    9. ' add' → logprob: -18.25002098083496
    10. '._' → logprob: -18.75002098083496

Token 409: '_interval' (ID: 49009)
  Prédit: '_interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interval' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -11.37501335144043
    3. '_inter' → logprob: -14.37501335144043
    4. 'interval' → logprob: -14.75001335144043
    5. '_enter' → logprob: -15.12501335144043
    6. '(interval' → logprob: -15.75001335144043
    7. '(_' → logprob: -16.00001335144043
    8. ' _' → logprob: -16.00001335144043
    9. '(' → logprob: -16.75001335144043
    10. '_range' → logprob: -16.75001335144043

Token 410: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -6.551721889991313e-05
    2. '_' → logprob: -9.750065803527832
    3. 'data' → logprob: -12.000065803527832
    4. '_enter' → logprob: -15.500065803527832
    5. '(_' → logprob: -16.500064849853516
    6. 's' → logprob: -16.625064849853516
    7. '(' → logprob: -16.750064849853516
    8. '   ' → logprob: -16.750064849853516
    9. '_time' → logprob: -17.125064849853516
    10. ' _' → logprob: -17.125064849853516

Token 411: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. 'entered' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.125000953674316
    4. '(
' → logprob: -18.125
    5. '(entry' → logprob: -18.875
    6. '           ' → logprob: -20.25
    7. ' entered' → logprob: -20.375
    8. '(ent' → logprob: -20.625
    9. '((' → logprob: -21.375
    10. 'enter' → logprob: -21.875

Token 412: 'entered' (ID: 148198)
  Prédit: 'entered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entered' → logprob: -5.1928003813372925e-05
    2. ' entered' → logprob: -9.875051498413086
    3. 'enter' → logprob: -15.125051498413086
    4. '           ' → logprob: -16.500051498413086
    5. '   ' → logprob: -17.250051498413086
    6. 'ent' → logprob: -17.750051498413086
    7. '(' → logprob: -19.125051498413086
    8. ' ' → logprob: -19.500051498413086
    9. '
' → logprob: -19.625051498413086
    10. 'Entered' → logprob: -19.750051498413086

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7835754988482222e-05
    2. ',left' → logprob: -11.625018119812012
    3. ' ,' → logprob: -11.750018119812012
    4. ',
' → logprob: -14.000018119812012
    5. ',right' → logprob: -17.500017166137695
    6. '           ' → logprob: -17.625017166137695
    7. '‌,' → logprob: -18.000017166137695
    8. ',line' → logprob: -18.125017166137695
    9. 'left' → logprob: -18.875017166137695
    10. ',int' → logprob: -19.000017166137695

Token 414: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.31326353549957275
    2. ' left' → logprob: -1.3132635354995728
    3. ' lef' → logprob: -13.438263893127441
    4. 'le' → logprob: -16.063262939453125
    5. '	left' → logprob: -16.063262939453125
    6. '           ' → logprob: -16.688262939453125
    7. 'lef' → logprob: -17.313262939453125
    8. '(left' → logprob: -17.563262939453125
    9. ' ' → logprob: -17.688262939453125
    10. '[left' → logprob: -17.938262939453125

Token 415: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.084206375409849e-05
    2. ')
' → logprob: -10.125041007995605
    3. ')return' → logprob: -14.750041007995605
    4. ')

' → logprob: -15.250041007995605
    5. '       ' → logprob: -16.25004005432129
    6. ')
' → logprob: -17.25004005432129
    7. ' )' → logprob: -17.37504005432129
    8. '))' → logprob: -19.37504005432129
    9. ')`' → logprob: -19.37504005432129
    10. '),' → logprob: -19.62504005432129

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005623358301818371
    2. '
' → logprob: -6.1306233406066895
    3. '   ' → logprob: -6.2556233406066895
    4. ' analyzer' → logprob: -7.2556233406066895
    5. ' traffic' → logprob: -8.380623817443848
    6. 'an' → logprob: -8.505623817443848
    7. 'traffic' → logprob: -8.630623817443848
    8. '```' → logprob: -9.630623817443848
    9. '           ' → logprob: -9.755623817443848
    10. '        
' → logprob: -10.380623817443848

Token 417: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.00017112065688706934
    2. '       ' → logprob: -9.250170707702637
    3. 'return' → logprob: -9.875170707702637
    4. ' analyzer' → logprob: -11.375170707702637
    5. 'traffic' → logprob: -11.875170707702637
    6. '   ' → logprob: -13.125170707702637
    7. 'analysis' → logprob: -13.875170707702637
    8. '        
' → logprob: -14.125170707702637
    9. 'processor' → logprob: -14.625170707702637
    10. '
' → logprob: -15.000170707702637

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021857109386473894
    2. '=' → logprob: -6.127185821533203
    3. '.' → logprob: -15.127185821533203
    4. ' =
' → logprob: -15.377185821533203
    5. ' ' → logprob: -16.877185821533203
    6. ')' → logprob: -17.252185821533203
    7. '	' → logprob: -17.377185821533203
    8. '_' → logprob: -17.752185821533203
    9. '   ' → logprob: -18.127185821533203
    10. '  ' → logprob: -19.127185821533203

Token 419: ' Traffic' (ID: 52059)
  Prédit: ' Traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Traffic' → logprob: -0.03804149478673935
    2. 'Traffic' → logprob: -3.288041591644287
    3. ' traffic' → logprob: -18.413042068481445
    4. '   ' → logprob: -21.163042068481445
    5. '       ' → logprob: -21.538042068481445
    6. ' Traf' → logprob: -21.663042068481445
    7. '    ' → logprob: -22.538042068481445
    8. ' Tra' → logprob: -23.038042068481445
    9. ' ' → logprob: -23.038042068481445
    10. '           ' → logprob: -24.538042068481445

Token 420: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -3.128163257315464e-07
    2. 'Analy' → logprob: -15.625
    3. 'Analyze' → logprob: -16.375
    4. ' Analyzer' → logprob: -16.875
    5. 'Traffic' → logprob: -17.625
    6. ' analyzer' → logprob: -19.25
    7. 'Anal' → logprob: -19.375
    8. 'an' → logprob: -19.875
    9. '   ' → logprob: -21.375
    10. '
' → logprob: -22.0

Token 421: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. 'traffic' → logprob: -14.375000953674316
    3. '(t' → logprob: -16.5
    4. '(
' → logprob: -16.75
    5. ' (' → logprob: -18.375
    6. '       ' → logprob: -18.625
    7. '(self' → logprob: -18.875
    8. ' traffic' → logprob: -19.125
    9. '(tr' → logprob: -20.625
    10. '(transaction' → logprob: -21.0

Token 422: 'traffic' (ID: 84674)
  Prédit: 'traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'traffic' → logprob: -1.4736459888808895e-05
    2. ' traffic' → logprob: -11.250014305114746
    3. '       ' → logprob: -14.000014305114746
    4. '
' → logprob: -14.875014305114746
    5. '           ' → logprob: -15.375014305114746
    6. '   ' → logprob: -15.500014305114746
    7. ')' → logprob: -17.375015258789062
    8. '               ' → logprob: -18.000015258789062
    9. 'traf' → logprob: -18.000015258789062
    10. '  ' → logprob: -19.000015258789062

Token 423: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.750007629394531
    3. 'data' → logprob: -12.750007629394531
    4. 'traffic' → logprob: -14.000007629394531
    5. 'Data' → logprob: -15.500007629394531
    6. ')' → logprob: -16.00000762939453
    7. '_d' → logprob: -16.37500762939453
    8. '_dat' → logprob: -17.12500762939453
    9. '_datas' → logprob: -17.75000762939453
    10. '_DATA' → logprob: -18.12500762939453

Token 424: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47413185238838196
    2. ')' → logprob: -0.9741318225860596
    3. '       ' → logprob: -10.22413158416748
    4. '   ' → logprob: -11.97413158416748
    5. ' )
' → logprob: -12.34913158416748
    6. ')
' → logprob: -12.59913158416748
    7. ')

' → logprob: -12.72413158416748
    8. ' ' → logprob: -14.09913158416748
    9. ' )' → logprob: -14.84913158416748
    10. ')return' → logprob: -15.34913158416748

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058559090830385685
    2. 'return' → logprob: -5.630856037139893
    3. ' return' → logprob: -6.380856037139893
    4. '
' → logprob: -7.505856037139893
    5. '```' → logprob: -12.130855560302734
    6. '   ' → logprob: -13.255855560302734
    7. 'max' → logprob: -13.880855560302734
    8. 'result' → logprob: -14.505855560302734
    9. ' max' → logprob: -14.880855560302734
    10. '        
' → logprob: -15.380855560302734

Token 426: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001725157257169485
    2. '       ' → logprob: -6.501725196838379
    3. ' return' → logprob: -9.001725196838379
    4. 'max' → logprob: -9.376725196838379
    5. 'result' → logprob: -11.251725196838379
    6. '```' → logprob: -13.626725196838379
    7. '
' → logprob: -14.751725196838379
    8. '   ' → logprob: -15.751725196838379
    9. '``' → logprob: -17.376724243164062
    10. '	return' → logprob: -17.501724243164062

Token 427: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.00407923199236393
    2. ' analyzer' → logprob: -5.504079341888428
    3. '	an' → logprob: -14.50407886505127
    4. ' an' → logprob: -16.504079818725586
    5. '   ' → logprob: -16.629079818725586
    6. ' analy' → logprob: -17.629079818725586
    7. ' ' → logprob: -17.754079818725586
    8. '(an' → logprob: -17.879079818725586
    9. 'Analyzer' → logprob: -18.754079818725586
    10. '
' → logprob: -19.129079818725586

Token 428: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -2.5107177862082608e-05
    2. '.' → logprob: -10.625024795532227
    3. ' .' → logprob: -15.375024795532227
    4. '.compute' → logprob: -15.625024795532227
    5. '.cal' → logprob: -16.000024795532227
    6. '.calc' → logprob: -16.000024795532227
    7. '.evaluate' → logprob: -16.625024795532227
    8. '.Calculate' → logprob: -17.250024795532227
    9. '.
' → logprob: -17.750024795532227
    10. '.perform' → logprob: -17.750024795532227

Token 429: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.2200749754119897e-06
    2. 'max' → logprob: -13.125001907348633
    3. '_' → logprob: -15.625001907348633
    4. 'Max' → logprob: -19.125001907348633
    5. ' max' → logprob: -19.750001907348633
    6. '_MAX' → logprob: -19.875001907348633
    7. '_min' → logprob: -20.250001907348633
    8. '__' → logprob: -20.625001907348633
    9. '_Max' → logprob: -20.875001907348633
    10. '	max' → logprob: -21.375001907348633

Token 430: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00011617878044489771
    2. '_max' → logprob: -9.125116348266602
    3. '_' → logprob: -12.125116348266602
    4. '_car' → logprob: -13.750116348266602
    5. ' _' → logprob: -14.625116348266602
    6. '_m' → logprob: -16.3751163482666
    7. '_
' → logprob: -17.7501163482666
    8. 'max' → logprob: -18.1251163482666
    9. '_cards' → logprob: -18.2501163482666
    10. ')' → logprob: -18.8751163482666

Token 431: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -5.3954463510308415e-05
    2. 'ar' → logprob: -10.000054359436035
    3. 'cars' → logprob: -12.375054359436035
    4. '_c' → logprob: -13.000054359436035
    5. '_' → logprob: -14.125054359436035
    6. '```' → logprob: -15.500054359436035
    7. 'a' → logprob: -16.12505340576172
    8. '
' → logprob: -16.37505340576172
    9. '[' → logprob: -16.50005340576172
    10. 'rs' → logprob: -16.50005340576172

Token 432: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.580929347255733e-05
    2. 'in' → logprob: -11.250016212463379
    3. 'In' → logprob: -14.125016212463379
    4. '_' → logprob: -14.625016212463379
    5. '```' → logprob: -15.250016212463379
    6. 'int' → logprob: -15.375016212463379
    7. '
' → logprob: -15.375016212463379
    8. '   ' → logprob: -16.375015258789062
    9. ' _' → logprob: -16.375015258789062
    10. '_int' → logprob: -16.375015258789062

Token 433: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.1637164789135568e-05
    2. 't' → logprob: -11.375011444091797
    3. ' tunnel' → logprob: -16.875011444091797
    4. 'Tunnel' → logprob: -17.625011444091797
    5. '_' → logprob: -17.875011444091797
    6. 'a' → logprob: -18.125011444091797
    7. 'the' → logprob: -18.375011444091797
    8. 'int' → logprob: -18.625011444091797
    9. 's' → logprob: -19.000011444091797
    10. '
' → logprob: -19.875011444091797

Token 434: 'unnel' (ID: 24757)
  Prédit: 'unnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unnel' → logprob: -0.012830523774027824
    2. 'un' → logprob: -5.13783073425293
    3. 'nel' → logprob: -5.13783073425293
    4. 'el' → logprob: -7.63783073425293
    5. 'unn' → logprob: -8.51283073425293
    6. 'n' → logprob: -8.76283073425293
    7. 'annel' → logprob: -10.88783073425293
    8. 'u' → logprob: -10.88783073425293
    9. 'unner' → logprob: -11.63783073425293
    10. 'on' → logprob: -11.63783073425293

Token 435: '()


' (ID: 29771)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02164410799741745
    2. 'def' → logprob: -4.021644115447998
    3. 'import' → logprob: -6.146644115447998
    4. '#' → logprob: -7.271644115447998
    5. 'input' → logprob: -7.521644115447998
    6. '```' → logprob: -9.64664363861084
    7. 'n' → logprob: -10.77164363861084
    8. 'i' → logprob: -11.27164363861084
    9. ' if' → logprob: -12.14664363861084
    10. 'from' → logprob: -12.14664363861084

Token 437: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -9.729906196298543e-06
    2. 'main' → logprob: -11.625009536743164
    3. ' run' → logprob: -14.500009536743164
    4. ' solve' → logprob: -15.750009536743164
    5. '	main' → logprob: -17.375009536743164
    6. ' process' → logprob: -17.750009536743164
    7. ' solution' → logprob: -19.625009536743164
    8. '_main' → logprob: -19.750009536743164
    9. ' read' → logprob: -20.000009536743164
    10. ' ma' → logprob: -20.000009536743164

Token 438: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.4894986785948277e-05
    2. '():
' → logprob: -10.125044822692871
    3. ' ():' → logprob: -12.375044822692871
    4. '()' → logprob: -14.625044822692871
    5. '():
' → logprob: -16.875045776367188
    6. '()>' → logprob: -19.000045776367188
    7. '():

' → logprob: -19.250045776367188
    8. '_' → logprob: -20.000045776367188
    9. '(' → logprob: -20.000045776367188
    10. '().' → logprob: -20.375045776367188

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3171231746673584
    2. 'import' → logprob: -1.3171231746673584
    3. ' import' → logprob: -5.5671234130859375
    4. '	import' → logprob: -10.442123413085938
    5. '```' → logprob: -14.067123413085938
    6. '()' → logprob: -14.192123413085938
    7. '    
' → logprob: -14.442123413085938
    8. 'input' → logprob: -15.317123413085938
    9. '():
' → logprob: -15.567123413085938
    10. '  ' → logprob: -15.567123413085938

Token 440: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.47411003708839417
    2. ' import' → logprob: -0.9741100072860718
    3. '   ' → logprob: -10.349109649658203
    4. ' input' → logprob: -14.474109649658203
    5. 'input' → logprob: -14.974109649658203
    6. 'n' → logprob: -16.224109649658203
    7. '	import' → logprob: -16.349109649658203
    8. 'if' → logprob: -17.474109649658203
    9. ' n' → logprob: -18.099109649658203
    10. '```' → logprob: -18.349109649658203

Token 441: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011048054322600365
    2. ' sys' → logprob: -4.511047840118408
    3. '=sys' → logprob: -15.761048316955566
    4. '	sys' → logprob: -16.26104736328125
    5. '.sys' → logprob: -18.51104736328125
    6. '(sys' → logprob: -19.01104736328125
    7. '_sys' → logprob: -19.13604736328125
    8. 'io' → logprob: -19.88604736328125
    9. 'os' → logprob: -20.26104736328125
    10. '```' → logprob: -20.88604736328125

Token 442: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038352326955646276
    2. 'input' → logprob: -6.003835201263428
    3. '
' → logprob: -7.128835201263428
    4. ' input' → logprob: -7.753835201263428
    5. '    
' → logprob: -9.253835678100586
    6. ' lines' → logprob: -11.128835678100586
    7. '	input' → logprob: -11.878835678100586
    8. '_input' → logprob: -12.878835678100586
    9. 'lines' → logprob: -13.253835678100586
    10. '	lines' → logprob: -13.628835678100586

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0572383739054203
    2. 'input' → logprob: -3.1822383403778076
    3. ' input' → logprob: -4.307238578796387
    4. ' lines' → logprob: -7.557238578796387
    5. 'lines' → logprob: -8.932238578796387
    6. '    
' → logprob: -12.807238578796387
    7. 'data' → logprob: -12.932238578796387
    8. '	input' → logprob: -13.057238578796387
    9. '_input' → logprob: -13.807238578796387
    10. 'if' → logprob: -14.057238578796387

Token 444: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.14903444051742554
    2. ' input' → logprob: -2.1490345001220703
    3. '   ' → logprob: -3.8990345001220703
    4. 'lines' → logprob: -7.14903450012207
    5. ' lines' → logprob: -7.14903450012207
    6. 'data' → logprob: -11.39903450012207
    7. '_input' → logprob: -11.52403450012207
    8. '	input' → logprob: -12.77403450012207
    9. 'inputs' → logprob: -13.02403450012207
    10. 'if' → logprob: -13.27403450012207

Token 445: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0022012863773852587
    2. ' =' → logprob: -6.502201080322266
    3. '_data' → logprob: -7.502201080322266
    4. '=' → logprob: -9.627201080322266
    5. '_' → logprob: -9.752201080322266
    6. '()' → logprob: -12.002201080322266
    7. 'lines' → logprob: -12.127201080322266
    8. '=sys' → logprob: -12.377201080322266
    9. '_line' → logprob: -12.627201080322266
    10. '_=' → logprob: -13.502201080322266

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07954671233892441
    2. ' =' → logprob: -2.5795466899871826
    3. '=sys' → logprob: -7.329546928405762
    4. ' =
' → logprob: -15.079546928405762
    5. '＝' → logprob: -15.204546928405762
    6. '=

' → logprob: -15.704546928405762
    7. '=
' → logprob: -15.829546928405762
    8. '   ' → logprob: -17.079545974731445
    9. ' ' → logprob: -17.329545974731445
    10. 'sys' → logprob: -17.454545974731445

Token 447: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011047814972698689
    2. ' sys' → logprob: -4.511047840118408
    3. '	sys' → logprob: -17.88604736328125
    4. '=sys' → logprob: -18.51104736328125
    5. '(sys' → logprob: -18.88604736328125
    6. '[' → logprob: -20.26104736328125
    7. 'list' → logprob: -20.63604736328125
    8. '   ' → logprob: -21.76104736328125
    9. '/sys' → logprob: -22.01104736328125
    10. '_sys' → logprob: -22.63604736328125

Token 448: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.45848218582978e-06
    2. 'stdin' → logprob: -13.50000286102295
    3. '.' → logprob: -14.50000286102295
    4. '.argv' → logprob: -14.75000286102295
    5. '.stdout' → logprob: -16.500001907348633
    6. '.std' → logprob: -17.875001907348633
    7. ' .' → logprob: -17.875001907348633
    8. ' stdin' → logprob: -18.875001907348633
    9. '(stdin' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.750001907348633

Token 449: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.0006909898947924376
    2. '.read' → logprob: -7.750690937042236
    3. 'read' → logprob: -8.500691413879395
    4. '.readline' → logprob: -9.875691413879395
    5. '.' → logprob: -12.125691413879395
    6. 'buffer' → logprob: -16.625690460205078
    7. 'lines' → logprob: -16.625690460205078
    8. '.buffer' → logprob: -18.000690460205078
    9. '```' → logprob: -19.000690460205078
    10. '   ' → logprob: -20.125690460205078

Token 450: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005240156780928373
    2. '()
' → logprob: -5.255239963531494
    3. '   ' → logprob: -12.255240440368652
    4. '())' → logprob: -14.505240440368652
    5. '()

' → logprob: -15.380240440368652
    6. '()\' → logprob: -15.630240440368652
    7. ')' → logprob: -15.880240440368652
    8. '()`' → logprob: -15.880240440368652
    9. '(' → logprob: -16.505239486694336
    10. '()
' → logprob: -16.630239486694336

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06979914009571075
    2. ' processor' → logprob: -3.3197991847991943
    3. 'processor' → logprob: -3.5697991847991943
    4. '
' → logprob: -6.194798946380615
    5. '    
' → logprob: -7.319798946380615
    6. 'tp' → logprob: -8.444799423217773
    7. ' tp' → logprob: -9.944799423217773
    8. 'result' → logprob: -10.194799423217773
    9. 't' → logprob: -11.569799423217773
    10. ' result' → logprob: -11.569799423217773

Token 452: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.3329302966594696
    2. ' processor' → logprob: -1.332930326461792
    3. '   ' → logprob: -3.957930326461792
    4. '
' → logprob: -8.207930564880371
    5. '    
' → logprob: -9.332930564880371
    6. '.processor' → logprob: -12.332930564880371
    7. '_processor' → logprob: -12.582930564880371
    8. 'Processor' → logprob: -14.332930564880371
    9. 'result' → logprob: -14.457930564880371
    10. ' p' → logprob: -14.582930564880371

Token 453: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889385521411896
    2. '=' → logprob: -2.5788938999176025
    3. '.process' → logprob: -12.953893661499023
    4. ' ' → logprob: -14.578893661499023
    5. 'process' → logprob: -14.578893661499023
    6. '.' → logprob: -15.703893661499023
    7. '(process' → logprob: -15.953893661499023
    8. '<|end|>' → logprob: -16.578893661499023
    9. '＝' → logprob: -16.703893661499023
    10. ' =
' → logprob: -16.703893661499023

Token 454: ' Tunnel' (ID: 105803)
  Prédit: ' Tunnel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tunnel' → logprob: -0.16022443771362305
    2. 'Tunnel' → logprob: -1.910224437713623
    3. 'T' → logprob: -16.03522491455078
    4. 'Traffic' → logprob: -17.03522491455078
    5. ' Traffic' → logprob: -17.41022491455078
    6. '	T' → logprob: -18.16022491455078
    7. ' tunnel' → logprob: -18.28522491455078
    8. '_T' → logprob: -18.28522491455078
    9. ' T' → logprob: -19.16022491455078
    10. '   ' → logprob: -19.66022491455078

Token 455: 'Traffic' (ID: 79386)
  Prédit: 'Traffic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -9.088346359931165e-07
    2. ' Traffic' → logprob: -14.000000953674316
    3. 'traffic' → logprob: -17.0
    4. 'Tunnel' → logprob: -17.5
    5. 'T' → logprob: -17.75
    6. ' traffic' → logprob: -18.125
    7. 'Travel' → logprob: -18.25
    8. '_T' → logprob: -18.875
    9. '
' → logprob: -18.875
    10. 'Tra' → logprob: -20.0

Token 456: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -6.704273118884885e-07
    2. 'processor' → logprob: -14.500000953674316
    3. '_processor' → logprob: -17.0
    4. ' processor' → logprob: -17.5
    5. 'Process' → logprob: -17.875
    6. 'Data' → logprob: -18.0
    7. ' Processor' → logprob: -18.25
    8. 'Traffic' → logprob: -18.875
    9. 'rocess' → logprob: -19.625
    10. 'Processing' → logprob: -20.875

Token 457: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.5048530030981055e-06
    2. 'input' → logprob: -14.250001907348633
    3. '(process' → logprob: -15.125001907348633
    4. '(
' → logprob: -15.375001907348633
    5. '   ' → logprob: -15.625001907348633
    6. '(' → logprob: -15.875001907348633
    7. ' (' → logprob: -16.250001907348633
    8. '[input' → logprob: -18.125001907348633
    9. '(sys' → logprob: -18.625001907348633
    10. '=input' → logprob: -19.750001907348633

Token 458: '_lines' (ID: 42980)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47463226318359375
    2. '_lines' → logprob: -0.9746322631835938
    3. '(lines' → logprob: -7.974632263183594
    4. '_(' → logprob: -8.599632263183594
    5. '_' → logprob: -12.349632263183594
    6. 'Lines' → logprob: -12.599632263183594
    7. '(process' → logprob: -12.849632263183594
    8. '(_' → logprob: -13.099632263183594
    9. '_processor' → logprob: -13.099632263183594
    10. '(' → logprob: -13.349632263183594

Token 459: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1499190479516983
    2. ')
' → logprob: -2.149919033050537
    3. '   ' → logprob: -3.899919033050537
    4. 'processor' → logprob: -6.774919033050537
    5. '(process' → logprob: -7.649919033050537
    6. '()
' → logprob: -7.899919033050537
    7. ' processor' → logprob: -8.274919509887695
    8. '()' → logprob: -8.649919509887695
    9. ' ' → logprob: -11.274919509887695
    10. '.processor' → logprob: -11.774919509887695

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07246991991996765
    2. 'print' → logprob: -2.82246994972229
    3. ' print' → logprob: -4.697469711303711
    4. 'result' → logprob: -7.072469711303711
    5. ' result' → logprob: -7.697469711303711
    6. 'return' → logprob: -11.197469711303711
    7. ' return' → logprob: -11.947469711303711
    8. '
' → logprob: -12.947469711303711
    9. '```' → logprob: -13.447469711303711
    10. 'output' → logprob: -13.822469711303711

Token 461: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031158454716205597
    2. 'result' (adapté à ' result') → logprob: -3.531158447265625
    3. ' print' → logprob: -7.031158447265625
    4. ' result' → logprob: -8.031158447265625
    5. '   ' → logprob: -8.531158447265625
    6. 'output' → logprob: -15.406158447265625
    7. '    
' → logprob: -16.281158447265625
    8. '```' → logprob: -16.281158447265625
    9. '
' → logprob: -16.406158447265625
    10. 'max' → logprob: -16.906158447265625

Token 462: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. ' =
' → logprob: -16.97520637512207
    4. '=result' → logprob: -17.22520637512207
    5. ')' → logprob: -17.35020637512207
    6. ' ' → logprob: -17.47520637512207
    7. '＝' → logprob: -17.72520637512207
    8. '.' → logprob: -17.85020637512207
    9. '   ' → logprob: -18.85020637512207
    10. '=int' → logprob: -19.35020637512207

Token 463: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.07888978719711304
    2. ' processor' → logprob: -2.578889846801758
    3. '   ' → logprob: -18.453889846801758
    4. '.processor' → logprob: -18.703889846801758
    5. 'process' → logprob: -19.078889846801758
    6. 'processors' → logprob: -20.078889846801758
    7. '_processor' → logprob: -20.828889846801758
    8. 'Processor' → logprob: -21.078889846801758
    9. '(process' → logprob: -21.703889846801758
    10. 'proc' → logprob: -22.703889846801758

Token 464: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.750001907348633
    3. 'process' → logprob: -15.000001907348633
    4. ' .' → logprob: -18.375001907348633
    5. '.perform' → logprob: -19.250001907348633
    6. '.processor' → logprob: -19.625001907348633
    7. ' process' → logprob: -20.250001907348633
    8. '.run' → logprob: -20.625001907348633
    9. '(process' → logprob: -20.875001907348633
    10. '.Process' → logprob: -21.125001907348633

Token 465: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23296582698822021
    2. '
' → logprob: -1.7329658269882202
    3. 'print' → logprob: -3.4829659461975098
    4. ' print' → logprob: -8.107965469360352
    5. '    
' → logprob: -11.107965469360352
    6. '(print' → logprob: -11.732965469360352
    7. '	print' → logprob: -11.982965469360352
    8. '()
' → logprob: -12.482965469360352
    9. '
' → logprob: -12.732965469360352
    10. '```' → logprob: -12.857965469360352

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003178782993927598
    2. 'print' → logprob: -5.753178596496582
    3. '```' → logprob: -14.753178596496582
    4. '
' → logprob: -14.878178596496582
    5. ' print' → logprob: -15.003178596496582
    6. '    
' → logprob: -19.1281795501709
    7. 'import' → logprob: -19.5031795501709
    8. '	print' → logprob: -20.3781795501709
    9. '
' → logprob: -20.6281795501709
    10. '       ' → logprob: -20.8781795501709

Token 467: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.000000953674316
    3. ' print' → logprob: -15.250000953674316
    4. '
' → logprob: -20.875001907348633
    5. '```' → logprob: -21.875001907348633
    6. '	print' → logprob: -22.625001907348633
    7. '    
' → logprob: -25.125001907348633
    8. 'import' → logprob: -25.625001907348633
    9. '.print' → logprob: -25.750001907348633
    10. '#print' → logprob: -25.875001907348633

Token 468: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. 'result' → logprob: -18.0000057220459
    4. '(
' → logprob: -19.7500057220459
    5. '(results' → logprob: -19.8750057220459
    6. '(f' → logprob: -20.0000057220459
    7. '(res' → logprob: -20.3750057220459
    8. '=result' → logprob: -21.2500057220459
    9. ' (' → logprob: -21.7500057220459
    10. '(resultado' → logprob: -22.0000057220459

Token 469: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.0
    3. ' )' → logprob: -16.625
    4. '())' → logprob: -17.375
    5. '()' → logprob: -17.625
    6. '')' → logprob: -19.625
    7. '")' → logprob: -19.625
    8. ')`' → logprob: -20.375
    9. '）' → logprob: -20.5
    10. '}' → logprob: -20.625

Token 470: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5048530030981055e-06
    2. ' if' → logprob: -13.625001907348633
    3. '```' → logprob: -15.750001907348633
    4. '#' → logprob: -17.125001907348633
    5. '
' → logprob: -18.250001907348633
    6. 'If' → logprob: -18.875001907348633
    7. '#if' → logprob: -19.000001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. 'main' → logprob: -20.625001907348633
    10. '	if' → logprob: -20.750001907348633

Token 471: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11320378631353378
    2. '__' → logprob: -2.238203763961792
    3. '_name' → logprob: -8.363204002380371
    4. ' ' → logprob: -9.488204002380371
    5. 'name' → logprob: -9.863204002380371
    6. ' name' → logprob: -11.863204002380371
    7. '_' → logprob: -12.113204002380371
    8. ' ' → logprob: -12.613204002380371
    9. '___' → logprob: -13.238204002380371
    10. ' ' → logprob: -13.988204002380371

Token 472: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03504219651222229
    2. '==' → logprob: -3.6600422859191895
    3. ' ==' → logprob: -4.7850422859191895
    4. ' __' → logprob: -8.410041809082031
    5. '=="' → logprob: -9.535041809082031
    6. '__.__' → logprob: -11.285041809082031
    7. '=='' → logprob: -11.410041809082031
    8. '_' → logprob: -11.910041809082031
    9. 'name' → logprob: -12.035041809082031
    10. '__.' → logprob: -12.160041809082031

Token 473: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.849109119386412e-06
    2. '==' → logprob: -11.625009536743164
    3. '__.__' → logprob: -14.750009536743164
    4. ' ==' → logprob: -15.250009536743164
    5. '__.' → logprob: -16.625009536743164
    6. '____' → logprob: -16.875009536743164
    7. '__
' → logprob: -17.125009536743164
    8. '___' → logprob: -17.375009536743164
    9. '_' → logprob: -17.625009536743164
    10. 'name' → logprob: -18.625009536743164

Token 474: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49988457560539246
    2. '__' → logprob: -0.9998846054077148
    3. ' ==' → logprob: -3.749884605407715
    4. '=="' → logprob: -6.249884605407715
    5. '=='' → logprob: -11.124884605407715
    6. '===' → logprob: -12.249884605407715
    7. '=' → logprob: -13.374884605407715
    8. '___' → logprob: -13.999884605407715
    9. '_' → logprob: -14.124884605407715
    10. '__.__' → logprob: -14.124884605407715

Token 475: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008618946187198162
    2. ''' → logprob: -4.7586188316345215
    3. ' "__' → logprob: -12.50861930847168
    4. '__' → logprob: -14.50861930847168
    5. '   ' → logprob: -16.38361930847168
    6. '"name' → logprob: -17.38361930847168
    7. ' '__' → logprob: -17.50861930847168
    8. ''"' → logprob: -18.13361930847168
    9. '"user' → logprob: -18.25861930847168
    10. ' ' → logprob: -18.25861930847168

Token 476: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00863962434232235
    2. '__' → logprob: -4.758639812469482
    3. '_main' → logprob: -11.008639335632324
    4. 'name' → logprob: -11.883639335632324
    5. '"' → logprob: -14.133639335632324
    6. ' main' → logprob: -15.008639335632324
    7. 'm' → logprob: -15.758639335632324
    8. '__":
' → logprob: -16.38364028930664
    9. '__
' → logprob: -16.63364028930664
    10. '_MAIN' → logprob: -16.63364028930664

Token 477: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011080480180680752
    2. '__' → logprob: -4.511080265045166
    3. '__':
' → logprob: -10.386080741882324
    4. '_' → logprob: -13.261080741882324
    5. '__
' → logprob: -17.261079788208008
    6. '_"' → logprob: -17.761079788208008
    7. '__["' → logprob: -17.886079788208008
    8. '"' → logprob: -19.011079788208008
    9. '___' → logprob: -19.261079788208008
    10. '__("' → logprob: -19.261079788208008

Token 478: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04003690555691719
    2. '__' → logprob: -3.290036916732788
    3. ''' → logprob: -6.290036678314209
    4. 'main' → logprob: -9.040037155151367
    5. '   ' → logprob: -11.540037155151367
    6. ' "__' → logprob: -12.040037155151367
    7. '__":
' → logprob: -13.790037155151367
    8. '__
' → logprob: -14.290037155151367
    9. '_main' → logprob: -14.540037155151367
    10. ' main' → logprob: -14.540037155151367

Token 479: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -20.875
    4. '   ' → logprob: -23.5
    5. '
' → logprob: -24.5
    6. '.main' → logprob: -25.875
    7. 'mai' → logprob: -26.0
    8. '(main' → logprob: -26.25
    9. 'ma' → logprob: -26.75
    10. '_main' → logprob: -27.0

Token 480: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 478
Tokens correctement prédits (1ère position, stricte): 253
Tokens correctement prédits (1ère position, avec adaptation): 282
Tokens correctement prédits (top 10): 435
Précision stricte (1ère position): 52.93%
Précision adaptée (1ère position): 59.00%
Précision (top 10): 91.00%
================================================================================
